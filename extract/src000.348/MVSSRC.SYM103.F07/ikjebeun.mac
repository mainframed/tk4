         TITLE 'EDIT UNNUM SUBCOMMAND                                  *
                        '
IKJEBEUN CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEBEUN  76.183'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*   COMMREG=GPR01P;                 /* GET ADDR OF IKJEBECA          */
         LR    COMMREG,GPR01P                                      0013
*   RESPECIFY                                                      0014
*    (GPR01P) UNRSTD;                                              0014
*   RESPECIFY                                                      0015
*    (GPR13P,                                                      0015
*     GPR15P) RSTD;                                                0015
*   GPR15P=CANXTSVA;                /* SAVE AREA FOR THIS MODULE     */
         L     GPR15P,CANXTSVA(,COMMREG)                           0016
*   EVAL(GPR15P+4)->CASAVPTR=GPR13P;/* SET THIS SAVEAREA BKWD PTR    */
         LA    @14,4                                               0017
         ALR   @14,GPR15P                                          0017
         ST    GPR13P,CASAVPTR(,@14)                               0017
*   EVAL(GPR13P+8)->CASAVPTR=GPR15P;/* SET CALLER FWD PTR            */
         LA    @14,8                                               0018
         ALR   @14,GPR13P                                          0018
         ST    GPR15P,CASAVPTR(,@14)                               0018
*   GPR13P=GPR15P;                  /* NEW SAVEAREA ADDR             */
         LR    GPR13P,GPR15P                                       0019
*   CANXTSVA=GPR13P+72;             /* UPDATE NEX-SAVE-AREA PTR      */
         LA    @14,72                                              0020
         ALR   @14,GPR13P                                          0020
         ST    @14,CANXTSVA(,COMMREG)                              0020
*   RESPECIFY                                                      0021
*    (GPR13P,                                                      0021
*     GPR15P) UNRSTD;                                              0021
*   DATD=ADDR(CASCWKA);             /* SET BASE REG FOR WORK AREA    */
         LA    DATD,CASCWKA(,COMMREG)                              0022
*   GEN( USING @DATD,DATD);         /* SET ADDRESSABILITY TO CASCWKA */
          USING @DATD,DATD
*   REKODE=0;                                                      0024
         SLR   @12,@12                                             0024
         ST    @12,REKODE                                          0024
*   CONT='0'B;                                                     0025
*   UIERR='0'B;                                                    0026
         NI    CONT,B'00111111'                                    0026
*   CALL VALIDCK;                   /* CHECK IF UNNUM VALID FOR DATA
*                                      SET TYPE                      */
         BAL   @14,VALIDCK                                         0027
*   IF CONT='0'B THEN               /* IF UNNUM VALID,               */
         TM    CONT,B'10000000'                                    0028
         BNZ   @RF00028                                            0028
*     DO;                           /* THEN                          */
*       CALL READFRST;              /* ALLOC UTILITY & READ 1ST      */
         BAL   @14,READFRST                                        0030
*       IF CONT='0'B THEN           /* IF NO ERRORS,                 */
         TM    CONT,B'10000000'                                    0031
         BNZ   @RF00031                                            0031
*         DO;                       /* THEN                          */
*           CALL UNNMBR;            /* UNNUMBER THE RECORDS          */
         BAL   @14,UNNMBR                                          0033
*           CALL VRFYCK;            /* VERIFY LINE IF NEEDED         */
         BAL   @14,VRFYCK                                          0034
*         END;                                                     0035
*       IF UIERR='0'B THEN          /* IF NO ERROR IN UI,            */
@RF00031 TM    UIERR,B'01000000'                                   0036
         BNZ   @RF00036                                            0036
*         CALL FREEUTIL;            /* FREE UTILITY DATA SET         */
         BAL   @14,FREEUTIL                                        0037
*     END;                                                         0038
@RF00036 DS    0H                                                  0039
*   RETCDREG=REKODE;                /* RETURN CODE IN REG 15         */
@RF00028 L     RETCDREG,REKODE                                     0039
*   RESPECIFY                                                      0040
*    (GPR12P,                                                      0040
*     GPR13P) RSTD;                                                0040
*   CANXTSVA=GPR13P;                /* UPDATE NEXT-SAVE-AREA PTR     */
         ST    GPR13P,CANXTSVA(,COMMREG)                           0041
*   GPR12P=GPR13P;                  /* SAVE PRESENT SAVE-AREA ADDR   */
         LR    GPR12P,GPR13P                                       0042
*   GPR13P=(GPR13P+4)->CASAVPTR;    /* GET BACKWARD SAVE-AREA PTR    */
         L     @08,CASAVPTR+4(,GPR13P)                             0043
         LR    GPR13P,@08                                          0043
*   RESPECIFY                                                      0044
*     CASAVE BASED(GPR12P);         /* CHANGE BASE FOR SAVE-AREA     */
*   CASAVE=CASAVE&&CASAVE;          /* ZERO OUT THIS SAVE-AREA       */
         XC    CASAVE(72,GPR12P),CASAVE(GPR12P)                    0045
*   RESPECIFY                                                      0046
*     CASAVE BASED;                                                0046
*   RETURN CODE(RETCDREG);          /* RETURN WITH RETURN CODE       */
         L     @14,12(,@13)                                        0047
         LM    @00,@12,20(@13)                                     0047
         BR    @14                                                 0047
*   RESPECIFY                                                      0048
*    (GPR12P,                                                      0048
*     GPR13P) UNRSTD;                                              0048
*                                                                  0049
*/******                                                             */
*/* SEGMENT NAME -                                                   */
*/*      READFRST                                                    */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE ALLOCATES A NEW UTILITY DATA SET VIA IKJEBEUI, */
*/*      AND READS THE FIRST RECORD IN THE CURRENT UTILITY DATA SET. */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '0'B - CONTINUE UNNUM                                */
*/*             '1'B - DO NOT CONTINUE UNNUM OPERATION               */
*/*                                                                  */
*/******                                                             */
*                                                                  0049
*READFRST:                                                         0049
*   PROC OPTIONS(NOSAVE);                                          0049
READFRST DS    0H                                                  0050
*   RFY                                                            0050
*     RETREG RSTD;                                                 0050
*   READF14=RETREG;                 /* SAVE REGISTER 14              */
         LR    READF14,RETREG                                      0051
*   RFY                                                            0052
*     RETREG UNRSTD;                                               0052
*   GEN REFS(COMMREG);                                             0053
*                                       /* ALLOCATE NEW UTILITY       *
         IKJEBESH (COMMREG),IKJEBEUI,PARAM=((COMMREG)),MF=(E,AREAM)
*   RFY                                                            0054
*     PARMREG0 RSTD;                                               0054
*   IF RETCDREG>0 THEN              /* IF UI FAILED,                 */
         LTR   RETCDREG,RETCDREG                                   0055
         BNP   @RF00055                                            0055
*     DO;                           /* THEN                          */
*       REKODE=8;                   /* SET RETURN CODE 8             */
         MVC   REKODE(4),@CF00052                                  0057
*       UIERR='1'B;                                                0058
*       CONT='1'B;                  /* INDICATE ERROR                */
         OI    UIERR,B'11000000'                                   0059
*     END;                                                         0060
*   ELSE                            /* IF UI SUCCESSFUL,             */
*     DO;                           /* THEN                          */
         B     @RC00055                                            0061
@RF00055 DS    0H                                                  0062
*       UNDCB=PARMREG0;             /* SAVE PTR TO NEW UTILITY DCB   */
         ST    PARMREG0,UNDCB                                      0062
*       RFY                                                        0063
*         PARMREG0 UNRSTD;                                         0063
*       UTOPTION='84'X;             /* READ FIRST RECORD AND INDICATE
*                                      END OF PARMLIST               */
         MVI   UTOPTION,X'84'                                      0064
*       UTDCB=CAPTCDCB;             /* PTR TO DCB                    */
         MVC   UTDCB(3),CAPTCDCB+1(COMMREG)                        0065
*       GEN REFS(COMMREG,CAPTUT);                                  0066
*                                       /* READ FIRST RECORD          *
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),UTOPTION),       X
               MF=(E,AREAM)
*       RFY                                                        0067
*         PARMREG1 RSTD;            /* RESTRICT REG 1                */
*       IF RETCDREG>0 THEN          /* IF UT FAILED,                 */
         LTR   RETCDREG,RETCDREG                                   0068
         BNP   @RF00068                                            0068
*         DO;                       /* THEN                          */
*           IF RETCDREG=4 THEN      /* IF RETURN CODE 4              */
         C     RETCDREG,@CF00407                                   0070
         BNE   @RF00070                                            0070
*             CALL MSG501;          /* ISSUE ERROR MSG               */
         BAL   @14,MSG501                                          0071
*           ELSE                    /* IF RETURN CODE > 4            */
*             DO;                   /* THEN                          */
         B     @RC00070                                            0072
@RF00070 DS    0H                                                  0073
*               REKODE=12;          /* INDICATE I/O ERROR            */
         MVC   REKODE(4),@CF00139                                  0073
*               CONT='1'B;          /* SET ERROR INDICATOR           */
         OI    CONT,B'10000000'                                    0074
*             END;                                                 0075
*         END;                                                     0076
*       ELSE                        /* IF RETURN CODE 0              */
*         PTINAREA=PARMREG1;        /* SET PTR TO RECORD READ        */
         B     @RC00068                                            0077
@RF00068 ST    PARMREG1,PTINAREA                                   0077
*       RFY                                                        0078
*         PARMREG1 UNRSTD;          /* UNRESTRICT REG 1              */
@RC00068 DS    0H                                                  0079
*     END;                                                         0079
*   RFY                                                            0080
*     RETREG RSTD;                                                 0080
@RC00055 DS    0H                                                  0081
*   RETREG=READF14;                 /* RESTORE REGISTER 14           */
         LR    RETREG,READF14                                      0081
*   RFY                                                            0082
*     RETREG UNRSTD;                                               0082
*   END READFRST;                                                  0083
@EL00002 DS    0H                                                  0083
@EF00002 DS    0H                                                  0083
@ER00002 BR    @14                                                 0083
*                                                                  0084
*/******                                                             */
*/* SEGMENT NAME -                                                   */
*/*      UNNMBR                                                      */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE REMOVES SEQUENCE NUMBERS FROM THE RECORDS      */
*/*      IN THE UTILITY DATA SET.                                    */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '0'B - OPERATION SUCCESSFUL                          */
*/*             '1'B - ERROR OCCURRED DURING UNNUM OPERATION         */
*/*                                                                  */
*/********                                                           */
*                                                                  0084
*UNNMBR:                                                           0084
*   PROC OPTIONS(NOSAVE);                                          0084
UNNMBR   DS    0H                                                  0085
*   RFY                                                            0085
*     RETREG RSTD;                                                 0085
*   UNMBR14=RETREG;                 /* SAVE REGISTER 14              */
         LR    UNMBR14,RETREG                                      0086
*   RFY                                                            0087
*     RETREG UNRSTD;                                               0087
*   HEADER=8;                       /* SET HEADER LENGTH TO 8        */
         MVC   HEADER(2),@CH00052                                  0088
*   CANONUM='1'B;                   /* INDICATE DATA SET NOT NUMBERED
*                                      FOR UI                        */
         OI    CANONUM(COMMREG),B'00000001'                        0089
*   DO WHILE(CONT='0'B);            /* UNNUMBER THE DATA SET -       */
         B     @DE00090                                            0090
@DL00090 DS    0H                                                  0091
*     IF CARECFM='0'B THEN                                         0091
         TM    CARECFM(COMMREG),B'01000000'                        0091
         BNZ   @RF00091                                            0091
*       DO;                         /* IF VARIABLE LENGTH RECORD,  0092
*                                      SHIFT DATA            @ZA11834*/
*         CATEMPBF(1:UNVRLL-CALENGTH-4)=UNINAREA(HEADER+CALENGTH+1:
*             UNVRLL+4);                                           0093
         L     @12,PTINAREA                                        0093
         SLR   @08,@08                                             0093
         IC    @08,CALENGTH(,COMMREG)                              0093
         ICM   @04,12,UNVRLL(@12)                                  0093
         SRA   @04,16                                              0093
         SLR   @04,@08                                             0093
         LR    @15,@04                                             0093
         SL    @15,@CF00126                                        0093
         LH    @14,HEADER                                          0093
         LR    @07,@14                                             0093
         ALR   @07,@08                                             0093
         ALR   @07,@12                                             0093
         EX    @15,@SM00483                                        0093
*         UNINAREA(HEADER+1:UNVRLL-CALENGTH+4)=CATEMPBF(1:UNVRLL-  0094
*             CALENGTH-4);                                         0094
         ALR   @14,@12                                             0094
         LH    @15,HEADER                                          0094
         SLR   @04,@15                                             0094
         AL    @04,@CF00158                                        0094
         MVC   @TS00001(256),CATEMPBF(COMMREG)                     0094
         EX    @04,@SM00485                                        0094
*         UNVRLL=UNVRLL-CALENGTH;   /* DECREMENT LENGTH IN HEADER  0095
*                                                            @ZA11834*/
         LCR   @08,@08                                             0095
         ICM   @04,12,UNVRLL(@12)                                  0095
         SRA   @04,16                                              0095
         ALR   @08,@04                                             0095
         STCM  @08,3,UNVRLL(@12)                                   0095
*       END;                                                       0096
*     ELSE                          /* BLANK OUT SEQ NUMBERS         */
*       UNVRDATA(CALINE:CALINE+CALENGTH-1)='        ';/*     @ZA11834*/
         B     @RC00091                                            0097
@RF00091 SLR   @12,@12                                             0097
         IC    @12,CALINE(,COMMREG)                                0097
         L     @08,PTINAREA                                        0097
         ALR   @08,@12                                             0097
         SLR   @12,@12                                             0097
         IC    @12,CALENGTH(,COMMREG)                              0097
         BCTR  @12,0                                               0097
         EX    @12,@SM00487                                        0097
*     CALL WRITERCD;                /* WRITE LINE TO UTILITY         */
@RC00091 BAL   @14,WRITERCD                                        0098
*     IF CONT='0'B THEN             /* IF WRITE SUCCESSFUL           */
         TM    CONT,B'10000000'                                    0099
         BNZ   @RF00099                                            0099
*       CALL READNXT;               /* READ NEXT RECORD              */
         BAL   @14,READNXT                                         0100
*   END;                            /* LOOP TO UNNUMBER              */
@RF00099 DS    0H                                                  0101
@DE00090 TM    CONT,B'10000000'                                    0101
         BZ    @DL00090                                            0101
*   IF REKODE=0 THEN                /* IF UNNUM SUCCESSFUL           */
         L     @12,REKODE                                          0102
         LTR   @12,@12                                             0102
         BNZ   @RF00102                                            0102
*     CONT='0'B;                    /* TURN OFF ERROR INDICATOR      */
         NI    CONT,B'01111111'                                    0103
*   RFY                                                            0104
*     RETREG RSTD;                                                 0104
@RF00102 DS    0H                                                  0105
*   RETREG=UNMBR14;                 /* RESTORE REGISTER 14           */
         LR    RETREG,UNMBR14                                      0105
*   RFY                                                            0106
*     RETREG UNRSTD;                                               0106
*   END UNNMBR;                                                    0107
@EL00003 DS    0H                                                  0107
@EF00003 DS    0H                                                  0107
@ER00003 BR    @14                                                 0107
*                                                                  0108
*/******                                                             */
*/* SEGMENT NAME -                                                   */
*/*      WRITERCD                                                    */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE INVOKES IKJEBEUT TO WRITE AN UNNUMBERED LINE   */
*/*      TO THE NEW UTILITY DATA SET.                                */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '0'B - WRITE SUCCESSFUL                              */
*/*             '1'B - WRITE FAILED                                  */
*/*                                                                  */
*/*******                                                            */
*                                                                  0108
*WRITERCD:                                                         0108
*   PROC OPTIONS(NOSAVE);                                          0108
WRITERCD DS    0H                                                  0109
*   RFY                                                            0109
*     RETREG RSTD;                                                 0109
*   WRITE14=RETREG;                 /* SAVE REGISTER 14              */
         LR    WRITE14,RETREG                                      0110
*   RFY                                                            0111
*     RETREG UNRSTD;                                               0111
*   UTDCB=UNDCB;                    /* PTR TO NEW DCB                */
         MVC   UTDCB(3),UNDCB+1                                    0112
*   UTOPTION='21'X;                 /* WRITE OPERATION               */
         MVI   UTOPTION,X'21'                                      0113
*   UTKEY=PTINAREA;                 /* PTR TO KEY OF RECORD          */
         L     @12,PTINAREA                                        0114
         ST    @12,UTKEY                                           0114
*   GEN REFS(COMMREG,CAPTUT);                                      0115
*                                       /* WRITE THE RECORD           *
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),UTOPTION),       X
               MF=(E,AREAM)
*   IF RETCDREG>0 THEN              /* IF UT FAILED                  */
         LTR   RETCDREG,RETCDREG                                   0116
         BNP   @RF00116                                            0116
*     DO;                           /* AND                           */
*       IF RETCDREG=4 THEN          /* IF RETURN CODE 4              */
         C     RETCDREG,@CF00407                                   0118
         BNE   @RF00118                                            0118
*         DO;                       /* THEN                          */
*           REKODE=8;               /* SET RETURN CODE 8             */
         MVC   REKODE(4),@CF00052                                  0120
*           CONT='1'B;              /* INDICATE ERROR                */
         OI    CONT,B'10000000'                                    0121
*         END;                                                     0122
*       ELSE                        /* IF RETURN CODE > 4            */
*         DO;                       /* THEN                          */
         B     @RC00118                                            0123
@RF00118 DS    0H                                                  0124
*           REKODE=12;              /* INDICATE I/O ERROR            */
         MVC   REKODE(4),@CF00139                                  0124
*           CONT='1'B;              /* SET ERROR INDICATOR           */
         OI    CONT,B'10000000'                                    0125
*         END;                                                     0126
*     END;                                                         0127
@RC00118 DS    0H                                                  0128
*   RFY                                                            0128
*     RETREG RSTD;                                                 0128
@RF00116 DS    0H                                                  0129
*   RETREG=WRITE14;                 /* RESTORE REGISTER 14           */
         LR    RETREG,WRITE14                                      0129
*   RFY                                                            0130
*     RETREG UNRSTD;                                               0130
*   END WRITERCD;                                                  0131
@EL00004 DS    0H                                                  0131
@EF00004 DS    0H                                                  0131
@ER00004 BR    @14                                                 0131
*                                                                  0132
*/******                                                             */
*/* SEGMENT NAME -                                                   */
*/*      READNXT                                                     */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE INVOKES IKJEBEUT TO READ NEXT RECORD IN        */
*/*      THE UTILITY DATA SET.                                       */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '0'B - READ SUCCESSFUL                               */
*/*             '1'B - READ FAILED                                   */
*/*                                                                  */
*/*****                                                              */
*                                                                  0132
*READNXT:                                                          0132
*   PROC OPTIONS(NOSAVE);                                          0132
READNXT  DS    0H                                                  0133
*   RFY                                                            0133
*     RETREG RSTD;                                                 0133
*   READN14=RETREG;                 /* SAVE REGISTER 14              */
         LR    READN14,RETREG                                      0134
*   RFY                                                            0135
*     RETREG UNRSTD;                                               0135
*   UTDCB=CAPTCDCB;                 /* PTR TO DCB                    */
         MVC   UTDCB(3),CAPTCDCB+1(COMMREG)                        0136
*   UTOPTION='82'X;                 /* INDICATE READ NEXT AND      0137
*                                      INDICATE END OF PARMLIST      */
         MVI   UTOPTION,X'82'                                      0137
*   GEN REFS(COMMREG,CAPTUT);                                      0138
*                                       /* READ NEXT RECORD           *
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),UTOPTION),       X
               MF=(E,AREAM)
*   RFY                                                            0139
*     PARMREG1 RSTD;                /* RESTRICT REG 1                */
*   IF RETCDREG>0 THEN              /* IF READ FAILED                */
         LTR   RETCDREG,RETCDREG                                   0140
         BNP   @RF00140                                            0140
*     DO;                           /* THEN                          */
*       IF RETCDREG=4 THEN          /* IF NO MORE LINES              */
         C     RETCDREG,@CF00407                                   0142
         BNE   @RF00142                                            0142
*         CONT='1'B;                /* INDICATE TO END UNNUM         */
         OI    CONT,B'10000000'                                    0143
*       ELSE                        /* IF RETURN CODE > 4            */
*         DO;                       /* THEN                          */
         B     @RC00142                                            0144
@RF00142 DS    0H                                                  0145
*           REKODE=12;              /* INDICATE I/O ERROR            */
         MVC   REKODE(4),@CF00139                                  0145
*           CONT='1'B;              /* SET ERROR INDICATOR           */
         OI    CONT,B'10000000'                                    0146
*         END;                                                     0147
*     END;                                                         0148
*   ELSE                            /* IF RETURN CODE 0 THEN         */
*     PTINAREA=PARMREG1;            /* SET PTR TO RECORD READ        */
         B     @RC00140                                            0149
@RF00140 ST    PARMREG1,PTINAREA                                   0149
*   RFY                                                            0150
*     PARMREG1 UNRSTD;              /* UNRESTRICT REG 1              */
@RC00140 DS    0H                                                  0151
*   RFY                                                            0151
*     RETREG RSTD;                                                 0151
*   RETREG=READN14;                 /* RESTORE REGISTER 14           */
         LR    RETREG,READN14                                      0152
*   RFY                                                            0153
*     RETREG UNRSTD;                                               0153
*   END READNXT;                                                   0154
@EL00005 DS    0H                                                  0154
@EF00005 DS    0H                                                  0154
@ER00005 BR    @14                                                 0154
*                                                                  0155
*/******                                                             */
*/* SEGMENT NAME -                                                   */
*/*      VALIDCK                                                     */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE DETERMINES IF UNNUM IS A VALID FUNCTION FOR    */
*/*      THE TYPE OF DATA SET BEING EDITED.                          */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '0'B - CONTINUE WITH UNNUM OPERATION                 */
*/*             '1'B - DO NOT PERFORM UNNUM OPERATION                */
*/*                                                                  */
*/********                                                           */
*                                                                  0155
*VALIDCK:                                                          0155
*   PROC OPTIONS(NOSAVE);                                          0155
VALIDCK  DS    0H                                                  0156
*   RFY                                                            0156
*     RETREG RSTD;                                                 0156
*   VALID14=RETREG;                 /* SAVE REGISTER 14              */
         LR    VALID14,RETREG                                      0157
*   RFY                                                            0158
*     RETREG UNRSTD;                                               0158
*   IF CANONUM='1'B THEN            /* IF DATA SET IS NONUM          */
         TM    CANONUM(COMMREG),B'00000001'                        0159
         BNO   @RF00159                                            0159
*     CALL MSG502;                  /* ISSUE MESSAGE                 */
         BAL   @14,MSG502                                          0160
*   ELSE                            /* ELSE                          */
*     IF CALNNUM='1'B THEN          /* IF DS MUST BE NUMBERED        */
         B     @RC00159                                            0161
@RF00159 TM    CALNNUM(COMMREG),B'00000100'                        0161
         BNO   @RF00161                                            0161
*       DO;                         /* THEN                          */
*         CONT='1'B;                /* INDICATE ERROR                */
         OI    CONT,B'10000000'                                    0163
*         CALL MSG363;              /* ISSUE ERROR MESSAGE           */
         BAL   @14,MSG363                                          0164
*       END;                                                       0165
*     ELSE                          /* ELSE IF DATEXIT RTN FOR RENUM */
*       IF CXDATEXT^='0000000000000000'X THEN/* THEN                 */
         B     @RC00161                                            0166
@RF00161 L     @12,CAPTPDXT(,COMMREG)                              0166
         CLC   CXDATEXT(8,@12),@CB00447                            0166
         BE    @RF00166                                            0166
*         DO;                                                      0167
*           CONT='1'B;              /* DO NOT PERFORM UNNUM          */
         OI    CONT,B'10000000'                                    0168
*           CALL MSG363;            /* ISSUE ERROR MSG               */
         BAL   @14,MSG363                                          0169
*         END;                                                     0170
*   RFY                                                            0171
*     RETREG RSTD;                                                 0171
@RF00166 DS    0H                                                  0171
@RC00161 DS    0H                                                  0171
@RC00159 DS    0H                                                  0172
*   RETREG=VALID14;                 /* RESTORE REGISTER 14           */
         LR    RETREG,VALID14                                      0172
*   RFY                                                            0173
*     RETREG UNRSTD;                                               0173
*   END VALIDCK;                                                   0174
@EL00006 DS    0H                                                  0174
@EF00006 DS    0H                                                  0174
@ER00006 BR    @14                                                 0174
*                                                                  0175
*/********                                                           */
*/* SEGMENT NAME -                                                   */
*/*      MSG363                                                      */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE ISSUES MESSAGE IKJ52363I WHEN UNNUM IS INVALID */
*/*      FOR THE DATA SET TYPE.                                      */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      RETURN CODE 8                                               */
*/*                                                                  */
*/***********                                                        */
*                                                                  0175
*MSG363:                                                           0175
*   PROC OPTIONS(NOSAVE);                                          0175
MSG363   DS    0H                                                  0176
*   RFY                                                            0176
*     RETREG RSTD;                                                 0176
*   M36314=RETREG;                  /* SAVE REGISTER 14              */
         LR    M36314,RETREG                                       0177
*   RFY                                                            0178
*     RETREG UNRSTD;                                               0178
*   REKODE=8;                       /* SET RETURN CODE               */
         MVC   REKODE(4),@CF00052                                  0179
*   LEV1MSG=1796;                   /* 1ST LEVEL MSG                 */
         MVC   LEV1MSG(2),@CH00452                                 0180
*   LEV1INS=ADDR(MSGAREA);          /* PTR TO 1ST INSERT             */
         LA    @12,MSGAREA                                         0181
         ST    @12,LEV1INS                                         0181
*   MSGPTR=ADDR(MSGPTR2);           /* PTR TO 2ND INSERT             */
         LA    @12,MSGPTR2                                         0182
         ST    @12,MSGPTR                                          0182
*   MSGLEN=9;                       /* LENG OF 1ST INSERT            */
         MVC   MSGLEN(2),@CH00453                                  0183
*   MSGOFF=10;                      /* OFFSET OF 1ST INSERT          */
         MVC   MSGOFF(2),@CH00454                                  0184
*   MSGTEXT='UNNUM';                /* TEXT OF 1ST INSERT            */
         MVI   MSGTEXT+5,C' '                                      0185
         MVC   MSGTEXT+6(2),MSGTEXT+5                              0185
         MVC   MSGTEXT(5),@CC00455                                 0185
*   MSGPTR2=0;                      /* LAST INSERT INDICATOR         */
         SLR   @12,@12                                             0186
         ST    @12,MSGPTR2                                         0186
*   MSGLEN2=12;                     /* LEN OF 2ND INSERT             */
         MVC   MSGLEN2(2),@CH00139                                 0187
*   MSGOFF2=23;                     /* OFFSET OF 2ND INSERT          */
         MVC   MSGOFF2(2),@CH00456                                 0188
*   MSGTEXT2=CADSTYPE;              /* TEXT OF 2ND INSERT            */
         MVC   MSGTEXT2(8),CADSTYPE(COMMREG)                       0189
*   LEV2MSG=0;                      /* NO 2ND LEVEL MSG              */
         STH   @12,LEV2MSG                                         0190
*   LEV2INS=0;                      /* NO 2ND LEVEL INSERTS          */
         ST    @12,LEV2INS                                         0191
*   GEN REFS(CAPTMS);                                              0192
*                                      /* ISSUE ERROR MESSAGE         *
         IKJEBEML  ,,,,MF=(E,AREAM)
*   RFY                                                            0193
*     RETREG RSTD;                                                 0193
*   RETREG=M36314;                  /* RESTORE REGISTER 14           */
         LR    RETREG,M36314                                       0194
*   RFY                                                            0195
*     RETREG UNRSTD;                                               0195
*   END MSG363;                                                    0196
@EL00007 DS    0H                                                  0196
@EF00007 DS    0H                                                  0196
@ER00007 BR    @14                                                 0196
*                                                                  0197
*/*********                                                          */
*/* SEGMENT NAME -                                                   */
*/*      FREEUTIL                                                    */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE INVOKES IKJEBEEX TO FREE THE OLD UTILITY DATA  */
*/*      SET IF THE UNNUMBER WAS SUCCESSFUL, OR TO FREE THE NEW      */
*/*      UTILITY IF THERE WAS AN EROR IN THE UNNUMBER PROCESSING.    */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      UTILITY RELEASED                                            */
*/*                                                                  */
*/************                                                       */
*                                                                  0197
*FREEUTIL:                                                         0197
*   PROC OPTIONS(NOSAVE);                                          0197
FREEUTIL DS    0H                                                  0198
*   RFY                                                            0198
*     RETREG RSTD;                                                 0198
*   FREE14=RETREG;                  /* SAVE REGISTER 14              */
         LR    FREE14,RETREG                                       0199
*   RFY                                                            0200
*     RETREG UNRSTD;                                               0200
*   IF CONT='0'B THEN               /* IF UNNUM SUCCESSFUL,          */
         TM    CONT,B'10000000'                                    0201
         BNZ   @RF00201                                            0201
*     DO;                           /* THEN                          */
*       CAPTPDCB=CAPTCDCB;          /* SET PTR TO POTENTIAL DCB      */
         L     @12,CAPTCDCB(,COMMREG)                              0203
         ST    @12,CAPTPDCB(,COMMREG)                              0203
*       CAPTCDCB=UNDCB;             /* SET PTR TO CURRENT DCB        */
         L     @08,UNDCB                                           0204
         ST    @08,CAPTCDCB(,COMMREG)                              0204
*       CAIMPT='0'B;                /* TURN OFF INPUT PROMPTING      */
         NI    CAIMPT(COMMREG),B'01111111'                         0205
*       CADSMODS='1'B;              /* INDICATE DS MODIFIED          */
         OI    CADSMODS(COMMREG),B'10000000'                       0206
*       RFY                                                        0207
*         PARMREG0 RSTD;                                           0207
*       PARMREG0=CAPTPDCB;          /* FREE PREVIOUS DCB             */
         LR    PARMREG0,@12                                        0208
*     END;                                                         0209
*   ELSE                            /* IF UNNUM NOT SUCCESSFUL,      */
*     DO;                           /* THEN                          */
         B     @RC00201                                            0210
@RF00201 DS    0H                                                  0211
*       PARMREG0=UNDCB;             /* FREE NEW DCB                  */
         L     PARMREG0,UNDCB                                      0211
*       CANONUM='0'B;               /* INDICATE DATA SET NUMBERED    */
         NI    CANONUM(COMMREG),B'11111110'                        0212
*     END;                                                         0213
*   GEN REFS(COMMREG);                                             0214
@RC00201 DS    0H                                                  0214
*                                      /* RELEASE UTILITY DCB         *
         IKJEBESH (COMMREG),IKJEBEEX,PARAM=((COMMREG)),MF=(E,RESRPLST)
*   RFY                                                            0215
*     PARMREG0 UNRSTD;                                             0215
*   RFY                                                            0216
*     RETREG RSTD;                                                 0216
*   RETREG=FREE14;                  /* RESTORE REGISTER 14           */
         LR    RETREG,FREE14                                       0217
*   RFY                                                            0218
*     RETREG UNRSTD;                                               0218
*   END FREEUTIL;                                                  0219
@EL00008 DS    0H                                                  0219
@EF00008 DS    0H                                                  0219
@ER00008 BR    @14                                                 0219
*                                                                  0220
*/**********                                                         */
*/* SEGMENT NAME -                                                   */
*/*      VRFYCK                                                      */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE DETERMINES IF VERIFICATION IS IN EFFECT. IF SO,*/
*/*      CALL IKJEBEUT TO READ THE CURRENT LINE, AND INDICATE THAT   */
*/*      THERE IS A LINE TO BE VERIFIED.                             */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '0'B - VERIFICATION SUCCESSFUL                       */
*/*      CONT = '1'B - I/O ERROR                                     */
*/*                                                                  */
*/**************                                                     */
*                                                                  0220
*VRFYCK:                                                           0220
*   PROC OPTIONS(NOSAVE);                                          0220
VRFYCK   DS    0H                                                  0221
*   RFY                                                            0221
*     RETREG RSTD;                                                 0221
*   VRFY14=RETREG;                  /* SAVE REGSITER 14              */
         LR    VRFY14,RETREG                                       0222
*   RFY                                                            0223
*     RETREG UNRSTD;                                               0223
*   IF CONT='0'B&                   /* IF UNNUM SUCCESSFUL           */
*       CAVRFYSW='1'B THEN          /* AND VERIFY IN EFFECT          */
         TM    CONT,B'10000000'                                    0224
         BNZ   @RF00224                                            0224
         TM    CAVRFYSW(COMMREG),B'01000000'                       0224
         BNO   @RF00224                                            0224
*     DO;                           /* THEN READ CURRENT LINE -      */
*       UTDCB=CAPTCDCB;             /* PTR TO DCB                    */
         MVC   UTDCB(3),CAPTCDCB+1(COMMREG)                        0226
*       UTOPTION='00'X;             /* READ WITH KEY                 */
         MVI   UTOPTION,X'00'                                      0227
*       UTKEY=ADDR(CACURNUM);       /* PTR TO CURRENT LINE           */
         LA    @12,CACURNUM(,COMMREG)                              0228
         ST    @12,UTKEY                                           0228
*       UTBFR=ADDR(CATEMPBF)+12;    /* PTR TO BUFFER                 */
         LA    @12,CATEMPBF(,COMMREG)                              0229
         AL    @12,@CF00139                                        0229
         ST    @12,UTBFR                                           0229
*       GEN REFS(COMMREG,CAPTUT);                                  0230
*                                      /* READ CURRENT LINE           *
             IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),UTOPTION),   X
               MF=(E,AREAM)
*       IF RETCDREG>4 THEN          /* IF READ FAILED                */
         C     RETCDREG,@CF00407                                   0231
         BNH   @RF00231                                            0231
*         DO;                       /* THEN                          */
*           CONT='1'B;              /* INDICATE ERROR                */
         OI    CONT,B'10000000'                                    0233
*           REKODE=12;              /* INDICATE I/O ERROR            */
         MVC   REKODE(4),@CF00139                                  0234
*         END;                                                     0235
*       ELSE                        /* IF READ SUCCESSFUL            */
*         IF RETCDREG=0 THEN        /* THEN                          */
         B     @RC00231                                            0236
@RF00231 LTR   RETCDREG,RETCDREG                                   0236
         BNZ   @RF00236                                            0236
*           CALNTOVF='1'B;          /* INDICATE LINE TO VERIFY       */
         OI    CALNTOVF(COMMREG),B'10000000'                       0237
*     END;                                                         0238
@RF00236 DS    0H                                                  0238
@RC00231 DS    0H                                                  0239
*   RFY                                                            0239
*     RETREG RSTD;                                                 0239
@RF00224 DS    0H                                                  0240
*   RETREG=VRFY14;                  /* RESTORE REGISTER 14           */
         LR    RETREG,VRFY14                                       0240
*   RFY                                                            0241
*     RETREG UNRSTD;                                               0241
*   END VRFYCK;                                                    0242
@EL00009 DS    0H                                                  0242
@EF00009 DS    0H                                                  0242
@ER00009 BR    @14                                                 0242
*                                                                  0243
*/**********                                                         */
*/* SEGMENT NAME -                                                   */
*/*      MSG502                                                      */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE ISSUES MESSAGE IKJ52502I WHEN UNNUM IS SPECIFIED
*                                                                    */
*/*      FOR A NON-NUMBERED DATA SET.                                */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATION AREA                                     */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '1'B                                                 */
*/*                                                                  */
*/************                                                       */
*                                                                  0243
*MSG502:                                                           0243
*   PROC OPTIONS(NOSAVE);                                          0243
MSG502   DS    0H                                                  0244
*   RFY                                                            0244
*     RETREG RSTD;                                                 0244
*   M50214=RETREG;                  /* SAVE REGISTER 14              */
         LR    M50214,RETREG                                       0245
*   RFY                                                            0246
*     RETREG UNRSTD;                                               0246
*   CONT='1'B;                      /* DO NOT PERFORM UNNUM          */
         OI    CONT,B'10000000'                                    0247
*   LEV1MSG=1288;                   /* 1ST LEVEL MSG                 */
         MVC   LEV1MSG(2),@CH00466                                 0248
*   LEV1INS=0;                      /* NO 1ST LEVEL INSERTS          */
         SLR   @12,@12                                             0249
         ST    @12,LEV1INS                                         0249
*   LEV2MSG=0;                      /* NO 2ND LEVEL MSG              */
         STH   @12,LEV2MSG                                         0250
*   LEV2INS=0;                      /* NO 2ND LEVEL INSERTS          */
         ST    @12,LEV2INS                                         0251
*   GEN REFS(CAPTMS);                                              0252
*                                      /* ISSUE MESSAGE               *
         IKJEBEML  ,,,,MF=(E,AREAM)
*   RFY                                                            0253
*     RETREG RSTD;                                                 0253
*   RETREG=M50214;                  /* RESTORE REGISTER 14           */
         LR    RETREG,M50214                                       0254
*   RFY                                                            0255
*     RETREG UNRSTD;                                               0255
*   END MSG502;                                                    0256
@EL00010 DS    0H                                                  0256
@EF00010 DS    0H                                                  0256
@ER00010 BR    @14                                                 0256
*                                                                  0257
*/******                                                             */
*/* SEGMENT NAME -                                                   */
*/*      MSG501                                                      */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*      THIS ROUTINE ISSUES MESSAGE IKJ52501I WHEN UNNUM IS         */
*/*      SPECIFIED FOR AN EMPTY DATA SET.                            */
*/*                                                                  */
*/* INPUT -                                                          */
*/*      EDIT COMMUNICATIONS AREA                                    */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*      CONT = '1'B                                                 */
*/*                                                                  */
*/************                                                       */
*                                                                  0257
*MSG501:                                                           0257
*   PROC OPTIONS(NOSAVE);                                          0257
MSG501   DS    0H                                                  0258
*   RFY                                                            0258
*     RETREG RSTD;                                                 0258
*   M50114=RETREG;                  /* SAVE REGISTER 14              */
         LR    M50114,RETREG                                       0259
*   RFY                                                            0260
*     RETREG UNRSTD;                                               0260
*   CONT='1'B;                      /* DO NOT PERFORM UNNUM          */
         OI    CONT,B'10000000'                                    0261
*   LEV1MSG=1287;                   /* 1ST LEVEL MESSAGE             */
         MVC   LEV1MSG(2),@CH00470                                 0262
*   LEV1INS=0;                      /* NO 1ST LEVEL INSERTS          */
         SLR   @12,@12                                             0263
         ST    @12,LEV1INS                                         0263
*   LEV2MSG=0;                      /* NO 2ND LEVEL MESSAGE          */
         STH   @12,LEV2MSG                                         0264
*   LEV2INS=0;                      /* NO 2ND LEVEL INSERTS          */
         ST    @12,LEV2INS                                         0265
*   GEN REFS(CAPTMS);                                              0266
*                                      /* ISSUE MESSAGE               *
         IKJEBEML  ,,,,MF=(E,AREAM)
*   RFY                                                            0267
*     RETREG RSTD;                                                 0267
*   RETREG=M50114;                  /* RESTORE REGISTER 14           */
         LR    RETREG,M50114                                       0268
*   RFY                                                            0269
*     RETREG UNRSTD;                                               0269
*   END MSG501;                                                    0270
@EL00011 DS    0H                                                  0270
@EF00011 DS    0H                                                  0270
@ER00011 BR    @14                                                 0270
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01P PTR(31) REG(1),                                       0271
*     GPR12P PTR(31) REG(12),                                      0271
*     GPR13P PTR(31) REG(13),                                      0271
*     GPR15P PTR(31) REG(15);                                      0271
*                                                                  0271
*   /*****************************************************************/
*   /*                                                               */
*   /* VARIABLES REQUIRED BY PL/S SYSTEM MACROS                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   DECLARE                                                        0272
*     CASAVPTR PTR(31) BASED;       /* SAVE AREA PTR FOR IKJEBESV    */
*   DECLARE                                                        0273
*     COMMREG REG(9) PTR(31) RSTD;  /* POINTER TO EDIT COMMO AREA    */
*   DECLARE                                                        0274
*     DATD REG(10) PTR(31) RSTD;    /* BASEREG FOR EDIT SUBCOMMAND 0274
*                                      WORK AREA                     */
*   DECLARE                                                        0275
*     CASAVE CHAR(72) BASED;        /* SAVE AREA EDIT MODULE         */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0276
*     I031F FIXED(31) BASED,                                       0276
*     I031P PTR(31) BASED,                                         0276
*     I015F FIXED(15) BASED,                                       0276
*     I015P PTR(15) BASED,                                         0276
*     I008P PTR(8) BASED,                                          0276
*     I001C CHAR(1) BASED;                                         0276
*   END IKJEBEUN                                                   0277
*                                                                  0277
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJEBECA)                                       */
*/*%INCLUDE SYSLIB  (IKJEBEMJ)                                       */
*                                                                  0277
*       ;                                                          0277
@DATA    DS    0H
@CH00453 DC    H'9'
@CH00454 DC    H'10'
@CH00456 DC    H'23'
@CH00470 DC    H'1287'
@CH00466 DC    H'1288'
@CH00452 DC    H'1796'
@SM00483 MVC   CATEMPBF(0,COMMREG),UNINAREA(@07)
@SM00485 MVC   UNINAREA(0,@14),@TS00001
@SM00487 MVC   UNVRDATA-1(0,@08),@CC00432
@DATD    DSECT
         DS    0F
IKJEBEUN CSECT
         DS    0F
@CF00158 DC    F'3'
@CF00407 DC    F'4'
@CF00126 DC    F'5'
@CF00052 DC    F'8'
@CH00052 EQU   @CF00052+2
@CF00139 DC    F'12'
@CH00139 EQU   @CF00139+2
@DATD    DSECT
         DS    0D
@TS00001 DS    CL256
UNWKAREA DS    CL104
         ORG   UNWKAREA
REKODE   DS    FL4
UTPLST   DS    CL12
         ORG   UTPLST
UTOPTION DS    BL1
UTDCB    DS    AL3
UTKEY    DS    AL4
UTBFR    DS    AL4
         ORG   UNWKAREA+16
UNDCB    DS    AL4
PTINAREA DS    AL4
HEADER   DS    FL2
MOVEVAL1 DS    FL2
MOVEVAL2 DS    FL2
@NM00023 DS    CL1
         ORG   @NM00023
CONT     DS    BL1
UIERR    EQU   @NM00023+0
@NM00024 EQU   @NM00023+0
         ORG   UNWKAREA+31
@NM00025 DS    CL1
AREAM    DS    CL40
         ORG   AREAM
LEV1MSG  DS    FL2
LEV2MSG  DS    FL2
LEV1INS  DS    AL4
LEV2INS  DS    AL4
         ORG   UNWKAREA+72
MSGAREA  DS    CL32
         ORG   MSGAREA
MSGPTR   DS    AL4
MSGLEN   DS    FL2
MSGOFF   DS    FL2
MSGTEXT  DS    CL8
MSGPTR2  DS    AL4
MSGLEN2  DS    FL2
MSGOFF2  DS    FL2
MSGTEXT2 DS    CL8
         ORG   UNWKAREA+104
PATCHUN  DS    25F
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEBEUN CSECT
         NOPR  ((@ENDDATD-@DATD)/673*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00432 DC    C'        '
@CC00455 DC    C'UNNUM'
@CB00447 DC    X'0000000000000000'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
M50114   EQU   @02
M50214   EQU   @02
VRFY14   EQU   @02
FREE14   EQU   @02
M36314   EQU   @02
VALID14  EQU   @03
READN14  EQU   @06
WRITE14  EQU   @02
UNMBR14  EQU   @05
READF14  EQU   @05
PARMREG0 EQU   @00
PARMREG1 EQU   @01
RETREG   EQU   @14
RETCDREG EQU   @15
COMMREG  EQU   @09
GPR01P   EQU   @01
GPR13P   EQU   @13
GPR15P   EQU   @15
DATD     EQU   @10
GPR12P   EQU   @12
IKJEBECA EQU   0
CAPTMS   EQU   IKJEBECA+20
CAPTUT   EQU   IKJEBECA+24
CAPTPRSD EQU   IKJEBECA+36
CAPRSPDL EQU   CAPTPRSD
CAPTIBFR EQU   IKJEBECA+40
CAPTCDCB EQU   IKJEBECA+52
CAPTPDCB EQU   IKJEBECA+56
CAATTN   EQU   IKJEBECA+120
CACFLAG  EQU   IKJEBECA+124
CACFLAG1 EQU   CACFLAG
CALNTOVF EQU   CACFLAG1
CAVRFYSW EQU   CACFLAG1
CANONUM  EQU   CACFLAG1
CACFLAG2 EQU   CACFLAG+1
CADSMODS EQU   CACFLAG2
CARECFM  EQU   CACFLAG2
CACFLAG3 EQU   CACFLAG+2
CAIMFLG  EQU   CACFLAG3
CAIMPT   EQU   CAIMFLG
CACFLAG4 EQU   CACFLAG+3
CACFLAG5 EQU   CACFLAG+4
CACFLAG6 EQU   CACFLAG+5
CAPD     EQU   IKJEBECA+152
CADSTYPE EQU   CAPD
CALINE   EQU   CAPD+18
CALENGTH EQU   CAPD+19
CADSATTR EQU   CAPD+41
CALNNUM  EQU   CADSATTR
CADSATR2 EQU   CAPD+42
CAPTPDXT EQU   IKJEBECA+228
CAEDFLAG EQU   IKJEBECA+236
CAEDFLG2 EQU   IKJEBECA+237
CASAFLAG EQU   IKJEBECA+376
CASAFLG2 EQU   IKJEBECA+377
CACURNUM EQU   IKJEBECA+456
CASYNLST EQU   IKJEBECA+496
CASYNWA  EQU   IKJEBECA+508
CASYNOPT EQU   IKJEBECA+524
CASYNSW  EQU   CASYNOPT+3
CATMPLST EQU   IKJEBECA+528
CAMAWKA  EQU   IKJEBECA+596
MACFLAGS EQU   CAMAWKA+28
MACFLAG2 EQU   CAMAWKA+29
CAMODEMG EQU   IKJEBECA+928
CASCWKA  EQU   IKJEBECA+1448
CATEMPBF EQU   IKJEBECA+2648
CANXTSVA EQU   IKJEBECA+3896
IKJEBECX EQU   0
CXDATEXT EQU   IKJEBECX
UNINAREA EQU   0
UNVRLL   EQU   UNINAREA+4
UNVRDATA EQU   UNINAREA+8
CASAVPTR EQU   0
CASAVE   EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UNVR00   EQU   UNINAREA+6
UNINKEY  EQU   UNINAREA
CAPDEXT  EQU   IKJEBECA+3984
CADSNRC2 EQU   IKJEBECA+3928
CADSNOF2 EQU   IKJEBECA+3926
CADSNLN2 EQU   IKJEBECA+3924
CADSNPT2 EQU   IKJEBECA+3920
@NM00022 EQU   IKJEBECA+3900
CASVAREA EQU   IKJEBECA+3176
CABFRPL  EQU   IKJEBECA+2120
CAFIBFR  EQU   IKJEBECA+1188
CAAEDCB  EQU   IKJEBECA+1096
CALDROP  EQU   IKJEBECA+1064
CAATNWKA EQU   IKJEBECA+956
CAATNBUF EQU   IKJEBECA+952
CAMODETX EQU   CAMODEMG+12
CAMODEOF EQU   CAMODEMG+10
CAMODELN EQU   CAMODEMG+8
CAMODEPT EQU   CAMODEMG+4
CAMODEIS EQU   CAMODEMG
CASRWKA  EQU   IKJEBECA+728
CAMSWKA  EQU   IKJEBECA+628
@NM00021 EQU   CAMAWKA+30
@NM00020 EQU   MACFLAG2
MATABLE1 EQU   MACFLAG2
@NM00019 EQU   MACFLAGS
MAENDPRC EQU   MACFLAGS
MAABBREV EQU   MACFLAGS
MAECTMOD EQU   MACFLAGS
@NM00018 EQU   CAMAWKA
CASTAEPL EQU   IKJEBECA+576
CASTAXPL EQU   IKJEBECA+556
CASRPLST EQU   CATMPLST+12
CAPTECB  EQU   CATMPLST+8
CAPTECT  EQU   CATMPLST+4
CAPTUPT  EQU   CATMPLST
CASYNSCN EQU   CASYNSW
CASYNML  EQU   CASYNSW
CASYNSF  EQU   CASYNSW
CASYNRFM EQU   CASYNSW
CASYNIS  EQU   CASYNSW
@NM00017 EQU   CASYNSW
CASYNLN  EQU   CASYNSW
@NM00016 EQU   CASYNSW
CASYNRCL EQU   CASYNOPT+2
CASYNCD2 EQU   CASYNOPT+1
CASYNCD1 EQU   CASYNOPT
CASYNTEM EQU   CASYNWA+12
CASYNMS2 EQU   CASYNWA+8
CASYNMS1 EQU   CASYNWA+4
CASYNWAP EQU   CASYNWA+1
CASYNECD EQU   CASYNWA
CASYNPTO EQU   CASYNLST+8
CASYNPWA EQU   CASYNLST+4
CASYNBFR EQU   CASYNLST
@NM00015 EQU   IKJEBECA+484
CARECNO  EQU   IKJEBECA+480
CAINSAVE EQU   IKJEBECA+476
@NM00014 EQU   IKJEBECA+472
CAIMLINC EQU   IKJEBECA+468
CAIMLLNO EQU   IKJEBECA+464
CAINCRE  EQU   IKJEBECA+460
CANXTREC EQU   IKJEBECA+452
CASTNUM  EQU   IKJEBECA+448
CASAPSWD EQU   IKJEBECA+440
CASADDN  EQU   IKJEBECA+432
CASAMEMB EQU   IKJEBECA+424
CASADSN  EQU   IKJEBECA+380
CASADSNL EQU   IKJEBECA+378
CASADQTY EQU   CASAFLG2
CASANCTG EQU   CASAFLG2
CASAALOC EQU   CASAFLAG
CASAUNCG EQU   CASAFLAG
CASADSOR EQU   CASAFLAG
CASAMEM  EQU   CASAFLAG
CASADISP EQU   CASAFLAG
CASAINCP EQU   CASAFLAG
CASAFNCP EQU   CASAFLAG
CASAVEDS EQU   CASAFLAG
CADSNREC EQU   IKJEBECA+320
CADSNOFF EQU   IKJEBECA+318
CADSNLEN EQU   IKJEBECA+316
CADSNPTR EQU   IKJEBECA+312
CAEDTSIZ EQU   IKJEBECA+308
CAEDPSWD EQU   IKJEBECA+300
CAEDDDN  EQU   IKJEBECA+292
CAEDMEMB EQU   IKJEBECA+284
CAEDDSN  EQU   IKJEBECA+240
CAEDDSNL EQU   IKJEBECA+238
CAEDPRTC EQU   CAEDFLG2
CAEDALOC EQU   CAEDFLAG
CAEDUNCG EQU   CAEDFLAG
CAEDDSOR EQU   CAEDFLAG
CAEDMEM  EQU   CAEDFLAG
CAEDDISP EQU   CAEDFLAG
CAEDINCP EQU   CAEDFLAG
CAEDFNCP EQU   CAEDFLAG
CAEDITDS EQU   CAEDFLAG
CABLK2   EQU   IKJEBECA+234
CALRECL  EQU   IKJEBECA+232
@NM00013 EQU   IKJEBECA+226
CAPDEND  EQU   CAPD+82
CADATEXT EQU   CAPD+74
CAEXTNAM EQU   CAPD+66
CAPRNAME EQU   CAPD+58
CACHKOPT EQU   CAPD+56
CAULRLMX EQU   CAPD+54
CAULRLDF EQU   CAPD+52
CAVLRLMX EQU   CAPD+50
CAVLRLDF EQU   CAPD+48
CAFLRLMX EQU   CAPD+46
CAFLRLDF EQU   CAPD+44
CARECFMD EQU   CAPD+43
@NM00012 EQU   CADSATR2
CAINLIST EQU   CADSATR2
CARUNDS  EQU   CADSATR2
CAOBJGEN EQU   CADSATR2
CADSNDEF EQU   CADSATR2
CALINTAB EQU   CADSATR2
@NM00011 EQU   CADSATTR
CALRECLX EQU   CADSATTR
CADSCONT EQU   CADSATTR
CACAPSDF EQU   CADSATTR
CACAPSRQ EQU   CADSATTR
CASCAN   EQU   CADSATTR
CARUN    EQU   CADSATTR
CADSCODE EQU   CAPD+40
CASYNAME EQU   CAPD+32
CATABS   EQU   CAPD+20
CABLKS   EQU   CAPD+16
CADSQUAL EQU   CAPD+8
@NM00010 EQU   CACFLAG+8
CAPLIRTM EQU   CACFLAG+7
CAPLILFM EQU   CACFLAG+6
@NM00009 EQU   CACFLAG6
CACHAR60 EQU   CACFLAG6
CACHAR48 EQU   CACFLAG6
CAFREE   EQU   CACFLAG6
@NM00008 EQU   CACFLAG5
CAEDLNDP EQU   CACFLAG5
CADSUSED EQU   CACFLAG4
CARECURS EQU   CACFLAG4
CAINPROC EQU   CACFLAG4
CASCRC20 EQU   CACFLAG4
CAABEND  EQU   CACFLAG4
CATPUTVF EQU   CACFLAG4
CAPTGTBF EQU   CACFLAG4
CAFINDIS EQU   CACFLAG4
@NM00007 EQU   CAIMFLG
CAIMINPT EQU   CAIMFLG
CAIMSFPT EQU   CAIMFLG
CAIMCIN  EQU   CAIMFLG
CAIMIR   EQU   CAIMFLG
CAIMSC   EQU   CAIMFLG
CAIMINS  EQU   CAIMFLG
@NM00006 EQU   CACFLAG2
CAX37ABN EQU   CACFLAG2
CASEQCOL EQU   CACFLAG2
CAMODMSG EQU   CACFLAG2
CASCANON EQU   CACFLAG2
CACAPS   EQU   CACFLAG1
CAENDSC  EQU   CACFLAG1
CAINITSC EQU   CACFLAG1
CASCANSW EQU   CACFLAG1
CAPROMPT EQU   CACFLAG1
CAATTNIS EQU   CAATTN
@NM00005 EQU   CAATTN
@NM00004 EQU   IKJEBECA+118
CAMAXBLK EQU   IKJEBECA+116
CAESDSPL EQU   IKJEBECA+112
@NM00003 EQU   IKJEBECA+88
CAPTICLN EQU   IKJEBECA+84
CAPTICDS EQU   IKJEBECA+80
CAPTNBFR EQU   IKJEBECA+76
CAPTCHK  EQU   IKJEBECA+72
CACORELN EQU   IKJEBECA+68
CAPTCORE EQU   IKJEBECA+64
CAUTILNO EQU   IKJEBECA+60
@NM00002 EQU   IKJEBECA+50
CASCMDLN EQU   IKJEBECA+48
CAPTSCMD EQU   IKJEBECA+44
CAOPERND EQU   CAPTIBFR
CAFREEDL EQU   CAPRSPDL
CAPTRTRY EQU   IKJEBECA+32
CAPTMSGM EQU   IKJEBECA+28
CAPTLE   EQU   IKJEBECA+16
CAPTAT   EQU   IKJEBECA+12
CAPTAE   EQU   IKJEBECA+8
@NM00001 EQU   IKJEBECA+4
CAPTTMP  EQU   IKJEBECA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00070 EQU   @RC00068
@RC00142 EQU   @RC00140
@ENDDATA EQU   *
         END   IKJEBEUN,(C'PLS1446',0701,76183)
