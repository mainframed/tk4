         TITLE 'IFCFILT3-RECORD FILTER FOR TREND REPORT'
IFCFILT3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IFCFILT3  79.011'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         LA    @09,4095(,@10)                                      0001
         LA    @08,4095(,@09)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         USING @PSTART+12285,@09                                   0001
         USING @PSTART+16380,@08                                   0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*IF DEBUG4 = ON THEN                                               0194
         TM    DEBUG4(R2),B'00001000'                              0194
         BNO   @RF00194                                            0194
* DO;                                                      /*@Z427VLS*/
*  R15 = R12 - 27;                                         /*@Z427VLS*/
         LR    R15,R12                                             0196
         SL    R15,@CF01130                                        0196
*  GEN(MVC PRINTBDY(16),0(R15));                           /*@Z427VLS*/
         MVC PRINTBDY(16),0(R15)
*  PRINTADR = ADDR(PRINTLIN);                              /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0198
         ST    @14,PRINTADR(,R2)                                   0198
*  CALL IOHND(RITEPRTR);                                   /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0199
         LA    @01,@AL00199                                        0199
         BALR  @14,@15                                             0199
*  R15 = ZERO;                                             /*@Z427VLS*/
         SLR   R15,R15                                             0200
* END;                                                     /*@Z427VLS*/
*/*PROCESS ERROR RECORDS SEQUENTIALLY                        @Z427VLS*/
*CALL INITIATE; /*ALLOCATE INITIAL TABLES                    @Z427VLS*/
@RF00194 BAL   @14,INITIATE                                        0202
*R15 = ERROR; /*GET ERROR CONDITIONS FROM INITIATE           @Z427VLS*/
         L     R15,ERROR                                           0203
*DO WHILE R15 = SUCCESS & ENTRIES < MAXENT;                /*@0099VLS*/
         B     @DE00204                                            0204
@DL00204 DS    0H                                                  0205
*  CALL IOHND(READSEQ); /*GET A RECORD FROM ACCDEV OR SERLOG @Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0205
         LA    @01,@AL00205                                        0205
         BALR  @14,@15                                             0205
*  IF R15 = SUCCESS THEN /*CONTINUE IF NOT EOF OR UNREADABLE @Z427VLS*/
         LTR   R15,R15                                             0206
         BNZ   @RF00206                                            0206
*    DO;                                                   /*@Z427VLS*/
*      BUG(1) = BUG(1) + 1; /*NUMBER OF RECORDS RETRIEVED    @Z427VLS*/
         LA    @14,1                                               0208
         AL    @14,BUG                                             0208
         ST    @14,BUG                                             0208
*IF ((LRTKEY1 & GENREC) = HEXA0)×   /* IF MCH OR CCH FRAME RECORD */
*   ((LRTKEY1 & GENREC) = HEXB0) THEN                              0209
         MVC   @TS00001(1),LRTKEY1(R7)                             0209
         NI    @TS00001,X'F0'                                      0209
         CLI   @TS00001,X'A0'                                      0209
         BE    @RT00209                                            0209
         MVC   @TS00001(1),LRTKEY1(R7)                             0209
         NI    @TS00001,X'F0'                                      0209
         CLI   @TS00001,X'B0'                                      0209
         BNE   @RF00209                                            0209
@RT00209 DS    0H                                                  0210
* DO;                                                      /*@G51DGBB*/
*  CALL FLIMFRAM; /*PROCESS FRAME RECORDS SEQUENTIALLY       @G51DGBB*/
         BAL   @14,FLIMFRAM                                        0211
*  R15 = ERROR; /*PASS ERROR CONDITIONS FROM FRAME PROCESSING*/    0212
         L     R15,ERROR                                           0212
* END;                                                     /*@G51DGBB*/
*ELSE  /*NORMAL ERROR RECORD PROCESSING                      @G51DGBB*/
*  DO;                                                     /*@G51DGBB*/
         B     @RC00209                                            0214
@RF00209 DS    0H                                                  0215
*      CALL ALLREC; /*PERFORM TIME, DATE FILTERING           @Z427VLS*/
         BAL   @14,ALLREC                                          0215
*      IF PASSFLAG = YES THEN                                      0216
         TM    PASSFLAG(R2),B'00000001'                            0216
         BNO   @RF00216                                            0216
*        DO;                                               /*@Z427VLS*/
*          BUG(2) = BUG(2) + 1; /*NUM REC PASS DATE,TIME FILTERING*/
         LA    @14,1                                               0218
         AL    @14,BUG+4                                           0218
         ST    @14,BUG+4                                           0218
*          CALL RECDEP; /*FILTER BY DEVICE, STORE IN TABLE IF PASS*/
         BAL   @14,RECDEP                                          0219
*          IF PASSFLAG = ON THEN                                   0220
         TM    PASSFLAG(R2),B'00000001'                            0220
         BNO   @RF00220                                            0220
*            DO;                                           /*@Z427VLS*/
*              BUG(3) = BUG(3) + ONE; /*NUMBER OF RECORDS PASS FILT*/
         LA    @14,1                                               0222
         AL    @14,BUG+8                                           0222
         ST    @14,BUG+8                                           0222
*             IF LRTYRDAY > EVSTOP THEN /*LATEST DAY IN DATA @Z427VLS*/
         L     @14,EVPTR(,R2)                                      0223
         CLC   LRTYRDAY(3,R7),EVSTOP(@14)                          0223
         BNH   @RF00223                                            0223
*               EVSTOP = LRTYRDAY; /*SAVE FOR LATER COMPARES @Z427VLS*/
         MVC   EVSTOP(3,@14),LRTYRDAY(R7)                          0224
*             IF LRTYRDAY < STRTDATE THEN /*IF EARLIEST DAY IN DATA*/
@RF00223 CLC   LRTYRDAY(3,R7),STRTDATE(R2)                         0225
         BNL   @RF00225                                            0225
*               STRTDATE = LRTYRDAY; /*SAVE FOR LATER COMPARES*/   0226
         MVC   STRTDATE(3,R2),LRTYRDAY(R7)                         0226
*              IF PACC = YES THEN /*HISTORY D.S. TO BE CREATED*/   0227
@RF00225 TM    PACC(R2),B'01000000'                                0227
         BNO   @RF00227                                            0227
*                CALL IOHND(RITEHIST); /*WRITE TO ACCDEV     @Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0228
         LA    @01,@AL00228                                        0228
         BALR  @14,@15                                             0228
*              IF R15 = SUCCESS & TRENDGRP  ^= ZERO & /*IF SUCCESS */
*                       CPU0FLG = OFF THEN /*NO ERRORS FOUND, CPU OK */
@RF00227 LTR   R15,R15                                             0229
         BNZ   @RF00229                                            0229
         CLI   TRENDGRP,0                                          0229
         BE    @RF00229                                            0229
         TM    CPU0FLG,B'00001000'                                 0229
         BNZ   @RF00229                                            0229
*               DO;                                        /*@Z427VLS*/
*                CALL ADDVALUE;   /*BUILD THE SORT TABLE ENTRY*/   0231
         BAL   @14,ADDVALUE                                        0231
*                TREND2  = (TREND2  && TREND2 ); /*CLEAR TREND2*/  0232
         XC    TREND2(14),TREND2                                   0232
*               END;                                       /*@Z427VLS*/
*              ELSE                                                0234
*               IF R15 ^= SUCCESS THEN                             0234
         B     @RC00229                                            0234
@RF00229 LTR   R15,R15                                             0234
         BZ    @RF00234                                            0234
*                 ZEROALL = NO; /*DONT CLEAR LOGREC IF DONT PROCESS*/
         NI    ZEROALL(R2),B'10111111'                             0235
*                               /*ALL RECORDS                @Z427VLS*/
*            END;                                          /*@Z427VLS*/
@RF00234 DS    0H                                                  0236
@RC00229 DS    0H                                                  0237
*         END;                                             /*@Z427VLS*/
@RF00220 DS    0H                                                  0238
*   END;                                                   /*@G51DGBB*/
@RF00216 DS    0H                                                  0239
*      END;                                                /*@Z427VLS*/
@RC00209 DS    0H                                                  0240
*    END;                                                  /*@Z427VLS*/
@RF00206 DS    0H                                                  0240
@DE00204 LTR   R15,R15                                             0240
         BNZ   @DC00204                                            0240
         L     @14,ENTRIES                                         0240
         C     @14,MAXENT                                          0240
         BL    @DL00204                                            0240
@DC00204 DS    0H                                                  0241
* ERROR = R15; /*TELL ENDOFILE IF ERRORS                     @Z427VLS*/
         ST    R15,ERROR                                           0241
*PASSNUM = ENTRIES - 1;                                    /*@0099VLS*/
         L     @14,ENTRIES                                         0242
         BCTR  @14,0                                               0242
         ST    @14,PASSNUM                                         0242
* CALL ENDOFILE; /*SORT EVTABLE,TRENDONE, AND TREND2. HANDLE ERROR*/
         BAL   @14,ENDOFILE                                        0243
*                /*CONDITIONS, FREE EXCESS TREND2 CORE.      @Z427VLS*/
* R15 = ERROR; /*RETURN CODE MAY HAVE BEEN MODIFIED BY ENDOFILE*/  0244
         L     R15,ERROR                                           0244
* IF DEBUG16 = ON THEN                                             0245
         TM    DEBUG16(R2),B'10000000'                             0245
         BNO   @RF00245                                            0245
*   CALL BUGCNTS; /*PRINT COUNT OF DIFFERENT RECORD TYPES    @Z427VLS*/
         BAL   @14,BUGCNTS                                         0246
* IF DEBUG11 = ON THEN                                             0247
@RF00245 TM    DEBUG11(R2),B'00010000'                             0247
         BNO   @RF00247                                            0247
*   GEN(ABEND 320,DUMP); /*SHOW STATUS IF TESTING SITUATION  @Z427VLS*/
         ABEND 320,DUMP
*RESPECIFY(R15) UNRESTRICTED;                              /*@Z427VLS*/
*/*******************************************************************/
*/*    THIS PROC WILL SEARCH THE SORT TABLE FOR A ENTRY WITH THE SAME*/
*/*    KEY AS THIS ONE THEN SUM THE PERM AND TEMP ERRORS WITH THIS REC*
*/*    IF NO MATCH CAN BE FOUND THEN CREATE A NEW ONE        @0099VLS*/
*/*                                                          @0099VLS*/
*ADDVALUE: PROC;                                           /*@0099VLS*/
@EL00001 L     @13,4(,@13)                                         0250
@EF00001 DS    0H                                                  0250
@ER00001 L     @14,12(,@13)                                        0250
         LM    @00,@12,20(@13)                                     0250
         BR    @14                                                 0250
ADDVALUE STM   @14,@12,@SA00002                                    0250
* DCL ZZ PTR(31)  INIT(0);                                 /*@0099VLS*/
* DCL Z1 FIXED(31)  INIT(0);                               /*@0099VLS*/
* DCL Z2 FIXED(31)  INIT(0);                               /*@0099VLS*/
* DCL Z3 FIXED(31)  INIT(0);                               /*@0099VLS*/
*DCL ZZ3 FIXED(31) INIT(0);                                /*@G51DGBB*/
* DCL  1  TMTA  BASED(ZZ),                                         0256
*       2 TMTKEYA  CHAR(8),                                        0256
*       2 TMTPERMA FIXED(15) BDY(BYTE),                            0256
*       2 TMTTEMPA FIXED(31) BDY(BYTE);                    /*@0099VLS*/
* ZZ3 = ZZ3 + 1;  /*NUMBER OF ENTRIES IN PART 2              @0099VLS*/
         LA    @06,1                                               0257
         AL    @06,ZZ3                                             0257
         ST    @06,ZZ3                                             0257
* FOUND = NO;        /*SET FLAG TO ASSUME THE WORST          @0099VLS*/
         NI    FOUND,B'01111111'                                   0258
* DO ZZ = SORTADR + (ENTRIES - 1) * 14 BY -14 TO SORTADR WHILE(    0259
*                                   FOUND = NO);           /*@0099VLS*/
         L     @06,ENTRIES                                         0259
         BCTR  @06,0                                               0259
         MH    @06,@CH00952                                        0259
         AL    @06,SORTADR(,R2)                                    0259
         ST    @06,ZZ                                              0259
         B     @DE00259                                            0259
@DL00259 TM    FOUND,B'10000000'                                   0259
         BNZ   @DC00259                                            0259
*  IF TMTKEYA = TRENDKEY THEN                                      0260
         CLC   TMTKEYA(8,@06),TRENDKEY                             0260
         BNE   @RF00260                                            0260
*   DO;                                                    /*@0099VLS*/
*    TMTPERMA = TMTPERMA + TRENDPR1;                       /*@0099VLS*/
         ICM   @03,12,TMTPERMA(@06)                                0262
         SRA   @03,16                                              0262
         ICM   @15,12,TRENDPR1                                     0262
         SRA   @15,16                                              0262
         ALR   @03,@15                                             0262
         STCM  @03,3,TMTPERMA(@06)                                 0262
*    TMTTEMPA = TMTTEMPA + TRENDTMP;                       /*@0099VLS*/
         ICM   @03,15,TMTTEMPA(@06)                                0263
         ICM   @15,15,TRENDTMP                                     0263
         ALR   @03,@15                                             0263
         STCM  @03,15,TMTTEMPA(@06)                                0263
*    FOUND = YES;                                          /*@0099VLS*/
         OI    FOUND,B'10000000'                                   0264
*   END;                                                   /*@0099VLS*/
* END;                                                     /*@0099VLS*/
@RF00260 L     @06,@CF01375                                        0266
         AL    @06,ZZ                                              0266
         ST    @06,ZZ                                              0266
@DE00259 C     @06,SORTADR(,R2)                                    0266
         BNL   @DL00259                                            0266
@DC00259 DS    0H                                                  0267
* IF FOUND = NO THEN                                               0267
         TM    FOUND,B'10000000'                                   0267
         BNZ   @RF00267                                            0267
*  DO;                                                     /*@0099VLS*/
*   TMT2(ENTRIES) = TREND2;                                /*@0099VLS*/
         L     @06,ENTRIES                                         0269
         LR    @03,@06                                             0269
         MH    @03,@CH00952                                        0269
         L     @01,SORTADR(,R2)                                    0269
         ALR   @01,@03                                             0269
         AL    @01,@CF01375                                        0269
         MVC   TMT2(14,@01),TREND2                                 0269
*   ENTRIES = ENTRIES + 1;                                 /*@0099VLS*/
         AL    @06,@CF00056                                        0270
         ST    @06,ENTRIES                                         0270
*  END;                                                    /*@0099VLS*/
*IF DEBUG50 = ON THEN                                              0272
@RF00267 TM    DEBUG50(R2),B'00100000'                             0272
         BNO   @RF00272                                            0272
* DO;                                                      /*@0099VLS*/
*  NUMBER = 14;                                            /*@0099VLS*/
         MVC   NUMBER(4),@CF00952                                  0274
*  NEXTBY = ADDR(TREND2);                                  /*@0099VLS*/
         LA    @06,TREND2                                          0275
         ST    @06,NEXTBY                                          0275
*  ADDNXT = ADDR(PRINTBDY);                                /*@0099VLS*/
         LA    @06,PRINTBDY                                        0276
         ST    @06,ADDNXT                                          0276
*  CALL CONVERT;                                           /*@0099VLS*/
         BAL   @14,CONVERT                                         0277
*  IF FOUND = YES THEN                                             0278
         TM    FOUND,B'10000000'                                   0278
         BNO   @RF00278                                            0278
*  DO;                                                     /*@0099VLS*/
*  NEXTBY = ZZ + 14;                                       /*@0099VLS*/
         LA    @06,14                                              0280
         AL    @06,ZZ                                              0280
         ST    @06,NEXTBY                                          0280
*  ADDNXT = ADDR(PRINTBDY) + 40;                           /*@0099VLS*/
         LA    @06,PRINTBDY                                        0281
         AL    @06,@CF01380                                        0281
         ST    @06,ADDNXT                                          0281
*  CALL CONVERT;                                           /*@0099VLS*/
         BAL   @14,CONVERT                                         0282
*  END;                                                    /*@0099VLS*/
*  PRINTADR = ADDR(PRINTLIN);                              /*@0099VLS*/
@RF00278 LA    @06,PRINTLIN                                        0284
         ST    @06,PRINTADR(,R2)                                   0284
*  CALL IOHND(RITEPRTR);                                   /*@0099VLS*/
         L     @15,ADIOHND(,R2)                                    0285
         LA    @01,@AL00285                                        0285
         BALR  @14,@15                                             0285
* END;                                                     /*@0099VLS*/
*TREND2 = TREND2  && TREND2;    /*CLEAR FOR THE NEXT ENTRY   @0099VLS*/
@RF00272 XC    TREND2(14),TREND2                                   0287
*END;                                                      /*@0099VLS*/
@EL00002 DS    0H                                                  0288
@EF00002 DS    0H                                                  0288
@ER00002 LM    @14,@12,@SA00002                                    0288
         BR    @14                                                 0288
*INITIATE: PROC;                                           /*@Z427VLS*/
INITIATE STM   @14,@12,@SA00003                                    0289
*RESPECIFY(R3,R15) RESTRICTED;                             /*@Z427VLS*/
*/*CORE IS ALLOCATED FOR TREND2  , EVTABLE, THE INITIAL ENTRIES OF */
*/*TRENDONE. IF SHARE TABLE EXISTS, EXTRA ENTRIES OF TRENDONE ARE  */
*/* ALLOCATED FOR EVERY UNIQUE CPU SERIAL ENCOUNTERED IN SHARE     */
*/* TABLE. ERROR MESSAGES ARE ISSUED AND A SERIOUS RETURN CODE     */
*/* ISSUED IF CORE IS NOT AVAILABLE. THE LENGTH  OF A TRENDONE     */
*/* GETMAIN IS DETERMINED.                                   @Z427VLS*/
*CALL CALCRANG; /*FIND NUMBER OF DAYS IN DAY RANGE           @Z427VLS*/
         BAL   @14,CALCRANG                                        0291
*TREN1SIZ = (NUMDAYS * 76) + 8;                            /*@0099VLS*/
         L     @14,NUMDAYS(,R2)                                    0292
         MH    @14,@CH01385                                        0292
         AL    @14,@CF00036                                        0292
         ST    @14,TREN1SIZ                                        0292
* TREN1SIZ = TREN1SIZ + 127;  /*ROUND TO 128 BYTE BOUNDARY   @D35UGGB*/
         AL    @14,@CF01386                                        0293
         ST    @14,TREN1SIZ                                        0293
* TREN1SIZ = TREN1SIZ / 128;  /*FOR DOS GETVIS COMPATABILITY @D35UGGB*/
         LA    @06,128                                             0294
         LR    @00,@14                                             0294
         SRDA  @00,32                                              0294
         DR    @00,@06                                             0294
         ST    @01,TREN1SIZ                                        0294
* TREN1SIZ = TREN1SIZ * 128;                               /*@D35UGGB*/
         SLA   @01,7                                               0295
         ST    @01,TREN1SIZ                                        0295
*R3 = TABSIZE + EVSIZE; /*LENGTH OF TREND2 PLUS EVTABLE      @Z427VLS*/
         AL    @06,TABSIZE(,R2)                                    0296
         LR    R3,@06                                              0296
*GEN(GETMAIN EC,LV=(R3),A=COMPLINK); /*ISSUE REQUEST FOR CORE*/    0297
         GETMAIN EC,LV=(R3),A=COMPLINK
*IF R15 ^= SUCCESS THEN /*IF GETMAIN NOT SUCCESSFULL         @Z427VLS*/
         LTR   R15,R15                                             0298
         BZ    @RF00298                                            0298
*  DO;                                                     /*@Z427VLS*/
*    MSGNO = 2;                                            /*@Z427VLS*/
         MVI   MSGNO,X'02'                                         0300
*    CALL ERRMSG;                                          /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0301
*    R15 =NOSRTABL;                                        /*@0001VLS*/
         LA    R15,12                                              0302
*    GETFAIL = YES;                                        /*@0001VLS*/
         OI    GETFAIL,B'00000100'                                 0303
*  END;                                                    /*@Z427VLS*/
*ELSE /*IF GETMAIN IS SUCCESSFULL                            @Z427VLS*/
*  DO;                                                     /*@Z427VLS*/
         B     @RC00298                                            0305
@RF00298 DS    0H                                                  0306
*    EVPTR = COMPLINK; /*ESTABLISH BASE ADDRESS OF EVTABLE   @Z427VLS*/
         L     @14,COMPLINK                                        0306
         ST    @14,EVPTR(,R2)                                      0306
*    EVSTOP = '00000F'X; /*GRAB FIRST RECORDS DATE           @Z427VLS*/
         MVC   EVSTOP(3,@14),@CB00228                              0307
*    STRTDATE = '99366F'X; /*LIKEWISE                        @Z427VLS*/
         MVC   STRTDATE(3,R2),@CB01388                             0308
*    MAXENT = TABSIZE/14;      /*DETERMINE MAX NUMBER OF ENTRIES*/ 0309
         L     @00,TABSIZE(,R2)                                    0309
         SRDA  @00,32                                              0309
         D     @00,@CF00952                                        0309
         ST    @01,MAXENT                                          0309
*    SORTADR = EVPTR + EVSIZE; /*SET TREND2 BASE PAST EVTABLE*/    0310
         LA    @06,128                                             0310
         ALR   @06,@14                                             0310
         ST    @06,SORTADR(,R2)                                    0310
*    TREND2(1) = (TREND2(1) && TREND2(1)); /*CLEAR TREND2 ENT ONE*/
         XC    TREND2(1),TREND2                                    0311
*    EVTABLE  = (EVTABLE  && EVTABLE); /*CLEAR EVTABLE TO ZEROS*/  0312
         XC    EVTABLE(102,@14),EVTABLE(@14)                       0312
*    IF SHAREPTR ^= ZERO THEN                                      0313
         L     @14,SHAREPTR(,R2)                                   0313
         LTR   @14,@14                                             0313
         BZ    @RF00313                                            0313
*      DO;                                              /* @ZA17692 */
*        CALL SORTSHAR;      /* SORT SHARE TABLE CPU LETER @ZA17692 */
         BAL   @14,SORTSHAR                                        0315
*        DO J = 1 BY 1 TO SHARENUM WHILE R15 = SUCCESS;    /*@Z427VLS*/
         LA    @14,1                                               0316
         ST    @14,J                                               0316
         B     @DE00316                                            0316
@DL00316 LTR   R15,R15                                             0316
         BNZ   @DC00316                                            0316
*          UNIQUE = YES;                                   /*@Z427VLS*/
         OI    UNIQUE,B'00000100'                                  0317
*          DO K = 1 BY 1 TO EVMAX WHILE UNIQUE = YES;      /*@Z427VLS*/
         LA    @14,1                                               0318
         ST    @14,K                                               0318
@DL00318 TM    UNIQUE,B'00000100'                                  0318
         BNO   @DC00318                                            0318
*            IF SHARSERA(J) = EVSERIAL(K) THEN                     0319
         L     @06,J                                               0319
         SLA   @06,4                                               0319
         L     @01,SHAREPTR(,R2)                                   0319
         MH    @14,@CH00081                                        0319
         L     @05,EVPTR(,R2)                                      0319
         ALR   @01,@06                                             0319
         AL    @01,@CF01599                                        0319
         ALR   @05,@14                                             0319
         CLC   SHARSERA-10(3,@01),EVSERIAL-6(@05)                  0319
         BNE   @RF00319                                            0319
*              UNIQUE = NO;                                /*@Z427VLS*/
         NI    UNIQUE,B'11111011'                                  0320
*            ELSE IF EVSERIAL(K) = ZERO THEN                       0321
         B     @RC00319                                            0321
@RF00319 L     @14,K                                               0321
         MH    @14,@CH00081                                        0321
         L     @06,EVPTR(,R2)                                      0321
         L     @05,EVSERIAL-7(@14,@06)                             0321
         LA    @05,0(,@05)                                         0321
         LTR   @05,@05                                             0321
         BNZ   @RF00321                                            0321
*              DO;                                         /*@Z427VLS*/
*                UNIQUE = NO; /*ONLY BUILD ONE ENTRY PER CPU @Z427VLS*/
         NI    UNIQUE,B'11111011'                                  0323
*                EVSERIAL(K) = SHARSERA(J);                /*@Z427VLS*/
         ST    @14,@TF00001                                        0324
         ALR   @14,@06                                             0324
         L     @05,J                                               0324
         SLA   @05,4                                               0324
         L     @04,SHAREPTR(,R2)                                   0324
         ST    @05,@TF00002                                        0324
         ALR   @05,@04                                             0324
         AL    @05,@CF01599                                        0324
         MVC   EVSERIAL-6(3,@14),SHARSERA-10(@05)                  0324
*                EVLETTER(K) = SHARLET(J);                 /*@Z427VLS*/
         LR    @14,@06                                             0325
         AL    @14,@TF00001                                        0325
         AL    @04,@TF00002                                        0325
         MVC   EVLETTER-6(1,@14),SHARLET-16(@04)                   0325
*                EVNUM = EVNUM + 1;                        /*@Z427VLS*/
         LA    @14,1                                               0326
         AH    @14,EVNUM(,@06)                                     0326
         STH   @14,EVNUM(,@06)                                     0326
*                    R3 = TREN1SIZ; /*LENGTH OF TRENDONE TABLE*/   0327
         L     R3,TREN1SIZ                                         0327
*                    GEN(GETMAIN EC,LV=(R3),A=COMPLINK);   /*@Z427VLS*/
         GETMAIN EC,LV=(R3),A=COMPLINK
*                    IF R15  ^= SUCCESS THEN                       0329
         LTR   R15,R15                                             0329
         BZ    @RF00329                                            0329
*                      DO;                                 /*@Z427VLS*/
*                        MSGNO = 1;                        /*@Z427VLS*/
         MVI   MSGNO,X'01'                                         0331
*                        CALL ERRMSG;                      /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0332
*                    R15 = NOSRTABL; /*RET.CODE OF 12        @0001VLS*/
         LA    R15,12                                              0333
*                    GETFAIL = YES; /*STOP FURTHER PROCESSING*/    0334
         OI    GETFAIL,B'00000100'                                 0334
*                      END;                                /*@Z427VLS*/
*                    ELSE                                          0336
*                      DO;                                 /*@Z427VLS*/
         B     @RC00329                                            0336
@RF00329 DS    0H                                                  0337
*                        IF K > 1 THEN /*IF NOT 1ST CREATED ENTRY*/
         CLC   K(4),@CF00056                                       0337
         BNH   @RF00337                                            0337
*                          TRENEXT = COMPLINK; /*POINT TO THIS NEW*/
         L     @14,TRENPTR(,R2)                                    0338
         L     @06,COMPLINK                                        0338
         ST    @06,TRENEXT(,@14)                                   0338
*                                         /*ENTRY IN THE OLD ENTRY*/
*                        TRENPTR = COMPLINK; /*ADDRESS NEW ENTRY*/ 0339
@RF00337 L     @14,COMPLINK                                        0339
         ST    @14,TRENPTR(,R2)                                    0339
*                        SAVEADR(K) = COMPLINK; /*SAVE ENTRY ADDRESS*/
         L     @06,K                                               0340
         SLA   @06,2                                               0340
         ST    @14,SAVEADR-4(@06)                                  0340
*                        DO Q = 1 BY 1 TO NUMDAYS;         /*@Z427VLS*/
         LA    @14,1                                               0341
         ST    @14,Q                                               0341
         B     @DE00341                                            0341
@DL00341 DS    0H                                                  0342
*                          TREGEN(Q) = (TREGEN(Q) && TREGEN(Q));   0342
         LR    @06,@14                                             0342
         MH    @06,@CH01385                                        0342
         L     @01,TRENPTR(,R2)                                    0342
         ALR   @01,@06                                             0342
         AL    @01,@CF01601                                        0342
         XC    TREGEN-8(76,@01),TREGEN-8(@01)                      0342
*                        END;                              /*@Z427VLS*/
         AL    @14,@CF00056                                        0343
         ST    @14,Q                                               0343
@DE00341 C     @14,NUMDAYS(,R2)                                    0343
         BNH   @DL00341                                            0343
*                        TRENEXT = (TRENEXT && TRENEXT);   /*@Z427VLS*/
         L     @14,TRENPTR(,R2)                                    0344
         L     @06,TRENEXT(,@14)                                   0344
         LR    @05,@06                                             0344
         XR    @05,@06                                             0344
         ST    @05,TRENEXT(,@14)                                   0344
*                        TRENUM  = (TRENUM && TRENUM);     /*@Z427VLS*/
         L     @06,TRENUM(,@14)                                    0345
         LR    @05,@06                                             0345
         XR    @05,@06                                             0345
         ST    @05,TRENUM(,@14)                                    0345
*                          /*SET NEW ENTRY TO ZEROS          @Z427VLS*/
*                      END;                                /*@Z427VLS*/
*              END;                                        /*@Z427VLS*/
@RC00329 DS    0H                                                  0348
*          END;                                          /* @Z427VLS */
@RF00321 DS    0H                                                  0348
@RC00319 LA    @14,1                                               0348
         AL    @14,K                                               0348
         ST    @14,K                                               0348
         C     @14,@CF00088                                        0348
         BNH   @DL00318                                            0348
@DC00318 DS    0H                                                  0349
*        END;                                            /* @Z427VLS */
         LA    @14,1                                               0349
         AL    @14,J                                               0349
         ST    @14,J                                               0349
@DE00316 L     @06,SHAREPTR(,R2)                                   0349
         CH    @14,SHARENUM(,@06)                                  0349
         BNH   @DL00316                                            0349
@DC00316 DS    0H                                                  0350
*      END;                                             /* @ZA17692 */
*  END;                                                    /*@Z427VLS*/
@RF00313 DS    0H                                                  0352
*  NUMUNSHR = EVNUM + 1;                                   /*@Z427VLS*/
@RC00298 L     @14,EVPTR(,R2)                                      0352
         LH    @14,EVNUM(,@14)                                     0352
         LA    @14,1(,@14)                                         0352
         STH   @14,NUMUNSHR                                        0352
*IF R15 = SUCCESS &  /*IF OTHER GETMAINS HAVE BEEN SUCCESSFULL  */ 0353
*         PACC = ON &  /*ONLY CHECK FRAMES IF WRITTEN TO ACCDEV*/  0353
*         (PMCH = ON × PCHAN = ON) THEN /*IF MCH OR CCH SELECTED*/ 0353
         LTR   R15,R15                                             0353
         BNZ   @RF00353                                            0353
         TM    PACC(R2),B'01000000'                                0353
         BNO   @RF00353                                            0353
         TM    PMCH(R2),B'11000000'                                0353
         BZ    @RF00353                                            0353
*  DO;                                                     /*@G51DGBB*/
*    RESPECIFY (R1) RESTRICTED;                            /*@G51DGBB*/
*    R0 = FRAMBENT * EVMAX; /*NUMBER OF ENTRIES TIMES BYTES PER ENTRY*/
         LA    R0,384                                              0356
*    R0 = R0 + 4;           /*ADD FRAMENUM LENGTH            @G51DGBB*/
         AL    R0,@CF00065                                         0357
*    GEN(GETMAIN EC,LV=(R0),A=LINKITM,SP=21); /*GET THE STORAGE*/  0358
         GETMAIN EC,LV=(R0),A=LINKITM,SP=21
*    RESPECIFY (R0) UNRESTRICTED;                          /*@G51DGBB*/
*    IF R15 = SUCCESS THEN   /*IF GETMAIN SUCCESSFULL        @G51DGBB*/
         LTR   R15,R15                                             0360
         BNZ   @RF00360                                            0360
*      DO;                                                 /*@G51DGBB*/
*        FRAMEPTR = LINKITM;  /*ESTABLISH FRAMETAB BASE ADDRESS*/  0362
         L     @14,LINKITM                                         0362
         ST    @14,FRAMEPTR(,R2)                                   0362
*        DO Y = 1 BY 1 TO EVMAX; /*CLEAR FRAMETAB TO ZEROS   @G51DGBB*/
         LA    @14,1                                               0363
         ST    @14,Y                                               0363
@DL00363 DS    0H                                                  0364
*          FRAMEDTA(Y) = (FRAMEDTA(Y) && FRAMEDTA(Y));     /*@G51DGBB*/
         LR    @06,@14                                             0364
         MH    @06,@CH00227                                        0364
         L     @05,FRAMEPTR(,R2)                                   0364
         ALR   @05,@06                                             0364
         AL    @05,@CF01602                                        0364
         XC    FRAMEDTA-4(24,@05),FRAMEDTA-4(@05)                  0364
*        END;                                              /*@G51DGBB*/
         AL    @14,@CF00056                                        0365
         ST    @14,Y                                               0365
         C     @14,@CF00088                                        0365
         BNH   @DL00363                                            0365
*        FRAMENUM = ZEROS;                                 /*@G51DGBB*/
         L     @14,FRAMEPTR(,R2)                                   0366
         SLR   @06,@06                                             0366
         ST    @06,FRAMENUM(,@14)                                  0366
*      END;                                                /*@G51DGBB*/
*  ELSE  /*UNSUCCESSFULL GETMAIN                             @G51DGBB*/
*    DO;                                                   /*@G51DGBB*/
         B     @RC00360                                            0368
@RF00360 DS    0H                                                  0369
*      R15 = TWELVE;  /*DONT CONTINUE RETURN CODE            @G51DGBB*/
         LA    R15,12                                              0369
*      MSGNO = 40;   /*CORE NOT AVAILABLE MESSAGE            @G51DGBB*/
         MVI   MSGNO,X'28'                                         0370
*      CALL ERRMSG;  /*PRINT ERROR MESSAGE                   @G51DGBB*/
         BAL   @14,ERRMSG                                          0371
*    END;                                                  /*@G51DGBB*/
* END; /*END OF FRAMETAB GETMAIN                             @G51DGBB*/
@RC00360 DS    0H                                                  0374
*  ERROR = R15; /*COMMUNICATE ERROR CONDITIONS TO CALLING PROC*/   0374
@RF00353 ST    R15,ERROR                                           0374
*RESPECIFY(R3,R15) UNRESTRICTED;                           /*@Z427VLS*/
*END; /*END OF PROC INITAB                                   @Z427VLS*/
@EL00003 DS    0H                                                  0376
@EF00003 DS    0H                                                  0376
@ER00003 LM    @14,@12,@SA00003                                    0376
         BR    @14                                                 0376
*CONVERT: PROC;                                            /*@Z427VLS*/
CONVERT  STM   @14,@12,12(@13)                                     0377
* DCL  T      FIXED(31) INIT(0);                           /*@Z427VLS*/
*DCL  P FIXED(31) INIT(0);                                 /*@G51DGBB*/
*DCL  R FIXED(31) INIT(0);                                 /*@G51DGBB*/
* DCL  NUMBER FIXED(31) INIT(0);                           /*@Z427VLS*/
* DCL  NEXTBYTE(1) CHAR(1) BASED(NEXTBY);                  /*@Z427VLS*/
* DCL  ADDNUM(1)   CHAR(1) BASED(ADDNXT);                  /*@Z427VLS*/
* DCL  CHARS       CHAR(16) INIT('0123456789ABCDEF');      /*@Z427VLS*/
* DCL  NEXTBY FIXED(31) INIT(0);                           /*@Z427VLS*/
* DCL  ADDNXT FIXED(31) INIT(0);                           /*@Z427VLS*/
*   RESPECIFY (R4,R5) RESTRICTED;                          /*@0099VLS*/
*DO R = NUMBER BY -1 TO 1;                                 /*@G51DGBB*/
         L     @06,NUMBER                                          0388
         ST    @06,R                                               0388
         B     @DE00388                                            0388
@DL00388 DS    0H                                                  0389
* R4 = NEXTBYTE(R);                                        /*@G51DGBB*/
         L     @03,NEXTBY                                          0389
         BCTR  @03,0                                               0389
         SLR   R4,R4                                               0389
         IC    R4,NEXTBYTE(@06,@03)                                0389
* P = 2 * R;                                               /*@G51DGBB*/
         LR    @03,@06                                             0390
         ALR   @03,@03                                             0390
         ST    @03,P                                               0390
*  SRDL(R4,4);                                             /*@Z427VLS*/
         SRDL  R4,4                                                0391
*  SRL(R5,28);                                             /*@Z427VLS*/
         SRL   R5,28                                               0392
*  R5 = R5 + 1;                                            /*@Z427VLS*/
         LA    @15,1                                               0393
         ALR   R5,@15                                              0393
*  R4 = R4 + 1;                                            /*@Z427VLS*/
         ALR   R4,@15                                              0394
* ADDNUM(P-1) = CHARS(R4);                                 /*@G51DGBB*/
         L     @15,ADDNXT                                          0395
         ALR   @03,@15                                             0395
         BCTR  @03,0                                               0395
         BCTR  @03,0                                               0395
         LA    @14,CHARS-1(R4)                                     0395
         MVC   ADDNUM(1,@03),0(@14)                                0395
* ADDNUM(P)  = CHARS(R5);                                  /*@G51DGBB*/
         L     @03,P                                               0396
         ALR   @15,@03                                             0396
         BCTR  @15,0                                               0396
         LA    @03,CHARS-1(R5)                                     0396
         MVC   ADDNUM(1,@15),0(@03)                                0396
* END;                                                     /*@Z427VLS*/
         BCTR  @06,0                                               0397
         ST    @06,R                                               0397
@DE00388 LTR   @06,@06                                             0397
         BP    @DL00388                                            0397
*END;                                                      /*@Z427VLS*/
@EL00004 DS    0H                                                  0398
@EF00004 DS    0H                                                  0398
@ER00004 LM    @14,@12,12(@13)                                     0398
         BR    @14                                                 0398
*RESPECIFY (R4,R5) UNRESTRICTED;                           /*@Z427VLS*/
*SORTONE: PROC; /*SORT EVTABLE IN DESCENDING ORDER BY MODEL, SERIAL*/
SORTONE  STM   @14,@12,12(@13)                                     0400
*               /*NUMBER FOR UNSHARED CPUS AND RELINK THE NEXT     */
*               /*ENTRY POINTERS FOR TABLE TRENDONE.         @Z427VLS*/
*               /*SET EVLETTER FOR UNSHARED CPUS             @Z427VLS*/
*IF NUMUNSHR < EVNUM THEN  /*IF TWO OR MORE CPUS IDENTIFIED AND    */
         LH    @06,NUMUNSHR                                        0401
         L     @03,EVPTR(,R2)                                      0401
         CH    @06,EVNUM(,@03)                                     0401
         BNL   @RF00401                                            0401
*  DO;   /*NOT IN SHARE TABLE THEN SORT, RELINK POINTERS.    @Z427VLS*/
*    DO J = NUMUNSHR BY 1 TO EVNUM - 1; /*SORT IN DESCENDING ORDER */
         ST    @06,J                                               0403
         B     @DE00403                                            0403
@DL00403 DS    0H                                                  0404
*      DO K = J+1 BY 1 TO EVNUM;                           /*@Z427VLS*/
         AL    @06,@CF00056                                        0404
         ST    @06,K                                               0404
         B     @DE00404                                            0404
@DL00404 DS    0H                                                  0405
*        IF EVKEY(J) < EVKEY(K) THEN                               0405
         L     @03,J                                               0405
         LA    @15,6                                               0405
         LR    @05,@03                                             0405
         MR    @04,@15                                             0405
         L     @04,EVPTR(,R2)                                      0405
         MR    @14,@06                                             0405
         ST    @05,@TF00001                                        0405
         ALR   @05,@04                                             0405
         ST    @15,@TF00002                                        0405
         ALR   @15,@04                                             0405
         CLC   EVKEY-6(6,@05),EVKEY-6(@15)                         0405
         BNL   @RF00405                                            0405
*          DO;                                             /*@Z427VLS*/
*            EVKEY(J) = (EVKEY(J)   &&   EVKEY(K)); /*FLIP ENTRIES*/
         LR    @05,@04                                             0407
         AL    @05,@TF00001                                        0407
         LR    @15,@04                                             0407
         AL    @15,@TF00001                                        0407
         MVC   @TS00001(6),EVKEY-6(@15)                            0407
         LR    @15,@04                                             0407
         AL    @15,@TF00002                                        0407
         XC    @TS00001(6),EVKEY-6(@15)                            0407
         MVC   EVKEY-6(6,@05),@TS00001                             0407
*            EVKEY(K) = (EVKEY(K)   &&   EVKEY(J));        /*@Z427VLS*/
         LR    @05,@04                                             0408
         AL    @05,@TF00002                                        0408
         LR    @15,@04                                             0408
         AL    @15,@TF00002                                        0408
         MVC   @TS00001(6),EVKEY-6(@15)                            0408
         LR    @15,@04                                             0408
         AL    @15,@TF00001                                        0408
         XC    @TS00001(6),EVKEY-6(@15)                            0408
         MVC   EVKEY-6(6,@05),@TS00001                             0408
*            EVKEY(J) = (EVKEY(J)   &&   EVKEY(K));        /*@Z427VLS*/
         LR    @05,@04                                             0409
         AL    @05,@TF00001                                        0409
         LR    @15,@04                                             0409
         AL    @15,@TF00001                                        0409
         MVC   @TS00001(6),EVKEY-6(@15)                            0409
         AL    @04,@TF00002                                        0409
         XC    @TS00001(6),EVKEY-6(@04)                            0409
         MVC   EVKEY-6(6,@05),@TS00001                             0409
*            SAVEADR(J) = (SAVEADR(J)  &&  SAVEADR(K));    /*@Z427VLS*/
         LR    @15,@03                                             0410
         SLA   @15,2                                               0410
         LR    @14,@06                                             0410
         SLA   @14,2                                               0410
         L     @00,SAVEADR-4(@15)                                  0410
         X     @00,SAVEADR-4(@14)                                  0410
         ST    @00,SAVEADR-4(@15)                                  0410
*            SAVEADR(K) = (SAVEADR(K)  &&  SAVEADR(J));    /*@Z427VLS*/
         X     @00,SAVEADR-4(@14)                                  0411
         ST    @00,SAVEADR-4(@14)                                  0411
*            SAVEADR(J) = (SAVEADR(J)  &&  SAVEADR(K));    /*@Z427VLS*/
         X     @00,SAVEADR-4(@15)                                  0412
         ST    @00,SAVEADR-4(@15)                                  0412
*            /*MUST SAVE ALTERATIONS TO EVTABLE SO THAT I CAN FIX*/
*            /*ENTRY POINTERS TO EVTABLE IN SYSUM2 AT END OF JOB*/ 0413
*            FLIP(J)    = (FLIP(J) && FLIP(K));            /*@Z427VLS*/
         SLR   @00,@00                                             0413
         IC    @00,FLIP-1(@03)                                     0413
         SLR   @15,@15                                             0413
         IC    @15,FLIP-1(@06)                                     0413
         XR    @00,@15                                             0413
         STC   @00,FLIP-1(@03)                                     0413
*            FLIP(K)    = (FLIP(K) && FLIP(J));            /*@Z427VLS*/
         SLR   @15,@15                                             0414
         IC    @15,FLIP-1(@06)                                     0414
         XR    @00,@15                                             0414
         STC   @00,FLIP-1(@06)                                     0414
*            FLIP(J)    = (FLIP(J) && FLIP(K));            /*@Z427VLS*/
         SLR   @06,@06                                             0415
         IC    @06,FLIP-1(@03)                                     0415
         XR    @00,@06                                             0415
         STC   @00,FLIP-1(@03)                                     0415
*          END;                                            /*@Z427VLS*/
*        END;                                              /*@Z427VLS*/
@RF00405 LA    @06,1                                               0417
         AL    @06,K                                               0417
         ST    @06,K                                               0417
@DE00404 L     @03,EVPTR(,R2)                                      0417
         CH    @06,EVNUM(,@03)                                     0417
         BNH   @DL00404                                            0417
*     END;                                                 /*@Z427VLS*/
         LA    @06,1                                               0418
         AL    @06,J                                               0418
         ST    @06,J                                               0418
@DE00403 L     @03,EVPTR(,R2)                                      0418
         LH    @03,EVNUM(,@03)                                     0418
         BCTR  @03,0                                               0418
         CR    @06,@03                                             0418
         BNH   @DL00403                                            0418
*DO J = NUMUNSHR BY 1 TO EVNUM; /*RELINK ALL TRENDONE ENTRIES*/    0419
         LH    @06,NUMUNSHR                                        0419
         ST    @06,J                                               0419
         B     @DE00419                                            0419
@DL00419 DS    0H                                                  0420
*  IF J > 1 THEN  /*IF 1ST ENTRY, CANT CHANGE PREVIOUS FORWARD PTR*/
         C     @06,@CF00056                                        0420
         BNH   @RF00420                                            0420
*    DO;                                                   /*@Z427VLS*/
*      TRENPTR = SAVEADR(J-1); /*ADDRESS PREVIOUS ENTRY      @Z427VLS*/
         SLA   @06,2                                               0422
         L     @03,SAVEADR-8(@06)                                  0422
         ST    @03,TRENPTR(,R2)                                    0422
*      TRENEXT = SAVEADR(J); /*CHANGE PREVIOUS FORWARD PTR   @Z427VLS*/
         L     @06,SAVEADR-4(@06)                                  0423
         ST    @06,TRENEXT(,@03)                                   0423
*    END;                                                  /*@Z427VLS*/
*  IF J = EVNUM THEN /*IF LAST ENTRY IN CHAIN, DONT POINT TO NEXT*/
@RF00420 L     @06,J                                               0425
         L     @03,EVPTR(,R2)                                      0425
         CH    @06,EVNUM(,@03)                                     0425
         BNE   @RF00425                                            0425
*    DO;                                                   /*@Z427VLS*/
*      TRENPTR = SAVEADR(J); /*ADDRESS LAST ENTRY            @Z427VLS*/
         SLA   @06,2                                               0427
         L     @06,SAVEADR-4(@06)                                  0427
         ST    @06,TRENPTR(,R2)                                    0427
*      TRENEXT = 0; /*SET LAST ENTRY FORWARD POINTER TO ZERO @Z427VLS*/
         SLR   @03,@03                                             0428
         ST    @03,TRENEXT(,@06)                                   0428
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
@RF00425 LA    @06,1                                               0430
         AL    @06,J                                               0430
         ST    @06,J                                               0430
@DE00419 L     @03,EVPTR(,R2)                                      0430
         CH    @06,EVNUM(,@03)                                     0430
         BNH   @DL00419                                            0430
* END;                                                     /*@Z427VLS*/
*IF NUMUNSHR < EVNUM + 1 THEN  /*IF SOME EVLETTERS REMAIN UNSET*/  0432
@RF00401 LH    @06,NUMUNSHR                                        0432
         L     @03,EVPTR(,R2)                                      0432
         LA    @00,1                                               0432
         AH    @00,EVNUM(,@03)                                     0432
         CR    @06,@00                                             0432
         BNL   @RF00432                                            0432
*  DO J = NUMUNSHR BY 1 TO EVNUM;                          /*@Z427VLS*/
         ST    @06,J                                               0433
         B     @DE00433                                            0433
@DL00433 DS    0H                                                  0434
*    EVLETTER(J) = EVCON(J); /*GET NEXT CONSECUTIVE LETTER FOR CPU*/
         LR    @03,@06                                             0434
         MH    @03,@CH00081                                        0434
         L     @15,EVPTR(,R2)                                      0434
         ALR   @15,@03                                             0434
         LA    @03,EVCON-1(@06)                                    0434
         MVC   EVLETTER-6(1,@15),0(@03)                            0434
*  END;                                                    /*@Z427VLS*/
         AL    @06,@CF00056                                        0435
         ST    @06,J                                               0435
@DE00433 L     @03,EVPTR(,R2)                                      0435
         CH    @06,EVNUM(,@03)                                     0435
         BNH   @DL00433                                            0435
*TRENPTR = SAVEADR(1); /*SET TRENPTR TO FIRST TABLE IN CHAIN @Z427VLS*/
@RF00432 L     @06,SAVEADR                                         0436
         ST    @06,TRENPTR(,R2)                                    0436
*END; /*CLOSING END FOR SORTONE                              @Z427VLS*/
@EL00005 DS    0H                                                  0437
@EF00005 DS    0H                                                  0437
@ER00005 LM    @14,@12,12(@13)                                     0437
         BR    @14                                                 0437
*SORTWO: PROC;                                             /*@Z427VLS*/
SORTWO   STM   @14,@12,@SA00006                                    0438
*/*ADJUST POINTERS TO EVTABLE, TRENDCPU,TRENDOLD AS A RESULT OF SORT*/
*/*OF EVTABLE. MUST DO BEFORE SORTING TREND2                 @Z427VLS*/
*  DO J = 1 BY 1 TO PASSNUM;                               /*@Z427VLS*/
         LA    @06,1                                               0439
         ST    @06,J                                               0439
         B     @DE00439                                            0439
@DL00439 DS    0H                                                  0440
*    WORKBYTE = TMTCPUS(J);                                /*@0099VLS*/
         LR    @03,@06                                             0440
         MH    @03,@CH00952                                        0440
         L     @15,SORTADR(,R2)                                    0440
         ST    @03,@TF00001                                        0440
         ALR   @03,@15                                             0440
         AL    @03,@CF01603                                        0440
         MVC   WORKBYTE(1),TMTCPUS-3(@03)                          0440
*    WORKTWO  = WORKBYTE; /*DITTO                            @Z427VLS*/
         MVC   WORKTWO(1),WORKBYTE                                 0441
*    SRL(WORKBYTE,4); /*WORKBYTE,WORKNM NOW SET TO TRENDCPU  @Z427VLS*/
         SLR   @03,@03                                             0442
         IC    @03,WORKBYTE                                        0442
         SRL   @03,4                                               0442
         STC   @03,WORKBYTE                                        0442
*    WORKTWO = (WORKTWO & '0F'X); /*WORKTWO,WORKNM2 NOW TRENDOLD*/ 0443
         NI    WORKTWO,X'0F'                                       0443
*    WORKNM2 = WORKNM2 + 1; /*REFERENCE 1ST ENTRY AS 1, NOT 0*/    0444
         LA    @03,1                                               0444
         SLR   @00,@00                                             0444
         IC    @00,WORKNM2                                         0444
         ALR   @00,@03                                             0444
         STC   @00,WORKNM2                                         0444
*    TMTCPUS(J) = FLIPFLOP(WORKNM2);                       /*@0099VLS*/
         LR    @14,@15                                             0445
         AL    @14,@TF00001                                        0445
         AL    @14,@CF01603                                        0445
         LR    @05,@00                                             0445
         LA    @04,FLIPFLOP-1(@05)                                 0445
         MVC   TMTCPUS-3(1,@14),0(@04)                             0445
*    WORKNM = WORKNM + 1; /*REFERENCE 1ST ENTRY AS 1, NOT 0  @Z427VLS*/
         SLR   @00,@00                                             0446
         IC    @00,WORKNM                                          0446
         ALR   @03,@00                                             0446
         STC   @03,WORKNM                                          0446
*    WORKTWO = FLIPFLOP(WORKNM);    /*TRENDCPU AFTER SORTING @Z427VLS*/
         LA    @14,FLIPFLOP-1(@03)                                 0447
         MVC   WORKTWO(1),0(@14)                                   0447
*    SLL(WORKTWO,4); /*SORTED TRENDCPU NOW IN FIRST FOUR BITS*/    0448
         SLR   @03,@03                                             0448
         IC    @03,WORKTWO                                         0448
         SLL   @03,4                                               0448
         STC   @03,WORKTWO                                         0448
*    TMTCPUS(J) = (TMTCPUS(J) × WORKTWO);                  /*@0099VLS*/
         LR    @03,@15                                             0449
         AL    @03,@TF00001                                        0449
         AL    @03,@CF01603                                        0449
         OC    TMTCPUS-3(1,@03),WORKTWO                            0449
*    /*FOLLOWING IS A LAST MINUTE MANIPULATION, OCT 13, 1976, TO*/ 0450
*    /*GET 3705 ERROR TYPE TO FOLLOW TRENDCPU FOR PROPER SORTING*/ 0450
*    WORKTWO = (TMTCPUS(J) & '0F'X);                       /*@0099VLS*/
         LR    @03,@15                                             0450
         AL    @03,@TF00001                                        0450
         AL    @03,@CF01603                                        0450
         MVC   WORKTWO(1),TMTCPUS-3(@03)                           0450
         NI    WORKTWO,X'0F'                                       0450
*    TMTCPUS(J) = (TMTCPUS(J) & 'F0'X);                    /*@0099VLS*/
         LR    @03,@15                                             0451
         AL    @03,@TF00001                                        0451
         AL    @03,@CF01603                                        0451
         NI    TMTCPUS-3(@03),X'F0'                                0451
*    TMTITEM(J) = (TMTITEM(J) × WORKTWO);                  /*@0099VLS*/
         AL    @15,@TF00001                                        0452
         AL    @15,@CF01604                                        0452
         OC    TMTITEM-4(1,@15),WORKTWO                            0452
*                                           /*PLACE          @Z427VLS*/
*  END;                                                    /*@Z427VLS*/
         AL    @06,@CF00056                                        0453
         ST    @06,J                                               0453
@DE00439 C     @06,PASSNUM                                         0453
         BNH   @DL00439                                            0453
*  IF DEBUG23 ^= ON & SORTNUM > 1 THEN /*ONLY SORT IS AT LEAST TWO*/
         TM    DEBUG23(R2),B'00000001'                             0454
         BO    @RF00454                                            0454
         L     @06,SORTNUM(,R2)                                    0454
         C     @06,@CF00056                                        0454
         BNH   @RF00454                                            0454
*  DO;  /*ENTRIES AND DEBUG DOESNT SPECIFY ORIGINAL INPUT ORDER*/  0455
*/* SORT THAT ONLY EXAMINES AN ENTRY ONCE IF DATA IS IN ORDER*/    0456
* SRTCONT = ((PASSNUM-1)*14) + SORTADR;                    /*@0099VLS*/
         L     @06,PASSNUM                                         0456
         BCTR  @06,0                                               0456
         MH    @06,@CH00952                                        0456
         AL    @06,SORTADR(,R2)                                    0456
         ST    @06,SRTCONT                                         0456
*GENERATE REFS(TMT2,TMTKEY);                               /*@0099VLS*/
    LA   R15,14
    L    R3,SORTADR(R2)
    L    R4,SRTCONT
    LR   R1,R3
    B    DOIT
LOOPBCK1 ALR  R3,R15
         CR   R3,R4
         BNL  DONE
DOIT     CLC  TMTKEY(7,R3),TMTKEY+14(R3)
         BNH  LOOPBCK1
         XC   TMT2(14,R3),TMT2+14(R3)
         XC   TMT2+14(14,R3),TMT2(R3)
         XC   TMT2(14,R3),TMT2+14(R3)
         LR   R6,R3
LOOPBCK2 SR   R6,R15
         CR   R6,R1
         BL   LOOPBCK1
         CLC  TMTKEY(7,R6),TMTKEY+14(R6)
         BNH  LOOPBCK1
         XC   TMT2+14(14,R6),TMT2(R6)
         XC   TMT2(14,R6),TMT2+14(R6)
         XC   TMT2+14(14,R6),TMT2(R6)
          B      LOOPBCK2            DOES IT NEED TO BE MOVED AGAIN
DONE      EQU    *
* END;                                                     /*@Z427VLS*/
*END; /*CLOSING END TO PROC SORTWO                           @Z427VLS*/
@EL00006 DS    0H                                                  0459
@EF00006 DS    0H                                                  0459
@ER00006 LM    @14,@12,@SA00006                                    0459
         BR    @14                                                 0459
*CONTMDR: PROC; /*COUNT TEMPORARY ERRORS AND INDICATE PERMANENT */ 0460
CONTMDR  STM   @14,@12,@SA00007                                    0460
*               /*ERROR IF RECORD REPRESENTS SUCH.           @Z427VLS*/
*BUG(4) = BUG(4) + 1; /*COUNT NUMBER OF MDR 91, 3705 RECORDS @Z427VLS*/
         LA    @06,1                                               0461
         AL    @06,BUG+12                                          0461
         ST    @06,BUG+12                                          0461
*IF TPRMODE = LINSTAT0 THEN                                        0462
         CLI   TPRMODE(R7),X'00'                                   0462
         BNE   @RF00462                                            0462
*  DO;                                                     /*@Z427VLS*/
*    TRENDTMP  = TRENDTMP  + ERRCT1;                   /*@Z427VLS*/
         ICM   @06,15,TRENDTMP                                     0464
         SLR   @03,@03                                             0464
         IC    @03,ERRCT1(,R7)                                     0464
         ALR   @06,@03                                             0464
         STCM  @06,15,TRENDTMP                                     0464
*    TRENDPRM  = ON; /*RECORD REPRESENTS ONE PERMANENT ERROR @0099VLS*/
         OI    TRENDPRM,B'00000001'                                0465
*  END;                                                    /*@Z427VLS*/
*ELSE                                                              0467
*  DO;                                                     /*@Z427VLS*/
         B     @RC00462                                            0467
@RF00462 DS    0H                                                  0468
*    IF TPRMODE = LINSTAT1 THEN                                    0468
         CLI   TPRMODE(R7),X'01'                                   0468
         BNE   @RF00468                                            0468
* TRENDTMP = TRENDTMP + ERRCT1;                            /*@D35UGGB*/
         ICM   @06,15,TRENDTMP                                     0469
         SLR   @03,@03                                             0469
         IC    @03,ERRCT1(,R7)                                     0469
         ALR   @06,@03                                             0469
         STCM  @06,15,TRENDTMP                                     0469
*   ELSE                                                           0470
*    IF TPRMODE = MODE86 THEN                                      0470
         B     @RC00468                                            0470
@RF00468 CLI   TPRMODE(R7),X'86'                                   0470
         BNE   @RF00470                                            0470
*       TRENDTMP = TRENDTMP + RMSSCBRY;                    /*@D3502BL*/
         ICM   @06,15,TRENDTMP                                     0471
         LH    @03,RMSSCBRY(,R7)                                   0471
         N     @03,@CF01606                                        0471
         ALR   @06,@03                                             0471
         STCM  @06,15,TRENDTMP                                     0471
*  ELSE                                                            0472
*    DO;                                                   /*@Z427VLS*/
         B     @RC00470                                            0472
@RF00470 DS    0H                                                  0473
*      IF TPRMODE = CHANADAP × /*CHANNEL ADAPTER ERROR       @Z427VLS*/
*         TPRMODE = COMSCAN  × /*COMMUNICATION SCANNER ERROR @Z427VLS*/
*         TPRMODE = IOERROR  × /*I/O INSTRUCTION EXCEPTION   @Z427VLS*/
*         TPRMODE = UNRESOLV × /*UNRESOLVED PROGRAM LEVEL ONE */   0473
*                              /*INTERRUPT                   @Z427VLS*/
*         TPRMODE = LINKERR ×   /* LINK ERROR                @D3502BL*/
*         TPRMODE = MODE82 THEN /* LONG FORMAT LINK ERROR    @D3502BL*/
         CLI   TPRMODE(R7),X'10'                                   0473
         BE    @RT00473                                            0473
         CLI   TPRMODE(R7),X'11'                                   0473
         BE    @RT00473                                            0473
         CLI   TPRMODE(R7),X'12'                                   0473
         BE    @RT00473                                            0473
         CLI   TPRMODE(R7),X'13'                                   0473
         BE    @RT00473                                            0473
         CLI   TPRMODE(R7),X'02'                                   0473
         BE    @RT00473                                            0473
         CLI   TPRMODE(R7),X'82'                                   0473
         BNE   @RF00473                                            0473
@RT00473 DS    0H                                                  0474
*           TRENDPRM  = ON;                              /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0474
*      ELSE                                                        0475
*      DO;                                                 /*@Z427VLS*/
         B     @RC00473                                            0475
@RF00473 DS    0H                                                  0476
*      IF TPRMODE = LINSTAT3 THEN /*IF MODE IS 03            @Z427VLS*/
         CLI   TPRMODE(R7),X'03'                                   0476
         BNE   @RF00476                                            0476
*         DO;                                              /*@Z427VLS*/
*           TRENDTMP  = TRENDTMP  + ERRCT1;            /*@Z427VLS*/
         ICM   @06,15,TRENDTMP                                     0478
         SLR   @03,@03                                             0478
         IC    @03,ERRCT1(,R7)                                     0478
         ALR   @06,@03                                             0478
         STCM  @06,15,TRENDTMP                                     0478
*           TRENDPRM  = ON;                              /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0479
*         END;                                             /*@Z427VLS*/
*      ELSE                                                        0481
*        IF TPRMODE = MODE83 THEN /* IF MODE IS 83           @D3502BL*/
         B     @RC00476                                            0481
@RF00476 CLI   TPRMODE(R7),X'83'                                   0481
         BNE   @RF00481                                            0481
*          DO;                                             /*@D3502BL*/
*            TRENDTMP = TRENDTMP + RMSSCBRY;               /*@D3502BL*/
         ICM   @06,15,TRENDTMP                                     0483
         LH    @03,RMSSCBRY(,R7)                                   0483
         N     @03,@CF01606                                        0483
         ALR   @06,@03                                             0483
         STCM  @06,15,TRENDTMP                                     0483
*            TRENDPRM = ON;                                /*@D3502BL*/
         OI    TRENDPRM,B'00000001'                                0484
*          END;                                            /*@D3502BL*/
*       END;                                               /*@Z427VLS*/
@RF00481 DS    0H                                                  0486
@RC00476 DS    0H                                                  0487
*       END;                                               /*@Z427VLS*/
@RC00473 DS    0H                                                  0488
*    END;                                                  /*@Z427VLS*/
@RC00470 DS    0H                                                  0488
@RC00468 DS    0H                                                  0489
*IF TRENDPRM  = ON × TRENDTMP  > ZERO THEN                         0489
@RC00462 TM    TRENDPRM,B'00000001'                                0489
         BO    @RT00489                                            0489
         ICM   @06,15,TRENDTMP                                     0489
         BNP   @RF00489                                            0489
@RT00489 DS    0H                                                  0490
*  DO;                                                     /*@Z427VLS*/
*    BUG(5) = BUG(5) + 1; /*MDRS SAVED IN TREND2             @Z427VLS*/
         LA    @06,1                                               0491
         L     @03,BUG+16                                          0491
         ALR   @03,@06                                             0491
         ST    @03,BUG+16                                          0491
*    BUG(13) = BUG(13) + 1; /*DEVICE GROUP FIVE COUNT        @Z427VLS*/
         AL    @06,BUG+48                                          0492
         ST    @06,BUG+48                                          0492
*    TRENDGRP  = FIVE; /*SET GROUP TO TP CNTRL             @Z427VLS*/
         MVI   TRENDGRP,X'05'                                      0493
*    WORKCUA  = (TPRCUA & ONLYCUA2);                       /*@Z427VLS*/
         MVC   WORKCUA(2),TPRCUA(R7)                               0494
         NC    WORKCUA(2),@CB00922                                 0494
*    TRENDRT  = (TPRCUA & ONLYCUA2);                     /*@Z427VLS*/
         MVC   TRENDRT(2),TPRCUA(R7)                               0495
         NC    TRENDRT(2),@CB00922                                 0495
*    /*TRENDCUA IS 4 BITS TOO FAR TO THE RIGHT FOR NOW       @Z427VLS*/
*    TRENDDEV  = '3705'X;                                /*@Z427VLS*/
         MVC   TRENDDEV(2),@CB01418                                0496
*    CALL SETCPU;                                          /*@Z427VLS*/
         BAL   @14,SETCPU                                          0497
*    CALL SET3705;                                         /*@Z427VLS*/
         BAL   @14,SET3705                                         0498
*    TRENDDAT  = TREIDX; /*SET RELATIVE DATE FOR SORTING   @Z427VLS*/
         IC    @06,TREIDX                                          0499
         STC   @06,TRENDDAT                                        0499
*  END;                                                    /*@Z427VLS*/
*END; /*END FOR PROC COUNTMDR                                @Z427VLS*/
@EL00007 DS    0H                                                  0501
@EF00007 DS    0H                                                  0501
@ER00007 LM    @14,@12,@SA00007                                    0501
         BR    @14                                                 0501
*COUNTOBR:PROC; /*IDENTIFY AND SUM PERMANENT AND TEMPORARY ERRORS*/
COUNTOBR STM   @14,@12,@SA00008                                    0502
*               /*FROM OBR RECORDS IN TREND2                 @Z427VLS*/
*BUG(7) = BUG(7) + 1; /*OBR RECORDS PASSED FILTERING         @Z427VLS*/
         LA    @06,1                                               0503
         AL    @06,BUG+24                                          0503
         ST    @06,BUG+24                                          0503
*IF WORKDEV = DEV3410 ×                                            0504
*   WORKDEV = DEV3420 ×                                            0504
*   WORKDEV = DEV34XX THEN                                         0504
         CLC   WORKDEV(2),@CB00896                                 0504
         BE    @RT00504                                            0504
         CLC   WORKDEV(2),@CB00898                                 0504
         BE    @RT00504                                            0504
         CLC   WORKDEV(2),@CB00900                                 0504
         BNE   @RF00504                                            0504
@RT00504 DS    0H                                                  0505
*  CALL CHECK34X; /*IF 34XX TAPE THEN USE ANOTHER ALGORITHM  @Z427VLS*/
         BAL   @14,CHECK34X                                        0505
*ELSE /*IF NON 34XX DEVICE RECORD                            @Z427VLS*/
*   DO;                                                    /*@Z427VLS*/
         B     @RC00504                                            0506
@RF00504 DS    0H                                                  0507
*     IF WORKDEV = DEV3330 ×                                       0507
*        WORKDEV = DEV3340 ×                                       0507
*        WORKDEV = DEV3350 ×                                       0507
*        WORKDEV = DEV33301 ×                                      0507
*        WORKDEV = DEV23051 ×                                      0507
*     OBRCLASS = '21'X ×                                           0507
*        WORKDEV = DEV23052 THEN                                   0507
         CLC   WORKDEV(2),@CB00980                                 0507
         BE    @RT00507                                            0507
         CLC   WORKDEV(2),@CB00982                                 0507
         BE    @RT00507                                            0507
         CLC   WORKDEV(2),@CB00984                                 0507
         BE    @RT00507                                            0507
         CLC   WORKDEV(2),@CB00986                                 0507
         BE    @RT00507                                            0507
         CLC   WORKDEV(2),@CB00976                                 0507
         BE    @RT00507                                            0507
         CLI   OBRCLASS(R7),X'21'                                  0507
         BE    @RT00507                                            0507
         CLC   WORKDEV(2),@CB00978                                 0507
         BNE   @RF00507                                            0507
@RT00507 DS    0H                                                  0508
*       CALL CHECK33X;                                     /*@Z427VLS*/
         BAL   @14,CHECK33X                                        0508
*     ELSE                                                         0509
*       DO;                                                /*@Z427VLS*/
         B     @RC00507                                            0509
@RF00507 DS    0H                                                  0510
*         IF SHORTSW = YES THEN                                    0510
         TM    SHORTSW(R7),B'00100000'                             0510
         BNO   @RF00510                                            0510
*           DO;                                            /*@Z427VLS*/
*             IF OBRSSDRC > ZERO THEN /*IF STAT COUNTERS EXIST*/   0512
         CLI   OBRSSDRC(R7),0                                      0512
         BNH   @RF00512                                            0512
*               DO;                                        /*@Z427VLS*/
*                 ERRNUM = NULLIT; /*CLEAR WORK AREA TO ZERO @Z427VLS*/
         MVI   ERRNUM,X'00'                                        0514
*                 ERRPLACE = (ERRPLACE × OBRSRDS); /*GET R,R ERRORS*/
         OC    ERRPLACE(1),OBRSRDS(R7)                             0515
*                 SRL(ERRPLACE,4); /*SHIFT OUT WRITE ERRORS  @Z427VLS*/
         SLR   @06,@06                                             0516
         IC    @06,ERRPLACE                                        0516
         SRL   @06,4                                               0516
         STC   @06,ERRPLACE                                        0516
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         ICM   @06,15,TRENDTMP                                     0517
         SLR   @03,@03                                             0517
         IC    @03,ERRNUM                                          0517
         ALR   @06,@03                                             0517
         STCM  @06,15,TRENDTMP                                     0517
*                 ERRNUM = NULLIT;                         /*@Z427VLS*/
         MVI   ERRNUM,X'00'                                        0518
*                 ERRPLACE = OBRSRDS; /*GET BOTH READ AND WRITE*/  0519
         MVC   ERRPLACE(1),OBRSRDS(R7)                             0519
*                 ERRPLACE = (ERRPLACE & NOREAD); /*REMOVE READS*/ 0520
         NI    ERRPLACE,X'0F'                                      0520
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         SLR   @03,@03                                             0521
         IC    @03,ERRNUM                                          0521
         ALR   @06,@03                                             0521
         STCM  @06,15,TRENDTMP                                     0521
*               END;                                       /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
*         ELSE /*LONG OBR BY DEFAULT                         @Z427VLS*/
*           DO;                                            /*@Z427VLS*/
         B     @RC00510                                            0524
@RF00510 DS    0H                                                  0525
*             IF DISMOUNT = ON × /*IF A DISMOUNT RECORD WITH STAT DTA*/
*                SDRCOUNT = ON × /*SDR COUNTER DUMPED AT EOD @Z427VLS*/
*                OBRTEMP = ON THEN /*OBR TEMPORARY ERROR FLAG ON     */
         TM    DISMOUNT(R7),B'11000100'                            0525
         BZ    @RF00525                                            0525
*              DO;                     /*                    @ZA29956*/
*              IF OBRLSDRC > ZERO THEN /*IF STAT CNTRS EXIST @ZA29956*/
         CLI   OBRLSDRC(R7),0                                      0527
         BNH   @RF00527                                            0527
*               DO;                                        /*@Z427VLS*/
*                 ERRNUM = NULLIT;                         /*@Z427VLS*/
         MVI   ERRNUM,X'00'                                        0529
*                 ERRPLACE = (ERRPLACE × OBRLSDR); /*GET LNG R,R ERR*/
         LA    @06,64                                              0530
         ALR   @06,R7                                              0530
         SLR   @03,@03                                             0530
         IC    @03,OBRDEVDC(,R7)                                   0530
         SLA   @03,3                                               0530
         ALR   @06,@03                                             0530
         OC    ERRPLACE(1),OBRLSDR(@06)                            0530
*                 SRL(ERRPLACE,4); /*SHIFT TO ACCESS AS NUMERIC*/  0531
         SLR   @03,@03                                             0531
         IC    @03,ERRPLACE                                        0531
         SRL   @03,4                                               0531
         STC   @03,ERRPLACE                                        0531
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         ICM   @03,15,TRENDTMP                                     0532
         SLR   @00,@00                                             0532
         IC    @00,ERRNUM                                          0532
         ALR   @03,@00                                             0532
         STCM  @03,15,TRENDTMP                                     0532
*                 ERRNUM = NULLIT;                         /*@Z427VLS*/
         MVI   ERRNUM,X'00'                                        0533
*                 ERRPLACE = OBRLSDR; /*GET READ, WRITE ERRORS*/   0534
         MVC   ERRPLACE(1),OBRLSDR(@06)                            0534
*                 ERRPLACE = (ERRPLACE & NOREAD); /*ELIM READ ERRORS*/
         NI    ERRPLACE,X'0F'                                      0535
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         SLR   @06,@06                                             0536
         IC    @06,ERRNUM                                          0536
         ALR   @03,@06                                             0536
         STCM  @03,15,TRENDTMP                                     0536
*               END;                                       /*@Z427VLS*/
*              END;                    /*                    @ZA29956*/
*             ELSE /*CONTINUE CHECKING TO FIND PERM ERRORS   @Z427VLS*/
*               DO;                                        /*@Z427VLS*/
         B     @RC00525                                            0539
@RF00525 DS    0H                                                  0540
*                 IF OBRSENS0 ^= '40'X THEN   /* IF NOT INTERV. REQ  */
         LA    @06,64                                              0540
         ALR   @06,R7                                              0540
         SLR   @03,@03                                             0540
         IC    @03,OBRDEVDC(,R7)                                   0540
         SLA   @03,3                                               0540
         ALR   @06,@03                                             0540
         SLR   @03,@03                                             0540
         IC    @03,OBRLSDRC(,R7)                                   0540
         ALR   @06,@03                                             0540
         CLI   OBRSENS0(@06),X'40'                                 0540
         BE    @RF00540                                            0540
*                   TRENDPRM  = ON;                      /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0541
*               END;                                       /*@Z427VLS*/
@RF00540 DS    0H                                                  0543
*            END;                                          /*@Z427VLS*/
@RC00525 DS    0H                                                  0544
*         END;                                             /*@Z427VLS*/
@RC00510 DS    0H                                                  0545
*       END;                                               /*@Z427VLS*/
@RC00507 DS    0H                                                  0546
*    IF TRENDPRM  = ON × TRENDTMP  > ZERO THEN                     0546
@RC00504 TM    TRENDPRM,B'00000001'                                0546
         BO    @RT00546                                            0546
         ICM   @06,15,TRENDTMP                                     0546
         BNP   @RF00546                                            0546
@RT00546 DS    0H                                                  0547
*      DO;                                                 /*@Z427VLS*/
*        BUG(8) = BUG(8) + 1; /*OBRS STORED IN TREND2        @Z427VLS*/
         LA    @06,1                                               0548
         AL    @06,BUG+28                                          0548
         ST    @06,BUG+28                                          0548
*        CALL GROUPASN;                                    /*@Z427VLS*/
         BAL   @14,GROUPASN                                        0549
*        TRENDRT  = WORKCUA; /*CUA IS 4 BITS RIGHT OF CORRECT POS*/
         MVC   TRENDRT(2),WORKCUA                                  0550
*      LINKDEV = (LINKDEV && LINKDEV); /*CLEAR ITEM FROM LAST VALUE*/
         XC    LINKDEV(4),LINKDEV                                  0551
*      CALL IFCDEVIC(4,WORKDEV,LINKDEV); /*GET DEVICE LABEL  @G51DGBB*/
         L     @15,@CV01429                                        0552
         LA    @01,@AL00552                                        0552
         BALR  @14,@15                                             0552
*       TRENDDEV = DEVLABEL;  /* SET TREND2 ENTRY WITH DEVICE LABEL */
         MVC   TRENDDEV(2),DEVLABEL                                0553
*        CALL SETCPU;                                      /*@Z427VLS*/
         BAL   @14,SETCPU                                          0554
*        TRENDDAT  = TREIDX; /*SET RELATIVE DATE FOR SORTING @0099VLS*/
         IC    @06,TREIDX                                          0555
         STC   @06,TRENDDAT                                        0555
*      END;                                                /*@Z427VLS*/
*  END; /*CLOSING END FOR PROC COUNTOBR                      @Z427VLS*/
@EL00008 DS    0H                                                  0557
@EF00008 DS    0H                                                  0557
@ER00008 LM    @14,@12,@SA00008                                    0557
         BR    @14                                                 0557
*CHECK34X: PROC; /*FIND PERM, TEMP ERRORS IN 34XX DEVICES    @Z427VLS*/
CHECK34X STM   @14,@12,12(@13)                                     0558
*     BUG(38) = BUG(38) + 1;                               /*@Z427VLS*/
         LA    @06,1                                               0559
         AL    @06,BUG+148                                         0559
         ST    @06,BUG+148                                         0559
*     IF SHORTSW = NO THEN                                         0560
         TM    SHORTSW(R7),B'00100000'                             0560
         BNZ   @RF00560                                            0560
*       DO;                                                /*@Z427VLS*/
*         IF DISMOUNT = ON × SDRCOUNT = ON THEN /*IF IS EITHER A */
         TM    DISMOUNT(R7),B'10000100'                            0562
         BZ    @RF00562                                            0562
*           TRENDTMP  = TRENDTMP  + OBR34CT1 + OBR34CT2;   /*@0099VLS*/
         ICM   @06,15,TRENDTMP                                     0563
         SLR   @03,@03                                             0563
         IC    @03,OBR34CT1(,R7)                                   0563
         ALR   @06,@03                                             0563
         SLR   @03,@03                                             0563
         IC    @03,OBR34CT2(,R7)                                   0563
         ALR   @06,@03                                             0563
         STCM  @06,15,TRENDTMP                                     0563
*         ELSE /*PERM ERROR BY DEFAULT                       @Z427VLS*/
*          IF OBRTEMP = OFF THEN /*TEMP GARBAGE RECORDS MAY EXIST*/
         B     @RC00562                                            0564
@RF00562 TM    OBRTEMP(R7),B'01000000'                             0564
         BNZ   @RF00564                                            0564
*           TRENDPRM  = ON;                              /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0565
*        END;                                              /*@Z427VLS*/
@RF00564 DS    0H                                                  0566
@RC00562 DS    0H                                                  0567
*  IF TRENDTMP ^= ZERO × TRENDPRM = ON THEN                        0567
@RF00560 ICM   @06,15,TRENDTMP                                     0567
         BNZ   @RT00567                                            0567
         TM    TRENDPRM,B'00000001'                                0567
         BNO   @RF00567                                            0567
@RT00567 DS    0H                                                  0568
*        BUG(39) = BUG(39) + 1;                            /*@Z427VLS*/
         LA    @06,1                                               0568
         AL    @06,BUG+152                                         0568
         ST    @06,BUG+152                                         0568
*END; /*CLOSING END TO CHECK34X                              @Z427VLS*/
@EL00009 DS    0H                                                  0569
@EF00009 DS    0H                                                  0569
@ER00009 LM    @14,@12,12(@13)                                     0569
         BR    @14                                                 0569
*CHECK33X: PROC;                                           /*@Z427VLS*/
CHECK33X STM   @14,@12,12(@13)                                     0570
*BUG(36) = BUG(36) + 1;                                    /*@Z427VLS*/
         LA    @06,1                                               0571
         AL    @06,BUG+140                                         0571
         ST    @06,BUG+140                                         0571
*IF (OBRSENS1 & PERMBIT) = PERMBIT THEN                            0572
         LA    @06,64                                              0572
         ALR   @06,R7                                              0572
         SLR   @03,@03                                             0572
         IC    @03,OBRDEVDC(,R7)                                   0572
         SLA   @03,3                                               0572
         ALR   @06,@03                                             0572
         SLR   @03,@03                                             0572
         IC    @03,OBRLSDRC(,R7)                                   0572
         ALR   @06,@03                                             0572
         MVC   @TS00001(1),OBRSENS1(@06)                           0572
         NI    @TS00001,B'10000000'                                0572
         CLI   @TS00001,B'10000000'                                0572
         BNE   @RF00572                                            0572
*  TRENDPRM  = ON;                                       /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0573
*ELSE                                                              0574
*  DO;                                                     /*@Z427VLS*/
         B     @RC00572                                            0574
@RF00572 DS    0H                                                  0575
*    IF OBRTEMP = ON THEN                                          0575
         TM    OBRTEMP(R7),B'01000000'                             0575
         BNO   @RF00575                                            0575
*      TRENDTMP  = TRENDTMP  + 1;                      /*@Z427VLS*/
         LA    @06,1                                               0576
         ICM   @03,15,TRENDTMP                                     0576
         ALR   @06,@03                                             0576
         STCM  @06,15,TRENDTMP                                     0576
*    ELSE                                                          0577
*      TRENDPRM  = ON;                                   /*@Z427VLS*/
         B     @RC00575                                            0577
@RF00575 OI    TRENDPRM,B'00000001'                                0577
*   END;                                                   /*@Z427VLS*/
@RC00575 DS    0H                                                  0579
*IF TRENDTMP  = 1 × TRENDPRM  = ON THEN                            0579
@RC00572 CLC   TRENDTMP(4),@CF00056                                0579
         BE    @RT00579                                            0579
         TM    TRENDPRM,B'00000001'                                0579
         BNO   @RF00579                                            0579
@RT00579 DS    0H                                                  0580
*  BUG(37) = BUG(37) + 1;                                  /*@Z427VLS*/
         LA    @06,1                                               0580
         AL    @06,BUG+144                                         0580
         ST    @06,BUG+144                                         0580
*END; /*CLOSING END TO CHECK33X                              @Z427VLS*/
@EL00010 DS    0H                                                  0581
@EF00010 DS    0H                                                  0581
@ER00010 LM    @14,@12,12(@13)                                     0581
         BR    @14                                                 0581
*GROUPASN: PROC; /*DETERMINE DEVICE GROUP FOR TREND REPORT   @Z427VLS*/
GROUPASN STM   @14,@12,12(@13)                                     0582
*                /*SET TRENDGRP IN TABLE TREND2 TO THE ENTRY NUMBER*/
*                /*IN TABLE DEVGROUP RELATING TO THIS DEVICE GROUP*/
*IF (WORKDEV1 = HEX08 & WORKDEV2 ^= HEX42) ×                       0583
*   WORKDEV  = HEX100C ×                                           0583
*   WORKDEV  = HEX1008 THEN                                        0583
         CLI   WORKDEV1,X'08'                                      0583
         BNE   @GL00026                                            0583
         CLI   WORKDEV2,X'42'                                      0583
         BNE   @RT00583                                            0583
@GL00026 CLC   WORKDEV(2),@CB00902                                 0583
         BE    @RT00583                                            0583
         CLC   WORKDEV(2),@CB00904                                 0583
         BNE   @RF00583                                            0583
@RT00583 DS    0H                                                  0584
*  DO;                                                     /*@Z427VLS*/
*    BUG(9) = BUG(9) + 1;                                  /*@Z427VLS*/
         LA    @06,1                                               0585
         AL    @06,BUG+32                                          0585
         ST    @06,BUG+32                                          0585
*    TRENDGRP  = ONE;  /*CONSOLE AND UNIT RECORD GROUP     @Z427VLS*/
         MVI   TRENDGRP,X'01'                                      0586
*  END;                                                    /*@Z427VLS*/
*ELSE                                                              0588
*  DO;                                                     /*@Z427VLS*/
         B     @RC00583                                            0588
@RF00583 DS    0H                                                  0589
*    IF WORKDEV1 = HEX10 THEN                                      0589
         CLI   WORKDEV1,X'10'                                      0589
         BNE   @RF00589                                            0589
*      DO;                                                 /*@Z427VLS*/
*        TRENDGRP  = FOUR;                               /*@Z427VLS*/
         MVI   TRENDGRP,X'04'                                      0591
*        BUG(12) = BUG(12) + 1;                            /*@Z427VLS*/
         LA    @06,1                                               0592
         AL    @06,BUG+44                                          0592
         ST    @06,BUG+44                                          0592
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          0594
*      DO;                                                 /*@Z427VLS*/
         B     @RC00589                                            0594
@RF00589 DS    0H                                                  0595
*        IF WORKDEV1 = HEX20 × WORKDEV1 = '21'X ×          /*@D35UGGB*/
*           WORKDEV = HEX0842 THEN                                 0595
         CLI   WORKDEV1,X'20'                                      0595
         BE    @RT00595                                            0595
         CLI   WORKDEV1,X'21'                                      0595
         BE    @RT00595                                            0595
         CLC   WORKDEV(2),@CB00906                                 0595
         BNE   @RF00595                                            0595
@RT00595 DS    0H                                                  0596
*          DO;                                             /*@Z427VLS*/
*            TRENDGRP  = TWO;                            /*@Z427VLS*/
         MVI   TRENDGRP,X'02'                                      0597
*            BUG(10) = BUG(10) + 1;                        /*@Z427VLS*/
         LA    @06,1                                               0598
         AL    @06,BUG+36                                          0598
         ST    @06,BUG+36                                          0598
*          END;                                            /*@Z427VLS*/
*        ELSE                                                      0600
*         DO;                                              /*@Z427VLS*/
         B     @RC00595                                            0600
@RF00595 DS    0H                                                  0601
*           IF WORKDEV1 = HEX40 THEN                               0601
         CLI   WORKDEV1,X'40'                                      0601
         BNE   @RF00601                                            0601
*             DO;                                          /*@Z427VLS*/
*               TRENDGRP  = FIVE;                        /*@Z427VLS*/
         MVI   TRENDGRP,X'05'                                      0603
*               BUG(13) = BUG(13) + 1;                     /*@Z427VLS*/
         LA    @06,1                                               0604
         AL    @06,BUG+48                                          0604
         ST    @06,BUG+48                                          0604
*             END;                                         /*@Z427VLS*/
*           ELSE                                                   0606
*             DO;                                          /*@Z427VLS*/
         B     @RC00601                                            0606
@RF00601 DS    0H                                                  0607
*               IF WORKDEV1 = HEX42 ×                              0607
*                  WORKDEV1 = HEX44 THEN                           0607
         CLI   WORKDEV1,X'42'                                      0607
         BE    @RT00607                                            0607
         CLI   WORKDEV1,X'44'                                      0607
         BNE   @RF00607                                            0607
@RT00607 DS    0H                                                  0608
*                 DO;                                      /*@Z427VLS*/
*                   TRENDGRP  = SIX;                     /*@Z427VLS*/
         MVI   TRENDGRP,X'06'                                      0609
*                   BUG(14) = BUG(14) + 1;                 /*@Z427VLS*/
         LA    @06,1                                               0610
         AL    @06,BUG+52                                          0610
         ST    @06,BUG+52                                          0610
*                 END;                                     /*@Z427VLS*/
*               ELSE                                               0612
*                 DO;                                      /*@Z427VLS*/
         B     @RC00607                                            0612
@RF00607 DS    0H                                                  0613
*                   IF WORKDEV1 = HEX80 THEN                       0613
         CLI   WORKDEV1,X'80'                                      0613
         BNE   @RF00613                                            0613
*                     DO;                                  /*@Z427VLS*/
*                       TRENDGRP  = THREE;               /*@Z427VLS*/
         MVI   TRENDGRP,X'03'                                      0615
*                       BUG(11) = BUG(11) + 1;             /*@Z427VLS*/
         LA    @06,1                                               0616
         AL    @06,BUG+40                                          0616
         ST    @06,BUG+40                                          0616
*                     END;                                 /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
*             END;                                         /*@Z427VLS*/
*          END;                                            /*@Z427VLS*/
*      END;                                                /*@Z427VLS*/
*     END;                                                 /*@Z427VLS*/
*    END; /*CLOSING END TO GROUPASN PROC                     @Z427VLS*/
@EL00011 DS    0H                                                  0623
@EF00011 DS    0H                                                  0623
@ER00011 LM    @14,@12,12(@13)                                     0623
         BR    @14                                                 0623
*SET3705: PROC;                                            /*@Z427VLS*/
SET3705  STM   @14,@12,12(@13)                                     0624
*  IF TPRMODE = LINKERR ×                                          0625
*     TPRMODE = MODE82 ×                                           0625
*     TPRMODE = MODE83 ×                                           0625
*     TPRMODE = MODE86 ×                                           0625
*     TPRMODE = LINSTAT1 ×                                         0625
*     TPRMODE = LINSTAT0 ×                                         0625
*     TPRMODE = LINSTAT3 THEN                                      0625
         CLI   TPRMODE(R7),X'02'                                   0625
         BE    @RT00625                                            0625
         CLI   TPRMODE(R7),X'82'                                   0625
         BE    @RT00625                                            0625
         CLI   TPRMODE(R7),X'83'                                   0625
         BE    @RT00625                                            0625
         CLI   TPRMODE(R7),X'86'                                   0625
         BE    @RT00625                                            0625
         CLI   TPRMODE(R7),X'01'                                   0625
         BE    @RT00625                                            0625
         CLI   TPRMODE(R7),X'00'                                   0625
         BE    @RT00625                                            0625
         CLI   TPRMODE(R7),X'03'                                   0625
         BNE   @RF00625                                            0625
@RT00625 DS    0H                                                  0626
*    TRENDITM = (TRENDITM ×   '20'X);                  /*@Z427VLS*/
         OI    TRENDITM,X'20'                                      0626
*  ELSE IF TPRMODE = IOERROR ×                                     0627
*          TPRMODE = UNRESOLV THEN                                 0627
         B     @RC00625                                            0627
@RF00625 CLI   TPRMODE(R7),X'12'                                   0627
         BE    @RT00627                                            0627
         CLI   TPRMODE(R7),X'13'                                   0627
         BNE   @RF00627                                            0627
@RT00627 DS    0H                                                  0628
*          TRENDITM = (TRENDITM ×   '10'X);            /*@Z427VLS*/
         OI    TRENDITM,X'10'                                      0628
*  /*IF TPRMODE IS EQUAL TO DEFAULT OF COMSCAN OR CHANADAP ERRORS*/
*  /*TREN37 NEED NOT BE SET AS ITS CORRECT VALUE IS ZERO. TRENDRT */
*  /*IS SET HERE AS THE STUPID COMPILER WILL NOT ACCESS TREN37*/   0629
*END;                                                      /*@Z427VLS*/
@EL00012 DS    0H                                                  0629
@EF00012 DS    0H                                                  0629
@ER00012 LM    @14,@12,12(@13)                                     0629
         BR    @14                                                 0629
*SETCPU: PROC;                                             /*@Z427VLS*/
SETCPU   STM   @14,@12,@SA00013                                    0630
*/* SET NEW AND OLD CPUS IN TREND2. IF SHARED IO, ADJUST TRENCPU AND*/
*/*AND TRENCUA TO THE RESPECTIVE BASE ITEMS.                 @Z427VLS*/
*CALL TREADR;   /*CREATE EVTABLE, TRENDONE ENTRIES IF UNIQUE CPU    */
         BAL   @14,TREADR                                          0631
*MISSW = OFF;                                              /*@Z427VLS*/
         NI    MISSW,B'11111101'                                   0632
*DO J = 1 BY 1 TO EVNUM WHILE MISSW = OFF;                 /*@Z427VLS*/
         LA    @06,1                                               0633
         ST    @06,J                                               0633
         B     @DE00633                                            0633
@DL00633 TM    MISSW,B'00000010'                                   0633
         BNZ   @DC00633                                            0633
*  IF EVSERIAL(J) = LRTCPUS × EVSERIAL(J) = 'FFFFFF'X THEN         0634
         MH    @06,@CH00081                                        0634
         L     @03,EVPTR(,R2)                                      0634
         ST    @06,@TF00001                                        0634
         ALR   @06,@03                                             0634
         CLC   EVSERIAL-6(3,@06),LRTCPUS(R7)                       0634
         BE    @RT00634                                            0634
         AL    @03,@TF00001                                        0634
         CLC   EVSERIAL-6(3,@03),@CB00237                          0634
         BNE   @RF00634                                            0634
@RT00634 DS    0H                                                  0635
*      /*EVSERIAL ONLY = FOXES IF 16TH OR HIGHER CPU IN INPUT*/    0635
*    DO;                                                   /*@Z427VLS*/
*      MISSW = ON; /*LOOK KICK OUT FLAG IF A MATCH IS FOUND  @Z427VLS*/
         OI    MISSW,B'00000010'                                   0636
*      WORKNM = J - 1; /*SET TO EVTABLE ENTRY NUMBER MINUS ONE*/   0637
         L     @06,J                                               0637
         BCTR  @06,0                                               0637
         STC   @06,WORKNM                                          0637
*      TRENCPUS  = WORKBYTE; /*REFERENCE WORKNM VIA BIT STRING AND*/
         MVC   TRENCPUS(1),WORKBYTE                                0638
*                             /*SET SYSOLD EQUAL TO IT       @Z427VLS*/
*      IF SHAREPTR ^= ZERO THEN                                    0639
         L     @06,SHAREPTR(,R2)                                   0639
         LTR   @06,@06                                             0639
         BZ    @RF00639                                            0639
*        DO;                                               /*@Z427VLS*/
*          SHAREYES = NO;                                  /*@Z427VLS*/
         NI    SHAREYES,B'10111111'                                0641
*          DO K = 1 BY 1 TO SHARENUM WHILE SHAREYES = NO;  /*@Z427VLS*/
         LA    @06,1                                               0642
         ST    @06,K                                               0642
         B     @DE00642                                            0642
@DL00642 TM    SHAREYES,B'01000000'                                0642
         BNZ   @DC00642                                            0642
*            IF SHAREFLG(K)=LETTERS&LRTCPUS=SHARSERA(K) THEN       0643
         SLA   @06,4                                               0643
         L     @03,SHAREPTR(,R2)                                   0643
         ST    @06,@TF00001                                        0643
         ALR   @06,@03                                             0643
         AL    @06,@CF01375                                        0643
         CLC   SHAREFLG-2(1,@06),LETTERS                           0643
         BNE   @RF00643                                            0643
         LR    @06,@03                                             0643
         AL    @06,@TF00001                                        0643
         AL    @06,@CF01599                                        0643
         CLC   LRTCPUS(3,R7),SHARSERA-10(@06)                      0643
         BNE   @RF00643                                            0643
*              IF WORKCUA>=SHRCUAAL(K)&WORKCUA<=SHRCUAAH(K) THEN   0644
         LR    @06,@03                                             0644
         AL    @06,@TF00001                                        0644
         AL    @06,@CF01609                                        0644
         CLC   WORKCUA(2),SHRCUAAL-13(@06)                         0644
         BL    @RF00644                                            0644
         LR    @06,@03                                             0644
         AL    @06,@TF00001                                        0644
         BCTR  @06,0                                               0644
         CLC   WORKCUA(2),SHRCUAAH-15(@06)                         0644
         BH    @RF00644                                            0644
*                DO;                                       /*@D3506GB*/
*                   TRENDRT=SHRCUABL(K)+WORKCUA-SHRCUAAL(K);       0646
         LR    @06,@03                                             0646
         AL    @06,@TF00001                                        0646
         AL    @06,@CF01604                                        0646
         SLR   @00,@00                                             0646
         ICM   @00,3,SHRCUABL-6(@06)                               0646
         LH    @06,WORKCUA                                         0646
         N     @06,@CF01606                                        0646
         ALR   @00,@06                                             0646
         AL    @03,@TF00001                                        0646
         AL    @03,@CF01609                                        0646
         SLR   @06,@06                                             0646
         ICM   @06,3,SHRCUAAL-13(@03)                              0646
         SLR   @00,@06                                             0646
         STCM  @00,3,TRENDRT                                       0646
*                        MISSW1 = OFF;                     /*@Z427VLS*/
         NI    MISSW1,B'11111110'                                  0647
*                        DO L = 1 BY 1 TO EVNUM WHILE MISSW1 = OFF;
         LA    @06,1                                               0648
         ST    @06,L                                               0648
         B     @DE00648                                            0648
@DL00648 TM    MISSW1,B'00000001'                                  0648
         BNZ   @DC00648                                            0648
*                          IF EVSERIAL(L) = SHARSERB(K) ×          0649
*                             EVSERIAL(L) = 'FFFFFF'X THEN         0649
         MH    @06,@CH00081                                        0649
         L     @03,EVPTR(,R2)                                      0649
         L     @15,K                                               0649
         SLA   @15,4                                               0649
         L     @14,SHAREPTR(,R2)                                   0649
         ST    @06,@TF00001                                        0649
         ALR   @06,@03                                             0649
         ALR   @14,@15                                             0649
         AL    @14,@CF01611                                        0649
         CLC   EVSERIAL-6(3,@06),SHARSERB-3(@14)                   0649
         BE    @RT00649                                            0649
         AL    @03,@TF00001                                        0649
         CLC   EVSERIAL-6(3,@03),@CB00237                          0649
         BNE   @RF00649                                            0649
@RT00649 DS    0H                                                  0650
*                            DO;                           /*@Z427VLS*/
*                              WORKNM = L - 1; /*SET TO EVTABLE ENT.*/
         L     @06,L                                               0651
         BCTR  @06,0                                               0651
         STC   @06,WORKNM                                          0651
*                                             /*NUMBER MINUS ONE*/ 0652
*                              MISSW1 = ON;                /*@Z427VLS*/
         OI    MISSW1,B'00000001'                                  0652
*                            END;                          /*@Z427VLS*/
*                        END;                              /*@Z427VLS*/
@RF00649 LA    @06,1                                               0654
         AL    @06,L                                               0654
         ST    @06,L                                               0654
@DE00648 L     @03,EVPTR(,R2)                                      0654
         CH    @06,EVNUM(,@03)                                     0654
         BNH   @DL00648                                            0654
@DC00648 DS    0H                                                  0655
*                        SHAREYES = ON;                    /*@Z427VLS*/
         OI    SHAREYES,B'01000000'                                0655
*                 END;                                     /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
@RF00644 DS    0H                                                  0657
@RF00643 LA    @06,1                                               0657
         AL    @06,K                                               0657
         ST    @06,K                                               0657
@DE00642 L     @03,SHAREPTR(,R2)                                   0657
         CH    @06,SHARENUM(,@03)                                  0657
         BNH   @DL00642                                            0657
@DC00642 DS    0H                                                  0658
*        END;                                              /*@Z427VLS*/
*        SLL(TRENDRT ,4); /*SHIFT INTO TRENDCUA            @Z427VLS*/
@RF00639 SLR   @06,@06                                             0659
         ICM   @06,3,TRENDRT                                       0659
         SLL   @06,4                                               0659
         STCM  @06,3,TRENDRT                                       0659
*        SLL(WORKNM,4); /*SHIFT BASE CPU INDEX TO BYTE BOUNDARY*/  0660
         SLR   @06,@06                                             0660
         IC    @06,WORKNM                                          0660
         SLL   @06,4                                               0660
         STC   @06,WORKNM                                          0660
*        TRENCPUS  = (TRENCPUS  × WORKBYTE); /*SET TRENCPU   @0099VLS*/
         OC    TRENCPUS(1),WORKBYTE                                0661
*     END;                                                 /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
@RF00634 LA    @06,1                                               0663
         AL    @06,J                                               0663
         ST    @06,J                                               0663
@DE00633 L     @03,EVPTR(,R2)                                      0663
         CH    @06,EVNUM(,@03)                                     0663
         BNH   @DL00633                                            0663
@DC00633 DS    0H                                                  0664
*END;/*CLOSING END TO SETCPU                                 @Z427VLS*/
@EL00013 DS    0H                                                  0664
@EF00013 DS    0H                                                  0664
@ER00013 LM    @14,@12,@SA00013                                    0664
         BR    @14                                                 0664
*ENDOFILE: PROC; /*SORT EVTABLE, TRENDONE, TREND2, FREE EXCESS*/   0665
ENDOFILE STM   @14,@12,@SA00014                                    0665
*                /*TREND2 CORE, PRINT TOURIST INFO, SET RETURN CODES*/
*RESPECIFY(R15) RESTRICTED;                                /*@Z427VLS*/
*IF R15 = OVERFLOW & PHIST = ON THEN /*IF DIRECTWK OVERFLOW AND */ 0667
         C     R15,@CF00036                                        0667
         BNE   @RF00667                                            0667
         TM    PHIST(R2),B'00100000'                               0667
         BNO   @RF00667                                            0667
*  DO; /*HISTORY INPUT THEN IFCIOHND HAS NOT CLOSED HISTORY INPUT*/
*    CLOSEIO = (CLOSEIO && CLOSEIO); /*DONT CLOSE OTHER DATA SETS*/
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0669
*    CACCIN = ON; /*SET ACCIN CLOSE REQUESTED FLAG           @Z427VLS*/
         OI    CACCIN(R2),B'00010000'                              0670
*    CALL IOHND(IOCLOSE); /*REQUEST CLOSE                    @Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0671
         LA    @01,@AL00671                                        0671
         BALR  @14,@15                                             0671
*  END;                                                    /*@Z427VLS*/
*IF MAXENT <= ENTRIES & ERROR ^= ENDFILE & GETFAIL = NO    /*@ZA34166*/
*  THEN                                                    /*@ZA34166*/
@RF00667 L     @14,MAXENT                                          0673
         C     @14,ENTRIES                                         0673
         BH    @RF00673                                            0673
         CLC   ERROR(4),@CF00065                                   0673
         BE    @RF00673                                            0673
         TM    GETFAIL,B'00000100'                                 0673
         BNZ   @RF00673                                            0673
*  DO;            /*WORLD, DONT TELL EREP1, DONT LET LOGREC BE RESET*/
*     ZEROALL = NO;                                        /*@Z427VLS*/
         NI    ZEROALL(R2),B'10111111'                             0675
*     MSGNO = 3;                                           /*@Z427VLS*/
         MVI   MSGNO,X'03'                                         0676
*     CALL ERRMSG;                                         /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0677
*     ERROR = ZERO;                                        /*@0001VLS*/
         SLR   @14,@14                                             0678
         ST    @14,ERROR                                           0678
*     IF PHIST = ON THEN /*IF HISTORY INPUT                  @Z427VLS*/
         TM    PHIST(R2),B'00100000'                               0679
         BNO   @RF00679                                            0679
*       DO;                                                /*@Z427VLS*/
*         CLOSEIO = (CLOSEIO && CLOSEIO);                  /*@Z427VLS*/
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0681
*         CACCIN = ON;                                     /*@Z427VLS*/
         OI    CACCIN(R2),B'00010000'                              0682
*         CALL IOHND(IOCLOSE);                             /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0683
         LA    @01,@AL00683                                        0683
         BALR  @14,@15                                             0683
*       END;                                               /*@G51DGBB*/
* END;                                                     /*@G51DGBB*/
@RF00679 DS    0H                                                  0686
* IF ERROR = FOUR THEN                                             0686
@RF00673 CLC   ERROR(4),@CF00065                                   0686
         BNE   @RF00686                                            0686
*   DO;                                                    /*@G51DGBB*/
*     R15 = ZERO;                                          /*@G51DGBB*/
         SLR   R15,R15                                             0688
*     ERROR = ZERO;                                        /*@G51DGBB*/
         SLR   @14,@14                                             0689
         ST    @14,ERROR                                           0689
*   END;                                                   /*@G51DGBB*/
*/*THE FOLLOWING CODE MUST BE ADDED TO THE END OF FILE PROC BEFORE*/
*/*CLOSING ACCDEV TO WRITE FRAMES TO ACCDEV, IF NECESSARY    @G51DGBB*/
*IF R15 < TWELVE &             /*IF NON TERMINATE RETURN CODE */   0691
*   FRAMEPTR ^= ZERO THEN      /*IF FRAMETAB IS ALLOCATED    @G51DGBB*/
@RF00686 C     R15,@CF00032                                        0691
         BNL   @RF00691                                            0691
         SLR   @14,@14                                             0691
         L     @06,FRAMEPTR(,R2)                                   0691
         CR    @06,@14                                             0691
         BE    @RF00691                                            0691
* DO;                                                      /*@G51DGBB*/
*    IF  FRAMENUM > ZERO THEN /* IF FRAMETAB ENTRIES BUILD.  @G51DGBB*/
         C     @14,FRAMENUM(,@06)                                  0693
         BNL   @RF00693                                            0693
*      DO;                                                 /*@G51DGBB*/
*         IF PHIST = ON THEN /*IF DIRECTWK WAS USED TO STORE FRAMES */
         TM    PHIST(R2),B'00100000'                               0695
         BNO   @RF00695                                            0695
*           DO;                                            /*@G51DGBB*/
*             CLOSEIO = (CLOSEIO && CLOSEIO); /*ZERO CLOSE FLAGS*/ 0697
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0697
*             CDRCTWRK = ON;      /*INDICATE CLOSE OF DIRECTWK FOR  */
         OI    CDRCTWRK(R2),B'00000010'                            0698
*             CALL IOHND(IOCLOSE); /*WRITING, IMPLICITLY OPENED FOR RD*
         L     @15,ADIOHND(,R2)                                    0699
         LA    @01,@AL00699                                        0699
         BALR  @14,@15                                             0699
*           END;                                           /*@G51DGBB*/
*         DO A = 1 BY 1 TO FRAMENUM WHILE R15 < FOUR;       /*SETS. */
@RF00695 LA    @14,1                                               0701
         ST    @14,A                                               0701
         B     @DE00701                                            0701
@DL00701 C     R15,@CF00065                                        0701
         BNL   @DC00701                                            0701
*           IF FRAMETYP(A) = ALLALL THEN /*IF COMPLETE SET   @G51DGBB*/
         MH    @14,@CH00227                                        0702
         L     @06,FRAMEPTR(,R2)                                   0702
         ST    @14,@TF00001                                        0702
         ALR   @14,@06                                             0702
         AL    @14,@CF01614                                        0702
         CLI   FRAMETYP-17(@14),X'FF'                              0702
         BNE   @RF00702                                            0702
*             DO;                                          /*@G51DGBB*/
*               LISTPTR = FRAMLOCM(A);   /*ESTABLISH LISTLOC ADDR.*/
         L     @14,@TF00001                                        0704
         AL    @06,@CF01615                                        0704
         L     @14,FRAMLOCM-20(@14,@06)                            0704
         ST    @14,LISTPTR                                         0704
*               DO Z = 1 BY 1 TO LISTNUM WHILE R15 < FOUR ;/*@G51DGBB*/
         LA    @14,1                                               0705
         ST    @14,Z                                               0705
         B     @DE00705                                            0705
@DL00705 C     R15,@CF00065                                        0705
         BNL   @DC00705                                            0705
*                 RECCCHHR = LISTCCHR(Z);  /*GET ALL MCH FRAMES*/  0706
         MH    @14,@CH00079                                        0706
         L     @06,LISTPTR                                         0706
         ALR   @06,@14                                             0706
         BCTR  @06,0                                               0706
         MVC   RECCCHHR(5,R2),LISTCCHR-4(@06)                      0706
*                 CALL IOHND(READIRCT);    /*READ FRAME FROM DIRECTWK*/
         L     @15,ADIOHND(,R2)                                    0707
         LA    @01,@AL00707                                        0707
         BALR  @14,@15                                             0707
*                 IF R15 = ZERO THEN       /*WRITE FRAME TO ACCDEV*/
         LTR   R15,R15                                             0708
         BNZ   @RF00708                                            0708
*                   CALL IOHND(RITEHIST);                  /*@G51DGBB*/
         L     @15,ADIOHND(,R2)                                    0709
         LA    @01,@AL00709                                        0709
         BALR  @14,@15                                             0709
*              END;                                        /*@G51DGBB*/
@RF00708 LA    @14,1                                               0710
         AL    @14,Z                                               0710
         ST    @14,Z                                               0710
@DE00705 L     @06,LISTPTR                                         0710
         C     @14,LISTNUM(,@06)                                   0710
         BNH   @DL00705                                            0710
@DC00705 DS    0H                                                  0711
*              IF R15 = ZERO THEN /*IF NO ACCDEV WRITE ERROR @G51DGBB*/
         LTR   R15,R15                                             0711
         BNZ   @RF00711                                            0711
*                DO;                                       /*@G51DGBB*/
*                  LISTPTR = FRAMLOCC(A); /*GET CCH FRAMES   @G51DGBB*/
         L     @14,A                                               0713
         MH    @14,@CH00227                                        0713
         L     @06,FRAMEPTR(,R2)                                   0713
         L     @14,FRAMLOCC-24(@14,@06)                            0713
         ST    @14,LISTPTR                                         0713
*                  DO Z = 1 BY 1 TO LISTNUM WHILE R15 < FOUR;      0714
         LA    @14,1                                               0714
         ST    @14,Z                                               0714
         B     @DE00714                                            0714
@DL00714 C     R15,@CF00065                                        0714
         BNL   @DC00714                                            0714
*                    RECCCHHR = LISTCCHR(Z);               /*@G51DGBB*/
         MH    @14,@CH00079                                        0715
         L     @06,LISTPTR                                         0715
         ALR   @06,@14                                             0715
         BCTR  @06,0                                               0715
         MVC   RECCCHHR(5,R2),LISTCCHR-4(@06)                      0715
*                      CALL IOHND(READIRCT); /*READ FRAME OFF DRCTWK*/
         L     @15,ADIOHND(,R2)                                    0716
         LA    @01,@AL00716                                        0716
         BALR  @14,@15                                             0716
*                      IF R15 = ZERO THEN    /*IF SUCCESS THEN WRITE*/
         LTR   R15,R15                                             0717
         BNZ   @RF00717                                            0717
*                        CALL IOHND(RITEHIST); /*TO ACCDEV   @G51DGBB*/
         L     @15,ADIOHND(,R2)                                    0718
         LA    @01,@AL00718                                        0718
         BALR  @14,@15                                             0718
*                    END;                                  /*@G51DGBB*/
@RF00717 LA    @14,1                                               0719
         AL    @14,Z                                               0719
         ST    @14,Z                                               0719
@DE00714 L     @06,LISTPTR                                         0719
         C     @14,LISTNUM(,@06)                                   0719
         BNH   @DL00714                                            0719
@DC00714 DS    0H                                                  0720
*                 END;                                     /*@G51DGBB*/
*             END;                                         /*@G51DGBB*/
*           ELSE  /*INCOMPLETE FRAME SET                     @G51DGBB*/
*             DO;                                          /*@G51DGBB*/
         B     @RC00702                                            0722
@RF00702 DS    0H                                                  0723
*               MSGNO = 78; /*MISSING FRAME SET MESSAGE      @G51DGBB*/
         MVI   MSGNO,X'4E'                                         0723
*               CCHINDX = A;   /*CORRECT DEBUG FRAME COUNTS BY */  0724
         L     @14,A                                               0724
         ST    @14,CCHINDX                                         0724
*               CALL ERRMSG;                               /*@G51DGBB*/
         BAL   @14,ERRMSG                                          0725
*               CALL FIXENTRY; /*PASSING ENTRY INDEX TO FIXENTRY*/ 0726
         BAL   @14,FIXENTRY                                        0726
*             END;                                         /*@G51DGBB*/
*         END;                                             /*@G51DGBB*/
@RC00702 LA    @14,1                                               0728
         AL    @14,A                                               0728
         ST    @14,A                                               0728
@DE00701 L     @06,FRAMEPTR(,R2)                                   0728
         C     @14,FRAMENUM(,@06)                                  0728
         BNH   @DL00701                                            0728
@DC00701 DS    0H                                                  0729
*      END;                                                /*@G51DGBB*/
*     GEN(FREEMAIN R,SP=21);                               /*@G51DGBB*/
@RF00693 DS    0H                                                  0730
         FREEMAIN R,SP=21
* END;                                                     /*@G51DGBB*/
*IF ERROR = OVERFLOW × ERROR = ENDFILE THEN                        0732
@RF00691 L     @14,ERROR                                           0732
         C     @14,@CF00036                                        0732
         BE    @RT00732                                            0732
         C     @14,@CF00065                                        0732
         BNE   @RF00732                                            0732
@RT00732 DS    0H                                                  0733
*  ERROR = ZERO;                                           /*@0001VLS*/
         SLR   @14,@14                                             0733
         ST    @14,ERROR                                           0733
*BUG(50) = BUG(23) + BUG(17) + BUG(19) + BUG(21);          /*@G51DGBB*/
@RF00732 L     @14,BUG+88                                          0734
         AL    @14,BUG+64                                          0734
         AL    @14,BUG+72                                          0734
         AL    @14,BUG+80                                          0734
         ST    @14,BUG+196                                         0734
*NUMREC = BUG(50);                                         /*@G51DGBB*/
         ST    @14,NUMREC                                          0735
*CVD(NUMREC,PACKPAS); /*PRINT NUMBER OF RECORDS PASSED FILTERING*/ 0736
         CVD   @14,@TS00001                                        0736
         MVC   PACKPAS(4),@TS00001+4                               0736
*PACKPAS = (PACKPAS × '0000000F'X); /*CHANGE SIGN FROM C TO F*/    0737
         OC    PACKPAS(4),@CB01458                                 0737
*UNPK(EDFLD,PACKPAS);                                      /*@Z427VLS*/
         UNPK  EDFLD(9),PACKPAS(4)                                 0738
*NONBLANK = OFF; /*INITIALIZE TO NO LEADING BLANKS           @G51DGBB*/
         NI    NONBLANK,B'10111111'                                0739
*DO J = 1 BY 1 TO 8 WHILE NONBLANK = OFF;                  /*@Z427VLS*/
         LA    @14,1                                               0740
         ST    @14,J                                               0740
@DL00740 TM    NONBLANK,B'01000000'                                0740
         BNZ   @DC00740                                            0740
*  IF EDIFILD(J) = CHARZERO THEN                                   0741
         LA    @06,EDIFILD-1(@14)                                  0741
         CLI   0(@06),X'F0'                                        0741
         BNE   @RF00741                                            0741
*    EDIFILD(J) = BLANK;                                   /*@Z427VLS*/
         LA    @06,EDIFILD-1(@14)                                  0742
         MVI   0(@06),X'40'                                        0742
*  ELSE                                                            0743
*    NONBLANK = ON;                                        /*@Z427VLS*/
         B     @RC00741                                            0743
@RF00741 OI    NONBLANK,B'01000000'                                0743
*END;                                                      /*@Z427VLS*/
@RC00741 LA    @14,1                                               0744
         AL    @14,J                                               0744
         ST    @14,J                                               0744
         C     @14,@CF00036                                        0744
         BNH   @DL00740                                            0744
@DC00740 DS    0H                                                  0745
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0745
         ST    @14,PRINTADR(,R2)                                   0745
*CALL IFCMSG(70,ADDR(PRINTBDY));                           /*@Z427VLS*/
         LA    @14,PRINTBDY                                        0746
         ST    @14,@AFTEMPS                                        0746
         L     @15,ADIFCMSG(,R2)                                   0746
         LA    @01,@AL00746                                        0746
         BALR  @14,@15                                             0746
*PRINTED = EDFLD;                                          /*@Z427VLS*/
         MVC   PRINTED(9),EDFLD                                    0747
*CALL IOHND(RITEPRTR);                                     /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0748
         LA    @01,@AL00748                                        0748
         BALR  @14,@15                                             0748
*CVD(ZZ3,PACKPAS);                                         /*@0099VLS*/
         L     @14,ZZ3                                             0749
         CVD   @14,@TS00001                                        0749
         MVC   PACKPAS(4),@TS00001+4                               0749
*PACKPAS = (PACKPAS × '0000000F'X); /*CHANGE SIGN FROM C TO F*/    0750
         OC    PACKPAS(4),@CB01458                                 0750
*UNPK(EDFLD,PACKPAS); /*CONVERT PACKED TO PRINTABLE          @Z427VLS*/
         UNPK  EDFLD(9),PACKPAS(4)                                 0751
*NONBLANK = OFF; /*REINITIALIZE THE SWITCH                   @Z427VLS*/
         NI    NONBLANK,B'10111111'                                0752
*DO J = 1 BY 1 TO 8 WHILE NONBLANK = OFF;                  /*@Z427VLS*/
         LA    @14,1                                               0753
         ST    @14,J                                               0753
@DL00753 TM    NONBLANK,B'01000000'                                0753
         BNZ   @DC00753                                            0753
*  IF EDIFILD(J) = CHARZERO THEN                                   0754
         LA    @06,EDIFILD-1(@14)                                  0754
         CLI   0(@06),X'F0'                                        0754
         BNE   @RF00754                                            0754
*    EDIFILD(J) = BLANK;                                   /*@Z427VLS*/
         LA    @06,EDIFILD-1(@14)                                  0755
         MVI   0(@06),X'40'                                        0755
*  ELSE /*NON BLANK BY DEFAULT                               @Z427VLS*/
*    NONBLANK = ON;                                        /*@Z427VLS*/
         B     @RC00754                                            0756
@RF00754 OI    NONBLANK,B'01000000'                                0756
*END;                                                      /*@Z427VLS*/
@RC00754 LA    @14,1                                               0757
         AL    @14,J                                               0757
         ST    @14,J                                               0757
         C     @14,@CF00036                                        0757
         BNH   @DL00753                                            0757
@DC00753 DS    0H                                                  0758
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0758
         ST    @14,PRINTADR(,R2)                                   0758
*CALL IFCMSG(71,ADDR(PRINTBDY));                           /*@Z427VLS*/
         LA    @14,PRINTBDY                                        0759
         ST    @14,@AFTEMPS                                        0759
         L     @15,ADIFCMSG(,R2)                                   0759
         LA    @01,@AL00759                                        0759
         BALR  @14,@15                                             0759
*PRINTED = EDFLD;                                          /*@Z427VLS*/
         MVC   PRINTED(9),EDFLD                                    0760
*CALL IOHND(RITEPRTR);                                     /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0761
         LA    @01,@AL00761                                        0761
         BALR  @14,@15                                             0761
*IF PACC = YES THEN                                                0762
         TM    PACC(R2),B'01000000'                                0762
         BNO   @RF00762                                            0762
*  DO;                                                     /*@Z427VLS*/
*    CLOSEIO = CLOSEIO && CLOSEIO;                         /*@Z427VLS*/
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0764
*    CACCDEV = ON;                                         /*@Z427VLS*/
         OI    CACCDEV(R2),B'00001000'                             0765
*    CALL IOHND(IOCLOSE);                                  /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0766
         LA    @01,@AL00766                                        0766
         BALR  @14,@15                                             0766
*  END;                                                    /*@Z427VLS*/
*IF ERROR ^= NOSRTABL THEN                                         0768
@RF00762 CLC   ERROR(4),@CF00032                                   0768
         BE    @RF00768                                            0768
* DO;                                                      /*@Z427VLS*/
*   SORTNUM = PASSNUM; /*TELL EREP1 HOW MANY RECORDS IN TREND2  */ 0770
         L     @14,PASSNUM                                         0770
         ST    @14,SORTNUM(,R2)                                    0770
*   EXCESS = TABSIZE - (PASSNUM * SORTELNT); /*CORE UNUSED BY TREND2*/
         L     @06,TABSIZE(,R2)                                    0771
         MH    @14,@CH00952                                        0771
         LCR   @14,@14                                             0771
         ALR   @14,@06                                             0771
         ST    @14,EXCESS                                          0771
*   IF EXCESS > 16 THEN /*IF ONE DOUBLEWORD TO FREE AFTER ROUNDING*/
         C     @14,@CF00088                                        0772
         BNH   @RF00772                                            0772
*     DO;                                                  /*@Z427VLS*/
*       EXCESS = (EXCESS & DBWRD1); /*ROUND DOWN TO DBWORD AMOUNT*/
         N     @14,@CF00893                                        0774
         ST    @14,EXCESS                                          0774
*       RESPECIFY (R0,R1) RESTRICTED;                      /*@Z427VLS*/
*       R0 = EXCESS;                                       /*@Z427VLS*/
         LR    R0,@14                                              0776
*       R1 = SORTADR + TABSIZE - EXCESS;                   /*@Z427VLS*/
         AL    @06,SORTADR(,R2)                                    0777
         SLR   @06,@14                                             0777
         LR    R1,@06                                              0777
*       GEN(FREEMAIN R,LV=(0),A=(1));                      /*@Z427VLS*/
         FREEMAIN R,LV=(0),A=(1)
*     END;                                                 /*@Z427VLS*/
*     RESPECIFY(R1) UNRESTRICTED;                          /*@Z427VLS*/
@RF00772 DS    0H                                                  0781
*  END;                                                    /*@Z427VLS*/
*IF SORTNUM = ZERO & NUMREC = ZERO THEN  /*IF NO RECDS, EREP1 QUIT*/
@RF00768 SLR   @14,@14                                             0782
         C     @14,SORTNUM(,R2)                                    0782
         BNE   @RF00782                                            0782
         C     @14,NUMREC                                          0782
         BNE   @RF00782                                            0782
*  ERROR = TERMINAT;                                       /*@0001VLS*/
         MVC   ERROR(4),@CF00032                                   0783
*IF ERROR = SUCCESS THEN                                           0784
@RF00782 L     @14,ERROR                                           0784
         LTR   @14,@14                                             0784
         BNZ   @RF00784                                            0784
* DO;                                                      /*@Z427VLS*/
*  CALL SORTONE; /*SORT EVTABLE,TRENDONE,SET EVLETTER IF UNSET*/   0786
         BAL   @14,SORTONE                                         0786
*  IF SORTNUM > ZERO THEN /*IF ANY SAVED OBR, MDR RECORDS    @Z427VLS*/
         L     @14,SORTNUM(,R2)                                    0787
         LTR   @14,@14                                             0787
         BNP   @RF00787                                            0787
*    CALL SORTWO;                                          /*@Z427VLS*/
         BAL   @14,SORTWO                                          0788
* END;                                                     /*@Z427VLS*/
*RESPECIFY (R0,R1,R15) UNRESTRICTED;                       /*@Z427VLS*/
*END; /*CLOSING END TO ENDOFILE                              @Z427VLS*/
@EL00014 DS    0H                                                  0791
@EF00014 DS    0H                                                  0791
@ER00014 LM    @14,@12,@SA00014                                    0791
         BR    @14                                                 0791
*ALLREC: PROC;  /*RECORD DEPENDENT SELECTION CRITTERIA       @Z427VLS*/
ALLREC   STM   @14,@12,12(@13)                                     0792
*               /*COMPARE RECORD ITEMS PRECEEDED BY          @Z427VLS*/
*               /* LRT TO PARAMETER TABLE SELECTION          @Z427VLS*/
*               /*VALUES AND RANGES                          @Z427VLS*/
*PASSFLAG = YES; /*RECORD SELECTED IF PASSFLAG NOT SET TO NO @Z427VLS*/
         OI    PASSFLAG(R2),B'00000001'                            0793
*IF LRTDATE >= STDATE & LRTDATE <= ENDDATE THEN                    0794
         CLC   LRTDATE(4,R7),STDATE(R2)                            0794
         BL    @RF00794                                            0794
         CLC   LRTDATE(4,R7),ENDDATE(R2)                           0794
         BH    @RF00794                                            0794
*  DO;                                                     /*@Z427VLS*/
*    IF (LRTTIME >= STTIME1 & LRTTIME <= ENDTIME1) ×               0796
*       (LRTTIME >= STTIME2 & LRTTIME <= ENDTIME2) THEN            0796
         CLC   LRTTIME(4,R7),STTIME1(R2)                           0796
         BL    @GL00049                                            0796
         CLC   LRTTIME(4,R7),ENDTIME1(R2)                          0796
         BNH   @RT00796                                            0796
@GL00049 CLC   LRTTIME(4,R7),STTIME2(R2)                           0796
         BL    @RF00796                                            0796
         CLC   LRTTIME(4,R7),ENDTIME2(R2)                          0796
         BH    @RF00796                                            0796
@RT00796 DS    0H                                                  0797
*      DO;                                                 /*@Z427VLS*/
*        IF SHIFT3RD = ON &                                        0798
*          ((LRTDATE = STDATE & LRTTIME < STTIME1) ×               0798
*           (LRTDATE = ENDDATE & LRTTIME > ENDTIME2))              0798
*           THEN                                                   0798
         TM    SHIFT3RD(R2),B'00010000'                            0798
         BNO   @RF00798                                            0798
         CLC   LRTDATE(4,R7),STDATE(R2)                            0798
         BNE   @GL00053                                            0798
         CLC   LRTTIME(4,R7),STTIME1(R2)                           0798
         BL    @RT00798                                            0798
@GL00053 CLC   LRTDATE(4,R7),ENDDATE(R2)                           0798
         BNE   @RF00798                                            0798
         CLC   LRTTIME(4,R7),ENDTIME2(R2)                          0798
         BNH   @RF00798                                            0798
@RT00798 DS    0H                                                  0799
*              PASSFLAG = NO;                              /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            0799
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          0801
*      PASSFLAG = NO;                                      /*@Z427VLS*/
         B     @RC00796                                            0801
@RF00796 NI    PASSFLAG(R2),B'11111110'                            0801
*   END;                                                   /*@Z427VLS*/
*  ELSE                                                            0803
*   PASSFLAG = NO;                                         /*@Z427VLS*/
         B     @RC00794                                            0803
@RF00794 NI    PASSFLAG(R2),B'11111110'                            0803
*END;                                                      /*@Z427VLS*/
@EL00015 DS    0H                                                  0804
@EF00015 DS    0H                                                  0804
@ER00015 LM    @14,@12,12(@13)                                     0804
         BR    @14                                                 0804
*RECDEP: PROC; /*IDENTIFY RECORD TYPE, SET SORT TABLE KEY    @Z427VLS*/
RECDEP   STM   @14,@12,@SA00016                                    0805
*              /*PERFORM FILTERING                           @Z427VLS*/
*WORKTYPE = (LRTKEY1 & GENREC);                            /*@Z427VLS*/
         MVC   WORKTYPE(1),LRTKEY1(R7)                             0806
         NI    WORKTYPE,X'F0'                                      0806
*IF LRTRUNC = ON × (WORKTYPE < HEX10)                              0807
*                × (WORKTYPE > HEX90) THEN                         0807
         TM    LRTRUNC(R7),B'00100000'                             0807
         BO    @RT00807                                            0807
         CLI   WORKTYPE,X'10'                                      0807
         BL    @RT00807                                            0807
         CLI   WORKTYPE,X'90'                                      0807
         BNH   @RF00807                                            0807
@RT00807 DS    0H                                                  0808
*  BUG(15) = BUG(15) + ONE;                                /*@Z427VLS*/
         LA    @06,1                                               0808
         AL    @06,BUG+56                                          0808
         ST    @06,BUG+56                                          0808
*ELSE                                                              0809
*  DO;                                                     /*@Z427VLS*/
         B     @RC00807                                            0809
@RF00807 DS    0H                                                  0810
*    IF WORKTYPE = HEX30 THEN                                      0810
         CLI   WORKTYPE,X'30'                                      0810
         BNE   @RF00810                                            0810
*      DO;                                                 /*@Z427VLS*/
*        CALL OBRFILT;                                     /*@Z427VLS*/
         BAL   @14,OBRFILT                                         0812
*        BUG(6) = BUG(6) + 1; /*NUMBER OF OBRS IDENTIFIED    @Z427VLS*/
         LA    @06,1                                               0813
         AL    @06,BUG+20                                          0813
         ST    @06,BUG+20                                          0813
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          0815
*      DO;                                                 /*@Z427VLS*/
         B     @RC00810                                            0815
@RF00810 DS    0H                                                  0816
*        IF WORKTYPE = HEX90 THEN                                  0816
         CLI   WORKTYPE,X'90'                                      0816
         BNE   @RF00816                                            0816
*          CALL MDRFILT;                                   /*@Z427VLS*/
         BAL   @14,MDRFILT                                         0817
*        ELSE                                                      0818
*          DO;                                             /*@Z427VLS*/
         B     @RC00816                                            0818
@RF00816 DS    0H                                                  0819
*            IF WORKTYPE = HEX10 THEN                              0819
         CLI   WORKTYPE,X'10'                                      0819
         BNE   @RF00819                                            0819
*              CALL MCHFILT;                               /*@Z427VLS*/
         BAL   @14,MCHFILT                                         0820
*            ELSE                                                  0821
*             DO;                                          /*@Z427VLS*/
         B     @RC00819                                            0821
@RF00819 DS    0H                                                  0822
*               IF WORKTYPE = HEX20 THEN                           0822
         CLI   WORKTYPE,X'20'                                      0822
         BNE   @RF00822                                            0822
*                 CALL CCHFILT;                            /*@Z427VLS*/
         BAL   @14,CCHFILT                                         0823
*               ELSE                                               0824
*                DO;                                       /*@Z427VLS*/
         B     @RC00822                                            0824
@RF00822 DS    0H                                                  0825
*                   IF WORKTYPE = HEX40 THEN                       0825
         CLI   WORKTYPE,X'40'                                      0825
         BNE   @RF00825                                            0825
*                     CALL SOFTFILT;                       /*@Z427VLS*/
         BAL   @14,SOFTFILT                                        0826
*                   ELSE                                           0827
*                     DO;                                  /*@Z427VLS*/
         B     @RC00825                                            0827
@RF00825 DS    0H                                                  0828
*                       IF WORKTYPE = HEX50 THEN                   0828
         CLI   WORKTYPE,X'50'                                      0828
         BNE   @RF00828                                            0828
*                         CALL IPLFILT;                    /*@Z427VLS*/
         BAL   @14,IPLFILT                                         0829
*                       ELSE                                       0830
*                         DO;                              /*@Z427VLS*/
         B     @RC00828                                            0830
@RF00828 DS    0H                                                  0831
*                           IF WORKTYPE = HEX60 THEN               0831
         CLI   WORKTYPE,X'60'                                      0831
         BNE   @RF00831                                            0831
*                             CALL DDRFILT;                /*@Z427VLS*/
         BAL   @14,DDRFILT                                         0832
*                           ELSE                                   0833
*                             DO;                          /*@Z427VLS*/
         B     @RC00831                                            0833
@RF00831 DS    0H                                                  0834
*                               IF WORKTYPE = HEX70 THEN           0834
         CLI   WORKTYPE,X'70'                                      0834
         BNE   @RF00834                                            0834
*                                 CALL MIHFILT;            /*@Z427VLS*/
         BAL   @14,MIHFILT                                         0835
*                               ELSE                               0836
*                                 CALL EODFILT;            /*@Z427VLS*/
         B     @RC00834                                            0836
@RF00834 BAL   @14,EODFILT                                         0836
*                             END;                         /*@Z427VLS*/
*                         END;                             /*@Z427VLS*/
*                     END;                                 /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
*             END;                                         /*@Z427VLS*/
*         END;                                             /*@Z427VLS*/
*     END;                                                 /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00016 DS    0H                                                  0845
@EF00016 DS    0H                                                  0845
@ER00016 LM    @14,@12,@SA00016                                    0845
         BR    @14                                                 0845
*TREADR: PROC;                                             /*@Z427VLS*/
TREADR   STM   @14,@12,@SA00017                                    0846
*RESPECIFY(R3,R15) RESTRICTED;                             /*@Z427VLS*/
*/*ADDRESS THE TRENDONE ENTRY THAT RELATES TO THE RECORD CPU @Z427VLS*/
*/*SERIAL NUMBER. IF THE ENTRY DOES NOT EXIST, CREATE IT AND @Z427VLS*/
*/*ADDRESS IT. TRENDONE ENTRY NUMBER IS EQUAL TO EVTABLE     @Z427VLS*/
*/*ENTRY NUMBER.                                     IF MORE @Z427VLS*/
*/*THAN 16 CPUS ARE IDENTIFIED, AN ERROR MESSAGE IS ISSUED   @Z427VLS*/
*/*THE FIRST TIME, AND THE RECORDS FOR THE EXCESS CPUS ARE   @Z427VLS*/
*/*SUMMED INTO THE 16TH CPU BUCKET BEFORE THE BUCKETS ARE IN @Z427VLS*/
*/*CPU SERIAL ORDER. AN INDEX TO THE BUCKETS FOR THE RELATIVE*/    0848
*/*DATE IN TRENDONE IS CREATED.                              @Z427VLS*/
*CPU0FLG = OFF; /*CPU INNOCENT UNTIL PROVEN GUILTY           @Z427VLS*/
         NI    CPU0FLG,B'11110111'                                 0848
*CVB(BINDAY,LRTDAY); /*CONVERT RECORD DAY TO BINARY FROM PACKED*/  0849
         XC    @TS00001(8),@TS00001                                0849
         MVC   @TS00001+6(2),LRTDAY(R7)                            0849
         CVB   @14,@TS00001                                        0849
         ST    @14,BINDAY                                          0849
*IF CROSSFLG = YES THEN /*IF YEAR BOUNDARY IS CROSSED        @Z427VLS*/
         TM    CROSSFLG,B'10000000'                                0850
         BNO   @RF00850                                            0850
*  DO;                                                     /*@Z427VLS*/
*    IF BINDAY >  DEC335 THEN  /*IS DAY FROM OLD YEAR        @Z427VLS*/
         C     @14,@CF00972                                        0852
         BNH   @RF00852                                            0852
*      TREIDX = BINDAY - DSTART + ONE; /*SET RELATIVE INDEX  @Z427VLS*/
         SL    @14,DSTART                                          0853
         LA    @14,1(,@14)                                         0853
         STC   @14,TREIDX                                          0853
*    ELSE  /*DAY FROM NEW YEAR                               @Z427VLS*/
*      TREIDX = BINDAY + ADDAFT; /*ADD OLD YEAR DAYS FOR PROPER INDEX*/
         B     @RC00852                                            0854
@RF00852 L     @14,BINDAY                                          0854
         AL    @14,ADDAFT                                          0854
         STC   @14,TREIDX                                          0854
*  END;                                                    /*@Z427VLS*/
*ELSE /*IF ALL DAYS IN SAME YEAR                             @Z427VLS*/
*  TREIDX = BINDAY - DSTART + ONE;                         /*@Z427VLS*/
         B     @RC00850                                            0856
@RF00850 L     @14,BINDAY                                          0856
         SL    @14,DSTART                                          0856
         LA    @14,1(,@14)                                         0856
         STC   @14,TREIDX                                          0856
*IF LRTCPUS = ZEROS THEN /*PROTECT AGAINST ZERO SERIAL NO. IN RECORD*/
@RC00850 CLC   LRTCPUS(3,R7),@CB00956                              0857
         BNE   @RF00857                                            0857
*  DO;                                                     /*@Z427VLS*/
*    CPU0FLG = ON; /*DONT SAVE THIS RECORD                   @Z427VLS*/
         OI    CPU0FLG,B'00001000'                                 0859
*    MSGNO = 5;                                            /*@Z427VLS*/
         MVI   MSGNO,X'05'                                         0860
*    CALL ERRMSG;                                          /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0861
*  END;                                                    /*@Z427VLS*/
*ELSE                                                              0863
*  DO;                                                     /*@Z427VLS*/
         B     @RC00857                                            0863
@RF00857 DS    0H                                                  0864
*    TRENPTR = SAVEADR(1);                                 /*@Z427VLS*/
         L     @14,SAVEADR                                         0864
         ST    @14,TRENPTR(,R2)                                    0864
*    GETOUT = NO;                                          /*@Z427VLS*/
         NI    GETOUT,B'10111111'                                  0865
*    DO K = 1 BY 1 TO EVMAX WHILE GETOUT = NO;             /*@Z427VLS*/
         LA    @14,1                                               0866
         ST    @14,K                                               0866
@DL00866 TM    GETOUT,B'01000000'                                  0866
         BNZ   @DC00866                                            0866
*      IF EVSERIAL(K) = LRTCPUS THEN                               0867
         MH    @14,@CH00081                                        0867
         L     @06,EVPTR(,R2)                                      0867
         ST    @14,@TF00001                                        0867
         ALR   @14,@06                                             0867
         CLC   EVSERIAL-6(3,@14),LRTCPUS(R7)                       0867
         BNE   @RF00867                                            0867
*        DO;                                               /*@Z427VLS*/
*          EVMODEL(K) = LRTMODEL; /*SET IN CASE THIS ENTRY CREATED*/
         AL    @06,@TF00001                                        0869
         MVC   EVMODEL-6(2,@06),LRTMODEL(R7)                       0869
*          GETOUT = YES;          /*FROM EVTABLE ENTRY WHICH IS   */
         OI    GETOUT,B'01000000'                                  0870
*        END;                     /*MISSING MODEL NUMBER     @Z427VLS*/
*      ELSE                                                        0872
*        DO;                                               /*@Z427VLS*/
         B     @RC00867                                            0872
@RF00867 DS    0H                                                  0873
*          IF TRENEXT ^= ZERO & TRENPTR ^= ZERO THEN /*IF ANOTHER*/
         SLR   @14,@14                                             0873
         L     @06,TRENPTR(,R2)                                    0873
         L     @05,TRENEXT(,@06)                                   0873
         CR    @05,@14                                             0873
         BE    @RF00873                                            0873
         CR    @06,@14                                             0873
         BE    @RF00873                                            0873
*          /*ENTRY OF TRENDONE AND ANOTHER ENTRY OF EVTABLE EXIST.*/
*          /*ALSO, IF AN ENTRY OS TRENDONE HAS BEEN CREATED  @Z427VLS*/
*                TRENPTR = TRENEXT; /*RESET BASE TO NEXT ENTRY*/   0874
         ST    @05,TRENPTR(,R2)                                    0874
*          ELSE                                                    0875
*            DO;                                           /*@Z427VLS*/
         B     @RC00873                                            0875
@RF00873 DS    0H                                                  0876
*              GETOUT = YES; /*ONLY CREATE ONE ENTRY PER CPU @Z427VLS*/
         OI    GETOUT,B'01000000'                                  0876
*              IF K < EVMAX × /*IF ROOM FOR ANOTHER EVTABLE ENTRY OR*/
*                (K = EVMAX & EVSERIAL(K) = ZERO) THEN /*LAST ENTRY*/
         L     @14,K                                               0877
         LA    @06,16                                              0877
         CR    @14,@06                                             0877
         BL    @RT00877                                            0877
         CR    @14,@06                                             0877
         BNE   @RF00877                                            0877
         MH    @14,@CH00081                                        0877
         L     @06,EVPTR(,R2)                                      0877
         L     @14,EVSERIAL-7(@14,@06)                             0877
         LA    @14,0(,@14)                                         0877
         LTR   @14,@14                                             0877
         BNZ   @RF00877                                            0877
@RT00877 DS    0H                                                  0878
*                  /*OF EVTABLE BUT IT HAS NOT BEEN SET THEN @Z427VLS*/
*                DO;                                       /*@Z427VLS*/
*                  L = EVNUM + 1; /*INDEX TO UNBUILT ENTRY   @Z427VLS*/
         L     @14,EVPTR(,R2)                                      0879
         LA    @06,1                                               0879
         AH    @06,EVNUM(,@14)                                     0879
         ST    @06,L                                               0879
*                  R3 = TREN1SIZ; /*LENGTH OF TRENDONE IN BYTES*/  0880
         L     R3,TREN1SIZ                                         0880
*                  GEN(GETMAIN EC,LV=(R3),A=COMPLINK); /*GET CORE FOR*/
         GETMAIN EC,LV=(R3),A=COMPLINK
*                                           /*NEW TRENDONE ENTRY*/ 0882
*                  IF R15 = ZERO THEN /*IF GETMAIN IS SUCCESSFUL*/ 0882
         SLR   @14,@14                                             0882
         CR    R15,@14                                             0882
         BNE   @RF00882                                            0882
*                  DO;                                     /*@Z427VLS*/
*                  IF EVNUM > ZERO THEN /*IF NOT ONLY ENTRY EXISTANT*/
         L     @06,EVPTR(,R2)                                      0884
         CH    @14,EVNUM(,@06)                                     0884
         BNL   @RF00884                                            0884
*                    TRENEXT = COMPLINK; /*FORWARD PTR TO CREATED ENT*/
         L     @14,TRENPTR(,R2)                                    0885
         L     @06,COMPLINK                                        0885
         ST    @06,TRENEXT(,@14)                                   0885
*                  TRENPTR = COMPLINK; /*ADDRESS NEW ENTRY OF TRENDONE*
@RF00884 L     @14,COMPLINK                                        0886
         ST    @14,TRENPTR(,R2)                                    0886
*                  DO Q = 1 BY 1 TO NUMDAYS; /*CLEAR NEW ENTRY*/   0887
         LA    @14,1                                               0887
         ST    @14,Q                                               0887
         B     @DE00887                                            0887
@DL00887 DS    0H                                                  0888
*                    TREGEN(Q) = (TREGEN(Q) && TREGEN(Q)); /*@Z427VLS*/
         LR    @06,@14                                             0888
         MH    @06,@CH01385                                        0888
         L     @01,TRENPTR(,R2)                                    0888
         ALR   @01,@06                                             0888
         AL    @01,@CF01601                                        0888
         XC    TREGEN-8(76,@01),TREGEN-8(@01)                      0888
*                  END;                                    /*@Z427VLS*/
         AL    @14,@CF00056                                        0889
         ST    @14,Q                                               0889
@DE00887 C     @14,NUMDAYS(,R2)                                    0889
         BNH   @DL00887                                            0889
*                  TRENEXT = (TRENEXT && TRENEXT);         /*@Z427VLS*/
         L     @14,TRENPTR(,R2)                                    0890
         L     @06,TRENEXT(,@14)                                   0890
         LR    @05,@06                                             0890
         XR    @05,@06                                             0890
         ST    @05,TRENEXT(,@14)                                   0890
*                  TRENUM = (TRENUM && TRENUM);            /*@Z427VLS*/
         L     @06,TRENUM(,@14)                                    0891
         LR    @05,@06                                             0891
         XR    @05,@06                                             0891
         ST    @05,TRENUM(,@14)                                    0891
*                  EVMODEL(L) = LRTMODEL; /*SET NEW EVTABLE ENTRY FOR*/
         L     @06,L                                               0892
         LR    @05,@06                                             0892
         MH    @05,@CH00081                                        0892
         L     @04,EVPTR(,R2)                                      0892
         ST    @05,@TF00001                                        0892
         ALR   @05,@04                                             0892
         MVC   EVMODEL-6(2,@05),LRTMODEL(R7)                       0892
*                  EVSERIAL(L) = LRTCPUS; /*CPU IDENTIFIED AS UNIQUE*/
         LR    @05,@04                                             0893
         AL    @05,@TF00001                                        0893
         MVC   EVSERIAL-6(3,@05),LRTCPUS(R7)                       0893
*                  SAVEADR(L) = TRENPTR; /*SAVE ADDRESS FOR SORTING*/
         SLA   @06,2                                               0894
         ST    @14,SAVEADR-4(@06)                                  0894
*                  EVNUM = EVNUM + 1; /*ADD 1 TO NUMBER OF ENTRIES*/
         LA    @14,1                                               0895
         AH    @14,EVNUM(,@04)                                     0895
         STH   @14,EVNUM(,@04)                                     0895
*                  END;                                    /*@Z427VLS*/
*                  ELSE                                            0897
*                    DO;                                   /*@Z427VLS*/
         B     @RC00882                                            0897
@RF00882 DS    0H                                                  0898
*                      MSGNO = ONE; /*TELL NOT ENOUGH CORE FOR TABLE*/
         MVI   MSGNO,X'01'                                         0898
*                      CALL ERRMSG;                        /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0899
*                      R15 = NOSRTABL;                     /*@0001VLS*/
         LA    R15,12                                              0900
*                      GETFAIL = YES;                      /*@0001VLS*/
         OI    GETFAIL,B'00000100'                                 0901
*                    END;                                  /*@Z427VLS*/
*                END;                                      /*@Z427VLS*/
*              ELSE  /*HERE WE HAVE NEW CPU WITH NO ROOM IN EVTABLE*/
*                DO;                                       /*@Z427VLS*/
         B     @RC00877                                            0904
@RF00877 DS    0H                                                  0905
*                  BUG(30) = BUG(30) + 1; /*RECORD FOR EXCESS CPU*/
         LA    @14,1                                               0905
         AL    @14,BUG+116                                         0905
         ST    @14,BUG+116                                         0905
*                  IF FIRSTIME = OFF   THEN /*PRINT ERROR MESSAGE ONLY*
         TM    FIRSTIME,B'00100000'                                0906
         BNZ   @RF00906                                            0906
*                    DO;                    /*FOR FIRST EXCESS CPU*/
*                      MSGNO = 6;                          /*@Z427VLS*/
         MVI   MSGNO,X'06'                                         0908
*                      CALL ERRMSG;                        /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0909
*                      FIRSTIME = ON;       /*NEVER TO RETURN*/    0910
         OI    FIRSTIME,B'00100000'                                0910
*                      EVSERIAL(K) = 'FFFFFF'X; /*RESET TO NO ROOM ID*/
         L     @14,K                                               0911
         MH    @14,@CH00081                                        0911
         L     @06,EVPTR(,R2)                                      0911
         ST    @14,@TF00001                                        0911
         ALR   @14,@06                                             0911
         MVC   EVSERIAL-6(3,@14),@CB00237                          0911
*                      EVMODEL(K) = 'FFFF'X; /*WILL SORT 1ST @Z427VLS*/
         AL    @06,@TF00001                                        0912
         MVC   EVMODEL-6(2,@06),@CB00261                           0912
*                    END;                                  /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
@RF00906 DS    0H                                                  0915
*               END;                                       /*@Z427VLS*/
@RC00877 DS    0H                                                  0916
*             END;                                         /*@Z427VLS*/
@RC00873 DS    0H                                                  0917
*         END;                                             /*@Z427VLS*/
@RC00867 LA    @14,1                                               0917
         AL    @14,K                                               0917
         ST    @14,K                                               0917
         C     @14,@CF00088                                        0917
         BNH   @DL00866                                            0917
@DC00866 DS    0H                                                  0918
*      END;                                                /*@Z427VLS*/
*ERROR = R15; /*COMMUNICATE ERROR CONDITIONS TO CALLING PROC @Z427VLS*/
@RC00857 ST    R15,ERROR                                           0919
*RESPECIFY(R3,R15) UNRESTRICTED;                           /*@Z427VLS*/
* END; /*CLOSING END FOR SUMONADR                            @Z427VLS*/
@EL00017 DS    0H                                                  0921
@EF00017 DS    0H                                                  0921
@ER00017 LM    @14,@12,@SA00017                                    0921
         BR    @14                                                 0921
*CALCRANG: PROC; /*CALCULATE NUMBER OF DAYS IN DATE RANGE    @Z427VLS*/
CALCRANG STM   @14,@12,12(@13)                                     0922
*CVB(DSTART,PSTDY); /*CHANGE PACKED START DAY TO BINARY      @Z427VLS*/
         XC    @TS00001(8),@TS00001                                0923
         MVC   @TS00001+6(2),PSTDY(R2)                             0923
         CVB   @06,@TS00001                                        0923
         ST    @06,DSTART                                          0923
*CVB(DEND,PENDY); /*CHANGE PACKED END DAY TO BINARY          @Z427VLS*/
         XC    @TS00001(8),@TS00001                                0924
         MVC   @TS00001+6(2),PENDY(R2)                             0924
         CVB   @03,@TS00001                                        0924
         ST    @03,DEND                                            0924
*IF DSTART > DEND THEN /*IF CROSS YEAR BOUNDARY              @Z427VLS*/
         CR    @06,@03                                             0925
         BNH   @RF00925                                            0925
*  DO;                                                     /*@Z427VLS*/
*    CROSSFLG = YES; /*YEAR BOUNDARY CROSSED FLAG            @Z427VLS*/
         OI    CROSSFLG,B'10000000'                                0927
*    ADDAFT = DEC366 - DSTART; /*CREATE RELATIVE INDEX IF AFTER END*/
         LCR   @06,@06                                             0928
         AL    @06,@CF00948                                        0928
         ST    @06,ADDAFT                                          0928
*                              /*OF YEAR                     @Z427VLS*/
*    NUMDAYS = DEC366 - DSTART + DEND;                     /*@Z427VLS*/
         ALR   @03,@06                                             0929
         ST    @03,NUMDAYS(,R2)                                    0929
*    YRSAVE1 = (YRSAVE1 && YRSAVE1); /*ZERO HIGH BYTE        @Z427VLS*/
         XC    YRSAVE1(1),YRSAVE1                                  0930
*    YRSAVE2 = PSTYR; /*GET DECIMAL YEAR FROM RECORD         @Z427VLS*/
         MVC   YRSAVE2(1),PSTYR(R2)                                0931
*    SLL(YRSAVE,4); /*SHIFT 4 BITS TO MAKE ROOM FOR SIGN     @Z427VLS*/
         SLR   @15,@15                                             0932
         ICM   @15,3,YRSAVE                                        0932
         SLL   @15,4                                               0932
         STCM  @15,3,YRSAVE                                        0932
*    YRSAVE2 = (YRSAVE2 × '0F'X); /*INSERT SIGN, NUMBER NOW PACKED*/
         OI    YRSAVE2,X'0F'                                       0933
*    CVB(YEAR,YRSAVE); /*CHANGE PACKED TO BINARY             @Z427VLS*/
         XC    @TS00001(8),@TS00001                                0934
         MVC   @TS00001+6(2),YRSAVE                                0934
         CVB   @15,@TS00001                                        0934
         STH   @15,YEAR                                            0934
*    IF (YEARC & LEAPMASK) = HEX0000 THEN /*IF LEAP YEARC THEN*/   0935
         MVC   @TS00001(2),YEARC                                   0935
         NC    @TS00001(2),@CB01007                                0935
         CLC   @TS00001(2),@CB00208                                0935
         BNE   @RF00935                                            0935
*     DO;                                                  /*@Z427VLS*/
*      NUMDAYS = NUMDAYS + ONE;                            /*@Z427VLS*/
         LA    @15,1                                               0937
         ALR   @03,@15                                             0937
         ST    @03,NUMDAYS(,R2)                                    0937
*      ADDAFT = ADDAFT + ONE; /*ONE MORE DAT IN LEAPYEAR     @Z427VLS*/
         ALR   @06,@15                                             0938
         ST    @06,ADDAFT                                          0938
*     END;                                                 /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*ELSE /*IF SAME YEAR                                         @Z427VLS*/
*  NUMDAYS = DEND - DSTART + ONE;                          /*@Z427VLS*/
         B     @RC00925                                            0941
@RF00925 L     @06,DEND                                            0941
         SL    @06,DSTART                                          0941
         AL    @06,@CF00056                                        0941
         ST    @06,NUMDAYS(,R2)                                    0941
*END; /*CLOSING END TO CALCRANGE                             @Z427VLS*/
@EL00018 DS    0H                                                  0942
@EF00018 DS    0H                                                  0942
@ER00018 LM    @14,@12,12(@13)                                     0942
         BR    @14                                                 0942
*OBRFILT: PROC;                                            /*@Z427VLS*/
OBRFILT  STM   @14,@12,@SA00019                                    0943
*IF POBR = OFF THEN                                                0944
         TM    POBR(R2),B'00100000'                                0944
         BNZ   @RF00944                                            0944
*  PASSFLAG=OFF;                                           /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            0945
*ELSE                                                              0946
*  DO;                                                     /*@Z427VLS*/
         B     @RC00944                                            0946
@RF00944 DS    0H                                                  0947
*    IF SHORTSW = ON THEN /*IF SHORT OBR THEN                @Z427VLS*/
         TM    SHORTSW(R7),B'00100000'                             0947
         BNO   @RF00947                                            0947
*      DO;                                                 /*@Z427VLS*/
*         WORKDEV = OBRSDEV2; /*GET DEVICE CODE FROM SHORT LOCATION*/
         MVC   WORKDEV(2),OBRSDEV2(R7)                             0949
*         WWCUA = (OBRSCUA & ONLYCUA3);                    /*@Z427VLS*/
         MVC   WWCUA(3),OBRSCUA(R7)                                0950
         NC    WWCUA(3),@CB00924                                   0950
*         CUA3 = WWCUA;                                    /*@Z427VLS*/
         MVC   CUA3(3),WWCUA                                       0951
*      END;                                                /*@Z427VLS*/
*    ELSE /*LONG OBR BY DEFAULT                              @Z427VLS*/
*      DO;                                                 /*@Z427VLS*/
         B     @RC00947                                            0953
@RF00947 DS    0H                                                  0954
*        WORKDEV = OBRDEV; /*GET DEVICE CODE FROM LONG LOCATION*/  0954
         MVC   WORKDEV(2),OBRDEV(R7)                               0954
*        WWCUA = (OBRPCUA & ONLYCUA3);                     /*@Z427VLS*/
         MVC   WWCUA(3),OBRPCUA(R7)                                0955
         NC    WWCUA(3),@CB00924                                   0955
*        CUA3 = WWCUA;                                     /*@Z427VLS*/
         MVC   CUA3(3),WWCUA                                       0956
*      END;                                                /*@Z427VLS*/
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    0958
@RC00947 L     @06,CUAPTR(,R2)                                     0958
         LTR   @06,@06                                             0958
         BZ    @RF00958                                            0958
*      CALL CUASELCT; /*EXAMINE LIST OF VALID CUAS           @Z427VLS*/
         BAL   @14,CUASELCT                                        0959
*    IF PASSFLAG = YES THEN                                        0960
@RF00958 TM    PASSFLAG(R2),B'00000001'                            0960
         BNO   @RF00960                                            0960
*      DO;                                                 /*@Z427VLS*/
*        IF DEVPTR ^= ZERO THEN /*IF DEVICE SELECTION SPECIFIED THEN*/
         L     @06,DEVPTR(,R2)                                     0962
         LTR   @06,@06                                             0962
         BZ    @RF00962                                            0962
*          CALL DEVSEL; /*EXAMINE LIST OF VALID DEVICES      @Z427VLS*/
         BAL   @14,DEVSEL                                          0963
*        IF PASSFLAG = YES THEN                                    0964
@RF00962 TM    PASSFLAG(R2),B'00000001'                            0964
         BNO   @RF00964                                            0964
*          CALL COUNTOBR; /*COUNT PERM,TEMP ERRS IF IN RECORD*/    0965
         BAL   @14,COUNTOBR                                        0965
*      END;                                                /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END; /*CLOSING END OF OBRFILT                               @Z427VLS*/
@EL00019 DS    0H                                                  0968
@EF00019 DS    0H                                                  0968
@ER00019 LM    @14,@12,@SA00019                                    0968
         BR    @14                                                 0968
*MDRFILT: PROC;   /*MISCELLANEOUS DATA RECORD FILTER.        @Z427VLS*/
MDRFILT  STM   @14,@12,@SA00020                                    0969
*                 /*PASSFLAG IS TURNED OFF IF RECORD FAILS   @Z427VLS*/
*IF PTTYP = OFF THEN  /*ARE MDR RECORDS SELECTED             @Z427VLS*/
         TM    PTTYP(R2),B'10000000'                               0970
         BNZ   @RF00970                                            0970
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            0971
*ELSE /*IF MDR RECORDS HAVE BEEN SELECTED THEN               @Z427VLS*/
*  DO;                                                     /*@Z427VLS*/
         B     @RC00970                                            0972
@RF00970 DS    0H                                                  0973
*    WWCUA2 = (TPRCUA & ONLYCUA2);                         /*@ZA34484*/
         MVC   WWCUA2(2),TPRCUA(R7)                                0973
         NC    WWCUA2(2),@CB00922                                  0973
*    WORKDEV = TPRDEV; /*SET WORK ITEM TO RECORD DEVICE CODE @Z427VLS*/
         MVI   WORKDEV+1,C' '                                      0974
         MVC   WORKDEV(1),TPRDEV(R7)                               0974
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    0975
         L     @06,CUAPTR(,R2)                                     0975
         LTR   @06,@06                                             0975
         BZ    @RF00975                                            0975
*      CALL CUASELCT; /*EXAMINE LIST OF VALID CUAS           @Z427VLS*/
         BAL   @14,CUASELCT                                        0976
*    IF PASSFLAG = YES THEN                                        0977
@RF00975 TM    PASSFLAG(R2),B'00000001'                            0977
         BNO   @RF00977                                            0977
*      DO;                                                 /*@Z427VLS*/
*         IF DEVPTR ^= ZERO THEN /*IF DEVICE SELECTION SPECIFIED*/ 0979
         L     @06,DEVPTR(,R2)                                     0979
         LTR   @06,@06                                             0979
         BZ    @RF00979                                            0979
*           CALL DEVSEL; /*EXAMINE DEVICE SELECTION LIST     @Z427VLS*/
         BAL   @14,DEVSEL                                          0980
*         IF PASSFLAG = YES THEN /*IF VALID DEVICE TYPE THEN @Z427VLS*/
@RF00979 TM    PASSFLAG(R2),B'00000001'                            0981
         BNO   @RF00981                                            0981
*           DO;                                            /*@Z427VLS*/
*    IF LRTKEY1 = HEX91 & (TPRDEV = DV3705 × TPRDEV = DV3705A) THEN
         CLI   LRTKEY1(R7),X'91'                                   0983
         BNE   @RF00983                                            0983
         CLI   TPRDEV(R7),X'05'                                    0983
         BE    @RT00983                                            0983
         CLI   TPRDEV(R7),X'15'                                    0983
         BNE   @RF00983                                            0983
@RT00983 DS    0H                                                  0984
*               CALL CONTMDR; /*PERM,TEMP ERRORS IF FROM MVS SYSTEM*/
         BAL   @14,CONTMDR                                         0984
*             ELSE                                                 0985
*               DO;                                        /*@Z427VLS*/
         B     @RC00983                                            0985
@RF00983 DS    0H                                                  0986
*                 IF TPRDEV = DV3330 ×                             0986
*                    TPRDEV = DV3340 ×                             0986
*                (TPRDEV =>'16'X & TPRDEV =< '1F'X ) × /*FBA RANGE*/
*                    TPRDEV = DV33302 ×                            0986
*                    TPRDEV = DV3350 THEN                          0986
         CLI   TPRDEV(R7),X'01'                                    0986
         BE    @RT00986                                            0986
         CLI   TPRDEV(R7),X'09'                                    0986
         BE    @RT00986                                            0986
         CLI   TPRDEV(R7),X'16'                                    0986
         BL    @GL00064                                            0986
         CLI   TPRDEV(R7),X'1F'                                    0986
         BNH   @RT00986                                            0986
@GL00064 CLI   TPRDEV(R7),X'0A'                                    0986
         BE    @RT00986                                            0986
         CLI   TPRDEV(R7),X'11'                                    0986
         BNE   @RF00986                                            0986
@RT00986 DS    0H                                                  0987
*                   DO;                                    /*@Z427VLS*/
*                   IF(TPRDEV < '16'X × TPRDEV > '1F'X) THEN/*FBA */
         CLI   TPRDEV(R7),X'16'                                    0988
         BL    @RT00988                                            0988
         CLI   TPRDEV(R7),X'1F'                                    0988
         BNH   @RF00988                                            0988
@RT00988 DS    0H                                                  0989
*                     TRENDTMP  = TRENDTMP                         0989
*                                 + TPRS1213                       0989
*                                 + TPRS1415                       0989
*                                 + TPRS19;                /*@Z427VLS*/
         LA    @06,TPRVOL(,R7)                                     0989
         LA    @03,15                                              0989
         SLR   @15,@15                                             0989
         IC    @15,TPRBUFC(,R7)                                    0989
         NR    @03,@15                                             0989
         ALR   @06,@03                                             0989
         AL    @06,@CF01191                                        0989
         ICM   @03,15,TRENDTMP                                     0989
         SLR   @15,@15                                             0989
         ICM   @15,3,TPRS1213(@06)                                 0989
         ALR   @03,@15                                             0989
         SLR   @15,@15                                             0989
         ICM   @15,3,TPRS1415(@06)                                 0989
         ALR   @03,@15                                             0989
         SLR   @15,@15                                             0989
         IC    @15,TPRS19(,@06)                                    0989
         ALR   @03,@15                                             0989
         STCM  @03,15,TRENDTMP                                     0989
* ELSE                                                             0990
*  TRENDTMP = TRENDTMP + BYTE1112 + BYTE18 + BYTE21 + BYTE13;      0990
         B     @RC00988                                            0990
@RF00988 LA    @06,TPRVOL(,R7)                                     0990
         LA    @03,15                                              0990
         SLR   @15,@15                                             0990
         IC    @15,TPRBUFC(,R7)                                    0990
         NR    @03,@15                                             0990
         ALR   @06,@03                                             0990
         AL    @06,@CF00786                                        0990
         ICM   @03,15,TRENDTMP                                     0990
         SLR   @15,@15                                             0990
         ICM   @15,3,BYTE1112(@06)                                 0990
         ALR   @03,@15                                             0990
         SLR   @15,@15                                             0990
         IC    @15,BYTE18(,@06)                                    0990
         ALR   @03,@15                                             0990
         SLR   @15,@15                                             0990
         IC    @15,BYTE21(,@06)                                    0990
         ALR   @03,@15                                             0990
         SLR   @15,@15                                             0990
         IC    @15,BYTE13(,@06)                                    0990
         ALR   @03,@15                                             0990
         STCM  @03,15,TRENDTMP                                     0990
*                     BUG(34) = BUG(34) + 1;               /*@Z427VLS*/
@RC00988 LA    @06,1                                               0991
         L     @03,BUG+132                                         0991
         ALR   @03,@06                                             0991
         ST    @03,BUG+132                                         0991
*                     IF TRENDTMP   > ZERO THEN                    0992
         ICM   @03,15,TRENDTMP                                     0992
         BNP   @RF00992                                            0992
*                       DO;                                /*@Z427VLS*/
*                         BUG(35) = BUG(35) + 1;           /*@Z427VLS*/
         AL    @06,BUG+136                                         0994
         ST    @06,BUG+136                                         0994
*                         TRENDGRP  = TWO;               /*@Z427VLS*/
         MVI   TRENDGRP,X'02'                                      0995
*                         TRENDRT   = (TPRCUA & ONLYCUA2); /*@0099VLS*/
         MVC   TRENDRT(2),TPRCUA(R7)                               0996
         NC    TRENDRT(2),@CB00922                                 0996
*                         WORKCUA = (TPRCUA & ONLYCUA2);   /*@Z427VLS*/
         MVC   WORKCUA(2),TPRCUA(R7)                               0997
         NC    WORKCUA(2),@CB00922                                 0997
*                  LINKDEV = LINKDEV && LINKDEV;           /*@D35UGGB*/
         XC    LINKDEV(4),LINKDEV                                  0998
*                  CALL IFCDEVIC(14,TPRDEV,LINKDEV);       /*@D35UGGB*/
         MVC   @AL00001(12),@AL00999                               0999
         LA    @06,TPRDEV(,R7)                                     0999
         ST    @06,@AL00001+4                                      0999
         L     @15,@CV01429                                        0999
         LA    @01,@AL00001                                        0999
         BALR  @14,@15                                             0999
*                  TRENDDEV = DEVLABEL;                    /*@D35UGGB*/
         MVC   TRENDDEV(2),DEVLABEL                                1000
*                         CALL SETCPU;                     /*@Z427VLS*/
         BAL   @14,SETCPU                                          1001
*                         TRENDDAT  = TREIDX;            /*@Z427VLS*/
         IC    @06,TREIDX                                          1002
         STC   @06,TRENDDAT                                        1002
*                       END;                               /*@Z427VLS*/
*                     END;                                 /*@Z427VLS*/
*                   ELSE                                           1005
*                    IF TPRDEV = '40'X THEN                        1005
         B     @RC00986                                            1005
@RF00986 CLI   TPRDEV(R7),X'40'                                    1005
         BNE   @RF01005                                            1005
*                      DO WORKCUA = (TPRCUA & ONLYCUA2);   /*@D3503VS*/
         LA    @06,4095                                            1006
         LH    @03,TPRCUA(,R7)                                     1006
         N     @03,@CF01606                                        1006
         NR    @06,@03                                             1006
         STH   @06,WORKCUA                                         1006
*                        TRENDGRP = THREE;                 /*@D3503VS*/
         MVI   TRENDGRP,X'03'                                      1007
*                        TRENDTMP = TRENDTMP + TPRTMPR + TPRTMPW;  1008
         LA    @06,TPRVOL(,R7)                                     1008
         LA    @03,15                                              1008
         SLR   @15,@15                                             1008
         IC    @15,TPRBUFC(,R7)                                    1008
         NR    @03,@15                                             1008
         ALR   @06,@03                                             1008
         ICM   @03,15,TRENDTMP                                     1008
         SLR   @15,@15                                             1008
         IC    @15,TPRTMPR(,@06)                                   1008
         ALR   @03,@15                                             1008
         SLR   @15,@15                                             1008
         IC    @15,TPRTMPW(,@06)                                   1008
         ALR   @03,@15                                             1008
         STCM  @03,15,TRENDTMP                                     1008
*                        TRENDRT = WORKCUA;                /*@D3503VS*/
         MVC   TRENDRT(2),WORKCUA                                  1009
*                        TRENDDEV = '8809'X;               /*@D3503VS*/
         MVC   TRENDDEV(2),@CB01497                                1010
*                        CALL SETCPU;                      /*@D3503VS*/
         BAL   @14,SETCPU                                          1011
*                        TRENDDAT = TREIDX;                /*@D3503VS*/
         IC    @06,TREIDX                                          1012
         STC   @06,TRENDDAT                                        1012
*                       END;                               /*@D3503VS*/
*                   ELSE                                           1014
*                     BUG(31) = BUG(31) +1;                /*@Z427VLS*/
         B     @RC01005                                            1014
@RF01005 LA    @06,1                                               1014
         AL    @06,BUG+120                                         1014
         ST    @06,BUG+120                                         1014
*                 END;                                     /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
*       END;                                               /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;/*CLOSING END FOR MDRFILT PROC                          @Z427VLS*/
@EL00020 DS    0H                                                  1019
@EF00020 DS    0H                                                  1019
@ER00020 LM    @14,@12,@SA00020                                    1019
         BR    @14                                                 1019
*DDRFILT: PROC;                                            /*@Z427VLS*/
DDRFILT  STM   @14,@12,@SA00021                                    1020
*BUG(24) = BUG(24) + 1; /*DDRS IDENTIFIED                    @Z427VLS*/
         LA    @06,1                                               1021
         AL    @06,BUG+92                                          1021
         ST    @06,BUG+92                                          1021
*IF PDDR = OFF THEN                                                1022
         TM    PDDR(R2),B'00000100'                                1022
         BNZ   @RF01022                                            1022
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1023
*ELSE                                                              1024
*  DO;                                                     /*@Z427VLS*/
         B     @RC01022                                            1024
@RF01022 DS    0H                                                  1025
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    1025
         L     @06,CUAPTR(,R2)                                     1025
         LTR   @06,@06                                             1025
         BZ    @RF01025                                            1025
*      DO;                                                 /*@Z427VLS*/
*      WWCUA = DDRFCUA; /*GET FROM CUA FROM RECORD           @Z427VLS*/
         MVC   WWCUA(3),DDRFCUA(R7)                                1027
*      CALL CUASELCT; /*EXAMINE LIST OF VALID CUA RANGES     @Z427VLS*/
         BAL   @14,CUASELCT                                        1028
*      END;                                                /*@Z427VLS*/
*    IF PASSFLAG = YES THEN /*IF CUA ON LIST THEN            @Z427VLS*/
@RF01025 TM    PASSFLAG(R2),B'00000001'                            1030
         BNO   @RF01030                                            1030
*      DO;                                                 /*@Z427VLS*/
*        IF DEVPTR ^= ZERO THEN                                    1032
         L     @06,DEVPTR(,R2)                                     1032
         LTR   @06,@06                                             1032
         BZ    @RF01032                                            1032
*          DO;                                             /*@Z427VLS*/
*          WORKDEV = DDRCODE2;                             /*@Z427VLS*/
         MVC   WORKDEV(2),DDRCODE2(R7)                             1034
*          CALL DEVSEL;                                    /*@Z427VLS*/
         BAL   @14,DEVSEL                                          1035
*          END;                                            /*@Z427VLS*/
*        IF PASSFLAG = YES THEN                                    1037
@RF01032 TM    PASSFLAG(R2),B'00000001'                            1037
         BNO   @RF01037                                            1037
*          BUG(25) = BUG(25) + 1;                          /*@Z427VLS*/
         LA    @06,1                                               1038
         AL    @06,BUG+96                                          1038
         ST    @06,BUG+96                                          1038
*      END;                                                /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00021 DS    0H                                                  1041
@EF00021 DS    0H                                                  1041
@ER00021 LM    @14,@12,@SA00021                                    1041
         BR    @14                                                 1041
*MIHFILT: PROC;                                            /*@Z427VLS*/
MIHFILT  STM   @14,@12,@SA00022                                    1042
*BUG(26) = BUG(26) + 1; /*NUMBER OF MIH RECORDS IDENTIFIED   @Z427VLS*/
         LA    @06,1                                               1043
         AL    @06,BUG+100                                         1043
         ST    @06,BUG+100                                         1043
*IF PMIH = OFF THEN                                                1044
         TM    PMIH(R2),B'00000010'                                1044
         BNZ   @RF01044                                            1044
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1045
*ELSE                                                              1046
*  DO;                                                     /*@Z427VLS*/
         B     @RC01044                                            1046
@RF01044 DS    0H                                                  1047
*    IF CUAPTR ^= ZERO THEN                                        1047
         L     @06,CUAPTR(,R2)                                     1047
         LTR   @06,@06                                             1047
         BZ    @RF01047                                            1047
*      DO;                                                 /*@Z427VLS*/
*        WWCUA = MIHCUA;                                   /*@Z427VLS*/
         MVC   WWCUA(3),MIHCUA(R7)                                 1049
*        CALL CUASELCT;                                    /*@Z427VLS*/
         BAL   @14,CUASELCT                                        1050
*      END;                                                /*@Z427VLS*/
*    IF PASSFLAG = YES THEN                                        1052
@RF01047 TM    PASSFLAG(R2),B'00000001'                            1052
         BNO   @RF01052                                            1052
*      DO;                                                 /*@Z427VLS*/
*        IF DEVPTR ^= ZERO THEN /*IF DEVICE SELECTION SPECIFIED*/  1054
         L     @06,DEVPTR(,R2)                                     1054
         LTR   @06,@06                                             1054
         BZ    @RF01054                                            1054
*          DO;                                             /*@Z427VLS*/
*            WORKDEV = MIHCODE2;                           /*@Z427VLS*/
         MVC   WORKDEV(2),MIHCODE2(R7)                             1056
*            CALL DEVSEL; /*EXAMINE LIST OF VALID DEVICES    @Z427VLS*/
         BAL   @14,DEVSEL                                          1057
*           END;                                           /*@Z427VLS*/
*        IF PASSFLAG = YES THEN                                    1059
@RF01054 TM    PASSFLAG(R2),B'00000001'                            1059
         BNO   @RF01059                                            1059
*          BUG(27) = BUG(27) + 1;                          /*@Z427VLS*/
         LA    @06,1                                               1060
         AL    @06,BUG+104                                         1060
         ST    @06,BUG+104                                         1060
*       END;                                               /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00022 DS    0H                                                  1063
@EF00022 DS    0H                                                  1063
@ER00022 LM    @14,@12,@SA00022                                    1063
         BR    @14                                                 1063
*CCHFILT: PROC;                                            /*@Z427VLS*/
CCHFILT  STM   @14,@12,@SA00023                                    1064
*DCL  INDEX   FIXED(31);                                   /*@0099VLS*/
*BUG(18) = BUG(18) + 1; /*NUMBER OF CCH RECORDS IDENTIFIED   @Z427VLS*/
         LA    @06,1                                               1066
         AL    @06,BUG+68                                          1066
         ST    @06,BUG+68                                          1066
*IF PCHAN = OFF THEN                                               1067
         TM    PCHAN(R2),B'01000000'                               1067
         BNZ   @RF01067                                            1067
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1068
*ELSE                                                              1069
*  DO;                                                     /*@Z427VLS*/
         B     @RC01067                                            1069
@RF01067 DS    0H                                                  1070
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    1070
         L     @06,CUAPTR(,R2)                                     1070
         LTR   @06,@06                                             1070
         BZ    @RF01070                                            1070
*      DO;                                                 /*@Z427VLS*/
*        WWCUA2 = (WWCUA2 & ONLYCUA2);                     /*@Z427VLS*/
         NC    WWCUA2(2),@CB00922                                  1072
*        CALL CUASELCT;                                    /*@Z427VLS*/
         BAL   @14,CUASELCT                                        1073
*      END;                                                /*@Z427VLS*/
*        IF PASSFLAG = YES THEN                                    1075
@RF01070 TM    PASSFLAG(R2),B'00000001'                            1075
         BNO   @RF01075                                            1075
*          DO;                                             /*@Z427VLS*/
*            CALL TREADR;  /*ADDR CCH ENT REL TO  CPU SER   @ZA27824 */
         BAL   @14,TREADR                                          1077
*           IF CPU0FLG = OFF THEN                                  1078
         TM    CPU0FLG,B'00001000'                                 1078
         BNZ   @RF01078                                            1078
*            DO;                                           /*@Z427VLS*/
*    INDEX = CCHCUA;                                       /*@0099VLS*/
         SLR   @06,@06                                             1080
         ICM   @06,3,CCHCUA(R7)                                    1080
         ST    @06,INDEX                                           1080
*    SRL(INDEX,8);                                         /*@0001VLS*/
         SRL   @06,8                                               1081
         ST    @06,INDEX                                           1081
*    IF INDEX = 0 THEN                                             1082
         L     @06,INDEX                                           1082
         LTR   @06,@06                                             1082
         BNZ   @RF01082                                            1082
*       TRECCH0(TREIDX) = TRECCH0(TREIDX) + 1;             /*@G51DGVS*/
         SLR   @06,@06                                             1083
         IC    @06,TREIDX                                          1083
         MH    @06,@CH01385                                        1083
         L     @03,TRENPTR(,R2)                                    1083
         LA    @15,1                                               1083
         LA    @14,0(@06,@03)                                      1083
         AL    @14,@CF01619                                        1083
         AL    @15,TRECCH0-16(,@14)                                1083
         AL    @03,@CF01619                                        1083
         ST    @15,TRECCH0-16(@06,@03)                             1083
*    ELSE                                                          1084
*     IF INDEX = 1 THEN                                            1084
         B     @RC01082                                            1084
@RF01082 LA    @06,1                                               1084
         C     @06,INDEX                                           1084
         BNE   @RF01084                                            1084
*        TRECCH1(TREIDX) = TRECCH1(TREIDX) + 1;            /*@G51DGVS*/
         SLR   @03,@03                                             1085
         IC    @03,TREIDX                                          1085
         MH    @03,@CH01385                                        1085
         L     @15,TRENPTR(,R2)                                    1085
         LA    @01,0(@03,@15)                                      1085
         AL    @01,@CF01620                                        1085
         AL    @06,TRECCH1-20(,@01)                                1085
         AL    @15,@CF01620                                        1085
         ST    @06,TRECCH1-20(@03,@15)                             1085
*     ELSE                                                         1086
*      IF INDEX = 2 THEN                                           1086
         B     @RC01084                                            1086
@RF01084 CLC   INDEX(4),@CF00074                                   1086
         BNE   @RF01086                                            1086
*         TRECCH2(TREIDX) = TRECCH2(TREIDX) + 1;           /*@G51DGVS*/
         SLR   @06,@06                                             1087
         IC    @06,TREIDX                                          1087
         MH    @06,@CH01385                                        1087
         L     @03,TRENPTR(,R2)                                    1087
         LA    @15,1                                               1087
         LA    @14,0(@06,@03)                                      1087
         AL    @14,@CF01621                                        1087
         AL    @15,TRECCH2-24(,@14)                                1087
         AL    @03,@CF01621                                        1087
         ST    @15,TRECCH2-24(@06,@03)                             1087
*      ELSE                                                        1088
*       IF INDEX = 3 THEN                                          1088
         B     @RC01086                                            1088
@RF01086 CLC   INDEX(4),@CF00076                                   1088
         BNE   @RF01088                                            1088
*          TRECCH3(TREIDX) = TRECCH3(TREIDX) + 1;          /*@G51DGVS*/
         SLR   @06,@06                                             1089
         IC    @06,TREIDX                                          1089
         MH    @06,@CH01385                                        1089
         L     @03,TRENPTR(,R2)                                    1089
         LA    @15,1                                               1089
         LA    @14,0(@06,@03)                                      1089
         AL    @14,@CF01622                                        1089
         AL    @15,TRECCH3-28(,@14)                                1089
         AL    @03,@CF01622                                        1089
         ST    @15,TRECCH3-28(@06,@03)                             1089
*       ELSE                                                       1090
*        IF INDEX = 4 THEN                                         1090
         B     @RC01088                                            1090
@RF01088 CLC   INDEX(4),@CF00065                                   1090
         BNE   @RF01090                                            1090
*           TRECCH4(TREIDX) = TRECCH4(TREIDX) + 1;         /*@G51DGVS*/
         SLR   @06,@06                                             1091
         IC    @06,TREIDX                                          1091
         MH    @06,@CH01385                                        1091
         L     @03,TRENPTR(,R2)                                    1091
         LA    @15,1                                               1091
         LA    @14,0(@06,@03)                                      1091
         AL    @14,@CF01623                                        1091
         AL    @15,TRECCH4-32(,@14)                                1091
         AL    @03,@CF01623                                        1091
         ST    @15,TRECCH4-32(@06,@03)                             1091
*        ELSE                                                      1092
*         IF INDEX = 5 THEN                                        1092
         B     @RC01090                                            1092
@RF01090 CLC   INDEX(4),@CF00079                                   1092
         BNE   @RF01092                                            1092
*            TRECCH5(TREIDX) = TRECCH5(TREIDX) + 1;        /*@G51DGVS*/
         SLR   @06,@06                                             1093
         IC    @06,TREIDX                                          1093
         MH    @06,@CH01385                                        1093
         L     @03,TRENPTR(,R2)                                    1093
         LA    @15,1                                               1093
         LA    @14,0(@06,@03)                                      1093
         AL    @14,@CF01624                                        1093
         AL    @15,TRECCH5-36(,@14)                                1093
         AL    @03,@CF01624                                        1093
         ST    @15,TRECCH5-36(@06,@03)                             1093
*         ELSE                                                     1094
*          IF INDEX = 6 THEN                                       1094
         B     @RC01092                                            1094
@RF01092 CLC   INDEX(4),@CF00081                                   1094
         BNE   @RF01094                                            1094
*             TRECCH6(TREIDX) = TRECCH6(TREIDX) + 1;       /*@G51DGVS*/
         SLR   @06,@06                                             1095
         IC    @06,TREIDX                                          1095
         MH    @06,@CH01385                                        1095
         L     @03,TRENPTR(,R2)                                    1095
         LA    @15,1                                               1095
         LA    @14,0(@06,@03)                                      1095
         AL    @14,@CF01625                                        1095
         AL    @15,TRECCH6-40(,@14)                                1095
         AL    @03,@CF01625                                        1095
         ST    @15,TRECCH6-40(@06,@03)                             1095
*          ELSE                                                    1096
*           IF INDEX = 7 THEN                                      1096
         B     @RC01094                                            1096
@RF01094 CLC   INDEX(4),@CF00083                                   1096
         BNE   @RF01096                                            1096
*              TRECCH7(TREIDX) = TRECCH7(TREIDX) + 1;      /*@G51DGVS*/
         SLR   @06,@06                                             1097
         IC    @06,TREIDX                                          1097
         MH    @06,@CH01385                                        1097
         L     @03,TRENPTR(,R2)                                    1097
         LA    @15,1                                               1097
         LA    @14,0(@06,@03)                                      1097
         AL    @14,@CF01626                                        1097
         AL    @15,TRECCH7-44(,@14)                                1097
         AL    @03,@CF01626                                        1097
         ST    @15,TRECCH7-44(@06,@03)                             1097
*           ELSE                                                   1098
*            IF INDEX = 8 THEN                                     1098
         B     @RC01096                                            1098
@RF01096 CLC   INDEX(4),@CF00036                                   1098
         BNE   @RF01098                                            1098
*               TRECCH8(TREIDX) = TRECCH8(TREIDX) + 1;     /*@G51DGVS*/
         SLR   @06,@06                                             1099
         IC    @06,TREIDX                                          1099
         MH    @06,@CH01385                                        1099
         L     @03,TRENPTR(,R2)                                    1099
         LA    @15,1                                               1099
         LA    @14,0(@06,@03)                                      1099
         AL    @14,@CF01627                                        1099
         AL    @15,TRECCH8-48(,@14)                                1099
         AL    @03,@CF01627                                        1099
         ST    @15,TRECCH8-48(@06,@03)                             1099
*            ELSE                                                  1100
*             IF INDEX = 9 THEN                                    1100
         B     @RC01098                                            1100
@RF01098 CLC   INDEX(4),@CF00035                                   1100
         BNE   @RF01100                                            1100
*                TRECCH9(TREIDX) = TRECCH9(TREIDX) + 1;    /*@G51DGVS*/
         SLR   @06,@06                                             1101
         IC    @06,TREIDX                                          1101
         MH    @06,@CH01385                                        1101
         L     @03,TRENPTR(,R2)                                    1101
         LA    @15,1                                               1101
         LA    @14,0(@06,@03)                                      1101
         AL    @14,@CF01628                                        1101
         AL    @15,TRECCH9-52(,@14)                                1101
         AL    @03,@CF01628                                        1101
         ST    @15,TRECCH9-52(@06,@03)                             1101
*             ELSE                                                 1102
*              IF INDEX = 10 THEN                                  1102
         B     @RC01100                                            1102
@RF01100 CLC   INDEX(4),@CF00034                                   1102
         BNE   @RF01102                                            1102
*                 TRECCHA(TREIDX) = TRECCHA(TREIDX) + 1;   /*@G51DGVS*/
         SLR   @06,@06                                             1103
         IC    @06,TREIDX                                          1103
         MH    @06,@CH01385                                        1103
         L     @03,TRENPTR(,R2)                                    1103
         LA    @15,1                                               1103
         LA    @14,0(@06,@03)                                      1103
         AL    @14,@CF01602                                        1103
         AL    @15,TRECCHA-56(,@14)                                1103
         AL    @03,@CF01602                                        1103
         ST    @15,TRECCHA-56(@06,@03)                             1103
*               IF INDEX = 11 THEN /*TO MANY IFS HAVE TO GO THIS WAY*/
@RF01102 DS    0H                                                  1104
@RC01100 DS    0H                                                  1104
@RC01098 DS    0H                                                  1104
@RC01096 DS    0H                                                  1104
@RC01094 DS    0H                                                  1104
@RC01092 DS    0H                                                  1104
@RC01090 DS    0H                                                  1104
@RC01088 DS    0H                                                  1104
@RC01086 DS    0H                                                  1104
@RC01084 DS    0H                                                  1104
@RC01082 CLC   INDEX(4),@CF00033                                   1104
         BNE   @RF01104                                            1104
*                  TRECCHB(TREIDX) = TRECCHB(TREIDX) + 1;  /*@G51DGVS*/
         SLR   @06,@06                                             1105
         IC    @06,TREIDX                                          1105
         MH    @06,@CH01385                                        1105
         L     @03,TRENPTR(,R2)                                    1105
         LA    @15,1                                               1105
         LA    @14,0(@06,@03)                                      1105
         AL    @14,@CF01629                                        1105
         AL    @15,TRECCHB-60(,@14)                                1105
         AL    @03,@CF01629                                        1105
         ST    @15,TRECCHB-60(@06,@03)                             1105
*               ELSE                                               1106
*                IF INDEX = 12 THEN                                1106
         B     @RC01104                                            1106
@RF01104 CLC   INDEX(4),@CF00032                                   1106
         BNE   @RF01106                                            1106
*                   TRECCHC(TREIDX) = TRECCHC(TREIDX) + 1; /*@G51DGVS*/
         SLR   @06,@06                                             1107
         IC    @06,TREIDX                                          1107
         MH    @06,@CH01385                                        1107
         L     @03,TRENPTR(,R2)                                    1107
         LA    @15,1                                               1107
         LA    @14,0(@06,@03)                                      1107
         AL    @14,@CF01630                                        1107
         AL    @15,TRECCHC-64(,@14)                                1107
         AL    @03,@CF01630                                        1107
         ST    @15,TRECCHC-64(@06,@03)                             1107
*                ELSE                                              1108
*                 IF INDEX = 13 THEN                               1108
         B     @RC01106                                            1108
@RF01106 CLC   INDEX(4),@CF01029                                   1108
         BNE   @RF01108                                            1108
*                    TRECCHD(TREIDX) = TRECCHD(TREIDX) + 1;/*@G51DGVS*/
         SLR   @06,@06                                             1109
         IC    @06,TREIDX                                          1109
         MH    @06,@CH01385                                        1109
         L     @03,TRENPTR(,R2)                                    1109
         LA    @15,1                                               1109
         LA    @14,0(@06,@03)                                      1109
         AL    @14,@CF01631                                        1109
         AL    @15,TRECCHD-68(,@14)                                1109
         AL    @03,@CF01631                                        1109
         ST    @15,TRECCHD-68(@06,@03)                             1109
*                 ELSE                                             1110
*                  IF INDEX = 14 THEN                              1110
         B     @RC01108                                            1110
@RF01108 CLC   INDEX(4),@CF00952                                   1110
         BNE   @RF01110                                            1110
*                     TRECCHE(TREIDX) = TRECCHE(TREIDX) + 1;       1111
         SLR   @06,@06                                             1111
         IC    @06,TREIDX                                          1111
         MH    @06,@CH01385                                        1111
         L     @03,TRENPTR(,R2)                                    1111
         LA    @15,1                                               1111
         LA    @14,0(@06,@03)                                      1111
         AL    @14,@CF01615                                        1111
         AL    @15,TRECCHE-72(,@14)                                1111
         AL    @03,@CF01615                                        1111
         ST    @15,TRECCHE-72(@06,@03)                             1111
*                  ELSE                                            1112
*          IF INDEX = 15 THEN                                      1112
         B     @RC01110                                            1112
@RF01110 CLC   INDEX(4),@CF00037                                   1112
         BNE   @RF01112                                            1112
*                      TRECCHF(TREIDX) = TRECCHF(TREIDX) + 1;      1113
         SLR   @06,@06                                             1113
         IC    @06,TREIDX                                          1113
         MH    @06,@CH01385                                        1113
         L     @03,TRENPTR(,R2)                                    1113
         LA    @15,1                                               1113
         AL    @15,TRECCHF-76(@06,@03)                             1113
         ST    @15,TRECCHF-76(@06,@03)                             1113
*            BUG(19) = BUG(19) + 1;                        /*@Z427VLS*/
@RF01112 DS    0H                                                  1114
@RC01110 DS    0H                                                  1114
@RC01108 DS    0H                                                  1114
@RC01106 DS    0H                                                  1114
@RC01104 LA    @06,1                                               1114
         L     @03,BUG+72                                          1114
         ALR   @03,@06                                             1114
         ST    @03,BUG+72                                          1114
*           IF FRAMEPTR ^= ZERO THEN /*IF FRAMETAB IS ALLOCATED*/  1115
         L     @03,FRAMEPTR(,R2)                                   1115
         LTR   @03,@03                                             1115
         BZ    @RF01115                                            1115
*            DO;                                           /*@G51DGBB*/
*           GETOUT = NO;                                   /*@G51DGBB*/
         NI    GETOUT,B'10111111'                                  1117
*            DO A = 1 BY 1 TO MRDNUMBR WHILE GETOUT = NO;  /*@G51DGBB*/
         ST    @06,A                                               1118
         B     @DE01118                                            1118
@DL01118 TM    GETOUT,B'01000000'                                  1118
         BNZ   @DC01118                                            1118
*              IF MODEL(A) = LRTMODEL THEN                         1119
         ALR   @06,@06                                             1119
         L     @03,MERDCPTR(,R2)                                   1119
         ALR   @03,@06                                             1119
         CLC   MODEL-2(2,@03),LRTMODEL(R7)                         1119
         BNE   @RF01119                                            1119
*                DO;                                       /*@G51DGBB*/
*                  CALL BUILDFTB; /*IF UNIQUE,BUILD FRAMTAB ENTRY*/
         BAL   @14,BUILDFTB                                        1121
*                  GETOUT = YES;  /*EXIT LOOP                @G51DGBB*/
         OI    GETOUT,B'01000000'                                  1122
*                END;                                      /*@G51DGBB*/
*            END;                                          /*@G51DGBB*/
@RF01119 LA    @06,1                                               1124
         AL    @06,A                                               1124
         ST    @06,A                                               1124
@DE01118 L     @03,MERDCPTR(,R2)                                   1124
         CH    @06,MRDNUMBR(,@03)                                  1124
         BNH   @DL01118                                            1124
@DC01118 DS    0H                                                  1125
*            END;                                          /*@G51DGBB*/
*            END;                                          /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00023 DS    0H                                                  1129
@EF00023 DS    0H                                                  1129
@ER00023 LM    @14,@12,@SA00023                                    1129
         BR    @14                                                 1129
*IPLFILT: PROC;                                            /*@Z427VLS*/
IPLFILT  STM   @14,@12,@SA00024                                    1130
*BUG(22) = BUG(22) + 1;                                    /*@Z427VLS*/
         LA    @06,1                                               1131
         AL    @06,BUG+84                                          1131
         ST    @06,BUG+84                                          1131
*IF PIPL = OFF THEN                                                1132
         TM    PIPL(R2),B'00001000'                                1132
         BNZ   @RF01132                                            1132
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1133
*ELSE                                                              1134
*  DO;                                                     /*@Z427VLS*/
         B     @RC01132                                            1134
@RF01132 DS    0H                                                  1135
*   CALL TREADR;  /*ADDRESS IPL ENT RELATING TO REC CPU SER @ZA27824 */
         BAL   @14,TREADR                                          1135
*   IF CPU0FLG = OFF THEN                                          1136
         TM    CPU0FLG,B'00001000'                                 1136
         BNZ   @RF01136                                            1136
*    DO;                                                   /*@Z427VLS*/
*    BUG(23) = BUG(23) + 1;                                /*@Z427VLS*/
         LA    @06,1                                               1138
         L     @03,BUG+88                                          1138
         ALR   @03,@06                                             1138
         ST    @03,BUG+88                                          1138
*    TREIPL(TREIDX) = TREIPL(TREIDX) + ONE; /*ADD TO MCH REC. COUNT*/
         SLR   @03,@03                                             1139
         IC    @03,TREIDX                                          1139
         MH    @03,@CH01385                                        1139
         L     @15,TRENPTR(,R2)                                    1139
         LA    @01,0(@03,@15)                                      1139
         AL    @01,@CF01601                                        1139
         AL    @06,TREIPL-8(,@01)                                  1139
         AL    @15,@CF01601                                        1139
         ST    @06,TREIPL-8(@03,@15)                               1139
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00024 DS    0H                                                  1142
@EF00024 DS    0H                                                  1142
@ER00024 LM    @14,@12,@SA00024                                    1142
         BR    @14                                                 1142
*EODFILT: PROC;                                            /*@Z427VLS*/
EODFILT  STM   @14,@12,12(@13)                                     1143
*BUG(28) = BUG(28) + 1;                                    /*@Z427VLS*/
         LA    @06,1                                               1144
         AL    @06,BUG+108                                         1144
         ST    @06,BUG+108                                         1144
*IF PEOD = OFF THEN                                                1145
         TM    PEOD(R2),B'00000001'                                1145
         BNZ   @RF01145                                            1145
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1146
*ELSE /*IF PASSED FILTERING                                  @Z427VLS*/
*  BUG(29) = BUG(29) + 1;                                  /*@Z427VLS*/
         B     @RC01145                                            1147
@RF01145 LA    @06,1                                               1147
         AL    @06,BUG+112                                         1147
         ST    @06,BUG+112                                         1147
*END;                                                      /*@Z427VLS*/
@EL00025 DS    0H                                                  1148
@EF00025 DS    0H                                                  1148
@ER00025 LM    @14,@12,12(@13)                                     1148
         BR    @14                                                 1148
*MCHFILT: PROC;                                            /*@Z427VLS*/
MCHFILT  STM   @14,@12,@SA00026                                    1149
*BUG(16) = BUG(16) + 1;                                    /*@Z427VLS*/
         LA    @06,1                                               1150
         AL    @06,BUG+60                                          1150
         ST    @06,BUG+60                                          1150
*IF PMCH = OFF THEN                                                1151
         TM    PMCH(R2),B'10000000'                                1151
         BNZ   @RF01151                                            1151
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1152
*ELSE                                                              1153
*  DO;                                                     /*@Z427VLS*/
         B     @RC01151                                            1153
@RF01151 DS    0H                                                  1154
*   CALL TREADR;  /*ADDRESS MCH ENT RELATING TO REC CPU SER @ZA27824 */
         BAL   @14,TREADR                                          1154
*   IF CPU0FLG = OFF THEN                                          1155
         TM    CPU0FLG,B'00001000'                                 1155
         BNZ   @RF01155                                            1155
*    DO;                                                   /*@Z427VLS*/
*    TREMCH(TREIDX) = TREMCH(TREIDX) + ONE; /*ADD 1 TO MCH REC. CNT*/
         SLR   @06,@06                                             1157
         IC    @06,TREIDX                                          1157
         MH    @06,@CH01385                                        1157
         L     @03,TRENPTR(,R2)                                    1157
         LA    @15,1                                               1157
         LA    @01,0(@06,@03)                                      1157
         AL    @01,@CF01632                                        1157
         L     @14,TREMCH-12(,@01)                                 1157
         ALR   @14,@15                                             1157
         AL    @03,@CF01632                                        1157
         ST    @14,TREMCH-12(@06,@03)                              1157
*    BUG(17) = BUG(17) + 1;                                /*@Z427VLS*/
         L     @06,BUG+64                                          1158
         ALR   @06,@15                                             1158
         ST    @06,BUG+64                                          1158
*IF FRAMEPTR ^= ZERO THEN /*IF FRAMETAB IS ALLOCATED         @G51DGBB*/
         L     @06,FRAMEPTR(,R2)                                   1159
         LTR   @06,@06                                             1159
         BZ    @RF01159                                            1159
*DO;                                                       /*@G51DGBB*/
*    GETOUT = NO;                                          /*@G51DGBB*/
         NI    GETOUT,B'10111111'                                  1161
*DO A = 1 BY 1 TO MRDNUMBR WHILE GETOUT = NO; /*LOOP THROUGH LIST OF */
         ST    @15,A                                               1162
         B     @DE01162                                            1162
@DL01162 TM    GETOUT,B'01000000'                                  1162
         BNZ   @DC01162                                            1162
*                                           /*MERIDIAN-LIKE CPUS   */
*  IF MODEL(A) = LRTMODEL THEN             /*IF MERIDIAN-LIKE CPU */
         ALR   @15,@15                                             1163
         L     @06,MERDCPTR(,R2)                                   1163
         ALR   @06,@15                                             1163
         CLC   MODEL-2(2,@06),LRTMODEL(R7)                         1163
         BNE   @RF01163                                            1163
*    DO;                                                   /*@G51DGBB*/
*      CALL BUILDFTB; /*SEE IF UNIQUE, BUILD FRAMTAB ENTRY IF IT IS */
         BAL   @14,BUILDFTB                                        1165
*      GETOUT = YES;  /*EXIT LOOP                            @G51DGBB*/
         OI    GETOUT,B'01000000'                                  1166
*    END;                                                  /*@G51DGBB*/
*END;                                                      /*@G51DGBB*/
@RF01163 LA    @15,1                                               1168
         AL    @15,A                                               1168
         ST    @15,A                                               1168
@DE01162 L     @06,MERDCPTR(,R2)                                   1168
         CH    @15,MRDNUMBR(,@06)                                  1168
         BNH   @DL01162                                            1168
@DC01162 DS    0H                                                  1169
*END;                                                      /*@G51DGBB*/
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00026 DS    0H                                                  1172
@EF00026 DS    0H                                                  1172
@ER00026 LM    @14,@12,@SA00026                                    1172
         BR    @14                                                 1172
*SOFTFILT: PROC;                                           /*@Z427VLS*/
SOFTFILT STM   @14,@12,@SA00027                                    1173
*BUG(20) = BUG(20) + 1;                                    /*@Z427VLS*/
         LA    @06,1                                               1174
         AL    @06,BUG+76                                          1174
         ST    @06,BUG+76                                          1174
*IF PSOFT = OFF THEN                                               1175
         TM    PSOFT(R2),B'00010000'                               1175
         BNZ   @RF01175                                            1175
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1176
*ELSE                                                              1177
*  DO;                                                     /*@Z427VLS*/
         B     @RC01175                                            1177
@RF01175 DS    0H                                                  1178
*   CALL TREADR;  /*ADDRESS SOFT ENT RELATING TO REC CPU SER @ZA27824*/
         BAL   @14,TREADR                                          1178
*   IF CPU0FLG = OFF THEN                                          1179
         TM    CPU0FLG,B'00001000'                                 1179
         BNZ   @RF01179                                            1179
*    DO;                                                   /*@Z427VLS*/
*    TREPRE(TREIDX) = TREPRE(TREIDX) + ONE; /*ADD 1 TO SOFT REC. CT */
         SLR   @06,@06                                             1181
         IC    @06,TREIDX                                          1181
         MH    @06,@CH01385                                        1181
         L     @03,TRENPTR(,R2)                                    1181
         LA    @15,1                                               1181
         L     @14,TREPRE-76(@06,@03)                              1181
         ALR   @14,@15                                             1181
         ST    @14,TREPRE-76(@06,@03)                              1181
*    BUG(21) = BUG(21) + 1;                                /*@Z427VLS*/
         AL    @15,BUG+80                                          1182
         ST    @15,BUG+80                                          1182
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00027 DS    0H                                                  1185
@EF00027 DS    0H                                                  1185
@ER00027 LM    @14,@12,@SA00027                                    1185
         BR    @14                                                 1185
*DEVSEL: PROC;                                             /*@Z427VLS*/
DEVSEL   STM   @14,@12,12(@13)                                     1186
*IF WORKTYPE = HEX90 THEN                                          1187
         CLI   WORKTYPE,X'90'                                      1187
         BNE   @RF01187                                            1187
*  DO;                                                     /*@Z427VLS*/
*    IF DEVEXCL = ON THEN                                          1189
         TM    DEVEXCL(R2),B'00100000'                             1189
         BNO   @RF01189                                            1189
*      DO;                                                 /*@Z427VLS*/
*        DEVOK = YES;                                      /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1191
*        DO J = 1 BY 1 TO MDRNUM WHILE DEVOK = YES;        /*@Z427VLS*/
         LA    @06,1                                               1192
         ST    @06,J                                               1192
         B     @DE01192                                            1192
@DL01192 TM    DEVOK,B'00100000'                                   1192
         BNO   @DC01192                                            1192
*        IF TPRDEV = MDRVAL(J) THEN                                1193
         L     @03,DEVPTR(,R2)                                     1193
         ALR   @03,@06                                             1193
         CLC   TPRDEV(1,R7),MDRVAL-1(@03)                          1193
         BNE   @RF01193                                            1193
*          DO;                                             /*@Z427VLS*/
*            DEVOK = NO;                                   /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1195
*            PASSFLAG = NO;                                /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1196
*            BUG(32) = BUG(32) + 1;                        /*@Z427VLS*/
         LA    @06,1                                               1197
         AL    @06,BUG+124                                         1197
         ST    @06,BUG+124                                         1197
*          END;                                            /*@Z427VLS*/
*        END;                                              /*@Z427VLS*/
@RF01193 LA    @06,1                                               1199
         AL    @06,J                                               1199
         ST    @06,J                                               1199
@DE01192 L     @03,DEVPTR(,R2)                                     1199
         CH    @06,MDRNUM(,@03)                                    1199
         BNH   @DL01192                                            1199
@DC01192 DS    0H                                                  1200
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          1201
*      DO;                                                 /*@Z427VLS*/
         B     @RC01189                                            1201
@RF01189 DS    0H                                                  1202
*        DEVOK = NO;                                       /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1202
*        DO J = 1 BY 1 TO MDRNUM WHILE DEVOK = NO;         /*@Z427VLS*/
         LA    @06,1                                               1203
         ST    @06,J                                               1203
         B     @DE01203                                            1203
@DL01203 TM    DEVOK,B'00100000'                                   1203
         BNZ   @DC01203                                            1203
*        IF TPRDEV = MDRVAL(J) THEN                                1204
         L     @03,DEVPTR(,R2)                                     1204
         ALR   @03,@06                                             1204
         CLC   TPRDEV(1,R7),MDRVAL-1(@03)                          1204
         BNE   @RF01204                                            1204
*          DEVOK = YES;                                    /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1205
*        END;                                              /*@Z427VLS*/
@RF01204 LA    @06,1                                               1206
         AL    @06,J                                               1206
         ST    @06,J                                               1206
@DE01203 L     @03,DEVPTR(,R2)                                     1206
         CH    @06,MDRNUM(,@03)                                    1206
         BNH   @DL01203                                            1206
@DC01203 DS    0H                                                  1207
*        IF DEVOK = NO THEN                                        1207
         TM    DEVOK,B'00100000'                                   1207
         BNZ   @RF01207                                            1207
*          DO;                                             /*@Z427VLS*/
*            PASSFLAG = NO;                                /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1209
*            BUG(32) = BUG(32) + 1;                        /*@Z427VLS*/
         LA    @06,1                                               1210
         AL    @06,BUG+124                                         1210
         ST    @06,BUG+124                                         1210
*          END;                                            /*@Z427VLS*/
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*  ELSE                                                            1214
*    IF DEVEXCL = ON THEN                                          1214
         B     @RC01187                                            1214
@RF01187 TM    DEVEXCL(R2),B'00100000'                             1214
         BNO   @RF01214                                            1214
*      DO;                                                 /*@Z427VLS*/
*        DEVOK = YES;                                      /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1216
*        DO J = 1 BY 1 TO DEVNUM WHILE DEVOK = YES;        /*@Z427VLS*/
         LA    @06,1                                               1217
         ST    @06,J                                               1217
         B     @DE01217                                            1217
@DL01217 TM    DEVOK,B'00100000'                                   1217
         BNO   @DC01217                                            1217
*          IF WORKDEV = DEVVAL(J) THEN                             1218
         ALR   @06,@06                                             1218
         L     @03,DEVPTR(,R2)                                     1218
         ALR   @03,@06                                             1218
         CLC   WORKDEV(2),DEVVAL-2(@03)                            1218
         BNE   @RF01218                                            1218
*            DO;                                           /*@Z427VLS*/
*              DEVOK = NO;                                 /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1220
*              PASSFLAG = NO;                              /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1221
*              BUG(32) = BUG(32) + 1;                      /*@Z427VLS*/
         LA    @06,1                                               1222
         AL    @06,BUG+124                                         1222
         ST    @06,BUG+124                                         1222
*            END;                                          /*@Z427VLS*/
*        END;                                              /*@Z427VLS*/
@RF01218 LA    @06,1                                               1224
         AL    @06,J                                               1224
         ST    @06,J                                               1224
@DE01217 L     @03,DEVPTR(,R2)                                     1224
         CH    @06,DEVNUM(,@03)                                    1224
         BNH   @DL01217                                            1224
@DC01217 DS    0H                                                  1225
*      END;                                                /*@Z427VLS*/
*  ELSE                                                            1226
*   DO;                                                    /*@Z427VLS*/
         B     @RC01214                                            1226
@RF01214 DS    0H                                                  1227
*     DEVOK = NO;                                          /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1227
*     DO J =  1 BY 1 TO DEVNUM WHILE DEVOK = NO;           /*@Z427VLS*/
         LA    @06,1                                               1228
         ST    @06,J                                               1228
         B     @DE01228                                            1228
@DL01228 TM    DEVOK,B'00100000'                                   1228
         BNZ   @DC01228                                            1228
*       IF WORKDEV = DEVVAL(J) THEN                                1229
         ALR   @06,@06                                             1229
         L     @03,DEVPTR(,R2)                                     1229
         ALR   @03,@06                                             1229
         CLC   WORKDEV(2),DEVVAL-2(@03)                            1229
         BNE   @RF01229                                            1229
*         DEVOK = YES;                                     /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1230
*     END;                                                 /*@Z427VLS*/
@RF01229 LA    @06,1                                               1231
         AL    @06,J                                               1231
         ST    @06,J                                               1231
@DE01228 L     @03,DEVPTR(,R2)                                     1231
         CH    @06,DEVNUM(,@03)                                    1231
         BNH   @DL01228                                            1231
@DC01228 DS    0H                                                  1232
*     IF DEVOK = NO THEN                                           1232
         TM    DEVOK,B'00100000'                                   1232
         BNZ   @RF01232                                            1232
*       DO;                                                /*@Z427VLS*/
*         PASSFLAG = OFF;                                  /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1234
*         BUG(32) = BUG(32) + 1;                           /*@Z427VLS*/
         LA    @06,1                                               1235
         AL    @06,BUG+124                                         1235
         ST    @06,BUG+124                                         1235
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00028 DS    0H                                                  1238
@EF00028 DS    0H                                                  1238
@ER00028 LM    @14,@12,12(@13)                                     1238
         BR    @14                                                 1238
*CUASELCT: PROC; /*CHECK RECORD CUA AGAINST LIST OF VALID CUAS*/   1239
CUASELCT STM   @14,@12,12(@13)                                     1239
*CUAOK = NO;                                               /*@Z427VLS*/
         NI    CUAOK,B'11101111'                                   1240
*DO M = 1 BY 1 TO CUANUM WHILE CUAOK = NO;                 /*@Z427VLS*/
         LA    @06,1                                               1241
         ST    @06,M                                               1241
         B     @DE01241                                            1241
@DL01241 TM    CUAOK,B'00010000'                                   1241
         BNZ   @DC01241                                            1241
*  IF WWCUA2 >= CUA1(M) & WWCUA2 <= CUA2(M) THEN                   1242
         SLA   @06,2                                               1242
         L     @03,CUAPTR(,R2)                                     1242
         ST    @06,@TF00001                                        1242
         ALR   @06,@03                                             1242
         BCTR  @06,0                                               1242
         BCTR  @06,0                                               1242
         CLC   WWCUA2(2),CUA1-2(@06)                               1242
         BL    @RF01242                                            1242
         AL    @03,@TF00001                                        1242
         CLC   WWCUA2(2),CUA2-4(@03)                               1242
         BH    @RF01242                                            1242
*    CUAOK = YES;                                          /*@Z427VLS*/
         OI    CUAOK,B'00010000'                                   1243
*END;                                                      /*@Z427VLS*/
@RF01242 LA    @06,1                                               1244
         AL    @06,M                                               1244
         ST    @06,M                                               1244
@DE01241 L     @03,CUAPTR(,R2)                                     1244
         CH    @06,CUANUM(,@03)                                    1244
         BNH   @DL01241                                            1244
@DC01241 DS    0H                                                  1245
*IF CUAOK = NO THEN                                                1245
         TM    CUAOK,B'00010000'                                   1245
         BNZ   @RF01245                                            1245
*  DO;                                                     /*@Z427VLS*/
*    PASSFLAG = NO;                                        /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1247
*    BUG(33) = BUG(33) + 1;                                /*@Z427VLS*/
         LA    @06,1                                               1248
         AL    @06,BUG+128                                         1248
         ST    @06,BUG+128                                         1248
*  END;                                                    /*@Z427VLS*/
*END; /*CLOSING END OF PROC CUASELCT                         @Z427VLS*/
@EL00029 DS    0H                                                  1250
@EF00029 DS    0H                                                  1250
@ER00029 LM    @14,@12,12(@13)                                     1250
         BR    @14                                                 1250
*ERRMSG: PROC;                                             /*@Z427VLS*/
ERRMSG   STM   @14,@12,@SA00030                                    1251
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @06,PRINTLIN                                        1252
         ST    @06,PRINTADR(,R2)                                   1252
*IF MSGNO=1  ×                                           /* @XA19728 */
*   MSGNO=2  THEN                                        /* @XA19728 */
         CLI   MSGNO,1                                             1253
         BE    @RT01253                                            1253
         CLI   MSGNO,2                                             1253
         BNE   @RF01253                                            1253
@RT01253 DS    0H                                                  1254
*  DO;                                                     /*@GZZDGVS*/
*    ZEROALL=NO;         /* DONT RESET LOGREC HEADER OF ALL  @GZZDGVS*/
         NI    ZEROALL(R2),B'10111111'                             1255
*                        /* RECORDS NOT PROCESSED           @XA19728 */
*    CALL IFCMSG(55,ADDR(PRINTBDY));  /*GET FAILED SORT TBL @Z427VLS */
         LA    @06,PRINTBDY                                        1256
         ST    @06,@AFTEMPS+4                                      1256
         L     @15,ADIFCMSG(,R2)                                   1256
         LA    @01,@AL01256                                        1256
         BALR  @14,@15                                             1256
*  END;                                                    /*@GZZDGVS*/
*IF MSGNO = 3 THEN                                                 1258
@RF01253 CLI   MSGNO,3                                             1258
         BNE   @RF01258                                            1258
*   CALL IFCMSG(53,ADDR(PRINTBDY));                        /*@Z427VLS*/
         LA    @06,PRINTBDY                                        1259
         ST    @06,@AFTEMPS+4                                      1259
         L     @15,ADIFCMSG(,R2)                                   1259
         LA    @01,@AL01259                                        1259
         BALR  @14,@15                                             1259
*IF MSGNO = 6 THEN                                                 1260
@RF01258 CLI   MSGNO,6                                             1260
         BNE   @RF01260                                            1260
*  DO;                                                     /*@Z427VLS*/
*    CALL IFCMSG(73,ADDR(PRINTBDY));                       /*@Z427VLS*/
         LA    @06,PRINTBDY                                        1262
         ST    @06,@AFTEMPS+4                                      1262
         L     @15,ADIFCMSG(,R2)                                   1262
         LA    @01,@AL01262                                        1262
         BALR  @14,@15                                             1262
*    ER3 = EVSERIAL(K);                                    /*@Z427VLS*/
         L     @06,K                                               1263
         MH    @06,@CH00081                                        1263
         L     @03,EVPTR(,R2)                                      1263
         ALR   @03,@06                                             1263
         MVC   ER3(3),EVSERIAL-6(@03)                              1263
*    SLL(ERSER,4); /*SHIFT SERIAL IN ORDER TO ADD PACKED SIGN*/    1264
         L     @06,ERSER                                           1264
         SLL   @06,4                                               1264
         ST    @06,ERSER                                           1264
*    ER3 = (ER3 × '00000F'X);   /*ADD SIGN FOR PROPER UNPACKING*/  1265
         OC    ER3(3),@CB00228                                     1265
*    UNPK(PRNTSER,ERSER);                                  /*@Z427VLS*/
         UNPK  PRNTSER(7),ERSER(4)                                 1266
*  END;                                                    /*@Z427VLS*/
*IF MSGNO = FIVE THEN                                              1268
@RF01260 CLI   MSGNO,5                                             1268
         BNE   @RF01268                                            1268
*  CALL IFCMSG(72,ADDR(PRINTBDY));                         /*@Z427VLS*/
         LA    @06,PRINTBDY                                        1269
         ST    @06,@AFTEMPS+4                                      1269
         L     @15,ADIFCMSG(,R2)                                   1269
         LA    @01,@AL01269                                        1269
         BALR  @14,@15                                             1269
*IF MSGNO = 78 THEN                                                1270
@RF01268 CLI   MSGNO,78                                            1270
         BNE   @RF01270                                            1270
* DO;                                                      /*@G51DGBB*/
*   CALL IFCMSG(78,ADDR(PRINTBDY));                        /*@G51DGBB*/
         LA    @06,PRINTBDY                                        1272
         ST    @06,@AFTEMPS+4                                      1272
         L     @15,ADIFCMSG(,R2)                                   1272
         LA    @01,@AL01272                                        1272
         BALR  @14,@15                                             1272
*   NUMBER = 3;                                            /*@G51DGBB*/
         MVC   NUMBER(4),@CF00076                                  1273
*   ADDNXT = ADDR(PFRAMSER);                               /*@G51DGBB*/
         LA    @06,PFRAMSER                                        1274
         ST    @06,ADDNXT                                          1274
*   NEXTBY = ADDR(FRAMESER(CCHINDX));                      /*@G51DGBB*/
         L     @06,CCHINDX                                         1275
         MH    @06,@CH00227                                        1275
         L     @03,FRAMEPTR(,R2)                                   1275
         AL    @03,@CF01602                                        1275
         LA    @06,FRAMESER-4(@06,@03)                             1275
         ST    @06,NEXTBY                                          1275
*   CALL CONVERT;                                          /*@G51DGBB*/
         BAL   @14,CONVERT                                         1276
*   NUMBER = 2;                                            /*@G51DGBB*/
         MVC   NUMBER(4),@CF00074                                  1277
*   ADDNXT = ADDR(PFRAMMOD);                               /*@G51DGBB*/
         LA    @06,PFRAMMOD                                        1278
         ST    @06,ADDNXT                                          1278
*   NEXTBY = ADDR(FRAMEMOD(CCHINDX));                      /*@G51DGBB*/
         L     @06,CCHINDX                                         1279
         MH    @06,@CH00227                                        1279
         L     @03,FRAMEPTR(,R2)                                   1279
         AL    @03,@CF01635                                        1279
         LA    @06,FRAMEMOD-7(@06,@03)                             1279
         ST    @06,NEXTBY                                          1279
*   CALL CONVERT;                                          /*@G51DGBB*/
         BAL   @14,CONVERT                                         1280
* END;                                                     /*@G51DGBB*/
*IF MSGNO = 79  &   /*IF MISSING FRAME SET MESSAGE           @G51DGBB*/
*   DEBUG16 = ON THEN  /*IF DEBUG16 ERROR MESSAGES TO BE PRINTED*/ 1282
@RF01270 CLI   MSGNO,79                                            1282
         BNE   @RF01282                                            1282
         TM    DEBUG16(R2),B'10000000'                             1282
         BNO   @RF01282                                            1282
*  DO;                                                     /*@G51DGBB*/
*    NUMBER = 3;                                           /*@G51DGBB*/
         MVC   NUMBER(4),@CF00076                                  1284
*    ADDNXT = ADDR(PARSER);                                /*@G51DGBB*/
         LA    @06,PARSER                                          1285
         ST    @06,ADDNXT                                          1285
*    NEXTBY = ADDR(FRAMESER(CCHINDX));                     /*@G51DGBB*/
         L     @06,CCHINDX                                         1286
         MH    @06,@CH00227                                        1286
         L     @03,FRAMEPTR(,R2)                                   1286
         AL    @03,@CF01602                                        1286
         LA    @06,FRAMESER-4(@06,@03)                             1286
         ST    @06,NEXTBY                                          1286
*    CALL CONVERT;                                         /*@G51DGBB*/
         BAL   @14,CONVERT                                         1287
*    NUMBER = 2;                                           /*@G51DGBB*/
         MVC   NUMBER(4),@CF00074                                  1288
*    ADDNXT = ADDR(PARMOD);                                /*@G51DGBB*/
         LA    @06,PARMOD                                          1289
         ST    @06,ADDNXT                                          1289
*    NEXTBY = ADDR(FRAMEMOD(CCHINDX));                     /*@G51DGBB*/
         L     @06,CCHINDX                                         1290
         MH    @06,@CH00227                                        1290
         L     @03,FRAMEPTR(,R2)                                   1290
         AL    @03,@CF01635                                        1290
         LA    @06,FRAMEMOD-7(@06,@03)                             1290
         ST    @06,NEXTBY                                          1290
*    CALL CONVERT;                                         /*@G51DGBB*/
         BAL   @14,CONVERT                                         1291
*    NUMBER = 1;                                           /*@G51DGBB*/
         MVC   NUMBER(4),@CF00056                                  1292
*    ADDNXT = ADDR(PARREP);                                /*@G51DGBB*/
         LA    @06,PARREP                                          1293
         ST    @06,ADDNXT                                          1293
*    NEXTBY = ADDR(FRAMETYP(CCHINDX));                     /*@G51DGBB*/
         L     @06,CCHINDX                                         1294
         MH    @06,@CH00227                                        1294
         L     @03,FRAMEPTR(,R2)                                   1294
         AL    @03,@CF01614                                        1294
         LA    @06,FRAMETYP-17(@06,@03)                            1294
         ST    @06,NEXTBY                                          1294
*    CALL CONVERT;                                         /*@G51DGBB*/
         BAL   @14,CONVERT                                         1295
*    PRINTBDY(1:58) = PARTIAL;                             /*@G51DGBB*/
         MVC   PRINTBDY(58),PARTIAL                                1296
*  END;                                                    /*@G51DGBB*/
*IF MSGNO = 40 THEN                                                1298
@RF01282 CLI   MSGNO,40                                            1298
         BNE   @RF01298                                            1298
* CALL IFCMSG(40,ADDR(PRINTBDY));                          /*@G51DGBB*/
         LA    @06,PRINTBDY                                        1299
         ST    @06,@AFTEMPS+4                                      1299
         L     @15,ADIFCMSG(,R2)                                   1299
         LA    @01,@AL01299                                        1299
         BALR  @14,@15                                             1299
*IF MSGNO = 24 THEN                                                1300
@RF01298 CLI   MSGNO,24                                            1300
         BNE   @RF01300                                            1300
* CALL IFCMSG(24,ADDR(PRINTBDY));                          /*@G51DGBB*/
         LA    @06,PRINTBDY                                        1301
         ST    @06,@AFTEMPS+4                                      1301
         L     @15,ADIFCMSG(,R2)                                   1301
         LA    @01,@AL01301                                        1301
         BALR  @14,@15                                             1301
*CALL IOHND(RITEPRTR); /*CALL IFCIOHND TO WRITE TO TOURIST D.S.*/  1302
@RF01300 L     @15,ADIOHND(,R2)                                    1302
         LA    @01,@AL01302                                        1302
         BALR  @14,@15                                             1302
*END;  /*CLOSING END FOR PROC ERRMSG                         @Z427VLS*/
@EL00030 DS    0H                                                  1303
@EF00030 DS    0H                                                  1303
@ER00030 LM    @14,@12,@SA00030                                    1303
         BR    @14                                                 1303
*SORTSHAR: PROC;        /* SORT SHARE TABLE CPU BY LETTER  @ZA17692 */
SORTSHAR STM   @14,@12,12(@13)                                     1304
*  DO J=1 BY 1 TO SHARENUM-1;                           /* @ZA17692 */
         LA    @06,1                                               1305
         ST    @06,J                                               1305
         B     @DE01305                                            1305
@DL01305 DS    0H                                                  1306
*    DO K= J+1 BY 1 TO SHARENUM;                        /* @ZA17692 */
         AL    @06,@CF00056                                        1306
         ST    @06,K                                               1306
         B     @DE01306                                            1306
@DL01306 DS    0H                                                  1307
*      IF SHARLET(J) > SHARLET(K)  THEN                 /* @ZA17692 */
         L     @03,J                                               1307
         SLA   @03,4                                               1307
         L     @15,SHAREPTR(,R2)                                   1307
         SLA   @06,4                                               1307
         ST    @03,@TF00001                                        1307
         ALR   @03,@15                                             1307
         ST    @06,@TF00002                                        1307
         ALR   @06,@15                                             1307
         CLC   SHARLET-16(1,@03),SHARLET-16(@06)                   1307
         BNH   @RF01307                                            1307
*        DO;                                            /* @ZA17692 */
*          SHAREIO(J)=(SHAREIO(J)&&SHAREIO(K));         /* @ZA17692 */
         LR    @06,@15                                             1309
         AL    @06,@TF00001                                        1309
         AL    @06,@CF01375                                        1309
         LR    @03,@15                                             1309
         AL    @03,@TF00001                                        1309
         AL    @03,@CF01375                                        1309
         MVC   @TS00001(16),SHAREIO-2(@03)                         1309
         LR    @03,@15                                             1309
         AL    @03,@TF00002                                        1309
         AL    @03,@CF01375                                        1309
         XC    @TS00001(16),SHAREIO-2(@03)                         1309
         MVC   SHAREIO-2(16,@06),@TS00001                          1309
*          SHAREIO(K)=(SHAREIO(K)&&SHAREIO(J));         /* @ZA17692 */
         LR    @06,@15                                             1310
         AL    @06,@TF00002                                        1310
         AL    @06,@CF01375                                        1310
         LR    @03,@15                                             1310
         AL    @03,@TF00002                                        1310
         AL    @03,@CF01375                                        1310
         MVC   @TS00001(16),SHAREIO-2(@03)                         1310
         LR    @03,@15                                             1310
         AL    @03,@TF00001                                        1310
         AL    @03,@CF01375                                        1310
         XC    @TS00001(16),SHAREIO-2(@03)                         1310
         MVC   SHAREIO-2(16,@06),@TS00001                          1310
*          SHAREIO(J)=(SHAREIO(J)&&SHAREIO(K));         /* @ZA17692 */
         LR    @06,@15                                             1311
         AL    @06,@TF00001                                        1311
         AL    @06,@CF01375                                        1311
         LR    @03,@15                                             1311
         AL    @03,@TF00001                                        1311
         AL    @03,@CF01375                                        1311
         MVC   @TS00001(16),SHAREIO-2(@03)                         1311
         AL    @15,@TF00002                                        1311
         AL    @15,@CF01375                                        1311
         XC    @TS00001(16),SHAREIO-2(@15)                         1311
         MVC   SHAREIO-2(16,@06),@TS00001                          1311
*        END;                                           /* @ZA17692 */
*     END;                                              /* @ZA17692 */
@RF01307 LA    @06,1                                               1313
         AL    @06,K                                               1313
         ST    @06,K                                               1313
@DE01306 L     @03,SHAREPTR(,R2)                                   1313
         CH    @06,SHARENUM(,@03)                                  1313
         BNH   @DL01306                                            1313
*  END;                                                 /* @ZA17692 */
         LA    @06,1                                               1314
         AL    @06,J                                               1314
         ST    @06,J                                               1314
@DE01305 L     @03,SHAREPTR(,R2)                                   1314
         LH    @03,SHARENUM(,@03)                                  1314
         BCTR  @03,0                                               1314
         CR    @06,@03                                             1314
         BNH   @DL01305                                            1314
*END;                       /*  CLOSING END FOR SORTSHAR   @ZA17692 */
@EL00031 DS    0H                                                  1315
@EF00031 DS    0H                                                  1315
@ER00031 LM    @14,@12,12(@13)                                     1315
         BR    @14                                                 1315
*BUGCNTS: PROC;                                            /*@Z427VLS*/
BUGCNTS  STM   @14,@12,@SA00032                                    1316
*/*PRINT COUNTS OF RECORDS PROCESSED IF DEBUG16 IS ON        @Z427VLS*/
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @06,PRINTLIN                                        1317
         ST    @06,PRINTADR(,R2)                                   1317
*M = 46; /*DONT SET ERRLINE EXPLICITLY OR COMPILER WILL CHOKE*/    1318
         LA    @06,46                                              1318
         ST    @06,M                                               1318
*BUG(43) = SORTNUM;                                        /*@D3506GB*/
         L     @03,SORTNUM(,R2)                                    1319
         ST    @03,BUG+168                                         1319
*PRINTLIN = ERRLINE(M);  /*PLACE DEBUG COUNTS HEADER MESSAGE IN PRINT*/
         MVI   PRINTLIN+73,C' '                                    1320
         MVC   PRINTLIN+74(60),PRINTLIN+73                         1320
         MH    @06,@CH01536                                        1320
         LA    @03,ERRLINE-73(@06)                                 1320
         MVC   PRINTLIN(73),0(@03)                                 1320
*CALL IOHND(RITEPRTR);                                     /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    1321
         LA    @01,@AL01321                                        1321
         BALR  @14,@15                                             1321
* DO M = 1 BY 1 TO 44;   /*PRINT ALL DEBUG COUNTS            @G51DGBB*/
         LA    @06,1                                               1322
         ST    @06,M                                               1322
@DL01322 DS    0H                                                  1323
*  NUMREC = BUG(M);                                        /*@Z427VLS*/
         SLA   @06,2                                               1323
         L     @06,BUG-4(@06)                                      1323
         ST    @06,NUMREC                                          1323
*  CVD(NUMREC,PACKPAS);                                    /*@Z427VLS*/
         CVD   @06,@TS00001                                        1324
         MVC   PACKPAS(4),@TS00001+4                               1324
*  PACKPAS = (PACKPAS × '0000000F'X);                      /*@Z427VLS*/
         OC    PACKPAS(4),@CB01458                                 1325
*  UNPK(EDFLD,PACKPAS);                                    /*@Z427VLS*/
         UNPK  EDFLD(9),PACKPAS(4)                                 1326
*  NONBLANK = OFF;                                         /*@Z427VLS*/
         NI    NONBLANK,B'10111111'                                1327
*  DO L = 1 BY 1 TO 8 WHILE NONBLANK = OFF;                /*@Z427VLS*/
         LA    @06,1                                               1328
         ST    @06,L                                               1328
@DL01328 TM    NONBLANK,B'01000000'                                1328
         BNZ   @DC01328                                            1328
*    IF EDIFILD(L) = CHARZERO THEN                                 1329
         LA    @03,EDIFILD-1(@06)                                  1329
         CLI   0(@03),X'F0'                                        1329
         BNE   @RF01329                                            1329
*      EDIFILD(L) = BLANK;                                 /*@Z427VLS*/
         LA    @03,EDIFILD-1(@06)                                  1330
         MVI   0(@03),X'40'                                        1330
*    ELSE                                                          1331
*      NONBLANK = ON;                                      /*@Z427VLS*/
         B     @RC01329                                            1331
@RF01329 OI    NONBLANK,B'01000000'                                1331
*  END;                                                    /*@Z427VLS*/
@RC01329 LA    @06,1                                               1332
         AL    @06,L                                               1332
         ST    @06,L                                               1332
         C     @06,@CF00036                                        1332
         BNH   @DL01328                                            1332
@DC01328 DS    0H                                                  1333
*  ERXNUM(M) = EDFLD;                                      /*@Z427VLS*/
         L     @06,M                                               1333
         MH    @06,@CH01536                                        1333
         LA    @03,ERXNUM-73(@06)                                  1333
         MVC   0(9,@03),EDFLD                                      1333
*  PRINTLIN = ERRLINE(M);                                  /*@Z427VLS*/
         MVI   PRINTLIN+73,C' '                                    1334
         MVC   PRINTLIN+74(60),PRINTLIN+73                         1334
         LA    @03,ERRLINE-73(@06)                                 1334
         MVC   PRINTLIN(73),0(@03)                                 1334
*  PRINTADR = ADDR(PRINTLIN);                              /*@Z427VLS*/
         LA    @06,PRINTLIN                                        1335
         ST    @06,PRINTADR(,R2)                                   1335
*  CALL IOHND(RITEPRTR);                                   /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    1336
         LA    @01,@AL01336                                        1336
         BALR  @14,@15                                             1336
*END; /*END OF M LOOP                                        @Z427VLS*/
         LA    @06,1                                               1337
         AL    @06,M                                               1337
         ST    @06,M                                               1337
         C     @06,@CF01547                                        1337
         BNH   @DL01322                                            1337
*END; /*CLOSING END TO PROC BUGCNTS                          @Z427VLS*/
@EL00032 DS    0H                                                  1338
@EF00032 DS    0H                                                  1338
@ER00032 LM    @14,@12,@SA00032                                    1338
         BR    @14                                                 1338
*/*THIS PROC WILL EXAMINE THE MERIDIAN MCH OR CCH IN ORDER TO BUILD*/
*/*FRAMTAB ENTRIES FOR UNIQUE RECORDS                        @G51DGBB*/
*BUILDFTB: PROC; /*BUILD NEW ENTRY IF CPU IS UNIQUE          @G51DGBB*/
BUILDFTB STM   @14,@12,@SA00033                                    1339
*LOOPOUT = NO;                                             /*@G51DGBB*/
         NI    LOOPOUT,B'11111101'                                 1340
*DO Y = 1 BY 1 TO EVMAX WHILE LOOPOUT = NO; /*EXAMINE ALL FRAMETAB*/
         LA    @06,1                                               1341
         ST    @06,Y                                               1341
@DL01341 TM    LOOPOUT,B'00000010'                                 1341
         BNZ   @DC01341                                            1341
*  IF FRAMECPU(Y) = LRTCPMOD THEN  /*IF CPU ALREADY IN TABLE THEN*/
         MH    @06,@CH00227                                        1342
         L     @03,FRAMEPTR(,R2)                                   1342
         ALR   @03,@06                                             1342
         AL    @03,@CF01602                                        1342
         CLC   FRAMECPU-4(5,@03),LRTCPMOD(R7)                      1342
         BNE   @RF01342                                            1342
*    LOOPOUT = YES; /*EXIT LOOP                              @G51DGBB*/
         OI    LOOPOUT,B'00000010'                                 1343
*  ELSE     /*IF ENTRY DOESNT MATCH THE FRAME                @G51DGBB*/
*    DO;                                                   /*@G51DGBB*/
         B     @RC01342                                            1344
@RF01342 DS    0H                                                  1345
*      IF FRAMECPU(Y) = '0000000000'X THEN /*NO MATCH, ALL SET */  1345
         L     @06,Y                                               1345
         MH    @06,@CH00227                                        1345
         L     @03,FRAMEPTR(,R2)                                   1345
         ST    @06,@TF00001                                        1345
         ALR   @06,@03                                             1345
         AL    @06,@CF01602                                        1345
         CLC   FRAMECPU-4(5,@06),@CB00290                          1345
         BNE   @RF01345                                            1345
*        DO;                              /*ENTRIES EXAMINED @G51DGBB*/
*          FRAMECPU(Y) = LRTCPMOD;                         /*@G51DGBB*/
         LR    @06,@03                                             1347
         AL    @06,@TF00001                                        1347
         AL    @06,@CF01602                                        1347
         MVC   FRAMECPU-4(5,@06),LRTCPMOD(R7)                      1347
*          FRAMENUM = FRAMENUM + 1; /*COUNT NUMBER OF ENTRIES BUILT*/
         LA    @06,1                                               1348
         AL    @06,FRAMENUM(,@03)                                  1348
         ST    @06,FRAMENUM(,@03)                                  1348
*          LOOPOUT = YES;                                  /*@G51DGBB*/
         OI    LOOPOUT,B'00000010'                                 1349
*        END;                                              /*@G51DGBB*/
*      ELSE                                                        1351
*        IF Y = EVMAX THEN /*UNIQUE ENTRY BUT NOT ROOM IN TABLE*/  1351
         B     @RC01345                                            1351
@RF01345 CLC   Y(4),@CF00088                                       1351
         BNE   @RF01351                                            1351
*          DO;                                             /*@G51DGBB*/
*            IF ONETIME = NO THEN   /*ISSUE MESSAGE ONLY ONCE*/    1353
         TM    ONETIME,B'10000000'                                 1353
         BNZ   @RF01353                                            1353
*              DO;                                         /*@G51DGBB*/
*                MSGNO = 24;                               /*@G51DGBB*/
         MVI   MSGNO,X'18'                                         1355
*                CALL ERRMSG;                              /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1356
*                ONETIME = YES;                            /*@G51DGBB*/
         OI    ONETIME,B'10000000'                                 1357
*              END;                                        /*@G51DGBB*/
*          END;                                            /*@G51DGBB*/
@RF01353 DS    0H                                                  1360
*   END;                                                   /*@G51DGBB*/
@RF01351 DS    0H                                                  1360
@RC01345 DS    0H                                                  1361
*  END;                                                    /*@G51DGBB*/
@RC01342 LA    @06,1                                               1361
         AL    @06,Y                                               1361
         ST    @06,Y                                               1361
         C     @06,@CF00088                                        1361
         BNH   @DL01341                                            1361
@DC01341 DS    0H                                                  1362
*END; /*END OF PROC BUILDFTB                                 @G51DGBB*/
@EL00033 DS    0H                                                  1362
@EF00033 DS    0H                                                  1362
@ER00033 LM    @14,@12,@SA00033                                    1362
         BR    @14                                                 1362
*FRAMEREP: PROC; /*REPLACE FRAME IF MORE CURRENT FRAME FOUND @G51DGBB*/
FRAMEREP STM   @14,@12,@SA00034                                    1363
*                /*COMPLETE ENTRY IF NO DATE ETC.            @G51DGBB*/
*                /*APPEND LOCATION OF FRAME EXTERNAL LOCATION LIST*/
*GETOUT = NO;                                              /*@G51DGBB*/
         NI    GETOUT,B'10111111'                                  1364
*DO X = 1 BY 1 TO FRAMENUM WHILE GETOUT = NO; /*LOOP THROUGH ALL SET*/
         LA    @06,1                                               1365
         ST    @06,X                                               1365
         B     @DE01365                                            1365
@DL01365 TM    GETOUT,B'01000000'                                  1365
         BNZ   @DC01365                                            1365
*                                             /*ENTRIES OF FRAMETAB */
*  IF FRAMECPU(X) = LRTCPMOD THEN             /*IF RECORD CPU MODEL */
         LR    @03,@06                                             1366
         MH    @03,@CH00227                                        1366
         L     @15,FRAMEPTR(,R2)                                   1366
         ST    @03,@TF00001                                        1366
         ALR   @03,@15                                             1366
         AL    @03,@CF01602                                        1366
         CLC   FRAMECPU-4(5,@03),LRTCPMOD(R7)                      1366
         BNE   @RF01366                                            1366
*    DO;                                      /*SERIAL MATCHES THOSE*/
*      CCHINDX = X;  /*SAVE INDEX*/           /*OF THE ENTRY @G51DGBB*/
         ST    @06,CCHINDX                                         1368
*      IF FRAMEDT(X) < LRTDT THEN             /*IF REC DATE GREATER */
         AL    @15,@TF00001                                        1369
         AL    @15,@CF01636                                        1369
         CLC   FRAMEDT-9(8,@15),LRTDT(R7)                          1369
         BNL   @RF01369                                            1369
*        DO;                                  /*THAN ENTRY DATE     */
*              CALL FIXENTRY;               /*DELETE OLD FRAME SET*/
         BAL   @14,FIXENTRY                                        1371
*              FRAMEDT(X) = LRTDT;           /*SAVE HIGH DATE*/    1372
         L     @06,X                                               1372
         MH    @06,@CH00227                                        1372
         L     @03,FRAMEPTR(,R2)                                   1372
         ALR   @03,@06                                             1372
         AL    @03,@CF01636                                        1372
         MVC   FRAMEDT-9(8,@03),LRTDT(R7)                          1372
*              CALL BUILDTTR;                /*SAVE FRAME LOCATION*/
         BAL   @14,BUILDTTR                                        1373
*               FRAMEYES = YES;/*SAVE SUCCEEDING FRAMES OF THIS    */
         OI    FRAMEYES,B'00000001'                                1374
*                              /*LOGICAL SET                 @G51DGBB*/
*         END;                                             /*@G51DGBB*/
*       ELSE  /*IMPLIES DATE IS LOW OR EQUAL                 @G51DGBB*/
*        DO;                                               /*@G51DGBB*/
         B     @RC01369                                            1376
@RF01369 DS    0H                                                  1377
*         IF FRAMEDT(X) = LRTDT THEN /*IF TABLE DATE EQUALS RECORD DAT*
         L     @06,X                                               1377
         MH    @06,@CH00227                                        1377
         L     @03,FRAMEPTR(,R2)                                   1377
         ST    @06,@TF00001                                        1377
         ALR   @06,@03                                             1377
         AL    @06,@CF01636                                        1377
         CLC   FRAMEDT-9(8,@06),LRTDT(R7)                          1377
         BNE   @RF01377                                            1377
*           DO;                                            /*@G51DGBB*/
*            IF FRAMETYP(X) ^= ALLALL THEN                         1379
         AL    @03,@TF00001                                        1379
         AL    @03,@CF01614                                        1379
         CLI   FRAMETYP-17(@03),X'FF'                              1379
         BE    @RF01379                                            1379
*             DO;                                          /*@G51DGBB*/
*                      CALL FIXENTRY; /*DELETE INCOMPLETE SET       */
         BAL   @14,FIXENTRY                                        1381
*                      MSGNO = 79; /*INCOMPLETE FRAME SET MESSAGE*/
         MVI   MSGNO,X'4F'                                         1382
*                      CALL ERRMSG;                        /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1383
*                      CALL BUILDTTR; /*SAVE NEW FIRST GOOD FRAME*/
         BAL   @14,BUILDTTR                                        1384
*                      FRAMEYES = YES; /*SAVE SUCCEEDING MEMBERS */
         OI    FRAMEYES,B'00000001'                                1385
*             END;                                         /*@G51DGBB*/
*            ELSE  /*COMPLETE SET FOR THIS DATE ALREADY EXISTS      */
*               DO; /*FRAMETYP IS EQUAL TO ALLALL            @G51DGBB*/
         B     @RC01379                                            1387
@RF01379 DS    0H                                                  1388
*                   FRAMEYES = NO;/*DELETE SUCCEEDING FRAMES OF SET */
         NI    FRAMEYES,B'11111110'                                1388
*                   BUG(41) = BUG(41) + 1; /*COUNT FRAME AS NOT USED*/
         LA    @06,1                                               1389
         AL    @06,BUG+160                                         1389
         ST    @06,BUG+160                                         1389
*               END;                                       /*@G51DGBB*/
*        END; /*END OF CODE IF DATE IN RECORD EQUALS DATE IN TABLE*/
*       ELSE /*DATE IN TABLE GREATER THAN FRAME RECORD DATE  @G51DGBB*/
*        BUG(41) = BUG(41)  + 1;                           /*@G51DGBB*/
         B     @RC01377                                            1392
@RF01377 LA    @06,1                                               1392
         AL    @06,BUG+160                                         1392
         ST    @06,BUG+160                                         1392
*    END; /*END OF CODE IF DATE IN RECORD IS LOW OR EQUAL    @G51DGBB*/
@RC01377 DS    0H                                                  1394
*  GETOUT = YES; /*GET OUT OF LOOP AFTER CPU MATCH           @G51DGBB*/
@RC01369 OI    GETOUT,B'01000000'                                  1394
* END; /*END OF CODE FOR A RECORD TO ENTRY CPU MATCH         @G51DGBB*/
*END; /*END OF FRAMETAB LOOP                                 @G51DGBB*/
@RF01366 LA    @06,1                                               1396
         AL    @06,X                                               1396
         ST    @06,X                                               1396
@DE01365 L     @03,FRAMEPTR(,R2)                                   1396
         C     @06,FRAMENUM(,@03)                                  1396
         BNH   @DL01365                                            1396
@DC01365 DS    0H                                                  1397
*IF GETOUT = NO THEN /*MERIDIAN FRAME BUT NO ROOM IN TABLE   @G51DGBB*/
         TM    GETOUT,B'01000000'                                  1397
         BNZ   @RF01397                                            1397
*  BUG(41) = BUG(41) + 1;                                  /*@G51DGBB*/
         LA    @06,1                                               1398
         AL    @06,BUG+160                                         1398
         ST    @06,BUG+160                                         1398
*END; /*END OF PROC FRAMEREP                                 @G51DGBB*/
@EL00034 DS    0H                                                  1399
@EF00034 DS    0H                                                  1399
@ER00034 LM    @14,@12,@SA00034                                    1399
         BR    @14                                                 1399
*BUILDTTR: PROC; /*SAVE LOCATION OF A FRAME IN LISTLOC       @G51DGBB*/
BUILDTTR STM   @14,@12,@SA00035                                    1400
*RESPECIFY (R0,R1,R4,R15) RESTRICTED;                      /*@G51DGBB*/
*IF (LRTKEY1 & GENREC) = HEXA0 THEN /* IF MCH FRAME          @G51DGBB*/
         MVC   @TS00001(1),LRTKEY1(R7)                             1402
         NI    @TS00001,X'F0'                                      1402
         CLI   @TS00001,X'A0'                                      1402
         BNE   @RF01402                                            1402
*  DO;                                                     /*@G51DGBB*/
*    IF FRAMLOCM(CCHINDX) = ZERO THEN /*IF LISTLOC CORE FOR A CPU*/
         L     @14,CCHINDX                                         1404
         MH    @14,@CH00227                                        1404
         L     @06,FRAMEPTR(,R2)                                   1404
         AL    @06,@CF01615                                        1404
         L     @14,FRAMLOCM-20(@14,@06)                            1404
         LTR   @14,@14                                             1404
         BNZ   @RF01404                                            1404
*      DO;                            /*IS UNALLOCATED       @G51DGBB*/
*        R0 = LISTBENT * LISTMAX * 2; /*ALLOCATE CORE FOR BOTH CCH*/
         LA    R0,500                                              1406
*        R0 = R0 + 12;                /*AND MCH FRAME LOCATIONS   */
         AL    R0,@CF00032                                         1407
*        GEN(GETMAIN EC,LV=(R0),A=LINKITM,SP=21);          /*@G51DGBB*/
         GETMAIN EC,LV=(R0),A=LINKITM,SP=21
*        IF R15 = SUCCESS THEN                                     1409
         LTR   R15,R15                                             1409
         BNZ   @RF01409                                            1409
*          DO;                                             /*@G51DGBB*/
*            R1 = LINKITM;  /*GRAB GOTTEN CORE ADDRESS FROM GETMAIN*/
         L     R1,LINKITM                                          1411
*            FRAMLOCM(CCHINDX) = R1;  /*SET POINTERS TO LISTLOC   */
         L     @14,CCHINDX                                         1412
         MH    @14,@CH00227                                        1412
         L     @06,FRAMEPTR(,R2)                                   1412
         AL    @06,@CF01615                                        1412
         ST    R1,FRAMLOCM-20(@14,@06)                             1412
*            R1 = R1+LISTBENT *       /*TABLES FOR BOTH CCL AND MCH*/
*                LISTMAX+4;           /*FRAMES               @G51DGBB*/
         AL    R1,@CF01591                                         1413
*            R0 = ZERO;          /*ENSURE THAT TABLE ON WORD BOUNDARY*/
         SLR   R0,R0                                               1414
*            R4 = 4;             /*DIVIDE BY NUMBER OF BYTES IN WORD*/
         LA    R4,4                                                1415
*            GEN(DR R0,R4);                                /*@G51DGBB*/
         DR R0,R4
*            IF R0 > ZERO THEN /*REMAINDER MEANS NOT INTEGRAL NUMBER*/
         LTR   R0,R0                                               1417
         BNP   @RF01417                                            1417
*                              /*NUMBER OF DOUBLEWORDS.      @G51DGBB*/
*              R1 = R1 + 1; /*ADD ONE EXTRA FULL WORD        @G51DGBB*/
         AL    R1,@CF00056                                         1418
*            R1 = R1 * FOUR; /*RESET ONE TO NUMBER OF BYTES  @G51DGBB*/
@RF01417 SLL   R1,2                                                1419
*            FRAMLOCC(CCHINDX) = R1; /*SET POINTER TO CCH CCHHR TABLE*/
         L     @14,CCHINDX                                         1420
         MH    @14,@CH00227                                        1420
         L     @06,FRAMEPTR(,R2)                                   1420
         ST    R1,FRAMLOCC-24(@14,@06)                             1420
*            LISTPTR = R1;      /*ESTABLISH ADDRESSABILITY FOR CCH TB*/
         ST    R1,LISTPTR                                          1421
*            LISTNUM = ZERO;    /*ZERO CCH LISTLOC TABLE     @G51DGBB*/
         L     @14,LISTPTR                                         1422
         SLR   @06,@06                                             1422
         ST    @06,LISTNUM(,@14)                                   1422
*            DO Y = 1 BY 1 TO LISTMAX;                     /*@G51DGBB*/
         LA    @14,1                                               1423
         ST    @14,Y                                               1423
@DL01423 DS    0H                                                  1424
*              LISTCCHR(Y) = LISTCCHR(Y) &&                        1424
*                            LISTCCHR(Y);                  /*@G51DGBB*/
         LR    @06,@14                                             1424
         MH    @06,@CH00079                                        1424
         L     @05,LISTPTR                                         1424
         ALR   @05,@06                                             1424
         BCTR  @05,0                                               1424
         XC    LISTCCHR-4(5,@05),LISTCCHR-4(@05)                   1424
*            END;                                          /*@G51DGBB*/
         AL    @14,@CF00056                                        1425
         ST    @14,Y                                               1425
         C     @14,@CF00295                                        1425
         BNH   @DL01423                                            1425
*            LISTPTR = FRAMLOCM(CCHINDX); /*ADDRESS OF MCH LISTLOC */
         L     @14,CCHINDX                                         1426
         MH    @14,@CH00227                                        1426
         L     @06,FRAMEPTR(,R2)                                   1426
         AL    @06,@CF01615                                        1426
         L     @14,FRAMLOCM-20(@14,@06)                            1426
         ST    @14,LISTPTR                                         1426
*            DO Y = 1 BY 1 TO LISTMAX;   /* ZERO MCH LISTLOC TABLE  */
         LA    @14,1                                               1427
         ST    @14,Y                                               1427
@DL01427 DS    0H                                                  1428
*            LISTCCHR(Y) = LISTCCHR(Y) &&                          1428
*                          LISTCCHR(Y);                    /*@G51DGBB*/
         LR    @06,@14                                             1428
         MH    @06,@CH00079                                        1428
         L     @05,LISTPTR                                         1428
         ALR   @05,@06                                             1428
         BCTR  @05,0                                               1428
         XC    LISTCCHR-4(5,@05),LISTCCHR-4(@05)                   1428
*            END;                                          /*@G51DGBB*/
         AL    @14,@CF00056                                        1429
         ST    @14,Y                                               1429
         C     @14,@CF00295                                        1429
         BNH   @DL01427                                            1429
*            LISTNUM = ZERO;                               /*@G51DGBB*/
         L     @14,LISTPTR                                         1430
         SLR   @06,@06                                             1430
         ST    @06,LISTNUM(,@14)                                   1430
*          END;                                            /*@G51DGBB*/
*        ELSE /*UNSUCCESSFUL GETMAIN                         @G51DGBB*/
*          DO;                                             /*@G51DGBB*/
         B     @RC01409                                            1432
@RF01409 DS    0H                                                  1433
*            MSGNO = 40;                                   /*@G51DGBB*/
         MVI   MSGNO,X'28'                                         1433
*            CALL ERRMSG;                                  /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1434
*            R15 = TWELVE;                                 /*@G51DGBB*/
         LA    @06,12                                              1435
         LR    R15,@06                                             1435
*            ERROR = TWELVE;                               /*@G51DGBB*/
         ST    @06,ERROR                                           1436
*          END;                                            /*@G51DGBB*/
*      END;                                                /*@G51DGBB*/
@RC01409 DS    0H                                                  1439
*    IF R15 = ZERO THEN /*IF GETMAIN WAS SUCCESSFUL OR NO GETMAIN*/
@RF01404 LTR   R15,R15                                             1439
         BNZ   @RF01439                                            1439
*      LISTPTR = FRAMLOCM(CCHINDX);/*ESTABLISH LISTLOC ADDRESS   */
         L     @14,CCHINDX                                         1440
         MH    @14,@CH00227                                        1440
         L     @06,FRAMEPTR(,R2)                                   1440
         AL    @06,@CF01615                                        1440
         L     @14,FRAMLOCM-20(@14,@06)                            1440
         ST    @14,LISTPTR                                         1440
*  END;                                                    /*@G51DGBB*/
*ELSE /* IS A CCH FRAME                                      @G51DGBB*/
*    LISTPTR = FRAMLOCC(CCHINDX);  /*ESTABLISH CCH LISTLOC ADDRESS*/
         B     @RC01402                                            1442
@RF01402 L     @14,CCHINDX                                         1442
         MH    @14,@CH00227                                        1442
         L     @06,FRAMEPTR(,R2)                                   1442
         L     @14,FRAMLOCC-24(@14,@06)                            1442
         ST    @14,LISTPTR                                         1442
*IF ERROR = ZERO THEN                                              1443
@RC01402 L     @14,ERROR                                           1443
         LTR   @14,@14                                             1443
         BNZ   @RF01443                                            1443
*  DO;                                                     /*@G51DGBB*/
*    IF LISTNUM + 1 <= LISTMAX THEN /*IF ROOM IN LISTLOC     @G51DGBB*/
         LA    @14,1                                               1445
         L     @06,LISTPTR                                         1445
         AL    @14,LISTNUM(,@06)                                   1445
         C     @14,@CF00295                                        1445
         BH    @RF01445                                            1445
*      DO;                                                 /*@G51DGBB*/
*        RESPECIFY (R1) UNRESTRICTED; /*FOR PARM LIST        @G51DGBB*/
*        IF PHIST = ON THEN        /*IF HISTORY INPUT        @G51DGBB*/
         TM    PHIST(R2),B'00100000'                               1448
         BNO   @RF01448                                            1448
*          CALL IOHND(RITESCRT);   /*WRITE TO SCRATCH DATA SET*/   1449
         L     @15,ADIOHND(,R2)                                    1449
         LA    @01,@AL01449                                        1449
         BALR  @14,@15                                             1449
*        IF R15 = SUCCESS THEN     /*IF SUCCESSFULL WRITE    @G51DGBB*/
@RF01448 LTR   R15,R15                                             1450
         BNZ   @RF01450                                            1450
*          DO;                                             /*@G51DGBB*/
*            LISTCCHR(LISTNUM+1) = RECCCHHR;/*SAVE FRAME EXTERNAL LOC*/
         L     @14,LISTPTR                                         1452
         L     @06,LISTNUM(,@14)                                   1452
         LR    @05,@06                                             1452
         MH    @05,@CH00079                                        1452
         ALR   @05,@14                                             1452
         MVC   LISTCCHR(5,@05),RECCCHHR(R2)                        1452
*            LISTNUM = LISTNUM + 1; /*INCREMENT NO OF BUILT ENTRIES*/
         LA    @05,1                                               1453
         ALR   @06,@05                                             1453
         ST    @06,LISTNUM(,@14)                                   1453
*            BUG(40) = BUG(40) + 1;                        /*@G51DGBB*/
         AL    @05,BUG+156                                         1454
         ST    @05,BUG+156                                         1454
*          END;                                            /*@G51DGBB*/
*        ELSE  /*UNSUCCESSFUL WRITE TO SCRATCH D.S.          @G51DGBB*/
*          R15 = TWELVE; /*TERMINATE FURTHER PROCESSING      @G51DGBB*/
         B     @RC01450                                            1456
@RF01450 LA    R15,12                                              1456
*      END;                                                /*@G51DGBB*/
@RC01450 DS    0H                                                  1458
*  END;                                                    /*@G51DGBB*/
@RF01445 DS    0H                                                  1459
*ERROR = R15;                                              /*@G51DGBB*/
@RF01443 ST    R15,ERROR                                           1459
*RESPECIFY (R0,R4,R15) UNRESTRICTED;                       /*@G51DGBB*/
*END; /*END OF BUILDTTR PROC                                 @G51DGBB*/
@EL00035 DS    0H                                                  1461
@EF00035 DS    0H                                                  1461
@ER00035 LM    @14,@12,@SA00035                                    1461
         BR    @14                                                 1461
*FIXENTRY: PROC;  /*RESET LISTLOC TABLE TO ZEROS BUT DONT FREE CORE*/
FIXENTRY STM   @14,@12,12(@13)                                     1462
*                 /*RESET DATE,TYPE TO ZEROS                 @G51DGBB*/
*FRAMEDT(CCHINDX) = '0000000000000000'X; /*ZERO DATE,TIME    @G51DGBB*/
         L     @06,CCHINDX                                         1463
         MH    @06,@CH00227                                        1463
         L     @03,FRAMEPTR(,R2)                                   1463
         ST    @06,@TF00001                                        1463
         ALR   @06,@03                                             1463
         AL    @06,@CF01636                                        1463
         MVC   FRAMEDT-9(8,@06),@CB01563                           1463
*FRAMETYP(CCHINDX) = '00'X; /*RESET TO NO TYPES OF FRAMES STORED*/ 1464
         LR    @06,@03                                             1464
         AL    @06,@TF00001                                        1464
         AL    @06,@CF01614                                        1464
         MVI   FRAMETYP-17(@06),X'00'                              1464
*IF FRAMLOCM(CCHINDX) > ZERO THEN /*IF MCH FRAME LOC. TAB. ALLOCATED*/
         L     @06,@TF00001                                        1465
         AL    @03,@CF01615                                        1465
         L     @06,FRAMLOCM-20(@06,@03)                            1465
         LTR   @06,@06                                             1465
         BNP   @RF01465                                            1465
*  DO;                                                     /*@G51DGBB*/
*    LISTPTR = FRAMLOCM(CCHINDX); /*SET TABLE BASE ADDRESS   @G51DGBB*/
         ST    @06,LISTPTR                                         1467
*    DO Y = 1 BY 1 TO LISTNUM; /*CLEAR ALL STORED CCHHRS TO ZERO*/ 1468
         LA    @06,1                                               1468
         ST    @06,Y                                               1468
         B     @DE01468                                            1468
@DL01468 DS    0H                                                  1469
*      LISTCCHR(Y) = (LISTCCHR(Y) && LISTCCHR(Y));         /*@G51DGBB*/
         LR    @03,@06                                             1469
         MH    @03,@CH00079                                        1469
         L     @01,LISTPTR                                         1469
         ALR   @01,@03                                             1469
         BCTR  @01,0                                               1469
         XC    LISTCCHR-4(5,@01),LISTCCHR-4(@01)                   1469
*      BUG(41) = BUG(41) + 1; /*ADD TO COUNT OF REJECTED FRAMES*/  1470
         LA    @03,1                                               1470
         AL    @03,BUG+160                                         1470
         ST    @03,BUG+160                                         1470
*      BUG(40) = BUG(40) - 1; /*SUBTRACT FROM COUNT OF ACCEPTED FRMES*/
         L     @03,BUG+156                                         1471
         BCTR  @03,0                                               1471
         ST    @03,BUG+156                                         1471
*    END;                                                  /*@G51DGBB*/
         AL    @06,@CF00056                                        1472
         ST    @06,Y                                               1472
@DE01468 L     @03,LISTPTR                                         1472
         C     @06,LISTNUM(,@03)                                   1472
         BNH   @DL01468                                            1472
*    LISTNUM = ZERO; /*SET NUMBER OF STORED CCHHRS TO ZERO   @G51DGBB*/
         L     @06,LISTPTR                                         1473
         SLR   @03,@03                                             1473
         ST    @03,LISTNUM(,@06)                                   1473
*  END;                                                    /*@G51DGBB*/
*IF FRAMLOCC(CCHINDX) > ZERO THEN /*IF CCH FRAM LOC TABLE ALLOCATED*/
@RF01465 L     @06,CCHINDX                                         1475
         MH    @06,@CH00227                                        1475
         L     @03,FRAMEPTR(,R2)                                   1475
         L     @06,FRAMLOCC-24(@06,@03)                            1475
         LTR   @06,@06                                             1475
         BNP   @RF01475                                            1475
*  DO;                                                     /*@G51DGBB*/
*    LISTPTR = FRAMLOCC(CCHINDX); /*SET BASE ADDRESS OF LISTLOC*/  1477
         ST    @06,LISTPTR                                         1477
*    DO Y = 1 BY 1 TO LISTNUM; /*ZERO ALL SAVED CCHHRS       @G51DGBB*/
         LA    @06,1                                               1478
         ST    @06,Y                                               1478
         B     @DE01478                                            1478
@DL01478 DS    0H                                                  1479
*      LISTCCHR(Y) = (LISTCCHR(Y) && LISTCCHR(Y));         /*@G51DGBB*/
         LR    @03,@06                                             1479
         MH    @03,@CH00079                                        1479
         L     @01,LISTPTR                                         1479
         ALR   @01,@03                                             1479
         BCTR  @01,0                                               1479
         XC    LISTCCHR-4(5,@01),LISTCCHR-4(@01)                   1479
*      BUG(41) = BUG(41) + 1; /*ADD TO COUNT OF REJECTED FRAMES*/  1480
         LA    @03,1                                               1480
         AL    @03,BUG+160                                         1480
         ST    @03,BUG+160                                         1480
*      BUG(40) = BUG(40) - 1; /*SUBTRACT FROM COUNT OF ACCEPTED FRAMES*
         L     @03,BUG+156                                         1481
         BCTR  @03,0                                               1481
         ST    @03,BUG+156                                         1481
*    END;                                                  /*@G51DGBB*/
         AL    @06,@CF00056                                        1482
         ST    @06,Y                                               1482
@DE01478 L     @03,LISTPTR                                         1482
         C     @06,LISTNUM(,@03)                                   1482
         BNH   @DL01478                                            1482
*    LISTNUM = ZERO; /*SET NUMBER OF  CCHHRS SAVED TO ZERO   @G51DGBB*/
         L     @06,LISTPTR                                         1483
         SLR   @03,@03                                             1483
         ST    @03,LISTNUM(,@06)                                   1483
*  END;                                                    /*@G51DGBB*/
*END;                                                      /*@G51DGBB*/
@EL00036 DS    0H                                                  1485
@EF00036 DS    0H                                                  1485
@ER00036 LM    @14,@12,12(@13)                                     1485
         BR    @14                                                 1485
*FLIMFRAM: PROC; /*PROCESS FRAME RECORDS SEQUENTIALLY        @G51DGBB*/
FLIMFRAM STM   @14,@12,@SA00037                                    1486
* RESPECIFY (R15) RESTRICTED;                              /*@G51DGBB*/
*   IF PACC = ON &                 /* IF NO ACCUMULATION OR NO  */ 1488
*     (PMCH = ON × PCHAN = ON) THEN /* MCH OR CCH SELECTION THEN */
         TM    PACC(R2),B'01000000'                                1488
         BNO   @RF01488                                            1488
         TM    PMCH(R2),B'11000000'                                1488
         BZ    @RF01488                                            1488
*    DO;                            /* DONT SELECT FRAMES    @G51DGBB*/
*      IF LRTCNT = ONE &            /* IF FIRST PHYSICAL FRAME   */
*         (LRTKEY1 & GENREC) = HEXA0 THEN /*IS MCF           @G51DGBB*/
         CLI   LRTCNT(R7),1                                        1490
         BNE   @RF01490                                            1490
         MVC   @TS00001(1),LRTKEY1(R7)                             1490
         NI    @TS00001,X'F0'                                      1490
         CLI   @TS00001,X'A0'                                      1490
         BNE   @RF01490                                            1490
*        DO;                                               /*@G51DGBB*/
*          SAVESEQ = ONE;           /* RESET SEQUENCE CHECK  @G51DGBB*/
         MVI   SAVESEQ,X'01'                                       1492
*          CALL FRAMEREP;           /* SEE IF THIS FRAME SET MUST*/
         BAL   @14,FRAMEREP                                        1493
*          R15 = ERROR;             /* BE SAVED              @G51DGBB*/
         L     R15,ERROR                                           1494
*          IF LRTNLAST = OFF &      /*IF FIRST FRAME IS LAST OF SET*/
*             FRAMEYES = YES &     /*IF FRAME SET TO BE SAVED   */ 1495
*             R15 = ZERO THEN      /*NO ERROR CONDITIONS     @G51DGBB*/
         TM    LRTNLAST(R7),B'10000000'                            1495
         BNZ   @RF01495                                            1495
         TM    FRAMEYES,B'00000001'                                1495
         BNO   @RF01495                                            1495
         LTR   R15,R15                                             1495
         BNZ   @RF01495                                            1495
*            DO;                                           /*@G51DGBB*/
*              SAVESEQ = ZERO;    /*INITIALIZE SEQUENCE CHECK*/    1497
         MVI   SAVESEQ,X'00'                                       1497
*              FRAMETYP(CCHINDX) = ALLMCH; /*ONLY ONE BUT ALL IN*/ 1498
         L     @14,CCHINDX                                         1498
         MH    @14,@CH00227                                        1498
         L     @06,FRAMEPTR(,R2)                                   1498
         ALR   @06,@14                                             1498
         AL    @06,@CF01614                                        1498
         MVI   FRAMETYP-17(@06),X'02'                              1498
*            END;                                          /*@G51DGBB*/
*        END;                                              /*@G51DGBB*/
*      ELSE                         /* NON-FIRST FRAME       @G51DGBB*/
*        DO;                                               /*@G51DGBB*/
         B     @RC01490                                            1501
@RF01490 DS    0H                                                  1502
*          IF FRAMEYES = ON THEN    /* IF FRAME IS TO BE SAVED  */ 1502
         TM    FRAMEYES,B'00000001'                                1502
         BNO   @RF01502                                            1502
*            DO;                                           /*@G51DGBB*/
*              SAVESEQ = SAVESEQ + 1;  /* UP SEQ CHECK       @G51DGBB*/
         IC    @14,SAVESEQ                                         1504
         LA    @14,1(,@14)                                         1504
         STC   @14,SAVESEQ                                         1504
*              IF SAVESEQ = LRTCNT THEN /* IF RECORD NOT MISSING */
         CLC   SAVESEQ(1),LRTCNT(R7)                               1505
         BNE   @RF01505                                            1505
*                DO;                                       /*@G51DGBB*/
*                  CALL BUILDTTR;    /* BUILD EXTERNAL LOCATION */ 1507
         BAL   @14,BUILDTTR                                        1507
*                  R15 = ERROR;                            /*@G51DGBB*/
         L     R15,ERROR                                           1508
*                  IF R15 = ZERO THEN  /* IF FRAME EXTERNAL LOC  */
         LTR   R15,R15                                             1509
         BNZ   @RF01509                                            1509
*                    DO;               /* SUCCESSFULLY SAVED @G51DGBB*/
*                      IF LRTNLAST = OFF THEN /* IF LAST FRAME  */ 1511
         TM    LRTNLAST(R7),B'10000000'                            1511
         BNZ   @RF01511                                            1511
*                        DO;                               /*@G51DGBB*/
*                          IF (LRTKEY1 & GENREC) = HEXA0 THEN      1513
         MVC   @TS00001(1),LRTKEY1(R7)                             1513
         NI    @TS00001,X'F0'                                      1513
         CLI   @TS00001,X'A0'                                      1513
         BNE   @RF01513                                            1513
*                            DO;                           /*@G51DGBB*/
*                              SAVESEQ = ZERO; /*REINITIALIZE SEQ CNT*/
         MVI   SAVESEQ,X'00'                                       1515
*                              FRAMETYP(CCHINDX) = ALLMCH; /*@G51DGBB*/
         L     @14,CCHINDX                                         1516
         MH    @14,@CH00227                                        1516
         L     @06,FRAMEPTR(,R2)                                   1516
         ALR   @06,@14                                             1516
         AL    @06,@CF01614                                        1516
         MVI   FRAMETYP-17(@06),X'02'                              1516
*                            END;                          /*@G51DGBB*/
*                          /*IF ALL MCH FRAMES HAVE BEEN SAVED,  */
*                          /*THEN INDICATE SUCH              @G51DGBB*/
*                           ELSE                  /*IS CCH FRAME */
*                            DO;                           /*@G51DGBB*/
         B     @RC01513                                            1518
@RF01513 DS    0H                                                  1519
*                            FRAMEYES = OFF; /*RESET FRAME ACCEPT SW*/
         NI    FRAMEYES,B'11111110'                                1519
*                            IF FRAMETYP(CCHINDX) ^= ALLMCH THEN   1520
         L     @14,CCHINDX                                         1520
         MH    @14,@CH00227                                        1520
         L     @06,FRAMEPTR(,R2)                                   1520
         ALR   @06,@14                                             1520
         AL    @06,@CF01614                                        1520
         CLI   FRAMETYP-17(@06),X'02'                              1520
         BE    @RF01520                                            1520
*                              DO; /*IF MISSING LAST MCH FRAME   */
*                                MSGNO = 79; /*INCOMPLETE FRAME SET*/
         MVI   MSGNO,X'4F'                                         1522
*                                CALL ERRMSG;              /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1523
*                                CALL FIXENTRY; /*DELETE INCOM-  */
         BAL   @14,FIXENTRY                                        1524
*                              END;             /*PLETE SET. @G51DGBB*/
*                            ELSE   /*IS COMPLETE SET -INDICATE  */
*                              FRAMETYP(CCHINDX) = ALLALL; /*IT IS*/
         B     @RC01520                                            1526
@RF01520 L     @14,CCHINDX                                         1526
         MH    @14,@CH00227                                        1526
         L     @06,FRAMEPTR(,R2)                                   1526
         ALR   @06,@14                                             1526
         AL    @06,@CF01614                                        1526
         MVI   FRAMETYP-17(@06),X'FF'                              1526
*                            END;                          /*@G51DGBB*/
*                        END;                              /*@G51DGBB*/
*                   END;                                   /*@G51DGBB*/
*              END;                                        /*@G51DGBB*/
*            ELSE   /*MISSING MIDDLE FRAME                   @G51DGBB*/
*              DO;                                         /*@G51DGBB*/
         B     @RC01505                                            1531
@RF01505 DS    0H                                                  1532
*                MSGNO = 79; /*INCOMPLETE FRAME SET MESSAGE  @G51DGBB*/
         MVI   MSGNO,X'4F'                                         1532
*                CALL ERRMSG;                              /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1533
*                FRAMEYES = OFF; /*DONT SAVE INCOMPLETE SET  @G51DGBB*/
         NI    FRAMEYES,B'11111110'                                1534
*                CALL FIXENTRY; /*DELETE REFS TO INCOMPLETE SET*/  1535
         BAL   @14,FIXENTRY                                        1535
*                BUG(41) = BUG(41) + 1;                    /*@G51DGBB*/
         LA    @14,1                                               1536
         AL    @14,BUG+160                                         1536
         ST    @14,BUG+160                                         1536
*              END;                                        /*@G51DGBB*/
*       END;                                               /*@G51DGBB*/
*          ELSE      /*FRAME NOT TO BE SAVED                 @G51DGBB*/
*            BUG(41) = BUG(41) + 1;                        /*@G51DGBB*/
         B     @RC01502                                            1539
@RF01502 LA    @14,1                                               1539
         AL    @14,BUG+160                                         1539
         ST    @14,BUG+160                                         1539
*      END;                                                /*@G51DGBB*/
*   END;                                                   /*@G51DGBB*/
*  ELSE   /*NOT ACCUMULATING OR SELECTING MCH OR CCH RECORDS @G51DGBB*/
*    BUG(41) = BUG(41) + 1; /*COUNT FRAMES REJECTED          @G51DGBB*/
         B     @RC01488                                            1542
@RF01488 LA    @14,1                                               1542
         AL    @14,BUG+160                                         1542
         ST    @14,BUG+160                                         1542
*RESPECIFY (R15) UNRESTRICTED;                             /*@G51DGBB*/
*END; /*CLOSING END TO PROC FLIMFRAM                         @G51DGBB*/
@EL00037 DS    0H                                                  1544
@EF00037 DS    0H                                                  1544
@ER00037 LM    @14,@12,@SA00037                                    1544
         BR    @14                                                 1544
*END  /*CLOSING END TO EXTERNAL PROC, IFCFILT3               @Z427VLS*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (COMTABLE)                                        *
*;                                                                 1545
@DATA    DS    0H
@CH01385 DC    H'76'
         DS    0F
@AL00199 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00285 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00748 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00761 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01302 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01321 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01336 DC    A(@CF00074+2)           LIST WITH   1 ARGUMENT(S)
@AL00205 DC    A(@CF00076+2)           LIST WITH   1 ARGUMENT(S)
@AL00228 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00709 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00718 DC    A(@CF00065+2)           LIST WITH   1 ARGUMENT(S)
@AL00552 DC    A(@CF00065)             LIST WITH   3 ARGUMENT(S)
         DC    A(WORKDEV)
         DC    A(LINKDEV)
@AL00671 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00683 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00699 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00766 DC    A(@CF00083+2)           LIST WITH   1 ARGUMENT(S)
@AL00707 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00716 DC    A(@CF00081+2)           LIST WITH   1 ARGUMENT(S)
@AL00746 DC    A(@CF01460)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS)
@AL00759 DC    A(@CF01461)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS)
@AL00999 DC    A(@CF00952)             LIST WITH   3 ARGUMENT(S)
@AL01449 DC    A(@CF00079+2)           LIST WITH   1 ARGUMENT(S)
         DC    A(LINKDEV)
@AL01256 DC    A(@CF01534)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01259 DC    A(@CF01535)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01262 DC    A(@CF01536)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01269 DC    A(@CF01537)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01272 DC    A(@CF01453)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01299 DC    A(@CF01380)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01301 DC    A(@CF00227)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00037 DS    15F
@SA00016 DS    15F
@SA00002 DS    15F
@SA00014 DS    15F
@SA00032 DS    15F
@SA00030 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00013 DS    15F
@SA00008 DS    15F
@SA00017 DS    15F
@SA00019 DS    15F
@SA00020 DS    15F
@SA00026 DS    15F
@SA00023 DS    15F
@SA00027 DS    15F
@SA00024 DS    15F
@SA00021 DS    15F
@SA00022 DS    15F
@SA00033 DS    15F
@SA00034 DS    15F
@SA00035 DS    15F
@AL00001 DS    3A
@TF00001 DS    F
@TF00002 DS    F
@AFTEMPS DS    2F
         DS    0F
@CF00056 DC    F'1'
@CF00074 DC    F'2'
@CH00074 EQU   @CF00074+2
@CF00076 DC    F'3'
@CH00076 EQU   @CF00076+2
@CF00065 DC    F'4'
@CH00065 EQU   @CF00065+2
@CF00079 DC    F'5'
@CH00079 EQU   @CF00079+2
@CF00081 DC    F'6'
@CH00081 EQU   @CF00081+2
@CF00083 DC    F'7'
@CH00083 EQU   @CF00083+2
@CF00036 DC    F'8'
@CF00035 DC    F'9'
@CF00034 DC    F'10'
@CF00033 DC    F'11'
@CF00032 DC    F'12'
@CF01029 DC    F'13'
@CF00952 DC    F'14'
@CH00952 EQU   @CF00952+2
@CF00037 DC    F'15'
@CF00088 DC    F'16'
@CF00786 DC    F'17'
@CF01191 DC    F'18'
@CF00227 DC    F'24'
@CH00227 EQU   @CF00227+2
@CF01130 DC    F'27'
@CF01380 DC    F'40'
@CF01547 DC    F'44'
@CF00295 DC    F'50'
@CF01535 DC    F'53'
@CF01534 DC    F'55'
@CF01460 DC    F'70'
@CF01461 DC    F'71'
@CF01537 DC    F'72'
@CF01536 DC    F'73'
@CH01536 EQU   @CF01536+2
@CF01453 DC    F'78'
@CF01386 DC    F'127'
@CF01591 DC    F'254'
@CF00972 DC    F'335'
@CF00948 DC    F'366'
@CF01601 DC    F'-68'
@CF01632 DC    F'-64'
@CF01619 DC    F'-60'
@CF01620 DC    F'-56'
@CF01621 DC    F'-52'
@CF01622 DC    F'-48'
@CF01623 DC    F'-44'
@CF01624 DC    F'-40'
@CF01625 DC    F'-36'
@CF01626 DC    F'-32'
@CF01627 DC    F'-28'
@CF01628 DC    F'-24'
@CF01602 DC    F'-20'
@CF01635 DC    F'-17'
@CF01629 DC    F'-16'
@CF01636 DC    F'-15'
@CF01375 DC    F'-14'
@CF01611 DC    F'-13'
@CF01630 DC    F'-12'
@CF01603 DC    F'-11'
@CF01604 DC    F'-10'
@CF01631 DC    F'-8'
@CF01614 DC    F'-7'
@CF01599 DC    F'-6'
@CF01615 DC    F'-4'
@CF01609 DC    F'-3'
@CF00893 DC    XL4'FFFFFFF8'
@CF01606 DC    XL4'0000FFFF'
@CV01429 DC    V(IFCDEVIC)
         DS    0D
ENTRIES  DC    F'1'
LISTPTR  DC    A(0)
ZZ       DC    A(0)
Z1       DC    F'0'
Z2       DC    F'0'
Z3       DC    F'0'
ZZ3      DC    F'0'
NUMBER   DC    F'0'
NEXTBY   DC    F'0'
ADDNXT   DC    F'0'
T        DC    F'0'
P        DC    F'0'
R        DC    F'0'
INDEX    DS    F
YEAR     DC    H'0'
         DS    0D
@TS00001 DS    CL16
@CB01563 DC    X'0000000000000000'
@CB00290 EQU   @CB01563
@CB01458 DC    X'0000000F'
@CB00228 DC    X'00000F'
@CB00237 DC    X'FFFFFF'
@CB00924 DC    X'000FFF'
@CB00956 EQU   @CB01563
@CB01388 DC    X'99366F'
@CB00208 EQU   @CB01563
@CB00261 EQU   @CB00237
@CB00896 DC    X'8004'
@CB00898 DC    X'8005'
@CB00900 DC    X'8003'
@CB00902 DC    X'100C'
@CB00904 DC    X'1008'
@CB00906 DC    X'0842'
@CB00922 DC    X'0FFF'
@CB00976 DC    X'2006'
@CB00978 DC    X'2007'
@CB00980 DC    X'2009'
@CB00982 DC    X'200A'
@CB00984 DC    X'200B'
@CB00986 DC    X'200D'
@CB01007 DC    X'0003'
@CB01418 DC    X'3705'
@CB01497 DC    X'8809'
LETTERS  DC    CL1'S'
TREND2   DC    X'0000000000000000000000000000'
         ORG   TREND2
TRENDKEY DS    CL8
         ORG   TRENDKEY
TRENDGRP DS    FL1
TRENDRT  DS    BL2
         ORG   TRENDRT
TRENDCUA DS    BL2
         ORG   TRENDKEY+3
TRENCPUS DS    BL1
         ORG   TRENCPUS
TRENDCPU DS    BL1
TRENDOLD EQU   TRENCPUS+0
         ORG   TRENDKEY+4
TRENDITM DS    BL1
         ORG   TRENDITM
TREND037 DS    BL1
TRENDOD  EQU   TRENDITM+0
         ORG   TRENDKEY+5
TRENDDAT DS    FL1
TRENDDEV DS    CL2
         ORG   TREND2+8
TRENDPR1 DS    FL2
         ORG   TRENDPR1
@NM00084 DS    BL2
TRENDPRM EQU   TRENDPR1+1
         ORG   TREND2+10
TRENDTMP DS    FL4
         ORG   TREND2+14
         DS    CL1
FILT1ITM DS    CL139
         ORG   FILT1ITM
MAXENT   DC    F'0'
FREEADR  DC    A(0)
I        DC    A(1)
J        DC    A(0)
K        DC    A(0)
L        DC    A(0)
M        DC    A(0)
Q        DC    A(0)
A        DC    A(0)
X        DC    A(0)
Y        DC    A(0)
Z        DC    A(0)
LINKITM  DC    A(0)
CCHINDX  DC    A(0)
SAVESEQ  DS    FL1
         DS    CL3
ADDAFT   DC    F'0'
SRTCONT  DC    F'0'
SRTCONT1 DC    F'0'
DSTART   DC    F'0'
DEND     DC    F'0'
UNKNWN   DC    F'0'
COMPLINK DC    F'0'
ALLCORE  DC    F'0'
TREN1SIZ DC    F'0'
BINDAY   DC    F'0'
ERROR    DC    F'0'
ERSER    DC    X'00000000'
         ORG   ERSER
@NM00085 DS    CL1
ER3      DS    CL3
         ORG   FILT1ITM+108
NUMUNSHR DC    H'1'
PACKPAS  DC    CL4'    '
         DS    CL2
PASSNUM  DC    F'0'
NUMREC   DC    F'0'
EXCESS   DC    F'0'
WORKDEV  DC    X'0000'
         ORG   WORKDEV
WORKDEV1 DS    CL1
WORKDEV2 DS    CL1
         ORG   FILT1ITM+130
WORKTYPE DC    X'00'
CUA3     DC    X'000000'
         ORG   CUA3
@NM00086 DS    BL1
WORKCUA  DS    BL2
         ORG   WORKCUA
WRKCUA   DS    BL2
         ORG   FILT1ITM+134
WWCUA    DS    CL3
         ORG   WWCUA
@NM00087 DS    CL1
WWCUA2   DS    CL2
         ORG   FILT1ITM+137
TREIDX   DC    AL1(0)
MSGNO    DC    AL1(0)
         ORG   FILT1ITM+139
LINKDEV  DS    CL4
         ORG   LINKDEV
DEVLABEL DS    CL2
@NM00088 DS    CL2
         ORG   LINKDEV+4
YRSAVE   DC    X'0000'
         ORG   YRSAVE
YRSAVE1  DS    BL1
YRSAVE2  DS    BL1
         ORG   YRSAVE+2
ERRPLACE DS    BL1
         ORG   ERRPLACE
ERRP1    DS    BL1
ERRP2    EQU   ERRPLACE+0
         ORG   ERRPLACE+1
PRINTLIN DS    CL134
         ORG   PRINTLIN
PRINTDS  DC    X'F1'
PRINTCC  DC    X'09'
PRINTBDY DC    CL132' '
         ORG   PRINTBDY
@NM00089 DS    CL8
PRINTED  DS    CL9
@NM00090 DS    CL24
PRNTSER  DS    CL7
         ORG   PRINTLIN+134
PARTIAL  DS    CL58
         ORG   PARTIAL
@NM00093 DC    CL29'DEBUG16 FRAME SET INCOMPLETE '
PARMOD   DS    CL4
@NM00094 DC    CL1' '
PARSER   DS    CL6
@NM00095 DC    CL17' FRAMEREP SET TO '
PARREP   DS    CL1
         ORG   PARTIAL+58
BITSWIT  DC    X'000000'
         ORG   BITSWIT
FOUND    DS    BL1
NONBLANK EQU   BITSWIT+0
DEVOK    EQU   BITSWIT+0
CUAOK    EQU   BITSWIT+0
SORTSW   EQU   BITSWIT+0
UNIQUE   EQU   BITSWIT+0
MISSW    EQU   BITSWIT+0
MISSW1   EQU   BITSWIT+0
CROSSFLG DS    BL1
GETOUT   EQU   BITSWIT+1
FIRSTIME EQU   BITSWIT+1
ONBOUND  EQU   BITSWIT+1
CPU0FLG  EQU   BITSWIT+1
GETFAIL  EQU   BITSWIT+1
LOOPOUT  EQU   BITSWIT+1
FRAMEYES EQU   BITSWIT+1
ONETIME  DS    BL1
SHAREYES EQU   BITSWIT+2
         ORG   BITSWIT+3
WORKBYTE DS    BL1
         ORG   WORKBYTE
WORKBYT4 DS    BL1
         ORG   WORKBYTE+1
WORKTWO  DS    BL1
DEVCDLNK DC    X'00000000'
         ORG   DEVCDLNK
DEVLINK  DS    CL2
@NM00100 DS    CL2
         ORG   DEVCDLNK+4
CHARS    DC    CL16'0123456789ABCDEF'
SUPERZAP DC    3CL10'SUPERZAP'
         DS    CL3
SAVEADR  DC    A(0)
         DS    15XL4
EVCON    DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
         DC    CL1'G'
         DC    CL1'H'
         DC    CL1'I'
         DC    CL1'J'
         DC    CL1'K'
         DC    CL1'L'
         DC    CL1'M'
         DC    CL1'N'
         DC    CL1'O'
         DC    CL1'P'
FLIP     DC    AL1(0)
         DC    AL1(1)
         DC    AL1(2)
         DC    AL1(3)
         DC    AL1(4)
         DC    AL1(5)
         DC    AL1(6)
         DC    AL1(7)
         DC    AL1(8)
         DC    AL1(9)
         DC    AL1(10)
         DC    AL1(11)
         DC    AL1(12)
         DC    AL1(13)
         DC    AL1(14)
         DC    AL1(15)
PATCH    DC    25F'0'
EDIFILD  DS    9CL1
         DS    CL3
BUG      DC    50F'0'
ERRLINE  DS    CL73
         ORG   ERRLINE+0
ERRDS    DC    CL1'1'
ERCC     DC    X'09'
ERRMES   DC    CL10'DEBUG16   '
ERXNUM   DC    CL9'         '
@NM00101 DC    CL2'  '
ERRTXT   DC    CL50'RECORDS RETRIEVED VIA READSEQ           '
         ORG   ERRLINE+73
         ORG   ERRLINE+73
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS PASSED DATE, TIME FILTERING     '
         ORG   ERRLINE+146
         ORG   ERRLINE+146
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS PASSED ALL FILTERING            '
         ORG   ERRLINE+219
         ORG   ERRLINE+219
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR TYPE 91 DEVICE TYPE 3705 RECS FOUND '
         ORG   ERRLINE+292
         ORG   ERRLINE+292
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR TYPE 91, DV3705 RECS SAVED IN TREND2'
         ORG   ERRLINE+365
         ORG   ERRLINE+365
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR RECORDS IDENTIFIED                  '
         ORG   ERRLINE+438
         ORG   ERRLINE+438
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR RECORDS PASSED FILTERING            '
         ORG   ERRLINE+511
         ORG   ERRLINE+511
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR RECORDS STORED IN TREND2            '
         ORG   ERRLINE+584
         ORG   ERRLINE+584
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 1 RECORDS IDENTIFIED              '
         ORG   ERRLINE+657
         ORG   ERRLINE+657
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 2 RECORDS IDENTIFIED              '
         ORG   ERRLINE+730
         ORG   ERRLINE+730
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 3 RECORDS IDENTIFIED              '
         ORG   ERRLINE+803
         ORG   ERRLINE+803
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 4 RECORDS IDENTIFIED              '
         ORG   ERRLINE+876
         ORG   ERRLINE+876
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 5 RECORDS IDENTIFIED              '
         ORG   ERRLINE+949
         ORG   ERRLINE+949
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 6 RECORDS IDENTIFIED              '
         ORG   ERRLINE+1022
         ORG   ERRLINE+1022
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS IDENTIFIED FOR CPU FFFFFF       '
         ORG   ERRLINE+1095
         ORG   ERRLINE+1095
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MCH RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1168
         ORG   ERRLINE+1168
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MCH RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1241
         ORG   ERRLINE+1241
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'CCH RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1314
         ORG   ERRLINE+1314
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'CCH RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1387
         ORG   ERRLINE+1387
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'SOFTWARE RECORDS IDENTIFIED             '
         ORG   ERRLINE+1460
         ORG   ERRLINE+1460
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'SOFTWARE RECORDS PASSED FILTERING       '
         ORG   ERRLINE+1533
         ORG   ERRLINE+1533
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'IPL RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1606
         ORG   ERRLINE+1606
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'IPL RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1679
         ORG   ERRLINE+1679
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'DDR RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1752
         ORG   ERRLINE+1752
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'DDR RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1825
         ORG   ERRLINE+1825
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MIH RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1898
         ORG   ERRLINE+1898
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MIH RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1971
         ORG   ERRLINE+1971
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'EOD RECORDS IDENTIFIED                  '
         ORG   ERRLINE+2044
         ORG   ERRLINE+2044
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'EOD RECORDS PASSED FILTERING            '
         ORG   ERRLINE+2117
         ORG   ERRLINE+2117
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS SAVED FROM CPU FFFFFF MODEL FFFF'
         ORG   ERRLINE+2190
         ORG   ERRLINE+2190
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDRS NOT TYPE 91 NOT DEVICE TYPE 3705   '
         ORG   ERRLINE+2263
         ORG   ERRLINE+2263
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS FAILED DEVICE SELECTION         '
         ORG   ERRLINE+2336
         ORG   ERRLINE+2336
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS FAILED CUA SELECTION            '
         ORG   ERRLINE+2409
         ORG   ERRLINE+2409
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR 33XX RECORDS IDENTIFIED             '
         ORG   ERRLINE+2482
         ORG   ERRLINE+2482
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR 33XX RECORDS SAVED                  '
         ORG   ERRLINE+2555
         ORG   ERRLINE+2555
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 33XX, 2305 RECORDS IDENTIFIED       '
         ORG   ERRLINE+2628
         ORG   ERRLINE+2628
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 33XX, 2305 RECORDS SAVED            '
         ORG   ERRLINE+2701
         ORG   ERRLINE+2701
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 34XX RECORDS IDENTIFIED             '
         ORG   ERRLINE+2774
         ORG   ERRLINE+2774
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 34XX RECORDS SAVED                  '
         ORG   ERRLINE+2847
         ORG   ERRLINE+2847
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'FRAMES USED IN PROCESSING               '
         ORG   ERRLINE+2920
         ORG   ERRLINE+2920
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'FRAMES NOT USED IN PROCESSING           '
         ORG   ERRLINE+2993
         ORG   ERRLINE+2993
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'****IFCFILT3 DEBUG16 RECORD COUNTS******'
         ORG   ERRLINE+3066
         ORG   ERRLINE+3066
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3139
         ORG   ERRLINE+3139
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3212
         ORG   ERRLINE+3212
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3285
         ORG   ERRLINE+3285
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3358
         ORG   ERRLINE+3358
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3431
         ORG   ERRLINE+3431
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3504
         ORG   ERRLINE+3504
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3577
         ORG   ERRLINE+3577
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3650
IFCFILT3 CSECT
         DC    S(SUPERZAP)
IFCFILT3 CSECT
         DC    S(PATCH)     BASE DISPLACEMENT OF PATCH AREA
IFCFILT3 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R2       EQU   @02
R7       EQU   @07
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R12      EQU   @12
R15      EQU   @15
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
R6       EQU   @06
R8       EQU   @08
R9       EQU   @09
IOHND    EQU   0
IFCMSG   EQU   0
PARM     EQU   0
RECTYPE  EQU   PARM
PMCH     EQU   RECTYPE
PCHAN    EQU   RECTYPE
POBR     EQU   RECTYPE
PSOFT    EQU   RECTYPE
PIPL     EQU   RECTYPE
PDDR     EQU   RECTYPE
PMIH     EQU   RECTYPE
PEOD     EQU   RECTYPE
PTTYP    EQU   RECTYPE+1
SWITCHES EQU   PARM+2
ZEROALL  EQU   SWITCHES+1
DEVEXCL  EQU   SWITCHES+1
SHIFT3RD EQU   SWITCHES+1
DEBUG    EQU   PARM+4
DEBUG4   EQU   DEBUG
DEBUG11  EQU   DEBUG+1
DEBUG16  EQU   DEBUG+2
DEBUG23  EQU   DEBUG+2
DEBUGA   EQU   PARM+8
DEBUG50  EQU   DEBUGA+2
MISC     EQU   PARM+12
PACC     EQU   MISC
PHIST    EQU   MISC
PRINTES  EQU   MISC
PASSFLAG EQU   MISC
OPENCLSE EQU   PARM+13
OPENIO   EQU   OPENCLSE
CLOSEIO  EQU   OPENCLSE+2
CACCIN   EQU   CLOSEIO
CACCDEV  EQU   CLOSEIO
CDRCTWRK EQU   CLOSEIO
DATENOW  EQU   PARM+17
STDT     EQU   PARM+23
STDATE   EQU   STDT
PSTD     EQU   STDATE+1
PSTYR    EQU   PSTD
PSTDY    EQU   PSTD+1
ENDDT    EQU   PARM+31
ENDDATE  EQU   ENDDT
PEND     EQU   ENDDATE+1
PENDY    EQU   PEND+1
STTIME1  EQU   PARM+39
ENDTIME1 EQU   PARM+43
STTIME2  EQU   PARM+47
ENDTIME2 EQU   PARM+51
STRTDATE EQU   PARM+55
@NM00006 EQU   PARM+72
@NM00007 EQU   PARM+75
TABSIZE  EQU   PARM+80
SORTNUM  EQU   PARM+84
NUMDAYS  EQU   PARM+88
ERRID    EQU   PARM+92
IDTIMEA  EQU   ERRID+6
IDTIME   EQU   IDTIMEA
CCHHRLNG EQU   PARM+112
RECCCHHR EQU   CCHHRLNG
ADIOHND  EQU   PARM+124
ADIFCMSG EQU   PARM+128
ADEDITB  EQU   PARM+132
EVPTR    EQU   PARM+136
SORTADR  EQU   PARM+140
PRINTADR EQU   PARM+148
CUAPTR   EQU   PARM+152
DEVPTR   EQU   PARM+156
MODPTR   EQU   PARM+160
SERPTR   EQU   PARM+164
VOLPTR   EQU   PARM+168
CPUPTR   EQU   PARM+172
CPCUAPTR EQU   PARM+176
LIBADPTR EQU   PARM+180
SYMCDPTR EQU   PARM+184
SYSUMPTR EQU   PARM+188
TRENPTR  EQU   PARM+192
SHAREPTR EQU   PARM+196
FRAMEPTR EQU   PARM+200
MERDCPTR EQU   PARM+208
DUMPTABL EQU   PARM+228
DUMPINFO EQU   DUMPTABL+4
TRENDONE EQU   0
TRENEXT  EQU   TRENDONE
TRENUM   EQU   TRENDONE+4
TREGEN   EQU   TRENDONE+8
TREIPL   EQU   TREGEN
TREMCH   EQU   TREGEN+4
TRECCH0  EQU   TREGEN+8
TRECCH1  EQU   TREGEN+12
TRECCH2  EQU   TREGEN+16
TRECCH3  EQU   TREGEN+20
TRECCH4  EQU   TREGEN+24
TRECCH5  EQU   TREGEN+28
TRECCH6  EQU   TREGEN+32
TRECCH7  EQU   TREGEN+36
TRECCH8  EQU   TREGEN+40
TRECCH9  EQU   TREGEN+44
TRECCHA  EQU   TREGEN+48
TRECCHB  EQU   TREGEN+52
TRECCHC  EQU   TREGEN+56
TRECCHD  EQU   TREGEN+60
TRECCHE  EQU   TREGEN+64
TRECCHF  EQU   TREGEN+68
TREPRE   EQU   TREGEN+72
EVTABLE  EQU   0
EVSTOP   EQU   EVTABLE
EVNUM    EQU   EVTABLE+4
EVKEY    EQU   EVTABLE+6
EVMODEL  EQU   EVKEY
EVSERIAL EQU   EVKEY+2
EVLETTER EQU   EVKEY+5
SORTABLE EQU   0
SORTKEY  EQU   SORTABLE
SORTCCHR EQU   SORTABLE+5
SYSUMONE EQU   0
SHARE    EQU   0
SHARENUM EQU   SHARE
SHAREIO  EQU   SHARE+2
SHAREFLG EQU   SHAREIO
SHRBASE  EQU   SHAREIO+1
SHARSERB EQU   SHRBASE
SHRCUABL EQU   SHRBASE+3
SHRCUCPU EQU   SHAREIO+8
SHARSERA EQU   SHRCUCPU
SHRCUAAL EQU   SHRCUCPU+3
SHRCUAAH EQU   SHRCUCPU+5
SHARLET  EQU   SHAREIO+15
EDITLOAD EQU   0
EDITABLE EQU   EDITLOAD+4
CUA      EQU   0
CUANUM   EQU   CUA
CUAVAL   EQU   CUA+2
CUA1     EQU   CUAVAL
CUA2     EQU   CUAVAL+2
DEVICE   EQU   0
DEVNUM   EQU   DEVICE
DEVVAL   EQU   DEVICE+2
MDRNUM   EQU   DEVICE+202
MDRVAL   EQU   DEVICE+204
MODELS   EQU   0
DEVSERAL EQU   0
VOLUME   EQU   0
CPUS     EQU   0
CPUCUAS  EQU   0
CPUCUAV  EQU   CPUCUAS+2
LIBADR   EQU   0
SYMCODE  EQU   0
SYMVAL   EQU   SYMCODE+2
TMT2     EQU   0
TMTKEY   EQU   TMT2
TMTSRT   EQU   TMTKEY+1
TMTCPUS  EQU   TMTKEY+3
TMTITEM  EQU   TMTKEY+4
TMTPERM1 EQU   TMT2+8
TMP2     EQU   0
TMPKEY   EQU   TMP2
TMPSRT   EQU   TMPKEY+1
TMPCPUS  EQU   TMPKEY+3
TMPITEM  EQU   TMPKEY+4
TMPPERM1 EQU   TMP2+8
MERIDIAN EQU   0
MRDNUMBR EQU   MERIDIAN
MODEL    EQU   MERIDIAN+2
LRTREC   EQU   0
LRTKEY   EQU   LRTREC
LRTKEY1  EQU   LRTKEY
LRTSMS   EQU   LRTREC+2
LRTNLAST EQU   LRTSMS
LRTRUNC  EQU   LRTSMS
LRTERRID EQU   LRTREC+3
@NM00017 EQU   LRTREC+4
LRTCNT   EQU   @NM00017+2
LRTDT    EQU   LRTREC+8
LRTDATE  EQU   LRTDT
LRTYRDAY EQU   LRTDATE+1
LRTDAY   EQU   LRTYRDAY+1
LRTTIME  EQU   LRTDT+4
LRTCPU   EQU   LRTREC+16
LRTCPMOD EQU   LRTCPU+1
LRTCPUS  EQU   LRTCPMOD
LRTMODEL EQU   LRTCPMOD+3
MCHREC   EQU   0
MCHHEAD  EQU   MCHREC
MCHKEY   EQU   MCHHEAD
MCHSMS   EQU   MCHHEAD+2
MCHCPUID EQU   MCHHEAD+16
CCHREC   EQU   0
CCHHEAD  EQU   CCHREC
CCHKEY   EQU   CCHHEAD
CCHSMS   EQU   CCHHEAD+2
CCHCPUID EQU   CCHHEAD+16
CCHCODE  EQU   CCHREC+68
CCHCODE2 EQU   CCHCODE+2
CCHCUA   EQU   CCHREC+74
OBRREC   EQU   0
OBRHEAD  EQU   OBRREC
OBRKEY   EQU   OBRHEAD
OBRSMS   EQU   OBRHEAD+2
MISCSW   EQU   OBRSMS
OBRSUBTP EQU   OBRSMS+1
SDRCOUNT EQU   OBRSUBTP
OBRTEMP  EQU   OBRSUBTP
SHORTSW  EQU   OBRSUBTP
DISMOUNT EQU   OBRSUBTP
OBRCPUID EQU   OBRHEAD+16
OBRJOBID EQU   OBRREC+24
OBRSDEV2 EQU   OBRJOBID+2
OBRSSDRC EQU   OBRJOBID+4
OBRSCUA  EQU   OBRJOBID+5
OBRFCCW  EQU   OBRREC+32
OBRSRDS  EQU   OBRFCCW
OBRCSW   EQU   OBRREC+40
OBRDEVDC EQU   OBRREC+48
OBRCODE  EQU   OBRREC+52
OBRDEV   EQU   OBRCODE+2
OBRCLASS EQU   OBRDEV
OBRLSDRC EQU   OBRREC+56
OBRPCUA  EQU   OBRREC+57
OBRSEEK  EQU   OBRREC+70
OBRTERMN EQU   OBRSEEK+2
OBR34CT1 EQU   OBRTERMN+4
OBR34CT2 EQU   OBRTERMN+5
SFTREC   EQU   0
SFTHEAD  EQU   SFTREC
SFTKEY   EQU   SFTHEAD
SFTCPUID EQU   SFTHEAD+16
SFTSDWA  EQU   SFTREC+32
SFTAEC1  EQU   SFTSDWA+96
SFTFLGS  EQU   SFTSDWA+232
SFTRECP  EQU   SFTSDWA+292
IPLREC   EQU   0
IPLHEAD  EQU   IPLREC
IPLKEY   EQU   IPLHEAD
IPLCPUID EQU   IPLHEAD+16
IPLSTIME EQU   IPLREC+52
DDRREC   EQU   0
DDRHEAD  EQU   DDRREC
DDRKEY   EQU   DDRHEAD
DDRSMS   EQU   DDRHEAD+2
DDRCPUID EQU   DDRHEAD+16
@NM00052 EQU   DDRREC+24
DDRFCUA  EQU   DDRREC+45
DDRFDEV  EQU   DDRREC+48
DDRCODE2 EQU   DDRFDEV+2
DDRTODEV EQU   DDRREC+56
MIHREC   EQU   0
MIHHEAD  EQU   MIHREC
MIHKEY   EQU   MIHHEAD
@NM00054 EQU   MIHHEAD+4
MIHCPUID EQU   MIHHEAD+16
@NM00057 EQU   MIHREC+24
MIHCUA   EQU   MIHREC+35
MIHDEV   EQU   MIHREC+44
MIHCODE2 EQU   MIHDEV+2
EODREC   EQU   0
EODHEAD  EQU   EODREC
EODKEY   EQU   EODHEAD
EODCPUID EQU   EODHEAD+16
TPRREC   EQU   0
TPRHEAD  EQU   TPRREC
TPRKEY   EQU   TPRHEAD
TPRDEV   EQU   TPRHEAD+4
TPRBUFC  EQU   TPRHEAD+5
TPRCPUID EQU   TPRHEAD+16
TPRCUA   EQU   TPRREC+24
@NM00065 EQU   TPRREC+26
TPRVOL   EQU   @NM00065
TPRMODE  EQU   TPRREC+38
DVBSDRE  EQU   TPRREC+56
RMSSCBRY EQU   TPRREC+58
MCFREC   EQU   0
MCFHEAD  EQU   MCFREC
MCFKEY   EQU   MCFHEAD
MCFSMS   EQU   MCFHEAD+2
@NM00073 EQU   MCFHEAD+16
MCFSMO   EQU   MCFHEAD+17
CCFREC   EQU   0
CCFHEAD  EQU   CCFREC
CCFKEY   EQU   CCFHEAD
CCFSMS   EQU   CCFHEAD+2
@NM00081 EQU   CCFHEAD+16
CCFSMO   EQU   CCFHEAD+17
OBRLSDR  EQU   0
OBRSENSE EQU   0
OBRSENS0 EQU   OBRSENSE
OBRSENS1 EQU   OBRSENSE+1
TPRTEMP  EQU   0
TPRTMPR  EQU   TPRTEMP
TPRTMPW  EQU   TPRTEMP+1
@NM00096 EQU   0
BYTE1112 EQU   @NM00096
BYTE13   EQU   @NM00096+2
BYTE18   EQU   @NM00096+7
BYTE21   EQU   @NM00096+10
TPRSENSE EQU   0
TPRS1213 EQU   TPRSENSE
TPRS1415 EQU   TPRSENSE+2
TPRS19   EQU   TPRSENSE+7
FRAMETAB EQU   0
FRAMENUM EQU   FRAMETAB
FRAMEDTA EQU   FRAMETAB+4
FRAMEKEY EQU   FRAMEDTA
FRAMECPU EQU   FRAMEKEY
FRAMESER EQU   FRAMECPU
FRAMEMOD EQU   FRAMECPU+3
FRAMEDT  EQU   FRAMEKEY+5
FRAMETYP EQU   FRAMEKEY+13
FRAMLOCM EQU   FRAMEDTA+16
FRAMLOCC EQU   FRAMEDTA+20
LISTLOC  EQU   0
LISTNUM  EQU   LISTLOC
LISTCCHR EQU   LISTLOC+4
TMTA     EQU   0
TMTKEYA  EQU   TMTA
TMTPERMA EQU   TMTA+8
TMTTEMPA EQU   TMTA+10
NEXTBYTE EQU   0
ADDNUM   EQU   0
FLIPFLOP EQU   FLIP
YEARC    EQU   YEAR
EDFLD    EQU   EDIFILD
ERRCT1   EQU   DVBSDRE
ERRNUM   EQU   ERRPLACE
ERR78    EQU   PRINTBDY
PFRAMMOD EQU   ERR78+27
PFRAMSER EQU   ERR78+32
WORKNM   EQU   WORKBYTE
WORKNM2  EQU   WORKTWO
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00092 EQU   ERR78+31
@NM00091 EQU   ERR78
FRAMETIM EQU   FRAMEDT+4
FRAMEDAT EQU   FRAMEDT
@NM00099 EQU   TPRSENSE+4
@NM00098 EQU   @NM00096+8
@NM00097 EQU   @NM00096+3
OBRLSDR2 EQU   OBRLSDR
OBRLSDR1 EQU   OBRLSDR
CCFFRAME EQU   CCFREC+24
@NM00083 EQU   CCFHEAD+22
CCFMOD   EQU   CCFSMO+3
CCFSER   EQU   CCFSMO
CCFVER   EQU   @NM00081
@NM00082 EQU   @NM00081
CCFTIMD  EQU   CCFHEAD+12
CCFDAT   EQU   CCFHEAD+8
@NM00080 EQU   CCFHEAD+7
CCFCNT   EQU   CCFHEAD+6
@NM00079 EQU   CCFHEAD+4
@NM00078 EQU   CCFSMS+1
CCFCPU   EQU   CCFSMS+1
CCFMP    EQU   CCFSMS+1
@NM00077 EQU   CCFSMS
CCFTIM   EQU   CCFSMS
@NM00076 EQU   CCFSMS
CCFTRU   EQU   CCFSMS
CCFTOD   EQU   CCFSMS
CCFLST   EQU   CCFSMS
CCFKEY2  EQU   CCFKEY+1
CCFKEY1  EQU   CCFKEY
MCFFRAME EQU   MCFREC+24
@NM00075 EQU   MCFHEAD+22
MCFMOD   EQU   MCFSMO+3
MCFSER   EQU   MCFSMO
MCFVER   EQU   @NM00073
@NM00074 EQU   @NM00073
MCFTIMD  EQU   MCFHEAD+12
MCFDAT   EQU   MCFHEAD+8
@NM00072 EQU   MCFHEAD+7
MCFCNT   EQU   MCFHEAD+6
@NM00071 EQU   MCFHEAD+4
@NM00070 EQU   MCFSMS+1
MCFCPU   EQU   MCFSMS+1
MCFMP    EQU   MCFSMS+1
@NM00069 EQU   MCFSMS
MCFTIM   EQU   MCFSMS
@NM00068 EQU   MCFSMS
MCFTRU   EQU   MCFSMS
MCFTOD   EQU   MCFSMS
MCFLST   EQU   MCFSMS
MCFKEY2  EQU   MCFKEY+1
MCFKEY1  EQU   MCFKEY
@NM00067 EQU   TPRREC+39
TPRLINAD EQU   TPRREC+36
@NM00066 EQU   TPRREC+34
TPRCEL   EQU   TPRCPUID+6
TPRMODEL EQU   TPRCPUID+4
TPRSER   EQU   TPRCPUID+1
@NM00064 EQU   TPRCPUID
TPRTIME  EQU   TPRHEAD+12
TPRDATE  EQU   TPRHEAD+8
@NM00063 EQU   TPRHEAD+6
TPRLENGT EQU   TPRBUFC
@NM00062 EQU   TPRBUFC
TPRSMS   EQU   TPRHEAD+2
TPRKEY2  EQU   TPRKEY+1
TPRKEY1  EQU   TPRKEY
EODCEL   EQU   EODCPUID+6
EODMODEL EQU   EODCPUID+4
EODSER   EQU   EODCPUID+1
@NM00061 EQU   EODCPUID
EODTIME  EQU   EODHEAD+12
EODDATE  EQU   EODHEAD+8
@NM00060 EQU   EODHEAD+5
EODDEV   EQU   EODHEAD+4
EODSMS   EQU   EODHEAD+2
EODKEY2  EQU   EODKEY+1
EODKEY1  EQU   EODKEY
MIHTYPE  EQU   MIHCODE2+1
MIHCLASS EQU   MIHCODE2
@NM00059 EQU   MIHDEV
MIHVOL   EQU   MIHREC+38
@NM00058 EQU   @NM00057+8
MIHJOBID EQU   @NM00057
MIHCEL   EQU   MIHCPUID+6
MIHMOD   EQU   MIHCPUID+4
MIHSER   EQU   MIHCPUID+1
@NM00056 EQU   MIHCPUID
MIHTIME  EQU   MIHHEAD+12
MIHDATE  EQU   MIHHEAD+8
@NM00055 EQU   MIHHEAD+6
MIHCSID  EQU   MIHHEAD+5
MIHDEBIT EQU   @NM00054
MIHCEBIT EQU   @NM00054
MIHSMS   EQU   MIHHEAD+2
MIHKEY2  EQU   MIHKEY+1
MIHKEY1  EQU   MIHKEY
DDRDEV2  EQU   DDRTODEV+2
DDRDEV1  EQU   DDRTODEV
DDRTOCUA EQU   DDRREC+53
@NM00053 EQU   DDRREC+52
DDRTYPE  EQU   DDRCODE2+1
DDRCLASS EQU   DDRCODE2
DDRCODE1 EQU   DDRFDEV
DDRPHD   EQU   @NM00052+20
DDRVOL2  EQU   @NM00052+14
DDRVOL1  EQU   @NM00052+8
DDRJOBID EQU   @NM00052
DDRCEL   EQU   DDRCPUID+6
DDRMOD   EQU   DDRCPUID+4
DDRSER   EQU   DDRCPUID+1
@NM00051 EQU   DDRCPUID
DDRTIME  EQU   DDRHEAD+12
DDRDATE  EQU   DDRHEAD+8
@NM00050 EQU   DDRHEAD+4
DDRDEPSW EQU   DDRSMS+1
@NM00049 EQU   DDRSMS
DDRKEY2  EQU   DDRKEY+1
DDRKEY1  EQU   DDRKEY
IPLSHSEC EQU   IPLSTIME+3
IPLSSEC  EQU   IPLSTIME+2
IPLSMIN  EQU   IPLSTIME+1
IPLSHOUR EQU   IPLSTIME
IPLSDATE EQU   IPLREC+48
IPLTEMP  EQU   IPLREC+46
IPLHIGH  EQU   IPLREC+42
IPLCHAN  EQU   IPLREC+32
@NM00048 EQU   IPLREC+30
IPLREAS  EQU   IPLREC+28
@NM00047 EQU   IPLREC+25
IPLSYSID EQU   IPLREC+24
IPLCEL   EQU   IPLCPUID+6
IPLMOD   EQU   IPLCPUID+4
IPLSER   EQU   IPLCPUID+1
@NM00046 EQU   IPLCPUID
IPLTIME  EQU   IPLHEAD+12
IPLDATE  EQU   IPLHEAD+8
@NM00045 EQU   IPLHEAD+4
IPLSMS   EQU   IPLHEAD+2
IPLKEY2  EQU   IPLKEY+1
IPLKEY1  EQU   IPLKEY
SFTXDATA EQU   SFTREC+434
SFTLVARA EQU   SFTREC+432
SFTREXN  EQU   SFTRECP+16
SFTCSECT EQU   SFTRECP+8
SFTMODN  EQU   SFTRECP
@NM00044 EQU   SFTSDWA+238
SFTLCPUA EQU   SFTSDWA+236
SFTERRD  EQU   SFTFLGS+3
SFTERRC  EQU   SFTFLGS+2
SFTERRB  EQU   SFTFLGS+1
SFTERRA  EQU   SFTFLGS
@NM00043 EQU   SFTSDWA+136
SFTAAEC1 EQU   SFTSDWA+120
@NM00042 EQU   SFTSDWA+112
SFTPROGC EQU   SFTAEC1+8
@NM00041 EQU   SFTAEC1
@NM00040 EQU   SFTSDWA+88
SFTGRSV  EQU   SFTSDWA+24
SFTABNDC EQU   SFTSDWA
SFTJOBID EQU   SFTREC+24
SFTCEL   EQU   SFTCPUID+6
SFTMOD   EQU   SFTCPUID+4
SFTSER   EQU   SFTCPUID+1
@NM00039 EQU   SFTCPUID
SFTTIME  EQU   SFTHEAD+12
SFTDATE  EQU   SFTHEAD+8
@NM00038 EQU   SFTHEAD+4
SFTSMS   EQU   SFTHEAD+2
SFTKEY2  EQU   SFTKEY+1
SFTKEY1  EQU   SFTKEY
@NM00037 EQU   OBRTERMN
@NM00036 EQU   OBRSEEK+1
OBRTCAM  EQU   OBRSEEK
OBRVOL   EQU   OBRREC+64
OBRSBCNT EQU   OBRREC+62
OBRRETRY EQU   OBRREC+60
OBRTYPE  EQU   OBRDEV+1
OBRCODE1 EQU   OBRCODE
OBRSECUA EQU   OBRREC+49
OBRSTAT  EQU   OBRCSW+4
@NM00035 EQU   OBRCSW
OBRSDRS2 EQU   OBRSRDS
OBRSDRS1 EQU   OBRSRDS
OBRSDEV1 EQU   OBRJOBID
OBRCEL   EQU   OBRCPUID+6
OBRMOD   EQU   OBRCPUID+4
OBRSER   EQU   OBRCPUID+1
@NM00034 EQU   OBRCPUID
OBRTIME  EQU   OBRHEAD+12
OBRDATE  EQU   OBRHEAD+8
@NM00033 EQU   OBRHEAD+4
@NM00032 EQU   OBRSUBTP
@NM00031 EQU   OBRSUBTP
@NM00030 EQU   MISCSW
TRUNC    EQU   MISCSW
@NM00029 EQU   MISCSW
OBRKEY2  EQU   OBRKEY+1
OBRKEY1  EQU   OBRKEY
CCHLOG   EQU   CCHREC+80
CCHMP    EQU   CCHREC+76
@NM00028 EQU   CCHREC+73
CCHID    EQU   CCHREC+72
CCHTYPE  EQU   CCHCODE2+1
CCHCLASS EQU   CCHCODE2
CCHCODE1 EQU   CCHCODE
CCHECSW  EQU   CCHREC+64
CCHCSW   EQU   CCHREC+56
CCHFCCW  EQU   CCHREC+48
CCHATIO  EQU   CCHREC+32
CCHJOBID EQU   CCHREC+24
CCHCEL   EQU   CCHCPUID+6
CCHMOD   EQU   CCHCPUID+4
CCHSER   EQU   CCHCPUID+1
@NM00027 EQU   CCHCPUID
CCHTIME  EQU   CCHHEAD+12
CCHDATE  EQU   CCHHEAD+8
@NM00026 EQU   CCHHEAD+4
CCHRINC  EQU   CCHSMS+1
@NM00025 EQU   CCHSMS
CCHRCRH  EQU   CCHSMS
@NM00024 EQU   CCHSMS
CCHKEY2  EQU   CCHKEY+1
CCHKEY1  EQU   CCHKEY
MCHLOG   EQU   MCHREC+48
MCHOPSW  EQU   MCHREC+40
MCHJOBID EQU   MCHREC+32
MCHPGMID EQU   MCHREC+24
MCHCEL   EQU   MCHCPUID+6
MCHMOD   EQU   MCHCPUID+4
MCHSER   EQU   MCHCPUID+1
@NM00023 EQU   MCHCPUID
MCHTIME  EQU   MCHHEAD+12
MCHDATE  EQU   MCHHEAD+8
@NM00022 EQU   MCHHEAD+4
MCHSYSTR EQU   MCHSMS+1
@NM00021 EQU   MCHSMS
MCHKEY2  EQU   MCHKEY+1
MCHKEY1  EQU   MCHKEY
LRTMCEL  EQU   LRTCPU+6
@NM00020 EQU   LRTCPU
LRTHSECS EQU   LRTTIME+3
LRTSEC   EQU   LRTTIME+2
LRTMIN   EQU   LRTTIME+1
LRTHOUR  EQU   LRTTIME
LRTYEAR  EQU   LRTYRDAY
LRTDATE0 EQU   LRTDATE
@NM00019 EQU   @NM00017+3
@NM00018 EQU   @NM00017
LRTDSMNT EQU   LRTERRID
@NM00016 EQU   LRTERRID
LRTSHRT  EQU   LRTERRID
@NM00015 EQU   LRTERRID
@NM00014 EQU   LRTSMS
LRTIMCNV EQU   LRTSMS
@NM00013 EQU   LRTSMS
LRNS     EQU   LRTSMS
LRTKEY2  EQU   LRTKEY+1
TMPTEMP  EQU   TMP2+10
TMPPERM  EQU   TMPPERM1+1
@NM00012 EQU   TMPPERM1
TMPRANGE EQU   TMP2+7
TMPDEV   EQU   TMPKEY+5
TMPOLDA  EQU   TMPITEM
TMP3705  EQU   TMPITEM
TMPOLD   EQU   TMPCPUS
TMPCPU   EQU   TMPCPUS
TMPCUA   EQU   TMPSRT
TMPGROUP EQU   TMPKEY
TMTTEMP  EQU   TMT2+10
TMTPERM  EQU   TMTPERM1+1
@NM00011 EQU   TMTPERM1
TMTDEV   EQU   TMTKEY+6
TMTDAT   EQU   TMTKEY+5
TMTOLDA  EQU   TMTITEM
TMT3705  EQU   TMTITEM
TMTOLD   EQU   TMTCPUS
TMTCPU   EQU   TMTCPUS
TMTCUA   EQU   TMTSRT
TMTGROUP EQU   TMTKEY
SYMVAL2  EQU   SYMVAL+2
SYMVAL1  EQU   SYMVAL
SYMCDNUM EQU   SYMCODE
LIBVAL   EQU   LIBADR+2
LIBADNUM EQU   LIBADR
CPUCUX3  EQU   CPUCUAV+5
CPUCUX2  EQU   CPUCUAV+3
CPUCUX1  EQU   CPUCUAV
CPCUANUM EQU   CPUCUAS
CPUVAL   EQU   CPUS+2
CPUNUM   EQU   CPUS
VOLVAL   EQU   VOLUME+2
VOLNUM   EQU   VOLUME
SERVAL   EQU   DEVSERAL+2
SERNUM   EQU   DEVSERAL
MODVAL   EQU   MODELS+2
MODNUM   EQU   MODELS
LOADPTR  EQU   EDITABLE+8
LOADNAME EQU   EDITABLE
EDITNUM  EQU   EDITLOAD
SHRCUABH EQU   SHRBASE+5
SYSUMEOD EQU   SYSUMONE+96
SYSUMPER EQU   SYSUMONE+92
SYSUMPEA EQU   SYSUMONE+88
SYSUMPEI EQU   SYSUMONE+84
SYSUMCH  EQU   SYSUMONE+20
SYSUMMCN EQU   SYSUMONE+16
SYSUMMCR EQU   SYSUMONE+12
SYSUMNXT EQU   SYSUMONE+8
SYSUMIPL EQU   SYSUMONE+4
SYSUMNUM EQU   SYSUMONE
SORTCORE EQU   SORTCCHR
SORTTIME EQU   SORTKEY+1
SORTYEAR EQU   SORTKEY
EVDAY    EQU   EVSTOP+1
EVYEAR   EQU   EVSTOP
DUMPSIZE EQU   DUMPINFO+4
DUMPADR  EQU   DUMPINFO
DUMPNUM  EQU   DUMPTABL
@NM00010 EQU   PARM+212
RECLNGT1 EQU   PARM+204
ADCPUT   EQU   PARM+144
LINECT   EQU   PARM+120
RECLNGTH EQU   CCHHRLNG+6
@NM00009 EQU   CCHHRLNG+5
USERPGM  EQU   PARM+102
IDTSEC   EQU   IDTIME+3
IDSEC    EQU   IDTIME+2
IDMIN    EQU   IDTIME+1
IDHOUR   EQU   IDTIME
IDASID   EQU   ERRID+4
IDCPU    EQU   ERRID+3
@NM00008 EQU   ERRID+2
IDVALUE  EQU   ERRID
SYSRETRN EQU   @NM00007
NUMIN222 EQU   @NM00006
WRTHRSH  EQU   PARM+69
RDTHRSH  EQU   PARM+66
TERM     EQU   PARM+58
EVSDAY   EQU   STRTDATE+1
EVSYEAR  EQU   STRTDATE
PENSEC2  EQU   ENDTIME2+2
PENMIN2  EQU   ENDTIME2+1
PENHOUR2 EQU   ENDTIME2
PSTSEC2  EQU   STTIME2+2
PSTMIN2  EQU   STTIME2+1
PSTHOUR2 EQU   STTIME2
PENSEC1  EQU   ENDTIME1+2
PENMIN1  EQU   ENDTIME1+1
PENHOUR1 EQU   ENDTIME1
PSTSEC1  EQU   STTIME1+2
PSTMIN1  EQU   STTIME1+1
PSTHOUR1 EQU   STTIME1
@NM00005 EQU   ENDDT+4
PENYR    EQU   PEND
@NM00004 EQU   ENDDATE
@NM00003 EQU   STDT+4
@NM00002 EQU   STDATE
YEARNOW  EQU   DATENOW+4
@NM00001 EQU   DATENOW+3
DAYNOW   EQU   DATENOW
CSNAP    EQU   CLOSEIO
CSYSIN   EQU   CLOSEIO
CSERLOG  EQU   CLOSEIO
CEREPPT  EQU   CLOSEIO
CTOURIST EQU   CLOSEIO
OSNAP    EQU   OPENIO
ODRCTWRK EQU   OPENIO
OSYSIN   EQU   OPENIO
OACCDEV  EQU   OPENIO
OACCIN   EQU   OPENIO
OSERLOG  EQU   OPENIO
OEREPPT  EQU   OPENIO
OTOURIST EQU   OPENIO
PLOGREC  EQU   MISC
ERRORID  EQU   MISC
PSUM     EQU   PRINTES
PEDIT    EQU   PRINTES
PZERO    EQU   MISC
DEBUG63  EQU   DEBUGA+3
DEBUG62  EQU   DEBUGA+3
DEBUG61  EQU   DEBUGA+3
DEBUG60  EQU   DEBUGA+3
DEBUG59  EQU   DEBUGA+3
DEBUG58  EQU   DEBUGA+3
DEBUG57  EQU   DEBUGA+3
DEBUG56  EQU   DEBUGA+3
DEBUG55  EQU   DEBUGA+2
DEBUG54  EQU   DEBUGA+2
DEBUG53  EQU   DEBUGA+2
DEBUG52  EQU   DEBUGA+2
DEBUG51  EQU   DEBUGA+2
DEBUG49  EQU   DEBUGA+2
DEBUG48  EQU   DEBUGA+2
DEBUG47  EQU   DEBUGA+1
DEBUG46  EQU   DEBUGA+1
DEBUG45  EQU   DEBUGA+1
DEBUG44  EQU   DEBUGA+1
DEBUG43  EQU   DEBUGA+1
DEBUG42  EQU   DEBUGA+1
DEBUG41  EQU   DEBUGA+1
DEBUG40  EQU   DEBUGA+1
DEBUG39  EQU   DEBUGA
DEBUG38  EQU   DEBUGA
DEBUG37  EQU   DEBUGA
DEBUG36  EQU   DEBUGA
DEBUG35  EQU   DEBUGA
DEBUG34  EQU   DEBUGA
DEBUG33  EQU   DEBUGA
DEBUG32  EQU   DEBUGA
DEBUG31  EQU   DEBUG+3
DEBUG30  EQU   DEBUG+3
DEBUG29  EQU   DEBUG+3
DEBUG28  EQU   DEBUG+3
DEBUG27  EQU   DEBUG+3
DEBUG26  EQU   DEBUG+3
DEBUG25  EQU   DEBUG+3
DEBUG24  EQU   DEBUG+3
DEBUG22  EQU   DEBUG+2
DEBUG21  EQU   DEBUG+2
DEBUG20  EQU   DEBUG+2
DEBUG19  EQU   DEBUG+2
DEBUG18  EQU   DEBUG+2
DEBUG17  EQU   DEBUG+2
DEBUG15  EQU   DEBUG+1
DEBUG14  EQU   DEBUG+1
DEBUG13  EQU   DEBUG+1
DEBUG12  EQU   DEBUG+1
DEBUG10  EQU   DEBUG+1
DEBUG9   EQU   DEBUG+1
DEBUG8   EQU   DEBUG+1
DEBUG7   EQU   DEBUG
DEBUG6   EQU   DEBUG
DEBUG5   EQU   DEBUG
DEBUG3   EQU   DEBUG
DEBUG2   EQU   DEBUG
DEBUG1   EQU   DEBUG
DEBUG0   EQU   DEBUG
SORTBRK  EQU   SWITCHES+1
COREFAIL EQU   SWITCHES+1
ANALYSIS EQU   SWITCHES+1
NOTALL   EQU   SWITCHES+1
NOSDR    EQU   SWITCHES
TIMESEQ  EQU   SWITCHES
SYSUM    EQU   SWITCHES
PARMTHR  EQU   SWITCHES
TREND    EQU   SWITCHES
SHORTOBR EQU   SWITCHES
PARMMES  EQU   SWITCHES
RDESUM   EQU   SWITCHES
PCCHFRAM EQU   RECTYPE+1
PMCHFRAM EQU   RECTYPE+1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00454 EQU   @EL00006
@RF00489 EQU   @EL00007
@RF00512 EQU   @RC00510
@RF00527 EQU   @RC00525
@RF00546 EQU   @EL00008
@RF00567 EQU   @EL00009
@RF00579 EQU   @EL00010
@RC00583 EQU   @EL00011
@RC00589 EQU   @EL00011
@RC00595 EQU   @EL00011
@RC00601 EQU   @EL00011
@RC00607 EQU   @EL00011
@RF00613 EQU   @EL00011
@RF00627 EQU   @EL00012
@RC00625 EQU   @EL00012
@RF00711 EQU   @RC00702
@RF00784 EQU   @EL00014
@RF00787 EQU   @EL00014
@RC00794 EQU   @EL00015
@RC00807 EQU   @EL00016
@RC00810 EQU   @EL00016
@RC00816 EQU   @EL00016
@RC00819 EQU   @EL00016
@RC00822 EQU   @EL00016
@RC00825 EQU   @EL00016
@RC00828 EQU   @EL00016
@RC00831 EQU   @EL00016
@RC00834 EQU   @EL00016
@RC00852 EQU   @RC00850
@RC00882 EQU   @RC00877
@RC00925 EQU   @EL00018
@RC00944 EQU   @EL00019
@RF00960 EQU   @EL00019
@RF00964 EQU   @EL00019
@RC00970 EQU   @EL00020
@RF00977 EQU   @EL00020
@RF00981 EQU   @EL00020
@RC00983 EQU   @EL00020
@RC01005 EQU   @EL00020
@RC00986 EQU   @EL00020
@RC01022 EQU   @EL00021
@RF01030 EQU   @EL00021
@RF01037 EQU   @EL00021
@RC01044 EQU   @EL00022
@RF01052 EQU   @EL00022
@RF01059 EQU   @EL00022
@RC01067 EQU   @EL00023
@RF01075 EQU   @EL00023
@RF01078 EQU   @EL00023
@RF01115 EQU   @EL00023
@RC01132 EQU   @EL00024
@RF01136 EQU   @EL00024
@RC01145 EQU   @EL00025
@RC01151 EQU   @EL00026
@RF01155 EQU   @EL00026
@RF01159 EQU   @EL00026
@RC01175 EQU   @EL00027
@RF01179 EQU   @EL00027
@RC01214 EQU   @EL00028
@RC01187 EQU   @EL00028
@RF01232 EQU   @EL00028
@RF01245 EQU   @EL00029
@RC01379 EQU   @RC01377
@RF01397 EQU   @EL00034
@RF01439 EQU   @RC01402
@RF01475 EQU   @EL00036
@RC01488 EQU   @EL00037
@PB00037 EQU   @EL00001
@RC00796 EQU   @RC00794
@RF00935 EQU   @RC00925
@RF00992 EQU   @RC00986
@RC01189 EQU   @RC01187
@RF01207 EQU   @RC01187
@PB00036 EQU   @PB00037
@RC01490 EQU   @RC01488
@RC01502 EQU   @RC01488
@RF00798 EQU   @RC00796
@PB00035 EQU   @PB00036
@RF01495 EQU   @RC01490
@RC01505 EQU   @RC01502
@PB00034 EQU   @PB00035
@RF01509 EQU   @RC01505
@RF01511 EQU   @RC01505
@RC01513 EQU   @RC01505
@RC01520 EQU   @RC01505
@PB00033 EQU   @PB00034
@PB00032 EQU   @PB00033
@PB00031 EQU   @PB00032
@PB00030 EQU   @PB00031
@PB00029 EQU   @PB00030
@PB00028 EQU   @PB00029
@PB00027 EQU   @PB00028
@PB00026 EQU   @PB00027
@PB00025 EQU   @PB00026
@PB00024 EQU   @PB00025
@PB00023 EQU   @PB00024
@PB00022 EQU   @PB00023
@PB00021 EQU   @PB00022
@PB00020 EQU   @PB00021
@PB00019 EQU   @PB00020
@PB00018 EQU   @PB00019
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@RF00247 EQU   @PB00002
@ENDDATA EQU   *
         END   IFCFILT3
