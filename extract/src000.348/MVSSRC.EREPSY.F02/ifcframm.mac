         TITLE 'IFCFRAMM - OUTPUT MCH INDEPENDENT INFO'
IFCFRAMM CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IFCFRAMM  79.011'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         LA    @05,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         USING @PSTART+12285,@05                                   0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         B     @PB00002                                            0135
CONVBIN2 STM   @14,@12,12(@13)                                     0135
         MVC   @PC00002(8),0(@01)                                  0135
* R8 = BWORD2;                                             /*@0001VLS*/
         L     @06,@PC00002                                        0139
         L     R8,BWORD2(,@06)                                     0139
* CVD(R8,DBLWORD);                                         /*@0001VLS*/
         CVD   R8,DBLWORD                                          0140
* UNPK(WORK(1:8),DBLWORD);                                 /*@0001VLS*/
         UNPK  WORK(8),DBLWORD(8)                                  0141
* WORK(8) = WORK(8) × FOXZERO;                             /*@0001VLS*/
         OI    WORK+7,C'0'                                         0142
* SWITCH1 = OFF;                                           /*@0001VLS*/
         NI    SWITCH1,B'01111111'                                 0143
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@0001VLS*/
         LA    L,1                                                 0144
@DL00144 TM    SWITCH1,B'10000000'                                 0144
         BNZ   @DC00144                                            0144
*  IF WORK(L) = FOXZERO THEN     /*REMOVE THE LEADING ZEROS  @0001VLS*/
         LA    @09,WORK-1(L)                                       0145
         CLI   0(@09),C'0'                                         0145
         BNE   @RF00145                                            0145
*    WORK(L) = BLANK;            /*REPLACE WITH A BLANK CHARACTER    */
         LA    @09,WORK-1(L)                                       0146
         MVI   0(@09),C' '                                         0146
*   ELSE                                                           0147
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/
         B     @RC00145                                            0147
@RF00145 OI    SWITCH1,B'10000000'                                 0147
* END;                                                     /*@0001VLS*/
@RC00145 AL    L,@CF00055                                          0148
         C     L,@CF00082                                          0148
         BNH   @DL00144                                            0148
@DC00144 DS    0H                                                  0149
* DADDR2(1:2) = WORK(7:8);                                 /*@G51DGVS*/
         L     @09,@PC00002+4                                      0149
         MVC   DADDR2(2,@09),WORK+6                                0149
* RESPECIFY (R8) UNRESTRICTED;                             /*@0001VLS*/
*END;                                                      /*@0001VLS*/
@EL00002 DS    0H                                                  0151
@EF00002 DS    0H                                                  0151
@ER00002 LM    @14,@12,12(@13)                                     0151
         BR    @14                                                 0151
*/*                                                          @0001VLS*/
*/* CONVERT A BINARY NUMBER TO PRINTABLE.  PRINT ONLY FIVE DIGITS.   */
*/*                                                          @0001VLS*/
*CONVBIN: PROC(BINWORD,DECADDR);                           /*@0001VLS*/
CONVBIN  STM   @14,@12,12(@13)                                     0152
         MVC   @PC00003(8),0(@01)                                  0152
* DCL  BINWORD FIXED(31);                                  /*@0001VLS*/
* DCL  DECADDR CHAR(20);                                   /*@0001VLS*/
* RESPECIFY (R8) RESTRICTED;                               /*@0001VLS*/
* R8 = BINWORD;                  /*LOAD THE ITEM TO CONVERT  @0001VLS*/
         L     @06,@PC00003                                        0156
         L     R8,BINWORD(,@06)                                    0156
* CVD(R8,DBLWORD);                                         /*@0001VLS*/
         CVD   R8,DBLWORD                                          0157
* UNPK(WORK(1:8),DBLWORD);                                 /*@0001VLS*/
         UNPK  WORK(8),DBLWORD(8)                                  0158
* WORK(8) = WORK(8) × FOXZERO;                             /*@0001VLS*/
         OI    WORK+7,C'0'                                         0159
* SWITCH1 = OFF;                                           /*@0001VLS*/
         NI    SWITCH1,B'01111111'                                 0160
* DO L = 1 BY 1 TO 7 WHILE(SWITCH1 = OFF);                 /*@0001VLS*/
         LA    L,1                                                 0161
@DL00161 TM    SWITCH1,B'10000000'                                 0161
         BNZ   @DC00161                                            0161
*  IF WORK(L) = FOXZERO THEN     /*REMOVE THE LEADING ZEROS  @0001VLS*/
         LA    @09,WORK-1(L)                                       0162
         CLI   0(@09),C'0'                                         0162
         BNE   @RF00162                                            0162
*    WORK(L) = BLANK;            /*REPLACE WITH A BLANK CHARACTER    */
         LA    @09,WORK-1(L)                                       0163
         MVI   0(@09),C' '                                         0163
*   ELSE                                                           0164
*    SWITCH1 = ON;               /*TELL LOOP THE END OF LEADING ZEROS*/
         B     @RC00162                                            0164
@RF00162 OI    SWITCH1,B'10000000'                                 0164
* END;                                                     /*@0001VLS*/
@RC00162 AL    L,@CF00055                                          0165
         C     L,@CF00082                                          0165
         BNH   @DL00161                                            0165
@DC00161 DS    0H                                                  0166
* DECADDR(1:5) = WORK(4:8);      /* MOVE THE DATA TO THE OUTPUT LINE */
         L     @09,@PC00003+4                                      0166
         MVC   DECADDR(5,@09),WORK+3                               0166
* RESPECIFY (R8) UNRESTRICTED;                             /*@0001VLS*/
*END;                                                      /*@0001VLS*/
@EL00003 DS    0H                                                  0168
@EF00003 DS    0H                                                  0168
@ER00003 LM    @14,@12,12(@13)                                     0168
         BR    @14                                                 0168
* /*                                                         @0001VLS*/
* /* CONVERT CHARACTERS TO PRINTABLE                         @0001VLS*/
* /*                                                         @0001VLS*/
*CONVERT: PROC(NEXTBYTE,ADDNUM,LENNUM);                    /*@0001VLS*/
CONVERT  STM   @14,@12,12(@13)                                     0169
         MVC   @PC00004(12),0(@01)                                 0169
* DCL NEXTBYTE  CHAR(11);                                  /*@0001VLS*/
* DCL ADDNUM    CHAR(133);                                 /*@0001VLS*/
* DCL LENNUM    FIXED(31);        /* HOW MUCH TO CONVERT     @0001VLS*/
* RESPECIFY (R8,R9) RESTRICTED;                            /*@0001VLS*/
* DO L = LENNUM BY -1 TO ONE;                              /*@0001VLS*/
         L     @06,@PC00004+8                                      0174
         L     L,LENNUM(,@06)                                      0174
         B     @DE00174                                            0174
@DL00174 DS    0H                                                  0175
*  R8 = NEXTBYTE(L);              /* LOAD THE NEXT BYTE      @0001VLS*/
         L     @06,@PC00004                                        0175
         BCTR  @06,0                                               0175
         SLR   R8,R8                                               0175
         IC    R8,NEXTBYTE(L,@06)                                  0175
*  J = TWO * L;                   /* INDEX FOR STORING CONVERTED 1/2 */
         LR    @06,L                                               0176
         ALR   @06,@06                                             0176
         ST    @06,J                                               0176
*                                 /* BYTE.  INPUT IS 2 CHARS @0001VLS*/
*  SRDL(R8,FOUR);                 /* SPLIT THE BYTE IN HALF  @0001VLS*/
         SRDL  R8,4                                                0177
*  SRL(R9,28);                    /* RIGHT JUSTIFY SPLIT HALF BYTE   */
         SRL   R9,28                                               0178
*  R9 = R9 + ONE;                                          /*@0001VLS*/
         LA    @04,1                                               0179
         ALR   R9,@04                                              0179
*  R8 = R8 + ONE;                                          /*@0001VLS*/
         ALR   R8,@04                                              0180
*  ADDNUM(J-ONE) = CHARS(R8);     /* CHARS IS 16 CHAR STRING FOR     */
         L     @04,@PC00004+4                                      0181
         ALR   @06,@04                                             0181
         BCTR  @06,0                                               0181
         BCTR  @06,0                                               0181
         LA    @01,CHARS-1(R8)                                     0181
         MVC   ADDNUM(1,@06),0(@01)                                0181
*  ADDNUM(J)     = CHARS(R9);     /* CONVERTING HEX NUMS TO PRINT    */
         L     @06,J                                               0182
         ALR   @04,@06                                             0182
         BCTR  @04,0                                               0182
         LA    @06,CHARS-1(R9)                                     0182
         MVC   ADDNUM(1,@04),0(@06)                                0182
* END;                                                     /*@0001VLS*/
         BCTR  L,0                                                 0183
@DE00174 LTR   L,L                                                 0183
         BP    @DL00174                                            0183
*END;                                                      /*@0001VLS*/
@EL00004 DS    0H                                                  0184
@EF00004 DS    0H                                                  0184
@ER00004 LM    @14,@12,12(@13)                                     0184
         BR    @14                                                 0184
*RESPECIFY (R8,R9) UNRESTRICTED;                           /*@0001VLS*/
*/*                                                          @0001VLS*/
*/* OUTPUT THE PRINT LINE.  IF A PAGE OVERFLOW OCCURS, EJECT TO A NEW*/
*/* PAGE.  THE PRINT LINE IS PLACE IN THE VARIABLE BLINE.    @0001VLS*/
*/*                                                          @0001VLS*/
*PRINTER: PROC(LINENO);                                    /*@0001VLS*/
PRINTER  STM   @14,@02,@SA00005                                    0186
         STM   @04,@12,@SA00005+20                                 0186
         MVC   @PC00005(4),0(@01)                                  0186
*  DCL LINENO CHAR(134);                                   /*@0001VLS*/
*  IF MYLINCT < ONE THEN                                           0188
         LTR   MYLINCT,MYLINCT                                     0188
         BP    @RF00188                                            0188
*    DO;                                                   /*@0001VLS*/
*      PRINTADR = ADDR(EJECT);                             /*@0001VLS*/
         LA    @06,EJECT                                           0190
         ST    @06,PRINTADR(,R2)                                   0190
*      RESPECIFY (R15) RESTRICTED;                         /*@0001VLS*/
*      CALL IOHND(RITEPRTR);                               /*@0001VLS*/
         L     @15,ADIOHND(,R2)                                    0192
         LA    @01,@AL00192                                        0192
         BALR  @14,@15                                             0192
*      IF R15 ^= ZERO THEN                                         0193
         LTR   R15,R15                                             0193
         BZ    @RF00193                                            0193
*        GEN( DC X'0000');                                 /*@0001VLS*/
          DC X'0000'
*      RESPECIFY (R15) UNRESTRICTED;                       /*@0001VLS*/
@RF00193 DS    0H                                                  0196
*      MYLINCT = LINECT - 1;                               /*@0001VLS*/
         LH    MYLINCT,LINECT(,R2)                                 0196
         BCTR  MYLINCT,0                                           0196
*    END;                                                  /*@0001VLS*/
*  BLINE = LINENO;                                         /*@0001VLS*/
@RF00188 L     @06,@PC00005                                        0198
         MVC   BLINE(134),LINENO(@06)                              0198
*  PRINTADR = ADDR(BLINE);                                 /*@0001VLS*/
         LA    @06,BLINE                                           0199
         ST    @06,PRINTADR(,R2)                                   0199
*  RESPECIFY (R15) RESTRICTED;                             /*@0001VLS*/
*  CALL IOHND(RITEPRTR);                                   /*@0001VLS*/
         L     @15,ADIOHND(,R2)                                    0201
         LA    @01,@AL00201                                        0201
         BALR  @14,@15                                             0201
*  IF R15 ^= ZERO THEN                                             0202
         LTR   R15,R15                                             0202
         BZ    @RF00202                                            0202
*    GEN ( DC X'0000');                                    /*@0001VLS*/
          DC X'0000'
*  RESPECIFY (R15) UNRESTRICTED;                           /*@0001VLS*/
@RF00202 DS    0H                                                  0205
*  MYLINCT = MYLINCT - 1;                                  /*@0001VLS*/
         BCTR  MYLINCT,0                                           0205
* END;                                                     /*@0001VLS*/
@EL00005 DS    0H                                                  0206
@EF00005 DS    0H                                                  0206
@ER00005 LM    @14,@02,@SA00005                                    0206
         LM    @04,@12,@SA00005+20                                 0206
         BR    @14                                                 0206
*/*                                                          @0001VLS*/
*/* OUTPUT THE EXTERNAL DAMAGE SECTION OF THE REPORT.        @0001VLS*/
*/*                                                          @0001VLS*/
*EXTDAM: PROC;                                             /*@0001VLS*/
EXTDAM   STM   @14,@02,@SA00006                                    0207
         STM   @04,@12,@SA00006+20                                 0207
*  CALL PRINTER(BLINE);                                    /*@0001VLS*/
         LA    @01,@AL00208                                        0208
         BAL   @14,PRINTER                                         0208
*  CALL PRINTER(LINE28C);                                  /*@0001VLS*/
         LA    @01,@AL00209                                        0209
         BAL   @14,PRINTER                                         0209
*  CALL PRINTER(BLINE);                                    /*@0001VLS*/
         LA    @01,@AL00210                                        0210
         BAL   @14,PRINTER                                         0210
*  IF LRBRESV = ON THEN                                            0211
         TM    LRBRESV(R7),B'10000000'                             0211
         BNO   @RF00211                                            0211
*    RESV = FOXONE;                                        /*@0001VLS*/
         MVI   RESV,C'1'                                           0212
*  ELSE                                                            0213
*    RESV = FOXZERO;                                       /*@0001VLS*/
         B     @RC00211                                            0213
@RF00211 MVI   RESV,C'0'                                           0213
*  IF LRBMCCF = ON THEN                                            0214
@RC00211 TM    LRBMCCF(R7),B'00001000'                             0214
         BNO   @RF00214                                            0214
*    MCCF = FOXONE;                                        /*@0001VLS*/
         MVI   MCCF,C'1'                                           0215
*  ELSE                                                            0216
*    MCCF = FOXZERO;                                       /*@0001VLS*/
         B     @RC00214                                            0216
@RF00214 MVI   MCCF,C'0'                                           0216
*  CALL PRINTER(LINE28D);                                  /*@0001VLS*/
@RC00214 LA    @01,@AL00217                                        0217
         BAL   @14,PRINTER                                         0217
*  IF LRBMCOPR = ON THEN                                           0218
         TM    LRBMCOPR(R7),B'01000000'                            0218
         BNO   @RF00218                                            0218
*    MCOPR = FOXONE;                                       /*@0001VLS*/
         MVI   MCOPR,C'1'                                          0219
*  ELSE                                                            0220
*    MCOPR = FOXZERO;                                      /*@0001VLS*/
         B     @RC00218                                            0220
@RF00218 MVI   MCOPR,C'0'                                          0220
*  IF LRBMINST = ON THEN                                           0221
@RC00218 TM    LRBMINST(R7),B'00000100'                            0221
         BNO   @RF00221                                            0221
*    MINST = FOXONE;                                       /*@0001VLS*/
         MVI   MINST,C'1'                                          0222
*  ELSE                                                            0223
*    MINST = FOXZERO;                                      /*@0001VLS*/
         B     @RC00221                                            0223
@RF00221 MVI   MINST,C'0'                                          0223
*  CALL PRINTER(LINE28E);                                  /*@0001VLS*/
@RC00221 LA    @01,@AL00224                                        0224
         BAL   @14,PRINTER                                         0224
*  IF LRBMEXSR = ON THEN                                           0225
         TM    LRBMEXSR(R7),B'00100000'                            0225
         BNO   @RF00225                                            0225
*    MEXSR = FOXONE;                                       /*@0001VLS*/
         MVI   MEXSR,C'1'                                          0226
*  ELSE                                                            0227
*    MEXSR = FOXZERO;                                      /*@0001VLS*/
         B     @RC00225                                            0227
@RF00225 MVI   MEXSR,C'0'                                          0227
*  IF LRBMINTR = ON THEN                                           0228
@RC00225 TM    LRBMINTR(R7),B'00000010'                            0228
         BNO   @RF00228                                            0228
*    MINTR = FOXONE;                                       /*@0001VLS*/
         MVI   MINTR,C'1'                                          0229
*  ELSE                                                            0230
*    MINTR = FOXZERO;                                      /*@0001VLS*/
         B     @RC00228                                            0230
@RF00228 MVI   MINTR,C'0'                                          0230
*  CALL PRINTER(LINE28F);                                  /*@0001VLS*/
@RC00228 LA    @01,@AL00231                                        0231
         BAL   @14,PRINTER                                         0231
*  IF LRBMCNOP = ON THEN                                           0232
         TM    LRBMCNOP(R7),B'00010000'                            0232
         BNO   @RF00232                                            0232
*    MCNOP = FOXONE;                                       /*@0001VLS*/
         MVI   MCNOP,C'1'                                          0233
*  ELSE                                                            0234
*    MCNOP = FOXZERO;                                      /*@0001VLS*/
         B     @RC00232                                            0234
@RF00232 MVI   MCNOP,C'0'                                          0234
*  IF LRBMDISC = ON THEN                                           0235
@RC00232 TM    LRBMDISC(R7),B'00000001'                            0235
         BNO   @RF00235                                            0235
*    MDISC = FOXONE;                                       /*@0001VLS*/
         MVI   MDISC,C'1'                                          0236
*  ELSE                                                            0237
*    MDISC = FOXZERO;                                      /*@0001VLS*/
         B     @RC00235                                            0237
@RF00235 MVI   MDISC,C'0'                                          0237
*  CALL PRINTER(LINE28G);                                  /*@0001VLS*/
@RC00235 LA    @01,@AL00238                                        0238
         BAL   @14,PRINTER                                         0238
*  RETURN;                                                 /*@0001VLS*/
@EL00006 DS    0H                                                  0239
@EF00006 DS    0H                                                  0239
@ER00006 LM    @14,@02,@SA00006                                    0239
         LM    @04,@12,@SA00006+20                                 0239
         BR    @14                                                 0239
*END;                                                      /*@0001VLS*/
*/*                                                          @0001VLS*/
*/* OUTPUT THE MVS MACHINE LOGOUT INFORMATION.               @0001VLS*/
*/*                                                          @0001VLS*/
*MVSLOG: PROC;                                             /*@0001VLS*/
MVSLOG   STM   @14,@12,@SA00007                                    0241
*    CALL PRINTER(BLINE);                                  /*@VS48736*/
         LA    @01,@AL00242                                        0242
         BAL   @14,PRINTER                                         0242
*CALL PRINTER(BLIN1);                                      /*@0001VLS*/
         LA    @01,@AL00243                                        0243
         BAL   @14,PRINTER                                         0243
*    CALL PRINTER(BLINE);                                  /*@VS48736*/
         LA    @01,@AL00244                                        0244
         BAL   @14,PRINTER                                         0244
*CALL PRINTER(BLIN2);                                      /*@0001VLS*/
         LA    @01,@AL00245                                        0245
         BAL   @14,PRINTER                                         0245
*    CALL PRINTER(BLINE);                                  /*@VS48736*/
         LA    @01,@AL00246                                        0246
         BAL   @14,PRINTER                                         0246
*IF LRBMHHRD = ON THEN                                             0247
         TM    LRBMHHRD(R7),B'10000000'                            0247
         BNO   @RF00247                                            0247
*  BLIN3P2 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN3P2,C'1'                                        0248
*ELSE                                                              0249
*  BLIN3P2 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00247                                            0249
@RF00247 MVI   BLIN3P2,C'0'                                        0249
*IF LRBMSSFT= ON THEN                                              0250
@RC00247 TM    LRBMSSFT(R7),B'10000000'                            0250
         BNO   @RF00250                                            0250
*  BLIN3P4 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN3P4,C'1'                                        0251
*ELSE                                                              0252
*  BLIN3P4 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00250                                            0252
@RF00250 MVI   BLIN3P4,C'0'                                        0252
*CALL PRINTER(BLIN3);                                      /*@0001VLS*/
@RC00250 LA    @01,@AL00253                                        0253
         BAL   @14,PRINTER                                         0253
*CALL PRINTER(BLIN4);                                      /*@0001VLS*/
         LA    @01,@AL00254                                        0254
         BAL   @14,PRINTER                                         0254
*CALL PRINTER(BLIN5);                                      /*@0001VLS*/
         LA    @01,@AL00255                                        0255
         BAL   @14,PRINTER                                         0255
*IF LRBMTSEC = ON THEN                                             0256
         TM    LRBMTSEC(R7),B'00010000'                            0256
         BNO   @RF00256                                            0256
*  BLIN6P1 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN6P1,C'1'                                        0257
*ELSE                                                              0258
*  BLIN6P1 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00256                                            0258
@RF00256 MVI   BLIN6P1,C'0'                                        0258
*CALL PRINTER(BLIN6);                                      /*@0001VLS*/
@RC00256 LA    @01,@AL00259                                        0259
         BAL   @14,PRINTER                                         0259
*IF LRBMTCKS= ON THEN                                              0260
         TM    LRBMTCKS(R7),B'00001000'                            0260
         BNO   @RF00260                                            0260
*  BLIN7P1 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN7P1,C'1'                                        0261
*ELSE                                                              0262
*  BLIN7P1 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00260                                            0262
@RF00260 MVI   BLIN7P1,C'0'                                        0262
*IF LRBMHINV = ON THEN                                             0263
@RC00260 TM    LRBMHINV(R7),B'00001000'                            0263
         BNO   @RF00263                                            0263
*  BLIN7P2 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN7P2,C'1'                                        0264
*ELSE                                                              0265
*  BLIN7P2 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00263                                            0265
@RF00263 MVI   BLIN7P2,C'0'                                        0265
*IF LRBMITOD = ON THEN                                             0266
@RC00263 TM    LRBMITOD(R7),B'00001000'                            0266
         BNO   @RF00266                                            0266
*  BLIN7P3 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN7P3,C'1'                                        0267
*ELSE                                                              0268
*  BLIN7P3 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00266                                            0268
@RF00266 MVI   BLIN7P3,C'0'                                        0268
*IF LRBMSEXD = ON THEN                                             0269
@RC00266 TM    LRBMSEXD(R7),B'00001000'                            0269
         BNO   @RF00269                                            0269
*  BLIN7P4 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN7P4,C'1'                                        0270
*ELSE                                                              0271
*  BLIN7P4 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00269                                            0271
@RF00269 MVI   BLIN7P4,C'0'                                        0271
*CALL PRINTER(BLIN7);                                      /*@0001VLS*/
@RC00269 LA    @01,@AL00272                                        0272
         BAL   @14,PRINTER                                         0272
*IF LRBMTWRN= ON THEN                                              0273
         TM    LRBMTWRN(R7),B'00000100'                            0273
         BNO   @RF00273                                            0273
*  BLIN8P1 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN8P1,C'1'                                        0274
*ELSE                                                              0275
*  BLIN8P1 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00273                                            0275
@RF00273 MVI   BLIN8P1,C'0'                                        0275
*IF LRBMHSTO = ON THEN                                             0276
@RC00273 TM    LRBMHSTO(R7),B'00000100'                            0276
         BNO   @RF00276                                            0276
*  BLIN8P2 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN8P2,C'1'                                        0277
*ELSE                                                              0278
*  BLIN8P2 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00276                                            0278
@RF00276 MVI   BLIN8P2,C'0'                                        0278
*IF LRBMICKC = ON THEN                                             0279
@RC00276 TM    LRBMICKC(R7),B'00000100'                            0279
         BNO   @RF00279                                            0279
*  BLIN8P3 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN8P3,C'1'                                        0280
*ELSE                                                              0281
*  BLIN8P3 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00279                                            0281
@RF00279 MVI   BLIN8P3,C'0'                                        0281
*IF LRBMSECC = ON THEN                                             0282
@RC00279 TM    LRBMSECC(R7),B'00000100'                            0282
         BNO   @RF00282                                            0282
*  BLIN8P4 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN8P4,C'1'                                        0283
*ELSE                                                              0284
*  BLIN8P4 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00282                                            0284
@RF00282 MVI   BLIN8P4,C'0'                                        0284
*CALL PRINTER(BLIN8);                                      /*@0001VLS*/
@RC00282 LA    @01,@AL00285                                        0285
         BAL   @14,PRINTER                                         0285
*IF LRBMTDMG = ON THEN                                             0286
         TM    LRBMTDMG(R7),B'00000010'                            0286
         BNO   @RF00286                                            0286
*  BLIN9P1 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN9P1,C'1'                                        0287
*ELSE                                                              0288
*  BLIN9P1 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00286                                            0288
@RF00286 MVI   BLIN9P1,C'0'                                        0288
*IF LRBMHSPF = ON THEN                                             0289
@RC00286 TM    LRBMHSPF(R7),B'00000010'                            0289
         BNO   @RF00289                                            0289
*  BLIN9P2 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN9P2,C'1'                                        0290
*ELSE                                                              0291
*  BLIN9P2 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00289                                            0291
@RF00289 MVI   BLIN9P2,C'0'                                        0291
*IF LRBMICTM = ON THEN                                             0292
@RC00289 TM    LRBMICTM(R7),B'00000010'                            0292
         BNO   @RF00292                                            0292
*  BLIN9P3 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN9P3,C'1'                                        0293
*ELSE                                                              0294
*  BLIN9P3 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00292                                            0294
@RF00292 MVI   BLIN9P3,C'0'                                        0294
*IF LRBMSHIR = ON THEN                                             0295
@RC00292 TM    LRBMSHIR(R7),B'00000010'                            0295
         BNO   @RF00295                                            0295
*  BLIN9P4 = FOXONE;                                       /*@0001VLS*/
         MVI   BLIN9P4,C'1'                                        0296
*ELSE                                                              0297
*  BLIN9P4 = FOXZERO;                                      /*@0001VLS*/
         B     @RC00295                                            0297
@RF00295 MVI   BLIN9P4,C'0'                                        0297
*CALL PRINTER(BLIN9);                                      /*@0001VLS*/
@RC00295 LA    @01,@AL00298                                        0298
         BAL   @14,PRINTER                                         0298
*IF LRBMTINV= ON THEN                                              0299
         TM    LRBMTINV(R7),B'00000001'                            0299
         BNO   @RF00299                                            0299
*  BLIN10P1 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN10P1,C'1'                                       0300
*ELSE                                                              0301
*  BLIN10P1 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00299                                            0301
@RF00299 MVI   BLIN10P1,C'0'                                       0301
*IF LRBMHIPD = ON THEN                                             0302
@RC00299 TM    LRBMHIPD(R7),B'00000001'                            0302
         BNO   @RF00302                                            0302
*  BLIN10P2 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN10P2,C'1'                                       0303
*ELSE                                                              0304
*  BLIN10P2 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00302                                            0304
@RF00302 MVI   BLIN10P2,C'0'                                       0304
*IF LRBMIL80 = ON THEN                                             0305
@RC00302 TM    LRBMIL80(R7),B'00000001'                            0305
         BNO   @RF00305                                            0305
*  BLIN10P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN10P3,C'1'                                       0306
*ELSE                                                              0307
*  BLIN10P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00305                                            0307
@RF00305 MVI   BLIN10P3,C'0'                                       0307
*IF LRBMSBUF = ON THEN                                             0308
@RC00305 TM    LRBMSBUF(R7),B'00000001'                            0308
         BNO   @RF00308                                            0308
*  BLIN10P4 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN10P4,C'1'                                       0309
*ELSE                                                              0310
*  BLIN10P4 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00308                                            0310
@RF00308 MVI   BLIN10P4,C'0'                                       0310
*CALL PRINTER(BLIN10);                                     /*@0001VLS*/
@RC00308 LA    @01,@AL00311                                        0311
         BAL   @14,PRINTER                                         0311
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00312                                        0312
         BAL   @14,PRINTER                                         0312
*CALL PRINTER(BLIN11A);                                    /*@0001VLS*/
         LA    @01,@AL00313                                        0313
         BAL   @14,PRINTER                                         0313
*    CALL PRINTER(BLINE);                                  /*@VS48736*/
         LA    @01,@AL00314                                        0314
         BAL   @14,PRINTER                                         0314
*CALL PRINTER(BLIN11);                                     /*@0001VLS*/
         LA    @01,@AL00315                                        0315
         BAL   @14,PRINTER                                         0315
*    CALL PRINTER(BLINE);                                  /*@VS48736*/
         LA    @01,@AL00316                                        0316
         BAL   @14,PRINTER                                         0316
*IF LRBMOFLN = ON THEN                                             0317
         TM    LRBMOFLN(R7),B'10000000'                            0317
         BNO   @RF00317                                            0317
*  BLIN12P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN12P3,C'1'                                       0318
*ELSE                                                              0319
*  BLIN12P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00317                                            0319
@RF00317 MVI   BLIN12P3,C'0'                                       0319
*CALL PRINTER(BLIN12);                                     /*@0001VLS*/
@RC00317 LA    @01,@AL00320                                        0320
         BAL   @14,PRINTER                                         0320
*IF LRBMINTC = ON THEN                                             0321
         TM    LRBMINTC(R7),B'01000000'                            0321
         BNO   @RF00321                                            0321
*  BLIN13P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN13P3,C'1'                                       0322
*ELSE                                                              0323
*  BLIN13P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00321                                            0323
@RF00321 MVI   BLIN13P3,C'0'                                       0323
*CALL PRINTER(BLIN13);                                     /*@0001VLS*/
@RC00321 LA    @01,@AL00324                                        0324
         BAL   @14,PRINTER                                         0324
*IF LRBMSPER = ON THEN                                             0325
         TM    LRBMSPER(R7),B'00100000'                            0325
         BNO   @RF00325                                            0325
*  BLIN14P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN14P3,C'1'                                       0326
*ELSE                                                              0327
*  BLIN14P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00325                                            0327
@RF00325 MVI   BLIN14P3,C'0'                                       0327
*CALL PRINTER(BLIN14);                                     /*@0001VLS*/
@RC00325 LA    @01,@AL00328                                        0328
         BAL   @14,PRINTER                                         0328
*IF LRBMINVP = ON THEN                                             0329
         TM    LRBMINVP(R7),B'00010000'                            0329
         BNO   @RF00329                                            0329
*  BLIN15P1 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN15P1,C'1'                                       0330
*ELSE                                                              0331
*  BLIN15P1 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00329                                            0331
@RF00329 MVI   BLIN15P1,C'0'                                       0331
*IF LRBMNUCL = ON THEN                                             0332
@RC00329 TM    LRBMNUCL(R7),B'00010000'                            0332
         BNO   @RF00332                                            0332
*  BLIN15P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN15P3,C'1'                                       0333
*ELSE                                                              0334
*  BLIN15P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00332                                            0334
@RF00332 MVI   BLIN15P3,C'0'                                       0334
*CALL PRINTER(BLIN15);                                     /*@0001VLS*/
@RC00332 LA    @01,@AL00335                                        0335
         BAL   @14,PRINTER                                         0335
*IF LRBMRSRC = ON THEN                                             0336
         TM    LRBMRSRC(R7),B'00001000'                            0336
         BNO   @RF00336                                            0336
*  BLIN16P1 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN16P1,C'1'                                       0337
*ELSE                                                              0338
*  BLIN16P1 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00336                                            0338
@RF00336 MVI   BLIN16P1,C'0'                                       0338
*IF LRBMFSQA = ON THEN                                             0339
@RC00336 TM    LRBMFSQA(R7),B'00001000'                            0339
         BNO   @RF00339                                            0339
*  BLIN16P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN16P3,C'1'                                       0340
*ELSE                                                              0341
*  BLIN16P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00339                                            0341
@RF00339 MVI   BLIN16P3,C'0'                                       0341
*CALL PRINTER(BLIN16);                                     /*@0001VLS*/
@RC00339 LA    @01,@AL00342                                        0342
         BAL   @14,PRINTER                                         0342
*IF LRBMRSRF = ON THEN                                             0343
         TM    LRBMRSRF(R7),B'00000100'                            0343
         BNO   @RF00343                                            0343
*  BLIN17P1 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN17P1,C'1'                                       0344
*ELSE                                                              0345
*  BLIN17P1 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00343                                            0345
@RF00343 MVI   BLIN17P1,C'0'                                       0345
*IF LRBMLSQA = ON THEN                                             0346
@RC00343 TM    LRBMLSQA(R7),B'00000100'                            0346
         BNO   @RF00346                                            0346
*  BLIN17P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN17P3,C'1'                                       0347
*ELSE                                                              0348
*  BLIN17P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00346                                            0348
@RF00346 MVI   BLIN17P3,C'0'                                       0348
*CALL PRINTER(BLIN17);                                     /*@0001VLS*/
@RC00346 LA    @01,@AL00349                                        0349
         BAL   @14,PRINTER                                         0349
*IF LRBMSER  = ON THEN                                             0350
         TM    LRBMSER(R7),B'00000010'                             0350
         BNO   @RF00350                                            0350
*  BLIN18P2 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN18P2,C'1'                                       0351
*ELSE                                                              0352
*  BLIN18P2 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00350                                            0352
@RF00350 MVI   BLIN18P2,C'0'                                       0352
*IF LRBMPGFX = ON THEN                                             0353
@RC00350 TM    LRBMPGFX(R7),B'00000010'                            0353
         BNO   @RF00353                                            0353
*  BLIN18P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN18P3,C'1'                                       0354
*ELSE                                                              0355
*  BLIN18P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00353                                            0355
@RF00353 MVI   BLIN18P3,C'0'                                       0355
*CALL PRINTER(BLIN18);                                     /*@0001VLS*/
@RC00353 LA    @01,@AL00356                                        0356
         BAL   @14,PRINTER                                         0356
*IF LRBMCHNG = ON THEN                                             0357
         TM    LRBMCHNG(R7),B'00000001'                            0357
         BNO   @RF00357                                            0357
*  BLIN19P2 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN19P2,C'1'                                       0358
*ELSE                                                              0359
*  BLIN19P2 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00357                                            0359
@RF00357 MVI   BLIN19P2,C'0'                                       0359
*IF LRBMVEQR = ON THEN                                             0360
@RC00357 TM    LRBMVEQR(R7),B'00000001'                            0360
         BNO   @RF00360                                            0360
*  BLIN19P3 = FOXONE;                                      /*@0001VLS*/
         MVI   BLIN19P3,C'1'                                       0361
*ELSE                                                              0362
*  BLIN19P3 = FOXZERO;                                     /*@0001VLS*/
         B     @RC00360                                            0362
@RF00360 MVI   BLIN19P3,C'0'                                       0362
*CALL PRINTER(BLIN19);                                     /*@0001VLS*/
@RC00360 LA    @01,@AL00363                                        0363
         BAL   @14,PRINTER                                         0363
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00364                                        0364
         BAL   @14,PRINTER                                         0364
*I = LRBMPWL;                                              /*@0001VLS*/
         SLR   @06,@06                                             0365
         IC    @06,LRBMPWL(,R7)                                    0365
         ST    @06,I                                               0365
*CALL CONVBIN(I,BLIN20P1);                                 /*@0001VLS*/
         LA    @01,@AL00366                                        0366
         BAL   @14,CONVBIN                                         0366
*CALL PRINTER(BLIN20);                                     /*@0001VLS*/
         LA    @01,@AL00367                                        0367
         BAL   @14,PRINTER                                         0367
*RETURN;                                                   /*@0001VLS*/
@EL00007 DS    0H                                                  0368
@EF00007 DS    0H                                                  0368
@ER00007 LM    @14,@12,@SA00007                                    0368
         BR    @14                                                 0368
*END;                                                      /*@0001VLS*/
@PB00007 DS    0H                                                  0370
*/*                                                          @0001VLS*/
*/* MAIN LINE                                                @0001VLS*/
*/*                                                          @0001VLS*/
*MYLINCT = ZERO;                                           /*@0001VLS*/
         SLR   MYLINCT,MYLINCT                                     0370
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00371                                        0371
         BAL   @14,PRINTER                                         0371
*CALL CONVERT(LRBHMDL,LMODEL,2);                           /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00372                              0372
         LA    @06,LRBHMDL(,R7)                                    0372
         ST    @06,@AL00001                                        0372
         LA    @01,@AL00001                                        0372
         BAL   @14,CONVERT                                         0372
*CALL CONVERT (LRBHCSER,SERIAL,3);                         /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00373                              0373
         LA    @06,LRBHCSER(,R7)                                   0373
         ST    @06,@AL00001                                        0373
         LA    @01,@AL00001                                        0373
         BAL   @14,CONVERT                                         0373
*CALL PRINTER(LINE1);                                      /*@0001VLS*/
         LA    @01,@AL00374                                        0374
         BAL   @14,PRINTER                                         0374
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00375                                        0375
         BAL   @14,PRINTER                                         0375
*I = LRBHSYS & '1F'X;                                      /*@0001VLS*/
         LA    @06,31                                              0376
         SLR   @04,@04                                             0376
         IC    @04,LRBHSYS(,R7)                                    0376
         NR    @06,@04                                             0376
         ST    @06,I                                               0376
*IF LRBHSYS1 = ON THEN                                             0377
         TM    LRBHSYS1(R7),B'10000000'                            0377
         BNO   @RF00377                                            0377
*  SYS(1:4) = 'VS 2';                                      /*@0001VLS*/
         MVC   SYS(4),@CC01711                                     0378
*ELSE                                                              0379
*  IF LRBHSYS2 = ON & LRBHSYS3 = ON THEN                           0379
         B     @RC00377                                            0379
@RF00377 TM    LRBHSYS2(R7),B'01100000'                            0379
         BNO   @RF00379                                            0379
*    SYS(1:4) = 'VM  ';                                    /*@0001VLS*/
         MVC   SYS(4),@CC01712                                     0380
*  ELSE                                                            0381
*    IF LRBHSYS2 = ON THEN                                         0381
         B     @RC00379                                            0381
@RF00379 TM    LRBHSYS2(R7),B'01000000'                            0381
         BNO   @RF00381                                            0381
*      SYS(1:4) = 'VS 1';                                  /*@0001VLS*/
         MVC   SYS(4),@CC01713                                     0382
*    ELSE                                                          0383
*      IF LRBHSYS3 = ON THEN                                       0383
         B     @RC00381                                            0383
@RF00381 TM    LRBHSYS3(R7),B'00100000'                            0383
         BNO   @RF00383                                            0383
*        DO;                                               /*@0001VLS*/
*          SYS(1:4) = 'DOS ';                              /*@0001VLS*/
         MVC   SYS(4),@CC01714                                     0385
*          I = I + 26;                                     /*@D35UGFD*/
         LA    @06,26                                              0386
         AL    @06,I                                               0386
         ST    @06,I                                               0386
*          IF I > 34 THEN                                          0387
         LA    @04,34                                              0387
         CR    @06,@04                                             0387
         BNH   @RF00387                                            0387
*           I = I - 34;                                    /*@D35UGFD*/
         SLR   @06,@04                                             0388
         ST    @06,I                                               0388
*        END;                                              /*@0001VLS*/
*      ELSE                                                        0390
*        SYS(1:4) = 'OS  ';                                /*@0001VLS*/
         B     @RC00383                                            0390
@RF00383 MVC   SYS(4),@CC01717                                     0390
*  CALL CONVBIN2 (I,REL);                                  /*@VS48736*/
@RC00383 DS    0H                                                  0391
@RC00381 DS    0H                                                  0391
@RC00379 DS    0H                                                  0391
@RC00377 LA    @01,@AL00391                                        0391
         BAL   @14,CONVBIN2                                        0391
*CALL PRINTER(LINE2);                                      /*@0001VLS*/
         LA    @01,@AL00392                                        0392
         BAL   @14,PRINTER                                         0392
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00393                                        0393
         BAL   @14,PRINTER                                         0393
*CALL PRINTER(LINE3);                                      /*@0001VLS*/
         LA    @01,@AL00394                                        0394
         BAL   @14,PRINTER                                         0394
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00395                                        0395
         BAL   @14,PRINTER                                         0395
*IF LRBERRID = ON THEN                                             0396
         TM    LRBERRID(R7),B'00010000'                            0396
         BNO   @RF00396                                            0396
*  DO;                                                     /*@0001VLS*/
*    I = LRBESEQ;                                          /*@0001VLS*/
         LR    @06,R7                                              0398
         AL    @06,RECLNGT1(,R2)                                   0398
         AL    @06,@CF01733                                        0398
         SLR   @04,@04                                             0398
         ICM   @04,3,LRBESEQ(@06)                                  0398
         ST    @04,I                                               0398
*    CALL CONVBIN(I,SEQ);                                  /*@0001VLS*/
         LA    @01,@AL00399                                        0399
         BAL   @14,CONVBIN                                         0399
*    CALL CONVERT(LRBCPUID,CPU,2);                         /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00400                              0400
         LR    @06,R7                                              0400
         AL    @06,RECLNGT1(,R2)                                   0400
         AL    @06,@CF01734                                        0400
         ST    @06,@AL00001                                        0400
         LA    @01,@AL00001                                        0400
         BAL   @14,CONVERT                                         0400
*    CALL CONVERT(LRBASID,ASID,2);                         /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00401                              0401
         LR    @06,R7                                              0401
         AL    @06,RECLNGT1(,R2)                                   0401
         AL    @06,@CF01735                                        0401
         ST    @06,@AL00001                                        0401
         LA    @01,@AL00001                                        0401
         BAL   @14,CONVERT                                         0401
*    I = LRBETIME;                                         /*@0001VLS*/
         LR    @06,R7                                              0402
         AL    @06,RECLNGT1(,R2)                                   0402
         AL    @06,@CF01736                                        0402
         ICM   @04,15,LRBETIME-6(@06)                              0402
         ST    @04,I                                               0402
*    J = I/(60*60*10);                                     /*@0001VLS*/
         LR    @00,@04                                             0403
         SRDA  @00,32                                              0403
         D     @00,@CF01723                                        0403
         ST    @01,J                                               0403
*    CALL CONVBIN2(J,ERRORHH);                             /*@0001VLS*/
         LA    @01,@AL00404                                        0404
         BAL   @14,CONVBIN2                                        0404
*    I = I - J*60*60*10;                                   /*@0001VLS*/
         L     @01,J                                               0405
         M     @00,@CF01723                                        0405
         LCR   @01,@01                                             0405
         AL    @01,I                                               0405
         ST    @01,I                                               0405
*    J = I/(60*10);                                        /*@0001VLS*/
         LR    @08,@01                                             0406
         SRDA  @08,32                                              0406
         D     @08,@CF01724                                        0406
         ST    @09,J                                               0406
*    CALL CONVBIN2(J,ERRORMM);                             /*@0001VLS*/
         LA    @01,@AL00407                                        0407
         BAL   @14,CONVBIN2                                        0407
*    I = I - J*60*10;                                      /*@0001VLS*/
         L     @06,J                                               0408
         MH    @06,@CH01724                                        0408
         LCR   @06,@06                                             0408
         AL    @06,I                                               0408
         ST    @06,I                                               0408
*    J = I/10;                                             /*@0001VLS*/
         LR    @00,@06                                             0409
         SRDA  @00,32                                              0409
         D     @00,@CF00035                                        0409
         ST    @01,J                                               0409
*    CALL CONVBIN2(J,ERRORSS);                             /*@0001VLS*/
         LA    @01,@AL00410                                        0410
         BAL   @14,CONVBIN2                                        0410
*    I = I - J*10;                                         /*@0001VLS*/
         L     @06,J                                               0411
         MH    @06,@CH00035                                        0411
         LCR   @06,@06                                             0411
         AL    @06,I                                               0411
         ST    @06,I                                               0411
*    CALL CONVBIN2(I,ERRORTH);                             /*@0001VLS*/
         LA    @01,@AL00412                                        0412
         BAL   @14,CONVBIN2                                        0412
*  IF ERRORMM(1) = BLANK THEN                                      0413
         CLI   ERRORMM,C' '                                        0413
         BNE   @RF00413                                            0413
*     ERRORMM(1) = CHARS(1);                               /*@VS48736*/
         MVC   ERRORMM(1),CHARS                                    0414
*  IF ERRORSS(1) = BLANK THEN                                      0415
@RF00413 CLI   ERRORSS,C' '                                        0415
         BNE   @RF00415                                            0415
*     ERRORSS(1) = CHARS(1);                               /*@VS48736*/
         MVC   ERRORSS(1),CHARS                                    0416
*  IF ERRORTH(1) = BLANK THEN                                      0417
@RF00415 CLI   ERRORTH,C' '                                        0417
         BNE   @RF00417                                            0417
*     ERRORTH(1) = CHARS(1);                               /*@VS48736*/
         MVC   ERRORTH(1),CHARS                                    0418
*    CALL PRINTER(LINE4B);                                 /*@0001VLS*/
@RF00417 LA    @01,@AL00419                                        0419
         BAL   @14,PRINTER                                         0419
*  END;                                                    /*@0001VLS*/
*ELSE                                                              0421
*  CALL PRINTER(LINE4A);                                   /*@0001VLS*/
         B     @RC00396                                            0421
@RF00396 LA    @01,@AL00421                                        0421
         BAL   @14,PRINTER                                         0421
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
@RC00396 LA    @01,@AL00422                                        0422
         BAL   @14,PRINTER                                         0422
*CALL CONVERT(LRBMMOSW,WORK,8);                            /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00423                              0423
         LA    @06,LRBMMOSW(,R7)                                   0423
         ST    @06,@AL00001                                        0423
         LA    @01,@AL00001                                        0423
         BAL   @14,CONVERT                                         0423
*DO I = 1 TO 8;                                            /*@0001VLS*/
         LA    @06,1                                               0424
         ST    @06,I                                               0424
@DL00424 DS    0H                                                  0425
*  MCKPSW(I) = WORK(2*I-1:2*I);                            /*@0001VLS*/
         LR    @04,@06                                             0425
         MH    @04,@CH00076                                        0425
         LA    @01,MCKPSW-3(@04)                                   0425
         LR    @04,@06                                             0425
         ALR   @04,@04                                             0425
         LA    @15,WORK-2(@04)                                     0425
         MVC   0(2,@01),0(@15)                                     0425
*END;                                                      /*@0001VLS*/
         AL    @06,@CF00055                                        0426
         ST    @06,I                                               0426
         C     @06,@CF00066                                        0426
         BNH   @DL00424                                            0426
*CALL PRINTER(LINE5);                                      /*@0001VLS*/
         LA    @01,@AL00427                                        0427
         BAL   @14,PRINTER                                         0427
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00428                                        0428
         BAL   @14,PRINTER                                         0428
*IF LRBHSYS1 = ON THEN                                             0429
         TM    LRBHSYS1(R7),B'10000000'                            0429
         BNO   @RF00429                                            0429
*  DO;                                                     /*@0001VLS*/
*    CALL PRINTER(LINE6A);                                 /*@0001VLS*/
         LA    @01,@AL00431                                        0431
         BAL   @14,PRINTER                                         0431
*    CALL CONVERT(LRBRLEN,RECLEN,4);                       /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00432                              0432
         LA    @06,LRBRLEN(,R7)                                    0432
         ST    @06,@AL00001                                        0432
         LA    @01,@AL00001                                        0432
         BAL   @14,CONVERT                                         0432
*    CALL CONVERT(LRBWAIT,WAITCODE,4);                     /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00433                              0433
         LA    @06,LRBWAIT(,R7)                                    0433
         ST    @06,@AL00001                                        0433
         LA    @01,@AL00001                                        0433
         BAL   @14,CONVERT                                         0433
*    CALL PRINTER(LINE6C);                                 /*@0001VLS*/
         LA    @01,@AL00434                                        0434
         BAL   @14,PRINTER                                         0434
*  END;                                                    /*@0001VLS*/
*ELSE                                                              0436
*  DO;                                                     /*@0001VLS*/
         B     @RC00429                                            0436
@RF00429 DS    0H                                                  0437
*    JOBNAME = LRBJOBID;                                   /*@0001VLS*/
         MVC   JOBNAME(8),LRBJOBID(R7)                             0437
*    CALL PRINTER(LINE6B1);                                /*@0001VLS*/
         LA    @01,@AL00438                                        0438
         BAL   @14,PRINTER                                         0438
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00439                                        0439
         BAL   @14,PRINTER                                         0439
*    IFCESUMS = LRBPRGID;                                  /*@0001VLS*/
         MVC   IFCESUMS(8),LRBPRGID(R7)                            0440
*    CALL PRINTER(LINE6B2);                                /*@0001VLS*/
         LA    @01,@AL00441                                        0441
         BAL   @14,PRINTER                                         0441
*  END;                                                    /*@0001VLS*/
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
@RC00429 LA    @01,@AL00443                                        0443
         BAL   @14,PRINTER                                         0443
*CALL PRINTER(LINE7);                                      /*@0001VLS*/
         LA    @01,@AL00444                                        0444
         BAL   @14,PRINTER                                         0444
*CALL CONVERT (LRBHDATE,WORK,4);                           /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00445                              0445
         LA    @06,LRBHDATE(,R7)                                   0445
         ST    @06,@AL00001                                        0445
         LA    @01,@AL00001                                        0445
         BAL   @14,CONVERT                                         0445
*DAY(1:3) = WORK(5:7);                                     /*@0001VLS*/
         MVC   DAY(3),WORK+4                                       0446
*YEAR(1:2) = WORK(3:4);                                    /*@0001VLS*/
         MVC   YEAR(2),WORK+2                                      0447
*CALL CONVERT(LRBHTIME,WORK,4);                            /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00448                              0448
         LA    @06,LRBHTIME(,R7)                                   0448
         ST    @06,@AL00001                                        0448
         LA    @01,@AL00001                                        0448
         BAL   @14,CONVERT                                         0448
*TIMEHH = WORK(1:2);                                       /*@0001VLS*/
         MVI   TIMEHH+2,C' '                                       0449
         MVC   TIMEHH(2),WORK                                      0449
*TIMEMM = WORK(3:4);                                       /*@0001VLS*/
         MVI   TIMEMM+2,C' '                                       0450
         MVC   TIMEMM(2),WORK+2                                    0450
*TIMESS = WORK(5:6);                                       /*@0001VLS*/
         MVI   TIMESS+2,C' '                                       0451
         MVC   TIMESS(2),WORK+4                                    0451
*TIMETH = WORK(7:8);                                       /*@0001VLS*/
         MVC   TIMETH(2),WORK+6                                    0452
*CALL PRINTER(LINE8);                                      /*@0001VLS*/
         LA    @01,@AL00453                                        0453
         BAL   @14,PRINTER                                         0453
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00454                                        0454
         BAL   @14,PRINTER                                         0454
*CALL PRINTER(LINE9);                                      /*@0001VLS*/
         LA    @01,@AL00455                                        0455
         BAL   @14,PRINTER                                         0455
*CALL PRINTER(BLINE);                                      /*@0001VLS*/
         LA    @01,@AL00456                                        0456
         BAL   @14,PRINTER                                         0456
*CALL PRINTER(LINE10);                                     /*@0001VLS*/
         LA    @01,@AL00457                                        0457
         BAL   @14,PRINTER                                         0457
*IF LRBMFSD = ON THEN                                              0458
         TM    LRBMFSD(R7),B'10000000'                             0458
         BNO   @RF00458                                            0458
*  SDAMAGE = FOXONE;                                       /*@0001VLS*/
         MVI   SDAMAGE,C'1'                                        0459
*ELSE                                                              0460
*  SDAMAGE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00458                                            0460
@RF00458 MVI   SDAMAGE,C'0'                                        0460
*IF LRBMFPD = ON THEN                                              0461
@RC00458 TM    LRBMFPD(R7),B'01000000'                             0461
         BNO   @RF00461                                            0461
*  IDAMAGE = FOXONE;                                       /*@0001VLS*/
         MVI   IDAMAGE,C'1'                                        0462
*ELSE                                                              0463
*  IDAMAGE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00461                                            0463
@RF00461 MVI   IDAMAGE,C'0'                                        0463
*CALL PRINTER(LINE11);                                     /*@0001VLS*/
@RC00461 LA    @01,@AL00464                                        0464
         BAL   @14,PRINTER                                         0464
*IF LRBMFSR = ON THEN                                              0465
         TM    LRBMFSR(R7),B'00100000'                             0465
         BNO   @RF00465                                            0465
*  SRECO = FOXONE;                                         /*@0001VLS*/
         MVI   SRECO,C'1'                                          0466
*ELSE                                                              0467
*  SRECO = FOXZERO;                                        /*@0001VLS*/
         B     @RC00465                                            0467
@RF00465 MVI   SRECO,C'0'                                          0467
*IF LRBMFTD = ON THEN                                              0468
@RC00465 TM    LRBMFTD(R7),B'00010000'                             0468
         BNO   @RF00468                                            0468
*  TDAMAGE = FOXONE;                                       /*@0001VLS*/
         MVI   TDAMAGE,C'1'                                        0469
*ELSE                                                              0470
*  TDAMAGE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00468                                            0470
@RF00468 MVI   TDAMAGE,C'0'                                        0470
*CALL PRINTER(LINE12);                                     /*@0001VLS*/
@RC00468 LA    @01,@AL00471                                        0471
         BAL   @14,PRINTER                                         0471
*IF LRBMFCD = ON THEN                                              0472
         TM    LRBMFCD(R7),B'00001000'                             0472
         BNO   @RF00472                                            0472
*  CDAMAGE = FOXONE;                                       /*@0001VLS*/
         MVI   CDAMAGE,C'1'                                        0473
*ELSE                                                              0474
*  CDAMAGE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00472                                            0474
@RF00472 MVI   CDAMAGE,C'0'                                        0474
*IF LRBMFED = ON THEN                                              0475
@RC00472 TM    LRBMFED(R7),B'00000100'                             0475
         BNO   @RF00475                                            0475
*  EDAMAGE = FOXONE;                                       /*@0001VLS*/
         MVI   EDAMAGE,C'1'                                        0476
*ELSE                                                              0477
*  EDAMAGE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00475                                            0477
@RF00475 MVI   EDAMAGE,C'0'                                        0477
*CALL PRINTER(LINE13);                                     /*@0001VLS*/
@RC00475 LA    @01,@AL00478                                        0478
         BAL   @14,PRINTER                                         0478
*IF LRBMFDG = ON THEN                                              0479
         TM    LRBMFDG(R7),B'00000001'                             0479
         BNO   @RF00479                                            0479
*  DEGRAD = FOXONE;                                        /*@0001VLS*/
         MVI   DEGRAD,C'1'                                         0480
*ELSE                                                              0481
*  DEGRAD = FOXZERO;                                       /*@0001VLS*/
         B     @RC00479                                            0481
@RF00479 MVI   DEGRAD,C'0'                                         0481
*IF LRBMFWN = ON THEN                                              0482
@RC00479 TM    LRBMFWN(R7),B'10000000'                             0482
         BNO   @RF00482                                            0482
*  WARNING = FOXONE;                                       /*@0001VLS*/
         MVI   WARNING,C'1'                                        0483
*ELSE                                                              0484
*  WARNING = FOXZERO;                                      /*@0001VLS*/
         B     @RC00482                                            0484
@RF00482 MVI   WARNING,C'0'                                        0484
*CALL PRINTER(LINE14);                                     /*@0001VLS*/
@RC00482 LA    @01,@AL00485                                        0485
         BAL   @14,PRINTER                                         0485
*CALL PRINTER(LINE15);                                     /*@0001VLS*/
         LA    @01,@AL00486                                        0486
         BAL   @14,PRINTER                                         0486
*IF LRBMIBU = ON THEN                                              0487
         TM    LRBMIBU(R7),B'00000010'                             0487
         BNO   @RF00487                                            0487
*  BACKED = FOXONE;                                        /*@0001VLS*/
         MVI   BACKED,C'1'                                         0488
*ELSE                                                              0489
*  BACKED = FOXZERO;                                       /*@0001VLS*/
         B     @RC00487                                            0489
@RF00487 MVI   BACKED,C'0'                                         0489
*IF LRBMIDY = ON THEN                                              0490
@RC00487 TM    LRBMIDY(R7),B'00000001'                             0490
         BNO   @RF00490                                            0490
*  DELAYED = FOXONE;                                       /*@0001VLS*/
         MVI   DELAYED,C'1'                                        0491
*ELSE                                                              0492
*  DELAYED = FOXZERO;                                      /*@0001VLS*/
         B     @RC00490                                            0492
@RF00490 MVI   DELAYED,C'0'                                        0492
*CALL PRINTER(LINE16);                                     /*@0001VLS*/
@RC00490 LA    @01,@AL00493                                        0493
         BAL   @14,PRINTER                                         0493
*CALL PRINTER(LINE17);                                     /*@0001VLS*/
         LA    @01,@AL00494                                        0494
         BAL   @14,PRINTER                                         0494
*IF LRBMFSE = ON THEN                                              0495
         TM    LRBMFSE(R7),B'10000000'                             0495
         BNO   @RF00495                                            0495
*  SERRORU = FOXONE;                                       /*@0001VLS*/
         MVI   SERRORU,C'1'                                        0496
*ELSE                                                              0497
*  SERRORU = FOXZERO;                                      /*@0001VLS*/
         B     @RC00495                                            0497
@RF00495 MVI   SERRORU,C'0'                                        0497
*IF LRBMFSC = ON THEN                                              0498
@RC00495 TM    LRBMFSC(R7),B'01000000'                             0498
         BNO   @RF00498                                            0498
*  SERRORC = FOXONE;                                       /*@0001VLS*/
         MVI   SERRORC,C'1'                                        0499
*ELSE                                                              0500
*  SERRORC = FOXZERO;                                      /*@0001VLS*/
         B     @RC00498                                            0500
@RF00498 MVI   SERRORC,C'0'                                        0500
*CALL PRINTER(LINE18);                                     /*@0001VLS*/
@RC00498 LA    @01,@AL00501                                        0501
         BAL   @14,PRINTER                                         0501
*IF LRBMFKE = ON THEN                                              0502
         TM    LRBMFKE(R7),B'00100000'                             0502
         BNO   @RF00502                                            0502
*  SKEYERR = FOXONE;                                       /*@0001VLS*/
         MVI   SKEYERR,C'1'                                        0503
*ELSE                                                              0504
*  SKEYERR = FOXZERO;                                      /*@0001VLS*/
         B     @RC00502                                            0504
@RF00502 MVI   SKEYERR,C'0'                                        0504
*CALL PRINTER(LINE19);                                     /*@0001VLS*/
@RC00502 LA    @01,@AL00505                                        0505
         BAL   @14,PRINTER                                         0505
*CALL PRINTER(LINE20);                                     /*@0001VLS*/
         LA    @01,@AL00506                                        0506
         BAL   @14,PRINTER                                         0506
*IF LRBMVWP = ON THEN                                              0507
         TM    LRBMVWP(R7),B'00001000'                             0507
         BNO   @RF00507                                            0507
*  PSWEMWP = FOXONE;                                       /*@0001VLS*/
         MVI   PSWEMWP,C'1'                                        0508
*ELSE                                                              0509
*  PSWEMWP = FOXZERO;                                      /*@0001VLS*/
         B     @RC00507                                            0509
@RF00507 MVI   PSWEMWP,C'0'                                        0509
*IF LRBMVMS = ON THEN                                              0510
@RC00507 TM    LRBMVMS(R7),B'00000100'                             0510
         BNO   @RF00510                                            0510
*  PSWMASK = FOXONE;                                       /*@0001VLS*/
         MVI   PSWMASK,C'1'                                        0511
*ELSE                                                              0512
*  PSWMASK = FOXZERO;                                      /*@0001VLS*/
         B     @RC00510                                            0512
@RF00510 MVI   PSWMASK,C'0'                                        0512
*CALL PRINTER(LINE21);                                     /*@0001VLS*/
@RC00510 LA    @01,@AL00513                                        0513
         BAL   @14,PRINTER                                         0513
*IF LRBMVPM = ON THEN                                              0514
         TM    LRBMVPM(R7),B'00000010'                             0514
         BNO   @RF00514                                            0514
*  PSWCODE = FOXONE;                                       /*@0001VLS*/
         MVI   PSWCODE,C'1'                                        0515
*ELSE                                                              0516
*  PSWCODE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00514                                            0516
@RF00514 MVI   PSWCODE,C'0'                                        0516
*IF LRBMVIA = ON THEN                                              0517
@RC00514 TM    LRBMVIA(R7),B'00000001'                             0517
         BNO   @RF00517                                            0517
*  INSTADD = FOXONE;                                       /*@0001VLS*/
         MVI   INSTADD,C'1'                                        0518
*ELSE                                                              0519
*  INSTADD = FOXZERO;                                      /*@0001VLS*/
         B     @RC00517                                            0519
@RF00517 MVI   INSTADD,C'0'                                        0519
*CALL PRINTER(LINE22);                                     /*@0001VLS*/
@RC00517 LA    @01,@AL00520                                        0520
         BAL   @14,PRINTER                                         0520
*IF LRBMVFA = ON THEN                                              0521
         TM    LRBMVFA(R7),B'10000000'                             0521
         BNO   @RF00521                                            0521
*  FAILADD = FOXONE;                                       /*@0001VLS*/
         MVI   FAILADD,C'1'                                        0522
*ELSE                                                              0523
*  FAILADD = FOXZERO;                                      /*@0001VLS*/
         B     @RC00521                                            0523
@RF00521 MVI   FAILADD,C'0'                                        0523
*IF LRBMVRC = ON THEN                                              0524
@RC00521 TM    LRBMVRC(R7),B'01000000'                             0524
         BNO   @RF00524                                            0524
*  RGNCODE = FOXONE;                                       /*@0001VLS*/
         MVI   RGNCODE,C'1'                                        0525
*ELSE                                                              0526
*  RGNCODE = FOXZERO;                                      /*@0001VLS*/
         B     @RC00524                                            0526
@RF00524 MVI   RGNCODE,C'0'                                        0526
*CALL PRINTER(LINE23);                                     /*@0001VLS*/
@RC00524 LA    @01,@AL00527                                        0527
         BAL   @14,PRINTER                                         0527
*IF LRBMVFP = ON THEN                                              0528
         TM    LRBMVFP(R7),B'00010000'                             0528
         BNO   @RF00528                                            0528
*  FPREGS = FOXONE;                                        /*@0001VLS*/
         MVI   FPREGS,C'1'                                         0529
*ELSE                                                              0530
*  FPREGS = FOXZERO;                                       /*@0001VLS*/
         B     @RC00528                                            0530
@RF00528 MVI   FPREGS,C'0'                                         0530
*IF LRBMVGR = ON THEN                                              0531
@RC00528 TM    LRBMVGR(R7),B'00001000'                             0531
         BNO   @RF00531                                            0531
*  GPREGS = FOXONE;                                        /*@0001VLS*/
         MVI   GPREGS,C'1'                                         0532
*ELSE                                                              0533
*  GPREGS = FOXZERO;                                       /*@0001VLS*/
         B     @RC00531                                            0533
@RF00531 MVI   GPREGS,C'0'                                         0533
*CALL PRINTER(LINE24);                                     /*@0001VLS*/
@RC00531 LA    @01,@AL00534                                        0534
         BAL   @14,PRINTER                                         0534
*IF LRBMVCR = ON THEN                                              0535
         TM    LRBMVCR(R7),B'00000100'                             0535
         BNO   @RF00535                                            0535
*  CREGS = FOXONE;                                         /*@0001VLS*/
         MVI   CREGS,C'1'                                          0536
*ELSE                                                              0537
*  CREGS = FOXZERO;                                        /*@0001VLS*/
         B     @RC00535                                            0537
@RF00535 MVI   CREGS,C'0'                                          0537
*IF LRBMVLG = ON THEN                                              0538
@RC00535 TM    LRBMVLG(R7),B'00000010'                             0538
         BNO   @RF00538                                            0538
*  ELOGOUT = FOXONE;                                       /*@0001VLS*/
         MVI   ELOGOUT,C'1'                                        0539
*ELSE                                                              0540
*  ELOGOUT = FOXZERO;                                      /*@0001VLS*/
         B     @RC00538                                            0540
@RF00538 MVI   ELOGOUT,C'0'                                        0540
*CALL PRINTER(LINE25);                                     /*@0001VLS*/
@RC00538 LA    @01,@AL00541                                        0541
         BAL   @14,PRINTER                                         0541
*IF LRBMVST = ON THEN                                              0542
         TM    LRBMVST(R7),B'00000001'                             0542
         BNO   @RF00542                                            0542
*  STLOG = FOXONE;                                         /*@0001VLS*/
         MVI   STLOG,C'1'                                          0543
*ELSE                                                              0544
*  STLOG = FOXZERO;                                        /*@0001VLS*/
         B     @RC00542                                            0544
@RF00542 MVI   STLOG,C'0'                                          0544
*IF LRBMVED = ON THEN                                              0545
@RC00542 TM    LRBMVED(R7),B'00100000'                             0545
         BNO   @RF00545                                            0545
*  EDAMCOD = FOXONE;                                       /*@0001VLS*/
         MVI   EDAMCOD,C'1'                                        0546
*ELSE                                                              0547
*  EDAMCOD = FOXZERO;                                      /*@0001VLS*/
         B     @RC00545                                            0547
@RF00545 MVI   EDAMCOD,C'0'                                        0547
*CALL PRINTER(LINE26);                                     /*@0001VLS*/
@RC00545 LA    @01,@AL00548                                        0548
         BAL   @14,PRINTER                                         0548
*IF LRBHTYPE = '13'X THEN                                  /*@VS48642*/
         CLI   LRBHTYPE(R7),X'13'                                  0549
         BNE   @RF00549                                            0549
*  DO;                                                     /*@VS48642*/
*      IF LRBMNVF = ON THEN                                /*@VS48642*/
         TM    LRBMNVF(R7),B'10000000'                             0551
         BNO   @RF00551                                            0551
*        INVLRB = FOXONE;                                  /*@VS48642*/
         MVI   INVLRB,C'1'                                         0552
*      ELSE                                                /*@VS48642*/
*        INVLRB = FOXZERO;                                 /*@VS48642*/
         B     @RC00551                                            0553
@RF00551 MVI   INVLRB,C'0'                                         0553
*      CALL PRINTER(LINE26A);                              /*@VS48642*/
@RC00551 LA    @01,@AL00554                                        0554
         BAL   @14,PRINTER                                         0554
*  END;                                                    /*@VS48642*/
*CALL CONVERT (LRBMCELL,WORK,2);                           /*@0001VLS*/
@RF00549 MVC   @AL00001+4(8),@AL00556                              0556
         LA    @06,LRBMCELL(,R7)                                   0556
         ST    @06,@AL00001                                        0556
         LA    @01,@AL00001                                        0556
         BAL   @14,CONVERT                                         0556
*ELOGLEN(1:2) = WORK(1:2);                                 /*@0001VLS*/
         MVC   ELOGLEN(2),WORK                                     0557
*ELOGLEN(4:5) = WORK(3:4);                                 /*@0001VLS*/
         MVC   ELOGLEN+3(2),WORK+2                                 0558
*CALL PRINTER(LINE27);                                     /*@0001VLS*/
         LA    @01,@AL00559                                        0559
         BAL   @14,PRINTER                                         0559
*IF LRBMCHST = ON THEN                                             0560
         TM    LRBMCHST(R7),B'10000000'                            0560
         BNO   @RF00560                                            0560
*  DO;                                                     /*@0001VLS*/
*    CALL CONVERT (LRBMF1,WORK,14);                        /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00562                              0562
         LA    @06,LRBMF1(,R7)                                     0562
         ST    @06,@AL00001                                        0562
         LA    @01,@AL00001                                        0562
         BAL   @14,CONVERT                                         0562
*    DO I = 1 TO 14;                                       /*@0001VLS*/
         LA    @06,1                                               0563
         ST    @06,I                                               0563
@DL00563 DS    0H                                                  0564
*      MCSTAT(I) = WORK(2*I-1:2*I);                        /*@0001VLS*/
         LR    @04,@06                                             0564
         MH    @04,@CH00076                                        0564
         LA    @01,MCSTAT-3(@04)                                   0564
         LR    @04,@06                                             0564
         ALR   @04,@04                                             0564
         LA    @15,WORK-2(@04)                                     0564
         MVC   0(2,@01),0(@15)                                     0564
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0565
         ST    @06,I                                               0565
         C     @06,@CF00540                                        0565
         BNH   @DL00563                                            0565
*    CALL PRINTER(LINE28A);                                /*@0001VLS*/
         LA    @01,@AL00566                                        0566
         BAL   @14,PRINTER                                         0566
*  END;                                                    /*@0001VLS*/
*ELSE                                                              0568
*  DO;                                                     /*@0001VLS*/
         B     @RC00560                                            0568
@RF00560 DS    0H                                                  0569
*    CALL EXTDAM;                                          /*@0001VLS*/
         BAL   @14,EXTDAM                                          0569
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00570                                        0570
         BAL   @14,PRINTER                                         0570
*    CALL PRINTER(LINE28B);                                /*@0001VLS*/
         LA    @01,@AL00571                                        0571
         BAL   @14,PRINTER                                         0571
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00572                                        0572
         BAL   @14,PRINTER                                         0572
*    CALL CONVERT (LRBMCIC,WORK,8);                        /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00573                              0573
         LA    @06,LRBMCIC(,R7)                                    0573
         ST    @06,@AL00001                                        0573
         LA    @01,@AL00001                                        0573
         BAL   @14,CONVERT                                         0573
*    DO I = 1 TO 8;                                        /*@0001VLS*/
         LA    @06,1                                               0574
         ST    @06,I                                               0574
@DL00574 DS    0H                                                  0575
*      MKINT(I) = WORK(2*I-1:2*I);                         /*@0001VLS*/
         LR    @04,@06                                             0575
         MH    @04,@CH00076                                        0575
         LA    @01,MKINT-3(@04)                                    0575
         LR    @04,@06                                             0575
         ALR   @04,@04                                             0575
         LA    @15,WORK-2(@04)                                     0575
         MVC   0(2,@01),0(@15)                                     0575
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0576
         ST    @06,I                                               0576
         C     @06,@CF00066                                        0576
         BNH   @DL00574                                            0576
*    CALL PRINTER(LINE29);                                 /*@0001VLS*/
         LA    @01,@AL00577                                        0577
         BAL   @14,PRINTER                                         0577
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00578                                        0578
         BAL   @14,PRINTER                                         0578
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00579                                        0579
         BAL   @14,PRINTER                                         0579
*    CALL PRINTER(LINE36);                                 /*@0001VLS*/
         LA    @01,@AL00580                                        0580
         BAL   @14,PRINTER                                         0580
*    CALL CONVERT (LRBFPR,WORK,16);                        /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00581                              0581
         LA    @06,LRBFPR(,R7)                                     0581
         ST    @06,@AL00001                                        0581
         LA    @01,@AL00001                                        0581
         BAL   @14,CONVERT                                         0581
*    DO I = 1 TO 8;                                        /*@0001VLS*/
         LA    @06,1                                               0582
         ST    @06,I                                               0582
@DL00582 DS    0H                                                  0583
*      FPR0(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0583
         MH    @04,@CH00076                                        0583
         LA    @01,FPR0-3(@04)                                     0583
         LR    @15,@06                                             0583
         ALR   @15,@15                                             0583
         LA    @14,WORK-2(@15)                                     0583
         MVC   0(2,@01),0(@14)                                     0583
*      FPR2(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,FPR2-3(@04)                                     0584
         LA    @04,WORK+14(@15)                                    0584
         MVC   0(2,@01),0(@04)                                     0584
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0585
         ST    @06,I                                               0585
         C     @06,@CF00066                                        0585
         BNH   @DL00582                                            0585
*    CALL PRINTER(LINE37);                                 /*@0001VLS*/
         LA    @01,@AL00586                                        0586
         BAL   @14,PRINTER                                         0586
*    CALL CONVERT (LRBFPR(17),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00587                              0587
         LA    @06,LRBFPR+16(,R7)                                  0587
         ST    @06,@AL00001                                        0587
         LA    @01,@AL00001                                        0587
         BAL   @14,CONVERT                                         0587
*    DO I = 1 TO 8;                                        /*@0001VLS*/
         LA    @06,1                                               0588
         ST    @06,I                                               0588
@DL00588 DS    0H                                                  0589
*      FPR4(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0589
         MH    @04,@CH00076                                        0589
         LA    @01,FPR4-3(@04)                                     0589
         LR    @15,@06                                             0589
         ALR   @15,@15                                             0589
         LA    @14,WORK-2(@15)                                     0589
         MVC   0(2,@01),0(@14)                                     0589
*      FPR6(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,FPR6-3(@04)                                     0590
         LA    @04,WORK+14(@15)                                    0590
         MVC   0(2,@01),0(@04)                                     0590
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0591
         ST    @06,I                                               0591
         C     @06,@CF00066                                        0591
         BNH   @DL00588                                            0591
*    CALL PRINTER(LINE38);                                 /*@0001VLS*/
         LA    @01,@AL00592                                        0592
         BAL   @14,PRINTER                                         0592
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00593                                        0593
         BAL   @14,PRINTER                                         0593
*    CALL CONVERT (LRBGPR,WORK,16);                        /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00594                              0594
         LA    @06,LRBGPR(,R7)                                     0594
         ST    @06,@AL00001                                        0594
         LA    @01,@AL00001                                        0594
         BAL   @14,CONVERT                                         0594
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0595
         ST    @06,I                                               0595
@DL00595 DS    0H                                                  0596
*      GPR0(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0596
         MH    @04,@CH00076                                        0596
         LA    @01,GPR0-3(@04)                                     0596
         LR    @15,@06                                             0596
         ALR   @15,@15                                             0596
         LA    @14,WORK-2(@15)                                     0596
         MVC   0(2,@01),0(@14)                                     0596
*      GPR1(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,GPR1-3(@04)                                     0597
         LA    @14,WORK+6(@15)                                     0597
         MVC   0(2,@01),0(@14)                                     0597
*      GPR2(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,GPR2-3(@04)                                     0598
         LA    @14,WORK+14(@15)                                    0598
         MVC   0(2,@01),0(@14)                                     0598
*      GPR3(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,GPR3-3(@04)                                     0599
         LA    @04,WORK+22(@15)                                    0599
         MVC   0(2,@01),0(@04)                                     0599
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0600
         ST    @06,I                                               0600
         C     @06,@CF00064                                        0600
         BNH   @DL00595                                            0600
*    CALL PRINTER(LINE39);                                 /*@0001VLS*/
         LA    @01,@AL00601                                        0601
         BAL   @14,PRINTER                                         0601
*    CALL CONVERT (LRBGPR(17),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00602                              0602
         LA    @06,LRBGPR+16(,R7)                                  0602
         ST    @06,@AL00001                                        0602
         LA    @01,@AL00001                                        0602
         BAL   @14,CONVERT                                         0602
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0603
         ST    @06,I                                               0603
@DL00603 DS    0H                                                  0604
*      GPR4(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0604
         MH    @04,@CH00076                                        0604
         LA    @01,GPR4-3(@04)                                     0604
         LR    @15,@06                                             0604
         ALR   @15,@15                                             0604
         LA    @14,WORK-2(@15)                                     0604
         MVC   0(2,@01),0(@14)                                     0604
*      GPR5(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,GPR5-3(@04)                                     0605
         LA    @14,WORK+6(@15)                                     0605
         MVC   0(2,@01),0(@14)                                     0605
*      GPR6(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,GPR6-3(@04)                                     0606
         LA    @14,WORK+14(@15)                                    0606
         MVC   0(2,@01),0(@14)                                     0606
*      GPR7(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,GPR7-3(@04)                                     0607
         LA    @04,WORK+22(@15)                                    0607
         MVC   0(2,@01),0(@04)                                     0607
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0608
         ST    @06,I                                               0608
         C     @06,@CF00064                                        0608
         BNH   @DL00603                                            0608
*    CALL PRINTER(LINE40);                                 /*@0001VLS*/
         LA    @01,@AL00609                                        0609
         BAL   @14,PRINTER                                         0609
*    CALL CONVERT (LRBGPR(33),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00610                              0610
         LA    @06,LRBGPR+32(,R7)                                  0610
         ST    @06,@AL00001                                        0610
         LA    @01,@AL00001                                        0610
         BAL   @14,CONVERT                                         0610
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0611
         ST    @06,I                                               0611
@DL00611 DS    0H                                                  0612
*      GPR8(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0612
         MH    @04,@CH00076                                        0612
         LA    @01,GPR8-3(@04)                                     0612
         LR    @15,@06                                             0612
         ALR   @15,@15                                             0612
         LA    @14,WORK-2(@15)                                     0612
         MVC   0(2,@01),0(@14)                                     0612
*      GPR9(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,GPR9-3(@04)                                     0613
         LA    @14,WORK+6(@15)                                     0613
         MVC   0(2,@01),0(@14)                                     0613
*      GPRA(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,GPRA-3(@04)                                     0614
         LA    @14,WORK+14(@15)                                    0614
         MVC   0(2,@01),0(@14)                                     0614
*      GPRB(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,GPRB-3(@04)                                     0615
         LA    @04,WORK+22(@15)                                    0615
         MVC   0(2,@01),0(@04)                                     0615
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0616
         ST    @06,I                                               0616
         C     @06,@CF00064                                        0616
         BNH   @DL00611                                            0616
*    CALL PRINTER(LINE41);                                 /*@0001VLS*/
         LA    @01,@AL00617                                        0617
         BAL   @14,PRINTER                                         0617
*    CALL CONVERT (LRBGPR(49),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00618                              0618
         LA    @06,LRBGPR+48(,R7)                                  0618
         ST    @06,@AL00001                                        0618
         LA    @01,@AL00001                                        0618
         BAL   @14,CONVERT                                         0618
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0619
         ST    @06,I                                               0619
@DL00619 DS    0H                                                  0620
*      GPRC(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0620
         MH    @04,@CH00076                                        0620
         LA    @01,GPRC-3(@04)                                     0620
         LR    @15,@06                                             0620
         ALR   @15,@15                                             0620
         LA    @14,WORK-2(@15)                                     0620
         MVC   0(2,@01),0(@14)                                     0620
*      GPRD(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,GPRD-3(@04)                                     0621
         LA    @14,WORK+6(@15)                                     0621
         MVC   0(2,@01),0(@14)                                     0621
*      GPRE(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,GPRE-3(@04)                                     0622
         LA    @14,WORK+14(@15)                                    0622
         MVC   0(2,@01),0(@14)                                     0622
*      GPRF(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,GPRF-3(@04)                                     0623
         LA    @04,WORK+22(@15)                                    0623
         MVC   0(2,@01),0(@04)                                     0623
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0624
         ST    @06,I                                               0624
         C     @06,@CF00064                                        0624
         BNH   @DL00619                                            0624
*    CALL PRINTER(LINE42);                                 /*@0001VLS*/
         LA    @01,@AL00625                                        0625
         BAL   @14,PRINTER                                         0625
*    CALL PRINTER(BLINE);                                  /*@0001VLS*/
         LA    @01,@AL00626                                        0626
         BAL   @14,PRINTER                                         0626
*    CALL PRINTER(LINE43);                                 /*@0001VLS*/
         LA    @01,@AL00627                                        0627
         BAL   @14,PRINTER                                         0627
*    CALL CONVERT (LRBECR,WORK,16);                        /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00628                              0628
         LA    @06,LRBECR(,R7)                                     0628
         ST    @06,@AL00001                                        0628
         LA    @01,@AL00001                                        0628
         BAL   @14,CONVERT                                         0628
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0629
         ST    @06,I                                               0629
@DL00629 DS    0H                                                  0630
*      ECR0(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0630
         MH    @04,@CH00076                                        0630
         LA    @01,ECR0-3(@04)                                     0630
         LR    @15,@06                                             0630
         ALR   @15,@15                                             0630
         LA    @14,WORK-2(@15)                                     0630
         MVC   0(2,@01),0(@14)                                     0630
*      ECR1(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,ECR1-3(@04)                                     0631
         LA    @14,WORK+6(@15)                                     0631
         MVC   0(2,@01),0(@14)                                     0631
*      ECR2(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,ECR2-3(@04)                                     0632
         LA    @14,WORK+14(@15)                                    0632
         MVC   0(2,@01),0(@14)                                     0632
*      ECR3(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,ECR3-3(@04)                                     0633
         LA    @04,WORK+22(@15)                                    0633
         MVC   0(2,@01),0(@04)                                     0633
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0634
         ST    @06,I                                               0634
         C     @06,@CF00064                                        0634
         BNH   @DL00629                                            0634
*    CALL PRINTER(LINE44);                                 /*@0001VLS*/
         LA    @01,@AL00635                                        0635
         BAL   @14,PRINTER                                         0635
*    CALL CONVERT (LRBECR(17),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00636                              0636
         LA    @06,LRBECR+16(,R7)                                  0636
         ST    @06,@AL00001                                        0636
         LA    @01,@AL00001                                        0636
         BAL   @14,CONVERT                                         0636
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0637
         ST    @06,I                                               0637
@DL00637 DS    0H                                                  0638
*      ECR4(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0638
         MH    @04,@CH00076                                        0638
         LA    @01,ECR4-3(@04)                                     0638
         LR    @15,@06                                             0638
         ALR   @15,@15                                             0638
         LA    @14,WORK-2(@15)                                     0638
         MVC   0(2,@01),0(@14)                                     0638
*      ECR5(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,ECR5-3(@04)                                     0639
         LA    @14,WORK+6(@15)                                     0639
         MVC   0(2,@01),0(@14)                                     0639
*      ECR6(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,ECR6-3(@04)                                     0640
         LA    @14,WORK+14(@15)                                    0640
         MVC   0(2,@01),0(@14)                                     0640
*      ECR7(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,ECR7-3(@04)                                     0641
         LA    @04,WORK+22(@15)                                    0641
         MVC   0(2,@01),0(@04)                                     0641
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0642
         ST    @06,I                                               0642
         C     @06,@CF00064                                        0642
         BNH   @DL00637                                            0642
*    CALL PRINTER(LINE45);                                 /*@0001VLS*/
         LA    @01,@AL00643                                        0643
         BAL   @14,PRINTER                                         0643
*    CALL CONVERT (LRBECR(33),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00644                              0644
         LA    @06,LRBECR+32(,R7)                                  0644
         ST    @06,@AL00001                                        0644
         LA    @01,@AL00001                                        0644
         BAL   @14,CONVERT                                         0644
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0645
         ST    @06,I                                               0645
@DL00645 DS    0H                                                  0646
*      ECR8(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0646
         MH    @04,@CH00076                                        0646
         LA    @01,ECR8-3(@04)                                     0646
         LR    @15,@06                                             0646
         ALR   @15,@15                                             0646
         LA    @14,WORK-2(@15)                                     0646
         MVC   0(2,@01),0(@14)                                     0646
*      ECR9(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,ECR9-3(@04)                                     0647
         LA    @14,WORK+6(@15)                                     0647
         MVC   0(2,@01),0(@14)                                     0647
*      ECRA(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,ECRA-3(@04)                                     0648
         LA    @14,WORK+14(@15)                                    0648
         MVC   0(2,@01),0(@14)                                     0648
*      ECRB(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,ECRB-3(@04)                                     0649
         LA    @04,WORK+22(@15)                                    0649
         MVC   0(2,@01),0(@04)                                     0649
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0650
         ST    @06,I                                               0650
         C     @06,@CF00064                                        0650
         BNH   @DL00645                                            0650
*    CALL PRINTER(LINE46);                                 /*@0001VLS*/
         LA    @01,@AL00651                                        0651
         BAL   @14,PRINTER                                         0651
*    CALL CONVERT (LRBECR(49),WORK,16);                    /*@0001VLS*/
         MVC   @AL00001+4(8),@AL00652                              0652
         LA    @06,LRBECR+48(,R7)                                  0652
         ST    @06,@AL00001                                        0652
         LA    @01,@AL00001                                        0652
         BAL   @14,CONVERT                                         0652
*    DO I = 1 TO 4;                                        /*@0001VLS*/
         LA    @06,1                                               0653
         ST    @06,I                                               0653
@DL00653 DS    0H                                                  0654
*      ECRC(I) = WORK(2*I-1:2*I);                          /*@0001VLS*/
         LR    @04,@06                                             0654
         MH    @04,@CH00076                                        0654
         LA    @01,ECRC-3(@04)                                     0654
         LR    @15,@06                                             0654
         ALR   @15,@15                                             0654
         LA    @14,WORK-2(@15)                                     0654
         MVC   0(2,@01),0(@14)                                     0654
*      ECRD(I) = WORK(8+2*I-1:8+2*I);                      /*@0001VLS*/
         LA    @01,ECRD-3(@04)                                     0655
         LA    @14,WORK+6(@15)                                     0655
         MVC   0(2,@01),0(@14)                                     0655
*      ECRE(I) = WORK(16+2*I-1:16+2*I);                    /*@0001VLS*/
         LA    @01,ECRE-3(@04)                                     0656
         LA    @14,WORK+14(@15)                                    0656
         MVC   0(2,@01),0(@14)                                     0656
*      ECRF(I) = WORK(24+2*I-1:24+2*I);                    /*@0001VLS*/
         LA    @01,ECRF-3(@04)                                     0657
         LA    @04,WORK+22(@15)                                    0657
         MVC   0(2,@01),0(@04)                                     0657
*    END;                                                  /*@0001VLS*/
         AL    @06,@CF00055                                        0658
         ST    @06,I                                               0658
         C     @06,@CF00064                                        0658
         BNH   @DL00653                                            0658
*    CALL PRINTER(LINE47);                                 /*@0001VLS*/
         LA    @01,@AL00659                                        0659
         BAL   @14,PRINTER                                         0659
*  END;                                                    /*@0001VLS*/
*IF LRBHTYPE = '13'X THEN                                          0661
@RC00560 CLI   LRBHTYPE(R7),X'13'                                  0661
         BNE   @RF00661                                            0661
*  CALL MVSLOG;                                            /*@0001VLS*/
         BAL   @14,MVSLOG                                          0662
*RESPECIFY (R15) RESTRICTED;                               /*@0001VLS*/
@RF00661 DS    0H                                                  0664
*R15 = ZERO;                                               /*@0001VLS*/
         SLR   R15,R15                                             0664
*RETURN;                                                   /*@0001VLS*/
@EL00001 L     @13,4(,@13)                                         0665
@EF00001 DS    0H                                                  0665
@ER00001 L     @14,12(,@13)                                        0665
         LM    @00,@12,20(@13)                                     0665
         BR    @14                                                 0665
*RESPECIFY (R15) UNRESTRICTED;                             /*@0001VLS*/
*END                                                       /*@0001VLS*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (COMTABLE)                                        *
*;                                                                 0667
@DATA    DS    0H
         DS    0F
@AL00192 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00201 DC    A(@CF00074+2)           LIST WITH   1 ARGUMENT(S)
@AL00208 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00210 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00242 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00244 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00246 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00312 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00314 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00316 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00364 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00371 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00375 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00393 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00395 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00422 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00428 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00439 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00443 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00454 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00456 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00570 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00572 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00578 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00579 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00593 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00626 DC    A(BLINE)                LIST WITH   1 ARGUMENT(S)
@AL00209 DC    A(LINE28C)              LIST WITH   1 ARGUMENT(S)
@AL00217 DC    A(LINE28D)              LIST WITH   1 ARGUMENT(S)
@AL00224 DC    A(LINE28E)              LIST WITH   1 ARGUMENT(S)
@AL00231 DC    A(LINE28F)              LIST WITH   1 ARGUMENT(S)
@AL00238 DC    A(LINE28G)              LIST WITH   1 ARGUMENT(S)
@AL00243 DC    A(BLIN1)                LIST WITH   1 ARGUMENT(S)
@AL00245 DC    A(BLIN2)                LIST WITH   1 ARGUMENT(S)
@AL00253 DC    A(BLIN3)                LIST WITH   1 ARGUMENT(S)
@AL00254 DC    A(BLIN4)                LIST WITH   1 ARGUMENT(S)
@AL00255 DC    A(BLIN5)                LIST WITH   1 ARGUMENT(S)
@AL00259 DC    A(BLIN6)                LIST WITH   1 ARGUMENT(S)
@AL00272 DC    A(BLIN7)                LIST WITH   1 ARGUMENT(S)
@AL00285 DC    A(BLIN8)                LIST WITH   1 ARGUMENT(S)
@AL00298 DC    A(BLIN9)                LIST WITH   1 ARGUMENT(S)
@AL00311 DC    A(BLIN10)               LIST WITH   1 ARGUMENT(S)
@AL00313 DC    A(BLIN11A)              LIST WITH   1 ARGUMENT(S)
@AL00315 DC    A(BLIN11)               LIST WITH   1 ARGUMENT(S)
@AL00320 DC    A(BLIN12)               LIST WITH   1 ARGUMENT(S)
@AL00324 DC    A(BLIN13)               LIST WITH   1 ARGUMENT(S)
@AL00328 DC    A(BLIN14)               LIST WITH   1 ARGUMENT(S)
@AL00335 DC    A(BLIN15)               LIST WITH   1 ARGUMENT(S)
@AL00342 DC    A(BLIN16)               LIST WITH   1 ARGUMENT(S)
@AL00349 DC    A(BLIN17)               LIST WITH   1 ARGUMENT(S)
@AL00356 DC    A(BLIN18)               LIST WITH   1 ARGUMENT(S)
@AL00363 DC    A(BLIN19)               LIST WITH   1 ARGUMENT(S)
@AL00366 DC    A(I)                    LIST WITH   2 ARGUMENT(S)
         DC    A(BLIN20P1)
@AL00367 DC    A(BLIN20)               LIST WITH   1 ARGUMENT(S)
@AL00372 DC    A(LMODEL)               LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00074)
@AL00373 DC    A(SERIAL)               LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00076)
@AL00374 DC    A(LINE1)                LIST WITH   1 ARGUMENT(S)
@AL00391 DC    A(I)                    LIST WITH   2 ARGUMENT(S)
         DC    A(REL)
@AL00392 DC    A(LINE2)                LIST WITH   1 ARGUMENT(S)
@AL00394 DC    A(LINE3)                LIST WITH   1 ARGUMENT(S)
@AL00399 DC    A(I)                    LIST WITH   2 ARGUMENT(S)
         DC    A(SEQ)
@AL00400 DC    A(CPU)                  LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00074)
@AL00401 DC    A(ASID)                 LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00074)
@AL00404 DC    A(J)                    LIST WITH   2 ARGUMENT(S)
         DC    A(ERRORHH)
@AL00407 DC    A(J)                    LIST WITH   2 ARGUMENT(S)
         DC    A(ERRORMM)
@AL00410 DC    A(J)                    LIST WITH   2 ARGUMENT(S)
         DC    A(ERRORSS)
@AL00412 DC    A(I)                    LIST WITH   2 ARGUMENT(S)
         DC    A(ERRORTH)
@AL00419 DC    A(LINE4B)               LIST WITH   1 ARGUMENT(S)
@AL00421 DC    A(LINE4A)               LIST WITH   1 ARGUMENT(S)
@AL00423 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00573 DC    A(WORK)                 LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00066)
@AL00427 DC    A(LINE5)                LIST WITH   1 ARGUMENT(S)
@AL00431 DC    A(LINE6A)               LIST WITH   1 ARGUMENT(S)
@AL00432 DC    A(RECLEN)               LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00064)
@AL00433 DC    A(WAITCODE)             LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00064)
@AL00434 DC    A(LINE6C)               LIST WITH   1 ARGUMENT(S)
@AL00438 DC    A(LINE6B1)              LIST WITH   1 ARGUMENT(S)
@AL00441 DC    A(LINE6B2)              LIST WITH   1 ARGUMENT(S)
@AL00444 DC    A(LINE7)                LIST WITH   1 ARGUMENT(S)
@AL00445 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00448 DC    A(WORK)                 LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00064)
@AL00453 DC    A(LINE8)                LIST WITH   1 ARGUMENT(S)
@AL00455 DC    A(LINE9)                LIST WITH   1 ARGUMENT(S)
@AL00457 DC    A(LINE10)               LIST WITH   1 ARGUMENT(S)
@AL00464 DC    A(LINE11)               LIST WITH   1 ARGUMENT(S)
@AL00471 DC    A(LINE12)               LIST WITH   1 ARGUMENT(S)
@AL00478 DC    A(LINE13)               LIST WITH   1 ARGUMENT(S)
@AL00485 DC    A(LINE14)               LIST WITH   1 ARGUMENT(S)
@AL00486 DC    A(LINE15)               LIST WITH   1 ARGUMENT(S)
@AL00493 DC    A(LINE16)               LIST WITH   1 ARGUMENT(S)
@AL00494 DC    A(LINE17)               LIST WITH   1 ARGUMENT(S)
@AL00501 DC    A(LINE18)               LIST WITH   1 ARGUMENT(S)
@AL00505 DC    A(LINE19)               LIST WITH   1 ARGUMENT(S)
@AL00506 DC    A(LINE20)               LIST WITH   1 ARGUMENT(S)
@AL00513 DC    A(LINE21)               LIST WITH   1 ARGUMENT(S)
@AL00520 DC    A(LINE22)               LIST WITH   1 ARGUMENT(S)
@AL00527 DC    A(LINE23)               LIST WITH   1 ARGUMENT(S)
@AL00534 DC    A(LINE24)               LIST WITH   1 ARGUMENT(S)
@AL00541 DC    A(LINE25)               LIST WITH   1 ARGUMENT(S)
@AL00548 DC    A(LINE26)               LIST WITH   1 ARGUMENT(S)
@AL00554 DC    A(LINE26A)              LIST WITH   1 ARGUMENT(S)
@AL00556 DC    A(WORK)                 LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00074)
@AL00559 DC    A(LINE27)               LIST WITH   1 ARGUMENT(S)
@AL00562 DC    A(WORK)                 LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00540)
@AL00566 DC    A(LINE28A)              LIST WITH   1 ARGUMENT(S)
@AL00571 DC    A(LINE28B)              LIST WITH   1 ARGUMENT(S)
@AL00577 DC    A(LINE29)               LIST WITH   1 ARGUMENT(S)
@AL00580 DC    A(LINE36)               LIST WITH   1 ARGUMENT(S)
@AL00581 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00587 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00594 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00602 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00610 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00618 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00628 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00636 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00644 EQU   *                       LIST WITH   2 ARGUMENT(S)
@AL00652 DC    A(WORK)                 LIST WITH   2 ARGUMENT(S)
         DC    A(@CF00088)
@AL00586 DC    A(LINE37)               LIST WITH   1 ARGUMENT(S)
@AL00592 DC    A(LINE38)               LIST WITH   1 ARGUMENT(S)
@AL00601 DC    A(LINE39)               LIST WITH   1 ARGUMENT(S)
@AL00609 DC    A(LINE40)               LIST WITH   1 ARGUMENT(S)
@AL00617 DC    A(LINE41)               LIST WITH   1 ARGUMENT(S)
@AL00625 DC    A(LINE42)               LIST WITH   1 ARGUMENT(S)
@AL00627 DC    A(LINE43)               LIST WITH   1 ARGUMENT(S)
@AL00635 DC    A(LINE44)               LIST WITH   1 ARGUMENT(S)
@AL00643 DC    A(LINE45)               LIST WITH   1 ARGUMENT(S)
@AL00651 DC    A(LINE46)               LIST WITH   1 ARGUMENT(S)
@AL00659 DC    A(LINE47)               LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00002 DS    2F
@PC00003 DS    2F
@PC00004 DS    3F
@SA00005 DS    14F
@PC00005 DS    1F
@SA00006 DS    14F
@SA00007 DS    15F
@AL00001 DS    3A
         DS    0F
@CF00055 DC    F'1'
@CF00074 DC    F'2'
@CH00074 EQU   @CF00074+2
@CF00076 DC    F'3'
@CH00076 EQU   @CF00076+2
@CF00064 DC    F'4'
@CF00082 DC    F'7'
@CF00066 DC    F'8'
@CF00035 DC    F'10'
@CH00035 EQU   @CF00035+2
@CF00540 DC    F'14'
@CF00088 DC    F'16'
@CF01724 DC    F'600'
@CH01724 EQU   @CF01724+2
@CF01723 DC    F'36000'
@CF01733 DC    F'-10'
@CF01734 DC    F'-8'
@CF01735 DC    F'-6'
@CF01736 DC    F'-4'
         DS    0D
I        DS    F
J        DS    F
@CC01711 DC    C'VS 2'
@CC01712 DC    C'VM  '
@CC01713 DC    C'VS 1'
@CC01714 DC    C'DOS '
@CC01717 DC    C'OS  '
EJECT    DC    CL134'0'
         ORG   EJECT
@NM00012 DS    CL1
@NM00013 DC    X'89'
         ORG   EJECT+134
BLINE    DC    CL134'0'
         ORG   BLINE
@NM00014 DS    CL1
@NM00015 DC    X'09'
         ORG   BLINE+134
LINE1    DC    CL134'0'
         ORG   LINE1
@NM00016 DS    CL1
@NM00017 DC    X'09'
@NM00018 DC    CL6'MODEL'
LMODEL   DS    CL4
@NM00019 DS    CL24
@NM00020 DC    CL12'SERIAL NO.'
SERIAL   DS    CL6
         ORG   LINE1+134
LINE2    DC    CL134'0'
         ORG   LINE2
@NM00021 DS    CL1
@NM00022 DC    X'09'
SYS      DS    CL5
@NM00023 DC    CL4'REL.'
REL      DS    CL2
         ORG   LINE2+134
LINE3    DC    CL134'0'
         ORG   LINE3
@NM00024 DS    CL1
@NM00025 DC    X'09'
@NM00026 DC    CL36'--- RECORD SOURCE - MCH ---'
@NM00027 DC    CL20'TYPE - CPU'
         ORG   LINE3+134
LINE4A   DC    CL134'0'
         ORG   LINE4A
@NM00028 DS    CL1
@NM00029 DC    X'09'
@NM00030 DC    CL16' '
@NM00031 DC    CL50'NO ERRORID ASSOCIATED WITH THIS RECORD'
         ORG   LINE4A+134
LINE4B   DC    CL134'0'
         ORG   LINE4B
@NM00032 DS    CL1
@NM00033 DC    X'09'
@NM00034 DC    CL11'ERRORID=SEQ'
SEQ      DS    CL6
@NM00035 DC    CL3'CPU'
CPU      DS    CL5
@NM00036 DC    CL4'ASID'
ASID     DS    CL5
@NM00037 DC    CL4'TIME'
ERRORHH  DS    CL2
@NM00038 DC    CL1'.'
ERRORMM  DS    CL2
@NM00039 DC    CL1'.'
ERRORSS  DS    CL2
@NM00040 DC    CL1'.'
ERRORTH  DS    CL1
         ORG   LINE4B+134
LINE5    DC    CL134'0'
         ORG   LINE5
@NM00041 DS    CL1
@NM00042 DC    X'09'
@NM00043 DC    CL14'MCK OLD PSW'
@NM00044 DS    CL3
         ORG   @NM00044+0
MCKPSW   DS    CL2
@NM00045 DS    CL1
         ORG   LINE5+134
LINE6A   DC    CL134'0'
         ORG   LINE6A
@NM00046 DS    CL1
@NM00047 DC    X'09'
@NM00048 DC    CL40'-----  SYSTEM TERMINATED  -----'
         ORG   LINE6A+134
LINE6C   DC    CL134'0'
         ORG   LINE6C
@NM00049 DS    CL1
@NM00050 DC    X'09'
@NM00051 DC    CL15'RECORD LENGTH'
RECLEN   DS    CL8
@NM00052 DS    CL5
@NM00053 DC    CL15'WAIT STATE'
WAITCODE DS    CL8
         ORG   LINE6C+134
LINE6B1  DC    CL134'0'
         ORG   LINE6B1
@NM00054 DS    CL1
@NM00055 DC    X'09'
@NM00056 DC    CL20'JOB NAME'
JOBNAME  DS    CL8
         ORG   LINE6B1+134
LINE6B2  DC    CL134'0'
         ORG   LINE6B2
@NM00057 DS    CL1
@NM00058 DC    X'09'
@NM00059 DC    CL20'PROGRAM NAME'
IFCESUMS DS    CL8
         ORG   LINE6B2+134
LINE7    DC    CL134'0'
         ORG   LINE7
@NM00060 DS    CL1
@NM00061 DC    X'09'
@NM00062 DC    CL7' '
@NM00063 DC    CL40'DAY  YEAR'
@NM00064 DC    CL40'HH MM SS.TH'
         ORG   LINE7+134
LINE8    DC    CL134'0'
         ORG   LINE8
@NM00065 DS    CL1
@NM00066 DC    X'09'
@NM00067 DC    CL7'DATE _'
DAY      DS    CL6
YEAR     DS    CL27
@NM00068 DC    CL7'TIME _'
TIMEHH   DS    CL3
TIMEMM   DS    CL3
TIMESS   DS    CL3
TIMETH   DS    CL2
         ORG   LINE8+134
LINE9    DC    CL134'0'
         ORG   LINE9
@NM00069 DS    CL1
@NM00070 DC    X'09'
@NM00071 DC    CL4' '
@NM00072 DC    CL40'--- MACHINE CHECK INTERRUPT CODE ---'
         ORG   LINE9+134
LINE10   DC    CL134'0'
         ORG   LINE10
@NM00073 DS    CL1
@NM00074 DC    X'09'
@NM00075 DC    CL4' '
@NM00076 DC    CL40'--- INTERRUPTION SUB CLASSES ---'
         ORG   LINE10+134
LINE11   DC    CL134'0'
         ORG   LINE11
@NM00077 DS    CL1
@NM00078 DC    X'09'
@NM00079 DC    CL4' '
@NM00080 DC    CL40'SYSTEM DAMAGE (SD)'
SDAMAGE  DS    CL1
@NM00081 DS    CL9
@NM00082 DC    CL40'INSTRUCTION PROCESSING DAMAGE (PD)'
IDAMAGE  DS    CL1
         ORG   LINE11+134
LINE12   DC    CL134'0'
         ORG   LINE12
@NM00083 DS    CL1
@NM00084 DC    X'09'
@NM00085 DC    CL4' '
@NM00086 DC    CL40'SYSTEM RECOVERY (SR)'
SRECO    DS    CL1
@NM00087 DS    CL9
@NM00088 DC    CL40'TIMER DAMAGE (TD)'
TDAMAGE  DS    CL1
         ORG   LINE12+134
LINE13   DC    CL134'0'
         ORG   LINE13
@NM00089 DS    CL1
@NM00090 DC    X'09'
@NM00091 DC    CL4' '
@NM00092 DC    CL40'CLOCK DAMAGE (CD)'
CDAMAGE  DS    CL1
@NM00093 DS    CL9
@NM00094 DC    CL40'EXTERNAL DAMAGE (ED)'
EDAMAGE  DS    CL1
         ORG   LINE13+134
LINE14   DC    CL134'0'
         ORG   LINE14
@NM00095 DS    CL1
@NM00096 DC    X'09'
@NM00097 DC    CL4' '
@NM00098 DC    CL40'DEGRADATION (DG)'
DEGRAD   DS    CL1
@NM00099 DS    CL9
@NM00100 DC    CL40'WARNING (W)'
WARNING  DS    CL1
         ORG   LINE14+134
LINE15   DC    CL134'0'
         ORG   LINE15
@NM00101 DS    CL1
@NM00102 DC    X'09'
@NM00103 DC    CL4' '
@NM00104 DC    CL40'--- INTERRUPT TENSE CODES ---'
         ORG   LINE15+134
LINE16   DC    CL134'0'
         ORG   LINE16
@NM00105 DS    CL1
@NM00106 DC    X'09'
@NM00107 DC    CL4' '
@NM00108 DC    CL40'BACKED UP (B)'
BACKED   DS    CL1
@NM00109 DS    CL9
@NM00110 DC    CL40'DELAYED (D)'
DELAYED  DS    CL1
         ORG   LINE16+134
LINE17   DC    CL134'0'
         ORG   LINE17
@NM00111 DS    CL1
@NM00112 DC    X'09'
@NM00113 DC    CL4' '
@NM00114 DC    CL60'--- STORAGE AND PROTECTION ERROR CODES ---'
         ORG   LINE17+134
LINE18   DC    CL134'0'
         ORG   LINE18
@NM00115 DS    CL1
@NM00116 DC    X'09'
@NM00117 DC    CL4' '
@NM00118 DC    CL40'STORAGE ERROR UNCORRECTED (SE)'
SERRORU  DS    CL1
@NM00119 DS    CL9
@NM00120 DC    CL40'STORAGE ERROR CORRECTED (SC)'
SERRORC  DS    CL1
         ORG   LINE18+134
LINE19   DC    CL134'0'
         ORG   LINE19
@NM00121 DS    CL1
@NM00122 DC    X'09'
@NM00123 DC    CL4' '
@NM00124 DC    CL40'STORAGE KEY ERROR UNCORRECTED (KE)'
SKEYERR  DS    CL1
         ORG   LINE19+134
LINE20   DC    CL134'0'
         ORG   LINE20
@NM00125 DS    CL1
@NM00126 DC    X'09'
@NM00127 DC    CL4' '
@NM00128 DC    CL40'--- VALIDITY BITS ---'
         ORG   LINE20+134
LINE21   DC    CL134'0'
         ORG   LINE21
@NM00129 DS    CL1
@NM00130 DC    X'09'
@NM00131 DC    CL4' '
@NM00132 DC    CL40'PSW EMWP VALIDITY (WP)'
PSWEMWP  DS    CL1
@NM00133 DS    CL9
@NM00134 DC    CL40'PSW MASKS AND KEY VALID (MS)'
PSWMASK  DS    CL1
         ORG   LINE21+134
LINE22   DC    CL134'0'
         ORG   LINE22
@NM00135 DS    CL1
@NM00136 DC    X'09'
@NM00137 DC    CL4' '
@NM00138 DC    CL40'PGM MASK AND COND. CODE VALID (PM)'
PSWCODE  DS    CL1
@NM00139 DS    CL9
@NM00140 DC    CL40'INSTRUCTION ADDRESS VALID (IA)'
INSTADD  DS    CL1
         ORG   LINE22+134
LINE23   DC    CL134'0'
         ORG   LINE23
@NM00141 DS    CL1
@NM00142 DC    X'09'
@NM00143 DC    CL4' '
@NM00144 DC    CL40'FAILING STORAGE ADDRESS VALID (FA)'
FAILADD  DS    CL1
@NM00145 DS    CL9
@NM00146 DC    CL40'REGION CODE VALID (RC)'
RGNCODE  DS    CL1
         ORG   LINE23+134
LINE24   DC    CL134'0'
         ORG   LINE24
@NM00147 DS    CL1
@NM00148 DC    X'09'
@NM00149 DC    CL4' '
@NM00150 DC    CL40'FP REGS STORED ARE VALID (FP)'
FPREGS   DS    CL1
@NM00151 DS    CL9
@NM00152 DC    CL40'GP REGS STORED ARE VALID (GP)'
GPREGS   DS    CL1
         ORG   LINE24+134
LINE25   DC    CL134'0'
         ORG   LINE25
@NM00153 DS    CL1
@NM00154 DC    X'09'
@NM00155 DC    CL4' '
@NM00156 DC    CL40'CONTROL REGS STORED ARE VALID (CR)'
CREGS    DS    CL1
@NM00157 DS    CL9
@NM00158 DC    CL40'EXTENDED LOGOUT AREA VALID (LG)'
ELOGOUT  DS    CL1
         ORG   LINE25+134
LINE26   DC    CL134'0'
         ORG   LINE26
@NM00159 DS    CL1
@NM00160 DC    X'09'
@NM00161 DC    CL4' '
@NM00162 DC    CL40'STORAGE LOGICAL VALID (ST)'
STLOG    DS    CL1
@NM00163 DS    CL9
@NM00164 DC    CL40'EXT DAMAGE CODE VALID'
EDAMCOD  DS    CL1
         ORG   LINE26+134
LINE26A  DC    CL134'0'
         ORG   LINE26A
@NM00165 DS    CL1
@NM00166 DC    X'09'
@NM00167 DC    CL32' '
@NM00168 DC    CL28'--- LRB MAY NOT BE VALID'
INVLRB   DS    CL1
@NM00169 DC    CL4' ---'
         ORG   LINE26A+134
LINE27   DC    CL134'0'
         ORG   LINE27
@NM00170 DS    CL1
@NM00171 DC    X'09'
@NM00172 DC    CL4' '
@NM00173 DC    CL36'EXTENDED LOGOUT LENGTH'
ELOGLEN  DS    CL5
         ORG   LINE27+134
LINE28A  DC    CL134'0'
         ORG   LINE28A
@NM00174 DS    CL1
@NM00175 DC    X'09'
@NM00176 DC    CL36'MC STATUS FIELD'
@NM00177 DS    CL3
         ORG   @NM00177+0
MCSTAT   DS    CL2
@NM00178 DS    CL1
         ORG   LINE28A+134
LINE28C  DC    CL134'0'
         ORG   LINE28C
@NM00179 DS    CL1
@NM00180 DC    X'09'
@NM00181 DC    CL30' '
@NM00182 DC    CL36'EXTERNAL DAMAGE CODE'
         ORG   LINE28C+134
LINE28D  DC    CL134'0'
         ORG   LINE28D
@NM00183 DS    CL1
@NM00184 DC    X'09'
@NM00185 DC    CL4' '
@NM00186 DC    CL40'RESERVED'
RESV     DS    CL1
@NM00187 DS    CL9
@NM00188 DC    CL40'CHANNEL CNTL FAILURE'
MCCF     DS    CL1
         ORG   LINE28D+134
LINE28E  DC    CL134'0'
         ORG   LINE28E
@NM00189 DS    CL1
@NM00190 DC    X'09'
@NM00191 DC    CL4' '
@NM00192 DC    CL40'CHANNEL OPERATIONAL'
MCOPR    DS    CL1
@NM00193 DS    CL9
@NM00194 DC    CL40'I/O INSTRUCTION TIMEOUT'
MINST    DS    CL1
         ORG   LINE28E+134
LINE28F  DC    CL134'0'
         ORG   LINE28F
@NM00195 DS    CL1
@NM00196 DC    X'09'
@NM00197 DC    CL4' '
@NM00198 DC    CL40'EXT SECONDARY REPORT'
MEXSR    DS    CL1
@NM00199 DS    CL9
@NM00200 DC    CL40'I/O INTERRUPTION TIMEOUT'
MINTR    DS    CL1
         ORG   LINE28F+134
LINE28G  DC    CL134'0'
         ORG   LINE28G
@NM00201 DS    CL1
@NM00202 DC    X'09'
@NM00203 DC    CL4' '
@NM00204 DC    CL40'CHANNEL NOT OPERATIONAL'
MCNOP    DS    CL1
@NM00205 DS    CL9
@NM00206 DC    CL40'DISCOUNT CHANNEL SET FAILURE'
MDISC    DS    CL1
         ORG   LINE28G+134
LINE28B  DC    CL134'0'
         ORG   LINE28B
@NM00207 DS    CL1
@NM00208 DC    X'09'
@NM00209 DC    CL30' '
@NM00210 DC    CL36'STATUS LOG'
         ORG   LINE28B+134
LINE29   DC    CL134'0'
         ORG   LINE29
@NM00211 DS    CL1
@NM00212 DC    X'09'
@NM00213 DC    CL9' '
@NM00214 DC    CL18'MK INTRPT CODE'
@NM00215 DS    CL3
         ORG   @NM00215+0
MKINT    DS    CL2
@NM00216 DS    CL1
         ORG   LINE29+134
LINE36   DC    CL134'0'
         ORG   LINE36
@NM00217 DS    CL1
@NM00218 DC    X'09'
@NM00219 DC    CL30' '
@NM00220 DC    CL30'FPRS - GPRS'
         ORG   LINE36+134
LINE37   DC    CL134'0'
         ORG   LINE37
@NM00221 DS    CL1
@NM00222 DC    X'09'
@NM00223 DC    CL6' '
@NM00224 DC    CL5'FPR0'
@NM00225 DS    CL3
         ORG   @NM00225+0
FPR0     DS    CL2
@NM00226 DS    CL1
         ORG   LINE37+37
@NM00227 DS    CL7
@NM00228 DC    CL5'FPR2'
@NM00229 DS    CL3
         ORG   @NM00229+0
FPR2     DS    CL2
@NM00230 DS    CL1
         ORG   LINE37+134
LINE38   DC    CL134'0'
         ORG   LINE38
@NM00231 DS    CL1
@NM00232 DC    X'09'
@NM00233 DC    CL6' '
@NM00234 DC    CL5'FPR4'
@NM00235 DS    CL3
         ORG   @NM00235+0
FPR4     DS    CL2
@NM00236 DS    CL1
         ORG   LINE38+37
@NM00237 DS    CL7
@NM00238 DC    CL5'FPR6'
@NM00239 DS    CL3
         ORG   @NM00239+0
FPR6     DS    CL2
@NM00240 DS    CL1
         ORG   LINE38+134
LINE39   DC    CL134'0'
         ORG   LINE39
@NM00241 DS    CL1
@NM00242 DC    X'09'
@NM00243 DC    CL3' '
@NM00244 DC    CL5'GPR0'
@NM00245 DS    CL3
         ORG   @NM00245+0
GPR0     DS    CL2
@NM00246 DS    CL1
         ORG   LINE39+22
@NM00247 DS    CL1
@NM00248 DC    CL5'GPR1'
@NM00249 DS    CL3
         ORG   @NM00249+0
GPR1     DS    CL2
@NM00250 DS    CL1
         ORG   LINE39+40
@NM00251 DC    CL5'GPR2'
@NM00252 DS    CL3
         ORG   @NM00252+0
GPR2     DS    CL2
@NM00253 DS    CL1
         ORG   LINE39+57
@NM00254 DS    CL1
@NM00255 DC    CL5'GPR3'
@NM00256 DS    CL3
         ORG   @NM00256+0
GPR3     DS    CL2
@NM00257 DS    CL1
         ORG   LINE39+134
LINE40   DC    CL134'0'
         ORG   LINE40
@NM00258 DS    CL1
@NM00259 DC    X'09'
@NM00260 DC    CL3' '
@NM00261 DC    CL5'GPR4'
@NM00262 DS    CL3
         ORG   @NM00262+0
GPR4     DS    CL2
@NM00263 DS    CL1
         ORG   LINE40+22
@NM00264 DS    CL1
@NM00265 DC    CL5'GPR5'
@NM00266 DS    CL3
         ORG   @NM00266+0
GPR5     DS    CL2
@NM00267 DS    CL1
         ORG   LINE40+40
@NM00268 DC    CL5'GPR6'
@NM00269 DS    CL3
         ORG   @NM00269+0
GPR6     DS    CL2
@NM00270 DS    CL1
         ORG   LINE40+57
@NM00271 DS    CL1
@NM00272 DC    CL5'GPR7'
@NM00273 DS    CL3
         ORG   @NM00273+0
GPR7     DS    CL2
@NM00274 DS    CL1
         ORG   LINE40+134
LINE41   DC    CL134'0'
         ORG   LINE41
@NM00275 DS    CL1
@NM00276 DC    X'09'
@NM00277 DC    CL3' '
@NM00278 DC    CL5'GPR8'
@NM00279 DS    CL3
         ORG   @NM00279+0
GPR8     DS    CL2
@NM00280 DS    CL1
         ORG   LINE41+22
@NM00281 DS    CL1
@NM00282 DC    CL5'GPR9'
@NM00283 DS    CL3
         ORG   @NM00283+0
GPR9     DS    CL2
@NM00284 DS    CL1
         ORG   LINE41+40
@NM00285 DC    CL5'GPRA'
@NM00286 DS    CL3
         ORG   @NM00286+0
GPRA     DS    CL2
@NM00287 DS    CL1
         ORG   LINE41+57
@NM00288 DS    CL1
@NM00289 DC    CL5'GPRB'
@NM00290 DS    CL3
         ORG   @NM00290+0
GPRB     DS    CL2
@NM00291 DS    CL1
         ORG   LINE41+134
LINE42   DC    CL134'0'
         ORG   LINE42
@NM00292 DS    CL1
@NM00293 DC    X'09'
@NM00294 DC    CL3' '
@NM00295 DC    CL5'GPRC'
@NM00296 DS    CL3
         ORG   @NM00296+0
GPRC     DS    CL2
@NM00297 DS    CL1
         ORG   LINE42+22
@NM00298 DS    CL1
@NM00299 DC    CL5'GPRD'
@NM00300 DS    CL3
         ORG   @NM00300+0
GPRD     DS    CL2
@NM00301 DS    CL1
         ORG   LINE42+40
@NM00302 DC    CL5'GPRE'
@NM00303 DS    CL3
         ORG   @NM00303+0
GPRE     DS    CL2
@NM00304 DS    CL1
         ORG   LINE42+57
@NM00305 DS    CL1
@NM00306 DC    CL5'GPRF'
@NM00307 DS    CL3
         ORG   @NM00307+0
GPRF     DS    CL2
@NM00308 DS    CL1
         ORG   LINE42+134
LINE43   DC    CL134'0'
         ORG   LINE43
@NM00309 DS    CL1
@NM00310 DC    X'09'
@NM00311 DC    CL30' '
@NM00312 DC    CL30'CONTROL REGS'
         ORG   LINE43+134
LINE44   DC    CL134'0'
         ORG   LINE44
@NM00313 DS    CL1
@NM00314 DC    X'09'
@NM00315 DC    CL3' '
@NM00316 DC    CL5'ECR0'
@NM00317 DS    CL3
         ORG   @NM00317+0
ECR0     DS    CL2
@NM00318 DS    CL1
         ORG   LINE44+22
@NM00319 DS    CL1
@NM00320 DC    CL5'ECR1'
@NM00321 DS    CL3
         ORG   @NM00321+0
ECR1     DS    CL2
@NM00322 DS    CL1
         ORG   LINE44+40
@NM00323 DC    CL5'ECR2'
@NM00324 DS    CL3
         ORG   @NM00324+0
ECR2     DS    CL2
@NM00325 DS    CL1
         ORG   LINE44+57
@NM00326 DS    CL1
@NM00327 DC    CL5'ECR3'
@NM00328 DS    CL3
         ORG   @NM00328+0
ECR3     DS    CL2
@NM00329 DS    CL1
         ORG   LINE44+134
LINE45   DC    CL134'0'
         ORG   LINE45
@NM00330 DS    CL1
@NM00331 DC    X'09'
@NM00332 DC    CL3' '
@NM00333 DC    CL5'ECR4'
@NM00334 DS    CL3
         ORG   @NM00334+0
ECR4     DS    CL2
@NM00335 DS    CL1
         ORG   LINE45+22
@NM00336 DS    CL1
@NM00337 DC    CL5'ECR5'
@NM00338 DS    CL3
         ORG   @NM00338+0
ECR5     DS    CL2
@NM00339 DS    CL1
         ORG   LINE45+40
@NM00340 DC    CL5'ECR6'
@NM00341 DS    CL3
         ORG   @NM00341+0
ECR6     DS    CL2
@NM00342 DS    CL1
         ORG   LINE45+57
@NM00343 DS    CL1
@NM00344 DC    CL5'ECR7'
@NM00345 DS    CL3
         ORG   @NM00345+0
ECR7     DS    CL2
@NM00346 DS    CL1
         ORG   LINE45+134
LINE46   DC    CL134'0'
         ORG   LINE46
@NM00347 DS    CL1
@NM00348 DC    X'09'
@NM00349 DC    CL3' '
@NM00350 DC    CL5'ECR8'
@NM00351 DS    CL3
         ORG   @NM00351+0
ECR8     DS    CL2
@NM00352 DS    CL1
         ORG   LINE46+22
@NM00353 DS    CL1
@NM00354 DC    CL5'ECR9'
@NM00355 DS    CL3
         ORG   @NM00355+0
ECR9     DS    CL2
@NM00356 DS    CL1
         ORG   LINE46+40
@NM00357 DC    CL5'ECRA'
@NM00358 DS    CL3
         ORG   @NM00358+0
ECRA     DS    CL2
@NM00359 DS    CL1
         ORG   LINE46+57
@NM00360 DS    CL1
@NM00361 DC    CL5'ECRB'
@NM00362 DS    CL3
         ORG   @NM00362+0
ECRB     DS    CL2
@NM00363 DS    CL1
         ORG   LINE46+134
LINE47   DC    CL134'0'
         ORG   LINE47
@NM00364 DS    CL1
@NM00365 DC    X'09'
@NM00366 DC    CL3' '
@NM00367 DC    CL5'ECRC'
@NM00368 DS    CL3
         ORG   @NM00368+0
ECRC     DS    CL2
@NM00369 DS    CL1
         ORG   LINE47+22
@NM00370 DS    CL1
@NM00371 DC    CL5'ECRD'
@NM00372 DS    CL3
         ORG   @NM00372+0
ECRD     DS    CL2
@NM00373 DS    CL1
         ORG   LINE47+40
@NM00374 DC    CL5'ECRE'
@NM00375 DS    CL3
         ORG   @NM00375+0
ECRE     DS    CL2
@NM00376 DS    CL1
         ORG   LINE47+57
@NM00377 DS    CL1
@NM00378 DC    CL5'ECRF'
@NM00379 DS    CL3
         ORG   @NM00379+0
ECRF     DS    CL2
@NM00380 DS    CL1
         ORG   LINE47+134
BLIN1    DC    CL134'0'
         ORG   BLIN1
@NM00381 DS    CL1
@NM00382 DC    X'09'
@NM00383 DS    CL51
@NM00384 DC    CL30'MACHINE-CHECK-ERROR INDICATORS'
         ORG   BLIN1+134
BLIN2    DC    CL134'0'
         ORG   BLIN2
@NM00385 DS    CL1
@NM00386 DC    X'09'
@NM00387 DC    CL31'TERMINAL ERROR FLAGS'
@NM00388 DC    CL31'HARD-MACHINE ERROR FLAGS'
@NM00389 DC    CL31'INTERMEDIATE ERROR'
@NM00390 DC    CL31'SOFT-MACHINE ERROR FLAGS'
         ORG   BLIN2+134
BLIN3    DC    CL134'0'
         ORG   BLIN3
@NM00391 DS    CL1
@NM00392 DC    X'09'
@NM00393 DC    CL25'RESERVED'
BLIN3P1  DS    CL1
@NM00394 DS    CL5
@NM00395 DC    CL25'ASSUMED HD ERR FLG'
BLIN3P2  DS    CL1
@NM00396 DS    CL5
@NM00397 DC    CL25'RESERVED'
BLIN3P3  DS    CL1
@NM00398 DS    CL5
@NM00399 DC    CL25'ASSUMED SOFT ERROR'
BLIN3P4  DS    CL1
         ORG   BLIN3+134
BLIN4    DC    CL134'0'
         ORG   BLIN4
@NM00400 DS    CL1
@NM00401 DC    X'09'
@NM00402 DC    CL25'RESERVED'
BLIN4P1  DS    CL1
@NM00403 DS    CL5
@NM00404 DC    CL25'RESERVED'
BLIN4P2  DS    CL1
@NM00405 DS    CL5
@NM00406 DC    CL25'RESERVED'
BLIN4P3  DS    CL1
@NM00407 DS    CL5
@NM00408 DC    CL25'RESERVED'
BLIN4P4  DS    CL1
         ORG   BLIN4+134
BLIN5    DC    CL134'0'
         ORG   BLIN5
@NM00409 DS    CL1
@NM00410 DC    X'09'
@NM00411 DC    CL25'RESERVED'
BLIN5P1  DS    CL1
@NM00412 DS    CL5
@NM00413 DC    CL25'RESERVED'
BLIN5P2  DS    CL1
@NM00414 DS    CL5
@NM00415 DC    CL25'RESERVED'
BLIN5P3  DS    CL1
@NM00416 DS    CL5
@NM00417 DC    CL25'RESERVED'
BLIN5P4  DS    CL1
         ORG   BLIN5+134
BLIN6    DC    CL134'0'
         ORG   BLIN6
@NM00418 DS    CL1
@NM00419 DC    X'09'
@NM00420 DC    CL25'SECONDARY ERROR FLAG'
BLIN6P1  DS    CL1
@NM00421 DS    CL5
@NM00422 DC    CL25'RESERVED'
BLIN6P2  DS    CL1
@NM00423 DS    CL5
@NM00424 DC    CL25'RESERVED'
BLIN6P3  DS    CL1
@NM00425 DS    CL5
@NM00426 DC    CL25'RESERVED'
BLIN6P4  DS    CL1
         ORG   BLIN6+134
BLIN7    DC    CL134'0'
         ORG   BLIN7
@NM00427 DS    CL1
@NM00428 DC    X'09'
@NM00429 DC    CL25'CHECK STOP FLAG'
BLIN7P1  DS    CL1
@NM00430 DS    CL5
@NM00431 DC    CL25'REG/BW INVALID FLAG'
BLIN7P2  DS    CL1
@NM00432 DS    CL5
@NM00433 DC    CL25'TOD CLOCK ERROR FLAG'
BLIN7P3  DS    CL1
@NM00434 DS    CL5
@NM00435 DC    CL25'EXT DAMAGE FLAG'
BLIN7P4  DS    CL1
         ORG   BLIN7+134
BLIN8    DC    CL134'0'
         ORG   BLIN8
@NM00436 DS    CL1
@NM00437 DC    X'09'
@NM00438 DC    CL25'POWER WARNING FLAG'
BLIN8P1  DS    CL1
@NM00439 DS    CL5
@NM00440 DC    CL25'HARD STOR. ERR. FLAG'
BLIN8P2  DS    CL1
@NM00441 DS    CL5
@NM00442 DC    CL25'CLOCK COMP ERR. FLAG'
BLIN8P3  DS    CL1
@NM00443 DS    CL5
@NM00444 DC    CL25'ECC CORR. STOR. ERR. FLAG'
BLIN8P4  DS    CL1
         ORG   BLIN8+134
BLIN9    DC    CL134'0'
         ORG   BLIN9
@NM00445 DS    CL1
@NM00446 DC    X'09'
@NM00447 DC    CL25'SYS DAMAGE FLAG'
BLIN9P1  DS    CL1
@NM00448 DS    CL5
@NM00449 DC    CL25'HARD PROTECT. KEY ERR'
BLIN9P2  DS    CL1
@NM00450 DS    CL5
@NM00451 DC    CL25'CPU TIMER ERR. FLAG'
BLIN9P3  DS    CL1
@NM00452 DS    CL5
@NM00453 DC    CL25'HIR CORR PROC. ERR FLG'
BLIN9P4  DS    CL1
         ORG   BLIN9+134
BLIN10   DC    CL134'0'
         ORG   BLIN10
@NM00454 DS    CL1
@NM00455 DC    X'09'
@NM00456 DC    CL25'INVALID LOGOUT FLAG'
BLIN10P1 DS    CL1
@NM00457 DS    CL5
@NM00458 DC    CL25'INST. PROC. DAMAGE FLAG'
BLIN10P2 DS    CL1
@NM00459 DS    CL5
@NM00460 DC    CL25'INTERVAL TIMER ERR. FLAG'
BLIN10P3 DS    CL1
@NM00461 DS    CL5
@NM00462 DC    CL25'BUFFER ERR. FLAG'
BLIN10P4 DS    CL1
         ORG   BLIN10+134
BLIN11A  DC    CL134'0'
         ORG   BLIN11A
@NM00463 DS    CL1
@NM00464 DC    X'09'
@NM00465 DS    CL29
@NM00466 DC    CL50'PROGRAM DAMAGE ASSESSMENT AND REPAIR'
         ORG   BLIN11A+134
BLIN11   DC    CL134'0'
         ORG   BLIN11
@NM00467 DS    CL1
@NM00468 DC    X'09'
@NM00469 DC    CL35'PDAR DATA'
@NM00470 DC    CL35'STOR. RECONFIG.STATUS'
@NM00471 DC    CL35'STORAGE RECONFIG. STATUS'
         ORG   BLIN11+134
BLIN12   DC    CL134'0'
         ORG   BLIN12
@NM00472 DS    CL1
@NM00473 DC    X'09'
@NM00474 DC    CL29'RESERVED'
BLIN12P1 DS    CL1
@NM00475 DS    CL5
@NM00476 DC    CL29'RESERVED'
BLIN12P2 DS    CL1
@NM00477 DS    CL5
@NM00478 DC    CL29'FR OFF LN/SCHED OFF LN'
BLIN12P3 DS    CL1
         ORG   BLIN12+134
BLIN13   DC    CL134'0'
         ORG   BLIN13
@NM00479 DS    CL1
@NM00480 DC    X'09'
@NM00481 DC    CL29'RESERVED'
BLIN13P1 DS    CL1
@NM00482 DS    CL5
@NM00483 DC    CL29'RESERVED'
BLIN13P2 DS    CL1
@NM00484 DS    CL5
@NM00485 DC    CL29'INTERCEPT'
BLIN13P3 DS    CL1
         ORG   BLIN13+134
BLIN14   DC    CL134'0'
         ORG   BLIN14
@NM00486 DS    CL1
@NM00487 DC    X'09'
@NM00488 DC    CL29'RESERVED'
BLIN14P1 DS    CL1
@NM00489 DS    CL5
@NM00490 DC    CL29'RESERVED'
BLIN14P2 DS    CL1
@NM00491 DS    CL5
@NM00492 DC    CL29'PERM. ERR. IN FRAME'
BLIN14P3 DS    CL1
         ORG   BLIN14+134
BLIN15   DC    CL134'0'
         ORG   BLIN15
@NM00493 DS    CL1
@NM00494 DC    X'09'
@NM00495 DC    CL29'STORAGE RECONFIG.'
BLIN15P1 DS    CL1
@NM00496 DS    CL5
@NM00497 DC    CL29'RESERVED'
BLIN15P2 DS    CL1
@NM00498 DS    CL5
@NM00499 DC    CL29'FRAME-PERM. RES. SYS.'
BLIN15P3 DS    CL1
         ORG   BLIN15+134
BLIN16   DC    CL134'0'
         ORG   BLIN16
@NM00500 DS    CL1
@NM00501 DC    X'09'
@NM00502 DC    CL29'STOR. REFIG. STST AVAIL.'
BLIN16P1 DS    CL1
@NM00503 DS    CL5
@NM00504 DC    CL29'RESERVED'
BLIN16P2 DS    CL1
@NM00505 DS    CL5
@NM00506 DC    CL29'FRAME USE SQA'
BLIN16P3 DS    CL1
         ORG   BLIN16+134
BLIN17   DC    CL134'0'
         ORG   BLIN17
@NM00507 DS    CL1
@NM00508 DC    X'09'
@NM00509 DC    CL29'STOR. REFIG. NOT ATTEMP.'
BLIN17P1 DS    CL1
@NM00510 DS    CL5
@NM00511 DC    CL29'RESERVED'
BLIN17P2 DS    CL1
@NM00512 DS    CL5
@NM00513 DC    CL29'FRAME USE LSQA'
BLIN17P3 DS    CL1
         ORG   BLIN17+134
BLIN18   DC    CL134'0'
         ORG   BLIN18
@NM00514 DS    CL1
@NM00515 DC    X'09'
@NM00516 DC    CL29'RESERVED'
BLIN18P1 DS    CL1
@NM00517 DS    CL5
@NM00518 DC    CL29'STOR ERR SET IN FRAME'
BLIN18P2 DS    CL1
@NM00519 DS    CL5
@NM00520 DC    CL29'FRAME-FIXED PG DATA'
BLIN18P3 DS    CL1
         ORG   BLIN18+134
BLIN19   DC    CL134'0'
         ORG   BLIN19
@NM00521 DS    CL1
@NM00522 DC    X'09'
@NM00523 DC    CL29'RESERVED'
BLIN19P1 DS    CL1
@NM00524 DS    CL5
@NM00525 DC    CL29'FRAME-CHG IND. ON'
BLIN19P2 DS    CL1
@NM00526 DS    CL5
@NM00527 DC    CL29'FRAME-IS V=R OR SCHED.'
BLIN19P3 DS    CL1
         ORG   BLIN19+134
BLIN20   DC    CL134'0'
         ORG   BLIN20
@NM00528 DS    CL1
@NM00529 DC    X'09'
@NM00530 DC    CL24'PHYSICAL WORD LENGTH'
BLIN20P1 DS    CL5
         ORG   BLIN20+134
WORK     DS    CL50
DBLWORD  DS    CL8
SWITCH1  DS    BL1
SUPERZAP DC    3CL10'SUPERZAP'
CHARS    DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
IFCFRAMM CSECT
         DC    S(SUPERZAP)
IFCFRAMM CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
L        EQU   @03
MYLINCT  EQU   @03
R2       EQU   @02
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R15      EQU   @15
R0       EQU   @00
R1       EQU   @01
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
IOHND    EQU   0
PARM     EQU   0
RECTYPE  EQU   PARM
SWITCHES EQU   PARM+2
DEBUG    EQU   PARM+4
DEBUGA   EQU   PARM+8
MISC     EQU   PARM+12
PRINTES  EQU   MISC
OPENCLSE EQU   PARM+13
OPENIO   EQU   OPENCLSE
CLOSEIO  EQU   OPENCLSE+2
DATENOW  EQU   PARM+17
STDT     EQU   PARM+23
STDATE   EQU   STDT
PSTD     EQU   STDATE+1
ENDDT    EQU   PARM+31
ENDDATE  EQU   ENDDT
PEND     EQU   ENDDATE+1
STTIME1  EQU   PARM+39
ENDTIME1 EQU   PARM+43
STTIME2  EQU   PARM+47
ENDTIME2 EQU   PARM+51
STRTDATE EQU   PARM+55
@NM00006 EQU   PARM+72
@NM00007 EQU   PARM+75
ERRID    EQU   PARM+92
IDTIMEA  EQU   ERRID+6
IDTIME   EQU   IDTIMEA
CCHHRLNG EQU   PARM+112
LINECT   EQU   PARM+120
ADIOHND  EQU   PARM+124
ADIFCMSG EQU   PARM+128
ADEDITB  EQU   PARM+132
EVPTR    EQU   PARM+136
SORTADR  EQU   PARM+140
PRINTADR EQU   PARM+148
CUAPTR   EQU   PARM+152
DEVPTR   EQU   PARM+156
MODPTR   EQU   PARM+160
SERPTR   EQU   PARM+164
VOLPTR   EQU   PARM+168
CPUPTR   EQU   PARM+172
CPCUAPTR EQU   PARM+176
LIBADPTR EQU   PARM+180
SYMCDPTR EQU   PARM+184
SYSUMPTR EQU   PARM+188
TRENPTR  EQU   PARM+192
SHAREPTR EQU   PARM+196
RECLNGT1 EQU   PARM+204
MERDCPTR EQU   PARM+208
DUMPTABL EQU   PARM+228
DUMPINFO EQU   DUMPTABL+4
TRENDONE EQU   0
TREGEN   EQU   TRENDONE+8
TRECCH0  EQU   TREGEN+8
TREND2   EQU   0
TRENDKEY EQU   TREND2
TRENDRT  EQU   TRENDKEY+1
TRENCPUS EQU   TRENDKEY+3
TRENDITM EQU   TRENDKEY+4
EVTABLE  EQU   0
EVSTOP   EQU   EVTABLE
EVKEY    EQU   EVTABLE+6
SORTABLE EQU   0
SORTKEY  EQU   SORTABLE
SORTCCHR EQU   SORTABLE+5
SYSUMONE EQU   0
SYSUM2   EQU   0
SYSUMKEY EQU   SYSUM2
SYSRT    EQU   SYSUMKEY+1
SYSCPUS  EQU   SYSUMKEY+3
SYSITEM  EQU   SYSUMKEY+4
SHARE    EQU   0
SHAREIO  EQU   SHARE+2
SHRBASE  EQU   SHAREIO+1
SHRCUCPU EQU   SHAREIO+8
EDITLOAD EQU   0
EDITABLE EQU   EDITLOAD+4
CUA      EQU   0
CUAVAL   EQU   CUA+2
DEVICE   EQU   0
MODELS   EQU   0
DEVSERAL EQU   0
VOLUME   EQU   0
CPUS     EQU   0
CPUCUAS  EQU   0
CPUCUAV  EQU   CPUCUAS+2
LIBADR   EQU   0
SYMCODE  EQU   0
SYMVAL   EQU   SYMCODE+2
MERIDIAN EQU   0
MCHREC   EQU   0
LRBHTYPE EQU   MCHREC
LRBHSYS  EQU   MCHREC+1
LRBHSYS1 EQU   LRBHSYS
LRBHSYS2 EQU   LRBHSYS
LRBHSYS3 EQU   LRBHSYS
LRBHSW1  EQU   MCHREC+3
LRBMCHST EQU   LRBHSW1
LRBMACT  EQU   MCHREC+4
LRBERRID EQU   LRBMACT
LRBHDATE EQU   MCHREC+8
LRBHTIME EQU   MCHREC+12
LRBHCSER EQU   MCHREC+17
LRBHMDL  EQU   MCHREC+20
LRBPRGID EQU   MCHREC+24
LRBRLEN  EQU   LRBPRGID
LRBWAIT  EQU   LRBPRGID+4
LRBJOBID EQU   MCHREC+32
LRBMTSEC EQU   LRBJOBID
LRBMTCKS EQU   LRBJOBID
LRBMTWRN EQU   LRBJOBID
LRBMTDMG EQU   LRBJOBID
LRBMTINV EQU   LRBJOBID
LRBMHHRD EQU   LRBJOBID+1
LRBMHINV EQU   LRBJOBID+1
LRBMHSTO EQU   LRBJOBID+1
LRBMHSPF EQU   LRBJOBID+1
LRBMHIPD EQU   LRBJOBID+1
LRBMITOD EQU   LRBJOBID+2
LRBMICKC EQU   LRBJOBID+2
LRBMICTM EQU   LRBJOBID+2
LRBMIL80 EQU   LRBJOBID+2
LRBMSSFT EQU   LRBJOBID+3
LRBMSEXD EQU   LRBJOBID+3
LRBMSECC EQU   LRBJOBID+3
LRBMSHIR EQU   LRBJOBID+3
LRBMSBUF EQU   LRBJOBID+3
LRBMINVP EQU   LRBJOBID+4
LRBMRSRC EQU   LRBJOBID+4
LRBMRSRF EQU   LRBJOBID+4
LRBMSER  EQU   LRBJOBID+5
LRBMCHNG EQU   LRBJOBID+5
LRBMOFLN EQU   LRBJOBID+6
LRBMINTC EQU   LRBJOBID+6
LRBMSPER EQU   LRBJOBID+6
LRBMNUCL EQU   LRBJOBID+6
LRBMFSQA EQU   LRBJOBID+6
LRBMLSQA EQU   LRBJOBID+6
LRBMPGFX EQU   LRBJOBID+6
LRBMVEQR EQU   LRBJOBID+6
LRBMPWL  EQU   LRBJOBID+7
LRBMMOSW EQU   MCHREC+40
LRBMCIC  EQU   MCHREC+48
LRBMFSD  EQU   LRBMCIC
LRBMFPD  EQU   LRBMCIC
LRBMFSR  EQU   LRBMCIC
LRBMFTD  EQU   LRBMCIC
LRBMFCD  EQU   LRBMCIC
LRBMFED  EQU   LRBMCIC
LRBMFDG  EQU   LRBMCIC
LRBMFWN  EQU   LRBMCIC+1
LRBMIBU  EQU   LRBMCIC+1
LRBMIDY  EQU   LRBMCIC+1
LRBMFSE  EQU   LRBMCIC+2
LRBMFSC  EQU   LRBMCIC+2
LRBMFKE  EQU   LRBMCIC+2
LRBMVWP  EQU   LRBMCIC+2
LRBMVMS  EQU   LRBMCIC+2
LRBMVPM  EQU   LRBMCIC+2
LRBMVIA  EQU   LRBMCIC+2
LRBMVFA  EQU   LRBMCIC+3
LRBMVRC  EQU   LRBMCIC+3
LRBMVED  EQU   LRBMCIC+3
LRBMVFP  EQU   LRBMCIC+3
LRBMVGR  EQU   LRBMCIC+3
LRBMVCR  EQU   LRBMCIC+3
LRBMVLG  EQU   LRBMCIC+3
LRBMVST  EQU   LRBMCIC+3
LRBMNVF  EQU   LRBMCIC+4
LRBMCELL EQU   LRBMCIC+6
LRBMF1   EQU   MCHREC+56
LRBMEDC  EQU   LRBMF1+4
LRBRESV  EQU   LRBMEDC
LRBMCOPR EQU   LRBMEDC
LRBMEXSR EQU   LRBMEDC
LRBMCNOP EQU   LRBMEDC
LRBMCCF  EQU   LRBMEDC
LRBMINST EQU   LRBMEDC
LRBMINTR EQU   LRBMEDC
LRBMDISC EQU   LRBMEDC
@NM00548 EQU   MCHREC+68
@NM00549 EQU   @NM00548
LRBFPR   EQU   @NM00548+100
LRBGPR   EQU   @NM00548+132
LRBECR   EQU   @NM00548+196
MCHERRID EQU   0
LRBESEQ  EQU   MCHERRID
LRBCPUID EQU   MCHERRID+2
LRBASID  EQU   MCHERRID+4
LRBETIME EQU   MCHERRID+6
IFCMSG   EQU   0
BWORD2   EQU   0
DADDR2   EQU   0
BINWORD  EQU   0
DECADDR  EQU   0
NEXTBYTE EQU   0
ADDNUM   EQU   0
LENNUM   EQU   0
LINENO   EQU   0
TRECCH   EQU   TRECCH0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LRBRETCR EQU   @NM00549+48
LRBECCTR EQU   @NM00549+44
LRBSTAT  EQU   @NM00549+40
LRBEMICM EQU   @NM00549+36
LRBMCRR  EQU   @NM00549+28
LRBMNTLH EQU   @NM00549+20
LRBMCDR  EQU   @NM00549+12
LRBMCAR  EQU   @NM00549+8
@NM00550 EQU   @NM00549
LRBMFSA  EQU   MCHREC+64
@NM00547 EQU   LRBMF1
LRBMVCC  EQU   LRBMCIC+5
LRBMVPT  EQU   LRBMCIC+5
@NM00546 EQU   LRBMCIC+5
@NM00545 EQU   LRBMCIC+4
@NM00544 EQU   LRBMCIC+2
@NM00543 EQU   LRBMCIC+1
@NM00542 EQU   LRBMCIC
@NM00541 EQU   LRBJOBID+5
@NM00540 EQU   LRBJOBID+4
@NM00539 EQU   LRBJOBID+4
@NM00538 EQU   LRBJOBID+3
@NM00537 EQU   LRBJOBID+2
@NM00536 EQU   LRBJOBID+1
@NM00535 EQU   LRBJOBID
LRBHMCEL EQU   MCHREC+22
@NM00534 EQU   MCHREC+16
@NM00533 EQU   MCHREC+7
LRBHCNT  EQU   MCHREC+6
LRBMCLB  EQU   MCHREC+5
@NM00532 EQU   LRBMACT
LRBMCHSY EQU   LRBHSW1
@NM00531 EQU   LRBHSW1
LRBHSW0  EQU   MCHREC+2
MODEL    EQU   MERIDIAN+2
MRDNUMBR EQU   MERIDIAN
SYMVAL2  EQU   SYMVAL+2
SYMVAL1  EQU   SYMVAL
SYMCDNUM EQU   SYMCODE
LIBVAL   EQU   LIBADR+2
LIBADNUM EQU   LIBADR
CPUCUX3  EQU   CPUCUAV+5
CPUCUX2  EQU   CPUCUAV+3
CPUCUX1  EQU   CPUCUAV
CPCUANUM EQU   CPUCUAS
CPUVAL   EQU   CPUS+2
CPUNUM   EQU   CPUS
VOLVAL   EQU   VOLUME+2
VOLNUM   EQU   VOLUME
SERVAL   EQU   DEVSERAL+2
SERNUM   EQU   DEVSERAL
MODVAL   EQU   MODELS+2
MODNUM   EQU   MODELS
MDRVAL   EQU   DEVICE+204
MDRNUM   EQU   DEVICE+202
DEVVAL   EQU   DEVICE+2
DEVNUM   EQU   DEVICE
CUA2     EQU   CUAVAL+2
CUA1     EQU   CUAVAL
CUANUM   EQU   CUA
LOADPTR  EQU   EDITABLE+8
LOADNAME EQU   EDITABLE
EDITNUM  EQU   EDITLOAD
SHARLET  EQU   SHAREIO+15
SHRCUAAH EQU   SHRCUCPU+5
SHRCUAAL EQU   SHRCUCPU+3
SHARSERA EQU   SHRCUCPU
SHRCUABH EQU   SHRBASE+5
SHRCUABL EQU   SHRBASE+3
SHARSERB EQU   SHRBASE
SHAREFLG EQU   SHAREIO
SHARENUM EQU   SHARE
SYSTEMP  EQU   SYSUM2+10
SYSPERM  EQU   SYSUM2+8
SYSRANGE EQU   SYSUM2+7
SYSDEV   EQU   SYSUM2+5
SYSOLDA  EQU   SYSITEM
SYS3705  EQU   SYSITEM
SYSOLD   EQU   SYSCPUS
SYSCPU   EQU   SYSCPUS
SYSTROLL EQU   SYSRT+1
SYSSPAN  EQU   SYSRT+1
SYSCUA   EQU   SYSRT
SYSGROUP EQU   SYSUMKEY
SYSUMEOD EQU   SYSUMONE+96
SYSUMPER EQU   SYSUMONE+92
SYSUMPEA EQU   SYSUMONE+88
SYSUMPEI EQU   SYSUMONE+84
SYSUMCH  EQU   SYSUMONE+20
SYSUMMCN EQU   SYSUMONE+16
SYSUMMCR EQU   SYSUMONE+12
SYSUMNXT EQU   SYSUMONE+8
SYSUMIPL EQU   SYSUMONE+4
SYSUMNUM EQU   SYSUMONE
SORTCORE EQU   SORTCCHR
SORTTIME EQU   SORTKEY+1
SORTYEAR EQU   SORTKEY
EVLETTER EQU   EVKEY+5
EVSERIAL EQU   EVKEY+2
EVMODEL  EQU   EVKEY
EVNUM    EQU   EVTABLE+4
EVDAY    EQU   EVSTOP+1
EVYEAR   EQU   EVSTOP
TRETMP   EQU   TREND2+10
TREPRM   EQU   TREND2+8
TRENDDEV EQU   TREND2+6
TRENDDAT EQU   TRENDKEY+5
TRENDOD  EQU   TRENDITM
TREND037 EQU   TRENDITM
TRENDOLD EQU   TRENCPUS
TRENDCPU EQU   TRENCPUS
@NM00011 EQU   TRENDRT+1
TRENDCUA EQU   TRENDRT
TRENDGRP EQU   TRENDKEY
TREPRE   EQU   TREGEN+72
TRECCHF  EQU   TREGEN+68
TRECCHE  EQU   TREGEN+64
TRECCHD  EQU   TREGEN+60
TRECCHC  EQU   TREGEN+56
TRECCHB  EQU   TREGEN+52
TRECCHA  EQU   TREGEN+48
TRECCH9  EQU   TREGEN+44
TRECCH8  EQU   TREGEN+40
TRECCH7  EQU   TREGEN+36
TRECCH6  EQU   TREGEN+32
TRECCH5  EQU   TREGEN+28
TRECCH4  EQU   TREGEN+24
TRECCH3  EQU   TREGEN+20
TRECCH2  EQU   TREGEN+16
TRECCH1  EQU   TREGEN+12
TREMCH   EQU   TREGEN+4
TREIPL   EQU   TREGEN
TRENUM   EQU   TRENDONE+4
TRENEXT  EQU   TRENDONE
DUMPSIZE EQU   DUMPINFO+4
DUMPADR  EQU   DUMPINFO
DUMPNUM  EQU   DUMPTABL
@NM00010 EQU   PARM+212
FRAMEPTR EQU   PARM+200
ADCPUT   EQU   PARM+144
RECLNGTH EQU   CCHHRLNG+6
@NM00009 EQU   CCHHRLNG+5
RECCCHHR EQU   CCHHRLNG
USERPGM  EQU   PARM+102
IDTSEC   EQU   IDTIME+3
IDSEC    EQU   IDTIME+2
IDMIN    EQU   IDTIME+1
IDHOUR   EQU   IDTIME
IDASID   EQU   ERRID+4
IDCPU    EQU   ERRID+3
@NM00008 EQU   ERRID+2
IDVALUE  EQU   ERRID
NUMDAYS  EQU   PARM+88
SORTNUM  EQU   PARM+84
TABSIZE  EQU   PARM+80
SYSRETRN EQU   @NM00007
NUMIN222 EQU   @NM00006
WRTHRSH  EQU   PARM+69
RDTHRSH  EQU   PARM+66
TERM     EQU   PARM+58
EVSDAY   EQU   STRTDATE+1
EVSYEAR  EQU   STRTDATE
PENSEC2  EQU   ENDTIME2+2
PENMIN2  EQU   ENDTIME2+1
PENHOUR2 EQU   ENDTIME2
PSTSEC2  EQU   STTIME2+2
PSTMIN2  EQU   STTIME2+1
PSTHOUR2 EQU   STTIME2
PENSEC1  EQU   ENDTIME1+2
PENMIN1  EQU   ENDTIME1+1
PENHOUR1 EQU   ENDTIME1
PSTSEC1  EQU   STTIME1+2
PSTMIN1  EQU   STTIME1+1
PSTHOUR1 EQU   STTIME1
@NM00005 EQU   ENDDT+4
PENDY    EQU   PEND+1
PENYR    EQU   PEND
@NM00004 EQU   ENDDATE
@NM00003 EQU   STDT+4
PSTDY    EQU   PSTD+1
PSTYR    EQU   PSTD
@NM00002 EQU   STDATE
YEARNOW  EQU   DATENOW+4
@NM00001 EQU   DATENOW+3
DAYNOW   EQU   DATENOW
CSNAP    EQU   CLOSEIO
CDRCTWRK EQU   CLOSEIO
CSYSIN   EQU   CLOSEIO
CACCDEV  EQU   CLOSEIO
CACCIN   EQU   CLOSEIO
CSERLOG  EQU   CLOSEIO
CEREPPT  EQU   CLOSEIO
CTOURIST EQU   CLOSEIO
OSNAP    EQU   OPENIO
ODRCTWRK EQU   OPENIO
OSYSIN   EQU   OPENIO
OACCDEV  EQU   OPENIO
OACCIN   EQU   OPENIO
OSERLOG  EQU   OPENIO
OEREPPT  EQU   OPENIO
OTOURIST EQU   OPENIO
PASSFLAG EQU   MISC
PLOGREC  EQU   MISC
ERRORID  EQU   MISC
PSUM     EQU   PRINTES
PEDIT    EQU   PRINTES
PHIST    EQU   MISC
PACC     EQU   MISC
PZERO    EQU   MISC
DEBUG63  EQU   DEBUGA+3
DEBUG62  EQU   DEBUGA+3
DEBUG61  EQU   DEBUGA+3
DEBUG60  EQU   DEBUGA+3
DEBUG59  EQU   DEBUGA+3
DEBUG58  EQU   DEBUGA+3
DEBUG57  EQU   DEBUGA+3
DEBUG56  EQU   DEBUGA+3
DEBUG55  EQU   DEBUGA+2
DEBUG54  EQU   DEBUGA+2
DEBUG53  EQU   DEBUGA+2
DEBUG52  EQU   DEBUGA+2
DEBUG51  EQU   DEBUGA+2
DEBUG50  EQU   DEBUGA+2
DEBUG49  EQU   DEBUGA+2
DEBUG48  EQU   DEBUGA+2
DEBUG47  EQU   DEBUGA+1
DEBUG46  EQU   DEBUGA+1
DEBUG45  EQU   DEBUGA+1
DEBUG44  EQU   DEBUGA+1
DEBUG43  EQU   DEBUGA+1
DEBUG42  EQU   DEBUGA+1
DEBUG41  EQU   DEBUGA+1
DEBUG40  EQU   DEBUGA+1
DEBUG39  EQU   DEBUGA
DEBUG38  EQU   DEBUGA
DEBUG37  EQU   DEBUGA
DEBUG36  EQU   DEBUGA
DEBUG35  EQU   DEBUGA
DEBUG34  EQU   DEBUGA
DEBUG33  EQU   DEBUGA
DEBUG32  EQU   DEBUGA
DEBUG31  EQU   DEBUG+3
DEBUG30  EQU   DEBUG+3
DEBUG29  EQU   DEBUG+3
DEBUG28  EQU   DEBUG+3
DEBUG27  EQU   DEBUG+3
DEBUG26  EQU   DEBUG+3
DEBUG25  EQU   DEBUG+3
DEBUG24  EQU   DEBUG+3
DEBUG23  EQU   DEBUG+2
DEBUG22  EQU   DEBUG+2
DEBUG21  EQU   DEBUG+2
DEBUG20  EQU   DEBUG+2
DEBUG19  EQU   DEBUG+2
DEBUG18  EQU   DEBUG+2
DEBUG17  EQU   DEBUG+2
DEBUG16  EQU   DEBUG+2
DEBUG15  EQU   DEBUG+1
DEBUG14  EQU   DEBUG+1
DEBUG13  EQU   DEBUG+1
DEBUG12  EQU   DEBUG+1
DEBUG11  EQU   DEBUG+1
DEBUG10  EQU   DEBUG+1
DEBUG9   EQU   DEBUG+1
DEBUG8   EQU   DEBUG+1
DEBUG7   EQU   DEBUG
DEBUG6   EQU   DEBUG
DEBUG5   EQU   DEBUG
DEBUG4   EQU   DEBUG
DEBUG3   EQU   DEBUG
DEBUG2   EQU   DEBUG
DEBUG1   EQU   DEBUG
DEBUG0   EQU   DEBUG
SORTBRK  EQU   SWITCHES+1
COREFAIL EQU   SWITCHES+1
ANALYSIS EQU   SWITCHES+1
SHIFT3RD EQU   SWITCHES+1
DEVEXCL  EQU   SWITCHES+1
ZEROALL  EQU   SWITCHES+1
NOTALL   EQU   SWITCHES+1
NOSDR    EQU   SWITCHES
TIMESEQ  EQU   SWITCHES
SYSUM    EQU   SWITCHES
PARMTHR  EQU   SWITCHES
TREND    EQU   SWITCHES
SHORTOBR EQU   SWITCHES
PARMMES  EQU   SWITCHES
RDESUM   EQU   SWITCHES
PCCHFRAM EQU   RECTYPE+1
PMCHFRAM EQU   RECTYPE+1
PTTYP    EQU   RECTYPE+1
PEOD     EQU   RECTYPE
PMIH     EQU   RECTYPE
PDDR     EQU   RECTYPE
PIPL     EQU   RECTYPE
PSOFT    EQU   RECTYPE
POBR     EQU   RECTYPE
PCHAN    EQU   RECTYPE
PMCH     EQU   RECTYPE
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@PB00006 EQU   @PB00007
@RF00387 EQU   @RC00383
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IFCFRAMM
