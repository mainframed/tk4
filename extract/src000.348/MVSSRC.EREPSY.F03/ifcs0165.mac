       TITLE   'IFCS0165 MODEL 165/168 CPU SUMMARY TABLE'
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(2000)
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         AIF   (&NRENTS EQ 0).NORENTS   TEST FOR NO COUNT
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
.NORENTS ANOP
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
*
         MACRO
         BIN
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         GBLC &ITEM(2000)
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS
         GBLC  &DSECT
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         HEX
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(2000),&DSECT
         GBLA &ITEMNBR,&BITS(2000),&SHIFT(2000),&NRENTS
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
         MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLC &LABELS(2000)
         GBLA  &LBLCTR(100)
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &NDX,&CTR
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR,&INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &NRENTS
         GBLC  &DSECT,&CSECT
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                 ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(2000),&SHIFT(2000)
         GBLC  &ITEM(2000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
         DC    AL1(0)
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         EJECT
         MACRO
         SPECIAL &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         EJECT
         GBLC  &DSECT
         GBLC  &CSECT
&CSECT   SETC  'IFCS0165'
&DSECT   SETC  'INDEPEND'
IFCS0165 CSECT
         USING *,R9
INDEPEND DSECT
         DS    0F
         DSGEN (XKEY,16),(XSWS8,9),(XSWS9,1),(XSWS10,1),(XSWS11,1),    C
               (XSWS12,1),(XSWS13,1),(XSWS14,1),(XSWS15,1)
         DSGEN (XDUM1,32)
         DSGEN (XDATE,32)
         DSGEN (XTIME,32)
         DSGEN (XDUM2,8),(XSER,24)
         DSGEN (XCPUMOD,16),(XDUM3,16)
         DSGEN (XPGMID,64)
         DSGEN (XJOBID,64)
         DSGEN (XMCKPSW,64)
         DSGEN (DUM1,32)                                          P0415
         DSGEN (DUM2,16),(EXTDLOG,16)                             P0415
M165     DS    212F
         DSGEN (A1LB,32)
         DSGEN (A1LC,32)
         DSGEN (A1LD,32)
         DSGEN (A1LE,32)
         DSGEN (A1LF,32)
         DSGEN (A1LG,32)
         DSGEN (A1LH,32)
         DSGEN (A1LJ,32)
A1LK     DSGEN (A1LK00,1),(A1LK01,1),(DUM45,1),(A1LK03,1),(A1LK04,1),  C
               (DUM46,3),(A1LK08,1),(DUM47,1),(A1LK10,1),(DUM48,1),    C
               (A1LK12,1),(DUM49,3),(A1LK16,1),(A1LK17,1),(A1LK18,1),  C
               (DM49,1),(A1LK20,1),(DUM50,3),(A1LK24,1),               C
               (DUM51,1),(A1LK26,1),(DUM52,5)
A1LL     DSGEN (DUM53,11),(A1LL43,1),(DUM54,1),(A1LL45,1),             C
               (DUM55,4),(A1LL50,1),(DM55,13)
         DSGEN (A2LB,32)
         DSGEN (A2LC,32)
         DSGEN (A2LD,32)
         DSGEN (A2LE,32)
         DSGEN (A2LF,32)
         DSGEN (A2LG,32)
         DSGEN (A2LH,32)
         DSGEN (A2LJ,32)
A2LK     DSGEN (DUM56,1),(A2LK01,1),(A2LK02,1),(A2LK03,1),             C
               (A2LK04,1),(A2LK05,1),(DUM57,2),(A2LK08,1),             C
               (A2LK09,1),(DUM58,1),(A2LK11,1),(A2LK12,1),             C
               (A2LK13,1),(DUM59,4),(A2LK18,1),(A2LK19,1),             C
               (A2LK20,1),(A2LK21,1),(DUM60,2),(A2LK24,1),             C
               (A2LK25,1),(A2LK26,1),(A2LK27,1),(DUM61,4)
A2LL     DSGEN (DUM62,2),(A2LL34,1),(DUM63,6),(A2LL41,1),              C
               (DUM64,1),(A2LL43,1),(A2LL44,1),(A2LL45,1),             C
               (DUM65,18)
         DSGEN (A3LB,32)
         DSGEN (A3LC,32)
         DSGEN (A3LD,32)
         DSGEN (A3LE,32)
         DSGEN (A3LF,32)
         DSGEN (A3LG,32)
         DSGEN (A3LH,32)
         DSGEN (A3LJ,32)
         DSGEN (A3LK,32)
         DSGEN (A3LL,32)
         DSGEN (A4LB,32)
         DSGEN (A4LC,32)
         DSGEN (A4LD,32)
         DSGEN (A4LE,32)
         DSGEN (A4LF,32)
         DSGEN (A4LG,32)
         DSGEN (A4LH,32)
         DSGEN (A4LJ,32)
A4LK     DSGEN (DUM66,25),(A4LK25,1),(A4LK26,1),(A4LK27,1),            C
               (A4LK28,1),(DUM67,3)
         DSGEN (A4LL,32)
         DSGEN (A5LB,32)
         DSGEN (A5LC,32)
         DSGEN (A5LD,32)
         DSGEN (A5LE,32)
         DSGEN (A5LF,32)
         DSGEN (A5LG,32)
         DSGEN (A5LH,32)
         DSGEN (A5LJ,32)
A5LK     DSGEN (A5LK00,1),(A5LK01,1),(A5LK02,1),(A5LK03,1),            C
               (A5LK04,1),(A5LK05,1),(DUM68,2),(A5LK08,1),             C
               (A5LK09,1),(A5LK10,1),(A5LK11,1),(A5LK12,1),            C
               (A5LK13,1),(DUM69,2),(A5LK16,1),(DUM70,1),              C
               (A5LK18,1),(A5LK19,1),(A5LK20,1),(A5LK21,1),            C
               (DUM71,2),(A5LK24,1),(A5LK25,1),                        C
               (A5LK26,1),(A5LK27,1),(A5LK28,1),(DUM72,3)
A5LL     DSGEN (A5LL32,1),(A5LL33,1),(A5LL34,1),(A5LL35,1),            C
               (A5LL36,1),(A5LL37,1),(DUM73,2),(A5LL40,1),             C
               (A5LL41,1),(A5LL42,1),(A5LL43,1),(A5LL44,1),            C
               (A5LL45,1),(DUM74,2),(A5LL48,1),(A5LL49,1),             C
               (A5LL50,1),(A5LL51,1),(A5LL52,1),(A5LL53,1),            C
               (DUM75,2),(A5LL56,1),(DUM76,7)
         DSGEN (A6LB,32)
         DSGEN (A6LC,32)
         DSGEN (A6LD,32)
         DSGEN (A6LE,32)
         DSGEN (A6LF,32)
         DSGEN (A6LG,32)
         DSGEN (A6LH,32)
         DSGEN (A6LJ,32)
         DSGEN (A6LK,32)
A6LL     DSGEN (A6LL32,1),(A6LL33,1),(A6LL34,1),(A6LL35,1),            C
               (DUM77,4),(A6LL40,1),(A6LL41,1),(A6LL42,1),             C
               (DUM78,1),(A6LL44,1),(A6LL45,1),(DUM79,3),(A6LL49,1),   C
               (A6LL50,1),(A6LL51,1),(DUM80,1),(A6LL53,1),             C
               (DUM81,2),(A6LL56,1),(A6LL57,1),(DUM82,6)
         DSGEN (A7LB,32)
         DSGEN (A7LC,32)
         DSGEN (A7LD,32)
         DSGEN (A7LE,32)
         DSGEN (A7LF,32)
         DSGEN (A7LG,32)
         DSGEN (A7LH,32)
         DSGEN (A7LJ,32)
         DSGEN (A7LK,32)
         DSGEN (A7LL,32)
         DSGEN (B0LB,32)
         DSGEN (B0LC,32)
         DSGEN (B0LD,32)
         DSGEN (B0LE,32)
         DSGEN (B0LF,32)
         DSGEN (B0LG,32)
         DSGEN (B0LH,32)
         DSGEN (B0LJ,32)
         DSGEN (B0LK,32)
         DSGEN (B0LL,32)
         DSGEN (B1LB,32)
         DSGEN (B1LC,32)
         DSGEN (B1LD,32)
         DSGEN (B1LE,32)
         DSGEN (B1LF,32)
         DSGEN (B1LG,32)
         DSGEN (B1LH,32)
         DSGEN (B1LJ,32)
         DSGEN (DM82,9),(B1LK09,1),(B1LK10,1),(B1LK11,1),(DM83,20)
         DSGEN (B1LL,32)
         DSGEN (B2LB,32)
         DSGEN (B2LC,32)
         DSGEN (B2LD,32)
         DSGEN (B2LE,32)
         DSGEN (B2LF,32)
         DSGEN (B2LG,32)
         DSGEN (B2LH,32)
         DSGEN (B2LJ,32)
         DSGEN (B2LK,32)
         DSGEN (B2LL,32)
         DSGEN (B3LB,32)
         DSGEN (B3LC,32)
         DSGEN (B3LD,32)
         DSGEN (B3LE,32)
         DSGEN (B3LF,32)
         DSGEN (B3LG,32)
         DSGEN (B3LH,32)
         DSGEN (B3LJ,32)
B3LK     DSGEN (B3LK00,1),(B3LK01,1),(B3LK02,1),(B3LK03,1),            C
               (B3LK04,1),(B3LK05,1),(DUM83,2),(B3LK08,1),             C
               (B3LK09,1),(B3LK10,1),(B3LK11,1),(DUM84,20)
         DSGEN (B3LL,32)
         DSGEN (B4LB,32)
         DSGEN (B4LC,32)
         DSGEN (B4LD,32)
         DSGEN (B4LE,32)
         DSGEN (B4LF,32)
         DSGEN (B4LG,32)
         DSGEN (B4LH,32)
         DSGEN (B4LJ,32)
         DSGEN (B4LK,32)
         DSGEN (B4LL,32)
         DSGEN (B5LB,32)
         DSGEN (B5LC,32)
         DSGEN (B5LD,32)
         DSGEN (B5LE,32)
         DSGEN (B5LF,32)
         DSGEN (B5LG,32)
         DSGEN (B5LH,32)
         DSGEN (B5LJ,32)
B5LK     DSGEN (DUM85,12),(B5LK12,1),(B5LK13,1),(DUM86,18)
         DSGEN (B5LL,32)
         DSGEN (B6LB,32)
         DSGEN (B6LC,32)
         DSGEN (B6LD,32)
         DSGEN (B6LE,32)
         DSGEN (B6LF,32)
         DSGEN (B6LG,32)
         DSGEN (B6LH,32)
         DSGEN (B6LJ,32)
         DSGEN (DUM91,13),(B6LK13,1),(DUM92,4),(B6LK18,1),(B6LK19,1),  C
               (B6LK20,1),(DUM93,11)                           @YA07735
         DSGEN (B6LL,32)
         DSGEN (COLB,32)
         DSGEN (COLC,32)
         DSGEN (COLD,32)
         DSGEN (COLE,32)
         DSGEN (COLF,32)
         DSGEN (COLG,32)
         DSGEN (COLH,32)
         DSGEN (COLJ,32)
C0LK     DSGEN (C0LK00,1),(C0LK01,1),(C0LK02,1),(C0LK03,1),            C
               (C0LK04,1),(C0LK05,1),(DUMC001,2),(C0LK08,1),(C0LK09,1),*
               (DUMC002,19),(C0LK29,1),(DUMC003,2)
C0LL    DSGEN  (C0LL32,1),(C0LL33,1),(C0LL34,1),(C0LL35,1),            C
               (C0LL36,1),(DUMC004,2),(C0LL41,1),(DUMC005,24)
         DSGEN (C1LB,32)
         DSGEN (C1LC,32)
         DSGEN (C1LD,32)
         DSGEN (C1LE,32)
         DSGEN (C1LF,32)
         DSGEN (C1LG,32)
         DSGEN (C1LH,32)
         DSGEN (C1LJ,32)
C1LK     DSGEN (DUMC100,9),(C1LK09,1),(C1LK10,1),(C1LK11,1),           C
               (C1LK12,1),(DUMC101,7),(C1LK20,1),(C1LK21,1),           C
               (DUMC102,2),(C1LK24,1),(C1LK25,1),(DUMC103,6)
C1LL     DSGEN (DUMC104,9),(C1LL41,1),(C1LL42,1),(C1LL43,1),           C
               (C1LL44,1),(C1LL45,1),(DUMC105,6),(C1LL52,1),           C
               (C1LL53,1),(DUMC106,2),(C1LL56,1),(C1LL57,1),(DUMC107,6)
         DSGEN (C2LB,32)
         DSGEN (C2LC,32)
         DSGEN (C2LD,32)
         DSGEN (C2LE,32)
         DSGEN (C2LF,32)
         DSGEN (C2LG,32)
         DSGEN (C2LH,32)
         DSGEN (C2LJ,32)
         DSGEN (C2LK,32)
         DSGEN (C2LL,32)
         DSGEN (C3LB,32)
         DSGEN (C3LC,32)
         DSGEN (C3LD,32)
         DSGEN (C3LE,32)
         DSGEN (C3LF,32)
         DSGEN (C3LG,32)
         DSGEN (C3LH,32)
         DSGEN (C3LJ,32)
         DSGEN (C3LK,32)
         DSGEN (C3LL,32)
         DSGEN (C4LB,32)
         DSGEN (C4LC,32)
         DSGEN (C4LD,32)
         DSGEN (C4LE,32)
         DSGEN (C4LF,32)
         DSGEN (C4LG,32)
         DSGEN (C4LH,32)
         DSGEN (C4LJ,32)
         DSGEN (C4LK,32)
         DSGEN (C4LL,32)
         DSGEN (C5LB,32)
         DSGEN (C5LC,32)
         DSGEN (C5LD,32)
         DSGEN (C5LE,32)
         DSGEN (C5LF,32)
         DSGEN (C5LG,32)
         DSGEN (C5LH,32)
         DSGEN (C5LJ,32)
         DSGEN (C5LK,32)
         DSGEN (C5LL,32)
         DSGEN (C6LB,32)
         DSGEN (C6LC,32)
         DSGEN (C6LD,32)
         DSGEN (C6LE,32)
         DSGEN (C6LF,32)
         DSGEN (C6LG,32)
         DSGEN (C6LH,32)
         DSGEN (C6LJ,32)
         DSGEN (C6LK,32)
         DSGEN (C6LL,32)
IFCS0165 CSECT
         USING INDEPEND,R2
         DC    A(ENTRIES)
         DC    A(PEDIT)
REG8     DC    F'0'
SCSIZE   DC    H'156'                                          @YA07735
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
C0       EQU   0
C1       EQU   1
*********
*
* SPECIAL ROUTINES
XDATE1   STM   R14,R12,L12(R13)         SAVE REGS
         CLC   XDATE(L4),HEX00          IS DATE 0
         BE    RETURN                   BRANCH IF DATE 0
         CLC   L0(L4,R3),HEX00          IS LOW DATE ZERO          P0415
         BNE   XDATE2                   BR-NO                     P0415
         MVC   L0(L4,R3),XDATE          MOVE IN DATE              P0415
XDATE2   EQU   *                                                  P0415
         CLC   XDATE(L4),L0(R3)         CHECK FOR LOW DATE
         BL    SAVELOW                  BRANCH IF LOW
         CLC   XDATE(L4),L4(R3)         CHECK FOR HIGH DATE
         BNH   RETURN                   BRANCH IF NOT HIGH
SAVEHI   MVC   L4(L4,R3),XDATE          MOVE HIGH DATE
         B     RETURN                   RETURN
SAVELOW  MVC   L0(L4,R3),XDATE          MOVE LOW DATE
RETURN   LM    R14,R12,L12(R13)         RESTORE REGS
         BR    R14                      RETURN
ROUT0    STM   R14,R12,L12(R13)         SAVE ROUTINE REGISTERS    P0415
         CLC   EXTDLOG(L2),HEX00        TEST FOR 0 LOGOUT LENGTH  P0415
         BNE   ROUT0A                   BRANCH IF LOGOUT RECORDED P0415
         CLC   XCPUMOD(L2),C168    IS IT A 168
         BE    ROUT0A
         CLC   XCPUMOD(L2),C3062   IS IT A 3062
         BE    ROUT0A
         LA    R0,ENDTBL-L6             LOAD ADDRESS OF LAST ENTRYP0415
         ST    R0,REG8                  STORE INTO CURRENT ENTRY  P0415
ROUT0A   LM    R14,R12,L12(R13)         RESTORE REGISTERS         P0415
         CLC   XCPUMOD(L2),C168    MOD 168?                    @YA07735
         BER   R14                 BRANCH IF YES               @YA07735
         TM    XDUM2,V2            MOD 165-M2?                 @YA07735
         BOR   R14                 BRANCH IF YES               @YA07735
         MVI   Y165,X1             SET M165 FLAG               @YA07735
         ST    R2,SAVE2            SAVE REG 2                  @YA07735
         SH    R2,X90              SET R2 TO START OF 165 REC  @YA07735
         BR    R14                      RETURN                    P0415
HEX00    DC    XL4'00'
X90      DC    X'0090'                                         @YA07735
***********************************************************************
*        THIS ROUTINE TESTS FOR VERSION OF M165                       *
***********************************************************************
V2       EQU   X'01'
CHKMOD   STM   R6,R7,XSAVE         SAVE R6 AND R7
         CLI   Y165,X1             MOD 165?                    @YA07735
         BNE   CHKMOD2             BRANCH IF NO                @YA07735
         OI    L0(R3),C0           SET MOD 165 FLAG            @YA07735
         L     R2,SAVE2            RESTORE REG 2               @YA07735
         B     CHKMOD1             GO FOR RETURN               @YA07735
CHKMOD2  OI    L0(R3),C1           SET 165R/168 FLAG           @YA07735
V2EXIT   LA    R7,MFC-L6               CHANGE
         ST    R7,REG8                   POINTER
         TM    A4LJ,X10             7094 EMULATOR?             @YA07735
         BZ    TRY7080              BRANCH IF NO               @YA07735
         OI    L0(R3),X1           INDICATE 7094               @YA07735
         B     CHKMOD1                                         @YA07735
TRY7080  TM    A4LJ,X08             7080 EMULATOR?             @YA07735
         BZ    TRY7074              BRANCH IF NO               @YA07735
         OI    L0(R3),X8           INDICATE 7080               @YA07735
         B     CHKMOD1                                         @YA07735
TRY7074  TM    A4LJ,X04             7074 EMULATOR?             @YA07735
         BZ    CHKMOD1              BRANCH IF NO               @YA07735
         OI    L0(R3),X4           INDICATE 7074               @YA07735
CHKMOD1  LM    R6,R7,XSAVE         RESTORE REGS                @YA07735
         BR    R14                 EXIT
SAVE2    DC    F'0'                                            @YA07735
C168     DC    X'0168'
Y165     DC    X'00'                                           @YA07735
C3062    DC    X'3062'
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
X10      EQU   X'10'                                           @YA07735
X08      EQU   X'08'                                           @YA07735
X04      EQU   X'04'                                           @YA07735
X1       EQU   16                                              @YA07735
X8       EQU   8                                               @YA07735
X4       EQU   4                                               @YA07735
ENTRIES  DS    0F
         SPECIAL    XDATE1,00000000,SPACE=4
         SPECIAL    ROUT0,00000000,SPACE=0                        P0415
         SUM   A1LK00
         SUM   A1LK01
         SUM   A1LK03
         SUM   A1LK04
         SUM   A1LK08
         SUM   A1LK10
         SUM   A1LK12
         SUM   A1LK16
         SUM   A1LK17
         SUM   A1LK18
         SUM   A1LK20
         SUM   A1LK24
         SUM   A1LK26
         SUM   A1LL43
         SUM   A1LL45
         SUM   A1LL50
         SUM   A2LK01
         SUM   A2LK02
         SUM   A2LK03
         SUM   A2LK04
         SUM   A2LK05
         SUM   A2LK08
         SUM   A2LK09
         SUM   A2LK11
         SUM   A2LK12
         SUM   A2LK13
         SUM   A2LK18
         SUM   A2LK19
         SUM   A2LK20
         SUM   A2LK21
         SUM   A2LK24
         SUM   A2LK25
         SUM   A2LK26
         SUM   A2LK27
         SUM   A2LL34
         SUM   A2LL41
         SUM   A2LL43
         SUM   A2LL44
         SUM   A2LL45
         SUM   A4LK25
         SUM   A4LK26
         SUM   A4LK27
         SUM   A4LK28
         SUM   A5LK00
         SUM   A5LK01
         SUM   A5LK02
         SUM   A5LK03
         SUM   A5LK04
         SUM   A5LK05
         SUM   A5LK08
         SUM   A5LK09
         SUM   A5LK10
         SUM   A5LK11
         SUM   A5LK12
         SUM   A5LK13
         SUM   A5LK16
         SUM   A5LK18
         SUM   A5LK19
         SUM   A5LK20
         SUM   A5LK21
         SUM   A5LK24
         SUM   A5LK25
         SUM   A5LK26
         SUM   A5LK27
         SUM   A5LK28
         SUM   A5LL32
         SUM   A5LL33
         SUM   A5LL34
         SUM   A5LL35
         SUM   A5LL36
         SUM   A5LL37
         SUM   A5LL40
         SUM   A5LL41
         SUM   A5LL42
         SUM   A5LL43
         SUM   A5LL44
         SUM   A5LL45
         SUM   A5LL48
         SUM   A5LL49
         SUM   A5LL50
         SUM   A5LL51
         SUM   A5LL52
         SUM   A5LL53
         SUM   A5LL56
         SUM   A6LL32
         SUM   A6LL33
         SUM   A6LL34
         SUM   A6LL35
         SUM   A6LL40
         SUM   A6LL41
         SUM   A6LL42
         SUM   A6LL44
         SUM   A6LL45
         SUM   A6LL49
         SUM   A6LL50
         SUM   A6LL51
         SUM   A6LL53
         SUM   A6LL56
         SUM   A6LL57
         SUM   B1LK09
         SUM   B1LK10
         SUM   B1LK11
         SUM   B3LK00
         SUM   B3LK01
         SUM   B3LK02
         SUM   B3LK03
         SUM   B3LK04
         SUM   B3LK05
         SUM   B3LK08
         SUM   B3LK09
         SUM   B3LK10
         SUM   B3LK11
         SUM   B5LK12
         SUM   B5LK13
         SUM   B6LK13                                          @YA07735
         SUM   B6LK18                                          @YA07735
         SUM   B6LK19                                          @YA07735
         SUM   B6LK20                                          @YA07735
         SPECIAL    CHKMOD,00000000,SPACE=1
ENDTBL1  DC    X'FFFF'
MFC      EQU   *
         SUM   C0LK00
         SUM   C0LK01
         SUM   C0LK02
         SUM   C0LK03
         SUM   C0LK04
         SUM   C0LK05
         SUM   C0LK08
         SUM   C0LK09
         SUM   C0LK29
         SUM   C0LL32
         SUM   C0LL33
         SUM   C0LL34
         SUM   C0LL35
         SUM   C0LL36
         SUM   C0LL41
         SUM   C1LK09
* (UNSUPPORTED ITEM C1LK10 DELETED)                            @ZA34990
         SUM   C1LK11
         SUM   C1LK12
         SUM   C1LK20
         SUM   C1LK21
         SUM   C1LK24
         SUM   C1LK25
         SUM   C1LL41
         SUM   C1LL42
* (REPETITION OF C1LL42 DELETED)                               @ZA34990
         SUM   C1LL43
         SUM   C1LL44
         SUM   C1LL45
* (UNSUPPORTED ITEM C1LL52 DELETED)                            @ZA34990
         SUM   C1LL53
         SUM   C1LL56
         SUM   C1LL57
ENDTBL   DC    X'FF'                                              P0415
PEDIT    DS    0F
&CSECT   SETC  'PEDIT'
&DSECT   SETC  'YYYA'
         USING *,R9
         DC    A(PENTRY)
         DC    CL8'IFCS0165'
YR9PTR   DS    1F
YLABELP  DS    1F
YYYA     DSECT
         DS    3H
         DSGEN (YDUMA,16),(YNOREC,16)
         DSGEN (YTYPE,8),(YCHAN,8),(YCUA,24),(YSER,24)
         DSGEN (YCPU,16),(YSMSW,16)
         DSGEN (YLOWD,32)
         DSGEN (YHID,32)
         DSGEN (CTA1LK00,16),(CTA1LK01,16)
         DSGEN (CTA1LK03,16),(CTA1LK04,16)
         DSGEN (CTA1LK08,16),(CTA1LK10,16)
         DSGEN (CTA1LK12,16),(CTA1LK16,16)
         DSGEN (CTA1LK17,16),(CTA1LK18,16)
         DSGEN (CTA1LK20,16),(CTA1LK24,16)
         DSGEN (CTA1LK26,16),(CTA1LL43,16)
         DSGEN (CTA1LL45,16),(CTA1LL50,16)
         DSGEN (CTA2LK01,16),(CTA2LK02,16)
         DSGEN (CTA2LK03,16),(CTA2LK04,16)
         DSGEN (CTA2LK05,16),(CTA2LK08,16)
         DSGEN (CTA2LK09,16),(CTA2LK11,16)
         DSGEN (CTA2LK12,16),(CTA2LK13,16)
         DSGEN (CTA2LK18,16),(CTA2LK19,16)
         DSGEN (CTA2LK20,16),(CTA2LK21,16)
         DSGEN (CTA2LK24,16),(CTA2LK25,16)
         DSGEN (CTA2LK26,16),(CTA2LK27,16)
         DSGEN (CTA2LL34,16),(CTA2LL41,16)
         DSGEN (CTA2LL43,16),(CTA2LL44,16)
         DSGEN (CTA2LL45,16),(CTA4LK25,16)
         DSGEN (CTA4LK26,16),(CTA4LK27,16)
         DSGEN (CTA4LK28,16),(CTA5LK00,16)
         DSGEN (CTA5LK01,16),(CTA5LK02,16)
         DSGEN (CTA5LK03,16),(CTA5LK04,16)
         DSGEN (CTA5LK05,16),(CTA5LK08,16)
         DSGEN (CTA5LK09,16),(CTA5LK10,16)
         DSGEN (CTA5LK11,16),(CTA5LK12,16)
         DSGEN (CTA5LK13,16),(CTA5LK16,16)
         DSGEN (CTA5LK18,16),(CTA5LK19,16)
         DSGEN (CTA5LK20,16),(CTA5LK21,16)
         DSGEN (CTA5LK24,16),(CTA5LK25,16)
         DSGEN (CTA5LK26,16),(CTA5LK27,16)
         DSGEN (CTA5LK28,16),(CTA5LL32,16)
         DSGEN (CTA5LL33,16),(CTA5LL34,16)
         DSGEN (CTA5LL35,16),(CTA5LL36,16)
         DSGEN (CTA5LL37,16),(CTA5LL40,16)
         DSGEN (CTA5LL41,16),(CTA5LL42,16)
         DSGEN (CTA5LL43,16),(CTA5LL44,16)
         DSGEN (CTA5LL45,16),(CTA5LL48,16)
         DSGEN (CTA5LL49,16),(CTA5LL50,16)
         DSGEN (CTA5LL51,16),(CTA5LL52,16)
         DSGEN (CTA5LL53,16),(CTA5LL56,16)
         DSGEN (CTA6LL32,16),(CTA6LL33,16)
         DSGEN (CTA6LL34,16),(CTA6LL35,16)
         DSGEN (CTA6LL40,16),(CTA6LL41,16)
         DSGEN (CTA6LL42,16),(CTA6LL44,16)
         DSGEN (CTA6LL45,16)
         DSGEN (CTA6LL49,16),(CTA6LL50,16)
         DSGEN (CTA6LL51,16),(CTA6LL53,16)
         DSGEN (CTA6LL56,16),(CTA6LL57,16)
         DSGEN (CTB1LK09,16),(CTB1LK10,16),(CTB1LK11,16)
         DSGEN (CTB3LK00,16),(CTB3LK01,16)
         DSGEN (CTB3LK02,16),(CTB3LK03,16)
         DSGEN (CTB3LK04,16),(CTB3LK05,16)
         DSGEN (CTB3LK08,16),(CTB3LK09,16)
         DSGEN (CTB3LK10,16),(CTB3LK11,16)
         DSGEN (CTB5LK12,16),(CTB5LK13,16)
         DSGEN (CTB6LK13,16),(CTB6LK18,16)                     @YA07735
         DSGEN (CTB6LK19,16),(CTB6LK20,16)                     @YA07735
         DSGEN (NEWVER,16)
         DSGEN (CTC0LK00,16),(CTC0LK01,16)
         DSGEN (CTC0LK02,16),(CTC0LK03,16)
         DSGEN (CTC0LK04,16),(CTC0LK05,16)
         DSGEN (CTC0LK08,16),(CTC0LK09,16)
         DSGEN (CTC0LK29,16),(CTC0LL32,16)
         DSGEN (CTC0LL33,16),(CTC0LL34,16)
         DSGEN (CTC0LL35,16),(CTC0LL36,16)
         DSGEN (CTC0LL41,16)
         DSGEN (CTC1LK09,16)     (C1LK10 DELETED)              @ZA34990
         DSGEN (CTC1LK11,16),(CTC1LK12,16)
         DSGEN (CTC1LK20,16),(CTC1LK21,16)
         DSGEN (CTC1LK24,16),(CTC1LK25,16)
         DSGEN (CTC1LL41,16),(CTC1LL42,16)
         DSGEN (CTC1LL43,16),(CTC1LL44,16)
         DSGEN (CTC1LL45,16)     (C1LL52 DELETED)              @ZA34990
         DSGEN (CTC1LL53,16),(CTC1LL56,16)
         DSGEN (CTC1LL57,16)
YDUM1    EQU   *
IFCS0165 CSECT
         DROP  R2
         USING YYYA,R2
*********
*
* SPECIAL ROUTINES
M2       EQU   X'01'
LL2      EQU   2
CONVERT  STM   R5,R8,XSAVE              SAVE REGS
         LH    R5,L0(R4)                PICK UP COUNT
CONV1    CVD   R5,WORK                  CONVERT IT TO DEVIMALP
         UNPK  L0(L3,R3),WORK+L5(L3)    UNPACK IT TO PRINT BUFF
         MVZ   L2(L1,R3),L0(R3)         PUT ON PRINTABLE ZONE
RETURNA  LM    R5,R8,XSAVE              RESTORE REGS
         BR    R14
CHKEMU   ST    R5,RSAVE                                        @YA07735
         TM    L0(R4),C1           165R/168?                   @YA07735
         BZR   R14                 BRANCH IF NO                @YA07735
         TM    L0(R4),C10           7094 EMULATOR?             @YA07735
         BOR   R14                 BRANCH IF YES               @YA07735
         TM    L0(R4),C08          7080 EMULATOR?              @YA07735
         BNO   T7074               BRANCH IF NO                @YA07735
         L     R5,A7080            SET LINE AND LABEL          @YA07735
         ST    R5,YR9PTR           POINTERS FOR 7080           @YA07735
         L     R5,B7080                                        @YA07735
         ST    R5,YLABELP                                      @YA07735
         B     RETURN9                                         @YA07735
T7074    TM    L0(R4),C04          7074 EMULATOR?              @YA07735
         BNO   JUMP1               BRANCH IF NO                @YA07735
         L     R5,A7074            SET LINE AND LABEL          @YA07735
         ST    R5,YR9PTR           POINTERS FOR 7074           @YA07735
         L     R5,B7074                                        @YA07735
         ST    R5,YLABELP                                      @YA07735
         B     RETURN9                                         @YA07735
JUMP     ST    R5,RSAVE                                        @YA07735
         TM    NEWVER,C1           165R/168?                   @YA07735
         BZR   R14                 BRANCH IF NO                @YA07735
JUMP1    L     R5,AJUMP            SKIP EMULATOR PRINTOUTS     @YA07735
         ST    R5,YR9PTR                                       @YA07735
         L     R5,BJUMP                                        @YA07735
         ST    R5,YLABELP                                      @YA07735
RETURN9  L     R5,RSAVE                                        @YA07735
         BR    R14                                             @YA07735
*
SKIPPER  BR    R14                      RETURN
*
SETDATE  UNPK  WORK(L8),L0(L4,R4)       PACK DATE
         MVZ   WORK+L7(L1),WORK         MOVE ON ZONE
         MVC   L0(L3,R3),WORK+L5        MOVE DATE TO PRINT LINE
         MVC   L5(L2,R3),WORK+L3        MOVE YEAR TO PRINT LINE
         BR    R14
TESTMOD  STM   R6,R7,RSAVE              SAVE REGS
         TM    NEWVER,C1                Q/IS IT NEW VER
         BO    BEXIT                    YES-BR
         BR    R14                      RETURN
BEXIT    LA    R6,C0LINE-4              SET
         LA    R7,C0LAB-1                TO
         ST    R6,YR9PTR                  GO TO
         ST    R7,YLABELP                  C0 PRINT
         LM    R6,R7,RSAVE              RESTORE REGS
         BR    R14                      RETURN
RSAVE    DS    2F
M168     DC    X'0168'
MODCHK   STM   R6,R7,RSAVE              SAVE REGS
         CLC   YCPU(L2),M168            Q/ IS THIS A 168
         BE    EXIT8                    YES-BR
         BR    R14                      RETURN
EXIT8    LA    R6,LIN168-L4            SET TO
         L     R7,LAB1
         ST    R6,YR9PTR                    TO
         ST    R7,YLABELP                    168 PRINT
         LM    R6,R7,RSAVE              RESTORE REGS
         BR    R14                      RETURN
C1BR     STM   R6,R7,RSAVE              SAVE REGS
         LA    R6,C1LINE-L4             SET TO
         L     R7,LAB2
         ST    R6,YR9PTR                    TO
         ST    R7,YLABELP                     C1 PRINT
         LM    R6,R7,RSAVE              RESTIRE REGS
         SR    R15,R15                  CLEAR 15
         BR    R14                      RETURN
LAB1     DC    A(LAB168-1)
LAB2     DC    A(C1LAB-1)
A7074    DC    A(LN7074-4)                                     @YA07735
B7074    DC    A(LB7074-1)                                     @YA07735
A7080    DC    A(LN7080-4)                                     @YA07735
B7080    DC    A(LB7080-1)                                     @YA07735
AJUMP    DC    A(LNJUMP-4)                                     @YA07735
BJUMP    DC    A(LBJUMP-1)                                     @YA07735
C10      EQU   X'10'                                           @YA07735
C08      EQU   X'08'                                           @YA07735
C04      EQU   X'04'                                           @YA07735
*
*        FREEE COUNTERS AREA LAST THING DONE
*
FREECTR  STM   R14,R12,L12(R13)         SAVE ALL REGS
         LR    R12,R13                  SAVE SAVE AREA ADDR
         LA    R13,FSAVE                POINT TO MY SAVE
         ST    R12,L4(R13)              SET CHAINING POINTERS
         ST    R13,L8(R12)
         L     R3,L4(R2)                PICK UP POINTER TO NEXT COUNTER
         ST    R3,L28(R12)              SAVE POINTER IN REG SAVE
         LH    R0,SIZE                  PICK UP SIZE OF AREA
         LR    R1,R2                    SET ADDRESS
         FREEMAIN R,LV=(0),A=(1)
         LTR   R3,R3                    ANY MORE COUNTERS
         BZ    RETURN0                  NO  RETURN
         LA    R5,PENTRY+L10            POINT TO TOP ENTRY - 4
         ST    R5,YR9PTR
         LA    R5,LABELS-L1               POINT TO FIRST LABEL - 1
         ST    R5,YLABELP               STORE IT IN TABLE
RETURN0  L    R13,L4(R13)               PICK UP &
         LM    R14,R12,L12(R13)         RESTOR E REGS
         BR    R14
         LTORG
*
HEX02    EQU   X'02'
L14      EQU   14
L28      EQU   28
*
WORK     DS    D
FSAVE    DS    18F
XSAVE    DS    4F
SIZE     DC    H'334'                                          @YA07735
PENTRY   DS    0F
         DC    X'00010001'
         DC    X'00010001'
         DC    A(LABELS)
         DC    H'0'
*              *****     EDIT ENTRIES AREA     *****
         DC    X'01'
         DC    X'000B8B00'
         LABEL ' '
         LINE  ,(23,1)
         ROUTINE    YDUM1,SKIPPER
         LABEL 'DAY YEAR   DAY YEAR'
         LINE  (23,11),(12,19),SKIP=2                             P0415
         ROUTINE    YLOWD,SETDATE
         ROUTINE    YHID,SETDATE
         LABEL 'DATE RANGE-','TO'
         LINE  (21,1),(12,11),SKIP=2                           @ZM43110
         HEX   YCPU
         LABEL 'MODEL ','MACHINE CHECK SUMMARY'
         LINE  (23,1),(12,1)
         HEX        YSER,0,3B                                    S21021
         LABEL      'SERIAL NO'                                  S21021
         LINE  (38,1),(12,1),SKIP=2                               P0415
         ROUTINE    YNOREC,CONVERT                                P0415
         LABEL 'TOTAL NUMBER OF RECORDS'                          P0415
         LINE  ,(19,1),SKIP=1
         ROUTINE    YCPU,TESTMOD
         LABEL 'M/F FRAME A1 STORAGE STATUS'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LK00,CONVERT
         ROUTINE    CTA1LK01,CONVERT
         ROUTINE    CTA1LK08,CONVERT
         ROUTINE    CTA1LK10,CONVERT
         LABEL 'RIPPLE CE','RIPPLE UE','ECC CHK CE','ECC CHK UE'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LK12,CONVERT
         ROUTINE    CTA1LK20,CONVERT
         ROUTINE    CTA1LK24,CONVERT
         ROUTINE    CTA1LK26,CONVERT
         LABEL 'S/S CHK','STG CHK SDB1','STG CHK MRK','STG CHK ADR'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LL43,CONVERT
         ROUTINE    CTA1LL45,CONVERT
         LABEL 'STG CHK','UNRETRY STG CHK'
         LINE  ,(19,1)
         LABEL 'M/F FRAME A2 STORAGE CONTROL UNIT'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK01,CONVERT
         ROUTINE    CTA2LK02,CONVERT
         ROUTINE    CTA2LK03,CONVERT
         ROUTINE    CTA2LK04,CONVERT
         LABEL 'SCU INKEY','SCU SNK','SCU STG ADR','SCU STG ADR 8-15'
         ROUTINE    CTA2LK05,CONVERT
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK08,CONVERT
         ROUTINE    CTA2LK08,CONVERT
         ROUTINE    CTA2LK09,CONVERT
         ROUTINE    CTA2LK11,CONVERT
         LABEL 'SCU STG ADR 16-23','SCU STG ADR 24-28','INKEY CHK','BFRX
               CTL SCU ADR'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK12,CONVERT
         ROUTINE    CTA2LK13,CONVERT
         ROUTINE    CTA2LK18,CONVERT
         ROUTINE    CTA2LK19,CONVERT
         LABEL 'BFR CTL C40 ADR','BFR CTL C40 MRK','BFR DBO BYTE 0','BFX
               R DBO BYTE 1'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK20,CONVERT
         ROUTINE    CTA2LK21,CONVERT
         ROUTINE    CTA2LK24,CONVERT
         ROUTINE    CTA2LK25,CONVERT
         LABEL 'BFR DBO BYTE 2','BFR DBO BYTE 3','BFR DBO BYTE 4','BFR X
               DBO BYTE 5'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK26,CONVERT
         ROUTINE    CTA2LK27,CONVERT
         ROUTINE    CTA2LL34,CONVERT
         ROUTINE    CTA2LL41,CONVERT
         LABEL 'BFR DBO BYTE 6','BFR DBO BYTE 7','HANG DETECT','OUTKEY X
               CHK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LL43,CONVERT
         ROUTINE    CTA2LL44,CONVERT
         ROUTINE    CTA2LL45,CONVERT
         LABEL 'BFR ARY BLK CMPR','BFR ARY MPLE CMPR','BFR ARY RPLCE ARX
               Y'
         LINE  ,(19,1)
         LABEL 'M/F FRAME A4 CONTROL STORAGE'
         LINE  (22,26),(1,26)
         ROUTINE    CTA4LK25,CONVERT
         ROUTINE    CTA4LK26,CONVERT
         ROUTINE    CTA4LK27,CONVERT
         ROUTINE    CTA4LK28,CONVERT
         LABEL 'CTL STG INVLD WD','CTL STG PTY 0-35','CTL STG PTY 36-71X
               ','CTL STG PTY 72-107'
         LINE  ,(19,1)
         LABEL 'M/F FRAME A5 ADDERS AND CHECKS'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK00,CONVERT
         ROUTINE    CTA5LK01,CONVERT
         ROUTINE    CTA5LK02,CONVERT
         ROUTINE    CTA5LK03,CONVERT
         LABEL 'PAR ADDR HS BYTE 0','PAR ADDR HS BYTE 1','PAR ADDR HS BX
               YTE 2','PAR ADDR HS BYTE 3'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK04,CONVERT
         ROUTINE    CTA5LK05,CONVERT
         ROUTINE    CTA5LK08,CONVERT
         ROUTINE    CTA5LK09,CONVERT
         LABEL 'PAR ADDR HS BYTE 4','PAR ADDR HS BYTE 5','PAR ADDR HS BX
               YTE 6','PAR ADDR HS BYTE 7'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK10,CONVERT
         ROUTINE    CTA5LK11,CONVERT
         ROUTINE    CTA5LK12,CONVERT
         ROUTINE    CTA5LK13,CONVERT
         LABEL 'PAR ADDR HS WD','E REG BYTE 0','E REG BYTE 1','SER ADDRX
                HS'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK16,CONVERT
         ROUTINE    CTA5LK18,CONVERT
         ROUTINE    CTA5LK19,CONVERT
         ROUTINE    CTA5LK20,CONVERT
         LABEL 'SER ADDR FS','BYTES 0+4','BYTES 1+5','BYTES 2+6'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK21,CONVERT
         ROUTINE    CTA5LK24,CONVERT
         ROUTINE    CTA5LK25,CONVERT
         ROUTINE    CTA5LK26,CONVERT
         LABEL 'BYTE 3','ENTER ERR','CTL STG INVLD WD','CTL STG PTY 0-3X
               5'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK27,CONVERT
         ROUTINE    CTA5LK28,CONVERT
         ROUTINE    CTA5LL32,CONVERT
         ROUTINE    CTA5LL33,CONVERT
         LABEL 'CTL STG PTY 36-71','CTL STG PTY 72-107','PAR ADDR FS BYX
               TE 0','PAR ADDR FS BYTE 1'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL34,CONVERT
         ROUTINE    CTA5LL35,CONVERT
         ROUTINE    CTA5LL36,CONVERT
         ROUTINE    CTA5LL37,CONVERT
         LABEL 'PAR ADDR FS BYTE 2','PAR ADDR FS BYTE 3','PAR ADDR FS BX
               YTE 4','PAR ADDR FS BYTE 5'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL40,CONVERT
         ROUTINE    CTA5LL41,CONVERT
         ROUTINE    CTA5LL42,CONVERT
         ROUTINE    CTA5LL43,CONVERT
         LABEL 'PAR ADDR FS BYTE 6','PAR ADDR FS BYTE 7','PAR ADDR CARRX
               Y','SHFTR OUT BYTE 0'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL44,CONVERT
         ROUTINE    CTA5LL45,CONVERT
         ROUTINE    CTA5LL48,CONVERT
         ROUTINE    CTA5LL49,CONVERT
         LABEL 'SHFTR OUT BYTE 1','SHFTR OUT BYTE 2','SHFTR OUT BYTE 3'X
               ,'SHFTR OUT BYTE 4'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL50,CONVERT
         ROUTINE    CTA5LL51,CONVERT
         ROUTINE    CTA5LL52,CONVERT
         ROUTINE    CTA5LL53,CONVERT
         LABEL 'SHFTR OUT BYTE 5','SHFTR OUT BYTE 6','SHFTR OUT BYTE 7'X
               ,'SHFTR INPUT'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL56,CONVERT
         LABEL 'SHFTR CTL'
         LINE  ,(19,1)
         LABEL 'M/F FRAME A6 I-UNIT AND 74/94 EMUL'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL32,CONVERT
         ROUTINE    CTA6LL33,CONVERT
         ROUTINE    CTA6LL34,CONVERT
         ROUTINE    CTA6LL35,CONVERT
         LABEL 'INST REG 0-7','INST REG 8-15','INST REG 16-23','INST REX
               G 24-31'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL40,CONVERT
         ROUTINE    CTA6LL41,CONVERT
         ROUTINE    CTA6LL42,CONVERT
         ROUTINE    CTA6LL44,CONVERT
         LABEL 'ADR INCR LTH 8-15','ADR INCR LTH 16-23','ADR INCR LTH 2X
               4-31','DIF CHK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL49,CONVERT
         ROUTINE    CTA6LL50,CONVERT
         ROUTINE    CTA6LL51,CONVERT
         ROUTINE    CTA6LL53,CONVERT
         LABEL 'ADR ADDR HS 8-15','ADR ADDR HS 16-23','ADR ADDR HS 24-3X
               1','ADR ADDR FS 8-15'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL56,CONVERT
         ROUTINE    CTA6LL57,CONVERT
         LABEL 'ADR ADDR FS 16-23','ADR ADDR FS 24-31'
         LINE  ,(19,1)
         LABEL 'M/F FRAME B3 HSM AND/OR EXTD CHN'
         LINE  (22,26),(1,26)
         ROUTINE    CTB3LK00,CONVERT
         ROUTINE    CTB3LK01,CONVERT
         ROUTINE    CTB3LK02,CONVERT
         ROUTINE    CTB3LK03,CONVERT
         LABEL 'RESIDUE CHK','PTY MPLR CHK','PTY MPCD CHK','RSDUE CTL CX
               HK MPCD'
         LINE  (22,26),(1,26)
         ROUTINE    CTB3LK04,CONVERT
         ROUTINE    CTB3LK05,CONVERT
         ROUTINE    CTB3LK08,CONVERT
         ROUTINE    CTB3LK09,CONVERT
         LABEL 'RSDUE CTL CHK SUM','RSDUE CTL CHK CARRY','RSDUE CTL CHKX
                MPLR','RSDUE CTL CHK SPAR'
         LINE  (22,26),(1,26)
         ROUTINE    CTB3LK10,CONVERT
         ROUTINE    CTB3LK11,CONVERT
         LABEL 'RSD CTL CK CMPT RSLT','RSD CTL CK ACTL RSLT'
         LINE  ,(19,1)
         LABEL ' '
         LINE  ,(19,1)
         LABEL 'M/F FRAME B5 7094 EMULATOR FEATURE'
         LINE  (22,26),(1,26)
         ROUTINE    CTB5LK12,CONVERT
         ROUTINE    CTB5LK13,CONVERT
         LABEL 'TSLTR INPUT','WCS 108-125'
         LINE  ,(19,1)                                         @YA07735
         LABEL 'M/F FRAME B6  7080 EMULATOR FEATURE'           @YA07735
         LINE  (22,26),(1,26)                                  @YA07735
         ROUTINE CTB6LK18,CONVERT                              @YA07735
         ROUTINE CTB6LK19,CONVERT                              @YA07735
         ROUTINE CTB6LK20,CONVERT                              @YA07735
         LABEL 'WCS 108-125','A SIDE ERR','B SIDE ERR'         @YA07735
         LINE   ,                                              @YA07735
         ROUTINE NEWVER,JUMP                                   @YA07735
         LABEL '  '                                            @YA07735
         LINE  ,(19,1)                                         @YA07735
         LABEL 'M/F FRAME B6  7074 EMULATOR FEATURE'           @YA07735
         LINE  (22,26),(1,26)                                  @YA07735
         ROUTINE CTB6LK13,CONVERT                              @YA07735
         LABEL 'WCS ERROR'                                     @YA07735
         LINE
         ROUTINE    YDUM1,FREECTR
         LABEL ' '
         DC    X'FF'
         DC    XL6'00'
         DC    C'$'
         LINE  (23,25),(2,25)
         LABEL ' '
C0LINE   LINE  ,(19,1)
C0LAB    LABEL 'M/F FRAME A1 STORAGE STATUS'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LK04,CONVERT
         ROUTINE    CTA1LK08,CONVERT
         ROUTINE    CTA1LK10,CONVERT
         ROUTINE    CTA1LK12,CONVERT
         LABEL 'SP MACH CK','ECC CHK CE','ECC CHK UE','S/S CHK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LK16,CONVERT
         ROUTINE    CTA1LK17,CONVERT
         ROUTINE    CTA1LK18,CONVERT
         ROUTINE    CTA1LK20,CONVERT
         LABEL 'S/S ADV LOST CHK','S/S SYNC CHK','S/S OVERRUN CHK','STGC
                CHK SDBI'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LK24,CONVERT
         ROUTINE    CTA1LK26,CONVERT
         ROUTINE    CTA1LL43,CONVERT
         ROUTINE    CTA1LL45,CONVERT
         LABEL 'STG CHKMRK','STG CHK ADR','STG CHK','UNRETRY STG CHK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA1LL50,CONVERT
         LABEL 'MULT SEG CMPR'
         LINE  (22,26),(19,1)
         LABEL 'M/F FRAME A2 STORAGE CONTROL UNIT'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK02,CONVERT
         ROUTINE    CTA2LK03,CONVERT
         ROUTINE    CTA2LK04,CONVERT
         ROUTINE    CTA2LK05,CONVERT
         LABEL 'SCU SNK','SCU STG ADR','SCU STG ADR 8-15','SCU STG ADR C
               16-23'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK08,CONVERT
         ROUTINE    CTA2LK11,CONVERT
         ROUTINE    CTA2LK12,CONVERT
         ROUTINE    CTA2LK13,CONVERT
         LABEL 'SCU STG ADR 24-28','BFR CTL SCU ADDR','BFR CTL C40 ADR'C
               ,'BFR CTL C40 MARK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK18,CONVERT
         ROUTINE    CTA2LK19,CONVERT
         ROUTINE    CTA2LK20,CONVERT
         ROUTINE    CTA2LK21,CONVERT
         LABEL 'BDBO CHK TGR BYTE 0','BDBO CHK TGR BYTE 1','BDBO CHK TGC
               R BYTE 2','BDBO CHK TGR BYTE 3'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LK24,CONVERT
         ROUTINE    CTA2LK25,CONVERT
         ROUTINE    CTA2LK26,CONVERT
         ROUTINE    CTA2LK27,CONVERT
         LABEL 'BDBO CHK TGR BYTE 4','BDBO CHK TGR BYTE 5','BDBO CHK TGC
               R BYTE 6','BDBO CHK TGR BYTE 7'
         LINE  (22,26),(1,26)
         ROUTINE    CTA2LL34,CONVERT
         ROUTINE    CTA2LL43,CONVERT
         ROUTINE    CTA2LL44,CONVERT
         ROUTINE    CTA2LL45,CONVERT
         LABEL 'HANG DETECT','BFR ARY BLK CMPR','BFR ARY MPLE CMPR','BFC
               R ARY RPLCE ARY'
         LINE  (22,26),(19,1)
         LABEL 'M/F FRAME A4 CONTROL STORAGE'
         LINE  (22,26),(1,26)
         ROUTINE    CTA4LK25,CONVERT
         ROUTINE    CTA4LK26,CONVERT
         ROUTINE    CTA4LK27,CONVERT
         ROUTINE    CTA4LK28,CONVERT
         LABEL 'CTL STG INVLD WD','CTL STG PTY 0-35','CTL STG PTY 36-71C
               ','CTL STG PTY 72-107'
         LINE  (22,26),(19,1)
         LABEL 'M/F FRAME A5 ADDERS AND CHECKS'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK00,CONVERT
         ROUTINE    CTA5LK01,CONVERT
         ROUTINE    CTA5LK02,CONVERT
         ROUTINE    CTA5LK03,CONVERT
         LABEL 'PAR ADDR HS BYTE 0','PAR ADDR HS BYTE 1','PAR ADDR HS BC
               YTE 2','PAR ADDR HS BYTE 3'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK04,CONVERT
         ROUTINE    CTA5LK05,CONVERT
         ROUTINE    CTA5LK08,CONVERT
         ROUTINE    CTA5LK09,CONVERT
         LABEL 'PAR ADDR HS BYTE 4','PAR ADDR HS BYTE 5','PAR ADDR HS BC
               YTE 6','PAR ADDR HS BYTE 7'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK10,CONVERT
         ROUTINE    CTA5LK11,CONVERT
         ROUTINE    CTA5LK12,CONVERT
         ROUTINE    CTA5LK13,CONVERT
         LABEL 'PAR ADDR HS WD','E REG BYTE 0','E REG BYTE 1','SER ADDRC
                HS'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK16,CONVERT
         ROUTINE    CTA5LK18,CONVERT
         ROUTINE    CTA5LK19,CONVERT
         ROUTINE    CTA5LK20,CONVERT
         LABEL 'SER ADDR FS','TF ADDR CK','TOD CK','CPU TMR CK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK21,CONVERT
         ROUTINE    CTA5LK24,CONVERT
         ROUTINE    CTA5LK25,CONVERT
         ROUTINE    CTA5LK26,CONVERT
         LABEL 'CMPR CK','ENTER ERR','CTL STG INVLD WD','CTL STG PTY 0-C
               35'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LK27,CONVERT
         ROUTINE    CTA5LK28,CONVERT
         ROUTINE    CTA5LL32,CONVERT
         ROUTINE    CTA5LL33,CONVERT
         LABEL 'CTL STG PTY 36-71','CTL STG PTY 72-107','PAR ADDR FS BYC
               TE 0','PAR ADDR FS BYTE 1'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL34,CONVERT
         ROUTINE    CTA5LL35,CONVERT
         ROUTINE    CTA5LL36,CONVERT
         ROUTINE    CTA5LL37,CONVERT
         LABEL 'PAR ADDR FS BYTE 2','PAR ADDR FS BYTE 3','PAR ADDR FS BC
               YTE 4','PAR ADDR FS BYTE 5'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL40,CONVERT
         ROUTINE    CTA5LL41,CONVERT
         ROUTINE    CTA5LL42,CONVERT
         ROUTINE    CTA5LL43,CONVERT
         LABEL 'PAR ADDR FS BYTE 6','PAR ADDR FS BYTE 7','PAR ADDR CARRC
               Y','SHFTR OUT BYTE 0'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL44,CONVERT
         ROUTINE    CTA5LL45,CONVERT
         ROUTINE    CTA5LL48,CONVERT
         ROUTINE    CTA5LL49,CONVERT
         LABEL 'SHFTR OUT BYTE 1','SHFTR OUT BYTE 2','SHFTR OUT BYTE 3'C
               ,'SHFTR OUT BYTE 4'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL50,CONVERT
         ROUTINE    CTA5LL51,CONVERT
         ROUTINE    CTA5LL52,CONVERT
         ROUTINE    CTA5LL53,CONVERT
         LABEL 'SHFTR OUT BYTE 5','SHFTR OUT BYTE 6','SHFTR OUT BYTE 7'C
               ,'SHFTR INPUT'
         LINE  (22,26),(1,26)
         ROUTINE    CTA5LL56,CONVERT
         LABEL 'SHFTR CTL'
         LINE  ,(19,1)
         LABEL 'M/F FRAME A6 I-UNIT'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL32,CONVERT
         ROUTINE    CTA6LL33,CONVERT
         ROUTINE    CTA6LL34,CONVERT
         ROUTINE    CTA6LL35,CONVERT
         LABEL 'INST REG 0-7','INST REG 8-15','INST REG 16-23','INST REC
               G 24-31'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL40,CONVERT
         ROUTINE    CTA6LL41,CONVERT
         ROUTINE    CTA6LL42,CONVERT
         ROUTINE    CTA6LL44,CONVERT
         LABEL 'ADR INCR LTH 8-15','ADR INCR LTH 16-23','ADR INCR LTH 2C
               4-31','DIF A CHK'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL45,CONVERT
         ROUTINE    CTA6LL49,CONVERT
         ROUTINE    CTA6LL50,CONVERT
         ROUTINE    CTA6LL51,CONVERT
         LABEL 'DIF B CHK','ADR ADDR HS 8-15','ADR ADDR HS 16-23','ADR C
               ADDR HS 24-31'
         LINE  (22,26),(1,26)
         ROUTINE    CTA6LL53,CONVERT
         ROUTINE    CTA6LL56,CONVERT
         ROUTINE    CTA6LL57,CONVERT
         LABEL 'ADR ADDR FS 8-15','ADR ADDR FS 16-23','ADR ADDR HS 24-3C
               1'
         LINE  ,(19,1)
         LABEL 'M/F FRAME B1 CHANNEL AND STORAGE STATUS'
         LINE  (22,26),(1,26)
         ROUTINE    CTB1LK09,CONVERT
         ROUTINE    CTB1LK10,CONVERT
         ROUTINE    CTB1LK11,CONVERT
         LABEL 'BFR INV LOC PTY CK','BFR INV REM PTY CK','BFR INV OVRUNC
                CK'
         LINE  ,(19,1)
         LABEL 'M/F FRAME B3 HSM AND/OR EXTD CHAN'
         LINE  (22,26),(1,26)
         ROUTINE    CTB3LK00,CONVERT
         ROUTINE    CTB3LK01,CONVERT
         ROUTINE    CTB3LK02,CONVERT
         ROUTINE    CTB3LK03,CONVERT
         LABEL 'RESIDUE CHK','PTY MPLR CHK','PTY MPCD CHK','RSDUE CTL CC
               HK MPCD'
         LINE  (22,26),(1,26)
         ROUTINE    CTB3LK04,CONVERT
         ROUTINE    CTB3LK05,CONVERT
         ROUTINE    CTB3LK08,CONVERT
         ROUTINE    CTB3LK09,CONVERT
         LABEL 'RSDUE CTL CHK SUM','RSDUE CTL CHK CARRY','RSDUE CTL CHKC
               MPLR','RSDUE CTL CHK SPAR'
         LINE  (22,26),(1,26)
         ROUTINE    CTB3LK11,CONVERT
         LABEL 'RSD CTL CK ACT RSLT'
         LINE  ,(1,1),SKIP=1                                   @YA07735
         ROUTINE NEWVER,CHKEMU                                 @YA07735
         LABEL '  '                                            @YA07735
         LINE  ,(19,1)
         LABEL 'M/F FRAME B5 7094 EMULATOR FEATURE'
         LINE  (22,26),(1,26)
         ROUTINE    CTB5LK12,CONVERT
         ROUTINE    CTB5LK13,CONVERT
         LABEL 'TSLTR INPUT','WCS 108-125'
         LINE   ,                                              @YA07735
         ROUTINE NEWVER,JUMP                                   @YA07735
         LABEL '  '                                            @YA07735
LN7080   LINE  ,(19,1)                                         @YA07735
LB7080   LABEL 'M/F FRAME B6  7080 EMULATOR FEATURE'           @YA07735
         LINE  (22,26),(1,26)                                  @YA07735
         ROUTINE CTB6LK18,CONVERT                              @YA07735
         ROUTINE CTB6LK19,CONVERT                              @YA07735
         ROUTINE CTB6LK20,CONVERT                              @YA07735
         LABEL 'WCS 108-125','A SIDE ERR','B SIDE ERR'         @YA07735
         LINE   ,                                              @YA07735
         ROUTINE NEWVER,JUMP                                   @YA07735
         LABEL '  '                                            @YA07735
LN7074   LINE  ,(19,1)                                         @YA07735
LB7074   LABEL 'M/F FRAME B6  7074 EMULATOR FEATURE'           @YA07735
         LINE  (22,26),(1,26)                                  @YA07735
         ROUTINE CTB6LK13,CONVERT                              @YA07735
         LABEL 'WCS ERROR'                                     @YA07735
LNJUMP   LINE  ,(19,1)                                         @YA07735
LBJUMP   LABEL 'M/F FRAME C0 FLT ADDR REGS AND SPF'            @YA07735
         LINE  (22,26),(1,26)
         ROUTINE    YCPU,MODCHK
         LABEL ' '
         LINE
         ROUTINE    CTC0LK00,CONVERT
         ROUTINE    CTC0LK01,CONVERT
         ROUTINE    CTC0LK02,CONVERT
         ROUTINE    CTC0LK03,CONVERT
         LABEL 'ST PROT CK ADR','ST PROT CK IN-KEY','ST PROT CK INBUF',C
               'ST PROT CK OUT-KEY'
         LINE  (22,26),(1,26)
         ROUTINE    CTC0LK08,CONVERT
         LABEL 'ST PROT CK R/C'
         LINE
         ROUTINE    YCPU,C1BR
         LABEL ' '
LIN168   LINE  (22,26),(1,26)
         ROUTINE    CTC0LK01,CONVERT
         ROUTINE    CTC0LK03,CONVERT
         ROUTINE    CTC0LK04,CONVERT
         ROUTINE    CTC0LK05,CONVERT
LAB168   LABEL 'ST PROT CK IN-KEY','ST PROT CK OUT-KEY','ST PROT CK REFC
               ','ST PROT CK CHNG'
         LINE  (22,26),(1,26)
         ROUTINE    CTC0LK29,CONVERT
         LABEL 'SCU PREFIX CK'
C1LINE   LINE  (22,26),(19,1)
C1LAB    LABEL 'M/F FRAME C1 STORAGE STATUS'
         LINE  (22,26),(1,26)
         ROUTINE    CTC1LK09,CONVERT
* (UNSUPPORTED ITEM C1LK10 DELETED)                            @ZA34990
         ROUTINE    CTC1LK11,CONVERT
         ROUTINE    CTC1LK12,CONVERT
         LABEL 'STOK CK BFR','STOK CK STO PTY','STOK CK ID'    @ZA34990
         LINE  (22,26),(1,26)
         ROUTINE    CTC1LK20,CONVERT
         ROUTINE    CTC1LK21,CONVERT
         ROUTINE    CTC1LK24,CONVERT
         ROUTINE    CTC1LK25,CONVERT
         LABEL 'TIR PTY,CK','TAL HS CK 8-15','TAL HS CK 16-23','TAL AS C
               CK 24-30'
         LINE  (22,26),(1,26)
         ROUTINE    CTC1LL41,CONVERT
         ROUTINE    CTC1LL42,CONVERT
         ROUTINE    CTC1LL43,CONVERT
         ROUTINE    CTC1LL44,CONVERT
         LABEL 'DLAT CK MULTI CMPR','DLAT CK CMPR','DLAT CK INKEY','DLAC
               T CK OUTKEY'
         LINE  (22,26),(1,26)
         ROUTINE    CTC1LL45,CONVERT
* (UNSUPPORTED ITEM C1LL52 DELETED)                            @ZA34990
         ROUTINE    CTC1LL53,CONVERT
         ROUTINE    CTC1LL56,CONVERT
         LABEL 'DLAT CK RA','TAL FS CK 8-15','TAL FS CK 16-23' @ZA34990
         LINE  (22,26),(1,26)
         ROUTINE    CTC1LL57,CONVERT
         LABEL 'TAL FS CK 24-30'
         LINE
         ROUTINE    YDUM1,FREECTR
         LABEL ' '
         DC    X'FF'
         DC    XL6'00'
         DC    C'$'
LABELS   EQU   *
         LSTART
         END
