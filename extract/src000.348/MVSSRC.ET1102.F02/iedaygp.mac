         TITLE 'IEDAYGP - TYPE 1 SVC PORTION OF TGET AND TPUT'
IEDAYGP  CSECT                                                  YS02019
         GBLC  &LIB                                            @Z944FIX
&LIB     SETC  'LIB4'                                          @Z944FIX
*                   VS- 2 RELEASE 3.7 MAINT
*
*
*
*  C 314040,314060                                              ZA26776
*  C 917094                                                     ZA25139
*  C 763039                                                     ZA24904
*  D 261100,261200                                              ZA16628
*  A 266700-267000,268600                                       ZA16628
*A262000-253000                                                 ZA14775
*                                                              @ZA12530
*                                                              @ZA12530
*304500,304800                                                  ZA12530
         SPACE 2
***********************************************************************
***** US02278 FIXES APAR OS60002 *****                          SA60002
***** UY70029 IS THE SAME AS US02278, BUT FOR VS *****          YA00677
*1150113800,203300,522900,945580                                 S22028
*1150113800,856600                                               M1800
*1150306000,333900                                               M1770
*1150113800,840600,842600,849600,868600-879600,886600-889600,    M0139
*1150923480-923520                                               M0139
*                                                                     *
*                                                                S21A12
*1150113800,167400-173200,178900,180000-182700,183600-190800,    M0094
*1150203400-204300,227700,229500,265500,399600,522900,582300,    M0094
*1150593100,598500,606600-607500,623800,632100,664200-665100,    M0094
*1150690300,706500,708300,716400,723600,742500-743400,751500-    M0094
*1150754200,758700,818560-818590,818740-818950,819100-819160,    M0094
*1150819190,819340-819370,820800,839600,895000,898000,900800,    M0094
*1150901600,902600,904200                                        M0094
*1150036000,113800,128700,130500,771300-774900,784800,798300,    S21008
*1150816300-818100,819000,832500-893700,894600-909320            S21008
*1150                                                            M0103
*                                                                M2152
*                                                                M3280
*                                                                M0707
*0000823980,825700                                               M0019
*0000338400                                                      TS1615
*0000                                                            TS0018
*                                                                M0661
*0000                                                            TS0020
*                                                                TS1628
*                                                                M1479
*                                                                M2688
*                                                                 M3396
*                                                                M2793
*                                                                M4022
*                                                                 M1966
*                                                                 M5113
*                                                                 M4415
*                                                                 M5442
*                                                                 M5718
*                                                                     *
*                   RELEASE 2, VS-2, DELETIONS                        *
*                                                                     *
*D035100-037800,117000,132700,153900,156600,157500,157900       YS02019
*D160200,183400,765900-906000,923440-924100,924700              YS02019
*
*                                       3/28/73                 VS00129
*                                       5/30/73                 YM01246
*                    RELEASE 3  VS/2  CHANGES                  @ZA12528
*                                                              @ZA12528
*                                                              @ZA12528
*  A 507680-508000,509700                                       ZA12528
*  C 270090                                                     ZA12534
*0000114100,270080,270084                                      @ZA11573
*0000114100,244344,244394,244420,314052                        @ZA11104
*0000114100,284400,305200-305500,313361,313362,313842          @ZA10217
*0000114100,244344-244454,313281-313284,314001-314023          @ZA07613
*0000914701,914840                                             @ZA05453
*C114100                                                        ZA02652
*A270041,270042                                                 ZA02652
*A313210-313300                                                 ZA02652
*C114100                                                        ZA01354
*A178300,178400,265100-265400                                   ZA01354
*
* STATUS -                                                            *
*    CHANGE LEVEL 003                                           YS02019
*                                                                     *
* FUNCTION -                                                          *
*                                                                     *
*    THIS MODULE HAS THREE FUNCTIONS & IS DIVIDED INTO THREE          *
*    PARTS (ENTRIES 18, 19 AND 20) INTRODUCTORY COMMENTS FOR          *
*    THE LATTER TWO ENTRIES APPEAR AT THEIR RESPECTIVE                *
*    BEGINNINGS.                                                      *
*                                                                     *
*    THE FUNCTION OF QTIP0180 IS TO PERFORM THE EDIT AND MOVE         *
*    STEPS OF TGET. THESE STEPS INCLUDE- THE REMOVAL OF ALL           *
*    CONTROL CHARACTERS BUT HORIZONTAL TAB AND BACKSPACE (IF          *
*    BACKSPACE IS NOT USED FOR CHARACTER DELETE) FROM EDIT            *
*    TYPE MESSAGES, THE REMOVAL OF CARRIAGE RETURN OR NEW             *
*    LINE CONTROL CHARACTERS FROM THE END OF ALL MESSAGES,            *
*    THE REMOVAL OF UP TO ONE LINE FEED CONTROL CHARACTER             *
*    IF IT IS AT END OF MESSAGE AFTER CR OR NL HAS BEEN               *
*    REMOVED, MOVEMENT OF DATA FROM TS BUFFERS TO USER                *
*    BUFFER, THE PADDING WITH BLANKS ANY UNFILLED PORTION OF          *
*    THE USERS BUFFER ON EDIT TYPE MESSAGES, RETURNING EMPTY          *
*    TS BUFFERS TO THE FREE QUEUE AND UPDATE THE FREE AND             *
*    INPUT QUEUE COUNTS.                                              *
*                                                                     *
* ENTRY POINTS                                                        *
*                                                                     *
*         QTIP0180 - ENTRY FROM MODULE IGC0009C TO PERFORM            *
*                    INPUT EDITING AND DATA MOVE FOR TGET.            *
*                                                                     *
*         QTIP0190 - ENTRY FROM MODULE IGG09301 OR IGG09302           *
*                    TO PERFORM MOVE OF DATA FOR TPUT.                *
*                                                                     *
*         QTIP0290 - ENTRY FROM ABEND TO CLEAN UP                     *
*                    ANY TSBECB'S WAITED ON BY THE                    *
*                    ABENDING TASK.                                   *
*   NOTE THAT, EXCEPT FOR QTIP0290, EVERY ENTRY IS VIA BRANCH-        *
*                   L    0,ENTRYCD      ENTRY CODE                    *
*                   L    15,TSCVTQTP    QTIP ENTRY                    *
*                   BALR 14,15          GO TO QTIP                    *
*    BRANCH TABLE WITHIN QTIP (MODULE IKJGGQT0) WILL USE              *
*    THE ENTRY CODE TO BRANCH TO THE PROPER ENTRY                     *
*                                                                     *
* INPUT                                                               *
*                                                                     *
*    UPON ENTRY TO QTIP0180 THE FOLLOWING REGISTERS CONTAIN           *
*    USABLE INFORMATION                                               *
*                                                                     *
*         2- POINTER TO TS BUFFER , 5 - POINTER TO SVRB               *
*         9- POINTER TO TSB, 10- POINTER TO TIOCRPT                   *
*         12- BASE REGISTER (LOADED IN IKJGGQT0), 14- RETURN ADDR     *
*                                                                     *
*    THE EXTENDED SAVE AREA OF THE SVRB CONTAINS THE FOLLOWING        *
*    INFORMATION AT THE OFFSETS INDICATED                             *
*                                                                     *
*         00 - TJID OF TASK (TWO BYTES)                               *
*         02 - SIZE OF USER BUFFER (TWO BYTES)                        *
*         04 - FLAG BYTE OF OPTIONS REQUESTED (ONE BYTE)              *
*         05 - POINTER TO USER BUFFER (THREE BYTES)                   *
*                                                                     *
* OUTPUT                                                              *
*                                                                     *
*    UPON LEAVING QTIP0180 REGISTERS 3 THRU 11 WILL BE THE            *
*    SAME AS THEY WERE ON ENTRY.                                      *
*                                                                     *
*    REGISTER 0 WILL CONTAIN THE RETURN CODE                          *
*         00 - SUCCESSFUL                                             *
*         0C - USER BUFFER TOO SMALL FOR MESSAGE                      *
*                                                                     *
*         REGISTER 1 WILL CONTAIN THE COUNT OF DATA MOVED             *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*                                                                     *
*         IEDAYQBR - BUFFER RETURN SUBROUTINE IN IEDAYQT              *
*                                                                     *
* EXITS,NORMAL                                                        *
*                                                                     *
*         EXIT IS MADE BY BRANCHING TO ADDRESS IN RETURN REG          *
*                                                                     *
* EXITS,ERROR                                                         *
*                                                                     *
*         THERE ARE NO ERROR EXITS FOR THIS ROUTINE                   *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*                                                                     *
*    THE TABLES USED BY THIS ROUTINE ARE DESCRIBED BY                 *
*    THE DSECTS AT THE END OF THE LISTING.                            *
*                                                                     *
* ATTRIBUTES                                                          *
*                                                                     *
*    REENTRANT, REFRESHABLE, PRIVILEGED, HOLDS LOCAL AND CMS LOCKS,   *
*    RUNS IN USER KEY AND KEY 0                                       *
* NOTES                                                               *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*                                                                     *
*    THE OPERATION OF THIS MODULE DEPENDS UPON THE FOLLOWING          *
*    PROPERTIES OF THE INTERNAL REPRESENTATION OF THE EXTERNAL        *
*    CHARACTER SET- NO PRINTABLE CHARACTER HAVING A HEX VALUE         *
*    LESS THAN 40, HORIZONTAL TAB EQUAL TO X'05', CARRIAGE            *
*    RETURN EQUAL TO X'0D', NEW LINE EQUAL TO X'15', BACKSPACE        *
*    EQUAL TO X'16', LINE FEED EQUAL TO X'25',                        *
*    STX LINE CTL CHAR EQUAL TO X'02', ETB LINE CTL CHAR              *
*    EQUAL TO X'26',SOH DEVICE CTL CHAR EQUAL TO X'01',               *
*    SBA DEVICE CTL CHAR EQUAL TO X'11'                               *
*    BLANK EQUAL TO X'40', ILLEGAL CHARACTER EQUAL TO X'3F'.          *
*    THE SPECIFIC INSTRUCTIONS WHICH REQUIRE MODIFICATION IF          *
*    THESE PROPERTIES OF THE CHARACTER SET ARE CHANGED MAY BE         *
*    IDENTIFIED BY- BLNKCHAR, BKSPCHAR, HTCHAR, NLCHAR, LFCHAR,       *
*    CRCHAR, ILLCHAR, STXCHAR, ETBCHAR, SOHCHAR,  AND SBACHAR.        *
*                                                                     *
* NOTES                                                               *
*                                                                     *
*    NONE                                                             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*****                                                             *****
*****               REGISTER EQUATES                              *****
*****                                                             *****
***********************************************************************
         DC    C'IEDAYGP'               MODULE IDENTIFICATION
         DC    X'7131'                  DATE - 05/11/77        @ZA16628
         DS    0H
         SPACE 2
         ENTRY QTIP0180
         ENTRY QTIP0190
         ENTRY QTIP0290
         SPACE
R0       EQU   0                        USED TO SPEED ASSEMBLY
RCODE    EQU   0                        RETURN CODE
RCNT     EQU   1                        COUNT OF DATA MOVED
RBUF     EQU   2                        POINTER TO TS BUFFER
RCVT     EQU   3                        POINTER TO CVT
RBN      EQU   3                        NEXT BYTE TO BE SCANNED
RSAVE    EQU   4                        WORK REGISTER
RTCB     EQU   4                        POINTER TO TCB
RUBN     EQU   5                        USER BFR POSITION WHERE
*                                       NEXT BYTE GOES
RSVRB    EQU   5                        SVRB POINTER
RQCB     EQU   6                        QCB POINTER              S21008
RUBE     EQU   6                        END OF USER BUFFER
RTBASE   EQU   7                        TEMPORARY BASE REGISTER  S21008
RLVC     EQU   7                        PTR TO TS BFR CONTAINING
*                                       A VALID CHAR NOT MOVED
RASCB    EQU   8                        POINTER TO ASCB         YS02019
RTSB     EQU   9                        POINTER TO TSB
RRPT     EQU   10                       POINTER TO TIOCRPT
RTSI     EQU   11                       TSINPUT QCB POINTER
RTCX     EQU   11                       POINTER TO TCAM CVT EXT YS02019
RASVT    EQU   11                       POINTER TO ASVT         YS02019
RBE      EQU   11                       POINTER TO END OF TS BFR
RECBP    EQU   11                       ECB POINTER FOR POST
RBASE    EQU   12                       BASE REG
RAVT     EQU   13                       AVT POINTER
RTJID    EQU   13                       TJID
RXSA     EQU   13                       TEMP SVRB POINTER
RETURN   EQU   14                       RETURN ADDRESS
RGOTO    EQU   15                       BRANCH ADDRESS
RWRK     EQU   15                       WORK REGISTER
         EJECT
***********************************************************************
*****                                                             *****
*****               CONSTANT EQUATES                              *****
*****                                                             *****
***********************************************************************
K0       EQU   0                        OFFSET
K1       EQU   1                        OFFSET & INCREMENT & SZ
K2       EQU   2                        OFFSET AND SIZE         YS02019
K3       EQU   3                        OFFSET AND SIZE
K4       EQU   4                        OFFSET AND SIZE
SAVER14  EQU   12                       OFFSET TO THE 4TH WORD  YS02019
*                                       IN TIOCSAVE             YS02019
K16      EQU   16                       OFFSET
K24      EQU   24                       SHIFT CONSTANT
TPQSAVE  EQU   44                       OFFSET TO LAST 6 WORDS  YS02019
*                                       IN TIOCSAVE FOR AYTPQ   YS02019
*                                       TO USE                  YS02019
         SPACE 3
***
***                 OTHER EQUATES
***
RC0C     EQU   X'0C'                    USER BFR TOO SMALL CODE
KZIP     EQU   X'00'                    ZERO LENGTH
KONE     EQU   X'01'                    LENGTH OF ONE
OFF      EQU   X'FF'                    TO TURN OFF SELECTED BIT
HTCHAR   EQU   X'05'                    HORIZONTA TAB
CRCHAR   EQU   X'0D'                    CHARRIAGE RETURN
NLCHAR   EQU   X'15'                    NEW LINE
BKSPCHAR EQU   X'16'                    BACKSPACE
LFCHAR   EQU   X'25'                    LINE FEED
STXCHAR  EQU   X'02'                    STX CONTROL CHAR        ZA01354
ETBCHAR  EQU   X'26'                    ETB CONTROL CHAR        ZA01354
ILLCHAR  EQU   X'3F'                    TCAM SUBSTITUTES THIS FOR ILLE -
                                        GAL CHARACTERS
BLNKCHAR EQU   X'40'                    BLANK
SOHCHAR  EQU   X'01'                    SOH CHARACTER            S22028
SBACHAR  EQU   X'11'                    SBA CHARACTER            S22028
PLUSCHAR EQU   C'+'                     TO SHOW NONAUTH USER    YS02019
WAITBIT  EQU   X'80'                    ECB IS WAITED ON        YM03998
***
***                 MASKS FOR BCR INSTRUCTIONS
***
ONES     EQU   1                        AFTER TEST UNDER MASK
NOTONES  EQU   14                       AFTER TEST UNDER MASK
EQUAL    EQU   8                        AFTER COMPARE INSTRUCTIONS
         EJECT
QTIP0180 EQU   *
         SPACE 4
***********************************************************************
***********************************************************************
*****                                                             *****
*****          QTIP ENTRY FOR EDITING AND MOVEMENT OF DATA        *****
*****          FROM TS BUFFER(S) TO USER BUFFER.                  *****
*****                                                             *****
***********************************************************************
***********************************************************************
         SPACE 2
         USING *,RBASE
         USING RBSECT,RSVRB                                      M0094
         DROP  RSVRB                                             M0094
         LR    RXSA,RSVRB               SAVE RB POINTER          M0094
         USING RBSECT,RXSA                                       M0094
         SR    RCODE,RCODE              CLEAR
         SR    RCNT,RCNT                CLEAR
         SR    RLVC,RLVC                CLEAR
         USING TIOCBUF,RBUF
         USING TSB,RTSB
         USING TIOCRPT,RRPT
         SPACE 2
***                                                             YS02019
***                  SAVE SVC CALLER'S KEY                      YS02019
***                                                             YS02019
         L     RTCB,RBLINK              NEXT RB ADDRESS         YS02019
         IC    RTCB,RBOPSW+K1-RBBASIC(,RTCB)  KEY FROM RB OPSW  YS02019
         MODESET EXTKEY=SUPR            CHANGE TO KEY 0         YS02019
         STC   RTCB,XSAUSERK            SAVE CALLER'S KEY       YS02019
         MODESET EXTKEY=TCAM            GET BACK TO TCAM'S KEY  YS02019
         SPACE 2                                                YS02019
***
***                 PLACE NEXT MESSAGE ONTO THE TRAILER
***                 QUEUE TO PROCESS
***
         CLC   TSBITBFP(K3),KZERO       ANY TRAILER QUEUE MSG
         BNE   QTIE0200                 IF PARTIAL MSG
         MVC   TSBIBFP(K3),BUFFHEAD     LINK NEXT MSG TO QUEUE
         LA    RBUF,K0(R0,RBUF)         CLEAR FIRST BYTE
         IC    RWRK,TSBITBFP-K1         GET FLAG BYTE
         SLL   RWRK,K24                 LEFT ADJUST FLAG
         OR    RWRK,RBUF                ADD FLAG TO PTR
         ST    RWRK,TSBITBFP-K1         UPDATE QUEUE
         SPACE 2
QTIE0200 EQU   *
***
***                 SET UP USER BUFFER POINTERS
***
         L     RUBN,XSAPRM1             GET ADDR OF USER BUFFER  M0094
         LA    RUBN,K0(R0,RUBN)         DROP FLAG BYTE
         LH    RUBE,XSAPRMSZ            GET SIZE OF USER BUFFER  M0094
         AR    RUBE,RUBN                END OF USER BUFFER
         CLI   BUFFLNTH,K0              NULL LINE
         BNE   QTIE0300                 IF NOT NULL LINE        YS02019
         MODESET KEYADDR=XSAUSERK,WORKREG=4 GET INTO CALLER KEY YS02019
         B     QTIE7000                 GO TO PAD USER'S BFR    YS02019
         SPACE 2
QTIE0300 EQU   *
***
***                 SET UP TS BUFFER DATA POINTERS
***
         LR    RBN,RBUF                 START OF TS BFR
         SR    RWRK,RWRK
         IC    RWRK,BUFFOFST            DATA OFFSET
         AR    RBN,RWRK                 POINTER TO START OF DATA
         SR    RBE,RBE
         IC    RBE,BUFFLNTH             DATA LENGTH
         TM    BUFFFL1,BUFFHDR          IS THIS A HDR BFR        S22028
         BZ    QTIE0350                 BR IF NO                 S22028
         TM    BUFFFL2,BUFF3270         DOES THIS BFR HAVE 3270  S22028
*                                       CONTROL CHARACTERS       S22028
         BZ    QTIE0350                 BR IF NO                 S22028
         TM    XSAOPTNS,MASIS           ASIS OPTION SPECIFIED    S22028
         BO    QTIE0350                 BR IF YES                S22028
         CLI   BUFFLNTH,K3              IS DATA LENGTH LESS THAN S22028
*                                       3                        S22028
         BNL   QTIE0320                 NO, BRANCH AROUND        S22028
         LA    RBN,K1(R0,RBN)           STRIP FIRST CHAR FOR     S22028
*                                       EDIT                     S22028
         BCTR  RBE,R0                   MINUS 1 FROM DATA LNG    S22028
         B     QTIE0330                 GOTO UPDATE TS BFR       S22028
         SPACE 1
QTIE0320 EQU   *                                                 S22028
         LA    RBN,K3(R0,RBN)           STRIP 3 BYTES FOR EDIT   S22028
         SH    RBE,KTHREE               SUBTRACT 3 FROM DATA LGN S22028
         CLI   K0(RBN),SBACHAR          CHECK FOR SBA CHAR       S22028
         BNE   QTIE0330                 BRANCH IF NOT            S22028
         LA    RBN,K3(R0,RBN)           STRIP 3 BYTES FOR EDIT   S22028
         SH    RBE,KTHREE               SUBTRACT 3 FROM DATA LGN S22028
         SPACE 1                                                 S22028
QTIE0330 EQU   *                                                 S22028
         STC   RBE,BUFFLNTH             UPDATE LNG IN TS BFR     S22028
         LR    RWRK,RBUF                GET TS BFR ADDR          S22028
         SR    RWRK,RBN                 OFFSET IN NEGATIVE       S22028
         LPR   RWRK,RWRK                GET POSITIVE VALUE       S22028
         STC   RWRK,BUFFOFST            UPDATE OFFSET IN TS BFR  S22028
         NI    BUFFFL2,OFF-BUFF3270     INDICATE CONTROL CHARS   S22028
*                                       ALREADY STRIPPED         S22028
         SPACE 1
QTIE0350 EQU   *                                                 S22028
         AR    RBE,RBN                  POINTER TO END OF DATA
         CLC   TSBSBASV(K1),KZERO CONTROL CHAR TO SKIP?        @ZA11104
         BNH   QTIE0400                 NO GO CHECK DATA       @ZA07613
         SR    RWRK,RWRK                ZERO WORK REG.         @ZA07613
         IC    RWRK,BUFFOFST            GET OFFSET             @ZA07613
         SR    RSAVE,RSAVE              ZERO WORK REG.         @ZA07613
         IC    RSAVE,TSBSBASV           GET # OF CHARS TO SKIP @ZA11104
         AR    RWRK,RSAVE               ADD # OF CHARS TO OFFST@ZA07613
         STC   RWRK,BUFFOFST            STORE NEW OFFSET       @ZA07613
         SR    RWRK,RWRK                ZERO WORK REG          @ZA07613
         STC   RWRK,TSBSBASV            ZERO WORK AREA         @ZA11104
         IC    RWRK,BUFFLNTH            GET LENGTH             @ZA07613
         SR    RWRK,RSAVE               SUB. # OF CHARS FROM LN@ZA07613
         STC   RWRK,BUFFLNTH            STORE NEW LENGTH       @ZA07613
         AR    RBN,RSAVE                ADD # TO CHAR. POINTER @ZA07613
         SPACE 2
QTIE0400 EQU   *
***
***                 CHECK IF ALL DATA SCANNED
***
         CR    RBN,RBE                  LAST CHAR ALREADY DONE
         BL    QTIE0500                 IF NOT
         CLC   BUFFTRLR(K3),KZERO       IS THIS THE LAST TS
*                                       BFR OF THE MESSAGE
         BE    QTIE6000                 IF SO GO TO END OF DATA
*                                       ROUTINE
         L     RBUF,BUFFTRLR-K1         IF NOT LAST PREPARE
*                                       TO CHECK NEXT BUFFER
         LA    RBUF,K0(R0,RBUF)         CLEAR FIRST BYTE
         B     QTIE0300                 START CHECK OF NEXT BFR
         SPACE 2
QTIE0500 EQU   *
***
***                 CHECK NEXT CHARACTER IN TS BUFFER
***
         CLI   TSBCHDCC,K0              0 MEANS NO DELETE CHAR  OS58447
         BE    QTIE0520                 NO CHAR, DON'T COMPARE  OS58447
         CLC   K0(K1,RBN),TSBCHDCC      IS IT CHAR DELETE CHAR
         BE    QTIE1000                 IF SO HANDLE CHAR DELETE
         SPACE 1
QTIE0520 EQU   *                                                OS58447
         CLI   K0(RBN),ILLCHAR          HEX '3F' IS ILLEGAL FOR ALL
         BE    QTIE0550                 IF ILLEGAL, DON'T MOVE
         CLI   K0(RBN),BLNKCHAR         IS CHARACTER VALID
         BNL   QTIE0600                 IF VALID TRY TO MOVE
*
*                  DON'T MOVE LINE CONTROL CHARACTERS.
*
         CLI   K0(RBN),STXCHAR          STX CHAR?               ZA01354
         BE    QTIE0550                 YES, DON'T MOVE         ZA01354
         CLI   K0(RBN),ETBCHAR          ETB CHAR?               ZA01354
         BE    QTIE0550                 YES, DON'T MOVE         ZA01354
         TM    XSAOPTNS,MASIS           ASIS OPTION SPECIFIED    M0094
         BO    QTIE0600                 IF ASIS TRY TO MOVE
         TM    TSBSTAT,TSB3270          TEST FOR 3270           ZA16628
         BO    QTIE0540                 SKIP BACKSPACE TEST     ZA16628
         CLI   K0(RBN),BKSPCHAR         BACKSPACE CHAR
         BE    QTIE0600                 IF SO TRY TO MOVE
QTIE0540 EQU   *                                                ZA16628
         CLI   K0(RBN),HTCHAR           HORIZONTAL TAB CHAR
         BE    QTIE0600                 IF SO TRY TO MOVE
         TM    TSBSTAT,TSB3270          TEST FOR 3270 TERMINAL   S22028
         BZ    QTIE0550                 BR IF NO                 S22028
         CLI   K0(RBN),SBACHAR          SBA CHARACTER ?         ZA02652
         BE    QTIE0960                 YES SKIP THREE CHAR     ZA02652
         CLI   K0(RBN),SOHCHAR          SOH CHAR                 S22028
         BNE   QTIE0550                 BR IF NO                 S22028
         MODESET EXTKEY=SUPR            CHANGE TO KEY ZERO     @ZA11573
         OI    XSAFLAG2,XSAATR          INDICATE NEXT CHAR IS A  S22028
*                                       3270 ATTRIBUTE BYTE
         B     QTIE0600                 TRY TO MOVE              S22028
         SPACE 1
QTIE0550 EQU   *
***
***                 CHARACTER SHOULD NOT BE MOVED
***
         LTR   RLVC,RLVC                ANY UNMOVED DATA
         BZ    QTIE0900                 IF NOT
         B     QTIE0950                 IF UNMOVED               M1770
         SPACE 2
QTIE0600 EQU   *
***
***                 MOVE CHARACTER TO USER BUFFER
***
         CR    RUBE,RUBN                ANY ROOM LEFT IN BFR
         BNH   QTIE0700                 IF NOT
         SPACE 2                                                YS02019
***                                                             YS02019
***                 ASSUME USER KEY FOR STORE                   YS02019
***                                                             YS02019
         IC    RWRK,K0(,RBN)            GET NEXT CHAR           YS02019
         MODESET KEYADDR=XSAUSERK,WORKREG=4                     YS02019
         STC   RWRK,K0(,RUBN)           STORE NEXT CHAR         YS02019
         MODESET EXTKEY=TCAM                                    YS02019
         SPACE 2                                                YS02019
***                                                             YS02019
***                 UPDATE COUNTS                               YS02019
***                                                             YS02019
         LA    RUBN,K1(R0,RUBN)         POINT TO NEXT USER
*                                       BUFFER SPACE
         LA    RCNT,K1(R0,RCNT)         ADD ONE TO COUNT OF DATA
*                                       MOVED TO USER BUFFER
         B     QTIE0925                 GO UPDATE TS BFR       @ZA10217
         SPACE 2
QTIE0700 EQU   *
***
***                 NO ROOM LEFT IN USER BUFFER
***
         LTR   RLVC,RLVC                WAS THERE A PRIOR VALID
*                                       CHAR THAT DIDN'T MOVE
         BNZ   QTIE0800                 IF THERE WAS
         LR    RLVC,RBUF                SAVE TS BFR PTR
         SPACE 2
QTIE0800 EQU   *
         LA    RBN,K1(R0,RBN)           POINT TO NEXT CHARACTER
*                                       IN TS BUFFER
         LA    RUBN,K1(R0,RUBN)         POINT TO WHERE NEXT CHAR
*                                       WOULD GO IF IT COULD
         B     QTIE0400                 CHECK NEXT CHARACTER
         SPACE 2
QTIE0900 EQU   *
***
***                 UPDATE TS BUFFER PRIOR TO CHECKING
***                 THE NEXT CHARACTER OF THE MESSAGE
***
         TM    TSBSTAT,TSB3270          IS THIS 3270?           ZA12530
         BZ    QTIE0925                 NO GO UPDATE OFST-LNTH  ZA12530
         SPACE
         CR    RUBE,RUBN                ANY ROOM IN USER BFR?  @ZA10217
         BNH   QTIE0950                 IF NOT                 @ZA10217
         SPACE 1
QTIE0925 EQU   *                                               @ZA10217
         SR    RWRK,RWRK
         IC    RWRK,BUFFOFST            DATA OFFSET
         LA    RWRK,K1(R0,RWRK)         INCREMENT BY ONE
         STC   RWRK,BUFFOFST            UPDATE OFFSET
         IC    RWRK,BUFFLNTH            DATA LENGTH
         BCTR  RWRK,R0                  DECREMENT
         STC   RWRK,BUFFLNTH            UPDATE LENGTH
QTIE0950 EQU   *                                                 M1770
         LA    RBN,K1(R0,RBN)           POINT TO NEXT CHAR       M1770
         B     QTIE0400                 CHECK NEXT CHARACTER
QTIE0960 EQU   *                                                ZA02652
         LR    RWRK,RBE                 LOAD END OF BUFFER PTR @ZA07613
         SH    RWRK,KTHREE              SUBTRACT THREE         @ZA07613
         CR    RBN,RWRK                 WITHIN 3 OF END OF BUF.@ZA07613
         BH    QTIE0975                 YES GO CALCULATE       @ZA07613
         SR    RWRK,RWRK                ZERO WORK REG           ZA02652
         CR    RUBE,RUBN                ANY ROOM IN USER BFR?  @ZA10217
         BNH   QTIE0965                 IF NOT                 @ZA10217
         IC    RWRK,BUFFOFST            GET DATA OFFSET         ZA02652
         LA    RWRK,K3(R0,RWRK)         INCREMENT BY THREE      ZA02652
         STC   RWRK,BUFFOFST            UPDATE OFFSET           ZA02652
         IC    RWRK,BUFFLNTH            GET DATA LENGTH         ZA02652
         SH    RWRK,KTHREE              DECREMENT BY THREE      ZA02652
         STC   RWRK,BUFFLNTH            UPDATE LENGTH           ZA02652
         SPACE 1
QTIE0965 EQU   *                                               @ZA10217
         LA    RBN,K3(R0,RBN)           SKIP THREE CHARS        ZA02652
         B     QTIE0400                 CHECK NEXT CHAR         ZA02652
         SPACE 2                                               @ZA07613
***              CALCULATE FOR NUMBER OF CONTROL               @ZA07613
***              CHARACTERS FOLLOWING SBA WITHIN               @ZA07613
***              THIS BUFFER AND FOLLOWING BUFFER.             @ZA07613
         SPACE 2                                               @ZA07613
QTIE0975 EQU   *                                               @ZA07613
         LR    RWRK,RBN                 LOAD CHAR POINTER      @ZA07613
         SR    RWRK,RBE                 HOW MANY CHARACTERS ?  @ZA07613
         LPR   RWRK,RWRK                CONVERT TO POS. NUMBER @ZA07613
         STH   RWRK,BUFFWORK            STORE IN WORK AREA      ZA26776
         SH    RWRK,KTHREE              GET 3'S COMPLEMENT     @ZA07613
         LPR   RWRK,RWRK                CONVERT TO POS NUMBER  @ZA07613
         STC   RWRK,TSBSBASV            PUT # TO SKIP IN NXT BF@ZA11104
         SR    RWRK,RWRK                ZERO WORK REG.         @ZA07613
         LH    RWRK,BUFFWORK            GET # TO SKIP IN THIS 1 ZA26776
         AR    RBN,RWRK                 INCREMENT CHAR PTR     @ZA07613
         IC    RWRK,BUFFOFST            GET BUFFER OFFSET      @ZA07613
         AH    RWRK,BUFFWORK            ADD # OF CHARS TO OFFST@ZA07613
         STC   RWRK,BUFFOFST            STORE NEW OFFSET       @ZA07613
         IC    RWRK,BUFFLNTH            GET LENGTH             @ZA07613
         SH    RWRK,BUFFWORK            SUB # OF CHARS FROM LN @ZA07613
         STC   RWRK,BUFFLNTH            STORE NEW LENGTH       @ZA07613
         B     QTIE0400                 CHECK NEXT CHARACTER   @ZA07613
         SPACE 2
QTIE1000 EQU   *
***********************************************************************
*****                                                             *****
*****               CHARACTER DELETE ROUTINE                      *****
*****                                                             *****
***********************************************************************
         SPACE
         LTR   RCNT,RCNT                ANY DATA MOVED YET
         BZ    QTIE0550                 IF NOTHING TO DELETE
         BCTR  RUBN,R0                  MOVE BACK USER BFR PTR
         LTR   RLVC,RLVC                ANY UNMOVED DATA
         BNZ   QTIE1100                 IF UNMOVED DATA
         BCTR  RCNT,R0                  DECREMENT DATA COUNT
         SPACE 2
         B     QTIE0900                 PREPARE FOR NEXT CHAR
         SPACE 2
QTIE1100 EQU   *
         CR    RUBN,RUBE                HAVE ENOUGH CHARACTERS
*                                       BEEN DELETED TO ACCOUNT
*                                       FOR ALL VALID CHAR'S
*                                       THAT WERE NOT MOVED
         BNE   QTIE0950                 IF NOT                   M1770
         SPACE 2
***
***                 REMOVE ALL VALID NON-MOVED CHARACTERS
***                 FROM TS BUFFERS
***
         CR    RLVC,RBUF                ARE ALL UNMOVED CHARS IN
*                                       TS BFR BEING SCANNED
         BE    QTIE1500                 IF SO
         LR    RSAVE,RBUF               SAVE PRESENT BFR POINTER
         LR    RBUF,RLVC
         SPACE 2
QTIE1300 EQU   *
         MVI   BUFFLNTH,KZIP            ZERO LENGTH
         L     RBUF,BUFFTRLR-K1         NEXT TS BFR PTR
         LA    RBUF,K0(R0,RBUF)         CLEAR FIRST BYTE
         CR    RBUF,RSAVE               ALL BUT PRESENT ZEROED
         BNE   QTIE1300                 IF NOT ZERO NEXT ONE
         SPACE 2
QTIE1500 EQU   *
***
***                 UPDATE PRESENT BFR TO DROP DELETED CHARS
***
         LA    RBN,K1(R0,RBN)           POINT TO NEXT CHAR
         SR    RLVC,RLVC                CLEAR LAST VALID
*                                       CHARACTER BFR POINTER
         LR    RWRK,RBN                 CALCULATE THE CORRECT
         SR    RWRK,RBUF                OFFSET FOR PRESENT BFR
         STC   RWRK,BUFFOFST            AND UPDATE IT
         LR    RWRK,RBE                 CALCULATE THE CORRECT
         SR    RWRK,RBN                 LENGTH FOR PRESENT BFR
         STC   RWRK,BUFFLNTH            AND UPDATE IT            TS1615
         B     QTIE0400                 CHECK NEXT CHAR
         SPACE 3
QTIE6000 EQU   *
***********************************************************************
*****                                                             *****
*****               END OF MESSAGE PROCESSING                     *****
*****                                                             *****
***********************************************************************
         SPACE
         MODESET KEYADDR=XSAUSERK,WORKREG=4  GET CALLER'S KEY   YS02019
         LTR   RLVC,RLVC                ANY UNMOVED DATA
         BNZ   QTIE8000                 IF ANY
         LTR   RCNT,RCNT                ANY DATA MOVED
         BZ    QTIE7000                 IF NOT GO TO PAD
         BCTR  RUBN,R0                  LOOK AT LAST CHAR
         CLI   K0(RUBN),CRCHAR          CARRIAGE RETURN CHAR
         BE    QTIE6100                 IF SO
         CLI   K0(RUBN),NLCHAR          NEW LINE CHAR
         BNE   QTIE6200                 IF NEITHER
         SPACE 2
QTIE6100 EQU   *
         BCTR  RCNT,R0                  DECREMENT DATA COUNT
         BCTR  RUBN,R0                  LOOK AT PRECEEDING CHAR
         LTR   RCNT,RCNT                ANY DATA LEFT
         BZ    QTIE6500                 IF NOT
         SPACE 2
QTIE6200 EQU   *
***
***                 CHECK FOR LINE FEED
***
         CLI   K0(RUBN),LFCHAR          IS THIS A LINE FEED
         BNE   QTIE6500                 IF NOT
         BCTR  RCNT,R0                  DECREMENT COUNT
         B     QTIE7000                 GO TO PAD
         SPACE 2
QTIE6500 EQU   *
         LA    RUBN,K1(R0,RUBN)         RE-ADJUST USER DATA PTR
         SPACE 2
QTIE7000 EQU   *
***
***                 PAD USER BUFFER WITH BLANKS
***
         TM    XSAOPTNS,MASIS           ASIS OPTION SPECIFIED    M0094
         BO    QTIE7250                 IF SO DON'T PAD         YS02019
         LR    RWRK,RUBE                END OF USER BFR
         SR    RWRK,RUBN                AMOUNT OF BLANKS NEEDED
         LTR   RWRK,RWRK                ANY BLANKS NEEDED
         BZ    QTIE7250                 IF NONE GO TO END RTN   YS02019
         MVI   K0(RUBN),BLNKCHAR        BLANK FIRST BYTE
         BCTR  RWRK,R0                  DECREMENT NO. OF BLANKS
         LTR   RWRK,RWRK                ANY MORE TO BLANK
         BZ    QTIE7250                 NO GET TCAMS KEY        YS02019
         SPACE 2
QTIE7200 EQU   *
         CH    RWRK,KMAX                MORE THAN 255 MORE BLNKS
         BH    QTIE7300                 IF TOO MANY FOR ONE MOVE
         BCTR  RWRK,R0                  DECREMENT FOR EXECUTE
         EX    RWRK,QTIEPAD             PAD REMAINDER OF BFR
         SPACE 2
QTIE7250 EQU   *                                                YS02019
         MODESET EXTKEY=TCAM            GET TCAM'S KEY          YS02019
         B     QTIE9500                 GO TO END ROUTINE
         SPACE 2
QTIE7300 EQU   *
***
***                 PAD NEXT 255 BYTES
***
         LH    RSAVE,KMAX               NO. TO BE MOVED
         BCTR  RSAVE,R0                 DECREMENT FOR EXECUTE
         EX    RSAVE,QTIEPAD            PAD NEXT 255 BYTES
         AH    RUBN,KMAX                ADJUST POINTER
         SH    RWRK,KMAX                ADJUST BLANK COUNT
         B     QTIE7200                 RECHECK NO. LEFT
         SPACE 3
QTIE8000 EQU   *
***
***                 CHECK FOR  CR, NL AND LF NOT MOVED
***
         MODESET EXTKEY=TCAM            GET INTO TCAM'S KEY     YS02019
         BCTR  RBN,R0                   LOOK AT LAST CHAR OF MSG
         CLI   K0(RBN),CRCHAR           LAST CHAR CARRIAGE RET
         BE    QTIE8200                 IF SO DROP IT
         CLI   K0(RBN),NLCHAR           LAST CHAR NEW LINE
         BE    QTIE8200                 IF SO DROP IT
         CLI   K0(RBN),LFCHAR           LAST CHAR
         BE    QTIE8500                 IF SO MAY DROP IT
         SPACE 2
QTIE8100 EQU   *
***
***                 MESSAGE TOO LONG RETURN
***
         LA    RCODE,RC0C               RETURN CODE
         B     QTIE9500                 GO TO END ROUTINE
         SPACE 2
QTIE8200 EQU   *
         IC    RWRK,BUFFLNTH            GET DATA LENGTH
         BCTR  RWRK,R0                  DECREMENT ONE
         STC   RWRK,BUFFLNTH            UPDATE LENGTH
         BCTR  RUBN,R0                  UPDATE USER BFR PTR
         CLI   BUFFLNTH,K0              LENGTH OF TS BFR NOW 0
         BNZ   QTIE8400                 IF NOT ZERO
         CR    RLVC,RBUF                IS ALL OF MSG MOVED
         BNE   QTIE8300                 IF NOT
         BCTR  RUBN,R0                  DECREMENT USER BFR PTR
         MODESET KEYADDR=XSAUSERK,WORKREG=4  GET CALLER'S KEY   YS02019
         B     QTIE6200                 CHECK IF LAST CHAR
*                                       MOVED WAS LINE FEED
         SPACE 2
QTIE8300 EQU   *
***
***                 CHECK PREVIOUSLY SCANNED TS BUFFER
***                 TO SEE IF ONLY THING LEFT IS ONE LF
***
         LR    RSAVE,RBUF               SAVE PTR TO LAST TS BFR
         LR    RBUF,RLVC                PTR TO BFR W/UNMOVED
*                                       VALID CHARACTER
         CLI   BUFFLNTH,KONE            LENGTH ONE
         BNE   QTIE8100                 MSG TOO LONG
         L     RWRK,BUFFTRLR-K1         TRAILER POINTER
         LA    RWRK,K0(R0,RWRK)         CLEAR FIRST BYTE
         CR    RWRK,RSAVE               ANY TS BUFFERS BETWEEN
*                                       THIS ONE AND LAST ONE
         BNE   QTIE9500                 IF MORE QUIT
         IC    RBN,BUFFOFST             OFFSET TO CHAR
         AR    RBN,RBUF                 POINTER TO CHAR
         B     QTIE9000                 CHECK IF LINE FEED
         SPACE 2
QTIE8400 EQU   *
***
***                 PREPARE TO CHECK PREVIOUS CHAR IN TS BFR
***
         BCTR  RBN,R0                   POINTER TO CHAR
         SPACE 2
QTIE8500 EQU   *
***
***                 CHECK FOR LAST CHAR IN TS BUFFERS BEING LF
***
         CR    RLVC,RBUF                IS THIS LAST BFR
         BNE   QTIE8100                 IF NOT
         CLI   BUFFLNTH,KONE            LENGTH EQUAL ONE
         BNE   QTIE8100                 IF MORE
         SPACE 2
QTIE9000 EQU   *
***
***                 CHECK CHARACTER KNOWN TO BE ONLY ONE
***                 NOT MOVED TO USER BUFFER
***
         CLI   K0(RBN),LFCHAR           IS IT LINE FEED
         BNE   QTIE8100                 IF NOT
         MVI   BUFFLNTH,KZIP            ZERO LNTH
         SPACE 3
QTIE9500 EQU   *
***********************************************************************
*****                                                             *****
*****               END OF ROUTINE CLEAN UP                       *****
*****                                                             *****
***********************************************************************
         L     RBUF,TSBITBFP-K1         FIRST TS BFR OF MSG
*                                       JUST MOVED
         CLI   BUFFLNTH,KZIP            BUFFER EMPTY
         BNE   QTIE9900                 IF NOT LEAVE
         SPACE 2
***
***                 REMOVE TS BUFFER FROM INPUT QUEUE
***                 AND PLACE ON FREE QUEUE
***
         MVC   TSBITBFP(K3),BUFFTRLR    UPDATE TRAILER QUEUE
         L     RGOTO,QTIEQBR            ADDRESS OF BFR RETURN   YS02019
         TM    BUFFFL1,BUFFIHOT     BFR ON BOTH QUEUES?         ZA12528
         BZ    QTIE9600             NO, GO FREE BFR             ZA12528
         NI    BUFFFL1,OFF-BUFFIHOT TURN OFF FLAG               ZA12528
         B     QTIE9800             GO HANDLE NEXT BFR          ZA12528
QTIE9600 EQU   *                                                ZA12528
         LR    RSVRB,RCODE              SAVE RETURN CODE        YS02019
         BALR  R0,RGOTO                 GO THERE AND RETURN     YS02019
         LR    RCODE,RSVRB              RESTORE RETURN CODE     YS02019
QTIE9800 EQU   *                                                ZA12528
         SR    RWRK,RWRK
         IC    RWRK,TSBNIBF             NO. OF INPUT BFRS
         BCTR  RWRK,R0                  DECREMENT
         STC   RWRK,TSBNIBF             UPDATE COUNT
         CLC   TSBITBFP(K3),KZERO       ANY MORE BFRS TO FREE
         BNE   QTIE9500                 IF SO CHECK NEXT ONE
         SPACE 2
QTIE9900 EQU   *
***
***                 RESTORE REGISTERS AND LEAVE
***
         LR    RSVRB,RXSA               RESTORE SVRB ADDR       YS02019
         BR    RETURN                   RETURN TO IGC0009C
         SPACE 2
***
***                 MOVE INSTRUCTION FOR BLANK PADDING
***
QTIEPAD  MVC   K1(K1,RUBN),K0(RUBN)     MOVE WITH OVERLAP
         SPACE 2                                                YS02019
***                                                             YS02019
***                 ADDRESS OF BUFFER RETURN ROUTINE            YS02019
***                                                             YS02019
QTIEQBR  DC    V(IEDAYQBR)              IN IEDAYQT              YS02019
         EJECT
***********************************************************************
*                                                                     *
* FUNCTION -                                                          *
*                                                                     *
*    THE FUNCTION OF QTIP0190 IS TO GET A TS BUFFER FROM THE FREE     *
*    QUEUE, PLACE IN THE PROPER LOCATION ON THE OUTPUT QUEUE,         *
*    FORMAT THE BUFFER PREFIX, MOVE DATA FROM USER BUFFER TO THE      *
*    TS BUFFER.                                                       *
*                                                                     *
* ENTRY POINTS                                                        *
*                                                                     *
*    SEE QTIP0180                                                     *
*                                                                     *
* INPUT                                                               *
*                                                                     *
*    UPON ENTRY TO QTIP0190 THE FOLLOWING REGISTERS CONTAIN           *
*    USABLE INFORMATION                                               *
*                                                                     *
*         5- SVRB PTR, 9- TSB PTR, 10- TIOCRPT PTR,                   *
*         13 - SAVE AREA POINTER, 14 - RETURN ADDRESS                 *
*                                                                     *
* OUTPUT                                                              *
*                                                                     *
*    UPON LEAVING QTIP0190 THE TS BUFFER WILL BE COMPLETED            *
*    AS DESCRIBED UNDER FUNCTION, AND THE FIELDS 'XSAUBFRP,' AND      *
*    'XSAUBFRS' WILL BE UPDATED IN THE EXTENDED SAVE AREA.            *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*                                                                     *
*         IEDAYQBA - BUFFER ALLOCATE SUBROUTINE IN IEDAYQT            *
*                                                                     *
* EXITS, NORMAL                                                       *
*                                                                     *
*    EXIT IS MADE BY BRACHING TO THE ADDR IN RETURN REGISTER          *
*                                                                     *
* EXITS, ERROR                                                        *
*                                                                     *
*    THERE ARE NO ERROR EXITS FROM THIS ROUTINE                       *
*                                                                     *
* TABLES/WORK AREAS                                                   *
* ATTRIBUTES                                                          *
* CHARACTER CODE DEPENDENCY                                           *
* NOTE                                                                *
*                                                                     *
*     SEE QTIP0180 FOR ALL OF THESE                                   *
*                                                                     *
***********************************************************************
         DROP  RXSA                                              M0094
         USING RBSECT,RSVRB                                      M0094
         SPACE 4
QTIP0190 EQU   *
         SAVE  (14,12)                  SAVE THE REGISTERS      YS02019
         SPACE 2
***
***                 SET UP RECOVERY ENVIROMENT FOR QTIP 19
***
         MODESET EXTKEY=SUPR            KEY 0 FOR FRR           YM05909
         LA    RBN,QTOMFRR              FRR ROUTINE ADDRESS     YM05909
         SETFRR A,FRRAD=(RBN),WRKREGS=(RUBE,RLVC)               YM05909
         MODESET EXTKEY=TCAM            GET BUFR IN TCAM KEY    YM05909
         SPACE  2
***
***                 GO TO IEDAYQBA TO GET A BUFFER              YS02019
***                                                             YS02019
         L     RGOTO,QTOMQBA            ADDRESS OF ROUTINE      YS02019
         BALR  R0,RGOTO                 REGISTER 2 (RBUF) NOW   YS02019
*                                       HAS A BUFFER ADDRESS    YS02019
         MODESET EXTKEY=SUPR            GET IN SUPERVISOR KEY   YM05909
         OI    XSAFLAG2,XSABFRAL        INDICATE TO ESTAE TIOC  YM05909
*                                       HAS BEEN ALLOCATED      YM05909
         MODESET EXTKEY=TCAM            GET BACK IN TCAM KEY    YM05909
         XC    TIOCBUF(BUFFHDLN),TIOCBUF  CLEAR BUFFER PREFIX   YS02019
         SPACE 2
***
***                 FIND PROPER PLACE ON OUTPUT QUEUE
***                 FOR THE NEXT BUFFER
***
         TM    XSAF,HSW                 HAS HDR BFR BEEN PLACED  M0094
*                                       ON OUTPUT QUEUE YET
         BO    QTOM0500                 IF HDR DONE
         SPACE 2
***
***                 FIND SPOT FOR HEADER BFR
***
         CLC   TSBOBFP(K3),KZERO        ANYTHING ON OUTPUT QUEUE
         BNE   QTOM0100                 IF QUEUE NOT EMPTY
         STCM  RBUF,B'0111',TSBOBFP     LINK BFR TO PREVIOUS    YS02019
         B     QTOM0300                 GO FORMAT HDR BFR
         SPACE 2
QTOM0100 EQU   *
***
***                 FIND END OF QUEUE
***
         L     RSAVE,TSBOBFP-K1         FIRST HDR PTR
         DROP  RBUF
         USING TIOCBUF,RSAVE            TO CHECK OTHER BFRS
         SPACE
QTOM0150 EQU   *
         CLC   BUFFHEAD(K3),KZERO       IS THIS LAST MSG
         BE    QTOM0200                 IF IT IS
         L     RSAVE,BUFFHEAD-K1        IF NOT CHECK NEXT ONE
         B     QTOM0150                 CHECK NEXT MSG
         SPACE 2
QTOM0200 EQU   *
         STCM  RBUF,B'0111',BUFFHEAD    LINK NEW BFR TO END     YS02019
         DROP  RSAVE
         USING TIOCBUF,RBUF
         SPACE 2
QTOM0300 EQU   *
***
***                 FORMAT HEADER BUFFER
***
         SR    RWRK,RWRK                                        YS02019
         ST    RWRK,BUFFHEAD-K1         ZERO FLAG AND HDR PTR   YS02019
         LH    RWRK,XSAPRMTJ            GET DESTINATION TJID     M0094
         LTR   RWRK,RWRK                WAS IT SPECIFIED
         BZ    QTOM0400                 IF NOT
         OI    BUFFFL2,BUFFTJID         INDICATE TJID MESSAGE
QTOM0400 EQU   *
         MVI   BUFFOFST,BUFFHDLN        SET OFFSET
         OI    BUFFFL1,BUFFHDR          HEADER BUFFER INDICATOR
         MVI   BUFFLNTH,K0              SET SIZE TO ZERO        YS02019
         SPACE 2                                                YS02019
***                                                             YS02019
***                 INSERT '+' SIGN IF CALLER NOT AUTHORIZED    YS02019
***                                                             YS02019
         TM    XSAF,XSAAUTH             IS CALLER AUTHORIZED    YS02019
         BO    QTOM2000                 YES, SKIP               YS02019
         MVI   BUFFHDAT,PLUSCHAR        ADD + SIGN              YS02019
         MVI   BUFFLNTH,K1              SIZE IS NOW 1           YS02019
         B     QTOM2000                 FORMAT REST OF BUFFER
         SPACE 2
QTOM0500 EQU   *
***
***                 FIND PROPER LOCATION FOR TRAILER
***
         CLC   TSBOBFP(K3),KZERO        IS HEADER QUEUE EMPTY
         BNE   QTOM0800                 IF NOT, PUT ON HEADER QUEUE
         CLC   TSBOTBFP(K3),KZERO       IS TRAILER QUEUE EMPTY
         BE    QTOM0750                 IF SO, PUT ON TRAILER QUEUE
         SPACE 2
***
***                 FIND END OF TRAILER QUEUE
***
         DROP  RBUF
         USING TIOCBUF,RSAVE
         L     RSAVE,TSBOTBFP-K1        FIRST TRAILER QUEUE BFR
         SPACE
QTOM0600 EQU   *
         CLC   BUFFTRLR(K3),KZERO       IS THIS THE LAST BFR
         BE    QTOM0650                 IF LAST
         L     RSAVE,BUFFTRLR-K1        PREPARE TO CHECK NEXT
         B     QTOM0600                 CHECK NEXT BUFFER
         SPACE 2
QTOM0650 EQU   *
         TM    BUFFFL1,BUFFNLCR         IS THIS MSG COMPLETE
         BZ    QTOM1100                 IF NOT
         SPACE 2
QTOM0700 EQU   *
***
***                 FIND END OF HEADER QUEUE
***
         CLC   TSBOBFP(K3),KZERO        QUEUE EMPTY
         BNE   QTOM0800                 IF NOT EMPTY
         SPACE
QTOM0750 EQU   *
***
***                 PUT BUFFER ONTO TRAILER QUEUE
***
         STCM  RBUF,B'0111',TSBOTBFP    MAKE THIS 1ST ON TRLR Q YS02019
         B     QTOM1200                 FORMAT TRAILER BFR
         SPACE 2
QTOM0800 EQU   *
***
***                 FIND LAST MESSAGE
***
         L     RSAVE,TSBOBFP-K1         FIRST HDR POINTER
         SPACE
QTOM0900 EQU   *
         CLC   BUFFHEAD(K3),KZERO       IS THIS LAST MSG
         BE    QTOM1000                 IF LAST
         L     RSAVE,BUFFHEAD-K1        IF NOT CHECK NEXT ONE
         B     QTOM0900                 CHECK NEXT MSG FOR LAST
         SPACE 2
QTOM1000 EQU   *
***
***                 FIND END OF LAST MESSAGE
***
         CLC   BUFFTRLR(K3),KZERO       IS THIS LAST BUFFER
         BE    QTOM1100                 IF SO LINK NEW BFR
         L     RSAVE,BUFFTRLR-K1        IF NOT PREP TO CHECK
         B     QTOM1000                 THE NEXT BUFFER OF MSG
         SPACE 2
QTOM1100 EQU   *
***
***                 LINK BUFFER TO LAST BUFFER OF LAST MESSAGE
***
         STCM  RBUF,B'0111',BUFFTRLR    MAKE THIS LAST OF MSG   YS02019
         DROP  RSAVE
         USING TIOCBUF,RBUF
         SPACE 2
QTOM1200 EQU   *
***
***                 ADD OFFSET TO THE PREFIX
***
         MVI   BUFFOFST,BUFFTRLN        SET OFFSET
         SPACE 4
QTOM2000 EQU   *
***
***                 FORMAT FLAG BYTE OF BUFFER
***
         SR    RWRK,RWRK
         IC    RWRK,TSBNOBF             GET NO. OF OUTPUT BFRS
         LA    RWRK,K1(R0,RWRK)         ADD ONE TO COUNT
         STC   RWRK,TSBNOBF             UPDATE COUNT
         TM    XSAOPTNS,MCNTRL+MASIS    TEST FOR BOTH = FULLSCR SA60002
         BO    QTOM2050                 BOTH ON, FULL SCREEN    SA60002
         BZ    QTOM2100                 NEITHER, MUST BE EDIT   SA60002
         TM    XSAOPTNS,MASIS           TEST FOR ASIS           SA60002
         BO    QTOM2200                 GO TO ASIS PROCESS      SA60002
         OI    BUFFFL1,BUFFCNTL         MUST BE CONTROL         SA60002
         B     QTOM2200                 GO TO FURTHER CHECK     SA60002
         SPACE 2
QTOM2050 EQU   *                                                SA60002
         OI    BUFFFL1,BUFFCNTL         SET FLAG FOR FULLSCR    SA60002
         SPACE 2
QTOM2100 EQU   *                                                SA60002
         OI    BUFFFL1,BUFFEDIT         SET FLAG FOR EDIT       SA60002
         SPACE 2
QTOM2200 EQU   *
         TM    XSAOPTNS,MHOLD           HOLD OPTION SPECIFIED    M0094
         BZ    QTOM2500                 IF NOT
         OI    BUFFFL1,BUFFHOLD         INDICATE HOLD OPTION
         SPACE 2
QTOM2500 EQU   *
***
***                 DETERMINE AMOUNT OF DATA TO MOVE
***
         SR    RWRK,RWRK                                        YS02019
         SR    RSAVE,RSAVE                                      YS02019
         IC    RWRK,BUFFLNTH            GET CURRENT LENGTH      YS02019
         IC    RSAVE,BUFFOFST           GET CURRENT OFFSET      YS02019
         AR    RSAVE,RWRK               ADD OFFSET AND SIZE     YS02019
         LH    RWRK,XSAUBFRS            USER BUFFER SIZE         M0094
         AR    RWRK,RSAVE               ADD USER BFR & PREFIX
         CH    RWRK,TIOCBFSZ            CAN ALL OF MSG BE MOVED
         BH    QTOM3000                 IF NOT ROOM FOR ALL
         OI    BUFFFL1,BUFFNLCR         INDICATE EOM
         B     QTOM4000                 MOVE ALL DATA
         SPACE 2
QTOM3000 EQU   *
***
***                 MOVE ONE BFR FULL OF DATA
***
         LH    RWRK,TIOCBFSZ            TS BFR SIZE
         SPACE 2
QTOM4000 EQU   *
         SR    RWRK,RSAVE               AMOUNT OF DATA TO MOVE
         SR    RASCB,RASCB                                      YS02019
         IC    RASCB,BUFFLNTH           GET OLD SIZE            YS02019
         AR    RASCB,RWRK               ADD NEW SIZE            YS02019
         STC   RASCB,BUFFLNTH           STORE TOTAL SIZE        YS02019
         LR    RCNT,RBUF                COPY OF TS BFR PTR
         AR    RCNT,RSAVE               POINTER TO WHERE DATA
*                                       IS TO BE MOVED
         L     RSAVE,XSAUBFRP           NEXT DATA FROM HERE      M0094
         BCTR  RWRK,R0                  SUBTRACT ONE FOR EXECUTE
         SPACE 2                                                YS02019
***
***                 REFERENCE BUFFER IN USER KEY BEFORE MOVING IN
***                 KEY ZERO
***
         L     RASCB,TSBCTCB            GET TCB PT FOR MODESET  YS02019
         USING TCB,RASCB                                        YS02019
         MODESET EXTKEY=RBT234,WORKREG=8                        YS02019
         CLI   K0(RSAVE),K0             TOUCH FIRST BYTE        YS02019
         AR    RSAVE,RWRK               GO TO LAST BYTE         YS02019
         CLI   K0(RSAVE),K0             ...AND TOUCH IT         YS02019
         SR    RSAVE,RWRK               BACK TO 1ST BYTE        YS02019
         MODESET EXTKEY=SUPR,WORKREG=8                          YS02019
         DROP  RASCB                                            YS02019
         EX    RWRK,QTOMMOVE            MOVE DATA
         SPACE 2
***
***                 UPDATE USER BUFFER POINTER AND SIZE
***
         LA    RWRK,K1(R0,RWRK)         ADD BACK TO AMOUNT MOVED
         AR    RSAVE,RWRK               ADD AMOUNT TO POINTER
         ST    RSAVE,XSAUBFRP           UPDATE 'NEXT' POINTER    M0094
         LH    RSAVE,XSAUBFRS           GET OLD SIZE             M0094
         SR    RSAVE,RWRK               CALC REMAINING LENGTH    M0094
         STH   RSAVE,XSAUBFRS           STORE UPDATED SIZE       M0094
***
***                 CHECK WHETHER SYSTEM SHOULD BE IN LWAIT
***
         SR    RWRK,RWRK
         CH    RWRK,TIOCNFBF            ANY FREE BFRS AT ALL
         BE    QTOM4100                 NO, PUT SYS INTO LWAIT
         CLC   TIOCNFBF,TIOCUSLW        ARE ENOUGH BFRS FREE
         BNL   QTOM4200                 YES, DON'T PUT SYS IN LWT
QTOM4100 EQU   *
***
***                 PUT SYSTEM IN LWAIT
***
         OI    TIOCFLG,TIOCSYLW         INDICATE SYSTEM LWAIT
QTOM4200 EQU   *
         SETFRR D,WRKREGS=(RCNT,RBUF)   DELETE FRR FROM STACK   YM05909
         SPACE 2
***
***                 RETURN TO USER
***
         RETURN (14,12)                 RESTORE REGS AND RETURN YS02019
         EJECT
***********************************************************************
*                                                                     *
*          Q T I P  19   FRR EXIT ROUTINE                             *
*     THIS ROUTINE GETS CONTROL WHEN AN ABEND OCCURS DURING THE       *
*     PROCESSING OF QTIP 19. IT WILL THEN CHECK IF TIOC BUFFERS       *
*     WERE ALLOCATED,AND IF SO FREE THEM. UPON EXIT FOR THIS          *
*     ROUTINE, R T M WILL CONTINUE ITS TERMINATION PROCESSING.        *
*                                                                     *
*             REGISTERS AT ENTRY                                      *
*                                                                     *
*             REGISTER  1 - SDWA                                      *
*             REGISTER 14 - R T M RETURN ADDRESS                      *
*             REGISTER 15 - ENTRY POINT                               *
*                                                                     *
***********************************************************************
QTOMFRR  EQU   *                                                YM05909
         USING SDWA,RCNT                SDWA ADDRESSABILITY     YM05909
         LM    RSVRB,RAVT,SDWAGR05      RESTORE REGS 5-13       YM05909
         TM    XSAFLAG2,XSABFRAL        TIOC BFR ALLOCATED      YM05909
         BZ    QTOMRP                   NO,RETURN TO RTM        YM05909
*
*   PREPARE TO FREE THE MESSAGE BEING BUILT WHEN A TPUT FAILED
*
         SR    RCVT,RCVT                CLEAR WORK REGISTER     YM05909
         USING TSB,RTSB                 TSB ADDRESSABLE         YM05909
         ICM   RCVT,7,TSBOBFP           GET ADDR OF FIRST BFR   YM05909
         BZ    QTOMRP                   BR IF QUEUE EMPTY       YM05909
         LA    RBUF,TSBOBFP-(BUFFHEAD-TIOCBUF)  PRETEND THAT    YM05909
*                                       THE BFR PTR IS IN A BFR YM05909
*                                       RATHER THAN IN THE TSB  YM05909
         SPACE 1
*
*   SCAN FOR LAST MESSAGE ON OUTPUT (HEADER) QUEUE
*
         SPACE 1
QTOMNHDR EQU   *                                                YM05909
         LR    RCNT,RBUF                SAVE BFR POINTER ADDR   YM05909
         LR    RBUF,RCVT                SAVE BFR ADDRESS        YM05909
         USING TIOCBUF,RBUF             BUFFER ADDRESSABLE      YM05909
         ICM   RCVT,7,BUFFHEAD          GET ADDR OF NEXT BUFFER YM05909
         BNZ   QTOMNHDR                 BR UNLESS NO MORE       YM05909
         DROP  RBUF                     BFR ADDRESSABILITY ENDS YM05909
*
*   CLEAR POINTER TO THIS MESSAGE AND FREE ALL ITS BUFFERS
*
         USING TIOCBUF,RCNT             BUFFER PTR ADDRESSABLE  YM05909
         XC    BUFFHEAD,BUFFHEAD        CLEAR BUFFER POINTER    YM05909
         DROP  RCNT                     BFR ADDRESSIBILITY ENDS YM05909
         IC    RCVT,TSBNOBF             GET NUMBER OF BUFFERS   YM05909
QTOMBFR  EQU   *                                                YM05909
         USING TIOCBUF,RBUF             BUFFER ADDRESSABLE      YM05909
         L     RGOTO,QTIEQBR            ADDR OF BFR RETURN CODE YM05909
         ICM   RCNT,7,BUFFTRLR          POINT TO NEXT BUFFER    YM05909
         BCTR  RCVT,R0                  DECREMENT BUFFER COUNT  YM05909
         BALR  R0,RGOTO                 GO TO FREE BFR IN REG 2 ZA24904
         LTR   RBUF,RCNT                ADDR OF NEXT BUFFER     YM05909
*                                       (IF ANY)                YM05909
         BNZ   QTOMBFR                  BR UNLESS NO MORE       YM05909
         DROP  RBUF                     BFR ADDRESSABILITY ENDS YM05909
         STC   RCVT,TSBNOBF             STORE UPDATED COUNT     YM05909
QTOMRP   EQU   *                                                YM05909
         LR    RBN,RETURN               SAVE R T M RETURN ADDR  YM05909
         SETRP RC=0,FRELOCK=(CMS,LOCAL) CANCEL FRR              YM05909
         BR    RBN                      RETURN TO R T M         YM05909
***
***                 DATA MOVE EXECUTION
***
QTOMMOVE MVC   K0(K1,RCNT),K0(RSAVE)    MOVE DATA TO TS BUFFER
         SPACE 2                                                YS02019
***
***                 ADCON FOR BUFFER ALLOCATION ROUTINE         YS02019
***
QTOMQBA  DC    V(IEDAYQBA)              ADDRESS OF BFR ALLOC RT YS02019
         EJECT
         EJECT
***********************************************************************
*                                                                     *
*    QTIP0290                                                         *
*                                                                     *
* FUNCTION -                                                          *
*                                                                     *
*     QTIP0290 CLEANS UP THE TSBECB WHEN THE TASK WAITING             *
*     THEREUPON ABENDS.  IF ANOTHER TASK IS WAITING TO USE            *
*     THE TSB, THIS ROUTINE REMOVES THAT TASK FROM OWAIT.             *
*                                                                     *
*     NORMALLY, THIS ROUTINE IS INVOKED VIA A BRANCH ENTRY TO         *
*     SVC 101 (QTIP) FROM SVC 93'S ESTAE.  HOWEVER, IN THE CASE       *
*     OF AN ABNORMAL MEMORY TERMINATION, ESTAE'S ARE NOT ABLE TO      *
*     GET CONTROL, SO QTIP 29 IS ISSUED BY THE TIOC RMTR (RESOURCE    *
*     MANAGER TERMINATION ROUTINE), IEDAY8.                           *
*                                                                     *
*  ENTRY POINT -                                                      *
*                                                                     *
*     QTIP0290                                                        *
*                                                                     *
* INPUT -                                                             *
*                                                                     *
*    UPON ENTRY FROM IGC0009C ESTAE                                   *
*                                                                     *
*    REGISTER 2 - ASID OF THE ABENDING TASK                           *
*    REGISTER 3 - POINTER TO TCB OF ABENDING TASK, OR ZERO            *
*                                                                     *
*    UPON ENTRY FROM IEDAY8                                           *
*                                                                     *
*    REGISTER 15 - ADDRESS OF RMPL                                    *
*                                                                     *
* OUTPUT                                                              *
*                                                                     *
*    IF THE ABENDING TASK WAS WAITING ON ANY TSBECB'S, THE            *
*    FIRST BYTE OF EACH SUCH ECB IS ZEROED.                           *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*                                                                     *
*    TIME-SHARING INTERFACE PROGRAM, ENTRY CODE 4, TO BRING A USER    *
*    INTO MAIN STORAGE AND MAKE HIM ACTIVE.                           *
*                                                                     *
* EXITS, NORMAL                                                       *
*                                                                     *
*    THIS MODULE ZEROES REGISTER 15, AND BRANCHES VIA REGISTER 14.    *
*                                                                     *
* EXITS, ERROR                                                        *
*                                                                     *
*    NONE                                                             *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*                                                                     *
*    SEE QTIP0180                                                     *
*                                                                     *
* ATTRIBUTES -                                                        *
*                                                                     *
*    REENTRANT, REFRESHABLE, PRIVILEGED, DISABLED                     *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*                                                                     *
*    NONE                                                             *
*                                                                     *
* NOTES -                                                             *
*                                                                     *
*    NONE                                                             *
*                                                                     *
***********************************************************************
         SPACE 3
QTIP0290 EQU   *
***********************************************************************
*****                                                             *****
*****               ENTRY FOR TSBECB CLEANUP                      *****
*****                                                             *****
*****    REGS 5, 6, 7, 8 ARE PRESERVED THROUGOUT THIS ROUTINE     *****
*****                                                             *****
***********************************************************************
         SPACE 2
         LR    RTCB,RCVT                TCBPT PASSED IN RCVT (R3)
         L     RCVT,CVTPTR              ADDRESS OF CVT          YS02019
         USING CVT,RCVT                 CVT ADDRESSABLE         YS02019
         L     RRPT,CVTAQAVT            ADDRESS OF TCX          YS02019
         L     RRPT,TCXRPT-IEDQTCX(,RRPT)  ADDRESS OF RPT       YS02019
         USING TIOCRPT,RRPT             TIOCRPT ADDRESSABLE     YS02019
         C     RGOTO,TIOCQTIP           IS CALL MADE BY AY8     YS02019
         BE    NOTOOCA                  NO, CALLED BY ESTAE     YS02019
         SR    RTCB,RTCB                DENOTE OOCA             YS02019
         USING RMPL,RGOTO               RMPL ADDRESSABLE        YS02019
         MODESET EXTKEY=SUPR            CHANGE INTO KEY 0       YS02019
         LH    RBUF,RMPLASID            GET ASID                YS02019
         MODESET EXTKEY=TCAM            GET BACK INTO TCAM KEY  YS02019
         SPACE 1                                                YS02019
NOTOOCA  EQU   *                                                YS02019
         LR    RTJID,RBUF               ASID PASSED IN RBUF     YS02019
         L     RASVT,CVTASVT            ADDRESS OF ASVT         YS02019
         USING ASVT,RASVT               ASVT ADDRESSABLE        YS02019
         SLL   RTJID,K2                 ASID * 4                YS02019
         L     RTJID,ASVTENTY-L'ASVTENTY(RTJID)  ADDR OF ASCB   YS02019
         USING ASCB,RTJID               ASCB ADDRESSABLE        YS02019
         L     RTSB,ASCBTSB             ADDRESS OF TSB OR 0     YS02019
         LTR   RTSB,RTSB                FOREGROUND TASK         YS02019
         BNZ   GOTTJID                  IF SO, DON'T NEED TCB
         LTR   RTCB,RTCB                TCB BETTER BE SPECIFIED
         BZ    DONE29                   IF NEITHER TCB NOR TJID, QUIT
         DROP  RTJID                    ASCB NOT ADDRESSABLE    YS02019
*
*              ASCBTSB = 0 MEANS BACKGROUND TASK
*                        TCB # 0 REQUIRED
*                        TCB = 0 MEANS EFFECTIVE NOP
*              ASCBTSB # 0 MEANS FOREGROUND TASK
*                        TCB = 0 MEANS OUT-OF-CORE ABEND
*                        TCB # 0 IS ABENDING TASK
*
         SPACE 1
GOTTJID  EQU   *
*
*   SEE IF ABENDING USER HAS CONTROL OF TSB OUTPUT
*
         LTR   RTSB,RTSB                CHECK FOR BACKGROUND    YS02019
         BZ    TJIDS                    YES, ONLY ASID TPUT     YS02019
         LR    RTJID,RBUF               ASID PASSED AT ENTRY    YM01373
         TM    TSBFLG1,TSBOWIP+TSBTJIP  IS TSB IN USE BY NORMAL TPUT
         BNM   TJIDS                    IF NOT, CHECK TSB TABLE
         LTR   RTCB,RTCB                TCB GIVEN
         BZ    CLEAN                    NO. CLEAN-UP FOR OUT-OF-
*                                       CORE ABEND
         C     RTCB,TSBCTCB             IS CURRENT TCB ABENDING
         BNE   TJIDS                    IF NOT, DON'T CLEAN THIS TSB
*
*   GO CLEAN UP TSB AND TURN OFF QCBPARTO, IF NECESSARY
*
CLEAN    EQU   *
         BAL   RCVT,CLEANUP             GO DO IT
         SPACE
*
*   POST TSBECB IF WAITED ON BY A LOGGED-ON USER
*
         TM    TSBECB,WAITBIT           IS ECB WAITED ON        YM03998
         BNO   TJIDS                    IF NOT, DON'T POST
         LH    RTJID,TSBWTJID           GET WAITING ASID        YS02019
         SLL   RTJID,K2                 ASID * 4                YS02019
         L     RTJID,ASVTENTY-L'ASVTENTY(RTJID)  ASCB OF WAITER YS02019
         DROP RASVT                     ASVT NOT ADDRESSABLE    YS02019
         SPACE
*
*   GO TO POST ROUTINE TO AWAKEN WAITING TJID TPUT, SO IT CAN FIND
*   OUT THAT THIS USER HAS HUNG UP.
*
*   REGISTERS FOR POST: 10 - COMPLETION CODE          RRPT
*                       11 - PTR TO ECB, BIT 0 = 1    RECBP
*                       12 - ADDR OF CVTBRET          RBASE
*                       13 - WAITING ASCB             RTJID
*                       14 - RETURN                   RETURN
*                       15 - POST ENTRY ADDRESS       RGOTO,RWRK
*
         L     RCVT,CVTPTR              ADDRESS OF CVT          YS02019
         L     RWRK,CVT0PT01            POST ROUTINE ADDRESS
         LR    RCNT,RBASE               SAVE BASE REGISTER      YS02019
         LA    RBASE,CVTBRET            ADDRESS OF CVTBRET      YS02019
         DROP  RBASE                    MODULE NOT ADDRESSABLE  YS02019
         USING QTIP0180,RCNT            USE RCNT AS MOD BASE    YS02019
         LR    R0,RRPT                  SAVE RPT ADDRESS        YS02019
         SR    RRPT,RRPT                MAKE COMPLETION CODE 0
         LA    RECBP,TSBECB             ECB POINTER              S21A12
         O     RECBP,HIGHON             HIGH-ORDER BIT FOR POST  S21A12
         MODESET EXTKEY=SUPR            CHANGE TO SUP KEY      @ZA05453
         BALR  RETURN,RGOTO             GO TO POST
         MODESET EXTKEY=TCAM            CHANGE BACK TO TCAM    @ZA05453
*
*   NOTE - RBUF STILL CONTAINS TJID PASSED AT ENTRY, SO RTJID NOT SAVED
*
         SPACE 2
*
*   RESTORE REGISTERS ON RETURN FROM POST
*
         LR    RBASE,RCNT               BASE REGISTER           YS02019
         DROP  RCNT                     RCNT NO LONGER MOD BASE YS02019
         USING QTIP0180,RBASE           USE RBASE AS MOD BASE   YS02019
         LR    RRPT,R0                  TIOCRPT ADDRESS         YS02019
         LR    RTJID,RBUF               TJID PASSED AT ENTRY
         L     RETURN,TIOCSAVE+SAVER14  GET RETURN ADDR FROM    YS02019
*                                       SAVE AREA (SAVED BY     YS02019
*                                       SUBROUTINE CLEANUP)     YS02019
         SPACE 2
TJIDS    EQU   *
         L     RTSB,TIOCTSB-K1          ADDRESS OF 1ST TSB      YS02019
         SR    RBUF,RBUF                CLEAR WORK REGISTER     YS02019
         IC    RBUF,TIOCTSBS            TSB SIZE FOR INCREMENT  YS02019
         LH    RCNT,TIOCNTSB            NO. OF TSB'S AS LIMIT   YS02019
*
*    LOOK AT EACH TSB AND CHECK FOR A WAITED-UPON TSBECB AND TJID=RTJID
*
TSBLOOP  EQU   *
         TM    TSBSTAT,TSBINUSE         IS THIS TSB IN USE      YS02019
         BZ    NEXTTSB                  NO, CHECK NEXT TSB      YS02019
         CH    RTJID,TSBWTJID           CAN ABEND'G TJID BE
*                                       EITHER WAITING OR IN PROGRESS.
         BNE   NEXTTSB                  NO. GET NEXT TSB
         TM    TSBFLG1,TSBTJIP          YES.IS IT IN PROGRESS.
         BO    CKCTCB                   YES.
         TM    TSBECB,WAITBIT           NO. IS IT WAITING       YM03998
         BNO   NEXTTSB                  NO. GET NEXT TSB
         L     RWRK,TSBWTCB-K1          YES. GET WAITING TCB
         LA    RWRK,K0(,RWRK)           GET RID OF FLAGS        YS02019
         CR    RWRK,RTCB                IS WAITING TCB = ABEND'G TCB
         BE    THISTSB                  YES. GO CLEAN
         B     CKRTCB                   NO. BUT....
CKCTCB   EQU   *
         C     RTCB,TSBCTCB             IS ABEND'G TCB= IN PROGRESS TCB
         BE    THISTSB                  YES. GO CLEAN
*                                       NO. BUT...
CKRTCB   EQU   *
         LTR   RTCB,RTCB                WAS TCB GIVEN
         BZ    THISTSB                  NO. GO CLEAN
*                                       YES. GET NEXT TSB
         SPACE 1
NEXTTSB  EQU   *
*
*   CHECK NEXT TSB, OR JUMP OUT IF LAST HAS BEEN CHECKED
*
         AR    RTSB,RBUF                PT TO NEXT TSB          YS02019
         BCT   RCNT,TSBLOOP             CHECK AGAIN IF THIS WASN'T LAST
         SPACE 2
*
*   ALL TSBS HAVE BEEN CHECKED.  SET CODE AND RETURN
*
DONE29   EQU   *
         SR    RGOTO,RGOTO              SET CODE TO ZERO
         BR    RETURN                   RETURN
         EJECT
THISTSB  EQU   *
*
*  THIS TSB IS WAITED ON OR IN USE BY THE ABENDING TASK
*
         MVI   TSBECB,K0                ZERO WAIT AND POST BITS
         TM    TSBFLG1,TSBTJIP          IS TJID TPUT GOING
         BZ    NEXTTSB                  IF NOT, NO FURTHER ACTION
         LA    RCVT,NEXTTSB             RETURN ADDR FOR SUBROUTINE
         SPACE
CLEANUP  EQU   *
*
*   SUBROUTINE TO CLEAN UP TSB AND HANDLE QCBPARTO
*
         STM   RASVT,RBUF,TIOCSAVE      SAVE REGISTERS (11-2)   YS02019
         NI    TSBFLG1,OFF-(TSBOWIP+TSBTJIP+TSBTJBF+TSBTJOW)           -
                                        INDICATE TSB NO LONGER SIEZED
         NI    TSBSTAT,OFF-TSBNOBUF     DON'T FORGET THIS
         L     RWRK,CVTPTR(,R0)         GET CVT POINTER         YS02019
         USING CVT,RWRK                 CVT ADDRESSABLE         YS02019
         TM    CVTTCMFG,CVTTCRDY        IS TCAM UP
         BNO   NOQCB                    IF NOT, DON'T TOUCH QCB
*
*   TURN OFF QCBPARTO VIA IEDAYP SO TCAM WON'T EXPECT MORE OUTPUT
*
         TM    TSBFLG4,TSBCANC          IS USER STILL WITH US   YS02019
         BO    NOQCB                    NO. DON'T TURN OFF PARTO
         SPACE 2
         L     R0,TSBF2M                GET SETTING OF TSB
RETRY    EQU   *                                                YS02019
         LR    RWRK,R0                  PUT IT IN WORK REGISTER YS02019
         O     RWRK,TPSTMSK1            * TURN OFF QCBPARTO     YS02019
         N     RWRK,TPSTMSK2            * IN QCBTSOF1           YS02019
         CS    R0,RWRK,TSBF2M           UPDATE TSB              YS02019
         BNE   RETRY                    LOOP UNTIL DONE         YS02019
         SPACE 3
*
*   GO TO IEDAYTPQ FOR TPOST THE TSB TO IEDAYP                  YS02019
*
*        INTERFACE WITH IEDAYTPQ                                YS02019
*
*        REGISTER  0 - RETURN ADDRESS                           YS02019
*        REGISTER  1 - ZERO (MEANS TPOST TSB TO AYP)            YS02019
*        REGISTER  2 - TSB ADDRESS                              YS02019
*        REGISTER 13 - 6-WORD SAVE AREA                         YS02019
*        REGISTER 15 - ENTRY POINT ADDRESS TO IEDAYTPQ          YS02019
*
         SR    RCNT,RCNT                ZERO OUT REG 1          YS02019
         LR    RBUF,RTSB                TSB ADDRESS IN REG 2    YS02019
         LA    RTJID,TIOCSAVE+TPQSAVE   SAVE AREA ADDRESS       YS02019
         L     RGOTO,AYTPQAD            EPA OF IEDAYTPQ         YS02019
         BALR  R0,RGOTO                 GO TO UPDATE QCBPARTO   YS02019
         SPACE 2
NOQCB    EQU   *
*
*      CHECK FOR OTHER WAITING TPUTS FROM THIS TASK
*
         TM    TSBFLG1,TSBWOWIP         IS A REGULAR TPUT WAITING
         BNO   RESTREGS                 IF NOT, THIS TSB DONE   YS02019
         TM    TSBFLG4,TSBOCAB          OUT OF CORE ABEND CHECK YS02019
         BO    RESTREGS                 YES, DONE WITH THIS TSB YS02019
         NI    TSBFLG4,OFF-(TSBOWAIT+TSBHOLD)  OUT OF OWAIT     ZA25139
         SPACE 1
*
*   A NORMAL TPUT IS WAITING FOR THIS TSB.  MAKE ALL TCB'S
*   ASSOCIATED WITH THIS TSB ACTIVE
*
*        INTERFACE WITH STATUS
*
*        REGISTER  0 - BYTES 0-1 - ASID
*                      BYTES 2-3 - STATUS ENTRY CODE (8)
*        REGISTER  1 - X'80000000' (REQUESTS RESETTING)
*        REGISTER 13 - TCB NONDISPATCHABILITY BIT MASK
*        REGISTER 14 - RETURN ADDRESS
*        REGISTER 15 - ENTRY POINT ADDRESS
*
         LM    R0,RCNT,INITREGS         LOAD PARMS FOR STATUS   YS02019
         L     RGOTO,TSBASCBA           GET ASCB ADDRESS        YS02019
         ICM   R0,B'1100',ASCBASID-ASCB(RGOTO)  GET ASID        YS02019
         L     RAVT,MSKOWAIT            SET TO REMOVE OWAIT     YS02019
         L     RGOTO,CVTPTR             CVT ADDRESS             YS02019
         L     RGOTO,CVTABEND-CVT(,RGOTO)   SCVT ADDRESS        YS02019
         USING SCVTSECT,RGOTO           SCVT ADDRESSABLE        YS02019
         L     RGOTO,SCVTSTAT           GET EPA OF STATUS       YS02019
         DROP  RGOTO                    SCVT NOT ADDRESSABLE    YS02019
         MODESET EXTKEY=SUPR            CHANGE INTO KEY 0       YS02019
         BALR  RETURN,RGOTO             GO TO STATUS            YS02019
         MODESET EXTKEY=TCAM            GET BACK TO TCAM'S KEY  YS02019
         SPACE 1
RESTREGS EQU   *                                                YS02019
         LM    RASVT,RBUF,TIOCSAVE      RESTORE REGS (11-2)     YS02019
         SPACE 1
         BR    RCVT                     GO BACK TO MAINLINE     YS02019
         SPACE 5
***********************************************************************
*****                                                             *****
*****               ADCON FOR TPOSTING ROUTINE                    *****
*****                                                             *****
***********************************************************************
         SPACE 2
AYTPQAD  DC    V(IEDAYTPQ)              EPA OF IEDAYTPQ         YS02019
         EJECT
***********************************************************************
*****                                                             *****
*****               THE FOLLOWING CONSTANTS ARE USED              *****
*****                                                             *****
***********************************************************************
         SPACE 2
KZERO    DC    F'0'                     ZERO COMPARATOR
MSKOWAIT DC    AL1(0,0,TCBOWAIT,0)      MASK FOR STATUS         YS02019
TPSTMSK1 DC    AL1(0,0,QCBPARTO,0)      QCBPARTO IS THE BIT     YS02019
TPSTMSK2 DC    AL1(255,255,255,255-QCBPARTO) TURN OFF QCBPARTO  YS02019
INITREGS DC    A(8)                     REGISTERS 0 AND 1       YS02019
INITREG1 DC    X'80000000'              FOR STATUS              YS02019
HIGHON   EQU   INITREG1                 FOR CORSS MEMORY POST   YS02019
KMAX     DC    H'255'                   MAXIMUM MOVABLE
KTHREE   DC    H'3'                     USED TO STRIP 3270       S22028
*                                       CONTROL CHARACTER        S22028
PATCHREA DC    10F'0'                   PATCH AREA               Y01018
         EJECT
         IHAASCB                                                YS02019
         EJECT                                                  YS02019
         IHAASVT                                                YS02019
         EJECT                                                  YS02019
         TAVTD                                                  YS02019
         EJECT                                                  YS02019
         IKJTIOCB                                               YS02019
         EJECT                                                  YS02019
CVT      DSECT                                                  YS02019
         CVT                                                    YS02019
         EJECT                                                  YS02019
         TPRIOR                                                 YS02019
         EJECT                                                  YS02019
         TQCBD                                                  YS02019
         EJECT
         IKJRB
***
***      EXTENDED SAVE AREA.  THSES STATEMENTS SHOULD FOLLOW
***      THE MACRO 'IKJRB.'
***
         ORG   RBEXSAVE                 START OF SAVE AREA       M0094
XSAPRM0  DS    0F                       REG 0 AT ENTRY           M0094
XSAPRMTJ DS    H                        TJID PASSED              M0094
XSAPRMSZ DS    H                        SIZE PASSED              M0094
XSAPRM1  DS    0F                       REG 1 AT ENTRY           M0094
XSAOPTNS DS    X                        USER OPTIONS             M0094
MASIS    EQU   X'01'                    ASIS OPTION SPECIFIED    M0094
MCNTRL   EQU   X'02'                    1 MEANS CONTROL          M0094
*
*   BOTH OF THE ABOVE BITS OFF MEANS EDIT OPTION
*
MBREAK   EQU   X'04'                    BREAKIN SPECIFIED        M0094
MHOLD    EQU   X'08'                    1 MEANS HOLD             M0094
MTGET    EQU   X'80'                    1 MEANS TGET REQUESTED   M0094
MUSERID  EQU   X'40'                    USERID PTD TO BY REG 15 YS02019
MLOWP    EQU   X'20'                    0 HIGHPRI, 1 LOWPRI      M0094
MWAIT    EQU   X'10'                    1 MEANS NOWAIT           M0094
         DS    AL3                      REST OF REGISTER ONE     M0094
XSAWD3   DS    0F                       FOR SAVING REGISTERS     M0094
XSAFLAG  DS    X                        FLAG PASSED BY 9C TO 01  M0094
*                                       AND 02                   M0094
XSATCBFX EQU   X'20'                    TURN OFF TCBFX AT EXIT   M0094
         DS    AL3                      REST OF WORD             M0094
         ORG   XSAWD3+2                 INPUT ED, OUTPUT MOVE    M0094
XSAUBFRS DS    H                        AMT DATA LEFT TO MOVE    M0094
XSAUBFRP DS    0F                       LOC DATA LEFT TO MOVE    M0094
XSAESTAL DS    CL16                     LIST FOR ESTAE MACRO    YS02019
         ORG   XSAUBFRP+4               USED FOR SAVE AREA WHEN YS02019
*                                       NOT NEEDED BY ESTAE     YS02019
XSAWD5   DS    F                        FOR SAVING REGISTERS     M0094
XSAWD6   DS    F                        FOR SAVING REGISTERS     M0094
         ORG   XSAWD5                   USE WORDS 5-6 FOR NAME   M0094
XSAENQNM DS    CL8                      ENQ NAME FOR TJID TPUT   M0094
XSAWD7   DS    F                        FOR SAVING REGISTERS     M0094
XSAWD8   DS    F                        FOR SAVING REGISTERS     M0094
         ORG   XSAWD7                   USE WDS 7-8 FOR ENQ PRMS M0094
XSAENQAD DS    2F                       WORK AREA FOR ENQ/DEQ    M0094
XSAUSERP DS    0F                       USER ID POINTER         YS02019
XSAWD9   DS    F                        FOR SAVING REGISTERS     M0094
XSARETRG DS    0F                       TGET/TPUT RETURN ADDRES YS02019
XSAWD10  DS    F                        FOR SAVING REGISTERS     M0094
         DS    CL1                      RESERVED                YS02019
XSAUSERK DS    CL1                      SVC CALLER'S KEY        YS02019
XSARC    DS    H                        RETURN CODE SAVE AREA   YS02019
XSATJID  DS    H                        CALLER'S TJID            M0094
XSAFLAG2 DS    X                        FLAGS                   YM05909
XSAATR   EQU   X'80'                    NEXT CHAR IN TS BFR IS   S22028
*                                       A 3270 ATTRIBUTE BYTE    S22028
XSABFRAL EQU   X'40'                    TIOC BUFFER HAS BEEN    YM05909
*                                       ALLOCATED               YM05909
XSA15D   EQU   X'20'                    CHANGE COMPLETION CODE  YM05909
*                                       TO 15D IN ETAE          YM05909
*                   NEXT 5 BITS UNUSED                          YM05909
XSAF     DS    X                        FLAGS USED BY TPUT. INI- M0094
*                                       TIALIZED FROM XSAFLAG.
HSW      EQU   X'80'                    HEADER BFR DONE          M0094
PSW      EQU   X'40'                    NEED TO TPOST QCB        M0094
*SATCBFX EQU   X'20'                    TURN OFF TCBFX AT EXIT
OSW      EQU   X'10'                    TSBOWIP TURNED ON BY US  M0094
*                                       (NOT SOME OTHER TPUT)
XSADMOVE EQU   X'08'                    DATA IS MOVING          YS02019
XSAAUTH  EQU   X'04'                    USER IS AUTHORIZED      YS02019
XSAIDENQ EQU   X'02'                    ASID TPUT ASID ENQUEUED YS02019
XSAPARTO EQU   X'01'                    QCBPARTO IS SET ON      YM01246
         EJECT
         IHASCVT                                                YS02019
         EJECT                                                  YS02019
         IHARMPL                                                YS02019
         EJECT                                                  YS02019
         IKJTCB
         EJECT
         TTCXD
         EJECT
         IKJTIOCP
         EJECT
         IKJTSB
         EJECT
         IHAFRRS
         EJECT
         IHASDWA
         EJECT
         IHAPSA
         END
