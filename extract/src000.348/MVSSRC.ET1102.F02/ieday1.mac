         TITLE 'IEDAY1 - TIOC INITIALIZATION'
IEDAY1   CSECT
* *********************************************************************
*
*01* MODULE-NAME = IEDAY1
*
*01* DESCRIPTIVE-NAME = TIOC INITIALIZATION/DE-INITIALIZATION
*
*01* COPYRIGHT = NONE
*
*01* STATUS = 00
*
*01* FUNCTION = START - COMPUTE AND OBTAIN MAIN STORAGE REQUIRED FOR
*                       TIOC.  INITIALIZE TIOC CONTROL CLOCKS AND
*                       BUFFERS.
*               STOP  - CLEAR POINTERS IN CONTROL BLOCKS AND FREE
*                       TIOC MAIN STORAGE.
*
*01* NOTES = N/A
*
*01* RESTRICTIONS = N/A
*
*02*   DEPENDENCIES = NONE
*
*02*   RESTRICTIONS = NONE
*
*02*   REGISTER-CONVENTIONS = SEE REGISTER EQUATES
*
*02*   PATCH-LABEL = PATCH
*
*01* MODULE-TYPE = ASSEMBLER LANGUAGE CSECT
*
*02*   PROCESSOR = ASSEMXF-370R
*
*02*   MODULE-SIZE = SEE EXTERNAL SYMBOL DICTIONARY TYPE SD ID-01
*
*02*   ATTRIBUTES = REENTRANT, REUSABLE, ENABLED
*
*01* ENTRY-POINT = IEDAY1
*
*02*   PURPOSE = SEE FUNCTION
*
*02*   LINKAGE = FROM TCAM OPERATOR CONTROL MODULE IGCM010D VIA XCTL
*
*01* INPUT = REGISTER 1 CONTAINS ADDRESS OF OPERATOR CONTROL AVT
*
*01* OUTPUT = REGISTER 1 CONTAINS ADDRESS OF OPERATOR CONTROL AVT
*             REGISTER 4 CONTAINS ADDRESS OF TCAM AVT
*
*01* EXIT-NORMAL = TO TCAM OPERATOR CONTROL MODUEL IGC0710D VIA XCTL
*
*01* EXIT-ERROR = NONE
*
*01* EXTERNAL REFERENCES = SYSTEM INITIATED CANCEL VIA BRANCH ENTRY
*
*02*   CONTROL-BLOCKS = ASCB, CVT, SCVT, TCAM AVT, TCAM OPCAVT,
*                       TCAM OPE, DCB, QCB, TNT, TIOCBUF, TIOCRPT,
*                       TCX, TRM, TSB
*
*01* TABLES = SEE WORK AREA MAPPING LABELED DAPLIST, DUPLIST, PARMTBL,
*             WASTART, WASTOP
*
*01* MACROS = GETMAIN, FREEMAIN, ATTACH, DETACH, OPEN, CLOSE, READ,
*             WTO, FIND, TSEND, TCABEND, MODESET, DYNALLOC, LOAD,
*             SETLOCK
*
*         VS2 030  SU
*
*                                                              @ZA09955
*  D 058800                                                     ZA09955
*  A 058800-059200                                              ZA09955
*0000079210                                                    @ZA05227
*
*
*01* CHANGE-ACTIVITY  VS01806 05/17/73
*                     VS01246 06/06/73
*                     VS01382 06/27/73
*                     VS01176 07/16/73
*                     VS03016 08/07/73
*                     VS03842 09/18/73
*                     VS04639 10/15/73
*
*********************************************************************/
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              REGISTER EQUATES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        PARM/WORK REGISTER
R2       EQU   2                        KEYWORD TABLE ENTRY/WORK REG
R3       EQU   3                        WORK REGISTER
R4       EQU   4                        WORK REGISTER
R5       EQU   5                        WORK REGISTER
R6       EQU   6                        WORK REGISTER
RQCB     EQU   7                        HAS ADDRESS OF QCB
R7       EQU   7                        TIOCRPT ADDRESS/WORK REGISTER
R8       EQU   8                        TSB ADDRESS/WORK REGISTER
R9       EQU   9                        BUFFER ADDRESS/WORK REGISTER
RSTOP    EQU   10                       STOPPER WHILE SCANNING PARM
R10      EQU   10                       WORK REGISTER
RWABASE  EQU   11                       WORK AREA BASE
RBASE    EQU   12                       BASE REGISTER
R13      EQU   13                       POINT TO REGISTER SAVE AREA
ROPCAVT  EQU   13                       POINT TO TCAM OP CONTROL AVT
R14      EQU   14                       RETURN ADDRESS/WORK REGISTER
R15      EQU   15                       ENTRY ADDRESS/WORK REGISTER
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              EQUATES FOR MASKS, LENGTH, DISPLACEMENTS
*              AND CONSTANTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
E0       EQU   0                        '0'
ECABEND  EQU   0                        ENTRY CODE FOR TCABEND  YM03842
E1       EQU   1                        '1'
NOTDUMP  EQU   1                        FLAG FOR NOT DUMPING    YM03842
E2       EQU   2                        '2'
E3       EQU   3                        '3'
E4       EQU   4                        '4'
E5       EQU   5                        '5'
E6       EQU   6                        '6'
E7       EQU   7                        '7'
E8       EQU   8                        '8'
E10      EQU   10                       '10'
E13      EQU   13                       '13'
E20      EQU   20                       '20'
E24      EQU   24                       '24'
E33      EQU   33                       '33'
E36      EQU   36                       '36'
E37      EQU   37                       '37'
E38      EQU   38                       '38'
E63      EQU   63                       '63'
E68      EQU   68                       '68'
TYPE31   EQU   31                       SMF RECORD TYPE
TERMSTUS EQU   94                       SVC NUMBER FOR TERM     YM03842
*                                       STATUS                  YM03842
QTIP     EQU   101                      SVC NUMBER FOR QTIP
TIOCSP   EQU   231                      SUBPOOL NO. FOR TIOC STORAGE
REPLYL   EQU   5                        REPLY LENGTH FOR WTOR
EQUAL    EQU   C'='                     EQUAL SIGN
BLANK    EQU   X'40'                    BLANK
COMMA    EQU   C','                     COMMA
LOW      EQU   4                        1ST COMPARAND LOW
NOTHIGH  EQU   13                       CONDITION CODE NOT HIGH AFTER
*                                       COMPARE
TRMTSO   EQU   X'01'                    TERMINAL IS SUPPORTED BY TS
NOT      EQU   X'FF'                    USED TO TURN BITS OFF
XF0      EQU   X'F0'                    USED TO OR THE ZONE FIELD
UNALLOC  EQU   X'02'                    VERBCODE FOR UNALLOCATION
WAITBIT  EQU   X'80'                    DENOTE ECB IS BEING WAITED ON
POSTBIT  EQU   X'40'                    DENOTE ECB HAS BEEN POSTED
MINIBFNO EQU   4                        MINIMUM BUFFER NUMBER
MINIBFSZ EQU   20                       MINIMUM BUFFER SIZE
MAXIBFSZ EQU   252                      MAXIMUM BUFFER SIZE
DEFTBFSZ EQU   64                       DEFAULT BUFFER SIZE
DEFTOWTH EQU   20                       DEFAULT OWAITHI
DEFTNLKH EQU   4                        DEFAULT INLOCKHI
INPTDALN EQU   2                        OFFSET TO DATA LENGTH FIELD
INPTDATA EQU   8                        OFFSET TO DATA FIELD
SYNTAXID EQU   18                       MSG ID FOR SYNTAX ERROR
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              BEGINNING OF MODULE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         SPACE 3
HEREWEGO EQU   *
         BALR  RBASE,R0                 SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         ADDRESSABILITY FOR OPC AVT
         USING IEDQAVTD,R10             ADDRESSABILITY FOR TCAM AVT
         B     SKIPID                   SKIP MODULE ID
         DC    C'IEDAY1'                MODULE NAME
         DC    X'5253'                  JULIAN DATE - 09/10/75 @ZA05227
         DS    0H                       ALIGN ON HALF WORD BOUNDARY
         SPACE 1
SKIPID   EQU   *
         LR    ROPCAVT,R1               SET BASE FOR OP CONTROL AVT
         L     R10,OPCAVTPT             SET BASE FOR TCAM AVT
         L     R3,OPCCOPCE              GET ADDRESS OF OPC ELEMENT
         USING IEDQOPCE,R3              USE R3 AS OPC ELEMENT BASE
         TM    OCFLAG,OCCONSOL          IS MSG FROM SYS OPERATOR
         BNZ   MSGOK              YES, CONTINUE                @ZA09955
         L     R5,OPCWORK         GET OPC ELEMENT BASE          ZA09955
         SR    R4,R4              CLEAR REG.                    ZA09955
         STH   R4,0(,R5)          ZERO MSG LENGTH               ZA09955
         B     EXIT               GO TO EXIT                    ZA09955
MSGOK    EQU   *                                                ZA09955
         DROP  R3                       DROP OPC ELEMENT BASE
         L     R2,OPCWORK               GET ADDR OF OPER CTL WORK AREA
         LA    R3,INPTDATA(,R2)         SET PTR TO DATA
         LH    R5,INPTDALN(,R2)         GET LENGTH OF DATA AREA
         SPACE 1
FINDEQ   EQU   *
         CLI   E0(R3),EQUAL             SCAN FOR EQUAL SIGN
         BE    FOUNDEQ                  BR IF FOUND
         LA    R3,E1(R3)                INCREMENT PTR BY 1
         BCT   R5,FINDEQ                LOOK AT NEXT CHAR IF ANY
         B     ERROR01                  ERROR CONDITION - STOP
         SPACE 1
FOUNDEQ  EQU   *
         CLC   CSTOP,E1(R3)             IS REQUEST FOR STOP
         BE    STOP                     YES, GO TO PROCESS STOP
         CLC   CSTART,E1(R3)            IS REQUEST FOR START
         BNE   ERROR01                  ERROR CONDITION
         LA    R4,E6                    SUBTRACT LENGTH OF '=START'
         SR    R5,R4                    FROM DATA LENGTH
         BNP   START                    NO MEMBER NAME SPECIFIED
         CLI   E6(R3),COMMA             SCAN FOR ',' AFTER 'START'
         BNE   ERROR01                  ERROR CONDITION IF NOT ','
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              INITIALIZATION FOR TIME SHARING
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
* GETMAIN FOR WORK AREA
*
START    EQU   *
         IPK                            GET CALLER'S KEY IN REG 2
         MODESET EXTKEY=TCAM            CHANGE INTO TCAM'S KEY
         LA    R0,WAEND-WASTART         SIZE OF WORK AREA
         GETMAIN R,LV=(0)               GET STORAGE FOR WORK AREA
         LR    RWABASE,R1               STORAGE RETURNED IN R1
         USING WASTART,RWABASE          ADDRESSABILITY FOR WORK AREA
         ST    ROPCAVT,OPCAVTSV         SAVE OPCAV             @ZA05227
         STC   R2,CALLRKEY              SAVE CALLER'S KEY IN WORK AREA
         L     R2,CVTPTR                GET CVT ADDRESS
         L     R2,CVTAQAVT-CVT(,R2)     POINT TO TCX
         L     R4,TCXRPT-IEDQTCX(,R2)   GET RPT POINTER
         LTR   R4,R4                    HAS TS ALREADY BEEN INITIALIZED
         BNZ   ERROR02                  YES, TELL OPERATOR SO
         L     R4,AVTTSOPT              GET TSINPUT'S QCB ADDR
         LTR   R4,R4                    DOES TCAM SUPPORT TS
         BZ    ERROR03                  NO, TELL OPERATOR SO
         DROP  R10
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              ALLOCATE SYS1.PARMLIB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         MVC   RQBLOCK(DAPEND-DAPLIST),DAPLIST  MOVE REQUEST BLOCK FOR
*                                       DNY ALLOCATION TO WORK AREA
         MVC   KYWDTBL(ENDPMTBL-PARMTBL),PARMTBL  INITIALIZE TIOC
*                                                 PARM KEYWORD TABLE
         LA    R2,RQBLOCK               R2 HAS REQUEST BLOCK ADDRESS
         O     R2,HIBITON               TURN HIGH ORDER BIT ON
         ST    R2,RQBLKPTR              PUT IN WORK AREA
         LA    R4,WATPTR1               ADDR OF TEXT PTR IN WORK AREA
         ST    R4,TEXTPTR               PUT IT IN REQUEST BLOCK
         LA    R4,WATEXT1               ADDR OF TEXT UNIT 1 IN WA
         ST    R4,WATPTR1               RELOCATE WA TEXT POINTER 1
         LA    R4,WATEXT2               ADDR OF TEXT UNIT 2 IN WA
         ST    R4,WATPTR2               RELOCATE WA TEXT POINTER 2
         LA    R4,WATEXT3               ADDR OF TEXT UNIT 3 IN WA
         ST    R4,WATPTR3               RELOCATE WA TEXT POINTER 3
         LA    R4,WATEXT4               ADDR OF TEST UNIT 4 IN WA
         O     R4,HIBITON               SIGNAL LAST POINTER
         ST    R4,WATPTR4               RELOCATE WA TEXT POINTER 4
         SPACE 1
         DYNALLOC                       ALLOCATE SYS1.PARMLIB
         SPACE 1
         LH    R4,ERRCODE               GET RETURN CODE
         LTR   R4,R4                    IS ALLOCATION SUCCESSFUL
         BNZ   ERROR041                 NO, SEND ERROR MSG
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              OPEN SYS1.PARMLIB
*
* MOVE DCB TO THE WORK AREA, BUILD A ONE-WORD PARAMETER LIST FOR OPEN
* AS FOLLOWS -
*
*        BYTE 0     X'80'               LAST DCB, OPEN FOR INPUT
*        BYTE 1-3                       DCB ADDRESS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         USING IHADCB,R2                ADDRESSABILITY FOR DCB
         MVC   WADCB(ENDDCB-PARMDCB),PARMDCB MOVE DCB TO WORK AREA
         LA    R2,WADCB                 GET ADDRESS OF DCB IN WORK AREA
         O     R2,HIBITON               SET HI ORDER BIT ON TO INDICATE
*                                       LAST DCB TO OPEN
         ST    R2,OPENPARM              INITIALIZE PARM LIST IN WA
         MVC   DOUBLE1(E2),WADDLEN      MOVE LENGTH OF PARMLIB DDNAME
*                                       RETURNED BY DYNAMIC ALLOCATION
         LH    R1,DOUBLE1               PUT LENGTH IN REGISTER
         BCTR  R1,R0                    DECREMENT FOR EX INSTRCTION
         EX    R1,MOVEDDNM              MOVE PARMLIB DDNAME TO DCB
         LA    R1,OPENPARM              SET UP PARMLIST PTR
         OPEN  MF=(E,(1))               OPEN SYS1.PARMLIB
         TM    DCBOFLGS,DCBOFOPN        IS OPEN SUCCESSFUL
         BZ    ERROR04                  NO, SEND ERROR MSG
         DROP  R2
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              FIND SYS1.PARMLIB MEMBER WHICH CONTAINS
*              TIOC PARAMETERS
*
* SEE WHETHER A MEMBER NAME IS SPECIFIED. CONTINUE TO SCAN TCAM
* OPERATOR WORK AREA. R5 HAS REMAINING DATA LENGTH, R3 POINTS AT
* THE EQUAL SIGN
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GETMEM   EQU   *
         BCTR  R5,R0                    TAKE AWAY LENGTH FOR ','
         LA    R4,E8                    PUT 8 IN REG
         CR    R5,R4                    IS MEMBER NAME GT 8 BYTES
         BH    ERROR05                  YES, SEND ERROR MESSAGE
         SPACE 3
*
* FIND MEMBER IF SPECIFIED, OTHERWISE FIND IKJPRM00
*
*
         LTR   R5,R5                    IS MEMBER SPECIFIED
         BNP   PRM00                    NO, FIND IKJPRM00
         L     R4,BLANKS                .BLANK OUT THE
         ST    R4,DOUBLE1               .DOUBLE WORD WORK AREA
         ST    R4,DOUBLE1+E4            .FOR FIND MACRO
         BCTR  R5,R0                    DECREMENT FOR EX
         EX    R5,MOVENAME              MOVE MEMBER NAME
         LA    R5,E1(,R5)               RESTORE MEMBER NAME LENGTH
         SPACE 1
FINDMEM  EQU   *
         FIND  WADCB,DOUBLE1,D          FIND MEMBER NAME
         SPACE 1
         LA    R0,E4                    PUT 4 IN REG
         CR    R15,R0                   WAS MEMBER FOUND
         BL    READRCD                  YES, PROCESS MEMBER
         BH    ERROR06                  I/O ERROR, SEND ERROR MSG
         LTR   R5,R5                    WAS MEMBER SPECIFIED
         BNP   ERROR08                  NO, USE DEFAULT VALUES
         SPACE 3
*
* WHEN MEMBER IS SPECIFIED BUT CANNOT BE FOUND, START TIME SHARING
* REQUEST WILL BE REJECTED
*
ERROR05  EQU   *
         L     R1,MSG005I               GET ADDR OF MSG LIST
         BAL   R14,WTO                  INFORM OPERATOR
         BAL   R14,CPARMLIB             CLOSE PARMLIB
         B     FREEWA                   FREE WORK AREA AND EXIT
         SPACE 3
PRM00    EQU   *
         MVC   DOUBLE1,CPRM00           MOVE NAME 'IKJPRM00' TO WORK
*                                       AREA
         B     FINDMEM                  GO TO FIND IT
         SPACE 3
*
* READ MEMBER RECORD
*
READRCD  EQU   *
         XC    WADECB,WADECB            ZERO DECB IN WORK AREA
         ST    ROPCAVT,OPCAVTSV         SAVE OPC AVT ADDRESS
         LA    R13,REGSAVE              GET REGISTER SAVE AREA
         SPACE 1
NEXTRCD  EQU   *
         READ  WADECB,SF,WADCB,BUFFER,MF=E  READ A RECORD
         CHECK WADECB                   FINISH READING IT
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              SCAN THE RECORD WHICH IS IN 80 COLUMN CARD IMAGE
*              ENTER PARAMETER VALUES IN KEYWORD TABLE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         LA    R3,BUFFER                POINTS AT COLUMN 1
         LA    RSTOP,E63(,R3)           ONLY WANTS TO SCAN TO COL 64
         SPACE 1
SKIPBLNK EQU   *
         CLI   E0(R3),BLANK             CHECK FOR BLANK
         BNE   CHKTIOC                  GO TO FURTHER SCAN
         CR    R3,RSTOP                 CHECK FOR END OF CARD
         BNL   NEXTRCD                  IF END OF CARD, READ NEXT RCD
         LA    R3,E1(,R3)               OTHERWISE ADVANCE 1 COLUMN
         B     SKIPBLNK                 CHECK FOR BLANK AGAIN
         SPACE 1
CHKTIOC  EQU   *
         CLC   E0(E5,R3),CTIOC          SCAN FOR TIOC CARD
         BNE   NEXTRCD                  NOT TIOC CARD, READ NEXT RECORD
         SPACE 1
*
* WHEN A TIOC CARD HAS BEEN IDENTIFIED, SCAN FOR PARAMETERS
*
         SPACE 1
FINDPARM EQU   *
         LA    R3,E5(,R3)               POINT TO 1ST POSSIBLE PARM
         LA    RSTOP,E5(,RSTOP)         STOP AT COL 69
         SPACE 1
SKIPBLK  EQU   *
         CLI   E0(R3),BLANK             SKIP ANY BLANKS
         BNE   EQUSIGN                  NOT BLANK, FURTHER SCAN
         CR    R3,RSTOP                 CHECK FOR END OF CARD
         BNL   NEXTRCD                  IF END OF CARD READ NEXT RECORD
         LA    R3,E1(,R3)               ADVANCE 1 COLUMN
         B     SKIPBLK                  CONTINUE LOOKING FOR BLANK
         SPACE 1
EQUSIGN  EQU   *
         LA    R4,E1(,R3)               USED TO SCAN EQUAL SIGN
         LA    RSTOP,E1(,RSTOP)         STOP AT COL 70
         SPACE 1
SCANEQU  EQU   *
         CLI   E0(R4),EQUAL             LOOK FOR EQUAL SIGN
         BE    GETVALUE                 FOUND EQUAL SIGN
         CR    R4,RSTOP                 CHECK END OF CARD
         BL    NEXTCHAR                 BRANCH IF NOT END OF CARD
         LA    R5,E1(,R4)               R5 POINTS TO COL 71
         SPACE 1
ISITBLNK EQU   *
         CLI   E0(R5),BLANK             CHECK FOR BLANK
         BNE   NOTBLANK                 BRANCH IF NOT BLANK
         BCTR  R5,R0                    BACK UP 1 COLUMN
         B     ISITBLNK                 CHECK FOR BLANK AGAIN
         SPACE 1
NOTBLANK EQU   *
         BAL   R14,KYWDBAD              GO TO SEND ERROR MESSAGE
         B     NEXTRCD                  READ IN NEXT RECORD
         SPACE 1
NEXTCHAR EQU   *
         LA    R4,E1(,R4)               ADVANCE 1 COLUMN
         B     SCANEQU                  CONTINUE LOOKING FOR EQUAL SIGN
         SPACE 1
GETVALUE EQU   *
         LA    R5,E1(R4)                POINTS TO 1ST BYTE OF VALUE
         LA    RSTOP,E1(,RSTOP)         STOP AT COL 71
         SPACE 1
DELIMTER EQU   *
         CLI   E0(R5),BLANK             CHECK FOR BLANK
         BE    NOTEOC                   FOUND BLANK. GO GET VALUE
         CLI   E0(R5),COMMA             CHECK FOR COMMA
         BE    NOTEOC                   FOUND COMMA, GO GET VALUE
         CR    R5,RSTOP                 END OF CARD CHECK
         BNL   ENDOFCRD                 IF END OF CARD GO GET VALUE
         LA    R5,E1(,R5)               ADVANCE 1 COL
         B     DELIMTER                 CONTINUE SCAN FOR BLANK/COMMA
         SPACE 1
ENDOFCRD EQU   *
         BAL   R14,CHKYWORD             CHECK FOR VALID KEYWORD
         B     NEXTRCD                  READ IN NEXT RECORD
         SPACE 1
NOTEOC   EQU   *
         BCTR  R5,R0                    BACK UP TO POINT TO LAST
*                                       BYTE OF VALUE
         LA    R14,NEXTPARM             SET UP BRANCH ADDRESS AFTER
*                                       KEYWORD VALIDATION
         SPACE 3
CHKYWORD EQU   *
         LA    R2,KYWDTBL               POINTS TO FIRST ENTRY IN
*                                       PARM KEYWORD TABLE
         USING KYWDSECT,R2              ADDRESSABILITY
         SPACE 1
NEXTNTRY EQU   *
         LH    R6,PLENGTH               GET KEYWORD LENGTH
         LTR   R6,R6                    IS IT END OF TABLE
         BNP   KYWDBAD                  YES, KEYWORD INVALID
         BCTR  R6,R0                    DECREMENT FOR EX
         EX    R6,COMPKYWD              IS KEYWORD VALID
         BE    SECONDCK                 YES, FURTHER CHECK
         LA    R2,PSIZE(,R2)            POINTS TO NEXT ENTRY IN PARM
*                                       KEYWORD TABLE
         B     NEXTNTRY                 CHECK NEXT ENTRY
         SPACE 1
SECONDCK EQU   *
         LA    R7,E1(R6,R3)             1 BYTE BEYOND LAST CHAR OF KYWD
         CR    R7,R4                    IS IT THE EQUAL SIGN
         BE    KYWDOK                   YES, KEYWORD IS OK
         SPACE 1
KYWDBAD  EQU   *
         LR    R7,R5                    POINT TO LAST VALUE BYTE
         SR    R7,R3                    1 LT NO. OF CHARS TO MOVE
         LA    R1,E13                   1 LT MAX. NO. OF CHARS ALLOWED
         CR    R7,R1                    DOES KEYWORD EXCEED MAXIMUM
         BNH   LENGTHOK                 NO, IT'S OK TO MOVE
         LR    R7,R1                    TRUNCATE TO MAXIMUM LENGTH
         SPACE 1
LENGTHOK EQU   *
         L     R1,MSG407I               GET ADDR OF WTO'S PARMLIST
         LH    R15,E0(,R1)              GET MSG LENGTH
         LA    R15,E3(,R15)             ADD 1 LT LENGTH OF DESCRIPTOR
*                                       AND ROUTING CODES
         EX    R15,MOVEMSG              MOVE MSG TO WORK AREA
         EX    R7,MOVEKYWD              MOVE PARM TO MSG LIST
         LA    R1,MSGLIST               SET UP FOR WTO
         WTO   MF=(E,(1))               SEND ERROR MESSAGE
         BR    R14                      CONTINUE SCAN
         SPACE 3
KYWDOK   EQU   *
         LR    R7,R5                    R7 POINTS TO LAST BYTE OF
*                                       SPECIFIED VALUE
         SR    R7,R4                    GET NO. OF VALUE BYTES
         BZ    KYWDBAD                  VALUE WAS NOT SPECIFIED
         LA    R1,E1(,R4)               POINT TO FIRST VALUE BYTE
         SPACE 1
FOX029   EQU   *
         TM    E0(R1),XF0               IS ZONE FOX
         BNO   KYWDBAD                  NO, VALUE IS BAD
         CR    R1,R5                    IS THIS LAST BYTE OF VALUE
         BNL   PACKIT                   YES, PACK THE VALUE
         LA    R1,E1(,R1)               OTHERWISE ADVANCE ONE BYTE
         B     FOX029                   GO TO CHECK ZONE
         SPACE 1
PACKIT   EQU   *
         BCTR  R7,R0                    DECREMENT FOR EX
         EX    R7,PACKVALU              CHANG TO PACKED DECIMAL
         CVB   R4,DOUBLE1               CONVERT TO BINARY
         LTR   R4,R4                    IS VALUE NEGATIVE
         BM    KYWDBAD                  YES, SEND ERROR MESSAGE
         C     R4,MAXIMUM               DOES IT EXCEED MAXIMUM
         BH    KYWDBAD                  YES, SEND ERROR MESSAGE
         ST    R4,PVALUE                PUT VALUE IN KEYWORD TABLE
         OI    PFLAG,PUSER              SIGNAL VALUE IS SPECIFIED
         BR    R14                      GO TO SCAN FOR NEXT PARM
         SPACE 3
NEXTPARM EQU   *
         LA    R3,E2(,R5)               POINTS TO FIRST POSSIBLE
*                                       CHAR OF NEXT PARM
         CR    R3,RSTOP                 CHECK FOR END OF CARD
         BNL   NEXTRCD                  IF END OF CARD, READ NEXT RCD
         LA    RSTOP,BUFFER+E68         REINITIALIZE STOP POINT
*                                       AT COLUMN 69
         B     SKIPBLK                  GO TO SCAN FOR BLANK
         SPACE 3
CLOSELIB EQU   *
         BAL   R14,CPARMLIB             CLOSE PARMLIB
         L     ROPCAVT,OPCAVTSV         RELOAD OPC AVT ADDRESS
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              VALIDATE AND DEFAULT PARAMETER VALUES, RESOLVE
*              CONFLICTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         SPACE 3
*
* BUFSIZE VALIDITY CHECK - MINIMUM - 20, MAXIMUM - 252, ROUND UP TO
*                          WORD BOUNDARY. DEFAULT VALUE IS 64
*
         SPACE 1
CHKBFSZ  EQU   *
         LA    R2,BUFSIZE               POINT TO BUFSIZE ENTRY IN
*                                       KEYWORD TABLE
         TM    PFLAG,PUSER              IS VALUE SPECIFIED
         BZ    DEFBFSZ                  NO, DEFAULT BUFFER SIZE
         L     R3,PVALUE                GET SPECIFIED VALUE
         LA    R0,MINIBFSZ              GET MINIMUM
         CR    R3,R0                    IS VALUE GT/EQ MINIMUM
         BL    BADBFSZ                  NO, BUFSIZE VALUE INVALID
         LA    R0,MAXIBFSZ              GET MAXIMUM
         CR    R3,R0                    IS VALUE LT/EQ MAXIMUM
         BH    BADBFSZ                  NO, BUFSIZE VALUE INVALID
         LA    R3,E3(,R3)               * ROUND UP BUFFER SIZE
         N     R3,MINUS4                * TO WORD BOUNDARY
         B     STBFSZ                   GO TO STORE VALUE
         SPACE 1
BADBFSZ  EQU   *
         LR    R10,R2                   SET UP PARM ADDR IN KEYWORD
*                                       TABLE FOR SUBROUTINE
         BAL   R14,BADPARM              GO TO RTN TO PROCESS INVALID
*                                       PARAMETER VALUE
         SPACE 1
DEFBFSZ  EQU   *
         LA    R3,DEFTBFSZ              GET BUFFER SIZE DEFAULT VALUE
         NI    PFLAG,NOT-PUSER          INDICATE DEFAULT VALUE USED
STBFSZ   EQU   *
         ST    R3,PVALUE                PUT DEFAULT/ADJUSTED VALUE IN
*                                       TABLE
         SPACE 3
*
* 'USERMAX' VALIDITY CHECK - MINIMUM IS 1, MAXIMUM IS 32,767, DEFAULT
*                            IS NUMBER OF TS TERMINALS PLUS TEN PERCENT
*
CHKUSMAX EQU   *
         LA    R2,USERMAX               POINT TO USERMAX ENTRY IN
*                                       KEYWORD TABLE
         TM    PFLAG,PUSER              IS KEYWORD SPECIFIED
         BZ    DEFUSMAX                 NO, DEFAULT USERMAX
         L     R3,PVALUE                GET SPEFICIED VALUE
         LTR   R3,R3                    IS VALUE ZERO
         BP    CHKBFNO                  NO, VALUE IS OK
         SPACE 1
BADUSMAX EQU   *
         LR    R10,R2                   SET UP PARM ADDRESS IN KEYWORD
*                                       TABLE FOR SUBROUTINE
         BAL   R14,BADPARM              GO TO RTN TO PROCESS INVALID
*                                       PARAMETER VALUE
         SPACE 1
DEFUSMAX EQU   *
         BAL   R10,CTTSTERM             GO TO FIND OUT NUMBER OF TS
*                                       TERMINAL UPON RTN R5 HAS IT
         LTR   R3,R5                    SAVE NUMBER OF TS       YM04639
*                                       TERMINALS, AND CHECK    YM04639
*                                       FOR ANY TS TERMINALS    YM04639
         BZ    ERROR03                  NO, SEND ERROR MSG      YM04639
         SR    R4,R4                    CLEAR REGISTER FOR DEVIDE
         LA    R0,E10                   GET 10 PERCENT
         DR    R4,R0                    OF NO. OF TS TERMINALS
         LTR   R4,R4                    ANY REMAINDER
         BZ    ADDIT                    NO
         LA    R5,E1(,R5)               ROUND UP QUOTIENT
         SPACE 1
ADDIT    EQU   *
         AR    R3,R5                    10 PERCENT + NO. OF TS TERMS
         NI    PFLAG,NOT-PUSER          INDICATE DEFAULT VALUE USED
         ST    R3,PVALUE                PUT VALUE IN KEYWORD TABLE
         SPACE 3
*
* 'BUFFERS' VALIDITY CHECK - MINIMUM IS 4, MAXIMUM IS 32,767, DEFAULT
*                            IS SIX TIMES THE VALUE OF USERMAX  OR
*                            MAXIMUM VALUE ALLOWED
         SPACE 1
CHKBFNO  EQU   *
         LA    R2,BUFFERS               POINT TO BUFFERS ENTRY IN
*                                       KEYWORD TABLE
         LA    R6,CHKOWTHI              SET UP BRANCH ADDRESS
         TM    PFLAG,PUSER              IS VALUE SPECIFIED
         BZ    DEFTBFNO                 NO, USE DEFAULT VALUE
         L     R9,PVALUE                GET SPECIFIED VALUE
         LA    R0,MINIBFNO              GET MINIMUM
         CR    R9,R0                    IS VALUE GT/EQ TO MINIMUM
         BL    BADBFNO                  NO, VALUE INVALID
         L     R0,MAXIMUM               GET MAXIMUM
         CR    R9,R0                    IS VALUE LT/EQ TO MAXIMUM
         BCR   NOTHIGH,R6               VALUE OK, GO TO CHECK 'OWAITHI'
         SPACE 1
BADBFNO  EQU   *
         LR    R10,R2                   SET UP PARM ADDR IN KEYWORD
*                                       TABLE FOR SUBROUTINE
         BAL   R14,BADPARM              GO TO RTN FOR ERROR MSG
         SPACE 1
*
* NOTE - TO PICK UP USERMAX VALUE AGAIN FROM THE KEYWORD TABLE
*        SEEMS TO BE REDUNDANT IF FLOW OF CONTROL IS FROM ABOVE,
*        (VALUE NEEDED STILL IS R3), BUT IT IS ESSENTIAL
*        WHEN ARRIVING HERE VIA BRANCH FROM LABEL 'COMPTOBF'.
*
DEFTBFNO EQU   *
         LA    R9,USERMAX               POINT TO USERMAX ENTRY IN
*                                       KEYWORD TABLE
         DROP  R2                       * TEMPORARILY MAPPING USERMAX
         USING KYWDSECT,R9              * ENTRY IN KEYWORD TABLE
         L     R9,PVALUE                GET NO. OF TS TERMINALS FOR
*                                       MULTIPLICATION
         DROP  R9                       R9 NO LONGER BASE FOR KYWDSECT
         USING KYWDSECT,R2              R2 RESUMES ADDRESSABILITY TO
*                                       PARAMETER KEYWORD ENTRY
         LA    R8,E6                    6 X USERMAX
         MR    R8,R8                    GOT DEFAULT VALUE FOR BUFFERS
         C     R9,MAXIMUM               DOES IT EXCEED MAXIMUM
         BNH   STBFNO                   NO, IT IS OK
         L     R9,MAXIMUM               GET MAXIMUM VALUE ALLOWED
         SPACE 1
STBFNO   EQU   *
         ST    R9,PVALUE                PUT DEFAULT VALUE IN TABLE
         NI    PFLAG,NOT-PUSER          INDICATE DEFAULT VALUE USED
         BR    R6                       CONTINUE VALIDITY CHECKING
         SPACE 3
*
* 'OWAITHI' VALIDITY CHECK - MINIMUM IS 1, MAXIMUM IS 32,767, DEFAULT
*                            IS 20
*
         SPACE 1
CHKOWTHI EQU   *
         LA    R3,OWAITHI               POINT TO 'OWAITHI' ENTRY IN
*                                       KEYWORD TABLE
         BAL   R5,OWTNLKHI              GO TO COMMON CHECK RTN
         SPACE 3
*
* 'OWAITLO' VALIDITY CHECK - MUST BE LESS THAN BOTH 'OWAITI' AND
*                            'BUFFERS', DEFAULT IS 4
         SPACE 1
CHKOWTLO EQU   *
         LA    R4,OWAITLO               POINT TO 'OWAITLO' ENTRY IN
*                                       KEYWORD TABLE
         BAL   R6,OWTNLKLO              GO TO COMMON CHECK RTN
         SPACE 3
*
* 'INLOCKHI' VALIDITY CHECK - MINIMUM IS 1, MAXIMUM IS 32,767, DEFAULT
*                             IS 4
         SPACE 1
CHKNLKHI EQU   *
         LA    R3,INLOCKHI              POINT TO 'INLOCKHI' ENTRY
         BAL   R5,OWTNLKHI              GO TO COMMON CHECK RTN
         SPACE 3
*
* 'INLOCKLO' VALIDITY CHECK - MUST BE LESS THAN BOTH 'INLOCKHI' AND
*                             'BUFFERS', DEFAULT IS 1
*
         SPACE 1
CHKNLKLO EQU   *
         LA    R4,INLOCKLO              POINT TO 'INLOCKLO' ENTRY
         BAL   R6,OWTNLKLO              GO TO COMMON CHECK RTN
         SPACE 3
*
* 'RESVBUF' VALIDITY CHECK - MINIMUM IS 1, MAXIMUM IS NO. OF BUFFERS,
*                            DEFAULT IS TEN PER CENT OF NO. OF BUFFERS
*
         SPACE 1
CHKRSVBF EQU   *
         LA    R2,RESVBUF               POINT TO 'RESVBUF' ENTRY
         TM    PFLAG,PUSER              IS VALUE SPECIFIED
         BZ    DEFTRSBF                 NO, USE DEFAULT VALUE
         L     R4,PVALUE                GET SPECIFIED VALUE
         LTR   R4,R4                    IS VALUE 0
         BZ    BADRSBF                  YES, VALUE IS INVALID
         CR    R4,R9                    IS VALUE LT/EQ 'BUFERS'
         BNH   CHKRCLIM                 YES, GO TO CHECK RECONLIM
         SPACE 1
BADRSBF  EQU   *
         LR    R10,R2                   SET UP PARM ADDR IN KEYWORD
*                                       TABLE FOR SUBROUTINE
         BAL   R14,BADPARM              WRITE ERROR MESSAGE
         SPACE 1
DEFTRSBF EQU   *
         LA    R0,E10                   DEFAULT IS TEN PER CENT
*                                       OF TOTAL NUMBER OF BUFFERS
         LR    R5,R9                    GET TOTAL NO. OF BFRS
         SR    R4,R4                    CLEAR REG FOR DEVIDE
         DR    R4,R0                    BFR NO. DEVIDED BY 10
         LTR   R4,R4                    ANY REMAINDER
         BZ    STOREIT                  NO, QUOTIENT IS DEFAULT VALUE
         LA    R5,E1(,R5)               ROUND UP DEFAULT
         SPACE 1
STOREIT  EQU   *
         ST    R5,PVALUE                PUT DEFAULT VALUE IN TABLE
         NI    PFLAG,NOT-PUSER          INDICATE DEFAULT
         SPACE 3
*
* 'RECONLIM' VALIDITY CHECK - MINIMUM IS 0, MAXIMUM IS 32,767, DEFAULT
*                             IS 0 (NO RECONNECT)
*
*        NO CHECKING IS NECESSARY HERE SINCE BOTH UPPER AND LOWER
*        LIMITS WERE CHECKED WHILE CONVERTING EBCDIC VALUE TO
*        BINARY WHEN THE PARAMETER RECORDS WERE READ.  (SEE
*        LABEL 'PACKIT')
*
*        NO DEFAULTING IS NECESSARY EITHER, SINCE DEFAULT VALUE
*        IS ZERO.
*
CHKRCLIM EQU   *
         B     CNTRLBLK                 GO TO BUILD CONTROL BLOCKS
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              THIS ROUTINE IS TO VALIDITY CHECK BOTH 'OWAITHI' AND
*              'INLOCKHI'.   INPUT EXPECTED -
*
*              REG 3 PROPER KEYWORD TABLE ENTRY ADDRESS
*              REG 5 RETURN ADDRESS
*
*              NOTE - MAXIMUM VALUE OF BOTH KEYWORDS HAS ALREADY
*                     BEEN CHECKED, SEE LABEL 'PACKIT'.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
OWTNLKHI EQU   *
         DROP  R2
         USING KYWDSECT,R3
         TM    PFLAG,PUSER              IS VALUE SPECIFIED
         BZ    DEFTHI                   NO, DEFAULT 'HIGH'
         L     R7,PVALUE                GET SPECIFIED VALUE
         LTR   R7,R7                    IS VALUE 0
         BNP   BADHI                    YES, USE DEFAULT VALUE  YM01176
         BR    R5                       GO BACK TO MAINLINE
         SPACE 1
BADHI    EQU   *
         LR    R10,R3                   SET UP PARM ADDR IN KEYWORD
*                                       TABLE FOR SUBROUTINE
         BAL   R14,BADPARM              GO TO SEND OUT ERROR MSG
         SPACE 1
DEFTHI   EQU   *
         SR    R7,R7                    CLEAR REGISTER
         IC    R7,PDEFAULT              GET DEFAULT VALUE
         ST    R7,PVALUE                PUT IN KEYWORD TABLE
         NI    PFLAG,NOT-PUSER          INDICATE VALUE IS DEFAULT
         BR    R5                       GO BACK TO MAINLINE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              THIS ROUTINE IS TO VALIDITY CHECK 'OWAITLO' AND
*              'INLOCKLO'.
*
*              INPUT EXPECTED -
*
*              REG 3 'OWAITHI/INLOCKHI' ENTRY ADDRESS IN
*                    KEYWORD TABLE
*              REG 4 PROPER ENTRY ADDRESS IN KEYWORD TABLE
*              REG 6 RETURN ADDRESS
*              REG 9 TOTAL NUMBER OF BUFFERS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
OWTNLKLO EQU   *
         DROP  R3
         USING KYWDSECT,R4
         TM    PFLAG,PUSER              IS VALUE SPECIFIED
         BZ    DEFTLO                   NO, USE DEFAULT VALUE
         L     R5,PVALUE                GET SPECIFIED VALUE
         SPACE 1
COMPHIGH EQU   *
         DROP  R4                       DROP KEYWORD ENTRY BASE
         USING KYWDSECT,R3              USE R3 AS KEYWORD ENTRY BASE
         C     R5,PVALUE                IS IT LESS THAN 'HIGH'
         BL    COMPTOBF                 YES, COMPARE WITH 'BUFFERS'
         DROP  R3                       DROP KEYWORD ENTRY BASE
         USING KYWDSECT,R4              USE R4 AS KEYWORD ENTRY BASE
         TM    PFLAG,PUSER              IS 'LOW' DEFAULT
         BO    BADLO                    NO, 'LOW' IS INVALID
         LA    R5,COMPTOBF              SET UP RETURN ADDRESS
         B     BADHI                    GO TO RTN HANDLING BAD 'HIGH'
         SPACE 1
COMPTOBF EQU   *
         L     R5,PVALUE                GET 'LOW' VALUE
         CR    R5,R9                    IS 'LOW' LESS THAN 'BUFFERS'
         BCR   LOW,R6                   YES, 'LOW' OK
         TM    PFLAG,PUSER              IS 'LOW' DEFAULT
         BO    BADLO                    NO, 'LOW' IS INVALID
         LA    R6,CHKNLKHI              SET UP RETURN ADDRESS
         B     BADBFNO                  'BUFFERS' IS INVALID
         SPACE 1
BADLO    EQU   *
         LR    R10,R4                   SET UP PARM ADDR IN KEYWORD
*                                       TABLE FOR SUBROUTINE
         BAL   R14,BADPARM              SEND OUT 'LOW' ERROR MSG
         SPACE 1
DEFTLO   EQU   *
         SR    R5,R5                    CLEAR REGISTER
         IC    R5,PDEFAULT              GET 'LOW' DEFAULT VALUE
         ST    R5,PVALUE                PUT VALUE IN TABLE
         NI    PFLAG,NOT-PUSER          INDICATE DEFAULT
         B     COMPHIGH                 GO TO COMPARE WITH 'HIGH'
         DROP  R4                       DROP KEYWORD ENTRY BASE
         SPACE 3
         SPACE 3
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              COMPUTE AMOUNT OF STORAGE NEEDED FOR RPT,
*              TSB TABLE AND BUFFERS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CNTRLBLK EQU   *
         USING KYWDSECT,R2
         LA    R2,BUFSIZE               POINTS TO 'BUFSIZE' ENTRY IN
*                                       KEYWORD TABLE
         L     R3,PVALUE                GET BUFFER SIZE
         SR    R0,R0                    CLEAR REGISTER FOR DEVIDE
         LH    R1,ONEPAGE               GET PAGE SIZE
         DR    R0,R3                    NO. OF BUFRS PER PAGE IN R1
         STH   R1,PGBUFNO               SAVE IT IN WORK AREA
         LA    R2,BUFFERS               POINTS TO 'BUFFERS' ENTRY
         L     R5,PVALUE                GET TOTAL NO. OF BUFFERS
         SR    R4,R4                    CLEAR REGISTER FOR DEVIDE
         DR    R4,R1                    NO. OF PAGES NEEDED IN R5
*                                       R4 HAS NO. OF BFRS ON LAST PG
*
*  CALCULATE SIZE OF LAST SECTION OF BUFFERS
*
         LTR   R4,R4                    DOES ALL BFRS FIT IN FULL PAGES
         BNZ   SAVEIT                   NO, SAVE THE REMAINDER
         LR    R4,R1                    PUT ONE FULL PAGE ON LAST SECT
         BCTR  R5,R0                    ONE LESS NO. OF FULL PAGES
         SPACE 1
SAVEIT   EQU   *
         STH   R4,LPGBUFNO              SAVE NO. OF BFRS ON LAST PAGE
         STH   R5,BFRPAGE               SAVE NO. OF FULL PAGES FOR BFR
         LR    R2,R4                    .BUFSIZE X NO. OF BFRS ON LAST
         MR    R2,R2                    .PAGE = NO. OF BYTES NEEDED FOR
*                                       .BFRS ON LAST PAGE (IN R3)
         LR    R4,R3                    SAVE IT IN ANOTHER REGISTER
*
*  CALCULATE TIOCRPT SIZE
*
         LA    R5,E1(,R5)               NO. OF ENTRIES IN RPT FREE
*                                       BFR LIST
         SLL   R5,E2                    MULTIPLY BY SIZE OF EACH ENTRY
         LA    R9,TIOCFBFL-TIOCRPT      GET RPT BASIC SECTION SIZE
         AR    R5,R9                    RPT SIZE IN R5
         STH   R5,RPTSIZE               SAVE RPT SIZE IN WORK AREA
         AR    R4,R5                    STORAGE NEEDED FOR BUFFERS ON
*                                       LAST PAGE PLUS RPT
         LA    R4,E7(,R4)               * MAKE SURE TSB STARTS
         N     R4,DWBNDY                * ON DOUBLE WORD BOUNDARY
*
*  CALCULATE SIZE OF TSB TABLE
*
         LA    R2,USERMAX               POSITION BASE REGISTER
         L     R5,PVALUE                GET USERMAX VALUE
         LR    R6,R5                    PUT IT IN R6
         LA    R7,TSBEND-TSB            GET TSB SIZE
         MR    R6,R6                    STORAGE NEEDED FOR TSB'S IS IN
*                                       R7
*
*  TOTAL SIZE FOR LAST SECTION OF BUFFERS, TIOCRPT AND TSB TABLE
*
         AR    R7,R4                    STORAGE NEEDED FOR LAST PAGE(S)
         ST    R7,LASTPAGE              SAVE IT IN WORK AREA
         SPACE 1
         GETMAIN RC,LV=(R7),SP=TIOCSP,BNDRY=PAGE GET STORAGE FOR RPT,
*                                       TSB TABLE AND BUFFERS
         SPACE 1
         LTR   R15,R15                  WAS STORAGE ALLOCATED
         BNZ   ERROR07                  GETMAIN FAILED
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              INITIALIZE TIOCRPT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         USING TIOCRPT,R7               ADDRESSABILITY FOR RPT
         USING TSB,R8                   ADDRESSABILITY FOR TSB
         USING TIOCBUF,R9               ADDRESSABILITY FOR BUFFERS
         LR    R7,R1                    ADDR OF PAGE JUST OBTAINED
         AR    R7,R3                    GET TO BEGINNING OF RPT
         ST    R7,RPTADDR               SAVE TIOCRPT ADDRESS
         LH    R8,RPTSIZE               GET RPT SIZE
         BCTR  R8,R0                    DECREMENT FOR EX
         EX    R8,ZERORPT               ZERO OUT RPT
         LA    R2,BUFFERS               POINTS TO 'BUFFERS' ENTRY
*                                       IN KEYWORD TABLE
         L     R0,PVALUE                GET TOTAL NO. OF TS BUFFERS
         STH   R0,TIOCNBF               INITIALIZE TIOCNBF FIELD
         STH   R0,TIOCNFBF              INITIALIZE TIOCNFBF
         LA    R2,BUFSIZE               R2 POINTS TO 'BUFSIZE' ENTRY
*                                       IN KEYWORD TABLE
         L     R0,PVALUE                GET BFR SIZE
         STH   R0,TIOCBFSZ              PUT BFR SIZE IN RPT
         STH   R5,TIOCNTSB              NO. OF TSB'S
         LA    R2,OWAITLO               R2 POINTS TO 'OWAITLO' ENTRY
*                                       IN KEYWORD TABLE
         L     R0,PVALUE                GET 'OWAITLO'
         STH   R0,TIOCOWTH              'OWAITLO' IS OWAIT THRESHOLD
         LA    R2,INLOCKLO              POSITION R2
         L     R0,PVALUE                GET 'INLOCKLO'
         STH   R0,TIOCRSTH              'INLOCKLO' IS RESTART THRESHOLD
         LA    R2,OWAITHI               POSITION R2
         L     R0,PVALUE                GET 'OWAITHI'
         STH   R0,TIOCAOMX              'OWAITHI' IS AOMX
         LA    R2,INLOCKHI              POSITION R2
         L     R0,PVALUE                GET 'INLOCKHI'
         STH   R0,TIOCAIMX              'INLOCKHI' IS AIMX
         LA    R2,RESVBUF               POSITION R2
         L     R0,PVALUE                GET 'RESVBUF' VALUE
         STH   R0,TIOCUSLW              INITIALIZE TIOCUSLW FIELD
         LA    R2,RECONLIM              POSITION BASE REGISTER
         L     R0,PVALUE                GET USERMAX VALUE
         STH   R0,TIOCRCLM              PUT IT IN TIOCRPT
         LH    R2,BFRPAGE               GET NO. OF FULL PAGES FOR BFRS
         LA    R2,E1(,R2)               ADD 1 TO BFR PAGES
         STH   R2,TIOCNBFL              NO. OF ENTRIES IN FREE BFR LIST
         LA    R8,E0(R4,R1)             GET ADDR OF TSB TABLE
*                                       (R1 HAS BEGINNING OF BUFFER
*                                       ADDR, R4 HAS STORAGE NEEDED FOR
*                                       BUFFERS ON LAST PAGE AND RPT
         ST    R8,TIOCTSB-1             PUT IT IN RPT
         LA    R0,TSBEND-TSB            GET SIZE OF TSB
         STC   R0,TIOCTSBS              PUT IT IN RPT
         ST    R1,TIOCFBFL              FREE BUFFER LIST
         LR    R9,R1                    PUT BFR ADDR IN R9
         LNR   R3,R1                    NEGATIVE VALUE OF PAGE ADDRESS
*
* GET QTIP BRANCH ENTRY ADDRESS
*
         SPACE 1
QTIPBRAD EQU   *
         LOAD  EP=IEDAYQT1,DCB=0        GET QTIP BRANCH ENTRY ADDR
         SPACE 2
         ST    R0,TIOCQTIP              PUT QTIP ENTRY ADDR IN RPT
         SPACE 3
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              INITIALIZE TSB'S
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
         LH    R0,TIOCNTSB              GET NO. OF TSB'S FOR CTR
         SPACE 1
CLEARTSB EQU   *
         XC    TSBSTAT(TSBEND-TSB),TSBSTAT  CLEAR TSB
         LA    R8,TSBEND-TSB(,R8)       POINTS TO NEXT TSB
         BCT   R0,CLEARTSB              BR UNTIL ALL TSB'S ARE DONE
         DROP  R8
         SPACE 3
         LA    R8,TIOCFBFL              POINT TO FREE BFR LIST IN RPT
         LH    R14,BFRPAGE              GET NO. OF PAGES FOR BUFFERS
         LH    R4,LPGBUFNO              GET NO. OF BFRS ON LAST PAGE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              CHAIN BUFFERS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHAINBFR EQU   *
         BCTR  R4,R0                    1 LT BFR NO. IN THIS PAGE
         LTR   R4,R4                    IS THIS THE LAST BFR
         BNP   LASTBFR                  YES, BRANCH
         LH    R10,TIOCBFSZ             GET BUFFER SIZE
         LNR   R6,R10                   NEG BFR SIZE FOR INDEXING
         SPACE 1
LINKBFR  EQU   *
         AR    R9,R10                   POINT TO NEXT BFR
         ST    R9,BUFFTRLR-1-TIOCBUF(R6,R9) CHAIN BUFFER
         BCT   R4,LINKBFR               BR UNTIL ALL BFRS CHAINED
         SPACE 1
LASTBFR  EQU   *
         ST    R3,BUFFTRLR-1            LAST BFR HAS NEGATIVE VALUE
*                                       OF PAGE ADDRESS
         SPACE 1
FULLPAGE EQU   *
         LTR   R14,R14                  ANY FULL PAGE BFR NEEDED
         BZ    FINALE                   NO, GO TO DO FINAL THINGS
*
         LH    R2,ONEPAGE               SIZE FOR ONEPAGE
         GETMAIN RC,LV=(R2),SP=TIOCSP,BNDRY=PAGE GET STORAGE FOR BFRS
*
         LTR   R15,R15                  WAS STORAGE ALLOCATED
         BNZ   ERROR09                  NO, CANNOT PROCEED
         BCTR  R14,R0                   DECREMENT PAGE COUNT
         LA    R8,E4(,R8)               POINT TO NEXT ENTRY OF FREE
*                                       BUFFER LIST IN RPT
         ST    R1,E0(,R8)               PUT PAGE ADDR IN RPT
         LR    R9,R1                    ADDRESS OF FIRST BUFFER
         LNR   R3,R1                    NEGATIVE VALUE OF PAGE ADDRESS
         LH    R4,PGBUFNO               GET NO. OF BFRS PER PAGE
         B     CHAINBFR                 BR TO CHAIN BUFFERS
         DROP  R2                       KEYWORD TABLE NOT ADDRESSABLE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              WRITE RECORD TYPE 31 FOR SMF
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FINALE   EQU   *
         L     R3,CVTPTR                GET CVT ADDR
         USING CVT,R3                   CVT ADDRESSABLE
         L     R2,CVTSMCA               GET SMCA ADDRESS
         LTR   R2,R2                    IS SMCA IN THE SYSTEM
         BZ    TSABOFF                  NO, GO TO TURN OFF TS ABEND
*                                       INDICATOR
         XC    TTISMF(RCDSIZE),TTISMF   ZERO OUT RECORD
         LA    R2,RCDSIZE               GET SIZE OF
         STH   R2,TTIRLEN               RECORD TYPE 31
         MVI   TTIRCDTY,TYPE31          RECORD TYPE 31
         LH    R2,TIOCNFBF              TOTAL NUMBER OF
         STH   R2,TTINBF                TIOC BUFFERS
         LH    R2,TIOCBFSZ              TIOC BUFFER
         STH   R2,TTIBUFSE              SIZE IN BYTES
         L     R2,TIOCAOMX              OWAIT MAX AND
         ST    R2,TTIOMAX               INLOCK MAX
         L     R2,TIOCOWTH              OWAIT THRESHOLD AND
         ST    R2,TTIOWTH               RESTART THRESHOLD
         LH    R2,TIOCUSLW              NUMBER OF BFRS RESERVED
         STH   R2,TTIUSLW               ON THE FREE QUEUE
         IC    R2,TIOCTSBS              SIZE OF
         STC   R2,TTITSBS               TSB'S
         LA    R1,TTISMF                PUT SMF RCD ADDR IN R1
         SMFWTM (1)                     SEND THIS RECORD TO SMF
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*            * PUT TIOCRPT ADDRESS AND TSINPUT'S QCB ADDRESS IN TCX
*            * TURN OFF TS ABEND INDICATOR IN TCAM AVT
*            * PUT QTIP ENTRY ADDRESS IN SVC TABLE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
TSABOFF  EQU   *
         L     R4,CVTAQAVT              GET TCX ADDR
         USING IEDQTCX,R4               TCX ADDRESSABLE
         L     R0,RPTADDR               GET TIOCRPT ADDRESS
         ST    R0,TCXRPT                PUT RPT ADDR IN TCX
         L     R2,OPCAVTPT              GET TCAM AVT ADDRESS
         USING IEDQAVTD,R2              ADDRESSABILITY
         NI    AVTBIT3,NOT-AVTTSAB      TURN OFF ABEND INDICATOR
         L     R0,AVTTSOPT              GET TSINPUT'S QCB ADDRESS
         ST    R0,TCXTSI                PUT IT IN TCX
         L     R2,CVTABEND              GET SECONDARY CVT ADDR
         DROP  R2                       DROP TCAM AVT BASE
         USING SCVTSECT,R2              ADDRESSABILITY FOR SEC'DARY CVT
         L     R2,SCVTSVCT              GET SVC TABLE ADDRESS
         DROP  R2                       DROP SECONDARY CVT BASE
         LA    R4,QTIP                  GET QTIP SVC NO.
         SLL   R4,E3                    MULTIPLY BY 8 TO GET OFFSET
*                                       TO SLOT FOR SVC 101
         LOAD  EP=IEDAYQT,DCB=0         GET QTIP MAIN ENTRY ADDRESS
         MODESET EXTKEY=SUPR            CHANGE INTO SUPERVISOR'S KEY
         ST    R0,E0(R4,R2)             PUT IT IN SVC TABLE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              ATTACH IEDAY802
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         MODESET EXTKEY=TCAM            CHANGE BACK INTO TCAM'S KEY
         ATTACH EP=IEDAY802             ATTACH IEDAY802
         ST    R1,TIOCLDS               SAVE SUBTASK TCB ADDRESS
         DROP  R3,R4,R9                 DROP BASE REGISTERS
         L     R1,MSG019I               GET WTO'S PARMLIST
         BAL   R14,WTO                  TELL OPER TS IS INITIALIZED
         SPACE 3
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              FREE THE WORK AREA AND XCTL TO NEXT LOAD
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
FREEWA   EQU   *
*
         IC    R2,CALLRKEY              SAVE CALLER'S KEY
         LA    R0,WAEND-WASTART         SIZE OF WORK AREA
FREEWAB  EQU   *
         FREEMAIN R,LV=(0),A=(11)       FREE WORK AREA
*
         SPKA  E0(R2)                   CHANGE BACK INTO CALLER'S KEY
         SPACE 3
EXIT     EQU   *
         L     R5,OPCCOPCE              GET ADDR OF OPC CONTROL ELEM
         USING IEDQOPCE,R5
         SR    R0,R0                    ZERO OUT REGISTER
         STH   R0,OCPARM                ZERO OUT BRANCH PARM
         L     R4,OPCAVTPT              REESTABLISH AVT BASE PTR
         LR    R1,ROPCAVT               R1 HAS OP CNTRL AVT ADDR
         XCTL  EP=IGC0710D              GIVE CONTROL TO NEXT LOAD
         DROP  R5                       DROP OPC CONTROL ELEM BASE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              ERROR ROUTINES
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         SPACE 1
ERROR01  EQU   *
         LA    R0,SYNTAXID              GET ERROR MESSAGE ID
         LR    R1,ROPCAVT               PASS OP CONTROL AVT PTR
         XCTL  EP=IGC0310D              GIVE CONTROL TO ERROR MSG LOAD
         SPACE 3
ERROR02  EQU   *
         L     R1,MSG007I               GET ADDR OF PARMLIST
         BAL   R14,WTO                  TELL OPER TS IS ALREADY IN
*                                       PROGRESS
         B     FREEWA                   FREE WORK AREA AND EXIT
         SPACE 3
ERROR03  EQU   *
         L     R1,MSG402I               GET ADDR OF PARMLIST
         BAL   R14,WTO                  TELL OPER TCAM PROC DOES NOT
*                                       SUPPORT TIME SHARING
         B     FREEWA                   FREE WORK AREA AND EXIT
         SPACE 3
ERROR04  EQU   *
         BAL   R14,UNALLOCA             UNALLOCATE PARMLIB
         SPACE 1
ERROR041 EQU   *
         L     R1,MSG414I               GET ADDR OF WTO PARMLIST
         BAL   R14,WTO                  TELL OPER PARMLIB OPEN FAILED
         B     CHKBFSZ                  USE DEFAULT VALUES
         SPACE 3
ERROR06  EQU   *
         L     R1,MSG006I               GET WTO PARMLIST ADDR
         BAL   R14,WTO                  TELL OPER I/O ERROR
         B     ERROR081                 GO TO USE DEFAULT VALUES
         SPACE 3
ERROR07  EQU   *
         L     R1,MSG404I               GET WTO PARMLIST ADDR
         BAL   R14,WTO                  SEND MSG FOR INSUFFICIENT
*                                       MAIN STORAGE
         BAL   R14,CPARMLIB             CLOSE PARMLIB
         B     FREEWA                   FREE WORK AREA AND EXIT
         SPACE 3
ERROR08  EQU   *
         L     R1,MSG408I               GET ADDR OF PARMLIST
         BAL   R14,WTO                  TELL OPER IKJPRM00
*                                       CANNOT BE FOUND
ERROR081 EQU   *
         BAL   R14,CPARMLIB             CLOSE PARMLIB
         B     CHKBFSZ                  USE DEFAULT VALUES
         SPACE 3
ERROR09  EQU   *
         LA    R4,TIOCFBFL              AD OF SECT RPT RESIDES  YM03016
         L     R3,MINUS4                FOR INDEXING            YM03016
         LH    R2,ONEPAGE               SIZE FOR ONE PAGE       YM03016
         SPACE 1
FREESTUP EQU   *                                                YM03016
         CR    R8,R4                    IS IT LAST SECT TO FREE YM03016
         BE    FREELAST                 YES, GO TO FREE LAST SECTION
         L     R1,E0(,R8)               GET ADDR OF PAGE TO FREE
         SPACE 1
FREE     EQU   *
         FREEMAIN R,LV=(2),A=(1),SP=TIOCSP  FREE 1 PAGE OF BUFFERS
         LTR   R3,R3                    WAS IT LAST PAGE JUST FREED
         BZ    ERROR07                  YES, SEND ERROR MSG
         LA    R8,E0(R3,R8)             BACK UP ONE ENTRY IN FREE
*                                       BUFFER LIST
         B     FREESTUP                 FREE NEXT PAGE
         SPACE 1
FREELAST EQU   *
         L     R1,E0(,R8)               GET ADDR OF PAST PAGE OF BFR
*                                       PLUS RPT AND TSB'S
         L     R2,LASTPAGE              GET SIZE OF LAST PAGE
         SR    R3,R3                    INDICATE LAST PAGE FREED
         B     FREE                     GO TO FREE STORAGE
         DROP  R7
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              THIS ROUTINE CONVERTS THE PARAMETER VALUE
*              INTO EBCDIC AND WRITE THE ERROR MESSAGE
*              TO THE OPERATOR CONSOLE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BADPARM  EQU   *
         USING KYWDSECT,R10
         L     R1,MSG407I               GET ADDRESS OF WTO PARMLIST
         LH    R15,E0(,R1)              GET MSG LENGTH
         BCTR  R15,R0                   DECREMENT FOR EX
         EX    R15,MOVEMSG              MOVE MSG TO WORK AREA
         LH    R7,PLENGTH               GET LENGTH OF PARM
         BCTR  R7,R0                    DECREMENT FOR EX
         EX    R7,MOVEPARM              MOVE PARAMETER TO MSG LIST
         LA    R8,MSGLIST+E38(R7)       POINT TO END OF KEYWORD
         MVI   E0(R8),EQUAL             PUT IN '=' SIGN
         L     R7,PVALUE                GET INVALUD VALUE
         CVD   R7,DOUBLE1               CONVERT VALUE TO PACKED DECIMAL
         UNPK  DOUBLE2(E8),DOUBLE1(E8)  UNPACK TO EBCDIC
         OI    DOUBLE2+E7,XF0           MAKE LAST DIGIT PRINTABLE
         LA    R7,DOUBLE2+E3            POINT TO FIRST POSSIBLE CHAR
         LA    R15,E4                   1 LT MAX BAD VALUE LENGTH
         SPACE 1
CHKZERO  EQU   *
         CLI   E0(R7),XF0               IS IT ZERO
         BNE   MOVEIT                   NO, MOVE VALUE
         LA    R7,E1(,R7)               POINT TO NEXT CHAR
         BCT   R15,CHKZERO              CHECK NEXT CHAR IF IT IS 0
         SPACE 1
MOVEIT   EQU   *
         EX    R15,MOVEVAL              MOVE BAD VALUE
         B     WTO001                   GO TO SEND ERROR MSG
         DROP  R10
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              MOVE WTO'S PARAMETER LIST TO THE WORK AREA
*              AND ISSUE WTO MACRO
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
WTO      EQU   *
         LH    R15,E0(,R1)              GET MSG LENGTH
         LA    R15,E3(,R15)             ADD 1 LT THE LENGTH OF
*                                       DESCRIPTOR/ROUTING CODES
         EX    R15,MOVEMSG              MOVE MSG LIST TO WORK AREA
         SPACE 1
WTO001   EQU   *
         LA    R1,MSGLIST               SET UP FOR WTO
         WTO   MF=(E,(1))               WRITE MSG OUT TO OPER CONSOL
         BR    R14                      GO BACK TO CALLER
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              THIS SUBROUTINE FINDS OUT THE NUMBER OF TERMINALS
*              WHICH CAN BE USED FOR TIME SHARING
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CTTSTERM EQU   *
         USING IEDQTRM,R1               ADDRESSABILITY FOR TRM
         USING IEDQAVTD,R4              ADDRESSABILITY FOR TCAM AVT
         USING IEDQTNTD,R15             ADDRESSABILITY FOR TNT
*
* LOCATE THE TRM VIA INDEX IN REG 1 AND TNT ROUTINE
*
         L     R4,OPCAVTPT              GET TCAM AVT ADDR
         SR    R5,R5                    INITIALIZE COUNTER
         L     R15,AVTRNMPT             GET TNT CODE ADDR
         LH    R8,TNTLEN                HIGHEST INDEX NO.
NEXTTRM  EQU   *
         LR    R1,R8                    PUT INDEX IN REG 1
         BALR  R14,R15                  GO TO TNT CODE
         L     R1,TRMDESTQ-E1           GET ADDRESS OF QCB
         DROP  R1                       R1 NO LONGER BASE FOR TRM
         USING IEDQQCB,R1               USE R1 AS QCB BASE
         TM    QCBDSFLG,QCBTSQ          CAN THIS TERM BE USED FOR TS
         BZ    CHKSTOP                  NO, SEE IF ANY MORE TERMINALS
*                                       TO CHECK
         LA    R5,E1(,R5)               ADD 1 TO TS TERM NUMBER
         SPACE 1
CHKSTOP  EQU   *
         BCT   R8,NEXTTRM               CHECK NEXT TERM IF ANY
         BR    R10                      TO BACK TO CALLER
         DROP  R1,R4,R15
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              CLOSE SYS1.PARMLIB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CPARMLIB EQU   *
         LA    R1,OPENPARM              GET ADDR OF PARMLIST
         CLOSE MF=(E,(1))               CLOSE PARMLIB
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              UNALLOCATE SYS1.PARMLIB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         SPACE 1
UNALLOCA EQU   *
         MVC   RQBLOCK(DAPLEND-DAPLIST),DAPLIST  RE-INTIALIZE REQUEST
*                                       BLOCK FOR UNALLOCATION
         MVI   VERBCODE,UNALLOC         REQUEST IS FOR UNALLOCATION
         MVC   WATEXT1,TEXT1            RE-INITIALIZE TEXT UNIT 1 IN WA
         LA    R1,WATPTR1               ADDR OF TEXT POINTER IN WA
         ST    R1,TEXTPTR               RELOCATE PTR TO TEXT PTR
         LA    R1,WATEXT1               ADDR OF TEXT UNIT 1 IN WA
         O     R1,HIBITON               SIGNAL LAST POINTER
         ST    R1,WATPTR1               RELOCATE WA TEXT POINTER 1
         LA    R1,RQBLKPTR              GET REQUEST BLOCK PTR
         DYNALLOC                       UNALLOCATE SYS1.PARMLIB
         BR    R14                      GO BACK TO CALLER
         DROP  RWABASE                  DROP WORK AREA BASE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              STOP TIME SHARING
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
STOP     EQU   *
         IPK                            GET CALLER'S KEY IN REG 2
         LR    R10,R2                   SAVE IT IN REG 10
         MODESET EXTKEY=SUPR            CHANGE INTO SUPERVISOR'S KEY
         LA    R5,E1(,R3)               R5 POINTS TO OPC WORK AREA
*                                       AFTER 'TS='
         L     R3,CVTPTR                GET CVT ADDRESS
         USING CVT,R3                   ADDRESSABILITY FOR CVT
         L     R4,CVTAQAVT              GET ADDRESS OF TCX
         USING IEDQTCX,R4               ADDRESSABILITY FOR TCX
         LR    R15,RBASE                SAVE BASE REGISTER
         LR    R6,ROPCAVT               SAVE OP CONTROL AVT PTR
         SPACE 1
GTLOCAL  EQU   *
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,      * GET LOCAL       X
               RELATED=(TIOCRPT,IEDAY1(FREELCL))     * LOCK
         SPACE 1
GTCMS    EQU   *
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,        * GET CMS         X
               RELATED=(TIOCRPT,IEDAY1(FREECMS))     * LOCK
         SPACE 3
         LR    RBASE,R15                RESTORE BASE REGISTER
         MODESET EXTKEY=TCAM            CHANGE INTO TCAM'S KEY
         L     R7,TCXRPT                GET TIOCRPT ADDRESS
         LTR   R7,R7                    IS TS IN PROGRESS
         BZ    RJCTSTOP                 NO, REJECT STOP TS REQUEST
         USING TIOCRPT,R7               ADDRESSABILITY FOR TIOCRPT
         TM    TIOCFLG,TIOCSTOP         IS TS STOP IN PROCESS
         BO    ASKREPLY                 YES, ASK FOR 'U' OR 'FSTOP'
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              SET ON TIOCSTOP FLAG
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         SPACE 3
         OI    TIOCFLG,TIOCSTOP         SET ON TS STOP FLAG
         LA    R5,E3(,R5)               * PICK AN ADDRESS ON WORD
         N     R5,MINUS4                * BOUNDARY IN OP CNTRL BFR
         L     R1,TIOCLDS               GET TIOC SUBTASK TCB ADDRESS
         MODESET EXTKEY=SUPR            CHANGE INTO SUPERVISOR'S KEY
         ST    R1,E0(,R5)               SAVE TIOCLDS IN OP CNTRL BUFFER
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              LOGOFF EACH TIME SHARING USER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         LH    R9,TIOCUSCT              GET TIOC USE COUNT
         LTR   R9,R9                    IS THERE ANY TS USER ON
         BZ    DETAY802                 NO, GO TO DETACH TIOC SUBTASK
         SPACE 1
*
*  LOGOFF EACH TIME SHARING USER
*
*        INTERFACE WITH SYSTEM INITIATED CANCEL -
*
*        REGISTER  0 - POST CODE
*        REGISTER  1 - ASCB ADDRESS
*        REGISTER 13 - POINT TO A SAVE AREA
*        REGISTER 14 - RETURN ADDRESS
*        REGISTER 15 - BRANCH ENTRY ADDRESS
*
         LH    R2,TIOCNTSB              GET NUMBER OF TSB'S
         L     R8,TIOCTSB-E1            GET FIRST TSB ADDRESS
         USING TSB,R8                   ADDRESSABILITY FOR TSB
         LA    R13,TIOCSAVE             SET UP SAVE AREA POINTER
         SPACE 1
TSBLOOP  EQU   *
         TM    TSBSTAT,TSBINUSE         IS THIS TSB IN USE
         BNO   NEXTTSB                  NO, CHECK NEXT TSB
         L     R1,TSBASCBA              GET ASCB ADDRESS
         L     R0,POSTCODE              'POST CODE' FOR SIC
         L     R15,CVTSIC               GET BRANCH ENTRY ADDRESS TO SIC
         BALR  R14,R15                  GO TO SYSTEM INITIATED CANCEL
         SPACE 1
NEXTTSB  EQU   *
         LA    R8,TSBEND-TSB(,R8)       POINT TO NEXT TSB
         BCT   R2,TSBLOOP               CHECK NEXT TSB IF ANY
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              DETACH IEDAY802
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
DETAY802 EQU   *
         MODESET EXTKEY=TCAM            CHANGE INTO TCAM'S KEY
         NI    TIOCTECB,NOT-WAITBIT     TURN WAIT BIT OFF
         OI    TIOCTECB,POSTBIT         TURN POST BIT ON
         BAL   R1,FREECMS               FREE LOCKS
         DETACH E0(,R5)                 DETACH IEDAY802
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              IF NO TIME SHARING USER ON, CALL TSEND TO FREE TIOC
*              STOREAGE.  IF THERE ARE TS USERS ON, TSEND WILL
*              BE CALLED BY IEDAY8 AFTER THE LAST USER HAS BEEN
*              LOGGED OFF.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         LTR   R9,R9                    ANY TIME SHARING USER ON
         BNZ   RESTOREK                 YES, EXIT TO NEXT LOAD
         TSEND                         ,CALL TSEND TO FREE TIOC STORAGE
         SPACE 1
         B     RESTOREK                 GET BACK TO CALLER'S KEY
         SPACE 1
RJCTSTOP EQU   *
         BAL   R1,FREECMS               GO TO FREE LOCKS
         L     R1,MSG021I               GET ADDRESS OF MSG LIST
         WTO   MF=(E,(1))               REJECT STOP TS REQUEST
         SPACE 1
RESTOREK EQU   *
         LR    R2,R10                   GET CALLER'S KEY
         SPKA  E0(R2)                   CHANGE  BACK TO CALLER'S KEY
         B     EXIT                     EXIT TO NEXT LOAD
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              FREE LOCK AND CROSS MEMORY LOCKS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FREECMS  EQU   *
         LR    R15,RBASE                SAVE BASE REGISTER
         MODESET EXTKEY=SUPR            CHANGE INTO SUPERVISOR'S KEY
         SETLOCK RELEASE,TYPE=CMS,               * FREE CMS            X
               RELATED=(TIOCRPT,IEDAY1(GETCMS))  * LOCK
         SPACE 1
FREELCL  EQU   *
         SETLOCK RELEASE,TYPE=LOCAL,             * FREE LOCAL          X
               RELATED=(TIOCRPT,IEDAY1(GETLCL))  * LOCK
         SPACE 1
*                                       FREE LOCAL LOCK
         LR    RBASE,R15                RESTORE BASE REGISTER
         LR    ROPCAVT,R6               RESTORE OP CONTROL AVT ADDR
         BR    R1                       RETURN TO CALLER OF SUBROUTINE
         SPACE 3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              THIS SECTION OF CODE WILL BE ENTERED ONLY
*              IF TS STOP IS CALLED AGAIN WHEN IT IS IN
*              PROGRESS.  IN SUCH CASE, THE OPERATOR IS ASKED
*              IF HE WANTS 'FSTOP'.  WHEN 'FSTOP' IS REQUESTED,
*              ISSUE TCABEND TO CANCEL ALL TIME SHARING USERS
*              AND FREE TIOC STORAGE.  OTHERWISE, JUST EXIT
*              TO LET NORMAL TS STOP FINISH ITS PROCESSING.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ASKREPLY EQU   *
         BAL   R1,FREECMS               FREE LOCKS
         MODESET EXTKEY=TCAM            CHANGE INTO TCAM'S KEY
         LA    R0,WASTOPND-WASTOP       SIZE OF WORK AREA
         GETMAIN R,LV=(0)               GET STORAGE FOR WORK AREA
         LR    RWABASE,R1               STORAGE RETURNED IN REG 1
         USING WASTOP,RWABASE           RWABASE IS THE BASE
         L     R2,MSG024D               GET MSG LIST ADDRESS
         MVC   MESSAGE,E0(R2)           MOVE MSG LIST TO WORK AREA
         LA    R2,REPLYECB              GET ADDRESS OF REPLY ECB
         ST    R2,ECBADDR               PUT IT IN MESSAGE LIST
         LA    R2,REPLY                 GET ADDRESS TO PLACE REPLY
         ST    R2,REPLYADD-E1           PUT IT IN MESSAGE LIST
         LA    R2,REPLYL                GET REPLY LENGTH
         STC   R2,REPLYLNG              PUT IT IN MESSAGE LIST
         SPACE 1
WTOR     EQU   *
         LA    R1,MESSAGE               POSITION R1 FOR WTOR
         SR    R0,R0                    CLEAR REGISTER
         ST    R0,REPLYECB              ZERO OUT ECB
         WTOR  ,,,,,MF=(E,(1))          INFORM OPERATOR TS STOP IN     -
                                        PROGRESS, ASK REPLY U OR FSTOP
         SPACE 1
         WAIT  ECB=REPLYECB,LONG=YES    WAIT FOR THE REPLY
         SPACE 1
         OC    REPLY(E8),BLANKS         FOLD REPLY TO UPPER CASE
         CLC   CU,REPLY                 IS REPLY 'U'
         BE    FREEWAP                  YES, NOTHING MORE TO DO
         CLC   CFSTOP(E5),REPLY         IS REPLY 'FSTOP'
         BNE   WTOR                     NO, LOOP BACK TO ASK AGAIN
         SPACE 1
*        TCABEND                        CALL TCABEND TO FORCE STOP TS
         SPACE 1
         LA    R0,ECABEND               LOAD ENTRY CODE         YM03842
         LA    R1,NOTDUMP               INFORM 9400 NOT TO DUMP YM03842
         SVC   TERMSTUS                 ISSUE TERM STATUS SVC   YM03842
         SPACE 1
FREEWAP  EQU   *
         LR    R2,R10                   GET CALLER'S KEY
         LA    R0,WASTOPND-WASTOP       SIZE OF WORK AREA
         B     FREEWAB                  FREE WORK AREA STORAGE AND EXIT
         DROP  R3,R4,R7,R8,RWABASE      DROP BASE REGISTERS
         SPACE 3
         USING WASTART,RWABASE          START WORK AREA ADDRESSABLE
MOVENAME MVC   DOUBLE1(0),E7(R3)        MOVE MEMBER TO WORK AREA
MOVEMSG  MVC   MSGLIST(E0),E0(R1)       MOVE WTO PARM LIST TO WORK AREA
MOVEKYWD MVC   MSGLIST+E37(E0),E0(R3)   MOVE BAD PARM TO MSG LIST
MOVEVAL  MVC   E1(0,R8),E0(R7)          MOVE BAD VALUE TO MSG LIST
         USING IHADCB,R2
MOVEDDNM MVC   DCBDDNAM(E0),WADDNAM     MOVE DDNAME OF PARMLIB TO DCB
         DROP  R2                       DROP DCB BASE
         USING KYWDSECT,R10             USE R10 AS KEYWORD ENTRY BASE
MOVEPARM MVC   MSGLIST+E37(E0),PKEYWORD MOVE KEYWORD TO MSG LIST
         DROP  R10                      DROP KEYWORD ENTRY BASE
         USING KYWDSECT,R2              USE R2 AS KEYWORD ENTRY BASE
COMPKYWD CLC   PKEYWORD(0),E0(R3)       COMPARE KEYWORD
         DROP  R2                       DROP KEYWORD ENTRY BASE
PACKVALU PACK  DOUBLE1(E8),E1(0,R4)     PACK SPECIFIED VALUE
         USING TIOCRPT,R7               USE R7 AS RPT BASE
ZERORPT  XC    TIOCQTIP(0),TIOCQTIP     ZERO OUT RPT
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              CONSTANTS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CSTART   DC    C'START'                 USED TO SCAN FOR STARTING TS
CFSTOP   DC    C'F'                     USED TO SCAN FOR FORCE STOP
CSTOP    DC    C'STOP'                  USED TO SCAN FOR STOPPING TS
CTIOC    DC    CL5'TIOC'                USED TO SCAN FOR TIOC PARAMETER
CPRM00   DC    C'IKJPRM00'              MEMBER NAME OF INSTALLATION
*                                       DEFAULT OF START TS PARAMETERS
CU       DC    C'U'                     USED TO SCAN NORMAL STOP
MINUS4   DC    F'-4'                    USED TO ROUND UP BUFFER SIZE
MAXIMUM  DC    F'32767'                 MAXIMUM FOR BUFFER NUMBER,
*                                       OWAITHI AND INLOCKHI
BLANKS   DC    X'40404040'              FULL WORD OF BLANKS
         DC    X'40404040'              FULL WORD OF BLANKS
HIBITON  DC    X'80000000'              USED TO TURN HIGH ORDER BIT ON
DWBNDY   DC    X'FFFFFFF8'              USED TO ROUND UP TO DW BNDY
POSTCODE DC    X'00000622'              COMPLETION CODE FOR
*                                       TERMINATED MEMORY
ONEPAGE  DC    H'4096'                  PAGE SIZE
MSGWRIT  DC    C'07'                    ID TO MOVE INTO OPCLDNME
*                                       IN OPCAVT
MSG005I  DC    V(WTO005I)               ADDRESS OF MSG LIST
MSG006I  DC    V(WTO006I)               ADDRESS OF MSG LIST
MSG007I  DC    V(WTO007I)               ADDRESS OF MSG LIST
MSG019I  DC    V(WTO019I)               ADDRESS OF MSG LIST
MSG021I  DC    V(WTO021I)               ADDRESS OF MSG LIST
MSG024D  DC    V(WTO024D)               ADDRESS OF MSG LIST
MSG402I  DC    V(WTO402I)               ADDRESS OF MSG LIST
MSG404I  DC    V(WTO404I)               ADDRESS OF MSG LIST
MSG407I  DC    V(WTO407I)               ADDRESS OF MSG LIST
MSG408I  DC    V(WTO408I)               ADDRESS OF MSG LIST
MSG414I  DC    V(WTO414I)               ADDRESS OF MSG LIST
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              DCB FOR SYS1.PARMLIB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PARMDCB  DCB   BLKSIZE=80,LRECL=80,DSORG=PO,EODAD=CLOSELIB,MACRF=(R),  X
               RECFM=F,DEVD=DA,SYNAD=ERROR06,DDNAME=A
ENDDCB   EQU   *
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              REQUEST BLOCK FOR ALLOCATING PARMLIB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
DAPLIST  DS    0F
         DC    X'14'                    LENGTH OF REQUEST BLOCK
         DC    X'01'                    REQUEST FOR DSN ALLOCATION
         DC    XL2'0000'                USE IT, IF ALREADY ALLOCATED
         DC    XL2'0000'                USED BY SVC 99 FOR ERROR CODE
         DC    XL2'0000'                USED BY SVC 99 FOR ERROR INFO
         DC    A(0)                     PTR TO A LIST OF TEXT PTRS
         DC    F'0'                     RESERVED
         DC    XL4'00000000'            NO SPECIAL REQUEST
DAPLEND  EQU   *                        END OF REQUEST BLOCK
             SPACE 1
*
*  TEXT POINTERS
*
TEXTPTRS DC    A(0)                     1ST TEXT POINTER
         DC    A(0)                     2ND TEXT POINTER
         DC    A(0)                     3RD TEXT POINTER
         DC    X'80',AL3(0)             4TH TEXT POINTER
             SPACE 1
*
*  TEXT UNITS
*
TEXT1    DC    XL2'0002'                DSNAME REQUEST
         DC    XL2'0001'                NUMBER
         DC    XL2'000C'                LENGTH OF PARM
         DC    C'SYS1.PARMLIB'          DATA SET NAME
         SPACE 1
TEXT2    DC    XL2'0004'                DATA SET STATUS
         DC    XL2'0001'                NUMBER
         DC    XL2'0001'                LENGTH OF PARM
         DC    XL1'08'                  SHARE
         SPACE 1
TEXT3    DC    X'0055'                  RETURN ALLOCATED DDNAME
         DC    X'0001'                  NUMBER
         DC    X'0008'                  LENGTH OF PARM
         DS    CL8                      DDNAME TO BE RETURNED
         SPACE 1
TEXT4    DC    XL2'0005'                DISPOSITION
         DC    XL2'0001'                NUMBER
         DC    XL2'0001'                LENGTH OF PARM
         DC    XL1'08'                  KEEP
DAPEND   EQU   *                        END OF DYN ALLOCATION PARM LIST
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              TIOC PARAMETER KEYWORD TABLE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PARMTBL  DS    0F                       WORD BOUNDARY ALIGNMENT
         DC    X'00'                    FLAG
         DC    AL1(64)                  BUFSIZE DEFAULT VALUE
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'BUFSIZE '              KEYWORD
         DC    F'0'                     SPECIFIED BUFSIZE VALUE
         DC    X'00'                    FLAG
         DC    AL1(0)                   USERMAX DEFAULT NOT USED
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'USERMAX '              KEYWORD
         DC    F'0'                     SPECIFIED USERMAX VALUE
         DC    X'00'                    FLAG
         DC    AL1(0)                   BUFFERS DEFAULT NOT USED
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'BUFFERS '              KEYWORD
         DC    F'0'                     SPECIFIED BUFFERS VALUE
         DC    X'00'                    FLAG
         DC    AL1(20)                  OWAITHI DEFAULT VALUE
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'OWAITHI '              KEYWORD
         DC    F'0'                     SPECIFIED OWAITHI VALUE
         DC    X'00'                    FLAG
         DC    AL1(4)                   OWAITLO DEFAULT VALUE
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'OWAITLO '              KEYWORD
         DC    F'0'                     SPECIFIED OWAITLO VALUE
         DC    X'00'                    FLAG
         DC    AL1(4)                   INLOCKHI DEFAULT VALUE
         DC    H'8'                     LENGTH OF KEYWORD
         DC    C'INLOCKHI'              KEYWORD
         DC    F'0'                     SPECIFIED INLOCKLO VALUE
         DC    X'00'                    FLAG
         DC    AL1(1)                   INLOCKLO DEFAULT VALUE
         DC    H'8'                     LENGTH OF KEYWORD
         DC    C'INLOCKLO'              KEYWORD
         DC    F'0'                     SPECIFIED INLOCKLO VALUE
         DC    X'00'                    FLAG
         DC    AL1(0)                   RESVBUF DEFAULT NOT USED
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'RESVBUF '              KEYWORD
         DC    F'0'                     SPECIFIED RESVBUF VALUE
         DC    X'00'                    FLAG
         DC    AL1(10)                  RECONLIM DEFAULT VALUE
         DC    H'8'                     LENGTH OF KEYWORD
         DC    C'RECONLIM'              KEYWORD
         DC    F'0'                     SPECIFIED RECONLIM VALUE
         DC    X'00'                    FLAG
         DC    AL1(0)                   USERCHG DEFAULT NOT USED
         DC    H'7'                     LENGTH OF KEYWORD
         DC    C'USERCHG '              KEYWORD
         DC    F'0'                     SPECIFIED USERCHG VALUE
         DC    X'00'                    FLAG
         DC    AL1(0)                   SLACK DEFAULT NOT USED
         DC    H'5'                     LENGTH OF KEYWORD
         DC    C'SLACK   '              KEYWORD
         DC    F'0'                     SPECIFIED SLACK VALUE
         DC    F'-1'                    MARK END OF TABLE
ENDPMTBL EQU   *
PATCH    DC    20F'0'                   PATCH AREA FOR IEDAY1
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              PRIVATE DSECT OF WORK AREA FOR START TS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0F
WASTART  DSECT
RQBLKPTR DS    F                        REQUEST BLOCK POINTER
RQBLOCK  DS    0X                       REQUEST BLOCK FOR SVC 99
LENGTH   DS    XL1                      LENGTH OF REQUEST BLOCK
VERBCODE DS    XL1                      VERB CODE
FLAG1    DS    XL2                      FLAGS
ERRCODE  DS    XL2                      ERROR CODE
INFOCODE DS    XL2                      INFORMATION CODE
TEXTPTR  DS    A                        PTR TO TEXT POINTERS
         DS    F                        RESERVED
FLAG2    DS    XL4                      FLAGS
RQBLKEND EQU   *
RQBLKLEN EQU   RQBLKEND-RQBLOCK         LENGTH OF REQUEST BLOCK
WATPTR1  DS    A                        ADDR OF TEXT UNIT 1
WATPTR2  DS    A                        ADDR OF TEXT UNIT 2
WATPTR3  DS    A                        ADDR OF TEXT UNIT 3
WATPTR4  DS    A                        ADDR OF TEXT UNIT 4
WATEXT1  DS    CL18                     TEXT UNIT 1
WATEXT2  DS    CL7                      TEXT UNIT 2
WATEXT3  DS    0CL14                    TEXT UNIT 3
         DS    CL4                      KEY AND NUMBER
WADDLEN  DS    CL2                      PARM LENGTH
WADDNAM  DS    CL8                      PARM FOR DDNAME
WATEXT4  DS    CL7                      TEXT UNIT 4
OPENPARM DS    F                        PARM LIST FOR OPEN
WADCB    DS    CL88                     WORK COPY FOR THE PARMLIB DCB
WADECB   DS    CL24                     WORK COPY OF DECB
BUFFER   DS    CL80                     AREA TO READ IN PARM RECORD
MSGLIST  DS    CL80                     AREA FOR WTO PARM LIST
KYWDTBL  DS    0F                       BEGINNING OF KEYWORD TABLE
BUFSIZE  DS    4F                       BUFFER SIZE
USERMAX  DS    4F                       USERMAX
BUFFERS  DS    4F                       TOTAL NUMBER OF BUFFERS
OWAITHI  DS    4F                       OWAITHI
OWAITLO  DS    4F                       OWAITLO
INLOCKHI DS    4F                       INLOCKHI
INLOCKLO DS    4F                       INLOCKLO
RESVBUF  DS    4F                       NO. OF RESERVED BUFFERS
RECONLIM DS    4F                       RECONNECT LIMIT
USERCHG  DS    4F                       USER CHANGE
SLACK    DS    4F                       SLACK TIME
ENDMARK  DS    F                        END OF TABLE MARKER
DOUBLE1  DS    D                        AREA FOR PACK/UNPACK
DOUBLE2  DS    D                        AREA FOR PACK/UNPACK
REGSAVE  DS    18F                      REGISTER SAVE AREA
OPCAVTSV DS    F                        SAVE AREA FOR OPC AVT
LASTPAGE DS    F                        SIZE OF LAST PAGE OF BFRS PLUS
*                                       RPT AND TSB TABLE
RPTSIZE  DS    H                        CONTAINS SIZE OF TIOCRPT
PGBUFNO  DS    H                        CONTAINS NO. OF BFRS PER PAGE
LPGBUFNO DS    H                        NO. OF BFRS ON LAST PAGE
BFRPAGE  DS    H                        KEEPS NO. OF FULL PAGE FOR BFRS
RPTADDR  DS    A                        AREA TO SAVE TIOCRPT ADDRESS
CALLRKEY DS    CL1                      SAVE AREA FOR CALLER'S KEY
         SPACE 2
*
* SMF RECORD
*
         IFASMFR (31)
TTIREND  EQU   *
RCDSIZE  EQU   TTIREND-TTISMF           SIZE OF SMF RCD TYPE 31
WAEND    EQU   *                        END OF WORK AREA
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              PRIVATE DSECT FOR MAPPING EACH ENTRY IN
*              THE KEYWORD TABLE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0F                       ALIGN ON WORD BOUNDARY
KYWDSECT DSECT
PFLAG    DS    X                        FLAG BUTE
PUSER    EQU   X'80'                    VALUE IS SPECIFIED
*        BITS 1-7 NOT USED
PDEFAULT DS    X                        DEFAULT VALUE
PLENGTH  DS    H                        LENGTH OF KEYWORD
PKEYWORD DS    CL8                      PARAMETER KEYWORD
PVALUE   DS    F                        SPECIFIED VALUE
PSIZE    EQU   *-PFLAG                  SIZE OF EACH PARMETER ENTRY IN
*                                       THE KEYWORD TABLE
         SPACE 3
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*              PRIVATE DSECT OF WORK AREA FOR STOP TS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0F                       FORCE WORD BOUNDARY
WASTOP   DSECT
REPLYECB DS    F                        ECB FOR WTOR
REPLY    DS    2F                       REPLY AREA
MESSAGE  DS    0CL67                    MESSAGE LIST
REPLYLNG DS    AL1                      REPLY LENGTH
REPLYADD DS    AL3                      REPLY ADDRESS
ECBADDR  DS    A                        ECB ADDRESS
MSGLNGTH DS    AL2                      MESSAGE LENGTH
MSGFLAGS DS    AL2                      MESSAGE FLAGS
MSGTEXT  DS    CL51                     MESSAGE TEXT
DESCCODE DS    AL2                      DESCRIPTOR CODE
ROUTCODE DS    AL2                      ROUTING CODE
WASTOPND EQU   *                        END OF WORK AREA FOR STOP
         SPACE 3
         TAVTD
         SPACE 3
         IKJTIOCB
         SPACE 3
CVT      DSECT
         CVT   LIST=YES
         SPACE 3
         DCBD  DSORG=PS
         SPACE 3
         TOPCAVTD
         SPACE 3
         TOPCED
         SPACE 3
         IHAPSA
         SPACE 3
         TQCBD
         SPACE 3
         IHASCVT LIST=YES
         SPACE 3
         IKJTIOCP LIST=YES
         SPACE 3
         TTCXD
         SPACE 3
         TTNTD
         SPACE 3
         TTRMD
         SPACE 3
         IKJTSB LIST=YES
         END
