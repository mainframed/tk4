         TITLE 'IKTCAS52 - TCAS TERMINATION'
IKTCAS52 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKTCAS52  79.136'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                                                  0022
*/********************************************************************/
*/*                                                                  */
*/* PROCEDURE-                                                       */
*/*      IKTCAS52                                                    */
*/*                                                                  */
*/* FUNCTION-                                                        */
*/*      MAINLINE CODE                                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0022
*   R8=ADDR(TWAMFL);                /* MAIN TASK FLAG BYTE ADDR      */
         LA    R8,TWAMFL(,TWAPTR)                                  0022
*   RFY                                                            0023
*    (R14,                                                         0023
*     R15,                                                         0023
*     R0,                                                          0023
*     R1) RSTD                      /* RESTRICT PARA REG             */
*         ;                                                        0023
*   GEN CODE REFS(TTWACS);                                         0024
*                                      /* TURN ON BYPASS INDICATOR  */
         L     9,0(8)                  FLAG ADDR
CSLOOP   LR    15,9                    LOAD FLAG BITS
         O     15,TTWACS               TURN ON BYPASS BIT
         CS    9,15,0(8)               COMPARE SWAP
         BNE   CSLOOP                  DO IT AGAIN IF NOT SUCCESSFUL
*   RFY                                                            0025
*    (R14,                                                         0025
*     R15,                                                         0025
*     R0,                                                          0025
*     R1) UNRSTD                    /* UNRESTRI PARA R               */
*         ;                                                        0025
*   IF R9<0 THEN                    /* IF BYPASS BIT ALREADY ON TO 0026
*                                      PREVENT CONCURRENT EXECUTION
*                                      OF THIS MODULE                */
         LTR   R9,R9                                               0026
         BM    @RT00026                                            0026
*     RETURN;                       /* RETURN TO CALLER              */
*   ENTCODE=R1;                     /* STORE ENTRY CODE              */
         STC   R1,ENTCODE                                          0028
*   IF ENTCDM='1'B THEN             /* IS DUMP SERVICE BIT ON        */
         TM    ENTCDM,B'00000001'                                  0029
         BNO   @RF00029                                            0029
*     DO;                           /* YES                           */
*       RFY                                                        0031
*         R1 RSTD;                                                 0031
*       R1=12;                      /* GET MSG 12-DUMP OPTION MSG    */
         LA    R1,12                                               0032
*       CALL IKTCAS56;              /* CALL MSG ROUTINE              */
         L     @15,TWAMSG(,TWAPTR)                                 0033
         BALR  @14,@15                                             0033
*       R8=R1+4;                    /* KEEP MSG ADDR                 */
         LA    R8,4                                                0034
         ALR   R8,R1                                               0034
*       RFY                                                        0035
*        (R14,                                                     0035
*         R15,                                                     0035
*         R0,                                                      0035
*         R1) RSTD                  /* RESTRICT PARA REG             */
*             ;                                                    0035
*       MSGRPY='';                  /* BLANK REPLY AREA              */
         MVI   MSGRPY,C' '                                         0036
         MVC   MSGRPY+1(7),MSGRPY                                  0036
*       DO WHILE(MSGRPY^='DUMP'&    /* DO UNTIL VALID REPLY          */
*             MSGRPY^='U');                                        0037
         B     @DE00037                                            0037
@DL00037 DS    0H                                                  0038
*         R1=R8;                    /* MSG TEXT ADDR RESTORED        */
         LR    R1,R8                                               0038
*         MSGRPY='';                /* CLEAR MSG REPLY AREA          */
         MVI   MSGRPY,C' '                                         0039
         MVC   MSGRPY+1(7),MSGRPY                                  0039
*         GEN SETS(MSGECB,MSGRPY);                                 0040
         XC    MSGECB,MSGECB           CLEAR ECB
         WTOR  ,MSGRPY,8,MSGECB,MF=(E,(1))   ASK OP DUMP OR NOT
         WAIT  ECB=MSGECB              WAIT FOR REPLY
*       END;                        /* LOOP                          */
@DE00037 CLC   MSGRPY(4),@CC00987                                  0041
         BE    @DC00037                                            0041
         CLI   MSGRPY,C'U'                                         0041
         BNE   @DL00037                                            0041
@DC00037 DS    0H                                                  0042
*       IF MSGRPY='DUMP' THEN       /* IF REPLY DUMP                 */
         CLC   MSGRPY(4),@CC00987                                  0042
         BNE   @RF00042                                            0042
*         DO;                       /* SCHEDULE SDUMP                */
*           GEN;                                                   0044
         SDUMP HDR='TCAS SDUMP',                                      CC
               SDATA=(SQA,ALLPSA,NUC,RGN,LPA,TRT,CSA),                CC
               QUIESCE=YES
*         END;                                                     0045
*     END;                                                         0046
*                                                                  0046
@RF00042 DS    0H                                                  0047
*   /*****************************************************************/
*   /*                                                               */
*   /* DETACH ALL SUBTASK CALLING ROUTINE MUST BE MAIN TASK R10 MUST */
*   /* CONTAIN THE ADDRESS OF WORK ELEMENT                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0047
*   IF ENTCDT='1'B THEN             /* IS DETACH SPEC IN ENTRY C     */
@RF00029 TM    ENTCDT,B'00000010'                                  0047
         BNO   @RF00047                                            0047
*     DO;                           /* YES                           */
*       IF R10^=0 THEN              /* CHECK R10 MUST NOT ZERO       */
         LTR   R10,R10                                             0049
         BZ    @RF00049                                            0049
*         DO;                       /* O.K.                          */
*           IF TWASYNQH=R10 THEN    /* R10 MUST POINT FIRST W.E.     */
         C     R10,TWASYNQH(,TWAPTR)                               0051
         BNE   @RF00051                                            0051
*             DO;                   /* YES                           */
*               RFY                                                0053
*                 WESTD BASED(R10); /* ADDRESSIBILITY OF FIRST WE    */
*               IF WECODE1T=TCML THEN/* IS TASK CODE MAIN TASK       */
         CLI   WECODE1T(R10),X'01'                                 0054
         BNE   @RF00054                                            0054
*                 DO;               /* YES, PERFORM THE FOLLOWING    */
*                                                                  0055
*                   /*************************************************/
*                   /*                                               */
*                   /* DETACH VTAM INTERFACE SUBTASK                 */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0056
*                   IF TWAVFL1='1'B&/* IS ATTACH BIT ON              */
*                       TWAVFL2='0'B THEN/* NOT ABEND                */
         TM    TWAVFL1(TWAPTR),B'10000000'                         0056
         BNO   @RF00056                                            0056
         TM    TWAVFL2(TWAPTR),B'01000000'                         0056
         BNZ   @RF00056                                            0056
*                     DO;           /* O.K. GO AHEAD DETACH          */
*                       RFY                                        0058
*                         WESTD BASED(ADDR(EOTWE));/* TEMP WE ADDR   */
*                       EOTWE=''B;  /* CLEAR END OF TASK WORK ELEMENT*/
         XC    EOTWE(12),EOTWE                                     0059
*                       WECODE1T=TCVI;/* VTAM TASK CODE              */
         LA    @07,EOTWE                                           0060
         MVI   WECODE1T(@07),X'02'                                 0060
*                       WECODE1F=FCVIDE;/* END OF TASK FUNC CODE     */
         MVI   WECODE1F(@07),X'03'                                 0061
*                       WENEXT=R10; /* Q NEXT WE THE CURRENT ONE     */
         ST    R10,WENEXT(,@07)                                    0062
*                       TWASYNQH=ADDR(EOTWE);/* PUT WE ON THE Q      */
         ST    @07,TWASYNQH(,TWAPTR)                               0063
*                       R8=ADDR(TWAVECB);/* VTAM SUBTASK ECB ADDR    */
         LA    R8,TWAVECB(,TWAPTR)                                 0064
*                       R9=ADDR(TWAVCOMP);/* VTAM SUBTASK COMP ECB A */
         LA    R9,TWAVCOMP(,TWAPTR)                                0065
*                       RFY                                        0066
*                        (R14,                                     0066
*                         R15,                                     0066
*                         R0,                                      0066
*                         R1) RSTD  /* RESTRICT PARA REG             */
*                             ;                                    0066
*                       GEN CODE;                                  0067
         POST  (8)                     POST VTAM INT SUBTASK
         WAIT  ECB=(9)                 WAIT ON EOT COMPLETION
*                       TWAVCOMP(1:8)='00'X;/* ZERO ECB              */
         MVI   TWAVCOMP(TWAPTR),X'00'                              0068
*                       TWAVFL1='0'B;/* TURN OFF ATTACH BIT          */
         NI    TWAVFL1(TWAPTR),B'01111111'                         0069
*                       R8=ADDR(TWAVTCB);/* VTAM SUBTASK TCB ADDR    */
         LA    R8,TWAVTCB(,TWAPTR)                                 0070
*                       GEN CODE;                                  0071
         DETACH (8)                    DETACH VTAM SUBTASK
*                       RFY                                        0072
*                        (R14,                                     0072
*                         R15,                                     0072
*                         R0,                                      0072
*                         R1) UNRSTD/* UNRESTRI PARA R               */
*                             ;                                    0072
*                     END;          /* DONE                          */
*                                                                  0073
*                   /*************************************************/
*                   /*                                               */
*                   /* DETACH USER INTERFACE SUBTASK                 */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0074
*                   IF TWAUFL1='1'B&/* USER INT SUBTASK ATTACHED     */
*                       TWAUFL2='0'B THEN/* NOT ABEND                */
@RF00056 TM    TWAUFL1(TWAPTR),B'10000000'                         0074
         BNO   @RF00074                                            0074
         TM    TWAUFL2(TWAPTR),B'01000000'                         0074
         BNZ   @RF00074                                            0074
*                     DO;           /* O.K. DO IT                    */
*                       EOTWE=''B;  /* CLEAR END OF TASK WORK ELEMENT*/
         XC    EOTWE(12),EOTWE                                     0076
*                       WECODE1T=TCUI;/* USER SUBTASK                */
         LA    @15,EOTWE                                           0077
         MVI   WECODE1T(@15),X'03'                                 0077
*                       WECODE1F=FCUIDE;/* EOT FUNCTION CODE         */
         MVI   WECODE1F(@15),X'03'                                 0078
*                       WENEXT=R10; /* R10 THE CURRENT WE ADDR       */
         ST    R10,WENEXT(,@15)                                    0079
*                       TWASYNQH=ADDR(EOTWE);/* Q THE EOT WE         */
         ST    @15,TWASYNQH(,TWAPTR)                               0080
*                       R8=ADDR(TWAUECB);/* USER TASK ECB ADDR       */
         LA    R8,TWAUECB(,TWAPTR)                                 0081
*                       R9=ADDR(TWAUCOMP);/* USER TASK COMP ECB ADDR */
         LA    R9,TWAUCOMP(,TWAPTR)                                0082
*                       RFY                                        0083
*                        (R14,                                     0083
*                         R15,                                     0083
*                         R0,                                      0083
*                         R1) RSTD  /* RESTRICT PARA REG             */
*                             ;                                    0083
*                       GEN CODE;                                  0084
         POST  (8)                     POST USER INT SUBTASK
         WAIT  ECB=(9)                 WAIT FOR EOT COMPLETION
*                       TWAUCOMP(1:8)='00'X;/* ZERO ECB              */
         MVI   TWAUCOMP(TWAPTR),X'00'                              0085
*                       TWAUFL1='0'B;/* TURN OFF ATTACH BIT          */
         NI    TWAUFL1(TWAPTR),B'01111111'                         0086
*                       R8=ADDR(TWAUTCB);/* USER INT SUBTASK TCB     */
         LA    R8,TWAUTCB(,TWAPTR)                                 0087
*                       GEN CODE;                                  0088
         DETACH (8)                    DETACH USER INT SUBTASK
*                       RFY                                        0089
*                        (R14,                                     0089
*                         R15,                                     0089
*                         R0,                                      0089
*                         R1) UNRSTD/* UNRESTRI PARA R               */
*                             ;                                    0089
*                     END;          /* DONE                          */
*                                                                  0090
*                   /*************************************************/
*                   /*                                               */
*                   /* DETACH CONSOLE COMMUNICATION SUBTASK          */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0091
*                   IF TWACFL1='1'B&/* IS CON COMM SUBTASK ATTACH    */
*                       TWACFL2='0'B THEN/* IS IT NOT ABENDED        */
@RF00074 TM    TWACFL1(TWAPTR),B'10000000'                         0091
         BNO   @RF00091                                            0091
         TM    TWACFL2(TWAPTR),B'01000000'                         0091
         BNZ   @RF00091                                            0091
*                     DO;           /* ATTACHED AND NOT ABENDED      */
*                       EOTWE=''B;  /* CLEAR AREA TO BUILD W.E.      */
         XC    EOTWE(12),EOTWE                                     0093
*                       WECODE1T=TCCI;/* STORE TASK CODE-CON COMM    */
         LA    @15,EOTWE                                           0094
         MVI   WECODE1T(@15),X'04'                                 0094
*                       WECODE1F=FCCIDE;/* STORE FUNC CODE-EOT       */
         MVI   WECODE1F(@15),X'03'                                 0095
*                       WENEXT=R10; /* R10->CURRENT WE WHICH BECOME
*                                      NEXT WE                       */
         ST    R10,WENEXT(,@15)                                    0096
*                       TWASYNQH=ADDR(EOTWE);/* PUT EOT WE ON THE  0097
*                                      QUEUE                         */
         ST    @15,TWASYNQH(,TWAPTR)                               0097
*                       R8=ADDR(TWACECB);/* R8 POINTS TO C.C. ECB    */
         LA    R8,TWACECB(,TWAPTR)                                 0098
*                       R9=ADDR(TWACCOMP);/* R9 POINTS TO COMP ECB   */
         LA    R9,TWACCOMP(,TWAPTR)                                0099
*                       RFY                                        0100
*                        (R14,                                     0100
*                         R15,                                     0100
*                         R0,                                      0100
*                         R1) RSTD  /* RESTRICT PARA REG             */
*                             ;                                    0100
*                       GEN CODE;                                  0101
         POST  (8)                     POST CON COMM SUBTASK ECB
         WAIT  ECB=(9)                 WAIT EOT COMPLETION
*                       TWACCOMP(1:8)='00'X;/* ZERO ECB              */
         MVI   TWACCOMP(TWAPTR),X'00'                              0102
*                       TWACFL1='0'B;/* TURN ATTACH BIT OFF          */
         NI    TWACFL1(TWAPTR),B'01111111'                         0103
*                       R8=ADDR(TWACTCB);/* R8 POINTS TO TCB ADDR    */
         LA    R8,TWACTCB(,TWAPTR)                                 0104
*                       GEN CODE;                                  0105
         DETACH (8)                    DETACH CON COMM SUBTASK
*                       RFY                                        0106
*                        (R14,                                     0106
*                         R15,                                     0106
*                         R0,                                      0106
*                         R1) UNRSTD/* UNRESTRI PARA R               */
*                             ;                                    0106
*                     END;                                         0107
*                 END;                                             0108
@RF00091 DS    0H                                                  0109
*             END;                                                 0109
@RF00054 DS    0H                                                  0110
*         END;                                                     0110
@RF00051 DS    0H                                                  0111
*     END;                                                         0111
@RF00049 DS    0H                                                  0112
*   TCASTPTR=TWATCAST;              /* TCAST ADDR            @ZA24777*/
@RF00047 L     @15,TWATCAST(,TWAPTR)                               0112
         ST    @15,TCASTPTR                                        0112
*   IF TCASTPTR^=0 THEN             /* IF TCAS TABLE EXISTS  @ZA35563*/
         LTR   @15,@15                                             0113
         BZ    @RF00113                                            0113
*     DO;                           /* DEQUEUE WORK ELEMENTS @ZA35563*/
*       IF ENTCFR='1'B THEN         /* IS FREE CROSS MEMORY REQUEST
*                                      SPECIFIED IN ENTRY CODE       */
         TM    ENTCFR,B'00000100'                                  0115
         BNO   @RF00115                                            0115
*         DO;                       /* YES                           */
*           RFY                                                    0117
*            (R6,                                                  0117
*             R7) RSTD;             /* NEED MORE REGS                */
*           R6=ADDR(TCASTTQH);      /* TERMINAL TRANSFER Q HEADER    */
         LA    R6,TCASTTQH(,@15)                                   0118
*           R9=-1;                  /* -1 MEANS NO MORE QUEUING      */
         SLR   R9,R9                                               0119
         BCTR  R9,0                                                0119
*           GEN;                                                   0120
CSLOP    CS   R8,R9,0(R6)            DEQ ALL W.E. FROM Q HEADER
         BNE CSLOP                LOOP UNTIL DEQ
*           RFY                                                    0121
*             WESTD BASED(R8);      /* ESTABLISH ADDRESSIBILITY      */
*           RFY                                                    0122
*            (R14,                                                 0122
*             R15,                                                 0122
*             R0,                                                  0122
*             R1) RSTD              /* RESTRICT PARA REG             */
*                 ;                                                0122
*           IF R8>0 THEN                                           0123
         LTR   R8,R8                                               0123
         BNP   @RF00123                                            0123
*             DO;                   /* IF THERE IS W.E. QUEUED       */
*               DO WHILE(R8^=0);    /* DO UNTIL DONE ALL THE W.E.    */
         B     @DE00125                                            0125
@DL00125 DS    0H                                                  0126
*                 R6=WEUECB;        /* USER MEMORY ECB ADDR          */
         L     R6,WEUECB(,R8)                                      0126
*                 R7=ADDR(CVTBRET); /* BR14 ADDR IN CVT              */
         L     R7,CVTPTR                                           0127
         LA    R7,CVTBRET(,R7)                                     0127
*                 R9=WEUASCB;       /* USER ASCB ADDR                */
         L     R9,WEUASCB(,R8)                                     0128
*                 GEN CODE;                                        0129
         POST (6),ASCB=(9),ERRET=(7) POST USER MEMORY
*                 R9=WENEXT;        /* KEEP NEXT W.E. ADDR           */
         L     R9,WENEXT(,R8)                                      0130
*                 R6=WELEN;         /* W.E. LENGTH                   */
         LH    R6,WELEN(,R8)                                       0131
*                 WA1=R8;           /* FREEMAIN ADDR                 */
         ST    R8,WA1                                              0132
*                 GEN CODE REFS(WA1);                              0133
         FREEMAIN E,LV=(6),A=WA1,SP=231 FREE THE W.E. STORAGE
*                 R8=R9;            /* RESTORE W.E. ADDR             */
         LR    R8,R9                                               0134
*               END;                /* LOOP AROUND                   */
@DE00125 LTR   R8,R8                                               0135
         BNZ   @DL00125                                            0135
*             END;                                                 0136
*         END;                                                     0137
@RF00123 DS    0H                                                  0138
*       TCASNACT='1'B;              /* TURN TCASNACT BIT ON  @ZA19908*/
@RF00115 L     @05,TCASTPTR                                        0138
         OI    TCASNACT(@05),B'00001000'                           0138
*     END;                          /* END TCAST EXISTS      @ZA35563*/
*   ELSE                                                           0140
*     ;                             /* TCAST TABLE DOES NOT EXIST  0140
*                                                            @ZA35563*/
@RF00113 DS    0H                                                  0141
*   TWAMFL1='0'B;                   /* TURN OFF BY PASS BIT          */
         NI    TWAMFL1(TWAPTR),B'01111111'                         0141
*   END IKTCAS52                                                   0142
*                                                                  0142
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKTTCAST)                                       */
*/*%INCLUDE SYSLIB  (IKTCASWA)                                       */
*/*%INCLUDE SYSLIB  (IKTWESTD)                                       */
*                                                                  0142
*       ;                                                          0142
@EL00001 L     @13,4(,@13)                                         0142
@EF00001 DS    0H                                                  0142
@ER00001 LM    @14,@12,12(@13)                                     0142
         BR    @14                                                 0142
@DATA    DS    0H
         DS    0F
@SA00001 DS    18F
         DS    0F
         DS    0D
TCASTPTR DS    A
TTWACS   DC    XL4'80000000'
WA1      DS    F
ENTCODE  DS    FL1
         ORG   ENTCODE
@NM00017 DS    BL1
ENTCFR   EQU   ENTCODE+0
ENTCDT   EQU   ENTCODE+0
ENTCDM   EQU   ENTCODE+0
         ORG   ENTCODE+1
@CC00987 DC    C'DUMP'
MSGRPY   DS    CL8
         DS    CL3
MSGECB   DS    BL4
EOTWE    DS    CL12
PATCH    DC    14F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TWAPTR   EQU   @11
R0       EQU   @00
R1       EQU   @01
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R14      EQU   @14
R15      EQU   @15
R12      EQU   @12
R13      EQU   @13
CVTPTR   EQU   16
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCAST    EQU   0
TCASUSER EQU   TCAST+4
TCASFLG1 EQU   TCAST+88
TCASNACT EQU   TCASFLG1
TCASTTQH EQU   TCAST+104
TWAR     EQU   0
TWASYNQH EQU   TWAR+4
TWATCAST EQU   TWAR+20
TWAMSG   EQU   TWAR+48
TWAVTCB  EQU   TWAR+52
TWAUTCB  EQU   TWAR+56
TWACTCB  EQU   TWAR+60
TWAVCOMP EQU   TWAR+68
TWAUCOMP EQU   TWAR+72
TWACCOMP EQU   TWAR+76
TWAMFL   EQU   TWAR+80
TWAMFL1  EQU   TWAMFL
TWAVFL   EQU   TWAR+81
TWAVFL1  EQU   TWAVFL
TWAVFL2  EQU   TWAVFL
TWAUFL   EQU   TWAR+82
TWAUFL1  EQU   TWAUFL
TWAUFL2  EQU   TWAUFL
TWACFL   EQU   TWAR+83
TWACFL1  EQU   TWACFL
TWACFL2  EQU   TWACFL
TWAM     EQU   TWAR+84
TWAME    EQU   TWAM+68
TWAMEI   EQU   TWAME
TWAV     EQU   TWAR+184
TWAVE    EQU   TWAV+68
TWAVEI   EQU   TWAVE
TWAVI    EQU   TWAR+284
TWAVECB  EQU   TWAVI
TWAU     EQU   TWAR+300
TWAUE    EQU   TWAU+68
TWAUEI   EQU   TWAUE
TWAUI    EQU   TWAR+400
TWAUECB  EQU   TWAUI
TWAC     EQU   TWAR+408
TWACE    EQU   TWAC+68
TWACEI   EQU   TWACE
TWACI    EQU   TWAR+508
TWACECB  EQU   TWACI
WESTD    EQU   0
WECODE1  EQU   WESTD
WECODE1T EQU   WECODE1
WECODE1F EQU   WECODE1+1
WECODE2  EQU   WESTD+2
WECODE2F EQU   WECODE2+1
WENEXT   EQU   WESTD+4
WERC     EQU   WESTD+8
WELEN    EQU   WESTD+10
WEUASCB  EQU   WESTD+12
WEVNIB   EQU   WESTD+16
WEUECB   EQU   WEVNIB
WETERM   EQU   WESTD+28
WETMFLG  EQU   WESTD+32
IKTCAS56 EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
WEALTC   EQU   WESTD+75
WEALTR   EQU   WESTD+74
WEPRMC   EQU   WESTD+73
WEPRMR   EQU   WESTD+72
WEBIND   EQU   WESTD+36
@NM00016 EQU   WESTD+35
WERUSZO  EQU   WESTD+34
WERUSZI  EQU   WESTD+33
@NM00015 EQU   WETMFLG
WENOSW   EQU   WETMFLG
WEFLG1   EQU   WETMFLG
WETMBF   EQU   WETERM+2
WESUBT   EQU   WETERM+1
WETMTP   EQU   WETERM
WELBUF   EQU   WESTD+24
WEVRPL   EQU   WESTD+20
WERC2    EQU   WERC+1
WERC1    EQU   WERC
WECD2MIF EQU   WECODE2F
WECD2MAF EQU   WECODE2F
WECODE2T EQU   WECODE2
WECDMIF  EQU   WECODE1F
WECDMAF  EQU   WECODE1F
TWAEND   EQU   TWAR+536
TWAWORKE EQU   TWAR+524
@NM00014 EQU   TWACI+13
TWACSKIP EQU   TWACI+12
TWACMODQ EQU   TWACI+8
TWACSTPQ EQU   TWACI+4
TWACERRS EQU   TWACE+4
TWACERA  EQU   TWACEI+1
TWACEIFC EQU   TWACEI
TWACRTFC EQU   TWAC+60
TWACABFC EQU   TWAC+56
TWACTWA  EQU   TWAC+52
TWACEWA  EQU   TWAC+4
TWACID   EQU   TWAC
TWAUACQH EQU   TWAUI+4
TWAUERRS EQU   TWAUE+4
TWAUERA  EQU   TWAUEI+1
TWAUEIFC EQU   TWAUEI
TWAURTFC EQU   TWAU+60
TWAUABFC EQU   TWAU+56
TWAUTWA  EQU   TWAU+52
TWAUEWA  EQU   TWAU+4
TWAUID   EQU   TWAU
TWAVACQH EQU   TWAVI+12
TWAVTHQH EQU   TWAVI+8
TWAVTEQH EQU   TWAVI+4
TWAVERRS EQU   TWAVE+4
TWAVERA  EQU   TWAVEI+1
TWAVEIFC EQU   TWAVEI
TWAVRTFC EQU   TWAV+60
TWAVABFC EQU   TWAV+56
TWAVTWA  EQU   TWAV+52
TWAVEWA  EQU   TWAV+4
TWAVID   EQU   TWAV
TWAMERRS EQU   TWAME+4
TWAMERA  EQU   TWAMEI+1
TWAMEIFC EQU   TWAMEI
TWAMRTFC EQU   TWAM+60
TWAMABFC EQU   TWAM+56
TWAMTWA  EQU   TWAM+52
TWAMEWA  EQU   TWAM+4
TWAMID   EQU   TWAM
@NM00013 EQU   TWACFL
TWACFL4  EQU   TWACFL
@NM00012 EQU   TWAUFL
TWAUFL4  EQU   TWAUFL
TWAUFL3  EQU   TWAUFL
@NM00011 EQU   TWAVFL
TWAVFL6  EQU   TWAVFL
TWAVFL5  EQU   TWAVFL
TWAVFL4  EQU   TWAVFL
TWAVFL3  EQU   TWAVFL
@NM00010 EQU   TWAMFL
TWAMECB  EQU   TWAR+64
TWADEQAS EQU   TWAR+44
TWAEESR  EQU   TWAR+40
TWAPPSR  EQU   TWAR+36
TWATCSR  EQU   TWAR+32
TWATTSR  EQU   TWAR+28
TWAINIT  EQU   TWAR+24
TWACSCB  EQU   TWAR+16
TWAASCB  EQU   TWAR+12
TWAPASQH EQU   TWAR+8
TWARSON  EQU   TWAR+2
TWACOMP  EQU   TWAR
TCASTEND EQU   TCAST+148
TCASTTYO EQU   TCAST+144
TCAS767O EQU   TCAST+140
TCAS767I EQU   TCAST+136
TCASDUMP EQU   TCAST+132
TCASSCHD EQU   TCAST+128
TCASTPND EQU   TCAST+124
TCASOMJR EQU   TCAST+120
@NM00009 EQU   TCAST+118
TCASBR14 EQU   TCAST+116
TCASATTN EQU   TCAST+112
TCASASCI EQU   TCAST+108
@NM00008 EQU   TCAST+102
@NM00007 EQU   TCAST+100
@NM00006 EQU   TCAST+98
@NM00005 EQU   TCAST+96
TCASASCB EQU   TCAST+92
TCASFLG4 EQU   TCAST+91
TCASFLG3 EQU   TCAST+90
TCASFLG2 EQU   TCAST+89
@NM00004 EQU   TCASFLG1
TCASVSD  EQU   TCASFLG1
TCASABND EQU   TCASFLG1
TCASMDSW EQU   TCASFLG1
TCASBKMD EQU   TCASFLG1
TCASLTE  EQU   TCAST+84
TCASEXIT EQU   TCAST+80
TCASOQM  EQU   TCAST+76
TCASIQM  EQU   TCAST+72
TCASTSB  EQU   TCAST+68
TCASTTL  EQU   TCAST+64
TCASWA   EQU   TCAST+60
TCASFRR  EQU   TCAST+56
TCASMSGS EQU   TCAST+52
TCASDATO EQU   TCAST+48
TCASDATI EQU   TCAST+44
TCASXECB EQU   TCAST+40
TCASTID  EQU   TCAST+32
@NM00003 EQU   TCAST+31
TCASCHNL EQU   TCAST+30
TCASCRSZ EQU   TCAST+28
TCASLBUF EQU   TCAST+24
TCASHBUF EQU   TCAST+20
TCASCLSZ EQU   TCAST+18
TCASRCON EQU   TCAST+16
TCASACBP EQU   TCAST+8
TCASUMAX EQU   TCASUSER+2
TCASUSEC EQU   TCASUSER
TCASID   EQU   TCAST
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00026 EQU   @EL00001
@ENDDATA EQU   *
         END   IKTCAS52,(C'PLS1947',0702,79136)
