         TITLE 'IEDQNF-CHECKPOINT EXECUTOR'
IEDQNF   CSECT
         SPACE 3
***********************************************************************
*                                                                     *
*  MODULE NAME = IEDQNF (TCAM,CHECKPOINT/RESTART)                     *
*                                                                     *
*  DESCRIPTIVE NAME = CHECKPOINT EXECUTOR                             *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  VERSION 10.0                                              *
*                                                                     *
*FUNCTIONS:THIS MODULE DETERMINES IF THERE IS ANYTHING THAT NEEDS TO  *
*   BE DONE BY CHECKPOINT AND WHICH MODULE SHOULD              @OY15469
*   PERFORM THE NEXT FUNCTION.                                        *
*                                                                     *
*   FOR TCAM CHECKPOINT, IF THE DISK IOB IS MARKED COMPLETE,          *
*   THE CHECKPOINT NOTIFICATION-DISPOSITION ROUTINE IS         @OY15469
*   GIVEN CONTROL. IF NO I/O IS IN PROCESS AND THERE IS A RECORD ON   *
*   THE DISK I/O QUEUE,THE I/O ROUTINE IS LOADED.        IF THERE     *
*   IS A REQUEST ELEMENT ON THE CHECKPOINT QCB,THE PROPER ROUTINE     *
*   IS GIVEN CONTROL TO BUILD A CHECKPOINT RECORD.@OY15469
*                                                                     *
*   FOR 3705 CHECKPOINT, THE 3705 CHECKPOINT OR 3705 RESTART          *
*   MODULE IS CALLED IF AN ELEMENT IS ON THE 3705 CHECKPOINT          *
*   QUEUE. IF I/O FOR A 3705 CHECKPOINT OR RESTART HAS FINISHED,      *
*   THEN THE KEY FIELD SAVED IN CAVTWTG IS USED TO DETERMINE          *
*   WHICH MODULE IS CALLED NEXT.                                      *
*                                                                     *
*   THE CHECKPOINT MODULES DO NOT NEED TO SAVE REGISTERS SINCE THEY   *
*   USE 'BALR' TYPE LINKAGE. THE CONTENTS OF THE FOLLOWING REGIS-     *
*   TERS ARE MAINTAINED FROM ONE LOAD MODULE TO ANOTHER:              *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORK AREA (TCAM CHECKPOINT ONLY)          *
*   9-ADDRESS OF AVT                                                  *
*   12-BASE REGISTER FOR IEDQNF                                       *
*   14-RETURN REGISTER-TO IEDQNF                                      *
*   15-ENTRY POINT-LOADED MODULE                                      *
*                                                                     *
*   REGISTER 14 POINTS TO A BRANCH TABLE IN IEDQNF.THE LOADED         *
*   MODULE RETURNS TO THAT ADDRESS PLUS A MULTIPLE OF FOUR,DEPEND-    *
*   ING ON THE FUNCTION TO BE PERFORMED.                              *
*                                                                     *
*   R14 PLUS 0-LOAD THE MODULE WHOSE NAME OFFSET IS IN REG 15. @OY15469
*   R14 PLUS 4-FUNCTION COMPLETE.                              @OY15469
*   R14 PLUS 8-WAIT FOR I/O TO COMPLETE.                       @OY15469
*                                                                     *
*   IF THERE IS NOTHING TO, THIS MODULE WAITS ON THE ECB LIST         *
*   UNLESS THE CLOSEDOWN BIT (IN CHECKPOINT REQUEST                   *
*   ELEMENT) IS ON; THEN THIS MODULE RETURNS TO THE OPERATING         *
*   SYSTEM THUS TERMINATING THE CHECKPOINT ATTACHED TASK.             *
*                                                                     *
*NOTES = SEE BELOW                                                    *
*                                                                     *
*   DEPENDENCIES = THE OPERATION OF THIS MODULE DEPENDS               *
*   UPON AN INTERNAL REPRESENTATION OF THE                            *
*   EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO                     *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY,WILL     *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
*   RESTRICTIONS = NONE                                               *
*                                                                     *
*   REGISTER CONVENTIONS = SEE REGISTER ASSIGNMENTS                   *
*                                                                     *
*   PATCH LABEL = PATCH                                               *
*                                                                     *
*MODULE TYPE = PROCEDURE                                              *
*                                                                     *
*   PROCESSOR = ASSEMBLER XF                                          *
*                                                                     *
*   MODULE SIZE = 740 DECIMAL BYTES                                   *
*                                                                     *
*   ATTRIBUTES = REUSABLE                                             *
*                                                                     *
*ENTRY POINT = IEDQNF                                                 *
*                                                                     *
*     PURPOSE = SEE FUNCTION                                          *
*                                                                     *
*     LINKAGE = RECEIVES CONTOL FROM THE OPERATING SYSTEM AS A        *
*               RESULT OF AN ATTACH MACRO ISSUED BY IEDQND.           *
*               REGISTER 15 HAS THE ENTRY POINT ADDRESS.              *
*                                                                     *
*INPUT = REGISTER 1 CONTAINS THE ADDRESS OF THE AVT                   *
*        REGISTER 13 CONTAINS THE CALLER'S SAVEAREA ADDRESS           *
*        REGISTER 15 CONTAINS THE ENTRY POINT ADDRESS                 *
*                                                                     *
*OUTPUT:NONE                                                          *
*                                                                     *
*EXITS-NORMAL:THIS MODULE EXITS TO OS IN ONE OF TWO WAYS:             *
*                                                                     *
*   1.WAIT-THERE ARE NO OUTSTANDING REQUEST ON THE CHECKPOINT QCB.    *
*   2.RETURN-THERE ARE NO OUTSTANDING REQUEST ON THE CHECKPOINT       *
*     QCB AND THE CLOSEDOWN COMPLETION BIT IS ON IN THE ENVIRONMENT   *
*     CHECKPOINT REQUEST ELEMENT.                                     *
*                                                                     *
*EXITS-ERROR:NONE                                                     *
*                                                                     *
*EXTERNAL REFERENCES = SEE BELOW                                      *
*                                                                     *
*   ROUTINES = SEE BELOW                                              *
*        'IEDQNG'-BUILDS INCIDENT RECORD FOR MH MACRO                 *
*        'IEDQNH'-BUILDS INCIDENT RECORD FOR TCHNG MACRO              *
*        'IEDQNJ'-BUILDS INCIDENT RECORD FOR OP.CONTROL COMMAND       *
*        'IEDQNK'-BUILDS ENVIRONMENT RECORD                           *
*        'IEDQNM'-BUILDS CKREQ RECORD                                 *
*        'IEDQNO'-MANAGES CHECKPOINT I/O QUEUE                        *
*        'IEDQNP'-WRITES CHECKPOINT RECORDS ON DISK                   *
*        'IEDQNQ'-ISSUES FREEMAINS AND NOTIFIES COMPLETION OF A       *
*                 CHECKPOINT                                          *
*        'IEDQNR'-TAKES CARE OF INSUFFICIENT CORE SITUATION           *
*        'IEDQNS'-TAKES CARE OF INCIDENT OVERFLOW                     *
*        'IEDQNT'-TAKES 3705 CHECKPOINTS - LOAD 1                     *
*        'IEDQNU'-TAKES 3705 CHECKPOINTS - LOAD 2                     *
*        'IEDQNV'-READS 3705 RESTART RECORDS                          *
*                                                                     *
*   DATA AREAS = CHECKPOINT WORKAREA                                  *
*               REQUEST ELEMENTS                                      *
*                                                                     *
*   CONTROL BLOCKS = AVT                                              *
*                    CAVT                                             *
*                    DCB                                              *
*                    DEB                                              *
*                    TCB                                              *
*                                                                     *
*TABLES = NONE                                                        *
*                                                                     *
*MACROS = DELETE                                                      *
*         IEDHJN                                                      *
*         LOAD                                                        *
*         RETURN                                                      *
*         SAVE                                                        *
*         WAIT                                                        *
*                                                                     *
*CHANGE ACTIVITY = SEE BELOW                                          *
*A-000000-999999                                              @Y16X5C0*
*A324000,483000,783000                                          A42413*
*C345000,486000                                                 A42413*
*A435000                                                       SA60802*
*A267000,324000,336000,360000,390000,405000,423000,429000     @Y17XACL*
*A495000,528000,546000,558000,588000,609000,627000,639000     @Y17XACL*
*A645000,665000,687000,711000,720000,726000,744000,777000     @Y17XACL*
*A786000,789000                                               @Y17XACL*
*C279000,312000                                               @Y17XACL*
*D270000,273000,285000,303000,354000,366000-381000            @Y17XACL*
*D393000-402000,426000,480000-488400,493000,498000,501000     @Y17XACL*
*D531000-537000,549000,552000,561000-570000,591000,594000     @Y17XACL*
*D612000,615000,630000,633000,642000,648000,651000,672000     @Y17XACL*
*D675000,690000-705000,714000,723000,729000,732000,747000     @Y17XACL*
*D780000,783000                                               @Y17XACL*
*A325000,534000,537000,720000,735000,777000                    @OY15469
*D483600-488400,576000,606000,624000,633000,645000,783000      @OY15469
*C033000,039000,051000-054000,252000-261000                    @OY15469
*A478000,492000,790740                                         @G36XRCU
*                                                                     *
*A391170,529400                                                @OZ31115
*C390060-390090,391890,777100                                  @OZ31115
*A547800,558000                                                @OY20868
***********************************************************************
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        REGISTER ASSIGNMENTS                                         *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0                        WORK REGISTER          @Y17XACL
R1       EQU   1                        WORK REGISTER          @Y17XACL
RCKPT    EQU   2                        ADDRESS OF TCAM CKPT   @Y17XACL
*                                       WORKAREA               @Y17XACL
R3       EQU   3                        ADDRESS OF REQUEST ELEMENT
R4       EQU   4                        ADDR OF LAST DISK RCD BUILT
R5       EQU   5                        ADDRESS OF LOAD LIST
R6       EQU   6                        BAL REG
R7       EQU   7                        INDEX INTO LOAD LIST
R8       EQU   8                        INDEX INTO LOAD LIST
RAVT     EQU   9                        ADDRESS OF AVT
R11      EQU   11                       WORK REGISTER          @Y17XACL
RBASE    EQU   12                       BASE REG
R13      EQU   13                       SAVE AREA
R14      EQU   14                       RETURN ADDRESS
R15      EQU   15                       ENTRY POINT OR RETURN CODE
ZERO     EQU   0                        DISPLACEMENT           @OY15469
TWO      EQU   2                        LENGTH OR DISPLACEMENT @OY15469
THREE    EQU   3                        LENGTH                 @OY15469
FOUR     EQU   4                        LENGTH OR DISPLACEMENT @OY15469
FIVE     EQU   5                        DISPLACEMENT           @OY15469
EIGHT    EQU   8                        DISPLACEMENT           @OY15469
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        STANDARD LINKAGE                                             *
*                                                                     *
***********************************************************************
         SPACE
         USING *,R15                    TEMPORARY BASE
         USING IEDQCKPD,RCKPT           TCAM CKPT WORKAREA     @Y17XACL
*                                       ADDRESSABILITY         @Y17XACL
         USING IEDQCRED,R3              BASE FOR REQUEST ELEMENT
         USING IEDQAVTD,RAVT            AVT ADDRESSABILITY     @Y17XACL
IEDQNF   IEDHJN SKIPID                  MODIFICATION DATE        S21903
         SAVE  (14,12)
         LR    RAVT,R1                  ADDRESS OF AVT PASSED AS PRM416
         ST    R13,SAVE13               SAVE REGISTER 13       @Y17XACL
         LR    RBASE,R15                SET BASE REG
         DROP  R15
         USING IEDQNF,RBASE
         SPACE 2                                               @Y17XACL
         XC    IEDQCKAD(CAVTSIZE-FOUR),IEDQCKAD  CLEAR CKPT AVT@OZ31115
         LA    RCKPT,IEDQCKAD           GET ADDR OF CKPT AVT   @Y17XACL
         STCM  RCKPT,B'0111',AVTCKAVT   SAVE ADDR OF CAVT      @Y17XACL
         SLR   RCKPT,RCKPT              CLEAR TCAM CKPT        @Y17XACL
*                                       WORKAREA POINTER       @Y17XACL
         TM    AVTCKFLG,AVTCKTAC        IS TCAM CKPT ACTIVE    @Y17XACL
         BZ    QNF06                    NO, BRANCH             @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        TCAM CHECKPOINT IS ACTIVE. FIND THE CHECKPOINT DEB ON        *
*        THE TCAM DEB CHAIN AND GET THE TCAM CHECKPOINT WORKAREA      *
*        ADDRESS. SET UP THE ECB WAIT LIST FOR TCAM CHECKPOINT.       *
*                                                                     *
***********************************************************************
         L     R1,AVTTCB                GET TCAM TCB ADDRESS   @Y17XACL
         USING IEDQTCB,R1               TCB ADDRESSABILITY     @Y17XACL
         LA    R1,TCBDEB-(DEBDEBAD-DEBNMSUB) GET ADDR OF       @Y17XACL
*                                       TCAM DEB CHAIN AS      @Y17XACL
*                                       AS DUMMY 1ST DEB       @Y17XACL
         USING DEBNMSUB,R1              DEB ADDRESSABILITY     @Y17XACL
         USING IHADCB,R5                DCB ADDRESSABILITY     @Y17XACL
QNF02    EQU   *                                               @Y17XACL
         L     R1,DEBDEBAD              GET ADDR OF NEXT DEB   @Y17XACL
         L     R5,DEBDCBAD              GET DCB ADDRESS        @Y17XACL
         TM    DCBDSRG2,DCBDSGTQ        IS THIS A TCAM QUEUE   @Y17XACL
*                                       DATA SET               @Y17XACL
         BZ    QNF02                    NO, BRANCH             @Y17XACL
         TM    DCBOPTCD,CHECKPT         IS THIS THE TCAM       @Y17XACL
*                                       CKPT DCB               @Y17XACL
         BZ    QNF02                    NO, BRANCH             @Y17XACL
         L     RCKPT,DCBIOBAD           GET THE TCAM CKPT      @Y17XACL
*                                       WORKAREA ADDRESS       @Y17XACL
         LA    RCKPT,0(,RCKPT)          CLEAR HI BYTE          @Y17XACL
         ST    RCKPT,CAVTTCWA           PUT WORKAREA ADDR IN   @Y17XACL
*                                       THE CAVT               @Y17XACL
         ST    R13,CKPSAVE1+4           SAVE CALLER'S R13      @Y17XACL
         SR    R7,R7                    CLEAR REGISTER         @OZ31115
         IC    R7,AVTNCKPR              GET NUMBER OF CKREQ Q'S@OZ31115
         LTR   R6,R7                    CHECK FOR CKREQ=0      @OZ31115
         BZ    QNF03                    BRANCH IF ZERO         @OZ31115
         LA    R7,CKPCKRNO(0,R7)        NUMBER OF EXTRA RECORDS@OZ31115
*                                        (TO USE IN CASE OF    @OZ31115
*                                        DISK ERROR)           @OZ31115
         LA    R6,CKPCTTRL              CKREQ TTR ENTRY LENGTH @OZ31115
         MR    R6,R6                    NUMBER OF BYTES FOR    @OZ31115
*                                        CKREQ TTR TABLE       @OZ31115
QNF03    EQU   *                                               @OZ31115
         LA    R5,CKPLNGTH(0,R7)        FIXED WORK AREA LENGTH @OZ31115
         IC    R6,AVTCPRCD              NUMBER OF ENV RCDS     @OZ31115
         LA    R7,CKPTTRLN              LENGTH FOR EACH TTR    @OZ31115
         MR    R6,R6                    LENGTH FOR ALL RCDS    @OZ31115
         AR    R5,R7                    ADD TO TOTAL LENGTH    @OZ31115
         STH   R5,CAVTCKTR              SAVE CKPT TRACE OFFSET @OZ31115
QNF05    EQU   *                                               @OZ31115
         LA    R5,CKPSAVE1              GET CKPT SAVEAREA ADDR @Y17XACL
         ST    R5,8(R13)                SAVE CKPT SAVE AREA    @Y17XACL
*                                       ADDR IN IT'S SAVEAREA  @Y17XACL
         LA    R5,AVTCKPEC              GET ADDR OF ECB FOR    @Y17XACL
*                                       TCAM CKPT QUEUE        @Y17XACL
         ST    R5,CAVTTQE               SAVE ECB ADDR IN THE   @Y17XACL
*                                       WAIT LIST              @Y17XACL
         LA    R5,CKPECB                GET ADDR OF ECB FOR    @Y17XACL
*                                       TCAM CKPT I/O          @Y17XACL
         STCM  R5,B'0111',CAVTTIOE      SAVE ECB ADDR IN THE   @Y17XACL
*                                       WAIT LIST              @Y17XACL
         MVI   CKPECB,0                 CLEAR ECB COMPLETION   @Y17XACL
         DROP  R1,R5                                           @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        IF 3705 CHECKPOINT IS NOT ACTIVE, THEN SET END OF LIST       *
*        IN THE WAIT LIST. OTHERWISE, PUT THE 3705 CHECKPOINT         *
*        QUEUE ECB ADDRESS IN THE WAIT LIST AND SET END OF LIST.      *
*                                                                     *
***********************************************************************
QNF06    EQU   *                                               @Y17XACL
         TM    AVTCKFLG,AVTCKNAC        IS 3705 CKPT ACTIVE    @Y17XACL
         BNO   QNF07                    NO, BRANCH             @OZ31115
         SR    R5,R5                    CLEAR REGISTER         @OZ31115
         LA    R5,CKPLNGTH+CKPTTRLN     MINIMUM AREA SIZE      @OZ31115
         STH   R5,CAVTCKTR              SAVE CKPT TRACE OFFSET @OZ31115
         B     QNF08                    BRANCH                 @OZ31115
QNF07    EQU   *                                               @OZ31115
         MVI   CAVTEOL1,EOL             SET END-OF-LIST IN     @Y17XACL
*                                       THE WAIT LIST          @Y17XACL
         B     QNF10                    SCAN FOR WORK TO DO    @Y17XACL
         SPACE 2                                               @Y17XACL
QNF08    EQU   *                                               @Y17XACL
         L     R5,AVTSAVTP              GET SECONDART AVT ADDR @Y17XACL
         LA    R5,SAVTCKEC-IEDNSVTD(,R5) GET ADDR OF ECB FOR   @Y17XACL
*                                       THE 3705 CKPT QUEUE    @Y17XACL
         STCM  R5,B'0111',CAVTNQE       SAVE ECB ADDR IN THE   @Y17XACL
*                                       WAIT LIST              @Y17XACL
         MVI   CAVTEOL2,EOL             SET END-OF-LIST IN THE @Y17XACL
*                                       WAIT LIST              @Y17XACL
         SPACE 1                                               @Y17XACL
*                                       LOAD THE 3705 CKPT/    @Y17XACL
         LOAD  EPLOC=IEDQNW             RESTART I/O ROUTINE    @Y17XACL
         ST    R0,CAVTCRIO              SAVE ADDR OF ROUTINE   @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        CHECK FOR 3705 CHECKPOINT I/O COMPLETE.                      *
*                                                                     *
***********************************************************************
QNF10    EQU   *
         ICM   R5,B'0111',CAVTNIOE      IS 3705 CKPT I/O       @Y17XACL
*                                       STARTED                @Y17XACL
         BZ    QNF12                    NO, BRANCH             @Y17XACL
         TM    ECBCC(R5),CKPPOST        IS ECB POSTED COMPLETE @Y17XACL
         BZ    QNF12                    NO, BRANCH             @Y17XACL
         SLR   R7,R7                    CLEAR INDEX REGISTER   @Y17XACL
         IC    R7,CAVTWTG               SET KEY SAVED BY 3705  @Y17XACL
*                                       CKPT/RESTART I/O       @Y17XACL
*                                       ROUTINES               @Y17XACL
         B     QNF20                    GO LOAD ROUTINE        @Y17XACL
         SPACE 2                                               @Y17XACL
***********************************************************************
*                                                                     *
*        CHECK FOR TCAM CKPT I/O.                                     *
*                                                                     *
***********************************************************************
QNF12    EQU   *                                               @Y17XACL
         TM    AVTCKFLG,AVTCKTAC        IS TCAM CKPT ACTIVE    @Y17XACL
         BZ    QNF15                    NO, BRANCH             @Y17XACL
         TM    CKPECB,CKPPOST           CHECK FOR POSTED DISK IOB
         BO    QNF35                    BRANCH IF I/O COMPLETED
         SPACE
         L     R3,CKPEXCP               CHECK FOR EXCP ISSUED
         LTR   R3,R3
         BZ    QNF70                    BRANCH IF NO I/O BEING DONE
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        CHECK FOR REQUEST ELEMENT ON THE 3705 CHECKPOINT/RESTART     *
*        QUEUE.                                                       *
*                                                                     *
***********************************************************************
         SPACE 1                                               @Y17XACL
         USING IEDNSVTD,R5              SAVT ADDRESSABILITY    @Y17XACL
QNF15    EQU   *
         TM    AVTCKFLG,AVTCKNAC        IS 3705 CKPT ACTIVE    @Y17XACL
         BZ    QNF17                    NO, BRANCH             @Y17XACL
         L     R5,AVTSAVTP              GET SAVT ADDR          @Y17XACL
         ICM   R3,B'0111',SAVTCKCH      GET REQUEST ELEMENT    @Y17XACL
*                                       FROM THE CHAIN         @Y17XACL
         CLI   CREPRI,0                 IS CHAIN EMPTY - I.E.  @Y17XACL
*                                       ONLY DUMMY END WITH    @Y17XACL
*                                       PRIORITY OF 0 IS ON    @Y17XACL
*                                       THE CHAIN              @Y17XACL
         BE    QNF17                    YES, BRANCH            @Y17XACL
         MVC   SAVTCKCH,CRELINK+1       REMOVE REQUEST ELEMENT @Y17XACL
*                                       FROM THE CHAIN         @Y17XACL
         L     R5,AVTOCGET              GET OPERATOR CONTROL   @Y17XACL
*                                       AVT ADDRESS            @Y17XACL
         L     R5,OPCCKPTF-IEDQOPCD(,R5) GETS ADDR OF OPCE     @Y17XACL
*                                       THAT NEEDS CKPT        @Y17XACL
         L     R5,OCCKPTWA-IEDQOPCE(,R5) GET 3705 CKPT         @Y17XACL
*                                       WORKAREA ADDRESS       @Y17XACL
         ST    R5,CAVTNWA               SAVE WORKAREA ADDRESS  @Y17XACL
         B     QNF19                    GO LOAD ROUTINE        @Y17XACL
         DROP  R5                                              @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        CHECK FOR REQUEST ELEMENT ON THE TCAM CKPT QUEUE             *
*                                                                     *
***********************************************************************
QNF17    EQU   *                                               @Y17XACL
         TM    AVTCKFLG,AVTCKTAC        IS TCAM CKPT ACTIVE    @Y17XACL
         BZ    QNF80                    NO, BRANCH             @Y17XACL
         L     R3,CKPLREB               GET LAST REQUEST ELEMENT       *
                                        FOR WHICH RECORD WAS BUILT
         LA    R3,0(,R3)                CLEAR HIGH-ORDER BYTE   SA60802
         LTR   R3,R3                    CHECK FOR PREVIOUS RCD BLT
         LR    R11,R3                   SAVE PREVIOUS ELEMENT
         L     R3,4(R3)                 GET REQUEST EL FOR THIS RD
         BNZ   QNF18                    BRANCH IF THIS EL ISNT 1ST     *
                                        ON QCB CHAIN TO BE BUILT
         L     R3,AVTCKPTB              GET 1ST ELEMENT ON QCB CHN
         LA    R11,AVTCKPTB-4           DUMMY PREVIOUS ELEMENT
QNF18    EQU   *
         SPACE
         CLI   4(R3),0                  CHECK FOR DUMMY LAST ELEMEN
         BE    QNF80                    BRANCH IF LAST ELEMENT
         CLI   CREKEY,CREREMVE          CHECK FOR TIME DELAY           X
                                        REMOVAL ELEMENT
         BNE   QNF19                    BRANCH IF NOT REMOVAL ELEM
         SPACE 1                                               @Y17XACL
*                                                              @G36XRCU
*        REMOVE TIME DELAY ELEMENT FROM QCB ELEMENT            @G36XRCU
*        CHAIN AND IGNORE                                      @G36XRCU
*                                                              @G36XRCU
         MODESET MODE=SUP               SET TO SUPERVISOR MODE @G36XRCU
         MODESET EXTKEY=SUPR            SET TO KEY 0           @G36XRCU
SETATSK  EQU   *                                               @G36XRCU
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               *
               RELATED=ATTACHED-TASKS-IGG019RO(SETATSK)        @G36XRCU
         MVC   CRELINK+1-IEDQCRED(3,R11),CRELINK+1 MOVE LINK FIELD
         L     R3,CRELINK               GET NEXT ELEMENT
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          *
               RELATED=ATTACHED-TASKS-IEDQNF(SETATSK)          @G36XRCU
         MODESET EXTKEY=TCAM            SET TO TCAM KEY        @G36XRCU
         MODESET MODE=PROB              SET TO PROBLEM STATE   @G36XRCU
         B     QNF18                    PROCESS NEXT REQUEST ELEMEN
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        DETERMINE NEXT MODULE TO LOAD                                *
*                                                                     *
***********************************************************************
         SPACE
QNF19    EQU   *
         SR    R7,R7                    CLEAR INDEX REG
         SPACE
         IC    R7,0(R3)                 GET KEY FIELD OF ELEMENT
         SRL   R7,1                     GET MULTIPLE OF 8
QNF20    EQU   *
         SRL   R7,1                     DIVIDE BY 2                0525
         LA    R5,QNFLIST(R7)           ADDRESS OF LOAD MODULE NAME
         MVC   MOD,0(R5)                MOVE LAST 4 CHARS OF   @Y17XACL
*                                       NAME                   @Y17XACL
         CLC   ZERO(TWO,R5),MODNT       3705 CKPT MODULE       @OZ31115
         BL    TCAMCKPT                 NO, BRANCH             @OZ31115
         L     R8,CAVTNWA               3705 CKPT WORKAREA ADDR@OZ31115
         AH    R8,CAVTNTR               ADDR 3705 CKPT TRACE   @OZ31115
         B     TRACE                    PUT IN TRACE ENTRY     @OZ31115
TCAMCKPT EQU   *                                               @OZ31115
         L     R8,CAVTTCWA              TCAM CKPT WORKAREA ADDR@OZ31115
         AH    R8,CAVTCKTR              ADDR TCAM CKPT TRACE   @OZ31115
TRACE    EQU   *                                               @OZ31115
         LR    R15,R8                   SAVE REG               @OZ31115
         AH    R8,TWO(0,R8)             ADDR OF NEXT SPACE     @OZ31115
         MVC   ZERO(TWO,R8),ZERO(R5)    SAVE MODULE NAME       @OZ31115
         LH    R8,TWO(,R15)             OFFSET TO THAT SPACE   @OZ31115
         LA    R8,TWO(R8)               BUMP TO NEXT SPACE     @OZ31115
         CH    R8,ZERO(0,R15)           END OF TABLE REACHED   @OZ31115
         BL    QNF21                    NO, SAVE OFFSET        @OZ31115
         LA    R8,FOUR                  RESET TO START OF TRACE@OZ31115
QNF21    EQU   *                                               @OZ31115
         STH   R8,TWO(,R15)             SAVE NEW OFFSET        @OZ31115
         LA    R8,BRNCHTAB              ADDR OF MODULE LIST    @OY15469
COMPNAME EQU   *                                               @OY15469
         CLC   ZERO(TWO,R8),ZERO(R5)    COMPARE FOR NAME IN LST@OY15469
         BE    CKLOAD                   CK FOR BRNCH OR LOAD   @OY15469
         LA    R8,EIGHT(R8)             BUMP TO NXT ENTRY      @OY15469
         B     COMPNAME                 CHECK NEXT MEMBER      @OY15469
CKLOAD   EQU   *                                               @OY15469
         L     R15,FOUR(R8)             PICK UP BRNCH ENTRY    @OY15469
         LA    R15,ZERO(R15)            CLEAR HI BYTE          @OY15469
         LTR   R15,R15                  HAS IT BEEN USED       @OY15469
         BNZ   LOADMOD                  USE ENTRY POINT        @OY15469
LOAD     EQU   *                                               @OY15469
         LOAD  EPLOC=ROUTINE            LOAD NEXT ROUTINE      @Y17XACL
         ST    R0,FOUR(R8)              STORE ENTRY POINT ADDR @OY15469
         LR    R15,R0                   SET ENTRY REG
LOADMOD  EQU   *                                               @OY15469
         BALR  R14,R15
         SPACE
***********************************************************************
*                                                                     *
*        BRANCH TABLE FOR RETURN FROM LOAD MODULE                     *
*               +0 => LOAD MODULE WHOSE KEY IS IN R15                 *
*               +4 => GET NEXT REQUEST ELEMENT                        *
*               +8 => WAIT FOR I/O TO COMPLETE TO TRY GETMAIN AGAIN   *
*              +12 => OVERFLOW REQUEST                        @OY20868*
*                                                                     *
***********************************************************************
         B     QNF40                    OFFSET FOR NEXT LOAD IN R15
         B     QNF50                    GET NEXT REQUEST ELEMENT
         B     QNF30                    WAIT ON DISK I/O       @OY20868
         B     QNF80                    INCIDENT OVERFLOW -WAIT@OY20868
*                                        IF CKPT IN PROGRESS   @OY20868
         SPACE 1                                               @Y17XACL
***********************************************************************
*                                                                     *
*        GETMAIN WAS NOT SATISFIED BUT THERE ARE SOMEMORE GETMAIN     *
*        RECORDS ON THE I/O QUEUE. WAIT UNTIL THEY ARE COMPLETE,      *
*        TRY AGAIN.                                                   *
*                                                                     *
***********************************************************************
QNF30    EQU   *
         WAIT  ECB=CKPECB               WAIT ON DISK I/O ECB
QNF35    EQU   *
         LA    R7,CKPNOTIF              GET LOAD LIST OFFSET
         B     QNF20                    LOAD NOTIFICATION RTN
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        ANOTHER LOAD MODULE IS NEEDED FOR THIS FUNCTION              *
*                                                                     *
***********************************************************************
         SPACE
QNF40    EQU   *
         LR    R7,R15                   OFFSET OF LOAD MODULE NAME
         B     QNF20                    LOAD THE MODULE
         SPACE 2                                               @Y17XACL
***********************************************************************
*                                                                     *
*        THIS FUNCTION IS COMPLETE. DETERMINE NEXT FUNCTION           *
*                                                                     *
***********************************************************************
         SPACE
QNF50    EQU   *
         B     QNF10                    DETERMINE NEXT FUNCTION
         SPACE 2                                               @Y17XACL
***********************************************************************
*                                                                     *
*        CHECK FOR A RECORD ON THE DISK I/O QUEUE,IF SO, LOAD I/O     *
*        ROUTINE.                                                     *
*                                                                     *
***********************************************************************
         SPACE
QNF70    EQU   *
         NC    CKPIOQF+1(3),CKPIOQF+1   CHECK FOR EMPTY QUEUE
         BZ    QNF15                    BRANCH IF NO ELEMENT
         LA    R7,CKPDIOR               OFFSET
         B     QNF20                    MOVE NAME AND LOAD
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        THERE IS NOTHING TO DO WAIT ON BOTH ECB'S OR TERMINATE       *
*                                                                     *
***********************************************************************
         SPACE
QNF80    EQU   *
         TM    AVTCKELF,AVTCCLCN        CHECK CLOSEDOWN COMP. BIT
         BO    QNF90                    BRANCH IF ON-TERMINATE
         SPACE 1                                               @Y17XACL
         LA    R1,CAVTWL1               GET WAIT LIST ADDR     @Y17XACL
         TM    AVTCKFLG,AVTCKTAC        IS TCAM CKPT ACTIVE    @Y17XACL
         BO    QNF87                    YES, BRANCH            @Y17XACL
         LA    R1,CAVTWL2               GET WAIT LIST ADDR FOR @Y17XACL
*                                       ONLY 3705 CKPT ACTIVE  @Y17XACL
         SPACE 1                                               @Y17XACL
QNF87    EQU   *                                               @Y17XACL
         WAIT  ECBLIST=(1)              WAIT                   @Y17XACL
         MVI   AVTCKPCC,0               CLEAR ECB COMPLETION   @Y17XACL
*                                       FOR TCAM CKPT QUEUE    @Y17XACL
         TM    AVTCKFLG,AVTCKNAC        IS 3705 CKPT ACTIVE    @Y17XACL
         BZ    QNF10                    NO, BRANCH             @Y17XACL
         L     R5,AVTSAVTP              GET SAVT ADDR          @Y17XACL
         MVI   SAVTCKCC-IEDNSVTD(R5),0  CLEAR ECB COMPLETION   @Y17XACL
*                                       FOR 3705 CKPT QUEUE    @Y17XACL
         B     QNF10                    DETERMINE WHAT TO DO
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        MCP HAS CLOSED DOWN.TERMINATE THIS ATTACHED SUBTASK.         *
*                                                                     *
***********************************************************************
         SPACE
QNF90    EQU   *
         LA    R8,BRNCHTAB-EIGHT        START OF TABLE         @OY15469
LOOPDELE EQU   *                                               @OY15469
         LA    R8,EIGHT(R8)             POINT TO NEXT MODULE   @OY15469
         CLI   ZERO(R8),AVTEFF          END OF TABLE           @OY15469
         BE    QNF95                    YES                    @OY15469
         CLC   FIVE(THREE,R8),AVTFZERO  NEED TO DELETE MODULE? @OY15469
         BNE   DELETE                   YES                    @OY15469
         B     LOOPDELE                 CHECK IF NEED TO DELETE@OY15469
DELETE   EQU   *                                               @OY15469
         MVC   MOD(FOUR),ZERO(R8)           MOD NAME TO DELETE @OY15469
         DELETE EPLOC=ROUTINE            DELETE THE MODULE     @OY15469
         B     LOOPDELE                 GET NEXT MODULE        @OY15469
QNF95    EQU   *                                               @OY15469
         L     R13,SAVE13               RESTORE CALLER'S R13   @Y17XACL
         RETURN (14,12),T
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        EQUATES AND DATA DEFINTIONS                                  *
*                                                                     *
***********************************************************************
         SPACE 1                                               @Y17XACL
CHECKPT  EQU   X'20'                    TCAM CKPT DCB          @Y17XACL
EOL      EQU   X'80'                    END OF LIST INDICATOR  @Y17XACL
ECBCC    EQU   0                        OFFSET OF ECB          @Y17XACL
*                                       COMPLETION BYTE IN AN  @Y17XACL
*                                       ECB                    @Y17XACL
         SPACE 3                                               @Y17XACL
SAVE13   DS    A                        FULLWORD TO SAVE THE   @Y17XACL
*                                       CONTENTS OF REG 13     @Y17XACL
*                                       AT ENTRY TO THE MODULE @Y17XACL
*                                       AT ATTACH TIME         @Y17XACL
         SPACE 1                                               @Y17XACL
         DS    0D                                              @Y17XANL
IEDQNW   DC    CL8'IEDQNW'              LOAD NAME FOR 3705 I/O @Y17XACL
*                                       ROUTINE                @Y17XACL
         SPACE 1                                               @Y17XACL
ROUTINE  DS    0CL8                     NAME USED FOR LOADS    @Y17XACL
*                                       AND DELETES            @Y17XACL
         DC    CL4'IEDQ'                FIXED CHARACTERS       @Y17XACL
MOD      DC    CL4' '                   VARIABLE CHARACTERS    @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        LIST OF ALL CHECKPOINT LOAD MODULE NAMES                     *
*                                                                     *
***********************************************************************
         SPACE
         CNOP  0,4                                             @OY15469
QNFLIST  EQU   *
         DC    CL4'NG'                  LCB                        0525
         DC    CL4'NH'                  TCHNG                      0525
         DC    CL4' '                   UNUSED                 @Y17XACL
         DC    CL4' '                   UNUSED                     0525
         DC    CL4'NJ'                  OPERATOR CONTROL           0525
         DC    CL4'NK'                  MCPLOSE                    0525
         DC    CL4'NM'                  CKREQ                      0525
         DC    CL4'NK'                  ENVIORNMENT                0525
         DC    CL4'NO'                  I/O QUEUE MANAGER          0525
         DC    CL4'NP'                  I/O ROUTINE                0525
         DC    CL4'NQ'                  NOTIFICATION ROUTINE       0525
         DC    CL4'NR'                  NO CORE                    0525
         DC    CL4'NS'                  INCIDENT OVERFLOW          0525
MODNT    DC    CL4'NT'                  3705 CHECKPOINT-LOAD 1 @OZ31115
         DC    CL4'NV'                  3705 RESTART           @Y17XACL
         DC    CL4'NU'                  3705 CHECKPOINT-LOAD 2 @Y17XACL
BRNCHTAB EQU   *                                               @OY15469
         DC    CL4'NG',XL4'0'           LCB                    @OY15469
         DC    CL4'NH',XL4'0'           TCHNG                  @OY15469
         DC    CL4'NJ',XL4'0'           OPERATOR CONTROL       @OY15469
         DC    CL4'NK',XL4'0'           ENVIRONMENT            @OY15469
         DC    CL4'NM',XL4'0'           CKREQ                  @OY15469
         DC    CL4'NO',XL4'0'           I/O QUEUE MANAGER      @OY15469
         DC    CL4'NP',XL4'0'           I/O ROUTINE            @OY15469
         DC    CL4'NQ',XL4'0'           NOTIFICATION ROUTINE   @OY15469
         DC    CL4'NR',XL4'0'           NO CORE                @OY15469
         DC    CL4'NS',XL4'0'           INCIDENT OVERFLOW      @OY15469
         DC    CL4'NT',XL4'0'           3705 CHECKPOINT-LOAD 1 @OY15469
         DC    CL4'NU',XL4'0'           3705 RESTART           @OY15469
         DC    CL4'NV',XL4'0'           3705 CHECKPOINT-LOAD 2 @OY15469
         DC    X'FF'                                           @OY15469
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        THIS MODULE CREATES THE CHECKPOINT AVT BY ISSUING THE        *
*        TCAVTD MACRO WITH THE DSECT=NO OPERAND. THIS GENERATES       *
*        STORAGE FOR THE CAVT. THIS MODULE CLEARS THE CAVT AT         *
*        ATTACH TIME.                                                 *
*                                                                     *
***********************************************************************
         SPACE 1                                               @Y17XACL
         TCAVTD DSECT=NO                                       @Y17XACL
         EJECT                                                 @Y17XACL
***********************************************************************
*                                                                     *
*        THE FOLLOWING IS A PATCH AREA WHICH IS AVAILABLE TO ALL      *
*        THE MODULES IN THE CHECKPOINT SUBTASK.                       *
*                                                                     *
***********************************************************************
PATCH    DC    50H'0'                    PATCH AREA            @Y17XACL
         EJECT                                                 @Y17XACL
         TAVTD
         EJECT                                                 @Y17XACL
         TCKPD 3330
         EJECT                                                 @Y17XACL
         DCBD  DSORG=(TX,TR)                                   @Y17XACL
         EJECT                                                 @Y17XACL
         TDEBD                                                 @Y17XACL
         EJECT                                                 @Y17XACL
         TOPCED                                                @Y17XACL
         EJECT                                                 @Y17XACL
         TOPCAVTD                                              @Y17XACL
         EJECT                                                 @Y17XACL
         IHAPSA                    DSECT FOR SETLOCK           @G36XRCU
         EJECT
         TTCBD                                                 @Y17XACL
         SPACE 3                                               @Y17XACL
         END


