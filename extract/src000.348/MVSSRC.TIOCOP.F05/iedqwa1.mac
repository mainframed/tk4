         TITLE 'IEDQWA1 - TOTE INPUT DATA HANDLER                      *
                        '
IEDQWA1  CSECT ,                                                01S0001
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  LA    @05,4095(,@12)                                   01S0001
         USING @PSTART,@12                                      01S0001
         USING @PSTART+4095,@05                                 01S0001
         ST    @13,@SA00001+4                                   01S0001
         LA    @14,@SA00001                                     01S0001
         ST    @14,8(,@13)                                      01S0001
         LR    @13,@14                                          01S0001
IEDQWA1  IEDHJN AFTERHJN,HJN
*   BACK13=BACKSAVE;                /* SAVE BACKWARD POINTER TO 02S0512
*                                      CALLER'S SAVE AREA - SEVERAL
*                                      ROUTINES CALLED BY IEDQWA1
*                                      DESTROY THIS IN SAVEAREA 02S0512
*                                                            @YM07336*/
         L     @14,BACKSAVE(,RSAVE)                             02S0512
         ST    @14,BACK13                                       02S0512
*   RRESPL=RPARM;                   /* TOTE RESPL BASE               */
         LR    RRESPL,RPARM                                     02S0513
*   FLAGS=''B;                      /* INIT MODULE CONTROL FLAGS     */
         MVI   FLAGS,X'00'                                      02S0514
*   RTNCODE=''B;                    /* INIT MODULE RETURN CODE AS
*                                      GOOD RETURN                   */
         SLR   @14,@14                                          02S0515
         STC   @14,RTNCODE                                      02S0515
*                                                               02S0516
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT PERFORMS THE MODULE FUNCTION            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0516
*   GEN REFS(PSALITA,FLC);                                      02S0516
*                                                          /*@G36XRUV*/
*                                          /*                  @G36XRUV
         MODESET MODE=SUP              SET TO SUPERVISOR MODE  @G36XRUV
         MODESET EXTKEY=SUPR           SET TO KEY ZERO         @G36XRUV
SETATSK  DS    0H                                              @G36XRUV
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @G36XRUVC
               RELATED=ATTACHED-TASKS-IGG019RO(SETATSK)        @G36XRUV
*   RPREFIX=AVTOLTCH;               /* POINT TO FIRST ELMT OF TOTE
*                                      QCB                   @YM07728*/
         L     RPREFIX,AVTOLTCH-1(,RAVT)                        02S0517
         LA    RPREFIX,0(,RPREFIX)                              02S0517
*   AVTOLTCH=RPREFIX->PRFLINK;      /* DEQUEUE FIRST ELEMENT @YM07728*/
         MVC   AVTOLTCH(3,RAVT),PRFLINK(RPREFIX)                02S0518
*   GEN REFS(PSALITA,FLC);                                      02S0519
*                                   /*                       @G36XRUV*/
*                                   /*                         @G36XRUV
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  @G36XRUVC
               RELATED=ATTACHED-TASKS-IEDQWA1(SETATSK)         @G36XRUV
         MODESET EXTKEY=TCAM      SET TO TCAM'S KEY            @G36XRUV
         MODESET MODE=PROB        SET TO PROBLEM MODE          @G36XRUV
*   IF PRFPRI^=PRITOTCL&PRFPRI^=PRIONLT THEN/* IF THIS IS MH INPUT   */
         CLI   PRFPRI(RPREFIX),X'E8'                            02S0520
         BE    @RF00520                                         02S0520
         CLI   PRFPRI(RPREFIX),X'DC'                            02S0520
         BE    @RF00520                                         02S0520
*     DO;                           /* PROCESS MH INPUT TO SET PRFKEY*/
*                                                               03S0522
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS.MHPROC: THIS SEGMENT PROCESSES A BUFFER WHICH HAS */
*       /* GONE THROUGH MESSAGE HANDLER PROCESSING PRIOR TO BEING    */
*       /* POSTED TO TOTE. THE POSSIBLE CONTENTS OF THIS BUFFER      */
*       /* INCLUDE SNA TEST REQUEST MESSAGES AND SNA TOTE INPUT      */
*       /* (CECOM REPLIES AND TEST DATA) FROM THE INBOUND SIDE OF THE*/
*       /* SSCP AND TOTE MH'S RESPECTIVELY, AND THE ERRORMSG ELEMENT */
*       /* GENERATED BY THE ERRORMSG EXIT IN THE TOTE MH. RPREFIX    */
*       /* POINTS TO THE BUFFER, PRFSCAN CONTAINS THE OFFSET TO THE  */
*       /* BEGINNING OF DATA                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0522
*       RPARM=PRFSCAN;              /* OBTAIN PRFSCAN        @YM07765*/
         LH    RPARM,PRFSCAN(,RPREFIX)                          03S0522
*       SRL(RPARM,8);               /* SHIFT SCAN TO LOW ORDER BYTE
*                                                            @YM07765*/
         SRL   RPARM,8                                          03S0523
*       PRFSCAN=RPARM;              /* STORE BACK IN PRFSCAN @YM07765*/
         STH   RPARM,PRFSCAN(,RPREFIX)                          03S0524
*       IF PRFERMGN=ON THEN         /* IF THIS IS ERROR MESSAGE 03S0525
*                                      ELEMENT                       */
         TM    PRFERMGN(RPREFIX),B'01000000'                    03S0525
         BNO   @RF00525                                         03S0525
*         IF ERRTEST=ON THEN        /* IF RESOURCE IS SNA TEST DEVICE*/
         LA    @14,PRFSUNIT(,RPREFIX)                           03S0526
         LH    @10,PRFSCAN(,RPREFIX)                            03S0526
         ALR   @14,@10                                          03S0526
         TM    ERRTEST(@14),B'01000000'                         03S0526
         BNO   @RF00526                                         03S0526
*           PRFKEY=PRFSNAT;         /* SET SNA TEST DATA INDICATOR   */
         MVI   PRFKEY(RPREFIX),X'28'                            03S0527
*         ELSE                      /* ELEMENT FOR CTL TERM OR ALT
*                                      PRTR                          */
*           IF ERRSNA=ON&ERRRQREJ=ON&/* IF SNA DEVICE, REQUEST REJECT*/
*               (ERRSNS=SNSIVREQ×ERRSNS=SNSNRSCE×ERRSNS=SNSRCXMT) THEN
         B     @RC00526                                         03S0528
@RF00526 LA    @14,PRFSUNIT(,RPREFIX)                           03S0528
         AH    @14,PRFSCAN(,RPREFIX)                            03S0528
         TM    ERRSNA(@14),B'10000000'                          03S0528
         BNO   @RF00528                                         03S0528
         TM    ERRRQREJ(@14),B'00000100'                        03S0528
         BNO   @RF00528                                         03S0528
         CLI   ERRSNS(@14),X'02'                                03S0528
         BE    @RT00528                                         03S0528
         CLI   ERRSNS(@14),X'12'                                03S0528
         BE    @RT00528                                         03S0528
         CLI   ERRSNS(@14),X'1B'                                03S0528
         BNE   @RF00528                                         03S0528
@RT00528 DS    0H                                               03S0529
*                                   /* IF TEMPORARY ERROR    @YM09016*/
*             DO;                   /* NO ACTION NECESSARY - RETURN
*                                      BUF                           */
*               PRFKEY=''B;         /* CLEAR                         */
         MVI   PRFKEY(RPREFIX),X'00'                            03S0530
*               CALL RTNBUF;                                    03S0531
         BAL   @14,RTNBUF                                       03S0531
*             END;                  /* END OF TEMPORARY PROBLEM      */
*           ELSE                    /* SEVERE ERROR ON OUTPUT TO
*                                      CT/AP                         */
*             DO;                   /* SET PRFKEY AND PRINT MESSAGE  */
         B     @RC00528                                         03S0533
@RF00528 DS    0H                                               03S0534
*               PRFKEY=PRFDEVFL;    /* SET DEVICE FAILURE INDICATOR  */
         MVI   PRFKEY(RPREFIX),X'F0'                            03S0534
*               CALL DEVFLMSG;      /* PRINT MESSAGE                 */
         BAL   @14,DEVFLMSG                                     03S0535
*             END;                  /* END OF SEVERE CT/AP PROBLEM
*                                      HDLG                          */
*       ELSE                        /* INBOUND DATA FROM SNA DEVICE  */
*         DO;                       /* MAY BE CECOM REPLY OR TEST
*                                      DATA                          */
         B     @RC00525                                         03S0537
@RF00525 DS    0H                                               03S0538
*           RPARM=PRFSRCE;          /* OBTAIN TTCIN OF RESOURCE AND  */
         LH    RPARM,PRFSRCE(,RPREFIX)                          03S0538
*           CALL IEDQTNT;           /* GET TTE ADDR                  */
         L     @15,AVTRNMPT(,RAVT)                              03S0539
         BALR  @14,@15                                          03S0539
*           RTRM=RPARM;             /* TTE BASE                      */
         LR    RTRM,RPARM                                       03S0540
*           IF TRMTDIFF=ON&PRFDEST^=SAVTSCPT THEN/* IF TEST DATA
*                                                            @YM08575*/
         LR    @14,RTRM                                         03S0541
         AL    @14,@CF03300                                     03S0541
         TM    TRMTDIFF-1(@14),B'00010000'                      03S0541
         BNO   @RF00541                                         03S0541
         L     @14,AVTSAVTP(,RAVT)                              03S0541
         LH    @14,SAVTSCPT(,@14)                               03S0541
         N     @14,@CF03301                                     03S0541
         CH    @14,PRFDEST(,RPREFIX)                            03S0541
         BE    @RF00541                                         03S0541
*             DO;                                               03S0542
*               PRFKEY=PRFSNAT;     /* INDICATOR                     */
         MVI   PRFKEY(RPREFIX),X'28'                            03S0543
*               IF(PRFSIZE-PRFSCAN)=1&RUBYTE1='00'X THEN/* FORMAT FOR
*                                      NULL RU                       */
         LH    @14,PRFSCAN(,RPREFIX)                            03S0544
         LH    @10,PRFSIZE(,RPREFIX)                            03S0544
         SLR   @10,@14                                          03S0544
         C     @10,@CF00063                                     03S0544
         BNE   @RF00544                                         03S0544
         LA    @10,PRFSUNIT(,RPREFIX)                           03S0544
         ALR   @10,@14                                          03S0544
         CLI   RUBYTE1(@10),X'00'                               03S0544
         BNE   @RF00544                                         03S0544
*                 PRFSIZE=PRFSCAN;  /* SET AS NULL RU FOR RECEIVE MOD*/
         STH   @14,PRFSIZE(,RPREFIX)                            03S0545
*               ELSE                                            03S0546
*                 ;                                             03S0546
@RF00544 DS    0H                                               03S0547
*             END;                                              03S0547
*           ELSE                    /* MUST BE CECOM REPLY           */
*             IF PRFNHDRN=OFF THEN  /* IF THIS IS A HEADER BUFFER    */
         B     @RC00541                                         03S0548
@RF00541 TM    PRFNHDRN(RPREFIX),B'00000001'                    03S0548
         BNZ   @RF00548                                         03S0548
*               PRFKEY=PRFSNACE;    /* SET INDICATOR FOR CE REPLY FOR
*                                      SNA RESOURCE (NO PLCB)        */
         MVI   PRFKEY(RPREFIX),X'1C'                            03S0549
*             ELSE                  /* TEXT BUFFER, ALL CE MSGS ARE  */
*               DO;                 /* RESTICTED TO 1 BUFFER, IGNORE */
         B     @RC00548                                         03S0550
@RF00548 DS    0H                                               03S0551
*                 PRFKEY=''B;       /* CLEAR FOR CALL TO RTNBUF      */
         MVI   PRFKEY(RPREFIX),X'00'                            03S0551
*                 CALL RTNBUF;      /* RETURN BUFFER TO TCAM         */
         BAL   @14,RTNBUF                                       03S0552
*               END;                /* END OF TEXT BUFFER HANDLING   */
*         END;                      /* END OF INBOUND SNA DATA  03S0554
*                                      HANDLING                      */
*     END;                          /* END OF MH INPUT PROCESSING    */
*   ELSE                            /* NOT INPUT FROM SSCP OR TOTE MH*/
*     IF PRFKEY=PRFSRTMH THEN       /* IF FROM STARTMH MODULE        */
         B     @RC00520                                         02S0556
@RF00520 CLI   PRFKEY(RPREFIX),X'04'                            02S0556
         BNE   @RF00556                                         02S0556
*       DO;                         /* SET PRFKEY AND SET LCB        */
*                                                               03S0558
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.STARTMH: THIS SEGMENT PROCESSES BUFFERS POSTED  */
*         /* TO TOTE FROM THE STARTMH MODULE (IEDQAA). THESE BUFFERS */
*         /* CONTAIN CEINPUT FROM START-STOP AND BI-SYNCH TERMINALS. */
*         /* ONLY THE FIRST BUFFER OF THE MESSAGE IS ASSUMED TO HAVE */
*         /* VALID INPUT, ALL OTHERS ARE RETURNED TO TCAM. PRFKEY IS */
*         /* SET IN THE VALID BUFFERS.                               */
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0558
*         RFY                                                   03S0558
*           IEDQLCB BASED(PRFLCB);  /* BASE LCB ON BUF PREFIX FIELD  */
*         IF PRFNHDRN=OFF THEN      /* IF THIS IS A HEADER BUFFER    */
         TM    PRFNHDRN(RPREFIX),B'00000001'                    03S0559
         BNZ   @RF00559                                         03S0559
*           DO;                     /* THIS IS A VALID BUFFER        */
*             IF PRFNLSTN=OFF THEN  /* IF LAST BUF IN MSG            */
         TM    PRFNLSTN(RPREFIX),B'00000010'                    03S0561
         BNZ   @RF00561                                         03S0561
*               DO;                 /* TREAT AS HEADER LAST          */
*                 IF LCBSYNC=OFF THEN/* IF START STOP DEVICE         */
         L     @14,PRFLCB-1(,RPREFIX)                           03S0563
         TM    LCBSYNC(@14),B'00000100'                         03S0563
         BNZ   @RF00563                                         03S0563
*                   PRFKEY=PRFSS;   /* SET PRFKEY                    */
         MVI   PRFKEY(RPREFIX),X'08'                            03S0564
*                 ELSE                                          03S0565
*                   ;               /* PRFKEY ALREADY SET FOR BSC    */
@RF00563 DS    0H                                               03S0566
*                 LCBOLT=OFF;       /* RESET OLT BIT FOR NEXT I/O    */
         L     @14,PRFLCB-1(,RPREFIX)                           03S0566
         NI    LCBOLT(@14),B'11111110'                          03S0566
*               END;                /* END OF HEADER LAST PROCESSING */
*             ELSE                  /* HEADER,NOT LAST               */
*               PRFKEY=PRFMULT;     /* SET MULTIPLE BUFFERED INPUT   */
         B     @RC00561                                         03S0568
@RF00561 MVI   PRFKEY(RPREFIX),X'14'                            03S0568
*             LCBTSTSW=AVTEFF;      /* RESET                         */
@RC00561 L     @14,PRFLCB-1(,RPREFIX)                           03S0569
         LA    @14,0(,@14)                                      03S0569
         MVI   LCBTSTSW(@14),X'FF'                              03S0569
*             LCBNEGRP=ON;          /* NEG RESP POLL                 */
         OI    LCBNEGRP(@14),B'00001000'                        03S0570
*           END;                    /* END HEADER BUFFER HANDLING    */
*         ELSE                      /* NOT HEADER BUFFER             */
*           IF PRFNLSTN=ON THEN     /* IF NOT LAST BUFFER            */
         B     @RC00559                                         03S0572
@RF00559 TM    PRFNLSTN(RPREFIX),B'00000010'                    03S0572
         BNO   @RF00572                                         03S0572
*             DO;                   /* RETURN BUFFER BUT NOT LCB     */
*               PRFKEY=''B;         /* CLEAR TO INDICATE NO LCB      */
         MVI   PRFKEY(RPREFIX),X'00'                            03S0574
*               CALL RTNBUF;        /* RETURN BUFFER                 */
         BAL   @14,RTNBUF                                       03S0575
*             END;                  /* END ^FIRST,^LAST BUF HANDLING */
*           ELSE                    /* LAST BUFFER IN MESSAGE        */
*             DO;                   /* RETURN BUFFER AND LCB TO TCAM */
         B     @RC00572                                         03S0577
@RF00572 DS    0H                                               03S0578
*               LCBOLT=OFF;         /* RESET OLT INDICATOR           */
         L     @14,PRFLCB-1(,RPREFIX)                           03S0578
         NI    LCBOLT(@14),B'11111110'                          03S0578
*               CALL RTNBUF;        /* RETURN BUFFER AND LCB         */
         BAL   @14,RTNBUF                                       03S0579
*             END;                  /* END OF LAST BUF HANDLING      */
*         RFY                                                   03S0581
*           IEDQLCB BASED;          /* SET AS ON ENTRY TO SEGMENT    */
@RC00572 DS    0H                                               03S0581
@RC00559 DS    0H                                               03S0582
*       END;                        /* END OF STARTMH PROCESSING     */
*     ELSE                                                      02S0583
*       ;                           /* PRFKEY ALREADY SET CORRECTLY  */
@RF00556 DS    0H                                               02S0584
*   IF BUFRTFLG=ON THEN                                         02S0584
@RC00520 TM    BUFRTFLG,B'00001000'                             02S0584
         BO    @RT00584                                         02S0584
*     ;                             /* IF BUFFER RETURNED - NO MORE
*                                      PROCESSING                    */
*   ELSE                                                        02S0586
*     IF PRFKEY<PRFCEIN THEN        /* IF THIS IS CE INPUT           */
         CLI   PRFKEY(RPREFIX),X'20'                            02S0586
         BNL   @RF00586                                         02S0586
*       DO;                                                     02S0587
*                                                               03S0588
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.CEINPUT: THIS SEGMENT PROCESSES SINGLE BUFFERS  */
*         /* WITH CE INPUT. IF THE INPUT IS TO BE PASSED TO OTHER    */
*         /* TOTE MODULES, PRFSCAN IS UPDATED TO POINT PAST OLT      */
*         /* HEADER.                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0588
*         IF PRFKEY=PRFSS×PRFKEY=PRFBSC×PRFKEY=PRFMULT THEN/* IF
*                                      PRE-SNA                       */
         CLI   PRFKEY(RPREFIX),X'08'                            03S0588
         BE    @RT00588                                         03S0588
         CLI   PRFKEY(RPREFIX),X'04'                            03S0588
         BE    @RT00588                                         03S0588
         CLI   PRFKEY(RPREFIX),X'14'                            03S0588
         BNE   @RF00588                                         03S0588
@RT00588 DS    0H                                               03S0589
*           DO;                     /* RESET ERROR LOCK IF 3705 TERM */
*             RPARM=PRFSRCE;        /* TTCIN OF RESOURCE             */
         LH    RPARM,PRFSRCE(,RPREFIX)                          03S0590
*             CALL IEDQTNT;         /* CONVERT TO TTE ADDR           */
         L     @15,AVTRNMPT(,RAVT)                              03S0591
         BALR  @14,@15                                          03S0591
*             RTRM=RPARM;           /* TTE BASE                      */
         LR    RTRM,RPARM                                       03S0592
*             IF TRMPREF=ON THEN    /* IF 3705 RESOURCE              */
         TM    TRMPREF(RTRM),B'00010000'                        03S0593
         BNO   @RF00593                                         03S0593
*               TRMERLCK=ON;        /* SET ERROR LOCK IN TTE         */
         LR    @14,RTRM                                         03S0594
         AL    @14,@CF03304                                     03S0594
         OI    TRMERLCK(@14),B'00000100'                        03S0594
*             ELSE                                              03S0595
*               ;                   /* NO ERROR LOCK FOR 270X        */
@RF00593 DS    0H                                               03S0596
*           END;                    /* END OF ERROR LOCK PROCESSING  */
*         ELSE                                                  03S0597
*           ;                                                   03S0597
@RF00588 DS    0H                                               03S0598
*                                                               04S0598
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS.CEINPUT.XLATE: THIS SEGMENT TRANSLATES DATA INTO*/
*         /* EBCDIC. THE XLATEFLG SET INDICATES THAT THE DATA IS IN  */
*         /* EBCDIC.                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                               04S0598
*         RFY                                                   04S0598
*           IEDQLCB BASED(PRFLCB);  /* BASE LCB ON PTR IN BUF PREFIX */
*         RFY                                                   04S0599
*           IHADCB BASED(LCBDCBPT); /* BASE DCB ON PTR IN LCB        */
*         IF PRFKEY^=PRFSNACE&PRFKEY^=PRFSYS&PRFKEY^=PRFOPCTL THEN/*
*                                      IF NOT ALREADY EBCDIC         */
         CLI   PRFKEY(RPREFIX),X'1C'                            04S0600
         BE    @RF00600                                         04S0600
         CLI   PRFKEY(RPREFIX),X'0C'                            04S0600
         BE    @RF00600                                         04S0600
         CLI   PRFKEY(RPREFIX),X'10'                            04S0600
         BE    @RF00600                                         04S0600
*           DO;                                                 04S0601
*             TABLPTR=DCBTRANS;     /* POINTER TO TRANS TABLE        */
         L     @14,PRFLCB-1(,RPREFIX)                           04S0602
         L     @14,LCBDCBPT(,@14)                               04S0602
         L     TABLPTR,DCBTRANS+31(,@14)                        04S0602
         LA    TABLPTR,0(,TABLPTR)                              04S0602
*             IF XLATEWD1^=0 THEN   /* IF NOT ALREADY EBCDIC         */
         L     @14,XLATEWD1(,TABLPTR)                           04S0603
         LTR   @14,@14                                          04S0603
         BZ    @RF00603                                         04S0603
*               DO;                                             04S0604
*                 DATAPTR=ADDR(PRFSUNIT)+PRFSCAN;/* POINT TO FIRST
*                                      DATA BYTE                     */
         LA    @14,PRFSUNIT(,RPREFIX)                           04S0605
         AH    @14,PRFSCAN(,RPREFIX)                            04S0605
         ST    @14,DATAPTR                                      04S0605
*                 IF XLATETYP=TABPTS THEN/* IF THIS IS A TABLE OF
*                                      PTRS                          */
         CLI   XLATETYP(TABLPTR),X'80'                          04S0606
         BNE   @RF00606                                         04S0606
*                   DO;                                         04S0607
*                     RFY                                       04S0608
*                       XTABLE BASED(XTABPT);/* BASE ON POINTER IN
*                                      TABLE                         */
*                     IEDPLMV=''B;  /* SET UP PARAMETER LIST FOR MOVE*/
         LA    @07,PARMLSP                                      04S0609
         XC    IEDPLMV(24,@07),IEDPLMV(@07)                     04S0609
*                     PLMVSU=RPREFIX;/* BUFFER ADDR                  */
         ST    RPREFIX,PLMVSU(,@07)                             04S0610
*                     PLMVSD=DATAPTR;/* SOURCE DATA                  */
         ST    @14,PLMVSD(,@07)                                 04S0611
*                     PLMVTU=ADDR(WORKAREA);/* TARGET                */
         LA    @14,WORKAREA                                     04S0612
         ST    @14,PLMVTU(,@07)                                 04S0612
*                     PLMVTD=PLMVTU;/* TARGET                        */
         ST    @14,PLMVTD(,@07)                                 04S0613
*                     PLMVLNTH=5;   /* MOVE 5 BYTES, MAX HDR LENGTH  */
         MVC   PLMVLNTH(2,@07),@CH00033                         04S0614
*                     PLMVTCTG=ON;  /* SET TARGET CONTIGUOUS FLAG    */
         OI    PLMVTCTG(@07),B'00100000'                        04S0615
*                     RPARM=ADDR(PARMLSP);/* ADDR OF PARM LIST       */
         LR    RPARM,@07                                        04S0616
*                     CALL IEDMVBFR;/* MOVE DATA INTO WORKAREA       */
         L     @15,AVTMVBFR(,RAVT)                              04S0617
         BALR  @14,@15                                          04S0617
*                     DO LOOPCTR=XLATECT TO 1 BY-1 WHILE(XLATEFLG=OFF);
         L     @14,XLATECT-1(,TABLPTR)                          04S0618
         LA    @14,0(,@14)                                      04S0618
         STH   @14,LOOPCTR                                      04S0618
         B     @DE00618                                         04S0618
@DL00618 TM    XLATEFLG,B'00010000'                             04S0618
         BNZ   @DC00618                                         04S0618
*                                   /* SET TO LOOP THRU TABLE        */
*                       WRKAREA1(1:5)=WORKAREA(1:5);/* COPY MAX OLT
*                                      HEADER LEN            @YM07756*/
         MVC   WRKAREA1(5),WORKAREA                             04S0619
*                       TR(WRKAREA1(1:5),XTABLE);/* TRANSLATE   04S0620
*                                                            @YM07756*/
         L     @14,XTABPT(,TABLPTR)                             04S0620
         TR    WRKAREA1(5),XTABLE(@14)                          04S0620
*                       IF WRKAREA1(1:LENGTH(HDRSS))=HDRSS×/* IF
*                                      START-STOP HEADER             */
*                           WRKAREA1(1:LENGTH(HDRBSC))=HDRBSC×/* IF
*                                      EP BSC HEADER         @YM07756*/
*                           WRKAREA1(1:LENGTH(PERSLASH))=PERSLASH THEN
         CLC   WRKAREA1(5),@CC03076                             04S0621
         BE    @RT00621                                         04S0621
         CLC   WRKAREA1(3),HDRBSC                               04S0621
         BE    @RT00621                                         04S0621
         CLC   WRKAREA1(2),PERSLASH                             04S0621
         BNE   @RF00621                                         04S0621
@RT00621 DS    0H                                               04S0622
*                                   /* IF NCP BSC HEADER - NO SOH
*                                      CHARACTER             @YM07756*/
*                         DO;       /* VALID XLATE TABLE FOUND       */
*                           TABLPTR=XTABPT;/* SET POINTER TO XLATE
*                                      TABLE                         */
         L     TABLPTR,XTABPT(,TABLPTR)                         04S0623
*                           XLATEFLG=ON;/* SET TRANSLATE FLAG        */
         OI    XLATEFLG,B'00010000'                             04S0624
*                         END;                                  04S0625
*                       ELSE        /* NOT SUCCESSFUL TRANSLATE      */
*                         TABLPTR=TABLPTR+LENGTH(XLATEWD1);/* POINT
*                                      TO NEXT XLATE TABLE           */
         B     @RC00621                                         04S0626
@RF00621 AL    TABLPTR,@CF00256                                 04S0626
*                     END;                                      04S0627
@RC00621 SLR   @14,@14                                          04S0627
         BCTR  @14,0                                            04S0627
         AH    @14,LOOPCTR                                      04S0627
         STH   @14,LOOPCTR                                      04S0627
@DE00618 LTR   @14,@14                                          04S0627
         BP    @DL00618                                         04S0627
@DC00618 DS    0H                                               04S0628
*                     RFY                                       04S0628
*                       XTABLE BASED(TABLPTR);/* BASE FOR TRANS TABLE*/
*                   END;                                        04S0629
*                 ELSE                                          04S0630
*                   DO;                                         04S0630
         B     @RC00606                                         04S0630
@RF00606 DS    0H                                               04S0631
*                     TABLPTR=TABLPTR+LENGTH(XLATEWD1);/* SET TO
*                                      START OF TABLE                */
         AL    TABLPTR,@CF00256                                 04S0631
*                     XLATEFLG=ON;  /* SET TRANSLATE FLAG ON         */
         OI    XLATEFLG,B'00010000'                             04S0632
*                   END;                                        04S0633
*                 IF XLATEFLG=ON THEN/* IF TRANSLATED                */
@RC00606 TM    XLATEFLG,B'00010000'                             04S0634
         BNO   @RF00634                                         04S0634
*                   DO;                                         04S0635
*                     MSGPTR=RPREFIX;/* SAVE ADDR OF BUFFER          */
         LR    MSGPTR,RPREFIX                                   04S0636
*                     TRANSLEN=AVTKEYLE-PRFSCAN;/* LENGTH OF TRANS
*                                      FOR 1ST UNIT                  */
         LH    @14,AVTKEYLE(,RAVT)                              04S0637
         SH    @14,PRFSCAN(,RPREFIX)                            04S0637
         STH   @14,TRANSLEN                                     04S0637
*                     DO LOOPCTR=PRFNBUNT TO 1 BY-1;/* TRANSLATE ALL
*                                      UNITS IN BUFFER               */
         SLR   @14,@14                                          04S0638
         IC    @14,PRFNBUNT(,RPREFIX)                           04S0638
         STH   @14,LOOPCTR                                      04S0638
         B     @DE00638                                         04S0638
@DL00638 DS    0H                                               04S0639
*                       TR(DATASTNG(1:TRANSLEN),XTABLE);/* TRANS UNIT*/
         L     @07,DATAPTR                                      04S0639
         LH    @14,TRANSLEN                                     04S0639
         BCTR  @14,0                                            04S0639
         EX    @14,@SB03308                                     04S0639
*                       RPREFIX=PRFTIC;/* POINT TO NEXT UNIT         */
         L     RPREFIX,PRFTIC(,RPREFIX)                         04S0640
*                       DATAPTR=ADDR(PRFSUNIT);/* START OF DATA      */
         LA    @14,PRFSUNIT(,RPREFIX)                           04S0641
         ST    @14,DATAPTR                                      04S0641
*                       TRANSLEN=AVTKEYLE;/* LENGTH TO TRANSLATE     */
         LH    @14,AVTKEYLE(,RAVT)                              04S0642
         STH   @14,TRANSLEN                                     04S0642
*                     END;                                      04S0643
         LH    @07,LOOPCTR                                      04S0643
         BCTR  @07,0                                            04S0643
         LR    @14,@07                                          04S0643
         STH   @14,LOOPCTR                                      04S0643
@DE00638 LTR   @14,@14                                          04S0643
         BP    @DL00638                                         04S0643
*                     RPREFIX=MSGPTR;/* SET PREFIX BASE BACK TO BEGIN*/
         LR    RPREFIX,MSGPTR                                   04S0644
*                   END;                                        04S0645
*                 ELSE                                          04S0646
*                   DO;             /* CAN'T XLATE - PUT ON TRM Q FOR
*                                      LATER REJECTION               */
         B     @RC00634                                         04S0646
@RF00634 DS    0H                                               04S0647
*                     RELMT=RPREFIX;/* COPY BUFFER ADDR              */
         LR    RELMT,RPREFIX                                    04S0647
*                     PRFQCBA=ADDR(RESTRMQ);/* SET QCB ADDR          */
         LA    @14,RESTRMQ(,RRESPL)                             04S0648
         STCM  @14,7,PRFQCBA(RPREFIX)                           04S0648
*                     RFY                                       04S0649
*                       REG03 RSTD; /* RETURN REG                    */
*                     RBRNCH=RESADDND;/* ADDR OF ROUTINE     @YM07334*/
         L     RBRNCH,RESADDND(,RRESPL)                         04S0650
*                     RFY                                       04S0651
*                       REG10 RSTD; /* RETURN REG            @YM07334*/
*                     GEN SETS(REG10,RELMT,RPARM);              04S0652
*                                   /*CALL QUEUE HANDLER @YM07334*/
         BALR  REG10,RBRNCH           PLACE ON QUEUE
*                     RFY                                       04S0653
*                       REG10 UNRSTD;/*                      @YM07334*/
*                     RFY                                       04S0654
*                       REG03 UNRSTD;                           04S0654
*                     RPARM=RRESPL; /* ADDR OF RESIDENT PARM LIST    */
         LR    RPARM,RRESPL                                     04S0655
*                     GEN;                                      04S0656
*                                   /*LINK TO RESOURCE MANAGER*/
        LINK  EP=IEDQWB
*                     RTNCODE=REG15;/* SET RETURN CODE               */
         STC   REG15,RTNCODE                                    04S0657
*                   END;                                        04S0658
*               END;                                            04S0659
*             ELSE                                              04S0660
*               XLATEFLG=ON;        /* SET TRANSLATE FLAG            */
         B     @RC00603                                         04S0660
@RF00603 OI    XLATEFLG,B'00010000'                             04S0660
*           END;                                                04S0661
*         ELSE                                                  04S0662
*           XLATEFLG=ON;            /* SET TRANSLATE FLAG            */
         B     @RC00600                                         04S0662
@RF00600 OI    XLATEFLG,B'00010000'                             04S0662
*         RFY                                                   04S0663
*           IEDQLCB BASED;          /* RESTORE AS AT START OF SEGMENT*/
@RC00600 DS    0H                                               04S0664
*         RFY                                                   04S0664
*           IHADCB BASED;           /* RESTORE AS AT START OF SEGMENT*/
*                                   /* INSURE EBCDIC DATA            */
*         IF XLATEFLG=ON THEN       /* IF XLATE GOOD OR NOT NEEDED   */
         TM    XLATEFLG,B'00010000'                             03S0665
         BNO   @RF00665                                         03S0665
*           DO;                                                 03S0666
*                                                               04S0667
*             /*******************************************************/
*             /*                                                     */
*             /* PROCESS.CEINPUT.MOVEMSG: THIS SEGMENT MOVES EITHER  */
*             /* THE COMPLETE MESSAGE OR 40 BYTES, WHICH WHICHEVER IS*/
*             /* LESS, INTO THE WORKAREA FOR EASIER HANDLING. THE 40 */
*             /* BYTES IN AN ARBITRARY VALUE THAT SHOULD EASILY HOLD */
*             /* ALL DATA OF INTEREST TO THIS ROUTINE.               */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0667
*             WORKAREA=BLANK;       /* BLANK WORKAREA                */
         MVI   WORKAREA+1,C' '                                  04S0667
         MVC   WORKAREA+2(38),WORKAREA+1                        04S0667
         MVI   WORKAREA,C' '                                    04S0667
*             IEDPLMV=''B;          /* INIT IEDMVBFR PARM LIST       */
         LA    @14,PARMLSP                                      04S0668
         XC    IEDPLMV(24,@14),IEDPLMV(@14)                     04S0668
*             PLMVSU=RPREFIX;       /* SOURCE UNIT                   */
         ST    RPREFIX,PLMVSU(,@14)                             04S0669
*             PLMVSD=ADDR(PRFSUNIT)+PRFSCAN;/* SOURCE DATA           */
         LA    @10,PRFSUNIT(,RPREFIX)                           04S0670
         LH    @07,PRFSCAN(,RPREFIX)                            04S0670
         ALR   @10,@07                                          04S0670
         ST    @10,PLMVSD(,@14)                                 04S0670
*             PLMVTU=ADDR(WORKAREA);/* TARGET UNIT                   */
         LA    @10,WORKAREA                                     04S0671
         ST    @10,PLMVTU(,@14)                                 04S0671
*             PLMVTD=PLMVTU;        /* TARGET DATA                   */
         ST    @10,PLMVTD(,@14)                                 04S0672
*             PLMVTCTG=ON;          /* TARGET CONTIGUOUS FLAG        */
         OI    PLMVTCTG(@14),B'00100000'                        04S0673
*             IF PRFSIZE>(PRFSCAN+40) THEN/* IF MESSAGE SIZE > 40
*                                                            @YM07414*/
         LA    @10,40                                           04S0674
         ALR   @07,@10                                          04S0674
         CH    @07,PRFSIZE(,RPREFIX)                            04S0674
         BNL   @RF00674                                         04S0674
*               PLMVLNTH=40;        /* LENGTH OF MOVE                */
         STH   @10,PLMVLNTH(,@14)                               04S0675
*             ELSE                                              04S0676
*               PLMVLNTH=PRFSIZE-PRFSCAN;/* LENGTH OF MOVE = MSG SIZE
*                                                            @YM07414*/
         B     @RC00674                                         04S0676
@RF00674 LA    @14,PARMLSP                                      04S0676
         LH    @10,PRFSIZE(,RPREFIX)                            04S0676
         SH    @10,PRFSCAN(,RPREFIX)                            04S0676
         STH   @10,PLMVLNTH(,@14)                               04S0676
*             RPARM=ADDR(PARMLSP);  /* ADDRESS OF PARM LIST          */
@RC00674 LA    RPARM,PARMLSP                                    04S0677
*             CALL IEDMVBFR;        /* MOVE INTO WORKAREA            */
         L     @15,AVTMVBFR(,RAVT)                              04S0678
         BALR  @14,@15                                          04S0678
*                                   /* MOVE MESSAGE TO WORKAREA FOR
*                                      EASY HANDLING.SET DATAPTR TO
*                                      START OF WORKAREA             */
*                                                               04S0679
*             /*******************************************************/
*             /*                                                     */
*             /* PROCESS.CEINPUT.HDRPASS: THIS SEGMENT BYPASSES THE  */
*             /* OLT HEADER AND UPDATES DATAPTR AND PRFSCAN.         */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0679
*             DATAPTR=ADDR(WORKAREA);/* INIT DATAPTR                 */
         LA    @14,WORKAREA                                     04S0679
         ST    @14,DATAPTR                                      04S0679
*             IF DATASTNG(1:LENGTH(HDRSS))=HDRSS THEN/* IF START-STOP
*                                      HEADER                        */
         CLC   DATASTNG(5,@14),@CC03076                         04S0680
         BNE   @RF00680                                         04S0680
*               DATAPTR=DATAPTR+LENGTH(HDRSS);/* MOVE PAST HEADER    */
         AL    @14,@CF00033                                     04S0681
         ST    @14,DATAPTR                                      04S0681
*             ELSE                                              04S0682
*               IF DATASTNG(1:LENGTH(HDRFOLT))=HDRFOLT THEN/* IF SYS
*                                      CONSOLE OR OP CTL TERM        */
         B     @RC00680                                         04S0682
@RF00680 L     @14,DATAPTR                                      04S0682
         CLC   DATASTNG(4,@14),@CC03082                         04S0682
         BNE   @RF00682                                         04S0682
*                 DATAPTR=DATAPTR+LENGTH(HDRFOLT);/* MOVE PAST HEADER*/
         AL    @14,@CF00256                                     04S0683
         ST    @14,DATAPTR                                      04S0683
*               ELSE                                            04S0684
*                 IF DATASTNG(1:LENGTH(HDRBSC))=HDRBSC THEN/* IF EP
*                                      BSC HEADER            @YM07756*/
         B     @RC00682                                         04S0684
@RF00682 L     @14,DATAPTR                                      04S0684
         CLC   DATASTNG(3,@14),HDRBSC                           04S0684
         BNE   @RF00684                                         04S0684
*                   DATAPTR=DATAPTR+LENGTH(HDRBSC);/* MOVE PAST 04S0685
*                                      HEADER                        */
         AL    @14,@CF00076                                     04S0685
         ST    @14,DATAPTR                                      04S0685
*                 ELSE                                          04S0686
*                   IF DATASTNG(1:LENGTH(PERSLASH))=PERSLASH THEN/*
*                                      IF NCP BSC HEADER - NO SOH
*                                      CHARACTER             @YM07756*/
         B     @RC00684                                         04S0686
@RF00684 L     @14,DATAPTR                                      04S0686
         CLC   DATASTNG(2,@14),PERSLASH                         04S0686
         BNE   @RF00686                                         04S0686
*                     DATAPTR=DATAPTR+LENGTH(PERSLASH);/* MOVE PAST
*                                      HEADER                        */
         AL    @14,@CF00067                                     04S0687
         ST    @14,DATAPTR                                      04S0687
*             IF DATABYTE=STXCHAR THEN/* IF STX BSC CHAR             */
@RF00686 DS    0H                                               04S0688
@RC00684 DS    0H                                               04S0688
@RC00682 DS    0H                                               04S0688
@RC00680 L     @14,DATAPTR                                      04S0688
         CLC   DATABYTE(1,@14),STXCHAR                          04S0688
         BNE   @RF00688                                         04S0688
*               DO;                                             04S0689
*                 DATAPTR=DATAPTR+1;/* UPDATE                        */
         AL    @14,@CF00063                                     04S0690
         ST    @14,DATAPTR                                      04S0690
*                 RPARM=PRFSRCE;    /* TTCIN OF TERM                 */
         LH    RPARM,PRFSRCE(,RPREFIX)                          04S0691
*                 CALL IEDQTNT;     /* CONVERT TO TTE ADDR           */
         L     @15,AVTRNMPT(,RAVT)                              04S0692
         BALR  @14,@15                                          04S0692
*                 RTRM=RPARM;       /* TTE BASE                      */
         LR    RTRM,RPARM                                       04S0693
*                 IF(AVTCSTCS+((TRMCHCIN-1)*LENGTH(IEDDCT)))->DCT3270=
*                     ON&TRMPREF=ON THEN/* IF NCP 3270               */
         SLR   @14,@14                                          04S0694
         IC    @14,TRMCHCIN(,RTRM)                              04S0694
         BCTR  @14,0                                            04S0694
         MH    @14,@CH00061                                     04S0694
         AL    @14,AVTCSTCS(,RAVT)                              04S0694
         TM    DCT3270(@14),B'00000100'                         04S0694
         BNO   @RF00694                                         04S0694
         TM    TRMPREF(RTRM),B'00010000'                        04S0694
         BNO   @RF00694                                         04S0694
*                   DATAPTR=DATAPTR+1;/* BYPASS ADDRESS CHARACTER    */
         LA    @14,1                                            04S0695
         AL    @14,DATAPTR                                      04S0695
         ST    @14,DATAPTR                                      04S0695
*                 ELSE                                          04S0696
*                   ;                                           04S0696
@RF00694 DS    0H                                               04S0697
*               END;                                            04S0697
*             ELSE                                              04S0698
*               ;                                               04S0698
@RF00688 DS    0H                                               04S0699
*             PRFSCAN=PRFSCAN+(DATAPTR-ADDR(WORKAREA));/* UPDATE PAST
*                                      HEADER                        */
         L     @14,DATAPTR                                      04S0699
         LA    @10,WORKAREA                                     04S0699
         LCR   @10,@10                                          04S0699
         ALR   @10,@14                                          04S0699
         AH    @10,PRFSCAN(,RPREFIX)                            04S0699
         STH   @10,PRFSCAN(,RPREFIX)                            04S0699
*                                   /* UPDATE DATAPTR AND PRFSCAN TO
*                                      POINT PAST OLT HEADER         */
*                                                               04S0700
*             /*******************************************************/
*             /*                                                     */
*             /* PROCESS.CEINPUT.CANCLREQ: THIS SEGMENT CHECKS TO SEE*/
*             /* IF THE INPUT IS A CANCEL REQUEST. IF SO, IT SETS    */
*             /* CANCLFLG AND SETS THE CANCEL FLAGS IN THE OLTCB. ON */
*             /* ENTRY DATAPTR POINTS INTO WORKAREA AT THE FIRST BYTE*/
*             /* OF DATA PAST THE OLT HEADER.                        */
*             /*                                                     */
*             /*******************************************************/
*                                                               04S0700
*             RFY                                               04S0700
*               DATABYTE BASED(REG01);/* BASE ON WORK REG    @YM07358*/
*             TR(WORKAREA(1:40),LOWTOUP);/* TRANS FROM LOWER TO UPPER
*                                      CASE                          */
         TR    WORKAREA(40),LOWTOUP                             04S0701
*             IF DATASTNG(1:LENGTH(CANCLMSG))=CANCLMSG THEN/* IF THIS
*                                      IS A CANCEL REQUEST           */
         CLC   DATASTNG(7,@14),CANCLMSG                         04S0702
         BNE   @RF00702                                         04S0702
*               DO;                                             04S0703
*                 CANCLFLG=ON;      /* SET CANCEL FLAG               */
         OI    CANCLFLG,B'00100000'                             04S0704
*                 CTSRTADR=ADDR(CANLDATA);/* START OF CONTROL TERM
*                                      FIELD                 @YM07358*/
         LA    CTSRTADR,CANLDATA(,@14)                          04S0705
*                 DO REG01=CTSRTADR TO ADDR(CANLLAST) WHILE(DATABYTE^=
*                       SLASH);     /* LOCATE SLASH          @YM07358*/
         LR    REG01,CTSRTADR                                   04S0706
         B     @DE00706                                         04S0706
@DL00706 CLI   DATABYTE(REG01),C'/'                             04S0706
         BE    @DC00706                                         04S0706
*                 END;                                          04S0707
*                                                               04S0707
         AL    REG01,@CF00063                                   04S0707
@DE00706 L     @14,DATAPTR                                      04S0707
         LA    @14,CANLLAST(,@14)                               04S0707
         CR    REG01,@14                                        04S0707
         BNH   @DL00706                                         04S0707
@DC00706 DS    0H                                               04S0708
*/*NOTE:                            ASSUME SLASH LOCATED             */
*                                                               04S0708
*                 CTNAMLEN=REG01-CTSRTADR+1;/* CALC LENGTH OF CONTROL
*                                      TERM NAME INCLUDING SLASH
*                                                            @YM07358*/
         LR    CTNAMLEN,REG01                                   04S0708
         SLR   CTNAMLEN,CTSRTADR                                04S0708
         AL    CTNAMLEN,@CF00063                                04S0708
*                 OLTCBPTR=RESOBFWD;/* SET OLTCB BASE FROM OLTCB QCB */
         L     OLTCBPTR,RESOBFWD(,RRESPL)                       04S0709
*                 DO WHILE TOTELKEY^=QENDKEY;/* SEARCH OLTCB QUEUE   */
         B     @DE00710                                         04S0710
@DL00710 DS    0H                                               04S0711
*                   IF TOTCTNAM(1:CTNAMLEN)=CANLDATA(1:CTNAMLEN) THEN
         LR    @14,CTNAMLEN                                     04S0711
         BCTR  @14,0                                            04S0711
         L     @10,DATAPTR                                      04S0711
         EX    @14,@SC03310                                     04S0711
         BNE   @RF00711                                         04S0711
*                                   /* IF MATCH              @YM07358*/
*                     IF TOTCONFG=ON THEN                       04S0712
         TM    TOTCONFG(OLTCBPTR),B'01000000'                   04S0712
         BO    @RT00712                                         04S0712
*                       ;           /* IF CONFIG RUN , DON'T CANCEL  */
*                     ELSE                                      04S0714
*                       DO;                                     04S0714
*                         TOTCANCL=ON;/* SET CANCEL FLAG             */
*                         TOTWACAN=ON;/* SET CANCEL PENDING          */
         OI    TOTCANCL(OLTCBPTR),B'00100100'                   04S0716
*                       END;                                    04S0717
*                   ELSE                                        04S0718
*                     ;             /* NO MATCH              @YM07639*/
@RF00711 DS    0H                                               04S0719
*                   OLTCBPTR=TOTELLNK;/* POINT TO NEXT OLTCB         */
@RC00711 L     @14,TOTELLNK-1(,OLTCBPTR)                        04S0719
         LA    @14,0(,@14)                                      04S0719
         LR    OLTCBPTR,@14                                     04S0719
*                 END;                                          04S0720
@DE00710 CLI   TOTELKEY(OLTCBPTR),X'00'                         04S0720
         BNE   @DL00710                                         04S0720
*                 CALL RTNBUF;      /* RETURN BUFFER TO TCAM         */
         BAL   @14,RTNBUF                                       04S0721
*               END;                                            04S0722
*             ELSE                                              04S0723
*               ;                   /* NOT CANCEL REQUEST            */
@RF00702 DS    0H                                               04S0724
*             RFY                                               04S0724
*               DATABYTE BASED(DATAPTR);/* RESTORE AS AT START OF
*                                      SEGMENT               @YM07358*/
*                                   /* CHECK IF CANCEL REQUEST AND IF
*                                      SO, PROCESS                   */
*             IF CANCLFLG=OFF THEN  /* IF NOT CANCEL REQUEST,   03S0725
*                                      CONTINUE                      */
         TM    CANCLFLG,B'00100000'                             03S0725
         BNZ   @RF00725                                         03S0725
*               DO;                                             03S0726
*                                                               04S0727
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS.CEINPUT.CEREPLY: THIS SEGMENT CHECKS TO */
*                 /* SEE IF THE INPUT IS A REPLY TO A CECOM. IF SO,  */
*                 /* IT PLACES THE BUFFER ON THE CECOM REPLY QUEUE,  */
*                 /* TOTOLTMQ.                                       */
*                 /*                                                 */
*                 /***************************************************/
*                                                               04S0727
*                 OLTCBPTR=RESOBFWD;                            04S0727
         L     OLTCBPTR,RESOBFWD(,RRESPL)                       04S0727
*                 DO WHILE(TOTELKEY^=QENDKEY&REPLYFLG=OFF);/* LOOP
*                                      WHILE NOT AT END OF QUEUE AND
*                                      NOT FOUND REPLY               */
         B     @DE00728                                         04S0728
@DL00728 DS    0H                                               04S0729
*                   IF TOTOLTID=WRKOLTID THEN/* IF MATCH ON ID       */
         L     @14,DATAPTR                                      04S0729
         CLC   TOTOLTID(2,OLTCBPTR),WRKOLTID(@14)               04S0729
         BNE   @RF00729                                         04S0729
*                     DO;                                       04S0730
*                       REPLYFLG=ON;/* SET FLAG                      */
         OI    REPLYFLG,B'01000000'                             04S0731
*                       IF TOTREPEX=ON THEN/* IF REPLY EXPECTED      */
         TM    TOTREPEX(OLTCBPTR),B'00000010'                   04S0732
         BNO   @RF00732                                         04S0732
*                         DO;       /* ADD REPLY TO QUEUE            */
*                           TOTREPEX=OFF;/* RESET            @YM08137*/
         NI    TOTREPEX(OLTCBPTR),B'11111101'                   04S0734
*                           RPARM=ADDR(TOTOLTMQ);/* QUEUE ADDR       */
         LA    RPARM,TOTOLTMQ(,OLTCBPTR)                        04S0735
*                           PRFQCBA=RPARM;/* ADDR OF QCB             */
         STCM  RPARM,7,PRFQCBA(RPREFIX)                         04S0736
*                           RELMT=RPREFIX;/* BUFFER IS ELEMENT TO
*                                      QUEUE                         */
         LR    RELMT,RPREFIX                                    04S0737
*                           RFY                                 04S0738
*                             REG03 RSTD;                       04S0738
*                           RBRNCH=RESADDAF;/* ADDR OF ROUTINE  04S0739
*                                                            @YM07334*/
         L     RBRNCH,RESADDAF(,RRESPL)                         04S0739
*                           RFY                                 04S0740
*                             REG10 RSTD;/* RETURN REG       @YM07334*/
*                           GEN SETS(REG10,RELMT,RPARM);        04S0741
*                                   /*CALL QUEUE HANDLER @YM07334*/
         BALR  REG10,RBRNCH           ADD TO FRONT OF QUEUE
*                           RFY                                 04S0742
*                             REG10 UNRSTD;/*                @YM07334*/
*                           RFY                                 04S0743
*                             REG03 UNRSTD;                     04S0743
*                           GEN REFS(TOTOTECB,OLTCBPTR);        04S0744
*                                   /*POST ECB*/
        POST TOTOTECB(OLTCBPTR)
*                         END;                                  04S0745
*                       ELSE                                    04S0746
*                         CALL RTNBUF;/* RETURN BUFFER               */
         B     @RC00732                                         04S0746
@RF00732 BAL   @14,RTNBUF                                       04S0746
*                     END;                                      04S0747
*                   ELSE                                        04S0748
*                     OLTCBPTR=TOTELLNK;/* GET NEXT OLTCB            */
         B     @RC00729                                         04S0748
@RF00729 L     @14,TOTELLNK-1(,OLTCBPTR)                        04S0748
         LA    @14,0(,@14)                                      04S0748
         LR    OLTCBPTR,@14                                     04S0748
*                 END;                                          04S0749
@RC00729 DS    0H                                               04S0749
@DE00728 CLI   TOTELKEY(OLTCBPTR),X'00'                         04S0749
         BE    @DC00728                                         04S0749
         TM    REPLYFLG,B'01000000'                             04S0749
         BZ    @DL00728                                         04S0749
@DC00728 DS    0H                                               04S0750
*                                   /* CHECK IF REPLY TO CECOM AND IF
*                                      SO, PLACE ON REPLY QUEUE OF
*                                      OLTCB                         */
*                 IF REPLYFLG=OFF THEN/* IF NOT A CECOM REPLY        */
         TM    REPLYFLG,B'01000000'                             03S0750
         BNZ   @RF00750                                         03S0750
*                   DO;                                         03S0751
*                     OLTCBPTR=RESOBFWD;/* SET OLTCB BASE WITH ADDR
*                                      OF Q                          */
         L     OLTCBPTR,RESOBFWD(,RRESPL)                       03S0752
*                     IF TOTELKEY=QENDKEY×RESBKTOT>=MINICORE THEN/*
*                                      IF ENOUGH CORE TO START TEST
*                                                            @ZM47904*/
         CLI   TOTELKEY(OLTCBPTR),X'00'                         03S0753
         BE    @RT00753                                         03S0753
         LH    @14,RESBKTOT(,RRESPL)                            03S0753
         C     @14,@CF03106                                     03S0753
         BL    @RF00753                                         03S0753
@RT00753 DS    0H                                               03S0754
*                       DO;                                     03S0754
*                         PRFQCBA=ADDR(RESTRMQ);/* ADDR OF TRM QUEUE */
         LA    @14,RESTRMQ(,RRESPL)                             03S0755
         STCM  @14,7,PRFQCBA(RPREFIX)                           03S0755
*                         RELMT=RPREFIX;/* PLACE BUFFER ADDR IN REG2 */
         LR    RELMT,RPREFIX                                    03S0756
*                         RFY                                   03S0757
*                           REG03 RSTD;                         03S0757
*                         RBRNCH=RESADDND;/* ADDR OF ROUTINE @YM07334*/
         L     RBRNCH,RESADDND(,RRESPL)                         03S0758
*                         RFY                                   03S0759
*                           REG10 RSTD;/* RETURN REG         @YM07334*/
*                         GEN SETS(REG10,RELMT,RPARM);          03S0760
*                                   /*CALL QUEUE HANDLER @YM07334*/
         BALR  REG10,RBRNCH           ADD ELEMENT TO END OF QUEUE
*                         RFY                                   03S0761
*                           REG10 UNRSTD;/*                  @YM07334*/
*                         RFY                                   03S0762
*                           REG03 UNRSTD;                       03S0762
*                         RPARM=RRESPL;/* ADDR OF RESIDENT PARM LIST */
         LR    RPARM,RRESPL                                     03S0763
*                         GEN;                                  03S0764
*                                   /*LINK TO RESOURCE MANAGER*/
        LINK  EP=IEDQWB
*                         RTNCODE=REG15;/* SET RETURN CODE           */
         STC   REG15,RTNCODE                                    03S0765
*                       END;                                    03S0766
*                     ELSE                                      03S0767
*                       DO;                                     03S0767
         B     @RC00753                                         03S0767
@RF00753 DS    0H                                               03S0768
*                         CALL REQMSG;/* SEND MSG OT REQUESTING TERM */
         BAL   @14,REQMSG                                       03S0768
*                       END;                                    03S0769
*                   END;                                        03S0770
*                 ELSE                                          03S0771
*                   ;                                           03S0771
@RF00750 DS    0H                                               03S0772
*               END;                                            03S0772
*             ELSE                                              03S0773
*               ;                                               03S0773
@RF00725 DS    0H                                               03S0774
*           END;                                                03S0774
*         ELSE                                                  03S0775
*           ;                                                   03S0775
@RF00665 DS    0H                                               03S0776
*       END;                                                    02S0776
*     ELSE                                                      02S0777
*       IF PRFKEY<PRFTEST THEN      /* IF THIS IS TEST INPUT         */
         B     @RC00586                                         02S0777
@RF00586 CLI   PRFKEY(RPREFIX),X'30'                            02S0777
         BNL   @RF00777                                         02S0777
*         DO;                                                   02S0778
*                                                               03S0779
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.TESTDATA: THIS SEGMENT PROCESSES TEST DATA. IT*/
*           /* SCANS THE OLTCB QUEUE TO MATCH THE INCOMING DATA WITH */
*           /* THE TEST.                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0779
*           IF PRFKEY=PRFEXTRP THEN /* IF EXEC TEST FME RESP         */
         CLI   PRFKEY(RPREFIX),X'24'                            03S0779
         BNE   @RF00779                                         03S0779
*             DO;                                               03S0780
*               PRFSCAN=LOCISIZE&PRFSCAN;/* ISOLATE # OF IDLES IN
*                                      PRFSCAN                       */
         LH    @14,PRFSCAN(,RPREFIX)                            03S0781
         LH    @10,LOCISIZE                                     03S0781
         N     @10,@CF03301                                     03S0781
         NR    @14,@10                                          03S0781
         STH   @14,PRFSCAN(,RPREFIX)                            03S0781
*               PRFSCAN=PRFSCAN+AVTHDRSZ;/* SET UP PRFSCAN CORRECTLY */
         AL    @14,@CF00452                                     03S0782
         STH   @14,PRFSCAN(,RPREFIX)                            03S0782
*               TESTCOMP=PRF1SQID;  /* COMPARE IS DONE ON SEG #      */
         LR    @14,RPREFIX                                      03S0783
         AL    @14,@CF03314                                     03S0783
         LH    @14,PRF1SQID-4(,@14)                             03S0783
         N     @14,@CF03301                                     03S0783
         STH   @14,TESTCOMP                                     03S0783
*             END;                                              03S0784
*           ELSE                                                03S0785
*             DO;                                               03S0785
         B     @RC00779                                         03S0785
@RF00779 DS    0H                                               03S0786
*               IF PRFKEY=PRFRTD THEN/* IF RECORD TEST DATA RU       */
         CLI   PRFKEY(RPREFIX),X'20'                            03S0786
         BNE   @RF00786                                         03S0786
*                 DO;                                           03S0787
*                   PRFSCAN=LOCISIZE&PRFSCAN;/* ISOLATE # OF IDLES IN
*                                      PRFSCAN                       */
         LH    @14,PRFSCAN(,RPREFIX)                            03S0788
         LH    @10,LOCISIZE                                     03S0788
         N     @10,@CF03301                                     03S0788
         NR    @14,@10                                          03S0788
         STH   @14,PRFSCAN(,RPREFIX)                            03S0788
*                   PRFSCAN=PRFSCAN+AVTHDRSZ;/* SET UP PRFSCAN  03S0789
*                                      CORRECTLY                     */
         AL    @14,@CF00452                                     03S0789
         STH   @14,PRFSCAN(,RPREFIX)                            03S0789
*                   IEDPLMV=''B;    /* INIT PARM LIST                */
         LA    @10,PARMLSP                                      03S0790
         XC    IEDPLMV(24,@10),IEDPLMV(@10)                     03S0790
*                   PLMVSU=RPREFIX; /* SOURCE UNIT                   */
         ST    RPREFIX,PLMVSU(,@10)                             03S0791
*                   PLMVSD=ADDR(PRFSUNIT)+PRFSCAN;/* SOURCE DATA     */
         LA    @07,PRFSUNIT(,RPREFIX)                           03S0792
         ALR   @07,@14                                          03S0792
         ST    @07,PLMVSD(,@10)                                 03S0792
*                   PLMVTU=ADDR(WORKAREA);/* TARGET                  */
         LA    @14,WORKAREA                                     03S0793
         ST    @14,PLMVTU(,@10)                                 03S0793
*                   PLMVTD=PLMVTU;  /* TARGET                        */
         ST    @14,PLMVTD(,@10)                                 03S0794
*                   PLMVLNTH=LENGTH(IEDXRTDD);/* LENGTH OF RECORD
*                                      TEST DATA RU                  */
         MVC   PLMVLNTH(2,@10),@CH01479                         03S0795
*                   PLMVTCTG=ON;    /* SET TARGET CONTIGUOUS FLAG    */
         OI    PLMVTCTG(@10),B'00100000'                        03S0796
*                   RPARM=ADDR(PARMLSP);/* ADDR OF PARM LIST         */
         LR    RPARM,@10                                        03S0797
*                   CALL IEDMVBFR;  /* MOVE TO WORKAREA              */
         L     @15,AVTMVBFR(,RAVT)                              03S0798
         BALR  @14,@15                                          03S0798
*                   RPARM=XRTDADDR; /* NETWORK ADDR FROM RU          */
         LA    @14,WORKAREA                                     03S0799
         SLR   RPARM,RPARM                                      03S0799
         ICM   RPARM,3,XRTDADDR(@14)                            03S0799
*                   CALL IEDIAP03;  /* CONVERT TO TTCIN              */
         L     @10,AVTSAVTP(,RAVT)                              03S0800
         L     @15,SAVTNAX(,@10)                                03S0800
         BALR  @14,@15                                          03S0800
*                   TESTCOMP=REG15; /* COMPARE FOR TEST MATCH        */
         STH   REG15,TESTCOMP                                   03S0801
*                 END;                                          03S0802
*               ELSE                /* SNA TEST FLOW                 */
*                 IF PRFERMGN=ON THEN/* IF ERRORMSG ELMT THEN        */
         B     @RC00786                                         03S0803
@RF00786 TM    PRFERMGN(RPREFIX),B'01000000'                    03S0803
         BNO   @RF00803                                         03S0803
*                   DO;             /* FME RESPONSE                  */
*                     TESTCOMP=ERRTTCIN;/* COMPARE FOR TEST MATCH    */
         LA    @14,PRFSUNIT(,RPREFIX)                           03S0805
         LH    @10,PRFSCAN(,RPREFIX)                            03S0805
         ALR   @14,@10                                          03S0805
         MVC   TESTCOMP(2),ERRTTCIN(@14)                        03S0805
*                     PRFSCAN=PRFSCAN+LENGTH(ERRTYPE);/* MOVE PAST
*                                      TYPE FIELD                    */
         AL    @10,@CF00063                                     03S0806
         STH   @10,PRFSCAN(,RPREFIX)                            03S0806
*                   END;            /* END OF SNA FME PROCESSING     */
*                 ELSE              /* BUFFER HAS SNA REQUEST RU     */
*                   TESTCOMP=PRFSRCE;/* FM DATA RU - TTCIN IN PREFIX */
         B     @RC00803                                         03S0808
@RF00803 LH    @14,PRFSRCE(,RPREFIX)                            03S0808
         STH   @14,TESTCOMP                                     03S0808
*               TTYPEFLG=ON;        /* SET FLAG TO TTCIN IN TESTCOMP */
@RC00803 DS    0H                                               03S0809
@RC00786 OI    TTYPEFLG,B'10000000'                             03S0809
*             END;                                              03S0810
*           OLTCBPTR=RESOBFWD;      /* POINT TO FIRST OLTCB ON QUEUE */
@RC00779 L     OLTCBPTR,RESOBFWD(,RRESPL)                       03S0811
*           DO WHILE(TOTELKEY^=QENDKEY&FNDTFLG=OFF);/* SCAN UNTIL END
*                                      OF QUEUE OR MATCH FOUND FOR
*                                      TESTCOMP                      */
         B     @DE00812                                         03S0812
@DL00812 DS    0H                                               03S0813
*             IF(TTYPEFLG=ON&(TOTPROFF=TESTCOMP×TOTPCOFF=TESTCOMP))×(
*                 TTYPEFLG=OFF&TOTPRSEQ=TESTCOMP) THEN/* IF FOR 03S0813
*                                      PRIMARY DEVICE        @YM08534*/
         TM    TTYPEFLG,B'10000000'                             03S0813
         BNO   @GL00017                                         03S0813
         CLC   TOTPROFF(2,OLTCBPTR),TESTCOMP                    03S0813
         BE    @RT00813                                         03S0813
         CLC   TOTPCOFF(2,OLTCBPTR),TESTCOMP                    03S0813
         BE    @RT00813                                         03S0813
@GL00017 TM    TTYPEFLG,B'10000000'                             03S0813
         BNZ   @RF00813                                         03S0813
         CLC   TOTPRSEQ(2,OLTCBPTR),TESTCOMP                    03S0813
         BNE   @RF00813                                         03S0813
@RT00813 DS    0H                                               03S0814
*               DO;                                             03S0814
*                 PRFQCBA=ADDR(TOTPRBUF);/* SET TO POST TO PRIMARY
*                                      DEVICE QCB                    */
         LA    @14,TOTPRBUF(,OLTCBPTR)                          03S0815
         STCM  @14,7,PRFQCBA(RPREFIX)                           03S0815
*                 RELMT=RPREFIX;    /* ADDR OF POSTED ELEMENT        */
         LR    RELMT,RPREFIX                                    03S0816
*                 RFY                                           03S0817
*                   REG03 RSTD;                                 03S0817
*                 RFY                                           03S0818
*                   REG10 RSTD;     /*                       @G36XRUV*/
*                 REG10=RESADDND;   /* ADDR OF ROUTINE       @G36XRUV*/
         L     REG10,RESADDND(,RRESPL)                          03S0819
*                 GEN SETS(REG10,RELMT,RPARM) REFS(PSALITA,FLC);
*                                                  /*    @G36XRUV*/
         MODESET MODE=SUP             SET SUPERVISOR STATE     @G36XRUV
         MODESET EXTKEY=SUPR          SET KEY ZERO             @G36XRUV
SETTSTBF DS    0H                     PRIMARY (SECONDARY BELOW)@G36XRUV
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @G36XRUVC
               RELATED=ATTACHED-TASKS-IEDQWS-IEDQW33(SETTSTBF) @G36XRUV
         LR    RBRNCH,REG10           COPY ENTRY POINT         @G36XRUV
         BALR  REG10,RBRNCH           PLACE ON QUEUE           @G36XRUV
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  @G36XRUVC
               RELATED=ATTACHED-TASKS-IEDQWA1(SETTSTBF)        @G36XRUV
         MODESET EXTKEY=TCAM          TCAM'S KEY               @G36XRUV
         MODESET MODE=PROB            PROBLEM MODE             @G36XRUV
*                 RFY                                           03S0821
*                   REG10 UNRSTD;   /*                       @YM07334*/
*                 RFY                                           03S0822
*                   REG03 UNRSTD;                               03S0822
*                 GEN REFS(TOTPRECB,OLTCBPTR);                  03S0823
         POST  TOTPRECB(OLTCBPTR)   POST OLT
*                 FNDTFLG=ON;       /* FOUND TEST DEVICE MATCH       */
         OI    FNDTFLG,B'00000010'                              03S0824
*               END;                                            03S0825
*             ELSE                                              03S0826
*               IF(TTYPEFLG=ON&(TOTSCOFF=TESTCOMP×TOTNCOFF=TESTCOMP))×(
*                   TTYPEFLG=OFF&TOTSCSEQ=TESTCOMP) THEN/* IF FOR
*                                      SECONDARY DEV         @YM08534*/
         B     @RC00813                                         03S0826
@RF00813 TM    TTYPEFLG,B'10000000'                             03S0826
         BNO   @GL00021                                         03S0826
         CLC   TOTSCOFF(2,OLTCBPTR),TESTCOMP                    03S0826
         BE    @RT00826                                         03S0826
         CLC   TOTNCOFF(2,OLTCBPTR),TESTCOMP                    03S0826
         BE    @RT00826                                         03S0826
@GL00021 TM    TTYPEFLG,B'10000000'                             03S0826
         BNZ   @RF00826                                         03S0826
         CLC   TOTSCSEQ(2,OLTCBPTR),TESTCOMP                    03S0826
         BNE   @RF00826                                         03S0826
@RT00826 DS    0H                                               03S0827
*                 DO;                                           03S0827
*                   PRFQCBA=ADDR(TOTSCBUF);/* SET TO POST TO    03S0828
*                                      SECONDARY DEVICE QCB          */
         LA    @14,TOTSCBUF(,OLTCBPTR)                          03S0828
         STCM  @14,7,PRFQCBA(RPREFIX)                           03S0828
*                   RELMT=RPREFIX;  /* ADDR OF POSTED ELEMENT        */
         LR    RELMT,RPREFIX                                    03S0829
*                   RFY                                         03S0830
*                     REG03 RSTD;                               03S0830
*                   RFY                                         03S0831
*                     REG10 RSTD;   /*                       @G36XRUV*/
*                   REG10=RESADDND; /* ADDR OF ROUTINE       @G36XRUV*/
         L     REG10,RESADDND(,RRESPL)                          03S0832
*                   GEN SETS(REG10,RELMT,RPARM) REFS(PSALITA,FLC);
*                                                  /*    @G36XRUV*/
         MODESET MODE=SUP             SET SUPERVISOR STATE     @G36XRUV
         MODESET EXTKEY=SUPR          SET KEY ZERO             @G36XRUV
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,       @G36XRUVC
               RELATED=ATTACHED-TASKS-IEDQWS-IEDQW33(SETTSTBF) @G36XRUV
         LR    RBRNCH,REG10           COPY ENTRY POINT         @G36XRUV
         BALR  REG10,RBRNCH           PLACE ON QUEUE           @G36XRUV
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                  @G36XRUVC
               RELATED=ATTACHED-TASKS-IEDQWA1(SETTSTBF)        @G36XRUV
         MODESET EXTKEY=TCAM          TCAM'S KEY               @G36XRUV
         MODESET MODE=PROB            PROBLEM MODE             @G36XRUV
*                   RFY                                         03S0834
*                     REG10 UNRSTD; /*                       @YM07334*/
*                   RFY                                         03S0835
*                     REG03 UNRSTD;                             03S0835
*                   GEN REFS(TOTSCECB,OLTCBPTR);                03S0836
         POST  TOTSCECB(OLTCBPTR)   POST OLT
*                   FNDTFLG=ON;     /* FOUND TEST DEVICE MATCH       */
         OI    FNDTFLG,B'00000010'                              03S0837
*                 END;                                          03S0838
*               ELSE                /* NOT FOR THIS OLTCB            */
*                 OLTCBPTR=TOTELLNK;/* GET NEXT OLTCB                */
         B     @RC00826                                         03S0839
@RF00826 L     @14,TOTELLNK-1(,OLTCBPTR)                        03S0839
         LA    @14,0(,@14)                                      03S0839
         LR    OLTCBPTR,@14                                     03S0839
*           END;                                                03S0840
@RC00826 DS    0H                                               03S0840
@RC00813 DS    0H                                               03S0840
@DE00812 CLI   TOTELKEY(OLTCBPTR),X'00'                         03S0840
         BE    @DC00812                                         03S0840
         TM    FNDTFLG,B'00000010'                              03S0840
         BZ    @DL00812                                         03S0840
@DC00812 DS    0H                                               03S0841
*           IF FNDTFLG=OFF THEN     /* IF TEST DEVICE MATCH NOT FOUND*/
         TM    FNDTFLG,B'00000010'                              03S0841
         BNZ   @RF00841                                         03S0841
*             DO;                                               03S0842
*               GEN;                                            03S0843
         WTO   'IED258I ERROR RESPONSE TO OLTT I/O - RESOURCE ID NOT UNC
               DER TEST.'
*               CALL RTNBUF;        /* RETURN BUFFER TO TCAM         */
         BAL   @14,RTNBUF                                       03S0844
*             END;                                              03S0845
*           ELSE                                                03S0846
*             ;                                                 03S0846
@RF00841 DS    0H                                               03S0847
*         END;                                                  02S0847
*       ELSE                                                    02S0848
*         DO;                       /* INITIATE CLEANUP              */
         B     @RC00777                                         02S0848
@RF00777 DS    0H                                               02S0849
*                                                               03S0849
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS.CLEANUP: THIS SEGMENT PROCESSES REQUESTS FOR  */
*           /* ABNORMAL CLEANUP. RPREFIX POINTS TO AN ELEMENT WHICH  */
*           /* MAY BE OF TWO TYPES: 1) AN ERRORMSG ELEMENT POSTED TO */
*           /* TOTE FROM THE TOTE MH WHEN AN I/O ERROR IS DETECTED.  */
*           /* 2) AN OPERATOR CONTROL SYNCHRONIZATION ELEMENT        */
*           /* INDICATING THAT A RESOURCE SUPERIOR TO ONE IN OLT MODE*/
*           /* IS BEING DEACTIVATED DUE TO AN OPERATOR COMMAND OR    */
*           /* NETWORK MALFUNCTION.                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0849
*           RFY                                                 03S0849
*             RELMT UNRSTD;                                     03S0849
*           RFY                                                 03S0850
*             RTRM UNRSTD;                                      03S0850
*           IF PRFKEY=PRFOPCLN THEN /* IF A OP CTL ELEMENT           */
         CLI   PRFKEY(RPREFIX),X'FE'                            03S0851
         BNE   @RF00851                                         03S0851
*             TESTCTR=''B;          /* INIT TEST COUNTER             */
         SLR   @14,@14                                          03S0852
         STH   @14,TESTCTR(,RPREFIX)                            03S0852
*           OLTCBPTR=RESOBFWD;      /* POINT TO FIRST OLTCB          */
@RF00851 L     OLTCBPTR,RESOBFWD(,RRESPL)                       03S0853
*           DO WHILE(TOTELKEY^=QENDKEY&CLNUPFLG=OFF);/* LOOP THRU
*                                      OLTCB Q UNTIL AFFECTED TEST
*                                      FOUND                 @XM05671*/
         B     @DE00854                                         03S0854
@DL00854 DS    0H                                               03S0855
*             IF(PRFKEY=PRFOPCLN&   /* IF OP CTL ELMT AND            */
*                 (OPTTCIN=TOTCROFF×/* CONTROL TERM                  */
*                 OPTTCIN=TOTAROFF× /* ALTERNATE PRINTER             */
*                 OPTTCIN=TOTPROFF× /* PRIMARY DEVICE                */
*                 OPTTCIN=TOTSROFF))×/* OR SECONDARY DEVICE MATCH    */
*                 (PRFKEY=PRFDEVFL& /* OR IF ERRORMSG ELEMENT AND    */
*                 (ERRTTCIN=TOTCTOFF×/* CONTROL TERM                 */
*                 ERRTTCIN=TOTAPOFF)) THEN/* OR ALTERNATE PRINTER
*                                      MATCH                         */
         CLI   PRFKEY(RPREFIX),X'FE'                            03S0855
         BNE   @GL00026                                         03S0855
         CLC   OPTTCIN(2,RPREFIX),TOTCROFF(OLTCBPTR)            03S0855
         BE    @RT00855                                         03S0855
         CLC   OPTTCIN(2,RPREFIX),TOTAROFF(OLTCBPTR)            03S0855
         BE    @RT00855                                         03S0855
         CLC   OPTTCIN(2,RPREFIX),TOTPROFF(OLTCBPTR)            03S0855
         BE    @RT00855                                         03S0855
         CLC   OPTTCIN(2,RPREFIX),TOTSROFF(OLTCBPTR)            03S0855
         BE    @RT00855                                         03S0855
@GL00026 CLI   PRFKEY(RPREFIX),X'F0'                            03S0855
         BNE   @RF00855                                         03S0855
         LA    @14,PRFSUNIT(,RPREFIX)                           03S0855
         AH    @14,PRFSCAN(,RPREFIX)                            03S0855
         CLC   ERRTTCIN(2,@14),TOTCTOFF(OLTCBPTR)               03S0855
         BE    @RT00855                                         03S0855
         CLC   ERRTTCIN(2,@14),TOTAPOFF(OLTCBPTR)               03S0855
         BNE   @RF00855                                         03S0855
@RT00855 DS    0H                                               03S0856
*               IF TOTCLNST=ON THEN /* IF CLEANUP STARTED            */
         TM    TOTCLNST(OLTCBPTR),B'00000010'                   03S0856
         BNO   @RF00856                                         03S0856
*                 IF PRFKEY=PRFOPCLN THEN/* IF OP CTL ELMT           */
         CLI   PRFKEY(RPREFIX),X'FE'                            03S0857
         BNE   @RF00857                                         03S0857
*                   IF TOTCLNED=OFF THEN/* IF CLEANUP NOT ENDED      */
         TM    TOTCLNED(OLTCBPTR),B'00000001'                   03S0858
         BNZ   @RF00858                                         03S0858
*                     DO;                                       03S0859
*                       TESTCTR=TESTCTR+1;/* INCREMENT COUNTER       */
         LA    @14,1                                            03S0860
         AH    @14,TESTCTR(,RPREFIX)                            03S0860
         STH   @14,TESTCTR(,RPREFIX)                            03S0860
*                       REQQCBA=ADDR(TOTOPCLN);/* QCB IS OP CTL CLN
*                                      UP Q                  @XM05671*/
         LA    @14,TOTOPCLN(,OLTCBPTR)                          03S0861
         STCM  @14,7,REQQCBA(RPREFIX)                           03S0861
*                       RBRNCH=RESADDND;/* ADDR OF Q ADDR ROUTINE
*                                                            @XM05671*/
         L     RBRNCH,RESADDND(,RRESPL)                         03S0862
*                       RFY                                     03S0863
*                         RELMT RSTD;/*                      @XM05671*/
*                       RFY                                     03S0864
*                         REG03 RSTD;/*                      @XM05671*/
*                       RFY                                     03S0865
*                         REG10 RSTD;/*                      @XM05671*/
*                       RELMT=RPREFIX;/* COPY ADDR OF ELEMENT   03S0866
*                                                            @XM05671*/
         LR    RELMT,RPREFIX                                    03S0866
*                       GEN SETS(REG03,REG10,RELMT);            03S0867
*                                   /*                       @XM05671*/
         BALR  REG10,RBRNCH                                    @XM05671
*                       RFY                                     03S0868
*                         RELMT UNRSTD;/*                    @XM05671*/
*                       RFY                                     03S0869
*                         REG03 UNRSTD;/*                    @XM05671*/
*                       RFY                                     03S0870
*                         REG10 UNRSTD;/*                    @XM05671*/
*                       CLNUPFLG=ON;/* SET TO GET OUT OF LOOP   03S0871
*                                                            @XM05671*/
         OI    CLNUPFLG,B'00000100'                             03S0871
*                     END;                                      03S0872
*                   ELSE                                        03S0873
*                     ;             /* IF ENDED, DO NOTHING          */
@RF00858 DS    0H                                               03S0874
*                 ELSE                                          03S0874
*                   ;               /* IF ERRORMSG ELMT, DO NOTHING  */
@RF00857 DS    0H                                               03S0875
*               ELSE                /* CLEANUP NOT STARTED           */
*                 DO;               /* INITIATE CLEANUP              */
         B     @RC00856                                         03S0875
@RF00856 DS    0H                                               03S0876
*                   IF PRFKEY=PRFDEVFL THEN                     03S0876
         CLI   PRFKEY(RPREFIX),X'F0'                            03S0876
         BE    @RT00876                                         03S0876
*                     ;             /* IF ERRORMSG ELEMENT   @XM05671*/
*                   ELSE            /* OP CTL ELEMENT                */
*                     DO;           /* SET ELMT FOR IEDQWE2  @YM08564*/
*                       TESTCTR=TESTCTR+1;/* 'NO. OF TESTS AFFECTED'
*                                      COUNTER               @YM08564*/
         LA    @14,1                                            03S0879
         AH    @14,TESTCTR(,RPREFIX)                            03S0879
         STH   @14,TESTCTR(,RPREFIX)                            03S0879
*                       REQQCBA=ADDR(TOTOPCLN);/* QCB IS OP CTL CLN
*                                      UP Q                  @XM05671*/
         LA    @14,TOTOPCLN(,OLTCBPTR)                          03S0880
         STCM  @14,7,REQQCBA(RPREFIX)                           03S0880
*                       RBRNCH=RESADDND;/* ADDR OF Q ADDR ROUTINE
*                                                            @XM05671*/
         L     RBRNCH,RESADDND(,RRESPL)                         03S0881
*                       RFY                                     03S0882
*                         RELMT RSTD;/*                      @XM05671*/
*                       RFY                                     03S0883
*                         REG03 RSTD;/*                      @XM05671*/
*                       RFY                                     03S0884
*                         REG10 RSTD;/*                      @XM05671*/
*                       RELMT=RPREFIX;/* COPY ADDR OF ELEMENT   03S0885
*                                                            @XM05671*/
         LR    RELMT,RPREFIX                                    03S0885
*                       GEN SETS(REG03,REG10,RELMT);            03S0886
*                                   /*                       @XM05671*/
         BALR  REG10,RBRNCH                                    @XM05671
*                       RFY                                     03S0887
*                         RELMT UNRSTD;/*                    @XM05671*/
*                       RFY                                     03S0888
*                         REG03 UNRSTD;/*                    @XM05671*/
*                       RFY                                     03S0889
*                         REG10 UNRSTD;/*                    @XM05671*/
*                       CLNUPFLG=ON;/* SET TO GET OUT OF LOOP   03S0890
*                                                            @XM05671*/
         OI    CLNUPFLG,B'00000100'                             03S0890
*                     END;          /*                       @YM08564*/
*                   TOTCLNST=ON;    /* SET CLEANUP STARTED FLAG      */
@RT00876 L     @14,TOTCLNST(,OLTCBPTR)                          03S0892
@GL00033 LR    @10,@14                                          03S0892
         O     @10,@CF03317                                     03S0892
         CS    @14,@10,TOTCLNST(OLTCBPTR)                       03S0892
         BNE   @GL00033                                         03S0892
*                   TOTOLTED=ON;    /* OLT ENDED FLAG                */
         OI    TOTOLTED(OLTCBPTR),B'00000100'                   03S0893
*                   TOTREPEX=OFF;   /* RESET "REPLY EXPECTED"   03S0894
*                                                            @YM09016*/
         NI    TOTREPEX(OLTCBPTR),B'11111101'                   03S0894
*                   TOTCMPCD(2:3)=ERRCODE;/* SET COMPLETION CODE     */
         MVC   TOTCMPCD+1(2,OLTCBPTR),ERRCODE                   03S0895
*                   DTCHOLT=TOTTCBAD;/* MOVE TCB ADDR IN COMMON AREA */
         L     @14,TOTTCBAD(,OLTCBPTR)                          03S0896
         ST    @14,DTCHOLT                                      03S0896
*                   IF TOTOTACT=ON THEN/* IF ON-LINE TESTING ACTIVE  */
         TM    TOTOTACT(OLTCBPTR),B'00000010'                   03S0897
         BNO   @RF00897                                         03S0897
*                     GEN REFS(DTCHOLT);                        03S0898
*                                   /*DETACH OLT SUBTASK*/
         DETACH DTCHOLT,STAE=YES
*                   ELSE                                        03S0899
*                     GEN REFS(DTCHOLT,TOTOTECB);               03S0899
         B     @RC00897                                         03S0899
@RF00897 DS    0H                                               03S0899
*                                   /*POST REPLY ECB AND DETACH*/
         POST  TOTOTECB(OLTCBPTR)
         DETACH DTCHOLT
*                 END;              /* END OF CLEANUP INITIATION     */
@RC00897 DS    0H                                               03S0901
*             OLTCBPTR=TOTELLNK;    /* POINT TO NEXT OLTCB   @YM08564*/
@RC00856 DS    0H                                               03S0901
@RF00855 L     @14,TOTELLNK-1(,OLTCBPTR)                        03S0901
         LA    @14,0(,@14)                                      03S0901
         LR    OLTCBPTR,@14                                     03S0901
*           END;                    /* END OF OLTCB LOOP             */
@DE00854 CLI   TOTELKEY(OLTCBPTR),X'00'                         03S0902
         BE    @DC00854                                         03S0902
         TM    CLNUPFLG,B'00000100'                             03S0902
         BZ    @DL00854                                         03S0902
@DC00854 DS    0H                                               03S0903
*           IF PRFKEY=PRFDEVFL THEN /* IF ERRORMSG ELMT              */
         CLI   PRFKEY(RPREFIX),X'F0'                            03S0903
         BNE   @RF00903                                         03S0903
*             CALL RTNBUF;          /* RETURN BUFFER                 */
         BAL   @14,RTNBUF                                       03S0904
*           ELSE                    /* OP CTL ELMT                   */
*             IF TESTCTR=0 THEN     /* IF ALL OLT'S ENDED            */
         B     @RC00903                                         03S0905
@RF00903 LH    @14,TESTCTR(,RPREFIX)                            03S0905
         LTR   @14,@14                                          03S0905
         BNZ   @RF00905                                         03S0905
*               DO;                 /* POST ELEMENT BACK TO OP CTL   */
*                 REQQCBA=REQRQCBA; /* RETURN QCB                    */
         MVC   REQQCBA(3,RPREFIX),REQRQCBA(RPREFIX)             03S0907
*                 REQPRI=REQRPRI;   /* RETURN PRIORITY               */
         MVC   REQPRI(1,RPREFIX),REQRPRI(RPREFIX)               03S0908
*                 REQLINK=''B;      /* CLEAR LINK FIELD FOR POSTWAIT */
         SLR   @14,@14                                          03S0909
         STCM  @14,7,REQLINK(RPREFIX)                           03S0909
*                 REQRPRI=TICCODE;  /* TIC COMMAND CODE      @YM08564*/
         MVI   REQRPRI(RPREFIX),X'08'                           03S0910
*                 REQRQCBA=INVALTIC;/* INVALID TIC ADDRESS   @YM08564*/
         MVC   REQRQCBA(3,RPREFIX),INVALTIC                     03S0911
*                 RPARM=RPREFIX;    /* POINT TO ELEMENT              */
         LR    RPARM,RPREFIX                                    03S0912
*                 RZERO=ADDR(WA1WRKSP);/* WORKAREA FOR POSTWAIT 03S0913
*                                      ROUTINE                       */
         LA    RZERO,WA1WRKSP                                   03S0913
*                 CALL POSTWAIT;    /* POST REQ ELMT BACK TO OP CTL  */
         L     @15,RESPLRVT(,RRESPL)                            03S0914
         BALR  @14,@15                                          03S0914
*               END;                                            03S0915
*             ELSE                                              03S0916
*               ;                   /* COUNTER NOT ZERO, DON'T POST  */
@RF00905 DS    0H                                               03S0917
*           RFY                                                 03S0917
*             RELMT RSTD;                                       03S0917
@RC00903 DS    0H                                               03S0918
*           RFY                                                 03S0918
*             RTRM RSTD;                                        03S0918
*         END;                                                  02S0919
*                                                               02S0920
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE TERMINATION OF THE MODULE*/
*   /* AND GENERATES THE EXIT LINKAGE TO RETURN TO THE CALLING       */
*   /* MODULE, IEDQWA, THE TOTE RESIDENT MODULE. REGISTER 15 IS SET  */
*   /* WITH THE RETURN CODE FOR THE PROCESSING OF THE ELEMENT        */
*   /* DEQUEUED.                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0920
*   REG15=RTNCODE;                  /* SET THE RETURN CODE           */
@RC00777 DS    0H                                               02S0920
@RC00586 DS    0H                                               02S0920
@RT00584 SLR   REG15,REG15                                      02S0920
         IC    REG15,RTNCODE                                    02S0920
*   RSAVE=BACK13;                   /* POINT TO CALLER'S SAVE AREA
*                                                            @YM07336*/
         L     RSAVE,BACK13                                     02S0921
*   GEN;                                                        02S0922
*                                   /*GENERATE EXIT LINKAGE*/
         L     14,12(13)                RESTORE RETURN REG
         LM    0,12,20(13)              RESTORE REGS
         BR    14                       RETURN
*                                                               02S0923
*   /*****************************************************************/
*   /*                                                               */
*   /* RTNBUF: THIS SEGMENT CONTAINS THE GERERAL USE ROUTINE TO      */
*   /* RETURN A BUFFER TO TCAM.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0923
*RTNBUF:                                                        02S0923
*   PROC OPTIONS(RETREG,SAVE(14));                              02S0923
RTNBUF   ST    @14,@SA00002                                     02S0923
*   RFY                                                         02S0924
*     IEDQLCB BASED(RPARM);                                     02S0924
*   IF PRFKEY=PRFSS×PRFKEY=PRFBSC THEN/* IF THERE IS STILL AN LCB    */
         CLI   PRFKEY(RPREFIX),X'08'                            02S0925
         BE    @RT00925                                         02S0925
         CLI   PRFKEY(RPREFIX),X'04'                            02S0925
         BNE   @RF00925                                         02S0925
@RT00925 DS    0H                                               02S0926
*     DO;                           /* POST LCB TO BUFFER DISPOSITION*/
*       RPARM=PRFLCB;               /* PICK UP LCB ADDR FROM BUFFER  */
         L     RPARM,PRFLCB-1(,RPREFIX)                         02S0927
         LA    RPARM,0(,RPARM)                                  02S0927
*       LCBLSPCI=RPREFIX;           /* BUFFER ADDR                   */
         STCM  RPREFIX,7,LCBLSPCI(RPARM)                        02S0928
*       IF LCBRSKEY=ANRKEY THEN     /* IF ANR                        */
         CLI   LCBRSKEY(RPARM),X'1E'                            02S0929
         BNE   @RF00929                                         02S0929
*         LCBTSTSW=ANRSW;           /* SET SWITCH                    */
         MVI   LCBTSTSW(RPARM),X'F0'                            02S0930
*       ELSE                                                    02S0931
*         ;                                                     02S0931
@RF00929 DS    0H                                               02S0932
*       SCBDESTQ=ADDR(AVTBFRTB);    /* SET SCB WITH ADDR OF BUFF RTN */
         L     @14,LCBSCBA-1(,RPARM)                            02S0932
         LA    @14,0(,@14)                                      02S0932
         LA    @10,AVTBFRTB(,RAVT)                              02S0932
         STCM  @10,7,SCBDESTQ(@14)                              02S0932
*       SCBMACR=ADDR(AVTINOUT);     /* DUMMY IN-OUT PARM LIST        */
         LA    @10,AVTINOUT(,RAVT)                              02S0933
         STCM  @10,7,SCBMACR(@14)                               02S0933
*       LCBPRI=PRILCB;              /* SET LCB POST PRIORITY         */
         MVI   LCBPRI(RPARM),X'E7'                              02S0934
*       LCBQCBA=AVTMSGS->BDADDR;    /* ADDR OF BUFFER DISP           */
         L     @14,AVTMSGS-1(,RAVT)                             02S0935
         MVC   LCBQCBA(3,RPARM),BDADDR+1(@14)                   02S0935
*       RZERO=ADDR(WORKAREA);       /* WORKAREA USED BY POSTWAIT     */
         LA    RZERO,WORKAREA                                   02S0936
*       LCBLINK=''B;                /* INDICATES TO POSTWAIT THAT
*                                      THIS IS A SINGLE ELEMENT POST */
         SLR   @14,@14                                          02S0937
         STCM  @14,7,LCBLINK(RPARM)                             02S0937
*       CALL POSTWAIT;              /* POST LCB TO BUFFER DISP       */
         L     @15,RESPLRVT(,RRESPL)                            02S0938
         BALR  @14,@15                                          02S0938
*     END;                                                      02S0939
*   ELSE                                                        02S0940
*     DO;                                                       02S0940
         B     @RC00925                                         02S0940
@RF00925 DS    0H                                               02S0941
*       RPARM=RPREFIX;              /* ADDR OF BUFFER                */
         LR    RPARM,RPREFIX                                    02S0941
*       PRFLINK=''B;                                            02S0942
         SLR   @14,@14                                          02S0942
         STCM  @14,7,PRFLINK(RPREFIX)                           02S0942
*       RZERO=ADDR(WORKAREA);       /* WORKAREA USED BY FREEBUF      */
         LA    RZERO,WORKAREA                                   02S0943
*       CALL FREEBUF;               /* POST BUFFER TO BUFFER RETURN  */
         L     @15,RESFBUF(,RRESPL)                             02S0944
         BALR  @14,@15                                          02S0944
*     END;                                                      02S0945
*   BUFRTFLG=ON;                    /* SET BUFFER RETURN FLAG   02S0946
*                                      INDICATING NO FURTHER    02S0946
*                                      PROCESSING                    */
@RC00925 OI    BUFRTFLG,B'00001000'                             02S0946
*   RFY                                                         02S0947
*     IEDQLCB BASED;                                            02S0947
*   END RTNBUF;                                                 02S0948
@EL00002 DS    0H                                               02S0948
@EF00002 DS    0H                                               02S0948
@ER00002 L     @14,@SA00002                                     02S0948
         BR    @14                                              02S0948
*                                                               02S0949
*   /*****************************************************************/
*   /*                                                               */
*   /* HEXCONV: THIS GENERAL PURPOSE ROUTINE CONVERTS A STRING OF    */
*   /* HEXIDECIMAL DIGITS TO THEIR EBCDIC REPRESENTATION .           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0949
*/* PARAMETERS:                                                      */
*/* - CONVNUM = THE NUMBER OF HEXIDECIMAL DIGITS                     */
*/* - CONVSRC = THE ADDRESS OF THE START OF THE HEXIDECIMAL DIGITS   */
*/* - CONVTRG = THE ADDRESS OF LOCATION TO WHICH THE CONVERTED EBCDIC*/
*/*             REPRESENTATIONS ARE TO BE PLACED                     */
*/* RESTRICTIONS:                                                    */
*/* - THE HEXIDECIMAL DIGITS MUST START ON A BYTE BOUNDRY            */
*                                                               02S0949
*HEXCONV:                                                       02S0949
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S0949
HEXCONV  DS    0H                                               02S0950
*   RFY                                                         02S0950
*     RRET RSTD;                                                02S0950
*   HEXSAV14=RRET;                  /* SAVE RETURN ADDRESS           */
         ST    RRET,HEXSAV14                                    02S0951
*   RFY                                                         02S0952
*     RRET UNRSTD;                                              02S0952
*   DO I=1 TO CONVNUM BY 2;                                     02S0953
         LA    I,1                                              02S0953
         B     @DE00953                                         02S0953
@DL00953 DS    0H                                               02S0954
*     CONVIDX=CONVSRC->BYTENUM;     /* GET FIRST TWO DIGITS          */
         L     @14,CONVSRC                                      02S0954
         SLR   @07,@07                                          02S0954
         IC    @07,BYTENUM(,@14)                                02S0954
         STH   @07,CONVIDX                                      02S0954
*     SRL(CONVIDX,4);               /* ISOLATE FIRST DIGIT           */
         LR    @14,@07                                          02S0955
         SRL   @14,4                                            02S0955
         STH   @14,CONVIDX                                      02S0955
*     CONVTRG->DATABYTE=HEXTCHAR(CONVIDX+1);/* MOVE CONVERTED VALUE  */
         LH    @14,CONVIDX                                      02S0956
         N     @14,@CF03301                                     02S0956
         LA    @07,HEXTCHAR(@14)                                02S0956
         MVC   DATABYTE(1,CONVTRG),0(@07)                       02S0956
*     CONVTRG=CONVTRG+1;            /* BUMP TARGET PTR TO NEXT BYTE  */
         AL    CONVTRG,@CF00063                                 02S0957
*     IF I<=CONVNUM-1 THEN          /* IF END NOT IN MIDDLE OF SRC
*                                      BYTE                          */
         LH    @14,CONVNUM                                      02S0958
         BCTR  @14,0                                            02S0958
         CR    I,@14                                            02S0958
         BH    @RF00958                                         02S0958
*       DO;                         /* CONVERT NEXT DIGIT IN BYTE    */
*         CONVIDX=CONVSRC->BYTENUM; /* GET CONTENTS OF BYTE          */
         L     @14,CONVSRC                                      02S0960
         SLR   @07,@07                                          02S0960
         IC    @07,BYTENUM(,@14)                                02S0960
         STH   @07,CONVIDX                                      02S0960
*         CONVIDX=CONVIDX&HIMASK;   /* ISOLATE SECOND DIGIT          */
         SLR   @14,@14                                          02S0961
         ICM   @14,3,HIMASK                                     02S0961
         NR    @07,@14                                          02S0961
         STH   @07,CONVIDX                                      02S0961
*         CONVTRG->DATABYTE=HEXTCHAR(CONVIDX+1);/* PLACE IN TARGET
*                                      LOCATION                      */
         LA    @14,HEXTCHAR(@07)                                02S0962
         MVC   DATABYTE(1,CONVTRG),0(@14)                       02S0962
*       END;                                                    02S0963
*     ELSE                                                      02S0964
*       ;                           /* END IN MIDDLE OF SOURCE BYTE  */
@RF00958 DS    0H                                               02S0965
*     CONVSRC=CONVSRC+1;            /* POINT TO NEXT SOURCE BYTE     */
         LA    @14,1                                            02S0965
         L     @07,CONVSRC                                      02S0965
         ALR   @07,@14                                          02S0965
         ST    @07,CONVSRC                                      02S0965
*     CONVTRG=CONVTRG+1;            /* POINT TO NEXT TARGET BYTE     */
         ALR   CONVTRG,@14                                      02S0966
*   END;                            /* END OF CONVERSION LOOP        */
         AL    I,@CF00067                                       02S0967
@DE00953 CH    I,CONVNUM                                        02S0967
         BNH   @DL00953                                         02S0967
*   RFY                                                         02S0968
*     RRET RSTD;                                                02S0968
*   RRET=HEXSAV14;                  /* RESTORE RETURN REG            */
         L     RRET,HEXSAV14                                    02S0969
*   RFY                                                         02S0970
*     RRET UNRSTD;                                              02S0970
*   END HEXCONV;                                                02S0971
@EL00003 DS    0H                                               02S0971
@EF00003 DS    0H                                               02S0971
@ER00003 BR    @14                                              02S0971
*                                                               02S0972
*   /*****************************************************************/
*   /*                                                               */
*   /* REQMSG: THIS SUBROUTINE CONTAINS THE CODE TO RETURN THE TOTE  */
*   /* BUSY MESSAGE TO THE REQUESTING TERMINAL.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0972
*REQMSG:                                                        02S0972
*   PROC;                                                       02S0972
REQMSG   STM   @14,@12,@SA00004                                 02S0972
*   RFY                                                         02S0973
*     IEDQQCB BASED(TRMDESTQ);                                  02S0973
*   RFY                                                         02S0974
*     IEDQLCB BASED(PRFLCB);                                    02S0974
*   RFY                                                         02S0975
*     IEDQSCB BASED(LCBSCBA);                                   02S0975
*   IF PRFKEY^=PRFSYS THEN          /* IF REQUEST NOT FROM SYS  02S0976
*                                      CONSOLE                       */
         CLI   PRFKEY(RPREFIX),X'0C'                            02S0976
         BE    @RF00976                                         02S0976
*     DO;                                                       02S0977
*       RPARM=PRFSRCE;              /* USE SOURCE TTCIN              */
         LH    RPARM,PRFSRCE(,RPREFIX)                          02S0978
*       CALL IEDQTNT;               /* TO CALCULATE TTE ADDRESS      */
         L     @15,AVTRNMPT(,RAVT)                              02S0979
         BALR  @14,@15                                          02S0979
*       RTRM=RPARM;                 /* TTE BASE                      */
         LR    RTRM,RPARM                                       02S0980
*       RDCT=AVTCSTCS+(TRMCHCIN-1)*LENGTH(IEDDCT);/* ENTRY IN DCT    */
         SLR   RDCT,RDCT                                        02S0981
         IC    RDCT,TRMCHCIN(,RTRM)                             02S0981
         BCTR  RDCT,0                                           02S0981
         MH    RDCT,@CH00061                                    02S0981
         AL    RDCT,AVTCSTCS(,RAVT)                             02S0981
*     END;                                                      02S0982
*   ELSE                                                        02S0983
*     ;                                                         02S0983
@RF00976 DS    0H                                               02S0984
*   IF PRFKEY=PRFSYS×               /* IF REQUEST FROM SYS CONSOLE   */
*       TRMCONC=ON×                 /* REQ FROM TERM ON CONCENTRATOR */
*       (AVTTSON=ON&AVTAQTAN=OFF)×  /* TSO ONLY SYSTEM               */
*       (QCBTSSES=ON)×              /* TERM IN TSO SESSION           */
*       (QCBREUS=OFF&QCBNREUS=OFF&QCBCORE=OFF)/* NO QUEUES           */
*     THEN                          /* CAN'T SEND TO REQUEST TERM    */
         CLI   PRFKEY(RPREFIX),X'0C'                            02S0984
         BE    @RT00984                                         02S0984
         TM    TRMCONC(RTRM),B'10000000'                        02S0984
         BO    @RT00984                                         02S0984
         TM    AVTTSON(RAVT),B'01000000'                        02S0984
         BNO   @GL00037                                         02S0984
         TM    AVTAQTAN(RAVT),B'00100000'                       02S0984
         BZ    @RT00984                                         02S0984
@GL00037 L     @14,TRMDESTQ-1(,RTRM)                            02S0984
         LA    @14,0(,@14)                                      02S0984
         TM    QCBTSSES(@14),B'10000000'                        02S0984
         BO    @RT00984                                         02S0984
         TM    QCBREUS(@14),B'01110000'                         02S0984
         BNZ   @RF00984                                         02S0984
@RT00984 DS    0H                                               02S0985
*     DO;                           /* SEND MSG TO SYS CONSOLE       */
*       RPARM=ADDR(IED149I);        /* ADDR OF WTO PARM LIST         */
         LA    RPARM,IED149I                                    02S0986
*       SVC(35);                    /* WTO                           */
         SVC   35                                               02S0987
*     END;                                                      02S0988
*   ELSE                                                        02S0989
*     DO;                           /* SEND MESSAGE TO REQUEST TERM  */
         B     @RC00984                                         02S0989
@RF00984 DS    0H                                               02S0990
*                                                               03S0990
*       /*************************************************************/
*       /*                                                           */
*       /* REQMSG.REQMSGMV:THIS SEGMENT MOVES THE TOTE BUSY MESSAGE  */
*       /* INTO THE BUFFER AND INSERTS ALL NECESSARY LINE CONTROL.   */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0990
*       IF TRMPREF=ON THEN          /* IF THIS IS AN NCP DEVICE      */
         TM    TRMPREF(RTRM),B'00010000'                        03S0990
         BNO   @RF00990                                         03S0990
*         IF TRMSNA=ON&DCTL3270=ON THEN/* IF THIS IS A SNA 3270      */
         LR    @14,RTRM                                         03S0991
         AL    @14,@CF03320                                     03S0991
         TM    TRMSNA-6(@14),B'00000010'                        03S0991
         BNO   @RF00991                                         03S0991
         TM    DCTL3270(RDCT),B'01000000'                       03S0991
         BNO   @RF00991                                         03S0991
*           DO;                                                 03S0992
*             MSGPTR=ADDR(WORKAREA);/* INIT POINTER FOR MSG MOVE     */
         LA    MSGPTR,WORKAREA                                  03S0993
*             MSGAREA(1:LENGTH(S3270))=S3270;/* INSERT WRITE ERASE   */
         MVC   MSGAREA(2,MSGPTR),S3270                          03S0994
*             MSGPTR=MSGPTR+LENGTH(S3270);/* UPDATE POINTER          */
         AL    MSGPTR,@CF00067                                  03S0995
*             MSGAREA(1:LENGTH(MSG149I))=MSG149I;/* MOVE IN TOTE BUSY
*                                      MESSAGE                       */
         MVC   MSGAREA(17,MSGPTR),MSG149I                       03S0996
*             RMSGLEN=S3270L;       /* LENGTH OF MESSAGE             */
         LH    RMSGLEN,S3270L                                   03S0997
*           END;                    /* END OF SNA 3270 PROCESSING    */
*         ELSE                                                  03S0999
*           DO;                     /* NCP, NON 3270 SNA             */
         B     @RC00991                                         03S0999
@RF00991 DS    0H                                               03S1000
*             MSGPTR=ADDR(WORKAREA);/* INIT POINTER FOR MOVE         */
         LA    MSGPTR,WORKAREA                                  03S1000
*             MSGAREA(1:LENGTH(MSG149I))=MSG149I;/* MOVE IN TOTE BUSY
*                                      MSG                           */
         MVC   MSGAREA(17,MSGPTR),MSG149I                       03S1001
*             MSGPTR=MSGPTR+LENGTH(MSG149I);/* UPDATE POINTER        */
         AL    MSGPTR,@CF03210                                  03S1002
*             IF DCT3270=ON THEN    /* IF 3270 DEVICE                */
         TM    DCT3270(RDCT),B'00000100'                        03S1003
         BNO   @RF01003                                         03S1003
*               MSGAREA(1:1)='';    /* ADD BLANK                     */
         MVI   MSGAREA(MSGPTR),C' '                             03S1004
*             ELSE                                              03S1005
*               MSGAREA(1:LENGTH(NLCHAR))=NLCHAR;/* NEW LINE    03S1005
*                                      CHARACTER                     */
         B     @RC01003                                         03S1005
@RF01003 MVC   MSGAREA(1,MSGPTR),NLCHAR                         03S1005
*             RMSGLEN=NCPL;         /* MSG LENGTH                    */
@RC01003 LH    RMSGLEN,NCPL                                     03S1006
*           END;                    /* END OF NCP PROCESSING         */
*       ELSE                        /* EP DEVICE                     */
*         IF LCBSYNC=ON×DCTNOIDL=ON THEN/* BSC OR 2260               */
         B     @RC00990                                         03S1008
@RF00990 L     @14,PRFLCB-1(,RPREFIX)                           03S1008
         TM    LCBSYNC(@14),B'00000100'                         03S1008
         BO    @RT01008                                         03S1008
         TM    DCTNOIDL(RDCT),B'00000010'                       03S1008
         BNO   @RF01008                                         03S1008
@RT01008 DS    0H                                               03S1009
*           DO;                                                 03S1009
*             MSGPTR=ADDR(WORKAREA);/* INIT POINTER                  */
         LA    MSGPTR,WORKAREA                                  03S1010
*             MSGAREA(1:LENGTH(STXCH))=STXCHAR;/* INSERT STX         */
         MVC   MSGAREA(1,MSGPTR),STXCHAR                        03S1011
*             MSGPTR=MSGPTR+LENGTH(STXCH);/* UPDATE POINTER          */
         AL    MSGPTR,@CF00063                                  03S1012
*             MSGAREA(1:LENGTH(MSG149I))=MSG149I;/* MOVE IN MESSAGE  */
         MVC   MSGAREA(17,MSGPTR),MSG149I                       03S1013
*             MSGPTR=MSGPTR+LENGTH(IED149I);/* UPDATE POINTER        */
         AL    MSGPTR,@CF03293                                  03S1014
*             MSGAREA(1:LENGTH(ENDSYNC))=ENDSYNC;/* ADD BSC CHARS AT
*                                      END                           */
         MVC   MSGAREA(3,MSGPTR),ENDSYNC                        03S1015
*             RMSGLEN=EPBSCL;       /* LENGTH OF MESSAGE             */
         LH    RMSGLEN,EPBSCL                                   03S1016
*           END;                                                03S1017
*         ELSE                                                  03S1018
*           DO;                     /* START STOP TERMINAL           */
         B     @RC01008                                         03S1018
@RF01008 DS    0H                                               03S1019
*             MSGPTR=ADDR(WORKAREA);/* MESSAGE IN WORKAREA           */
         LA    MSGPTR,WORKAREA                                  03S1019
*             MSGAREA(1:LENGTH(MSG149I))=MSG149I;/* MOVE IN MSG      */
         MVC   MSGAREA(17,MSGPTR),MSG149I                       03S1020
*             MSGPTR=MSGPTR+LENGTH(MSG149I);/* UPDATE POINTER        */
         AL    MSGPTR,@CF03210                                  03S1021
*             MSGAREA(1:LENGTH(ENDSS))=ENDSS;/* MOVE IN SS CHARS AT
*                                      END                           */
         MVC   MSGAREA(2,MSGPTR),ENDSS                          03S1022
*             RMSGLEN=EPSSL;        /* LENGTH OF EP START STOP MSG   */
         LH    RMSGLEN,EPSSL                                    03S1023
*           END;                                                03S1024
*       IEDPLMV=''B;                /* CLEAR IEDMVBFR PARM LIST      */
@RC01008 DS    0H                                               03S1025
@RC00990 LA    @14,PARMLSP                                      03S1025
         XC    IEDPLMV(24,@14),IEDPLMV(@14)                     03S1025
*       IF RMSGLEN>(PRFNBUNT*AVTKEYLE-AVTHDRSZ) THEN/* IF MSG TOO BIG
*                                      FOR BUF                       */
         SLR   @10,@10                                          03S1026
         IC    @10,PRFNBUNT(,RPREFIX)                           03S1026
         MH    @10,AVTKEYLE(,RAVT)                              03S1026
         SL    @10,@CF00452                                     03S1026
         CR    RMSGLEN,@10                                      03S1026
         BNH   @RF01026                                         03S1026
*         PLMVLNTH=PRFNBUNT*AVTKEYLE-AVTHDRSZ;/* TRUNCATE MSG        */
         STH   @10,PLMVLNTH(,@14)                               03S1027
*       ELSE                                                    03S1028
*         PLMVLNTH=RMSGLEN;         /* PLACE LEN OF MSG IN PARM LIST */
         B     @RC01026                                         03S1028
@RF01026 LA    @14,PARMLSP                                      03S1028
         STH   RMSGLEN,PLMVLNTH(,@14)                           03S1028
*       PRFSIZE=PLMVLNTH+AVTHDRSZ;  /* SET SIZE IN PREFIX            */
@RC01026 LA    @14,PARMLSP                                      03S1029
         LA    @10,30                                           03S1029
         LH    @07,PLMVLNTH(,@14)                               03S1029
         N     @07,@CF03301                                     03S1029
         ALR   @10,@07                                          03S1029
         STH   @10,PRFSIZE(,RPREFIX)                            03S1029
*       PLMVTU=RPREFIX;             /* TARGET UNIT                   */
         ST    RPREFIX,PLMVTU(,@14)                             03S1030
*       PLMVTD=ADDR(PRFSHDR);       /* TARGET DATA                   */
         LA    @10,PRFSHDR(,RPREFIX)                            03S1031
         ST    @10,PLMVTD(,@14)                                 03S1031
*       PLMVSU=ADDR(WORKAREA);      /* SOURCE UNIT                   */
         LA    @10,WORKAREA                                     03S1032
         ST    @10,PLMVSU(,@14)                                 03S1032
*       PLMVSD=PLMVSU;              /* SOURCE DATA                   */
         ST    @10,PLMVSD(,@14)                                 03S1033
*       PLMVSCTG=ON;                /* SOURCE CONTIGUOUS FLAG        */
         OI    PLMVSCTG(@14),B'01000000'                        03S1034
*       RPARM=ADDR(PARMLSP);        /* POINT TO PARM LIST            */
         LR    RPARM,@14                                        03S1035
*       CALL IEDMVBFR;              /* MOVE MESSAGE TO BUFFER        */
         L     @15,AVTMVBFR(,RAVT)                              03S1036
         BALR  @14,@15                                          03S1036
*                                                               03S1037
*       /*************************************************************/
*       /*                                                           */
*       /* REQMSG.REQDEST: THIS SEGMENT SENDS THE MESSAGE TO THE     */
*       /* REQUESTING TERMINAL.                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S1037
*       RFY                                                     03S1037
*         IEDTTCD BASED(ADDR(WA1WRKSP));/* BASE TTC DSECT            */
*       PRFDEST=PRFSRCE;            /* SET DESTINATION IN BUFFER     */
         LH    @14,PRFSRCE(,RPREFIX)                            03S1038
         STH   @14,PRFDEST(,RPREFIX)                            03S1038
*       PRFLINK=''B;                /* CLEAR LINK FIELD              */
         SLR   @14,@14                                          03S1039
         STCM  @14,7,PRFLINK(RPREFIX)                           03S1039
*       PRFSTAT1=''B;               /* CLEAR STATUS FLAGS            */
         MVI   PRFSTAT1(RPREFIX),X'00'                          03S1040
*       PRFSCAN=''B;                /* CLEAR SCAN POINTER            */
         STH   @14,PRFSCAN(,RPREFIX)                            03S1041
*       PRFSRCE=''B;                /* CLEAR SOURCE                  */
         STH   @14,PRFSRCE(,RPREFIX)                            03S1042
*       IF PRFKEY=PRFSS×PRFKEY=PRFBSC×PRFKEY=PRFMULT THEN/* IF  03S1043
*                                      LCB/SCB PRESENT               */
         CLI   PRFKEY(RPREFIX),X'08'                            03S1043
         BE    @RT01043                                         03S1043
         CLI   PRFKEY(RPREFIX),X'04'                            03S1043
         BE    @RT01043                                         03S1043
         CLI   PRFKEY(RPREFIX),X'14'                            03S1043
         BNE   @RF01043                                         03S1043
@RT01043 DS    0H                                               03S1044
*         DO;                                                   03S1044
*           SCBDESTQ=TRMDESTQ;      /* DESTINATION QUEUE             */
         L     @14,PRFLCB-1(,RPREFIX)                           03S1045
         LA    @14,0(,@14)                                      03S1045
         L     @10,LCBSCBA-1(,@14)                              03S1045
         MVC   SCBDESTQ(3,@10),TRMDESTQ(RTRM)                   03S1045
*           IF PRFKEY^=PRFMULT THEN /* IF NOT MULTIPLE BUFFER INPUT  */
         CLI   PRFKEY(RPREFIX),X'14'                            03S1046
         BE    @RF01046                                         03S1046
*             DO;                   /* POST BUFFER TO BUFFER DISP    */
*               PRFPRI=PRIDSPLB;    /* SET PRIORITY                  */
         MVI   PRFPRI(RPREFIX),X'DF'                            03S1048
*               PRFQCBA=AVTMSGS->BDADDR;/* QCB ADDR BUFFER DISP      */
         L     @10,AVTMSGS-1(,RAVT)                             03S1049
         MVC   PRFQCBA(3,RPREFIX),BDADDR+1(@10)                 03S1049
*               IF LCBRSKEY=ANRKEY THEN/* IF LOCAL 3270              */
         CLI   LCBRSKEY(@14),X'1E'                              03S1050
         BNE   @RF01050                                         03S1050
*                 LCBTSTSW=ANRSW;   /* SET KEY                       */
         MVI   LCBTSTSW(@14),X'F0'                              03S1051
*               ELSE                                            03S1052
*                 ;                                             03S1052
@RF01050 DS    0H                                               03S1053
*               SCBMACR=ADDR(AVTINOUT);/* DUMMY IN/OUT END           */
         L     @14,PRFLCB-1(,RPREFIX)                           03S1053
         L     @14,LCBSCBA-1(,@14)                              03S1053
         LA    @10,AVTINOUT(,RAVT)                              03S1053
         STCM  @10,7,SCBMACR(@14)                               03S1053
*             END;                  /* END NOT MULT BUF              */
*           ELSE                    /* MULTIPLE BUFFERED INPUT       */
*             DO;                   /* POST BUFFER TO DEST QUEUE     */
         B     @RC01046                                         03S1055
@RF01046 DS    0H                                               03S1056
*               PRFQCBA=TRMDESTQ;   /* QCB ADDR                      */
         MVC   PRFQCBA(3,RPREFIX),TRMDESTQ(RTRM)                03S1056
*               PRFPRI=PRIDESTQ;    /* PRIORITY FOR DEST Q POST      */
         MVI   PRFPRI(RPREFIX),X'E4'                            03S1057
*             END;                                              03S1058
*           RZERO=ADDR(WA1WRKSP);   /* WORKAREA USED BY POSTWAIT RTN */
@RC01046 LA    RZERO,WA1WRKSP                                   03S1059
*           RPARM=RPREFIX;          /* ADDR OF BUFFER TO BE POSTED   */
         LR    RPARM,RPREFIX                                    03S1060
*         END;                                                  03S1061
*       ELSE                        /* NO LCB/SCB AVAILABLE          */
*         IF PRFKEY=PRFOPCTL THEN   /* IF OP CTL TERM REQUEST        */
         B     @RC01043                                         03S1062
@RF01043 CLI   PRFKEY(RPREFIX),X'10'                            03S1062
         BNE   @RF01062                                         03S1062
*           DO;                     /* CREATE DUMMY LCB SCB          */
*             PRFLCB=ADDR(WA1WRKSP)-(ADDR(LCBRCQCB)-ADDR(IEDQLCB));/*
*                                      ADDR OF DUMMY LCB             */
         LA    @14,WA1WRKSP                                     03S1064
         LR    @10,@14                                          03S1064
         SL    @10,@CF00799                                     03S1064
         STCM  @10,7,PRFLCB(RPREFIX)                            03S1064
*             LCBSCBA=ADDR(TTCSCB); /* ADDR OF DUMMY SCB             */
         LA    @07,40                                           03S1065
         ALR   @07,@14                                          03S1065
         LA    @03,TTCSCB(,@07)                                 03S1065
         STCM  @03,7,LCBSCBA(@10)                               03S1065
*             SCBSTATE=''B;         /* CLEAR SCB STATE FIELD         */
         MVI   SCBSTATE(@03),X'00'                              03S1066
*             SCBDESTQ=TRMDESTQ;    /* DESTINATION Q                 */
         MVC   SCBDESTQ(3,@03),TRMDESTQ(RTRM)                   03S1067
*             PRFPRI=PRIDESTQ;      /* PRIORITY FOR DEST Q POST      */
         MVI   PRFPRI(RPREFIX),X'E4'                            03S1068
*             PRFQCBA=TRMDESTQ;     /* DEST Q                        */
         MVC   PRFQCBA(3,RPREFIX),TRMDESTQ(RTRM)                03S1069
*             PRFLINK=ADDR(SYNCELMT);/* POINT TO SYNCHRONIZATION
*                                      ELEMENT TO SERIALIZE USE OF
*                                      DUMMY LCB                     */
         LA    @10,SYNCELMT                                     03S1070
         STCM  @10,7,PRFLINK(RPREFIX)                           03S1070
*             SYNCQCB=ADDR(TTCQCB); /* QCB BUILT IN WORKAREA BY 03S1071
*                                      POSTWAIT                      */
         ST    @07,SYNCQCB                                      03S1071
*             SYNCLINK=''B;         /* CLEAR LINK FIELD FOR POSTWAIT */
         SLR   @10,@10                                          03S1072
         STCM  @10,7,SYNCLINK                                   03S1072
*             SYNCPRI=PRILNSCL;     /* PRIORITY LESS THAN PRIDESTQ
*                                                            @OX21052*/
         MVI   SYNCPRI,X'E3'                                    03S1073
*             RZERO=ADDR(WA1WRKSP); /* WORKAREA FOR POSTWAIT         */
         LR    RZERO,@14                                        03S1074
*             RPARM=RPREFIX;        /* POST BUFFER                   */
         LR    RPARM,RPREFIX                                    03S1075
*             RPARM=RPARM×WAITKEY;  /* SET WAIT KEY IN HI ORDER BYTE */
         O     RPARM,WAITKEY                                    03S1076
*           END;                    /* END OF OP CTL REQ TERM POST   */
*         ELSE                      /* SNA TERMINAL                  */
*           DO;                                                 03S1078
         B     @RC01062                                         03S1078
@RF01062 DS    0H                                               03S1079
*             PRFSRCE=SAVTSCPT;     /* SET TTCIN OF SSCP TERMINAL
*                                      ENTRY                         */
         L     @14,AVTSAVTP(,RAVT)                              03S1079
         LH    @10,SAVTSCPT(,@14)                               03S1079
         N     @10,@CF03301                                     03S1079
         STH   @10,PRFSRCE(,RPREFIX)                            03S1079
*             PRFQCBA=ADDR(SAVTSCPQ);/* SSCP QCB                     */
         LA    @14,SAVTSCPQ(,@14)                               03S1080
         STCM  @14,7,PRFQCBA(RPREFIX)                           03S1080
*             PRFPRI=PRIDESTQ;      /* DEST Q PRIORITY POST          */
         MVI   PRFPRI(RPREFIX),X'E4'                            03S1081
*             IEDPF1=''B;           /* CLEAR NEG PREFIX              */
         LR    @14,RPREFIX                                      03S1082
         SL    @14,@CF00047                                     03S1082
         XC    IEDPF1(8,@14),IEDPF1(@14)                        03S1082
*             PRF1RH=SSCPRH;        /* SET RH                        */
         MVC   PRF1RH(3,@14),@CB03072                           03S1083
*             PRF1FIDI=ON;          /* FID 1 INDICATOR               */
         OI    PRF1FIDI(@14),B'10000000'                        03S1084
*             PRF1FORM=PRF1PTRI;    /* SEQ NUMBER POINTER FLAG       */
         NI    PRF1FORM(@14),B'11011111'                        03S1085
         OI    PRF1FORM(@14),B'00010000'                        03S1085
*             PRF1SEQP=ADDR(DATAPTR);/* DUMMY AREA FOR SEQ NUMBER    */
         LA    @10,DATAPTR                                      03S1086
         ST    @10,PRF1SEQP(,@14)                               03S1086
*             RZERO=ADDR(WA1WRKSP); /* WORKAREA FOR POSTWAIT         */
         LA    RZERO,WA1WRKSP                                   03S1087
*             RPARM=RPREFIX;        /* ADDR OF BUFFER                */
         LR    RPARM,RPREFIX                                    03S1088
*           END;                    /* END SNA TERM PROCESSING       */
*       CALL POSTWAIT;              /* POST BUFFER                   */
@RC01062 DS    0H                                               03S1090
@RC01043 L     @15,RESPLRVT(,RRESPL)                            03S1090
         BALR  @14,@15                                          03S1090
*     END;                                                      02S1091
*   END REQMSG;                                                 02S1092
@EL00004 DS    0H                                               02S1092
@EF00004 DS    0H                                               02S1092
@ER00004 LM    @14,@12,@SA00004                                 02S1092
         BR    @14                                              02S1092
*                                                               02S1093
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.MHPROC.DEVFLMSG: THIS SEGMENT DOES THE PROCESSING     */
*   /* NEEDED TO SEND MESSAGE IED244I, 'ERROR XXXXXXXXXX DETECTED    */
*   /* ATTEMPTING/DURING I/O TO TERMINAL TERM NAME'                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1093
*DEVFLMSG:                                                      02S1093
*   PROC;                                                       02S1093
DEVFLMSG STM   @14,@12,@SA00005                                 02S1093
*   RFY                                                         02S1094
*     RZERO UNRSTD;                                             02S1094
*   RFY                                                         02S1095
*     RPARM UNRSTD;                                             02S1095
*   RFY                                                         02S1096
*     RELMT UNRSTD;                                             02S1096
*   RFY                                                         02S1097
*     RTRM UNRSTD;                                              02S1097
*   RFY                                                         02S1098
*     OLTCBPTR UNRSTD;                                          02S1098
*   RTNT=AVTRNMPT;                  /* TNT ADDRESS                   */
         L     RTNT,AVTRNMPT(,RAVT)                             02S1099
*   ENTLEN=TNTENLEN+LENGTH(TNTTRMAD);/* LENGTH OF ENTRY              */
         SLR   @14,@14                                          02S1100
         IC    @14,TNTENLEN(,RTNT)                              02S1100
         LA    @08,3                                            02S1100
         ALR   @08,@14                                          02S1100
         STH   @08,ENTLEN                                       02S1100
*   RFY                                                         02S1101
*     REG09 RSTD;                                               02S1101
*   REG09=ERRTTCIN-1;               /* ADJUST TTCIN                  */
         LA    @07,PRFSUNIT(,RPREFIX)                           02S1102
         AH    @07,PRFSCAN(,RPREFIX)                            02S1102
         SLR   REG09,REG09                                      02S1102
         ICM   REG09,3,ERRTTCIN(@07)                            02S1102
         BCTR  REG09,0                                          02S1102
*   ENTLEN=REG09*ENTLEN;            /* DISPLACEMENT TO ENTRY         */
         LR    @01,@08                                          02S1103
         MR    @00,REG09                                        02S1103
         STH   @01,ENTLEN                                       02S1103
*   RFY                                                         02S1104
*     REG09 UNRSTD;                                             02S1104
*   PTNTENT=ADDR(TNTFIRST)+ENTLEN;  /* ADDRESS OF TNT ENTRY          */
         LA    PTNTENT,82                                       02S1105
         ALR   PTNTENT,RTNT                                     02S1105
         ALR   PTNTENT,@01                                      02S1105
*   NAM244I=''B;                    /* CLEAR TERM NAME FIELD IN PARM
*                                      LIST                          */
         XC    NAM244I(8),NAM244I                               02S1106
*   NAM244I(1:TNTENLEN)=ENTNAME(1:TNTENLEN);/* MOVE IN TERM NAME     */
         BCTR  @14,0                                            02S1107
         EX    @14,@SM03322                                     02S1107
*   CONVNUM=LENGTH(RCD244I);        /* LENGTH OF HEX DIGITS IN ERROR
*                                      RECORD                        */
         MVC   CONVNUM(2),@CH01753                              02S1108
*   CONVSRC=ADDR(ERRRCRD);          /* ERROR RECORD IN ERRORMSG ELMT */
         LA    @14,ERRRCRD(,@07)                                02S1109
         ST    @14,CONVSRC                                      02S1109
*   CONVTRG=ADDR(RCD244I);          /* ERROR RECORD IN PARM LIST     */
         LA    CONVTRG,RCD244I                                  02S1110
*   CALL HEXCONV;                   /* CONVERT HEX TO EBCDIC HEX AND
*                                      MOVE                          */
         BAL   @14,HEXCONV                                      02S1111
*   RFY                                                         02S1112
*     RPARM RSTD;                                               02S1112
*   RPARM=ADDR(IED244I);            /* POINT TO PARM LIST FOR WTO    */
         LA    RPARM,IED244I                                    02S1113
*   SVC(35);                        /* ISSUE WTO                     */
         SVC   35                                               02S1114
*   RFY                                                         02S1115
*     RZERO RSTD;                                               02S1115
*   RFY                                                         02S1116
*     RELMT RSTD;                                               02S1116
*   RFY                                                         02S1117
*     RTRM RSTD;                                                02S1117
*   RFY                                                         02S1118
*     OLTCBPTR RSTD;                                            02S1118
*   END DEVFLMSG;                                               02S1119
@EL00005 DS    0H                                               02S1119
@EF00005 DS    0H                                               02S1119
@ER00005 LM    @14,@12,@SA00005                                 02S1119
         BR    @14                                              02S1119
@PB00005 DS    0H                                               02S1119
*   END IEDQWA1                                                 01S1120
*                                                               01S1120
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (TDCTD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TLCBD   )                                       */
*/*%INCLUDE SYSLIB  (OLTCB   )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TREQD   )                                       */
*/*%INCLUDE SYSLIB  (RESPL   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TSCBD   )                                       */
*/*%INCLUDE SYSLIB  (TSNSD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTTCD   )                                       */
*/*%INCLUDE SYSLIB  (TXRTDD  )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (MHPROC  )                                       */
*/*%INCLUDE SYSUT5  (STARTMH )                                       */
*/*%INCLUDE SYSUT5  (CEINPUT )                                       */
*/*%INCLUDE SYSUT5  (XLATE   )                                       */
*/*%INCLUDE SYSUT5  (MOVEMSG )                                       */
*/*%INCLUDE SYSUT5  (HDRPASS )                                       */
*/*%INCLUDE SYSUT5  (CANCLREQ)                                       */
*/*%INCLUDE SYSUT5  (CEREPLY )                                       */
*/*%INCLUDE SYSUT5  (TESTDATA)                                       */
*/*%INCLUDE SYSUT5  (CLEANUP )                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (RTNBUF  )                                       */
*/*%INCLUDE SYSUT5  (HEXCONV )                                       */
*/*%INCLUDE SYSUT5  (REQMSG  )                                       */
*/*%INCLUDE SYSUT5  (REQMSGMV)                                       */
*/*%INCLUDE SYSUT5  (REQDEST )                                       */
*/*%INCLUDE SYSUT5  (DEVFLMSG)                                       */
*                                                               01S1120
*       ;                                                       01S1120
@DATA    DS    0H
@CH00061 DC    H'6'
@CH01479 DC    H'9'
@CH01753 DC    H'10'
@SB03308 TR    DATASTNG(0,@07),XTABLE(TABLPTR)
@SC03310 CLC   TOTCTNAM(0,OLTCBPTR),CANLDATA(@10)
@SM03322 MVC   NAM244I(0),ENTNAME(PTNTENT)
         DS    0F
@SA00001 DS    18F
@SA00002 DS    1F
@SA00005 DS    15F
@SA00004 DS    15F
         DS    0F
@CF00063 DC    F'1'
@CF00067 DC    F'2'
@CF00076 DC    F'3'
@CF00256 DC    F'4'
@CF00033 DC    F'5'
@CH00033 EQU   @CF00033+2
@CF00047 DC    F'8'
@CF03106 DC    F'11'
@CF03210 DC    F'17'
@CF03293 DC    F'25'
@CF00799 DC    F'56'
@CF03304 DC    F'-14'
@CF03300 DC    F'-13'
@CF03320 DC    F'-8'
@CF03314 DC    F'-4'
@CF03301 DC    XL4'0000FFFF'
@CF00452 DC    XL4'1E'
@CF03317 DC    BL4'00000010000000000000000000000000'
         DS    0D
DATAPTR  DS    A
BACK13   DS    A
DTCHOLT  DS    A
CONVSRC  DS    A
HEXSAV14 DS    A
LOOPCTR  DS    H
TRANSLEN DS    H
CONVNUM  DS    H
CONVIDX  DS    H
EPSSL    DC    AL2(17+2)
EPBSCL   DC    AL2(1+17+3)
NCPL     DC    AL2(17+1)
S3270L   DC    AL2(2+17)
RTNCODE  DS    FL1
@CC03076 DC    C'99999'
@CC03082 DC    C'OLT='
@CB03072 DC    X'038000'
         DS    CL3
PARMLSP  DS    CL24
WA1WRKSP DS    CL80
PATCH    DC    XL100'0'
FLAGS    DS    BL1
         ORG   FLAGS
TTYPEFLG DS    BL1
REPLYFLG EQU   FLAGS+0
CANCLFLG EQU   FLAGS+0
XLATEFLG EQU   FLAGS+0
BUFRTFLG EQU   FLAGS+0
CLNUPFLG EQU   FLAGS+0
FNDTFLG  EQU   FLAGS+0
         ORG   FLAGS+1
         DS    CL3
WAITKEY  DC    X'E0000000'
HDRBSC   DS    CL3
         ORG   HDRBSC
SOHCHAR  DC    X'01'
PERSLASH DC    CL2'%/'
         ORG   HDRBSC+3
ENDSYNC  DS    CL3
         ORG   ENDSYNC
SYCHCHAR DC    X'150337'
         ORG   ENDSYNC+3
ENDSS    DS    CL2
         ORG   ENDSS
SSCHAR   DC    X'1537'
         ORG   ENDSS+2
S3270    DS    CL2
         ORG   S3270
S3270CH  DC    X'F5C2'
         ORG   S3270+2
LOCISIZE DC    X'00FF'
INVALTIC DC    X'000002'
STXCH    DS    CL1
         ORG   STXCH
STXCHAR  DC    X'02'
         ORG   STXCH+1
CANCLMSG DC    CL7'CANCEL/'
NLCHAR   DS    CL1
         ORG   NLCHAR
NEWLINE  DC    X'15'
         ORG   NLCHAR+1
HIMASK   DC    X'000F'
ERRCODE  DC    X'0420'
IED149I  DS    CL25
         ORG   IED149I
LEN149I  DC    AL2(21)
MCS149I  DC    X'8000'
MSG149I  DC    CL17'IED149I TOTE BUSY'
RTE149I  DC    X'0200'
DSC149I  DC    X'0040'
         ORG   IED149I+25
         DS    CL3
IED244I  DS    CL75
         ORG   IED244I
LEN244I  DC    AL2(71)
MCS244I  DC    X'8000'
MSG244I  DS    CL67
         ORG   MSG244I
@NM00302 DC    CL14'IED244I ERROR '
RCD244I  DS    CL10
@NM00303 DC    CL21' OCCURRED DURING I/O '
@NM00304 DC    CL14'WITH TERMINAL '
NAM244I  DS    CL8
         ORG   IED244I+71
RTE244I  DC    X'0200'
DSC244I  DC    X'0040'
         ORG   IED244I+75
HEXTCHAR DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
IEDQWA1  CSECT
LOWTOUP  DS    0H
         DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
IEDQWA1  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @03
CTNAMLEN EQU   @03
CONVTRG  EQU   @10
CTSRTADR EQU   @10
TABLPTR  EQU   @10
PTNTENT  EQU   @03
MSGPTR   EQU   @03
LCBXPTR  EQU   @05
OLTCBPTR EQU   @09
RAVT     EQU   @04
RDCT     EQU   @09
RPREFIX  EQU   @06
RRESPL   EQU   @11
RTNT     EQU   @15
RTRM     EQU   @08
RZERO    EQU   @00
REG01    EQU   @01
RPARM    EQU   @01
RELMT    EQU   @02
REG03    EQU   @03
REG05    EQU   @05
REG09    EQU   @09
REG10    EQU   @10
RSAVE    EQU   @13
RRET     EQU   @14
REG15    EQU   @15
RBRNCH   EQU   @15
RMSGLEN  EQU   @15
REG00    EQU   @00
REG02    EQU   @02
REG04    EQU   @04
REG06    EQU   @06
REG07    EQU   @07
REG08    EQU   @08
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTCSTCS EQU   IEDQAVTD+328
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTMVBFR EQU   IEDQAVTD+444
AVTOSECB EQU   IEDQAVTD+492
AVTECB1  EQU   AVTOSECB
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTMSGS  EQU   IEDQAVTD+729
AVTINOUT EQU   IEDQAVTD+766
AVTBFRFG EQU   IEDQAVTD+784
AVTBFRTB EQU   IEDQAVTD+792
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTOLTCH EQU   AVTOLTQB+1
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTTSON  EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTDDFT  EQU   IEDQAVTD+1064
AVTBIT4  EQU   IEDQAVTD+1136
@NM00086 EQU   IEDQAVTD+1232
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSCPQ EQU   IEDNSVTD+108
SAVTTCPU EQU   IEDNSVTD+238
SAVTSCPT EQU   SAVTTCPU
SAVTNAX  EQU   IEDNSVTD+248
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IHADCB   EQU   0
DCBPTR   EQU   0
IHADCS16 EQU   0
DCBMHA   EQU   IHADCS16
DCBBUFOU EQU   DCBMHA
DCBBUFIN EQU   DCBBUFOU
DCBPCI   EQU   IHADCS16+5
DCBDSORG EQU   IHADCS16+6
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
IHADCS17 EQU   0
DCBCLPS  EQU   IHADCS17
DCBIOBAD EQU   IHADCS17+8
IHADCS18 EQU   0
DCBTRANA EQU   IHADCS18
DCBTRANS EQU   DCBTRANA+1
IHADCS19 EQU   0
DCBLCBAD EQU   IHADCS19
DCBCPRI  EQU   DCBLCBAD
DCBEXLST EQU   IHADCS19+4
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS43 EQU   0
DCBSCTAB EQU   IHADCS43
IHADCS2A EQU   0
DCBRESER EQU   IHADCS2A
DCBINVLI EQU   IHADCS2A+4
DCBINVCI EQU   DCBINVLI
IEDDCT   EQU   0
DCTBYTE1 EQU   IEDDCT+1
DCT3270  EQU   DCTBYTE1
DCTBYTE2 EQU   IEDDCT+2
DCTBYTE3 EQU   IEDDCT+3
DCTNOIDL EQU   DCTBYTE3
DCTBYTE4 EQU   IEDDCT+4
DCTBYTE5 EQU   IEDDCT+5
DCTL3270 EQU   DCTBYTE5
IEDQLCB  EQU   0
LCBRCB   EQU   IEDQLCB
LCBQCBA  EQU   LCBRCB+1
LCBPRI   EQU   LCBRCB+4
LCBLINK  EQU   LCBRCB+5
LCBRSKEY EQU   IEDQLCB+8
LCBTSOB  EQU   IEDQLCB+19
LCBCHAIN EQU   IEDQLCB+20
LCBSCRNN EQU   LCBCHAIN
LCBTETEN EQU   LCBCHAIN
LCBINSRC EQU   IEDQLCB+21
LCBLKMDE EQU   LCBINSRC+2
LCBNTXT  EQU   IEDQLCB+24
LCBSTAT4 EQU   LCBNTXT
LCBPHASE EQU   LCBSTAT4
LCBSCBDA EQU   IEDQLCB+25
LCBMHA   EQU   IEDQLCB+29
LCBFLAG1 EQU   IEDQLCB+32
LCBIOBSN EQU   IEDQLCB+33
LCBSNS   EQU   LCBIOBSN+1
LCBSENS0 EQU   LCBSNS
LCBLOSDT EQU   LCBSENS0
LCBTMOUT EQU   LCBSENS0
LCBFLAG3 EQU   LCBIOBSN+7
LCBCSW   EQU   LCBIOBSN+8
LCBCSWST EQU   LCBCSW+3
LCBCSWUS EQU   LCBCSWST
LCBCSWCS EQU   LCBCSWST+1
LCBSIOCC EQU   LCBIOBSN+15
LCBDCBPT EQU   IEDQLCB+52
LCBRCQCB EQU   IEDQLCB+56
LCBRESTR EQU   LCBRCQCB
LCBTHSQ  EQU   IEDQLCB+60
LCBINCAM EQU   LCBTHSQ
LCBERRCT EQU   IEDQLCB+62
LCBLSPCI EQU   IEDQLCB+65
LCBRCBFR EQU   LCBLSPCI
LCBSTATE EQU   IEDQLCB+70
LCBSTAT1 EQU   LCBSTATE
LCBSTAT2 EQU   LCBSTATE+1
LCBBEOTN EQU   LCBSTAT2
LCBNEGRP EQU   LCBSTAT2
LCBSYNC  EQU   LCBSTAT2
LCBDIAL  EQU   LCBSTAT2
LCBTSTSW EQU   IEDQLCB+72
LCBERB   EQU   IEDQLCB+76
LCBERBST EQU   IEDQLCB+84
LCBDLNKN EQU   LCBERBST
LCBERBCT EQU   IEDQLCB+88
LCBRBCT2 EQU   LCBERBCT+1
LCBMSGFM EQU   IEDQLCB+92
LCBOLT   EQU   LCBMSGFM
LCBSCBA  EQU   IEDQLCB+93
LCBOBRCH EQU   IEDQLCB+96
LCBINVPT EQU   LCBOBRCH+1
LCBBFRW  EQU   LCBINVPT
LCBTPCD  EQU   IEDQLCB+100
LCBSTAT5 EQU   LCBTPCD
LCBSTAT6 EQU   LCBTPCD+4
LCBRSPSV EQU   LCBTPCD+8
LCBSAVSN EQU   IEDQLCB+112
LCBERCCW EQU   IEDQLCB+120
LCBCPA   EQU   IEDQLCB+144
LCBCCW5  EQU   LCBCPA+32
LCBATTEL EQU   LCBCCW5
LCBQEBPL EQU   LCBATTEL
IEDQLPTR EQU   0
IEDQLCBX EQU   0
LCBXCON  EQU   IEDQLCBX
LCBXFLAG EQU   LCBXCON
LCBXDCT  EQU   LCBXCON+1
LCBXRADR EQU   LCBXCON+4
TOTOLTCB EQU   0
TOTOBPTR EQU   TOTOLTCB
TOTELKEY EQU   TOTOBPTR
TOTELLNK EQU   TOTOBPTR+5
$SCTTBLE EQU   TOTOLTCB+8
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$TOTFLG1 EQU   $SCTTBLE+38
TOTSAVE5 EQU   TOTOLTCB+416
TOTSRENT EQU   TOTOLTCB+584
TOTSROFF EQU   TOTSRENT
TOTCTENT EQU   TOTOLTCB+592
TOTCTOFF EQU   TOTCTENT+2
TOTCROFF EQU   TOTCTENT+4
TOTCTFLG EQU   TOTCTENT+22
TOTCTNAM EQU   TOTCTENT+31
TOTCTDFL EQU   TOTOLTCB+632
TOTCUTST EQU   TOTOLTCB+636
TOTCUFLG EQU   TOTCUTST
TOTPLIST EQU   TOTOLTCB+672
TOTOECBA EQU   TOTPLIST+12
TOTOFLG  EQU   TOTOECBA
TOTOPCLN EQU   TOTOLTCB+736
TOTAPENT EQU   TOTOLTCB+744
TOTAPOFF EQU   TOTAPENT+2
TOTAROFF EQU   TOTAPENT+4
TOTAPFLG EQU   TOTAPENT+22
TOTAPDFL EQU   TOTOLTCB+775
TOTOLTMQ EQU   TOTOLTCB+808
TOTOTECB EQU   TOTOLTCB+812
TOTTCBAD EQU   TOTOLTCB+820
TOTCMPCD EQU   TOTOLTCB+824
TOTOLTPL EQU   TOTOLTCB+828
TOTWTORP EQU   TOTOLTCB+840
TOTWTOPL EQU   TOTOLTCB+848
TOTOLTID EQU   TOTOLTCB+1016
TOTPLNKQ EQU   TOTOLTCB+1020
TOTFLG01 EQU   TOTOLTCB+1192
TOTCONFG EQU   TOTFLG01
TOTCLNST EQU   TOTFLG01
TOTCLNED EQU   TOTFLG01
TOTFLG02 EQU   TOTOLTCB+1193
TOTFLG03 EQU   TOTOLTCB+1194
TOTREPEX EQU   TOTFLG03
TOTFLG04 EQU   TOTOLTCB+1195
TOTFLG05 EQU   TOTOLTCB+1196
TOTFLG06 EQU   TOTOLTCB+1197
TOTWACAN EQU   TOTFLG06
TOTCANCL EQU   TOTFLG06
TOTOTACT EQU   TOTFLG06
TOTFLG07 EQU   TOTOLTCB+1198
TOTFLG08 EQU   TOTOLTCB+1199
TOTFLG09 EQU   TOTOLTCB+1200
TOTFLG10 EQU   TOTOLTCB+1201
TOTOLTED EQU   TOTFLG10
TOTPRECB EQU   TOTOLTCB+1324
TOTPRIBK EQU   TOTPRECB
TOTPRENT EQU   TOTOLTCB+1328
TOTPCOFF EQU   TOTPRENT+2
TOTPROFF EQU   TOTPRENT+4
TOTPRFLG EQU   TOTPRENT+22
TOTPRBUF EQU   TOTPRENT+32
TOTPRSN  EQU   TOTOLTCB+1372
TOTPRSEQ EQU   TOTPRSN+2
TOTPRDCB EQU   TOTOLTCB+1424
TOTSCECB EQU   TOTOLTCB+1496
TOTSCENT EQU   TOTOLTCB+1500
TOTNCOFF EQU   TOTSCENT+2
TOTSCOFF EQU   TOTSCENT+4
TOTSCFLG EQU   TOTSCENT+22
TOTSCBUF EQU   TOTSCENT+32
TOTSCSN  EQU   TOTOLTCB+1544
TOTSCSEQ EQU   TOTSCSN+2
TOTSCDCB EQU   TOTOLTCB+1596
TOTCROLT EQU   TOTOLTCB+1668
TOTTDTBL EQU   TOTOLTCB+1756
@NM00218 EQU   TOTTDTBL
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLG1 EQU   IEDPLMV+18
PLMVSCTG EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
IEDPLMVP EQU   0
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFLCB   EQU   IEDQPRF+13
@NM00229 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00229
PRFSRCE  EQU   PRFSVFFO
PRFSIZE  EQU   PRFSVFFO+2
PRFSTAT1 EQU   IEDQPRF+20
PRFERMGN EQU   PRFSTAT1
PRFEOFN  EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFNHDRN EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
PRFDEST  EQU   IEDQPRF+40
IEDQPPTR EQU   0
IEDPF1   EQU   0
PRF1RH   EQU   IEDPF1
PRF1FLG1 EQU   IEDPF1+3
PRF1FIDI EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBCORE  EQU   QCBDSFLG
QCBDISK  EQU   QCBDSFLG
QCBNREUS EQU   QCBDISK
QCBREUS  EQU   QCBDISK
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
@NM00263 EQU   QCBINSRC
QCBTSOF2 EQU   @NM00263+1
QCBTSOF1 EQU   @NM00263+2
QCBINTVL EQU   IEDQQCB+24
QCBPREN  EQU   IEDQQCB+28
QCBLKRRN EQU   QCBPREN+1
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
QCBTSSES EQU   QCBFLAG
IEDQQPTR EQU   0
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBPFEFO EQU   QCBFHDLZ+1
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
IEDREQD  EQU   0
REQQCBA  EQU   IEDREQD+1
REQPRI   EQU   IEDREQD+4
REQLINK  EQU   IEDREQD+5
REQRPRI  EQU   IEDREQD+8
REQRQCBA EQU   IEDREQD+9
REQROUTE EQU   IEDREQD+12
REQRCDS  EQU   IEDREQD+14
REQDATA  EQU   IEDREQD+16
IEDRESPL EQU   0
RESOBQCB EQU   IEDRESPL+12
RESOBFWD EQU   RESOBQCB
RESBKTOT EQU   IEDRESPL+24
RESFLAGS EQU   IEDRESPL+49
RESTRMQ  EQU   IEDRESPL+52
RESQHBL  EQU   IEDRESPL+60
RESREMFR EQU   RESQHBL
RESREMEL EQU   RESQHBL+4
RESADDND EQU   RESQHBL+8
RESADDAF EQU   RESQHBL+12
RESPLRVT EQU   IEDRESPL+76
RESABUF  EQU   IEDRESPL+80
RESFBUF  EQU   IEDRESPL+84
RESPLADR EQU   IEDRESPL+96
RESPLAC  EQU   RESPLADR+44
RESPL42  EQU   RESPLADR+56
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDQSCB  EQU   0
SCBSTATE EQU   IEDQSCB
SCBSEQIN EQU   SCBSTATE
SCBDESTQ EQU   IEDQSCB+1
SCBRCVCT EQU   IEDQSCB+4
SCBMBHEN EQU   IEDQSCB+5
SCBMACR  EQU   SCBMBHEN
SCBBKFCT EQU   IEDQSCB+9
SCBEOBSZ EQU   SCBBKFCT+1
SCBSALEV EQU   IEDQSCB+12
SCBQTYPE EQU   SCBSALEV
SCBERRST EQU   IEDQSCB+16
SCBERR1  EQU   SCBERRST
SCBHDRRN EQU   SCBERR1
SCBORIGN EQU   SCBERR1
SCBNOTRM EQU   SCBERR1
SCBSEQHN EQU   SCBERR1
SCBSEQLN EQU   SCBERR1
SCBCUTFN EQU   SCBERR1
SCBERR2  EQU   SCBERRST+1
SCBABRTN EQU   SCBERR2
SCBERR3  EQU   SCBERRST+2
SCBLOSTN EQU   SCBERR3
SCBTMIDN EQU   SCBERR3
SCBFORMN EQU   SCBERR3
SCBATTN  EQU   SCBERR3
SCBXCEPN EQU   SCBERR3
SCBERR4  EQU   SCBERRST+3
SCBTXTTN EQU   SCBERR4
SCBCTLUN EQU   SCBERR4
SCBCHANN EQU   SCBERR4
SCBDLPTR EQU   IEDQSCB+22
SCBEOBAC EQU   SCBDLPTR
SCBCTBAC EQU   SCBEOBAC
SCBBSCFM EQU   IEDQSCB+24
SCBDATEN EQU   SCBBSCFM
SCBITBSZ EQU   IEDQSCB+40
SCBCTBSV EQU   SCBITBSZ
SCBDNSEG EQU   IEDQSCB+41
SCBCLSEG EQU   IEDQSCB+45
SCBITBAC EQU   IEDQSCB+48
SCBCTBFL EQU   SCBITBAC
SCBBLKCT EQU   SCBCTBFL
SCBDCSEG EQU   IEDQSCB+49
SCBSTAT1 EQU   IEDQSCB+60
SCBCORE  EQU   IEDQSCB+61
SCBSCAN  EQU   IEDQSCB+64
SCBNTXT  EQU   IEDQSCB+66
SCBCHDR  EQU   IEDQSCB+72
SCBCCSEG EQU   IEDQSCB+75
SCBEND   EQU   IEDQSCB+84
IEDQSPTR EQU   0
IEDSNSD  EQU   0
SNSSYSTM EQU   IEDSNSD
SNSUSER  EQU   IEDSNSD+2
SNSPTR   EQU   0
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
TNTENLEN EQU   IEDQTNTD+40
IEDQTDCE EQU   IEDQTNTD+46
IEDQNPTR EQU   0
TNTFIRST EQU   0
IEDTNTA  EQU   0
TNTTRMAD EQU   IEDTNTA
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMCONC  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMCHCIN EQU   IEDQTRM+16
IEDQTPTR EQU   0
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSNA   EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+7
IEDTTCD  EQU   0
IEDTTCP  EQU   0
IEDTTCPL EQU   0
TTCSVCPL EQU   IEDTTCPL
TTCSVCW1 EQU   TTCSVCPL
TTCSVCW2 EQU   TTCSVCPL+4
IEDTTCFD EQU   0
IEDTTCQB EQU   0
TTCQCB   EQU   IEDTTCQB
TTCSCB   EQU   IEDTTCQB+12
IEDXRTDD EQU   0
XRTDCODE EQU   IEDXRTDD
XRTDADDR EQU   IEDXRTDD+3
XRTDPBDU EQU   IEDXRTDD+5
XRTDEND  EQU   IEDXRTDD+9
IEDXRTDP EQU   0
FREEBUF  EQU   0
IEDIAP03 EQU   0
IEDQTNT  EQU   0
IEDMVBFR EQU   0
POSTWAIT EQU   0
XLATE    EQU   0
XLATEWD1 EQU   XLATE
XLATETYP EQU   XLATEWD1
XLATECT  EQU   XLATEWD1+1
XTABPT   EQU   XLATE+4
XTABLE   EQU   0
DATABYTE EQU   0
DATASTNG EQU   0
REGSAVE  EQU   0
BACKSAVE EQU   REGSAVE+4
BDADDR   EQU   0
ERRELMT  EQU   0
ERRTYPE  EQU   ERRELMT
ERRTTCIN EQU   ERRELMT+1
ERRFLAGS EQU   ERRELMT+3
ERRSNA   EQU   ERRFLAGS
ERRTEST  EQU   ERRFLAGS
ERRDATA  EQU   ERRELMT+4
RUBYTE1  EQU   0
ENTNAME  EQU   0
MSGAREA  EQU   0
BYTENUM  EQU   0
ALLOCBUF EQU   0
IEDQTL   EQU   0
QADDAFX  EQU   0
QADDNDX  EQU   0
QCBLDCB  EQU   0
QREMELX  EQU   0
QREMFRX  EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   0
LCBRSPIN EQU   LCBIOBSN
LCBLUSNS EQU   LCBRSPIN+5
LCBSCPRS EQU   LCBRSPIN+9
LCBCSWU1 EQU   LCBSCPRS+2
LCBRSPFG EQU   LCBRSPIN+15
LCBCOREQ EQU   LCBTPCD
@NM00152 EQU   LCBCPA+40
LCBQNX   EQU   LCBERCCW
LCBQNXMN EQU   LCBQNX
LCBCANCL EQU   LCBSAVSN
LCBCANFG EQU   LCBCANCL
PRFSHDR  EQU   IEDQPRF+42
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
REQLDATA EQU   REQDATA
REQSDATA EQU   REQDATA
TRMPRE1  EQU   TRMBYTE4
TRMERLCK EQU   TRMPRE1
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMTDIFF EQU   TRMLU
TRMLINK  EQU   TRMBYTE3
WORKAREA EQU   WA1WRKSP
ENTLEN   EQU   CONVIDX
TESTCOMP EQU   TRANSLEN
WRKAREA1 EQU   WA1WRKSP+43
CANLDATA EQU   DATASTNG+7
CANLNAM  EQU   CANLDATA
CANLLAST EQU   CANLNAM+7
WRKOLTID EQU   DATASTNG
SYNCELMT EQU   PARMLSP
SYNCQCB  EQU   SYNCELMT
SYNCPRI  EQU   SYNCELMT+4
SYNCLINK EQU   SYNCELMT+5
ERRRCRD  EQU   ERRDATA
ERRBYTES EQU   ERRRCRD
ERRBYTE2 EQU   ERRBYTES+1
ERRRQREJ EQU   ERRBYTE2
ERRSNS   EQU   ERRRCRD+4
ERRSNAT  EQU   ERRDATA
ERRSENSE EQU   ERRSNAT+3
OPCLNDAT EQU   REQDATA
OPTTCIN  EQU   OPCLNDAT
TESTCTR  EQU   OPCLNDAT+8
HDRLEN   EQU   TRANSLEN
HLDTOTPT EQU   TABLPTR
SCBRGSAV EQU   SCBEND
TRMOPT   EQU   IEDQTRM+20
XRTDTEXT EQU   XRTDEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00301 EQU   OPCLNDAT+2
ERRUSER  EQU   ERRSENSE+2
ERRMIN   EQU   ERRSENSE+1
ERRMAJ   EQU   ERRSENSE
ERRRH    EQU   ERRSNAT
ERRBYTE4 EQU   ERRBYTES+3
ERRBYTE3 EQU   ERRBYTES+2
@NM00300 EQU   ERRBYTE2
@NM00299 EQU   ERRBYTE2
ERRBYTE1 EQU   ERRBYTES
CANLEND  EQU   CANLDATA+8
CANLFST7 EQU   CANLNAM
@NM00293 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00292 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00291 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
REQSTNT  EQU   REQSDATA+4
REQSTTE  EQU   REQSDATA
REQLTNT  EQU   REQLDATA
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
@NM00160 EQU   LCBCANCL+3
LCBCANTH EQU   LCBCANCL+1
@NM00159 EQU   LCBCANFG
LCBCANCD EQU   LCBCANFG
@NM00158 EQU   LCBCANFG
LCBCANEB EQU   LCBCANFG
LCBCANXT EQU   LCBCANFG
LCBUNADD EQU   LCBQNX+21
LCBUASZE EQU   LCBQNX+20
LCBDSTEA EQU   LCBQNX+16
@NM00157 EQU   LCBQNX+8
LCBIOSBS EQU   LCBQNX+5
@NM00156 EQU   LCBQNX+4
LCBSTSAV EQU   LCBQNX+1
@NM00155 EQU   LCBQNXMN
LCBNX509 EQU   LCBQNXMN
LCBNX162 EQU   LCBQNXMN
LCBNX142 EQU   LCBQNXMN
LCBNX064 EQU   LCBQNXMN
@NM00154 EQU   @NM00152+4
LCBNCPPT EQU   @NM00152+1
@NM00153 EQU   @NM00152
LCBWRSCH EQU   LCBCOREQ+8
LCBCQLNK EQU   LCBCOREQ+4
LCBCQELE EQU   LCBCOREQ
LCBPAKCH EQU   LCBRSPIN+16
@NM00151 EQU   LCBRSPFG
LCBRSRH  EQU   LCBRSPFG
LCBEXPI  EQU   LCBRSPFG
@NM00150 EQU   LCBRSPIN+12
LCBUSUE1 EQU   LCBCSWU1
@NM00149 EQU   LCBCSWU1
@NM00148 EQU   LCBSCPRS+1
LCBDFCMD EQU   LCBSCPRS
LCBUSER  EQU   LCBLUSNS+2
LCBSMIN  EQU   LCBLUSNS+1
LCBSMAJ  EQU   LCBLUSNS
LCBRHSV  EQU   LCBRSPIN+2
LCBSNS0  EQU   LCBRSPIN+1
@NM00147 EQU   LCBRSPIN
@NM00298 EQU   REGSAVE+8
@NM00297 EQU   REGSAVE
XRTDEXTR EQU   XRTDPBDU+3
XRTDSYSR EQU   XRTDPBDU+2
XRTDMODF EQU   XRTDPBDU+1
XRTDCMD0 EQU   XRTDPBDU
XRTDREQ  EQU   XRTDCODE+2
XRTDMAIN EQU   XRTDCODE+1
XRTDNETS EQU   XRTDCODE
TTCQSTCB EQU   TTCQCB+8
TTCQBECB EQU   TTCQCB+4
TTCQBELC EQU   TTCQCB+1
TTCQBFLG EQU   TTCQCB
@NM00296 EQU   IEDTTCFD
@NM00295 EQU   IEDTTCPL+8
TTCLAST  EQU   TTCSVCW2
TTCFIRST EQU   TTCSVCW1+1
TTCPCODE EQU   TTCSVCW1
@NM00294 EQU   IEDTTCD
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00290 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00289 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00288 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTSRCHX EQU   IEDQTNTD+38
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00287 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   IEDTH+4
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00286 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
SNSUSR2  EQU   SNSUSER+1
SNSUSR1  EQU   SNSUSER
SNSMIN   EQU   SNSSYSTM+1
SNSMAJ   EQU   SNSSYSTM
SCBTRANS EQU   IEDQSCB+81
SCBUNTCT EQU   IEDQSCB+80
SCBEOB   EQU   IEDQSCB+78
SCBNXCPB EQU   SCBCCSEG
SCBNHDR  EQU   SCBCHDR
SCBCRCD  EQU   IEDQSCB+69
SCBTQBCK EQU   SCBNTXT
SCBOSEQ  EQU   SCBSCAN
SCBXTRA  EQU   SCBCORE
SCBNOPST EQU   SCBSTAT1
SCBNIDLE EQU   SCBSTAT1
SCBCEND  EQU   SCBSTAT1
SCBCBGN  EQU   SCBSTAT1
SCBSIZE  EQU   IEDQSCB+58
SCBSRCE  EQU   IEDQSCB+56
SCBDEOB  EQU   IEDQSCB+52
SCBFEFO  EQU   SCBDCSEG
SCBCTBND EQU   SCBBLKCT
SCBSCHDR EQU   SCBCLSEG
SCBHBFNO EQU   IEDQSCB+44
SCBSCSEG EQU   SCBDNSEG
SCBBCTR  EQU   SCBCTBSV
SCBCCHDR EQU   IEDQSCB+37
SCBDESTL EQU   IEDQSCB+36
SCBDCHDR EQU   IEDQSCB+33
SCBCPBNO EQU   IEDQSCB+32
SCBMBSSA EQU   IEDQSCB+25
SCBMLMTN EQU   SCBBSCFM
SCBNOEOT EQU   SCBBSCFM
@NM00285 EQU   SCBBSCFM
SCBNPDTR EQU   SCBDATEN
SCBCNTEN EQU   SCBBSCFM
SCBRCVTX EQU   SCBBSCFM
SCBNONTR EQU   SCBBSCFM
SCBTRNSP EQU   SCBBSCFM
SCBENDCR EQU   SCBCTBAC+1
SCBCRLEN EQU   SCBCTBAC
SCBMRFSD EQU   IEDQSCB+20
SCBUNDFN EQU   SCBERR4
SCBSTERN EQU   SCBCHANN
SCBCPMEN EQU   SCBCTLUN
@NM00284 EQU   SCBERR4
SCBTRMLN EQU   SCBERR4
SCBCONNN EQU   SCBERR4
SCBAPERR EQU   SCBTXTTN
SCBSLCTN EQU   SCBERR4
SCBPERRN EQU   SCBXCEPN
SCBTHRSN EQU   SCBATTN
SCBFIERN EQU   SCBFORMN
SCBUSERN EQU   SCBERR3
SCBSATTN EQU   SCBERR3
SCBTMINN EQU   SCBERR3
SCBXPD   EQU   SCBTMIDN
SCBXPI   EQU   SCBLOSTN
SCBSOHE  EQU   SCBERR2
SCBFRWDN EQU   SCBERR2
SCBRRJN  EQU   SCBABRTN
SCBOLTR  EQU   SCBERR2
SCBALN   EQU   SCBERR2
SCBCODER EQU   SCBERR2
SCBCRMAX EQU   SCBERR2
SCBCRMIN EQU   SCBERR2
SCBRVISL EQU   SCBCUTFN
SCBNOBFN EQU   SCBERR1
@NM00283 EQU   SCBERR1
SCBNOVAC EQU   SCBSEQLN
SCBNOTSO EQU   SCBSEQHN
SCBRVITX EQU   SCBNOTRM
SCBHANG  EQU   SCBORIGN
SCBNOLOG EQU   SCBHDRRN
SCBMRFPL EQU   IEDQSCB+13
SCBBFMM  EQU   SCBQTYPE
SCBBBFTM EQU   SCBQTYPE
SCBNOFF  EQU   SCBQTYPE
SCBCONC  EQU   SCBQTYPE
SCBNREUS EQU   SCBQTYPE
SCBREUS  EQU   SCBQTYPE
SCBCOREQ EQU   SCBQTYPE
SCBNORCL EQU   SCBQTYPE
SCBCTBSZ EQU   SCBEOBSZ
@NM00282 EQU   SCBBKFCT
SCBPRI   EQU   IEDQSCB+8
SCBSNDCT EQU   SCBRCVCT
SCBCODE  EQU   SCBSTATE
SCBPRER  EQU   SCBSTATE
SCBCKPT  EQU   SCBSTATE
SCBMSGLN EQU   SCBSTATE
SCBERSDS EQU   SCBSTATE
SCBLCK1N EQU   SCBSTATE
SCBMGFMN EQU   SCBSEQIN
SCBTRANP EQU   SCBSTATE
@NM00281 EQU   TRHBYTE2
@NM00280 EQU   TRHBYTE2
@NM00279 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00278 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00277 EQU   TRHBYTE1
@NM00276 EQU   TRHBYTE1
@NM00275 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00274 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00273 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
RESAPDCB EQU   IEDRESPL+180
RESTLIB  EQU   IEDRESPL+176
RESPL33  EQU   RESPLADR+76
RESPL25  EQU   RESPLADR+72
RESPLM2  EQU   RESPLADR+68
RESPL47  EQU   RESPLADR+64
RESPL44  EQU   RESPLADR+60
RESPL43  EQU   RESPL42
RESPL16  EQU   RESPLADR+52
RESPL41  EQU   RESPLADR+48
RESPL21  EQU   RESPLAC
RESPL36  EQU   RESPLADR+40
RESPL28  EQU   RESPLADR+36
RESPL37  EQU   RESPLADR+32
RESPLP2  EQU   RESPLADR+28
RESPLP1  EQU   RESPLADR+24
RESPL39  EQU   RESPLADR+20
RESPLAA  EQU   RESPLADR+16
RESPL35  EQU   RESPLADR+12
RESPLAJ  EQU   RESPLADR+8
RESPLAB  EQU   RESPLADR+4
RESPLWO  EQU   RESPLADR
RESTOTMH EQU   IEDRESPL+92
RESMHNAT EQU   IEDRESPL+90
RESMHSRC EQU   IEDRESPL+88
RESTNTPT EQU   IEDRESPL+57
@NM00272 EQU   IEDRESPL+56
@NM00271 EQU   IEDRESPL+50
@NM00270 EQU   RESFLAGS
RESFIRST EQU   RESFLAGS
RESINIT  EQU   RESFLAGS
RESWBFNC EQU   IEDRESPL+48
RESSMGRA EQU   IEDRESPL+44
RESSTAEA EQU   IEDRESPL+40
RESETXRA EQU   IEDRESPL+36
RESDMTTE EQU   IEDRESPL+33
RESTNTCT EQU   IEDRESPL+32
RESEFQCB EQU   IEDRESPL+28
RESBKAVL EQU   IEDRESPL+26
RESTTLST EQU   IEDRESPL+20
RESOBBKW EQU   RESOBQCB+4
RESTECB1 EQU   IEDRESPL+8
@NM00269 EQU   IEDRESPL+5
@NM00268 EQU   IEDRESPL+4
RESTECBS EQU   IEDRESPL
REQRCD2  EQU   REQRCDS+1
REQRCD1  EQU   REQRCDS
REQSWTCH EQU   REQROUTE+1
REQFLAG  EQU   REQROUTE
REQTYPE  EQU   IEDREQD
QCBTTCIN EQU   QCBPLCBA+1
@NM00267 EQU   QCBPLCBA
@NM00266 EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00265 EQU   QCBFHDTZ
@NM00264 EQU   QCBPFEFO
QCBDATFL EQU   QCBFHDLZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBRELLN EQU   IEDQQCB+32
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBPREN
QCBMSGCT EQU   IEDQQCB+26
QCBEXTO  EQU   QCBINTVL
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBINHBN EQU   QCBTSOF2
QCBSATCT EQU   @NM00263
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00262 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00261 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00260 EQU   QCBELCHN+2
@NM00259 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
PRF2SEQP EQU   PRF2WD2
@NM00234 EQU   IEDPF2+1
@NM00233 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00232 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00231 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00230 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00229+3
PRFPIUO  EQU   PRFPLQCB
PRFTI0   EQU   PRFTIC+1
@NM00228 EQU   PRFTICC
@NM00227 EQU   PRFTICC
@NM00226 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00225 EQU   PRFTICC
@NM00224 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00223 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
PLMVUNCA EQU   IEDPLMV+20
PLMVFLG2 EQU   IEDPLMV+19
@NM00222 EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
TOTOBEND EQU   TOTOLTCB+2108
TOTSERV  EQU   TOTOLTCB+2104
@NM00221 EQU   TOTOLTCB+2052
TOTWOWRK EQU   TOTOLTCB+1912
TOTWAWRK EQU   TOTOLTCB+1832
TOTOLTEN EQU   TOTOLTCB+1828
TOTAPNAM EQU   TOTOLTCB+1820
TOTGRABP EQU   TOTOLTCB+1816
TOTWAITI EQU   TOTOLTCB+1808
@NM00220 EQU   TOTOLTCB+1806
TOTTLCNT EQU   TOTOLTCB+1804
TOTECBPT EQU   TOTOLTCB+1800
TOTWECBA EQU   TOTOLTCB+1796
TOTTDEND EQU   TOTOLTCB+1796
@NM00219 EQU   TOTTDTBL+1
TOTTSWPM EQU   @NM00218
TOTTDIAC EQU   @NM00218
TOTTDTHD EQU   @NM00218
TOTTDLST EQU   @NM00218
TOTTDORN EQU   @NM00218
TOTTDGRB EQU   @NM00218
TOTTDLIN EQU   @NM00218
TOTTDTRM EQU   @NM00218
@NM00217 EQU   TOTOLTCB+1718
TOTCONND EQU   TOTOLTCB+1718
TOTCONAP EQU   TOTOLTCB+1717
TOTCONCT EQU   TOTOLTCB+1716
TOTCONTB EQU   TOTOLTCB+1706
TOTOLTTE EQU   TOTOLTCB+1706
TOTOLTTB EQU   TOTOLTCB+1676
TOTTRMND EQU   TOTCROLT
TOTSCDEB EQU   TOTSCDCB+44
@NM00216 EQU   TOTSCDCB
TOTSCIOB EQU   TOTOLTCB+1552
TOTSTECB EQU   TOTOLTCB+1548
@NM00215 EQU   TOTSCSN
@NM00214 EQU   TOTOLTCB+1543
TOTSFLGS EQU   TOTOLTCB+1542
TOTSDTCT EQU   TOTOLTCB+1540
TOTSDTBF EQU   TOTOLTCB+1536
TOTSCCCW EQU   TOTSCENT+28
TOTSCQCB EQU   TOTSCENT+24
@NM00213 EQU   TOTSCENT+23
@NM00212 EQU   TOTSCFLG
TOTSEXNM EQU   TOTSCFLG
TOTSCFME EQU   TOTSCFLG
TOTSCEX  EQU   TOTSCFLG
TOTSUNRD EQU   TOTSCFLG
TOTSPRSC EQU   TOTSCFLG
TOTSCLU  EQU   TOTSCFLG
TOTSCTAS EQU   TOTSCFLG
TOTSCLEN EQU   TOTSCENT+20
TOTSRTNT EQU   TOTSCENT+16
TOTSDTNT EQU   TOTSCENT+12
TOTSCLCB EQU   TOTSCENT+9
TOTSCRLN EQU   TOTSCENT+8
TOTSRSID EQU   TOTSCENT+6
TOTSCUCB EQU   TOTSCENT
TOTSCIBK EQU   TOTSCECB
TOTPRDEB EQU   TOTPRDCB+44
@NM00211 EQU   TOTPRDCB
TOTPRIOB EQU   TOTOLTCB+1380
TOTPTECB EQU   TOTOLTCB+1376
@NM00210 EQU   TOTPRSN
@NM00209 EQU   TOTOLTCB+1371
TOTPFLGS EQU   TOTOLTCB+1370
TOTPDTCT EQU   TOTOLTCB+1368
TOTPDTBF EQU   TOTOLTCB+1364
TOTPRCCW EQU   TOTPRENT+28
TOTPRQCB EQU   TOTPRENT+24
@NM00208 EQU   TOTPRENT+23
@NM00207 EQU   TOTPRFLG
TOTPEXNM EQU   TOTPRFLG
TOTPRFME EQU   TOTPRFLG
TOTPREX  EQU   TOTPRFLG
TOTPUNRD EQU   TOTPRFLG
TOTPPRSC EQU   TOTPRFLG
TOTPRLU  EQU   TOTPRFLG
TOTPRTAS EQU   TOTPRFLG
TOTPRLEN EQU   TOTPRENT+20
TOTTNTPR EQU   TOTPRENT+16
TOTPDTNT EQU   TOTPRENT+12
TOTPRLCB EQU   TOTPRENT+9
TOTPRRLN EQU   TOTPRENT+8
TOTPRSID EQU   TOTPRENT+6
TOTPRUCB EQU   TOTPRENT
TOTTRMBF EQU   TOTPRIBK
TOTPASS  EQU   TOTOLTCB+1260
TOTEXT   EQU   TOTOLTCB+1204
@NM00206 EQU   TOTOLTCB+1203
TOTTTBEL EQU   TOTOLTCB+1202
TOTOLTRS EQU   TOTFLG10
TOTOLTWT EQU   TOTFLG10
TOTTNTRQ EQU   TOTFLG10
@NM00205 EQU   TOTFLG10
@NM00204 EQU   TOTFLG10
@NM00203 EQU   TOTFLG10
TOTTERMS EQU   TOTFLG10
TOTMACFT EQU   TOTFLG09
TOTPRECT EQU   TOTFLG09
TOTLNCON EQU   TOTFLG09
TOTNOBRK EQU   TOTFLG09
TOTAPTRM EQU   TOTFLG09
TOTCTCON EQU   TOTFLG09
TOTAPOUT EQU   TOTFLG09
TOTAPCON EQU   TOTFLG09
@NM00202 EQU   TOTFLG08
TOTFMCTL EQU   TOTFLG08
TOTMSSRC EQU   TOTFLG07
TOTMSPRT EQU   TOTFLG07
TOTMSREP EQU   TOTFLG07
TOTMSCEC EQU   TOTFLG07
@NM00201 EQU   TOTFLG07
@NM00200 EQU   TOTFLG07
TOTSECEX EQU   TOTFLG07
TOTPRIEX EQU   TOTFLG07
TOTNPERR EQU   TOTFLG06
TOTABEND EQU   TOTFLG06
TOTNCMFG EQU   TOTFLG06
TOTCBOPN EQU   TOTFLG06
TOTOTERM EQU   TOTFLG06
TOTNDMSG EQU   TOTFLG05
TOTEXIOF EQU   TOTFLG05
TOTTMOUT EQU   TOTFLG05
TOTSRCON EQU   TOTFLG05
TOTSRCE  EQU   TOTFLG05
TOTREPLY EQU   TOTFLG05
TOTCECOM EQU   TOTFLG05
TOTPRINT EQU   TOTFLG05
TOTTTSWT EQU   TOTFLG04
@NM00199 EQU   TOTFLG04
@NM00198 EQU   TOTFLG04
TOTSCCTF EQU   TOTFLG04
TOTPRCTF EQU   TOTFLG04
TOTCLOSE EQU   TOTFLG04
TOTDTCHD EQU   TOTFLG04
TOTNUMDV EQU   TOTFLG04
@NM00197 EQU   TOTFLG03
TOTTSINC EQU   TOTFLG03
TOTIMNCP EQU   TOTFLG03
TOTOPTER EQU   TOTFLG03
TOTTSTER EQU   TOTFLG03
TOTTDFER EQU   TOTFLG03
TOTAPOER EQU   TOTFLG03
TOTDEVRN EQU   TOTFLG02
TOTCONCU EQU   TOTFLG02
TOTCONMD EQU   TOTFLG02
TOTCHKSZ EQU   TOTFLG02
TOTOLTRQ EQU   TOTFLG02
TOTDEV0X EQU   TOTFLG02
TOTTSST  EQU   TOTFLG02
TOTTTSPE EQU   TOTFLG02
TOTPRMPT EQU   TOTFLG01
TOTAPTST EQU   TOTFLG01
TOTEXIT  EQU   TOTFLG01
TOTIPLCU EQU   TOTFLG01
TOTFINAL EQU   TOTFLG01
TOTRESPL EQU   TOTOLTCB+1188
TOTSTAE  EQU   TOTOLTCB+1184
TOTAVTPT EQU   TOTOLTCB+1180
@NM00196 EQU   TOTOLTCB+1160
TOTWKEND EQU   TOTOLTCB+1160
TOTWKSPC EQU   TOTOLTCB+1032
@NM00195 EQU   TOTOLTCB+1028
TOTPLBKW EQU   TOTPLNKQ+4
TOTPLFWD EQU   TOTPLNKQ
@NM00194 EQU   TOTOLTCB+1019
TOTRTCOD EQU   TOTOLTCB+1018
TOTINBUF EQU   TOTWTOPL+88
TOTOTBUF EQU   TOTWTOPL+4
@NM00193 EQU   TOTWTOPL+2
TOTOTCNT EQU   TOTWTOPL+1
@NM00192 EQU   TOTWTOPL
TOTINECB EQU   TOTWTORP+4
TOTINADR EQU   TOTWTORP+1
TOTINCNT EQU   TOTWTORP
TOT#TBLE EQU   TOTOLTPL+8
@NM00191 EQU   TOTOLTPL
TOTRESSV EQU   TOTOLTCB+816
TOTPARML EQU   TOTOLTCB+804
TOTPDECB EQU   TOTOLTCB+784
TOTAPDCB EQU   TOTOLTCB+780
@NM00190 EQU   TOTOLTCB+776
@NM00189 EQU   TOTAPDFL
TOTAPIAC EQU   TOTAPDFL
TOTAPHD  EQU   TOTAPDFL
TOTAPLST EQU   TOTAPDFL
TOTAPGP  EQU   TOTAPDFL
@NM00188 EQU   TOTAPDFL
TOTAPLIN EQU   TOTAPDFL
TOTAPTER EQU   TOTAPDFL
TOTAPRNL EQU   TOTAPENT+23
TOTAPEND EQU   TOTAPENT+23
TOTAPSWD EQU   TOTAPFLG
@NM00187 EQU   TOTAPFLG
TOTAPORN EQU   TOTAPFLG
TOTAPASN EQU   TOTAPFLG
TOTAPTLN EQU   TOTAPENT+20
TOTARTNT EQU   TOTAPENT+16
TOTAPTNT EQU   TOTAPENT+12
TOTAPLCB EQU   TOTAPENT+9
TOTAPRLN EQU   TOTAPENT+8
TOTARSID EQU   TOTAPENT+6
TOTAPUCB EQU   TOTAPENT
TOTUSCOR EQU   TOTOLTCB+740
@NM00186 EQU   TOTOLTCB+698
TOTOALTT EQU   TOTOLTCB+696
TOTOLADR EQU   TOTPLIST+16
@NM00185 EQU   TOTOECBA+1
@NM00184 EQU   TOTOFLG
TOTOATTC EQU   TOTOFLG
TOTORTCD EQU   TOTPLIST+11
TOTORLN  EQU   TOTPLIST+10
TOTOELNG EQU   TOTPLIST+9
TOTOVBCD EQU   TOTPLIST+8
TOTOLINK EQU   TOTPLIST+5
TOTOPRI  EQU   TOTPLIST+4
TOTOQCBA EQU   TOTPLIST+1
TOTOKEY  EQU   TOTPLIST
TOTWOOPC EQU   TOTOLTCB+648
TOTCURS4 EQU   TOTCUTST+11
TOTCURS3 EQU   TOTCUTST+10
TOTCURS2 EQU   TOTCUTST+9
TOTCURS1 EQU   TOTCUTST+8
TOTCUSAV EQU   TOTCUTST+4
TOTCUCUU EQU   TOTCUTST+2
TOTCU#AD EQU   TOTCUTST+1
@NM00183 EQU   TOTCUFLG
TOTCUCUP EQU   TOTCUFLG
TOTCUDON EQU   TOTCUFLG
@NM00182 EQU   TOTOLTCB+633
@NM00181 EQU   TOTCTDFL
TOTCTIAC EQU   TOTCTDFL
TOTCTHD  EQU   TOTCTDFL
TOTCTLST EQU   TOTCTDFL
TOTCTGP  EQU   TOTCTDFL
@NM00180 EQU   TOTCTDFL
TOTCTLIN EQU   TOTCTDFL
TOTCTTRM EQU   TOTCTDFL
TOTCTRNL EQU   TOTCTENT+23
TOTCTEND EQU   TOTCTENT+23
TOTCTSWD EQU   TOTCTFLG
@NM00179 EQU   TOTCTFLG
TOTCTORN EQU   TOTCTFLG
TOTCTASN EQU   TOTCTFLG
TOTCTTLN EQU   TOTCTENT+20
TOTCRTNT EQU   TOTCTENT+16
TOTCTTNT EQU   TOTCTENT+12
TOTCTLCB EQU   TOTCTENT+9
TOTCTRLN EQU   TOTCTENT+8
TOTCRSID EQU   TOTCTENT+6
TOTCTUCB EQU   TOTCTENT
TOTSRLCB EQU   TOTSRENT+4
@NM00178 EQU   TOTSRENT+2
TOTMMSPC EQU   TOTOLTCB+580
TOTBKRQD EQU   TOTOLTCB+578
TOTBKASN EQU   TOTOLTCB+576
TOTSVEND EQU   TOTOLTCB+576
TOTWOSV4 EQU   TOTOLTCB+572
TOTWOSV3 EQU   TOTOLTCB+568
TOTWOSV2 EQU   TOTOLTCB+564
TOTWOSV1 EQU   TOTOLTCB+560
TOTSAVE6 EQU   TOTOLTCB+488
@NM00177 EQU   TOTSAVE5+68
TOTOLTEP EQU   TOTSAVE5+64
@NM00176 EQU   TOTSAVE5+48
TOTOLTPT EQU   TOTSAVE5+44
@NM00175 EQU   TOTSAVE5
TOTSAVE4 EQU   TOTOLTCB+344
TOTSAVE3 EQU   TOTOLTCB+272
TOTSAVE2 EQU   TOTOLTCB+200
TOTSAVE1 EQU   TOTOLTCB+128
TOTSMGRT EQU   TOTOLTCB+124
@NM00174 EQU   $SCTTBLE+92
$EXT     EQU   $SCTTBLE+88
$PASS    EQU   $SCTTBLE+84
$TABLE   EQU   $SCTTBLE+80
$MSGIDAC EQU   $SCTTBLE+78
@NM00173 EQU   $SCTTBLE+72
@NM00172 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $SCTTBLE+69
$R241248 EQU   $SCTTBLE+68
$R233240 EQU   $SCTTBLE+67
$R225232 EQU   $SCTTBLE+66
$R217224 EQU   $SCTTBLE+65
$R209216 EQU   $SCTTBLE+64
$R201208 EQU   $SCTTBLE+63
$R193200 EQU   $SCTTBLE+62
$R185192 EQU   $SCTTBLE+61
$R177184 EQU   $SCTTBLE+60
$R169176 EQU   $SCTTBLE+59
$R161168 EQU   $SCTTBLE+58
$R153160 EQU   $SCTTBLE+57
$R145152 EQU   $SCTTBLE+56
$R137144 EQU   $SCTTBLE+55
$R129136 EQU   $SCTTBLE+54
$R121128 EQU   $SCTTBLE+53
$R113120 EQU   $SCTTBLE+52
$R105112 EQU   $SCTTBLE+51
$R097104 EQU   $SCTTBLE+50
$R089096 EQU   $SCTTBLE+49
$R081088 EQU   $SCTTBLE+48
$R073080 EQU   $SCTTBLE+47
$R065072 EQU   $SCTTBLE+46
$R057064 EQU   $SCTTBLE+45
$R049056 EQU   $SCTTBLE+44
$R041048 EQU   $SCTTBLE+43
$R033040 EQU   $SCTTBLE+42
$R025032 EQU   $SCTTBLE+41
$R017024 EQU   $SCTTBLE+40
$TOTFLG2 EQU   $SCTTBLE+39
@NM00171 EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
$TERMSEC EQU   $TOTFLG1
$TDATBLK EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00170 EQU   $SCTTBLE+37
@NM00169 EQU   $OLTFLGS
$LASTSEC EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
$CECCMIN EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$CDS8T19 EQU   $SCTTBLE+20
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
$PATHDEF EQU   $PDEVFLG
$TERMNDX EQU   $PDEVFLG
@NM00168 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
$TSSSYS1 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SPARE1  EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
@NM00167 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
@NM00166 EQU   TOTOBPTR+4
TOTELQCB EQU   TOTOBPTR+1
LCBERADR EQU   LCBXRADR+1
LCBPCIRC EQU   LCBXRADR
LCBDCT3  EQU   LCBXDCT+2
LCBDCT2  EQU   LCBXDCT+1
LCBDCT1  EQU   LCBXDCT
@NM00165 EQU   LCBXFLAG
LCBERPND EQU   LCBXFLAG
LCBSRCPF EQU   LCBXFLAG
LCBGPCTV EQU   LCBXFLAG
@NM00164 EQU   LCBXFLAG
@NM00163 EQU   LCBXFLAG
@NM00162 EQU   LCBXFLAG
@NM00161 EQU   LCBXFLAG
LCBCCW10 EQU   LCBCPA+72
LCBCCW9  EQU   LCBCPA+64
LCBCCW8  EQU   LCBCPA+56
LCBCCW7  EQU   LCBCPA+48
LCBCCW6  EQU   LCBCPA+40
LCBCP    EQU   LCBQEBPL+4
LCBIOSB  EQU   LCBQEBPL+1
LCBSIO   EQU   LCBQEBPL
LCBCCW4  EQU   LCBCPA+24
LCBCCW3  EQU   LCBCPA+16
LCBCCW2  EQU   LCBCPA+8
LCBCCW1  EQU   LCBCPA
@NM00146 EQU   LCBERCCW+16
LCBATL05 EQU   LCBERCCW+8
@NM00145 EQU   LCBERCCW
LCBCSWSV EQU   LCBSAVSN+1
LCBSNSV  EQU   LCBSAVSN
LCBBFSNS EQU   LCBRSPSV
LCBWAITC EQU   LCBTPCD+5
LCBINPAK EQU   LCBSTAT6
LCBMHBID EQU   LCBSTAT6
LCBRTRRO EQU   LCBSTAT6
LCBHDRPD EQU   LCBSTAT6
LCBCHN   EQU   LCBSTAT6
LCBBFRSV EQU   LCBTPCD+1
@NM00144 EQU   LCBSTAT5
LCBLUS   EQU   LCBSTAT5
LCBLUNIT EQU   LCBSTAT5
LCBPERM  EQU   LCBSTAT5
LCBNXCMD EQU   LCBBFRW
LCBERMSK EQU   LCBOBRCH
LCBEOT   EQU   LCBMSGFM
LCBENQ   EQU   LCBMSGFM
LCBTTD   EQU   LCBMSGFM
LCBRSTRT EQU   LCBMSGFM
LCBVSTRT EQU   LCBMSGFM
LCBACKI  EQU   LCBMSGFM
LCBNAK   EQU   LCBMSGFM
LCBTTCIN EQU   IEDQLCB+90
@NM00143 EQU   LCBRBCT2
LCBDCNT  EQU   LCBRBCT2
LCBRBCT1 EQU   LCBERBCT
LCBERBCH EQU   IEDQLCB+85
LCBCOMPL EQU   LCBDLNKN
LCBPRCPG EQU   LCBERBST
LCBERROR EQU   LCBERBST
LCBLOGDV EQU   LCBERBST
LCBINQ   EQU   LCBERBST
LCBRDERR EQU   LCBERBST
LCBEOMSG EQU   LCBERBST
LCBMSG   EQU   LCBERBST
LCBERBLK EQU   IEDQLCB+81
LCBERBPY EQU   IEDQLCB+80
LCBERBQB EQU   LCBERB+1
LCBERBKY EQU   LCBERB
LCBRECAD EQU   IEDQLCB+73
@NM00142 EQU   LCBTSTSW
@NM00141 EQU   LCBTSTSW
@NM00140 EQU   LCBTSTSW
@NM00139 EQU   LCBTSTSW
@NM00138 EQU   LCBTSTSW
@NM00137 EQU   LCBTSTSW
@NM00136 EQU   LCBTSTSW
LCBCONCT EQU   LCBTSTSW
LCBRESP  EQU   LCBSTAT2
LCBBFRAV EQU   LCBDIAL
LCBATTN  EQU   LCBSYNC
LCBSNDPR EQU   LCBSTAT2
LCBCONNN EQU   LCBBEOTN
LCBMSGNN EQU   LCBSTAT2
LCBTRACE EQU   LCBSTAT2
LCBSENDN EQU   LCBSTAT1
LCBRECVN EQU   LCBSTAT1
LCBFREEN EQU   LCBSTAT1
LCBCONT  EQU   LCBSTAT1
LCBINITN EQU   LCBSTAT1
LCBOCNI  EQU   LCBSTAT1
LCBOCWTN EQU   LCBSTAT1
LCBRCLLN EQU   LCBSTAT1
LCBRECOF EQU   IEDQLCB+68
LCBRDBFR EQU   LCBRCBFR
LCBUCBX  EQU   IEDQLCB+64
LCBTTBIN EQU   LCBERRCT
@NM00135 EQU   LCBINCAM
LCBGETMN EQU   LCBINCAM
@NM00134 EQU   LCBRESTR+1
LCBCMDSV EQU   LCBRESTR
LCBPCILK EQU   LCBDCBPT
LCBSTART EQU   LCBIOBSN+16
LCBAP4OL EQU   LCBSIOCC
LCBAP3OL EQU   LCBSIOCC
LCBAP2OL EQU   LCBSIOCC
LCBAP1OL EQU   LCBSIOCC
LCBSIOC2 EQU   LCBSIOCC
LCBSIOC1 EQU   LCBSIOCC
@NM00133 EQU   LCBSIOCC
LCBCSWRC EQU   LCBCSW+5
LCBCSCHC EQU   LCBCSWCS
LCBCSICC EQU   LCBCSWCS
LCBCSCCC EQU   LCBCSWCS
LCBCSCDC EQU   LCBCSWCS
LCBCSPTC EQU   LCBCSWCS
LCBCSPGC EQU   LCBCSWCS
LCBCSIL  EQU   LCBCSWCS
LCBCSPCI EQU   LCBCSWCS
LCBUSUE  EQU   LCBCSWUS
LCBUSUC  EQU   LCBCSWUS
LCBUSDE  EQU   LCBCSWUS
LCBUSCE  EQU   LCBCSWUS
LCBUSBSY EQU   LCBCSWUS
LCBUSCUE EQU   LCBCSWUS
LCBUSSM  EQU   LCBCSWUS
LCBUSAT  EQU   LCBCSWUS
LCBCSWCA EQU   LCBCSW
LCBOBR   EQU   LCBFLAG3
LCBOBRRD EQU   LCBFLAG3
LCBIOMSG EQU   LCBFLAG3
LCBSOHC  EQU   LCBFLAG3
LCBRLAD  EQU   LCBFLAG3
LCBSOHR  EQU   LCBFLAG3
@NM00132 EQU   LCBFLAG3
LCBECBPT EQU   LCBIOBSN+4
LCBECBCC EQU   LCBIOBSN+3
LCBSENS1 EQU   LCBSNS+1
LCBABORT EQU   LCBTMOUT
LCBNOTIN EQU   LCBLOSDT
LCBOVRUN EQU   LCBSENS0
LCBDATCK EQU   LCBSENS0
LCBEQUCK EQU   LCBSENS0
LCBBUSCK EQU   LCBSENS0
LCBINTRQ EQU   LCBSENS0
LCBCMDRJ EQU   LCBSENS0
LCBFLAG2 EQU   LCBIOBSN
@NM00131 EQU   LCBFLAG1
LCBUNREL EQU   LCBFLAG1
LCBEXCPN EQU   LCBFLAG1
@NM00130 EQU   LCBFLAG1
LCBERPIN EQU   LCBFLAG1
@NM00129 EQU   LCBFLAG1
LCBFSBFR EQU   LCBMHA
LCBISZE  EQU   IEDQLCB+28
LCBLNENT EQU   LCBSCBDA+1
@NM00128 EQU   LCBSCBDA
LCBCPGMH EQU   LCBSTAT4
LCBREAL  EQU   LCBPHASE
@NM00127 EQU   LCBSTAT4
LCBACTRQ EQU   LCBSTAT4
LCBIPLRQ EQU   LCBSTAT4
LCBDACRQ EQU   LCBSTAT4
LCBDMPRQ EQU   LCBSTAT4
@NM00126 EQU   LCBLKMDE
LCBLOCKI EQU   LCBLKMDE
LCBLOCKR EQU   LCBLKMDE
LCBHMFLG EQU   LCBLKMDE
LCBBDFLG EQU   LCBLKMDE
@NM00125 EQU   LCBINSRC
LCBABRTN EQU   LCBCHAIN
LCBCTLMD EQU   LCBTETEN
LCBBFRSZ EQU   LCBCHAIN
LCBUREQN EQU   LCBCHAIN
LCBNORTY EQU   LCBCHAIN
LCBERMSG EQU   LCBCHAIN
LCBEXCP  EQU   LCBCHAIN
LCBINVRQ EQU   LCBSCRNN
LCB2741N EQU   LCBTSOB
LCBINHBN EQU   LCBTSOB
LCBCIRCD EQU   LCBTSOB
LCBPREP  EQU   LCBTSOB
LCBSOPL  EQU   LCBTSOB
LCBSATRD EQU   LCBTSOB
LCBTSBUF EQU   LCBTSOB
LCBWRBRK EQU   LCBTSOB
LCBTDL   EQU   IEDQLCB+18
LCBEOLTD EQU   IEDQLCB+16
LCBRSLNK EQU   IEDQLCB+13
LCBRSPRI EQU   IEDQLCB+12
LCBSTCBA EQU   IEDQLCB+9
LCBKEY   EQU   LCBRCB
@NM00124 EQU   DCTBYTE5
DCTSCS   EQU   DCTBYTE5
DCTTSPRF EQU   DCTBYTE4
DCTFMPRF EQU   DCTBYTE4
DCT2760  EQU   DCTBYTE3
DCTCONTN EQU   DCTBYTE3
DCTBUFF  EQU   DCTBYTE3
DCTCHECK EQU   DCTBYTE3
DCTENCTL EQU   DCTBYTE3
DCTWTTA  EQU   DCTBYTE3
DCT1050  EQU   DCTBYTE3
DCTAUDIO EQU   DCTBYTE2
DCTLOCAL EQU   DCTBYTE2
DCTCONT  EQU   DCTBYTE2
DCTXMIT  EQU   DCTBYTE2
DCTSTCTL EQU   DCTBYTE2
DCTTWX   EQU   DCTBYTE2
DCTBRDST EQU   DCTBYTE2
DCTBISYN EQU   DCTBYTE2
DCTUMASK EQU   DCTBYTE1
DCTSADEV EQU   DCTBYTE1
DCT2741  EQU   DCTBYTE1
DCT5041  EQU   DCTBYTE1
DCTATTEN EQU   DCTBYTE1
DCTBREAK EQU   DCTBYTE1
DCTINHIB EQU   DCTBYTE1
DCTBYTE0 EQU   IEDDCT
DCBINVLA EQU   DCBINVLI+1
@NM00123 EQU   DCBINVCI
DCBINVB2 EQU   DCBINVCI
@NM00122 EQU   DCBINVCI
DCBINVB1 EQU   DCBINVCI
@NM00121 EQU   DCBINVCI
@NM00120 EQU   DCBRESER+2
DCBRESB2 EQU   DCBRESER+1
DCBRESB1 EQU   DCBRESER
DCBBUFSI EQU   IHADCS43+6
DCBUNTCT EQU   IHADCS43+5
DCBILCT  EQU   IHADCS43+4
DCBSCTAD EQU   DCBSCTAB+1
@NM00119 EQU   DCBSCTAB
DCBDEBA  EQU   DCBDEBAD+1
@NM00118 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00117 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBEIOBX EQU   DCBEXLST
DCBLCBA  EQU   DCBLCBAD+1
DCBCPS   EQU   DCBCPRI
DCBCPE   EQU   DCBCPRI
DCBCPR   EQU   DCBCPRI
@NM00116 EQU   DCBCPRI
@NM00115 EQU   DCBTRANA
DCBIOBAA EQU   DCBIOBAD+1
DCBDEVTP EQU   DCBIOBAD
@NM00114 EQU   IHADCS17+7
@NM00113 EQU   IHADCS17+6
@NM00112 EQU   IHADCS17+5
DCBINTVL EQU   IHADCS17+4
DCBCLPSA EQU   DCBCLPS+1
DCBBUFRQ EQU   DCBCLPS
DCBBUFMA EQU   IHADCS16+8
@NM00111 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00110 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00109 EQU   DCBDSRG1
@NM00108 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBPCIR2 EQU   DCBPCI
DCBPCIR1 EQU   DCBPCI
DCBPCIN2 EQU   DCBPCI
DCBPCIN1 EQU   DCBPCI
DCBPCIA2 EQU   DCBPCI
DCBPCIA1 EQU   DCBPCI
DCBPCIX2 EQU   DCBPCI
DCBPCIX1 EQU   DCBPCI
@NM00107 EQU   IHADCS16+4
DCBMH    EQU   DCBMHA+1
DCBBFOUT EQU   DCBBUFIN
DCBBFIN  EQU   DCBBUFIN
@NM00106 EQU   IHADCB
SAVTLLCB EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00105 EQU   SAVTCKQB+8
@NM00104 EQU   SAVTCKEC+1
@NM00103 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00102 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00101 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00100 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00099 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00098 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00097 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00096 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00095 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00094 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00093 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00092 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00091 EQU   IEDQAVTD+1242
@NM00090 EQU   IEDQAVTD+1241
@NM00089 EQU   IEDQAVTD+1240
@NM00088 EQU   IEDQAVTD+1237
@NM00087 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00086
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00085 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00084 EQU   IEDQAVTD+1140
@NM00083 EQU   IEDQAVTD+1137
@NM00082 EQU   AVTBIT4
@NM00081 EQU   AVTBIT4
@NM00080 EQU   AVTBIT4
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00075 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00074 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00073 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00072 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00071 EQU   AVTBIT2
@NM00070 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00069 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00068 EQU   IEDQAVTD+950
@NM00067 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00066 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00065 EQU   AVTCWFL2
@NM00064 EQU   AVTCWFL2
@NM00063 EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL1
@NM00059 EQU   AVTCWFL1
@NM00058 EQU   AVTCWFL1
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00053 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00052 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00051 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00050 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00049 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00048 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTVT EQU   AVTOLTQB
@NM00047 EQU   AVTOPCQB+8
@NM00046 EQU   AVTOPCEC+1
@NM00045 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00044 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00043 EQU   AVTCKPEC+1
@NM00042 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00041 EQU   IEDQAVTD+796
@NM00040 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00039 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTREFTM EQU   IEDQAVTD+764
@NM00038 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
@NM00037 EQU   AVTSYSER
@NM00036 EQU   AVTSYSER
@NM00035 EQU   AVTSYSER
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00031 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00030 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00029 EQU   AVTCKBYT
@NM00028 EQU   AVTCKBYT
@NM00027 EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00023 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00022 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00021 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00020 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00019 EQU   AVTSAVTP+1
@NM00018 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00017 EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00016 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00015 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
@NM00014 EQU   AVTECB1
AVTCOMP  EQU   AVTECB1
@NM00013 EQU   AVTECB1
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
@NM00258 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00257 EQU   PSA+1040
PSAUSEND EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00256 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00255 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00254 EQU   FLCFSA
@NM00253 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00252 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00251 EQU   FLCIOA
@NM00250 EQU   FLCMCLA+15
@NM00249 EQU   FLCMCLA+14
@NM00248 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00247 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00246 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00245 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00244 EQU   FLCPER
@NM00243 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00242 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00241 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00240 EQU   FLCPIILC
@NM00239 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00238 EQU   FLCSVILC
@NM00237 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00236 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00235 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00525 EQU   @RC00520
@RC00548 EQU   @RC00520
@RC00541 EQU   @RC00520
@RC00603 EQU   @RC00600
@RT00712 EQU   @RC00711
@RC00732 EQU   @RC00729
@RC00665 EQU   @RC00586
@RC00991 EQU   @RC00990
@RC00984 EQU   @EL00004
@PB00004 EQU   @PB00005
@RC00528 EQU   @RC00525
@RC00526 EQU   @RC00525
@RC00634 EQU   @RC00603
@RC00725 EQU   @RC00665
@PB00003 EQU   @PB00004
@RC00750 EQU   @RC00725
@PB00002 EQU   @PB00003
@RC00753 EQU   @RC00750
@ENDDATA EQU   *
         END   IEDQWA1,(C'PLS2209',0701,78089)
