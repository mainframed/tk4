         TITLE 'IEDQWA - TOTE RESIDENT MODULE'
IEDQWA   CSECT
*CHANGE ACTIVITY AS FOLLOWS:
*A000000-999999                                                @M02XRUV
*A612240-612360,619840-619960                                   SA41599
*D489000-489300                                                 SA41603
*A496300-496400                                                 SA41603
*A604500,624900                                                 SA41612
*C604400,624800                                                 SA41612
*A474650-474850                                                 SA41613
*C466800,475200                                                 SA41613
*D467100,475500,768500-768800                                   SA41613
*A026600-026800,033030-033450,033700,036560-036920,051700        S22024
*A054700,063570-063920,078700,093200,137000-145400,170300-170600 S22024
*A268600-268800,269200-269800,271000,453960-454140,466600-466700 S22024
*A477300-477552,481000,491120-491300,494100,591000-591990        S22024
*A593000-593760,612370-612380,619970-619980,615640-615760        S22024
*A617060-617120,658000,764000,776700,776730-776850,847000        S22024
*A858000-868000                                                  S22024
*C007000,009000,026500,041500-042400,046500,051500,069000,076000 S22024
*C082500,093000,094500-095500,268000,269000,270000,611000,614800 S22024
*C615600,616000,617000,617600-618150,776300-776600,790400        S22024
*D189000-191000,588000,621000,782300-790700,749000-757400        S22024
*D760700-763700,764300-766340,770600,772700-773000               S22024
*A139730-139760,142130-142160,145700-145800,466720-466780        S05331
*A476340-476361,476680-477100,587805-587875,588460-588480        S05331
*A592450-592500,607610-607700,776866-776890,816020-816780        S05331
*C196000-203000,592200,592360                                    S05331
*A139000,145820-145960,476131-476138,477100-477848,776891-776898 Y06330
*C908000                                                         Y06330
*A139200,593483-593495                                           Y06330
*A476124-476126                                                 SA64777
*A466780,476361,477090                                         @YA07679
*A508200,508500                                                 SA64792
*D621600-624350,834140-834910                                  @YA06302
*A462330                                                       @ZA00208
*D510900,511800-514800                                         @ZA00208
*C515700                                                       @ZA00208
*C177000-186000                                                 SA64772
*A145840-145880,498000,498660-498840,500160-500340              SA64785
*A145920-145960,495920-496100                                   SA64790
*A366300,145960                                                @YA08757
*C618150                                                       @YA11128
*A611600,620800,769100                                         @YA11128
*D003500-033450,053000-059000,070000-078700,                   @Y17XAUV
*D083000-096000,139730-140100,140400-143100,                   @Y17XAUV
*D145700-187000,235000-559000,587400-592520,                   @Y17XAUV
*D603800-604200                                                @Y17XAUV
*D621200-625200,757700-776000,776700-776898                    @Y17XAUV
*C038000,071500,079500,081500-082000,082000-082500,            @Y17XAUV
*C123000,126000,139400,200000,220000                           @Y17XAUV
*C595000,604000,611700                                         @Y17XAUV
*A003205,052500,067500,068000,077000,082000,                   @Y17XAUV
*A082500,123000,126000,139700,220000,234000,593740             @Y17XAUV
*A603600,621000,776600,777200                                  @Y17XAUV
*C146480                                                       @YM07361
* A002300,003258,003471,450560,776900                          @XM05672
* C054940,068080-068120                                        @XM05672
* D777230-777440                                               @XM05672
* A616000                                                      @G36XRUV
* C616200,681000                                               @G36XRUV
* D680000,682000                                               @G36XRUV
*
         EJECT                                                 @Y17XAUV
***********************************************************************
*                                                              @Y17XAUV
* MODULE NAME = IEDQWA (TCAM,TELECOMMUNICATION ON-LINE TEST EXECUTOR) *
*                                                              @Y17XAUV
* DESCRIPTIVE NAME = TOTE RESIDENT MODULE                      @Y17XAUV
*                                                              @Y17XAUV
* COPYRIGHT = NONE                                             @Y17XAUV
*                                                              @Y17XAUV
* STATUS = VERSION 10.0                                        @Y17XAUV
*                                                              @Y17XAUV
* FUNCTION = IEDQWA PERFORMS THE BASIC RESIDENT FUNCTION       @Y17XAUV
* OF TOTE. IN ADDITION, IT CONTAINS ASYCHRONOUS TASK EXITS     @Y17XAUV
* AND SUBROUTINES USED BY THE OTHER TOTE MODULES AND           @Y17XAUV
* THE OLT MODULES.  EACH OF THESE ACTIVITES IS REPRESENTED     @Y17XAUV
* AS A SEPARATE ENTRY POINT.                                   @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT IEDQWA:                                       @Y17XAUV
*                                                              @Y17XAUV
*    THE MODULE IS ENTERED AT IEDQWA FROM THE OPERATING        @Y17XAUV
*    SYSTEM AS A RESULT OF THE ATTACH MACRO ISSUED BY          @Y17XAUV
*    THE MCP TASK AT INTRO TIME.  THIS ROUTINE PERFORMS        @Y17XAUV
*    THE BASIC RESIDENT FUNCTION FOR TOTE.  ON ENTRY IT        @Y17XAUV
*    PERFORMS CERTAIN INITIALIZATION PROCEDURES.  IT THEN      @Y17XAUV
*    WAITS ON AN ECB LIST.  ONE OF THESE ECB'S IS PART OF      @Y17XAUV
*    THE TOTE QCB IN THE TCAM AVT AND IS POSTED BY THE TCAM    @Y17XAUV
*    MCP TASK WHEN INPUT IS ENQUEUED ON THE TOTE QCB.  THE     @Y17XAUV
*    OTHER ECB IS IN THE TOTE RESIDENT PARAMETER LIST AND      @Y17XAUV
*    IS POSTED BY THE OLT SUBTASKS WHEN THEY REQUIRE SERVICE   @Y17XAUV
*    BY THE TOTE MAIN TASK.  WHEN TOTE IS POSTED, IT FIRST     @Y17XAUV
*    DETERMINES IF TCAM IS IN SHUTDOWN.  IF SO, ALL OLT        @Y17XAUV
*    SUBTASKS ARE DETACHED AND IEDQWA RETURNS TO TCAM.  IF     @Y17XAUV
*    SHUTDOWN IS NOT IN PROGRESS, THEN IEDQWA FULFILLS THE     @Y17XAUV
*    REQUESTS OF OLT SUBTASKS FOR RESOURCES BY LINKING         @Y17XAUV
*    TO IEDQWB, THE TOTE RESOURCE MANAGER, AND INITIATES       @Y17XAUV
*    THE PROCESSING OF INCOMING MESSAGES ENQUEUED ON THE       @Y17XAUV
*    TOTE QCB BY CALLING IEDQWA1, THE TOTE INPUT DATA          @Y17XAUV
*    HANDLER.  WHEN ALL WORK IS COMPLETE, IEDQWA RESUMES       @Y17XAUV
*    THE WAIT.  IF CATESTROPHIC ERRORS WERE DETECTED BY        @Y17XAUV
*    THE TWO OTHER TOTE MODULES, IEDQWA IS INFORMED BY         @Y17XAUV
*    RETURN CODE AND EXITS TO TCAM.                            @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: ALLOCBUF                                     @Y17XAUV
*                                                              @Y17XAUV
*    THIS ROUTINE IS CALLED BY TOTE MODULES REQUIRING A        @Y17XAUV
*    TCAM BUFFER. IT TPOSTS AN ERB TO THE BUFFER REQUEST       @Y17XAUV
*    QCB FOR THE DESIRED NUMBER OF OF BUFFER UNITS.  THESE     @Y17XAUV
*    ARE RETURNED TO THE REQUESTING TOTE MODULE.               @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: FREEBUF                                      @Y17XAUV
*                                                              @Y17XAUV
*    THIS ROUTINE IS CALLED BY TOTE MODULES DESIRING TO        @Y17XAUV
*    FREE A BUFFER. IT TPOSTS THE BUFFER UNITS BACK TO         @Y17XAUV
*    THE BUFFER RETURN QCB.                                    @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: POSTWAIT                                     @Y17XAUV
*                                                              @Y17XAUV
*    THIS ROUTINE IS CALLED BY TOTE MODULES IN ORDER TO        @Y17XAUV
*    TPOST AN ELEMENT TO TCAM.  A WAIT MAY BE DONE FOR THE     @Y17XAUV
*    RETURN OF THE ELEMENT IF THE TOTE MODULE SO REQUESTS.     @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: HIERSCAN                                     @XM05672
*                                                              @XM05672
*    THIS ROUTINE SCANS THE HIERARCHY UNDER A SDLC LINK AND    @XM05672
*    RESETS THE TRMSTOTE BIT.                                  @XM05672
*                                                              @XM05672
*    ENTRY POINT: OLTETXR                                             *
*                                                               S22024*
*    THIS ROUTINE IS THE END OF TASK EXIT ROUTINE INDICATED ON THE    *
*    ATTACH MACRO WHICH IS ENTERED WHEN THE OLT ENDS EITHER           *
*    NORMALLY OR ABNORMALLY. THE CORRECT OLT IS DETACHED BY           *
*    COMPARING THE TCB ADDRESS IN THE OLTCB TO THE TCB ADDRESS        *
*    INDICATED IN REGISTER 1.                                         *
*                                                                     *
*    ENTRY POINT: STAERT                                        S22024*
*                                                               S22024*
*    THIS ROUTINE IS THE STAE EXIT ROUTINE WHICH GETS CONTROL   S22024*
*    WHEN AN OLTT ABENDS.  IF THE OLTT HAS A CLEANUP ROUTINE    S22024*
*    SPECIFIED, THE ROOT MODULE IS ENTERED FOR CLEANUP.  OTHER- S22024*
*    WISE CONTROL IS RETURNED TO ABTERM.                        S22024*
*                                                               S22024*
*    ENTRY POINT: SMGR                                                *
*                                                                     *
*    THIS IS THE SERVICE MODULE MANAGER ROUTINE. IT IS         @Y17XAUV
*    ENTERED BY THE OLT WHEN HE REQUESTS A SERVICE OF THE EXECUTOR.   *
*    THE CANCEL PENDING BIT IS CHECKED FOR THE REQUESTING OLT. IF IT  *
*    IS ON AND THE OLT HAS A CLEANUP ROUTINE, THEN THE OLT IS         *
*    BRANCHED TO FOR CLEANUP. IF THE OLT DOES NOT HAVE A CLEANUP      *
*    ROUTINE, IEDQWF IS BRANCHED TO TO DELETE THE OLT. IF A CANCEL    *
*    REQUEST IS NOT PENDING FOR THE OLT, IEDQWA NOW DETERMINES IF     *
*    A START LINE COMMAND SHOULD BE ISSUED.  IF NON-CONCURRENT  S22024*
*    MODE IS REQUESTED, LINE SHARING IS NOT ACTIVE, THE LINE    S22024*
*    WAS INITIALLY STOPPED, OR THE TEST DEVICE IS ON A 3705,    S22024*
*    THEN THE START LINE IS BYPASSED. OTHERWISE THE START LINE  S22024*
*    COMMAND IS ISSUED. IEDQWA THEN GETS THE NAME OF THE SERVICE      *
*    MODULE REQUESTED AND PERFORMS A BLDL ON SYS1.LINKLIB TO VERIFY   *
*    THAT A VALID MODULE HAS BEEN REQUESTED. IF THE NAME IS NOT       *
*    FOUND, A RETURN CODE OF FOUR INDICATING AN UNSUPPORTED           *
*    FUNCTION IS SET AND THE OLT IS RETURNED TO. IF THE MODULE IS     *
*    VALID, IT IS LINKED TO TO PERFORM THE REQUESTED FUNCTION.        *
*    IF AN I/O OPERATION IS REQUESTED ON A TEST DEVICE, IEDQWN IS     *
*    CALLED. IF COMMUNICATION WITH THE ON-LINE TEST OPERATOR IS S22024*
*    REQUESTED IEDQWP OR IEDQWQ IS CALLED. IF AN OLT SUBMODULE IS     *
*    TO BE LOADED OR DELETED, IEDQWR IS CALLED. IF THE OLT WISHES     *
*    TO WAIT FOR THE COMPLETION OF AN I/O OPERATION, IEDQWS IS CALLED.*
*    IF AN ADDITIONAL TEST DEVICE IS REQUIRED IEDQWV IS CALLED. IF    *
*    DATA CONVERSION IS REQUIRED IEDQWX IS CALLED. IF CONFIGURATION   *
*    DATA IS REQUESTED, IEDQWY IS CALLED. IF A HALT I/O I REQUESTED,  *
*    IEDQW44 IS CALLED. IF THE OLT REQUIRES MORE CORE OR WANTS TO     *
*    FREE CORE, IEDQW42 (ALIAS IEDQW43) IS CALLED. IF A CONTROL UNIT  *
*    TEST IS DESIRED, IEDQWAJ IS CALLED. IF THE TIME IS DESIRED,      *
*    IEDQWAB IS CALLED.  IF THE DATE IS DESIRED, IEDQWAA IS     S22024*
*    CALLED.  AND DETERMINING WHETHER A ROUTINE SHOULD BE       S22024*
*    RUN IS PROVIDED BY IEDQW47. CONTROL IS THEN RETUNRED TO THE OLT. *
*                                                                     *
*    ENTRY POINT: QADDNDX                                      @Y17XAUV
*                                                              @Y17XAUV
*    THIS QUEUE HANDLER SUBROUTINE ADDS AN ELEMENT TO THE      @Y17XAUV
*    THE END OF A QUEUE.                                       @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: QADDAFX                                      @Y17XAUV
*                                                              @Y17XAUV
*    THIS QUEUE HANDLER SUBROUTINE INSERTS AN ELEMENT AFTER    @Y17XAUV
*    A SPECIFIED ELEMENT ON A QUEUE.                           @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: QREMELX                                      @Y17XAUV
*                                                              @Y17XAUV
*    THIS QUEUE HANDLER SUBROUTINE REMOVES A SPECIFIED         @Y17XAUV
*    ELEMENT FROM A QUEUE.                                     @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT: QREMFRX                                      @Y17XAUV
*                                                              @Y17XAUV
*    THIS QUEUE HANDLER SUBROUTINE REMOVES THE FIRST           @Y17XAUV
*    ELEMENT OF A QUEUE.                                       @Y17XAUV
*                                                              @Y17XAUV
* NOTES = SEE BELOW                                            @Y17XAUV
*                                                              @Y17XAUV
*    DEPENDENCIES = EBCDIC CHARACTER CODE.                     @Y17XAUV
*                                                              @Y17XAUV
*    RESTRICTIONS = NONE                                       @Y17XAUV
*                                                              @Y17XAUV
*    PATCH LABEL = PATCH                                       @Y17XAUV
*                                                              @Y17XAUV
* MODULE TYPE = CSECT                                          @Y17XAUV
*                                                              @Y17XAUV
*    PROCESSOR = ASMX                                          @Y17XAUV
*                                                              @Y17XAUV
*    MODULE SIZE = NO RESTRICTION                              @Y17XAUV
*                                                              @Y17XAUV
*    ATTRIBUTES = THE RESIDENT ROUTINE IS SERIALLY             @Y17XAUV
*    REUSEABLE.  ALL OTHER ROUTINES ARE REENTRANT.  THE        @Y17XAUV
*    LINKAGE EDITOR ATTIBUTES SHOULD BE SPECIFIED AS           @Y17XAUV
*    SERIALLY REUSEABLE.                                       @Y17XAUV
*                                                              @Y17XAUV
* INPUT = SEE BELOW                                            @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINT IEDQWA:                                       @Y17XAUV
*                                                              @Y17XAUV
*         REGISTER 1 - TCAM AVT ADDRESS                        @Y17XAUV
*         REGISTER 13 - SAVE AREA ADDRESS                      @Y17XAUV
*         REGISTER 14 - RETURN ADDRESS                         @Y17XAUV
*         REGISTER 15 - ENTRY POINT ADDRESS                    @Y17XAUV
*                                                              @Y17XAUV
*    ENTRY POINTS ALLOCBUF, FREEBUF, POSTWAIT, AND HIERSCAN:   @XM05672
*                                                              @Y17XAUV
*         SEE SUBROUTINE COMMENTS.                             @Y17XAUV
*                                                                     *
*    ENTRY POINT OLTETXR:                                             *
*                                                                     *
*         REGISTER 1 - TCB ADDRESS OF ENDING SUBTASK                  *
*         REGISTER 2 - OLTCB ADDRESS                                  *
*         REGISTER 13 - SAVE AREA ADDRESS                             *
*         REGISTER 14 - RETURN ADDRESS                                *
*         REGISTER 15 - ENTRY POINT ADDRESS                           *
*                                                                     *
*    ENTRY POINT STAERT:                                        S22024*
*                                                               S22024*
*         REGISTER 13 - SAVE AREA ADDRESS                       S22024*
*         REGISTER 14 - RETURN ADDRESS                          S22024*
*         REGISTER 15 - ENTRY POINT ADDRESS                     S22024*
*                                                               S22024*
*    ENTRY POINT SMGR:                                                *
*                                                                     *
*         REGISTER 1 - PARAMETER LIST ADDRESS                         *
*         REGISTER 2 - OLTCB ADDRESS                                  *
*         REGISTER 13 - SAVE AREA ADDRESS                             *
*         REGISTER 14 - RETURN ADDRESS                                *
*         REGISTER 15 - ENTRY POINT ADDRESS                           *
*                                                                     *
*    ENTRY POINTS QADDNDX,QADDAFX,QREMNDX,QREMFRX (QUEUE       @Y17XAUV
*    HANDLERS) : SEE CODE.                                     @Y17XAUV
*                                                              @Y17XAUV
* OUTPUT:                                                             *
*                                                              @Y17XAUV
*    FOR THE ALLOCBUF, FREEBUF, POSTWAIT, HIERSCAN, AND        @XM05672
*    QUEUE HANDLER SUBROUTINES, SEE THE SUBROUTINE COMMENTS.   @XM05672
*                                                              @Y17XAUV
*    IEDQWA: (WHEN CALLING IEDQWA1)                            @Y17XAUV
*                                                              @Y17XAUV
*         REGISTER 1 - PARAMETER LIST ADDRESS.                 @Y17XAUV
*         REGISTER 4 - TCAM AVT ADDRESS.                       @Y17XAUV
*                                                              @Y17XAUV
*    IEDQWA: (WHEN LINKING TO IEDQWB)                          @Y17XAUV
*                                                                     *
*    REGISTER 1 - PARAMETER LIST ADDRESS                        S22024*
*    REGISTER 2 - OLTCB ADDRESS                                       *
*                                                                     *
* EXITS,NORMAL:  BR 14 TO OPERATING SYSTEM.                    @Y17XAUV
*                                                                     *
* EXITS,ERROR:  NONE                                                  *
*                                                                     *
* EXTERNAL REFERENCES:                                         @Y17XAUV
*                                                              @Y17XAUV
*    ROUTINES =                                                @Y17XAUV
*                                                              @Y17XAUV
*    IEDQWA1 - TOTE INPUT DATA HANDLER MODULE                  @Y17XAUV
*    IEDQWN (IEDQW35) - EXIO SERVICE MODULE                    @Y17XAUV
*    IEDQWP (IEDQW39) - DPRINT SERVICE MODULE                  @Y17XAUV
*    IEDQWQ (IEDQW37) - CECOM SERVICE MODULE                   @Y17XAUV
*    IEDQWR (IEDQW28) - PLINK SERVICE MODULE                   @Y17XAUV
*    IEDQWS(IEDQW36) - WAITIO SERVICE MODULE                   @Y17XAUV
*    IEDQWV (IEDQW21,IEDQWAC) - GRAB/LETGO SERVICE MODULE      @Y17XAUV
*    IEDQWX (IEDQW41) - CONVERT SERVICE MODULE                 @Y17XAUV
*    IEDQWY (IEDQW16) - GETCONFG SERVICE MODULE                @Y17XAUV
*    IEDQWAA - $DDATE SERVICE MODULE                           @Y17XAUV
*    IEDQWAB - $DTIME SERVICE MODULE                           @Y17XAUV
*    IEDQWAJ - $CUTEST SERVICE MODULE                          @Y17XAUV
*    IEDQW25 - SEND SERVICE MODULE                             @Y17XAUV
*    IEDQW33 - RECEIVE SERVICE MODULE                          @Y17XAUV
*    IEDQW42 (IEDQW43) - FREECORE/MORECORE SERVICE MODULE      @Y17XAUV
*    IEDQW44 - DIO SERVICE MODULE                              @Y17XAUV
*    IEDQW47 - ROUTINE SERVICE MODULE                          @Y17XAUV
*                                                              @Y17XAUV
*    CONTROL BLOCKS =                                          @Y17XAUV
*                                                              @Y17XAUV
*    OLTCB,AVT,PRF,TRM,QCB,SCB,LCB,TCB,UCB,TPRIOR,IOBLOCKS     @Y17XAUV
*                                                              @Y17XAUV
*    MACROS =                                                  @Y17XAUV
*                                                              @Y17XAUV
*    AQCTL,DCB,DELETE,DETACH,FREEMAIN,GETMAIN,LOAD,POST,WAIT   @Y17XAUV
*                                                              @Y17XAUV
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              REGISTER EQUATES                                       *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                  WORK REGISTER
R1       EQU   1                  WORK REGISTER                @Y17XAUV
RPARM    EQU   1                  PARAMETER LIST ADDR          @Y17XAUV
R2       EQU   2                  ADDRESS OF ELEMENT BEING PROCESSED
R3       EQU   3                  WORK REGISTER
R4       EQU   4                  WORK REGISTER                @Y17XAUV
RAVT     EQU   4                  AVT BASE                     @Y17XAUV
R5       EQU   5                  WORK REGISTER
R6       EQU   6                  WORK REGISTER
R7       EQU   7                  WORK REGISTER
R8       EQU   8                  WORK REGISTER
R9       EQU   9                  WORK REGISTER
R10      EQU   10                 WORK REGISTER
R11      EQU   11                 BASE REGISTER
R12      EQU   12                 WORK REGISTER
R13      EQU   13                 SAVE AREA ADDRESS
R14      EQU   14                 RETURN ADDRESS
R15      EQU   15                 ENTRY POINT ADDRESS
         EJECT
**************************************************************** S22024
*                                                              * S22024
*                       MODULE EQUATES                         * S22024
*                                                              * S22024
**************************************************************** S22024
* EQUATES MOVED FROM THE END OF MODULE                           S22024
         SPACE 2
D0       EQU   0                  CONSTANT DISPLACEMENT
D1       EQU   1                  CONSTANT DISPLACEMENT
D2       EQU   2                  CONSTANT DISPLACEMENT
D3       EQU   3                  CONSTANT DISPLACEMENT
D4       EQU   4                  CONSTANT DISPLACEMENT
D5       EQU   5                  CONSTANT DISPLACEMENT
D6       EQU   6                  CONSTANT DISPLACEMENT
D7       EQU   7                  CONSTANT DISPLACEMENT
D8       EQU   8                  CONSTANT DISPLACEMENT
D11      EQU   11                 CONSTANT DISPLACEMENT
D12      EQU   12                 CONSTANT DISPLACEMENT
D16      EQU   16                 CONSTANT DISPLACEMENT          S22024
D17      EQU   17                 CONSTANT DISPLACEMENT
D18      EQU   18                 CONSTANT DISPLACEMENT
D19      EQU   19                 CONSTANT DISPLACEMENT          Y06330
D1C      EQU   X'1C'              CONSTANT DISPLACEMENT
D28      EQU   28                 CONSTANT DISPLACEMENT
D2C      EQU   X'2C'              CONSTANT DISPLACEMENT          Y06330
D30      EQU   30                 CONSTANT DISPLACEMENT
D20      EQU   20                 CONSTANT DISPLACEMENT        @Y17XAUV
D58      EQU   58                 CONSTANT DISPLACEMENT
D62      EQU   62                 CONSTANT DISPLACEMENT
D72      EQU   72                 CONSTANT DISPLACEMENT 72       S22024
D255     EQU   255                CONSTANT DISPLACEMENT 255    @Y17XAUV
D24      EQU   24                 CONSTANT DISPLACEMENT 24     @Y17XAUV
         SPACE 2                                               @Y17XAUV
X00      EQU   X'00'              USED TO ZERO A FIELD         @Y17XAUV
TICCODE  EQU   X'08'              TIC CCW COMMAND CODE         @Y17XAUV
WAITING  EQU   X'0C'              OLT WAITING FOR MORE CORE
PROCTRM  EQU   X'10'              TRM TO PROCESS CODE
XFF      EQU   X'FF'              USED TO CLEAR FLAG BITS
BLANK    EQU   X'40'              USED TO CLEAR A FIELD
SIXTEEN  EQU   16                 ADDRESS OF CVT
ANR      EQU   X'1E'              INDICATION IN LCB OF LOCAL RECEIVE
*                                   SCHEDULER
XF0      EQU   X'F0'              MOVED INTO LOCAL LCB BEFORE RETURNING
*                                   THE BUFFER
START    EQU   X'0C'              INDICATES START OF SVC 102
*                                   PARAMETER LIST
EIGHTY   EQU   X'80'              INDICATES END OF PARM LIST FOR
*                                   SVC 102
OPCKEY   EQU   X'00'              OP CONTROL KEY FIELD           S22024
OPCPRI   EQU   X'DC'              OP CONTROL PRIORITY            S22024
OPCRTCD  EQU   X'00'              OP CONTROL RETURN CODE FIELD   S22024
OPCELNG  EQU   X'18'              OP CONTROL ELEMENT LENGTH      S22024
LINESTRT EQU   X'40'              VERB CODE FOR START LINE       S22024
LINESTOP EQU   X'41'              STOP LINE VERB CODE            S22024
         EJECT                                                 @Y17XAUV
***********************************************************************
*                                                                     *
*        TOTE INITIALIZATION - TERMINATION                     @Y17XAUV
*                                                                     *
***********************************************************************
         SPACE 2                                               @Y17XAUV
         SAVE  (14,12)                                         @Y17XAUV
         LR    R12,R15            COPY ENTRY PT ADDR           @Y17XAUV
         USING IEDQWA,R12         SET MODULE BASE REG          @Y17XAUV
IEDQWA   IEDHJN IEDQWAA,HJN       ID,TIME,DATE                 @Y17XAUV
         ST    R13,REGSAVE+4      SAVE PTR TO TCAM SAVE AREA   @Y17XAUV
         LR    R14,R13            COPY                         @Y17XAUV
         LA    R13,REGSAVE        PTR TO TOTE SAVE AREA        @Y17XAUV
         ST    R13,D8(R14)        SAVE PTR TO TOTE SAVE AREA   @Y17XAUV
*                                  IN TCAM'S SAVE AREA         @Y17XAUV
         SPACE 2                                               @Y17XAUV
**********                                                     @Y17XAUV
*        INITIALIZATION                                        @Y17XAUV
**********                                                     @Y17XAUV
         LR    RAVT,RPARM         LOAD ADDR OF TCAM AVT        @Y17XAUV
         USING IEDQAVTD,RAVT                                   @Y17XAUV
         LA    R5,AVTOLTQB+4      ADDR OF TOTE ECB IN TOTE QCB @Y17XAUV
         ST    R5,RESTECBS        STORE IN WAIT PARM LIST      @Y17XAUV
         LA    R5,RESPL           LOAD ADDR OF RESPL           @YM07361
         ST    R5,AVTCWTOT        STORE IN TCAM AVT            @Y17XAUV
         LOAD  EP=IEDQWA1         LOAD INPUT DATA HANDLER      @Y17XAUV
         ST    R0,RESPLA1         COPY ENTRY POINT ADDR        @Y17XAUV
         SPACE 3                                               @Y17XAUV
RES005   EQU   *                                               @Y17XAUV
         WAIT  1,ECBLIST=RESTECBS WAIT FOR TOTE TASK REQUEST   @Y17XAUV
         XC    AVTOLTQB+D4(D4),AVTOLTQB+D4 CLEAR TOTE AVT ECB  @Y17XAUV
         XC    RESTECB1(D4),RESTECB1   CLEAR TOTE RESPL        @Y17XAUV
*
RES10A   EQU   *
         L     R2,RESOBQCB        GET FIRST ELEMENT IN OLT
*                                   ACTIVE QUEUE
         TM    AVTBIT1,AVTCLOSN   IS TCAM CLOSEDOWN IN PROGRESS?
         BZ    RES02              NO, CONTINUE
RES011   EQU   *
         USING TOTOBPTR,R2        SET UP ADDRESSIBILITY FOR OLTCB
         CLI   TOTELKEY,QENDKEY   IS OLT ACTIVE QUEUE EMPTY?
         BE    RESTERM            YES, GO EXIT TO TCAM         @Y17XAUV
         OI    TOTFLG04,TOTCLOSE  SET CLOSEDOWN IN PROGRES BIT   Y06330
         DETACH TOTTCBAD          DETACH ACTIVE SUBTASK          S05331
*
         L     R2,TOTELLNK-D1     GET NEXT OLTCB IN QUEUE
         B     RES011             BRANCH BACK AND EXAMINE NEXT OLTCB
         DROP  R2                 DROP OLTCB BASE
*
RES02    EQU   *
*                                                                     *
*        TEST OLT ACTIVE QUEUE                                        *
*                                                                     *
RES022   EQU   *
         USING TOTOBPTR,R2        SET UP ADDRESSIBILITY FOR OLTCB
         CLI   TOTELKEY,QENDKEY   IS OLT ACTIVE QUEUE EMPTY?
         BE    RES030             YES, GO CHECK TRM QUEUE
         MVI   RESWBFNC,WAITING   SET CODE FOR OLT WAITING
         TM    TOTFLG10,TOTOLTED+TOTOLTRS+TOTTNTRQ+TOTOLTWT  TEST
*                                 DOES SUBTASK NEED RESOURCES?
         BZ    RES25              NO - CHECK NEXT OLTCB        @Y17XAUV
         LA    R1,RESPL           RESIDENT PARM LIST           @Y17XAUV
         LINK  EP=IEDQWB          TOTE RESOURCE MANAGER        @Y17XAUV
         B     WBRTNL(R15)        BRANCH TO WB RETURN LIST     @Y17XAUV
WBRTNL   DS    0H                                              @Y17XAUV
         B     RES10A             RETURN TO QUEUE PROCESSING   @Y17XAUV
         B     RES005             WAIT ON ECB LIST             @Y17XAUV
         B     RESTERM            TERMINATE TOTE TASK          @Y17XAUV
RES25    DS    0H                                              @Y17XAUV
         L     R2,TOTELLNK-D1     GET NEXT OLTCB IN QUEUE
         B     RES022             BRANCH BACK AND EXAMINE NEXT OLTCB
         DROP  R2                 DROP OLTCB BASE
*
RES030   EQU   *
*                                                                     *
*        TEST TRM QUEUE                                               *
*                                                                     *
         MVI   RESWBFNC,PROCTRM   SET CODE FOR TRM PROCESSING
         CLC   AVTOLTQB+1(3),AVTDELAD+1 IS QUEUE EMPTRY        @YM07728
         BE    RES005             YES, GO WAIT FOR ANOTHER REQUEST
         SPACE 1                                               @Y17XAUV
         LA    RPARM,RESPL        PARAMETER                    @Y17XAUV
         L     R15,RESPLA1        ADDR OF INPUT DATA HANDLER   @Y17XAUV
         BALR  R14,R15            CALL INPUT DATA HANDLER      @Y17XAUV
         B     WA1RTNL(R15)       BRANCH TO WA1 RETURN LIST    @Y17XAUV
WA1RTNL  DS    0H                                              @Y17XAUV
         B     RES10A             GO CHECK IF OLTCB NEEDS      @Y17XAUV
*                                  RESOURCES                   @Y17XAUV
         B     RES005             GO WAIT ON ECB LIST          @Y17XAUV
         SPACE 1                                               @Y17XAUV
**********                                                     @Y17XAUV
*        TERMINATION                                           @Y17XAUV
**********                                                     @Y17XAUV
RESTERM  DS    0H                                              @Y17XAUV
         DELETE EP=IEDQWA1        DELETE INPUT DATA HANDLER    @Y17XAUV
         L     R13,D4(R13)        LOAD CALLER'S SAVE AREA      @Y17XAUV
         LM    R14,R12,D12(R13)   RESTORE REGS                 @Y17XAUV
         BR    14                 RETURN TO CALLER             @Y17XAUV
         EJECT                                                 @Y17XAUV
***********************************************************************
*                                                                     *
*        ALLOCATE BUFFER ROUTINE                               @Y17XAUV
*                                                              @Y17XAUV
*        INPUT  :  R0 - POINTS TO WORKAREA OF X'34' BYTES.     @Y17XAUV
*                  R1 - CONTAINS NUMBER OF UNITS TO GET.       @Y17XAUV
*                  R4 - POINTS TO TCAM AVT.                    @Y17XAUV
*                  R13,R14,R15 - STANDARD LINKAGE CONVENTIONS. @Y17XAUV
*                                                              @Y17XAUV
*        OUTPUT :  R1 - POINTS TO FIRST UNIT IN BUFFER.        @Y17XAUV
*                                                                     *
***********************************************************************
         SPACE 3                                               @Y17XAUV
ALLOCBUF DS    0H                                              @Y17XAUV
         STM   R14,R12,D12(R13)   SAVE REGS                    @Y17XAUV
         USING ALLOCBUF,R15       TEMPORARY BASE REG           @Y17XAUV
         L     R12,RESBASE        LOAD MODULE BASE REGISTER    @Y17XAUV
         DROP  R15                DROP R12 AS BASE             @Y17XAUV
         USING IEDQAVTD,R4        TCAM AVT BASE                @Y17XAUV
         USING IEDTTCD,R5         WORK AREA BASE               @Y17XAUV
         USING IEDQPRF,R6         BUFFER PREFIX BASE           @Y17XAUV
         USING IEDPF1,R8          NEG BUFFER PREFIX BASE       @Y17XAUV
         USING IEDQLCB,R11        LCB BASE                     @Y17XAUV
         LR    R5,R0              COPY WORKAREA ADDR           @Y17XAUV
*                                                              @Y17XAUV
*        OBTAIN LCB ADDR. FIELDS USED ARE CONTAINED IN         @Y17XAUV
*        WORKAREA.                                             @Y17XAUV
*                                                              @Y17XAUV
         LA    R11,TTCSTOFF       OFFSET FROM BEGINNING OF LCB @Y17XAUV
         LCR   R11,R11            MAKE NEGATIVE NUMBER         @Y17XAUV
         ALR   R11,R5             OBTAIN START OF DUMMY LCB    @Y17XAUV
*                                                              @Y17XAUV
*        SET UP ERB FOR BUFFER REQUEST                         @Y17XAUV
*                                                              @Y17XAUV
         LA    R6,AVTBFREB        SET BUFFER REQUEST           @Y17XAUV
         ST    R6,LCBERBQB-D1      QCB IN ERB                  @Y17XAUV
         MVI   LCBERBPY,PRIINTRQ  SET PRIORITY OF POST         @Y17XAUV
         XC    LCBERBLK(D7),LCBERBLK CLEAR LINK,STATUS,CHAIN   @Y17XAUV
         MVI   LCBERBST,D2        APPLICATION PROGRAM STATUS   @Y17XAUV
         MVI   LCBRBCT1,D1        NUMBER OF BUFFERS IS 1       @Y17XAUV
         STC   R1,LCBRBCT2        NUMBER OF UNITS              @Y17XAUV
*                                                              @Y17XAUV
         LA    R6,TTCQCB          PLACE ADDR OF WORKAREA'S     @Y17XAUV
         ST    R6,LCBRCQCB         QCB INTO THE LCB            @Y17XAUV
         XC    LCBSTAT1(D2),LCBSTAT1 CLEAR LCB STATUS FIELDS   @Y17XAUV
*                                                              @Y17XAUV
*        POST ERB AND WAIT FOR UNITS                           @Y17XAUV
*                                                              @Y17XAUV
         LA    R1,LCBERB          ADDR OF ERB                  @Y17XAUV
         ICM   R1,D8,ERBCODE      INDICATES ERB REQUEST        @Y17XAUV
         ST    R14,D0(R13)         SAVE RETURN REG             @Y17XAUV
         ST    R15,D4(R13)        SAVE ENTRY POINT             @Y17XAUV
         ST    R12,D8(R13)        SAVE BASE REG                @Y17XAUV
         LA    R15,POSTWAIT       GET ADDR OF POST WAIT ROUTINE@Y17XAUV
         L     R0,D20(R13)        RESTORE REGS 0               @Y17XAUV
         LM    R2,R12,D28(R13)    RESTORE REGS 2 - 12          @Y17XAUV
         BALR  R14,R15            POST ERB AND WAIT            @Y17XAUV
*                                                              @Y17XAUV
         L     R15,D4(R13)        RESTORE ENTRY POINT          @Y17XAUV
         L     R14,D0(R13)        RESTORE RETURN REG           @Y17XAUV
         STM   R14,R12,D12(R13)   SAVE REGS AGAIN              @Y17XAUV
         L     R12,D8(R13)        RESTORE BASE REG             @Y17XAUV
*                                                              @Y17XAUV
*        CLEAR EACH BUFFER UNIT EXCEPT FOR UNIT CONTROL AREA   @Y17XAUV
*                                                              @Y17XAUV
         LR    R5,R0              WORKAREA ADDRESSIBILITY      @Y17XAUV
         LR    R6,R1              COPY ADDR OF UNITS           @Y17XAUV
         SR    R9,R9              CLEAR                        @Y17XA7V
         TM    AVTSAVTF,AVTVTMCP  IS THERE NCP SUPPORT         @Y17XAUV
         BNO   NONCP              NO - BRANCH                  @Y17XAUV
         LA    R9,PRF1LEN         LENGTH OF NEG PREFIX         @Y17XAUV
         LCR   R9,R9              MAKE A NEG VALUE             @Y17XAUV
NONCP    DS    0H                                              @Y17XAUV
         SLR   R7,R7              CLEAR                        @Y17XAUV
         ICM   R7,D3,AVTKEYLE     GET UNIT SIZE                @Y17XAUV
         BCTR  R7,R0              DECREMENT FOR EXECUTE        @Y17XAUV
CLRBUFUT DS    0H                                              @Y17XAUV
         EX    R7,CLRINSTR        CLEAR UNIT                   @Y17XAUV
         LTR   R8,R9              DOES UNIT HAVE NEG PREFIX ?  @Y17XAUV
         BZ    CLRBRNCH           NO - BRANCH                  @Y17XAUV
         ALR   R8,R6              COPY ADDR OF BUFFER          @Y17XAUV
         XC    IEDPF1(PRF1LEN),IEDPF1 CLEAR NEG PREFIX         @Y17XAUV
CLRBRNCH DS    0H                                              @Y17XAUV
         L     R6,PRFTIC          LOAD TIC FIELD               @Y17XAUV
         EX    R6,CHKTIC          IS THIS THE LAST UNIT ?      @Y17XAUV
         BZ    CLRBUFUT           NO - CLEAR NEXT UNIT         @Y17XAUV
*                                                              @Y17XAUV
         LM    R14,R12,D12(R13)   RESTORE REGISTERS            @Y17XAUV
         BR    R14                RETURN                       @Y17XAUV
         DROP  R4                                              @Y17XAUV
         DROP  R5                                              @Y17XAUV
         DROP  R6                                              @Y17XAUV
         DROP  R8                                              @Y17XAUV
         DROP  R11                                             @Y17XAUV
         EJECT                                                 @Y17XAUV
***********************************************************************
*                                                                     *
*        FREE BUFFER ROUTINE                                   @Y17XAUV
*                                                              @Y17XAUV
*        INPUT  :  R0 - POINTS TO WORKAREA OF X'34' BYTES.     @Y17XAUV
*                  R1 - POINTS TO ONE BUFFER.                  @Y17XAUV
*                  R4 - POINTS TO TCAM ACT.                    @Y17XAUV
*                  R13,R14,R15 - STANDARD LINKAGE CONVENTIONS. @Y17XAUV
*                                                                     *
***********************************************************************
         SPACE 3                                               @Y17XAUV
FREEBUF  DS    0H                                              @Y17XAUV
*                                                              @Y17XAUV
         STM   R14,R12,D12(R13)   SAVE REGS                    @Y17XAUV
         LR    R5,R0              COPY WORKAREA ADDR           @Y17XAUV
         USING FREEBUF,R15        TEMPORARY BASE REG           @Y17XAUV
         L     R12,RESBASE        LOAD MODULE BASE ADDR        @Y17XAUV
         DROP  R15                DROP TEMPORARY               @Y17XAUV
         USING IEDQAVTD,R4        TCAM AVT                     @Y17XAUV
         USING IEDTTCD,R5         WORKAREA BASE                @Y17XAUV
*                                                              @Y17XAUV
*        COUNT NUMBER OF UNITS                                 @Y17XAUV
*                                                              @Y17XAUV
         USING IEDQPRF,R6         BUFFER PREFIX                @Y17XAUV
         LR    R6,R1              COPY ADDR OF 1ST UNIT        @Y17XAUV
         XC    PRFLINK(D3),PRFLINK INSURE CLEAR FOR POSTWAIT   @Y17XAUV
         SR    R7,R7              CLEAR FOR USE AS COUNTER     @Y17XAUV
NEXTUNIT DS    0H                                              @Y17XAUV
         EX    R6,CHKTIC          CHECK FOR INVALID TIC        @Y17XAUV
         BNZ   ENDBUF             BRANCH IF LAST UNIT          @Y17XAUV
         MVI   PRFTIC,TICCODE     SET TIC CCW CMND             @Y17XAUV
         L     R6,PRFTIC          POINT TO NEXT BUFFER UNIT    @Y17XAUV
         BCT   R7,NEXTUNIT        INCREMENT COUNT AS NEGATIVE  @Y17XAUV
         DROP  R6                                              @YM07685
*                                                              @Y17XAUV
ENDBUF   DS    0H                                              @Y17XAUV
         LPR   R7,R7              MAKE COUNT NON-NEGATIVE      @Y17XAUV
*                                                              @Y17XAUV
*        POST UNITS TO BUFFER RETURN                           @Y17XAUV
*                                                              @Y17XAUV
         USING IEDQPRF,R1         BASE ON FIRST UNIT           @Y17XAUV
         LA    R8,AVTBFRTB        PLACE QCB ADDR IN            @YM08007
         ST    R8,PRFQCBA-1        BUFFER PREFIX               @Y17XAUV
         MVI   PRFPRI,PRIBFRTB    SET POST PRIORITY            @Y17XAUV
         STC   R7,PRFNBUNT        SET NUMBER OF UNITS IN BUF   @Y17XAUV
         LA    R1,D0(R1)          INDICATE NO WAIT AFTER POST  @Y17XAUV
         ST    R14,D0(R13)        SAVE RETURN REG              @Y17XAUV
         ST    R15,D4(R13)        SAVE ENTRY POINT             @Y17XAUV
         ST    R12,D8(R13)        SAVE BASE REG                @Y17XAUV
         LA    R15,POSTWAIT       GET ADDR OF POST WAIT ROUTINE@Y17XAUV
         L     R0,D20(R13)        RESTORE REGS 0               @Y17XAUV
         LM    R2,R12,D28(R13)    RESTORE REGS 2 - 12          @Y17XAUV
         BALR  R14,R15            POST ERB AND WAIT            @Y17XAUV
*                                                              @Y17XAUV
         L     R15,D4(R13)        RESTORE ENTRY POINT          @Y17XAUV
         L     R14,D0(R13)        RESTORE RETURN REG           @Y17XAUV
         BR    R14                RETURN                       @Y17XAUV
         DROP  R1                                              @Y17XAUV
         DROP  R4                                              @Y17XAUV
         DROP  R5                                              @Y17XAUV
         EJECT                                                 @Y17XAUV
***********************************************************************
*                                                                     *
*        TOTE POST AND WAIT ROUTINE                            @Y17XAUV
*                                                              @Y17XAUV
*        INPUT  :  R0 - POINTS TO WORKAREA OF X'34' BYTES.     @Y17XAUV
*                  R1 - HIGH ORDER BYTE CONTAINS A CODE:       @Y17XAUV
*                       X'00' - NO WAIT IS NEEDED              @Y17XAUV
*                       X'80' - WAIT IS TO BE PERFORMED AND    @Y17XAUV
*                               GENERAL REQUEST ELEMENT IS     @Y17XAUV
*                               POINTED TO IN LOWER 3 BYTES    @Y17XAUV
*                       X'C0' - WAIT AND ERB IS POINTED TO     @Y17XAUV
*                       X'E0' - POST AND WAIT, NO ELEMENT IS   @Y17XAUV
*                               RETURNED                       @Y17XAUV
*                     - LOW ORDER 3 BYTES CONTAIN ELEMENT TO   @Y17XAUV
*                       BE POSTED.                             @Y17XAUV
*                  R4 - POINTS TO TCAM ACT.                    @Y17XAUV
*                  R13,R14,R15 - STANDARD LINKAGE CONVENTIONS. @Y17XAUV
*                                                              @Y17XAUV
*        OUTPUT :  R1 - POINTS TO THE ELEMENT BEING RETURNED   @Y17XAUV
*                       OR BUFFER UNITS IF INPUT WAS AN ERB.   @Y17XAUV
*                                                                     *
***********************************************************************
         SPACE 3                                               @Y17XAUV
POSTWAIT DS    0H                                              @Y17XAUV
         STM   R14,R12,D12(R13)   SAVE REGS                    @Y17XAUV
         LR    R5,R0              COPY WORKAREA ADDR           @YM07641
         USING IEDTTCD,R5         WORKAREA BASE                @Y17XAUV
         USING IEDQAVTD,R4        TCAM AVT                     @Y17XAUV
         USING IEDQPRF,R6         BUFFER PREFIX BASE           @Y17XAUV
         USING IEDREQD,R8         GENERAL REQUEST ELEMENT      @Y17XAUV
         USING IEDQLCB,R11        LINE CONTROL BLOCK           @YM07748
         USING POSTWAIT,R15       TEMPORARY BASE REG           @Y17XAUV
         L     R12,RESBASE        LOAD MODULE BASE REG         @Y17XAUV
         DROP  R15                DROP TEMPORARY BASE REG      @Y17XAUV
*                                                              @Y17XAUV
*        SET UP SVC 102 LIST                                   @Y17XAUV
*                                                              @Y17XAUV
         LA    R6,D0(R1)          COPY ADDR OF CHAIN OF ELMTS  @Y17XAUV
         ST    R6,TTCSVCW1        SET PTR TO FIRST IN PARM LIST@Y17XAUV
GETNEXT  DS    0H                                              @Y17XAUV
         CLC   PRFLINK(D3),WORD0  IS THIS ELMT LAST IN CHAIN ? @YM07735
         BZ    LASTUNIT           Y - BRANCH                   @Y17XAUV
         ICM   R6,D7,PRFLINK      POINT TO NEXT ELEMENT        @Y17XAUV
         B     GETNEXT                                         @Y17XAUV
LASTUNIT DS    0H                                              @Y17XAUV
         ST    R6,TTCLAST         SET PTR TO LAST IN PARM LIST @Y17XAUV
         MVI   TTCPCODE,TTCCHAIN  SET CODE FOR CHAIN POST      @Y17XAUV
*                                                              @Y17XAUV
*        SET UP QCB IF WAIT DESIRED                            @Y17XAUV
*                                                              @Y17XAUV
         LTR   R8,R1              COPY AND TEST WAIT BIT       @Y17XAUV
         BNM   POSTELMT           IF OFF - DON'T SET QCB       @Y17XAUV
         MVC   TTCQBELC-1(D4),AVTDELAD SET CHAIN PTR WITH DUMMY@Y17XAUV
         MVI   TTCQBFLG,D2        ATTACHED TASK QCB            @Y17XAUV
         XC    TTCQBECB(D4),TTCQBECB CLEAR ECB                 @Y17XAUV
         LA    R6,TTCQCB          LOAD ADDR OF DUMMY QCB       @Y17XAUV
         ST    R6,TTCQSTCB        POINT QCB TO SELF            @Y17XAUV
         CLM   R8,D8,CODEREQ      WAS INPUT A REQUEST ELEMT?   @Y17XAUV
         BNE   POSTELMT           NO - BRANCH                  @Y17XAUV
         STCM  R6,D7,REQRQCBA     SET AS RETURN QCB ADDR       @YM07770
*                                                              @Y17XAUV
*        SET UP SVC 102 PARM LIST AND POST ELEMENT             @Y17XAUV
*                                                              @Y17XAUV
POSTELMT DS    0H                                              @Y17XAUV
         LA    R1,TTCSVCPL        SET POINTER TO PARM LIST     @Y17XAUV
         AQCTL                    POST ELEMENT                 @Y17XAUV
*                                                              @Y17XAUV
         LTR   R8,R8              CHECK WAIT BIT               @Y17XAUV
         BNM   NOWAIT             BYPASS WAIT IF OFF           @Y17XAUV
*                                                              @Y17XAUV
         WAIT  ECB=TTCQBECB       WAIT                         @Y17XAUV
*                                                              @Y17XAUV
         CLM   R8,D8,ERBCODE      IS THIS FOR AN ERB ?         @YM07748
         BNE   NOTERB             NO - BRANCH                  @YM07748
         LA    R11,TTCSTOFF       OFFSET OF LCBRCQCB           @YM07748
         LCR   R11,R11            MAKE IT NEGATIVE             @YM07748
         ALR   R11,R5             START OF DUMMY LCB           @YM07748
         L     R1,LCBERBCH-1      POINT TO FIRST UNIT OF BUF   @YM07748
         LA    R1,0(R1)           CLEAR HI ORDER BYTE          @YM07748
         B     SAVELMPT           GO SAVE REG 1 IN SAVE AREA   @YM07748
NOTERB   DS    0H                 NOT ERB - QCB CHAIN POINTER  @YM07748
*                                  POINTS TO ELEMENT           @YM07748
         L     R1,TTCQBELC-D1     SET WITH ADDR OF ELEMENT     @Y17XAUV
         LA    R1,D0(R1)          CLEAR HIGH ORDER BYTE        @Y17XAUV
SAVELMPT DS    0H                                              @YM07748
         ST    R1,D24(R13)        STORE IN REG 1 SAVE LOCATION @Y17XAUV
NOWAIT   DS    0H                                              @Y17XAUV
         LM    R14,R12,D12(R13)   RESTORE REGS                 @Y17XAUV
         BR    R14                RETURN                       @Y17XAUV
         DROP  R4                                              @Y17XAUV
         DROP  R5                                              @Y17XAUV
         DROP  R6                                              @Y17XAUV
         DROP  R8                                              @Y17XAUV
         DROP  R11                                             @YM07748
         DROP  R12                                             @Y17XAUV
         EJECT                                                 @XM05672
***************************************************************@XM05672
*                                                              @XM05672
*        HIERARCHY SCAN ROUTINTE:                              @XM05672
*        THIS ROUTINE SCANS THE HIERARCHY UNDER A GIVEN        @XM05672
*        RESOURCE AND RESETS THE TOTE BITS.                    @XM05672
*        PARMS:  R1  = TTCIN OF GIVEN RESOURCE RIGHT JUSTIFIED @XM05672
*                R4  = AVT ADDRESS                             @XM05672
*                R13,R14,R15 = STANDARD LINKAGE                @XM05672
***************************************************************@XM05672
*                                                              @XM05672
*        REGSITER CONVENTIONS:                                 @XM05672
*        R1    = TTE BASE AND PARAMETER REGISTER               @XM05672
*        R4    = AVT BASE REGISTER                             @XM05672
*        R5    = LENGTH OF TTE NEGATIVE PREFIX                 @XM05672
*        R6    = TOP TTCIN                                     @XM05672
*        R7    = CURRENT TTCIN                                 @XM05672
*        R12   = BASE REGISTER                                 @XM05672
*        R13,R14,R15 = STANDARD USAGES                         @XM05672
*                                                              @XM05672
HIERSCAN DS    0H                                              @XM05672
         STM   R14,R12,12(R13)          SAVE REGS              @XM05672
         USING HIERSCAN,R15             SET TEMPORARY BASE     @XM05672
         L     R12,RESBASE              SET BASE REG           @XM05672
         DROP  R15                      DROP TEMPORARY BASE    @XM05672
         USING IEDQWA,R12               MODULE ADDRESSABILITY  @XM05672
         USING IEDNTRM,R1               TTE ADDRESSABILTIY     @XM05672
         USING IEDQAVTD,R4              AVT ADDRESSABILITY     @XM05672
         SLR   R7,R7                    CLEAR FOR TTCIN HOLD   @XM05672
         LR    R6,R1                    TOP TTCIN              @XM05672
         L     R15,AVTRNMPT             CONVERSION ROUTINE     @XM05672
         BALR  R14,R15                  CONVERT TTCIN TO TTE   @XM05672
         LA    R5,TRMPRFSZ              LENGTH OF NEG PREFIX   @XM05672
         SLR   R1,R5                    POINT TO NEG PREFIX    @XM05672
         BAL   R3,COMSWAP               TURN OFF TOTE FLAG     @XM05672
         ICM   R7,3,TRMSUBST            CURRENT TTINC=SUBSTRUCT@XM05672
         LTR   R7,R7                    Q-SUBSTRUCT ZERO       @XM05672
         BZ    HIEREND                  Y-NO INFERIOR RESOURCES@XM05672
*        LOOP THROUGH ALL RESOURCES UNDER TOP TTCIN            @XM05672
TOPLOOP  DS    0H                                              @XM05672
         CLR   R6,R7                    Q-TOP = CURRENT TTCIN  @XM05672
         BE    HIEREND                  Y-END OF HIER SCAN     @XM05672
         LR    R1,R7                    COPY CURRENT TTCIN     @XM05672
         L     R15,AVTRNMPT             CONVERSION ROUTINE     @XM05672
         BALR  R14,R15                  CONVERT TO TTE ADDR    @XM05672
         SLR   R1,R5                    POINT TO NEG PREFIX    @XM05672
         TM    TRMBYTE1,TRMSTOTE        Q-ALREADY RESET        @XM05672
         BNZ   CHKSUBST                 N-GO GET SUBSTRUCT     @XM05672
         ICM   R7,3,TRMCOHRT            CURRENT = COHORT       @XM05672
         B     TOPLOOP                  GO TO TOP OF LOOP      @XM05672
CHKSUBST DS    0H                                              @XM05672
         BAL   R3,COMSWAP               TOFF TOTE FLAG         @XM05672
         ICM   R7,3,TRMSUBST            GET SUBSTRUCT          @XM05672
         LTR   R7,R7                    Q-IS SUBSTRUCT ZERO    @XM05672
         BNZ   TOPLOOP                  N-GO TO TOP OF LOOP    @XM05672
         ICM   R7,3,TRMCOHRT            CURRENT = COHORT       @XM05672
         B     TOPLOOP                  GO TO TOP OF LOOP      @XM05672
HIEREND  DS    0H                                              @XM05672
         LM    R14,R12,12(R13)          RESTORE REGS           @XM05672
         BR    R14                      RETURN                 @XM05672
*                                                              @XM05672
*        TURN OFF TRMSTOTE BIT USING COMPARE AND SWAP INSTR    @XM05672
COMSWAP  DS    0H                                              @XM05672
         L     R10,TRMBYTE2             WORD WITH TRMSTOTE BIT @XM05672
SWAPLOOP DS    0H                                              @XM05672
         LR    R11,R10                  COPY WORD              @XM05672
         N     R11,TOTEOFF              TURN OFF TRMSTOTE      @XM05672
         CS    R10,R11,TRMBYTE2          AND STORE IN TTE      @XM05672
         BNE   SWAPLOOP                 BR IF UNSUCCESSFUL     @XM05672
         BR    R3                       RETURN                 @XM05672
         DROP  R12                                             @XM05672
         DROP  R1                                              @XM05672
         DROP  R4                                              @XM05672
         USING IEDQWA,R11                                      @Y17XAUV
         EJECT
***********************************************************************
*                                                                     *
*        OLT END OF TASK EXIT ROUTINE                                 *
*                                                                     *
***********************************************************************
         SPACE 2
OLTETXR  EQU   *
         STM   R14,R12,D12(R13)   SAVE CALLER'S REGISTERS
         USING OLTETXR,R15        SET UP BASE REGISTER
         L     R11,RESBASE        GET RESIDENT MODULE BASE
         DROP  R15                DROP BASE REGISTER
         USING TCBRBPA,R1         SET UP ADDRESSIBILITY FOR TCB
         L     R2,RESOBFWD        GET ADDRESS OF FIRST OLTCB IN QUEUE
ETXR04   EQU   *
         USING TOTOBPTR,R2        SET UP ADDRESSIBILITY FOR OLTCB
         CLI   TOTELKEY,QENDKEY   IS IT DUMMY LAST ELEMENT?
         BE    ETXR08             YES, BRANCH
         C     R1,TOTTCBAD        IS THIS THE CORRECT OLTCB?
         BE    ETXR06             YES, BRANCH
         L     R2,TOTELLNK-D1     GET NEXT OLTCB IN QUEUE
         B     ETXR04             GO EXAMINE NEXT OLTCB
ETXR06   EQU   *
         MVC   TOTCMPCD(D4),TCBCMPA  MOVE TASK COMPLETION CODE TO OLTCB
         DETACH TOTTCBAD          DETACH SUBTASK
         OI    TOTFLG10,TOTOLTED  SET OLT ENDED FLAG
         POST  RESTECB1           POST ECB
         DROP  R1                 DROP TCB BASE                  S22024
ETXR08   EQU   *                                                 S22024
         LM    R14,R12,D12(R13)   RESTORE CALLER'S REGISTERS     S22024
         BR    R14                RETURN TO CALLER               S22024
         EJECT
**************************************************************** S22024
*                                                              * S22024
*              OLT STAE EXIT ROUTINE                           * S22024
*                                                              * S22024
**************************************************************** S22024
         SPACE 2
STAERT   EQU   *                                                 S22024
         STM   R14,R12,D12(R13)   SAVE CALLER'S REGISTERS        S22024
         USING STAERT,R15         SET UP BASE                    S22024
         L     R11,RESBASE        GET RESIDENT MODULE BASE       S22024
         DROP  R15                DROP BASE REGISTER             S22024
         LA    R0,D72             GET LENGTH OF SAVE AREA        S22024
         GETMAIN  R,LV=(0)        GET CORE FOR SAVE AREA         S22024
         LR    R12,R1             SAVE AREA ADDRESS              S22024
         ST    R13,D4(R12)        SAVE CALLERS SAVE AREA ADDRESS S22024
         ST    R12,D8(R13)        SAVE ADDRESS OF STAE SAVE AREA S22024
         LR    R13,R12            MY SAVE AREA ADDRESS IN REG 13 S22024
         L     R2,RESOBFWD        GET ADDRESS OF FIRST OLTCB     S22024
*                                   IN QUEUE                     S22024
STAERT10 EQU   *                                                 S22024
         USING TOTOBPTR,R2        SET UP ADDRESSIBILITY FOR OLTCBS22024
         CLI   TOTELKEY,QENDKEY   IS IT DUMMY LAST ELEMENT?      S22024
         BE    STAERT30           YES, GO EXIT                   S22024
         L     R1,SIXTEEN         GET POINTER TO CVT             S22024
         L     R1,D0(R1)          GET ADDRESS OF TCB POINTERS    S22024
         L    R1,D4(R1)                GET ACTIVE TCB ADDRESS    S22024
         C     R1,TOTTCBAD        IS THIS THE CORRECT OLTCB?     S22024
         BE    STAERT20           YES, BRANCH                    S22024
         L     R2,TOTELLNK-D1     GET NEXT OLTCB IN QUEUE        S22024
         B     STAERT10           GO EXAMINE NEXT OLTCB          S22024
STAERT20 EQU   *                                                 S22024
         POST  TOTOTECB           POST TOTE SUBTASK ECB          Y06330
         POST  TOTPRECB           POST PRIMARY DEVICE ECB        Y06330
         POST  TOTSCECB           POST SECONDARY DEVICE ECB      Y06330
         TM    $OLTFLGS,$CLEANRT  DOES OLT HAVE A CLEANUP        S22024
*                                   ROUTINE?                     S22024
         BNO   STAERT30           NO, RETURN TO ABTERM           S22024
         OI    $EXECFLG,$CLEANUP  YES, SET SECTION ENTERED FOR   S22024
*                                   CLEANUP FLAG                 SI2024
         L     R15,TOTOLTEN       GET OLT ENTRY POINT ADDRESS    S22024
         L     R15,D12(R15)       GET OLT ACTUAL ENTRY POINT ADDRS22024
         LA    R1,TOTOLTPL        SET UP PARM LIST ADDRESS       S22024
         BALR  R14,R15            BRANCH TO OLT                  S22024
STAERT30 EQU   *                                                 S22024
         L     R13,D4(R13)             GET CALLERS SAVE AREA     S22024
         LR    R1,R12             GET ADDRESS OF CORE TO BE FREEDS22024
         LA    R0,D72             LENGTH OF CORE TO BE FREED     S22024
         FREEMAIN  R,LV=(0),A=(1)      FREE SAVE AREA            S22024
         LM    R14,R12,D12(R13)   RESTORE CALLER'S REGISTERS     S22024
         BR    R14                RETURN TO CALLER               S22024
         DROP  R2                 DROP OLTCB BASE                S22024
         DROP  R11                DROP R11 AS MODULE BASE REG  @Y17XAUV
         USING IEDQWA,R12         RESTORE R12 AS MODULE BASE   @Y17XAUV
         EJECT
**************************************************************** S22024
*
*        SERVICE MODULE MANAGER                                @Y17XAUV
*
***********************************************************************
*
SMGR     EQU   *
*
*        PERFORM INITIALIZATION
*
         STM   R14,R12,D12(R13)   SAVE CALLER'S REGISTERS
         USING TOTOLTCB,R2        SET UP ADDRESSIBILITY FOR OLTCB
         ST    R14,TOTSMGRT       SAVE CALLER'S RETURN ADDRESS
*                                   TO BE USED BY THE SERVICE MODULE
         USING SMGR,R15
         L     R12,RESBASE        SET UP BASE REGISTER
         DROP  R15
         ST    R1,TOTPARML        SAVE ADDRESS OF PARAMETER     SA41612
*                                   LIST                        SA41612
         LA    R5,TOTSAVE3        GET SERVICE MANAGER SAVE AREA
*                                   ADDRESS
         ST    R13,D4(R5)         SAVE ADDRESS OF CALLER'S SAVE AREA
         ST    R5,D8(R13)         SAVE ADDRESS OF SERVICE MANAGER'S
*                                   SAVE AREA
         LR    R13,R5             PUT SAVE AREA ADDRESS INTO REG 13
         SPACE 2
         TM    TOTFLG06,TOTWACAN  IS CANCEL REQUEST PENDING FLAG SET?
         BZ    XMGR00             NO, BRANCH
         NI    TOTFLG06,XFF-TOTWACAN  YES, TURN OFF CANCEL REQUEST
*                                       PENDING FLAG
SMGR002  EQU   *
         TM    $OLTFLGS,$CLEANRT  DOES OLT HAVE A CLEANUP ROUTINE?
         BNO   EXIT               NO, BRANCH TO IEDQWF
         OI    $EXECFLG,$CLEANUP  YES, SET SECTION ENTERED FOR
*                                   CLEANUP FLAG
         L     R3,TOTOLTEN        GET START OF OLT               S05331
         USING PSPREF,R3          SET UP BASE FOR SECTION PREFACES05331
         LH    R14,RTNDISP        GET DISPLACEMENT TO ROUTINE    S05331
         AR    R14,R3             GET ADDRESS OF ROUTINE         S05331
         USING SPREF,R14          SET UP BASE FOR RTN PREFACE    S05331
         TM    #FLAG,#MSGIDRQ     MESSAGE ID PROVIDED?           S05331
         BZ    NOID               NO, BRANCH                     S05331
         MVC   $MSGIDAC(D2),MSGID MOVE ID FROM SECTION PREFACE   S05331
*                                   TO SCT                       S05331
NOID     EQU   *                                                 S05331
         LA    R13,TOTSAVE4       GET ADDRESS OF IEDQWF'S SAVE AREA
         LM    R14,R12,D12(R13)   RESTORE IEDQWF'S REGISTERS
         BR    R15                BRANCH TO OLT
         SPACE 1
EXIT     EQU   *
         LA    R13,TOTSAVE4       GET TEST CONTROL SAVE ADDRESS
         LM    R14,R12,D12(R13)   RESTORE TEST CONTROL REGISTERS
         LA    R15,D1             SET RETURN CODE TO 1
         BR    R14                RETURN TO IEDQWF TO CANCEL TEST
*                                   FOR TERMINATION
         SPACE 1
XMGR00   EQU   *
         LR    R5,R1              SAVE PARAMETER LIST ADDRESS
         USING XMGRPARM,R5        SET UP ADDRESSIBILITY FOR PARM LIST
*
         TM    TOTFLG02,XFF       ARE ANY SERVICE FLAGS SET?
         BZ    RTN005             NO, BRANCH                     S22024
SMGR02   EQU   *
         TM    TOTFLG06,TOTNCMFG  NON-CONCURRENT MODE ASKED?
         BO    RTN005             YES, BYPASS START LINE
         L     R8,TOTPARML              GET PARM LIST ADDR     @YA11128
         CLC   D2(D2,R8),MODRTN         IS THIS A ROUTINE MACRO@Y17XAUV
         BE    RTN005                   LET QW47 DO STARTLINE  @YA11128
         TM    $TOTFLG1,$LINESHR  IS LINE SHARING REQUESTED?
         BZ    RTN005             NO, DO NOT START LINE
         USING IOBLOCKS,R7        SET UP ADDRESSIBILITY FOR IOBLOCKS
         L     R7,TOTSAVE5        GET ADDRESS OF CURRENT        SA41599
*                                   PRIMARY TEST DEVICE         SA41599
         TM    D0(R7),TOTTDLST    WAS LINE INITIALLY STOPPED?   SA41599
         BO    RTN005             YES, DO NOT START LINE        SA41599
         TM    D0(R7),TOTTDORN    IS TEST DEVICE ON 3705?        S22024
         BO    RTN005             YES, BYPASS STARTLINE          S22024
         LA    R7,TOTPRIBK        SET UP TO START PRIMARY LINE
         BAL   R8,STRTLINE        START PRIMARY LINE
         B     RTN004A            SEE IF SECONDARY LINE SHOULD
*                                   BE STARTED
         SPACE 2
***********************************************************************
*                                                                     *
*        START LINE VIA TCAM'S OP-CONTROL FACILITY                    *
*                                                                     *
***********************************************************************
STRTLINE EQU   *
         STM   R6,R12,STRTSAVE    SAVE REGS DURING STARTLINE
         MVI   TOTOVBCD,LINESTRT  MOVE IN STARTLINE VERB CODE    S22024
         L     R6,TOTAVTPT        GET ADDRESS OF AVT
         USING IEDQAVTD,R6        SET UP ADDRESSIBILITY FOR AVT
         LA    R10,AVTOPCOB       GET POINTER TO OP CONTROL QCB
         ST    R10,TOTOKEY        PUT IN PARAMETER LIST          S22024
         MVI   TOTOKEY,OPCKEY     SET KEY TO ZERO                S22024
         MVI   TOTOELNG,OPCELNG   SET ELEMENT LENGTH TO X'18'    S22024
         MVI   TOTOPRI,OPCPRI     SET OP CONTROL PRIORITY OF 'DC'S22024
         MVI   TOTORTCD,OPCRTCD   ZERO OUT RETURN CODE FIELD     S22024
         DROP  R6                 DROP AVT BASE
         MVC   TOTORLN,OLTTCRLN   MOVE IN RELATIVE LINE NUMBER   S22024
         SLR   R6,R6              CLEAR                        @G36XRUV
         ICM   R6,D3,OLTUCBA      GET ADDRESS OF UCB           @G36XRUV
         LTR   R6,R6              IS THERE A VALID UCB ADDRESS?
         BZ    RTN005             NO, DON'T TRY TO ISSUE STARTLINE
         USING UCB,R6             SET UP ADDRESSIBILITY FOR UCB
         MVI   TOTOLADR,BLANK     MOVE BLANK INTO NAME FIELD     S22024
         MVC   TOTOLADR+D1(D7),TOTOLADR  BLANK OUT NAME FIELD    SI2024
         MVC   TOTOLADR(D3),UCBNAME  GET UNIT NAME               S22024
         DROP  R6                 DROP UCB BASE
         LA    R1,TOTOTECB        GET TOTE ECB ADDRESS
         ST    R1,TOTOECBA        PUT IT IN PARAMETER LIST       S22024
         LA    R1,TOTPLIST        GET ADDRESS OF OPERATOR CONTROLS22024
*                                   PARAMETER LIST               S22024
         ST    R1,ELEM1           STROE ADDRESS IN 1ST WORD OF   S22024
*                                   SVC 102 POST LIST            S22024
         ST    R1,ELEM2           STORE ADDRESS IN 2ND WORD OF   S22024
*                                   SVC 102 POST LIST            S22024
         MVI   ELEM1,START        SET SVC 102 ACTION CODE        S22024
         MVI   ELEM2,EIGHTY       SET END OF LIST INDICATOR      S22024
         XC    TOTOLINK(D3),TOTOLINK  CLEAR REQUEST ELEMENT      S22024
*                                       LINK FIELD               S22024
         LA    R1,ELEM1                 POINT TO SVC POST LIST @YA11128
         XC    TOTOTECB(D4),TOTOTECB  CLEAR TOTE ECB
         AQCTL                    POST ELEMENT TO OPERATOR CONTROL
         WAIT  ECB=TOTOTECB       WAIT ON OPERATOR CONTROL TO          X
                                    HONOR REQUEST
         SPACE 1
         LM    R6,R12,STRTSAVE    RESTORE REGS FROM STARTLINE
         BR    R8                 RETURN TO CALLER
         SPACE 1
RTN004A  EQU   *
         L     R7,TOTGRABP        GET ADDRESS OF CURRENT        SA41599
*                                   SECONDARY TEST DEVICE       SA41599
         TM    D0(R7),TOTTDLST    WAS LINE INITIALLY STOPPED?   SA41599
         BO    RTN005             YES, DO NOT START LINE        SA41599
         TM    D0(R7),TOTTDORN    IS TEST DEVICE ON 3705?        S22024
         BO    RTN005             YES, BYPASS STARTLINE          S22024
         LA    R7,TOTSCIBK        SET UP TO START SECONDARY LINE
         BAL   R8,STRTLINE        START SECONDARY LINE
         DROP  R7                 DROP IOBLOCKS BASE
         SPACE 2
RTN005   EQU   *
         NI    $TOTFLG1,XFF-$LINESHR    TURN OFF LINE SHARE    @YA11128
         LA    R8,TOTSERV         ADDR OF SERVICE MOD WORKAREA @Y17XAUV
         LR    R10,R8             COPY                         @Y17XAUV
         LA    R9,L'TOTSERV       LENGTH OF WORKAREA           @Y17XAUV
         SR    R11,R11            MOVE OF 0 AND PAD OF 0       @Y17XAUV
         MVCL  R8,R10             CLEAR WORKAREA               @Y17XAUV
         SPACE 1                                               @Y17XAUV
*        FIND ADDR OF SERVICE ROUTINE IN RESPL AND BALR        @Y17XAUV
         SPACE 1                                               @Y17XAUV
         SR    R8,R8              CLEAR LOOP CONTROL REG       @Y17XAUV
         LA    R9,MODIDTAB        ADDR OF MODULE ID TABLE      @Y17XAUV
         LA    R10,MODIDEND       ADDR OF END OF TABLE         @Y17XAUV
         USING MODIDMAP,R9        BASE TABLE ENTRY DSECT       @Y17XAUV
CHKLOOP  DS    0H                 LOOP UNTIL FIND ID MATCH OR  @Y17XAUV
*                                  REACH END OF TABLE          @Y17XAUV
         LTR   R8,R8              TERMINATE LOOP ?             @Y17XAUV
         BP    EXITOLT            Y - GO RETURN TO OLT         @Y17XAUV
         CR    R9,R10             END OF TABLE REACHED ?       @Y17XAUV
         BNE   CHKID              N - CHECK FOR ID MATCH       @Y17XAUV
         LA    R8,1               SET TO EXIT LOOP             @Y17XAUV
         B     ENDCHKLP           BRANCH TO END OF LOOP        @Y17XAUV
CHKID    DS    0H                 CHECK FOR ID MATCH           @Y17XARV
         CLC   MODID(L'MODID),XMGRCODE                         @Y17XAUV
*                                 IS ENTRY IN MODULE ID TABLE  @Y17XAUV
*                                  THE SAME AS ID IN PARM LIST?@Y17XAUV
         BE    FNDMATCH           Y - GO CALL SERVICE MODULE   @Y17XAUV
         LA    R9,D3(R9)          INCREMENT MODULE ID TAB      @Y17XAUV
*                                  ENTRY POINTER               @Y17XAUV
         B     ENDCHKLP           BRANCH TO END OF LOOP        @Y17XAUV
FNDMATCH DS    0H                 FOUND MATCH                  @Y17XAUV
         LA    R8,1               SET TO GET OUT OF LOOP       @Y17XAUV
         LA    R10,RESPLADR       LOAD ADDR OF SERVICE MODULE  @Y17XAUV
*                                  ADDR LIST IN RESPL          @Y17XAUV
         SR    R7,R7              CLEAR AND                    @Y17XAUV
         IC    R7,MODINDEX         OBTAIN OFFSET INTO ADDR     @Y17XAUV
*                                  LIST FOR THIS MODULE        @Y17XAUV
         AR    R10,R7             POINT TO ENTRY IN LIST FOR   @Y17XAUV
*                                  THIS MODULE                 @Y17XAUV
         L     R15,D0(R10)        LOAD ENTRY POINT FOR SERVICE @Y17XAUV
*                                  MODULE                      @Y17XAUV
         L     R1,TOTPARML        RESIDENT PARAMETER LIST      @Y17XAUV
         BALR  R14,R15            CALL SERVICE MODULE          @Y17XAUV
ENDCHKLP DS    0H                 END OF LOOP                  @Y17XAUV
         B     CHKLOOP            BRANCH TO TOP OF LOOP        @Y17XAUV
         DROP  R9                                              @Y17XAUV
         SPACE 1
EXITOLT  EQU   *
         L     R13,D4(R13)        GET CALLER'S SAVE AREA ADDRESS
         L     R14,TOTSMGRT       RESTORE CALLER'S RETURN ADDRESS
         LM    R2,R12,D28(R13)    RESTORE CALLER'S REGISTERS
         BR    R14                RETURN TO CALLER
         DROP  R2                 DROP OLTCB BASE
         EJECT
***********************************************************************
*                                                                     *
*        TOTE QUEUE HANDLERS                                          *
*                                                                     *
***********************************************************************
         SPACE 5
QADDND   EQU   *
         LA    R15,QADDNDX        SET UP QUEUE HANDLER BASE
QADDNDX  EQU   *
*
*        ADD ELEMENT TO END OF QUEUE
*             INPUT   REGISTER R2 POINTS TO ELEMENT TO BE ADDED
*
         USING QADDNDX,R15
         USING QEL,R2
         L     R1,QELQCB-D1       GET QCB ADDRESS
         DROP  R2
QADDE20  EQU   *
         USING TQCB,R1
         L     R3,TQCBLINK-D1     GET NEXT ELEMENT ADDRESS
         LA    R3,D0(R3)          CLEAR HIGH ORDER BYTE          S22024
         USING QEL,R3
         LTR   R3,R3              IS LINK FIELD ZERO?
         BZ    QADD40             YES, GO ADD NEW ELEMENT
*                                   TO QUEUE
         CLI   QELKEY,QENDKEY     IS IT DUMMY LAST ELEMENT?
         BE    QADD40             YES, GO ADD NEW ELEMENT
*                                   TO QUEUE
         DROP  R1
         LA    R1,QELLINK-D1      NO, GET ADDRESS OF LINK FIELD
         DROP  R3
         B     QADDE20            BRANCH BACK AND EXAMINE NEXT ELEMENT
         DROP  R15
         SPACE 5
QADDAF   EQU   *
         LA    R15,QADDAFX        SET UP QUEUE HANDLER BASE
QADDAFX  EQU   *
*
*        INSERT AFTER SPECIFIED ELEMENT
*
         USING QADDAFX,R15
QADD40   EQU   *
         USING QEL,R2
         USING TQCB,R1
         MVC   QELLINK(D3),TQCBLINK  SET NEW ELEMENT LINK FIELD
         STCM  R2,D7,TQCBLINK     SET PREVIOUS LINK FIELD      @G36XRUV
         BR    R10                RETURN TO CALLER
         DROP  R15
         SPACE 5
QREMEL   EQU   *
         LA    R15,QREMELX        SET UP QUEUE HANDLER BASE
QREMELX  EQU   *
*
*        REMOVE DESIGNATED ELEMENT FROM QUEUE
*             INPUT   REGISTER R2 CONTAINS ELEMENT ADDRESS
*             OUTPUT  REGISTER R2 CONTAINS ELEMENT ADDRESS
*
         USING QREMELX,R15
         LR    R3,R2              SAVE ELEMENT ADDR FOR COMPARE
         USING QEL,R3
         L     R1,QELQCB-D1       GET QCB ADDRESS
         DROP  R3
QREMA20  EQU   *
         USING TQCB,R1
         L     R2,TQCBLINK-D1     GET NEXT ELEMENT ADDRESS
         USING QEL,R2
         LA    R2,D0(R2)          CLEAR HIGH ORDER
         LA    R3,D0(R3)            BYTES FOR COMPARE
         CR    R2,R3              IS IT THE CORRECT ELEMENT?
         BE    QREM40             YES, GO REMOVE IT FROM QUEUE
         LA    R1,QELLINK-D1      NO, GET ADDRESS OF LINK FIELD
         B     QREMA20            GO EXAMINE NEXT ELEMENT
         DROP  R1
         DROP  R2
         DROP  R15
         SPACE 5
QREMFR   EQU   *
         LA    R15,QREMFRX        SET UP QUEUE HANDLER BASE
QREMFRX  EQU   *
*
*        REMOVE FIRST ELEMENT FROM QUEUE
*             INPUT   REGISTER R1 CONTAINS QCB ADDRESS
*             OUTPUT  REGISTER R2 CONTAINS REMOVED ELEMENT
*
         USING QREMFRX,R15
         USING TQCB,R1
         L     R2,TQCBLINK-D1     GET NEXT ELEMENT ADDRESS
         USING QEL,R2
         CLI   QELKEY,QENDKEY     IS IT DUMMY LAST ELEMENT?
         BNE   QREM40             NO, REMOVE FROM QUEUE
*                                 YES, SET ERROR CODE
         DROP  R1
         DROP  R2
         SPACE 5
QREM30   EQU   *
         LA    R1,QERROR          SET ERROR CODE
         BR    R10                RETURN TO CALLER
         SPACE 5
QREM40   EQU   *
         USING QEL,R2
         USING TQCB,R1
         MVC   TQCBLINK(D3),QELLINK REMOVE ELEMENT FROM QUEUE
         DROP  R1
         DROP  R2
         BR    R10                RETURN TO CALLER
         DROP  R15
         EJECT
RESPL    RESPL DSECT=NO,EQUATES=NO
         EJECT
REGSAVE  DS    18F                REGISTER SAVE AREA
RESBASE  DC    A(IEDQWA)          THIS MODULE BASE ADDRESS
ELEM1    DS    F                  POINTER TO 1ST ELEMENT         S22024
ELEM2    DS    F                  POINTER TO 2ND ELEMENT         S22024
STRTSAVE DS    7F                 SAVE AREA FOR START LINE       S22024
*                                   ROUTINE                      S22024
         SPACE
TOTEOFF  DS    0F                 USED TO COMPARE AND SWAP     @XM05672
         DC    X'FF'                    TRMSTOTE OFF           @XM05672
         DC    AL1(255-TRMSTOTE)                               @XM05672
         DC    X'FFFF'                                         @XM05672
WORD0    DC    XL4'00000000'      WORD OF ZEROS                @Y17XAUV
         DS    0H                 ALIGNMENT                    @Y17XAUV
CHKTIC   TM    INVALTIC,D0        USED TO CHECK FOR INVALID TIC@Y17XAUV
CLRINSTR XC    D12(D0,R6),D12(R6) CLEAR UNIT                   @Y17XAUV
INVALTIC DC    XL1'03'            BITS INDICATING INVALID TIC  @Y17XAUV
ERBCODE  DC    XL1'C0'            ERB CODE FOR POSTWAIT ROUTINE@Y17XAUV
CODEREQ  DC    XL1'80'            CODE FOR GEN REQEST ELEMENT  @Y17XAUV
PATCH    DC    CL90' '            MAINTAINANCE AREA
         EJECT
***********************************************************************
*                                                                     *
*        MODULE ID TABLE                                              *
*                                                                     *
***********************************************************************
MODAB    EQU   RESPLAB-RESPLADR                                @Y17XAUV
MODAJ    EQU   RESPLAJ-RESPLADR                                @Y17XAUV
MOD35    EQU   RESPL35-RESPLADR                                @Y17XAUV
MODAA    EQU   RESPLAA-RESPLADR                                @Y17XAUV
MOD39    EQU   RESPL39-RESPLADR                                @Y17XAUV
MODP1    EQU   RESPLP1-RESPLADR                                @Y17XAUV
MODP2    EQU   RESPLP2-RESPLADR                                @Y17XAUV
MOD37    EQU   RESPL37-RESPLADR                                @Y17XAUV
MOD28    EQU   RESPL28-RESPLADR                                @Y17XAUV
MOD36    EQU   RESPL36-RESPLADR                                @Y17XAUV
MODAC    EQU   RESPLAC-RESPLADR                                @Y17XAUV
MOD21    EQU   RESPL21-RESPLADR                                @Y17XAUV
MOD41    EQU   RESPL41-RESPLADR                                @Y17XAUV
MOD16    EQU   RESPL16-RESPLADR                                @Y17XAUV
MOD42    EQU   RESPL42-RESPLADR                                @Y17XAUV
MOD43    EQU   RESPL43-RESPLADR                                @Y17XAUV
MOD44    EQU   RESPL44-RESPLADR                                @Y17XAUV
MOD47    EQU   RESPL47-RESPLADR                                @Y17XAUV
MODM2    EQU   RESPLM2-RESPLADR                                @Y17XAUV
MOD25    EQU   RESPL25-RESPLADR                                @Y17XAUV
MOD33    EQU   RESPL33-RESPLADR                                @Y17XAUV
MODIDTAB DS    0H                 EACH ENTRY CONTAINS MODULE ID@Y17XAUV
*                                  AND OFFSET INTO RESPL       @Y17XAUV
*                                  SERVICE MOD ADDR LIST       @Y17XAUV
         DC    CL2'AB',AL1(MODAB) DATE ROUTINE                 @Y17XAUV
         DC    CL2'AJ',AL1(MODAJ) $CUTEST ROUTINE              @Y17XAUV
         DC    CL2'35',AL1(MOD35) EXIO ROUTINE                 @Y17XAUV
         DC    CL2'AA',AL1(MODAA) TIME ROUTINE                 @Y17XAUV
         DC    CL2'39',AL1(MOD39) DPRINT ROUTINE LOAD 1        @Y17XAUV
         DC    CL2'P1',AL1(MODP1) DPRINT ROUTINE LOAD 2        @Y17XAUV
         DC    CL2'P2',AL1(MODP2) DPRINT ROUTINE LOAD 3        @Y17XAUV
         DC    CL2'37',AL1(MOD37) CECOM ROUTINE                @Y17XAUV
         DC    CL2'28',AL1(MOD28) PLINK ROUTINE                @Y17XAUV
         DC    CL2'36',AL1(MOD36) WAITIO ROUTINE               @Y17XAUV
         DC    CL2'AC',AL1(MODAC) $GRAB ROUTINE                @Y17XAUV
         DC    CL2'21',AL1(MOD21) $LETGO ROUTINE               @Y17XAUV
         DC    CL2'41',AL1(MOD41) CONVERT ROUTINE              @Y17XAUV
         DC    CL2'16',AL1(MOD16) GETCONFIG ROUTINE            @Y17XAUV
         DC    CL2'42',AL1(MOD42) MORECORE ROUTINE             @Y17XAUV
         DC    CL2'43',AL1(MOD43) FREECORE ROUTINE             @Y17XAUV
         DC    CL2'44',AL1(MOD44) DIO ROUTINE                  @Y17XAUV
MODRTN   DC    CL2'47',AL1(MOD47) ROUTINE ROUTINE              @Y17XAUV
         DC    CL2'M2',AL1(MODM2) TRACE/RETURN CODE ROUTINE    @Y17XAUV
         DC    CL2'25',AL1(MOD25) SEND ROUTINE                 @Y17XAUV
         DC    CL2'33',AL1(MOD33) RECEIVE ROUTINE              @Y17XAUV
MODIDEND EQU   *                                               @Y17XAUV
         SPACE 2                                               @Y17XAUV
         SPACE 2                                               @Y17XAUV
***********************************************************************
*                                                                     *
*        MODULE ID TABLE ENTRY MAP                             @Y17XAUV
*                                                                     *
***********************************************************************
MODIDMAP DSECT                                                 @Y17XAUV
MODID    DS    CL2                MODULE ID                    @Y17XAUV
MODINDEX DS    CL1                INDEX INTO RESPL ADDR LIST   @Y17XAUV
         EJECT
TQCB     DSECT
TQCBKEY  DS    C .           QCB KEY FIELD
TQCBLINK DS    AL3 .         QUEUE CONTROL BLOCK LINK FIELD
         SPACE 5
QEL      DSECT
QELKEY   DS    C .           QUEUE ELEMENT KEY
QELQCB   DS    AL3 .         ADDRESS OF QCB
         DS    C                  UNUSED
QELLINK  DS    AL3 .         ELEMENT LINK FIELD
QELSIZE  DS    H .           ELEMENT SIZE
*
QENDKEY  EQU   X'00' .       DUMMY LAST ELEMENT KEY
QERROR   EQU   X'FF' .       QUEUE HANDLER ERROR CODE
         SPACE 3
PSPREF   DSECT                    SECTION PREFACE                S05331
SECTID   DS    CL8                SECTION ID                     S05331
LEVEL    DS    CL2                LEVEL                          S05331
RTNDISP  DS    AL2                DISPLACEMENT TO RTN #          S05331
INST     DS    A                  POINTER TO FIRST EXECUTABLE    S05331
*                                   INSTRUCTION                  S05331
MSGID    DS    CL2                OLT COMPONENT ID               S05331
         SPACE 3
SPREF    DSECT                    ROUTINE PREFIX                 S05331
RTN#     DS    CL1                ROUTINE NUMBER                 S05331
         DS    CL15               SECTION PREFACE FLAGS/DATA     S05331
#FLAG    DS    CL1                FLAGS                          S05331
#MSGIDRQ EQU   X'10'              MESSAGE ID PROVIDED            S05331
         EJECT
**************************************************************** S05331
*                                                              * S05331
*        CONTROL TERMINAL OR ALTERNATE PRINTER DEVICE ENTRY    * S05331
*                                                              * S05331
**************************************************************** S05331
         SPACE 2
DEVENTRY DSECT                    DEVICE ENTRY DSECT             S05331
ENTUCB   DS    AL2                UCB ADDRESS                    S05331
ENTRSID  DS    H                  RESOURCE ID OF DEVICE          S05331
ENTRLN   DS    C                  RELATIVE LINE NUMBER           S05331
ENTLCB   DS    AL3                LCB ADDRESS                    S05331
ENTTNT   DS    F                  TERMINAL NAME TABLE ENTRY      S05331
*                                   ADDRESS (DUMMY ENTRY)        S05331
ENTRTNT  DS    F                  TERMINAL NAME TABLE ENTRY      S05331
*                                   ADDRESS (REAL ENTRY)         S05331
ENTTLN   DS    H                  LENGTH OF TTE AREA             S05331
ENTFLAG  DS    C                  FLAGS                          S05331
ENTASN   EQU   X'80'              DUMMY ENTRY ASSIGNED           S05331
ENTORN   EQU   X'40'              DEVICE ON A 3705               S05331
ENTACT   EQU   X'20'              ACTIVATE REQUIRED              S05331
ENTSTR   EQU   X'10'              START LINE REQUIRED            S05331
ENTDISC  EQU   X'08'              DISCONNECT SESSION REQUIRED    S05331
ENTRESET EQU   X'04'              RESET ERROR LOCK REQUIRED      S05331
ENT1RS   EQU   X'02'              FIRST RESET ERROR LOCK ISSUED  S05331
         EJECT
TCBRBPA  DSECT
         DS    4F                 UNUSED
TCBCMPA  DS    F             TASK COMPLETION CODE
         DS    2F                 UNUSED
         DS    C                  UNUSED
TCBFLGSA DS    5C            TCB FLAGS
ABEND    EQU   X'80'                   ABEND CODE
         ORG   TCBRBPA+X'71'      RESET INSTRUCTION COUNTER
TCBFSAA  DS    AL3(0)        ADDRESS OF 1ST PROGRAM SAVE AREA
         EJECT
*
*        TRANSIENT MANAGER PARAMETERS
*
XMGRPARM DSECT
XMGRIND  DS    CL1                TRANSIENT MANAGER INDICATORS
XMGRLEV  DS    CL1                MACRO LEVEL
XMGRCODE DS    CL2                MODULE CODE
         SPACE 5
         EJECT
         TAVTD
         EJECT
         TPRFD
         EJECT
         TTRMD
         EJECT
         TQCBD                                                   S99528
         EJECT
         OLTCB POINTER=YES
         EJECT
         TSCBD
         EJECT
         TLCBD
         EJECT
         TTTCD
         EJECT
         TREQD
         EJECT
         TTCBD
         EJECT
         IOBLOCKS
         EJECT                                                   S99528
UCB      DSECT
         IEFUCBOB
         CVT                      CVT DSECT                      S22024
         EJECT                                                   S99528
         TPRIOR
         EJECT
         TTNTD                    TERMNAME TABLE DSECT           Y06330
         EJECT
         END
