          TITLE 'IEDQND-READY ROUTINE'
IEDQND   CSECT
*A-000000-999999                                               @X31X8N0
         SPACE 3                                                 S21903
*CHANGE ACTIVITY= AS FOLLOWS:
******************** MICROFICHE FLAGS *********************** SUPT CODE
*C676000-678000                                                  S22026
*A849000                                                         S22026
*A444000                                                         A42401
*C138000                                                         A42401
*C134000,166000,224000,576000,836000,839200                      S22025
*C074000                                                        SA53627
*C012000                                                         S21903
*D114000,212000                                                  S21903
*C712000,842000                                                 SA59006
*A618290,844500                                                 SA58457
*C004250-005950,016000                                          SA58457
*A674200-675800                                                  S22024
*C094000-126000,618140-618160,618260,851000                      S22024
*    CLEAN-UP                                                    S21903
*A692000,842000                                                 SA63007
*C 618390                                                       SA63993
*C128700,618140,618160,618260                                    S05331
*A250000,276000,298000,528000                                  @SA67132
*C302000,534000,541000                                         @SA67132
*A240500                                                       @OS76514
*A250600,556600                                                @ZA06155
*C676500                                                       @OY12667
*A680000                                                       @OY14058
*D240450-240500                                                @OS77945
*    TCAM LEVEL 10.0 MVS CHANGES                               @G36XRNP
*A035100,051200,055300,128630,129890,208000,242000,670000      @G36XRNP
*A812000,839200,816200                                         @G36XRNP
*C016000,020000,022000,618140,666000                           @G36XRNP
*A128840,508000,828000                                         @OZ26495
*C445200                                                       @OZ26495
*D055200-055300,214000,670200-670800,857000                    @G36XRNP
*                                                              @G36XRNP
*D246000-250000,534000,556920                                  @OY19771
*A251801-251803,534000,556961                                  @OY19771
*A444000,508120                                                @OY20722
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE-NAME= IEDQND  (TCAM,INITIALIZATION)                    @G36XRNP
*                                                                S21903
*DESCRIPTIVE-NAME= READY ROUTINE                                 S21903
*                                                                S21903
*COPYRIGHT= 'NONE'                                               S21903
*                                                                     *
*STATUS: CHANGE LEVEL 10.0                                     @G36XRNP
*                                                                     *
*FUNCTION:THIS MODULE CHECKS FOR CHECKPOINT OR ON-LINE-TEST OPTIONS   *
*   SPECIFIED AND PERFORMS ASSOCIATED FUNCTIONS.  IF EITHER    @G36XRNP
*   THE TCAM CHECKPOINT DCB OR A 3705 CHECKPOINT               @G36XRNP
*   DCB HAS BEEN OPENED, THIS MODULE ATTACHES THE CHECKPOINT          *
*   EXECUTOR AND SETS UP REGISTERS IN AVTSAVE2 SO THAT THE TCAM       *
*   DISPATCHER WILL PUT THE ENVIRONMENT CHECKPOINT REQUEST ELEMENT    *
*   ON THE READY QUEUE.  IF ON-LINE-TEST HAS BEEN SPECIFIED ON INTRO  *
*   THIS MODULE CHECKS FOR SUFFICIENT CORE FOR IT TO PERFORM ITS      *
*   FUNCTIONS.                                                        *
*                                                                     *
*        IF A RESTART IS BEING PERFORMED, THE OPERATOR CONTROL        *
*   INCIDENT RECORDS RECORDED AFTER THE LAST ENVIRONMENT              *
*   CHECKPOINT ARE SENT TO OPERATOR CONTROL TO BE PROCESSED           *
*   AGAIN.  START LINE AND STOP LINE COMMANDS ARE IGNORED AT          *
*   THIS POINT SINCE THOSE FUNCTIONS WERE PERFORMED DURING OPEN       *
*   PROCESSING.  IF AN I/O ERROR OCCURS WHILE READING THE             *
*   INCIDENT RECORDS OR IF THERE IS NOT ENOUGH CORE AVAILABLE         *
*   TO READ THE RECORDS, THE TELEPROCESSING CONSOLE OPERATOR IS       *
*   NOTIFIED VIA A WRITE-TO-OPERATOR AND THE INCIDENT RECORD IS       *
*   IGNORED.                                                          *
*                                                                     *
*        IEDQND LINKS TO IEDIAB TO PERFORM INITIATION OF NAT,  @G36XRNP
*   PLCB AND SIB POOLS, SAT, AND THE HOST SUBAREA RVT.  IT     @G36XRNP
*   ALSO LINKS TO IGCFD10D TO DEACTIVATE THE TERMINAL          @G36XRNP
*   HIERARCHIES.                                               @G36XRNP
*                                                              @G36XRNP
*        270X TERMINAL DESTINATION QCBS SPECIFYING CLOCK/CINTVL@G36XRNP
*   ARE PLACED ON THE TIME DELAY QUEUE.                        @G36XRNP
*                                                              @G36XRNP
*ENTRY POINT:                                                         *
*                                                                     *
*        IEDQND                                                       *
*                                                                     *
*INPUT:REGISTER 13 HAS THE ADDRESS OF THE AVT.                        *
*                                                                     *
*OUTPUT:THE ADDRESS OF THE OPERATOR CONTROL INCIDENT RECORD TO        *
*   BE PROCESSED IS PLACED IN THE FIELD NAMED OPCCOPCE IN THE         *
*   OPERATOR CONTROL AVT.                                             *
*                                                                     *
*EXTERNAL REFERENCES:                                                 *
*        ROUTINES -                                            @G36XRNP
*               IEDQTNT (TTCIN TO TTE CONVERSION ROUTINE)      @G36XRNP
*               IEDQTL (DEV DEPENDENT FIELDS LOOKUP ROUTINE)   @G36XRNP
*               IEDQCA(RESIDENT OP CTL ROUTINE)ACTIVATED VIA A @G36XRNP
*               POST SVC.                                      @G36XRNP
*               IEDIAB(PLCB,NAT,SAT,RVT INITIATION)            @G36XRNP
*               IGCFD10D(DEACTIVATE HIERARCHY)                 @G36XRNP
*        MACROS -                                                     *
*              (IEDHJN)
*        SVC 0 (EXCP)                                                 *
*        SVC 1 (WAIT)                                                 *
*        SVC 2 (POST)                                                 *
*        SVC 4 (GETMAIN)                                              *
*        SVC 5 (FREEMAIN)                                             *
*        SVC 8 (LOAD)                                                 *
*        SVC 10 (GETMAIN)                                             *
*        SVC 10 (FREEMAIN)                                            *
*        SVC 11 (TIME)                                                *
*        SVC 35 (WTO)                                                 *
*        SVC 42 (ATTACH)                                              *
*        SVC  6 (LINK)
*                                                                     *
*MODULE TYPE = PROCEDURE                                       @G36XRNP
*                                                              @G36XRNP
*PROCESSOR = ASSEMBLER XF                                      @G36XRNP
*                                                              @G36XRNP
*MODULE SIZE = THERE IS NO SIZE RESTRICTIONS.                  @G36XRNP
*                                                              @G36XRNP
*PURPOSE = SEE FUNCTION                                        @G36XRNP
*                                                              @G36XRNP
*LINKAGE = THIS ROUTINE IS LINKED (SVC 6) TO FROM              @G36XRNP
*          THE READY MACRO GENERATION IN THE MCP.              @G36XRNP
*                                                              @G36XRNP
*EXITS-NORMAL:THIS MODULE RETURNS TO THE ADDRESS IN R14               *
*                                                                     *
*EXITS-ERROR:NONE                                                     *
*                                                                     *
*TABLES/WORKAREAS:                                                    *
*        AVT                                                          *
*        CVT                                                   @Z30X8NJ
*        DEB                                                   @Z30X8NJ
*        DCB                                                          *
*        QCB                                                          *
*        TSO QCB                                                      *
*        TERMINAL ENTRY                                        @Z30X8NJ
*        TERMNAME TABLE                                        @Z30X8NJ
*        PRIORITY DSECT                                        @Z30X8NJ
*        TCX                                                   @Z30X8NJ
*        CHECKPOINT WORKAREA                                          *
*        CHECKPOINT INCIDENT RECORD DSECT                             *
*        OPERATOR CONTROL AVT                                         *
*        OPERATOR CONTROL ELEMENT DSECT                               *
*                                                                     *
*ATTRIBUTES: REUSABLE                                           SA53627
*                                                                     *
*NOTES = SEE BELOW                                             @G36XRNP
* DEPENDENCIES =                                               @G36XRNP
*      THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDIFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DIEFINITIONS.              *
*                                                                     *
* RESTRICTIONS = NONE                                          @G36XRNP
*                                                              @G36XRNP
* REGISTER CONVENTIONS = SEE REGISTER ASSIGNMENT               @G36XRNP
*                                                              @G36XRNP
* PATCH = THE SYMBOLIC NAME IS PATCH.                          @G36XRNP
*                                                              @G36XRNP
***********************************************************************
         EJECT                                                   S21903
R0       EQU   0                        REG 0                    S22024
R1       EQU   1                        REG 1                    S22024
R2       EQU   2                        REG 2                    S22024
R3       EQU   3                        REG 3                    S22024
R4       EQU   4                        REG 4                    S22024
R5       EQU   5                        REG 5                    S22024
R6       EQU   6                        REG 6                    S22024
R7       EQU   7                        REG 7                    S22024
R8       EQU   8                        REG 8                    S22024
RTERM    EQU   8                        ADDRESS OF TERM ENTRY    S22024
R9       EQU   9                        REG 9                    S22024
R10      EQU   10                       REG 10                   S22024
R11      EQU   11                       REG 11                   S22024
R12      EQU   12                       REG 12                   S22024
R13      EQU   13                       REG 13                   S22024
R14      EQU   14                       REG 14                   S22024
R15      EQU   15                       REG 15                   S22024
         SPACE 3
HALF     EQU   32                       THIRTY TWO               S22024
LOWEQ    EQU   X'0A'                    CC OF LOW OR EQUAL      SA59006
ONE      EQU   1                        ONE                      S22024
ZERO     EQU   0                        CONSTANT VALUE           S99528
EIGHT    EQU   8                        REG 8 EQU
ECMODE   EQU   X'20'                    EXTENDED CONTROL MODE   SA58457
TEN      EQU   10                       CONSTANT VALUE           S99528
TWO      EQU   2                        COUNT OF TWO             S21903
THREE    EQU   3                        LENGTH VALUE            SA63007
DREG2    EQU   16                       DISPLACEMENT TO REG 2  @G36XRNP
QNDOLTST EQU   18                       MIN VALUE FOR OLTEST     S05331
X10      EQU   X'10'                    HEX 10                   S21903
X40      EQU   X'40'                    HEX 40                   S21903
X60      EQU   X'60'                    HEX 60                 @OZ26495
X20      EQU   X'20'                    HEX 20                 @OZ26495
SIXTEN   EQU   16                       CONSTANT               @OZ26495
X41      EQU   X'41'                    HEX 41                   S21903
X70      EQU   X'70'                    HEX 70                   S21903
X7F      EQU   X'7F'                    HEX 7F                   S21903
X80      EQU   X'80'                    HEX 80                   S21903
XD0      EQU   X'D0'                    HEX D0                   S21903
XE0      EQU   X'E0'                    HEX E0                   S21903
XFC      EQU   X'FC'                    HEX FC                   S21903
XFE      EQU   X'FE'                    HEX FE                   S21903
XFF      EQU   X'FF'                    HEX FF                   S21903
L1       EQU   1                        LENGTH OF 1              S21903
L2       EQU   2                        LENGTH OF 2              S21903
L3       EQU   3                        LENGTH OF 3              S21903
L4       EQU   4                        LENGTH OF 4              S21903
L6       EQU   6                        LENGTH OF 6              S21903
L8       EQU   8                        LENGTH OF 8              S21903
CHECKPT  EQU   X'20'                    TCAM CKPT DCB FLAG     @G36XRNP
ADDRMSK  EQU   7                        ADDRESS MASK           @G36XRNP
*STANDARD LINKAGE
         USING *,R15                    BASE REG
IEDQND  IEDHJN QND00                                             S22025
         USING IEDQAVTD,R13             BASE FOR AVT
         STM   R14,R12,12(R13)          SAVE REGS
         LR    R12,R15                  BASE REG
         DROP  R15
         USING IEDQND,R12
         SPACE 3
         SPACE 3
*CHECK TO DETERMINE IF THE CHECKPOINT DCB WAS OPENED
         SPACE
         TM    AVTCKFLG,AVTCKTAC        TCAM CKPT ACTIVE       @G36XRNP
         BO    QND20                    BRANCH IF OPENED       @G36XRNP
         MVI   AVTCKECA,X40             POST COMPLETION ECB SINCES21903*
                                        CKPT WILL NEVER TERMINATE
         B     QND79                    CHECK FOR 3705 CKPT    @G36XRNP
         SPACE
QND20    EQU   *                                               @G36XRNP
*                                                              @G36XRNP
*        FIND TCAM CHECKPOINT DCB ADDRESS                      @G36XRNP
*                                                              @G36XRNP
         L     R1,AVTTCB                GET TCAM TCB ADDRESS   @G36XRNP
         USING IEDQTCB,R1               SET ADDRESSABILITY     @G36XRNP
         L     R1,TCBDEB                GET FIRST DEB ADDRESS  @G36XRNP
         DROP  R1                                              @G36XRNP
         USING DEBNMSUB,R1              SET ADDRESSABILITY     @G36XRNP
         USING IHADCB,R2                SET ADDRESSABILITY     @G36XRNP
QND35    EQU   *                                               @G36XRNP
         L     R2,DEBDCBAD              GET DCB ADDRESS        @G36XRNP
         TM    DCBDSRG2,DCBDSGTQ        IS THIS A TCAM QUEUE   @G36XRNP
*                                       DATA SET               @G36XRNP
         BZ    QND37                    NO, BRANCH             @G36XRNP
         TM    DCBOPTCD,CHECKPT         TCAM CKPT DCB          @G36XRNP
         BO    QND40                    YES                    @G36XRNP
QND37    EQU   *                                               @G36XRNP
         L     R1,DEBDEBAD              GET NEXT DEB ADDRESS   @G36XRNP
         B     QND35                    CONTINUE SEARCH FOR    @G36XRNP
*                                       TCAM CKPT DCB          @G36XRNP
QND40    EQU   *                                               @G36XRNP
         L     R2,DCBIOBAD              GET CKPT WORK AREA     @G36XRNP
*                                       ADDRESS                @G36XRNP
         DROP  R1                                              @G36XRNP
         DROP  R2                                              @G36XRNP
         SPACE 3
*THE LATEST TOTAL ENVIRONMENT RECORD HAS BEEN USED TO UPDATE THE
*TAM TABLES. USE THE INCIDENT RECORDS TAKEN AFTER THE TOTAL TO
*UPDATE THE TABLES FURTHER.
         SPACE
QND56    EQU   *                                                   0803
         USING IEDQCKPD,R2              BASE FOR CKPT WORK AREA
         USING IEDQCDRD,R11             BASE FOR DISK RECORD
         MVI   CKPSWCH2,0               INITIALIZE INVITATN LST SW 0911
         SPACE 3
*PUT ENVIRONMENT REQUEST ELEMENT IN DISPATCHERS REG 1 SO IT WILL BE1002
*PUT ON READY QUEUE WHEN DISPATCHER GETS CONTROL
         SPACE
         LA    R15,AVTCKELE             ADDRESS OF CKPT ELEMENT
         ST    R15,AVTSAVE2+24          STORE INTO REG1 POSITION       X
                                        FOR DISPATCHER
         OI    AVTCKELF,AVTCRTLN        TURN ON CHECKPOINT     @OS76514
*                                        REQUEST BIT           @OS76514
         MVI   AVTCKELE,X70             SET KEY FIELD            S21903
         MVI   AVTCKELE+4,PRICKPT       PRIORITY OF CHECKPOINT ELEM
         SPACE 3
*CHECK FOR SYSTEM DELAY SPECIFIED AND LOAD IEDQHI IF NECESSARY
*IF SYSTEM DELAY  WAS IN EFFECT AT TIME OF LAST CHECKPOINT,TURN OFF1002
*THE BIT AND PUT A REQUEST ELEMENT ON THE READY QUEUE  FOR THE
*SYSTEM DELAY ROUTINE.
         SPACE
         LH    R1,AVTINTLV              GET SYSTEM INTERVAL        0826
         LTR   R1,R1                    CHECK FOR ZERO             0826
         BZ    QND57                    BRANCH IF STILL ZERO       0115
         L     R1,AVTHI                 ADDR OF SYSTEM DELAY RTN   0826
         LTR   R1,R1                    CHECK FOR RTN LOADED       0826
         BNZ   QND57                    BRANCH ID ALREADY LOADED   0115
         LOAD  EP=IEDQHI                LOAD SYSTEM DELAY RTN      0826
         ST    R0,AVTHI                 SAVE ADDR OF RTN           0826
         SPACE 3
*SEE  IF IT IS NECESSARY TO READ INCIDENT RECORDS FOR OPERATOR CONTL
         SPACE
QND57    EQU   *                                                   1002
         TM    AVTBIT2,AVTSTRTN         CHECK FOR RESTART          0804
         BZ    QND79                    BRANCH IF NOT RESTARTING   0804
         L     R15,AVTTCB               GET TCAM TCB ADDRESS   @G36XRNP
         LA    R15,FOUR(R15)            POINT TO FIRST DEB-4   @G36XRNP
FOUR     EQU   4                        CONSTANT OF FOUR       @G36XRNP
         USING DEBNMSUB,R15                                    @G36XRNP
DEBLOOP  EQU   *                                               @G36XRNP
         L     R15,DEBDEBAD             GET NEXT DEB ADDRESS   @G36XRNP
         LA    R15,AVTEZERO(R15)        CLEAR HIGH ORDER BYTE  @G36XRNP
         LTR   R15,R15                  CHECK FOR END OF CHAIN @G36XRNP
         BZ    QND5750                  YES, EXIT              @G36XRNP
         L     R14,DEBDCBAD             GET DCB ADDRESS        @G36XRNP
         USING IHADCB,R14                                      @G36XRNP
         TM    DCBDSRG2,DCBDSGTR        IS THIS A 3705 DCB     @G36XRNP
         BZ    DEBLOOP                  NO, RELOOP             @G36XRNP
         LR    R1,R14                   GET 3705 DCB ADDRESS   @G36XRNP
         BAL   R7,QND90                 GET 3705 NCP TTE ADDR  @G36XRNP
*        REG 1 HAS 3705 NCP TTE ADDRESS                        @G36XRNP
         LA    R0,TRMNCPI               SET MASK TO GET ADDR   @G36XRNP
*                                       OF NCP DEVICE DEP FLD  @G36XRNP
         BAL   R7,QND95                 GET 3705 NCP DEVICE    @G36XRNP
*                                       DEP FIELDS ADDRESS     @G36XRNP
         LR    R11,R1                   SAVE NCP DEVICE DEP    @G36XRNP
*                                       FIELDS ADDRESS         @G36XRNP
         USING IEDNCP,R1                SET ADDRESSABILITY     @G36XRNP
         ICM   R1,ADDRMSK,NCPCKPT+1     GET 3705 CKPT DCB ADDR @G36XRNP
         BZ    DEBLOOP                  NO CKP DCB, BRANCH     @G36XRNP
         TM    DCBOFLGS-IHADCB(R1),DCBOFOPN DCB OPENED         @G36XRNP
         BZ    DEBLOOP                  NO, RETURN             @G36XRNP
         ICM   R8,7,DCBIOBAD+1-IHADCB(R1) GET CKP WORKAREA ADR @G36XRNP
         BZ    DEBLOOP                  NOT OPEN, RETURN       @G36XRNP
         CLI   CKPBCKUP-IEDQCKPD(R8),AVTEZERO WAS BACKUP       @G36XRNP
*                                       CHANGED                @G36XRNP
         BE    DEBLOOP                  NO, RETURN             @G36XRNP
         STM   R2,R15,CKPSAVE2          SAVE REGISTERS         @G36XRNP
         LR    R7,R2                    SAVE CKP WORKAREA BASE @G36XRNP
         LR    R4,R13                   AVT ADDR FOR DCB LOOKUP@G36XRNP
         LA    R3,AVTSAVE3+12           DUMMY OPCE ADDRESS     @G36XRNP
         L     R2,AVTOCGET              OP CTL AVT ADDRESS     @G36XRNP
         MVC   OPCDOUBL-IEDQOPCD(L8,R2),CKPBCKUP-IEDQCKPD(R8)  @G36XRNP
*                                       SET DDNAME FOR LOOKUP  @G36XRNP
         LA    R13,AVTSAVE4+12          SAVE AREA FOR LOOKUP   @G36XRNP
         L     R15,OPCTOFLK-IEDQOPCD(R2) GET DCB LOOKUP ADDR   @G36XRNP
         BALR  R14,R15                  LINK TO GET DCB ADDR   @G36XRNP
         B     PROCESS                  GOOD RETURN            @G36XRNP
         SR    R1,R1                    BAD RETURN             @G36XRNP
PROCESS  EQU   *                                               @G36XRNP
         LR    R2,R7                    RESTORE WORK AREA BASE @G36XRNP
         LM    R2,R15,CKPSAVE2          RESTORE REGISTERS      @G36XRNP
         LTR   R1,R1                    WAS DCB OPEN           @G36XRNP
         BZ    DEBLOOP                  NO, RETURN             @G36XRNP
         L     R1,TRMDESTQ-1-IEDQTRM(R1) GET QCB ADDRESS       @G36XRNP
         L     R1,QCBDCBAD-1-IEDQQCB(R1) GET DCB ADDRESS       @G36XRNP
         TM    DCBOFLGS-IHADCB(R1),DCBOFOPN IS DCB OPEN        @G36XRNP
         BZ    DEBLOOP                  NO, GET NEXT DEB       @G36XRNP
         LR    R1,R11                   RESTORE 3705 NCP DEV   @G36XRNP
*                                       DEP FIELDS ADDRESS     @G36XRNP
         MVC   NCPBKUPN(L8),CKPBCKUP-IEDQCKPD(R8) SET BACKUP   @G36XRNP
*                                       DDNAME                 @G36XRNP
         DROP  R1                                              @G36XRNP
         B     DEBLOOP                  AND RETURN             @G36XRNP
         DROP  R14                                             @G36XRNP
         DROP  R15                                             @G36XRNP
QND5750  EQU   *                                               @G36XRNP
         LA    R14,CKPINRNO             RECORDS ON FIRST TRACK @SA67132
         SR    R1,R1                    CLEAR FOR IC           @SA67132
         IC    R1,CKPINCNT              COUNT OF INCIDENTS     @SA67132
         BCTR  R1,R0                    DECREMENT INCIDENT     @ZA06155
*                                        COUNT BY ONE          @ZA06155
         L     R15,CKPTTRIN-1           FIRST RECORD ADDRESS   @SA67132
FINDLAST EQU   *                                               @SA67132
         BAL   R7,GETNEXT               GET NEXT RECORD ADDR   @SA67132
         LR    R15,R0                   SAVE RECORD ADDRESS    @SA67132
         BCT   R1,FINDLAST              RELOOP                 @SA67132
         ST    R0,AVTPARM               SAVE LAST RECORD ADDR+1@SA67132
         TM    CKPFLAGS,CKPOPCRD        CHECK FOR OP CONTROL   @OY19771
*                                       INCIDENT REC TO PROCESS@OY19771
         BZ    QND78                    BRANCH IF NO OPC       @OY19771
         NI    CKPFLAGS,X'FF'-CKPOPCRD  TURN OFF OPC BIT           0804
         MVC   CKPTRKLN,CKPSECLI        GET TRK DATA LENGTH 0416 S21101
         L     R0,CKPTTRLI-1            GET  TTR OF LAST INCIDENT  0814
         LA    R14,CKPIPERT             NO. OF INC RCDS ON FULL TRA0814
         CLC   CKPTTRIN(2),CKPTTRLI     CHECK FOR RCD ON 1ST TRACK 0814
         BNE   QND7605                  BRANCH IF NOT ON 1ST TRACK 0929
         LA    R14,CKPINRNO             NO. OF INC RCDS ON 1ST TRK 0814
         B     QND7605                  GET NEXT RCD               0925
         SPACE 3
*CONVERT RELATIVE TTR TO ABSOLUTE DISK ADDRESS AND READ THE RECORD
*INCIDENT RECORD.
         SPACE
QND58    EQU   *                                                   0805
         C     R0,AVTPARM               CHECK FOR LAST RECORD  @SA67132
         BNL   LASTREC                  LAST RECORD ALREAD RD @SA67132
*                                        RESET TO FIRST RECORD @SA67132
         STM   R0,R14,CKPSAVE2          SAVE REGS
         L     R15,16                   GET CVT
         L     R15,28(0,R15)            GET CONVERSION ROUTINE
         LR    R3,R2                    SAVE WORK AREA BASE
         LM    R1,R2,CKPCPARM           GET DEB AND CONVERSN RESULT
         SLL   R0,8                     POSITION TTR
         BALR  R14,R15                  BRANCH TO CONVERT ROUTINE
         LR    R2,R3                    RESTORE BASE               0716
         LM    R0,R14,CKPSAVE2          RESTORE REGS               0716
         LTR   R15,R15                  CHECK FOR END OF DATA SET
         BZ    QND59                    BRANCH IF NOT END OF DATAST0814
LASTREC  EQU   *                                               @SA67132
         NC    CKPTTRLI,CKPTTRLI        CHECK FOR LAST INC RCD-WRAP0925
         BZ    QND7603                  BRANCH IF WRAP REACHED   S99240
QND5805  EQU   *                                                   0814
         L     R15,CKPTTRIN-1           GET FIRST REC ADDR     @SA67132
         LA    R0,0(R15)                CLEAR HI ORDER BYTE    @SA67132
         LA    R14,CKPINRNO             NO. OF INC RCDS ON 1ST TRK 0814
         MVC   CKPTRKLN,CKPSECIN        TRK LN-1ST INC RCD  0416 S21101
         B     QND58                    READ RCD                   0814
         SPACE
QND59    EQU   *                                                   0814
         CLI   CKPSETSC,CKPNOOP         CHECK FOR RPS FEATURE416 S21101
         BE    QND595                   BRANCH IF NOT PRESENT416 S21101
         LH    R0,CKPTRKLN              GET TRK DATA LENGTH 0416 S21101
         O     R0,QNDFLAG-2             SET FLAG FOR CNVRT  0507 S21101
         SLL   R0,CKP2BYTE              LOW ORDER HALF WORD 0416 S21101
         IC    R0,CKPIOR                GET RECORD NUMBER   0416 S21101
         L     R13,CKPCVTPT             GET CVT ADDRESS     0416 S21101
         L     R15,CKPCNSEC(,R13)       SECTOR CNVRT RTN AD 0416 S21101
         LR    R13,R2                   SAVE CKPT BASE      0416 S21101
         L     R2,CKPPARM2              UCB INDEX AND ADDR 0416 S21101
         BALR  R14,R15                  GET SECTOR ID       0416 S21101
         LR    R2,R13                   RESTORE CKPT BASE   0416 S21101
QND595   EQU   *                                            0416 S21101
         EXCP  CKPIOB                   START READ OPERATION
         SPACE
         WAIT  ECB=CKPECB               WAIT FOR COMPLETION
         SPACE
         LM    R0,R14,CKPSAVE2          RESTORE REGS
         L     R11,CKPEXCP              GET ADDRESS OF RECORD
         TM    CKPECB,X7F               CHECK FOR DISK ERROR     S21903
         BO    QND60                    BRANCH IF NO ERROR         0804
         SPACE 3
*DISK ERROR
         SPACE
         LR    R3,R0                    SAVE TTR
         WTO   'IED085I CHECKPOINT DISK ERROR-INCIDENT RECORD IGNORED',X
               ROUTCDE=11,DESC=4                                   0807
         LR    R0,R3                    RESTORE TTR
         L     R3,AVTOCGET              GET OP CTL AVT ADDRESS   S99240
QND596   XC    CDRTTRLI,CDRTTRLI        ZERO LINK FIELD          S99240
         OI    CDRTTRLI+2,2             SET AS LAST SEGMENT      S99240
         B     QND66                    GO FREE PREVIOUS         S99240
*                                        CONTINUATION SEGMENTS   S99240
         SPACE 3
*DETERMINE TYPE OF INCIDENT RECORD AND PROCESS
         SPACE
QND60    EQU   *                                                   0804
         USING IEDQCDRD,R11
         CLC   CDRDATE(8),CKPDATIM      COMPARE TIME OF INC., TOTAL
         BNH   QND77                    BRANCH IF INCIDENT NOT MORE0118X
                                        RECENT THAN TOTAL
         TM    AVTBIT3,AVTSTAYN         CHECK FOR SCAN SPECIFIED   0118
         BO    QND76                    BRANCH IF SCAN NOT SPECIFIE0118
         CLI   CDRKEY,CDROPC            CHECK FOR OPERATOR CONTROL
         BNE   QND70                    BRANCH IF NOT OPERATOR CNTL0814
         SPACE 3
*INCIDENT RECORD WAS A RESULT OF AN OPERATOR CONTROL COMMAND. SET
*UP THE INFO IN OP.CONTROL WORKAREA AND WAIT SO OP.CONTROL CAN
*REPROCESS THE COMMAND,UPDATING THE PROPER TABLES.  IF THE COMMAND
*IS START LINE OR STOP LINE THE PROCESSING HAS ALREADY BEEN DONE.
         SPACE
         USING IEDQOPCD,R3              BASE FOR OP CTL AVT      S99240
         L     R3,AVTOCGET              ADDR OF OP CTL AVT       S99240
         SPACE 3
*   ALL STOP OR START LINE OPERATOR CONTROL INCIDENT RECORDS WERE     *
*   PROCESSED DURING OPEN.  THE FOLLOWING CODE CHECKS FOR THESE       *
*   COMMANDS AND DOES NOT PASS THEM TO OPERATOR CONTROL, BUT          *
*   RETURNS TO READ THE NEXT INCIDENT RECORD.                         *
         SPACE 3
         CLI   CDROPCB+CKPOCODE,OCSTOPL STOP LINE COMMAND        S99240
         BE    QND76                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCODE,OCSTARTL START LINE COMMAND      S99240
         BE    QND76                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCODE,OCVARY  VARY COMMAND             S99240
         BNE   QND6305                  NO, BRANCH               S99240
         CLI   CDROPCB+CKPOCSWC,OCX11   VARY OFFTP COMMAND       S99240
         BE    QND76                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCSWC,OCX12   VARY OFFTP HALT COMMAND  S99240
         BE    QND76                    YES, BRANCH              S99240
         CLI   CDROPCB+CKPOCSWC,OCX18   VARY ONTP COMMAND        S99240
         BE    QND76                    YES, BRANCH              S99240
         SPACE 3
QND6305  EQU   *                                                 S99240
         XC    CDRDATE(8),CDRDATE       ZERO LINK FIELD OF ELEM  S99240
         LR    R10,R0                   SAVE TTR                 S99240
         TM    CDRTTRLI+2,1             IS THIS A CONTINUATION   S99240
*                                        SEGMENT                 S99240
         BO    QND66                    YES, LINK INTO CHAIN     S99240
         ST    R11,OPCCOPCE             PUT ADDRESS OF ELEMENT INS99240
*                                        OPERATOR CONTROL AVT    S99240
QND64    TM    CDRTTRLI+2,2             IS THIS THE LAST SEGMENT S99240
*                                        OF THE COMMAND          S99240
         BZ    QND68                    NO, SET UP TO READ NEXT  S99240
*                                        CONTINUATION SEGMENT    S99240
         TM    CKPECB,X7F               CHECK FOR DISK ERROR     S21903
         BNO   QND65                    YES, FREE SEGMENTS       S99240
         OI    OPCSPEC,OPCRSTRT         SET RESTART BIT FOR OPC  S99240
         LA    R1,AVTOPCOB+4            ADDR OF  OPC CONTROL ECB
         POST  (1)                      POST OPC CONTROL COMPLETE
         SPACE
         WAIT  ECB=AVTCKPTB+4           WAIT FOR UPDATE
         MVI   AVTCKPTB+4,0             CLEAR ECB COMPLETION CODE  0827
         NI    OPCSPEC,OCFOXES-OPCRSTRT TURN OFF RESTART BIT     S99240
         SPACE 3
QND65    MVC   CKPEXCP+1(3),OPCCOPCE+1  RESET I/O BUFFER ADDRESS S99240
         MVC   CKPRW+1(3),CKPEXCP+1     RESET READ COMMAND ADDR  S99240
         L     R11,OPCCOPCE             GET FIRST SEGMENT ADDRESSS99240
         MVC   OPCCOPCE+1(3),CDRTTRLI   REMOVE SEGMENT FROM CHAINS99240
QND6505  NI    OPCCOPCE+3,XFC           RESET LOW ORDER BITS     S21903
         LR    R0,R10                   RESTORE TTR              S99240
         OC    OPCCOPCE+1(3),OPCCOPCE+1 END OF CHAIN             S99240
         BZ    QND76                    YES, GO READ NEXT RECORD S99240
         LH    R1,CKPBPERR              LENGTH OF GETMAIN        S99240
         CH    R1,CKPINCLN              CHECK INCIDENT LENGTH    S99240
         BH    QND6506                  INCIDENT LENGTH LOW      S99240
         LH    R1,CKPINCLN              GET INCIDENT RECORD LEN  S99240
QND6506  EQU   *                                                 S99240
         CH    R1,CKPCKRLN              CHECK CKREQ LENGTH       S99240
         BH    QND6507                  CKREQ LENGTH LOW         S99240
         LH    R1,CKPCKRLN              USE CKREQ LENGTH         S99240
QND6507  EQU   *                                                 S99240
         ST    R1,CKPGETML              STORE IN FREEMAIN LIST   S99240
         LA    R1,OPCCOPCE              PUT ADDRESS OF AREA TO   S99240
         ST    R1,CKPGETML+4             FREE IN LIST            S99240
         L     R11,OPCCOPCE             RESET CURRENT OPCE PTR   S99240
         L     R11,CDRTTRLI-1           GET NEXT SEGMENT ADDRESS S99240
         LA    R11,0(R11)               CLEAR HIGH ORDER BYTE    S99240
         FREEMAIN E,MF=(E,CKPGETML),SP=0 FREE I/O BUFFER         S99240
         ST    R11,OPCCOPCE             UPDATE CURR SEGMENT PTR  S99240
         B     QND6505                  CHECK FOR MORE BUFFERS TOS99240
*                                        FREE                    S99240
         SPACE 2
QND66    XC    CDRDATE(8),CDRDATE       CLEAR LINK FIELDS        S99240
         OC    OPCCOPCE+1(3),OPCCOPCE+1 HAS THIS FUNCTION BEEN   S99240
*                                        CANCELLED DUE TO A DISK S99240
*                                        I/O ERROR               S99240
         BZ    QND76                    YES, IGNORE CONTINUATION S99240
         LA    R1,OPCCOPCE-8            SET UP FOR FIRST TIME    S99240
         DROP  R11                      SET UP NEW               S99240
         USING IEDQCDRD,R1                USING STATEMENT        S99240
QND67    L     R1,CDRTTRLI-1            GET NEXT SEGMENT ADDRESS S99240
         OC    CDRTTRLI,CDRTTRLI        CHECK FOR LAST SEGMENT   S99240
         BNZ   QND67                    NOT LAST, RELOOP         S99240
         ST    R11,CDRTTRLI-1           LINK THIS SEGMENT AS LASTS99240
         DROP  R1                       REVERT TO                S99240
         USING IEDQCDRD,R11               OLD USING STATEMENT    S99240
         NI    CDRTTRLI+2,XFE           TURN-OFF CONTINUATION    S21903
*                                        SEGMENT IDENTIFIER      S99240
         B     QND64                    GO CHECK FOR LAST SEGMENTS99240
         SPACE 3
QND68    EQU   *                                                 S99240
         LH    R1,CKPBPERR              LENGTH OF GETMAIN        S99240
         CH    R1,CKPINCLN              CHECK INCIDENT LENGTH    S99240
         BH    QND6803                  INCIDENT LENGTH LOW      S99240
         LH    R1,CKPINCLN              GET INCIDENT RECORD LEN  S99240
QND6803  EQU   *                                                 S99240
         CH    R1,CKPCKRLN              CHECK CKREQ LENGTH       S99240
         BH    QND6808                  CKREQ LENGTH LOW         S99240
         LH    R1,CKPCKRLN              USE CKREQ LENGTH         S99240
QND6808  EQU   *                                                 S99240
         ST    R1,CKPGETML              STORE IN GETMAIN PARM LSTS99240
         LA    R1,CKPEXCP               SET FOR GETMAIN TO PUT   S99240
*                                        ADDR OF AREA IN CKPEXCP S99240
         ST    R1,CKPGETML+4            STORE IN PARM LIST       S99240
         GETMAIN EC,MF=(E,CKPGETML),SP=0 GET CORE FOR CONTINUED  S99240
         LTR   R15,R15                  WAS CORE AVAILABLE       S99240
         BNZ   QND69                    NO, PRINT NO CORE MESSAGES99240
         MVC   CKPRW+1(3),CKPEXCP+1     SET ADDRESS IN READ CCW  S99240
         LR    R0,R10                   RESTORE TTR              S99240
         B     QND76                    AND READ NEXT RECORD     S99240
QND69    WTO   'IED010I CHECKPOINT-INSUFFICIENT CORE-INCIDENT RECORD IGX
               NORED',ROUTCDE=11,DESC=4                          S99240
         B     QND65                    FREE PREVIOUS SEGMENTS   S99240
         SPACE 3
*INCIDENT RECORD WAS THE RESULT OF A MH MACRO OR A TCHNG MACRO.
         SPACE
QND70    EQU   *                                                   0814
         USING IEDQTRM,RTERM
         LH    R1,CDROFFS               GET TERMNAME OFFSET
         L     R15,AVTRNMPT
         STM   R14,R1,CKPSAVE2          SAVE REGS
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         BALR  R14,R15                  GET TERM ENTRY
         USING IEDQTRM,RTERM                                       0629
         LR    RTERM,R1                 BASE FOR TERM ENTRY
         LM    R14,R1,CKPSAVE2          RESTORE REGS
         MVC   TRMSTATE,CDRSTAT         UPDATE TERM STATUS FIELD
         SPACE 3
*UPDATE OPTION FIELDS FOR THIS TERMINAL ENTRY.(REGISTERS BEING USED
*AT THIS TIME ARE 0,2,8,9,11,12,14THIS OPTION TABLE SUBROUTINE USES
*1,3,4,5,6,7,10,13,15).
         SPACE
         LR    R10,R11                  SAVE REGISTER          @OY20722
         TM    TRMSTATE,TRMOPTFN        ARE THERE OPTIONS        A42401
         BNO   QND7502                  BRANCH IF NOT          @OZ26495
         SR    R6,R6                    INITIALIZE INDEX REG
         SR    R7,R7
         IC    R7,TRMOPNO               COMPARAND-NO. OPTIONENTRIES
         L     R5,AVTOPTPT              ADDR OF OPTION TABLE
         L     R4,4(0,R5)               ADDR OF OPTION LENGTH TABLE
         LH    R1,TRMOPTBL              OFFST TO OPT FOR THIS ENTRY
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         AR    R5,R1                    ADD OFFST TO OPT TABLE ADDR
         SR    R1,R1                    CLEAR
         SR    R3,R3                    CLEAR LENGTH FOR MOVE
         SPACE 3
*BEGINNING OF LOOP THROUGH OPTION TABLE OFFSETS FOR THIS TERMINAL
         SPACE
QND74    EQU   *                                                   0814
         LR    R15,R5                   INITIALIZE BEG OPTN ENTRIES
         IC    R1,TRMOPT(R6)            OPTION OFFSET
         CH    R1,QMGNOPT               CHECK FOR UNUSED FIELD
         BE    QND75                    BRANCH IF UNUSED           0814
         AR    R15,R1                   ADDR OF OPTION ENTRY
         IC    R3,0(R4)                 GET LNGTH OF THIS OPT ENTRY    X
                                        (1 HAS ALREADY BEEN SUB-       X
                                        TRACTED FOR EXECUTE)
         CLI   L1(R4),XD0               CHECK OPTION TYPE        S21903
         BH    QND7405                  BRANCH IF NOT ADDRESS TYPE 0115
         CLI   L1(R4),X80               CHECK OPTION TYPE        S21903
         BH    QND75                    BRANCH IF ADDRESS TYPE     0115
QND7405  EQU   *                                                   0115
         EX    R3,QNDMOVE1              MOVE OPTIONS TO OPTION TABL0814
         LA    R11,1(R3,R11)            ADD LENGTH MOVED TO BASE OF    X
                                        DISK RECORD
QND75    EQU   *                                                   0814
         LA    R4,CKPOPLTL(0,R4)        MOVE TO NEXT OPTION LENGTH     X
                                        TABLE ENTRY
         LA    R6,1(,R6)                ADD 1 TO INDEX
         BCT   R7,QND74                 SUB 1 FROM NO. OF ENTRIES  0814
         SPACE
*END OF LOOP THROUGH OPTION TABLE OFFSETS
         SPACE 3                                               @OZ26495
QND7502  EQU   *                                               @OZ26495
         CLI   CDRKEY-IEDQCDRD(R10),CDRLCB INCIDENT RECORD FOR @OY20722
*                                        MH MACRO              @OY20722
         BE    QND76                    YES, BRANCH            @OY20722
         TM    TRMDEVFL,X60             DIAL DIGITS/ADDR CHAR? @OZ26495
         BZ    QND76                    NO, BRANCH             @OZ26495
         SR    R3,R3                    CLEAR REG              @OZ26495
         LA    R11,SIXTEN(R11)          START OF DEVICE FIELDS @OZ26495
         TM    TRMSTATE,TRMOPTFN        OPTION FIELDS USED     @OZ26495
         BNO   NOOPTS                   NO, BRANCH             @OZ26495
         LA    R15,TRMOPT               START OF OPTIONS       @OZ26495
         IC    R3,TRMOPNO               NUMBER OF OPTIONS      @OZ26495
         LA    R15,0(R3,R15)            START OF DEVICE FIELDS @OZ26495
*                                        IN TERMINAL ENTRY     @OZ26495
         B     CKBUF                    CHECK DEVICE FIELDS    @OZ26495
NOOPTS   EQU   *                                               @OZ26495
         LA    R15,TRMOPNO              START OF DEVICE FIELDS @OZ26495
CKBUF    EQU   *                                               @OZ26495
         TM    TRMDEVFL,X80             BUFSIZE SPECIFIED      @OZ26495
         BNO   CKDIAL                   NO, BRANCH             @OZ26495
         A     R15,ADD3                 BUMP PAST BUFSIZE      @OZ26495
CKDIAL   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X40             DIAL DIGITS SPECIFIED  @OZ26495
         BNO   CKADDR                   NO, BRANCH             @OZ26495
         IC    R3,0(R11)                LENGTH OF DIAL DIGITS  @OZ26495
         EX    R3,QNDMOVE2              UPDATE DIAL DIGITS     @OZ26495
         LA    R15,ONE(R3,R15)          BUMP PAST DIAL DIGITS  @OZ26495
         LA    R11,ONE(R3,R11)          BUMP PAST DIAL DIGITS  @OZ26495
CKADDR   EQU   *                                               @OZ26495
         TM    TRMDEVFL,X20             ADDR CHAR SPECIFIED    @OZ26495
         BNO   QND76                    NO, BRANCH             @OZ26495
         IC    R3,0(R11)                LENGTH OF ADDR CHAR    @OZ26495
         EX    R3,QNDMOVE2              UPDATE ADDR CHAR       @OZ26495
         SPACE 3
*DETERMINE RELATIVE TTR OF NEXT CKREQ OR INCIDENT RECORD
         SPACE
QND76    EQU   *                                                   0814
         IC    R15,CKPINCNO             GET COUNT OF AVAILABLE INC 0118
         BCTR  R15,0                    SUBTRACT 1 FROM COUNT      0118
         STC   R15,CKPINCNO             RESTORE COUNT IN CONTROL RD0118
         ST    R0,CKPTRMAD              STORE TTR                  0118
         CLC   CKPTRMAD+1(3),CKPTTRLI   CHECK FOR LAST INC RCD USED0118
         BNE   QND7605                  BRANCH NOT LAST          S99240
QND7603  EQU   *                                                 S99240
         L     R3,AVTOCGET              GET OP CTL AVT ADDRESS   S99240
         OC    OPCCOPCE+1(3),OPCCOPCE+1 ANY PARTIAL OP CONTROL   S99240
*                                        INCIDENT RECORDS        S99240
         BZ    QND78                    NO, BRANCH               S99240
         LR    R10,R0                   SAVE TTR                 S99240
         IC    R15,CKPINCNO             GET COUNT OF AVAILABLE   S99240
         LA    R15,1(R15)               ADD ONE - WILL BE        S99240
*                                        SUBTRACTED LATER        S99240
         STC   R15,CKPINCNO             RESTORE COUNT            S99240
         MVI   CKPECB,X41               SET-LOOK LIKE DISK ERROR S21903
         B     QND596                   GO FREE INCIDENT SEGMENTSS99240
QND7605  EQU   *                                                   0925
         LH    R15,CKPTRKLN             GET TRK DATA LENGTH 0416 S21101
         AH    R15,CKPINCLN             ADD LN OF RCD WRITTN0416 S21101
         STH   R15,CKPTRKLN             RESTORE DATA LENGTH 0416 S21101
         LR    R15,R0
         LA    R15,0(,R15)              CLEAR HIGH ORDER BYTE      0817
         LTR   R15,R15                  CHECK FOR 1ST INC RCD      0826
         BZ    QND5805                  BRANCH IF 1ST RCDSHOULD BE 0826X
                                        READ
         LA    R7,QND58                 SET RETURN ADDRESS     @SA67132
GETNEXT  EQU   *                                               @SA67132
         LA    R0,1(0,R15)              GET NEXT RCD ON TRACK
         EX    R15,QNDCOMPR             CHECK FORLAST RCD ON TRACK 0814
         BHR   R7                       BR IF NOT END OF TRK   @OY19771
         LA    R0,CKP101(0,R15)         GET NEXT TRACK
         IC    R0,QMGONE                INITIALIZE TO 1ST RECORD
         LA    R14,CKPIPERT             RCD NO-LAST RCD ON TRACK   0814
         XC    CKPTRKLN,CKPTRKLN        INITIALIZE DATA LN  0416 S21101
         BR    R7                       READ NEXT RECORD       @SA67132
QND77    EQU   *                                                   0118
         MVC   CKPTTRLI(3),CKPTRMAD+1   UPDATE LAST INC RCD USED   0118
         ST    R0,CKPTRMAD              STORE TTR                  0118
         CLC   CKPTRMAD+1(3),CKPTTRIN   CHECK FOR FIRST INC RCD  S99240
         BNE   QND7603                  BRANCH NOT FIRST         S99240
         XC    CKPTTRLI,CKPTTRLI        INDICATE 1ST RCD           0118
         SPACE 3
*ATTACH CHECKPOINT EXECUTOR-IEDQNF
         SPACE
QND78    EQU   *                                                   0803
         LA    R1,CKPEXCP               PTR TO ADDR OF AREA 0405 S21101
         SR    R3,R3                    CLEAR REGISTER         @ZA06155
         L     R15,CKPTTRLI-1           PICK UP LAST INCIDENT  @ZA06155
         LA    R15,ZERO(R15)            CLEAR HIGH BYTE        @ZA06155
         LTR   R15,R15                  END OF DATA SET        @ZA06155
         BZ    ENDDATA                  YES, BRANCH            @ZA06155
         LA    R14,CKPIPERT             NUMBER OF INCIDENTS    @ZA06155
*                                        PER TRACK             @ZA06155
         CLC   CKPTTRIN(2),CKPTTRLI     IS LAST INCIDENT ON    @ZA06155
*                                        FIRST TRACK           @ZA06155
         BNE   GETREC                   NO, BRANCH             @ZA06155
         LA    R14,CKPINRNO             NUMBER OF INCIDENTS ON @ZA06155
*                                       FIRST TRACK            @ZA06155
GETREC    EQU  *                                               @ZA06155
         BAL   R7,GETNEXT               GET NEXT RECORD        @ZA06155
         LR    R15,R0                   SET REGISTER 15        @ZA06155
         C     R0,AVTPARM               AT END OF INCIDENTS    @ZA06155
         BNL   SETCOUNT                 NO, BRANCH             @ZA06155
         LA    R3,ONE(R3)               INCREMENT COUNT        @OY19771
         B     GETREC                   GET RECORD             @ZA06155
SETCOUNT  EQU  *                                               @ZA06155
         STC   R3,CKPINCNO              STORE INCIDENT COUNT   @ZA06155
*                                        REMAINING             @ZA06155
         B     QND7801                  ATTACH CHECKPOINT      @ZA06155
ENDDATA   EQU  *                                               @ZA06155
         MVC   CKPINCNO,CKPINCNT        SET AVAILABLE EQUAL    @ZA06155
*                                        TOTAL                 @ZA06155
QND7801  EQU   *                                               @ZA06155
         ST    R1,CKPGETML+4            PUT PTR IN PARM LIST0405 S21101
         LH    R1,CKPBPERR              LENGTH OF GETMAIN
         CH    R1,CKPINCLN              CHECK LENGTH OF INC 0405 S21101
         BH    QND7803                  BRANCH IF INC IS LOW0405 S21101
         LH    R1,CKPINCLN              USE INCIDENT LENGTH 0405 S21101
QND7803  EQU   *                                            0405 S21101
         CH    R1,CKPCKRLN              CHECK LENGTH OF CKREQ405 S21101
         BH    QND7806                  BRANCH IF CKREQ LOW 0405 S21101
         LH    R1,CKPCKRLN              USE CKREQ LN FOR FREE405 S21101
QND7806  EQU   *                                            0405 S21101
         ST    R1,CKPGETML
         FREEMAIN E,MF=(E,CKPGETML),SP=0 FREE I/O BUFFER           0806
         XC    CKPECB(CKPCTTRB-CKPECB),CKPECB  CLEAR WORK AREA USED    X
                                        BY OPEN MODULES
QND79    EQU   *                                                   0804
         TM    AVTCKFLG,AVTCKTAC+AVTCKNAC EITHER CHECK ACTIVE @ZM46597
         BZ    QND80                    NO BYPASS SET UP      @ZM46597
         LA    R3,AVTCKECA              ADDRESS OF CHECKPT ECB
         L     R4,AVTCLOSB+8            ADDRESS OF IEDQNA
         LA    R4,6(,R4)                ADDRESS OF IEDQNA3
         LR    R1,R13                   PASS ADDR OF AVT TO IEDQNF 0115
*                                       ATTACH CHECK-POINT EXECUTOR
         TM    AVTBIT1,AVTTSON          IS TIME SHARING ACTIVE
         BO    QND7905                  BRANCH ON YES
         ATTACH ECB=(3),ETXR=(4),SF=(E,CKPTLIST)
         B     QND7910                  BRANCH AROUND TSO ATTACH S22025
QND7905  EQU   *
         L     R6,AVTTSOPT              ADDRESS OF TIME SHARING QCB
         L     R6,TSISTAE-IEDQTSI(,R6)  ADDRESS OF STAE ROUTINE
         LA    R6,4(,R6)                ADDRESS OF STAI ENTRY POINT
         ATTACH ECB=(3),ETXR=(4),STAI=((6)),SF=(E,CKPTLIST)
QND7910  EQU   *
         ST    R1,AVTCKTCB              ADDRESS OF CHECKPOINT TCB
         SPACE 3
*CHECK FOR OPERATOR AWARENESS ROUTINE AND LOAD IF NECESSARY        1002
         SPACE
QND80    EQU   *
         LH    R1,AVTOPCON              PRIMARY OP CONSOLE         0815
         LTR   R1,R1                    CHECK FOR SYSCON           0815
         BZ    QND8005                  BRANCH IF SYSCON           0815
         L     R1,AVTNX                 GET ADDR OF OPAR RTN       0815
         LTR   R1,R1                    CHECK FOR RTN              0815
         BNZ   QND8005                  BRANCH IF ALREADY LOADED   0815
         LOAD  EP=IEDQNX                LOAD OPAR RTN              0815
         ST    R0,AVTNX                 SAVE ENTRY POINT ADDRESS   0815
         SPACE 2
* CHECK FOR ON-LINE TEST SPECIFIED ON INTRO                      S99528
         SPACE 1
QND8005  EQU   *                                                 S99528
         CLI   AVTOLTST,ZERO            CHECK OLTEST OPERAND     S99528
         BNE   QND30                    BRANCH IF SPECIFIED      S99528
         MVI   AVTOLECA,X40             POST COMPLETION ECB SINCES99528
*                                       OLT WILL NEVER TERMINATE S99528
         B     QND80055                 CHECK TIME DELAY QUEUE   S99528
         SPACE 2
* CHECK FOR SUFFICIENT CORE                                      S99528
         SPACE 1
QND30    EQU   *                                                 S99528
         GETMAIN R,LV=18432             UNCONDITIONAL GETMAIN    S05331*
                                         FOR MINIMUM AMOUNT      S22024
         FREEMAIN R,LV=18432,A=(1)      FREE THE CORE            S05331
         SR    R2,R2                    CLEAR REG 2              S99528
         IC    R2,AVTOLTST              GET NO. BLOCKS OF CORE   S99528
         SLL   R2,TEN                   MULTIPLY BY 1024         S99528
         SPACE 1
         GETMAIN EC,LV=(R2),A=AVTDOUBL,MF=(E,AVTGETMN),SP=0      S99528
         LTR   R15,R15                  CHECK RETURN CODE        S99528
         BZ    QND50                    BRANCH IF CORE AVAILABLE S99528
         WTO   'IED094I CORE REQUESTED FOR ON-LINE TEST NOT AVAILABLE',X
               ROUTCDE=10,DESC=4                                 S99528
         MVI   AVTOLTST,QNDOLTST        CHANGE OLT PARM TO 18K   S05331
         B     QND80055                 SKIP FREEMAIN            S99528
QND50    EQU   *                                                 S99528
         FREEMAIN E,MF=(E,AVTGETMN)      FREE UP AREA            S99528
         MVI   AVTGETMN+8,ECMODE        RESET MODE FIELD        SA63993
         SPACE 3
*PUT DESTINATION QCBS ON TIME DELAY QUEUE IF NECESSARY
         SPACE
QND80055 EQU   *                                                 S99528
         DROP  R8                       CHANGE BASE FOR TERM ENTRY 0819
         L     R11,AVTEA                ADDRESS OF DISPATCHER
         LA    R13,AVTSAVE3             USE SAVE 3
         USING AVTSAVE3,R13
         SR    R2,R2                    CLEAR FOR TNT LOOP
         ST    R2,AVTDOUBL              SET END OF QCB CHAIN
         L     R15,AVTRNMPT             TERMINAL NAME TABLE
         USING IEDQTNTD,R15
         LH    R7,TNTLEN                NUMBER OF TTABLE ENTRIES
         N     R7,AVTCLRHI              CLEAR HIGH ORDER HALF
         BAL   R14,QND81                ENTER LOOP AND SET RETURN
*
         USING IEDQTRM,R1
         TM    TRMSTATE,TRMSNGLE        TPROCESS, LIST, LOG,   @G36XRNP
*                                       LINE OR GROUP ENTRY?   @G36XRNP
         BNZ   QND81                    BRANCH NO
         TM    TRMSTATE,TRMPREF         NCP ATTACHED TERMINAL  @G36XRNP
         BO    QND81                    BR YES                   X03039
*                                                                X03039
         L     R4,TRMDESTQ-1            QCB ADDRESS
         USING IEDQQCB,R4
         CLI   QCBSTPRI,X70             INTVL OPTION             S22026
         BNE   QND80058                 BRANCH IF NO           @OY12667
         CLC   QCBMSGCT(2),AVTFZERO     ANY MSGS QUEUED        @OY12667
         BNE   QND81                    YES, DONT CHAIN QCB    @OY12667
         B     QND8006                  NO, CONTINUE           @OY12667
QND80058 EQU   *                                               @OY12667
         CLI   QCBSTPRI,X80             CLOCK OPTION             S22026
         BNE   QND81                    BRANCH IF NO             S22026
* IF THIS IS NOT CLOCK OR CINTVL BYPASS PROCESSING             @G36XRNP
         CLI   QCBSTPRI,QCBCNTVL        CLOCK/CINTVL           @G36XRNP
         BL    QND81                    BRANCH NO              @G36XRNP
QND8006  EQU   *                                                 S22026
*
         NC    QCBINTVL,QCBINTVL        DIAL-UP READ ONLY      @OY14058
         BZ    QND81                    BYPASS DELAY Q         @OY14058
         TM    QCBINSRC+2,QCBDELAY      QCB SERVICED PREVIOUSLY
         BO    QND81                    BRANCH YES - TRY NEXT
         L     R3,QCBDCBAD-1            DCB ADDRESS
         USING IHADCB,R3
         TM    DCBOFLGS,X10             IS DCB OPEN
         BZ    QND81                    BRANCH NO
         L     R1,DCBDEBAD              ADDRESS OF DEB          SA63007
         CLC   DEBNMEXT-DEBNMSUB(ONE,R1),QCBRELLN IS RLN VALID  SA63007
         BL    QND81                    BRANCH ON NO            SA63007
         SR    R1,R1                    CLEAR REGISTER          SA63007
         IC    R1,QCBRELLN              PICK UP RELATIVE LINE   SA63007
         BCTR  R1,ZERO                  DECREMENT BY ONE        SA63007
         SLL   R1,TWO                   MULTIPLY BY FOUR        SA63007
         A     R1,DCBDEBAD              ADD DEB ADDRESS         SA63007
*                                       IS ENTRY DD DUMMY       SA63007
         CLC   DEBUCBAD-DEBNMSUB+1(THREE,R1),AVTFZERO           SA63007
         BE    QND81                    BRANCH ON YES           SA63007
*
         OI    QCBINSRC+2,QCBDELAY      SET PREVIOUSLY SERVICED FLAG
         MVC   QCBELCHN,AVTDOUBL+1      SET LINK FIELD FOR NEXT LOOP
         MVC   QCBSTCHN(3),QCBSLINK     FIX SCHEDULER
         ST    R4,AVTDOUBL              SET FOR NEXT LINK
QND81    EQU   *
         LA    R2,ONE(,R2)              ADD ONE TO NEXT ENTRY
         LR    R1,R2                    TO INPUT REG FOR TNT
         CLR   R7,R2                    COMPARE TOTAL TO THIS ENTRY
         BCR   LOWEQ,R15                BR IF TOTAL IS HIGH     SA59006
*
         DROP  R15
         BALR  R14,0                    SET RETURN AND BEGIN SEARCH
         L     R1,AVTDOUBL              FIRST QCB TO ENTER DELAY
         LA    R1,0(,R1)                CLEAR HIGH ORDER
         LTR   R1,R1                    ANY TO SERVICE
         BZ    QND84                    BRANCH NO - EXIT           0803
*
         DROP  R4
         USING IEDQQCB,R1
         L     R4,QCBELCHN-1            NEXT ELEMENT
         MVC   QCBELCHN,AVTDOUBL+1      SET TO POINT TO ITSELF
         ST    R4,AVTDOUBL              NEXT ELEMENT
         LH    R4,QCBINTVL              DELAY IN SECONDS
         N     R4,AVTCLRHI              CLEAR HIGH ORDER HALF
         CLI   QCBSTPRI,X70             DIAL UP OPTIONS=INTVL
         BE    QND82                    YES, INTVL OK
*
         AR    R4,R4                    DOUBLE
*              ORIGINAL DELAY FOR CLOCK WAS DIVIDED BY  2 AT
*              ASSEMBLY TIME.  MUST BE RESTORED FOR TIME DELAY
         LR    R3,R1                    SAVE QVB ADDRESS
*                                       GET TIME OF DAY
         TIME  BIN
         SRDL  R0,HALF                  SHIFT TIME TO R1
         D     R0,HUND                  CONVERT TO SECONDS
*              RESULT IS IN R0 + 1
         N     R1,CLRMASK               CLEAR UNNEEDED BITS
         CLR   R1,R4                    TIME OF DAY TO CLOCK REQUEST
         BL    SAMEDAY                  BRANCH IF INTERRUPT IS TODAY
*
         A     R4,TW24HRS               ADD 24 HOURS
SAMEDAY  EQU   *
         SR    R4,R1                    GET DIFFERENCE
         LR    R1,R3                    RESTORE QCB ADDRESS
QND82    EQU   *
         C     R4,TWLVE                 IS DELAY GREATER THAN 12 HOURS
         BL    QND83                    BRANCH NO
*
         S     R4,TWLVE                 DECREMENT BY 12 HOURS
         OI    QCBSTAT,QCBTIME          SET FLAG FOR TIME DELAY
QND83    EQU   *
         STH   R4,QCBEOLDT              SET DELAY REQUES
         MVI   QCBLKRLN,0               SET FLAG INDICATING ELEMENT
         MVI   QCBPRI,PRIEDISP          SET PRIORITY FOR POST BY HG
*                                       IS A QCB
         L     R15,AVTHG01              TIME DELAY SUBROUTINE ADDRESS
         BR    R15                      INSERT ELEMENT ON TIME DELAY Q
*
QND84    EQU   *                                                   0803
         SPACE
* IF NOT EP ONLY LINK TO IEDIAB TO BUILD SAT,NAT,RVT AND       @G36XRNP
* PLCB AND SIB POOLS.                                          @G36XRNP
         SPACE
         L     R13,AVTBASE              BASE ON AVTSAVE1       @G36XRNP
         USING IEDQAVTD,R13                                    @G36XRNP
         TM    AVTSAVTF,AVTVTMCP        EP ONLY?               @G36XRNP
         BZ    QNDEXIT                  BRANCH YES             @G36XRNP
         LINK  EP=IEDIAB                IEDIAB                 @G36XRNP
         L     R3,AVTOCGET              OP CTL AVT BASE        @G36XRNP
         USING IEDQOPCD,R3              OP CTL AVT BASE        @G36XRNP
         SPACE
* IF RESTART INDICATED LINK TO IGCFD10D TO DELINK RESOURCE     @G36XRNP
* HIERARCHIES IN TERMINAL TABLE.                               @G36XRNP
         SPACE
         TM    AVTBIT2,AVTSTRTN         RESTART?               @G36XRNP
         BZ    QNDEXIT                  BRANCH IF NOT          @G36XRNP
         OI    OPCSPEC,OPCRSTRT         INDICATE RESTART FOR   @G36XRNP
*                                       FOR DEACTIVATE.        @G36XRNP
         LA    R13,AVTSAVE3             SET REG 13 TO SAVE AREA@G36XRNP
         USING AVTSAVE3,R13             ADDRESSIBLITY          @G36XRNP
         LINK  EP=IGCFD10D              IGCFD10D               @G36XRNP
         L     R13,AVTBASE              RESTORE AVT BASE       @G36XRNP
         USING IEDQAVTD,R13             ADDRESSIBLITY          @G36XRNP
         NI    OPCSPEC,255-OPCRSTRT     TURN OFF RESTART FLAG. @G36XRNP
         B     QNDEXIT                  EXIT                   @G36XRNP
         EJECT
************************************************************** @G36XRNP
*        THE PURPOSE OF THIS ROUTINE IS TO FIND THE NCP TTE  * @G36XRNP
*        ADDRESS FOR A PARTICULAR 3705.                      * @G36XRNP
*                                                            * @G36XRNP
*        INPUT - REG 1 = 3705 DCB ADDRESS                    * @G36XRNP
*                REG 7 = RETURN ADDRESS                      * @G36XRNP
*                                                            * @G36XRNP
*        OUTPUT- REG 1 = 3705 NCP TTE ADDRESS                * @G36XRNP
*                                                            * @G36XRNP
************************************************************** @G36XRNP
QND90    EQU   *                                               @G36XRNP
         USING IHADCB,R1                SET ADDRESSABILITY     @G36XRNP
         USING IEDQLCB,R7               SET ADDRESSABILITY     @G36XRNP
         STM   R14,R12,CKPSAVE2         SAVE CALLER'S REG      @G36XRNP
         SLR   R7,R7                    CLEAR REG              @G36XRNP
         IC    R7,DCBEIOBX              GET LCB SIZE           @G36XRNP
         LA    R9,1                     SET RLN                @G36XRNP
         L     R11,DCBIOBAD             GET IOB ADDRESS        @G36XRNP
         MR    R6,R9                    GET LCB IOB OFFSET     @G36XRNP
         AR    R7,R11                   LCB IOB ADDRESS        @G36XRNP
         LA    R11,LCBPRFSZ             IOB OFFSET IN LCB      @G36XRNP
         SLR   R7,R11                   GET LCB ADDRESS        @G36XRNP
         LH    R1,LCBTTCIN              GET NCP TTCIN          @G36XRNP
         L     R15,AVTRNMPT             TTCIN TO TTE           @G36XRNP
*                                       CONVERSION ROUTINE     @G36XRNP
         BALR  R14,R15                  FIND 3705 NCP TTE ADDR @G36XRNP
*        REG 1 HAS 3705 NCP TTE ADDRESS                        @G36XRNP
         LM    R14,R0,CKPSAVE2          RESTORE REG 14-0       @G36XRNP
         LM    R2,R12,CKPSAVE2+DREG2    RESTORE REG 2-12       @G36XRNP
         BR    R7                       RETURN TO CALLER       @G36XRNP
         DROP  R1                                              @G36XRNP
         DROP  R7                                              @G36XRNP
         EJECT
************************************************************** @G36XRNP
*                                                            * @G36XRNP
*        THE PURPOSE OF THIS ROUTINE IS TO FIND THE ADDRESS  * @G36XRNP
*        OF THE DEVICE DEPENDENT FIELDS OF A 3705 NCP        * @G36XRNP
*        TERMINAL ENTRY                                      * @G36XRNP
*                                                            * @G36XRNP
*        INPUT - REG 0 = MASK FOR DEVICE DEPENDENT FIELDS    * @G36XRNP
*                REG 1 = 3705 NCP TTE ADDRESS                * @G36XRNP
*                REG 7 = RETURN ADDRESS                      * @G36XRNP
*                                                            * @G36XRNP
*        OUTPUT- REG 1 = NCP DEVICE DEPENDENT FIELDS ADDRESS * @G36XRNP
*                                                            * @G36XRNP
************************************************************** @G36XRNP
QND95    EQU   *                                               @G36XRNP
         STM   R14,R12,CKPSAVE2         SAVE CALLER'S REG      @G36XRNP
         LR    R11,R13                  SAVE AVT ADDRESS       @G36XRNP
         L     R15,AVTDDFT              GET ADDRESS OF DEVICE  @G36XRNP
*                                       DEP LOOKUP ROUTINE     @G36XRNP
         LA    R13,CKPSAVE1             GET SAVE AREA ADDRESS  @G36XRNP
         BALR  R14,R15                  FIND ADDRESS OF NCP    @G36XRNP
*                                       DEVICE DEP FIELDS      @G36XRNP
         LR    R1,R15                   SAVE NCP DEVICE DEP    @G36XRNP
*                                       FIELDS ADDRESS         @G36XRNP
         LR    R13,R11                  RESTORE AVT ADDRESS    @G36XRNP
         LM    R14,R0,CKPSAVE2          RESTORE REG 14-0       @G36XRNP
         LM    R2,R12,CKPSAVE2+DREG2    RESTORE REG 2-12       @G36XRNP
         BR    R7                       RETURN TO CALLER       @G36XRNP
         EJECT
QNDEXIT  EQU   *                                               @G36XRNP
         L     R1,CVTPTR                LOAD CVT ADDR            Y02027
         L     R1,CVTAQAVT-CVT(R1)      LOAD TCAM CVT EXTENSION  Y02027
         OI    TCXBIT1-IEDQTCX(R1),AVTREADN                      Y02027
*                                       MAP READY BIT FOR COMM   Y02027
*                                       TASK                     Y02027
         L     R13,AVTBASE              RESTORE AVT ADDRESS
         LM    R14,R12,12(R13)          RESTORE REGS
         BR    R14                      RETURN TO READY
         SPACE 3
QMGONE   DC    X'1'                     USED TO INITIALIZE TO 1ST      X
                                        RECORD ON TRACK
         DS    0F                       FULLWORD            0507 S21101
QMGNOPT  DC    H'255'                   UNUSED OPTION FIELD INDICA
QNDFLAG  DC    X'8000'                  FLAG FOR SECTR CNVRT0507 S21101
QNDMOVE1 MVC   0(0,R15),CDROPTN         MOVE OPTION FIELD          0814
QNDMOVE2 MVC   0(0,R15),0(R11)          UPDATE DEVICE FIELDS   @OZ26495
ADD3     DC    F'3'                     CONSTANT               @OZ26495
QNDCOMPR CLI   0(R14),0                 CHECK FOR LAST RCD ON TRACK0814
         SPACE 3
CKPTLIST ATTACH EP=IEDQNF,SF=L
TW24HRS  DC    F'86400'                 24 HOURS IN SECONDS
HUND     DC    F'100'                   CONVERT TIME TO SECONDS  S22025
TWLVE    DC    A(43200)                 TWELVE HOURS (IN SECONDS)
CLRMASK  DS    0F
         DC    X'7FFFFFFF'              MASK TO CLEAR HIGH BIT   S22025
PATCH    DC    12F'0'                   PATCH AREA             @G36XRNP
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TCKPD 3330                     MERLIN VERSION      0510 S21101
         EJECT
         TQCBD
         EJECT
         DCBD  DSORG=(TX,TR)                                     S22024
         EJECT
         TDEBD
         EJECT
         TTCBD                                                 @G36XRNP
         EJECT
         TLCBD                                                 @G36XRNP
         EJECT
         TNCPID                                                @G36XRNP
         EJECT
         TTNTD
         EJECT
         TTRMD
         EJECT
         TPRIOR
         EJECT
         TAVTD
         EJECT
         TTCXD                          DSECT                    Y02027
         EJECT
         CVT   DSECT=YES                DSECT                    Y02027
         EJECT
         TTSID
         END
