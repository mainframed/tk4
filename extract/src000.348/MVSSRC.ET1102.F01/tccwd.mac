*        %GOTO CCWPLS;                  /* BILINGUAL HEADER
         MACRO
         TCCWD
.*A000000-999999                                               @X02X5X0
.*A060000,360000                                                 S99228
.*C070000                                                        X02004
.*A377000,565000-570000                                          X02004
.*A377000,660000                                               @Y17XAXF
.*C070000                                                      @Y17XAXF
IEDQCCW  DSECT
*                                                              @Y17XAXF
*        CCW DSECT, TCAM 10, 03-04-76                          @Y17XAXF
*                                                              @Y17XAXF
CCW      EQU   IEDQCCW
CCWOPCDE DS    XL1 .                    COMMAND CODE
*        C O M M A N D   C O D E S
CCWPOLL  EQU   X'09' .                  POLL (AUTOPOLL)
CCWSENSE EQU   X'04' .                  SENSE
CCWIPL   EQU   X'05' .                  IPL A 3705             @Y17XAXF
CCWPREP  EQU   X'06' .                  PREPARE
CCWINHIB EQU   X'0A' .                  READ INHIBIT
CCWTIC   EQU   X'08' .                  TIC
CCWWRITE EQU   X'01' .                  WRITE
CCWREAD  EQU   X'02' .                  READ
CCWDIAL  EQU   X'29' .                  DIAL
CCWDISAB EQU   X'2F' .                  DISABLE
CCWENAB  EQU   X'27' .                  ENABLE
CCWBREAK EQU   X'0D' .                  BREAK
CCWNOP   EQU   X'03' .                 NO -OP COMMAND
CCWSEL   EQU   X'0B'                    3270 SELECT              S99228
CCWRDM   EQU   X'06'                    3270 READ MODIFIED       S99228
CCWEAU   EQU   X'0F'                    3270 EAU COMMAND         S99228
CCWREAL  EQU   X'80'                    REAL TIC INDICATOR FLAG  X02004
CCWBRK   EQU   X'09' .                  3705 WRITE BREAK       @Y17XAXF
CCWWS0   EQU   X'31' .                  WRITE START ZERO       @Y17XAXF
CCWWS1   EQU   X'51' .                  WRITE START ONE        @Y17XAXF
CCWRS0   EQU   X'32' .                  READ START ZERO        @Y17XAXF
CCWRS1   EQU   X'52' .                  READ START ONE         @Y17XAXF
CCWTICR  EQU   X'88' .                  DATA ADDR & TIC ADDR INITIAL
*                                                              @Y17XAXF
CCWRRS   EQU   X'93' .                  RESTART RESET          @Y17XAXF
*
CCWADDR  DS    AL3 .                    DATA ADDRESS
*
CCWFLAGS DS    XL1 .                    CCW FLAGS
*        C C W   F L A G S
CCWCD    EQU   X'80' .                  CHAIN DATA
CCWCC    EQU   X'40' .                  COMMAND CHAIN
CCWSLI   EQU   X'20' .                  SUPPRESS INCORRECT LENGTH
CCWSKIP  EQU   X'10' .                  SKIP
CCWPCI   EQU   X'08' .                  PCI
CCWIDA   EQU   X'04'                    INDIRECT ADDRESS LIST    X02004
*                                       IS PRESENT               X02004
*
         DS    XL1 .                    UNUSED BYTE OF CCW
*
CCWCOUNT DS    XL2 .                    BYTE COUNT  (DATA TRANSFER)
CCWLEN   EQU   *-IEDQCCW                CCW LENGTH             @Y17XAXF
         MEND
*        */
*%CCWPLS:;                          /*                       @Y17XAXF*/
*/*                                                          @Y17XAXF*/
*/*      CCW STRUCTURE, TCAM 10, 03-04-76                    @Y17XAXF*/
*/*                                                          @Y17XAXF*/
*DECLARE                            /*                       @Y17XAXF*/
*  1 IEDQCCW BASED,                 /* CCW                   @Y17XAXF*/
*    2 CCW      CHAR(8),            /* CCW                   @Y17XAXF*/
*      3 CCWOPCDE BIT(8),           /* COMMAND CODE          @Y17XAXF*/
*      3 CCWADDR  PTR(24) BDY(BYTE), /* DATA ADDRESS         @Y17XAXF*/
*      3 CCWFLAGS BIT(8),           /* CCW FLAGS             @Y17XAXF*/
*        4 CCWCD   BIT(1),          /* CHAIN DATA            @Y17XAXF*/
*        4 CCWCC   BIT(1),          /* COMMAND CHAIN         @Y17XAXF*/
*        4 CCWSLI  BIT(1),          /* SUPPRESS INCORRECT    @Y17XAXF*/
*                                   /* LENGTH                @Y17XAXF*/
*        4 CCWSKIP BIT(1),          /* SKIP                  @Y17XAXF*/
*        4 CCWPCI  BIT(1),          /* PCI                   @Y17XAXF*/
*        4 CCWIDA  BIT(1),          /* INDIRECT ADDRESS LIST @Y17XAXF*/
*                                   /* IS PRESENT            @Y17XAXF*/
*        4 *       BIT(2),          /* RESERVED              @Y17XAXF*/
*      3 CCWRSV   BIT(8),           /* UNUSED                @Y17XAXF*/
*      3 CCWCOUNT FIXED(15) BDY(BYTE); /* BYTE COUNT         @Y17XAXF*/
*%CCWLEN='LENGTH(IEDQCCW)';         /* LENGTH OF CCW         @Y17XAXF*/
*/*      CCWOPCDE COMMAND CODES                              @Y17XAXF*/
* DCL CCWPOLL  BIT(8) CONSTANT('09'X);/* POLL (AUTOPOLL)     @Y17XAXF*/
* DCL CCWSENSE BIT(8) CONSTANT('04'X);/* SENSE               @Y17XAXF*/
* DCL CCWIPL   BIT(8) CONSTANT('05'X);/* IPL A 3705          @Y17XAXF*/
* DCL CCWPREP  BIT(8) CONSTANT('06'X);/* PREPARE             @Y17XAXF*/
* DCL CCWINHIB BIT(8) CONSTANT('0A'X);/* READ INHIBIT        @Y17XAXF*/
* DCL CCWTIC   BIT(8) CONSTANT('08'X);/* TIC                 @Y17XAXF*/
* DCL CCWWRITE BIT(8) CONSTANT('01'X);/* WRITE               @Y17XAXF*/
* DCL CCWREAD  BIT(8) CONSTANT('02'X);/* READ                @Y17XAXF*/
* DCL CCWDIAL  BIT(8) CONSTANT('29'X);/* DIAL                @Y17XAXF*/
* DCL CCWDISAB BIT(8) CONSTANT('2F'X);/* DISABLE             @Y17XAXF*/
* DCL CCWENAB  BIT(8) CONSTANT('27'X);/* ENABLE              @Y17XAXF*/
* DCL CCWBREAK BIT(8) CONSTANT('0D'X);/* BREAK               @Y17XAXF*/
* DCL CCWNOP   BIT(8) CONSTANT('03'X);/* NO-OP COMMAND       @Y17XAXF*/
* DCL CCWSEL   BIT(8) CONSTANT('0B'X);/* 3270 SELECT         @Y17XAXF*/
* DCL CCWRDM   BIT(8) CONSTANT('06'X);/* 3270 READ MODIFIED  @Y17XAXF*/
* DCL CCWEAU   BIT(8) CONSTANT('0F'X);/* 3270 EAU COMMAND    @Y17XAXF*/
* DCL CCWREAL  BIT(8) CONSTANT('80'X);/* REAL TIC INDICATOR  @Y17XAXF*/
*                                     /* FLAG                @Y17XAXF*/
* DCL CCWBRK   BIT(8) CONSTANT('09'X);/* 3705 WRITE BREAK    @Y17XAXF*/
* DCL CCWWS0   BIT(8) CONSTANT('31'X);/* WRITE START ZERO    @Y17XAXF*/
* DCL CCWWS1   BIT(8) CONSTANT('51'X);/* WRITE START ONE     @Y17XAXF*/
* DCL CCWRS0   BIT(8) CONSTANT('32'X);/* READ START ZERO     @Y17XAXF*/
* DCL CCWRS1   BIT(8) CONSTANT('52'X);/* READ START ONE      @Y17XAXF*/
* DCL CCWTICR  BIT(8) CONSTANT('88'X);/* DATA ADDR & TIC ADDR INITIAL
*                                                            @Y17XAXF*/
* DCL CCWRRS   BIT(8) CONSTANT('93'X);/* RESTART RESET       @Y17XAXF*/
