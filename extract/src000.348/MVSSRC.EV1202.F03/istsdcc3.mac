         TITLE 'ISTSDCC3-  MHR'
ISTSDCC3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSDCC3  78.337'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         PRINT OFF
         PRINT ON
         USING @DATD,DATREG
*   DATREG=ADDR(MLCMHDAT);                                         0035
         LA    DATREG,MLCMHDAT(,MLCAPTR)                           0035
*   SCANPTR=PARMR;                                                 0036
         LR    SCANPTR,PARMR                                       0036
*   PARMSAVE=PARMR;                 /* SAVE PARM REG                 */
         LR    PARMSAVE,PARMR                                      0037
*   TABLEPTR=TABPTR;                                               0038
         LR    TABLEPTR,TABPTR                                     0038
*   MLCNAME=BLANK;                  /* BLANK MLCNAME                 */
         MVI   MLCNAME+1(MLCAPTR),C' '                             0039
         MVC   MLCNAME+2(6,MLCAPTR),MLCNAME+1(MLCAPTR)             0039
         MVI   MLCNAME(MLCAPTR),C' '                               0039
*   MLCMACRO=BLANK;                 /* BLANK MLCMACRO                */
         MVI   MLCMACRO+1(MLCAPTR),C' '                            0040
         MVC   MLCMACRO+2(6,MLCAPTR),MLCMACRO+1(MLCAPTR)           0040
         MVI   MLCMACRO(MLCAPTR),C' '                              0040
*   NAMELEN=0;                      /* SET CTR TO 0                  */
         SLR   NAMELEN,NAMELEN                                     0041
*/********************************************************************/
*/* IF THERE IS NO NAME ON THE MACRO SET UP THE MLCNAME AS BLANKS    */
*/* OTHERWISE MOVE IN THE NAME FROM THE MACRO. HTIS NAME WILL BE USED*/
*/* TO TELL THAT THIS MACRO CAUSED AN ERROR IF ONE IS DETECTED       */
*/********************************************************************/
*                                                                  0042
*   IF CHARCOMP^=BLANK THEN         /* 1ST BUFFER CHAR A BLANK?      */
         CLI   CHARCOMP(SCANPTR),C' '                              0042
         BE    @RF00042                                            0042
*     DO;                                                          0043
*       DO WHILE CHARCOMP^=BLANK;   /* NO,FIND BLANK & COUNT CHAR    */
         B     @DE00044                                            0044
@DL00044 DS    0H                                                  0045
*         NAMELEN=NAMELEN+1;        /* COUNT CHARACTERS              */
         LA    @08,1                                               0045
         ALR   NAMELEN,@08                                         0045
*         SCANPTR=SCANPTR+1;        /* STEP UP PTR                   */
         ALR   SCANPTR,@08                                         0046
*       END;                                                       0047
@DE00044 CLI   CHARCOMP(SCANPTR),C' '                              0047
         BNE   @DL00044                                            0047
*       SCANPTR=PARMSAVE;           /* RESTORE POINTER               */
         LR    SCANPTR,PARMSAVE                                    0048
*       IF NAMELEN<=8 THEN          /* NAME LONGER THAN 8            */
         CH    NAMELEN,@CH00051                                    0049
         BH    @RF00049                                            0049
*         DO;                                                      0050
*           MLCNAME(1:NAMELEN)=TEXTBUF(1:NAMELEN);/* MOVE IN NAME    */
         LR    @07,NAMELEN                                         0051
         BCTR  @07,0                                               0051
         EX    @07,@SM00191                                        0051
*           PARMSAVE=PARMR;         /* SAVE REGS 1 & 2 OVER TRT      */
         LR    PARMSAVE,PARMR                                      0052
*           TWOSAVE=R2;                                            0053
         LR    TWOSAVE,R2                                          0053
*           PARMR=0;                /* SET REGS 1 & 2 TO 0           */
         SLR   PARMR,PARMR                                         0054
*           R2=0;                                                  0055
         SLR   R2,R2                                               0055
*           TRT(CHARCOMP,TTABLE1);  /* TRT FIRST CHARACTER           */
         TRT   CHARCOMP(1,SCANPTR),TTABLE1                         0056
*           IF PARMR=0 THEN         /* FIRST CHAR VALID?             */
         LTR   PARMR,PARMR                                         0057
         BNZ   @RF00057                                            0057
*             DO;                                                  0058
*               SCANPTR=SCANPTR+1;  /* YES, ADVANCE PTR              */
         AH    SCANPTR,@CH00039                                    0059
*               TRT(TEXTBUF,TTABLE2);/* TRT REST OF NAME             */
         TRT   TEXTBUF(256,SCANPTR),TTABLE2                        0060
*               IF R2^=1 THEN       /* TRT STOPPED BY BLANK?         */
         CH    R2,@CH00039                                         0061
         BE    @RF00061                                            0061
*                 DO;                                              0062
*                   RCSAVE=8;       /* NO, ERROR CONDITION           */
         LA    RCSAVE,8                                            0063
*                 END;                                             0064
*               ELSE                /* R2 = 1, GO ON                 */
*                 RCSAVE=0;         /* INDICATE NO ERROR             */
         B     @RC00061                                            0065
@RF00061 SLR   RCSAVE,RCSAVE                                       0065
*             END;                                                 0066
*           ELSE                                                   0067
*             RCSAVE=8;             /* PARMR NOT = 0                 */
         B     @RC00057                                            0067
@RF00057 LA    RCSAVE,8                                            0067
*         END;                                                     0068
*       ELSE                        /* NAME > 8                      */
*         DO;                                                      0069
         B     @RC00049                                            0069
@RF00049 DS    0H                                                  0070
*           MLCNAME(1:8)=TEXTBUF(1:8);/* MOVE IN 1ST 8 CHAR          */
         MVC   MLCNAME(8,MLCAPTR),TEXTBUF(SCANPTR)                 0070
*           RCSAVE=8;               /* ERROR CONDITION               */
         LA    RCSAVE,8                                            0071
*         END;                                                     0072
*     END;                                                         0073
*   ELSE                            /* FIRST CHAR WAS BLANK          */
*     DO;                                                          0074
         B     @RC00042                                            0074
@RF00042 DS    0H                                                  0075
*       RCSAVE=0;                   /* SIGNIFY NO ERROR              */
         SLR   RCSAVE,RCSAVE                                       0075
*     END;                                                         0076
*   IF RCSAVE=0 THEN                                               0077
@RC00042 LTR   RCSAVE,RCSAVE                                       0077
         BNZ   @RF00077                                            0077
*     DO;                                                          0078
*                                                                  0078
*/********************************************************************/
*/* NOW SCAN THE INPUT FOR A MACRO NAME.  WHEN IT IS FOUND BEGIN A   */
*/* SCAN OF THE MACRO NAME TABLE AND COMPARE THE NAME OF THE MACRO   */
*/* THAT IS ON THE INPUT TO THE NAME IN THE TABLE IF THE NAMES ARE   */
*/* NOT THE SAME CONTINUE. IF THE NAME IS FOUND THEN PICK UP THE     */
*/* ADDRESS OF THE ROUTINE ASSOCIATED WITH THE MACRO AND PUT IT IN   */
*/* R0 TO RETURN TO THE CALLER                                       */
*/********************************************************************/
*                                                                  0079
*       SCANPTR=PARMSAVE+NAMELEN+1; /* RESET PTR                     */
         LR    SCANPTR,PARMSAVE                                    0079
         ALR   SCANPTR,NAMELEN                                     0079
         AH    SCANPTR,@CH00039                                    0079
*       IF CHARCOMP^=BLANK THEN                                    0080
         CLI   CHARCOMP(SCANPTR),C' '                              0080
         BE    @RF00080                                            0080
*         DO;                                                      0081
*           MACLEN=0;               /* ZERO OUT CTR                  */
         SLR   MACLEN,MACLEN                                       0082
*           DO WHILE CHARCOMP^=BLANK;/* SCAN FOR BLANKS              */
         B     @DE00083                                            0083
@DL00083 DS    0H                                                  0084
*             MACLEN=MACLEN+1;      /* KEEP COUNT OF CHAR            */
         LA    @10,1                                               0084
         ALR   MACLEN,@10                                          0084
*             SCANPTR=SCANPTR+1;    /* ADVANCE PTR                   */
         ALR   SCANPTR,@10                                         0085
*           END;                                                   0086
@DE00083 CLI   CHARCOMP(SCANPTR),C' '                              0086
         BNE   @DL00083                                            0086
*           BACKPTR=SCANPTR-MACLEN; /* GET PTR TO MACRO IN TEXT      */
         LR    BACKPTR,SCANPTR                                     0087
         SLR   BACKPTR,MACLEN                                      0087
*           IF MACLEN<=EIGHT THEN   /* MACNAME > 8?                  */
         CH    MACLEN,@CH00051                                     0088
         BH    @RF00088                                            0088
*             DO;                                                  0089
*               MLCMACRO(1:MACLEN)=MACOP(1:MACLEN);/* MOVE IN MACRO  */
         LR    @07,MACLEN                                          0090
         BCTR  @07,0                                               0090
         EX    @07,@SM00193                                        0090
*               ENTCOUNT=COUNT;     /* PUT # OF ENTRIES IN CTR       */
         SLR   ENTCOUNT,ENTCOUNT                                   0091
         ICM   ENTCOUNT,3,COUNT(TABLEPTR)                          0091
*               MHTEPTR=TABLEPTR+4; /* SET PTR TO FIRST ENTRY        */
         LA    @07,4                                               0092
         LR    MHTEPTR,TABLEPTR                                    0092
         ALR   MHTEPTR,@07                                         0092
*               RCSAVE=4;           /* INDICATE ERROR DO TABLE SEARCH*/
         LR    RCSAVE,@07                                          0093
*               DO WHILE ENTCOUNT^=0&RCSAVE=4;                     0094
         B     @DE00094                                            0094
@DL00094 DS    0H                                                  0095
*                 IF MLCMACRO=MHTMACRO THEN                        0095
         CLC   MLCMACRO(8,MLCAPTR),MHTMACRO(MHTEPTR)               0095
         BNE   @RF00095                                            0095
*                   DO;                                            0096
*                     TABPTR=MHTVALUE;/* PUT PTR TO MACRO IN R0      */
         L     TABPTR,MHTVALUE(,MHTEPTR)                           0097
*                     RCSAVE=0;     /* INDICATE NO ERROR             */
         SLR   RCSAVE,RCSAVE                                       0098
*                   END;                                           0099
*                 ELSE              /* MLCMACRO^=MHTMACRO,GO ON      */
*                   DO;                                            0100
         B     @RC00095                                            0100
@RF00095 DS    0H                                                  0101
*                     ENTCOUNT=ENTCOUNT-1;/* STEP DOWN CTR           */
         BCTR  ENTCOUNT,0                                          0101
*                     MHTEPTR=MHTEPTR+12;/* STEP UP PTR              */
         AH    MHTEPTR,@CH00163                                    0102
*                   END;                                           0103
*               END;                                               0104
@RC00095 DS    0H                                                  0104
@DE00094 LTR   ENTCOUNT,ENTCOUNT                                   0104
         BZ    @DC00094                                            0104
         CH    RCSAVE,@CH00041                                     0104
         BE    @DL00094                                            0104
@DC00094 DS    0H                                                  0105
*             END;                                                 0105
*           ELSE                    /* MACLEN > 8                    */
*             DO;                                                  0106
         B     @RC00088                                            0106
@RF00088 DS    0H                                                  0107
*               MLCMACRO(1:8)=MACOP(1:8);/* MOVE IN FIRST 8 CHAR     */
         MVC   MLCMACRO(8,MLCAPTR),MACOP(BACKPTR)                  0107
*               RCSAVE=4;           /* ERROR CONDITION               */
         LA    RCSAVE,4                                            0108
*             END;                                                 0109
*         END;                                                     0110
*       ELSE                        /* CHARCOMP = BLANK              */
*         RCSAVE=4;                 /* INDICATE ERROR                */
         B     @RC00080                                            0111
@RF00080 LA    RCSAVE,4                                            0111
*     END;                                                         0112
*   ELSE                                                           0113
*     ;                             /* RCSAVE ^= 0                   */
@RF00077 DS    0H                                                  0114
*   PARMR=SCANPTR+1;                /* SET REG 1 FOR RETURN          */
@RC00077 LA    PARMR,1                                             0114
         ALR   PARMR,SCANPTR                                       0114
*   SVR15=RCSAVE;                   /* REG 15 IN USERS SAVE AREA     */
         ST    RCSAVE,SVR15(,SAVREG)                               0115
*   SVR0=TABPTR;                    /* REG 0 IN USERS SAVE AREA      */
         ST    TABPTR,SVR0(,SAVREG)                                0116
*   SVR1=PARMR;                     /* REG 1 IN USERS SAVE AREA      */
         ST    PARMR,SVR1(,SAVREG)                                 0117
*   DO;                             /* TPEPILOG                      */
*     GEN(PRINT OFF);                                              0119
         PRINT OFF
*     GEN(PRINT ON);                                               0120
         PRINT ON
*   END;                            /* TPEPILOG                      */
*   END ISTSDCC3;                                                  0122
@EL00001 DS    0H                                                  0122
@EF00001 DS    0H                                                  0122
@ER00001 LM    @14,@12,12(@13)                                     0122
         BR    @14                                                 0122
@DATA    DS    0H
@CH00039 DC    H'1'
@CH00041 DC    H'4'
@CH00051 DC    H'8'
@CH00163 DC    H'12'
@SM00191 MVC   MLCNAME(0,MLCAPTR),TEXTBUF(SCANPTR)
@SM00193 MVC   MLCMACRO(0,MLCAPTR),MACOP(BACKPTR)
@DATD    DSECT
         DS    0F
ISTSDCC3 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTSDCC3 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
TTABLE1  DS    CL256
         ORG   TTABLE1
TTAB1    DC    91CL1'X'
         DC    X'00'
         DC    31CL1'X'
         DC    2X'00'
         DC    68CL1'X'
         DC    9X'00'
         DC    7CL1'X'
         DC    9X'00'
         DC    8CL1'X'
         DC    8X'00'
         DC    22CL1'X'
         ORG   TTABLE1+256
TTABLE2  DS    CL256
         ORG   TTABLE2
TTAB2    DC    64CL1'X'
         DC    X'01'
         DC    26CL1'X'
         DC    X'00'
         DC    31CL1'X'
         DC    2X'00'
         DC    68CL1'X'
         DC    9X'00'
         DC    7CL1'X'
         DC    9X'00'
         DC    8CL1'X'
         DC    8X'00'
         DC    6CL1'X'
         DC    10X'00'
         DC    6CL1'x'
         ORG   TTABLE2+256
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENTCOUNT EQU   @10
MHTEPTR  EQU   @09
BACKPTR  EQU   @09
MACLEN   EQU   @08
RCSAVE   EQU   @08
TWOSAVE  EQU   @08
PARMSAVE EQU   @10
NAMELEN  EQU   @09
SAVREG   EQU   @13
SCANPTR  EQU   @04
TABLEPTR EQU   @06
PARMR    EQU   @01
MLCAPTR  EQU   @05
R2       EQU   @02
TABPTR   EQU   @00
DATREG   EQU   @11
ISTMLCA  EQU   0
MLCSKDCB EQU   ISTMLCA+12
MLCFLAGS EQU   ISTMLCA+16
MLCERBF  EQU   ISTMLCA+28
MLCERBF1 EQU   MLCERBF
MLCERBF2 EQU   MLCERBF+8
MLCNAME  EQU   MLCERBF2
MLCMACRO EQU   MLCERBF2+8
MLCERBF3 EQU   MLCERBF+32
MLCPTRS  EQU   ISTMLCA+96
MLCDAT4  EQU   ISTMLCA+596
MLCADSAV EQU   ISTMLCA+652
MLCADDAT EQU   ISTMLCA+724
MLCMHDAT EQU   ISTMLCA+908
MLCWRK1  EQU   ISTMLCA+964
MLCWRK2  EQU   ISTMLCA+1220
MLCOCPRM EQU   MLCWRK2
MLCWRK3  EQU   ISTMLCA+1284
MLCRDPRM EQU   MLCWRK3
MLCWRK4  EQU   ISTMLCA+1348
MLCTPMSG EQU   MLCWRK4
MLCDECB2 EQU   MLCTPMSG+32
SVAREA   EQU   0
SVR15    EQU   SVAREA+16
SVR0     EQU   SVAREA+20
SVR1     EQU   SVAREA+24
CHARCOMP EQU   0
TEXTBUF  EQU   0
MACOP    EQU   0
HEADER   EQU   0
COUNT    EQU   HEADER
TABENTRY EQU   0
MHTMACRO EQU   TABENTRY
MHTVALUE EQU   TABENTRY+8
MACCHAR  EQU   0
MACTAB   EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00003 EQU   HEADER+2
SVR12    EQU   SVAREA+68
SVR11    EQU   SVAREA+64
SVR10    EQU   SVAREA+60
SVR9     EQU   SVAREA+56
SVR8     EQU   SVAREA+52
SVR7     EQU   SVAREA+48
SVR6     EQU   SVAREA+44
SVR5     EQU   SVAREA+40
SVR4     EQU   SVAREA+36
SVR3     EQU   SVAREA+32
SVR2     EQU   SVAREA+28
SVR14    EQU   SVAREA+12
SVLSA    EQU   SVAREA+8
SVHSA    EQU   SVAREA+4
SVRSVD   EQU   SVAREA
MLCSTOWL EQU   MLCDECB2
MLCDECB1 EQU   MLCTPMSG
MLCLDPRM EQU   MLCRDPRM
MLCACPRM EQU   MLCOCPRM
MLCDCB   EQU   MLCWRK1
MLCERDAT EQU   ISTMLCA+852
MLCERSAV EQU   ISTMLCA+780
MLCARDAT EQU   MLCADDAT
MLCARSAV EQU   MLCADSAV
MLCDATRM EQU   MLCDAT4+27
MLCHDRTP EQU   MLCDAT4+26
MLCENTLN EQU   MLCDAT4+24
MLCRLGTH EQU   MLCDAT4+20
MLCKWKTB EQU   MLCDAT4+16
MLCKWDPT EQU   MLCDAT4+12
MLCTBLPT EQU   MLCDAT4+8
MLCRCSAV EQU   MLCDAT4+4
MLCSAV   EQU   MLCDAT4
MLCSAV4  EQU   ISTMLCA+524
MLCDAT3  EQU   ISTMLCA+468
MLCSAV3  EQU   ISTMLCA+396
MLCDAT2  EQU   ISTMLCA+340
MLCSAV2  EQU   ISTMLCA+268
MLCDAT1  EQU   ISTMLCA+212
MLCSAV1  EQU   ISTMLCA+140
@NM00002 EQU   ISTMLCA+136
MLCNCSPL EQU   MLCPTRS+36
MLCLENT  EQU   MLCPTRS+32
MLCPTR7  EQU   MLCPTRS+28
MLCPTR6  EQU   MLCPTRS+24
MLCPTR5  EQU   MLCPTRS+20
MLCPTR4  EQU   MLCPTRS+16
MLCPTR3  EQU   MLCPTRS+12
MLCPTR2  EQU   MLCPTRS+8
MLCPTR1  EQU   MLCPTRS+4
MLCPTR0  EQU   MLCPTRS
MLCGETSZ EQU   ISTMLCA+92
MLCFIII  EQU   MLCERBF3+8
MLCCNFG2 EQU   MLCERBF3
MLCFII   EQU   MLCERBF2+16
MLCCONFG EQU   MLCERBF1
MLCKWD   EQU   ISTMLCA+24
MLCENT   EQU   ISTMLCA+20
@NM00001 EQU   MLCFLAGS
MLCDREOF EQU   MLCFLAGS
MLCINT   EQU   MLCFLAGS
MLCVLCON EQU   MLCSKDCB
MLCSKEL  EQU   ISTMLCA+8
MLCRPH   EQU   ISTMLCA+4
MLCSECCA EQU   ISTMLCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00049 EQU   @RC00042
@RC00080 EQU   @RC00077
@RC00057 EQU   @RC00049
@RC00088 EQU   @RC00080
@RC00061 EQU   @RC00057
@ENDDATA EQU   *
         END   ISTSDCC3,(C'PLS1534',0702,78337)
