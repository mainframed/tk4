         TITLE 'IGCT110D - TCHNG, TCOPY SERVICE ROUTINE'
IGCT110D CSECT ,                                                   0001
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
IGCT110D  IEDHJN  AFTERHJN,HJN     MODULE IDENTIFICATION
*   ROPCAVT=REG1;                   /* ADDR OF OP CNTRL AVT  @Y17XARW*/
         LR    ROPCAVT,REG1                                        0369
*   AVT=OPCAVTPT;                   /* ADDRESS OF AVT        @Y17XARW*/
         L     AVT,OPCAVTPT(,ROPCAVT)                              0370
*   ELMNT=OCCIB;                    /* ADDR OF PARAM LIST    @Y17XARW*/
         L     @10,OPCCOPCE(,ROPCAVT)                              0371
         L     @10,OCCIB(,@10)                                     0371
         ST    @10,ELMNT(,ROPCAVT)                                 0371
*   IF ELMNT->WENTCD>='08'X         /* IS THIS FOR TCHNG     @YM08051*/
*     THEN                                                         0372
         CLI   WENTCD(@10),8                                       0372
         BL    @RF00372                                            0372
*     TCHNG='1'B;                   /* PRESERVE TCHNG INDIC  @YM08051*/
         OI    TCHNG(ROPCAVT),B'01000000'                          0373
*   ELSE                                                           0374
*     TCHNG='0'B;                   /* INDIC NOT TCHNG       @YM08051*/
         B     @RC00372                                            0374
@RF00372 NI    TCHNG(ROPCAVT),B'10111111'                          0374
*   RPRU=OCUNIT;                    /* ADDR OF RESPONSE UNIT @Y17XARW*/
@RC00372 L     @10,OPCCOPCE(,ROPCAVT)                              0375
         L     RPRU,OCUNIT(,@10)                                   0375
*   ENDUNIT=RPRU+12+AVTKEYLE;       /* SETUP END OF UNIT ADDR      0376
*                                                            @Y17XARW*/
         LA    @10,12                                              0376
         LR    @03,RPRU                                            0376
         ALR   @03,@10                                             0376
         AH    @03,AVTKEYLE(,AVT)                                  0376
         ST    @03,ENDUNIT(,ROPCAVT)                               0376
*   IF BDUSYRSP^='60'X×             /* IS BTU RESPONSE GOOD  @Y17XARW*/
*       PRURHSDI='1'B THEN                                         0377
         ALR   @10,IEDPRUQP                                        0377
         CLI   BDUSYRSP(@10),X'60'                                 0377
         BNE   @RT00377                                            0377
         LR    @10,IEDPRUQP                                        0377
         AL    @10,@CF02106                                        0377
         TM    PRURHSDI(@10),B'00000100'                           0377
         BNO   @RF00377                                            0377
@RT00377 DS    0H                                                  0378
*     DO;                           /* NO,                           */
*       ELMNT->WRTCD='1C'X;         /* SET RETURN CODE               */
         L     @10,ELMNT(,ROPCAVT)                                 0379
         MVI   WRTCD(@10),X'1C'                                    0379
*       GO TO POSTAPP1;             /* TELL APPLICATION PROGRAM      */
         B     POSTAPP1                                            0380
*     END;                                                         0381
*   RDATA=ADDR(IEDBDU)+LENGTH(IEDBDU)+3;/* POINT TO POLLING CHARS  0382
*                                                            @Y17XARW*/
@RF00377 LA    @10,21                                              0382
         ALR   @10,IEDPRUQP                                        0382
         STCM  @10,7,RDATA(ROPCAVT)                                0382
*   RWORK=RPRU;                     /* SETUP TEMP PTR TO RU  @Y17XARW*/
         LR    RWORK,RPRU                                          0383
*   GENERATE;                                                      0384
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   RDATA=RDATA+RDATA->FCOUNT+1;    /* POINT TO ADDRESSING CHARS     */
         L     @10,RDATA-1(,ROPCAVT)                               0385
         LA    @10,0(,@10)                                         0385
         SLR   @03,@03                                             0385
         IC    @03,FCOUNT(,@10)                                    0385
         ALR   @03,@10                                             0385
         AL    @03,@CF00084                                        0385
         STCM  @03,7,RDATA(ROPCAVT)                                0385
*   GENERATE;                                                      0386
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   ADDRCHR=RDATA;                  /* SAVE ADDRESS OF ADDR CHARS    */
         L     @10,OPCWORK(,ROPCAVT)                               0387
         L     @03,RDATA-1(,ROPCAVT)                               0387
         LA    @03,0(,@03)                                         0387
         ST    @03,ADDRCHR(,@10)                                   0387
*   RDATA=RDATA+RDATA->FCOUNT+1;    /* POINT TO INPUT IDENTIFIER     */
         SLR   @10,@10                                             0388
         IC    @10,FCOUNT(,@03)                                    0388
         ALR   @10,@03                                             0388
         AL    @10,@CF00084                                        0388
         STCM  @10,7,RDATA(ROPCAVT)                                0388
*   GENERATE;                                                      0389
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF RDATA->FCOUNT=0              /* IS INPUT IDENTIFIER PRESENT   */
*     THEN                                                         0390
         L     @10,RDATA-1(,ROPCAVT)                               0390
         LA    @10,0(,@10)                                         0390
         CLI   FCOUNT(@10),0                                       0390
         BNE   @RF00390                                            0390
*     RDATA=RDATA+1;                /* NO, SKIP ID BYTE              */
         AL    @10,@CF00084                                        0391
         STCM  @10,7,RDATA(ROPCAVT)                                0391
*   ELSE                                                           0392
*     RDATA=RDATA+4;                /* YES, SKIP NEXT THREE FIELDS   */
         B     @RC00390                                            0392
@RF00390 LA    @10,4                                               0392
         L     @03,RDATA-1(,ROPCAVT)                               0392
         LA    @03,0(,@03)                                         0392
         ALR   @10,@03                                             0392
         STCM  @10,7,RDATA(ROPCAVT)                                0392
*   GENERATE;                                                      0393
@RC00390 DS    0H                                                  0393
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF RDATA->FCOUNT=0              /* IS DIAL DATA PRESENT  @Y17XARW*/
*     THEN                                                         0394
         L     @10,RDATA-1(,ROPCAVT)                               0394
         CLI   FCOUNT(@10),0                                       0394
         BNE   @RF00394                                            0394
*     DIALCHAR=0;                   /* NO, INDICATE NO DIAL DATA     */
         L     @10,OPCWORK(,ROPCAVT)                               0395
         SLR   @03,@03                                             0395
         ST    @03,DIALCHAR(,@10)                                  0395
*   ELSE                                                           0396
*     DO;                           /* YES,                          */
         B     @RC00394                                            0396
@RF00394 DS    0H                                                  0397
*       RDATA=RDATA+2;              /* POINT TO DIAL DIGITS  @Y17XARW*/
         LA    @10,2                                               0397
         L     @03,RDATA-1(,ROPCAVT)                               0397
         LA    @03,0(,@03)                                         0397
         ALR   @10,@03                                             0397
         STCM  @10,7,RDATA(ROPCAVT)                                0397
*       GENERATE;                                                  0398
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*       DIALCHAR=RDATA;             /* SAVE PTR TO DIAL DIGS @Y17XARW*/
         L     @10,OPCWORK(,ROPCAVT)                               0399
         L     @03,RDATA-1(,ROPCAVT)                               0399
         LA    @03,0(,@03)                                         0399
         ST    @03,DIALCHAR(,@10)                                  0399
*     END;                                                         0400
*   RTO=ELMNT->WTO;                 /* ADDRESS OF 'TO' AREA          */
@RC00394 L     @10,ELMNT(,ROPCAVT)                                 0401
         L     RTO,WTO-1(,@10)                                     0401
         LA    RTO,0(,RTO)                                         0401
*   RESTRICT(RFROM);                                               0402
*   RESPECIFY                                                      0403
*     IEDQTRM BASED(RFROM);                                        0403
*   RFROM=ELMNT->WFROM;             /* ADDRESS OF 'FROM' AREA        */
         L     RFROM,WFROM-1(,@10)                                 0404
         LA    RFROM,0(,RFROM)                                     0404
*   RFLDS=RFROM+17;                 /* ADDR OF 'FROM' DEV DEP FIELDS */
         LA    RFLDS,17(,RFROM)                                    0405
*   IF TRMOPTFN='1'B                /* ARE OPTION FIELDS PRESENT     */
*     THEN                                                         0406
         TM    TRMOPTFN(RFROM),B'00000010'                         0406
         BNO   @RF00406                                            0406
*     RFLDS=RFLDS+3+RFLDS->FCOUNT;  /* SKIP OPT OFFSET               */
         LA    @10,3                                               0407
         ALR   @10,RFLDS                                           0407
         SLR   @03,@03                                             0407
         IC    @03,FCOUNT(,RFLDS)                                  0407
         ALR   @10,@03                                             0407
         LR    RFLDS,@10                                           0407
*   RESTRICT(RMASK,RLNGTH);                                        0408
@RF00406 DS    0H                                                  0409
*   RTO=RTO+(RFLDS-RFROM);          /* ADDRESS OF 'TO' DEV DEP FLDS  */
         LR    @03,RFLDS                                           0409
         SLR   @03,RFROM                                           0409
         ALR   RTO,@03                                             0409
*   GENERATE;                                                      0410
         LA    RMASK,X'80'             GET MASK FOR EXECUTED INST
LOOP1    EQU   *
         CH    RMASK,DIALMSK            IS THIS MASK FOR DIAL DIGITS
         BE    DIALDIGS                 BRANCH ON YES
         CH    RMASK,ADDRMSK            IS THIS MASK FOR ADDR CHARS
         BE    ADDRCHAR                 BRANCH ON YES
         EX    RMASK,TM1                IS THERE A DEV DEP FIELD
         BNO   SHIFT1                   BRANCH ON NO
MOVFLD   EQU   *
         SR    RLNGTH,RLNGTH            0 LENGTH REGISTER @OZ15650
         IC    RLNGTH,0(RFLDS)          GET LENGTH OF DATA FIELD
         BAL   REG12,CHECKAIB           CHECK FOR END OF AIB @G36XRRU*/
         EX    RLNGTH,MVC1              MOVE DATA TO USER WORKAREA
         LA    RTO,1(RLNGTH,RTO)        UPDATE TO AREA POINTER
         LA    RFLDS,1(RLNGTH,RFLDS)    UPDATE FROM AREA POINTER
SHIFT1   EQU   *
         SRL   RMASK,1                  SHIFT MASK 1 POSITION
         LTR   RMASK,RMASK              ARE THER ANY MORE TO CHECK
         BNZ   LOOP1                    BRANCH ON YES
         LA    RMASK,X'80'             GET MASK FOR EXECUTED INST
LOOP2    EQU   *
         EX    RMASK,TM2                EXECUTE TEST UNDER MASK
         BNO   SHIFT2                   BRANCH IF BIT NOT ON
MOVFLD2  EQU   *
         SR    RLNGTH,RLNGTH            0 LENGTH REGISTER @OZ15650
         IC    RLNGTH,0(RFLDS)          PICK UP FIELD LENGTH
         BAL   REG12,CHECKAIB           CHECK FOR END OF AIB @G36XRRU
         EX    RLNGTH,MVC1              MOVE FIELD
         LA    RTO,1(RLNGTH,RTO)        UPDATE TO AREA POINTER
         LA    RFLDS,1(RLNGTH,RFLDS)    UPDATE FROM AREA POINTER
SHIFT2   EQU   *
         SRL   RMASK,1                  SHIFT TO NEXT MASK BIT
         LTR   RMASK,RMASK              ANY MORE BITS TO CHECK
         BNZ   LOOP2                    BRANCH ON NO
         B     SKIP1
TM1      TM    TRMDEVFL(RFROM),0
TM2      TM    TRMDEVFL+1(RFROM),0
MVC1     MVC   0(0,RTO),0(RFLDS)
SKIP1    EQU   *
*   IF ELMNT->WENTCD<'08'X          /* IS THIS FOR TCHNG             */
*     THEN                                                         0411
         L     @03,ELMNT(,ROPCAVT)                                 0411
         CLI   WENTCD(@03),8                                       0411
         BL    @RT00411                                            0411
*     GO TO POSTAPPL;               /* NO, POST APPLICATION COMPLETE */
*   RPRU=OCUNIT;                    /* SETUP PRU ADDRESS     @Y17XARW*/
         L     @15,OPCCOPCE(,ROPCAVT)                              0413
         L     RPRU,OCUNIT(,@15)                                   0413
*   ELMNT->WANSCD='0C'X;            /* SET ENTRY CODE FOR ANSWER     */
         MVI   WANSCD(@03),X'0C'                                   0414
*   IF CHANGE='1'B THEN                                            0415
         TM    CHANGE(ROPCAVT),B'10000000'                         0415
         BNO   @RF00415                                            0415
*     DO;                           /* IF ADDR CHARS CHANGED @Y17XARW*/
*       PRURH=TRHFID0;              /* SETUP RH FLAGS        @Y17XARW*/
         LR    @03,IEDPRUQP                                        0417
         SL    @03,@CF00068                                        0417
         MVC   PRURH(3,@03),@CB01748                               0417
*       PRUTH=TTH0BYT0;             /* SETUP TH FLAGS        @Y17XARW*/
         MVI   PRUTH(@03),X'0C'                                    0418
*       BDUSYRSP=BDUSYRSP&&BDUSYRSP;/* CLEAR BDU RESPONSE    @Y17XARW*/
         LA    @03,12                                              0419
         ALR   @03,IEDPRUQP                                        0419
         XC    BDUSYRSP(1,@03),BDUSYRSP(@03)                       0419
*       BDUMODIF='22'X;             /* SET MODIFIER TO REPLACE DEVICE
*                                      SESSION INITIATION INFO     0420
*                                                            @Y17XARW*/
         MVI   BDUMODIF(@03),X'22'                                 0420
*       BDUHEADR='1'B;              /* INDICATE THIS IS HEADER     0421
*                                                            @Y17XARW*/
         OI    BDUHEADR(@03),B'01000000'                           0421
*       CALL SAVEBUFF;              /* SAVE COPIED BUFFERS   @Y17XARW*/
         BAL   @14,SAVEBUFF                                        0422
*       OCRESP='0'B;                /* TURN RESPONSE FLAG OFF      0423
*                                                            @Y17XARW*/
         L     @03,OPCCOPCE(,ROPCAVT)                              0423
         NI    OCRESP(@03),B'11111110'                             0423
*       OCWTG=MODT0;                /* SETUP WHERE-TO-GO FLD @Y17XARW*/
         MVC   OCWTG(2,@03),MODT0                                  0424
*       OPCMODID=MOD02;             /* SETUP NEXT MOD ID     @Y17XARW*/
         MVC   OPCMODID(2,ROPCAVT),MOD02                           0425
*     END;                          /*                       @Y17XARW*/
*   ELSE                                                           0427
*     OPCMODID=MODT0;               /* SETUP FOR NEXT MOD    @Y17XARW*/
         B     @RC00415                                            0427
@RF00415 MVC   OPCMODID(2,ROPCAVT),MODT0                           0427
*EXIT:                                                             0428
*   OPCFLAG1=0;                     /* CLEAR FLAG FIELDS     @Y17XARW*/
@RC00415 DS    0H                                                  0428
EXIT     MVI   OPCFLAG1(ROPCAVT),X'00'                             0428
*   REG1=ROPCAVT;                   /* SETUP OP CONTROL AVT  @Y17XARW*/
         LR    REG1,ROPCAVT                                        0429
*   DO;                             /* IEDXCTL                       */
*     GEN EXIT REFS(ROPCAVT,OPCTRACE,OPCXCTL) NOSEQFLOW;           0431
*                                   /*
         LA    15,OPCXCTL(,ROPCAVT)   POINT TO OPCXCTL LIST
         EX    0,OPCTRACE(,ROPCAVT)    INVOKE XCTL TRACE
         XCTL  SF=(E,(15))             XCTL TO NEXT MODULE
*   END;                            /* END OF IEDXCTL        @OZ35627*/
*DIALDIGS:                                                         0433
*   IF TRMDEVFL(2)='1'B THEN        /* ARE DIAL DIGITS SPECIFIED     */
*                                                                  0433
DIALDIGS TM    TRMDEVFL(RFROM),B'01000000'                         0433
         BNO   @RF00433                                            0433
*     /***************************************************************/
*     /*                                                             */
*     /* WHEN DIAL DIGITS ARE SPECIFIED THE FOLLOWING ACTION IS TAKEN*/
*     /* BY THIS MODULE: TCOPY DIGITS IN TTE- DIAL DIGITS TRANSFERRED*/
*     /* TO THE USER WORKARE FROM THE TTE DIGITS IN NCP- DIAL DIGITS */
*     /* TRANSFERRED TO THE USER WORKAREA FROM THE RESPONSE RU TCHNG */
*     /* DIGITS IN TTE- DIAL DIGITS TRANSFERRED TO THE TTE FROM THE  */
*     /* USER WORKAREA DIGITS IN NCP- DIAL DIGITS TRANSFERRED TO THE */
*     /* RU FROM THE USER WORKAREA AND A REPLACE RU IS SENT TO THE   */
*     /* NCP                                                 @YM08051*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0434
*     IF TCHNG='1'B THEN            /* IS IT TCHNG?          @YM08051*/
*                                                                  0434
         TM    TCHNG(ROPCAVT),B'01000000'                          0434
         BNO   @RF00434                                            0434
*       /*************************************************************/
*       /*                                                           */
*       /* TCHNG                                             @YM08051*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0435
*       IF RTO->FDATA='0F'X THEN    /* AND DIGITS IN NCP     @YM08051*/
         CLI   FDATA(RTO),X'0F'                                    0435
         BE    @RT00435                                            0435
*         GO TO GETDIAL0;           /* GO TRANSFER DIGITS    @YM08081*/
*       ELSE                                                       0437
*         GO TO MOVFLD;             /* DIGITS IN TTE         @YM08051*/
*                                                                  0437
         B     MOVFLD                                              0437
*   /*****************************************************************/
*   /*                                                               */
*   /* TCOPY                                                 @YM08051*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0438
*     ELSE                                                         0438
*       IF RFLDS->FDATA='0F'X       /* NO ARE DIGITS IN NCP  @YM08051*/
*         THEN                                                     0438
@RF00434 CLI   FDATA(RFLDS),X'0F'                                  0438
         BE    @RT00438                                            0438
*         GO TO GETDIAL;            /* YES, DIGITS ARE IN RESPONSE   */
*       ELSE                                                       0440
*         GO TO MOVFLD;             /* NO, DIGITS ARE IN TERM ENTRY  */
         B     MOVFLD                                              0440
*   GO TO SHIFT1;                   /* GO CHECK NEXT BIT             */
         B     SHIFT1                                              0441
*GETDIAL0:                                                         0442
*   RTO=RTO+2;                      /* INCREMENT TTE REG     @YM08081*/
GETDIAL0 LA    RTO,2(,RTO)                                         0442
*   GO TO GETDIAL1;                 /* GO MOVE DATA          @YM08081*/
         B     GETDIAL1                                            0443
*GETDIAL:                                                          0444
*   RFLDS=RFLDS+2;                  /* UPDATE 'FROM' DEV DEP PTR     */
GETDIAL  LA    RFLDS,2(,RFLDS)                                     0444
*GETDIAL1:                                                         0445
*   IF DIALCHAR=0                   /* IS THERE ANY DIAL DATA        */
*     THEN                                                         0445
GETDIAL1 L     @03,OPCWORK(,ROPCAVT)                               0445
         L     @03,DIALCHAR(,@03)                                  0445
         LTR   @03,@03                                             0445
         BZ    @RT00445                                            0445
*     GO TO SHIFT1;                 /* NO, GO CHECK NEXT BIT         */
*   CHANGE='1'B;                    /* INDICATE DIAL DIGITS MUST   0447
*                                      CHANGE IN NCP         @Y17XARW*/
         OI    CHANGE(ROPCAVT),B'10000000'                         0447
*   RDATA=DIALCHAR;                 /* ADDRESS OF DIAL DIGITS      0448
*                                                            @Y17XARW*/
         STCM  @03,7,RDATA(ROPCAVT)                                0448
*   IF TCHNG='1'B THEN              /* IS IT TCHNG           @YM08051*/
         TM    TCHNG(ROPCAVT),B'01000000'                          0449
         BO    @RT00449                                            0449
*     GO TO MOVIT0;                 /* YES GO MOVE DIGITS TO RU    0450
*                                                            @YM08051*/
*MOVDATA:                                                          0451
*   RLNGTH=RDATA->FCOUNT+1;         /* LENGTH OF FLD TO MOVE @Y17XARW*/
MOVDATA  L     @03,RDATA-1(,ROPCAVT)                               0451
         SLR   @15,@15                                             0451
         IC    @15,FCOUNT(,@03)                                    0451
         LA    @15,1(,@15)                                         0451
         LR    RLNGTH,@15                                          0451
*MOVIT1:                                                           0452
*   GENERATE;                                                      0452
MOVIT1   DS    0H                                                  0452
*                                  /*                        @G36XRRU*/
         BAL   REG12,CHECKAIB      /* CHECK FOR END OF AIB   @G36XRRU*/
*   RTO->FIELD=RDATA->FIELD;        /* MOVE ONE BYTE OF DATA @Y17XARW*/
         L     @03,RDATA-1(,ROPCAVT)                               0453
         LA    @03,0(,@03)                                         0453
         MVC   FIELD(1,RTO),FIELD(@03)                             0453
*   RLNGTH=RLNGTH-1;                /* REDUCE COUNT TO MOVE          */
         BCTR  RLNGTH,0                                            0454
*   RTO=RTO+1;                      /* UPDATE 'TO' AREA POINTER      */
         LA    @15,1                                               0455
         ALR   RTO,@15                                             0455
*   RDATA=RDATA+1;                  /* UPDATE 'FROM' AREA PTR      0456
*                                                            @Y17XARW*/
         ALR   @03,@15                                             0456
         STCM  @03,7,RDATA(ROPCAVT)                                0456
*   GENERATE;                                                      0457
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF RLNGTH=0                     /* HAS ALL DATA BEEN MOVED       */
*     THEN                                                         0458
         LTR   RLNGTH,RLNGTH                                       0458
         BZ    @RT00458                                            0458
*     GO TO SHIFT1;                 /* YES, GO CHECK NEXT BIT        */
*   GO TO MOVIT1;                   /* NO, GO TO MOVE MORE           */
         B     MOVIT1                                              0460
*ADDRCHAR:                                                         0461
*   RDATA=ADDRCHR;                  /* ADDRESS OF ADDR CHARS @Y17XARW*/
ADDRCHAR L     @03,OPCWORK(,ROPCAVT)                               0461
         L     @03,ADDRCHR(,@03)                                   0461
         STCM  @03,7,RDATA(ROPCAVT)                                0461
*   IF ELMNT->WENTCD>='08'X         /* IS THIS FOR TCHNG             */
*     THEN                                                         0462
         L     @15,ELMNT(,ROPCAVT)                                 0462
         CLI   WENTCD(@15),8                                       0462
         BNL   @RT00462                                            0462
*     GO TO CHANG1;                 /* YES, GO PROCESS CHANGE        */
*   IF RDATA->FCOUNT=0              /* ANY ADDR CHARS PRESENT      0464
*                                                            @Y17XARW*/
*     THEN                                                         0464
         CLI   FCOUNT(@03),0                                       0464
         BNE   @RF00464                                            0464
*     IF TRMDEVFL(3)='1'B           /* YES, AND ARE ADDR CHARS SPECD */
*       THEN                                                       0465
         TM    TRMDEVFL(RFROM),B'00100000'                         0465
         BO    @RT00465                                            0465
*       GO TO MOVFLD;               /* GO MOVE ADDR CHARS FROM TERM  */
*     ELSE                                                         0467
*       GO TO SHIFT1;               /* NO, NO ADDR CHARS TO MOVE     */
         B     SHIFT1                                              0467
*   ELMNT->WTO->TRMDEVFL(3)='1'B;   /* INDICATE ADDR CHARS SPECIFIED */
@RF00464 L     @03,ELMNT(,ROPCAVT)                                 0468
         L     @03,WTO-1(,@03)                                     0468
         OI    TRMDEVFL(@03),B'00100000'                           0468
*   GO TO MOVDATA;                  /* MOVE ADDR CHARS FROM RESPONSE */
         B     MOVDATA                                             0469
*CHANG1:                                                           0470
*   IF ELMNT->WADRCH='1'B           /* ARE ADDR CHARS IN 'TO' AREA   */
*     THEN                                                         0470
CHANG1   L     @03,ELMNT(,ROPCAVT)                                 0470
         TM    WADRCH(@03),B'00000010'                             0470
         BNO   @RF00470                                            0470
*     IF TRMDEVFL(3)='1'B           /* AND AREA ADDR CHARS IN 'FROM' */
*       THEN                                                       0471
         TM    TRMDEVFL(RFROM),B'00100000'                         0471
         BO    @RT00471                                            0471
*       GO TO MOVFLD;               /* YES, MOVE CHARS FROM 'FROM'   */
*     ELSE                                                         0473
*       DO;                         /* NO NOTHING TO MOVE            */
*         ELMNT->WTO->TRMDEVFL(3)='0'B;/* INDICATE NO ADDRESSING   0474
*                                      CHARACTERS                    */
         L     @03,WTO-1(,@03)                                     0474
         NI    TRMDEVFL(@03),B'11011111'                           0474
*         GO TO SHIFT1;             /* GO CHECK NEXT                 */
         B     SHIFT1                                              0475
*       END;                                                       0476
*   ELSE                                                           0477
*     IF TRMDEVFL(3)='1'B           /* ARE ADDR CHARS IN 'FROM' AREA */
*       THEN                                                       0477
@RF00470 TM    TRMDEVFL(RFROM),B'00100000'                         0477
         BNO   @RF00477                                            0477
*       DO;                         /* YES,                          */
*         ELMNT->WTO->TRMDEVFL(3)='0'B;/* INDICATE NO ADDRESSING   0479
*                                      CHARACTERS                    */
         L     @03,ELMNT(,ROPCAVT)                                 0479
         L     @03,WTO-1(,@03)                                     0479
         NI    TRMDEVFL(@03),B'11011111'                           0479
*         GO TO MOVDATA2;           /* MOVE CHARS TO DATA            */
         B     MOVDATA2                                            0480
*       END;                                                       0481
*   GO TO SHIFT1;                   /* GO CHECK NEXT FIELD           */
         B     SHIFT1                                              0482
*MOVDATA2:                                                         0483
*   IF RFLDS->FCOUNT^=RDATA->FCOUNT /* ARE COUNTS EQUAL      @Y17XARW*/
*     THEN                                                         0483
MOVDATA2 L     @03,RDATA-1(,ROPCAVT)                               0483
         CLC   FCOUNT(1,RFLDS),FCOUNT(@03)                         0483
         BNE   @RT00483                                            0483
*     GO TO ERREXIT;                /* NO, ERROR, EXIT               */
*   CHANGE='1'B;                    /* INDICATE ADDR CHARS CHANGED 0485
*                                                            @Y17XARW*/
         OI    CHANGE(ROPCAVT),B'10000000'                         0485
*MOVIT0:                            /*                       @YM08051*/
*   RLNGTH=RDATA->FCOUNT+1;         /* LENGTH OF DATA TO MOVE      0486
*                                                            @Y17XARW*/
MOVIT0   L     @03,RDATA-1(,ROPCAVT)                               0486
         SLR   @15,@15                                             0486
         IC    @15,FCOUNT(,@03)                                    0486
         LA    @15,1(,@15)                                         0486
         LR    RLNGTH,@15                                          0486
*MOVIT2:                                                           0487
*   RDATA->FIELD=RFLDS->FIELD;      /* MOVE ONE BYTE OF DATA @Y17XARW*/
MOVIT2   L     @03,RDATA-1(,ROPCAVT)                               0487
         LA    @03,0(,@03)                                         0487
         MVC   FIELD(1,@03),FIELD(RFLDS)                           0487
*   RLNGTH=RLNGTH-1;                /* REDUCE COUNT TO MOVE          */
         BCTR  RLNGTH,0                                            0488
*   RFLDS=RFLDS+1;                  /* UPDATE 'FROM' AREA POINTER    */
         LA    @15,1                                               0489
         ALR   RFLDS,@15                                           0489
*   RDATA=RDATA+1;                  /* UPDATE 'TO' AREA PTR  @Y17XARW*/
         ALR   @03,@15                                             0490
         STCM  @03,7,RDATA(ROPCAVT)                                0490
*   GENERATE;                                                      0491
         BAL   REG12,CHKUNIT       /* CHECK END OF UNIT EXCEEDED     */
*   IF RLNGTH=0                     /* HAS ALL DATA BEEN MOVED       */
*     THEN                                                         0492
         LTR   RLNGTH,RLNGTH                                       0492
         BZ    @RT00492                                            0492
*     GO TO SHIFT1;                 /* YES, GO CHECK NEXT BIT        */
*   GO TO MOVIT2;                   /* NO, GO TO MOVE MORE           */
         B     MOVIT2                                              0494
*CHKUNIT:                                                          0495
*   IF RDATA>=ENDUNIT               /* ARE WE PAST END OF UNIT       */
*     THEN                                                         0495
CHKUNIT  L     @03,RDATA-1(,ROPCAVT)                               0495
         LA    @03,0(,@03)                                         0495
         L     @15,ENDUNIT(,ROPCAVT)                               0495
         CR    @03,@15                                             0495
         BL    @RF00495                                            0495
*     DO;                           /* YES,                          */
*       RWORK=RWORK->PRFTIC;        /* NEXT UNIT ADDRESS     @Y17XARW*/
         L     RWORK,PRFTIC(,RWORK)                                0497
*       RDATA=RWORK+12+(RDATA-ENDUNIT);/* POINT TO START OF DATA   0498
*                                                            @Y17XARW*/
         LA    @14,12                                              0498
         LR    @00,RWORK                                           0498
         ALR   @00,@14                                             0498
         SLR   @03,@15                                             0498
         ALR   @00,@03                                             0498
         STCM  @00,7,RDATA(ROPCAVT)                                0498
*       ENDUNIT=RWORK+AVTKEYLE+12;  /* END OF NEXT UNIT ADDRESS    0499
*                                                            @Y17XARW*/
         LR    @03,RWORK                                           0499
         AH    @03,AVTKEYLE(,AVT)                                  0499
         ALR   @03,@14                                             0499
         ST    @03,ENDUNIT(,ROPCAVT)                               0499
*       GO TO CHKUNIT;                                             0500
         B     CHKUNIT                                             0500
*     END;                                                         0501
*   GENERATE;                                                      0502
@RF00495 DS    0H                                                  0502
         BR    REG12               /* RETURN TO CALLER               */
*CHECKAIB:                          /*                       @G36XRRU*/
*   IF ELMNT->WENTCD>='08'X         /* IF TCHNG REQUEST      @G36XRRU*/
*     THEN                                                         0503
CHECKAIB L     @03,ELMNT(,ROPCAVT)                                 0503
         CLI   WENTCD(@03),8                                       0503
         BL    @RF00503                                            0503
*     GENERATE;                                                    0504
*                                  /*                        @G36XRRU*/
         BR    REG12               /* THEN RETURN TO CALLER  @G36XRRU*/
*   ELSE                            /* CONTINUE TCOPY CHECK  @G36XRRU*/
*     REG1=RTO+RLNGTH;              /* CURRENT AREA PTR PLUS LENGTH
*                                      FOR MOVE              @G36XRRU*/
         B     @RC00503                                            0505
@RF00503 LR    REG1,RTO                                            0505
         ALR   REG1,RLNGTH                                         0505
*   IF ELMNT->WAIBEND2<REG1         /* IF AIB SIZE EXECEEDED @G36XRRU*/
*     THEN                                                         0506
@RC00503 L     @03,ELMNT(,ROPCAVT)                                 0506
         L     @03,WAIBEND2-1(,@03)                                0506
         LA    @03,0(,@03)                                         0506
         CR    REG1,@03                                            0506
         BH    @RT00506                                            0506
*     GO TO SIZERR;                 /* TAKE ERROR EXIT       @G36XRRU*/
*   ELSE                            /* AIB SIZE ENOUGH       @G36XRRU*/
*     GENERATE;                                                    0508
         BR    REG12               /* RETURN TO CALLER       @G36XRRU*/
*SIZERR:                            /* AIB SIZE EXCEEDED ERR @G36XRRU*/
*     ELMNT->WRTCD='18'X;           /* RC=DATA>AIB AREA      @G36XRRU*/
SIZERR   L     @03,ELMNT(,ROPCAVT)                                 0509
         MVI   WRTCD(@03),X'18'                                    0509
*   GO TO POSTAPP1;                 /* PREPARE TO EXIT       @G36XRRU*/
         B     POSTAPP1                                            0510
*POSTAPPL:                          /* PREPARE TO GOTO 0A10D @G36XRRU*/
*   ELMNT->WTO=RTO;                 /* UPDATE 'TO' AREA PTR  @G36XRRU*/
POSTAPPL L     @03,ELMNT(,ROPCAVT)                                 0511
         STCM  RTO,7,WTO(@03)                                      0511
*POSTAPP1:                          /*                       @G36XRRU*/
*   ELMNT->WVERB='FF'X;             /* SET FLAG FOR 'RETURN FROM 3705
*                                      SERVICE ROUTINE'      @G36XRRU*/
POSTAPP1 L     @03,ELMNT(,ROPCAVT)                                 0512
         MVI   WVERB(@03),X'FF'                                    0512
*   OPCMODID=MOD0A;                 /* EXIT TO IGC0A10D      @G36XRRU*/
         MVC   OPCMODID(2,ROPCAVT),MOD0A                           0513
*   OPCFLAG1=0;                     /* CLEAR CTL FLAG        @G36XRRU*/
         MVI   OPCFLAG1(ROPCAVT),X'00'                             0514
*   REG1=ROPCAVT;                   /* PASS OP CTL AVT ADDR  @G36XRRU*/
         LR    REG1,ROPCAVT                                        0515
*   DO;                             /* IEDXCTL                       */
*     GEN EXIT REFS(ROPCAVT,OPCTRACE,OPCXCTL) NOSEQFLOW;           0517
*                                   /*
         LA    15,OPCXCTL(,ROPCAVT)   POINT TO OPCXCTL LIST
         EX    0,OPCTRACE(,ROPCAVT)    INVOKE XCTL TRACE
         XCTL  SF=(E,(15))             XCTL TO NEXT MODULE
*   END;                            /* END OF IEDXCTL        @OZ35627*/
*ERREXIT:                                                          0519
*   ELMNT->WRTCD='1C'X;             /* BAD RETURN CODE       @G36XRRU*/
ERREXIT  L     @03,ELMNT(,ROPCAVT)                                 0519
         MVI   WRTCD(@03),X'1C'                                    0519
*   GO TO POSTAPP1;                 /* RETURN TO IGC0A10D    @G36XRRU*/
         B     POSTAPP1                                            0520
*SAVEBUFF:                                                         0521
*   RFY                                                            0521
*    (RSAVE,                                                       0521
*     REG14) RSTD;                  /*                       @Y17XARW*/
SAVEBUFF DS    0H                                                  0522
*   SAVERET=REG14;                  /* SAVE RETURN REG       @Y17XARW*/
         L     @15,OPCWORK(,ROPCAVT)                               0522
         ST    REG14,SAVERET(,@15)                                 0522
*   BUFCOUNT=1;                     /* SET BUFFER CNT TO ONE @Y17XARW*/
         MVC   BUFCOUNT(4,@15),@CF00084                            0523
*   DO RSAVE=PRUDATCT BY-AVTKEYLE WHILE RSAVE>AVTKEYLE;/* DETERMINE
*                                      NUMBER OF BUFFS NEEDED      0524
*                                                            @Y17XARW*/
         LH    RSAVE,PRUDATCT(,IEDPRUQP)                           0524
         B     @DE00524                                            0524
@DL00524 DS    0H                                                  0525
*     BUFCOUNT=BUFCOUNT+1;          /* INCREMENT BUFFER COUNT      0525
*                                                            @Y17XARW*/
         L     @15,OPCWORK(,ROPCAVT)                               0525
         LA    @03,1                                               0525
         AL    @03,BUFCOUNT(,@15)                                  0525
         ST    @03,BUFCOUNT(,@15)                                  0525
*   END;                            /*                       @Y17XARW*/
         LH    @15,AVTKEYLE(,AVT)                                  0526
         LCR   @15,@15                                             0526
         ALR   RSAVE,@15                                           0526
@DE00524 CH    RSAVE,AVTKEYLE(,AVT)                                0526
         BH    @DL00524                                            0526
*   REG1=BUFCOUNT;                  /* SETUP BUFFER COUNT    @Y17XARW*/
         L     @15,OPCWORK(,ROPCAVT)                               0527
         L     REG1,BUFCOUNT(,@15)                                 0527
*   RSAVE=ADDR(OPCSAVE);            /* SETUP A SAVEAREA      @Y17XARW*/
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0528
*   CALL GETBUFF;                   /* GET BUFFERS FOR DATA  @Y17XARW*/
         L     @15,OPCGETBF(,ROPCAVT)                              0529
         BALR  @14,@15                                             0529
*   TTCIN=PRUTTCIN;                 /* TTCIN, AND DATA COUNT @Y71XARW*/
         LH    @15,PRUTTCIN(,IEDPRUQP)                             0530
         N     @15,@CF02111                                        0530
         STH   @15,TTCIN(,REG1)                                    0530
*   DATCT=PRUDATCT;                 /* FOR CHECKPOINT        @Y17XARW*/
         LH    @15,PRUDATCT(,IEDPRUQP)                             0531
         STH   @15,DATCT(,REG1)                                    0531
*   PLMVFLG1=0;                     /* CLEAR FLAG BYTES      @Y17XARW*/
         L     @03,OPCWORK(,ROPCAVT)                               0532
         MVI   PLMVFLG1(@03),X'00'                                 0532
*   PLMVFLG2=0;                     /*                       @Y17XARW*/
         MVI   PLMVFLG2(@03),X'00'                                 0533
*   PLMVUNCA=0;                     /* @Y17XARW&                     */
         SLR   @00,@00                                             0534
         ST    @00,PLMVUNCA(,@03)                                  0534
*   PLMVTU=REG1;                    /* SETUP TARGET UNIT     @Y17XARW*/
         ST    REG1,PLMVTU(,@03)                                   0535
*   PLMVTD=ADDR(PRFSUNIT);          /* ADDR OF TARGET DATA   @Y17XARW*/
         LA    @00,PRFSUNIT(,REG1)                                 0536
         ST    @00,PLMVTD(,@03)                                    0536
*   PLMVSU=RPRU;                    /* ADDRESS OF SOURCE UNIT      0537
*                                                            @Y17XARW*/
         ST    RPRU,PLMVSU(,@03)                                   0537
*   PLMVSD=ADDR(PRUDATA);           /* ADDRESS OF SOURCE DATA      0538
*                                                            @Y17XARW*/
         LA    @00,PRUDATA(,IEDPRUQP)                              0538
         ST    @00,PLMVSD(,@03)                                    0538
*   PLMVLNTH=PRUDATCT;              /* LENGTH OF DATA TO MOVE      0539
*                                                            @Y17XARW*/
         STH   @15,PLMVLNTH(,@03)                                  0539
*   OCPTRSAV=REG1;                  /* SAVE BUFFERS IN OPCE  @Y17XARW*/
         L     @15,OPCCOPCE(,ROPCAVT)                              0540
         ST    REG1,OCPTRSAV(,@15)                                 0540
*   REG1=ADDR(IEDPLMV);             /* SETUP PARM LIST       @Y17XARW*/
         LR    REG1,@03                                            0541
*   CALL IEDMVBFR;                  /* MOVE COPY DATA        @Y17XARW*/
         L     @03,AVTSAVTP(,AVT)                                  0542
         L     @15,SAVTMVBF(,@03)                                  0542
         BALR  @14,@15                                             0542
*   REG14=SAVERET;                  /* RESTORE RETURN REG    @Y17XARW*/
         L     @03,OPCWORK(,ROPCAVT)                               0543
         L     REG14,SAVERET(,@03)                                 0543
*   RFY                                                            0544
*    (RSAVE,                                                       0544
*     REG14) UNRSTD;                /*                       @Y17XARW*/
*   RETURN;                         /*                       @Y17XARW*/
@EL00001 DS    0H                                                  0545
@EF00001 DS    0H                                                  0545
@ER00001 BR    @14                                                 0545
*   END IGCT110D                                                   0546
*                                                                  0546
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*                                                                  0546
*       ;                                                          0546
         B     @EL00001                                            0546
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00084 DC    F'1'
@CF00068 DC    F'8'
@CF02106 DC    F'-8'
@CF02111 DC    XL4'0000FFFF'
         DS    0D
DIALMSK  DC    H'64'
ADDRMSK  DC    H'32'
@CB01748 DC    X'0B8000'
MOD0A    DC    CL2'0A'
MODT0    DC    CL2'T0'
MOD00    DC    CL2'00'
MOD02    DC    CL2'02'
MOD07    DC    CL2'07'
         DS    CL1
ZAPAREA  DC    XL104'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
REG0     EQU   @00
REG1     EQU   @01
ROPCAVT  EQU   @02
AVT      EQU   @04
RFLDS    EQU   @05
RWORK    EQU   @06
RTO      EQU   @07
RFROM    EQU   @08
IEDPRUQP EQU   @09
RPRU     EQU   @09
RMASK    EQU   @09
RLNGTH   EQU   @10
RBASE    EQU   @11
REG12    EQU   @12
RSAVE    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
IEDQAPTR EQU   0
IEDQTPTR EQU   0
IEDQPPTR EQU   0
IEDPLMVP EQU   0
ROPCE    EQU   0
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00083 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTMVBF EQU   IEDNSVTD+160
SAVTSCLU EQU   IEDNSVTD+168
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IEDBDU   EQU   0
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUHEADR EQU   BDUFNFLG
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
ADDRESS  EQU   0
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMAPB   EQU   TRMSTAT
TRMSIO   EQU   TRMAPB
TRMOWNER EQU   TRMSIO
TRMSENSE EQU   TRMAPB+3
IEDNTRM  EQU   0
TRMDIALQ EQU   IEDNTRM+1
TRMBYTE7 EQU   TRMDIALQ+2
TRMATNDX EQU   IEDNTRM+4
TRMINDEX EQU   IEDNTRM+6
TRMCOHTG EQU   IEDNTRM+8
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+10
TRMBYTE3 EQU   IEDNTRM+11
TRMBYTE2 EQU   IEDNTRM+12
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+13
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+16
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+17
TRMLTRAC EQU   TRMSIBPT
TRMLBUFR EQU   TRMLTRAC
TRMRLMCT EQU   IEDNTRM+20
TRMLGBST EQU   TRMRLMCT
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
@NM00134 EQU   OCRUDEST+1
OCUNITBF EQU   @NM00134+2
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
OCCIB    EQU   IEDQOPCE+16
OCMSTSAV EQU   OCCIB
OCDEST   EQU   OCMSTSAV
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCWTGB   EQU   OCTIOT
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCFNAALL EQU   OCALSTAT
OCFLAG1  EQU   OCRSID+1
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCBUFNED EQU   OCBACKUP
OCCOUNT1 EQU   OCBUFNED
OCBUFGOT EQU   OCBACKUP+2
OCCOUNT2 EQU   OCBUFGOT
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCPTRSAV EQU   OCMODNME+4
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OC379RRT EQU   OCRSTGTM
OCNCP    EQU   OCRSTGTM+2
OCOID    EQU   IEDQOPCE+56
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLGS EQU   IEDPLMV+18
PLMVFLG1 EQU   PLMVFLGS
PLMVFLG2 EQU   PLMVFLGS+1
PLMVUNCA EQU   IEDPLMV+20
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFTI0   EQU   PRFTIC+1
PRFVTCHK EQU   PRFTI0+2
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFLCB   EQU   IEDQPRF+13
PRFSRCSZ EQU   IEDQPRF+16
PRFSTAT1 EQU   IEDQPRF+20
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFLU2TT EQU   PRFNTXT+1
PRFCRCD  EQU   IEDQPRF+29
PRFTSOFL EQU   PRFCRCD
PRFCHDR  EQU   IEDQPRF+32
PRFNHDR  EQU   PRFCHDR
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
PRF2SEQP EQU   PRF2WD2
PRF2RFLG EQU   PRF2SEQP
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUNUNIT EQU   PRUTIC+1
PRUVTCHK EQU   PRUNUNIT+2
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCTRACE EQU   IEDQOPCD+32
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCFLAG1 EQU   IEDQOPCD+146
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCWRKSP EQU   IEDQOPCD+320
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
OPCSESS  EQU   IEDQOPCD+384
OPCSFLAG EQU   OPCSESS
OPCSENSE EQU   OPCSESS+8
OPCSNSSY EQU   OPCSENSE
OPCSNSUS EQU   OPCSENSE+2
OPCPCID  EQU   IEDQOPCD+456
OPCUNIQP EQU   OPCPCID+2
OPCSESSF EQU   IEDQOPCD+464
WORKAREA EQU   0
WVERB    EQU   WORKAREA+8
WENTCD   EQU   WORKAREA+9
WANSCD   EQU   WORKAREA+10
WADRCH   EQU   WANSCD
WRTCD    EQU   WORKAREA+11
WPTR1    EQU   WORKAREA+16
WTO      EQU   WPTR1+1
WPTR2    EQU   WORKAREA+20
WFROM    EQU   WPTR2+1
WAIBEND  EQU   WORKAREA+36
WAIBEND2 EQU   WAIBEND+1
FIELDS   EQU   0
FIELD    EQU   FIELDS
FCOUNT   EQU   FIELD
FDATA    EQU   FIELDS+1
POINTERS EQU   0
SAVERET  EQU   POINTERS+24
BUFCOUNT EQU   POINTERS+28
ADDRCHR  EQU   POINTERS+32
DIALCHAR EQU   POINTERS+36
PRUBUFF  EQU   0
TTCIN    EQU   PRUBUFF
DATCT    EQU   PRUBUFF+2
GETBUFF  EQU   0
IEDMVBFR EQU   0
FREEBUFF EQU   0
@NM00113 EQU   TRMSTATE
TRMLUFD0 EQU   TRMBYTE7
TRMSNAST EQU   TRMBYTE6
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMIPLDM EQU   TRMNCP
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
@NM00141 EQU   OCCKDATA
@NM00143 EQU   OCCIB
@NM00144 EQU   @NM00143+1
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
@NM00149 EQU   OCBACKUP
@NM00150 EQU   OCCKDATA
OCMSGFLG EQU   OCPREFLG
OCBKUP1  EQU   OCMODNME
@NM00154 EQU   OCMODNME
OCBKUP2  EQU   OCCKDATA
OCBKUP3  EQU   OCLDNME
OCRESPTR EQU   OCBKUP3+4
OCDIALLN EQU   OCRESPTR
OCIPLDMP EQU   OCLDNME+4
@NM00170 EQU   PRFSRCSZ
PRFOPCTL EQU   PRFNHDR
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
WRKSPACE EQU   OPCWRKSP
ELMNT    EQU   WRKSPACE
ENDUNIT  EQU   WRKSPACE+4
RDATA    EQU   WRKSPACE+9
FLAGS    EQU   OPCFLAG1
CHANGE   EQU   FLAGS
TCHNG    EQU   FLAGS
BDUTEXT  EQU   BDUEND
OCLINRRT EQU   OCTRUNIT
OCPCID   EQU   OCBACKUP
OCRSNCDE EQU   OCALSTAT
OCSENSE  EQU   OCBACKUP
PRFOID   EQU   PRFCRCD
PRFSHDR  EQU   IEDQPRF+42
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
TRMSRPTR EQU   TRMPLIM
*                                      START UNREFERENCED COMPONENTS
@NM00223 EQU   WRKSPACE+8
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
@NM00172 EQU   PRFOPCTL+2
PRFOPFLG EQU   PRFOPCTL+1
@NM00171 EQU   PRFOPCTL
PRFSVFLG EQU   @NM00170+3
PRFSVFFO EQU   @NM00170
@NM00157 EQU   OCIPLDMP
OCACTRQ  EQU   OCIPLDMP
OCDACRQ  EQU   OCIPLDMP
OCIPLRQ  EQU   OCIPLDMP
OCDMPRQ  EQU   OCIPLDMP
@NM00156 EQU   OCRESPTR+2
OCOHNATA EQU   OCDIALLN
OCRRTPTR EQU   OCBKUP3
@NM00155 EQU   OCBKUP2+4
OCNHITTC EQU   OCBKUP2+2
OCLINTTC EQU   OCBKUP2
OCCSIB   EQU   @NM00154
@NM00153 EQU   OCBKUP1+6
OCTARTTC EQU   OCBKUP1+4
OCSRTTC  EQU   OCBKUP1+2
OCRSTTC  EQU   OCBKUP1
@NM00152 EQU   OCMSGFLG
OCRRT    EQU   OCMSGFLG
OCNAME   EQU   OCMSGFLG
OCLU1TTE EQU   @NM00150+5
OCSFLAG  EQU   @NM00150+4
OCLU2TTI EQU   @NM00150+2
OCLU1TTI EQU   @NM00150
OCDISTLN EQU   @NM00149+6
OCDISTAD EQU   @NM00149+2
OCDISTNA EQU   @NM00149
OCICINAC EQU   OCICSW
@NM00148 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00147 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00146 EQU   @NM00143+2
@NM00145 EQU   @NM00144
OCTSTAT  EQU   @NM00144
OCREASON EQU   @NM00143
@NM00142 EQU   @NM00141+4
OCOIDEP  EQU   @NM00141
TRMLDISC EQU   TRMLINK
@NM00132 EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00131 EQU   TRMCDMGR
@NM00130 EQU   TRMCDMGR
@NM00129 EQU   TRMCDMGR
@NM00128 EQU   TRMCDMGR
@NM00127 EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
@NM00126 EQU   TRMLU
@NM00125 EQU   TRMLU
@NM00124 EQU   TRMLU
TRMTDIFF EQU   TRMLU
@NM00123 EQU   TRMLU
@NM00122 EQU   TRMLU
@NM00121 EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMCONN  EQU   TRMIPLDM
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00120 EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
TRMLUNAS EQU   TRMLU1
@NM00119 EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
@NM00118 EQU   TRMLU1
TRMCPOPT EQU   TRMLU1
TRMCPREQ EQU   TRMLU1
@NM00117 EQU   TRMNCP1
TRMANS   EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00116 EQU   TRMSNAST
TRMDRSRC EQU   TRMSNAST
@NM00115 EQU   TRMLUFD0
TRMNOINP EQU   TRMLUFD0
TRMASSOC EQU   TRMLUFD0
TRMAUTO  EQU   TRMLUFD0
@NM00114 EQU   @NM00113
TRMENTRY EQU   @NM00113
@NM00229 EQU   POINTERS+20
@NM00228 EQU   POINTERS+16
@NM00227 EQU   POINTERS+12
@NM00226 EQU   POINTERS+8
@NM00225 EQU   POINTERS+4
@NM00224 EQU   POINTERS
WAIBEND1 EQU   WAIBEND
@NM00222 EQU   WORKAREA+28
WRQTG    EQU   WORKAREA+26
WTNTNDX  EQU   WORKAREA+24
@NM00221 EQU   WPTR2
@NM00220 EQU   WPTR1
WECBA    EQU   WORKAREA+12
WDIALD   EQU   WANSCD
@NM00219 EQU   WANSCD
WLINK    EQU   WORKAREA+5
WPRI     EQU   WORKAREA+4
WQCBADR  EQU   WORKAREA
OPCBOTTM EQU   IEDQOPCD+3644
@NM00218 EQU   IEDQOPCD+1948
@NM00217 EQU   IEDQOPCD+1860
@NM00216 EQU   IEDQOPCD+1772
@NM00215 EQU   IEDQOPCD+1696
@NM00214 EQU   IEDQOPCD+1620
OPCDSRWT EQU   IEDQOPCD+1616
@NM00213 EQU   IEDQOPCD+1532
@NM00212 EQU   IEDQOPCD+1336
@NM00211 EQU   IEDQOPCD+1328
@NM00210 EQU   IEDQOPCD+528
OPCRSTRS EQU   IEDQOPCD+524
OPCSAVES EQU   IEDQOPCD+520
OPCRSPBD EQU   IEDQOPCD+516
OPCNFY03 EQU   IEDQOPCD+512
OPCNFY01 EQU   IEDQOPCD+508
OPCURC   EQU   IEDQOPCD+504
OPCCINBD EQU   IEDQOPCD+500
OPCCRKEY EQU   IEDQOPCD+496
OPCDRSET EQU   IEDQOPCD+492
OPCDRCLN EQU   IEDQOPCD+488
OPCDRDEL EQU   IEDQOPCD+484
OPCDRLOD EQU   IEDQOPCD+480
OPCDRLOC EQU   IEDQOPCD+476
OPCDRCVT EQU   IEDQOPCD+472
OPCDRFST EQU   IEDQOPCD+468
OPCLSABC EQU   IEDQOPCD+466
@NM00209 EQU   IEDQOPCD+465
@NM00208 EQU   OPCSESSF
OPCUNIQV EQU   OPCUNIQP+2
OPCUNIQU EQU   OPCUNIQP
OPCOSSCP EQU   OPCPCID
@NM00207 EQU   IEDQOPCD+452
@NM00206 EQU   IEDQOPCD+448
OPCSDUPU EQU   IEDQOPCD+444
OPCSDULU EQU   IEDQOPCD+440
OPCSDRVT EQU   IEDQOPCD+436
OPCSDRET EQU   IEDQOPCD+432
OPCSDHSY EQU   IEDQOPCD+428
OPCSDENQ EQU   IEDQOPCD+424
OPCSDDIA EQU   IEDQOPCD+420
OPCSDAPU EQU   IEDQOPCD+416
OPCSDALU EQU   IEDQOPCD+412
OPCCSKEY EQU   IEDQOPCD+408
OPCSSKEY EQU   IEDQOPCD+404
OPCPRTTE EQU   IEDQOPCD+400
OPCLU2TT EQU   OPCSESS+14
OPCLU1TT EQU   OPCSESS+12
OPCSNSU2 EQU   OPCSNSUS+1
OPCSNSU1 EQU   OPCSNSUS
OPCSNSMN EQU   OPCSNSSY+1
OPCSNSMJ EQU   OPCSNSSY
OPCCSIB  EQU   OPCSESS+4
OPCCTTE  EQU   OPCSESS+1
@NM00205 EQU   OPCSFLAG
OPCISQUD EQU   OPCSFLAG
OPCERRST EQU   OPCSFLAG
OPCISRSP EQU   OPCSFLAG
OPCISQUE EQU   OPCSFLAG
OPCRAPMH EQU   OPCSFLAG
OPCRAPI  EQU   OPCSFLAG
OPCGTSIB EQU   IEDQOPCD+380
@NM00204 EQU   OPCPWCOB+9
@NM00203 EQU   OPCPWCOB+8
@NM00202 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00201 EQU   OPCSPEC
@NM00200 EQU   OPCSPEC
@NM00199 EQU   OPCSPEC
@NM00198 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00197 EQU   OPCLDNME+5
@NM00196 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
TTHDCF   EQU   IEDTH+8
TTHTAG2  EQU   TTHTAG+1
@NM00195 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   IEDTH+4
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00194 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
@NM00193 EQU   TRHBYTE2
TRHPDI   EQU   TRHBYTE2
TRHEDI   EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00192 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
TRHQRI   EQU   TRHBYTE1
@NM00191 EQU   TRHBYTE1
@NM00190 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00189 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00188 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
@NM00187 EQU   IEDPRUND+6
PRUTAG   EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00186 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00185 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00184 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00183 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00182 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
@NM00181 EQU   PRUVTCHK
PRUITSET EQU   PRUVTCHK
@NM00180 EQU   PRUVTCHK
@NM00179 EQU   PRUNUNIT
@NM00178 EQU   PRUTIC
@NM00177 EQU   IEDPRUQD+4
PRF2RTTI EQU   PRF2SEQP+2
@NM00176 EQU   PRF2SEQP+1
@NM00175 EQU   PRF2RFLG
PRF2RINB EQU   PRF2RFLG
PRF2MDCF EQU   IEDPF2+1
PRF2RAPI EQU   PRF2FLG2
PRF2CSMF EQU   PRF2FLG2
PRF2BNN1 EQU   PRF2FLG2
PRF2NCU2 EQU   PRF2FLG2
PRF2TERM EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00174 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00173 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
@NM00169 EQU   PRFTSOFL
PRFNEDIT EQU   PRFTSOFL
PRFSVSEQ EQU   PRFLU2TT
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00168 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFFHP   EQU   PRFSTAT1
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSIZE  EQU   PRFSRCSZ+2
PRFSRCE  EQU   PRFSRCSZ
PRFLU1TT EQU   PRFLCB+1
PRFRCDE  EQU   PRFLCB
PRFPIUO  EQU   PRFPLQCB
@NM00167 EQU   PRFVTCHK
PRFITSET EQU   PRFVTCHK
@NM00166 EQU   PRFVTCHK
@NM00165 EQU   PRFTI0
@NM00164 EQU   PRFTICC
@NM00163 EQU   PRFTICC
@NM00162 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00161 EQU   PRFTICC
@NM00160 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOFN  EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00159 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
@NM00158 EQU   PLMVFLG1
PLMVTRIB EQU   PLMVFLG1
PLMVSRIB EQU   PLMVFLG1
PLMVTSKP EQU   PLMVFLG1
PLMVSSKP EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
PLMVSCTG EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
@NM00151 EQU   OCLDNME+6
OC1SQID  EQU   OCLDNME+4
OCWAITPC EQU   OCPREFLG
OCSRCCLN EQU   OCPREFLG
OCREMCON EQU   OCPREFLG
OCCLNUP  EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
OCRMPORQ EQU   OCREQFLG
OCCDLACT EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
@NM00140 EQU   IEDQOPCE+60
OCURC    EQU   OCOID
OCCKPTWA EQU   OCCKDATA+4
OCSRCTTC EQU   OCNCP
OCCKDAT2 EQU   OC379RRT+1
OCCKDAT1 EQU   OC379RRT
OCECHOPT EQU   OCPTRSAV
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
@NM00139 EQU   OCBACKUP+4
OCBUFRET EQU   OCCOUNT2
OCBUFUSD EQU   OCCOUNT1
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
OCTYPTRM EQU   OCFLAG1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
OCDACTIP EQU   OCFNAALL
OCRENTRD EQU   OCALSTAT
OCDIALX  EQU   OCWTGB
OCTRMTBL EQU   IEDQOPCE+20
OCATNDX  EQU   OCMSTSAV+2
OCREQVAL EQU   OCDEST+1
OCCONID  EQU   OCDEST
OCLOCAD  EQU   OCRLN
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00138 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00137 EQU   OCUNITBF
OCINVTIC EQU   OCUNITBF
@NM00136 EQU   OCUNITBF
@NM00135 EQU   @NM00134
@NM00133 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
TRMSUBST EQU   IEDNTRM+22
TRMTYPE  EQU   IEDNTRM+21
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLBUFR+1
TRMGPCNT EQU   TRMLBUFR
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+14
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMCINOP EQU   TRMCDF0
TRMRSTPD EQU   TRMCDF0
TRMCLNXI EQU   TRMCDF0
TRMDVAS0 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMCDST  EQU   TRMINDEX
TRMASNDX EQU   TRMATNDX
TRMBYTE8 EQU   TRMDIALQ+1
@NM00112 EQU   TRMDIALQ
@NM00111 EQU   IEDNTRM
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMLOCAD EQU   TRMSENSE
TRMTEMPR EQU   TRMAPB+2
TRMNADDR EQU   TRMOWNER
@NM00110 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00109 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00108 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMSTEAL EQU   TRMPRILK
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00107 EQU   TRMRSTRT
@NM00106 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
BDUCMND  EQU   IEDBDU
SAVTSMAX EQU   IEDNSVTD+500
SAVTSINO EQU   IEDNSVTD+498
SAVTAMAX EQU   IEDNSVTD+496
SAVTAENO EQU   IEDNSVTD+494
SAVTAINO EQU   IEDNSVTD+492
SAVTNMAX EQU   IEDNSVTD+490
SAVTNENO EQU   IEDNSVTD+488
SAVTNINO EQU   IEDNSVTD+486
SAVTRSZE EQU   IEDNSVTD+484
SAVTRMAX EQU   IEDNSVTD+482
SAVTRENO EQU   IEDNSVTD+480
SAVTRINO EQU   IEDNSVTD+478
SAVTRMIN EQU   IEDNSVTD+476
SAVTPMID EQU   IEDNSVTD+474
SAVTRRTC EQU   IEDNSVTD+472
SAVTLUSG EQU   IEDNSVTD+468
SAVTACNQ EQU   IEDNSVTD+464
SAVTCM20 EQU   IEDNSVTD+460
SAVTCFDC EQU   IEDNSVTD+456
SAVTCMOT EQU   IEDNSVTD+452
SAVTCMIN EQU   IEDNSVTD+448
SAVTCPCH EQU   IEDNSVTD+444
SAVTCRGT EQU   IEDNSVTD+440
SAVTNALC EQU   IEDNSVTD+436
SAVTATCT EQU   IEDNSVTD+434
SAVTCRIU EQU   IEDNSVTD+432
SAVTCRHI EQU   IEDNSVTD+430
SAVTCRIB EQU   IEDNSVTD+428
SAVTLCQ  EQU   IEDNSVTD+424
SAVTDRSR EQU   IEDNSVTD+420
SAVTATPT EQU   IEDNSVTD+416
SAVTCSMI EQU   IEDNSVTD+412
SAVTNXCR EQU   IEDNSVTD+408
SAVTCRPT EQU   IEDNSVTD+404
SAVTCIPH EQU   IEDNSVTD+400
SAVTBTCO EQU   IEDNSVTD+396
SAVTBTCI EQU   IEDNSVTD+392
SAVTBPCO EQU   IEDNSVTD+388
SAVTBPCI EQU   IEDNSVTD+384
SAVTLLCB EQU   IEDNSVTD+380
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00105 EQU   IEDNSVTD+325
@NM00104 EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00103 EQU   SAVTCKQB+8
@NM00102 EQU   SAVTCKEC+1
@NM00101 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00100 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00099 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00098 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00097 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTEP   EQU   SAVTSCLU
SAVTXTRQ EQU   IEDNSVTD+164
@NM00096 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00095 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00094 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00093 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00092 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00091 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00090 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTTVT   EQU   IEDQAVTD+1268
AVTSITS  EQU   IEDQAVTD+1264
AVTMSUHI EQU   IEDQAVTD+1260
AVTSITU  EQU   IEDQAVTD+1256
AVTSITP  EQU   IEDQAVTD+1252
AVTPADDR EQU   IEDQAVTD+1248
@NM00089 EQU   IEDQAVTD+1246
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00088 EQU   IEDQAVTD+1242
@NM00087 EQU   IEDQAVTD+1241
@NM00086 EQU   IEDQAVTD+1240
@NM00085 EQU   IEDQAVTD+1237
@NM00084 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00083
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00082 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00081 EQU   IEDQAVTD+1140
@NM00080 EQU   IEDQAVTD+1137
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00072 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00071 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00070 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00069 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00068 EQU   AVTBIT2
@NM00067 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00066 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00065 EQU   IEDQAVTD+950
@NM00064 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00063 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL2
@NM00058 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTRAPI  EQU   AVTSAVTF
AVTLCLST EQU   AVTSAVTF
AVT370X  EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
AVTTRNOS EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00014 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00013 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTECBAD EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTRNMPT EQU   IEDQAVTD+424
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
AVTTRAPI EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
*                                      END UNREFERENCED COMPONENTS
@RT00411 EQU   POSTAPPL
@RT00435 EQU   GETDIAL0
@RF00435 EQU   MOVFLD
@RT00438 EQU   GETDIAL
@RF00438 EQU   MOVFLD
@RF00433 EQU   SHIFT1
@RT00445 EQU   SHIFT1
@RT00449 EQU   MOVIT0
@RT00458 EQU   SHIFT1
@RT00462 EQU   CHANG1
@RT00465 EQU   MOVFLD
@RF00465 EQU   SHIFT1
@RT00471 EQU   MOVFLD
@RF00477 EQU   SHIFT1
@RT00483 EQU   ERREXIT
@RT00492 EQU   SHIFT1
@RT00506 EQU   SIZERR
@EL01    EQU   @EL00001
@ENDDATA EQU   *
@DATEND  EQU   *
         END   IGCT110D
