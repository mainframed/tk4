         TITLE 'IEDQBI  POLLSTOP-VARYOFF ROUTINE'
IEDQBI   CSECT
***********************************************************************
*                                                                     *
* $MOD(IEDQBI) COMP(M@) PROD(TCAM):                               @01A*
*                                                                     *
* DESCRIPTIVE NAME = POLLSTOP/VARYOFF ROUTINE                 @ZM00796*
*                                                                     *
* COPYRIGHT= 5735-RC3 COPYRIGHT IBM CORP 1979                 @ZM00796*
* LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                 @ZM00796*
* REFER TO COPYRIGHT INSTRUCTIONS FORM NMBER G120-2083        @ZM00796*
*                                                                     *
* STATUS = ACF/TCAM VERSION 2 RELEASE 1                        @ZM00796
*                                                                     *
* FUNCTION --                                                         *
*   THIS ROUTINE DEACTIVATES THE CURRENTLY CONNECTED TERMINAL FOR     *
*   ENTERING.  THIS FUNCTION IS NOT PERFORMED FOR DIAL TERMINALS,     *
*   TSO, PROCESS ENTRIES, OR LOCK MODE.  AT THE FIRST OF THE          *
*   ROUTINE IT IS DETERMINED WHAT THE MAXIMUM NUMBER OF BUFFERS       *
*   NEEDED SHOULD BE.  ANY BUFFERS NOT USED BY THE END OF THE         *
*   ROUTINE WILL BE RETURNED TO THE BUFFER POOL.  THE BUFFERS ARE     *
*   USED TO CREATE OPERATOR CONTROL COMMANDS FOR VARYING A TERMINAL   *
*   OFF THROUGH OPERATOR CONTROL OR HAVING OPERATOR CONTROL PRINT A   *
*   MESSAGE SAYING THAT THE TERMINAL HAS BEEN VARIED OFF.  IF THE     *
*   CURRENTLY CONNECTED TERMINAL/CONTROL UNIT (270X) IS IN THE        *
*   ACTIVE SIDE OF THE INVITATION LIST THEN ALL OCCURANCES OF THAT    *
*   TERMINAL ARE MOVED TO THE INACTIVE SIDE OF THE INVITATION LIST.   *
*   THIS IS FOR SPECIFIC AND GENERAL POLL.  A BUFFER WILL BE BUILT    *
*   WITH A COMMAND TO OPERATOR CONTROL TO PRINT MESSAGE, IED026I,     *
*   WHICH INDICATES A TERMINAL HAS BEEN STOPPED.  IF THE CURRENTLY    *
*   CONNECTED TERMINAL, 270X, GENERAL POLL, IS ON THE INACTIVE SIDE   *
*   OF THE INVITATION LIST, THEN GENERAL POLL IS DEACTIVATED BY       *
*   MOVING THE CONTROL UNIT ENTRIES ASSOCIATED WITH THE CURRENTLY     *
*   CONNECTED TERMINAL TO THE INACTIVE SIDE OF THE INVITATION LIST.   *
*   SPECIFIC POLL IS THEN STARTED FOR ALL TERMINALS ASSOCIATED WITH   *
*   THE EXCEPTION OF THE CURRENTLY CONNECTED TERMINAL.  TWO BUFFERS   *
*   ARE THEN BUILT FOR OPERATOR CONTROL TO PRINT MESSAGES TO          *
*   INDICATE THAT GENERAL POLL HAS BEEN STOPPED (IED144I) AND THAT    *
*   THE TERMINAL HAS BEEN STOPPED (IED026I).                          *
*   IF THE CURRENTLY CONNECTED TERMINAL IS 3705, SPECIFIC POLL,       *
*   THEN THE TRMRSACT BIT IS TURNED ON AND A BUFFER IS BUILT FOR      *
*   OPERATOR CONTROL TO HAVE THE TERMINAL STOPPED MESSAGE, IED026I,   *
*   PRINTED.  IF THE CURRENTLY CONNECTED TERMINAL IS A CONTROL UNIT   *
*   ATTACHED TO A 3705, THEN A BUFFER IS BUILT FOR OPERATOR CONTROL   *
*   TO DO A V XXX,OFFTP,E.  THIS WILL CAUSE GENERAL POLL TO           *
*   BE STOPPED AND SPECIFIC POLL TO BE STARTED.  IF THE CURRENTLY     *
*   CONNECTED TERMINAL IS 3705, GENERAL POLL, THEN THE PREVIOUS       *
*   OPERATION OF BUILDING A BUFFER FOR OPERATOR CONTROL TO STOP       *
*   GENERAL POLL IS DONE, THEN ANOTHER BUFFER IS BUILT FOR OPERATOR   *
*   CONTROL TO DO A V XXX,OFFTP,E FOR THE CURRENTLY CONNECTED         *
*   TERMINAL.                                                         *
*   IF THE FUNCTION TO BE PERFORMED IS VARYOFF THEN A ROUTINE         *
*   DETERMINES FROM THE OPTION TARGET= ON THE IEDVOFF MACRO,          *
*   WHETHER TO DO A V LINE NO.,OFFTP,C OR V STATNAME,OFFTP,B OR       *
*   F JOBNAME,DEACT.
*   ONE OF THESE COMMANDS IS BUILT IN A BUFFER TO BE SENT TO OPERATOR *
*   CONTROL.                                                          *
*   IF INTVL= IS SPECIFIED (POLLSTOP AND VARYOFF) THEN A TIME DELAY   *
*   ELEMENT IS BUILT.  THE SUBTASK ASSOCIATED WITH THIS ELEMENT IS    *
*   LOCATED AT THE END OF THIS MODULE.  WHEN THE ELEMENT IS TAKEN     *
*   OFF THE TIME DELAY QUEUE THE SUBTASK BUILDS A VARY ONTP COMMAND   *
*   OR A MODIFY COMMAND IN A BUFFER FOR OPERATOR CONTROL. IF THE      *
*   COMMAND WAS V STATNAME,OFFTP,B, THEN THE VARY ONTP COMMAND WILL   *
*   BE V STATNAME,ONTP,B INSTEAD OF V STATNAME,ONTP,E OR F JOBNAME,   *
*   ACTIV, WHEN THE COMMAND IS F JOBNAME,DEACT.                       *
*                                                                     *
* ENTRY POINTS --                                                     *
*   IEDQBI                                                            *
*   SUBTASK FOLLOWING IEDQBI                                          *
*                                                                     *
* INPUT                                                               *
*   REGISTER 0 - ZERO (IEDQBD)                                        *
*   REGISTER 1 - ADDRESS OF PARAMETER LIST (IEDQUI)                   *
*   REGISTER 1 - ELEMENT (OR ZERO) FROM IEDQBD                        *
*   REGISTER 3 - ADDRESS OF SCB                                       *
*   REGISTER 4 - ADDRESS OF LCB                                       *
*   REGISTER 7 - ADDRESS OF QCB                                       *
*   REGISTER 8 - ADDRESS OF PARAMETER LIST (IEDQBD)                   *
*   REGISTER 9 - ADDRESS OF AVT SAVE AREA (IEDQUI)                    *
*   REGISTER 11 - DISPATCHER BASE ADDRESS                             *
*   REGISTER 12 - IEDQBI BASE ADDRESS                                 *
*   REGISTER 13 - ADDRESS OF AVTSAVE2                                 *
*                                                                     *
* OUTPUT --                                                           *
*   REGISTER 1 - CHAIN OF ELEMENTS TO BE POSTED                       *
*   REGISTER 4 - ADDRESS OF LCB                                       *
*   REGISTER 11 - DISPATCHER BASE ADDRESS                             *
*   REGISTER 13 - ADDRESS OF AVTSAVE2                                 *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*   AVTRNMPT - TO COMPUTE ADDRESS OF TERMINAL ENTRY                   *
*   IEDQBJ - TO EVALUATE COUNT= EXPRESSION IF SPECIFIED               *
*   DSPPOSTR - TO INSERT ELEMENT ON READY QUEUE                       *
*   AVTHG01 - TO PUT ELEMENT ON TIME DELAY QUEUE                      *
*                                                                     *
* EXITS, NORMAL --                                                    *
*   TO IEDQUI IF ENTERED FROM IEDQUI                                  *
*   TO DISPATCHER IF ENTERED FROM IEDQBD                              *
*   TO DISPATCHER IF ENTRY POINT WAS SUBTASK                          *
*                                                                     *
* EXITS, ERROR --                                                     *
*   SAME AS NORMAL                                                    *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*   TCAM AVT, SCB, DCB, UCB, LCB, TERMNAME TABLE,                     *
*   TERMINAL ENTRY, QCB, BUFFER PREFIX.                               *
*                                                                     *
* ATTRIBUTES --                                                       *
*   REUSABLE, REFRESHABLE, ENABLED                                    *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*   NONE.                                                             *
*                                                                     *
* CHANGE ACTIVITY=AS FOLLOWS:                                         *
*A000000-999999                                                @XA09783
*A312800,389600,504000,644800                                  @OY12413
*C245600                                                       @OY12413
*A894400                                                       @OY12681
*C216000                                                       @OY12950
*A316800,472000,477600                                         @OX12530
*A206400                                                       @OS77020
*C216000,216600                                                @OS77020
*A502400,645100                                                @Y17XAMG
*C184800,503200,504600,645200,645400                           @Y17XAMG
*A361900,361200,345800                                         @OZ08370
*C223300,345800,3619-362600                                    @OZ08370
*D363300-364000                                                @OZ08370
*A092400,191100,742700,329700                                  @OS77950
*C139300,191800                                                @OS77950
*A825301                                                       @OZ25852
*C161000                                                       @OZ25789
*A163100                                                       @OZ25789
* DUMMY APAR                                                   @OZ27328
*A473060,473840                                                @OY19464
*A350700                                                       @OZ29485
*A160307                                                       @OZ32423
*D515900                                                       @OZ32423
*A853600                                                       @OZ33017
*C520800,538300-539000                                         @OZ33017
*A229200,338700,414900                                         @OZ35509
*A225000                                                       @OZ36230
*D225300                                                       @OZ36230
*$01=OZ41953  ETC2202  79.11.15 726652:                            @01A
*$02=OZ44509  ETC2202  80.02.20 742564:                            @02A
*$11=OZ46909  ETC2302  80.06.20 613706:                            @11A
*$21=OZ49548  ETC2402  81.09.17 076195: STOP TERM IMMEDIATE        @21A
*$22=OZ48753  ETC2402  81.09.18 937763:                            @22A
*$23=OZ55539  ETC2402  81.11.19 797350:                            @23A
*$24=OZ55511  ETC2402  81.12.07 797350: IEDVOFF TARGET=LINE ERROR  @24A
*$25=OZ49846  ETC2402  81.12.15 797350:                            @25A
*$R1=ZM30932  ETC2402  82.03.04 139003: IEDVOFF, STOPTERM I        @R1A
***********************************************************************
         EJECT
R0       EQU   0                        ENTRY INDICATOR
RLENGTH  EQU   5                        LENGTH OF INVITATION ENTRY
R1       EQU   1                        DISPATCHER PARM LIST
RPARM    EQU   1                        TCB ADDRESSABILITY     @Y17XARR
RTERM    EQU   7                        TERM ENTRY BASE
RDCB     EQU   2                        DCB ADDRESS
RSCB     EQU   3                        SCB ADDRESS
RWORK1   EQU   3                        WORK REGISTER
RTNT     EQU   3                        REG FOR TNT INDEX
RLCB     EQU   4                        LCB ADDRESS
RLCBX    EQU   11                       LCBX EXTENSION ADDR    @OS77950
RWRK     EQU   15                       WORK REGISTER          @OS77950
RNDX     EQU   5                        INDEX
MOVELEN  EQU   8                        LENGTH FOR EXECUTES
RLIST    EQU   10                       INV LIST ADDRESS
RQCB     EQU   7                        ADDRESS OF QCB FOR BD
RWORK    EQU   7                        SWAP ENTRY
ROFF     EQU   8                        OFFSET
R9       EQU   9                        WORK REG.
RDISP    EQU   11                       DISPATCHER BASE ADDRESS
RPOINT   EQU   11                       POINTER WITHIN BUFFER
RBFR     EQU   6                        BFR FOR 3705
RBASE    EQU   12                       BASE
RAVT     EQU   13                       AVTSAVE2
RRET     EQU   14                       COUNTER
R14      EQU   14                       RETURN ADDRESS
RSAV     EQU   15                       FOR OFFSET
RENTRY   EQU   15                        CURRENT ENTRY POINTER
R15      EQU   15                       BRANCH ADDRESS
ZERO     EQU   0                         CONSTANT 0
ONE      EQU   1                        CONSTANT 1
TWO      EQU   2                        CONSTANT 2
THREE    EQU   3                        CONSTANT 3
FOUR     EQU   4                        CONSTANT 4
FIVE     EQU   5                        CONSTANT 5
SIX      EQU   6                        CONSTANT 6
SEVEN    EQU   7                        CONSTANT 7
EIGHT    EQU   8                        CONSTANT 8
NINE     EQU   9                        CONSTANT 9
TWELVE   EQU   12                       CONSTANT 12
FOURTEEN EQU   14                       CONSTANT 14
SIXTEEN  EQU   16                       CONSTANT 16
TWENTY   EQU   20                       CONSTANT 20
TWENTY4  EQU   24                       CONSTANT 24
OFFBBIT  EQU   X'10'                    BIT FOR OFFTP,B
OFFCBIT  EQU   X'20'                    BIT FOR OFFTP,C
OFFIBIT  EQU   X'04'                    OFFTP,I (TERM ONLY)        @21A
DEACTBIT EQU   X'40'                    BIT FOR DEACT
CLEAR    EQU   X'22'                    NO. OF BYTES TO CLEAR IN PREFIX
EOT      EQU   X'80'                    EOT FLAG
ENDACT   EQU   X'FE'                    END OF ACTIVE ENTRIES
XFF      EQU   X'FF'                    GENREAL MASK BITS
MASKF0   EQU   X'F0'                    MASK FOR ZONE DECIMAL DIGIT
SNGLTRM  EQU   X'E0'                    SINGLE ENTRY
CUSW     EQU   X'08'                    CONTROL UNIT SWITCH
ACTIVSW  EQU   X'80'                    ACTIVE SWITCH
ORDERBIT EQU   X'01'                    TRYING TO ORDER ENTRIES
POL01    EQU   X'01'                    BIT TO SET FOR SPECIAL 3705
POL02    EQU   X'02'                    BUT TO SPECIFY MSG.
TIC02    EQU   X'02'                    TIC FOR SECOND UNIT IN BFR
TIC08    EQU   X'08'                    BYTE TO TIC TO NEXT UNIT
UNIT01   EQU   X'01'                    ONE UNIT PER BFR
UNIT02   EQU   X'02'                    TWO UNITS PER BFR
*                                          BUFFERS GOING TO OP CNTL
PRFLNGTH EQU   X'2C'                    LENGTH OF BFR PREFIX
DATAOFF  EQU   X'20'                    OFFSET  FOR START OF DATA
FE       EQU   X'FE'                    END OF LIST            @OX12530
VARYLEN  EQU   X'0C'                    LENGTH OF DATA-TRMNAME
*                                       (LEN OF CMD+1 TO TAKE CARE OF
*                                         LEN-1 OF TERMNAME)
MCMDLEN  EQU   10                       LEN OF MODIFY CMD      @YM08412
         SPACE 2
*        USING STATEMENTS                                             *
         SPACE 2
         USING IHADCB,RDCB
         USING IEDQTRM,RTERM
         USING AVTSAVE2,RAVT
         USING IEDQSCB,RSCB
         USING INPARM,ROFF
         USING IEDQPRF,RBFR
         USING IEDQLCB,RLCB
         USING IEDQLCBX,RLCBX                                  @OS77950
         USING *,RBASE
         SPACE 2
*        ENTRY FROM IEDQBD
         SPACE 2
IEDQBI   IEDHJN   STRTHERE
         LTR   R0,R0                    WAS ENTRY FROM IEDQBD
         BZ    BDENTRY                    BRANCH YES
         SPACE
         O     RBASE,SPMASK             INDICATE ENTRY FROM IEDQUI
         LR    ROFF,R1                  PARM LIST TO REG 8
         ST    RAVT,AVTPARM-IEDQAVTD(,R9)  SAVE SAVE AREA ADDRESS
         LA    RAVT,AVTSAVE2-IEDQAVTD(,R9)  SET UP AVT BASE
         SR    RNDX,RNDX                INDICATE NOTHING TO POST
         B     LOCTERM                  GO LOCATE TERMINAL
         SPACE 2
BDENTRY  EQU   *
         LPR   RQCB,RQCB                INSURE POSITIVE ADDRESS
         ST    RQCB,LCBERBQB-ONE        SET TO POST ERB TO BD
         ST    R1,LCBERBLK-ONE          ADD TO POST LIST
         MVI   LCBERBPY,PRIRCQCB        SET PRIORITY
         LA    RNDX,LCBERB              ERB TO POST
         SPACE 2
*        LOCATE TERMINAL ENTRY
         SPACE 2
LOCTERM  EQU   *
         ST    ROFF,AVTSAVE3+TWENTY4    SAVE PARM LIST ADDR
         ST    RNDX,AVTSAVE3+TWENTY     SAVE ERB ADDRESS
         L     R15,AVTRNMPT             GET ADDR OF TERMNAME TABLE
         LH    R1,LCBTTCIN              GET INDEX OF CURRENT TERM.
         N     R1,AVTCLRHI              CLEAR HIGH ORDER BITS
         BNZ   GOTTCIN                  HAS TTCIN              @OZ25789
         L     RDCB,LCBDCBPT            GET DCB ADDRESS        @OZ32423
         TM    DCBDSORG-IHADCB(RDCB),AVTE80 3705 TERMINAL ?    @OZ32423
         BO    RETDISP                  YES, GET OUT.          @OZ32423
         TM    INPFLAG,INPVARY          VARYOFF                @OZ25789
         BNO   RETDISP                                         @OZ25789
         TM    INPFLAG,INPLINE          VARYOFF FOR LINE       @OZ25789
         BNO   RETDISP                                         @OZ25789
         TM    INPFLAG,INPCOUNT         COUNT SPECIFIED        @OZ25789
         BO    RETDISP                                         @OZ25789
         B     NOTTRM                                          @OZ25789
GOTTCIN  EQU   *                                               @OZ25789
         BALR  R14,R15                  GO GET TERM ENTRY
         SPACE
         LR    RTERM,R1                 COPY TERM ADDRESS
NOTTRM   EQU   *                                               @OZ25789
         LA    R15,ONE                  ASSUME 1 UNIT
         TM    INPFLAG,INPVARY          VARYOFF SPECIFIED
         BO    NOGENPL                    BYPASS 3270/2260 TEST
         SPACE
         SR    R14,R14                  CLEAR FOR IC
         IC    R14,TRMCHCIN             CHARACTERISTICS INDEX
         BCTR  R14,0                    MINUS ONE
         MH    R14,AVTDCTLN             TIMES DCT ENTRY LENGTH @Y17XAMG
         AL    R14,AVTCSTCS             TABLE ORIGIN
         TM    TWO(R14),TWO             LOCAL DEVICE
         BO    NOGENPL                   BRANCH YES NO GEN POLL
         SPACE
         TM    ONE(R14),FOUR            3270 REMOTE
         BO    ISGENPL                    BRANCH YES
         SPACE
         TM    THREE(R14),TWO           2260
         BZ    NOGENPL                    BRANCH NO
         SPACE
ISGENPL  EQU   *
         ALR   R15,R15                  GET EXTRA UNIT
NOGENPL  EQU   *
         CLC   AVTKEYLE,MSGLEN          NEED TWO UNITS/MESSAGE
         BNL   ONEOK                      BRANCH NO
         SPACE
         ALR   R15,R15                  DOUBLE BUFFER REQUIREMENT
ONEOK    EQU   *
         TM    INPFLAG,INPINVL          IS INTVL= SPECIFIED
         BZ    GOTREQ                     BRANCH NO
         SPACE
         LA    R15,ONE(,R15)            GET ONE MORE
GOTREQ   EQU   *
         BAL   R14,GETBFR               GET BUFFER UNITS
         SPACE
         LTR   R15,R15                  ENOUGH BUFFERS - 0=OK
         BNZ   RETDISP                  RETURN CONDITION CODE '0C'
         TM    INPFLAG,INPVARY          VARY OFF?              @OS77020
         BO    VOFF                     YES, SKIP PSTOP TESTS  @OS77020
         SPACE 2
*        CHECK FOR SINGLE NONDIAL TERMINAL                            *
         SPACE 2
         L     RDCB,LCBDCBPT            GET DCB ADDR           @OS77950
         TM    DCBDSORG-IHADCB(RDCB),AVTE80 TERM ATTACHED 3705 @OS77950
         BO    NXTCK                    BYPASS STATUS PND CHK  @OS77950
         SR    RWRK,RWRK                CLEAR WORK REGISTER    @OS77950
         IC    RWRK,DCBEIOBX            INSERT LCB LENGTH      @OS77950
         SH    RWRK,HALF8               REDUCE LENGTH BY 8     @OS77950
         LA    RLCBX,ZERO(RWRK,RLCB)    LCB EXTENSION ADDR     @OS77950
         TM    LCBXFLAG,LCBERPND        SOH% PENDING ?         @OS77950
         BO    RETDISP1                 BRANCH YES             @OS77950
         SPACE
NXTCK    TM    TRMSTATE,SNGLTRM         IS THIS SINGLE TERM    @OS77950
         BNZ   RETDISP1                 IF NO - GO TO DSPCHAIN
         TM    TRMSTATE,TRMPREF         DOES A PREFIX EXIST    @XM05658
         BNO   NOPREFIX                 NO BRANCH              @XM05658
         LR    R15,RTERM                GET TERM ENTRY         @Y17XARR
         S     R15,TRMPREFL             BACKUP TO THE PREFIX   @Y17XARR
         TM    TRMBYTE0-IEDNTRM(R15),TRMSNA  SNA?              @Y17XARR
         BO    RETDISP1                 REJECT                 @Y17XARR
NOPREFIX DS    0H                                              @XM05658
         L     R15,TRMDESTQ-ONE         QCB ADDRESS
         TM    QCBFLAG-IEDQQCB(R15),QCBTSSES   TSO SESSION ACTIVE
         BO    RETDISP1                 BRANCH YES
         SPACE 2
         TM    LCBSTAT2,LCBDIAL        IS THIS A DIAL TERMINAL
         BO    RETDISP1                 BRANCH YES             @OS77020
         SPACE 2
         TM    SCBSTATE,SCBMSGLN+SCBLCK1N  CHECK FOR MSG LOCK OR
*                                            EXTENDED LOCK BITS ON
         BNZ   RETDISP1                 BR IF LOCK MODE ON
         SPACE
         DROP  RSCB
         USING IEDQTNTD,RTNT
         SPACE 2
*   CHECK TO SEE IF THE COUNT OPTION  IS SPECIFIED
         SPACE 2
VOFF     EQU   *
         TM    INPFLAG,INPCOUNT         WAS COUNT= CODED
         BZ    NOCOUNT                    BRANCH NO
         SPACE
         LA    RDCB,FOUR(,ROFF)         PARM LIST FOR BJ
         TM    INPIND,INPMSK            WAS MASK SPECIFIED
         BO    NOMASK                     BRANCH NO
         SPACE
         LA    RDCB,FOUR(,RDCB)         BUMP PAST ERROR MASK
NOMASK   EQU   *
         SR    R15,R15                  CLEAR REGISTER
         IC    R15,ZERO(RDCB)           INDEX TO IEDQBJ
         AL    R15,AVTMSGS-1            VCON TABLE ADDRESS
         L     R15,0(,R15)              ADDRESS OF IEDQBJ
         BALR  R14,R15                  LINK TO IEDQBJ
         SPACE
         LTR   R15,R15                  CHECK RETURN CODE FROM BJ
         BNZ   RETDISP1                 DO NOT EXECUTE FUNCTION
         SPACE
*       NORMAL RETURN TO +4
         SPACE 2
*        CHECK FOR TERMINAL ATTACHED VIA 3705                         *
         SPACE 2
NOCOUNT  EQU   *
         XC    AVTDOUBL(EIGHT),AVTDOUBL INIT WORK AREA
         L     R1,AVTSAVE3+TWENTY       POST LIST TO R1
         TM    INPFLAG,INPVARY          IS THIS IEDVOFF        @OZ08370
         BO    VARYOFF                  BRANCH YES
         L     RDCB,LCBDCBPT            GET LGB OR DCB ADDRESS
         TM    DCBDSORG-IHADCB(RDCB),AVTE80   IS TERM ATTACHED VIA 3705
         BO    YES3705                  IF YES - GO TO YES3705
         SPACE 2
*        ACCESS INVITATION LIST                                       *
         SPACE 2
*         CODE FOR 270X  TERMINALS
         SR    RNDX,RNDX                INIT REG
         IC    RNDX,LCBUCBX             LOAD INVLIST INDEX
         SLL   RNDX,TWO                 MULTIPLY POINTER BY 4
         L     RLIST,DCBINVLI(RNDX)     GET ADDR OF INVLIST
         SPACE 2
*        CHECK FOR CONTENTION BOX                                     *
         SPACE 2
         CLI   TWO(RLIST),ONE           CHECK FOR CONTENTION BOX
         BE    RETDISP2                 IF YES, DO NOTHING
         SPACE
         CLI   ONE(RLIST),ZERO          ANY ACTIVE ENTRIES?
         BE    RETDISP2                 NO
         SPACE 2
*        INITIALIZATION                                               *
         SR    RLENGTH,RLENGTH          INIT REG
         IC    RLENGTH,TWO(,RLIST)      LENGTH OF ENTRY
         LR    RWORK1,RLENGTH           LENGTH OF ENTRY
         BCTR  RWORK1,0                 DECREMENT FOR EXECUTE
         SPACE 2
*        CHECK STATUS OF INVITATION LIST                              *
         SPACE 2
NXTENTRY EQU   *
         LH    ROFF,AVTDOUBL            GET NEXT ENTRY
         LA    ROFF,ONE(ROFF)           INCR BY ONE
         STH   ROFF,AVTDOUBL            STORE BACK
         CLC   AVTDOUBL+ONE(ONE),ZERO(RLIST)   OUT OF ENTRIES?
         BH    TEST                     YES
         SPACE 2
         ALR   ROFF,ROFF                MULTIPLY BY TWO
         LR    RENTRY,RLIST             BEGINNING
         SR    RENTRY,ROFF              BACK TO ENTRY
         CLC   ZERO(TWO,RENTRY),LCBTTCIN   TO BE DEACTIVATED
         BNE   NXTENTRY                 NO
         SPACE 2
*        SEARCH ACTIVE LIST FOR CORRECT INDEX
         SPACE 2
         LA    RENTRY,SEVEN(,RLIST)     POINTER TO FIRST ENTRY INDEX
         SR    RRET,RRET                CLEAR
         IC    RRET,ONE(,RLIST)         NO. OF ACTIVE ENTRIES
         SPACE 2
CKNEXTA  EQU   *
         AR    RENTRY,RLENGTH           GO TO NEXT ENTRY'S INDEX
         CLC   ZERO(ONE,RENTRY),AVTDOUBL+ONE   DOES INDEX MATCH
         BE    DACTIVT                  BR TO DEACTIVATE TERMINAL ENTRY
         SPACE 2
         BCT   RRET,CKNEXTA             NOT END OF ACTIVE, GO BACK
         SPACE 2
*        SEARCH FOR ENTRY IN INACTIVE LIST                            *
         SPACE 2
         TM    AVTDOUBL+TWO,ACTIVSW     IS ACTIVE SWITCH ON
         BO    NXTENTRY                 YES
         XC    AVTDOUBL+FOUR(FOUR),AVTDOUBL+FOUR   CLEAR WORK AREA
         TM    THREE(RLIST),EOT         IS THIS EOT-FE (BSC)
         BNO   ADD1                     IF NO - ONLY ADD 1
         SPACE 2
         LA    RENTRY,ONE(,RENTRY)      ADD EXTRA ONE FOR EOT
ADD1     EQU   *
         LA    RENTRY,ONE(RENTRY)       ADD ONE FOR 'FE'
         IC    RRET,ZERO(,RLIST)        GET TOTAL ENTRIES
         MVC   AVTDOUBL+SEVEN(ONE),ONE(RLIST)   GET NO. OF ACTIVE ENTS.
         S     RRET,AVTDOUBL+FOUR       COMPUTE INACTIVE ENTRIES
         BZ    NXTENTRY                 YES
         SPACE 2
CKINACT  EQU   *
         AR    RENTRY,RLENGTH           GET TO NEXT INDEX
         CLC   ZERO(ONE,RENTRY),AVTDOUBL+ONE  DOES INDEX MATCH
         BE    CKCU                     YES
         SPACE 2
         BCT   RRET,CKINACT             LOOK AT NEXT ENTRY
         B     NXTENTRY                 IF NOT INACTIVE, GET NEXT ENT.
         SPACE 2
*        SET UP TO MOVE ENTRY FROM ACTIVE TO INACTIVE                 *
         SPACE 2
DACTIVT  EQU   *
         OI    AVTDOUBL+TWO,ACTIVSW     TURN ON ACTIVE SW
DACTIVCU EQU   *
         L     ROFF,AVTSAVE3+TWENTY4    PARM LIST ADDRESS      @OY12413
         TM    INPFLAG,INPVARY          VARY OFF               @OY12413
         BO    VARYOFF                  BRANCH IF YES          @OY12413
         L     R9,LCBINVPT-1            GET INV LIST ENTRY POINTER
         LA    R9,ZERO(,R9)             CLEAR HIGH ORDER BYTE
         CR    RENTRY,R9                WHERE IS ENTRY COMPARED TO
*                                         LCBINVPT
         BNL   NOUPDTE                  DON'T UPDATE LCBINVPT
         SR    RWORK,RWORK              CLEAR REGISTER         @OX12530
         IC    RWORK,ONE(,RLIST)        NO. ACTIVE ENTRIES     @OX12530
         STH   RWORK,AVTSAVE3+TWO       SAVE NO. ACTIVE ENTRIE @OX12530
         SR    RWORK,RWORK              CLEAR REGISTER         @OX12530
         LR    RWORK,RLENGTH            LENGTH OF EACH ENTRY   @OX12530
         MH    RWORK,AVTSAVE3+TWO       TOTAL LENGTH OF ENTRIE @OX12530
         LA    RWORK,EIGHT(RWORK,RLIST)  ADDR OF END OF LIST   @OX12530
*                                        INDICATOR             @OX12530
         CLI   ZERO(RWORK),FE           END OF LIST            @OX12530
         BE    NOTEOT                   YES, BRANCH            @OX12530
         LA    RWORK,ONE(,RWORK)        ADJUST FOR EOT CHARACT @OX12530
NOTEOT   EQU   *                                               @OX12530
         CR    RWORK,R9                 R9 IN INVITATION LIST  @OX12530
         BL    NOUPDTE                  NO, DON'T CHAMGE LCB   @OX12530
         SLR   R9,RLENGTH               CORRECT THE POINTER
         IC    RDCB,LCBINVPT-1          SAVE HIGH ORDER BYTE
         ST    R9,LCBINVPT-1            RESTORE POINTER
         STC   RDCB,LCBINVPT-1          RESTORE HIGH ORDER BYTE
         SPACE
NOUPDTE  EQU   *
         LR    RWORK,RENTRY
         SR    RENTRY,RLENGTH           SET TO ENTRY LENGTH-1
         BCT   RRET,SWAPLOOP            SWAP ENTRIES
         SPACE 2
         B     LOOPOUT                  MOVE LAST ENTRY
         SPACE 2
SWAPLOOP EQU   *
         EX    RWORK1,SWAP1              SWAP TWO
         EX    RWORK1,SWAP2             SUCCESSIVE
         EX    RWORK1,SWAP1             ENTRIES
         AR    RENTRY,RLENGTH           MOVE TO
         AR    RWORK,RLENGTH            NEXT ENTRY
         BCT   RRET,SWAPLOOP            NOT DONE RETURN
         SPACE 2
LOOPOUT  EQU   *
         LR    RRET,RLENGTH             RESTORE LENGTH FOR MOVE
         TM    THREE(RLIST),EOT         IS THIS EOT-FE (BSC)
         BO    SETEOT                   YES
         SPACE 2
SETLOOP  EQU   *
         MVC   ONE(ONE,RWORK),ZERO(RWORK)   MOVE ONE CHARACTER
         BCTR  RWORK,ZERO                      AT A TIME
         BCT   RRET,SETLOOP                    UNTIL FINISHED
         MVI   ONE(RWORK),ENDACT        INSERT ACTIVE END CHAR.
         B     RSETACT                  GO RESET ACTIVE COUNT
         SPACE 2
SETEOT   EQU   *
         MVC   AVTSAVE3+TWO(TWO),ONE(RWORK)    SAVE EOT CHARS.
         SPACE
SETEOT1  EQU   *
         MVC   TWO(ONE,RWORK),ZERO(RWORK)    MOVE ONE CHARACTER
         BCTR  RWORK,ZERO                       AT A TIME
         BCT   RRET,SETEOT1                     UNTIL FINISHED
         SPACE
         MVC   ONE(TWO,RENTRY),AVTSAVE3+TWO    RESTORE EOT CHARS.
         SPACE 2
RSETACT  EQU   *
         IC    RRET,ONE(,RLIST)         COUNT OF ACTIVE ENTRIES
         BCTR  RRET,ZERO                DECREMENT ACTIVE COUNT
         STC   RRET,ONE(,RLIST)         STORE COUNT BACK
         LTR   RRET,RRET                ZERO ACTIVE ENTRIES ?  @OS77950
         BNZ   CKMVE                    NO, CONTINUE           @OS77950
         NI    LCBXFLAG,LCBGPSTP        YES, TURN OFF GEN POLL @OS77950
         B     TEST                                            @OS77950
CKMVE    EQU   *                                               @OS77950
         TM    AVTDOUBL+TWO,ACTIVSW     CHECK FOR HAVING MOVED
*                                          AN ACTIVE TERMINAL ENTRY
         BO    NXTENTRY                 YES
         SPACE 2
         B     CKCU1                    BR TO LOOK FOR NEXT CNTL UNIT
         SPACE 2
*        CHECK ACTIVE LIST FOR CONTROL UNIT ASSOCIATED WITH           *
*        TERMINAL ENTRY IN INACTIVE LIST                              *
         SPACE 2
CKCU     EQU   *
         SR    RENTRY,RLENGTH           BACK UP TO FIRST OF ENTRY
         MVC   AVTDOUBL+THREE(ONE),ONE(RENTRY)   CONTROL UNIT ADDRESS
CKCU1    EQU   *
         LA    RENTRY,SEVEN(,RLIST)     GET TO FIRST ENTRY
         SR    RENTRY,RLENGTH           BACK UP ONE
         IC    RRET,ONE(RLIST)          GET ACTIVE COUNT
         LTR   RRET,RRET                CHECK ACTIVE COUNT
         BZ    NXTENTRY                 IF ZERO, GET NEXT ENTRY
         SPACE 2
CKNEXTCU EQU   *
         AR    RENTRY,RLENGTH           GO TO NEXT ENTRY
         CLC   ONE(ONE,RENTRY),AVTDOUBL+THREE    CONTROL UNIT MATCH?
         BNE   UPDATE                   NO CONTROL UNIT        @OZ08370
         CLC   THREE(TWO,RENTRY),X7F7F  IS THIS A 3270 CNTL UN @OZ08370
         BE    SETUP                    YES                    @OZ08370
         CLC   THREE(TWO,RENTRY),X2222  IS THIS ASCII CNTL UNI @OZ08370
         BE    SETUP                    YES                    @OZ08370
         CLI   TWO(RENTRY),XFF          IS THIS 2260 CNTL UNIT @OZ08370
         BE    SETUP                    YES                    @OZ08370
         SPACE
UPDATE   EQU   *                                               @OZ08370
         BCT   RRET,CKNEXTCU            NOT END OF ACTIVE, GO BACK
         SPACE 2
         B     NXTENTRY                 END OF ACTIVE LIST,GET NEXT ENT
         SPACE 2
*        SET UP POINTERS TO MOVE CONTROL UNIT                         *
SETUP    EQU   *
         OI    AVTDOUBL+TWO,CUSW        TURN ON CONTROL UNIT SW
         NI    LCBXFLAG,LCBGPSTP        TURN OFF GEN POLL BIT  @OZ29485
         AR    RENTRY,RLENGTH           SET UP POINTER
         SR    ROFF,ROFF                CLEAR FOR IC
         IC    ROFF,ZERO(,RENTRY)       GET INDEX
         AR    ROFF,ROFF                DOUBLE INDEX TO FIND TNT
         LNR   ROFF,ROFF                NEGATE OFFSET
         AR    ROFF,RLIST               BACK UP TO OFFSET
         MVC   GENPOLLT(TWO),ZERO(ROFF) SAVE TNT OFF SET           @25C
         B     DACTIVCU                 DEACTIVATE CONTROL UNIT
         SPACE 2
*        TEST TO SEE IF A CONTROL UNIT HAS BEEN MOVED.                *
*        IF IT HAS, THEN SPECIFIC TERMINALS IN INACTIVE LIST          *
*        ASSOCIATED WITH THAT CONTROL UNIT SHOULD BE MOVED TO ACTIVE  *
*        LIST.                                                        *
         SPACE 2
TEST     EQU   *
         TM    AVTDOUBL+TWO,CUSW        CONTROL UNIT MOVED     @OZ08370
         BO    MOVESPEC                 YES                    @OZ08370
         TM    AVTDOUBL+TWO,ACTIVSW     ACTIVE TERM MOVED      @OZ08370
         BZ    RETDISP1                 NO                     @OZ08370
         SPACE
         B     GENMSG                   FINISHED
         SPACE 2
*        MOVE SPECIFIC TERMINALS FROM INACTIVE TO ACTIVE LIST         *
         SPACE 2
MOVESPEC EQU   *
         SR    RRET+ONE,RRET+ONE        CLEAR ODD NUMBERED REG.
         IC    RRET+ONE,ONE(,RLIST)      GET NO. OF ACTIVE ENTRIES
         MR    RRET,RLENGTH             GET LENGTH OF ACTIVE LIST
         LR    RRET,RRET+ONE            GET RESULTS OF MULTIPLY
         LA    RENTRY,EIGHT(RRET,RLIST)  GET TO INACTIVE LIST
         TM    THREE(RLIST),EOT         EOT ENTRY PRESENT?
         BNO   INCR1                    NO
         SPACE 2
         LA    RENTRY,ONE(,RENTRY)      ADJUST POINTER TO FIRST ENTRY
         SPACE 2
INCR1    EQU   *
         LA    RENTRY,ONE(,RENTRY)
         SR    RENTRY,RLENGTH           BACK UP ONE
         SR    ROFF,ROFF                CLEAR
         IC    ROFF,ZERO(,RLIST)        COMPUTE
         MVC   AVTDOUBL+SEVEN(ONE),ONE(RLIST)    NO. OF
         S     ROFF,AVTDOUBL+FOUR               INACTIVE ENTRIES
         SPACE 2
CKNEXT1  EQU   *
         AR    RENTRY,RLENGTH           GET TO NEXT ENTRY
         CLC   ZERO(ONE,RENTRY),AVTDOUBL+THREE   COMPARE CONTROL CHAR
         BE    TESTTNT                  CHECK TNT INDEX
         SPACE 2
         BCT   ROFF,CKNEXT1             IF NOT END, GO BACK
         B     GENMSG                   FINISHED
         SPACE 2
*        TEST TO SEE IF THIS IS TERMINAL IN "ERROR"                   *
         SPACE 2
TESTTNT  EQU   *
         SR    RRET,RRET                CLEAR
         IC    RRET,ZERO(RWORK1,RENTRY) GET INDEX
         ALR   RRET,RRET                MULTIPLY BE TWO
         LR    RWORK,RLIST              GET FIRST OF LSIT
         SR    RWORK,RRET               BACK TO ENTRY
         CLC   ZERO(TWO,RWORK),LCBTTCIN   TO BE ACTIVATED
         BE    CKNEXT1
         SPACE 2
         CLC   TWO(TWO,RENTRY),X7F7F    IS THIS A 3270 CONTROL UNIT
         BE    CKNEXT1                  YES
         CLC   TWO(TWO,RENTRY),X2222    CHECK FOR ASCII CONTROL UNIT
         BE    CKNEXT1                  YES
         SPACE 2
         CLI   ONE(RENTRY),XFF          IS THIS A 2260 CONTROL UNIT
         BE    CKNEXT1                  YES
         SPACE 2
*        MOVE ENTRY FROM INACTIVE TO ACTIVE                           *
         SPACE 2
MOVE     EQU   *
         ALR   RENTRY,RWORK1            POINT TO INDEX
         MVC   AVTDOUBL+SEVEN(ONE),ZERO(RENTRY)   SAVE INDEX
         SR    RENTRY,RLENGTH           POINT TO PREVIOUS ENTRY
         LR    RWORK,RENTRY
         SR    RWORK,RLENGTH            POINT TO PREVIOUS ENTRY
ACTIVATE EQU   *
         CLI   ZERO(RENTRY),ENDACT      FIRST INACTIVE ENTRY
         BE    MACTIVE                  YES
         SPACE 2
SWAPLOP2 EQU   *
         EX    RWORK1,SWAP1             SWAP ONE POSITION
         EX    RWORK1,SWAP2             WITH THE NEXT
         EX    RWORK1,SWAP1             SUCCESSIVE POSITION
         TM    AVTDOUBL+TWO,ORDERBIT    TRYING TO ARRANGE
         BO    CKPOS                    YES
         SPACE 2
         SR    RENTRY,RLENGTH           BACK UP ONE ENTRY
         SR    RWORK,RLENGTH            BACK PREVIOUS ENTRY BY ONE
         B     ACTIVATE                 CHECK FOR INACTIVE ENTRY
         SPACE 2
MACTIVE  EQU   *
         TM    THREE(RLIST),EOT         EOT ENTRY PRESENT?
         BO    MACTIVE1                 YES
         SPACE 2
         EX    RWORK1,MOVACT            PLACE ENTRY ON ACTIVE SIDE
         LA    RRET,ZERO(RLENGTH,RENTRY)   POINT TO NEW END OF ACTIVE
         BCTR  RENTRY,ZERO              GET ON LESS
         BCTR  RWORK,ZERO               GET ONE LESS
         MVI   ZERO(RRET),ENDACT        RESET ACTIVE POINTER
         SPACE 2
MACTIVE2 EQU   *
         BCTR  RENTRY,0                 BACK UP POINTER
         BCTR  RWORK,0                  BACK UP POINTER
         SR    RRET,RRET                CLEAR
         IC    RRET,ONE(,RLIST)         GET NO. OF ACTIVE ENTRIES
         LA    RRET,ONE(,RRET)          INCR. FOR BCT
         SPACE 2
ACTLOOP  EQU   *
         BCT   RRET,ACTPOS              IF NOT LAST POSITION , COMPARE
         SPACE 2
RETURNA  EQU   *
         L     R9,LCBINVPT-1            GET INV LIST POINTER
         LA    R9,ZERO(,R9)             CLEAR HIGH ORDER BYTE
         SR    RENTRY,RWORK1            POINT TO FIRST OF ENTRY
         CR    RENTRY,R9                WHERE IS ENTRY COMPARED TO
*                                         LCBINVPT?
         BH    ARND                     DON'T UPDATE LCBINVPT
         STH   RLENGTH,AVTSAVE3+TWO     LENGTH OF EACH ENTRY   @OX12530
         SR    RRET,RRET                CLEAR REGISTER         @OX12530
         IC    RRET,ONE(,RLIST)         NO. ACTIVE ENTRIES     @OX12530
         MH    RRET,AVTSAVE3+TWO        TOTAL LENGTH OF ENTRIES@OX12530
         LA    RRET,EIGHT(RRET,RLIST)   ADDR OF END OF LIST    @OX12530
*                                        INDICATOR             @OX12530
         CLI   ZERO(RRET),FE            END OF LIST            @OX12530
         BE    NOTEOT1                  YES, BRANCH            @OX12530
         LA    RRET,ONE(,RRET)          ADJUST FOR EOT CHARACT @OX12530
NOTEOT1  EQU   *                                               @OX12530
         CR    RRET,R9                  R9 IN INVITATION LIST  @OX12530
         BL    ARND                     NO, DON'T CHANGE LCB   @OX12530
         ALR   R9,RLENGTH               ADJUST LCBINVPT
         IC    RDCB,LCBINVPT-1          SAVE HIGH ORDER BYTE
         ST    R9,LCBINVPT-1            UPDATE POINTER
         STC   RDCB,LCBINVPT-1          RESTORE HIGH ORDER BYTE
         SPACE
ARND     EQU   *
         SR    RRET,RRET                CLEAR REGISTER         @OX12530
         IC    RRET,ONE(,RLIST)         GET
         LA    RRET,ONE(,RRET)          AND INCREMENT
         STC   RRET,ONE(,RLIST)         NUMBER OF ACTIVE ENTRIES
         NI    AVTDOUBL+TWO,XFF-ORDERBIT   TURN OFF BIT
         B     MOVESPEC                 CHECK TO SEE IF ANYMORE TO MOV)
         SPACE 2
ACTPOS   EQU   *
         CLC   ZERO(ONE,RENTRY),AVTDOUBL+SEVEN  ENTRY IN RIGHT POSITION
         BL    RETURNA                  PREVIOUS ENTRY LESS, FINISHED
         SPACE 2
         OI    AVTDOUBL+TWO,ORDERBIT    TRYING TO ARRANGE
         B     SWAPLOP2                 GO SWAP ENTRIES
         SPACE 2
CKPOS    EQU   *
         SR    RENTRY,RLENGTH           BACK UP ONE
         SR    RWORK,RLENGTH            ENTRY
         B     ACTLOOP                  GO CHECK FOR CORRECT ORDER
         SPACE 2
MACTIVE1 EQU   *
         BCTR  RENTRY,ZERO              BACK UP TWO FOR EOT-FE
         BCTR  RWORK,ZERO
         MVC   AVTSAVE3+TWO(TWO),ZERO(RENTRY)  SAVE EOT-FE
         EX    RWORK1,MOVEACT1          MOVE TO ACTIVE
         LR    RRET,RENTRY              RESET TO
         ALR   RRET,RLENGTH               MOVE EOT-FE
         MVC   ZERO(TWO,RRET),AVTSAVE3+TWO   RESET EOT-FE
         B     MACTIVE2
         SPACE 2
*        CHECK FOR GENERAL POLL ACTIVE. (TERMINAL ATTACHED VIA 3705)  *
         SPACE 2
YES3705  EQU   *                                               @XM05658
         SR    ROFF,ROFF                                       @XM05658
         LH    ROFF,LCBTTCIN                                   @XM05658
         LR    R14,RTERM                                       @XM05658
         LA    R15,TRMPRFSZ             TRM PREFIX SIZE        @XM05658
         SR    R14,R15                  PREFIX ADDRESS         @XM05658
         CLI   TRMTYPE-IEDNTRM(R14),TRMCLUST IF CLUSTER        @XM05658
         BE    ISCLUS                         BRANCH           @XM05658
         TM    TRMBYTE0-IEDNTRM(R14),TRMGP   IF GP TERMINAL    @XM05658
         BZ    CHKSPEC                        DO NOT BRANCH    @XM05658
         TM    TRMBYTE2-IEDNTRM(R14),TRMGPACT IF GP IS ACTIVE  @XM05658
         BO    FINDCU                          BRANCH          @XM05658
CHKSPEC  TM    TRMBYTE2-IEDNTRM(R14),TRMRSACT IF TERMINAL IS   @XM05658
         BZ    RETDISP1                        INACTIVE,BRCH   @XM05658
         TM    TRMBYTE0-IEDNTRM(R14),TRMSNA   IF SNA TERMINAL  @XM05658
         BO    DACTSNA                         BRANCH          @XM05658
         TM    TRMBYTE0-IEDNTRM(R14),TRMINPUT IF CANNOT SEND   @XM05658
         BZ    RETDISP1                        DATA, BRANCH    @XM05658
         NI    TRMBYTE2-IEDNTRM(R14),AVTEFF-TRMRSACT    RESET  @OZ36230
         B     GENMSG                    GENERATE MSG          @OZ36230
FINDCU   L     R15,AVTRNMPT           LOAD TTE ADDR SEARCH RT  @XM05658
         OI    AVTDOUBL+TWO,CUSW      MUST SEND TERM VARY CMD  @XM05658
         LR    RWORK1,R1             SAVE POST LIST ENTRY ADDR @OY19464
         SR    R1,R1                 INSURE THAT HI BYTES ZERO @XM05658
NEXTCOH  LH    R1,TRMCOHRT-IEDNTRM(R14) LOAD COHORT TTCIN      @XM05658
         LR    ROFF,R1                STORE TTCIN              @XM05658
         BALR  R14,R15                GO GET TTE ADDR          @XM05658
         LR    R14,R1                 MOVE TTE ADDR            @XM05658
         LA    R1,TRMPRFSZ            GET PREFIX               @XM05658
         SR    R14,R1                  ADDR                    @XM05658
         CLI   TRMTYPE-IEDNTRM(R14),TRMCLUST HAS CLUSTER BEEN  @XM05658
         BNE   NEXTCOH                 FOUND? NO, BRANCH       @XM05658
         LR    R1,RWORK1               RESTORE POST LIST ADDR  @OY19464
         STH   ROFF,GENPOLLT             SAVE GEN POLL TNT     @OZ35509
ISCLUS   EQU   *                                               @XM05658
         BAL   R14,COMPTRMN           GET ADDR TO TERM NAME    @XM05658
         BAL   R14,BLANKS             STRIP BLANKS FROM NAME   @XM05658
         BAL   R14,PREFIX             SET UP BUFFER PREFIX     @XM05658
         BAL   R14,MOVEDATA           MOVE COMMAND INTO BUFFER @XM05658
         TM    AVTDOUBL+TWO,CUSW      IS TERM COMMAND NEEDED   @XM05658
         BNO   POSTIT                  NO, BRANCH              @XM05658
         ST    RBFR,AVTSAVE3          SAVE BUFFER ADDR         @XM05658
         LR    ROFF,RBFR                                       @XM05658
         L     RBFR,PRFLINK-ONE       GET NEXT BFR IN CHAIN    @XM05658
         MVC   PRFLINK-IEDQPRF(THREE,ROFF),PRFLINK CHAIN BUFF  @XM05658
ISSPEC   LH    ROFF,LCBTTCIN          GET TERMINAL TTCIN       @XM05658
         N     ROFF,AVTCLRHI          ZERO HI BYTES            @XM05658
         BAL   R14,COMPTRMN           GET TERMINAL NAME        @XM05658
         BAL   R14,BLANKS             STRIP BLANKS FROM NAME   @XM05658
         BAL   R14,PREFIX             SET UP BUFFER            @XM05658
         BAL   R14,MOVEDATA           MOVE COMMAND             @XM05658
         BAL   R14,POST               POST BUFFER              @XM05658
         TM    AVTDOUBL+TWO,CUSW      WAS CLUS CMD BUILT?      @XM05658
         BNO   CHCKINTV               NO, SEE IF INTV SPECIF'D @XM05658
         L     RBFR,AVTSAVE3          RESTORE ADDR OF CMD      @XM05658
POSTIT   BAL   R14,POST               POST BUFFER              @XM05658
         B     CHCKINTV               SEE IF INTV SPECIFIED    @XM05658
         SPACE 2
*   THIS SUBROUTINE COMPUTES ADDRESS OF TERMNAME AND ALSO
*   COMPUTES LENGTH-1 OF NAME.  (THIS IS LATER USED FOR EX MVC)
         SPACE
COMPTRMN EQU   *
         LR    R0,RRET                  SAVE RETURN ADDRESS
         L     RTNT,AVTRNMPT            GET ADDR OF TRMNAME TABLE
         SR    RLENGTH,RLENGTH          CLEAR REG
         IC    RLENGTH,TNTENLEN         GET LENGTH OF NAME FIELD
         LA    RWORK,THREE(,RLENGTH)   ADJUST ENTRY WITH LENGTH OF
*                                             ADDR. FIELD
         LR    RSAV,ROFF                SAVE TNT VALUE
         BCTR  RSAV,ZERO                ADJUST TNT OFFSET BEFORE MULT
         MR    RSAV-ONE,RWORK           COMPUTE OFFSET WITHIN TABLE
         LA    RWORK,TNTFIRST(RSAV)     ADDR OF TERMNAME ENTRY
         LR    RRET,R0                  GET RETURN ADDRESS
         BR    RRET                     RETURN
         SPACE
BLANKS   EQU   *
         LR    RWORK1,RWORK             MAKE SURE NAME IS NOT PADDED
         ALR   RWORK1,RLENGTH              WITH BLANKS
TRYAGIN  EQU   *
         BCTR  RLENGTH,ZERO             DECR. LENGTH
         BCTR  RWORK1,ZERO              LOOK AT LAST BYTE OF NAME
         CLI   ZERO(RWORK1),AVTEBLNK    IS IT A BLANK?
         BE    TRYAGIN                  LOOK AT NEXT ONE
         BR    RRET
         SPACE 2
PREFIX   EQU   *
         ST    RRET,RRETSAVE            SAVE RETURN ADDRESS    @YM08502
         SR    RWORK1,RWORK1            CLEAR TO INSERT THE LEN@YM08412
         ICM   RWORK1,THREE,AVTKEYLE    GET THE UNIT SIZE      @YM08412
         BCTR  RWORK1,0                 DECREMENT FOR EX       @YM08412
         EX    RWORK1,CLRINSTR                 ZERO OUT BFR    @YM08412
         LA    RWORK1,AVTOPCOB          GET ADDR OF OP CTL QCB
         ST    RWORK1,PRFQCBA-ONE        PUT QCB ADDR INTO PREFIX
         ST    RLCB,PRFLCB-ONE          SET UP LCB ADDRESS
         OI    PRFLCB+TWO,POL01         SET BIT FOR SPECIAL CASE
         TM    AVTDOUBL+TWO,DEACTBIT    DEACT OR VARY?         @YM08412
         BNO   VARYLENG                 VARY,SKIP SETTING M LEN@YM08412
         L     RWORK,AVTTCB             GET THE TCB ADDRESS    @YM08528
         L     RWORK,TCBTIO-IEDQTCB(RWORK) GET THE JOBNAME     @YM08528
         LA    RLENGTH,EIGHT            LONGEST LENGTH POSSIBLE@YM09083
         BAL   RRET,BLANKS              STRIP BLANKS           @YM08528
         LR    RPOINT,RLENGTH           SAVE THE EXACT LENGTH  @YM08528
         LH    ROFF,LCBTTCIN            GET THE TNT INDEX      @YM08412
         N     ROFF,AVTCLRHI            CLEAR HIGH ORDER HALF  @YM08412
         BAL   RRET,COMPTRMN            GET THE TERMNAME       @YM08412
         BAL   RRET,BLANKS              STRIP BLANKS FROM NAME @YM08412
         LA    RWORK1,MCMDLEN+TWO(RLENGTH,RPOINT) COMPUTE TOTAL@YM09098
         B     PTTODATA                 READY TO COMPUTE OFFSET@YM08412
VARYLENG EQU   *                                               @YM08412
         LA    RWORK1,VARYLEN+ONE(,RLENGTH) COMPUTE LENGTH OF DATA
PTTODATA EQU   *                                               @YM08412
         LA    RWORK1,DATAOFF(,RWORK1)   COMPUTE LENGTH OF DATA
         STH   RWORK1,PRFSIZE           SET UP SIZE OF DATA IN PREFIX
         LH    MOVELEN,AVTKEYLE         GET LENGTH OF BFR UNIT
         MVI   PRFSCAN,C32              OFFSET FOR DATA        @ZM00864
         CR    RWORK1,MOVELEN           COMPARE LENGTH OF DATA WITH
*                                         REMAINING SPACE
         BH    DELINK2                  GET ANOTHER BFR. UNIT
         LA    RPOINT,PRFLNGTH(,RBFR)   COMPUTE ADDR OF WHERE DATA STS
         MVI   PRFNBUNT,UNIT01          ONE UNIT BUFFER
         MVC   PRFTIC,INVTIC            SET UP TIC FIELD       @OZ33017
         L     RRET,RRETSAVE            RESTORE RETURN ADDRESS @YM08502
         BR    RRET                     RETURN
         SPACE 2
MOVEDATA EQU   *                                               @XM05658
         MVC   ZERO(THREE,RPOINT),VARY  MOVE ' V ' INTO BFR    @XM05658
         LA    RPOINT,THREE(,RPOINT)    MOVE PTR TO NEXT FLD   @XM05658
         EX    RLENGTH,MOVENAME         MOVE TRM. NAME         @XM05658
         LA    RPOINT,ONE(RPOINT,RLENGTH) UPDATE POINTER       @XM05658
         MVC   ZERO(NINE,RPOINT),OFFTP  MOVE REST OF CMD       @XM05658
         SR    R15,R15                  SET GOOD RETRUN CODE   @XM05658
         BR    R14                      RETURN                 @XM05658
DELINK2  EQU   *
         MVI   PRFNBUNT,UNIT02          TWO UNITS
         LH    RWORK1,PRFSIZE           CORRECT SIZE BY SPACE LEFT
         ALR   RWORK1,MOVELEN              OVER IN LAST UNIT
         STH   RWORK1,PRFSIZE           RESTORE SIZE
         SLR   RWORK1,RWORK1            CLEAR                  @ZM00864
         IC    RWORK1,PRFSCAN           CORRECT SCAN PTR. BY   @ZM00864
         ALR   RWORK1,MOVELEN              LEFT OVER IN LAST UNIT
         STC   RWORK1,PRFSCAN           RESTORE SCAN PTR.      @ZM00864
         L     RPOINT,PRFLINK-ONE       GET NEXT BFR
         ST    RPOINT,PRFTIC            LINK TWO UNITS TOGETHER
         MVI   PRFTIC,TIC08             SET UP TIC TO NEXT UNIT
         L     RWORK1,PRFLINK-ONE-IEDQPRF(RPOINT)  GET NEXT BFR
         ST    RWORK1,PRFLINK-ONE
         MVC   PRFTIC-IEDQPRF(FOUR,RPOINT),INVTIC SET UP TIC   @OZ33017
         LA    RPOINT,TWELVE(,RPOINT)   POINT TO MSG. FIELD
         L     RRET,RRETSAVE            RESTORE RETURN ADDRESS @YM08502
         BR    RRET                     RETURN
         SPACE 2
*    THIS SECTION OF CODE PUTS A BUFFER ON A CHAIN TO
*     LATER BE POSTED TO THE DISPATCHER.
         SPACE
POST     EQU   *
         L     R0,PRFLINK-ONE
         ST    R1,PRFLINK-ONE           PUT OLD BUFFERS ON NEW ONE
         MVI   PRFPRI,PRIMHBFR          SET UP PRIORITY
         LR    R1,RBFR
         LR    RBFR,R0                  GET NEXT BFR ADDRESS
         BR    RRET                     RETURN
         SPACE 2
*   THE FOLLOWING SECTION OF CODE SETS UP BUFFERS FOR OPERATOR
*   CONTROL TO JUST PRINT A MESSAGE SAYING THAT THE TERMINAL
*   OR THE CONTROL UNIT HAS BEEN STOPPED.
         SPACE 2
*  FIX BUFFER FOR TERMINAL STOPPED
         SPACE
GENMSG   EQU   *
         XC    PRFSTAT1(ONE),PRFSTAT1   CLEAR FIELD
         LA    RWORK1,AVTOPCOB          GET OPERATOR CONTROL QCB ADDR
         ST    RWORK1,PRFQCBA-ONE       PUT IT INTO PREFIX
         LH    ROFF,LCBTTCIN            GET TNT OFFSET
         N     ROFF,AVTCLRHI            CLEAR HIGH PART
         BAL   RRET,COMPTRMN            GET ADDR OF TRMNAME
         SPACE
         BAL   RRET,BLANKS              STRIP BLANKS FROM TERMNAME
         SPACE
         ST    RLCB,PRFLCB-ONE          SET UP LCB ADDRESS
         MVI   PRFNBUNT,UNIT01          SET NO. OF UNITS/BFR
         MVI   PRFTIC,TIC08             SET UP TIC FIELD
         OI    PRFLCB+TWO,POL02         SET SPECIAL BIT FOR MSG
         MVC   PRFCRCD-ONE(FOUR),MSG1A  GET MSG NO. FOR TERM.
         LA    RPOINT,PRFNHDR           WHERE TO MOVE NAME
         EX    RLENGTH,MOVENAME
         LA    RPOINT,ONE(RLENGTH,RPOINT)  POINT TO FIRST BYTE
*                                          AFTER NAME
         BAL   RRET,PAD                 PAD NAME WITH BLANKS
         SPACE
         BAL   RRET,POST                POST MSG BFR
         TM    AVTDOUBL+TWO,CUSW        IS THERE A CONTROL UNIT
*                                          MSG TO PRINT
         BNO   CHCKINTV
         SPACE
*   BUILD BUFFER FOR CONTROL UNIT
         SPACE
         XC    PRFSTAT1(ONE),PRFSTAT1   CLEAR FIELD
         LA    RWORK1,AVTOPCOB          GET OPERATOR CONTROL QCB ADDR
         ST    RWORK1,PRFQCBA-ONE       PUT IT INTO PREFIX
         LH    ROFF,GENPOLLT            GET TNT INDEX FOR CU       @25C
         N     ROFF,AVTCLRHI            CLEAR HIGH
         BAL   RRET,COMPTRMN            COMPUTE TRMNAME ADDRESS
         SPACE
         BAL   RRET,BLANKS              STRIP BLANKS FROM TERMNAME
         SPACE
         ST    RLCB,PRFLCB-ONE          SET UP LCB ADDRESS
         MVI   PRFNBUNT,UNIT01          SET NO. OF UNITS/BFR
         MVI   PRFTIC,TIC08             SET UP TIC FIELD
         OI    PRFLCB+TWO,POL02         SET SPECIAL BIT FOR MSG.
         MVC   PRFCRCD-ONE(FOUR),MSG90  GET MSG NO. FOR C.U.
         LA    RPOINT,PRFNHDR           WHERE TO MOVE NAME
         EX    RLENGTH,MOVENAME
         LA    RPOINT,ONE(RLENGTH,RPOINT)   POINT TO FIRST BYTE
*                                          AFTER NAAE
         BAL   RRET,PAD                 PAD NAME WITH BLANKS
         SPACE
         BAL   RRET,POST                POST BUFFER
         SPACE
         B     CHCKINTV
         SPACE 2
*   THE FOLLOWING SECTION OF CODE PADS THE TERMINAL NAME
*   WITH BLANKS TO MAKE IT 8 CHARACTERS LONG.
         SPACE
PAD      EQU   *
         LA    RLENGTH,ONE(,RLENGTH)    INCR. LENGTH
         CH    RLENGTH,HALF8            IS NAME 8 CHARACTERS?
         BER   RRET                     YES
         MVI   ZERO(RPOINT),AVTEBLNK    PAD NAME WITH BLANKS
         LA    RPOINT,ONE(,RPOINT)
         B     PAD
         SPACE
VARYOFF  EQU   *
         TM    INPFLAG,INPLINE          IS TARGET=LINE SPECIFIED?
         BO    MOVOFFC                  BR YES
         SPACE
MOVOFFB  EQU   *
         L     RDCB,LCBDCBPT            GET LCB OR DCB ADDRESS @OY12413
         TM    DCBDSORG-IHADCB(RDCB),AVTE80      3705 TERM     @OY12413
         BNO   VARYOFF1                 BRANCH IF NO           @OY12413
         LR    R14,RTERM                                       @Y17XAMG
         LA    R15,TRMPRFSZ             TRM PREFIX SIZE        @Y17XAMG
         SR    R14,R15                  TRM PREFIX ADDRESS     @Y17XAMG
         TM    TRMBYTE2-IEDNTRM(R14),TRMRSACT   TERM ACTIVE    @Y17XAMG
*                                                FOR INPUT     @OY12413
         BO    SNATEST                  O K TO STOP IT             @R1C
         TM    INPFLAG,INPSTPTI         STOP TERM IMMEDIATE        @R1P
         BZ    RETDISP1                 NO, INPUT ALREADY STOPPED  @R1A
*                                       YES, OFFTP,I CAN STOP THE  @R1A
*                                            PSEUDO-SNA SESSION    @R1A
SNATEST  EQU   *                                                   @R1A
         TM    TRMBYTE0-IEDNTRM(R14),TRMSNA      SNA?          @Y17XARR
         BO    DACTSNA                  YES,REQUEST DEACT      @Y17XARR
VARYOFF1 EQU   *                                               @OY12413
         OI    AVTDOUBL+TWO,OFFBBIT     SET UP FOR INTVL IF NEEDED
         TM    INPFLAG,INPSTPTI         STOP TERM IMMEDIATE        @21A
         BZ    STOPB                    NO, BRANCH                 @21A
         OI    AVTDOUBL+TWO,OFFIBIT     SET FOR INTVL IF NEEDED    @21A
         OI    AVTDOUBL,OFFIBIT         YES, SAVE REQ TYPE         @21A
         NI    AVTDOUBL+TWO,XFF-OFFBBIT RESET OFFTP,B INDIC.       @21A
STOPB    EQU   *                                                   @21A
         LH    ROFF,LCBTTCIN            GET TNT INDEX TO FIND
         BAL   RRET,COMPTRMN              TRMNAME
         SPACE
         BAL   RRET,BLANKS              STRIP BLANKS FROM TERMNAME
         SPACE
         BAL   RRET,PREFIX              SET UP BFR PREFIX
         SPACE
         MVC   ZERO(THREE,RPOINT),VARY  MOVE ' V ' CMD INTO BFR
         LA    RPOINT,THREE(,RPOINT)    MOVE PTR. TO NEXT FIELD
         EX    RLENGTH,MOVENAME         MOVE TRM. NAME INTO BFR
         LA    RPOINT,ONE(RPOINT,RLENGTH)   UPDATE PTR.
         MVC   ZERO(NINE,RPOINT),OFFTPB   MOVE CMD INTO BFR
         L     ROFF,AVTSAVE3+TWENTY4    RESTORE ADDR OF PARM LIST  @R1A
         TM    INPFLAG,INPSTPTI         STOP TERM IMMEDIATE        @21A
         BZ    NOSTPTI                  NO, BRANCH                 @21A
         MVC   ZERO(NINE,RPOINT),OFFTPBI  MOVE CMD TO BUFFER       @21A
NOSTPTI  EQU   *                                                   @21A
         BAL   RRET,POST                GO POST BFR
         SR    R15,R15                  CLEAR REG
         B     CHCKINTV                 CHECK INTERVAL SPECIFIED
         SPACE
DACTSNA  EQU   *                                               @Y17XARR
         OI    AVTDOUBL+TWO,DEACTBIT    SET FOR INTERVAL       @Y17XARR
         BAL   RRET,PREFIX              SETUP BFR PREFIX       @Y17XARR
         MVC   ZERO(THREE,RPOINT),MODIFY MOVE CMD INTO BFR     @Y17XARR
         LA    RPOINT,THREE(,RPOINT)    BUMP PASSED THE CMD    @Y17XARR
         L     RWORK,AVTTCB             GET THE TCB ADDRESS    @Y17XARR
         L     RWORK,TCBTIO-IEDQTCB(RWORK)  GET JOBNAME        @Y17XARR
         LA    RLENGTH,EIGHT            GET MAX LENGTH         @YM08528
         BAL   RRET,BLANKS              STRIP BLANKS           @YM08528
         EX    RLENGTH,MOVENAME         MOVE JOBNAME           @YM08528
         LA    RPOINT,ONE(RLENGTH,RPOINT) BUMP PASSED JOBNAME  @YM08528
         MVC   ZERO(SEVEN,RPOINT),DEACT MOVE IN MODIFY CMD TYPE@Y17XARR
         LA    RPOINT,SEVEN(,RPOINT)    BUMP PASSED M CMD TYPE @Y17XARR
         LH    ROFF,LCBTTCIN            GET THE TNT INDEX      @Y17XARR
         N     ROFF,AVTCLRHI            CLEAR HIGH ORDER HALF  @YM08412
         BAL   RRET,COMPTRMN            GET THE TERMNAME       @Y17XARR
         BAL   RRET,BLANKS              STRIP BLANKS FROM NAME @Y17XARR
         EX    RLENGTH,MOVENAME         MOVE RESOURCE NAME     @Y17XARR
         LA    RPOINT,ONE(RLENGTH,RPOINT) BUMP PASSED RESOURCE @Y17XARR
         MVI   ZERO(RPOINT),AVTEBLNK    MOVE IN A DELIMITER    @YM09009
         LA    RPOINT,ONE(RPOINT)       BUMP PASSED THE BLANK  @YM09009
         BAL   RRET,POST                POST THE BFR           @Y17XARR
         SR    R15,R15                  ZERO RETCDE            @Y17XARR
         B     CHCKINTV                 CHECK INTERVAL SPECIFID@Y17XARR
MOVOFFC  EQU   *
         OI    AVTDOUBL+TWO,OFFCBIT     SET UP FOR INTV IF NEEDED
         L     RDCB,LCBDCBPT            GET DCB ADDR.
         TM    DCBDSORG-IHADCB(RDCB),AVTE80  IS THIS 3705 TERM.?
         BNO   MOVOFFC1                 NO-CONTINUE                @11A
         TM    LCBSTAT2,LCBDIAL         DIAL LCB?                  @11A
         BZ    FINDGRP                  NO-CONTINUE GROUP          @11A
*                                       PROCESSING                 @11A
         OI    LCBSTAT,LCBVSTP          SET INDICATOR FOR          @11A
*                                       IEDIAM NOT TO SEND ANY     @11A
*                                       MORE INVITES               @11A
         OI    LCBSTAT2,LCBNEGRP        INDICATE DISC              @11A
         B     FINDGRP                  CONTINUE GRP PROCESSING    @11A
MOVOFFC1 EQU   *                                                   @11A
         SPACE
         LA    RLENGTH,TWO              GET LENGTH-1 OF LINE NO.
         BAL   RRET,PREFIX              SET UP BFR PREFIX
         SPACE
         BAL   RRET,FINDUCB             FIND UCB ADDRESS
         SPACE
         USING    UCBOB,RDCB            SET UP DSECT
         SPACE
         MVC   ZERO(THREE,RPOINT),VARY  MOVE ' V ' CMD INTO BFR
         LA    RPOINT,THREE(,RPOINT)    MOVE PTR TO NEXT FIELD
         MVC   ZERO(THREE,RPOINT),UCBNAME  GET LINE NUMBER
         B     ENDPROC
         SPACE 2
FINDGRP  EQU   *
         LA    RWORK,DCBDDNAM-IHADCB(RDCB)   GET ADDR OF GRPNAME
         LA    RLENGTH,EIGHT            GET LENGTH OF NAME
         BAL   RRET,BLANKS              STRIP BLANKS FROM GRPNAME
         SPACE
         LA    RLENGTH,FOUR(,RLENGTH)   INCR FOR ',RLN'
         BAL   RRET,PREFIX              SET UP BFR PREFIX
         MVC   ZERO(THREE,RPOINT),VARY  MOVE ' V ' CMD INTO BFR
         LA    R0,FOUR                  PUT 4 INTO R0
         SR    RLENGTH,R0               ADJUST TO LENGTH-1 OF TRMN
         LA    RPOINT,THREE(,RPOINT)    MOVE PTR TO NEXT FIELD
         EX    RLENGTH,MOVENAME         MOVE GRPNAME INTO BFR
         ST    RPOINT,AVTSAVE3+SIXTEEN  SAVE ADDR OF GRPNAME FOR
*                                         INTVL IF NECESSARY
         STC   RLENGTH,AVTSAVE3+SIXTEEN   SAVE LENGTH OF GRPNAME
         LA    RPOINT,ONE(RLENGTH,RPOINT)  POINT TO FIELD AFTER NAME
         MVC   ZERO(ONE,RPOINT),OFFTPC   MOVE IN COMMA
         LA    RPOINT,ONE(,RPOINT)      MOVE POINTER ONE MORE
         LH    ROFF,LCBTTCIN            GET TNT INDEX
         TM    LCBSTAT2,LCBDIAL         DIAL?                      @24A
         BNO   NOTDIAL                  NO                         @24A
         LR    RWORK1,R1                YES-SAVE R1                @24A
         SR    R1,R1                    CLEAR FOR                  @24A
         LR    R1,ROFF                  LCBTTCIN                   @24A
         L     R15,AVTRNMPT             ADDR TRMNAME TABLE         @24A
         BALR  R14,R15                  GET TTE FOR DIAL TERM      @24A
         LA    R15,TRMPRFSZ             PREFIX SIZE                @24A
         SR    R1,R15                   PREFIX ADDR                @24A
         LH    ROFF,TRMCOHRT-IEDNTRM(R1) USE CONNECTED LINE'S      @24A
*                                       TTE TO GET REL LINE NO     @24A
         LR    R1,RWORK1                RESTORE R1                 @24A
NOTDIAL  EQU   *                                                   @24A
         N     ROFF,AVTCLRHI            CLEAR HIGH ORDER PART
         BAL   RRET,COMPTRMN            GET ADDR OF TERM ENTRY
         SPACE
         ALR   RWORK,RLENGTH            POINT TO QCB ADDRESS
         MVC   AVTDOUBL+FIVE(THREE),0(RWORK)   GET TRM ADDR
         L     RWORK,AVTDOUBL+FOUR      PUT TRM ADDR INTO REG
         L     RWORK,TRMDESTQ-ONE-IEDQTRM(RWORK)
         SR    RWORK1,RWORK1            CLEAR REG FOR IC
         IC    RWORK1,QCBRELLN-IEDQQCB(RWORK)  GET REL. LINE NO.
         CVD   RWORK1,AVTSAVE3+EIGHT    CONVERT REL LINE NO. TO DEC.
         UNPK  ZERO(THREE,RPOINT),AVTSAVE3+FOURTEEN(TWO)
         OI    TWO(RPOINT),MASKF0       FIX ZONE FOR LAST DIGIT
         SPACE
ENDPROC  EQU   *
         LA    RPOINT,THREE(,RPOINT)    UPDATE POINTER
         MVC   ZERO(NINE,RPOINT),OFFTPC  MOVE IN COMMAND
         BAL   RRET,POST                POST BFR
         SPACE
         B     CHCKINTV                 SEE IF INTV SPECIFIED
         SPACE
FINDUCB  EQU   *
         SR    R15,R15                  CLEAR FOR IC
         IC    R15,LCBUCBX
         SLL   R15,TWO                  MULTIPLY BY FOUR
         L     RDCB,DCBDEBAD-IHADCB(,RDCB)
         L     RDCB,DEBUCBAD-DEBNMSUB(R15,RDCB)
         LR    RWORK1,RDCB              SAVE UCB ADDR.
         BR    RRET                     RETURN
         SPACE 2
*   THE FOLLOWING SECTION OF CODE CHECKS TO SEE IF THE
*   INTERVAL OPTION IS SPECIFIED.
         SPACE
CHCKINTV EQU   *
         L     ROFF,AVTSAVE3+TWENTY4    GET ADDR OF PARM LIST
         TM    INPFLAG,INPINVL          IS INTERVAL SPECIFIED
         BZ    RETDISP2
         SPACE
*   BUILD TIME DELAY QUEUE ELEMENT
         SPACE
         MVI   PRFNBUNT,EIGHT           SET UP OFFSET FOR TIME DELAY
         IC    R9,INPLEN                GET LENGTH OF PARMLIST
         LA    RWORK,ENDACT             LOAD FE INTO WORK REG.
         NR    R9,RWORK                 MAKE SURE LENGTH IS EVEN
         LA    RWORK,TWO                LOAD 2 INTO WORK REG
         SR    R9,RWORK                 GET TO INTERVAL OPTION FIELD
         LH    R9,INPIND(R9)            R9 NOW CONTAINS HWD INTVL
         STH   R9,PRFSRCE               SET UP PREFIX FOR TIME
*                                          DELAY QUEUE
         MVI   PRFSIZE,EIGHT
         LA    R9,QCBNAME
         ST    R9,PRFTIC
         MVI   PRFPRI,PRIRELSE          SET PRIORITY
         TM    AVTDOUBL+TWO,OFFCBIT     WAS OFFTP,C SPECIFIED?
         BNO   GETNDX
         SPACE
         MVI   PRFTIC,OFFCBIT           SET OFFTP,C BIT
         L     RDCB,LCBDCBPT            GET DCB ADDR.
         TM    DCBDSORG-IHADCB(RDCB),AVTE80  IS THIS A 3705 TERM?
         BO    MOVERLN                  YES
         SPACE
         LA    RLENGTH,THREE            GET LINE NO. INSTEAD OF TERM
         LA    RWORK,UCBNAME-UCBOB(,RWORK1) ADDRESS OF LINE NO.
         B     CONTIN
         SPACE
MOVERLN  EQU   *
         SR    RLENGTH,RLENGTH          CLEAR FOR IC
         IC    RLENGTH,AVTSAVE3+SIXTEEN  GET LENGTH-1 OF GRPNAME
         LA    RLENGTH,FIVE(,RLENGTH)   ADD 5 FOR ',RLN' & ADJUST
*                                          LENGTH BY ONE
         L     RWORK,AVTSAVE3+SIXTEEN   GET ADDR OF GRPNAME,RLN
         B     CONTIN
         SPACE
GETNDX   EQU   *
         LH    ROFF,LCBTTCIN            GET TNT INDEX
         TM    AVTDOUBL+TWO,CUSW         GEN POLL STOPPED      @OZ35509
         BZ    USELCBTT                  NO , USE LCBTTCIN     @OZ35509
         LH    ROFF,GENPOLLT             USE GEN POLL TNT      @OZ35509
USELCBTT EQU   *                                               @OZ35509
         BAL   RRET,COMPTRMN            COMPUTE TERMNAME ADDRESS
         SPACE
         BAL   RRET,BLANKS              STRIP BLANKS FROM TERMNAME
         SPACE
         LA    RLENGTH,ONE(,RLENGTH)    STORE CORRECT LENGTH
         TM    AVTDOUBL+TWO,OFFIBIT     WAS CMD OFFTP,I?           @21A
         BZ    CHKOFFB                  NO, BRANCH                 @21A
         MVI   PRFTIC,OFFIBIT           SET BIT FOR OFFTP,I        @21A
CHKOFFB  EQU   *                                                   @21A
         TM    AVTDOUBL+TWO,OFFBBIT     WAS CMD OFFTP,B?
         BNO   CONTINUE                 NO, THEN MUST BE OFFTP,E
*                                       (NO BIT IS SET FOR OFFTP,E)
         SPACE
         MVI   PRFTIC,OFFBBIT           SET BIT FOR ONTP LATER
CONTINUE EQU   *
         TM    AVTDOUBL+TWO,DEACTBIT    DEACT?                 @Y17XARR
         BNO   CONTIN                   NO CONTINUE            @Y17XARR
         MVI   PRFTIC,DEACTBIT          SET ACTIV LATER        @Y17XARR
         SPACE
CONTIN   EQU   *
         STC   RLENGTH,PRFSIZE+ONE
         LA    RPOINT,PRFNHDR
         BCTR  RLENGTH,ZERO             DECR FOR EXECUTE
         EX    RLENGTH,MOVENAME         MOVE TERMINAL NAME
*   CODE MAY BE ADDED LATER TO SAVE CONTROL UNIT ADDRESS INSTEAD
*   OF TERMNAME.  IN THAT CASE A ZERO WILL BE STORED AT PRFSIZE+1
*   TO INDICATE CONTROL UNIT ADDRESS
         SPACE
         ST    R1,AVTDOUBL              SAVE CHAIN OF ELEMS
         LR    R1,RBFR                  GET ADDR OF TIME DELAY QELEM
         L     RBFR,PRFLINK-1           GET NEXT BFR ADDR
         XC    PRFLINK-IEDQPRF(THREE,R1),PRFLINK-IEDQPRF(R1)
         L     R15,AVTHG01              GET READY TO PLACE ELEM.
         LA    RAVT,AVTSAVE3               ON TIME DELAY QUEUE
         BALR  R14,R15
         SPACE
         SH    RAVT,HALF48              RESTORE REG 13
         SR    R15,R15                  CLEAR R15
         L     R1,AVTDOUBL              RESTORE R1
         B     RETDISP2                 RETURN
         SPACE 2
*    RETURN TO THE DISPATCHER
         SPACE
RETDISP  EQU   *
         SR    RBFR,RBFR                CLEAR REG
         SPACE
RETDISP1 EQU   *
         L     R1,AVTSAVE3+TWENTY       RESTORE POST LIST
         SPACE
RETDISP2 EQU   *
         LA    RBFR,ZERO(,RBFR)         ZERO HIGH ORDER BYTE
         LTR   RBFR,RBFR                ANY BUFFERS TO REMOVE
         BZ    NOXTRAS                    BRANCH NO
         SPACE
         SR    R14,R14                  CLEAR
         LR    R0,RBFR                  SAVE FIRST UNIT ADDRESS
         SPACE
NEXTRET  EQU   *
         CLC   PRFLINK,AVTFZERO         END OF CHAIN
         BE    RETFND                     BRANCH YES
         SPACE
         L     RBFR,PRFLINK-1           NEXT UNIT
         BCT   R14,NEXTRET                COUNT UNITS AND BRANCH
         SPACE
RETFND   EQU   *
         TM    AVTBFRFG,AVTBFRTN        RETURN UNITS HI OR LO      @22C
         BNO   ONTOP                    BR, RETURN HI              @22C
         NC    AVTBFREB+1(3),AVTBFREB+1  ANY UNITS AVAILABLE       @22C
         BZ    NOCOR                    NO, BRANCH                 @22C
         L     RPOINT,AVTSELCH-1        GET LAST UNIT ADDRESS      @22C
         STCM  R0,SEVEN,PRFLINK-IEDQPRF(RPOINT) ADD NEW UNIT       @23C
NOCOR    EQU   *                                                   @22C
         STCM  RBFR,7,AVTSELCH          SET ADDR OF LAST UNIT      @22C
         XC    PRFLINK,PRFLINK          CLEAR LINK FIELD           @22C
         NC    AVTBFREB+1(3),AVTBFREB+1  ANY UNITS AVAILABLE       @22C
         BNZ   ONTOPOF                  YES, BRANCH                @22C
ONTOP    EQU   *                                                   @22C
         MVC   PRFLINK(3),AVTBFREB+1    LINK UNIT INTO CHAIN       @22C
         STCM  R0,SEVEN,AVTBFREB+1      RESET BUFFER POINTER       @23C
ONTOPOF  EQU   *                                                   @22C
         LH    R0,AVTAVFCT              AVAILABLE COUNT
         N     R0,AVTCLRHI              CLEAR HIGH ORDER BYTE
         BCTR  R14,ZERO                 DECREMENT R14
         LPR   R14,R14                  CONVERT TO POSITIVE
         ALR   R0,R14                   ADD NUMBER RETURNED
         STH   R0,AVTAVFCT              STORE UPDATED COUNT
         DROP  RLCBX                                           @OS77950
         USING IEDQDISP,RDISP                                  @OS77950
NOXTRAS  EQU   *
         L     RDISP,AVTEA              RESTORE DISPATCHER ADDRESS
         LTR   RBASE,RBASE              CHECK ENTRY
         BNP   NEXTEL                     ENTRY FROM IEDQBD -  @Y17XAMX
         BAL   R14,DSPCHAIN                                    @Y17XAMX
*                                       RETURN IS TO DISPATCHER
NEXTEL   EQU   *
         LTR   R1,R1                    IS THERE ANOTHER ELEMENT
         BZ    GOTOUI                   NOTHING ON ELEM. CHAIN
         L     R9,FOUR(,R1)             NEXT ELEMENT ADDRESS
         BAL   R14,DSPPOSTR             INSERT ELEMENT ON READY Q
         SPACE
         LA    R1,0(,R9)                CLEAR HIGH ORDER BYTE
         B     NEXTEL                   POST ANOTHER ELEMENT
         SPACE
GOTOUI   EQU   *
         L     RBASE,AVTUI              RETURN IS TO IEDQUI
         L     RAVT,AVTPARM             RESTORE SAVE AREA ADDRESS
         B     FOUR(,RBASE)               RETURN TO IEDQUI
GETBFR   EQU   *
         LH    R0,AVTAVFCT              AVAILABLE UNIT COUNT
         N     R0,AVTCLRHI              ACCOUNT FOR 32K+
         SR    R0,R15                   DECREMENT COUNT
         LA    RBFR,AVTBFREB-FOUR       SET FOR FIRST TIME
*        CONSTANTS
NEXTBF   EQU   *
         L     RBFR,PRFLINK-1           NEXT UNIT
         LA    RBFR,0(,RBFR)            CLEAR HI BYTE
         LTR   RBFR,RBFR                OUT OF UNITS
         BZ    SETRT                      YES, SET RET CODE TO 12
         SPACE
         SR    RDCB,RDCB                CLEAR REGISTER             @01A
         LH    RDCB,AVTKEYLE            GET BUFFER LENGTH          @01A
         BCTR  RDCB,ZERO                ADJUST LENGTH FOR MOVE     @01A
         EX    RDCB,CLRINSTR            ZERO OUT INSTRUCTION       @02C
         BCT   R15,NEXTBF               LOOP TILL ALL OBTAINED
         SPACE
         STH   R0,AVTAVFCT              STORE NEW COUNT
         L     R0,AVTBFREB              FIRST UNIT ADDRESS
         MVC   AVTBFREB+1(THREE),PRFLINK  DELINK UNITS
         XC    PRFLINK-ONE(FOUR),PRFLINK-ONE ZERO LINK FIELD OF BFR
*                                         BUFFER ON THE CHAIN
         LR    RBFR,R0                  FIRST UNIT ADDRESS TO RBFR
         BR    RRET
         SPACE
SETRT    EQU   *
         LA    R15,TWELVE               SET RET CODE (NOT ENOUGH BFRS)
         BR    RRET                     RETURN
         SPACE 2
*   SUBTASK FOR TIME DELAY QUEUE
         SPACE
         DS    0F                       START ON FULLWORD BDY.
QCBNAME  EQU   *-8                      DUMMY QCB
STCB     DC    AL1(DSPMCPL4)
         DC    AL3(STCB)
ROUTINE  EQU   *
         USING ROUTINE,R15
         L     RBASE,BASE
         DROP  R15
         USING IEDQBI,RBASE
         LR    RBFR,R1
         MVC   AVTDOUBL(ONE),PRFTIC     SAVE TP INDICATOR
         SR    RLENGTH,RLENGTH          CLEAR REG
         IC    RLENGTH,PRFSIZE+1        GET LENGTH
*                                          OF TERMNAME
         LA    RWORK1,VARYLEN-1(,RLENGTH)  COMPUTE LEN OF DATA @YM08412
         TM    AVTDOUBL,DEACTBIT        DEACT OR VARY          @YM08412
         BNO   COMPUTE                  VARY                   @YM08412
         LA    RWORK1,MCMDLEN+1(,RLENGTH) MODIFY LEN- JOBNME L @YM09098
         SR    RPARM,RPARM               CLEAR TO SAVE TERMNAME@YM09098
         IC    RPARM,PRFSIZE+ONE         PICKUP TERMNAME LENGTH@YM09098
         LR    RPOINT,RWORK1             SAVE THE LEN-JOBNAME L@YM09098
         L     RWORK,AVTTCB              GET THE TCAM TCB ADDR @YM09098
         L     RWORK,TCBTIO-IEDQTCB(RWORK) GET JOBNAME PTR     @YM09098
         LA    RLENGTH,EIGHT             MAXIMUM LENGTH        @YM09098
         BAL   RRET,BLANKS               GET TOTAL LENGTH-1    @YM09098
         LA    RLENGTH,ONE(,RLENGTH)     GET TOTAL LENGTH      @YM09098
         LR    RWORK1,RPOINT             RESTORE LEN-JOBNME L  @YM09098
         ALR   RWORK1,RLENGTH            GET THE TOTAL LENGTH  @YM09098
COMPUTE  EQU   *                                               @YM08412
         LA    RWORK1,DATAOFF(,RWORK1)
         LH    MOVELEN,AVTKEYLE         GET LENGTH OF BFR UNIT
         SH    MOVELEN,HALF32
         ST    RLCB,PRFLCB-ONE          SAVE LCB ADDRESS
         MVI   PRFNBUNT,UNIT01          SET UP NO. OF UNITS/BFR
         MVI   PRFTIC,TIC08             SET UP TIC FIELD
         CR    RWORK1,MOVELEN           COMPARE LENGTH
*                                         OF DATA WITH SPACE IN BFR
         BH    BUF3
         LA    RPOINT,PRFLNGTH(,RBFR)   COMPUTE ADDR OF WHERE DATA
*                                          STARTS
         MVI   PRFSCAN,C32              SET SCAN POINTER      @ZM00864
         SPACE
MOVEIT   EQU   *
         XC    PRFLINK,PRFLINK          CLEAR LINK FIELD
         OI    PRFLCB+TWO,POL01         SET SPECIAL BIT
         STH   RWORK1,PRFSIZE           SET UP SIZE OF DATA IN
*                                          PREFIX
         LA    RWORK1,AVTOPCOB          GET ADDR OF OP CTL QCB
         ST    RWORK1,PRFQCBA-1         PUT QCB ADDR INTO PREFIX
         MVI   PRFPRI,PRIMHBFR          SET PRIORITY TO 'E4'
         TM    AVTDOUBL,DEACTBIT        DEACT?                 @Y17XARR
         BNO   VARYCMD                  NO, VARY               @Y17XARR
         MVC   ZERO(THREE,RPOINT),MODIFY  SET CMD              @Y17XARR
         LA    RPOINT,THREE(,RPOINT)    POINT PASSED THE CMD   @Y17XARR
         L     RWORK,AVTTCB             GET TCB ADDR           @Y17XARR
         L     RWORK,TCBTIO-IEDQTCB(RWORK)   GET JOBNAME       @Y17XARR
         LA    RLENGTH,EIGHT            MAX LENGTH             @YM08528
         BAL   RRET,BLANKS              STRIP BLANKS           @YM08528
         EX    RLENGTH,MOVENAME         MOVE THE JOBNAME       @YM08528
         LA    RPOINT,ONE(RLENGTH,RPOINT) BUMP PASSED THE NAME @YM08528
         MVC   ZERO(SEVEN,RPOINT),ACTIV SET MODIFY CMD         @Y17XARR
         LA    RPOINT,SEVEN(,RPOINT)    POINT PASSED THE CMD   @YM09098
         LR    RLENGTH,RPARM            RESTORE TERMNAME       @YM09098
*                                       LENGTH              @YM09098
         B     MOVENME                  READY TO MOVE THE NAME @Y17XARR
VARYCMD  EQU   *                                               @Y17XARR
         MVC   0(THREE,RPOINT),VARY     MOVE 'VARY' CMD        @Y17XARR
         LA    RPOINT,THREE(,RPOINT)    MOVE PTR. TO NEXT FIELD@Y17XARR
MOVENME  EQU   *                                               @Y17XARR
         LA    RWORK,PRFNHDR            GET ADDR OF NAME
         BCTR  RLENGTH,ZERO             DECR. FOR EXECUTE
         EX    RLENGTH,MOVENAME         MOVE NAME
         ALR   RPOINT,RLENGTH
         LA    RPOINT,ONE(,RPOINT)
         TM    AVTDOUBL,DEACTBIT        DEACT                  @Y17XARR
         BNO   CKOFFTPC                 CHECK OFFTP,C          @YM09009
         MVI   ZERO(RPOINT),AVTEBLNK    SET DELIMITER          @YM09009
         B     NEXT4                    POST THE BUFFER        @YM09009
CKOFFTPC EQU   *                                               @YM09009
         TM    AVTDOUBL,OFFCBIT         WAS OFFTP,C SPECIFIED?
         BNO   NEXT1                    NO
         SPACE
         MVC   ZERO(SIX,RPOINT),ONTP    SET UP CMD FOR ONTP
         B     NEXT4
         SPACE
NEXT1    EQU   *
         TM    AVTDOUBL,OFFBBIT         WAS OFFTP,B SPECIFIED?
         BNO   NEXT2                    NO
         SPACE
         MVC   ZERO(EIGHT,RPOINT),ONTPB  SET UP CMD FOR ONTP,B
         B     NEXT4
         SPACE
NEXT2    EQU   *
         TM    AVTDOUBL,OFFIBIT         STOP TERM IMMEDIATE        @21A
         BZ    NEXT3                    NO, BRANCH                 @21A
         MVC   ZERO(NINE,RPOINT),OFFTPBI MOVE CMD TO BUFFER        @21A
         B     NEXT4                    POST THE BUFFER            @21A
NEXT3    EQU   *                                                   @21A
         MVC   0(EIGHT,RPOINT),ONTPE    MOVE CMD ONTP,E INTO BFR
         SPACE
NEXT4    EQU   *
         LR    R1,RBFR                  SET UP
         L     RDISP,AVTEA              GET DISPATCHER'S BASE ADDR
         BAL   R14,DSPCHAIN                 RETURN             @Y17XAMX
         SPACE
BUF3     EQU   *
         LR    R1,RBFR                  PUT BFR BACK ON QUEUE TO
*                                          WAIT UNTIL A BFR IS FREE
         LA    R15,ONE                  GET ADDR OF AVAIL BFR
         BAL   RRET,GETBFR              GET A BUFFER
         LTR   R15,R15                  WAS THERE A BUFFER
         BZ    REMOVE                   YES
         LR    RBFR,R1                  RESTORE BFR POINTER    @OZ25852
         L     RDISP,AVTEA              GET DISPATCHER'S BASE ADDR
         MVI   PRFPRI,PRISYSDT          NO BUFFERS AVAILABLE,  @OY12681
*                                        LOWER PRIORITY        @OY12681
         BAL   R14,DSPPOST         WAIT UNTIL A BFR IS FREE    @Y17XAMX
REMOVE   EQU   *
         AR    RWORK1,MOVELEN
         XC    EIGHT(CLEAR,RBFR),EIGHT(RBFR)  CLEAR PART OF PREFIX
         LR    RPOINT,RBFR
         LR    RBFR,R1                  RESTORE BUFFER POINTER
         ST    RPOINT,PRFTIC            LINK UNITS TOGETHER
         MVI   PRFTIC,TIC08             SET UP TIC FIELD
         MVI   PRFTIC+THREE-IEDQPRF(RPOINT),TIC02  TIC IN SECOND UNIT
         MVI   PRFTIC-IEDQPRF(RPOINT),TIC08  SET UP TIC FIELD
         MVI   PRFNBUNT,UNIT02          SET UP NO. OF UNITS/BFR
         LA    MOVELEN,DATAOFF(,MOVELEN)  COMPUTE SCAN PTR
         STC   MOVELEN,PRFSCAN          SET SCAN PTR          @ZM00864
         LA    RPOINT,TWELVE(,RPOINT)
         B     MOVEIT
         SPACE 2
*      CONSTANTS & DATA
         SPACE
         DS    0F
SPMASK   DC    X'80000000'              MASK FOR IEDQUI ENTRY
HALF48   DC    X'0048'                  HALFWORD 48
HALF2    DC    H'2'                     HALFWORD OF 2
HALF32   DC    H'32'                    HALFWORD OF 32
C32      EQU   32                       EQUATE OF 32           @ZM00864
HALF8    DC    H'8'                     HALFWORD OF 8
GENPOLLT DC    H'0'                     GEN POLL TNT SAVEAREA      @25C
TRMPREFL DC    A(TRMPRFSZ)              PREFIX LENGTH OF TRM   @Y17XARR
VARY     DC    C' V '                   VARY COMMAND
MODIFY   DC    C' F '                   MODIFY COMMAND         @Y17XARR
ACTIV    DC    C',ACTIV='               ACTIV COMMAND          @Y17XARR
DEACT    DC    C',DEACT='               DEACT COMMAND          @Y17XARR
OFFTPB   DC    C',OFFTP,B '             END OF VARY COMMAND
OFFTPC   DC    C',OFFTP,C '             END OF VARY COMMAND
OFFTP    DC    C',OFFTP,E '             END OF VARY COMMAND
OFFTPBI  DC    C',OFFTP,I '             END OF VARY COMMAND        @21A
ONTP     DC    C',ONTP '                END OF VARY COMMAND
ONTPB    DC    C',ONTP,B '              END OF VARY COMMAND
ONTPE    DC    C',ONTP,E '              END OF VARY COMMAND
X7F7F    DC    X'7F7F'                  CONTROL UNIT CHARS. FOR 3270
X2222    DC    X'2222'                  CONTROL UNIT CHARS FOR ASCII
MSGLEN   DC    H'56'                    MAXIMUM LENGTH OF DATA @YM08502
MSG1A    DC    X'001A0000'              MSG NO. FOR TERMINAL STOPPED
MSG90    DC    X'00900000'              MSG NO. FOR CU STOPPED
BASE     DC    A(IEDQBI)                ESTABLISH ADDRESSABILITY
RRETSAVE DC    F'0'                     REG 14 SAVEAREA        @YM08502
INVTIC   DC    X'08000002'              LAST UNIT TIC FIELD    @OZ33017
MOVENAME MVC   ZERO(ZERO,RPOINT),ZERO(RWORK)            MOVE TRM NAME
SWAP1    XC    ONE(ZERO,RWORK),ONE(RENTRY)    SWAP TWO
SWAP2    XC    ONE(ZERO,RENTRY),ONE(RWORK)    SUCCESSIVE ENTRIES
MOVACT   MVC   ZERO(ZERO,RENTRY),ONE(RENTRY)   MOVE ENTRY
MOVEACT1 MVC   ZERO(ZERO,RENTRY),TWO(RENTRY)   MOVE ENTRY
CLRINSTR XC   TWELVE(ZERO,RBFR),TWELVE(RBFR) CLEAR BUFFER      @YM08412
*        DSECTS                                                       *
         EJECT
INPARM   DSECT
INPIND   DS    AL1                      INDEX TO IEDQBI
INPMSK   EQU   X'01'                    MASK NOT SPECIFIED
INPLEN   DS    AL1                      LENGTH OF PARAMETER LIST
INPFLAG  DS    XL1                      FLAG BYTE
INPCOUNT EQU   X'80'                    COUNT= SPECIFIED
INPINVL  EQU   X'20'                    INTVL= SPECIFIED
INPLINE  EQU   X'10'                    TARGET=LINE SPECIFIED
INPVARY  EQU   X'08'                    VARYOFF MACRO CALL
INPSTPTI EQU   X'04'                    VARY TERM IMMEDIATE        @21A
INPMASK  DS    XL5                      ERROR MASK
INPCIND  DS    AL1                      INDEX TO IEDQBJ
INPCC    DS    XL1                      CONDITION CODE
INPNOCLR EQU   X'40'                    CLEAR= NO SPECIFIED
INPUPDAT EQU   X'20'                    UPDATE= SPECIFIED
INPUPADD EQU   X'10'                    UPDATE=ADD
INPCNINT EQU   X'80'                    COUNT(3) = INTEGER
INPOPT   DS    AL1                      INDEX TO OPTION FIELD
INPOPT2  DS    AL1                      OPTION FIELD2 OR 0
INPINTG  DS    XL4                      INTEGER FOR COUNT(3)
INPINTV  DS    XL2                      INTERVAL
         EJECT
         TAVTD
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDEBD
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TQCBD
         EJECT
         TSCBD
         EJECT
         TTCBD
         EJECT
         TTNTD
         EJECT
         TTRMD
         EJECT
         DSECT
         IEFUCBOB
         SPACE 3
         END
