IEDQAB   CSECT
***********************************************************************
*                                                                     *
*STATUS -- CHANGE LEVEL                                               *
*                                                                     *
*FUNCTION -- COMPLETES INITIALIZATION FUNCTIONS FOR THE PROCESSING    *
*   OF A BUFFER BY THE MESSAGE HANDLER.                               *
*                                                                     *
*   THIS MODULE IS A LOGICAL EXTENSION OF THE STARTMH SUB-TASK FOR    *
*   INPUT BUFFERS. IT ALLOWS CODING OF INBLOCK SUBGROUP AND EXECUTION *
*   OF SETEOM MODULE FOR ALL BUFFERS BEFORE (OR AFTER) 'CODE' MACRO   *
*   THE ROUTINE DETERMINES IF TRANSLATION IS TO BE DONE. IF SO, LINKS *
*   TO THE ROUTINE IEDQAW.  IF THIS IS A BUFFER OF A MULTI-BUFFER     *
*   HEADER, THE ROUTINE LINKS TO THE MODULE ADDR IN SCBMBHEN.  IF NOT *
*   CONTROL RETURNS TO THE MACRO FOR INHDR/INBUF PROCESSING.          *
*                                                                     *
*ENTRY POINTS --                                                      *
*        'IEDQAB01' FOR PROCESSING                                    *
*INPUT --                                                             *
*   REGISTER 1 - PARAMETER LIST ADDRESS                               *
*                                                                     *
*        *****************                                            *
*        *       * PARAM *                                            *
*        * INDEX *  LIST *                                            *
*        *       * LNGTH *                                            *
*        *       *       *                                            *
*        *****************                                            *
*   REGISTER 3 - SCB ADDRESS                                          *
*   REGISTER 4 - LCB ADDRESS                                          *
*   REGISTER 6 - BUFFER ADDRESS                                       *
*   REGISTER 9 - AVT ADDRESS                                          *
*   REGISTER 12 - ENTRY POINT AND BASE REGISTER                       *
*   REGISTER 13 - SAVE AREA                                           *
*                                                                     *
*OUTPUT --                                                            *
*   N/A                                                               *
*                                                                     *
*EXTERNAL REFERENCES -                                                *
*   'IEDQAW' - TRANSLATE ROUTINE                                      *
*   AVT - ADDRESS VECTOR TABLE                                        *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*EXITS NORMAL - THE BUFFER IS PASSED TO THE NEXT MACRO TO BE EXECUTED *
*   (AFTER TRANSLATION, IF APPLICABLE)                                *
*                                                                     *
*EXITS,ERROR - N/A                                                    *
*                                                                     *
*TABLES/WORK AREAS -- N/A                                             *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTES - THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN         *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
         EJECT
*********** REGISTER EQUATES *************
         SPACE 1
R1       EQU   1    PARAMETER LIST
R2       EQU   2
RSCB     EQU   3    SCB BASE
RPRF     EQU   6                        BUFFER ADDRESS
RAVT     EQU   9    AVT BASE
RBASE    EQU   12   BASE FOR MODULE
RSAVE    EQU   13       REGISTER SAVE AREA
R14      EQU   14   RETURN REGISTER
R15      EQU   15   LINK REGISTER TO IEDQUI
FOUR     EQU   4                        DISPLACEMENT
         SPACE 3
         USING IEDQAB01,RBASE      SET BASE FOR MODULES
         USING IEDQSCB,RSCB        BASE FOR SCB DSECT
         USING IEDQAVTD,RAVT       BASE FOR AVT DSECT
         USING IEDQPRF,RPRF             BASE FOR BUFFER PREFIX
         SPACE 2
IEDQAB01 EQU   *
IEDQAB   IEDHJN STARTAB
         L     R15,AVTUI           GET INTERFACE MODULE ADDRESS
         TM    SCBSTATE,SCBCODE    IS TRANSLATION REQUESTED
         BNO   TESTMBH             NO, GO TEST FOR MULTI-BFR HDR
         L     R1,SCBTRANS-1       YES, GET CODE PARA LIST ADDR
         BALR  R14,R15             LINK TO TRANSLATE BUFFER
TESTMBH  EQU   *
         L     R1,SCBMBHEN-1       GET NEXT MACRO ADDRESS
         SR    R15,R15                  ZERO REGISTER
         CH    R15,PRFSIZE              ZERO LENGTH BUFFER
         L     R15,AVTUI                GET ADDRESS OF INTERFACE
         BE    FOUR(R15)                YES, EXIT
         CLC   AVTINOUT,0(R1)      IS IT END-OF-LIST-
         BE    FOUR(R15)                YES RETURN TO MH
         LA    RSAVE,AVTSAVE2           RESTORE SAVE AREA
         LM    R2,RBASE,28(RSAVE)       RESTORE MH REGISTERS
         BCT   R1,0(R15)           NO, BRANCH TO NEXT MACRO
         DC    X'0000'                  INT PROG CHK IF FALL THROUGH
         EJECT
********* DSECTS ***********
         TAVTD
         TPRFD                          BUFFER PREFIX DSECT MACRO
         TSCBD
         END
