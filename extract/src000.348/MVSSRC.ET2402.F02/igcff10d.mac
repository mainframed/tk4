         TITLE 'IGCFF10D, ACTIVATE CHECKPOINT/RESTART MODULE'
IGCFF10D CSECT ,                                                01S0001
@PROLOG  BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
*                                   /*
IGCFF10D IEDHJN AFTERHJN,HJN           MODULE IDENTIFICATION MACRO
*   ROPCAVT=RPARM;                  /* SET THE BASE POINTER FOR THE
*                                      OPERATOR CONTROL ADDRESS 02S1042
*                                      VECTOR TABLE                  */
         LR    ROPCAVT,RPARM                                    02S1042
*   RFY                                                         02S1043
*     RPARM UNRSTD;                 /* RELEASE THE PARAMETER REGISTER
*                                      FOR USE BY THE COMPILER       */
*   RWRKAREA=OPCWORK;               /* SET THE BASE REGISTER TO BE
*                                      USED FOR ADDRESSING AUTOMATIC
*                                      DATA WITH THE POINTER TO THE
*                                      OPERATOR CONTROL RESIDENT WORK
*                                      AREA                          */
         L     RWRKAREA,OPCWORK(,ROPCAVT)                       02S1044
*   GEN REFS(RWRKAREA) NOSETS;                                  02S1045
*                                   /*
         USING @DATD,RWRKAREA          INFORM THE ASSEMBLER OF THE
*                                      BASE REGISTER TO BE USED FOR
*                                      ADDRESSING AUTOMATIC DATA
*   RSAVE=ADDR(OPCSAVE);            /* SET THE SAVE AREA POINTER
*                                      REGISTER WITH THE POINTER TO
*                                      THE OPERATOR CONTROL SAVE AREA*/
         LA    RSAVE,OPCSAVE(,ROPCAVT)                          02S1046
*                                                               02S1047
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS: THIS SEGMENT DOES THE PROCESSING THAT IS NECESSARY TO*/
*   /* PERFORM THE FUNCTION OF THE MODULE.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1047
*                                                               03S1047
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.INITIAL: THIS SEGMENT DOES THE INITIAL PROCESSING.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S1047
*   DO;                                                         03S1047
*     RAVT=OPCAVTPT;                /* SET THE BASE POINTER FOR THE
*                                      TCAM ADDRESS VECTOR TABLE     */
         L     RAVT,OPCAVTPT(,ROPCAVT)                          03S1048
*     ROPCE=OPCCOPCE;               /* SET THE BASE POINTER FOR THE
*                                      OPERATOR CONTROL ELEMENT      */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                         03S1049
*     FLAGS=''B;                    /* INITIALIZE FLAG BYTE          */
         XC    FLAGS(4),FLAGS                                   03S1050
*   END;                                                        03S1051
*   IF OCSWITCH^=OCRSTART THEN      /* IF NOT A RESTART OPCE         */
         CLI   OCSWITCH(ROPCE),X'F1'                            02S1052
         BE    @RF01052                                         02S1052
*     IF OCSWITCH^=OCACTLK THEN     /* IF NOT AN ACTLINK OPCE        */
         CLI   OCSWITCH(ROPCE),X'50'                            02S1053
         BE    @RF01053                                         02S1053
*       DO;                         /* PROCESS RESPONSES TO COMMANDS
*                                      SENT AS PART OF 3705 RESTART  */
*                                                               03S1055
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.RESPONSE: THIS SEGMENT PROCESSES THE RESPONSES TO THE */
*   /* RESTART COMMANDS. NO ERROR PROCESSING IS PERFORMED. THE UNITS */
*   /* CONTAINING THE OPCE AND ATTACHED RU ARE FREED AND TRANSFER OF */
*   /* CONTROL IS SET UP FOR IGC0010D.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S1055
*   RFY                                                         03S1055
*     REG00 RSTD;                                               03S1055
*   RFY                                                         03S1056
*     RPARM RSTD;                                               03S1056
*   IF OCSWITCH^=OCSND3 THEN        /* IF NOT REPLACE DEVICE RECORD
*                                      RESPONSE                      */
         CLI   OCSWITCH(ROPCE),X'F4'                            03S1057
         BE    @RF01057                                         03S1057
*     IF OCSWITCH=OCSND1×OCSWITCH=OCSND2 THEN/* IF BHSET OR MODEM
*                                      SPEED SELECT RESPONSE (FID0)  */
         CLI   OCSWITCH(ROPCE),X'F2'                            03S1058
         BE    @RT01058                                         03S1058
         CLI   OCSWITCH(ROPCE),X'F3'                            03S1058
         BNE   @RF01058                                         03S1058
@RT01058 DS    0H                                               03S1059
*       REG00=2;                    /* SET TO DECREMENT OPCADGOT BY 2
*                                      FOR THE OPCE AND RU           */
         LA    REG00,2                                          03S1059
*     ELSE                          /* ELSE FID1 RESPONSE            */
*       REG00=1;                    /* SET TO DECREMENT OPCADGOT BY 1
*                                      FOR THE OPCE                  */
         B     @RC01058                                         03S1060
@RF01058 LA    REG00,1                                          03S1060
*   ELSE                            /* REPLACE DEVICE RECORD RESPONSE*/
*     REG00=OCDVRDCT;               /* SET TO DECREMENT OPCADGOT BY
*                                      THE COUNT OF UNITS WHICH WERE
*                                      NECESSARY TO BUILD THE OPCE
*                                      AND THE REPLACE DEVICE RECORD
*                                      RU                            */
         B     @RC01057                                         03S1061
@RF01057 LH    REG00,OCDVRDCT(,ROPCE)                           03S1061
*   CALL DECRCT;                    /* DECREMENT OPCADGOT AND INIT.
*                                      REDRIVE ELEMENT IF R/D OPCE'S
*                                      ON OPCBUFWT CHAIN             */
@RC01057 L     @15,OPCDECR(,ROPCAVT)                            03S1062
         BALR  @14,@15                                          03S1062
*   RPARM=ROPCE;                    /* POINT TO CURRENT OPCE         */
         LR    RPARM,ROPCE                                      03S1063
*   CALL FREEBUFF;                  /* FREE THE OPCE AND ANY ATTACHED
*                                      RU'S                          */
         L     @15,OPCFREBF(,ROPCAVT)                           03S1064
         BALR  @14,@15                                          03S1064
*   OPCMODID=CNTLMOD;               /* SET TO XCTL TO IGC0010D       */
         MVC   OPCMODID(2,ROPCAVT),CNTLMOD                      03S1065
*   RFY                                                         03S1066
*     REG00 UNRSTD;                                             03S1066
*   RFY                                                         03S1067
*     RPARM UNRSTD;                                             03S1067
*       END;                                                    02S1068
*     ELSE                          /* THIS IS AN ACTLINK,           */
*       DO;                         /* START CKPTR/RTRT PROCESS      */
         B     @RC01053                                         02S1069
@RF01053 DS    0H                                               02S1070
*                                                               03S1070
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.START: THIS SEGMENT STARTS THE RESTART PROCESSING BY  */
*   /* BUILDING THE RESTART OPCE AND PASSING IT TO CHECKPOINT.       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S1070
*   OCSWITCH=OCRSTART;              /* SET AS RESTART OPCE           */
         MVI   OCSWITCH(ROPCE),X'F1'                            03S1070
*   OCOPTCDE=OCMODIFY;              /* SET CMND CODE                 */
         MVI   OCOPTCDE(ROPCE),X'44'                            03S1071
*   OCRESNUM=''B;                   /* INITIALIZE RESOURCE NUMBER    */
         SLR   @05,@05                                          03S1072
         STH   @05,OCRESNUM(,ROPCE)                             03S1072
*   OCTRMTBL=OCPTRSAV->OCTRMTBL;    /* TTCIN OF NCP                  */
         L     @11,OCPTRSAV(,ROPCE)                             03S1073
         LH    @11,OCTRMTBL(,@11)                               03S1073
         N     @11,@CF03255                                     03S1073
         STH   @11,OCTRMTBL(,ROPCE)                             03S1073
*   OCWTG=THISMOD;                  /* SET TO RETURN TO THIS MODULE
*                                      FROM CHECKPOINT               */
         MVC   OCWTG(2,ROPCE),THISMOD                           03S1074
*   OCREDRVE=OFF;                   /* INSURE REDRIVE FLAG OFF       */
         NI    OCREDRVE(ROPCE),B'11101111'                      03S1075
*   OPCMODID=CKPTMOD;               /* SET TO XCTL TO CHECKPOINT     */
         MVC   OPCMODID(2,ROPCAVT),CKPTMOD                      03S1076
*       END;                                                    02S1077
*   ELSE                            /* THIS IS A RESTART OPCE,       */
*     DO;                           /* SEND OUT RESTART COMMANDS     */
         B     @RC01052                                         02S1078
@RF01052 DS    0H                                               02S1079
*                                                               03S1079
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER: THIS SEGMENT SENDS THE RESTART COMMANDS TO THE*/
*   /* NCP.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S1079
*   IF OCREDRVE=OFF THEN            /* IF NOT REDRIVE                */
         TM    OCREDRVE(ROPCE),B'00010000'                      03S1079
         BNZ   @RF01079                                         03S1079
*     DO;                           /* DETERMINE NUMBER OF COMMANDS
*                                      TO SEND AND, IF ANY, GET AS
*                                      MANY UNITS AS POSSIBLE IN
*                                      WHICH TO BUILD OPCE'S AND RU'S
*                                      AND HANG OFF OCUNIT           */
*                                                               04S1081
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.CHKR: THIS SEGMENT DETERMINES THE NUMBER OF    */
*   /* RESTART COMMANDS TO BE SENT BASED ON THE SETTINGS OF THE BITS */
*   /* IN THE RESOURCE RECORD. IF THE RESOURCE RECORD NUMBER IS 0    */
*   /* THEN RESTART PROCESSING IS OVER FOR THIS 3705 AND RESTART OPCE*/
*   /* IS RESET OF RETURN TO IGCFJ10D TO START ACTLINK PROCESSING.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               04S1081
*   IF OCRESNUM^=0 THEN             /* IF RESTART PROCESSING NOT OVER*/
         LH    @05,OCRESNUM(,ROPCE)                             04S1081
         N     @05,@CF03255                                     04S1081
         LTR   @05,@05                                          04S1081
         BZ    @RF01081                                         04S1081
*     DO;                           /* DETERMINE NUMBER OF UNITS TO
*                                      SEND RESTART COMMANDS FOR THIS
*                                      RESOURCE                      */
*       RCKPREC=NRACURR;            /* SET BASE FOR CKPT RESOURCE
*                                      RECORD                @OZ35856*/
         L     @11,OCRSTGTM(,ROPCE)                             04S1083
         L     RCKPREC,NRACURR(,@11)                            04S1083
*       GETNO=''B;                  /* INIT. CTR. FOR NUMBER OF UNITS
*                                      NEEDED                        */
         SLR   GETNO,GETNO                                      04S1084
*       IF CNRFBHS=ON×CNRFBHSC=ON THEN/* IF BHSET FLAG ON    @YM07713*/
         TM    CNRFBHS(RCKPREC),B'11000000'                     04S1085
         BZ    @RF01085                                         04S1085
*         GETNO=GETNO+2;            /* FID0 COMMAND, NEED TWO UNITS
*                                      FOR OPCE AND RU               */
         AL    GETNO,@CF00071                                   04S1086
*       IF CNRFSSP=ON THEN          /* IF SERVICE SEEK PAUSE         */
@RF01085 TM    CNRFSSP(RCKPREC),B'00100000'                     04S1087
         BNO   @RF01087                                         04S1087
*         GETNO=GETNO+1;            /* NEED 1 UNIT                   */
         AL    GETNO,@CF00066                                   04S1088
*       IF CNRFNPL=ON THEN          /* IF CHANGE NEG. POLL LIMIT FLAG
*                                      ON                            */
@RF01087 TM    CNRFNPL(RCKPREC),B'00010000'                     04S1089
         BNO   @RF01089                                         04S1089
*         GETNO=GETNO+1;            /* NEED 1 UNIT                   */
         AL    GETNO,@CF00066                                   04S1090
*       IF CNRFCSL=ON THEN          /* IF CHANGE SESSION LIMIT FLAG
*                                      ON                            */
@RF01089 TM    CNRFCSL(RCKPREC),B'00001000'                     04S1091
         BNO   @RF01091                                         04S1091
*         GETNO=GETNO+1;            /* NEED 1 UNIT                   */
         AL    GETNO,@CF00066                                   04S1092
*       IF CNRFCTL=ON THEN          /* IF CHANGE TRANSMISSION LIMIT
*                                      FLAG ON                       */
@RF01091 TM    CNRFCTL(RCKPREC),B'00000100'                     04S1093
         BNO   @RF01093                                         04S1093
*         GETNO=GETNO+1;            /* NEED 1 UNIT                   */
         AL    GETNO,@CF00066                                   04S1094
*       IF CNRFMSS=ON THEN          /* IF MODEM SPEED SELECT FLAG ON */
@RF01093 TM    CNRFMSS(RCKPREC),B'00000010'                     04S1095
         BNO   @RF01095                                         04S1095
*         GETNO=GETNO+2;            /* NEED 2 UNITS                  */
         AL    GETNO,@CF00071                                   04S1096
*       IF CNRFRDR=ON THEN          /* IF DEVICE RECORD FLAG ON      */
@RF01095 TM    CNRFRDR(RCKPREC),B'00000001'                     04S1097
         BNO   @RF01097                                         04S1097
*         DO;                       /* DETERMINE NUMBER OF UNITS TO
*                                      BUILD REPLACE DEVICE RECORD RU*/
*                                                               05S1099
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.CALCRDR: THIS SEGMENT CALULATES THE NUMBER OF  */
*   /* UNITS NEEDED TO BUILD THE CHANGE DEVICE RECORD OPCE-PACKED RU.*/
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1099
*   RFY                                                         05S1099
*     IEDPRUQD BASED(ADDR(CNRDEVRC));/* BASE PACKED RU STRUCTURE ON
*                                      ADDR OF DEVICE RECORD IN 05S1099
*                                      RESOURCE RECORD               */
*   COUNTER=2;                      /* INIT TO MIN NUM OF UNITS TO
*                                      BUILD FID0 CMND               */
         LA    COUNTER,2                                        05S1100
*   DO SIZE=PRUDATCT BY(-AVTKEYLE) WHILE(SIZE>AVTKEYLE);/* LOOP WHILE
*                                      SIZE IS STILL GREATER THAN
*                                      TCAM UNIT LENGTH              */
         LH    SIZE,PRUDATCT+19(,RCKPREC)                       05S1101
         B     @DE01101                                         05S1101
@DL01101 DS    0H                                               05S1102
*     COUNTER=COUNTER+1;            /* INCREMENT NUM UNITS NEEDED    */
         AL    COUNTER,@CF00066                                 05S1102
*   END;                                                        05S1103
         LH    @09,AVTKEYLE(,RAVT)                              05S1103
         LCR   @09,@09                                          05S1103
         ALR   SIZE,@09                                         05S1103
@DE01101 CH    SIZE,AVTKEYLE(,RAVT)                             05S1103
         BH    @DL01101                                         05S1103
*   GETNO=GETNO+COUNTER;            /* CALC NUM UNITS NEEDED FOR ALL
*                                      CMNDS                         */
         ALR   GETNO,COUNTER                                    05S1104
*   OCDVRDCT=COUNTER;               /* SAVE NUM UNITS NEEDED FOR
*                                      DEVICE RECORD CMND IN RESTART
*                                      OPCE                          */
         STH   COUNTER,OCDVRDCT(,ROPCE)                         05S1105
*   RFY                                                         05S1106
*     IEDPRUQD BASED;                                           05S1106
*         END;                                                  04S1107
*       OCBUFNED=GETNO;             /* SET NUMBER OF BUFFER UNITS
*                                      NEEDED                        */
@RF01097 STH   GETNO,OCBUFNED(,ROPCE)                           04S1108
*       OCBUFGOT=''B;               /* SET NUMBER OF BUFFER UNITS GOT*/
         SLR   @11,@11                                          04S1109
         STH   @11,OCBUFGOT(,ROPCE)                             04S1109
*     END;                                                      04S1110
*   ELSE                            /* FINISHED SENDING RESTART 04S1111
*                                      COMMANDS,                     */
*     DO;                           /* SET UP CURRENT OPCE AS ACTLINK
*                                      OPCE AND XCTL TO IGCFJ10D TO
*                                      BUILD ACTLINKS FOR ALL LINES
*                                      WITH REMEMBER BIT ON          */
         B     @RC01081                                         04S1111
@RF01081 DS    0H                                               04S1112
*       OUTFLAG=ON;                 /* SET FLAG TO BYPASS REMAINDER
*                                      OF PROCESSING                 */
         LA    @05,1                                            04S1112
         ST    @05,OUTFLAG                                      04S1112
*       OCSWITCH=''B;               /* SET VALUE OF 0 TO INDICATE TO
*                                      IGCFJ10D THAT OPCE IS FROM
*                                      RESTART                       */
         MVI   OCSWITCH(ROPCE),X'00'                            04S1113
*       OPCMODID=RPNCPMOD;          /* SET TO XCTL TO IGCFJ10D       */
         MVC   OPCMODID(2,ROPCAVT),RPNCPMOD                     04S1114
*     END;                                                      04S1115
*       IF OUTFLAG=OFF THEN         /* IF COMMANDS TO BE SENT,       */
@RC01081 L     @09,OUTFLAG                                      03S1116
         LTR   @09,@09                                          03S1116
         BNZ   @RF01116                                         03S1116
*         DO;                       /* GET AS MANY UNITS AS POSSIBLE
*                                      TO START BUILDING THOSE CMNDS */
*                                                               04S1118
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.GETBUFS: THIS SEGMENT DETERMINES IF ANY UNITS  */
*   /* MAY BE OBTAINED, AND IF SO, HOW MANY, AND THEN GETS THEM AND  */
*   /* ATTACHES THEM TO THE REDRIVE OPCE                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               04S1118
*   IF OPCADGOT<(AVTNOLBF/2) THEN   /* IF ACT/DEACT HAS LT 50%       */
         LA    @11,2                                            04S1118
         LH    @05,AVTNOLBF(,RAVT)                              04S1118
         LR    @06,@05                                          04S1118
         SRDA  @06,32                                           04S1118
         DR    @06,@11                                          04S1118
         LH    @06,OPCADGOT(,ROPCAVT)                           04S1118
         N     @06,@CF03255                                     04S1118
         CR    @07,@06                                          04S1118
         BNH   @RF01118                                         04S1118
*     DO;                           /* THEN                          */
*       IF(OCBUFNED+OPCADGOT)>(AVTNOLBF/2) THEN/* IF NO NEED PLUS    */
         LH    @07,OCBUFNED(,ROPCE)                             04S1120
         N     @07,@CF03255                                     04S1120
         LH    @06,OPCADGOT(,ROPCAVT)                           04S1120
         N     @06,@CF03255                                     04S1120
         ALR   @06,@07                                          04S1120
         LR    @08,@05                                          04S1120
         SRDA  @08,32                                           04S1120
         DR    @08,@11                                          04S1120
         CR    @06,@09                                          04S1120
         BNH   @RF01120                                         04S1120
*         DO;                       /* NO A/D ALREADY HAS IS GT 50%
*                                      THEN                          */
*           GETNO=((AVTNOLBF/2)-OPCADGOT);/* SET TO GET UP TO 50%    */
         LH    @06,AVTNOLBF(,RAVT)                              04S1122
         SRDA  @06,32                                           04S1122
         DR    @06,@11                                          04S1122
         LH    GETNO,OPCADGOT(,ROPCAVT)                         04S1122
         N     GETNO,@CF03255                                   04S1122
         SLR   @07,GETNO                                        04S1122
         LR    GETNO,@07                                        04S1122
*           OCBUFNED=OCBUFNED-GETNO;/* SET NO STILL NEED =REMAINDER  */
         LH    @11,OCBUFNED(,ROPCE)                             04S1123
         N     @11,@CF03255                                     04S1123
         SLR   @11,GETNO                                        04S1123
         STH   @11,OCBUFNED(,ROPCE)                             04S1123
*         END;                                                  04S1124
*       ELSE                        /* ELSE GET ALL NEEDED           */
*         DO;                                                   04S1125
         B     @RC01120                                         04S1125
@RF01120 DS    0H                                               04S1126
*           GETNO=OCBUFNED;         /* SET TO GET ALL                */
         LH    GETNO,OCBUFNED(,ROPCE)                           04S1126
         N     GETNO,@CF03255                                   04S1126
*           OCBUFNED=0;             /* SET NO STILL NEED=0           */
         SLR   @11,@11                                          04S1127
         STH   @11,OCBUFNED(,ROPCE)                             04S1127
*         END;                                                  04S1128
*       OCBUFGOT=GETNO;             /* SET NO HAVE =NO TO GET        */
@RC01120 STH   GETNO,OCBUFGOT(,ROPCE)                           04S1129
*       OPCADGOT=OPCADGOT+GETNO;    /* INCREMENT OPCADGOT            */
         LH    @11,OPCADGOT(,ROPCAVT)                           04S1130
         N     @11,@CF03255                                     04S1130
         ALR   @11,GETNO                                        04S1130
         STH   @11,OPCADGOT(,ROPCAVT)                           04S1130
*     END;                                                      04S1131
*   ELSE                            /* ELSE MUST PUT REDRIVE OPCE ON
*                                      WAIT CHAIN AND WAIT FOR       */
*     DO;                           /* AVAILABLE UNITS ON REDRIVE    */
         B     @RC01118                                         04S1132
@RF01118 DS    0H                                               04S1133
*       OCWTG=THISMOD;              /* SET RETURN TO THIS MODULE     */
         MVC   OCWTG(2,ROPCE),THISMOD                           04S1133
*       OCLINK=OPCBUFWT;            /* GET CHAIN ANCHOR AND PUT IN
*                                      LINK FIELD                    */
         L     @11,OPCBUFWT(,ROPCAVT)                           04S1134
         ST    @11,OCLINK(,ROPCE)                               04S1134
*       OPCBUFWT=ROPCE;             /* CHAIN IN THIS REDRIVE OPCE    */
         ST    ROPCE,OPCBUFWT(,ROPCAVT)                         04S1135
*       OUTFLAG=ON;                 /* SET TO GET OUT                */
         LA    @11,1                                            04S1136
         ST    @11,OUTFLAG                                      04S1136
*       GETNO=0;                    /* SET NO TO GET =0              */
         SLR   GETNO,GETNO                                      04S1137
*       OPCMODID=CNTLMOD;           /* SET TO XCTL TO CONTROL MODULE */
         MVC   OPCMODID(2,ROPCAVT),CNTLMOD                      04S1138
*     END;                                                      04S1139
*   RFY                                                         04S1140
*     RPARM RSTD;                                               04S1140
@RC01118 DS    0H                                               04S1141
*   DO WHILE GETNO>0;               /* LOOP TO GET UNITS             */
         B     @DE01141                                         04S1141
@DL01141 DS    0H                                               04S1142
*     IF GETNO>255 THEN             /* MUST LOOP IF NEED MORE THAN
*                                      255                           */
         LA    @11,255                                          04S1142
         CR    GETNO,@11                                        04S1142
         BNH   @RF01142                                         04S1142
*       DO;                         /* THEN                          */
*         GETNO=GETNO-255;          /* SUB 255 FROM NO TO GET        */
         SLR   GETNO,@11                                        04S1144
*         RPARM=255;                /* SET FOR REQUEST               */
         LR    RPARM,@11                                        04S1145
*       END;                                                    04S1146
*     ELSE                          /* ELSE NEED ONLY ONE PASS TO GET
*                                      ALL NEEDED                    */
*       DO;                                                     04S1147
         B     @RC01142                                         04S1147
@RF01142 DS    0H                                               04S1148
*         RPARM=GETNO;              /* SET REQUEST VALUE             */
         LR    RPARM,GETNO                                      04S1148
*         GETNO=0;                  /* AND RESET GETNO TO 0          */
         SLR   GETNO,GETNO                                      04S1149
*       END;                                                    04S1150
*     CALL ALLOCBUF;                /* GET BUFF UNITS                */
@RC01142 L     @15,OPCGETBF(,ROPCAVT)                           04S1151
         BALR  @14,@15                                          04S1151
*     RFY                                                       04S1152
*       REG09 RSTD;                 /* RESTRICT WORK REG             */
*     REG09=ROPCE;                  /* SET REG TO POINT TO REDRIVE
*                                      OPCE                          */
         LR    REG09,ROPCE                                      04S1153
*     DO WHILE REG09->TIC=VALTIC;   /* LOOP TILL END OF CHAIN        */
         B     @DE01154                                         04S1154
@DL01154 DS    0H                                               04S1155
*       REG09=REG09->OCUNIT;        /* UPDATE PTR TO NEXT UNIT       */
         L     REG09,OCUNIT(,REG09)                             04S1155
*     END;                          /* AT END OF LOOP REG09 PTS TO
*                                      LAST UNIT OR REDRIVE OPCE     */
@DE01154 TM    TIC(REG09),B'00000011'                           04S1156
         BZ    @DL01154                                         04S1156
*     REG09->OCUNIT=RPARM;          /* ATTACH GOTTEN UNITS           */
         ST    RPARM,OCUNIT(,REG09)                             04S1157
*     RFY                                                       04S1158
*       REG09 UNRSTD;               /* RELEASE REG                   */
*   END;                                                        04S1159
@DE01141 LTR   GETNO,GETNO                                      04S1159
         BP    @DL01141                                         04S1159
*   RFY                                                         04S1160
*     RPARM UNRSTD;                                             04S1160
*           RCKPREC=NRACURR;        /* SET BASE FOR CHKPT RESOURCE
*                                      RECORD                    @21A*/
         L     @11,OCRSTGTM(,ROPCE)                             03S1161
         L     RCKPREC,NRACURR(,@11)                            03S1161
*         END;                                                  03S1162
*       ELSE                                                    03S1163
*         ;                         /* NO COMMANDS TO BE SENT        */
@RF01116 DS    0H                                               03S1164
*     END;                                                      03S1164
*   ELSE                                                        03S1165
*     RCKPREC=NRACURR;              /* REDRIVE OPCE--UNITS HUNG OFF
*                                      OCUNIT; SET BASE FOR CHKPT
*                                      RESOURCE RECORD           @21A*/
         B     @RC01079                                         03S1165
@RF01079 L     @11,OCRSTGTM(,ROPCE)                             03S1165
         L     RCKPREC,NRACURR(,@11)                            03S1165
*   IF OUTFLAG=OFF THEN             /* IF COMMANDS TO BE BUILT ON
*                                      THIS PASS                     */
@RC01079 L     @09,OUTFLAG                                      03S1166
         LTR   @09,@09                                          03S1166
         BNZ   @RF01166                                         03S1166
*     DO;                           /* BUILD AS MANY OPCE'S AND 03S1167
*                                      RU'S(FID0 CMNDS ONLY) AS 03S1167
*                                      POSSIBLE                      */
*                                                               04S1168
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER: THIS SEGMENT LOOPS THROUGH THE 3705     */
*   /* RESOURCE CHECKPOINT RECORD AND BUILDS, FOR EACH BIT IN THE    */
*   /* RECORD WHICH IS ON, THE CORRESPONDING COMMAND.                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               04S1168
*   OPCAQWD=''B;                    /* INITIALIZE THE AQCTL PARM.
*                                      LIST AND                      */
         XC    OPCAQWD(12,ROPCAVT),OPCAQWD(ROPCAVT)             04S1168
*   OPCAQREQ=CHAINFLG;              /* INDICATE THIS WILL BE A CHAIN
*                                      POST                          */
         MVI   OPCAQREQ(ROPCAVT),X'B4'                          04S1169
*   IF CNRFSSP=ON THEN              /* IF SERVICE SEEK PAUSE CKPT'D  */
         TM    CNRFSSP(RCKPREC),B'00100000'                     04S1170
         BNO   @RF01170                                         04S1170
*     DO;                                                       04S1171
*                                                               05S1172
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDCHSSP: THIS SEGMENT BUILDS A CHANGE   */
*   /* SERVICE SEEK PAUSE OPCE (FID1).                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1172
*   IF OCBUFGOT>0 THEN              /* IF UNITS LEFT                 */
         CLC   OCBUFGOT(2,ROPCE),@CH00473                       05S1172
         BNH   @RF01172                                         05S1172
*     DO;                           /* BUILD CHANGE SEVICE SEEK PAUSE
*                                      OPCE                          */
*       CMDOPCE=OCUNIT;             /* SET FIRST UNIT AS CMND OPCE   */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1174
*       CALL BLDFID1;               /* BUILD A BASIC FID1 OPCE       */
         BAL   @14,BLDFID1                                      05S1175
*       CMDOPCE->OCSWITCH=OCCHGSSP; /* SET CMND CODE                 */
         MVI   OCSWITCH(CMDOPCE),X'A0'                          05S1176
*       CMDOPCE->OCREQVAL=CNRSSPAU; /* SET PAUSE VALUE               */
         MVC   OCREQVAL(1,CMDOPCE),CNRSSPAU(RCKPREC)            05S1177
*       CNRFSSP=OFF;                /* TURN OFF FLAG IN CASE OF 05S1178
*                                      REDRIVE TO AVOID RESENDING    */
         NI    CNRFSSP(RCKPREC),B'11011111'                     05S1178
*     END;                                                      05S1179
*   ELSE                                                        05S1180
*     ;                             /* WAIT FOR REDRIVE TO GET ENOUGH
*                                      UNITS                         */
@RF01172 DS    0H                                               05S1181
*     END;                                                      04S1181
*   IF CNRFNPL=ON THEN              /* IF CHANGE NEG. POLL LIMIT
*                                      CKPT'D                        */
@RF01170 TM    CNRFNPL(RCKPREC),B'00010000'                     04S1182
         BNO   @RF01182                                         04S1182
*     DO;                                                       04S1183
*                                                               05S1184
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDCHGNP: THIS SEGMENT BUILDS A CHANGE   */
*   /* NEGATIVE POLL LIMIT OPCE (FID1).                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1184
*   IF OCBUFGOT>0 THEN              /* IF UNITS LEFT                 */
         CLC   OCBUFGOT(2,ROPCE),@CH00473                       05S1184
         BNH   @RF01184                                         05S1184
*     DO;                           /* BUILD CHANGE NEG POLL LIMIT   */
*       CMDOPCE=OCUNIT;             /* SET FIRST UNIT AS CMND OPCE   */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1186
*       CALL BLDFID1;               /* BUILD A BASIC FID1 OPCE       */
         BAL   @14,BLDFID1                                      05S1187
*       CMDOPCE->OCSWITCH=OCCHGNP;  /* SET CMND CODE                 */
         MVI   OCSWITCH(CMDOPCE),X'90'                          05S1188
*       CMDOPCE->OCREQVAL=CNRNEGPL; /* SET NEG. POLL LIMIT           */
         MVC   OCREQVAL(1,CMDOPCE),CNRNEGPL(RCKPREC)            05S1189
*       CNRFNPL=OFF;                /* TURN OFF FLAG IN CASE OF 05S1190
*                                      REDRIVE TO AVOID RESENDING    */
         NI    CNRFNPL(RCKPREC),B'11101111'                     05S1190
*     END;                                                      05S1191
*   ELSE                                                        05S1192
*     ;                             /* WAIT FOR REDRIVE TO GET ENOUGH
*                                      UNITS                         */
@RF01184 DS    0H                                               05S1193
*     END;                                                      04S1193
*   IF CNRFCSL=ON THEN              /* IF CHANGE SESSION LIMIT CKPT'D*/
@RF01182 TM    CNRFCSL(RCKPREC),B'00001000'                     04S1194
         BNO   @RF01194                                         04S1194
*     DO;                                                       04S1195
*                                                               05S1196
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDCHGSL: THIS SEGMENT BUILDS A CHANGE   */
*   /* SESSION LIMIT OPCE (FID1).                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1196
*   IF OCBUFGOT>0 THEN              /* IF UNITS LEFT                 */
         CLC   OCBUFGOT(2,ROPCE),@CH00473                       05S1196
         BNH   @RF01196                                         05S1196
*     DO;                           /* BUILD CHANGE SESSION LIMIT
*                                      OPCE                          */
*       CMDOPCE=OCUNIT;             /* SET FIRST UNIT AS CMND OPCE   */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1198
*       CALL BLDFID1;               /* BUILD A BASIC FID1 OPCE       */
         BAL   @14,BLDFID1                                      05S1199
*       CMDOPCE->OCSWITCH=OCCHGSL;  /* SET CMND CODE                 */
         MVI   OCSWITCH(CMDOPCE),X'80'                          05S1200
*       CMDOPCE->OCREQVAL=CNRCSLIM; /* SESSION LIMIT                 */
         MVC   OCREQVAL(1,CMDOPCE),CNRCSLIM(RCKPREC)            05S1201
*       CNRFCSL=OFF;                /* TURN OFF FLAG IN CASE OF 05S1202
*                                      REDRIVE TO AVOID RESENDING    */
         NI    CNRFCSL(RCKPREC),B'11110111'                     05S1202
*     END;                                                      05S1203
*   ELSE                                                        05S1204
*     ;                             /* WAIT FOR REDRIVE TO GET ENOUGH
*                                      UNITS                         */
@RF01196 DS    0H                                               05S1205
*     END;                                                      04S1205
*   IF CNRFCTL=ON THEN              /* IF BUILD TRANSMISSION LIMIT
*                                      CKPT'D                        */
@RF01194 TM    CNRFCTL(RCKPREC),B'00000100'                     04S1206
         BNO   @RF01206                                         04S1206
*     DO;                                                       04S1207
*                                                               05S1208
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDCHGTL: THIS SEGMENT BUILDS A CHANGE   */
*   /* TRANSMISSION LIMIT OPCE (FID1).                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1208
*   IF OCBUFGOT>0 THEN              /* IF UNITS LEFT                 */
         CLC   OCBUFGOT(2,ROPCE),@CH00473                       05S1208
         BNH   @RF01208                                         05S1208
*     DO;                           /* BUILD CHANGE TRANSMISSION
*                                      LIMIT OPCE                    */
*       CMDOPCE=OCUNIT;             /* SET FIRST UNIT AS CMD OPCE    */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1210
*       CALL BLDFID1;               /* BUILD A BASIC FID1 OPCE       */
         BAL   @14,BLDFID1                                      05S1211
*       CMDOPCE->OCSWITCH=OCCHGTL;  /* SET CMND CODE                 */
         MVI   OCSWITCH(CMDOPCE),X'B0'                          05S1212
*       CMDOPCE->OCREQVAL=CNRCTLIM; /* TRANSMISSION LIMIT            */
         MVC   OCREQVAL(1,CMDOPCE),CNRCTLIM(RCKPREC)            05S1213
*       CNRFCTL=OFF;                /* TURN OFF FLAG IN CASE OF 05S1214
*                                      REDRIVE TO AVOID RESENDING    */
         NI    CNRFCTL(RCKPREC),B'11111011'                     05S1214
*     END;                                                      05S1215
*   ELSE                                                        05S1216
*     ;                             /* WAIT FOR REDRIVE TO GET ENOUGH
*                                      UNITS                         */
@RF01208 DS    0H                                               05S1217
*     END;                                                      04S1217
*   IF CNRFBHS=ON×CNRFBHSC=ON THEN  /* IF BHSET CKPT'D       @YM07411*/
@RF01206 TM    CNRFBHS(RCKPREC),B'11000000'                     04S1218
         BZ    @RF01218                                         04S1218
*     DO;                                                       04S1219
*                                                               05S1220
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDBHS: THIS SEGMENT BUILDS A BLOCK      */
*   /* HANDLER SET OPCE - PACKED RU PAIR (FID0).                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1220
*   RFY                                                         05S1220
*     IEDPRUQD BASED(OCUNIT);       /* BASE PACKED RU ON OCUNIT OF
*                                      CMD OPCE                      */
*   IF OCBUFGOT>1 THEN              /* IF ENOUGH UNITS LEFT          */
         CLC   OCBUFGOT(2,ROPCE),@CH00066                       05S1221
         BNH   @RF01221                                         05S1221
*     DO;                                                       05S1222
*       RFY                                                     05S1223
*         IEDQOPCE BASED(CMDOPCE);  /* BASE ON PTR TO CMND OPCE      */
*       CMDOPCE=ROPCE->OCUNIT;      /* SET FIRST UNIT AS CMND OPCE   */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1224
*       CALL BLDFID0;               /* BUILD BASIC FID0              */
         BAL   @14,BLDFID0                                      05S1225
*       BDUCMND=CD0CTRL;            /* SET BDU COMMAND CODE          */
         L     @09,OCUNIT(,CMDOPCE)                             05S1226
         LA    @11,12                                           05S1226
         ALR   @11,@09                                          05S1226
         MVI   BDUCMND(@11),X'08'                               05S1226
*       BDUMODIF=CD0CMBHS;          /* SET BDU COMMAND MODIFIER      */
         MVI   BDUMODIF(@11),X'8D'                              05S1227
*       OCSWITCH=OCSND1;            /* COMMAND CODE IN OPCE          */
         MVI   OCSWITCH(CMDOPCE),X'F2'                          05S1228
*       BDUTEXT(1:2)=CNRBHSET;      /* MOVE BHSET DATA INTO PACKED RU*/
         MVC   BDUTEXT(2,@11),CNRBHSET(RCKPREC)                 05S1229
*       IF CNRFBHSC=ON THEN                                     05S1230
         TM    CNRFBHSC(RCKPREC),B'01000000'                    05S1230
         BNO   @RF01230                                         05S1230
*         DO;                       /* IF CHANGE BHSET       @YM07411*/
*           PRUDATCT=LENGTH(IEDBDU)+2;/* INCLUDE FUNCTION AND POS. IN
*                                      TEXT                          */
         MVC   PRUDATCT(2,@09),@CH00050                         05S1232
*           BDUTEXT(1)=BDUTEXT(1)×'80'X;/* SET CHANGE BHSET FUNCTION
*                                                            @YM07713*/
         OI    BDUTEXT(@11),X'80'                               05S1233
*           CNRFBHSC=OFF;           /* RESET FLAGS FOR REDRIVE TO
*                                                            @YM07411*/
*           CNRFBHS=OFF;            /* AVOID RESENDING COMMANDS 05S1235
*                                                            @YM07713*/
         NI    CNRFBHSC(RCKPREC),B'00111111'                    05S1235
*         END;                      /*                       @YM07411*/
*       ELSE                                                    05S1237
*         DO;                       /* ACT OR DEACT BHSET FUNCTION
*                                                            @YM07411*/
         B     @RC01230                                         05S1237
@RF01230 DS    0H                                               05S1238
*           PRUDATCT=LENGTH(IEDBDU)+1;/* A/D BHSET, INCLUDE FUNCTION
*                                      BYTE                          */
         L     @05,OCUNIT(,CMDOPCE)                             05S1238
         MVC   PRUDATCT(2,@05),@CH00606                         05S1238
*           CNRFBHS=OFF;            /* RESET FLAG FOR REDRIVE TO
*                                      AVOID RESENDING COMMAND  05S1239
*                                                            @YM07411*/
         NI    CNRFBHS(RCKPREC),B'01111111'                     05S1239
*         END;                      /*                       @YM07411*/
*       CALL LISTADD;               /* ADD OPCE TO CHAIN FOR POST TO
*                                      AVTOPCOB                      */
@RC01230 BAL   @14,LISTADD                                      05S1241
*       RFY                                                     05S1242
*         IEDQOPCE BASED(ROPCE);    /* BASE ON CURRENT OPCE          */
*     END;                                                      05S1243
*   ELSE                                                        05S1244
*     ;                             /* WAIT FOR REDRIVE TO OBTAIN
*                                      ENOUGH UNITS                  */
@RF01221 DS    0H                                               05S1245
*   RFY                                                         05S1245
*     IEDPRUQD BASED;                                           05S1245
*     END;                                                      04S1246
*   IF CNRFMSS=ON THEN              /* IF MODEM SPEED SELECT CKPT'D  */
@RF01218 TM    CNRFMSS(RCKPREC),B'00000010'                     04S1247
         BNO   @RF01247                                         04S1247
*     DO;                                                       04S1248
*                                                               05S1249
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDMSS: THIS SEGMENT BUILDS A MODEM SPEED*/
*   /* SELECT OPCE - PACKED RU PAIR (FID0).                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1249
*   RFY                                                         05S1249
*     IEDPRUQD BASED(OCUNIT);       /* BASE PACKED RU ON OCUNIT OF
*                                      CMDOPCE                       */
*   IF OCBUFGOT>1 THEN              /* IF ENOUGH UNITS LEFT          */
         CLC   OCBUFGOT(2,ROPCE),@CH00066                       05S1250
         BNH   @RF01250                                         05S1250
*     DO;                                                       05S1251
*       RFY                                                     05S1252
*         IEDQOPCE BASED(CMDOPCE);  /* BASE ON PTR TO CMND OPCE      */
*       CMDOPCE=ROPCE->OCUNIT;      /* SET FIRST UNIT AS CMND OPCE   */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1253
*       CALL BLDFID0;               /* BUILD BASIC FID0              */
         BAL   @14,BLDFID0                                      05S1254
*       BDUCMND=CD0CTRL;            /* SET BDU COMMAND CODE          */
         L     @09,OCUNIT(,CMDOPCE)                             05S1255
         LA    @11,12                                           05S1255
         ALR   @11,@09                                          05S1255
         MVI   BDUCMND(@11),X'08'                               05S1255
*       BDUMODIF=CD0CCMS;           /* SET BDU COMMAND MODIFIER      */
         MVI   BDUMODIF(@11),X'12'                              05S1256
*       PRUDATCT=LENGTH(IEDBDU)+1;  /* LENGTH OF PU DATA = BDU + TEXT*/
         MVC   PRUDATCT(2,@09),@CH00606                         05S1257
*       BDUTEXT(1:1)=CNRMSSEL;      /* SET SPEED SELECT IN TEXT OF
*                                      BDU                           */
         MVC   BDUTEXT(1,@11),CNRMSSEL(RCKPREC)                 05S1258
*       OCSWITCH=OCSND2;            /* COMMAND CODE IN OPCE          */
         MVI   OCSWITCH(CMDOPCE),X'F3'                          05S1259
*       CNRFMSS=OFF;                /* RESET FLAG FOR REDRIVE TO
*                                      AVOID RESENDING CMND          */
         NI    CNRFMSS(RCKPREC),B'11111101'                     05S1260
*       CALL LISTADD;               /* ADD THIS OPCE TO CHAIN FOR
*                                      POST TO AVTOPCOB              */
         BAL   @14,LISTADD                                      05S1261
*       RFY                                                     05S1262
*         IEDQOPCE BASED(ROPCE);    /* BASE ON CURRENT OPCE          */
*     END;                                                      05S1263
*   ELSE                                                        05S1264
*     ;                             /* WAIT FOR REDRIVE TO OBTAIN
*                                      ENOUGH UNITS                  */
@RF01250 DS    0H                                               05S1265
*   RFY                                                         05S1265
*     IEDPRUQD BASED;               /* RESET PACKED RU BASE          */
*     END;                                                      04S1266
*   IF CNRFRDR=ON THEN              /* IF REPLACE DEVICE RECORD 04S1267
*                                      CKPT'D                        */
@RF01247 TM    CNRFRDR(RCKPREC),B'00000001'                     04S1267
         BNO   @RF01267                                         04S1267
*     DO;                                                       04S1268
*                                                               05S1269
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS.SENDER.BLDER.BLDRDR: THIS SEGMENT BUILDS THE COMMAND  */
*   /* OPCE AND PACKED RU FOR THE CHANGE DEVICE RECORD.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               05S1269
*   RFY                                                         05S1269
*     IEDPRUQD BASED(OCUNIT);       /* BASE PACKED RU ON OCUNIT OF
*                                      CMD OPCE                      */
*   IF OCBUFGOT=OCDVRDCT THEN       /* IF ENOUGH UNITS LEFT TO BUILD
*                                      OPCE-RU                       */
         LH    @05,OCBUFGOT(,ROPCE)                             05S1270
         N     @05,@CF03255                                     05S1270
         CH    @05,OCDVRDCT(,ROPCE)                             05S1270
         BNE   @RF01270                                         05S1270
*     DO;                           /* BUILD OPCE AND RU             */
*       CMDOPCE=OCUNIT;             /* SET UNIT POINTED TO BY CKPT
*                                      OPCE AS CMD OPCE              */
         L     CMDOPCE,OCUNIT(,ROPCE)                           05S1272
*       RFY                                                     05S1273
*         IEDQOPCE BASED(CMDOPCE);  /* BASE ON CMD OPCE              */
*       ROPCE->OCUNIT=PRUINTIC;     /* DELINK UNITS                  */
         MVC   OCUNIT(4,ROPCE),@CF02391                         05S1274
*       CNRFRDR=OFF;                /* RESET FLAG                    */
         NI    CNRFRDR(RCKPREC),B'11111110'                     05S1275
*       ROPCE->OCBUFGOT=''B;        /* NO MORE UNITS                 */
         SLR   @09,@09                                          05S1276
         STH   @09,OCBUFGOT(,ROPCE)                             05S1276
*       CALL FID0;                  /* BUILD BASIC FID0 COMMAND OPCE
*                                      AND PACKED RU                 */
         BAL   @14,FID0                                         05S1277
*       OCDVRDCT=ROPCE->OCDVRDCT;   /* SET NUMBER OF UNITS FOR CMND  */
         LH    @05,OCDVRDCT(,ROPCE)                             05S1278
         STH   @05,OCDVRDCT(,CMDOPCE)                           05S1278
*       IEDPRUQD(1:8)=CNRDEVRC(1:8);/* MOVE IN FIRST 8 BYTES OF 05S1279
*                                      DEVICE RECORD PACKED RU WHICH
*                                      WAS CHECKPOINTED              */
         L     @06,OCUNIT(,CMDOPCE)                             05S1279
         MVC   IEDPRUQD(8,@06),CNRDEVRC(RCKPREC)                05S1279
*       IEDPLMV=''B;                /* CLEAR PARM LIST FOR IEDMVBFR
*                                      ROUTINE                       */
         LA    @09,PARMLSP                                      05S1280
         XC    IEDPLMV(24,@09),IEDPLMV(@09)                     05S1280
*       PLMVTU=ADDR(IEDPRUQD);      /* SET TARGET UNIT ADDR          */
         ST    @06,PLMVTU(,@09)                                 05S1281
*       PLMVTD=ADDR(PRUDATA);       /* SET TARGET DATA ADDR          */
         LA    @11,PRUDATA(,@06)                                05S1282
         ST    @11,PLMVTD(,@09)                                 05S1282
*       RFY                                                     05S1283
*         IEDPRUQD BASED(ADDR(CNRDEVRC));/* BASE ON DEVICE RECORD IN
*                                      CKPT RESOURCE RECORD          */
*       PLMVSU=ADDR(PRUDATA);       /* SET SOURCE UNIT ADDR          */
         LA    @05,PRUDATA+19(,RCKPREC)                         05S1284
         ST    @05,PLMVSU(,@09)                                 05S1284
*       RFY                                                     05S1285
*         IEDPRUQD BASED(OCUNIT);   /* RESTORE BASE TO UNITS OFF OPCE*/
*       PLMVSD=PLMVSU;              /* SOURCE DATA ADDR              */
         ST    @05,PLMVSD(,@09)                                 05S1286
*       PLMVLNTH=PRUDATCT;          /* LENGTH OF DATA TO BE MOVED    */
         LH    @05,PRUDATCT(,@06)                               05S1287
         STH   @05,PLMVLNTH(,@09)                               05S1287
*       PLMVSCTG=ON;                /* SOURCE CONTIGUOUS FLAG        */
         OI    PLMVSCTG(@09),B'01000000'                        05S1288
*       RFY                                                     05S1289
*         RPARM RSTD;               /* RESTRICT PARM LIST PTR FOR
*                                      CALL                          */
*       RPARM=ADDR(PARMLSP);        /* POINT TO PARM LIST            */
         LR    RPARM,@09                                        05S1290
*       CALL IEDMVBFR;              /* MOVE IN DATA PORTION OF PACKED
*                                      RU                            */
         L     @06,AVTSAVTP(,RAVT)                              05S1291
         L     @15,SAVTMVBF(,@06)                               05S1291
         BALR  @14,@15                                          05S1291
*       RFY                                                     05S1292
*         RPARM UNRSTD;             /* FREE REG FOR USE              */
*       CALL LISTADD;               /* ADD OPCE TO CHAIN FOR POST TO
*                                      AVTOPCOB                      */
         BAL   @14,LISTADD                                      05S1293
*       RFY                                                     05S1294
*         IEDQOPCE BASED(ROPCE);    /* BASE ON CURRENT OPCE  @YM06639*/
*     END;                                                      05S1295
*   ELSE                                                        05S1296
*     ;                             /* WAIT FOR REDRIVE TO GET ENOUGH
*                                      UNITS                         */
@RF01270 DS    0H                                               05S1297
*   RFY                                                         05S1297
*     IEDPRUQD BASED;               /* RESET                         */
*     END;                                                      04S1298
*   RFY                                                         04S1299
*     RPARM RSTD;                                               04S1299
@RF01267 DS    0H                                               04S1300
*   RPARM=ADDR(OPCAQCTL);           /* POINT TO AQCTL PARM LIST      */
         LA    RPARM,OPCAQCTL(,ROPCAVT)                         04S1300
*   SVC(102);                                                   04S1301
         SVC   102                                              04S1301
*   RFY                                                         04S1302
*     RPARM UNRSTD;                                             04S1302
*   IF OCBUFNED>0 THEN              /* IF MORE UNITS STILL NEEDED    */
         CLC   OCBUFNED(2,ROPCE),@CH00473                       04S1303
         BNH   @RF01303                                         04S1303
*     DO;                           /* PUT OPCE ON REDRIVE CHAIN     */
*       OCREDRVE=ON;                /* SET REDRIVE FLAG              */
         OI    OCREDRVE(ROPCE),B'00010000'                      04S1305
*       OCWTG=THISMOD;              /* SET TO RETURN TO THIS MODULE
*                                      FROM REDRIVE PROCESSOR        */
         MVC   OCWTG(2,ROPCE),THISMOD                           04S1306
*       OCLINK=OPCBUFWT;            /* PLACE OPCE AT                 */
         L     @11,OPCBUFWT(,ROPCAVT)                           04S1307
         ST    @11,OCLINK(,ROPCE)                               04S1307
*       OPCBUFWT=ROPCE;             /* BEGINNING OF BUFFER WAIT CHAIN*/
         ST    ROPCE,OPCBUFWT(,ROPCAVT)                         04S1308
*       OPCMODID=CNTLMOD;           /* SET TO XCTL TO CONTROL MOD    */
         MVC   OPCMODID(2,ROPCAVT),CNTLMOD                      04S1309
*     END;                                                      04S1310
*   ELSE                            /* REFORMAT OPCE TO SEND         */
*     DO;                           /* TO CHECKPOINT MODULE          */
         B     @RC01303                                         04S1311
@RF01303 DS    0H                                               04S1312
*       OCWTG=THISMOD;              /* SET TO RETURN TO THIS MOD FROM
*                                      CHECKPOINT                    */
         MVC   OCWTG(2,ROPCE),THISMOD                           04S1312
*       OPCMODID=CKPTMOD;           /* SET TO XCTL TO CHECKPOINT MOD.*/
         MVC   OPCMODID(2,ROPCAVT),CKPTMOD                      04S1313
*     END;                                                      04S1314
*     END;                                                      03S1315
*   ELSE                                                        03S1316
*     ;                             /* NO CMNDS TO BUILD ON THIS PASS*/
@RF01166 DS    0H                                               03S1317
*     END;                                                      02S1317
@RC01166 DS    0H                                               02S1318
*                                                               02S1318
*   /*****************************************************************/
*   /*                                                               */
*   /* EPILOGUE: THIS SEGMENT COMPLETES THE EPILOGUE CODE THAT WAS   */
*   /* ALTERED BY THE MODULE PROCEDURE STATEMENT. THE XCTL SYSTEM    */
*   /* MACRO INSTRUCTION IS USED BY THIS SEGMENT TO TRANSFER CONTROL */
*   /* TO THE NEXT MODULE THAT IS TO BE EXECUTED.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1318
*   RFY                                                         02S1318
*     REG00 RSTD;                                               02S1318
@RC01052 DS    0H                                               02S1319
*   RFY                                                         02S1319
*     REG01 RSTD;                   /* RESTRICT THE ARGUMENT REGISTER
*                                      TO BE USED TO CONTAIN THE
*                                      POINTER TO THE OPERATOR  02S1319
*                                      CONTROL ADDRESS VECTOR TABLE
*                                      FROM USE BY THE COMPILER      */
*   IF OPCMODID=CNTLMOD THEN        /* IF XCTL IS TO IGC0010D        */
         CLC   OPCMODID(2,ROPCAVT),CNTLMOD                      02S1320
         BNE   @RF01320                                         02S1320
*     REG00=''B;                                                02S1321
         SLR   REG00,REG00                                      02S1321
*   REG01=ROPCAVT;                  /* SET THE ARGUMENT REGISTER IN
*                                      PREPARATION TO TRANSFERRING
*                                      CONTROL TO THE NEXT MODULE    */
@RF01320 LR    REG01,ROPCAVT                                    02S1322
*   DO;                             /* IEDXCTLTRANSFER CONTROL MACRO
*                                      RFY REG00 UNRSTD              */
*     GEN EXIT REFS(ROPCAVT,OPCTRACE,OPCXCTL) NOSEQFLOW;        02S1324
*                                   /*
         LA    15,OPCXCTL(,ROPCAVT)   POINT TO OPCXCTL LIST
         EX    0,OPCTRACE(,ROPCAVT)    INVOKE XCTL TRACE
         XCTL  SF=(E,(15))             XCTL TO NEXT MODULE
*   END;                            /* END OF IEDXCTL                */
*   RFY                                                         02S1326
*     REG01 UNRSTD;                                             02S1326
*                                                               02S1327
*   /*****************************************************************/
*   /*                                                               */
*   /* BLDFID1: THIS INTERNAL PROCEDURE BUILDS A BASIC FID1 OPCE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1327
*BLDFID1:                                                       02S1327
*   PROC OPTIONS(RETREG,SAVE(14));                              02S1327
BLDFID1  ST    @14,@SA00002                                     02S1327
*   RFY                                                         02S1328
*     IEDQOPCE BASED(CMDOPCE);      /* BASE ON PTR TO CMND OPCE BEING
*                                      BUILT                         */
*   ROPCE->OCUNIT=OCUNIT;           /* DELINK FIRST UNIT HUNG OF
*                                      CURRENT OPCE                  */
         L     @05,OCUNIT(,CMDOPCE)                             02S1329
         ST    @05,OCUNIT(,ROPCE)                               02S1329
*   ROPCE->OCBUFGOT=ROPCE->OCBUFGOT-1;/* DECREMENT # OF UNITS GOT    */
         LH    @06,OCBUFGOT(,ROPCE)                             02S1330
         N     @06,@CF03255                                     02S1330
         BCTR  @06,0                                            02S1330
         STH   @06,OCBUFGOT(,ROPCE)                             02S1330
*   OCUNIT=PRUINTIC;                /* SET OCUNIT TO INVALID TIC     */
         MVC   OCUNIT(4,CMDOPCE),@CF02391                       02S1331
*   OCTRMTBL=CNRTNTOF;              /* TTCIN IN CKPT RESOURCE RECORD */
         LH    @11,CNRTNTOF(,RCKPREC)                           02S1332
         STH   @11,OCTRMTBL(,CMDOPCE)                           02S1332
*   OCPTRSAV=ROPCE->OCPTRSAV;       /* POINT TO ORIG. OPCE           */
         L     @05,OCPTRSAV(,ROPCE)                             02S1333
         ST    @05,OCPTRSAV(,CMDOPCE)                           02S1333
*   OCWTG=THISMOD;                  /* SET TO RETURN TO THIS MODULE
*                                      FROM RU DISP'ER               */
         MVC   OCWTG(2,CMDOPCE),THISMOD                         02S1334
*   OCACTREQ=ON;                    /* SET FLAG INDICATING A/D  02S1335
*                                      REQUEST                       */
         OI    OCACTREQ(CMDOPCE),B'00001000'                    02S1335
*   OCLINK=ADDR(AVTOPCOB);          /* SET QCB ADDR. FOR SVC 102     */
         LA    @06,AVTOPCOB(,RAVT)                              02S1336
         ST    @06,OCLINK(,CMDOPCE)                             02S1336
*   OCPRIFLG=OPRA0;                 /* SET FLAG SO OPCE ROUTED TO
*                                      SSCP BY CONTROL MOD           */
         MVI   OCPRIFLG(CMDOPCE),X'01'                          02S1337
*   OCELMPRI=PRIHIFLG;              /* SET POST PRIORITY             */
         MVI   OCELMPRI(CMDOPCE),X'E9'                          02S1338
*   CALL LISTADD;                   /* PLACE IN AQCTL PARM LIST      */
         BAL   @14,LISTADD                                      02S1339
*   RFY                                                         02S1340
*     IEDQOPCE BASED;                                           02S1340
*   END BLDFID1;                                                02S1341
@EL00002 DS    0H                                               02S1341
@EF00002 DS    0H                                               02S1341
@ER00002 L     @14,@SA00002                                     02S1341
         BR    @14                                              02S1341
*                                                               02S1342
*   /*****************************************************************/
*   /*                                                               */
*   /* BLDFID0: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE WHICH   */
*   /* DELINKS TWO UNITS AND CALLS THE ROUTINE TO BUILD THE BASIC    */
*   /* COMMAND OPCE AND PACKED RU.                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1342
*BLDFID0:                                                       02S1342
*   PROC OPTIONS(RETREG,SAVE(14));                              02S1342
BLDFID0  ST    @14,@SA00003                                     02S1342
*   RFY                                                         02S1343
*     IEDQOPCE BASED(CMDOPCE);      /* DEFINE OPCE STRUCTURE ON CMND
*                                      OPCE                          */
*   RFY                                                         02S1344
*     IEDPRUQD BASED(OCUNIT);       /* OCUNIT OF CMND OPCE POINTS TO
*                                      PACKED RU                     */
*   ROPCE->OCUNIT=OCUNIT->OCUNIT;   /* DELINK 2 UNITS FOR OPCE AND RU*/
         L     @09,OCUNIT(,CMDOPCE)                             02S1345
         L     @01,OCUNIT(,@09)                                 02S1345
         ST    @01,OCUNIT(,ROPCE)                               02S1345
*   ROPCE->OCBUFGOT=ROPCE->OCBUFGOT-2;/* DECREMENT UNITS HAVE BY 2   */
         LH    @05,OCBUFGOT(,ROPCE)                             02S1346
         N     @05,@CF03255                                     02S1346
         BCTR  @05,0                                            02S1346
         BCTR  @05,0                                            02S1346
         STH   @05,OCBUFGOT(,ROPCE)                             02S1346
*   PRUTIC=PRUINTIC;                /* SET INVALID TIC IN PACKED RU  */
         MVC   PRUTIC(4,@09),@CB02391                           02S1347
*   CALL FID0;                      /* BUILD REMAINDER OF FID0  02S1348
*                                      COMMAND                       */
         BAL   @14,FID0                                         02S1348
*   RFY                                                         02S1349
*     IEDQOPCE BASED;                                           02S1349
*   RFY                                                         02S1350
*     IEDPRUQD BASED;                                           02S1350
*   END BLDFID0;                                                02S1351
@EL00003 DS    0H                                               02S1351
@EF00003 DS    0H                                               02S1351
@ER00003 L     @14,@SA00003                                     02S1351
         BR    @14                                              02S1351
*                                                               02S1352
*   /*****************************************************************/
*   /*                                                               */
*   /* FID0: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE WHICH      */
*   /* BUILDS THE BASIC FID0 COMMAND OPCE AND PACKED RU.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1352
*FID0:                                                          02S1352
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S1352
FID0     DS    0H                                               02S1353
*   RFY                                                         02S1353
*     RRET RSTD;                    /* RESTRICT REG WITH RETURN ADDR */
*   RFY                                                         02S1354
*     IEDQOPCE BASED(CMDOPCE);      /* DEFINE OPCE STRUCTURE ON CMND
*                                      OPCE                          */
*   RFY                                                         02S1355
*     IEDPRUQD BASED(OCUNIT);       /* OCUNIT OF CMND OPCE POINTS TO
*                                      PACKED RU                     */
*   OCTRMTBL=CNRTNTOF;              /* SET TTCIN OF RESOURCE IN CMD
*                                      OPCE                          */
         LH    @06,CNRTNTOF(,RCKPREC)                           02S1356
         STH   @06,OCTRMTBL(,CMDOPCE)                           02S1356
*   OCPTRSAV=ROPCE->OCPTRSAV;       /* COPY PTR TO ORIG OPCE FROM
*                                      CKPT OPCE                     */
         L     @11,OCPTRSAV(,ROPCE)                             02S1357
         ST    @11,OCPTRSAV(,CMDOPCE)                           02S1357
*   OCWTG=THISMOD;                  /* SET TO RETURN TO THIS MOD FROM
*                                      RU DISP'ER                    */
         MVC   OCWTG(2,CMDOPCE),THISMOD                         02S1358
*   OCACTREQ=ON;                    /* A/D REQUEST                   */
         OI    OCACTREQ(CMDOPCE),B'00001000'                    02S1359
*   OCLINK=ADDR(AVTOPCOB);          /* SET WITH QCB ADDR. FOR SVC 102*/
         LA    @15,AVTOPCOB(,RAVT)                              02S1360
         ST    @15,OCLINK(,CMDOPCE)                             02S1360
*   OCPRIFLG=OPR02;                 /* SET FLAG FOR CNTL MOD TO ROUTE
*                                      OPCE TO RU DISP'ER            */
         MVI   OCPRIFLG(CMDOPCE),X'08'                          02S1361
*   OCELMPRI=PRIMEDFG;              /* SET PRIORITY OF POST          */
         MVI   OCELMPRI(CMDOPCE),X'DF'                          02S1362
*   PRUTTCIN=CNRTNTOF;              /* SET TTCIN IN PACKED RU        */
         L     @01,OCUNIT(,CMDOPCE)                             02S1363
         STH   @06,PRUTTCIN(,@01)                               02S1363
*   PRURH=TRHFID0;                  /* SET RH IN NEG. PREFIX OF 02S1364
*                                      PACKED RU                     */
         SL    @01,@CF00050                                     02S1364
         MVC   PRURH(3,@01),@CB02707                            02S1364
*   PRUFIDN=TTH0BYT0;               /* SET TH INFO. IN PACKED RU     */
         MVI   PRUFIDN(@01),X'0C'                               02S1365
*   RFY                                                         02S1366
*     IEDPRUQD BASED;                                           02S1366
*   RFY                                                         02S1367
*     IEDQOPCE BASED;                                           02S1367
*   RFY                                                         02S1368
*     RRET UNRSTD;                                              02S1368
*   END FID0;                                                   02S1369
@EL00004 DS    0H                                               02S1369
@EF00004 DS    0H                                               02S1369
@ER00004 BR    @14                                              02S1369
*                                                               02S1370
*   /*****************************************************************/
*   /*                                                               */
*   /* LISTADD: THIS SEGMENT CONTAINS THE INTERNAL PROCEDURE WHICH   */
*   /* ADDS A COMMAND OPCE TO THE CHAIN FOR THE POST TO AVTOPCOB.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1370
*LISTADD:                                                       02S1370
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                            02S1370
LISTADD  DS    0H                                               02S1371
*   RFY                                                         02S1371
*     RRET RSTD;                    /* RESTRICT REG WITH RETURN ADDR */
*   RFY                                                         02S1372
*     IEDQOPCE BASED(CMDOPCE);      /* DEFINE OPCE STRUCTURE ON CMND
*                                      OPCE                          */
*   IF OPCAQFST=0 THEN              /* IF THIS IS THE FIRST OPCE TO
*                                      BE CHAINED                    */
         SLR   @05,@05                                          02S1373
         ICM   @05,7,OPCAQFST(ROPCAVT)                          02S1373
         LTR   @05,@05                                          02S1373
         BNZ   @RF01373                                         02S1373
*     OPCAQFST=CMDOPCE;             /* SET OPCE AS FIRST OPCE IN
*                                      CHAIN                         */
         STCM  CMDOPCE,7,OPCAQFST(ROPCAVT)                      02S1374
*   ELSE                                                        02S1375
*     OPCAQSEC->OCELMPTR=CMDOPCE;   /* CHAIN OPCE OFF LAST OPCE ON
*                                      CHAIN                         */
         B     @RC01373                                         02S1375
@RF01373 SLR   @01,@01                                          02S1375
         ICM   @01,7,OPCAQSEC(ROPCAVT)                          02S1375
         STCM  CMDOPCE,7,OCELMPTR(@01)                          02S1375
*   OPCAQSEC=CMDOPCE;               /* SET OPCE AS LAST OPCE IN CHAIN*/
@RC01373 STCM  CMDOPCE,7,OPCAQSEC(ROPCAVT)                      02S1376
*   RFY                                                         02S1377
*     IEDQOPCE;                                                 02S1377
*   RFY                                                         02S1378
*     RRET UNRSTD;                                              02S1378
*   END LISTADD;                                                02S1379
@EL00005 DS    0H                                               02S1379
@EF00005 DS    0H                                               02S1379
@ER00005 BR    @14                                              02S1379
*   END IGCFF10D;                                               01S1380
*                                                               01S1381
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TCD0D   )                                       */
*/*%INCLUDE SYSLIB  (TCD1D   )                                       */
*/*%INCLUDE SYSLIB  (TCNRD   )                                       */
*/*%INCLUDE SYSLIB  (TNRAD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOCTRD  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPRED  )                                       */
*/*%INCLUDE SYSLIB  (TPLMVD  )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TREQD   )                                       */
*/*%INCLUDE SYSLIB  (TRSPD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*/*%INCLUDE SYSUT5  (RFY     )                                       */
*/*%INCLUDE SYSUT5  (DCL     )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (PROCESS )                                       */
*/*%INCLUDE SYSUT5  (INITIAL )                                       */
*/*%INCLUDE SYSUT5  (RESPONSE)                                       */
*/*%INCLUDE SYSUT5  (START   )                                       */
*/*%INCLUDE SYSUT5  (SENDER  )                                       */
*/*%INCLUDE SYSUT5  (CHKR    )                                       */
*/*%INCLUDE SYSUT5  (CALCRDR )                                       */
*/*%INCLUDE SYSUT5  (GETBUFS )                                       */
*/*%INCLUDE SYSUT5  (BLDER   )                                       */
*/*%INCLUDE SYSUT5  (BLDCHSSP)                                       */
*/*%INCLUDE SYSUT5  (BLDCHGNP)                                       */
*/*%INCLUDE SYSUT5  (BLDCHGSL)                                       */
*/*%INCLUDE SYSUT5  (BLDCHGTL)                                       */
*/*%INCLUDE SYSUT5  (BLDBHS  )                                       */
*/*%INCLUDE SYSUT5  (BLDMSS  )                                       */
*/*%INCLUDE SYSUT5  (BLDRDR  )                                       */
*/*%INCLUDE SYSUT5  (EPILOGUE)                                       */
*/*%INCLUDE SYSUT5  (BLDFID1 )                                       */
*/*%INCLUDE SYSUT5  (BLDFID0 )                                       */
*/*%INCLUDE SYSUT5  (FID0    )                                       */
*/*%INCLUDE SYSUT5  (LISTADD )                                       */
@DATA    DS    0H
@CH00473 DC    H'0'
@CH00606 DC    H'7'
@DATD    DSECT
         DS    0F
@SA00002 DS    1F
@SA00003 DS    1F
IGCFF10D CSECT
         DS    0F
@CF00066 DC    F'1'
@CH00066 EQU   @CF00066+2
@CF00071 DC    F'2'
@CF00050 DC    F'8'
@CH00050 EQU   @CF00050+2
@CF02391 DC    XL4'08000002'
@CF03255 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PARMLSP  DS    CL24
FLAGS    DS    CL4
         ORG   FLAGS
OUTFLAG  DS    FL4
         ORG   FLAGS+4
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
* THE FOLLOWING INSTRUCTION WILL CAUSE AN ASSEMBLY ERROR IF THE SIZE
* OF THE AUTOMATIC STORAGE AREA IS GREATER THAN 560 BYTES.
         ORG   @DATD+(560-(*-@DATD))
         ORG   @ENDDATD
IGCFF10D CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(((@ENDDATD-@DATD+7)/8)*8)
         DS    0D
@CB02391 DC    X'08000002'
@CB02707 DC    X'0B8000'
         DS    CL1
ADPATCH  DC    XL104'0'
CNTLMOD  DC    CL2'00'
THISMOD  DC    CL2'FF'
CKPTMOD  DC    CL2'06'
RPNCPMOD DC    CL2'FJ'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SIZE     EQU   @07
GETNO    EQU   @05
CMDOPCE  EQU   @07
COUNTER  EQU   @06
RCKPREC  EQU   @08
ROPCE    EQU   @03
ROPCAVT  EQU   @02
RAVT     EQU   @04
RTRM     EQU   @08
REG00    EQU   @00
RZERO    EQU   @00
REG01    EQU   @01
RPARM    EQU   @01
REG09    EQU   @09
REG10    EQU   @10
RWRKAREA EQU   @10
RSAVE    EQU   @13
RRET     EQU   @14
RBRNCH   EQU   @15
RBASE    EQU   @12
REG02    EQU   @02
REG03    EQU   @03
REG04    EQU   @04
REG05    EQU   @05
REG06    EQU   @06
REG07    EQU   @07
REG08    EQU   @08
REG11    EQU   @11
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
RQCB     EQU   @07
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTNOLBF EQU   IEDQAVTD+454
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTKEYLE EQU   IEDQAVTD+1032
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00077 EQU   IEDQAVTD+1232
AVTBIT5  EQU   IEDQAVTD+1280
IEDQAPTR EQU   0
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTMVBF EQU   IEDNSVTD+160
SAVTSCLU EQU   IEDNSVTD+168
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IEDBDU   EQU   0
BDUCMND  EQU   IEDBDU
BDUMODIF EQU   IEDBDU+1
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDQCNRD EQU   0
CNRTNTOF EQU   IEDQCNRD
CNRDATTM EQU   IEDQCNRD+2
CNRCNTL  EQU   IEDQCNRD+10
CNRFBHS  EQU   CNRCNTL
CNRFBHSC EQU   CNRCNTL
CNRFSSP  EQU   CNRCNTL
CNRFNPL  EQU   CNRCNTL
CNRFCSL  EQU   CNRCNTL
CNRFCTL  EQU   CNRCNTL
CNRFMSS  EQU   CNRCNTL
CNRFRDR  EQU   CNRCNTL
CNRBHSET EQU   IEDQCNRD+12
CNRBHFUN EQU   CNRBHSET
CNRSSPAU EQU   IEDQCNRD+14
CNRNEGPL EQU   IEDQCNRD+15
CNRCSLIM EQU   IEDQCNRD+16
CNRCTLIM EQU   IEDQCNRD+17
CNRMSSEL EQU   IEDQCNRD+18
CNRDEVRC EQU   IEDQCNRD+19
IEDNRA   EQU   0
NRACURR  EQU   IEDNRA
RNRA     EQU   0
IEDQOPCE EQU   0
OCLINK   EQU   IEDQOPCE
OCELEM   EQU   IEDQOPCE+4
OCELMPRI EQU   OCELEM
OCELMPTR EQU   OCELEM+1
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
@NM00107 EQU   OCRUDEST+1
OCUNITBF EQU   @NM00107+2
OCOPTCDE EQU   IEDQOPCE+12
OCPRIFLG EQU   OCOPTCDE
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRLN    EQU   IEDQOPCE+15
OCLOCAD  EQU   OCRLN
OCCIB    EQU   IEDQOPCE+16
OCMSTSAV EQU   OCCIB
OCDEST   EQU   OCMSTSAV
OCREQVAL EQU   OCDEST+1
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCWTGB   EQU   OCTIOT
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCFNAALL EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCFLAG1  EQU   OCRSID+1
OCLNTYP  EQU   OCFLAG1
OCPARM   EQU   IEDQOPCE+28
OCRESNUM EQU   OCPARM
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCBUFNED EQU   OCBACKUP
OCCOUNT1 EQU   OCBUFNED
OCBUFGOT EQU   OCBACKUP+2
OCCOUNT2 EQU   OCBUFGOT
OCDVRDCT EQU   OCBACKUP+6
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCPTRSAV EQU   OCMODNME+4
OCECHOPT EQU   OCPTRSAV
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OC379RRT EQU   OCRSTGTM
OCNCP    EQU   OCRSTGTM+2
OCOID    EQU   IEDQOPCE+56
OCFLOADP EQU   IEDQOPCE+60
OCLSTTC  EQU   OCFLOADP
OCOSUBA  EQU   OCLSTTC
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDOCTR  EQU   0
OCTRSW   EQU   IEDOCTR+13
OCTRRTE  EQU   IEDOCTR+14
OCTRRTN  EQU   IEDOCTR+15
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCTRACE EQU   IEDQOPCD+32
OPCSAVE  EQU   IEDQOPCD+56
OPCWORK  EQU   IEDQOPCD+140
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCADGOT EQU   IEDQOPCD+318
OPCBUFWT EQU   IEDQOPCD+348
OPCDECR  EQU   IEDQOPCD+352
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
OPCSESS  EQU   IEDQOPCD+384
OPCSFLAG EQU   OPCSESS
OPCCSIB  EQU   OPCSESS+4
OPCSENSE EQU   OPCSESS+8
OPCSNSSY EQU   OPCSENSE
OPCSNSUS EQU   OPCSENSE+2
OPCPCID  EQU   IEDQOPCD+456
OPCUNIQP EQU   OPCPCID+2
OPCSESSF EQU   IEDQOPCD+464
IEDOPRED EQU   0
OPRESAVE EQU   IEDOPRED+8
OPRETIC  EQU   OPRESAVE
OPRVTCHK EQU   OPRETIC+3
OPREFLG3 EQU   IEDOPRED+14
IEDPLMV  EQU   0
PLMVTU   EQU   IEDPLMV
PLMVTD   EQU   IEDPLMV+4
PLMVSU   EQU   IEDPLMV+8
PLMVSD   EQU   IEDPLMV+12
PLMVLNTH EQU   IEDPLMV+16
PLMVFLGS EQU   IEDPLMV+18
PLMVFLG1 EQU   PLMVFLGS
PLMVSCTG EQU   PLMVFLG1
IEDPLMVP EQU   0
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUNUNIT EQU   PRUTIC+1
PRUVTCHK EQU   PRUNUNIT+2
PRUDATA  EQU   IEDPRUQD+12
IEDPRUQP EQU   0
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDREQD  EQU   0
REQROUTE EQU   IEDREQD+12
REQRCDS  EQU   IEDREQD+14
REQDATA  EQU   IEDREQD+16
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDNTRM  EQU   0
TRMBYTEB EQU   IEDNTRM+3
TRMSABPT EQU   IEDNTRM+4
TRMGPTAB EQU   TRMSABPT
TRMACTDV EQU   IEDNTRM+8
TRMDIALQ EQU   TRMACTDV+1
TRMBYTE8 EQU   TRMDIALQ+1
TRMBYTE7 EQU   TRMDIALQ+2
TRMATNDX EQU   IEDNTRM+12
TRMASNDX EQU   TRMATNDX
TRMLKCHN EQU   TRMASNDX
TRMINDEX EQU   IEDNTRM+14
TRMCDST  EQU   TRMINDEX
TRMCOHTG EQU   IEDNTRM+16
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+18
TRMBYTE3 EQU   IEDNTRM+19
TRMBYTE2 EQU   IEDNTRM+20
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+21
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+24
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+25
TRMLTRAC EQU   TRMSIBPT
TRMLBUFR EQU   TRMLTRAC
TRMRLMCT EQU   IEDNTRM+28
TRMLGBST EQU   TRMRLMCT
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMSTEAL EQU   TRMPRILK
TRMTGNUM EQU   TRMSTEAL
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMAPB   EQU   TRMSTAT
TRMSIO   EQU   TRMAPB
TRMOWNER EQU   TRMSIO
TRMSENSE EQU   TRMAPB+3
IEDQTPTR EQU   0
IEDTHFD4 EQU   0
IEDTH4   EQU   IEDTHFD4
TTHFID4  EQU   IEDTH4
TTHRTEN  EQU   IEDTH4+2
TTHVRID  EQU   IEDTH4+3
TTHVRIND EQU   IEDTH4+4
TTHVRRPC EQU   IEDTH4+6
TTHVRCWR EQU   TTHVRRPC
IEDTH    EQU   0
@NM00250 EQU   IEDTH
TTHBYTE0 EQU   @NM00250
TTHDEF   EQU   @NM00250+2
TTHOEF   EQU   @NM00250+4
TTHSNF   EQU   @NM00250+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
ALLOCBUF EQU   0
DECRCT   EQU   0
FREEBUFF EQU   0
IEDMVBFR EQU   0
IEDQTNT  EQU   0
BDUTEXT  EQU   BDUEND
OCTG     EQU   OCFLAG1
@NM00113 EQU   OCTG
OCMISCFG EQU   OCFLAG1
@NM00116 EQU   OCCKDATA
OCCURVR  EQU   @NM00116
@NM00118 EQU   OCCIB
OCSTAT   EQU   @NM00118+1
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
@NM00123 EQU   OCBACKUP
OCROUTE  EQU   OCFLAG1
OCBOTH   EQU   OCROUTE
@NM00125 EQU   OCCKDATA
OCMSGFLG EQU   OCPREFLG
OCBKUP1  EQU   OCMODNME
OCTARTTC EQU   OCBKUP1+4
@NM00129 EQU   OCMODNME
OCCSIB   EQU   @NM00129
OCFLAG2  EQU   OCOSUBA
@NM00133 EQU   OCMODNME
OCGPTFLG EQU   @NM00133+2
@NM00136 EQU   OCLDNME
OCCNMHDR EQU   @NM00136
OCBKUP2  EQU   OCCKDATA
OCBKUP3  EQU   OCLDNME
OCRESPTR EQU   OCBKUP3+4
OCDIALLN EQU   OCRESPTR
OCIPLDMP EQU   OCLDNME+4
@NM00142 EQU   OCLDNME
OCERSTAT EQU   @NM00142
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQREQ EQU   OPCAQWD1
OPCAQFST EQU   OPCAQWD1+1
OPCAQWD2 EQU   OPCAQWD+4
OPCAQSEC EQU   OPCAQWD2+1
OPCAQWD3 EQU   OPCAQWD+8
REQLDATA EQU   REQDATA
REQSDATA EQU   REQDATA
REQSTTE  EQU   REQSDATA
@NM00203 EQU   REQDATA
@NM00204 EQU   REQDATA
REQDATA1 EQU   @NM00204+4
@NM00205 EQU   REQDATA
REQDATA2 EQU   @NM00205+8
@NM00206 EQU   REQDATA1
@NM00207 EQU   REQDATA1
REQCDE   EQU   @NM00207
@NM00208 EQU   REQDATA2
REQSTFLG EQU   @NM00208
REQSTALL EQU   REQSTFLG
REQFRCPB EQU   @NM00208+2
REQPUBFR EQU   @NM00208+8
REQRSTTE EQU   REQPUBFR
REQPUCPB EQU   @NM00208+12
REQFLAGS EQU   REQPUCPB
@NM00213 EQU   REQDATA1
REQHIPRT EQU   @NM00213+6
REQHIPRP EQU   @NM00213+12
REQHIAR  EQU   @NM00213+16
@NM00215 EQU   REQHIAR
REQHILSP EQU   @NM00215+4
@NM00216 EQU   REQHIAR
@NM00217 EQU   REQHIAR
@NM00218 EQU   REQDATA1
REQTPMA  EQU   @NM00218
@NM00219 EQU   REQDATA1
REQMODE  EQU   REQDATA
@NM00233 EQU   TRMSTATE
TRMPUSST EQU   TRMBYTE7
TRMLUFD0 EQU   TRMBYTE7
TRMSNAST EQU   TRMBYTE6
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMLS1   EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMIPLDM EQU   TRMNCP
TRMNCP2  EQU   TRMBYTE8
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TICFLD   EQU   OCUNIT
TIC      EQU   TICFLD+3
OCCOSNME EQU   OCLDNME
OCGPTRTE EQU   OCLDNME
OCLINRRT EQU   OCTRUNIT
OCPCID   EQU   OCBACKUP
OCRCVSZ  EQU   OCOID
OCRSNCDE EQU   OCALSTAT
OCSENSE  EQU   OCBACKUP
OCSNTSZ  EQU   OCRLN
TRMASCMH EQU   TRMBYTE1
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
TRMSRPTR EQU   TRMPLIM
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00253 EQU   TICFLD
TRMLDISC EQU   TRMLINK
TRMVSRL  EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00246 EQU   TRMCDMGR
@NM00245 EQU   TRMCDMGR
@NM00244 EQU   TRMCDMGR
@NM00243 EQU   TRMCDMGR
TRMCDRDR EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
TRMUNAVS EQU   TRMLU
@NM00242 EQU   TRMLU
@NM00241 EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMNTODS EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
@NM00240 EQU   TRMNCP2
TRMSAVFY EQU   TRMNCP2
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMCONN  EQU   TRMIPLDM
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00239 EQU   TRMLINK1
TRMDIRCA EQU   TRMLINK1
TRMDICAL EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
TRMLUNAS EQU   TRMLU1
TRMCDSRQ EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
TRMSPURG EQU   TRMLU1
TRMCPOPT EQU   TRMLU1
TRMCPREQ EQU   TRMLU1
TRMINNLK EQU   TRMNCP1
TRMSANDX EQU   TRMNCP1
TRMDYDMP EQU   TRMNCP1
TRMCCPND EQU   TRMNCP1
TRMSNA4  EQU   TRMNCP1
TRMANS   EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
@NM00238 EQU   TRMLS1
TRMCBIU  EQU   TRMLS1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00237 EQU   TRMSNAST
TRMDRSRC EQU   TRMSNAST
@NM00236 EQU   TRMLUFD0
TRMRMTMA EQU   TRMLUFD0
TRMNHDRN EQU   TRMLUFD0
TRMLSESS EQU   TRMLUFD0
TRMASSOC EQU   TRMLUFD0
TRMAUTO  EQU   TRMLUFD0
TRMCONTP EQU   TRMPUSST
@NM00235 EQU   TRMPUSST
@NM00234 EQU   @NM00233
TRMENTRY EQU   @NM00233
REQLCB   EQU   REQMODE+8
REQLTTE  EQU   REQMODE+4
REQMSRC  EQU   REQMODE
REQOPCPT EQU   @NM00219
REQTPMT  EQU   REQTPMA+2
REQTPMI  EQU   REQTPMA
REQHISAP EQU   @NM00217+8
REQHISRP EQU   @NM00217+4
REQHISAT EQU   @NM00217+2
REQHISRT EQU   @NM00217
REQHIRRP EQU   @NM00216
REQHITRT EQU   @NM00215+8
REQHIOSP EQU   REQHILSP
REQHITRP EQU   @NM00215
REQHIAPP EQU   REQHIPRP
REQHIRSP EQU   @NM00213+8
REQHIAPT EQU   REQHIPRT
REQHIRST EQU   @NM00213+4
@NM00214 EQU   @NM00213+1
REQHITYP EQU   @NM00213
REQVRID  EQU   REQPUCPB+1
@NM00212 EQU   REQFLAGS
REQVRFND EQU   REQFLAGS
@NM00211 EQU   REQRSTTE+2
REQTTCIN EQU   REQRSTTE
REQFRBFR EQU   @NM00208+4
REQSABIN EQU   REQFRCPB
@NM00210 EQU   @NM00208+1
@NM00209 EQU   REQSTFLG
REQSTSIB EQU   REQSTFLG
REQSTBFR EQU   REQSTALL
REQSTCPB EQU   REQSTALL
REQSTCLR EQU   REQSTFLG
REQCDEA2 EQU   @NM00207+8
REQCDEA1 EQU   @NM00207+4
REQCDENA EQU   REQCDE+2
REQCDEIN EQU   REQCDE
REQUPTYP EQU   @NM00206+32
REQTTEP1 EQU   @NM00206+28
REQSIT2  EQU   @NM00206+24
REQNAME2 EQU   @NM00206+16
REQSIT1  EQU   @NM00206+12
REQNAME1 EQU   @NM00206+4
REQTNT2  EQU   @NM00206+2
REQTNT1  EQU   @NM00206
REQNAME  EQU   @NM00205
REQRTN   EQU   @NM00204
REQLCLU  EQU   @NM00203+4
REQUBIND EQU   @NM00203
REQSTNT  EQU   REQSDATA+4
REQINDEX EQU   REQSTTE
REQLSIBX EQU   REQLDATA+2
REQLTNT  EQU   REQLDATA
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQRQ2 EQU   OPCAQWD2
@NM00143 EQU   @NM00142+5
OCUNDFER EQU   OCERSTAT+4
OCINOPER EQU   OCERSTAT+3
OCOPER   EQU   OCERSTAT+2
OCINACER EQU   OCERSTAT+1
OCACTER  EQU   OCERSTAT
@NM00141 EQU   OCIPLDMP
OCCSPDMP EQU   OCIPLDMP
OCMOSDMP EQU   OCIPLDMP
OCDYDMP  EQU   OCIPLDMP
OCACTRQ  EQU   OCIPLDMP
OCDACRQ  EQU   OCIPLDMP
OCIPLRQ  EQU   OCIPLDMP
OCDMPRQ  EQU   OCIPLDMP
@NM00140 EQU   OCRESPTR+2
OCOHNATA EQU   OCDIALLN
OCRRTPTR EQU   OCBKUP3
@NM00139 EQU   OCBKUP2+4
OCNHITTC EQU   OCBKUP2+2
OCLINTTC EQU   OCBKUP2
@NM00138 EQU   @NM00136+6
OCRQSTYP EQU   @NM00136+5
@NM00137 EQU   OCCNMHDR+3
OCSESTUS EQU   OCCNMHDR+2
OCRVTIND EQU   OCCNMHDR
OCMAXTBL EQU   @NM00133+4
@NM00135 EQU   @NM00133+3
@NM00134 EQU   OCGPTFLG
OCGPTTBS EQU   OCGPTFLG
OCGPT1ST EQU   OCGPTFLG
OCGPTSNS EQU   @NM00133
@NM00132 EQU   OCFLAG2+1
@NM00131 EQU   OCFLAG2
OCG1STAL EQU   OCFLAG2
OCGPTLGR EQU   OCFLAG2
OCGPTALL EQU   OCFLAG2
@NM00130 EQU   @NM00129+4
OCCSAB   EQU   OCCSIB
@NM00128 EQU   OCBKUP1+6
OCLNKTNT EQU   OCTARTTC
OCSRTTC  EQU   OCBKUP1+2
OCRSTTC  EQU   OCBKUP1
@NM00127 EQU   OCMSGFLG
OCRRT    EQU   OCMSGFLG
OCNAME   EQU   OCMSGFLG
OCLU1TTE EQU   @NM00125+5
OCSFLAG  EQU   @NM00125+4
OCLU2TTI EQU   @NM00125+2
OCLU1TTI EQU   @NM00125
@NM00124 EQU   OCROUTE
OCTEST   EQU   OCROUTE
OCINOP   EQU   OCBOTH
OCOP     EQU   OCBOTH
OCDISTLN EQU   @NM00123+6
OCDISTAD EQU   @NM00123+2
OCDISTNA EQU   @NM00123
OCICINAC EQU   OCICSW
@NM00122 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00121 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00120 EQU   @NM00118+2
@NM00119 EQU   OCSTAT
OCDCDRM  EQU   OCSTAT
OCTSTAT  EQU   OCSTAT
OCREASON EQU   @NM00118
@NM00117 EQU   @NM00116+4
OCOIDEP  EQU   OCCURVR
@NM00115 EQU   OCMISCFG
OCCONRRT EQU   OCMISCFG
OCINTRNL EQU   OCMISCFG
OCLSCBS  EQU   OCMISCFG
OCTGTRRQ EQU   OCMISCFG
OCTRMRQD EQU   OCMISCFG
OCNODISC EQU   OCMISCFG
@NM00114 EQU   OCTG
OCALLNKS EQU   OCTG
OCINACT  EQU   @NM00113
OCACT    EQU   @NM00113
TTHDCF   EQU   @NM00250+8
TTHTAG2  EQU   TTHTAG+1
@NM00252 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHOAF   EQU   TTHOEF
TTHDAF   EQU   TTHDEF
TTHBYTE1 EQU   @NM00250+1
TTHEFI   EQU   TTHBYTE0
@NM00251 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
TTHOSAF  EQU   IEDTH4+12
TTHDSAF  EQU   IEDTH4+8
TTHVRSNF EQU   TTHVRRPC
TTHVRRWI EQU   TTHVRRPC
@NM00249 EQU   TTHVRCWR
TTHVRPRS EQU   TTHVRRPC
TTHVRPRQ EQU   TTHVRRPC
TTHTGSNF EQU   TTHVRIND
TTHVRSQI EQU   TTHVRIND
TTHTGNFI EQU   TTHVRIND
TTHVRCWI EQU   TTHVRIND
TTHTPF   EQU   TTHVRID
@NM00248 EQU   TTHVRID
TTHVRN   EQU   TTHVRID
TTHERN   EQU   TTHRTEN
TTHIERN  EQU   TTHRTEN
@NM00247 EQU   IEDTH4+1
TTHNWKPI EQU   TTHFID4
TTHVRPCI EQU   TTHFID4
TTHEVRSI EQU   TTHFID4
TTHSWPTG EQU   TTHFID4
TTHFIDI  EQU   TTHFID4
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMLOCAD EQU   TRMSENSE
TRMTEMPR EQU   TRMAPB+2
TRMNADDR EQU   TRMOWNER
@NM00232 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00231 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00230 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMTGCON EQU   TRMTGNUM+1
TRMTGRRT EQU   TRMTGNUM
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00229 EQU   TRMRSTRT
@NM00228 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMSUBST EQU   IEDNTRM+30
TRMTYPE  EQU   IEDNTRM+29
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLBUFR+1
TRMGPCNT EQU   TRMLBUFR
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+22
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMCINOP EQU   TRMCDF0
TRMRSTPD EQU   TRMCDF0
TRMCLNXI EQU   TRMCDF0
TRMDVAS0 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMLSNCP EQU   TRMCDST
TRMDRTYC EQU   TRMLKCHN
TRMBYTE9 EQU   TRMDIALQ
TRMBYTEA EQU   TRMACTDV
TRMRECON EQU   TRMGPTAB+2
TRMILSA  EQU   TRMGPTAB
@NM00227 EQU   TRMBYTEB
TRMNLDMT EQU   TRMBYTEB
TRMF0SEQ EQU   IEDNTRM+2
@NM00226 EQU   IEDNTRM
@NM00225 EQU   TRHBYTE2
TRHPDI   EQU   TRHBYTE2
TRHEDI   EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00224 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
TRHQRI   EQU   TRHBYTE1
@NM00223 EQU   TRHBYTE1
@NM00222 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00221 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00220 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
REQRCD2  EQU   REQRCDS+1
REQRCD1  EQU   REQRCDS
REQSWTCH EQU   REQROUTE+1
REQFLAG  EQU   REQROUTE
REQRQCBA EQU   IEDREQD+9
REQRPRI  EQU   IEDREQD+8
REQLINK  EQU   IEDREQD+5
REQPRI   EQU   IEDREQD+4
REQQCBA  EQU   IEDREQD+1
REQTYPE  EQU   IEDREQD
PRUREQSQ EQU   IEDPRUND+6
PRUTAG   EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00202 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00201 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00200 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00199 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHSDI EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00198 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
@NM00197 EQU   PRUVTCHK
PRUITSET EQU   PRUVTCHK
@NM00196 EQU   PRUVTCHK
@NM00195 EQU   PRUNUNIT
@NM00194 EQU   PRUTIC
@NM00193 EQU   IEDPRUQD+4
PLMVUNCA EQU   IEDPLMV+20
PLMVFLG2 EQU   PLMVFLGS+1
@NM00192 EQU   PLMVFLG1
PLMVTRIB EQU   PLMVFLG1
PLMVSRIB EQU   PLMVFLG1
PLMVTSKP EQU   PLMVFLG1
PLMVSSKP EQU   PLMVFLG1
PLMVTCTG EQU   PLMVFLG1
PLMVUNCF EQU   PLMVFLG1
@NM00191 EQU   OPREFLG3
OPREATCH EQU   OPREFLG3
@NM00190 EQU   OPREFLG3
OPREFLG2 EQU   IEDOPRED+13
OPREFLG1 EQU   IEDOPRED+12
@NM00189 EQU   OPRVTCHK
OPRITSET EQU   OPRVTCHK
@NM00188 EQU   OPRVTCHK
@NM00187 EQU   OPRETIC
OPRELINK EQU   IEDOPRED+5
OPREPRI  EQU   IEDOPRED+4
OPREQCB  EQU   IEDOPRED+1
OPREKEY  EQU   IEDOPRED
OPCBOTTM EQU   IEDQOPCD+11944
OPCTNLEX EQU   IEDQOPCD+11928
@NM00186 EQU   IEDQOPCD+7160
OPCTNIEX EQU   IEDQOPCD+7144
OPCTNHEX EQU   IEDQOPCD+7128
OPCTCLEX EQU   IEDQOPCD+7112
@NM00185 EQU   IEDQOPCD+2344
OPCTCIEX EQU   IEDQOPCD+2328
OPCTCHEX EQU   IEDQOPCD+2312
@NM00184 EQU   IEDQOPCD+2280
@NM00183 EQU   IEDQOPCD+2274
OPCTTRC  EQU   IEDQOPCD+2108
OPCNLRFM EQU   IEDQOPCD+2104
OPCRHOLD EQU   IEDQOPCD+2040
OPCADCB  EQU   IEDQOPCD+1864
OPCTRCAD EQU   IEDQOPCD+1860
OPCADROP EQU   IEDQOPCD+1856
@NM00182 EQU   IEDQOPCD+1806
OPCNAM   EQU   IEDQOPCD+1798
@NM00181 EQU   IEDQOPCD+1796
OPCBLIST EQU   IEDQOPCD+1794
@NM00180 EQU   IEDQOPCD+1793
@NM00179 EQU   IEDQOPCD+1792
@NM00178 EQU   IEDQOPCD+1789
@NM00177 EQU   IEDQOPCD+1788
OPCBLDL  EQU   IEDQOPCD+1784
@NM00176 EQU   IEDQOPCD+1712
OPCDSRWT EQU   IEDQOPCD+1708
@NM00175 EQU   IEDQOPCD+1616
@NM00174 EQU   IEDQOPCD+1420
@NM00173 EQU   IEDQOPCD+1412
@NM00172 EQU   IEDQOPCD+612
@NM00171 EQU   IEDQOPCD+611
OPCLSSEQ EQU   IEDQOPCD+610
OPCRCTCH EQU   IEDQOPCD+608
OPCRSASC EQU   IEDQOPCD+604
OPCRECON EQU   IEDQOPCD+600
OPCGETSA EQU   IEDQOPCD+596
OPCSAASC EQU   IEDQOPCD+592
OPCLKASC EQU   IEDQOPCD+588
OPCDCBCH EQU   IEDQOPCD+584
OPCCDSER EQU   IEDQOPCD+580
OPCGTCDT EQU   IEDQOPCD+576
OPCSRSCE EQU   IEDQOPCD+572
OPCGTNSP EQU   IEDQOPCD+568
OPCFGXPT EQU   IEDQOPCD+564
OPCNCPLC EQU   IEDQOPCD+560
OPCCTVRL EQU   IEDQOPCD+556
OPCSYNSB EQU   IEDQOPCD+552
OPCRVRLT EQU   IEDQOPCD+548
OPCRCOSN EQU   IEDQOPCD+544
OPCLOCLS EQU   IEDQOPCD+540
OPCFXNAD EQU   IEDQOPCD+536
@NM00170 EQU   IEDQOPCD+532
OPCCDRDR EQU   IEDQOPCD+528
OPCRSTRS EQU   IEDQOPCD+524
OPCSAVES EQU   IEDQOPCD+520
OPCRSPBD EQU   IEDQOPCD+516
OPCNFY03 EQU   IEDQOPCD+512
OPCNFY01 EQU   IEDQOPCD+508
OPCURC   EQU   IEDQOPCD+504
OPCCINBD EQU   IEDQOPCD+500
OPCCRKEY EQU   IEDQOPCD+496
OPCDRSET EQU   IEDQOPCD+492
OPCDRCLN EQU   IEDQOPCD+488
OPCDRDEL EQU   IEDQOPCD+484
OPCDRLOD EQU   IEDQOPCD+480
OPCDRLOC EQU   IEDQOPCD+476
OPCDRCVT EQU   IEDQOPCD+472
OPCDRFST EQU   IEDQOPCD+468
OPCLSABC EQU   IEDQOPCD+466
@NM00169 EQU   IEDQOPCD+465
@NM00168 EQU   OPCSESSF
OPCGTSAB EQU   OPCSESSF
@NM00167 EQU   OPCSESSF
OPCUNIQV EQU   OPCUNIQP+2
OPCUNIQU EQU   OPCUNIQP
OPCOSSCP EQU   OPCPCID
@NM00166 EQU   IEDQOPCD+452
@NM00165 EQU   IEDQOPCD+448
OPCSDUPU EQU   IEDQOPCD+444
OPCSDULU EQU   IEDQOPCD+440
OPCSDRVT EQU   IEDQOPCD+436
OPCSDRET EQU   IEDQOPCD+432
OPCSDHSY EQU   IEDQOPCD+428
OPCSDENQ EQU   IEDQOPCD+424
OPCSDDIA EQU   IEDQOPCD+420
OPCSDAPU EQU   IEDQOPCD+416
OPCSDALU EQU   IEDQOPCD+412
OPCCSKEY EQU   IEDQOPCD+408
OPCSSKEY EQU   IEDQOPCD+404
OPCPRTTE EQU   IEDQOPCD+400
OPCLU2TT EQU   OPCSESS+14
OPCLU1TT EQU   OPCSESS+12
OPCSNSU2 EQU   OPCSNSUS+1
OPCSNSU1 EQU   OPCSNSUS
OPCSNSMN EQU   OPCSNSSY+1
OPCSNSMJ EQU   OPCSNSSY
OPCCSAB  EQU   OPCCSIB
OPCCTTE  EQU   OPCSESS+1
OPCARSRT EQU   OPCSFLAG
OPCISQUD EQU   OPCSFLAG
OPCISQAV EQU   OPCSFLAG
OPCLUREQ EQU   OPCSFLAG
OPCISRSP EQU   OPCSFLAG
OPCISQUE EQU   OPCSFLAG
OPCRAPMH EQU   OPCSFLAG
OPCRAPI  EQU   OPCSFLAG
OPCGTSIB EQU   IEDQOPCD+380
@NM00164 EQU   OPCPWCOB+9
@NM00163 EQU   OPCPWCOB+8
@NM00162 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCWRKSP EQU   IEDQOPCD+320
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00161 EQU   OPCSPEC
@NM00160 EQU   OPCSPEC
@NM00159 EQU   OPCSPEC
@NM00158 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCHORT  EQU   IEDQOPCD+256
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00157 EQU   OPCLDNME+5
@NM00156 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCFLAG1 EQU   IEDQOPCD+146
OPCWRKSZ EQU   IEDQOPCD+144
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
OCTRLNKT EQU   IEDOCTR+44
OCT3705S EQU   IEDOCTR+40
OCTRANCP EQU   IEDOCTR+38
OCTRNTTC EQU   IEDOCTR+36
OCTRSAVE EQU   IEDOCTR+32
OCTRADR  EQU   IEDOCTR+28
OCTRUCB  EQU   IEDOCTR+24
OCTRDVD  EQU   IEDOCTR+20
OCTRTTE  EQU   IEDOCTR+16
@NM00155 EQU   OCTRRTN
OCTRERI  EQU   OCTRRTN
@NM00154 EQU   OCTRRTN
OCTRLKST EQU   OCTRRTN
OCTRLSRT EQU   OCTRRTN
OCTRDRTN EQU   OCTRRTN
OCTRIP   EQU   OCTRRTN
@NM00153 EQU   OCTRRTE
@NM00152 EQU   OCTRRTE
@NM00151 EQU   OCTRRTE
OCTRMSG  EQU   OCTRRTE
@NM00150 EQU   OCTRRTE
@NM00149 EQU   OCTRRTE
@NM00148 EQU   OCTRRTE
@NM00147 EQU   OCTRRTE
@NM00146 EQU   OCTRSW
OCTRINMF EQU   OCTRSW
@NM00145 EQU   OCTRSW
OCTRBLST EQU   OCTRSW
OCTRNOS  EQU   OCTRSW
OCTROUT  EQU   OCTRSW
@NM00144 EQU   IEDOCTR+12
OCTRLCB  EQU   IEDOCTR+8
OCTRDCB  EQU   IEDOCTR+4
OCTROPCE EQU   IEDOCTR
@NM00126 EQU   OCLDNME+6
OC1SQID  EQU   OCLDNME+4
OCWAITPC EQU   OCPREFLG
OCSRCCLN EQU   OCPREFLG
OCREMCON EQU   OCPREFLG
OCCLNUP  EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
OCRMPORQ EQU   OCREQFLG
OCCDLACT EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCDSUBA  EQU   OCFLOADP+2
OCURC    EQU   OCOID
OCCKPTWA EQU   OCCKDATA+4
OCSRCTTC EQU   OCNCP
OCCKDAT2 EQU   OC379RRT+1
OCCKDAT1 EQU   OC379RRT
OCVRLST  EQU   OCECHOPT
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
@NM00112 EQU   OCBACKUP+4
OCBUFRET EQU   OCCOUNT2
OCBUFUSD EQU   OCCOUNT1
OCSEQ    EQU   OCTRUNIT+2
OCPEND   EQU   OCLNTYP
OCQUED   EQU   OCLNTYP
OCDOWN   EQU   OCLNTYP
OCALACT  EQU   OCLNTYP
OCLNQDAP EQU   OCFLAG1
OCTYPTRM EQU   OCFLAG1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
OCDACTIP EQU   OCFNAALL
OCRENTRD EQU   OCALSTAT
OCDIALX  EQU   OCWTGB
OCATNDX  EQU   OCMSTSAV+2
OCCONID  EQU   OCDEST
OCTGN    EQU   OCLOCAD
OCRESP   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00111 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
@NM00110 EQU   OCUNITBF
OCINVTIC EQU   OCUNITBF
@NM00109 EQU   OCUNITBF
@NM00108 EQU   @NM00107
@NM00106 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
NRAREAD  EQU   IEDNRA+16
NRAR2PTR EQU   IEDNRA+12
NRAR1PTR EQU   IEDNRA+8
NRASIZE  EQU   IEDNRA+4
CNRBHPOS EQU   CNRBHSET+1
@NM00105 EQU   CNRBHFUN
CNRBHFN0 EQU   CNRBHFUN
@NM00104 EQU   CNRCNTL+1
CNRTIME  EQU   CNRDATTM+4
CNRDATE  EQU   CNRDATTM
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUPHASE EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
SAVTEND  EQU   IEDNSVTD+816
SAVTNTR  EQU   IEDNSVTD+812
SAVTNPT  EQU   IEDNSVTD+808
SAVTGPE2 EQU   IEDNSVTD+804
SAVTGPP2 EQU   IEDNSVTD+800
SAVTGPT2 EQU   IEDNSVTD+799
SAVTGPT1 EQU   IEDNSVTD+798
SAVTGPTS EQU   IEDNSVTD+796
SAVTGPE1 EQU   IEDNSVTD+792
SAVTGPP1 EQU   IEDNSVTD+788
SAVTNLDM EQU   IEDNSVTD+784
SAVTPUSN EQU   IEDNSVTD+776
SAVTAUXC EQU   IEDNSVTD+772
SAVTSCAN EQU   IEDNSVTD+768
SAVTFCSP EQU   IEDNSVTD+764
SAVTFCSN EQU   IEDNSVTD+760
SAVTFCLI EQU   IEDNSVTD+756
SAVTVARR EQU   IEDNSVTD+752
SAVTFCIN EQU   IEDNSVTD+748
SAVTPTNT EQU   IEDNSVTD+744
SAVTFSAB EQU   IEDNSVTD+740
SAVTGSAB EQU   IEDNSVTD+736
SAVTARSI EQU   IEDNSVTD+728
SAVTARSQ EQU   IEDNSVTD+724
SAVTSABP EQU   IEDNSVTD+720
SAVTPUS  EQU   IEDNSVTD+716
SAVTEACR EQU   IEDNSVTD+712
SAVTERAV EQU   IEDNSVTD+708
SAVTCINO EQU   IEDNSVTD+704
SAVTEAVR EQU   IEDNSVTD+700
SAVTEVRP EQU   IEDNSVTD+696
SAVTNLSA EQU   IEDNSVTD+692
SAVTENOP EQU   IEDNSVTD+688
SAVTEROP EQU   IEDNSVTD+684
SAVTEACT EQU   IEDNSVTD+680
SAVTEMGR EQU   IEDNSVTD+676
SAVTEBRQ EQU   IEDNSVTD+672
@NM00103 EQU   IEDNSVTD+668
SAVTERFB EQU   IEDNSVTD+664
SAVTERRB EQU   IEDNSVTD+660
SAVTRTSB EQU   IEDNSVTD+656
SAVTERCQ EQU   IEDNSVTD+652
SAVTVPMG EQU   IEDNSVTD+648
SAVTVNFY EQU   IEDNSVTD+644
SAVTVNOP EQU   IEDNSVTD+640
SAVTVDVR EQU   IEDNSVTD+636
SAVTVDAC EQU   IEDNSVTD+632
SAVTVACT EQU   IEDNSVTD+628
SAVTVAVR EQU   IEDNSVTD+624
SAVTVCVD EQU   IEDNSVTD+620
SAVTVCVA EQU   IEDNSVTD+616
SAVTVMGR EQU   IEDNSVTD+612
SAVTVRIT EQU   IEDNSVTD+608
SAVTERTP EQU   IEDNSVTD+604
SAVTVRTE EQU   IEDNSVTD+600
SAVTERMP EQU   IEDNSVTD+596
SAVTVRTP EQU   IEDNSVTD+592
SAVTWSET EQU   IEDNSVTD+588
SAVTCOSP EQU   IEDNSVTD+584
SAVTINIQ EQU   IEDNSVTD+580
SAVTVRMM EQU   IEDNSVTD+576
SAVTVERI EQU   IEDNSVTD+572
SAVTVRER EQU   IEDNSVTD+568
SAVTFCTL EQU   IEDNSVTD+564
SAVTCNOT EQU   IEDNSVTD+560
SAVTCMMD EQU   IEDNSVTD+556
SAVTCGBU EQU   IEDNSVTD+552
SAVTCBND EQU   IEDNSVTD+548
SAVTPCT2 EQU   IEDNSVTD+544
@NM00102 EQU   IEDNSVTD+540
SAVTERTS EQU   IEDNSVTD+536
SAVTERVR EQU   IEDNSVTD+532
SAVTLST0 EQU   IEDNSVTD+530
SAVTVRTM EQU   IEDNSVTD+528
SAVTVRTC EQU   IEDNSVTD+526
SAVTVRTN EQU   IEDNSVTD+524
SAVTMTPF EQU   IEDNSVTD+523
SAVTMERN EQU   IEDNSVTD+522
SAVTMVRN EQU   IEDNSVTD+521
SAVTSAVR EQU   IEDNSVTD+520
SAVTDEFA EQU   IEDNSVTD+516
SAVTDEFR EQU   IEDNSVTD+515
@NM00101 EQU   IEDNSVTD+514
SAVTDEFL EQU   IEDNSVTD+512
SAVTTDEF EQU   IEDNSVTD+508
SAVTSESN EQU   IEDNSVTD+504
SAVTLCNT EQU   IEDNSVTD+502
SAVTSMAX EQU   IEDNSVTD+500
SAVTSINO EQU   IEDNSVTD+498
SAVTAMAX EQU   IEDNSVTD+496
SAVTAENO EQU   IEDNSVTD+494
SAVTAINO EQU   IEDNSVTD+492
SAVTNMAX EQU   IEDNSVTD+490
SAVTNENO EQU   IEDNSVTD+488
SAVTNINO EQU   IEDNSVTD+486
SAVTRSZE EQU   IEDNSVTD+484
SAVTRMAX EQU   IEDNSVTD+482
SAVTRENO EQU   IEDNSVTD+480
SAVTRINO EQU   IEDNSVTD+478
SAVTRMIN EQU   IEDNSVTD+476
SAVTPMID EQU   IEDNSVTD+474
SAVTRRTC EQU   IEDNSVTD+472
SAVTLUSG EQU   IEDNSVTD+468
SAVTACNQ EQU   IEDNSVTD+464
SAVTCM20 EQU   IEDNSVTD+460
SAVTCFDC EQU   IEDNSVTD+456
SAVTCMOT EQU   IEDNSVTD+452
SAVTCMIN EQU   IEDNSVTD+448
SAVTCPCH EQU   IEDNSVTD+444
SAVTCRGT EQU   IEDNSVTD+440
SAVTNALC EQU   IEDNSVTD+436
SAVTATCT EQU   IEDNSVTD+434
SAVTCRIU EQU   IEDNSVTD+432
SAVTCRHI EQU   IEDNSVTD+430
SAVTCRIB EQU   IEDNSVTD+428
SAVTLCQ  EQU   IEDNSVTD+424
SAVTDRSR EQU   IEDNSVTD+420
SAVTATPT EQU   IEDNSVTD+416
SAVTCSMI EQU   IEDNSVTD+412
SAVTNXCR EQU   IEDNSVTD+408
SAVTCRPT EQU   IEDNSVTD+404
SAVTCIPH EQU   IEDNSVTD+400
SAVTBTCO EQU   IEDNSVTD+396
SAVTBTCI EQU   IEDNSVTD+392
SAVTBPCO EQU   IEDNSVTD+388
SAVTBPCI EQU   IEDNSVTD+384
SAVTLLCB EQU   IEDNSVTD+380
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00100 EQU   IEDNSVTD+325
@NM00099 EQU   SAVTNETF
SAVTPTRC EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00098 EQU   SAVTCKQB+8
@NM00097 EQU   SAVTCKEC+1
@NM00096 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00095 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00094 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00093 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00092 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTEP   EQU   SAVTSCLU
SAVTXTRQ EQU   IEDNSVTD+164
@NM00091 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00090 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00089 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00088 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00087 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00086 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00085 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTEND   EQU   IEDQAVTD+1284
AVTREUMI EQU   IEDQAVTD+1281
@NM00084 EQU   AVTBIT5
AVTAUACT EQU   AVTBIT5
AVTREUSR EQU   AVTBIT5
AVTQHMCQ EQU   IEDQAVTD+1276
AVTQHMDA EQU   IEDQAVTD+1272
AVTTVT   EQU   IEDQAVTD+1268
AVTSITS  EQU   IEDQAVTD+1264
AVTMSUHI EQU   IEDQAVTD+1260
AVTSITU  EQU   IEDQAVTD+1256
AVTSITP  EQU   IEDQAVTD+1252
AVTPADDR EQU   IEDQAVTD+1248
@NM00083 EQU   IEDQAVTD+1246
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00082 EQU   IEDQAVTD+1242
@NM00081 EQU   IEDQAVTD+1241
@NM00080 EQU   IEDQAVTD+1240
@NM00079 EQU   IEDQAVTD+1237
@NM00078 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00077
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00076 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00075 EQU   IEDQAVTD+1140
@NM00074 EQU   IEDQAVTD+1137
@NM00073 EQU   AVTBIT4
@NM00072 EQU   AVTBIT4
@NM00071 EQU   AVTBIT4
@NM00070 EQU   AVTBIT4
@NM00069 EQU   AVTBIT4
@NM00068 EQU   AVTBIT4
@NM00067 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00066 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00065 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00064 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00063 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTQHM03 EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00062 EQU   AVTBIT2
@NM00061 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00060 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+960
AVTCCECB EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00059 EQU   IEDQAVTD+951
AVTGPTSQ EQU   IEDQAVTD+950
@NM00058 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00057 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
AVTCFE50 EQU   AVTCWFL2
AVTCFE30 EQU   AVTCWFL2
AVTCFE10 EQU   AVTCWFL2
AVTCFE20 EQU   AVTCWFL2
AVTCFE40 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
AVTCFE60 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTRAPI  EQU   AVTSAVTF
AVTLCLST EQU   AVTSAVTF
AVT370X  EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
AVTTRNOS EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00014 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00013 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTECBAD EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
AVTTRAPI EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC01058 EQU   @RC01057
@RC01053 EQU   @RC01052
@RC01303 EQU   @RC01166
         DS    0D
@ENDDATA EQU   *
         END   IGCFF10D
