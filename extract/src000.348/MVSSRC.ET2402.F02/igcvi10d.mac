         TITLE 'IGCVI10D,  3705 STARTLINE'
IGCVI10D CSECT ,                                                   0001
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                            @OZ37280*/
*                                                                  0606
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0606
*   ROPCAVT=RPARM;                  /* OPCAVT ADDR                   */
         LR    ROPCAVT,RPARM                                       0606
*   RAVT=OPCAVTPT;                  /* TCAM AVT ADDR                 */
         L     RAVT,OPCAVTPT(,ROPCAVT)                             0607
*   ROPCE=OPCCOPCE;                 /* OPCE ADDR                     */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0608
*   OPCFLAG1=0;                     /* CLEAR FLAG                    */
         MVI   OPCFLAG1(ROPCAVT),X'00'                             0609
*   GEN NOREFS NOSETS NOEXIT SEQFLOW;                              0610
IGCVI10D IEDHJN SKIPID,HJN
*                                                                  0611
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN PROGRAM LOGIC                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0611
*   IF OCELMPRI=VIFLG THEN                                         0611
         CLC   OCELMPRI(1,ROPCE),VIFLG                             0611
         BNE   @RF00611                                            0611
*     MORELINE=ON;                  /* ENTRY FROM VK             @02A*/
         OI    MORELINE(ROPCAVT),B'01000000'                       0612
*   ELSE                                                           0613
*     FIRSTREQ=ON;                  /* TURN ON FIRST REQ         @02A*/
         B     @RC00611                                            0613
@RF00611 OI    FIRSTREQ(ROPCAVT),B'10000000'                       0613
*   DO WHILE(FIRSTREQ=ON×MORELINE=ON);/* LOOP FOR GRP,ALL AND FIRST
*                                      TIME THROUGH                  */
@RC00611 B     @DE00614                                            0614
@DL00614 DS    0H                                                  0615
*     EXITFLAG=OFF;                 /* RESET SO THAT WE DO NOT XCTL
*                                      TO OURSELF WHEN PROCESSING A
*                                      GROUP FOR MULTIPLE NCPS,ONLY
*                                      SOME OF WHICH ARE ACTIVE    0615
*                                                            @ZM48377*/
         NI    EXITFLAG(ROPCAVT),B'11011111'                       0615
*     CALL STRTREQ;                 /* PROC STARTLINE REQ            */
         BAL   @14,STRTREQ                                         0616
*   END;                                                           0617
@DE00614 TM    FIRSTREQ(ROPCAVT),B'11000000'                       0617
         BNZ   @DL00614                                            0617
*   RPARM=ROPCAVT;                  /* SET R1 TO OPC AVT             */
         LR    RPARM,ROPCAVT                                       0618
*   IF OPCMODID=VI THEN             /* IF GOING TO RETURN TO VI    0619
*                                      INSURE THAT STRTREQ GETS    0619
*                                      EXECUTED              @ZM47662*/
         CLC   OPCMODID(2,ROPCAVT),@CC03046                        0619
         BNE   @RF00619                                            0619
*     OCPARM=0;                     /*                       @ZM47662*/
         SLR   @15,@15                                             0620
         STH   @15,OCPARM(,ROPCE)                                  0620
*   IF OPCMODID=XCTL00 THEN         /* CLEAR REG 0 PRIOR     @YM03724*/
@RF00619 CLC   OPCMODID(2,ROPCAVT),@CC03050                        0621
         BNE   @RF00621                                            0621
*     RZERO=0;                      /* TO TRANSFER OF CONTROL        */
         SLR   RZERO,RZERO                                         0622
*   ELSE                                                           0623
*     IF OPCMODID=CHKPT THEN        /* OPCE FOR CHECKPOINT   @ZM00899*/
         B     @RC00621                                            0623
@RF00621 CLC   OPCMODID(2,ROPCAVT),@CC03036                        0623
         BNE   @RF00623                                            0623
*       DO;                         /* YES ....              @ZM00899*/
*         IF OCALLFLG=ON THEN       /* START ALL OR STOP ALL REQUEST
*                                                            @ZM00899*/
         TM    OCALLFLG(ROPCE),B'00000100'                         0625
         BNO   @RF00625                                            0625
*           OCRLN=''B;              /* YES ... SET RLN TO ZERO     0626
*                                                            @ZM00899*/
         SLR   @15,@15                                             0626
         STC   @15,OCRLN(,ROPCE)                                   0626
*         ELSE                                                     0627
*           DO;                     /* NOT ALL REQUEST       @ZM00899*/
         B     @RC00625                                            0627
@RF00625 DS    0H                                                  0628
*             RPARM=OCTRMTBL;       /* GET TTCIN OF LINE     @ZM00899*/
         SLR   RPARM,RPARM                                         0628
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0628
*             CALL IEDQTNT;         /* CONVERT TO TTE        @ZM00899*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0629
         BALR  @14,@15                                             0629
*             OCRLN=RPARM->TRMDESTQ->QCBRELLN;/* SET RELATIVE LINE 0630
*                                      NUMBER                @ZM00899*/
         ICM   @15,7,TRMDESTQ(RPARM)                               0630
         MVC   OCRLN(1,ROPCE),QCBRELLN(@15)                        0630
*           END;                    /*                       @ZM00899*/
*       END;                        /*                       @ZM00899*/
*     ELSE                                                         0633
*       ;                           /* TO MODULE IGC0010D    @ZM00899*/
@RF00623 DS    0H                                                  0634
*   RPARM=ROPCAVT;                  /* SET R1 TO OPC AVT     @ZM00899*/
@RC00623 DS    0H                                                  0634
@RC00621 LR    RPARM,ROPCAVT                                       0634
*   DO;                             /* IEDXCTL                       */
*     GEN EXIT REFS(ROPCAVT,OPCTRACE,OPCXCTL) NOSEQFLOW;           0636
*                                   /*
         LA    15,OPCXCTL(,ROPCAVT)   POINT TO OPCXCTL LIST
         EX    0,OPCTRACE(,ROPCAVT)    INVOKE XCTL TRACE
         XCTL  SF=(E,(15))             XCTL TO NEXT MODULE
*   END;                            /* END OF IEDXCTL OZ35627        */
*                                                                  0638
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS STARTLINE REQUEST THIS ROUTINE IS CALLED FROM MAIN    */
*   /* PROGRAM LOGIC                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0638
*STRTREQ:                                                          0638
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0638
STRTREQ  DS    0H                                                  0639
*   OPCWRKSP(3)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+8(,ROPCAVT)                        0639
*   IF FIRSTREQ=ON THEN                                            0640
         TM    FIRSTREQ(ROPCAVT),B'10000000'                       0640
         BNO   @RF00640                                            0640
*     DO;                           /* IF FIRST REQUEST FIND FIRST 0641
*                                      LINE TO PROC                  */
*       FIRSTREQ=OFF;               /* RESET FLAG                    */
         NI    FIRSTREQ(ROPCAVT),B'01111111'                       0642
*       CALL GETFIRST;              /* FIND THE FIRST LINE           */
         BAL   @14,GETFIRST                                        0643
*     END;                                                         0644
*   ELSE                                                           0645
*     IF MORELINE=ON THEN                                          0645
         B     @RC00640                                            0645
@RF00640 TM    MORELINE(ROPCAVT),B'01000000'                       0645
         BNO   @RF00645                                            0645
*       MORELINE=OFF;               /* RESET LOOP BIT        @YM06057*/
         NI    MORELINE(ROPCAVT),B'10111111'                       0646
*     ELSE                                                         0647
*       ;                           /*                       @YM06057*/
@RF00645 DS    0H                                                  0648
*   RPARM=OCTRMTBL;                 /* TTCIN OF LINE TO PROCESS      */
@RC00640 SLR   RPARM,RPARM                                         0648
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0648
*   CALL IEDQTNT;                   /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0649
         BALR  @14,@15                                             0649
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0650
*   IF EXITFLAG=OFF THEN                                           0651
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0651
         BNZ   @RF00651                                            0651
*     DO;                           /* NO ERROR FOUND YET            */
*       CALL SNACHK;                /* CHECK FOR SNA LINE            */
         BAL   @14,SNACHK                                          0653
*       IF EXITFLAG=OFF THEN                                       0654
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0654
         BNZ   @RF00654                                            0654
*         DO;                       /* NO PREVIOUS ERROR             */
*           CALL ACT3705;           /* VERIFY 3705 ACTIVE            */
         BAL   @14,ACT3705                                         0656
*           IF EXITFLAG=OFF THEN                                   0657
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0657
         BNZ   @RF00657                                            0657
*             DO;                   /* NO ERROR FOUND YET            */
*               CALL LINESTAT;      /* VERFIY STATUS OF LINE         */
         BAL   @14,LINESTAT                                        0659
*               IF EXITFLAG=OFF THEN                               0660
         TM    EXITFLAG(ROPCAVT),B'00100000'                       0660
         BNZ   @RF00660                                            0660
*                 DO;               /* NO ERRORS,CONT PROC           */
*                   CALL ACTLINK;   /* BUILD ACT LINK REQ            */
         BAL   @14,ACTLINK                                         0662
*                   OPCMODID=SSCPA0;/* CALL SSCP ROUTER              */
         MVC   OPCMODID(2,ROPCAVT),@CC03044                        0663
*                 END;                                             0664
*             END;                                                 0665
*         END;                                                     0666
*     END;                                                         0667
*   ELSE                                                           0668
*     ;                                                            0668
@RF00651 DS    0H                                                  0669
*   RRETURN=OPCWRKSP(3);            /* LOAD RETURN ADDR              */
@RC00651 L     RRETURN,OPCWRKSP+8(,ROPCAVT)                        0669
*   RETURN;                                                        0670
@EL00002 DS    0H                                                  0670
@EF00002 DS    0H                                                  0670
@ER00002 BR    @14                                                 0670
*   END;                            /* END OF STRTREQ                */
*                                                                  0672
*   /*****************************************************************/
*   /*                                                               */
*   /* GET FIRST LINE TO PROCESS THIS ROUTINE IS CALLED BY STRTREQ.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0672
*GETFIRST:                                                         0672
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0672
GETFIRST DS    0H                                                  0673
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0673
*   IF OCRENTRD=ON THEN                                            0674
         TM    OCRENTRD(ROPCE),B'10000000'                         0674
         BNO   @RF00674                                            0674
*     DO;                           /* 2ND ENTRY TO VI               */
*       OCRENTRD=OFF;               /* RESET INDICATOR               */
         NI    OCRENTRD(ROPCE),B'01111111'                         0676
*       OCWTG=OCWTGB;               /* RESTORE OCWTG                 */
         MVC   OCWTG(2,ROPCE),OCWTGB(ROPCE)                        0677
*     END;                                                         0678
*   ELSE                                                           0679
*     ;                                                            0679
@RF00674 DS    0H                                                  0680
*   RPARM=OCTRMTBL;                 /* GET TTCIN OF GRP OR LINE      */
         SLR   RPARM,RPARM                                         0680
         ICM   RPARM,3,OCTRMTBL(ROPCE)                             0680
*   CALL IEDQTNT;                   /* CONVERT TTCIN TO TTE          */
         L     @15,AVTRNMPT(,IEDQAPTR)                             0681
         BALR  @14,@15                                             0681
*   RTERM=RPARM;                    /* SET UP TTE BASE               */
         LR    RTERM,RPARM                                         0682
*   IF TRMTYPE=TRMGRP THEN                                         0683
         LR    @15,RTERM                                           0683
         SH    @15,@CH00954                                        0683
         CLI   TRMTYPE(@15),X'00'                                  0683
         BNE   @RF00683                                            0683
*     DO;                           /* IF GROUP TTE THEN DO          */
*       IF TRMSUBST^=0 THEN         /* IF VALID SUBST PTR            */
         ICM   @11,3,TRMSUBST(@15)                                 0685
         BZ    @RF00685                                            0685
*         OCTRMTBL=TRMSUBST;        /* SAVE LINE TTCIN IN OPCE       */
         MVC   OCTRMTBL(2,ROPCE),TRMSUBST(@15)                     0686
*       ELSE                                                       0687
*         DO;                       /* NO LINES IN GROUP             */
         B     @RC00685                                            0687
@RF00685 DS    0H                                                  0688
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0688
*           OPCMODID=MOD03;         /* ERROR EXIT MODULE             */
         MVC   OPCMODID(2,ROPCAVT),@CC03042                        0689
*           OPCWRKSP(1)=MSG102;     /* ERROR MSG NUMBER              */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03026                        0690
*           OPCWRKSP(2)=PARM4;      /* PARM VALUE                    */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0691
*         END;                                                     0692
*     END;                                                         0693
*   ELSE                                                           0694
*     ;                                                            0694
@RF00683 DS    0H                                                  0695
*   IF EXITFLAG=OFF THEN                                           0695
@RC00683 TM    EXITFLAG(ROPCAVT),B'00100000'                       0695
         BNZ   @RF00695                                            0695
*     DO;                           /* NO ERROR COND FOUND           */
*       RPARM=ADDR(OCBACKUP);       /* GET ADDR OF GRPNAME           */
         LA    RPARM,OCBACKUP(,ROPCE)                              0697
*       CALL WAITLSRH;              /* FIND OPCE WITH SAME GRPNAME   */
         BAL   @14,WAITLSRH                                        0698
*       IF RPARM=0 THEN                                            0699
         LTR   RPARM,RPARM                                         0699
         BNZ   @RF00699                                            0699
*         DO;                       /* IF OPCE NOT FOUND WITH SAME 0700
*                                      GRPNAME THEN DO               */
*           IF OCALLFLG=ON THEN                                    0701
         TM    OCALLFLG(ROPCE),B'00000100'                         0701
         BNO   @RF00701                                            0701
*             DO;                   /* GRP,ALL LOOP                  */
*               OCSOME=OFF;         /* CLEAR STATUS BITS             */
*               OCNONE=OFF;                                        0704
         NI    OCSOME(ROPCE),B'11111100'                           0704
*             END;                                                 0705
*           ELSE                                                   0706
*             ;                                                    0706
@RF00701 DS    0H                                                  0707
*         END;                                                     0707
*       ELSE                                                       0708
*         DO;                       /* OPCE WITH SAME GRP NAME FOUND */
         B     @RC00699                                            0708
@RF00699 DS    0H                                                  0709
*           OCWTGB=OCWTG;           /* SAVE OCWTG                    */
         MVC   OCWTGB(2,ROPCE),OCWTG(ROPCE)                        0709
*           OCRENTRD=ON;            /* INDICATE 2ND ENTRY            */
         OI    OCRENTRD(ROPCE),B'10000000'                         0710
*           OCWTG=VI;               /* SET TO RETURN HERE            */
         MVC   OCWTG(2,ROPCE),@CC03046                             0711
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0712
*           OPCMODID=XCTL00;        /* MODULE TO GET CONTROL         */
         MVC   OPCMODID(2,ROPCAVT),@CC03050                        0713
*           CALL WAITLATT;          /* ATTACH OPCE TO WAITL          */
         BAL   @14,WAITLATT                                        0714
*         END;                                                     0715
*     END;                                                         0716
*   ELSE                                                           0717
*     ;                                                            0717
@RF00695 DS    0H                                                  0718
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00695 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0718
*   RETURN;                                                        0719
@EL00003 DS    0H                                                  0719
@EF00003 DS    0H                                                  0719
@ER00003 BR    @14                                                 0719
*   END;                            /* END OF GETFIRST               */
*                                                                  0721
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITL ATTACH SUBROUTINE. REG 1 MUST POINT TO OPCE ON WAITL    */
*   /* CHAIN AND REG 3 (ROPCE) TO THE OPCE TO BE ATTACHED THIS       */
*   /* ROUTINE IS CALLED BY GETFIRST                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0721
*WAITLATT:                                                         0721
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0721
WAITLATT DS    0H                                                  0722
*   DO WHILE(RPARM->OCATTACH=ON);   /* IF OPCES ALREADY ATTACHED     */
         B     @DE00722                                            0722
@DL00722 DS    0H                                                  0723
*     RPARM=RPARM->OCELMPTR;        /* NEXT OPCE                     */
         SLR   @15,@15                                             0723
         ICM   @15,7,OCELMPTR(RPARM)                               0723
         LR    RPARM,@15                                           0723
*   END;                                                           0724
@DE00722 TM    OCATTACH(RPARM),B'00000010'                         0724
         BO    @DL00722                                            0724
*   RPARM->OCELMPTR=ROPCE;          /* OPCE TO ATTACH                */
         STCM  ROPCE,7,OCELMPTR(RPARM)                             0725
*   RPARM->OCATTACH=ON;             /* IND ATTACHED OPCE             */
         OI    OCATTACH(RPARM),B'00000010'                         0726
*   RETURN;                                                        0727
@EL00004 DS    0H                                                  0727
@EF00004 DS    0H                                                  0727
@ER00004 BR    @14                                                 0727
*   END;                            /* END OF WAITLATT               */
*                                                                  0729
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS FOR SNA LINES THIS ROUTINE IS CALLED BY*/
*   /* STRTREQ.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0729
*SNACHK:                                                           0729
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0729
SNACHK   DS    0H                                                  0730
*   IF TRMTYPE=TRMSDLC THEN                                        0730
         LR    @15,RTERM                                           0730
         AL    @15,@CF01974                                        0730
         CLI   TRMTYPE-25(@15),X'21'                               0730
         BNE   @RF00730                                            0730
*     DO;                           /* IF SNA LINE                   */
*       OCIPLWA=0;                  /* CLEAR FOR USE BY ACT-DE       */
         SLR   @15,@15                                             0732
         ST    @15,OCIPLWA(,ROPCE)                                 0732
*       OCPTRSAV=0;                 /* CLEARED FOR ACTIVATE USE      */
         ST    @15,OCPTRSAV(,ROPCE)                                0733
*       OCWTGB=OCWTG;               /* SAVE CALLER                   */
         MVC   OCWTGB(2,ROPCE),OCWTG(ROPCE)                        0734
*       OCWTG=VK;                   /* INDICATE RETURN TO VK     @P3C*/
         MVC   OCWTG(2,ROPCE),@CC03048                             0735
*       OCSWITCH=OCTOFA;            /* IND ACT LINK REQ              */
         MVI   OCSWITCH(ROPCE),X'22'                               0736
*       OPCMODID=FA;                /* ACT MOD TO GET CONTROL        */
         MVC   OPCMODID(2,ROPCAVT),@CC03052                        0737
*       EXITFLAG=ON;                /* IND EXIT                      */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0738
*     END;                                                         0739
*   ELSE                                                           0740
*     ;                                                            0740
@RF00730 DS    0H                                                  0741
*   RETURN;                                                        0741
@EL00005 DS    0H                                                  0741
@EF00005 DS    0H                                                  0741
@ER00005 BR    @14                                                 0741
*   END;                            /* END OF SNACHK                 */
*                                                                  0743
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS THE ACTIVE STATUS OF THE LINE THIS     */
*   /* ROUTINE IS CALLED BY STRTREQ                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0743
*LINESTAT:                                                         0743
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0743
LINESTAT DS    0H                                                  0744
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0744
*   IF TRMEPMOD=ON THEN                                            0745
         LR    @15,RTERM                                           0745
         AL    @15,@CF03137                                        0745
         TM    TRMEPMOD-15(@15),B'10000000'                        0745
         BNO   @RF00745                                            0745
*     DO;                           /* IF LINE IS IN EP MODE         */
*       OPCWRKSP(1)=MSG443;         /* SET UP ERROR MSG              */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03003                        0747
*       OPCWRKSP(2)=PARM4;          /* SET UP PARM VALUE             */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0748
*       EXITFLAG=ON;                /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0749
*       CALL ERREXIT;               /* EXECUTE ERROR PROCESS         */
         BAL   @14,ERREXIT                                         0750
*     END;                                                         0751
*   ELSE                                                           0752
*     DO;                           /* LINE NOT IN EP MODE           */
         B     @RC00745                                            0752
@RF00745 DS    0H                                                  0753
*       IF OCTOTE=ON THEN                                          0753
         TM    OCTOTE(ROPCE),B'01000000'                           0753
         BNO   @RF00753                                            0753
*         TRMSTOTE=OFF;             /* IF TOTE REQUEST, INDICATE LINE
*                                      NOT IN TOTE MODE              */
         LR    @15,RTERM                                           0754
         AL    @15,@CF03138                                        0754
         NI    TRMSTOTE-17(@15),B'11111110'                        0754
*       ELSE                                                       0755
*         ;                                                        0755
@RF00753 DS    0H                                                  0756
*       IF TRMSTOTE=ON THEN                                        0756
         LR    @15,RTERM                                           0756
         AL    @15,@CF03138                                        0756
         TM    TRMSTOTE-17(@15),B'00000001'                        0756
         BNO   @RF00756                                            0756
*         DO;                       /* IF TOTE OWNS LINE             */
*           OPCWRKSP(1)=MSG49;      /* SET ERROR MSG NUMBER          */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03005                        0758
*           OPCWRKSP(2)=PARM4;      /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0759
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0760
*           CALL ERREXIT;           /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0761
*         END;                                                     0762
*       ELSE                                                       0763
*         DO;                       /* TOTE DOESNT CONTROL LINE      */
         B     @RC00756                                            0763
@RF00756 DS    0H                                                  0764
*           IF TRMRSACT=ON THEN                                    0764
         LR    @15,RTERM                                           0764
         AL    @15,@CF03140                                        0764
         TM    TRMRSACT-16(@15),B'10000000'                        0764
         BNO   @RF00764                                            0764
*             DO;                   /* IF LINE ALREADY ACTIVE        */
*               OPCWRKSP(1)=MSG19;  /* SET ERROR MSG NUMBER          */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03007                        0766
*               OPCWRKSP(2)=PARM8;  /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00046                      0767
*               EXITFLAG=ON;        /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0768
*               CALL ERREXIT;       /* ERROR PROCESSING              */
         BAL   @14,ERREXIT                                         0769
*             END;                                                 0770
*           ELSE                                                   0771
*             ;                                                    0771
@RF00764 DS    0H                                                  0772
*         END;                                                     0772
*     END;                                                         0773
@RC00756 DS    0H                                                  0774
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN REG            */
@RC00745 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0774
*   RETURN;                                                        0775
@EL00006 DS    0H                                                  0775
@EF00006 DS    0H                                                  0775
@ER00006 BR    @14                                                 0775
*   END;                            /* END OF LINESTAT               */
*                                                                  0777
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE CHECKS FOR NCP ACTIVE THIS ROUTINE IS CALLED  */
*   /* BY STRTREQ.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0777
*ACT3705:                                                          0777
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0777
ACT3705  DS    0H                                                  0778
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN REG               */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0778
*   IF TRMCOHRT=0 THEN                                             0779
         LR    @15,RTERM                                           0779
         AL    @15,@CF03141                                        0779
         ICM   @11,3,TRMCOHRT-18(@15)                              0779
         BNZ   @RF00779                                            0779
*     DO;                           /* IF NO COHORT PTR              */
*       OPCWRKSP(1)=NCPACT;         /* NCP NOT ACTIVE MSG            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03009                        0781
*       OPCWRKSP(2)=PARM4;          /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0782
*       EXITFLAG=ON;                /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0783
*     END;                                                         0784
*   ELSE                                                           0785
*     DO;                           /* HIERARCHY IN PLACE            */
         B     @RC00779                                            0785
@RF00779 DS    0H                                                  0786
*       RESPECIFY                                                  0786
*         RSAVE RSTD;               /* R13=SAVE AREA ADDR            */
*       RSAVE=ADDR(OPCSAVE);        /* SET UP SAVE AREA              */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0787
*       RPARM=RTERM;                /* PASS TTE                      */
         LR    RPARM,RTERM                                         0788
*       CALL COHORTLK;              /* COHORT LOOK UP RTN            */
         L     @15,OPCHORT(,ROPCAVT)                               0789
         BALR  @14,@15                                             0789
*       RESPECIFY                                                  0790
*         RSAVE UNRSTD;                                            0790
*       RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE PREFIX    */
         SH    RPARM,@CH00954                                      0791
*       IF RPARM->TRMRSACT=OFF THEN                                0792
         TM    TRMRSACT(RPARM),B'10000000'                         0792
         BNZ   @RF00792                                            0792
*         DO;                       /* ACTIVE FLAG OFF               */
*           OPCWRKSP(1)=NCPACT;     /* NCP NOT ACTIVE MSG            */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03009                        0794
*           OPCWRKSP(2)=PARM4;      /* PARM VALUE                    */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0795
*           EXITFLAG=ON;            /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0796
*         END;                                                     0797
*       ELSE                                                       0798
*         DO;                       /* ACTIVE FLAG ON                */
         B     @RC00792                                            0798
@RF00792 DS    0H                                                  0799
*           IF OCACTREQ=OFF&RPARM->TRMINPG=ON THEN                 0799
         TM    OCACTREQ(ROPCE),B'00001000'                         0799
         BNZ   @RF00799                                            0799
         TM    TRMINPG(RPARM),B'00100000'                          0799
         BNO   @RF00799                                            0799
*             DO;                   /* IF REQUEST IS NOT FROM      0800
*                                      ACTIVATE AND ACT-DEACT-     0800
*                                      IPL-DUMP IN PROGRESS,ERROR    */
*               IF RPARM->TRMTYPE^=TRMRNCP THEN/* IF ENTRY IS NOT FOR
*                                      REMOTE NCP            @OZ37280*/
         CLI   TRMTYPE(RPARM),X'0D'                                0801
         BE    @RF00801                                            0801
*                 DO;               /*                       @OZ37280*/
*                   RPARM=(RPARM+LENGTH(IEDNTRM))->TRMDESTQ->QCBDCBAD;
         ICM   @15,7,TRMDESTQ+28(RPARM)                            0803
         SLR   @11,@11                                             0803
         ICM   @11,7,QCBDCBAD(@15)                                 0803
         LR    RPARM,@11                                           0803
*                                   /* GET DEB ADDRESS       @YM09041*/
*                   RFY                                            0804
*                     IHADCB BASED(RPARM);/*                 @XM05659*/
*                   RPARM=DCBDEBAD; /* GET DEB ADDRESS       @XM05659*/
         L     @15,DCBDEBAD+40(,RPARM)                             0805
         LR    RPARM,@15                                           0805
*                   RFY                                            0806
*                     IEDQDEB BASED(RPARM);                        0806
*                   RPARM=RPARM-(ADDR(DEBNMSUB)-ADDR(IEDQDEB));/*  0807
*                                      BACKUP                        */
         SH    RPARM,@CH00924                                      0807
*                   OCBACKUP=''B;   /* CLEAR TO INSERT THE UCB ADDR  */
         XC    OCBACKUP(8,ROPCE),OCBACKUP(ROPCE)                   0808
*                 END;              /*                       @OZ37280*/
*               ELSE                /*                       @OZ37280*/
*                 OCBACKUP=RNCP;    /* MOVE IN RNCP          @OZ37280*/
         B     @RC00801                                            0810
@RF00801 MVC   OCBACKUP(8,ROPCE),@CC03056                          0810
*               OCBACKUP(1:3)=DEBUCBAD->UCBNAME;/* INSERT THE UCB  0811
*                                      ADDR                          */
@RC00801 ICM   @15,7,DEBUCBAD(RPARM)                               0811
         MVC   OCBACKUP(3,ROPCE),UCBNAME(@15)                      0811
*               OPCWRKSP(1)=NCPACT2;/* ERROR MSG                     */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03011                        0812
*               OPCWRKSP(2)=PARM4;  /* SET PARM VALUE                */
         MVC   OPCWRKSP+4(4,ROPCAVT),@CF00256                      0813
*               EXITFLAG=ON;        /* INDICATE EXIT                 */
         OI    EXITFLAG(ROPCAVT),B'00100000'                       0814
*             END;                                                 0815
*           ELSE                                                   0816
*             ;                                                    0816
@RF00799 DS    0H                                                  0817
*         END;                                                     0817
*     END;                                                         0818
@RC00792 DS    0H                                                  0819
*   IF EXITFLAG=ON                  /* INDICATE EXIT             @P2A*/
*     THEN                                                         0819
@RC00779 TM    EXITFLAG(ROPCAVT),B'00100000'                       0819
         BNO   @RF00819                                            0819
*     DO;                           /*                           @P2A*/
*       IF OCWTG=0 THEN                                            0821
         ICM   @15,3,OCWTG(ROPCE)                                  0821
         BNZ   @RF00821                                            0821
*         DO;                       /* NOT INTERNAL CALL         @P2P*/
*           RZERO=OPCWRKSP(1);      /* SET UPMSG NUMB            @P2P*/
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0823
*           RPARM=OPCWRKSP(2);      /* PARM VALUE                @P2P*/
         L     RPARM,OPCWRKSP+4(,ROPCAVT)                          0824
*           OPCMODID=MOD03;         /* ..ELSE XCTL DIRECTLY TO MSG 0825
*                                      MODULE                    @P2P*/
         MVC   OPCMODID(2,ROPCAVT),@CC03042                        0825
*           CALL NONINTEX;          /* COMMON NON-INTERNALEXIT   @P2P*/
         BAL   @14,NONINTEX                                        0826
*         END;                      /*                           @P2P*/
*       ELSE                                                       0828
*         CALL INTRINVK;            /* ELSE INTERNAL INVOKER     @P2P*/
         B     @RC00821                                            0828
@RF00821 BAL   @14,INTRINVK                                        0828
*     END;                          /*                           @P2A*/
@RC00821 DS    0H                                                  0830
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RF00819 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0830
*   RETURN;                                                        0831
@EL00007 DS    0H                                                  0831
@EF00007 DS    0H                                                  0831
@ER00007 BR    @14                                                 0831
*   END;                            /* END OF ACT3705                */
*                                                                  0833
*   /*****************************************************************/
*   /*                                                               */
*   /* WAITL CHAIN SEARCH ROUTINE THIS ROUTINE IS CALLED BY          */
*   /* STRTRET,PROCRESP,GETFIRST                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0833
*WAITLSRH:                                                         0833
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0833
WAITLSRH DS    0H                                                  0834
*   RESPECIFY                                                      0834
*    (RWORK6,                                                      0834
*     RWORK7) RSTD;                 /* THIS RTN USES RWORK6 TO     0834
*                                      CONTAIN THE ADDR OF THE PREVI
*                                      OPCE ON THE CHAIN. RWORK7 HAS
*                                      THIS ADDRESS OF THE OPCE WE 0834
*                                      ARE LOOKING AT                */
*   RWORK6=ADDR(OPCWAITV);          /* ADDR OF WAITL CHAIN           */
         LA    RWORK6,OPCWAITV(,ROPCAVT)                           0835
*   RWORK7=OPCWAITV;                /* GET 1ST ELEM ON CHAIN         */
         L     RWORK7,OPCWAITV(,ROPCAVT)                           0836
*   RWORK7=RWORK7&MASKBYTE;         /* CLEAR HIGH ORDER BY   @YM06021*/
         N     RWORK7,@CF02999                                     0837
*   SWITCH01=OFF;                   /* INITALIZE LOOP SWITCH @OZ32505*/
         NI    SWITCH01(ROPCAVT),B'11101111'                       0838
*   DO WHILE RWORK7^=0&SWITCH01=OFF;/* SEARCH COMPLETE WAIT CHAIN  0839
*                                      WHILE OPCE HAS BEEN FOUND   0839
*                                                            @OZ32505*/
         B     @DE00839                                            0839
@DL00839 DS    0H                                                  0840
*     DO WHILE(RPARM->GRPNAME=RWORK7->OCBACKUP)&(SWITCH01=OFF)&(RWORK7
*           ^=0);                   /* DO WHILE GRPNAME ARE EQUAL, 0840
*                                      OPCE HAS NOT BEEN FOUND, AND
*                                      END OF CHAIN HAS NOT BEEN HIT
*                                                            @OZ32505*/
         B     @DE00840                                            0840
@DL00840 DS    0H                                                  0841
*       IF OCELMPRI=PRIATTNH THEN                                  0841
         CLI   OCELMPRI(ROPCE),X'E6'                               0841
         BNE   @RF00841                                            0841
*         DO;                       /* IF ELEMENT IS FROM IEDNSL GET
*                                      TTE ADDR USING TTCIN IN     0842
*                                      ELEMENT ON WAIT CHAIN     @P1M*/
*           OPCWRKSP(7)=RRETURN;    /*                           @P1M*/
         ST    RRETURN,OPCWRKSP+24(,ROPCAVT)                       0843
*           RPARM=RWORK7->OCTRMTBL; /*                           @P1M*/
         SLR   RPARM,RPARM                                         0844
         ICM   RPARM,3,OCTRMTBL(RWORK7)                            0844
*           CALL IEDQTNT;           /*                           @P1M*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0845
         BALR  @14,@15                                             0845
*           RRETURN=OPCWRKSP(7);    /*                           @P1M*/
         L     RRETURN,OPCWRKSP+24(,ROPCAVT)                       0846
*           IF RPARM=NSLTTEPT THEN                                 0847
         CL    RPARM,NSLTTEPT(,RNSL)                               0847
         BNE   @RF00847                                            0847
*             DO;                   /* IF TTE ADDR EQUAL TO TTE ADDR
*                                      SAVED IN NSL ELEMENT AND    0848
*                                      ELEMENT IS A STARTLINE OR VARY
*                                      ON REQUEST, HAVE FOUND OPCE 0848
*                                                                @P1M*/
*               IF RWORK7->OCSWITCH=OCX18×RWORK7->OCSWITCH=OCVARON THEN
         CLI   OCSWITCH(RWORK7),X'18'                              0849
         BE    @RT00849                                            0849
         CLI   OCSWITCH(RWORK7),X'D1'                              0849
         BNE   @RF00849                                            0849
@RT00849 DS    0H                                                  0850
*                 SWITCH01=ON;      /*                           @P1M*/
         OI    SWITCH01(ROPCAVT),B'00010000'                       0850
*               ELSE                                               0851
*                 DO;               /* GO TO NEXT ELEMENT        @P1M*/
         B     @RC00849                                            0851
@RF00849 DS    0H                                                  0852
*                   RPARM=ADDR(RWORK7->OCBACKUP);/*              @P1M*/
         LA    RPARM,OCBACKUP(,RWORK7)                             0852
*                   RWORK6=RWORK7;  /*                           @P1M*/
         LR    RWORK6,RWORK7                                       0853
*                   RWORK7=RWORK7->OCLINK;/*                     @P1M*/
         L     RWORK7,OCLINK(,RWORK7)                              0854
*                 END;              /*                           @P1M*/
*             END;                  /*                           @P1M*/
*           ELSE                                                   0857
*             DO;                   /* GO TO NEXT ELEMENT        @P1M*/
         B     @RC00847                                            0857
@RF00847 DS    0H                                                  0858
*               RPARM=ADDR(RWORK7->OCBACKUP);/*                  @P1M*/
         LA    RPARM,OCBACKUP(,RWORK7)                             0858
*               RWORK6=RWORK7;      /*                           @P1M*/
         LR    RWORK6,RWORK7                                       0859
*               RWORK7=RWORK7->OCLINK;/*                         @P1M*/
         L     RWORK7,OCLINK(,RWORK7)                              0860
*             END;                  /*                           @P1M*/
*         END;                      /*                           @P1M*/
*       ELSE                                                       0863
*         DO;                       /*                           @P1M*/
         B     @RC00841                                            0863
@RF00841 DS    0H                                                  0864
*           IF OCRESP=ON THEN                                      0864
         TM    OCRESP(ROPCE),B'00000001'                           0864
         BNO   @RF00864                                            0864
*             DO;                   /* IF OPCE IS A RESPONSE, TURN 0865
*                                      RESPONSE BIT OFF AND CHECK IF
*                                      RESOURCES HAVE SAME TTCIN   0865
*                                      VALUE                     @P1M*/
*               IF RWORK7->OCTRMTBL=OCTRMTBL THEN                  0866
         CLC   OCTRMTBL(2,RWORK7),OCTRMTBL(ROPCE)                  0866
         BNE   @RF00866                                            0866
*                 DO;               /* IF SAME TTCIN VALUE AND IT IS
*                                      A START LINE OR VARY ON     0867
*                                      REQUEST, HAVE FOUND OPCE  @P1M*/
*                   IF RWORK7->OCSWITCH=OCX18×RWORK7->OCSWITCH=OCVARON
*                     THEN                                         0868
         CLI   OCSWITCH(RWORK7),X'18'                              0868
         BE    @RT00868                                            0868
         CLI   OCSWITCH(RWORK7),X'D1'                              0868
         BNE   @RF00868                                            0868
@RT00868 DS    0H                                                  0869
*                     SWITCH01=ON;  /*                           @P1M*/
         OI    SWITCH01(ROPCAVT),B'00010000'                       0869
*                   ELSE                                           0870
*                     DO;           /* ELSE GO TO NEXT ELEMENT   @P1M*/
         B     @RC00868                                            0870
@RF00868 DS    0H                                                  0871
*                       RPARM=ADDR(RWORK7->OCBACKUP);/*          @P1M*/
         LA    RPARM,OCBACKUP(,RWORK7)                             0871
*                       RWORK6=RWORK7;/*                         @P1M*/
         LR    RWORK6,RWORK7                                       0872
*                       RWORK7=RWORK7->OCLINK;/*                 @P1M*/
         L     RWORK7,OCLINK(,RWORK7)                              0873
*                     END;          /*                           @P1M*/
*                 END;              /*                           @P1M*/
*               ELSE                                               0876
*                 DO;               /* ELSE GO TO NEXT ELEMENT   @P1M*/
         B     @RC00866                                            0876
@RF00866 DS    0H                                                  0877
*                   RPARM=ADDR(RWORK7->OCBACKUP);/*              @P1M*/
         LA    RPARM,OCBACKUP(,RWORK7)                             0877
*                   RWORK6=RWORK7;  /*                           @P1M*/
         LR    RWORK6,RWORK7                                       0878
*                   RWORK7=RWORK7->OCLINK;/*                     @P1M*/
         L     RWORK7,OCLINK(,RWORK7)                              0879
*                 END;              /*                           @P1M*/
*             END;                  /*                           @P1M*/
*           ELSE                                                   0882
*             SWITCH01=ON;          /*                           @P1M*/
         B     @RC00864                                            0882
@RF00864 OI    SWITCH01(ROPCAVT),B'00010000'                       0882
*         END;                      /*                           @P1M*/
@RC00864 DS    0H                                                  0884
*     END;                                                         0884
@RC00841 DS    0H                                                  0884
@DE00840 CLC   GRPNAME(8,RPARM),OCBACKUP(RWORK7)                   0884
         BNE   @DC00840                                            0884
         TM    SWITCH01(ROPCAVT),B'00010000'                       0884
         BNZ   @DC00840                                            0884
         LTR   RWORK7,RWORK7                                       0884
         BNZ   @DL00840                                            0884
@DC00840 DS    0H                                                  0885
*     IF SWITCH01=OFF&RWORK7^=0 THEN                               0885
         TM    SWITCH01(ROPCAVT),B'00010000'                       0885
         BNZ   @RF00885                                            0885
         LTR   RWORK7,RWORK7                                       0885
         BZ    @RF00885                                            0885
*       DO;                         /* IF HAVE NOT FOUND OPCE ELEMENT
*                                      AND NOT AT END OF CHAIN, GO TO
*                                      NEXT ELEMENT IN CHAIN @OZ32505*/
*         RWORK6=RWORK7;            /*                       @OZ32505*/
         LR    RWORK6,RWORK7                                       0887
*         RWORK7=RWORK7->OCLINK;    /*                       @OZ32505*/
         L     RWORK7,OCLINK(,RWORK7)                              0888
*       END;                        /*                       @OZ32505*/
*     ELSE                                                         0890
*       ;                           /*                       @OZ32505*/
@RF00885 DS    0H                                                  0891
*   END;                            /*                       @OZ32505*/
@DE00839 LTR   RWORK7,RWORK7                                       0891
         BZ    @DC00839                                            0891
         TM    SWITCH01(ROPCAVT),B'00010000'                       0891
         BZ    @DL00839                                            0891
@DC00839 DS    0H                                                  0892
*   IF RWORK7=0 THEN                                               0892
         LTR   RWORK7,RWORK7                                       0892
         BNZ   @RF00892                                            0892
*     RPARM=0;                      /* NO OPCE FOUND                 */
         SLR   RPARM,RPARM                                         0893
*   ELSE                                                           0894
*     DO;                                                          0894
         B     @RC00892                                            0894
@RF00892 DS    0H                                                  0895
*       RPARM=RWORK7;               /* R1=OPCE                       */
         LR    RPARM,RWORK7                                        0895
*       RZERO=RWORK6;               /* R0=PREVIOUS OPCE              */
         LR    RZERO,RWORK6                                        0896
*     END;                                                         0897
*   RESPECIFY                                                      0898
*    (RWORK6,                                                      0898
*     RWORK7) UNRSTD;                                              0898
*   RETURN;                                                        0899
@EL00008 DS    0H                                                  0899
@EF00008 DS    0H                                                  0899
@ER00008 BR    @14                                                 0899
*   END;                            /* END OF WAITLSRH               */
         B     @EL00008                                            0900
*                                                                  0901
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBR BUILDS THE ACT LINK REQUEST THIS ROUTINE IS CALLED  */
*   /* BY STRTREQ                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0901
*ACTLINK:                                                          0901
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0901
ACTLINK  DS    0H                                                  0902
*   OPCWRKSP(4)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0902
*   RPARM=1;                        /* GET ONE BUFFER                */
         LA    RPARM,1                                             0903
*   RESPECIFY                                                      0904
*     RSAVE RSTD;                   /* R13=SAVE AREA ADDR            */
*   RSAVE=ADDR(OPCSAVE);            /* ADDR OF SAVE AREA             */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0905
*   CALL ALLOCBUF;                  /* GET BUFF SUBR IN QCA          */
         L     @15,OPCGETBF(,ROPCAVT)                              0906
         BALR  @14,@15                                             0906
*   RESPECIFY                                                      0907
*     RSAVE UNRSTD;                                                0907
*   RPARM->OPREPRI=PRIHIFLG;        /* SET PRIORITY                  */
         MVI   OPREPRI(RPARM),X'E9'                                0908
*   RPARM->OPREFLG1=OPRA0;          /* SET FLAG FOR A0               */
         MVI   OPREFLG1(RPARM),X'01'                               0909
*   RPARM->OCSWITCH=OCACTLK;        /* SET ACTLINK REQ FLAG          */
         MVI   OCSWITCH(RPARM),X'50'                               0910
*   RPARM->OCWTG=VK;                /* INDICATE RETURN HERE      @01C*/
         MVC   OCWTG(2,RPARM),@CC03048                             0911
*   RPARM->OCACTREQ=ON;             /* INDICATE ACTIVATE IN PROG     */
         OI    OCACTREQ(RPARM),B'00001000'                         0912
*   RPARM->OCTRMTBL=OCTRMTBL;       /* GET TTCIN FROM OPCE MOVE TO 0913
*                                      DUMMY OPCE                    */
         MVC   OCTRMTBL(2,RPARM),OCTRMTBL(ROPCE)                   0913
*   RPARM->OCBACKUP=OCBACKUP;       /* MOVE GRPNAME FROM OPCE TO   0914
*                                      DUMMY OPCE                    */
         MVC   OCBACKUP(8,RPARM),OCBACKUP(ROPCE)                   0914
*   OPCCOPCE=RPARM;                 /* ATTACH DUMMY OPCE TO OAVT     */
         ST    RPARM,OPCCOPCE(,ROPCAVT)                            0915
*   CALL WAITLADD;                  /* PUT ORIGINAL OPCE ON WAITL    */
         BAL   @14,WAITLADD                                        0916
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0917
*   RETURN;                                                        0918
@EL00009 DS    0H                                                  0918
@EF00009 DS    0H                                                  0918
@ER00009 BR    @14                                                 0918
*   END;                            /* END OF ACTLINK                */
*                                                                  0920
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE PUTS AN ELEMENT ON THE WAITL CHAIN THIS       */
*   /* ROUTINE IS CALLED BY ACTLINK,STRTLINE                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0920
*WAITLADD:                                                         0920
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0920
WAITLADD DS    0H                                                  0921
*   RESPECIFY                                                      0921
*     RWORK7 RSTD;                  /* RWORK7 IS USED TO CONTAIN ADDR
*                                      OF AN ELEMENT OF WAITL        */
*   RWORK7=OPCWAITV;                /* GET 1ST ELEM ON WAITL         */
         L     RWORK7,OPCWAITV(,ROPCAVT)                           0922
*   OCLINK=RWORK7;                  /* SET NEXT ELEM PTR             */
         ST    RWORK7,OCLINK(,ROPCE)                               0923
*   ROPCE=ROPCE&MASKBYTE;           /* CLEAR THE HIGH ORDER BYTE   0924
*                                                            @YM04620*/
         N     ROPCE,@CF02999                                      0924
*   OPCWAITV=ROPCE;                 /* CHAIN ELEM IN                 */
         ST    ROPCE,OPCWAITV(,ROPCAVT)                            0925
*   RETURN;                                                        0926
@EL00010 DS    0H                                                  0926
@EF00010 DS    0H                                                  0926
@ER00010 BR    @14                                                 0926
*   RESPECIFY                                                      0927
*     RWORK7 UNRSTD;                                               0927
*   END;                            /* END OF WAITLADD               */
*                                                                  0929
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR PROCESSING THIS ROUTINE IS CALLED BY SNASTRT,           */
*   /* LINESTAT,ACT3705,ERRRESP                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0929
*ERREXIT:                                                          0929
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0929
ERREXIT  DS    0H                                                  0930
*   OPCWRKSP(5)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+16(,ROPCAVT)                       0930
*   CALL ERRSTAT;                   /* UPDATE ERROR STATUS           */
         BAL   @14,ERRSTAT                                         0931
*   IF MORELINE=OFF THEN                                           0932
         TM    MORELINE(ROPCAVT),B'01000000'                       0932
         BNZ   @RF00932                                            0932
*     DO;                           /* IF NO MORE LINES TO PROCESS,
*                                      THEN SETUP EXIT               */
*       IF OCWTG=0 THEN                                            0934
         ICM   @15,3,OCWTG(ROPCE)                                  0934
         BNZ   @RF00934                                            0934
*         DO;                       /* NOT INTERNAL CALL             */
*           RZERO=OPCWRKSP(1);      /* SET UPMSG NUMB                */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0936
*           RPARM=OPCWRKSP(2);      /* PARM VALUE                    */
         L     RPARM,OPCWRKSP+4(,ROPCAVT)                          0937
*           IF RZERO=MSG511         /* IF SOME LINES STARTED @ZM48467*/
*             THEN                                                 0938
         CH    RZERO,@CH03017                                      0938
         BNE   @RF00938                                            0938
*             DO;                   /*                       @ZM48467*/
*               OPCMODID=CHKPT;     /* SET TO XCTL TO IGC0610D     0940
*                                                            @ZM48467*/
         MVC   OPCMODID(2,ROPCAVT),@CC03036                        0940
*               OCWTG=MOD03;        /* SET TO GO TO ERROR MESSAGE  0941
*                                      MODULE CHAIN FOLLOWING      0941
*                                      CHECKPOINT            @ZM48467*/
         MVC   OCWTG(2,ROPCE),@CC03042                             0941
*               OCPARM=RZERO;       /* SET MESSAGE NUMBER IN OPCE SO
*                                      THAT IGC0610D CAN SET RZERO 0942
*                                      PRIOR TO XCTL TO IGC0310D   0942
*                                                            @ZM48484*/
         STH   RZERO,OCPARM(,ROPCE)                                0942
*             END;                  /*                       @ZM48467*/
*           ELSE                                                   0944
*             OPCMODID=MOD03;       /* ..ELSE XCTL DIRECTLY TO MSG 0944
*                                      MODULE                @ZM48467*/
         B     @RC00938                                            0944
@RF00938 MVC   OPCMODID(2,ROPCAVT),@CC03042                        0944
*           CALL NONINTEX;          /* COMMON NON-INTERNALEXIT       */
@RC00938 BAL   @14,NONINTEX                                        0945
*         END;                                                     0946
*       ELSE                                                       0947
*         CALL INTRINVK;            /* ELSE INTERNAL INVOKER         */
         B     @RC00934                                            0947
@RF00934 BAL   @14,INTRINVK                                        0947
*     END;                                                         0948
*   ELSE                                                           0949
*     ;                                                            0949
@RF00932 DS    0H                                                  0950
*   RRETURN=OPCWRKSP(5);            /* RESTORE RETURN ADDR           */
@RC00932 L     RRETURN,OPCWRKSP+16(,ROPCAVT)                       0950
*   RETURN;                                                        0951
@EL00011 DS    0H                                                  0951
@EF00011 DS    0H                                                  0951
@ER00011 BR    @14                                                 0951
*   END;                            /* END OF ERREXIT                */
*                                                                  0953
*   /*****************************************************************/
*   /*                                                               */
*   /* NORMAL EXIT PROCESSING THIS ROUTINE IS CALLED BY              */
*   /* STRTRET,SNASTRT                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0953
*NORMEXIT:                                                         0953
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0953
NORMEXIT DS    0H                                                  0954
*   OPCWRKSP(4)=RRETURN;            /* SAVE RTURN ADDR               */
         ST    RRETURN,OPCWRKSP+12(,ROPCAVT)                       0954
*   CALL NORMSTAT;                  /* UPDATE NORMAL STATUS          */
         BAL   @14,NORMSTAT                                        0955
*   IF MORELINE=OFF THEN                                           0956
         TM    MORELINE(ROPCAVT),B'01000000'                       0956
         BNZ   @RF00956                                            0956
*     DO;                           /* IF NO MORE LINES              */
*       IF OCWTG^=0 THEN                                           0958
         ICM   @15,3,OCWTG(ROPCE)                                  0958
         BZ    @RF00958                                            0958
*         CALL INTRINVK;            /* IF INTERNALLY INVOKED, SETUP
*                                      TO RETURN INTERNALLY          */
         BAL   @14,INTRINVK                                        0959
*       ELSE                                                       0960
*         DO;                       /* NOT INTERNALLY INVOKED        */
         B     @RC00958                                            0960
@RF00958 DS    0H                                                  0961
*           RZERO=OPCWRKSP(1);      /* PUT MSG NUMBER IN R0          */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            0961
*           RPARM=OPCWRKSP(2);      /* SET UP PARAMETER              */
         L     RPARM,OPCWRKSP+4(,ROPCAVT)                          0962
*           OCPARM=RZERO;           /* PUT MSG NUMBER IN OCPARM      */
         STH   RZERO,OCPARM(,ROPCE)                                0963
*           OPCMODID=CHKPT;         /* EXIT TO CHECK POINT           */
         MVC   OPCMODID(2,ROPCAVT),@CC03036                        0964
*           OCWTG=MOD09;            /* THEN TO MSG MOD 09            */
         MVC   OCWTG(2,ROPCE),@CC03038                             0965
*           CALL NONINTEX;          /* EXIT SET UP                   */
         BAL   @14,NONINTEX                                        0966
*         END;                                                     0967
*     END;                                                         0968
*   ELSE                                                           0969
*     ;                                                            0969
@RF00956 DS    0H                                                  0970
*   RRETURN=OPCWRKSP(4);            /* RESTORE RETURN ADDR           */
@RC00956 L     RRETURN,OPCWRKSP+12(,ROPCAVT)                       0970
*   RETURN;                                                        0971
@EL00012 DS    0H                                                  0971
@EF00012 DS    0H                                                  0971
@ER00012 BR    @14                                                 0971
*   END;                            /* END OF NORMEXIT               */
*                                                                  0973
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE STATUS IN AN ERROR SITUATION THIS ROUTINE IS CALLED BY */
*   /* ERREXIT                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0973
*ERRSTAT:                                                          0973
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0973
ERRSTAT  DS    0H                                                  0974
*   OPCWRKSP(7)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+24(,ROPCAVT)                       0974
*   IF OCALLFLG=ON THEN                                            0975
         TM    OCALLFLG(ROPCE),B'00000100'                         0975
         BNO   @RF00975                                            0975
*     DO;                           /* IF GRP,ALL PROCESSING         */
*       IF OCSOME=OFF THEN                                         0977
         TM    OCSOME(ROPCE),B'00000010'                           0977
         BNZ   @RF00977                                            0977
*         DO;                       /* IF NO LINES STARTED OR STATE
*                                      INDICATOR IS UNSET, CHANGE  0978
*                                      STATE TO NO LINES STARTED     */
*           OCNONE=ON;              /* NO LINES STARTED              */
         OI    OCNONE(ROPCE),B'00000001'                           0979
*           OPCWRKSP(1)=MSG512;     /* SET UP MSG NUMBER             */
         MVC   OPCWRKSP(4,ROPCAVT),@CF00972                        0980
*         END;                                                     0981
*       ELSE                                                       0982
*         DO;                                                      0982
         B     @RC00977                                            0982
@RF00977 DS    0H                                                  0983
*           OCNONE=OFF;             /* IF SOME OR ALL LINES STARTED
*                                      INDICATOR ON,CHANGE STATE TO
*                                      SOME STARTED                  */
         NI    OCNONE(ROPCE),B'11111110'                           0983
*           OPCWRKSP(1)=MSG511;     /* SET UP MSG NUMBER             */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03017                        0984
*         END;                                                     0985
*       CALL CHKMORE;               /* CHECK FOR MORE LINES          */
@RC00977 BAL   @14,CHKMORE                                         0986
*     END;                                                         0987
*   ELSE                                                           0988
*     ;                                                            0988
@RF00975 DS    0H                                                  0989
*   RRETURN=OPCWRKSP(7);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+24(,ROPCAVT)                       0989
*   RETURN;                                                        0990
@EL00013 DS    0H                                                  0990
@EF00013 DS    0H                                                  0990
@ER00013 BR    @14                                                 0990
*   END;                            /* END OF ERRSTAT                */
*                                                                  0992
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE ALL STATUS IN NORMAL PROCESSING THIS ROUTINE IS CALLED */
*   /* BY NORMEXIT                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0992
*NORMSTAT:                                                         0992
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0992
NORMSTAT DS    0H                                                  0993
*   OPCWRKSP(5)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+16(,ROPCAVT)                       0993
*   IF OCALLFLG=ON THEN                                            0994
         TM    OCALLFLG(ROPCE),B'00000100'                         0994
         BNO   @RF00994                                            0994
*     DO;                           /* IF GRP,ALL PROCESSING         */
*       IF(OCSOME=OFF&OCNONE=OFF)×(OCSOME=ON&OCNONE=ON) THEN       0996
         TM    OCSOME(ROPCE),B'00000011'                           0996
         BZ    @RT00996                                            0996
         TM    OCSOME(ROPCE),B'00000011'                           0996
         BNO   @RF00996                                            0996
@RT00996 DS    0H                                                  0997
*         DO;                       /* IF THIS IS 1ST SUCCESSFUL LINE
*                                      START OR ALL HAVE BEEN      0997
*                                      SUCESSFUL,THEN DO             */
*           OCSOME=ON;              /* INDICATE ALL SUCCESSFUL       */
*           OCNONE=ON;                                             0999
         OI    OCSOME(ROPCE),B'00000011'                           0999
*           OPCWRKSP(1)=MSG510;     /* MSG NUMBER 510                */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03015                        1000
*         END;                                                     1001
*       ELSE                                                       1002
*         DO;                       /* IF NOT ALL HAVE BEEN SUCC     */
         B     @RC00996                                            1002
@RF00996 DS    0H                                                  1003
*           OCSOME=ON;              /* INDICATE SOME STARTED         */
*           OCNONE=OFF;                                            1004
         OI    OCSOME(ROPCE),B'00000010'                           1004
         NI    OCNONE(ROPCE),B'11111110'                           1004
*           OPCWRKSP(1)=MSG511;     /* SET UP MSG NUMBER             */
         MVC   OPCWRKSP(4,ROPCAVT),@CF03017                        1005
*         END;                                                     1006
*       CALL CHKMORE;               /* MORE LINES TO PROCESS?        */
@RC00996 BAL   @14,CHKMORE                                         1007
*     END;                                                         1008
*   ELSE                                                           1009
*     ;                                                            1009
@RF00994 DS    0H                                                  1010
*   RRETURN=OPCWRKSP(5);            /* RESTORE RETURN ADDR           */
         L     RRETURN,OPCWRKSP+16(,ROPCAVT)                       1010
*   RETURN;                                                        1011
@EL00014 DS    0H                                                  1011
@EF00014 DS    0H                                                  1011
@ER00014 BR    @14                                                 1011
*   END;                            /* END OF NORMSTAT               */
*                                                                  1013
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL INVOCATION PROCESSING THIS ROUTINE IS CALLED BY      */
*   /* ERREXIT,NORMEXIT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1013
*INTRINVK:                                                         1013
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1013
INTRINVK DS    0H                                                  1014
*   RZERO=OPCWRKSP(1);              /* SET UP MSG NUMBER             */
         L     RZERO,OPCWRKSP(,ROPCAVT)                            1014
*   OCPARM=RZERO;                   /* SAVE INOPCE                   */
         STH   RZERO,OCPARM(,ROPCE)                                1015
*   OPCMODID=OCWTG;                 /* RETURN TO CALLER              */
         MVC   OPCMODID(2,ROPCAVT),OCWTG(ROPCE)                    1016
*   OCWTG=0;                        /* NO RETURN                     */
         SLR   @15,@15                                             1017
         STH   @15,OCWTG(,ROPCE)                                   1017
*   IF OPCMODID=MOD07 THEN                                         1018
         CLC   OPCMODID(2,ROPCAVT),@CC03040                        1018
         BNE   @RF01018                                            1018
*     DO;                           /* IF EXIT IS TO IGC0710D        */
*       RZERO=0;                    /* CLEAR RZERO                   */
         SLR   RZERO,RZERO                                         1020
*       OCPARM=RZERO;               /* CLEAR OCPARM                  */
         STH   RZERO,OCPARM(,ROPCE)                                1021
*     END;                                                         1022
*   ELSE                                                           1023
*     ;                                                            1023
@RF01018 DS    0H                                                  1024
*   RETURN;                                                        1024
@EL00015 DS    0H                                                  1024
@EF00015 DS    0H                                                  1024
@ER00015 BR    @14                                                 1024
*   END;                            /* END OF INTRINVK               */
*                                                                  1026
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON NON-INTERNAL EXIT PROCESSING THIS ROUTINE IS CALLED BY */
*   /* ERREXIT,NORMEXIT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1026
*NONINTEX:                                                         1026
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1026
NONINTEX DS    0H                                                  1027
*   IF OCTOTE=ON THEN                                              1027
         TM    OCTOTE(ROPCE),B'01000000'                           1027
         BNO   @RF01027                                            1027
*     DO;                           /* IF TOTE INPUT                 */
*       OCWTG=MOD07;                /* SET EXIT TO IGC0710D          */
         MVC   OCWTG(2,ROPCE),@CC03040                             1029
*       OCPARM=RPARM;               /* SAVE RETURN CODE              */
         STH   RPARM,OCPARM(,ROPCE)                                1030
*       RZERO=RPARM;                /* RETURN CODE                   */
         LR    RZERO,RPARM                                         1031
*       IF OPCMODID=MOD03 THEN                                     1032
         CLC   OPCMODID(2,ROPCAVT),@CC03042                        1032
         BNE   @RF01032                                            1032
*         DO;                       /* IF EXIT IS TO ERROR MOD       */
*           OPCMODID=MOD07;         /* GO TO MSG MODULE              */
         MVC   OPCMODID(2,ROPCAVT),@CC03040                        1034
*           OCWTG=0;                /* NO RETURN                     */
         SLR   @15,@15                                             1035
         STH   @15,OCWTG(,ROPCE)                                   1035
*         END;                                                     1036
*       ELSE                                                       1037
*         ;                                                        1037
@RF01032 DS    0H                                                  1038
*     END;                                                         1038
*   ELSE                                                           1039
*     ;                                                            1039
@RF01027 DS    0H                                                  1040
*   IF OPCWRKSP(1)^=MSG199 THEN     /* IS THIS MSG IED199I?  @YM09054*/
         CLC   OPCWRKSP(4,ROPCAVT),@CF03013                        1040
         BE    @RF01040                                            1040
*     OCUNIT=BADTIC;                /* INDICATE INVALID TIC ADDR     */
         MVC   OCUNIT(4,ROPCE),@CF02988                            1041
*   ELSE                                                           1042
*     ;                             /* IF IED199I, DO NOT RESET    1042
*                                      OCUNIT                @YM09054*/
@RF01040 DS    0H                                                  1043
*   RETURN;                                                        1043
@EL00016 DS    0H                                                  1043
@EF00016 DS    0H                                                  1043
@ER00016 BR    @14                                                 1043
*   END;                            /* END OF NONINTEX               */
*                                                                  1045
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR MORE LINES THIS ROUTINE IS CALLED BY                */
*   /* NORMSTAT,ERRSTAT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1045
*CHKMORE:                                                          1045
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1045
CHKMORE  DS    0H                                                  1046
*   RESPECIFY                                                      1046
*    (RWORK6) RSTD;                 /*                       @ZM46522*/
*   OPCWRKSP(6)=RRETURN;            /* SAVE RETURN ADDR              */
         ST    RRETURN,OPCWRKSP+20(,ROPCAVT)                       1047
*   RPARM=RTERM;                    /*                       @ZM46522*/
         LR    RPARM,RTERM                                         1048
*   RPARM=RPARM-LENGTH(IEDNTRM);    /* BACK UP FOR NEG PREFIX      1049
*                                                            @ZM46522*/
         SH    RPARM,@CH00954                                      1049
*   DO UNTIL((RPARM->TRMTYPE=TRMGRP)×(RPARM->TRMRSACT=OFF));/* INSURE
*                                      THAT A VALID ENTRY IS FOUND 1050
*                                                            @ZM46522*/
@DL01050 DS    0H                                                  1051
*     RWORK6=RPARM->TRMCOHTG;       /* SAVE TTCIN FOR OPC UPDATE   1051
*                                                            @ZM46522*/
         SLR   @15,@15                                             1051
         ICM   @15,3,TRMCOHTG(RPARM)                               1051
         LR    RWORK6,@15                                          1051
*     RPARM=RPARM->TRMCOHTG;        /* GET COHORT G PTR              */
         LR    RPARM,@15                                           1052
*     CALL IEDQTNT;                 /* CONVERT TO TTE                */
         L     @15,AVTRNMPT(,IEDQAPTR)                             1053
         BALR  @14,@15                                             1053
*     RPARM=RPARM-LENGTH(IEDNTRM);  /* BACK UP TO NEG PREFIX ADDR    */
         SH    RPARM,@CH00954                                      1054
*     OCRLN=OCRLN+1;                /* INCREMENT RLN FOR MSG     @Q1A*/
         LA    @15,1                                               1055
         SLR   @07,@07                                             1055
         IC    @07,OCRLN(,ROPCE)                                   1055
         ALR   @15,@07                                             1055
         STC   @15,OCRLN(,ROPCE)                                   1055
*   END;                            /*                       @ZM46522*/
@DE01050 CLI   TRMTYPE(RPARM),X'00'                                1056
         BE    @DC01050                                            1056
         TM    TRMRSACT(RPARM),B'10000000'                         1056
         BNZ   @DL01050                                            1056
@DC01050 DS    0H                                                  1057
*   IF RPARM->TRMTYPE=TRMGRP THEN                                  1057
         CLI   TRMTYPE(RPARM),X'00'                                1057
         BNE   @RF01057                                            1057
*     MORELINE=OFF;                 /* IF TTE IS FOR GROUP THEN NO 1058
*                                      MORE LINES TOPROC             */
         NI    MORELINE(ROPCAVT),B'10111111'                       1058
*   ELSE                                                           1059
*     DO;                           /* MORE LINES TO PROCESS         */
         B     @RC01057                                            1059
@RF01057 DS    0H                                                  1060
*       MORELINE=ON;                /* SET INDICATOR                 */
         OI    MORELINE(ROPCAVT),B'01000000'                       1060
*       OCTRMTBL=RWORK6;            /* SET NEXT LINE TO PROC @ZM46522*/
         STH   RWORK6,OCTRMTBL(,ROPCE)                             1061
*     END;                                                         1062
*   RRETURN=OPCWRKSP(6);            /* RELOAD RETURN ADDR            */
@RC01057 L     RRETURN,OPCWRKSP+20(,ROPCAVT)                       1063
*   RESPECIFY                                                      1064
*    (RWORK6) UNRSTD;               /*                       @ZM46522*/
*   RETURN;                                                        1065
@EL00017 DS    0H                                                  1065
@EF00017 DS    0H                                                  1065
@ER00017 BR    @14                                                 1065
*   END;                            /* END OF CHKMORE                */
*   END                             /* IGCVI10D END                  */
*                                                                  1067
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (TDEBD   )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (TNSLD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPRED  )                                       */
*/*%INCLUDE SYSLIB  (TPRIOR  )                                       */
*/*%INCLUDE SYSLIB  (TQCBD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  1067
*       ;                                                          1067
@DATA    DS    0H
@CH00954 DC    H'28'
@CH00924 DC    H'36'
         DS    0F
         DS    0F
@CF00256 DC    F'4'
@CF00046 DC    F'8'
@CF03007 DC    F'19'
@CF03005 DC    F'49'
@CF03026 DC    F'102'
@CF03013 DC    F'199'
@CF03011 DC    F'210'
@CF03009 DC    F'400'
@CF03003 DC    F'443'
@CF03015 DC    F'510'
@CF03017 DC    F'511'
@CH03017 EQU   @CF03017+2
@CF00972 DC    F'512'
@CF03137 DC    F'-13'
@CF03140 DC    F'-12'
@CF03138 DC    F'-11'
@CF03141 DC    F'-10'
@CF01974 DC    F'-3'
@CF02988 DC    XL4'08000002'
@CF02999 DC    XL4'00FFFFFF'
         DS    0D
@CC03056 DC    C'    RNCP'
@CC03036 DC    C'06'
@CC03038 DC    C'09'
@CC03040 DC    C'07'
@CC03042 DC    C'03'
@CC03044 DC    C'A0'
@CC03046 DC    C'VI'
@CC03048 DC    C'VK'
@CC03050 DC    C'00'
@CC03052 DC    C'FA'
VIFLG    DC    X'FF'
ZAPAREA  DC    60X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IEDQAPTR EQU   @04
IEDNSLP  EQU   @03
ROPCE    EQU   @03
ROPCAVT  EQU   @02
IEDQTPTR EQU   @05
RTERM    EQU   @05
RNSL     EQU   @03
RZERO    EQU   @00
RPARM    EQU   @01
ROPRE    EQU   @03
RAVT     EQU   @04
RWORK6   EQU   @06
RWORK7   EQU   @07
RSAVE    EQU   @13
RRETURN  EQU   @14
RLINK    EQU   @15
RWORK10  EQU   @10
RWORK11  EQU   @11
RWORK8   EQU   @08
RWORK9   EQU   @09
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00078 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSCLU EQU   IEDNSVTD+168
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IHADCB   EQU   0
IHADCS1A EQU   0
DCBBCKUP EQU   IHADCS1A+8
IHADCS2K EQU   0
DCBDUMPD EQU   IHADCS2K
DCBTRSTA EQU   IHADCS2K+5
DCBDSORG EQU   IHADCS2K+6
DCBDSRG2 EQU   DCBDSORG+1
DCBRNCKD EQU   IHADCS2K+12
DCBEXLST EQU   IHADCS2K+16
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS43 EQU   0
DCBSCTAB EQU   IHADCS43
IEDQDEB  EQU   0
DEBPRF   EQU   IEDQDEB
DEBAPVT  EQU   DEBPRF
DEBNMSUB EQU   IEDQDEB+36
DEBNMEXT EQU   IEDQDEB+52
DEBDEVDP EQU   IEDQDEB+68
DEBUCBS  EQU   DEBDEVDP
IEDQDPTR EQU   0
DEBDASD  EQU   0
DEBUCBPT EQU   DEBDASD
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00117 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMIHTI EQU   UCBCMEXT+16
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IEDNNSLD EQU   0
IEDNSLD  EQU   0
NSLPLCB  EQU   IEDNSLD+8
NSLGPCUS EQU   IEDNSLD+12
NSLERB   EQU   IEDNSLD+20
NSLESTAT EQU   NSLERB+8
NSLUNCNT EQU   NSLERB+12
NSLGRPNM EQU   IEDNSLD+36
NSLTTEBG EQU   NSLGRPNM
NSLTTEPT EQU   IEDNSLD+44
IEDQOPCE EQU   0
OCLINK   EQU   IEDQOPCE
OCELEM   EQU   IEDQOPCE+4
OCELMPRI EQU   OCELEM
OCELMPTR EQU   OCELEM+1
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
@NM00124 EQU   OCRUDEST+1
OCUNITBF EQU   @NM00124+2
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCTOTE   EQU   OCFLAG
OCATTACH EQU   OCFLAG
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
OCLOCAD  EQU   OCRLN
OCCIB    EQU   IEDQOPCE+16
OCMSTSAV EQU   OCCIB
OCDEST   EQU   OCMSTSAV
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCWTGB   EQU   OCTIOT
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCRENTRD EQU   OCALSTAT
OCFNAALL EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCNONE   EQU   OCALSTAT
OCFLAG1  EQU   OCRSID+1
OCLNTYP  EQU   OCFLAG1
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCBUFNED EQU   OCBACKUP
OCCOUNT1 EQU   OCBUFNED
OCBUFGOT EQU   OCBACKUP+2
OCCOUNT2 EQU   OCBUFGOT
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCPTRSAV EQU   OCMODNME+4
OCECHOPT EQU   OCPTRSAV
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OC379RRT EQU   OCRSTGTM
OCNCP    EQU   OCRSTGTM+2
OCOID    EQU   IEDQOPCE+56
OCFLOADP EQU   IEDQOPCE+60
OCLSTTC  EQU   OCFLOADP
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDQOPCD EQU   0
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCTRACE EQU   IEDQOPCD+32
OPCSAVE  EQU   IEDQOPCD+56
OPCFLAG1 EQU   IEDQOPCD+146
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCMODID EQU   OPCLDNME+3
OPCHORT  EQU   IEDQOPCD+256
OPCGETBF EQU   IEDQOPCD+276
OPCFREBF EQU   IEDQOPCD+280
OPCSPEC  EQU   IEDQOPCD+300
OPCWRKSP EQU   IEDQOPCD+320
OPCWAITV EQU   IEDQOPCD+364
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
OPCSESS  EQU   IEDQOPCD+384
OPCSFLAG EQU   OPCSESS
OPCCSIB  EQU   OPCSESS+4
OPCSENSE EQU   OPCSESS+8
OPCSNSSY EQU   OPCSENSE
OPCSNSUS EQU   OPCSENSE+2
OPCPCID  EQU   IEDQOPCD+456
OPCUNIQP EQU   OPCPCID+2
OPCSESSF EQU   IEDQOPCD+464
IEDOPRED EQU   0
OPREPRI  EQU   IEDOPRED+4
OPRESAVE EQU   IEDOPRED+8
OPRETIC  EQU   OPRESAVE
OPRVTCHK EQU   OPRETIC+3
OPREFLG1 EQU   IEDOPRED+12
OPREFLG3 EQU   IEDOPRED+14
IEDQQCB  EQU   0
QCBDSFLG EQU   IEDQQCB
QCBDISK  EQU   QCBDSFLG
QCBELCHN EQU   IEDQQCB+1
QCBEOLDT EQU   IEDQQCB+16
QCBBYTE1 EQU   QCBEOLDT+1
QCBLKRLN EQU   IEDQQCB+18
QCBRETCT EQU   QCBLKRLN
QCBSTAT  EQU   IEDQQCB+19
QCBINSRC EQU   IEDQQCB+21
QCBNBACK EQU   QCBINSRC
QCBTSOF2 EQU   QCBNBACK+1
QCBINHBN EQU   QCBTSOF2
QCBTSOF1 EQU   QCBNBACK+2
QCBINTVL EQU   IEDQQCB+24
QCBEXTO  EQU   QCBINTVL
QCBPREN  EQU   IEDQQCB+28
QCBSLPIU EQU   QCBPREN
QCBLKRRN EQU   QCBSLPIU+1
QCBRELLN EQU   IEDQQCB+32
QCBDCBAD EQU   IEDQQCB+33
QCBFLAG  EQU   IEDQQCB+36
IEDQQPTR EQU   0
IEDQPQCB EQU   0
QCBFHDLZ EQU   IEDQPQCB+3
QCBFHDTZ EQU   IEDQPQCB+6
QCBINTLF EQU   IEDQPQCB+12
IEDNQCB  EQU   0
QCBSTAT1 EQU   IEDNQCB+4
QCBPLCBA EQU   IEDNQCB+5
QCBPASCF EQU   0
QCBASCFG EQU   QCBPASCF
IEDRQCBP EQU   0
IEDRATIQ EQU   0
IEDQTNTD EQU   0
TNTSTART EQU   IEDQTNTD+82
IEDQNPTR EQU   0
IEDTNTA  EQU   0
IEDNTRM  EQU   0
TRMSABPT EQU   IEDNTRM
TRMACTDV EQU   IEDNTRM+4
TRMDIALQ EQU   TRMACTDV+1
TRMBYTE8 EQU   TRMDIALQ+1
TRMBYTE7 EQU   TRMDIALQ+2
TRMATNDX EQU   IEDNTRM+8
TRMASNDX EQU   TRMATNDX
TRMLKCHN EQU   TRMASNDX
TRMINDEX EQU   IEDNTRM+10
TRMCDST  EQU   TRMINDEX
TRMCOHTG EQU   IEDNTRM+12
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+14
TRMBYTE3 EQU   IEDNTRM+15
TRMBYTE2 EQU   IEDNTRM+16
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+17
TRMSCPRQ EQU   TRMBYTE1
TRMSTOTE EQU   TRMBYTE1
TRMCOHRT EQU   IEDNTRM+18
TRMBYTE0 EQU   IEDNTRM+20
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+21
TRMLTRAC EQU   TRMSIBPT
TRMLBUFR EQU   TRMLTRAC
TRMRLMCT EQU   IEDNTRM+24
TRMLGBST EQU   TRMRLMCT
TRMTYPE  EQU   IEDNTRM+25
TRMSUBST EQU   IEDNTRM+26
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMSTEAL EQU   TRMPRILK
TRMTGNUM EQU   TRMSTEAL
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMAPB   EQU   TRMSTAT
TRMSIO   EQU   TRMAPB
TRMOWNER EQU   TRMSIO
TRMSENSE EQU   TRMAPB+3
TRMNTPRC EQU   0
TRMTPRC0 EQU   TRMNTPRC
GRPNAME  EQU   0
QCTLPARM EQU   0
QCTLWRD1 EQU   QCTLPARM
QCTLWRD2 EQU   QCTLPARM+4
ALLOCBUF EQU   0
IEDQTNT  EQU   0
COHORTLK EQU   0
DEBSUBR  EQU   0
FREEBUF  EQU   0
QCBLDCB  EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   46
TNTNAME  EQU   0
UCBBGN   EQU   0
UCBDCPTR EQU   0
DCBPTR   EQU   QCBDCBAD
DEBUCB   EQU   DEBUCBS
DEBDVMOD EQU   DEBUCB
DEBUCBAD EQU   DEBUCB+1
UCBPTR   EQU   DEBUCBAD
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00116 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
OCTG     EQU   OCFLAG1
@NM00130 EQU   OCTG
OCMISCFG EQU   OCFLAG1
@NM00133 EQU   OCCKDATA
OCCURVR  EQU   @NM00133
@NM00135 EQU   OCCIB
OCSTAT   EQU   @NM00135+1
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
@NM00140 EQU   OCBACKUP
OCROUTE  EQU   OCFLAG1
OCBOTH   EQU   OCROUTE
@NM00142 EQU   OCCKDATA
OCMSGFLG EQU   OCPREFLG
OCBKUP1  EQU   OCMODNME
OCTARTTC EQU   OCBKUP1+4
@NM00146 EQU   OCMODNME
OCCSIB   EQU   @NM00146
OCBKUP2  EQU   OCCKDATA
OCBKUP3  EQU   OCLDNME
OCRESPTR EQU   OCBKUP3+4
OCDIALLN EQU   OCRESPTR
OCIPLDMP EQU   OCLDNME+4
@NM00151 EQU   OCLDNME
OCERSTAT EQU   @NM00151
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
@NM00194 EQU   QCBFHDLZ
@NM00208 EQU   TRMSTATE
TRMPUSST EQU   TRMBYTE7
TRMLUFD0 EQU   TRMBYTE7
TRMSNAST EQU   TRMBYTE6
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMLS1   EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMIPLDM EQU   TRMNCP
TRMNCP2  EQU   TRMBYTE8
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TRMEPMOD EQU   TRMLINK
FLAGS    EQU   OPCFLAG1
FIRSTREQ EQU   FLAGS
MORELINE EQU   FLAGS
EXITFLAG EQU   FLAGS
SWITCH01 EQU   FLAGS
OCCOSNME EQU   OCLDNME
OCLINRRT EQU   OCTRUNIT
OCPCID   EQU   OCBACKUP
OCRCVSZ  EQU   OCOID
OCRSNCDE EQU   OCALSTAT
OCSENSE  EQU   OCBACKUP
OCSNTSZ  EQU   OCRLN
TNTFIRST EQU   TNTSTART
TRMASCMH EQU   TRMBYTE1
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
TRMSRPTR EQU   TRMPLIM
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00225 EQU   FLAGS
TRMLDISC EQU   TRMLINK
TRMVSRL  EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00222 EQU   TRMCDMGR
@NM00221 EQU   TRMCDMGR
@NM00220 EQU   TRMCDMGR
@NM00219 EQU   TRMCDMGR
TRMCDRDR EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
@NM00218 EQU   TRMLU
@NM00217 EQU   TRMLU
@NM00216 EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMNTODS EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
@NM00215 EQU   TRMNCP2
TRMSAVFY EQU   TRMNCP2
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMCONN  EQU   TRMIPLDM
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00214 EQU   TRMLINK1
TRMDIRCA EQU   TRMLINK1
TRMDICAL EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
TRMLUNAS EQU   TRMLU1
TRMCDSRQ EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
TRMSPURG EQU   TRMLU1
TRMCPOPT EQU   TRMLU1
TRMCPREQ EQU   TRMLU1
TRMINNLK EQU   TRMNCP1
TRMSANDX EQU   TRMNCP1
TRMDYDMP EQU   TRMNCP1
TRMCCPND EQU   TRMNCP1
TRMSNA4  EQU   TRMNCP1
TRMANS   EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
@NM00213 EQU   TRMLS1
TRMCBIU  EQU   TRMLS1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00212 EQU   TRMSNAST
TRMDRSRC EQU   TRMSNAST
@NM00211 EQU   TRMLUFD0
TRMRMTMA EQU   TRMLUFD0
TRMNHDRN EQU   TRMLUFD0
TRMNOINP EQU   TRMLUFD0
TRMASSOC EQU   TRMLUFD0
TRMAUTO  EQU   TRMLUFD0
TRMCONTP EQU   TRMPUSST
@NM00210 EQU   TRMPUSST
@NM00209 EQU   @NM00208
TRMENTRY EQU   @NM00208
QCBPFEFO EQU   @NM00194+1
QCBDATFL EQU   @NM00194
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
@NM00152 EQU   @NM00151+5
OCUNDFER EQU   OCERSTAT+4
OCINOPER EQU   OCERSTAT+3
OCOPER   EQU   OCERSTAT+2
OCINACER EQU   OCERSTAT+1
OCACTER  EQU   OCERSTAT
@NM00150 EQU   OCIPLDMP
OCDYDMP  EQU   OCIPLDMP
OCACTRQ  EQU   OCIPLDMP
OCDACRQ  EQU   OCIPLDMP
OCIPLRQ  EQU   OCIPLDMP
OCDMPRQ  EQU   OCIPLDMP
@NM00149 EQU   OCRESPTR+2
OCOHNATA EQU   OCDIALLN
OCRRTPTR EQU   OCBKUP3
@NM00148 EQU   OCBKUP2+4
OCNHITTC EQU   OCBKUP2+2
OCLINTTC EQU   OCBKUP2
@NM00147 EQU   @NM00146+4
OCCSAB   EQU   OCCSIB
@NM00145 EQU   OCBKUP1+6
OCLNKTNT EQU   OCTARTTC
OCSRTTC  EQU   OCBKUP1+2
OCRSTTC  EQU   OCBKUP1
@NM00144 EQU   OCMSGFLG
OCRRT    EQU   OCMSGFLG
OCNAME   EQU   OCMSGFLG
OCLU1TTE EQU   @NM00142+5
OCSFLAG  EQU   @NM00142+4
OCLU2TTI EQU   @NM00142+2
OCLU1TTI EQU   @NM00142
@NM00141 EQU   OCROUTE
OCTEST   EQU   OCROUTE
OCINOP   EQU   OCBOTH
OCOP     EQU   OCBOTH
OCDISTLN EQU   @NM00140+6
OCDISTAD EQU   @NM00140+2
OCDISTNA EQU   @NM00140
OCICINAC EQU   OCICSW
@NM00139 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00138 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00137 EQU   @NM00135+2
@NM00136 EQU   OCSTAT
OCDCDRM  EQU   OCSTAT
OCTSTAT  EQU   OCSTAT
OCREASON EQU   @NM00135
@NM00134 EQU   @NM00133+4
OCOIDEP  EQU   OCCURVR
@NM00132 EQU   OCMISCFG
OCCONRRT EQU   OCMISCFG
OCINTRNL EQU   OCMISCFG
OCLSCBS  EQU   OCMISCFG
OCTGTRRQ EQU   OCMISCFG
OCTRMRQD EQU   OCMISCFG
OCNODISC EQU   OCMISCFG
@NM00131 EQU   OCTG
OCALLNKS EQU   OCTG
OCINACT  EQU   @NM00130
OCACT    EQU   @NM00130
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00116
UCBSKPFG EQU   @NM00116
UCBRIPND EQU   @NM00116
UCBRTIAC EQU   @NM00116
UCBRSV79 EQU   @NM00116
UCBRSV78 EQU   @NM00116
UCBRSV77 EQU   @NM00116
UCBOLTEP EQU   @NM00116
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00115 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
@NM00227 EQU   QCTLWRD2+1
QCTLEND  EQU   QCTLWRD2
@NM00226 EQU   QCTLWRD1+1
QCTLREQ  EQU   QCTLWRD1
@NM00224 EQU   TRMNTPRC+1
@NM00223 EQU   TRMTPRC0
TRMRAPIT EQU   TRMTPRC0
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMLOCAD EQU   TRMSENSE
TRMTEMPR EQU   TRMAPB+2
TRMNADDR EQU   TRMOWNER
@NM00207 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00206 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00205 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMTGCON EQU   TRMTGNUM+1
TRMTGRRT EQU   TRMTGNUM
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00204 EQU   TRMRSTRT
@NM00203 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLBUFR+1
TRMGPCNT EQU   TRMLBUFR
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMCINOP EQU   TRMCDF0
TRMRSTPD EQU   TRMCDF0
TRMCLNXI EQU   TRMCDF0
TRMDVAS0 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMLSNCP EQU   TRMCDST
TRMDRTYC EQU   TRMLKCHN
TRMBYTE9 EQU   TRMDIALQ
TRMBYTEA EQU   TRMACTDV
TRMRECON EQU   TRMSABPT+2
TRMILSA  EQU   TRMSABPT
TNTTRMAD EQU   IEDTNTA
@NM00202 EQU   IEDQTNTD+46
TNTLEN   EQU   IEDQTNTD+44
@NM00201 EQU   IEDQTNTD+41
TNTENLEN EQU   IEDQTNTD+40
@NM00200 EQU   IEDQTNTD+38
@NM00199 EQU   IEDQTNTD
@NM00198 EQU   IEDRATIQ
QCBSTGQA EQU   IEDRQCBP+4
QCBSTGQL EQU   IEDRQCBP
@NM00197 EQU   QCBPASCF+1
@NM00196 EQU   QCBASCFG
QCBTRMNG EQU   QCBASCFG
QCBTTCIN EQU   QCBPLCBA+1
@NM00195 EQU   QCBPLCBA
QCBRAPMH EQU   QCBSTAT1
QCBFLUSH EQU   QCBSTAT1
QCBNDXRQ EQU   QCBSTAT1
QCBESIG  EQU   QCBSTAT1
QCBRCVRQ EQU   QCBSTAT1
QCBSNDRQ EQU   QCBSTAT1
QCBWAITC EQU   QCBSTAT1
QCBPLCBN EQU   QCBSTAT1
QCBCHAIN EQU   IEDNQCB
QCBPQBCK EQU   IEDQPQCB+25
QCBPRIPQ EQU   IEDQPQCB+24
QCBCFHDR EQU   IEDQPQCB+21
QCBLFEFO EQU   IEDQPQCB+18
QCBFFEFO EQU   IEDQPQCB+15
QCBPREVF EQU   QCBINTLF
QCBINTFF EQU   IEDQPQCB+9
QCBDATSQ EQU   QCBFHDTZ+1
@NM00193 EQU   QCBFHDTZ
QCBDNHDR EQU   IEDQPQCB
QCBQBACK EQU   IEDQQCB+37
QCBCKPT  EQU   QCBFLAG
QCBPROC  EQU   QCBFLAG
QCBSDFFO EQU   QCBFLAG
QCBTERMQ EQU   QCBFLAG
QCBRSRV  EQU   QCBFLAG
QCBREAD  EQU   QCBFLAG
QCBNOBRK EQU   QCBFLAG
QCBTSSES EQU   QCBFLAG
QCBLGBAD EQU   QCBDCBAD
QCBTJID  EQU   QCBLKRRN+1
QCBCARCT EQU   QCBLKRRN
QCBPRLVL EQU   QCBSLPIU
QCBMSGCT EQU   IEDQQCB+26
QCBRBACK EQU   QCBEXTO
QCBDISC  EQU   QCBTSOF1
QCBDELAY EQU   QCBTSOF1
QCBPARTO EQU   QCBTSOF1
QCBSATRD EQU   QCBTSOF1
QCBNOBUF EQU   QCBTSOF1
QCBTPUT  EQU   QCBTSOF1
QCBTGET  EQU   QCBTSOF1
QCBWRBRK EQU   QCBTSOF1
QCBSATLC EQU   QCBTSOF2
QCBSATTI EQU   QCBTSOF2
QCBSATCH EQU   QCBTSOF2
QCBSIMRD EQU   QCBTSOF2
QCBDSSMI EQU   QCBTSOF2
QCBPOSTO EQU   QCBTSOF2
QCBBUFQ  EQU   QCBTSOF2
QCBMTP   EQU   QCBINHBN
QCBSATCT EQU   QCBNBACK
QCBSCBOF EQU   IEDQQCB+20
QCBTIME  EQU   QCBSTAT
QCBCLOCK EQU   QCBSTAT
QCBSCHDL EQU   QCBSTAT
QCBSMODE EQU   QCBSTAT
QCBSEND  EQU   QCBSTAT
QCBBUFRD EQU   QCBSTAT
QCBTRMHO EQU   QCBSTAT
QCBEOM   EQU   QCBSTAT
QCBHUCT  EQU   QCBRETCT
QCBIEND  EQU   QCBRETCT
QCBEND   EQU   QCBRETCT
QCBNL    EQU   QCBRETCT
QCBLOGCT EQU   QCBRETCT
@NM00192 EQU   QCBBYTE1
QCBRITRM EQU   QCBBYTE1
@NM00191 EQU   QCBEOLDT
QCBSLINK EQU   IEDQQCB+13
QCBSTPRI EQU   IEDQQCB+12
QCBSTCHN EQU   IEDQQCB+9
QCBSTVTO EQU   IEDQQCB+8
QCBLINK  EQU   IEDQQCB+5
QCBPRI   EQU   IEDQQCB+4
QCBCNTEN EQU   QCBELCHN+2
@NM00190 EQU   QCBELCHN+2
@NM00189 EQU   QCBELCHN
QCBHELD  EQU   QCBDSFLG
QCBFQCB  EQU   QCBDSFLG
QCBDRQQ  EQU   QCBDSFLG
QCBALTMH EQU   QCBDSFLG
QCBREUS  EQU   QCBDISK
QCBNREUS EQU   QCBDISK
QCBCORE  EQU   QCBDSFLG
QCBTSQ   EQU   QCBDSFLG
@NM00188 EQU   OPREFLG3
OPREATCH EQU   OPREFLG3
@NM00187 EQU   OPREFLG3
OPREFLG2 EQU   IEDOPRED+13
@NM00186 EQU   OPRVTCHK
OPRITSET EQU   OPRVTCHK
@NM00185 EQU   OPRVTCHK
@NM00184 EQU   OPRETIC
OPRELINK EQU   IEDOPRED+5
OPREQCB  EQU   IEDOPRED+1
OPREKEY  EQU   IEDOPRED
OPCBOTTM EQU   IEDQOPCD+11936
OPCTNLEX EQU   IEDQOPCD+11920
@NM00183 EQU   IEDQOPCD+7152
OPCTNIEX EQU   IEDQOPCD+7136
OPCTNHEX EQU   IEDQOPCD+7120
OPCTCLEX EQU   IEDQOPCD+7104
@NM00182 EQU   IEDQOPCD+2336
OPCTCIEX EQU   IEDQOPCD+2320
OPCTCHEX EQU   IEDQOPCD+2304
@NM00181 EQU   IEDQOPCD+2272
OPCTTRC  EQU   IEDQOPCD+2104
OPCRHOLD EQU   IEDQOPCD+2040
OPCADCB  EQU   IEDQOPCD+1864
OPCTRCAD EQU   IEDQOPCD+1860
OPCADROP EQU   IEDQOPCD+1856
@NM00180 EQU   IEDQOPCD+1806
OPCNAM   EQU   IEDQOPCD+1798
@NM00179 EQU   IEDQOPCD+1796
OPCBLIST EQU   IEDQOPCD+1794
@NM00178 EQU   IEDQOPCD+1793
@NM00177 EQU   IEDQOPCD+1792
@NM00176 EQU   IEDQOPCD+1789
@NM00175 EQU   IEDQOPCD+1788
OPCBLDL  EQU   IEDQOPCD+1784
@NM00174 EQU   IEDQOPCD+1712
OPCDSRWT EQU   IEDQOPCD+1708
@NM00173 EQU   IEDQOPCD+1616
@NM00172 EQU   IEDQOPCD+1420
@NM00171 EQU   IEDQOPCD+1412
@NM00170 EQU   IEDQOPCD+612
@NM00169 EQU   IEDQOPCD+611
OPCLSSEQ EQU   IEDQOPCD+610
OPCRCTCH EQU   IEDQOPCD+608
OPCRSASC EQU   IEDQOPCD+604
OPCRECON EQU   IEDQOPCD+600
OPCGETSA EQU   IEDQOPCD+596
OPCSAASC EQU   IEDQOPCD+592
OPCLKASC EQU   IEDQOPCD+588
OPCDCBCH EQU   IEDQOPCD+584
OPCCDSER EQU   IEDQOPCD+580
OPCGTCDT EQU   IEDQOPCD+576
OPCSRSCE EQU   IEDQOPCD+572
OPCGTNSP EQU   IEDQOPCD+568
OPCFGXPT EQU   IEDQOPCD+564
OPCNCPLC EQU   IEDQOPCD+560
OPCCTVRL EQU   IEDQOPCD+556
OPCMSACE EQU   IEDQOPCD+552
OPCRVRLT EQU   IEDQOPCD+548
OPCRCOSN EQU   IEDQOPCD+544
OPCLOCLS EQU   IEDQOPCD+540
OPCFXNAD EQU   IEDQOPCD+536
@NM00168 EQU   IEDQOPCD+532
OPCCDRDR EQU   IEDQOPCD+528
OPCRSTRS EQU   IEDQOPCD+524
OPCSAVES EQU   IEDQOPCD+520
OPCRSPBD EQU   IEDQOPCD+516
OPCNFY03 EQU   IEDQOPCD+512
OPCNFY01 EQU   IEDQOPCD+508
OPCURC   EQU   IEDQOPCD+504
OPCCINBD EQU   IEDQOPCD+500
OPCCRKEY EQU   IEDQOPCD+496
OPCDRSET EQU   IEDQOPCD+492
OPCDRCLN EQU   IEDQOPCD+488
OPCDRDEL EQU   IEDQOPCD+484
OPCDRLOD EQU   IEDQOPCD+480
OPCDRLOC EQU   IEDQOPCD+476
OPCDRCVT EQU   IEDQOPCD+472
OPCDRFST EQU   IEDQOPCD+468
OPCLSABC EQU   IEDQOPCD+466
@NM00167 EQU   IEDQOPCD+465
@NM00166 EQU   OPCSESSF
OPCGTSAB EQU   OPCSESSF
@NM00165 EQU   OPCSESSF
OPCUNIQV EQU   OPCUNIQP+2
OPCUNIQU EQU   OPCUNIQP
OPCOSSCP EQU   OPCPCID
@NM00164 EQU   IEDQOPCD+452
@NM00163 EQU   IEDQOPCD+448
OPCSDUPU EQU   IEDQOPCD+444
OPCSDULU EQU   IEDQOPCD+440
OPCSDRVT EQU   IEDQOPCD+436
OPCSDRET EQU   IEDQOPCD+432
OPCSDHSY EQU   IEDQOPCD+428
OPCSDENQ EQU   IEDQOPCD+424
OPCSDDIA EQU   IEDQOPCD+420
OPCSDAPU EQU   IEDQOPCD+416
OPCSDALU EQU   IEDQOPCD+412
OPCCSKEY EQU   IEDQOPCD+408
OPCSSKEY EQU   IEDQOPCD+404
OPCPRTTE EQU   IEDQOPCD+400
OPCLU2TT EQU   OPCSESS+14
OPCLU1TT EQU   OPCSESS+12
OPCSNSU2 EQU   OPCSNSUS+1
OPCSNSU1 EQU   OPCSNSUS
OPCSNSMN EQU   OPCSNSSY+1
OPCSNSMJ EQU   OPCSNSSY
OPCCSAB  EQU   OPCCSIB
OPCCTTE  EQU   OPCSESS+1
OPCARSRT EQU   OPCSFLAG
OPCISQUD EQU   OPCSFLAG
@NM00162 EQU   OPCSFLAG
OPCLUREQ EQU   OPCSFLAG
OPCISRSP EQU   OPCSFLAG
OPCISQUE EQU   OPCSFLAG
OPCRAPMH EQU   OPCSFLAG
OPCRAPI  EQU   OPCSFLAG
OPCGTSIB EQU   IEDQOPCD+380
@NM00161 EQU   OPCPWCOB+9
@NM00160 EQU   OPCPWCOB+8
@NM00159 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00158 EQU   OPCSPEC
@NM00157 EQU   OPCSPEC
@NM00156 EQU   OPCSPEC
@NM00155 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCRSTRT EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00154 EQU   OPCLDNME+5
@NM00153 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
OPCDCBLK EQU   IEDQOPCD+16
OPCDOUBL EQU   IEDQOPCD
@NM00143 EQU   OCLDNME+6
OC1SQID  EQU   OCLDNME+4
OCWAITPC EQU   OCPREFLG
OCSRCCLN EQU   OCPREFLG
OCREMCON EQU   OCPREFLG
OCCLNUP  EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
OCRMPORQ EQU   OCREQFLG
OCCDLACT EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
OCDSUBA  EQU   OCFLOADP+2
OCOSUBA  EQU   OCLSTTC
OCURC    EQU   OCOID
OCCKPTWA EQU   OCCKDATA+4
OCSRCTTC EQU   OCNCP
OCCKDAT2 EQU   OC379RRT+1
OCCKDAT1 EQU   OC379RRT
OCVRLST  EQU   OCECHOPT
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
@NM00129 EQU   OCBACKUP+4
OCBUFRET EQU   OCCOUNT2
OCBUFUSD EQU   OCCOUNT1
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
OCPEND   EQU   OCLNTYP
OCQUED   EQU   OCLNTYP
OCDOWN   EQU   OCLNTYP
OCALACT  EQU   OCLNTYP
OCLNQDAP EQU   OCFLAG1
OCTYPTRM EQU   OCFLAG1
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
OCDACTIP EQU   OCFNAALL
OCDIALX  EQU   OCWTGB
OCATNDX  EQU   OCMSTSAV+2
OCREQVAL EQU   OCDEST+1
OCCONID  EQU   OCDEST
OCTGN    EQU   OCLOCAD
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00128 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00127 EQU   OCUNITBF
OCINVTIC EQU   OCUNITBF
@NM00126 EQU   OCUNITBF
@NM00125 EQU   @NM00124
@NM00123 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
NSLILUTT EQU   IEDNSLD+48
NSLTTEND EQU   NSLGRPNM+4
NSLOPCEP EQU   NSLTTEBG
NSLREQTY EQU   IEDNSLD+35
@NM00122 EQU   IEDNSLD+34
NSLUNREQ EQU   NSLUNCNT+1
NSLBFREQ EQU   NSLUNCNT
NSLBUFFR EQU   NSLERB+9
@NM00121 EQU   NSLESTAT
NSLMPPI  EQU   NSLESTAT
@NM00120 EQU   NSLESTAT
NSLELINK EQU   NSLERB+5
NSLERBPR EQU   NSLERB+4
NSLERQCB EQU   NSLERB
NSLFLGBK EQU   IEDNSLD+19
NSLPRIBK EQU   IEDNSLD+18
NSLTTCIN EQU   IEDNSLD+16
NSLCTTRM EQU   IEDNSLD+13
@NM00119 EQU   NSLGPCUS
NSLDRDRV EQU   NSLGPCUS
NSLSDIAL EQU   NSLGPCUS
NSLNGPSL EQU   NSLGPCUS
NSLGPTSP EQU   NSLGPCUS
NSLNGPST EQU   NSLGPCUS
NSLSAVE  EQU   IEDNSLD+9
@NM00118 EQU   NSLPLCB
NSLPLCBR EQU   NSLPLCB
NSLOPRE  EQU   IEDNSLD
NSLSAVE2 EQU   IEDNNSLD+4
NSLSAVE1 EQU   IEDNNSLD
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBMIHET EQU   UCBMIHTI
UCBMIHT2 EQU   UCBMIHTI
UCBMIHT1 EQU   UCBMIHTI
UCBMIHPB EQU   UCBMIHTI
UCBMIHSF EQU   UCBMIHTI
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBSWAPF EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00117
UCBHALI  EQU   @NM00117
UCBRSV09 EQU   @NM00117
UCBRSV08 EQU   @NM00117
UCBRSV07 EQU   @NM00117
UCBRSV06 EQU   @NM00117
UCBRSV05 EQU   @NM00117
UCBRSV04 EQU   @NM00117
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00114 EQU   UCB
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBPT+1
DEBDVMDF EQU   DEBUCBPT
DEBAPPAD EQU   IEDQDEB+65
DEBEXSCL EQU   IEDQDEB+64
DEBDCBAD EQU   IEDQDEB+61
DEBPROTG EQU   IEDQDEB+60
DEBECBAD EQU   IEDQDEB+57
DEBPRIOR EQU   IEDQDEB+56
DEBUSRPG EQU   IEDQDEB+53
DEBSYSPG EQU   IEDQDEB+49
DEBOPATB EQU   IEDQDEB+48
DEBIRBAD EQU   IEDQDEB+45
DEBOFLGS EQU   IEDQDEB+44
DEBDEBAD EQU   IEDQDEB+41
DEBAMLNG EQU   IEDQDEB+40
DEBTCBAD EQU   IEDQDEB+37
@NM00113 EQU   DEBPRF+33
DEBLNGTH EQU   DEBPRF+32
DEBDCBMK EQU   DEBPRF+28
DEBDSCBA EQU   DEBPRF+21
DEBWKARA EQU   DEBPRF+20
DEBXCEA  EQU   DEBAPVT+16
DEBCEA   EQU   DEBAPVT+12
DEBPCIA  EQU   DEBAPVT+8
DEBSIOA  EQU   DEBAPVT+4
DEBEOEA  EQU   DEBAPVT
DCBBUFSI EQU   IHADCS43+6
DCBUNTCT EQU   IHADCS43+5
DCBILCT  EQU   IHADCS43+4
DCBSCTAD EQU   DCBSCTAB+1
@NM00112 EQU   DCBSCTAB
DCBPUTA  EQU   DCBGETA
@NM00111 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00110 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00109 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBEIOBX EQU   DCBEXLST
DCBRNCKA EQU   DCBRNCKD+1
@NM00108 EQU   DCBRNCKD
DCBIOBAD EQU   IHADCS2K+8
DCBDSGTR EQU   DCBDSRG2
@NM00107 EQU   DCBDSRG2
DCBDSRG1 EQU   DCBDSORG
DCBCHNGL EQU   DCBTRSTA
DCBNIDLE EQU   DCBTRSTA
DCBBAKUP EQU   DCBTRSTA
DCBIPLED EQU   DCBTRSTA
DCBRSTRT EQU   DCBTRSTA
DCBINITL EQU   DCBTRSTA
DCBAUTOD EQU   DCBTRSTA
DCBAUTOI EQU   DCBTRSTA
@NM00106 EQU   IHADCS2K+4
DCBDUMPA EQU   DCBDUMPD+1
DCBUNITN EQU   DCBDUMPD
DCBBCKUA EQU   DCBBCKUP+1
@NM00105 EQU   DCBBCKUP
DCBIPLTX EQU   IHADCS1A
@NM00104 EQU   IHADCB
SAVTAUXC EQU   IEDNSVTD+772
SAVTSCAN EQU   IEDNSVTD+768
SAVTFCSP EQU   IEDNSVTD+764
SAVTFCSN EQU   IEDNSVTD+760
SAVTFCLI EQU   IEDNSVTD+756
SAVTVARR EQU   IEDNSVTD+752
SAVTFCIN EQU   IEDNSVTD+748
SAVTPTNT EQU   IEDNSVTD+744
SAVTFSAB EQU   IEDNSVTD+740
SAVTGSAB EQU   IEDNSVTD+736
SAVTARSI EQU   IEDNSVTD+728
SAVTARSQ EQU   IEDNSVTD+724
SAVTSABP EQU   IEDNSVTD+720
SAVTPUS  EQU   IEDNSVTD+716
SAVTEACR EQU   IEDNSVTD+712
SAVTERAV EQU   IEDNSVTD+708
SAVTCINO EQU   IEDNSVTD+704
SAVTEAVR EQU   IEDNSVTD+700
SAVTEVRP EQU   IEDNSVTD+696
SAVTNLSA EQU   IEDNSVTD+692
SAVTENOP EQU   IEDNSVTD+688
SAVTEROP EQU   IEDNSVTD+684
SAVTEACT EQU   IEDNSVTD+680
SAVTEMGR EQU   IEDNSVTD+676
SAVTEBRQ EQU   IEDNSVTD+672
@NM00103 EQU   IEDNSVTD+668
SAVTERFB EQU   IEDNSVTD+664
SAVTERRB EQU   IEDNSVTD+660
SAVTRTSB EQU   IEDNSVTD+656
SAVTERCQ EQU   IEDNSVTD+652
SAVTVPMG EQU   IEDNSVTD+648
SAVTVNFY EQU   IEDNSVTD+644
SAVTVNOP EQU   IEDNSVTD+640
SAVTVDVR EQU   IEDNSVTD+636
SAVTVDAC EQU   IEDNSVTD+632
SAVTVACT EQU   IEDNSVTD+628
SAVTVAVR EQU   IEDNSVTD+624
SAVTVCVD EQU   IEDNSVTD+620
SAVTVCVA EQU   IEDNSVTD+616
SAVTVMGR EQU   IEDNSVTD+612
SAVTVRIT EQU   IEDNSVTD+608
SAVTERTP EQU   IEDNSVTD+604
SAVTVRTE EQU   IEDNSVTD+600
SAVTERMP EQU   IEDNSVTD+596
SAVTVRTP EQU   IEDNSVTD+592
SAVTWSET EQU   IEDNSVTD+588
SAVTCOSP EQU   IEDNSVTD+584
SAVTINIQ EQU   IEDNSVTD+580
SAVTVRMM EQU   IEDNSVTD+576
SAVTVERI EQU   IEDNSVTD+572
SAVTVRER EQU   IEDNSVTD+568
SAVTFCTL EQU   IEDNSVTD+564
SAVTCNOT EQU   IEDNSVTD+560
SAVTCMMD EQU   IEDNSVTD+556
SAVTCGBU EQU   IEDNSVTD+552
SAVTCBND EQU   IEDNSVTD+548
SAVTPCT2 EQU   IEDNSVTD+544
@NM00102 EQU   IEDNSVTD+540
SAVTERTS EQU   IEDNSVTD+536
SAVTERVR EQU   IEDNSVTD+532
SAVTLST0 EQU   IEDNSVTD+530
SAVTVRTM EQU   IEDNSVTD+528
SAVTVRTC EQU   IEDNSVTD+526
SAVTVRTN EQU   IEDNSVTD+524
SAVTMTPF EQU   IEDNSVTD+523
SAVTMERN EQU   IEDNSVTD+522
SAVTMVRN EQU   IEDNSVTD+521
SAVTSAVR EQU   IEDNSVTD+520
SAVTDEFA EQU   IEDNSVTD+516
SAVTDEFR EQU   IEDNSVTD+515
@NM00101 EQU   IEDNSVTD+514
SAVTDEFL EQU   IEDNSVTD+512
SAVTTDEF EQU   IEDNSVTD+508
SAVTSESN EQU   IEDNSVTD+504
SAVTLCNT EQU   IEDNSVTD+502
SAVTSMAX EQU   IEDNSVTD+500
SAVTSINO EQU   IEDNSVTD+498
SAVTAMAX EQU   IEDNSVTD+496
SAVTAENO EQU   IEDNSVTD+494
SAVTAINO EQU   IEDNSVTD+492
SAVTNMAX EQU   IEDNSVTD+490
SAVTNENO EQU   IEDNSVTD+488
SAVTNINO EQU   IEDNSVTD+486
SAVTRSZE EQU   IEDNSVTD+484
SAVTRMAX EQU   IEDNSVTD+482
SAVTRENO EQU   IEDNSVTD+480
SAVTRINO EQU   IEDNSVTD+478
SAVTRMIN EQU   IEDNSVTD+476
SAVTPMID EQU   IEDNSVTD+474
SAVTRRTC EQU   IEDNSVTD+472
SAVTLUSG EQU   IEDNSVTD+468
SAVTACNQ EQU   IEDNSVTD+464
SAVTCM20 EQU   IEDNSVTD+460
SAVTCFDC EQU   IEDNSVTD+456
SAVTCMOT EQU   IEDNSVTD+452
SAVTCMIN EQU   IEDNSVTD+448
SAVTCPCH EQU   IEDNSVTD+444
SAVTCRGT EQU   IEDNSVTD+440
SAVTNALC EQU   IEDNSVTD+436
SAVTATCT EQU   IEDNSVTD+434
SAVTCRIU EQU   IEDNSVTD+432
SAVTCRHI EQU   IEDNSVTD+430
SAVTCRIB EQU   IEDNSVTD+428
SAVTLCQ  EQU   IEDNSVTD+424
SAVTDRSR EQU   IEDNSVTD+420
SAVTATPT EQU   IEDNSVTD+416
SAVTCSMI EQU   IEDNSVTD+412
SAVTNXCR EQU   IEDNSVTD+408
SAVTCRPT EQU   IEDNSVTD+404
SAVTCIPH EQU   IEDNSVTD+400
SAVTBTCO EQU   IEDNSVTD+396
SAVTBTCI EQU   IEDNSVTD+392
SAVTBPCO EQU   IEDNSVTD+388
SAVTBPCI EQU   IEDNSVTD+384
SAVTLLCB EQU   IEDNSVTD+380
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00100 EQU   IEDNSVTD+325
@NM00099 EQU   SAVTNETF
SAVTPTRC EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00098 EQU   SAVTCKQB+8
@NM00097 EQU   SAVTCKEC+1
@NM00096 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00095 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00094 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00093 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00092 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTEP   EQU   SAVTSCLU
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00091 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00090 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00089 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00088 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00087 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00086 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00085 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTTVT   EQU   IEDQAVTD+1268
AVTSITS  EQU   IEDQAVTD+1264
AVTMSUHI EQU   IEDQAVTD+1260
AVTSITU  EQU   IEDQAVTD+1256
AVTSITP  EQU   IEDQAVTD+1252
AVTPADDR EQU   IEDQAVTD+1248
@NM00084 EQU   IEDQAVTD+1246
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00083 EQU   IEDQAVTD+1242
@NM00082 EQU   IEDQAVTD+1241
@NM00081 EQU   IEDQAVTD+1240
@NM00080 EQU   IEDQAVTD+1237
@NM00079 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00078
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00077 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00076 EQU   IEDQAVTD+1140
@NM00075 EQU   IEDQAVTD+1137
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
@NM00072 EQU   AVTBIT4
@NM00071 EQU   AVTBIT4
@NM00070 EQU   AVTBIT4
@NM00069 EQU   AVTBIT4
@NM00068 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00067 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00066 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00065 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00064 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00063 EQU   AVTBIT2
@NM00062 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTHA3   EQU   IEDQAVTD+1024
AVTHA2   EQU   IEDQAVTD+1022
AVTGETMS EQU   IEDQAVTD+1021
@NM00061 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+960
AVTCCECB EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00060 EQU   IEDQAVTD+950
@NM00059 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00058 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
AVTCFE50 EQU   AVTCWFL2
AVTCFE30 EQU   AVTCWFL2
AVTCFE10 EQU   AVTCWFL2
AVTCFE20 EQU   AVTCWFL2
AVTCFE40 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTRAPI  EQU   AVTSAVTF
AVTLCLST EQU   AVTSAVTF
AVT370X  EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
AVTTRNOS EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00014 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00013 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTECBAD EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
AVTTRAPI EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00625 EQU   @RC00623
@RF00654 EQU   @RC00651
@RF00657 EQU   @RC00651
@RF00660 EQU   @RC00651
@RC00685 EQU   @RC00683
@RC00699 EQU   @RC00695
@RC00847 EQU   @RC00841
@RC00866 EQU   @RC00864
@RC00892 EQU   @EL00008
@RC00934 EQU   @RC00932
@RC00958 EQU   @RC00956
@RC00849 EQU   @RC00847
@RC00868 EQU   @RC00866
@ENDDATA EQU   *
         END   IGCVI10D
