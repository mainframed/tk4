         TITLE 'IGCN010D, 3705-SWITCH LINE MODE'
IGCN010D CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGCN010D  79.338'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0320
*/********************************************************************/
*/* INITIALIZE CONTROL BLOCK REGISTERS.                              */
*/********************************************************************/
*                                                                  0320
*   ROPCAVT=RPARM;                  /* SET BASE FOR OP CTL AVT       */
         LR    ROPCAVT,RPARM                                       0320
*   IEDQAPTR=OPCAVTPT;              /* SET BASE FOR TCAM AVT         */
         L     IEDQAPTR,OPCAVTPT(,ROPCAVT)                         0321
*   ROPCE=OPCCOPCE;                 /* PICK UP ELEMENT POINTER       */
         L     ROPCE,OPCCOPCE(,ROPCAVT)                            0322
*   RSAVE=ADDR(OPCSAVE);            /* GET SAVE AREA ADDRESS         */
         LA    RSAVE,OPCSAVE(,ROPCAVT)                             0323
*   IF OPCRSTRT='1'B THEN           /* RESTART IN PROGRESS           */
         TM    OPCRSTRT(ROPCAVT),B'00100000'                       0324
         BNO   @RF00324                                            0324
*     DO;                           /* YES                           */
*       OPCDOUBL=OCBACKUP;          /* RESET GRPNAME                 */
         MVC   OPCDOUBL(8,ROPCAVT),OCBACKUP(ROPCE)                 0326
*       RPARM=OCRLN;                /* RESET RLN                     */
         SLR   RPARM,RPARM                                         0327
         IC    RPARM,OCRLN(,ROPCE)                                 0327
*       GOTO RESTART;               /* GET LINE ENTRY ADDRESS        */
         B     RESTART                                             0328
*     END;                                                         0329
*                                                                  0329
*/********************************************************************/
*/* CHECK FOR RESPONSE BTU:                                          */
*/*                OCRESP=OFF - ELEMENT IS ASSOCIATED WITH           */
*/*                             INITIAL SWITCH LINE MODE             */
*/*                             COMMAND WHICH NEEDS OPERAND          */
*/*                             CHECKING AND A BTU SENT.             */
*/*                OCRESP=ON  - ELEMENT IS ASSOCIATED WITH A         */
*/*                             RESPONSE BTU SENT ON A PREVIOUS      */
*/*                             ENTRY INTO THIS MODULE.              */
*/********************************************************************/
*                                                                  0330
*   IF OCRESP='1'B THEN             /* DOES ELEMENT POINT TO A     0330
*                                      RESPONSE BTU ?                */
@RF00324 TM    OCRESP(ROPCE),B'00000001'                           0330
         BO    @RT00330                                            0330
*     GOTO PROCBTU;                 /* YES, PROCESS THE BTU          */
*   LM(ROPCE,RBYSCN,SVDREGS);       /* RESTORE REGS FROM PREVIOUS  0332
*                                      CALL                  @ZM00848*/
         LM    ROPCE,RBYSCN,SVDREGS(ROPCAVT)                       0332
*   OCMODNME=BLANKS;                /* CLEAR OCMODNME TO BLANKS      */
         MVC   OCMODNME(8,ROPCE),BLANKS                            0333
*                                                                  0334
*/********************************************************************/
*/* SCAN THE FIRST OPERAND FOR VALID NUMERIC OF ONE TO THREE DIGITS. */
*/* IF THE OPERAND IS A VALID NUMERIC, PUT THE RLN INTO RPARM AND    */
*/* CALL THE 'GRPNAME,RLN' CODE TO FIND THE LINE ENTRY. 'GRPNAME'    */
*/* IS IN OPCDOUBL AT ENTRY.                                         */
*/********************************************************************/
*                                                                  0334
*   IF RLEN=0 THEN                  /* ANOTHER OPERAND ?             */
         LTR   RLEN,RLEN                                           0334
         BZ    @RT00334                                            0334
*     GOTO CMDINV;                  /* NO, COMMAND INVALID           */
*   OCBACKUP=OPCDOUBL;              /* SAVE GROUP NAME               */
         MVC   OCBACKUP(8,ROPCE),OPCDOUBL(ROPCAVT)                 0336
*   CALL SCAN1;                     /* SCAN THE OPERAND              */
         BAL   @14,SCAN1                                           0337
*   IF RBYSCN=0×                    /* WAS OPERAND SKIPPED OR        */
*       RBYSCN>AVTHA3×              /* OPERAND LENGTH > 3 OR         */
*       RLEN=0 THEN                 /* LAST OPERAND ?                */
         SLR   @15,@15                                             0338
         CR    RBYSCN,@15                                          0338
         BE    @RT00338                                            0338
         CH    RBYSCN,AVTHA3(,IEDQAPTR)                            0338
         BH    @RT00338                                            0338
         CR    RLEN,@15                                            0338
         BE    @RT00338                                            0338
*     GOTO CMDINV;                  /* YES TO ANY OF ABOVE - COMMAND
*                                      INVALID                       */
*   RBYSCN=RBYSCN-1;                /* GET NUMBER OF DIGITS LESS 1 0340
*                                      FOR EXECUTE INSTRUCTION       */
         BCTR  RBYSCN,0                                            0340
*/********************************************************************/
*/* CONVERT RLN FROM EBCDIC TO BINARY AND TEST FOR VALID RLN --      */
*/*               0 < RLN =< 255                                     */
*/********************************************************************/
*                                                                  0341
*   GEN;                                                           0341
         EX    RBYSCN,MOVERLN           PUT RLN IN WORK AREA
         EX    RBYSCN,PACK              PACK RLN IN WORK AREA
         XC    OPCSAVE(EQU6,ROPCAVT),OPCSAVE(ROPCAVT)
         CVB   RPARM,OPCSAVE(ROPCAVT)   CONVERT RLN TO BINARY
*   IF RPARM=0×                     /* RLN = 0 OR                    */
*       RPARM>255 THEN              /* RLN GREATER THAN MAXIMUM ?    */
         LTR   RPARM,RPARM                                         0342
         BZ    @RT00342                                            0342
         C     RPARM,@CF01783                                      0342
         BH    @RT00342                                            0342
*     GOTO CMDINV;                  /* YES, COMMAND INVALID          */
*                                                                  0344
*/********************************************************************/
*/* CALL IEDQCA AT ENTRY POINT FOR 'GRPNAME,RLN' LOOKUP. RETURN WILL */
*/* BE THE FOLLOWING:                                                */
*/*                     RRET+0 -- SUCCESSFUL                         */
*/*                     RRET+4 -- UNSUCCESSFUL                       */
*/* IF UNSUCCESSFUL, ONE OF THE FOLLOWING RETURN CODES WILL BE IN    */
*/* RZERO:                                                           */
*/*                  X'01' - LGB NOT OPEN (NOTOPEN)                  */
*/*                  X'04' - NAME NOT FOUND (NONAME)                 */
*/*                  X'08' - INVALID RLN (INVRLN)                    */
*/*                  X'20' - NOT A 3705 LINE (NOT3705L)              */
*/********************************************************************/
*                                                                  0344
*RESTART:                                                          0344
*   CALL DCBLOCAT;                  /* FIND TERM ENTRY       @Y17XARX*/
RESTART  L     @15,OPCDCBLK(,ROPCAVT)                              0344
         BALR  @14,@15                                             0344
*   GOTO SAVELINE;                  /* GOOD RETURN - SAVE LINE ENTRY
*                                      ADDRESS                       */
         B     SAVELINE                                            0345
*DLABEL:                            /*                       @Y17XARX*/
*   IF RZERO=1×                     /* LGB NOT OPEN OR               */
*       RZERO=8 THEN                /* RLN IS INVALID ?              */
DLABEL   C     RZERO,@CF00062                                      0346
         BE    @RT00346                                            0346
         C     RZERO,@CF00053                                      0346
         BNE   @RF00346                                            0346
@RT00346 DS    0H                                                  0347
*     RMSGNUM=17;                   /* YES, SET 'LINE NOT OPEN'    0347
*                                      MESSAGE                       */
         LA    RMSGNUM,17                                          0347
*   ELSE                                                           0348
*     RMSGNUM=173;                  /* SET 'NOT A 3705 RESOURCE'   0348
*                                      MESSAGE                       */
         B     @RC00346                                            0348
@RF00346 LA    RMSGNUM,173                                         0348
*   GOTO ERREXIT;                   /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0349
*SAVELINE:                                                         0350
*   OCELEM=RZERO;                   /* SAVE LINE ENTRY ADDRESS       */
SAVELINE ST    RZERO,OCELEM(,ROPCE)                                0350
*   IF OPCRSTRT='1'B THEN           /* RESTART IN PROGRESS           */
         TM    OPCRSTRT(ROPCAVT),B'00100000'                       0351
         BNO   @RF00351                                            0351
*     DO;                           /* YES                           */
*       IEDQTPTR=OCELEM;            /* SET LINE ENTRY BASE           */
         L     @15,OCELEM(,ROPCE)                                  0353
         LR    IEDQTPTR,@15                                        0353
*       GOTO RESTART1;              /* GO SET EP MODE BIT            */
         B     RESTART1                                            0354
*     END;                                                         0355
*                                                                  0356
*/********************************************************************/
*/* SCAN COMMAND FOR EP OR NCP OPERAND                               */
*/*          'EP'  - INDICATES SWITCH TO EP MODE                     */
*/*          'NCP' - INDICATES SWITCH TO NCP MODE                    */
*/********************************************************************/
*                                                                  0356
*   IF RLEN=0 THEN                  /* ANOTHER OPERAND               */
@RF00351 LTR   RLEN,RLEN                                           0356
         BZ    @RT00356                                            0356
*     GOTO CMDINV;                  /* NO, COMMAND INVALID           */
*   CALL SCAN;                      /* SCAN THE OPERAND              */
         BAL   @14,SCAN                                            0358
*   IF RBYSCN>AVTHA3×               /* OPERAND LENGTH > 3 OR         */
*       RBYSCN<AVTHA2×              /* OPERAND LENGTH . 2 OR         */
*       LASTCHAR=','×               /* LAST CHAR A COMMA OR          */
*       RLEN^=0 THEN                /* ANOTHER OPERAND               */
         CH    RBYSCN,AVTHA3(,IEDQAPTR)                            0359
         BH    @RT00359                                            0359
         LH    @15,AVTHA2(,IEDQAPTR)                               0359
         CR    RBYSCN,@15                                          0359
         BL    @RT00359                                            0359
         LR    @01,RAPTR                                           0359
         BCTR  @01,0                                               0359
         CLI   LASTCHAR+1(@01),C','                                0359
         BE    @RT00359                                            0359
         LTR   RLEN,RLEN                                           0359
         BNZ   @RT00359                                            0359
*     GOTO CMDINV;                  /* YES TO ANY OF ABOVE - COMMAND
*                                      INVALID                       */
*   IF RBYSCN=AVTHA2 THEN           /* OPERAND LENGTH OF 2           */
         CR    RBYSCN,@15                                          0361
         BNE   @RF00361                                            0361
*     DO;                           /* YES, DO                       */
*       IF OPEREP='EP' THEN         /* OPERAND = EP                  */
         CLC   OPEREP(2,RRPTR),@CC01793                            0363
         BNE   @RF00363                                            0363
*         OCMODNME=EPMODE;          /* INDICATE EP MODE              */
         MVC   OCMODNME(8,ROPCE),EPMODE                            0364
*       ELSE                        /*                               */
*         GOTO CMDINV;              /* NO, COMMAND INVALID           */
*     END;                          /*                               */
*   ELSE                            /* OPERAND LENGTH OF 3           */
*     IF OPERNCP='NCP' THEN         /* OPERAND = NCP                 */
         B     @RC00361                                            0367
@RF00361 CLC   OPERNCP(3,RRPTR),@CC01794                           0367
         BNE   @RF00367                                            0367
*       DO;                         /* YES, DO                       */
*         OCSWITCH='28'X;           /* INDICATE NCP SWITCH           */
         MVI   OCSWITCH(ROPCE),X'28'                               0369
*         OCMODNME=NCPMODE;         /* INDICATE NCP MODE             */
         MVC   OCMODNME(8,ROPCE),NCPMODE                           0370
*       END;                                                       0371
*     ELSE                                                         0372
*       GOTO CMDINV;                /* NO, COMMAND INVALID           */
*                                                                  0373
*/********************************************************************/
*/* CHECK LINE ENTRY TO DETERMINE THAT IT IS VALID LINE ENTRY        */
*/* ATTACHED TO A 3705.                                              */
*/********************************************************************/
*                                                                  0373
*   IEDQTPTR=OCELEM;                /* SET LINE ENTRY BASE           */
@RC00361 L     IEDQTPTR,OCELEM(,ROPCE)                             0373
*   IF TRMSTOTE='1'B THEN           /* TOTE CONTROLLING RESOURCE     */
         LR    @01,IEDQTPTR                                        0374
         AL    @01,@CF01829                                        0374
         TM    TRMSTOTE-13(@01),B'00000001'                        0374
         BNO   @RF00374                                            0374
*     DO;                           /* YES                           */
*       RMSGNUM=49;                 /* SET 'TOTE CONTROLLING' MSG    */
         LA    RMSGNUM,49                                          0376
*       GOTO ERREXIT;               /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0377
*     END;                                                         0378
*   IF TRMPREF='0'B×TRMTYPE^=TRMNSDLC THEN/* ENTRY NOT A 3705 NON-SNA
*                                      LINE                  @Y17XARX*/
@RF00374 TM    TRMPREF(IEDQTPTR),B'00010000'                       0379
         BZ    @RT00379                                            0379
         LR    @01,IEDQTPTR                                        0379
         AL    @01,@CF01382                                        0379
         CLI   TRMTYPE-21(@01),X'20'                               0379
         BE    @RF00379                                            0379
@RT00379 DS    0H                                                  0380
*     DO;                           /* YES, INVALID ENTRY            */
*       RMSGNUM=443;                /* SET 'NOT A 3705 LINE' MSG     */
         LA    RMSGNUM,443                                         0381
*       GOTO ERREXIT;               /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0382
*     END;                                                         0383
*                                                                  0383
*/********************************************************************/
*/* DETERMINE THAT LINE IS INACTIVE                                  */
*/********************************************************************/
*                                                                  0384
*   IF TRMRSACT='1'B THEN           /* IS LINE ACTIVE        @Y17XARX*/
@RF00379 LR    @01,IEDQTPTR                                        0384
         AL    @01,@CF01830                                        0384
         TM    TRMRSACT-12(@01),B'10000000'                        0384
         BNO   @RF00384                                            0384
*     DO;                           /* YES, DO                       */
*       RMSGNUM=446;                /* SET 'LINE ACTIVE' MSG         */
         LA    RMSGNUM,446                                         0386
*       GOTO ERREXIT;               /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0387
*     END;                                                         0388
*   RESPECIFY                                                      0389
*     RZERO RSTD;                   /*                       @Y17XARX*/
@RF00384 DS    0H                                                  0390
*   RESPECIFY                                                      0390
*     RPARM RSTD;                   /*                       @Y17XARX*/
*   ERRFLAG='0'B;                   /* RESET ERROR FLAG      @Y17XARX*/
         NI    ERRFLAG(ROPCAVT),B'01111111'                        0391
*   RZERO=TRMSUBST;                 /* GET TTCIN OF FIRST TERM     0392
*                                                            @Y17XARX*/
         LR    @15,IEDQTPTR                                        0392
         BCTR  @15,0                                               0392
         BCTR  @15,0                                               0392
         LH    @15,TRMSUBST-22(,@15)                               0392
         N     @15,@CF01832                                        0392
         LR    RZERO,@15                                           0392
*   IF TRMSUBST^=0 THEN             /* HEIRAIRCHY PRESENT?   @Y17XARR*/
         LTR   @15,@15                                             0393
         BZ    @RF00393                                            0393
*     DO;                           /* YES                   @Y17XARR*/
*       DO UNTIL(RZERO=OCTRMTBL×ERRFLAG='1'B);/* FOR ALL TERMS OR  0395
*                                      UNTIL ERROR           @Y17XARX*/
@DL00395 DS    0H                                                  0396
*         RWORKB=RZERO;             /* SAVE TTCIN OF TERM    @Y17XARX*/
         LR    RWORKB,RZERO                                        0396
*         RPARM=RZERO;              /* GET TTE FOR TTCIN     @Y17XARX*/
         LR    RPARM,RZERO                                         0397
*         CALL TNTCODE;             /*                       @Y17XARX*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0398
         BALR  @14,@15                                             0398
*         RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE PREFIX
*                                                            @YM06484*/
         SL    RPARM,@CF00038                                      0399
*         IF RPARM->TRMSTOTE='1'B THEN/* IF IN TOTE MODE     @Y17XARX*/
         TM    TRMSTOTE(RPARM),B'00000001'                         0400
         BNO   @RF00400                                            0400
*           ERRFLAG='1'B;           /* SET ERROR             @Y17XARX*/
         OI    ERRFLAG(ROPCAVT),B'10000000'                        0401
*         IF RPARM->TRMSUBST^=0&ERRFLAG='0'B THEN/* IF SUBSTRUCT   0402
*                                      EXISTS AND NO ERROR   @Y17XARX*/
@RF00400 LH    @15,TRMSUBST(,RPARM)                                0402
         N     @15,@CF01832                                        0402
         LTR   @15,@15                                             0402
         BZ    @RF00402                                            0402
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0402
         BNZ   @RF00402                                            0402
*           DO;                     /*                       @Y17XARX*/
*             RWORKA=RPARM;         /* SAVE GPCU TTE PTR     @Y17XARX*/
         LR    RWORKA,RPARM                                        0404
*             RZERO=RWORKA->TRMSUBST;/* GET FIRST TTCIN      @Y17XARX*/
         LH    RZERO,TRMSUBST(,RWORKA)                             0405
         N     RZERO,@CF01832                                      0405
*             DO UNTIL(RZERO=RWORKB×ERRFLAG='1'B);/* FOR ALL TERM OR
*                                      UNTIL ERROR           @Y17XARX*/
@DL00406 DS    0H                                                  0407
*               RPARM=RZERO;        /* GET TTE FOR TTCIN     @Y17XARX*/
         LR    RPARM,RZERO                                         0407
*               CALL TNTCODE;       /*                       @Y17XARX*/
         L     @15,AVTRNMPT(,IEDQAPTR)                             0408
         BALR  @14,@15                                             0408
*               RPARM=RPARM-LENGTH(IEDNTRM);/* BACK UP TO NEGATIVE 0409
*                                      PREFIX                @YM06484*/
         SL    RPARM,@CF00038                                      0409
*               IF RPARM->TRMSTOTE='1'B THEN/* IF TOTE MODE  @Y17XARX*/
         TM    TRMSTOTE(RPARM),B'00000001'                         0410
         BNO   @RF00410                                            0410
*                 ERRFLAG='1'B;     /* YES - GIVE ERROR      @Y17XARX*/
         OI    ERRFLAG(ROPCAVT),B'10000000'                        0411
*               RZERO=RPARM->TRMCOHRT;/* GET NEXT TTCIN      @Y17XARX*/
@RF00410 LH    RZERO,TRMCOHRT(,RPARM)                              0412
         N     RZERO,@CF01832                                      0412
*             END;                  /*                       @Y17XARX*/
@DE00406 CR    RZERO,RWORKB                                        0413
         BE    @DC00406                                            0413
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0413
         BNO   @DL00406                                            0413
@DC00406 DS    0H                                                  0414
*             RPARM=RWORKA;         /* RESTORE GPCU TTE PTR  @Y17XARX*/
         LR    RPARM,RWORKA                                        0414
*           END;                    /*                       @Y17XARX*/
*         RZERO=RPARM->TRMCOHRT;    /* GET NEXT TTCIN        @Y17XARX*/
@RF00402 LH    RZERO,TRMCOHRT(,RPARM)                              0416
         N     RZERO,@CF01832                                      0416
*       END;                        /*                       @Y17XARX*/
@DE00395 LH    @15,OCTRMTBL(,ROPCE)                                0417
         N     @15,@CF01832                                        0417
         CR    RZERO,@15                                           0417
         BE    @DC00395                                            0417
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0417
         BNO   @DL00395                                            0417
@DC00395 DS    0H                                                  0418
*       RESPECIFY                                                  0418
*         RZERO UNRSTD;             /*                       @Y17XARX*/
*       RESPECIFY                                                  0419
*         RPARM UNRSTD;             /*                       @Y17XARX*/
*       IF ERRFLAG='1'B THEN        /* IF TOTE MODE ERROR    @Y17XARX*/
         TM    ERRFLAG(ROPCAVT),B'10000000'                        0420
         BNO   @RF00420                                            0420
*         DO;                       /* YES                           */
*           RMSGNUM=49;             /* SET 'TOTE CONTROLLING' MSG    */
         LA    RMSGNUM,49                                          0422
*           ERRFLAG='0'B;           /* RESET ERROR FLAG      @Y17XARX*/
         NI    ERRFLAG(ROPCAVT),B'01111111'                        0423
*           GOTO ERREXIT;           /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0424
*         END;                                                     0425
*     END;                                                         0426
*   ELSE                                                           0427
*     ;                             /* NO SUBST              @Y17XARR*/
@RF00393 DS    0H                                                  0428
*                                                                  0428
*/********************************************************************/
*/* GET A BUFFER UNIT INTO WHICH A BTU WILL BE BUILT                 */
*/********************************************************************/
*                                                                  0428
*   RPARM=1;                        /* GET ONE BUFFER UNIT           */
@RC00393 LA    RPARM,1                                             0428
*   RBRANCH=OPCGETBF;               /* ADDR OF BUFFER ALLOCATION     */
         L     RBRANCH,OPCGETBF(,ROPCAVT)                          0429
*   GEN( BALR RRETURN,RBRANCH );    /* CALL ALLOCATION ROUTINE       */
          BALR RRETURN,RBRANCH
*   OCUNIT=RPARM;                   /* SAVE ADDR OF UNIT             */
         ST    RPARM,OCUNIT(,ROPCE)                                0431
*/********************************************************************/
*/* BUILD THE PRU                                            @Y17XARX*/
*/********************************************************************/
*                                                                  0432
*   PRURHTH=FID1PRUH;               /* SET UP FID1 RH/TH     @Y17XARX*/
         L     @15,OCUNIT(,ROPCE)                                  0432
         LR    @14,@15                                             0432
         AL    @14,@CF01834                                        0432
         MVC   PRURHTH(4,@14),FID1PRUH                             0432
*   PRUTIC=INVALTIC;                /* SET INVALID TIC       @Y17XARX*/
         MVC   PRUTIC(4,@15),INVALTIC                              0433
*   PRUDATCT=LENRU;                 /* SET RU LENGTH         @Y17XARX*/
         MVC   PRUDATCT(2,@15),@CH00066                            0434
*   RPARM=IEDQTPTR;                 /* SET TTE PTR           @Y17XARX*/
         LR    RPARM,IEDQTPTR                                      0435
*   CALL COHORTLK;                  /* GET NEXT TTE          @Y17XARX*/
         L     @15,OPCHORT(,ROPCAVT)                               0436
         BALR  @14,@15                                             0436
*   PRUTTCIN=RZERO;                 /* SAVE TTCIN AS DEST    @Y17XARX*/
         L     @01,OCUNIT(,ROPCE)                                  0437
         STH   RZERO,PRUTTCIN(,@01)                                0437
*   IF OCSWITCH='27'X THEN          /* REQUEST FOR EP MODE           */
         CLI   OCSWITCH(ROPCE),X'27'                               0438
         BNE   @RF00438                                            0438
*     PRUDATA(1)='52'X;             /* SET EP REQUEST        @Y17XARX*/
         MVI   PRUDATA(@01),X'52'                                  0439
*   ELSE                            /* NO - PRIMARY REQUEST          */
*     PRUDATA(1)='51'X;             /* SET NCP REQUEST       @Y17XARX*/
         B     @RC00438                                            0440
@RF00438 L     @01,OCUNIT(,ROPCE)                                  0440
         MVI   PRUDATA(@01),X'51'                                  0440
*   OCCKDAT1=PRUDATA(1);            /* SAVE FOR CHKPT        @Y17XARX*/
@RC00438 L     @15,OCUNIT(,ROPCE)                                  0441
         MVC   OCCKDAT1(1,ROPCE),PRUDATA(@15)                      0441
*   PRUDATA(2:3)=OCRSID;            /* SET DESTINATION RSID  @Y17XARX*/
         MVC   PRUDATA+1(2,@15),OCRSID(ROPCE)                      0442
*/********************************************************************/
*/* SET UP TO CALL BTU DISPATCHER                                    */
*/********************************************************************/
*                                                                  0443
*   OCWTG='N0';                     /* INDICATE THIS MODULE TO     0443
*                                      PROCESS RETURN BTU            */
         MVC   OCWTG(2,ROPCE),@CC01799                             0443
*   OCACTREQ='0'B;                  /* RQST NCP CHECKS       @Y17XARX*/
         NI    OCACTREQ(ROPCE),B'11110111'                         0444
*   OPCLDNME(4:5)='02';             /* SET TO XCTL TO BTU DISPATCHER */
         MVC   OPCLDNME+3(2,ROPCAVT),@CC01800                      0445
*   GOTO XCTL;                      /* LINK TO NEXT MODULE           */
         B     XCTL                                                0446
*                                                                  0447
*/********************************************************************/
*/* SCAN ROUTINES                                                    */
*/********************************************************************/
*                                                                  0447
*SCAN:                                                             0447
*   RRPTR=RAPTR;                    /* SAVE POINTER TO 1ST CHAR      */
SCAN     LR    RRPTR,RAPTR                                         0447
*   RBYSCN=0;                       /* INITIALIZE BYTES SCANNED      */
         SLR   RBYSCN,RBYSCN                                       0448
*SCANLOOP:                                                         0449
*   IF RLEN^=0 THEN                 /* END OF SCAN ?                 */
SCANLOOP LTR   RLEN,RLEN                                           0449
         BZ    @RF00449                                            0449
*     DO;                           /* NO, CONTINUE TO SCAN          */
*       IF SCANBYTE=',' THEN        /* SCAN BYTE A COMMA ?           */
         CLI   SCANBYTE(RAPTR),C','                                0451
         BNE   @RF00451                                            0451
*         DO;                       /* YES                           */
*           RLEN=RLEN-1;            /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0453
*           RAPTR=RAPTR+1;          /* INCREMENT PAST COMMA          */
         AL    RAPTR,@CF00062                                      0454
*         END;                                                     0455
*       ELSE                        /* NO                            */
*         IF SCANBYTE>='A' THEN     /* VALID CHARACTER ?             */
         B     @RC00451                                            0456
@RF00451 CLI   SCANBYTE(RAPTR),C'A'                                0456
         BL    @RF00456                                            0456
*           DO;                     /* YES                           */
*             RBYSCN=RBYSCN+1;      /* INCREMENT BYTES SCANNED       */
         LA    @15,1                                               0458
         ALR   RBYSCN,@15                                          0458
*             RAPTR=RAPTR+1;        /* INCREMENT TO NEXT BYTE        */
         ALR   RAPTR,@15                                           0459
*             RLEN=RLEN-1;          /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0460
*             GOTO SCANLOOP;        /* CONTINUE SCAN                 */
         B     SCANLOOP                                            0461
*           END;                                                   0462
*         ELSE                      /* NO                            */
*           GOTO CMDINV;            /* COMMAND INVALID               */
*     END;                                                         0464
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 DS    0H                                                  0465
@EF00001 DS    0H                                                  0465
@ER00001 BR    @14                                                 0465
*SCAN1:                                                            0466
*   RRPTR=RAPTR;                    /* SAVE POINTER TO 1ST CHAR      */
SCAN1    LR    RRPTR,RAPTR                                         0466
*   RBYSCN=0;                       /* INITIALIZE BYTES SCANNED      */
         SLR   RBYSCN,RBYSCN                                       0467
*NUMERIC:                                                          0468
*   IF RLEN^=0 THEN                 /* ANY DIGITS LEFT ?             */
NUMERIC  LTR   RLEN,RLEN                                           0468
         BZ    @RF00468                                            0468
*     DO;                           /* YES, CONTINUE TO SCAN         */
*       IF SCANBYTE=',' THEN        /* SCAN BYTE A COMMA ?           */
         CLI   SCANBYTE(RAPTR),C','                                0470
         BNE   @RF00470                                            0470
*         DO;                       /* YES                           */
*           RLEN=RLEN-1;            /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0472
*           RAPTR=RAPTR+1;          /* INCREMENT PAST COMMA          */
         AL    RAPTR,@CF00062                                      0473
*         END;                                                     0474
*       ELSE                        /* NO                            */
*         IF SCANBYTE>='0' THEN     /* DIGIT A VALID NUMERIC ?       */
         B     @RC00470                                            0475
@RF00470 CLI   SCANBYTE(RAPTR),C'0'                                0475
         BL    @RF00475                                            0475
*           DO;                     /* YES                           */
*             RBYSCN=RBYSCN+1;      /* INCREMENT BYTES SCANNED       */
         LA    @15,1                                               0477
         ALR   RBYSCN,@15                                          0477
*             RAPTR=RAPTR+1;        /* INCREMENT TO NEXT DIGIT       */
         ALR   RAPTR,@15                                           0478
*             RLEN=RLEN-1;          /* REDUCE BYTES LEFT TO SCAN     */
         BCTR  RLEN,0                                              0479
*             GOTO NUMERIC;         /* CHECK NEXT DIGIT              */
         B     NUMERIC                                             0480
*           END;                                                   0481
*         ELSE                      /* NO                            */
*           GOTO CMDINV;            /* COMMAND INVALID               */
*     END;                                                         0483
*   RETURN;                         /* RETURN TO CALLER              */
         B     @EL00001                                            0484
*                                                                  0485
*/********************************************************************/
*/* PROCESS THE RESPONSE BTU. THE FOLLOWING RESPONSES ARE POSSIBLE:  */
*/*                                                                  */
*/*                                                                  */
*/*      ERROR :    X'0815' - LINE ALREADY IN REQUESTED MODE @Y17XARX*/
*/*                                                                  */
*/*                 X'080C' - UNABLE TO PERFORM LINE SWITCH  @Y17XARX*/
*/*                 X'0809' - COMMAND ACTIVE ON LINE         @Y17XARX*/
*/********************************************************************/
*                                                                  0485
*PROCBTU:                                                          0485
*   IEDQTPTR=OCELEM;                /* GET TERM ENTRY ADDR FROM THE
*                                      OPCE                  @Y17XARX*/
PROCBTU  L     IEDQTPTR,OCELEM(,ROPCE)                             0485
*   IF PRURHSDI='1'B THEN           /* NORMAL RESPONSE?      @Y17XARX*/
         L     @01,OCUNIT(,ROPCE)                                  0486
         AL    @01,@CF01834                                        0486
         TM    PRURHSDI(@01),B'00000100'                           0486
         BO    @RT00486                                            0486
*     GOTO NOTNORM;                 /* NO - CHECK OTHER RESPONSES    */
*RESTART1:                                                         0488
*   RMSGNUM=449;                    /* SET GOOD MSG NUMBER           */
RESTART1 LA    RMSGNUM,449                                         0488
*   IF OCSWITCH='27'X THEN          /* REQUEST FOR EP                */
         CLI   OCSWITCH(ROPCE),X'27'                               0489
         BNE   @RF00489                                            0489
*     TRMEPMOD='1'B;                /* YES, INDICATE EP MODE         */
         LR    @01,IEDQTPTR                                        0490
         AL    @01,@CF01836                                        0490
         OI    TRMEPMOD-11(@01),B'10000000'                        0490
*   ELSE                            /* NO                            */
*     TRMEPMOD='0'B;                /* INDICATE NCP MODE             */
         B     @RC00489                                            0491
@RF00489 LR    @01,IEDQTPTR                                        0491
         AL    @01,@CF01836                                        0491
         NI    TRMEPMOD-11(@01),B'01111111'                        0491
*   OCWTG='M3';                     /* ID OF MSG MODULE              */
@RC00489 MVC   OCWTG(2,ROPCE),@CC01814                             0492
*   OCPARM=RMSGNUM;                 /* SAVE MSG NUMBER               */
         STH   RMSGNUM,OCPARM(,ROPCE)                              0493
*   OPCLDNME(4:5)='06';             /* CHECK POINT MODULE ID         */
         MVC   OPCLDNME+3(2,ROPCAVT),@CC01815                      0494
*   GOTO XCTL1;                     /* EXIT                          */
         B     XCTL1                                               0495
*NOTNORM:                                                          0496
*   IF SENSE='0809'X×SENSE='080C'X THEN/* LN SWTCH NOT PERF  @OY18001*/
NOTNORM  L     @15,OCUNIT(,ROPCE)                                  0496
         CLC   SENSE(2,@15),@CH01817                               0496
         BE    @RT00496                                            0496
         CLC   SENSE(2,@15),@CH01818                               0496
         BNE   @RF00496                                            0496
@RT00496 DS    0H                                                  0497
*     RMSGNUM=447;                  /* YES, SET ERROR MSG            */
         LA    RMSGNUM,447                                         0497
*   ELSE                                                           0498
*     IF SENSE='0815'X THEN         /* LINE ALREADY IN MODE  @Y17XARX*/
         B     @RC00496                                            0498
@RF00496 L     @01,OCUNIT(,ROPCE)                                  0498
         CLC   SENSE(2,@01),@CH01821                               0498
         BNE   @RF00498                                            0498
*       DO;                         /* YES, DO                       */
*         RMSGNUM=450;              /* SET ERROR MSG                 */
         LA    RMSGNUM,450                                         0500
*         IF OCSWITCH='27'X THEN    /* REQUEST FOR EP                */
         CLI   OCSWITCH(ROPCE),X'27'                               0501
         BNE   @RF00501                                            0501
*           TRMEPMOD='1'B;          /* YES, INDICATE EP MODE         */
         LR    @01,IEDQTPTR                                        0502
         AL    @01,@CF01836                                        0502
         OI    TRMEPMOD-11(@01),B'10000000'                        0502
*         ELSE                      /* NO                            */
*           TRMEPMOD='0'B;          /* INDICATE NCP MODE             */
         B     @RC00501                                            0503
@RF00501 LR    @01,IEDQTPTR                                        0503
         AL    @01,@CF01836                                        0503
         NI    TRMEPMOD-11(@01),B'01111111'                        0503
*       END;                                                       0504
*     ELSE                                                         0505
*       RMSGNUM=199;                /* SET ERROR MSG                 */
         B     @RC00498                                            0505
@RF00498 LA    RMSGNUM,199                                         0505
*   GOTO ERREXIT;                   /* WRITE THE MESSAGE             */
         B     ERREXIT                                             0506
*                                                                  0507
*/********************************************************************/
*/* ERROR EXITS                                                      */
*/********************************************************************/
*                                                                  0507
*CMDINV:                                                           0507
*   RMSGNUM=18;                     /* SET COMMAND INVALID           */
CMDINV   LA    RMSGNUM,18                                          0507
*/********************************************************************/
*/* EXIT CODE                                                        */
*/********************************************************************/
*                                                                  0508
*ERREXIT:                                                          0508
*   OPCLDNME(4:5)='03';             /* SET ERROR MODULE NAME         */
ERREXIT  MVC   OPCLDNME+3(2,ROPCAVT),@CC01825                      0508
*XCTL1:                                                            0509
*XCTL:                                                             0509
*   RPARM=ROPCAVT;                  /* SET POINTER TO OP CTL AVT     */
XCTL1    DS    0H                                                  0509
XCTL     LR    RPARM,ROPCAVT                                       0509
*   DO;                             /* IEDXCTL                       */
*     GEN EXIT REFS(ROPCAVT,OPCTRACE,OPCXCTL) NOSEQFLOW;           0511
*                                   /*
         LA    15,OPCXCTL(,ROPCAVT)   POINT TO OPCXCTL LIST
         EX    0,OPCTRACE(,ROPCAVT)    INVOKE XCTL TRACE
         XCTL  SF=(E,(15))             XCTL TO NEXT MODULE
*   END;                            /* END OF IEDXCTL                */
*                                                                  0512
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL NEXT MODULE                                      @OZ35627*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0513
*   GEN;                                                           0513
MOVERLN  MVC   OPCSAVE(EQU0,ROPCAVT),EQU0(RRPTR) MOVE RLN
PACK     PACK  OPCSAVE+EQU6(EQU2,ROPCAVT),OPCSAVE(EQU0,ROPCAVT)
*                                       PACK RLN
EQU0     EQU   0                        EQUATE 0
EQU2     EQU   2                        EQUATE 2
EQU6     EQU   6                        EQUATE 6
*   END IGCN010D                                                   0514
*                                                                  0514
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TOPCAVTD)                                       */
*/*%INCLUDE SYSLIB  (TOPCED  )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*                                                                  0514
*       ;                                                          0514
         B     @EL00001                                            0514
@DATA    DS    0H
@CH00066 DC    H'3'
@CH01817 DC    XL2'0809'
@CH01818 DC    XL2'080C'
@CH01821 DC    XL2'0815'
         DS    0F
         DS    0F
@CF00062 DC    F'1'
@CF00053 DC    F'8'
@CF00038 DC    F'24'
@CF01783 DC    F'255'
@CF01836 DC    F'-13'
@CF01830 DC    F'-12'
@CF01829 DC    F'-11'
@CF01834 DC    F'-8'
@CF01382 DC    F'-3'
@CF01832 DC    XL4'0000FFFF'
         DS    0D
IEDPRUQP DS    A
FID1PRUH DC    XL4'2B80001D'
INVALTIC DC    XL4'08000002'
@CC01794 DC    C'NCP'
@CC01793 DC    C'EP'
@CC01799 DC    C'N0'
@CC01800 DC    C'02'
@CC01814 DC    C'M3'
@CC01815 DC    C'06'
@CC01825 DC    C'03'
BLANKS   DC    CL8'        '
EPMODE   DC    CL8'EP MODE'
NCPMODE  DC    CL8'NCP MODE'
ZAPAREA  DC    50X'00'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
RZERO    EQU   @00
RMSGNUM  EQU   @00
RPARM    EQU   @01
ROPCAVT  EQU   @02
ROPCE    EQU   @03
IEDQAPTR EQU   @04
RWORKA   EQU   @05
RLEN     EQU   @06
RAPTR    EQU   @07
IEDQTPTR EQU   @07
RWORKB   EQU   @08
RRPTR    EQU   @08
RBYSCN   EQU   @09
RSAVE    EQU   @13
RBRANCH  EQU   @15
RRETURN  EQU   @14
SCANBYTE EQU   0
OPEREP   EQU   0
OPERNCP  EQU   0
LASTCHAR EQU   -1
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+288
AVTREADD EQU   IEDQAVTD+380
AVTBUFSW EQU   IEDQAVTD+384
@NM00004 EQU   IEDQAVTD+388
AVTCKFLG EQU   @NM00004
AVTBASE  EQU   IEDQAVTD+412
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+424
AVTHG02  EQU   IEDQAVTD+528
AVTDISP  EQU   IEDQAVTD+552
AVTHD    EQU   IEDQAVTD+556
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+612
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+652
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+680
AVTCKBYT EQU   IEDQAVTD+691
AVTHG01  EQU   IEDQAVTD+692
AVTCKLNK EQU   IEDQAVTD+696
AVTCRELE EQU   IEDQAVTD+708
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+716
AVTADBUF EQU   IEDQAVTD+720
AVTSYSER EQU   IEDQAVTD+728
AVTBFRFG EQU   IEDQAVTD+784
AVTCKPQB EQU   IEDQAVTD+804
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+816
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+828
AVTCWFL1 EQU   IEDQAVTD+924
AVTCWFL2 EQU   IEDQAVTD+925
AVTSUBT  EQU   IEDQAVTD+948
AVTIOTR  EQU   IEDQAVTD+949
AVTHA2   EQU   IEDQAVTD+1022
AVTHA3   EQU   IEDQAVTD+1024
AVTBIT1  EQU   IEDQAVTD+1050
AVTBIT2  EQU   IEDQAVTD+1051
AVTBIT3  EQU   IEDQAVTD+1052
AVTBIT4  EQU   IEDQAVTD+1136
@NM00083 EQU   IEDQAVTD+1232
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTSCLU EQU   IEDNSVTD+168
SAVTTCPU EQU   IEDNSVTD+238
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
SAVTNETF EQU   IEDNSVTD+324
SAVTCDRV EQU   IEDNSVTD+332
IEDQOPCD EQU   0
OPCDOUBL EQU   IEDQOPCD
OPCAVTPT EQU   IEDQOPCD+8
OPCCOPCE EQU   IEDQOPCD+12
OPCDCBLK EQU   IEDQOPCD+16
OPCTRACE EQU   IEDQOPCD+32
OPCSAVE  EQU   IEDQOPCD+56
OPCFLAG1 EQU   IEDQOPCD+146
OPCAQCTL EQU   IEDQOPCD+180
OPCXCTL  EQU   IEDQOPCD+204
OPCLDNME EQU   IEDQOPCD+212
OPCHORT  EQU   IEDQOPCD+256
OPCGETBF EQU   IEDQOPCD+276
OPCSPEC  EQU   IEDQOPCD+300
OPCRSTRT EQU   OPCSPEC
OPCPWCOB EQU   IEDQOPCD+368
OPCPWQCB EQU   OPCPWCOB
OPCPWECB EQU   OPCPWCOB+4
OPCSESS  EQU   IEDQOPCD+384
OPCSFLAG EQU   OPCSESS
OPCSENSE EQU   OPCSESS+8
OPCSNSSY EQU   OPCSENSE
OPCSNSUS EQU   OPCSENSE+2
OPCPCID  EQU   IEDQOPCD+456
OPCUNIQP EQU   OPCPCID+2
OPCSESSF EQU   IEDQOPCD+464
IEDQOPCE EQU   0
OCELEM   EQU   IEDQOPCE+4
OCUNIT   EQU   IEDQOPCE+8
OCRUDEST EQU   OCUNIT
OCCKPKEY EQU   OCRUDEST
OCSCAN   EQU   OCCKPKEY
@NM00130 EQU   OCRUDEST+1
OCUNITBF EQU   @NM00130+2
OCOPTCDE EQU   IEDQOPCE+12
OCSWITCH EQU   IEDQOPCE+13
OCFLAG   EQU   IEDQOPCE+14
OCRESP   EQU   OCFLAG
OCRLN    EQU   IEDQOPCE+15
OCCIB    EQU   IEDQOPCE+16
OCMSTSAV EQU   OCCIB
OCDEST   EQU   OCMSTSAV
OCTRMTBL EQU   IEDQOPCE+20
OCLINENO EQU   IEDQOPCE+22
OCTIOT   EQU   OCLINENO
OCWTGB   EQU   OCTIOT
OCTRUNIT EQU   IEDQOPCE+24
OCRSID   EQU   OCTRUNIT
OCALSTAT EQU   OCRSID
OCFNAALL EQU   OCALSTAT
OCACTREQ EQU   OCALSTAT
OCFLAG1  EQU   OCRSID+1
OCPARM   EQU   IEDQOPCE+28
OCWTG    EQU   IEDQOPCE+30
OCBACKUP EQU   IEDQOPCE+32
OCBUFNED EQU   OCBACKUP
OCCOUNT1 EQU   OCBUFNED
OCBUFGOT EQU   OCBACKUP+2
OCCOUNT2 EQU   OCBUFGOT
OCMODNME EQU   IEDQOPCE+40
OCIPLWA  EQU   OCMODNME
OCPTRSAV EQU   OCMODNME+4
OCCKDATA EQU   IEDQOPCE+48
OCRSTGTM EQU   OCCKDATA
OC379RRT EQU   OCRSTGTM
OCCKDAT1 EQU   OC379RRT
OCNCP    EQU   OCRSTGTM+2
OCOID    EQU   IEDQOPCE+56
IEDQOPCN EQU   0
OCLDNME  EQU   IEDQOPCN
OCLINTTE EQU   OCLDNME
OCREQFLG EQU   OCLINTTE+2
OCPREFLG EQU   OCLINTTE+3
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUNUNIT EQU   PRUTIC+1
PRUVTCHK EQU   PRUNUNIT+2
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHSDI EQU   PRURHFG0
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMDESTQ EQU   IEDQTRM+1
TRMRSTRT EQU   TRMDESTQ+2
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMSESCT EQU   TLISTCNT
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMPLIM  EQU   TLISTEN+1
TRMALTD  EQU   IEDQTRM+8
TRMPRILK EQU   TRMALTD
TRMDEVFL EQU   IEDQTRM+10
TRMADDC  EQU   TRMDEVFL
TRMNCPI  EQU   TRMDEVFL+1
TRMSTAT  EQU   IEDQTRM+12
TRMAPB   EQU   TRMSTAT
TRMSIO   EQU   TRMAPB
TRMOWNER EQU   TRMSIO
TRMSENSE EQU   TRMAPB+3
IEDNTRM  EQU   0
TRMDIALQ EQU   IEDNTRM+1
TRMBYTE7 EQU   TRMDIALQ+2
TRMATNDX EQU   IEDNTRM+4
TRMINDEX EQU   IEDNTRM+6
TRMCOHTG EQU   IEDNTRM+8
TRMBYTE6 EQU   TRMCOHTG
TRMCDF0  EQU   TRMBYTE6
TRMBYTE5 EQU   TRMCOHTG+1
TRMBYTE4 EQU   IEDNTRM+10
TRMBYTE3 EQU   IEDNTRM+11
TRMBYTE2 EQU   IEDNTRM+12
TRMRSACT EQU   TRMBYTE2
TRMINPG  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+13
TRMSCPRQ EQU   TRMBYTE1
TRMSTOTE EQU   TRMBYTE1
TRMCOHRT EQU   IEDNTRM+14
TRMBYTE0 EQU   IEDNTRM+16
TRMNOWCD EQU   TRMBYTE0
TRMSIBPT EQU   IEDNTRM+17
TRMLTRAC EQU   TRMSIBPT
TRMLBUFR EQU   TRMLTRAC
TRMRLMCT EQU   IEDNTRM+20
TRMLGBST EQU   TRMRLMCT
TRMTYPE  EQU   IEDNTRM+21
TRMSUBST EQU   IEDNTRM+22
COHORTLK EQU   0
TNTCODE  EQU   0
DCBLOCAT EQU   0
IEDQNPTR EQU   0
TNTOFF1  EQU   0
OPCAQWD  EQU   OPCAQCTL
OPCAQWD1 EQU   OPCAQWD
OPCAQWD2 EQU   OPCAQWD+4
OPCAQWD3 EQU   OPCAQWD+8
@NM00137 EQU   OCCKDATA
@NM00139 EQU   OCCIB
@NM00140 EQU   @NM00139+1
OCCKPKY1 EQU   OCCKPKEY
OCCKPTYP EQU   OCCKPKY1
OCICACTN EQU   OCMODNME
OCICDADR EQU   OCICACTN
OCICSW   EQU   OCICDADR+3
@NM00145 EQU   OCBACKUP
@NM00146 EQU   OCCKDATA
OCMSGFLG EQU   OCPREFLG
OCBKUP1  EQU   OCMODNME
@NM00150 EQU   OCMODNME
OCBKUP2  EQU   OCCKDATA
OCBKUP3  EQU   OCLDNME
OCRESPTR EQU   OCBKUP3+4
OCDIALLN EQU   OCRESPTR
OCIPLDMP EQU   OCLDNME+4
@NM00172 EQU   TRMSTATE
TRMLUFD0 EQU   TRMBYTE7
TRMSNAST EQU   TRMBYTE6
TRMCDFD0 EQU   TRMBYTE5
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMLU1   EQU   TRMBYTE4
TRMLINK1 EQU   TRMBYTE4
TRMDCONS EQU   TRMLINK1
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMIPLDM EQU   TRMNCP
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMCDMGR EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
TRMEPMOD EQU   TRMLINK
@NM00192 EQU   OPCFLAG1
ERRFLAG  EQU   @NM00192
SENSE    EQU   PRUDATA
SVDREGS  EQU   OPCSAVE
OCLINRRT EQU   OCTRUNIT
OCPCID   EQU   OCBACKUP
OCRSNCDE EQU   OCALSTAT
OCSENSE  EQU   OCBACKUP
TRMOPT   EQU   IEDQTRM+20
TRMPOOLP EQU   TRMINSEQ
TRMSRPTR EQU   TRMPLIM
*                                      START UNREFERENCED COMPONENTS
TRMLDISC EQU   TRMLINK
@NM00191 EQU   TRMLINK
TRMLALOC EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMCDLOG EQU   TRMCDMGR
@NM00190 EQU   TRMCDMGR
@NM00189 EQU   TRMCDMGR
@NM00188 EQU   TRMCDMGR
@NM00187 EQU   TRMCDMGR
@NM00186 EQU   TRMCDMGR
TRMBKDUP EQU   TRMCDMGR
TRMLULOG EQU   TRMLU
@NM00185 EQU   TRMLU
@NM00184 EQU   TRMLU
@NM00183 EQU   TRMLU
TRMTDIFF EQU   TRMLU
@NM00182 EQU   TRMLU
@NM00181 EQU   TRMLU
@NM00180 EQU   TRMLU
TRMPCONT EQU   TRMPU
TRMPDOCQ EQU   TRMPU
TRMPULOC EQU   TRMPU
TRMPDNAS EQU   TRMPU
TRMPALOC EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMCONN  EQU   TRMIPLDM
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
TRMNCPLK EQU   TRMLINK1
@NM00179 EQU   TRMLINK1
TRMDCONN EQU   TRMDCONS
TRMDCOP  EQU   TRMDCONS
TRMPMARY EQU   TRMLU1
TRMLUNAS EQU   TRMLU1
@NM00178 EQU   TRMLU1
TRMLSCVP EQU   TRMLU1
@NM00177 EQU   TRMLU1
TRMCPOPT EQU   TRMLU1
TRMCPREQ EQU   TRMLU1
@NM00176 EQU   TRMNCP1
TRMANS   EQU   TRMNCP1
TRMLINOP EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
TRMINERR EQU   TRMCDFD0
TRMLUTM  EQU   TRMCDFD0
TRMLUIT  EQU   TRMCDFD0
TRMLUREQ EQU   TRMCDFD0
TRMCDPRE EQU   TRMCDFD0
TRMWASCD EQU   TRMCDFD0
TRMSRPFG EQU   TRMCDFD0
TRMSESRQ EQU   TRMCDFD0
@NM00175 EQU   TRMSNAST
TRMDRSRC EQU   TRMSNAST
@NM00174 EQU   TRMLUFD0
TRMNOINP EQU   TRMLUFD0
TRMASSOC EQU   TRMLUFD0
TRMAUTO  EQU   TRMLUFD0
@NM00173 EQU   @NM00172
TRMENTRY EQU   @NM00172
@NM00153 EQU   OCIPLDMP
OCACTRQ  EQU   OCIPLDMP
OCDACRQ  EQU   OCIPLDMP
OCIPLRQ  EQU   OCIPLDMP
OCDMPRQ  EQU   OCIPLDMP
@NM00152 EQU   OCRESPTR+2
OCOHNATA EQU   OCDIALLN
OCRRTPTR EQU   OCBKUP3
@NM00151 EQU   OCBKUP2+4
OCNHITTC EQU   OCBKUP2+2
OCLINTTC EQU   OCBKUP2
OCCSIB   EQU   @NM00150
@NM00149 EQU   OCBKUP1+6
OCTARTTC EQU   OCBKUP1+4
OCSRTTC  EQU   OCBKUP1+2
OCRSTTC  EQU   OCBKUP1
@NM00148 EQU   OCMSGFLG
OCRRT    EQU   OCMSGFLG
OCNAME   EQU   OCMSGFLG
OCLU1TTE EQU   @NM00146+5
OCSFLAG  EQU   @NM00146+4
OCLU2TTI EQU   @NM00146+2
OCLU1TTI EQU   @NM00146
OCDISTLN EQU   @NM00145+6
OCDISTAD EQU   @NM00145+2
OCDISTNA EQU   @NM00145
OCICINAC EQU   OCICSW
@NM00144 EQU   OCICSW
OCICATST EQU   OCICDADR+1
OCICTYPE EQU   OCICDADR
@NM00143 EQU   OCCKPKY1
OCCKPENV EQU   OCCKPKY1
OCCKPRST EQU   OCCKPTYP
OCCKPNCP EQU   OCCKPTYP
OCCKPINC EQU   OCCKPTYP
@NM00142 EQU   @NM00139+2
@NM00141 EQU   @NM00140
OCTSTAT  EQU   @NM00140
OCREASON EQU   @NM00139
@NM00138 EQU   @NM00137+4
OCOIDEP  EQU   @NM00137
OPCAQLST EQU   OPCAQWD3+1
OPCAQRQ3 EQU   OPCAQWD3
OPCAQSEC EQU   OPCAQWD2+1
OPCAQRQ2 EQU   OPCAQWD2
OPCAQFST EQU   OPCAQWD1+1
OPCAQREQ EQU   OPCAQWD1
TRMPRIME EQU   TRMLGBST
TRMOWNR  EQU   TRMLBUFR+1
TRMGPCNT EQU   TRMLBUFR
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
TRMACDC  EQU   TRMNOWCD
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMCINOP EQU   TRMCDF0
TRMRSTPD EQU   TRMCDF0
TRMCLNXI EQU   TRMCDF0
TRMDVAS0 EQU   TRMCDF0
TRMPURGE EQU   TRMCDF0
TRMCDST  EQU   TRMINDEX
TRMASNDX EQU   TRMATNDX
TRMBYTE8 EQU   TRMDIALQ+1
@NM00171 EQU   TRMDIALQ
@NM00170 EQU   IEDNTRM
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMLOCAD EQU   TRMSENSE
TRMTEMPR EQU   TRMAPB+2
TRMNADDR EQU   TRMOWNER
@NM00169 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
@NM00168 EQU   TRMNCPI
TRMRNTRM EQU   TRMDEVFL+1
@NM00167 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMSCV   EQU   TRMADDC
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMSTEAL EQU   TRMPRILK
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TRMSESCT
TRMVERIF EQU   TRMRSTRT
@NM00166 EQU   TRMRSTRT
@NM00165 EQU   TRMDESTQ
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
@NM00164 EQU   IEDPRUND+6
PRUTAG   EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00163 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00162 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00161 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00160 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00159 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
@NM00158 EQU   PRUVTCHK
PRUITSET EQU   PRUVTCHK
@NM00157 EQU   PRUVTCHK
@NM00156 EQU   PRUNUNIT
@NM00155 EQU   PRUTIC
@NM00154 EQU   IEDPRUQD+4
@NM00147 EQU   OCLDNME+6
OC1SQID  EQU   OCLDNME+4
OCWAITPC EQU   OCPREFLG
OCSRCCLN EQU   OCPREFLG
OCREMCON EQU   OCPREFLG
OCCLNUP  EQU   OCPREFLG
OCTOTEP  EQU   OCPREFLG
OCREPOST EQU   OCPREFLG
OCRSPSNT EQU   OCPREFLG
OCBFREQ  EQU   OCPREFLG
OCIDLE   EQU   OCREQFLG
OCFORCE  EQU   OCREQFLG
OCDCARD  EQU   OCREQFLG
OCPARTAL EQU   OCREQFLG
OCADNCP  EQU   OCREQFLG
OCRMPORQ EQU   OCREQFLG
OCCDLACT EQU   OCREQFLG
OCFLUSHZ EQU   OCREQFLG
OCRESPCT EQU   OCLINTTE
@NM00136 EQU   IEDQOPCE+60
OCURC    EQU   OCOID
OCCKPTWA EQU   OCCKDATA+4
OCSRCTTC EQU   OCNCP
OCCKDAT2 EQU   OC379RRT+1
OCECHOPT EQU   OCPTRSAV
OCPUADR  EQU   OCIPLWA+2
OCWTGSAV EQU   OCIPLWA
OCDVRDCT EQU   OCBACKUP+6
@NM00135 EQU   OCBACKUP+4
OCBUFRET EQU   OCCOUNT2
OCBUFUSD EQU   OCCOUNT1
OCRESNUM EQU   OCPARM
OCSEQ    EQU   OCTRUNIT+2
OCTYPTRM EQU   OCFLAG1
OCNONE   EQU   OCALSTAT
OCSOME   EQU   OCALSTAT
OCALLFLG EQU   OCALSTAT
OCREDRVE EQU   OCALSTAT
OCSEQIND EQU   OCALSTAT
OCDACTIP EQU   OCFNAALL
OCRENTRD EQU   OCALSTAT
OCDIALX  EQU   OCWTGB
OCATNDX  EQU   OCMSTSAV+2
OCREQVAL EQU   OCDEST+1
OCCONID  EQU   OCDEST
OCLOCAD  EQU   OCRLN
OCATTACH EQU   OCFLAG
OCSSCP   EQU   OCFLAG
OCOUTPUT EQU   OCFLAG
OCLINE   EQU   OCFLAG
OCMPP    EQU   OCFLAG
OCTOTE   EQU   OCFLAG
OCCONSOL EQU   OCFLAG
@NM00134 EQU   OCSWITCH
OCQUCKN  EQU   OCSWITCH
OCPRIFLG EQU   OCOPTCDE
@NM00133 EQU   OCUNITBF
OCINVTIC EQU   OCUNITBF
@NM00132 EQU   OCUNITBF
@NM00131 EQU   @NM00130
@NM00129 EQU   OCSCAN
OCNOTUCB EQU   OCSCAN
OCNONAME EQU   OCSCAN
OCALLRLN EQU   OCSCAN
OCDDNAME EQU   OCSCAN
OCDDNRLN EQU   OCSCAN
OCADDR   EQU   OCSCAN
OCELMPTR EQU   OCELEM+1
OCELMPRI EQU   OCELEM
OCLINK   EQU   IEDQOPCE
OPCBOTTM EQU   IEDQOPCD+3644
@NM00128 EQU   IEDQOPCD+1948
@NM00127 EQU   IEDQOPCD+1860
@NM00126 EQU   IEDQOPCD+1772
@NM00125 EQU   IEDQOPCD+1696
@NM00124 EQU   IEDQOPCD+1620
OPCDSRWT EQU   IEDQOPCD+1616
@NM00123 EQU   IEDQOPCD+1532
@NM00122 EQU   IEDQOPCD+1336
@NM00121 EQU   IEDQOPCD+1328
@NM00120 EQU   IEDQOPCD+528
OPCRSTRS EQU   IEDQOPCD+524
OPCSAVES EQU   IEDQOPCD+520
OPCRSPBD EQU   IEDQOPCD+516
OPCNFY03 EQU   IEDQOPCD+512
OPCNFY01 EQU   IEDQOPCD+508
OPCURC   EQU   IEDQOPCD+504
OPCCINBD EQU   IEDQOPCD+500
OPCCRKEY EQU   IEDQOPCD+496
OPCDRSET EQU   IEDQOPCD+492
OPCDRCLN EQU   IEDQOPCD+488
OPCDRDEL EQU   IEDQOPCD+484
OPCDRLOD EQU   IEDQOPCD+480
OPCDRLOC EQU   IEDQOPCD+476
OPCDRCVT EQU   IEDQOPCD+472
OPCDRFST EQU   IEDQOPCD+468
OPCLSABC EQU   IEDQOPCD+466
@NM00119 EQU   IEDQOPCD+465
@NM00118 EQU   OPCSESSF
OPCUNIQV EQU   OPCUNIQP+2
OPCUNIQU EQU   OPCUNIQP
OPCOSSCP EQU   OPCPCID
@NM00117 EQU   IEDQOPCD+452
@NM00116 EQU   IEDQOPCD+448
OPCSDUPU EQU   IEDQOPCD+444
OPCSDULU EQU   IEDQOPCD+440
OPCSDRVT EQU   IEDQOPCD+436
OPCSDRET EQU   IEDQOPCD+432
OPCSDHSY EQU   IEDQOPCD+428
OPCSDENQ EQU   IEDQOPCD+424
OPCSDDIA EQU   IEDQOPCD+420
OPCSDAPU EQU   IEDQOPCD+416
OPCSDALU EQU   IEDQOPCD+412
OPCCSKEY EQU   IEDQOPCD+408
OPCSSKEY EQU   IEDQOPCD+404
OPCPRTTE EQU   IEDQOPCD+400
OPCLU2TT EQU   OPCSESS+14
OPCLU1TT EQU   OPCSESS+12
OPCSNSU2 EQU   OPCSNSUS+1
OPCSNSU1 EQU   OPCSNSUS
OPCSNSMN EQU   OPCSNSSY+1
OPCSNSMJ EQU   OPCSNSSY
OPCCSIB  EQU   OPCSESS+4
OPCCTTE  EQU   OPCSESS+1
@NM00115 EQU   OPCSFLAG
OPCISQUD EQU   OPCSFLAG
OPCERRST EQU   OPCSFLAG
OPCISRSP EQU   OPCSFLAG
OPCISQUE EQU   OPCSFLAG
OPCRAPMH EQU   OPCSFLAG
OPCRAPI  EQU   OPCSFLAG
OPCGTSIB EQU   IEDQOPCD+380
@NM00114 EQU   OPCPWCOB+9
@NM00113 EQU   OPCPWCOB+8
@NM00112 EQU   OPCPWECB+1
OPCPWCCC EQU   OPCPWECB
OPCPWCHN EQU   OPCPWQCB+1
OPCPWVTO EQU   OPCPWQCB
OPCWAITV EQU   IEDQOPCD+364
OPCTOTCK EQU   IEDQOPCD+360
OPCAPXTL EQU   IEDQOPCD+356
OPCDECR  EQU   IEDQOPCD+352
OPCBUFWT EQU   IEDQOPCD+348
OPCWRKSP EQU   IEDQOPCD+320
OPCADGOT EQU   IEDQOPCD+318
OPCRQCNT EQU   IEDQOPCD+316
OPPOLSTP EQU   IEDQOPCD+312
OPCCKCIB EQU   IEDQOPCD+308
OPCEND   EQU   IEDQOPCD+307
OPCSTCBS EQU   IEDQOPCD+306
OPCHNEND EQU   IEDQOPCD+302
OPCOQSW  EQU   IEDQOPCD+301
@NM00111 EQU   OPCSPEC
@NM00110 EQU   OPCSPEC
@NM00109 EQU   OPCSPEC
@NM00108 EQU   OPCSPEC
OPCFRMCA EQU   OPCSPEC
OPCPART  EQU   OPCSPEC
OPCALTD  EQU   OPCSPEC
OPCBFEND EQU   IEDQOPCD+296
OPCBFIRS EQU   IEDQOPCD+292
OPCAVBUF EQU   IEDQOPCD+290
OPCIPLCT EQU   IEDQOPCD+289
OPCCLNTS EQU   IEDQOPCD+288
OPCHA8   EQU   IEDQOPCD+286
OPCBFREQ EQU   IEDQOPCD+284
OPCFREBF EQU   IEDQOPCD+280
OPCNEXT  EQU   IEDQOPCD+272
OPCFMDFC EQU   IEDQOPCD+268
OPCSCNC  EQU   IEDQOPCD+264
OPCHORTG EQU   IEDQOPCD+260
OPCCKPTL EQU   IEDQOPCD+252
OPCCKPTF EQU   IEDQOPCD+248
OPCWAITA EQU   IEDQOPCD+244
OPCWAITR EQU   IEDQOPCD+240
OPCWAITP EQU   IEDQOPCD+236
OPCWAITO EQU   IEDQOPCD+232
OPCWAITN EQU   IEDQOPCD+228
OPCWAITL EQU   IEDQOPCD+224
OPCWAITC EQU   IEDQOPCD+220
@NM00107 EQU   OPCLDNME+5
OPCMODID EQU   OPCLDNME+3
@NM00106 EQU   OPCLDNME
OPCWAIT  EQU   IEDQOPCD+192
OPCCKERB EQU   IEDQOPCD+164
OPCBFERB EQU   IEDQOPCD+148
OPCFLAG2 EQU   IEDQOPCD+147
OPCWRKSZ EQU   IEDQOPCD+144
OPCWORK  EQU   IEDQOPCD+140
OPCRSAVE EQU   IEDQOPCD+132
OPCQCBAD EQU   IEDQOPCD+128
OPCTRMWA EQU   IEDQOPCD+52
OPCPSTWT EQU   IEDQOPCD+48
OPCTNTEA EQU   IEDQOPCD+44
OPCPGCK  EQU   IEDQOPCD+40
OPCLCB   EQU   IEDQOPCD+36
OPCIPLAD EQU   IEDQOPCD+28
OPCTOFLK EQU   IEDQOPCD+24
OPCOPTLK EQU   IEDQOPCD+20
SAVTSMAX EQU   IEDNSVTD+500
SAVTSINO EQU   IEDNSVTD+498
SAVTAMAX EQU   IEDNSVTD+496
SAVTAENO EQU   IEDNSVTD+494
SAVTAINO EQU   IEDNSVTD+492
SAVTNMAX EQU   IEDNSVTD+490
SAVTNENO EQU   IEDNSVTD+488
SAVTNINO EQU   IEDNSVTD+486
SAVTRSZE EQU   IEDNSVTD+484
SAVTRMAX EQU   IEDNSVTD+482
SAVTRENO EQU   IEDNSVTD+480
SAVTRINO EQU   IEDNSVTD+478
SAVTRMIN EQU   IEDNSVTD+476
SAVTPMID EQU   IEDNSVTD+474
SAVTRRTC EQU   IEDNSVTD+472
SAVTLUSG EQU   IEDNSVTD+468
SAVTACNQ EQU   IEDNSVTD+464
SAVTCM20 EQU   IEDNSVTD+460
SAVTCFDC EQU   IEDNSVTD+456
SAVTCMOT EQU   IEDNSVTD+452
SAVTCMIN EQU   IEDNSVTD+448
SAVTCPCH EQU   IEDNSVTD+444
SAVTCRGT EQU   IEDNSVTD+440
SAVTNALC EQU   IEDNSVTD+436
SAVTATCT EQU   IEDNSVTD+434
SAVTCRIU EQU   IEDNSVTD+432
SAVTCRHI EQU   IEDNSVTD+430
SAVTCRIB EQU   IEDNSVTD+428
SAVTLCQ  EQU   IEDNSVTD+424
SAVTDRSR EQU   IEDNSVTD+420
SAVTATPT EQU   IEDNSVTD+416
SAVTCSMI EQU   IEDNSVTD+412
SAVTNXCR EQU   IEDNSVTD+408
SAVTCRPT EQU   IEDNSVTD+404
SAVTCIPH EQU   IEDNSVTD+400
SAVTBTCO EQU   IEDNSVTD+396
SAVTBTCI EQU   IEDNSVTD+392
SAVTBPCO EQU   IEDNSVTD+388
SAVTBPCI EQU   IEDNSVTD+384
SAVTLLCB EQU   IEDNSVTD+380
SAVTSCF0 EQU   IEDNSVTD+376
SAVTLSNY EQU   IEDNSVTD+372
SAVTLSZP EQU   IEDNSVTD+368
SAVTOMSU EQU   IEDNSVTD+364
SAVTGTSB EQU   IEDNSVTD+360
SAVTHIBL EQU   IEDNSVTD+356
SAVTHISY EQU   IEDNSVTD+352
SAVTNAX2 EQU   IEDNSVTD+348
SAVTCDRU EQU   IEDNSVTD+344
SAVTPOLC EQU   IEDNSVTD+342
SAVTPOLM EQU   IEDNSVTD+340
SAVTPOLR EQU   IEDNSVTD+336
SAVTCDRN EQU   SAVTCDRV
SAVTPOLL EQU   IEDNSVTD+328
SAVTPOLN EQU   IEDNSVTD+326
@NM00105 EQU   IEDNSVTD+325
@NM00104 EQU   SAVTNETF
SAVTSDIS EQU   SAVTNETF
SAVTROUT EQU   SAVTNETF
SAVTNETW EQU   SAVTNETF
SAVTDIAL EQU   IEDNSVTD+320
SAVTRQUT EQU   IEDNSVTD+316
SAVTBITN EQU   IEDNSVTD+312
@NM00103 EQU   SAVTCKQB+8
@NM00102 EQU   SAVTCKEC+1
@NM00101 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00100 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00099 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00098 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00097 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTNAX  EQU   IEDNSVTD+248
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTEP   EQU   SAVTSCLU
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00096 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00095 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00094 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00093 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00092 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00091 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00090 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTTVT   EQU   IEDQAVTD+1268
AVTSITS  EQU   IEDQAVTD+1264
AVTMSUHI EQU   IEDQAVTD+1260
AVTSITU  EQU   IEDQAVTD+1256
AVTSITP  EQU   IEDQAVTD+1252
AVTPADDR EQU   IEDQAVTD+1248
@NM00089 EQU   IEDQAVTD+1246
AVTCPBNO EQU   IEDQAVTD+1244
AVTHRESS EQU   IEDQAVTD+1243
@NM00088 EQU   IEDQAVTD+1242
@NM00087 EQU   IEDQAVTD+1241
@NM00086 EQU   IEDQAVTD+1240
@NM00085 EQU   IEDQAVTD+1237
@NM00084 EQU   IEDQAVTD+1236
AVTHRESE EQU   @NM00083
AVTRADDR EQU   IEDQAVTD+1228
AVTNADDR EQU   IEDQAVTD+1224
AVTHRESN EQU   IEDQAVTD+1220
AVTVOLRN EQU   IEDQAVTD+1216
AVTTOTNN EQU   IEDQAVTD+1212
AVTTRCYN EQU   IEDQAVTD+1208
AVTRCTRN EQU   IEDQAVTD+1204
AVTNOVON EQU   IEDQAVTD+1200
AVTADEBN EQU   IEDQAVTD+1196
AVTVOLRR EQU   IEDQAVTD+1192
AVTTOTNR EQU   IEDQAVTD+1188
AVTTRCYR EQU   IEDQAVTD+1184
AVTRCTRR EQU   IEDQAVTD+1180
AVTNOVOR EQU   IEDQAVTD+1176
AVTADEBR EQU   IEDQAVTD+1172
AVTLODPT EQU   IEDQAVTD+1168
AVTIOBN  EQU   IEDQAVTD+1164
AVTIOBR  EQU   IEDQAVTD+1160
AVTCPBPT EQU   IEDQAVTD+1156
AVTFCPB  EQU   IEDQAVTD+1152
@NM00082 EQU   IEDQAVTD+1148
AVTINCPQ EQU   IEDQAVTD+1144
@NM00081 EQU   IEDQAVTD+1140
@NM00080 EQU   IEDQAVTD+1137
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00072 EQU   IEDQAVTD+1132
AVTNOBFQ EQU   IEDQAVTD+1128
@NM00071 EQU   IEDQAVTD+1124
AVTDKENQ EQU   IEDQAVTD+1120
@NM00070 EQU   IEDQAVTD+1116
AVTDKAPQ EQU   IEDQAVTD+1112
AVTCOPY  EQU   IEDQAVTD+1108
AVTIA    EQU   IEDQAVTD+1104
AVTFL    EQU   IEDQAVTD+1100
@NM00069 EQU   IEDQAVTD+1096
AVTNCPBQ EQU   IEDQAVTD+1092
AVTTOTNC EQU   IEDQAVTD+1088
AVTCMAX  EQU   IEDQAVTD+1084
AVTCMIN  EQU   IEDQAVTD+1080
AVTHM02  EQU   IEDQAVTD+1076
AVTOPCIN EQU   IEDQAVTD+1074
AVTDCTLN EQU   IEDQAVTD+1072
AVTOPMSK EQU   IEDQAVTD+1068
AVTDDFT  EQU   IEDQAVTD+1064
AVTSTEAL EQU   IEDQAVTD+1060
AVTOPTN  EQU   IEDQAVTD+1056
AVTDSKCT EQU   IEDQAVTD+1054
AVTCKRST EQU   IEDQAVTD+1053
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00068 EQU   AVTBIT2
@NM00067 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+1048
AVTDLQX  EQU   IEDQAVTD+1046
AVTINTLV EQU   IEDQAVTD+1044
AVTSMCNT EQU   IEDQAVTD+1042
AVTAVFCT EQU   IEDQAVTD+1040
AVTOPCON EQU   IEDQAVTD+1038
AVTOPCNT EQU   IEDQAVTD+1036
AVTLNCNT EQU   IEDQAVTD+1034
AVTKEYLE EQU   IEDQAVTD+1032
AVTHA16  EQU   IEDQAVTD+1030
AVTHA7   EQU   IEDQAVTD+1028
AVTHA4   EQU   IEDQAVTD+1026
AVTGETMS EQU   IEDQAVTD+1021
@NM00066 EQU   IEDQAVTD+1020
AVTGETMD EQU   IEDQAVTD+1016
AVTGETMN EQU   IEDQAVTD+1012
AVTCWTOT EQU   IEDQAVTD+1008
AVTCWINT EQU   IEDQAVTD+956
AVTDTRAP EQU   IEDQAVTD+952
@NM00065 EQU   IEDQAVTD+950
@NM00064 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00063 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+944
AVTAFE20 EQU   IEDQAVTD+940
AVTAFE10 EQU   IEDQAVTD+936
AVTCWEC2 EQU   IEDQAVTD+932
AVTCWPM2 EQU   IEDQAVTD+928
AVTCWTS2 EQU   IEDQAVTD+927
AVTCWTS1 EQU   IEDQAVTD+926
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL2
@NM00058 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+920
AVTCWPM1 EQU   IEDQAVTD+916
AVTCAREA EQU   IEDQAVTD+912
AVTFZERO EQU   IEDQAVTD+908
AVTCADDR EQU   IEDQAVTD+904
AVTCOREC EQU   IEDQAVTD+900
@NM00050 EQU   IEDQAVTD+892
AVTCPBCB EQU   IEDQAVTD+888
@NM00049 EQU   IEDQAVTD+880
AVTDSIOB EQU   IEDQAVTD+876
@NM00048 EQU   IEDQAVTD+868
AVTCPRMB EQU   IEDQAVTD+864
@NM00047 EQU   IEDQAVTD+856
AVTCLOSB EQU   IEDQAVTD+852
@NM00046 EQU   IEDQAVTD+844
AVTACTIB EQU   IEDQAVTD+840
@NM00045 EQU   IEDQAVTD+836
AVTOLTEB EQU   IEDQAVTD+832
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+796
AVTBFRTB EQU   IEDQAVTD+792
@NM00037 EQU   IEDQAVTD+788
AVTSELCH EQU   IEDQAVTD+785
AVTBFRTN EQU   AVTBFRFG
AVTBFREB EQU   IEDQAVTD+780
AVTTIMQ  EQU   IEDQAVTD+776
@NM00036 EQU   IEDQAVTD+772
AVTIMQPS EQU   IEDQAVTD+768
AVTINOUT EQU   IEDQAVTD+766
AVTREFTM EQU   IEDQAVTD+764
@NM00035 EQU   IEDQAVTD+752
AVTDELYB EQU   IEDQAVTD+748
AVTOCQPT EQU   IEDQAVTD+744
AVTTSOPT EQU   IEDQAVTD+740
AVTSUPPT EQU   IEDQAVTD+736
AVTCBQCB EQU   IEDQAVTD+732
AVTMSGS  EQU   IEDQAVTD+729
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+724
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+704
AVTDELEM EQU   IEDQAVTD+700
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+690
AVTOPXCL EQU   IEDQAVTD+688
AVTOPERL EQU   IEDQAVTD+687
@NM00020 EQU   IEDQAVTD+686
AVTCKTIM EQU   IEDQAVTD+684
AVTCKELV EQU   IEDQAVTD+682
AVTCPRCD EQU   IEDQAVTD+681
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTNQBCK EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+677
AVTSCBSZ EQU   IEDQAVTD+676
@NM00018 EQU   IEDQAVTD+672
AVTCKELE EQU   IEDQAVTD+668
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+648
AVTHI    EQU   IEDQAVTD+644
AVTIOT   EQU   IEDQAVTD+640
AVTNX    EQU   IEDQAVTD+636
AVTTONE  EQU   IEDQAVTD+632
AVTA3TL  EQU   IEDQAVTD+628
AVTDMECB EQU   IEDQAVTD+624
AVTABEND EQU   IEDQAVTD+618
AVTPLCBN EQU   IEDQAVTD+616
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTRAPI  EQU   AVTSAVTF
AVTLCLST EQU   AVTSAVTF
AVT370X  EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
AVTTRNOS EQU   IEDQAVTD+608
AVTCMBSS EQU   IEDQAVTD+604
AVTRCV   EQU   IEDQAVTD+600
AVTSEND  EQU   IEDQAVTD+596
AVTCSCH  EQU   IEDQAVTD+592
AVTQ1    EQU   IEDQAVTD+588
AVTE7    EQU   IEDQAVTD+584
AVTHB    EQU   IEDQAVTD+580
AVTR1    EQU   IEDQAVTD+576
AVTBZ    EQU   IEDQAVTD+572
AVTEZ    EQU   IEDQAVTD+568
AVTEC    EQU   IEDQAVTD+564
AVTEW    EQU   IEDQAVTD+560
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00014 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+548
AVTAX    EQU   IEDQAVTD+544
AVTA3    EQU   IEDQAVTD+540
AVTGD    EQU   IEDQAVTD+536
AVTAL    EQU   IEDQAVTD+532
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+524
AVTUI    EQU   IEDQAVTD+520
AVTCOMPT EQU   IEDQAVTD+516
AVTCRSRF EQU   IEDQAVTD+512
@NM00013 EQU   IEDQAVTD+508
AVTKA02  EQU   IEDQAVTD+504
AVTOPTPT EQU   IEDQAVTD+500
AVTPCBPT EQU   IEDQAVTD+496
AVTECBAD EQU   IEDQAVTD+492
AVTOPECA EQU   IEDQAVTD+488
AVTOLECA EQU   IEDQAVTD+484
AVTCKECA EQU   IEDQAVTD+480
AVTCWECA EQU   IEDQAVTD+476
AVTCWTCB EQU   IEDQAVTD+472
AVTOLTCB EQU   IEDQAVTD+468
AVTOCTCB EQU   IEDQAVTD+464
AVTCKTCB EQU   IEDQAVTD+460
AVTAS    EQU   IEDQAVTD+456
AVTNOLBF EQU   IEDQAVTD+454
AVTNCKPR EQU   IEDQAVTD+453
AVTCIB   EQU   IEDQAVTD+452
AVTSPLPT EQU   IEDQAVTD+448
AVTMVBFR EQU   IEDQAVTD+444
AVTSBTA  EQU   IEDQAVTD+440
AVTRARTN EQU   IEDQAVTD+436
AVTBSCAN EQU   IEDQAVTD+432
AVTRDYA  EQU   IEDQAVTD+428
AVTDISTR EQU   IEDQAVTD+420
AVTPARM3 EQU   IEDQAVTD+416
@NM00012 EQU   AVTPKF
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00009 EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+408
AVTEXS2A EQU   IEDQAVTD+402
AVTEXA2S EQU   IEDQAVTD+396
AVTOCGET EQU   IEDQAVTD+392
AVTCKAVT EQU   @NM00004+1
@NM00005 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
AVTBUENT EQU   IEDQAVTD+386
@NM00003 EQU   IEDQAVTD+385
AVTFULLT EQU   AVTBUFSW
AVTUNCON EQU   AVTBUFSW
AVTTRAPI EQU   AVTBUFSW
@NM00002 EQU   AVTBUFSW
AVTBUFTR EQU   AVTREADD
AVTREADY EQU   IEDQAVTD+376
AVTRACE  EQU   IEDQAVTD+372
AVTTCB   EQU   IEDQAVTD+368
AVTPASWD EQU   IEDQAVTD+360
AVTCTLCH EQU   IEDQAVTD+352
AVTDOUBL EQU   IEDQAVTD+344
AVTDOUBX EQU   IEDQAVTD+336
AVTDPARM EQU   IEDQAVTD+332
AVTCSTCS EQU   IEDQAVTD+328
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+216
AVTSAVE3 EQU   IEDQAVTD+144
AVTSAVE2 EQU   IEDQAVTD+72
AVTSAVE1 EQU   IEDQAVTD
*                                      END UNREFERENCED COMPONENTS
@RT00330 EQU   PROCBTU
@RT00334 EQU   CMDINV
@RT00338 EQU   CMDINV
@RT00342 EQU   CMDINV
@RC00346 EQU   ERREXIT
@RT00356 EQU   CMDINV
@RT00359 EQU   CMDINV
@RF00363 EQU   CMDINV
@RF00367 EQU   CMDINV
@RF00420 EQU   @RC00393
@RF00456 EQU   CMDINV
@RF00449 EQU   @EL00001
@RC00451 EQU   @EL00001
@RF00475 EQU   CMDINV
@RF00468 EQU   @EL00001
@RC00470 EQU   @EL00001
@RT00486 EQU   NOTNORM
@RC00498 EQU   ERREXIT
@RC00496 EQU   ERREXIT
@RC00501 EQU   @RC00498
@EL01    EQU   @EL00001
@ENDDATA EQU   *
@DATEND  EQU   *
         END   IGCN010D
