         TITLE 'IGCM210D - MODIFY START/STOP AUTOPOLL'
IGCM210D CSECT
         SPACE 3
***********************************************************************
*                                                                     *
*  MODULE NAME = IGCM210D (TCAM, OPERATOR CONTROL).            @Y17XART
*                                                                     *
*  DESCRIPTIVE NAME = MODIFY START / STOP AUTO POLL                   *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS = VERSION 10.0                                       @Y17XART
*                                                                     *
* FUNCTION -                                                          *
*   UPON ENTRY THIS ROUTINE TESTS THE OPERATOR CONTROL ELEMENT SET UP *
*   BY IGC7010D TO DETERMINE IF THE DDNAME/RLN OR THE HARDWARE ADDRESS*
*   FORMAT WAS USED.IF IT IS DDNAME THE NAME IS PLACED IN OPCDOUBL    *
*   OF THE OPCAVT AND THE RLN IS INSERTED IN REGISTER 1 AND A BALR    *
*   IS DONE TO THE DCBLOOKUP SUBROUTINE IN THE OPERATOR CONTROL       *
*   RESIDENT ROUTINE IEDQCA. IF THE HARDWARE ADDRESS WAS SPECIFIED    *
*   THE ADDRESS IS CONVERTED TO EBCDIC AND INSERTED IN OPCDOUBL       *
*   REGISTER 1 IS ZEROED OUT AND A BALR IS DONE TO THE DCBLOOKUP      *
*   SUBROUTINE.THE SUBROUTINE WILL RETURN ON REG 14 PLUS 4 IF INVALID *
*   IF VALID ON REGISTER 14. IF INVALID ERROR MSG IED017I WILL BE     *
*   WRITTEN OUT BY XCTLING TO THE ERROR WRITER IGC0310D. IF VALID     *
*   THE INVITATION LIST ADDRESS IS OBTAINED FROM THE DCB (DCBINVLI)   *
*   AND THE INPUT BLOCK TESTED TO SEE IF AUTOPOLL IS TO BE STARTED    *
*   OR STOPPED. IF TO BE STARTED AND IT IS ALREADY STARTED OR TO BE   *
*   BE STOPPED BUT IS ALREADY STOPPED, THE APPROPRIATE MESSAGE NUMBER *
*   INSERTED IN REGISTER 0 AND XCTL TO THE ERROR WRITER IGC0310D TO   *
*   WRITE OUT MESSAGES IED022I OR IED028I. OTHERWISE, THE STATUS      *
*   BIT IN THE INVITATION LIST IS TURNED ON OR OFF AS APPROPRIATE     *
*   THE APPROPRIATE MESSAGE NUMBER IS INSERTED IN REGISTER 0 EITHER   *
*   21, OR 27, THE WTG FIELD IN THE OPCE IS SET UP WITH THE MODULE ID *
*   OF IGCM110D AND THE CHECKPOINT ROUTINE IGC0610D IS XCTLED TO.     *
*   MESSAGE IED021I OR IED027I CAN BE WRITTEN OUT.                    *
*                                                                     *
* ENTRY POINTS -                                                      *
*         IGCM210D IS THE ONLY ENTRY POINT FOR THIS MODULE            *
*                                                              @Y17XART
*    PURPOSE = SEE FUNCTION                                    @Y17XART
*                                                              @Y17XART
*    LINKAGE = VIA XCTL                                        @Y17XART
*                                                              @Y17XART
* INPUT -                                                             *
*    REGISTER 1 CONTAINS A POINTER TO THE OPERATOR CONTROL AVT        *
*                                                                     *
* OUTPUT -                                                            *
*   REGISTER 0 CONTAINS MESSAGE NUMBER TO BE WRITTEN                  *
*   REGISTER 1 CONTAINS A POINTER TO THE OPERATOR CONTROL AVT.        *
*   OPCCOPCE CONTAINS RECORD TO BE CHECKPOINTED                       *
*   OCWTG HAS ID OF NEXT MODULE TO GAIN CONTROL                       *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         SVC 7(XCTL)                                                 *
*         OPCDCBLK - DCB LOOKUP ROUTINE IN IEDQCA                     *
*                                                                     *
* EXITS,NORMAL --STATUS MODIFIED AS REQUESTED RESPONSE BUILT          *
*   AND XCTL IS TO IGC0610D - CHECKPOINT MODULE                       *
* EXITS,ERROR -- INVALID COMMAND - XCTL IS TO IGC0310D TO OUTPUT ERROR*
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    TCAM AVT, OP CONTROL AVT,DCB,LCB,OPCE                            *
*                                                                     *
* ATTRIBUTES -                                                        *
*   REFRESHABLE,DISABLED,TRANSIENT(TYPE 4),SUPERVISOR MODE,           *
*   NON-REENTRANT                                                     *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THAT USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED SO  *
*    THAT REDEFINITION OF CHARACTER CONSTANTS, BY REASSEMBLY, WILL    *
*    RESULT IN A CORRECT MODULE FOR THE NEW DEFINITION.               *
*                                                                     *
* NOTES -                                                             *
*    COMMUNICATIONS BETWEEN THE VARIOUS MODULES/TRANSIENTS IS         *
*    PRIMARILY THROUGH THE OPERATOR CONTROL ADDRESS VECTOR TABLE (AVT)*
*                                                                     *
*    RESTRICTIONS = NONE                                       @Y17XART
*                                                              @Y17XART
*    REGISTER CONVENTIONS = STANDARD OPERATOR CONTROL          @Y17XART
*                                                              @Y17XART
*    PATCH LABEL = ZAPAREA                                     @Y17XART
*                                                              @Y17XART
* MODULE TYPE = PROCEDURE                                      @Y17XART
*                                                              @Y17XART
*    PROCESSOR = ASSEMBLER                                     @Y17XART
*                                                              @Y17XART
*    MODULE SIZE = 2048 (DECIMAL) BYTES                        @Y17XART
*                                                              @Y17XART
* CHANGE ACTIVITY =                                            @Y17XART
* A000000-999999                                                 S99240
* A609000,630000                                                SA63006
* C628000-629000                                                SA63006
* A753000                                                      @OY14484
* A654000,951000,741000                                        @Y17XACT
* C771000                                                      @OZ35627
*                                                              @Y17XACT
***********************************************************************
         EJECT
         SPACE
*    REGISTER EQUATES  ****
RZERO    EQU   0                        PARM REG 0
RPARM    EQU   1                        PARM REG 1
ROPCAVT  EQU   2                        OP CONTROL AVT POINTER
ROPCE    EQU   3                        CURRENT ELEMENT ADDRESS
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORK5   EQU   5                        WORK REGISTER
RWORK6   EQU   6                        WORK REGISTER
RUCB     EQU   7                        UCB REG
RDCB     EQU   8                        DCB REG
RLIST    EQU   9                        INVITATION LIST PTR
RLCB     EQU   10                       LCB REG
RWORK11  EQU   11                       WORK REGISTER
RBASE    EQU   12                       MODULE BASE
RSAVE    EQU   13                       SAVE AREA REG
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
RBRNCH   EQU   15                       SUBROUTINE BRANCH ENTRY POINT
         SPACE
         SPACE
****  MISC EQUATES *****
ZERO     EQU   0                        ZERO VALUE
ONE      EQU   1                        VALUE 1
TWO      EQU   2                        VALUE 2
VARINAME EQU   3                        OFFSET TO CHANGE XCTL NAME
THREE    EQU   3                        VALUE THREE
FOUR     EQU   4                        VALUE FOUR
FIVE     EQU   5                        VALUE FIVE
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
TEN      EQU   10                       VALUE TEN
TWELVE   EQU   12                       VALUE TWELVE
DATA     EQU   17                       DATA OFFSET
SEVNTEEN EQU   17                       VALUE SEVENTEEN
TYPE     EQU   18                       TYPE OFFSET
TWENTY1  EQU   21                       VALUE TWENTY ONE
TWENTY2  EQU   22                       VALUE TWENTY TWO
TWENTY4  EQU   24                       VALUE TWENTY FOUR
TWENTY7  EQU   27                       VALUE TWENTY SEVEN
TWENTY8  EQU   28                       VALUE TWENTY EITHT
THIRTY2  EQU   32                       VALUE THIRTY TWO
FIFTY6   EQU   56                       VALUE FIFTY SIX
FIFTY7   EQU   57                       VALUE FIFTY SEVEN
BLANK    EQU   C' '                     CHARACTER BLANK
AUTON    EQU   X'01'                    AUTOPOLL ON SWITCH
OFF      EQU   X'01'                    OFF MASK
AUTOF    EQU   X'FF'-AUTON              MASK TO AND AUTOPOLL OFF
NOPP     EQU   X'03'                    NO AUTOPOLL SW
ORG3705  EQU   X'04'                    DATA SET ORG FOR 3705
POLLCCW  EQU   X'09'                    POLL CCW
INVALNM  EQU   X'12'                    INVALID MESSAGE
X1A      EQU   X'1A'                    HEX '1A'
POLL     EQU   X'40'                    CK POLL
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IHADCB,RDCB              ADDRESSABILITY FOR DCB
         USING IEDQLCB,RLCB             ADDRESSABILITY FOR LCB
         SPACE
         BALR  RBASE,0                  SET BASE REGISTER
         USING *,RBASE                  MODULE ADDRESSABILITY
IGCM210D IEDHJN SKIPID
         LR    ROPCAVT,RPARM            SET BASE FOR OP CTL AVT
         L     RAVT,OPCAVTPT            SET BASE FOR TCAM AVT
         L     ROPCE,OPCCOPCE           PICK UP ELEMENT POINTER
         MVI   OPCDOUBL,BLANK
         MVC   OPCDOUBL+ONE(SEVEN),OPCDOUBL BLANK OUT OPCDOUBL FIELD
         TM    OCFLAG,OCLINE            CHECK FOR LINE NUMBER
         BNO   DDTIOT                   NOT LINE NUMBER - BYPASS CONVER
         LA    RUCB,OPCDOUBL           SET UP
         LA    RDCB,OCLINENO            TO CONVERT HEX
         LA    RLIST,TWO                 LINE ADDRESS
         BAL   RLCB,HEXTOBCD               TO EBCDIC
         MVC   OPCDOUBL(FOUR),OPCDOUBL+ONE MAKE LINE NUMBER THREE BYTES
         SR    RPARM,RPARM             SET UP FOR
         B     LINENO                   GO GET DCB ADDR FROM LINE NO
*     DDTIOT OFFSET LOOKUP   **
DDTIOT   EQU   *
         MVC   OPCDOUBL(EIGHT),OCBACKUP DDNAME FOR DCB LOOKUP    S22024
         SR    RPARM,RPARM              CLEAR REG
         IC    RPARM,OCRLN              GET RLN NO FOR DCB LOOKUP RTN
LINENO   EQU   *
         LA    RSAVE,OPCSAVE             DCB LOOKUP ROUTINE
         L     RBRNCH,OPCDCBLK         GET DCB RTN ADDRESS
         BALR  RRET,RBRNCH             BR TO DCB LOOKUP RTN
         B     GOODRTN                  GOOD RETURN
         LA    RZERO,SEVNTEEN           SET ERROR MESSAGE
         B     XCTLERR                  BR TO OUTPUT ERROR MSG
GOODRTN  EQU   *
         LR    RUCB,RZERO               SET UCB BASE
         LR    RDCB,RPARM               SET DCB BASE
         TM    DCBDSORG+ONE,ORG3705     IS THIS DCB A 3705 DCB   S22024
         BO    NOTCAP                   IF YES, ERROR            S22024
         TM    DCBDSORG,TRMLGB          LINE GROUP BLOCK         S22024
         BO    LGBERR                   YES, BRANCH              S22024
         SR    RZERO,RZERO              CLEAR REG
         IC    RZERO,OCRLN              GET RLN
         LR    RWORK5,RZERO             RLN TO WORK RREGISTER
         TM    DATA(RUCB),POLL          CAPABLE OF AUTOPOLL
         BO    PROCESS                  YES, GO SET ON/OFF
LGBERR   EQU   *                                                 S22024
NOTCAP   EQU   *
         LA    RZERO,FIFTY7             SET NOT CAPABLE OF AUTOPOLL
         B     XCTLERR                  BR TO INDICATE
BADCMD   LA    RZERO,INVALNM            SET ERROR MESSAGE        S22024
         B XCTLERR                      XCTL TO ERROR MODULE     S22024
         SPACE
*  PROCESS ENTRY  *
PROCESS  EQU   *
         SLL   RWORK5,TWO               MULTIPLY RLN BY FOUR
         LA    RLIST,DCBINVLI-FOUR      GET START OF LIST
         AR    RLIST,RWORK5             GET PROPER LIST ADDR
         L     RLIST,ZERO(,RLIST)       GET LIST
         SR    RPARM,RPARM              CLEAR REG
         IC    RPARM,DCBEIOBX           GET INDEX TO IOB
         MR    RZERO,RZERO              INDEX TO PROPER IOB
         L     RLCB,DCBIOBAD            FIRST IOB ADDRESS
         LA    RLCB,ZERO(RLCB)          CLEAR HI-ORDER BYTE
         AR    RLCB,RPARM               ADDRESS OF PROPER IOB
         LA    RPARM,LCBFLAG1-IEDQLCB   LCB INDEX
         SR    RLCB,RPARM               LCB ADDRESS
         CLI   OCSWITCH,OFF             STOP COMMAND?
         BE    STOP                     YES
         SPACE
         TM    THREE(RLIST),AUTON       AUTOPOLL ALREADY ON
         BNO   SETON                    NO - SET IT ON
         SPACE
ALREADY  EQU   *                                                SA63006
         LA    RZERO,TWENTY2            SETAUTOPOLL ALREADY STARTED
         B     XCTLERR                  BR TO INDICATE
         SPACE
SETON    EQU   *
         CLI   LCBRSKEY,X1A             IS A BUFFERED TERMINAL
         BNE   SETON1                   NO - PROCEED
         TM    FIVE(RLIST),AUTON        IS BUFFERED AUTOPOLL SETSA63006
         BO    ALREADY                  YES, ALREADY STARTED    SA63006
         OI    FIVE(RLIST),AUTON        TURN ON BUFFERED AUTOPOLL
         CLI   FOUR(RLIST),ZERO         IS LINE SENDING         SA63006
         BE    NOSET                    YES, DON'T SET OTHER BITSA63006
         TM    OPCSPEC,OPCRSTRT         IS RESTART IN PROGRESS  SA63006
         BO    NOSET                    YES, DON'T SET OTHER BITSA63006
         SPACE
SETON1   EQU   *
         OI    THREE(RLIST),AUTON       TURN ON AUTOPOLL
NOSET    EQU   *
         LA    RZERO,TWENTY1            SET AUTOPOLL STARTED
         STH   RZERO,OCPARM               FOR MESSAGE MODULE
         MVC   OCBACKUP(8),OPCDOUBL     MOVE RLN TO SAVE AREA  @Y17XACT
         B     XCTLMOD                  BR TO INDICATE
         SPACE
STOP     EQU   *
         TM    THREE(RLIST),AUTON       AUTOPOLL ALREADY OFF
         BO    SETOFF                   NO - SET IT OFF
         SPACE
         CLI   LCBRSKEY,X1A             BUFFERED TERMINAL
         BNE   STOP1                    NO - DONE
         SPACE
         TM    FIVE(RLIST),AUTON        BUFFERED AUTOPOLL ON
         BO    SETOFF                   YES - SET IT OFF
         SPACE
STOP1    EQU   *
         LA    RZERO,TWENTY8            SET AUTOPOLL ALREADY STOPPED
         B     XCTLERR                  BRANCH TO INDICATE
         SPACE
SETOFF   EQU   *
         CLI   LCBRSKEY,X1A             IS THIS FOR BUFFERED TERMINALS
         BNE   SETOFF1                  NO PROCEED
         NI    FIVE(RLIST),AUTOF        TURN OFF BUFFERED AUTOPOLL
SETOFF1  EQU   *
         NI    THREE(RLIST),AUTOF       TURN OFF AUTOPOLL
         CLI   LCBCPA+TWENTY4,POLLCCW   IS IT AUTOPOLL
         BNE   SETOFF2                  NO - DONT RESET
         MVI   LCBCPA+THIRTY2,NOPP      NOP THE
         MVI   LCBCPA+FIFTY6,NOPP         TIC COMMANDS
         SPACE
*   SET AUTOPOLL STOPPED
SETOFF2  EQU   *
         MVC   OCBACKUP(8),OPCDOUBL     SAVE RLN               @Y17XACT
         LA    RZERO,TWENTY7            SET AUTOPOLL STOPPED
         STH   RZERO,OCPARM               FOR MESSAGE MODULE
         SPACE
XCTLMOD  EQU   *
         TM    AVTBIT3,AVTSTAIN         INVLISTS CHECKPOINTED  @OY14484
         BO    REQCHPT                  YES, CHECKPOINT THIS   @OY14484
         MVC   OPCLDNME+VARINAME(TWO),WRTMOD GO TO MSG WRITER  @OY14484
         B     EXIT                     XCTL                   @OY14484
REQCHPT  EQU   *
         MVC   OCWTG(TWO),WRTMOD        SET RETURN TO WRT MSG MOD
         MVC   OPCLDNME+VARINAME(TWO),CKPTMOD SET XCTL TO CKPOINT MOD
         SPACE
EXIT     EQU   *
         LR    RPARM,ROPCAVT            PASS OP CTL PTR
         IEDXCTL                        CALL NEXT MODULE       @OZ35627
XCTLERR  EQU   *
         MVC   OPCLDNME+VARINAME(TWO),ERRWRT SET ERROR RESPONSE
         B     EXIT                     EXIT
         EJECT
**********************************************************************
* HEXTOBCD -   PARAMETERS PASSED IN REGS 7-10                        *
* HEX TO EBCDIC - SINK-R7 SOURCE-R8 COUNT-R9 RETURN-RA               *
*        SINK   - LOCATION FOR CONVERTED DATA - MUST BE AT LEAST     *
*                 TWICE THE SIZE OF COUNT.                           *
*        SOURCE - LOCATION WHERE HEX DATA IS STORED                  *
*        COUNT  - SIZE OF SOURCE AREA - IN BYTES                     *
*        RETURN - RETURN IS MADE TO THIS LOCATION                    *
**********************************************************************
         SPACE
R1       EQU   13                       REGISTER 13
R2       EQU   14                       REGISTER 14
R3       EQU   15                       REGISTER 15
R4       EQU   4                        REGISTER 4
R5       EQU   5                        REGISTER 5
R6       EQU   6                        REGISTER 6
R7       EQU   7                        REGISTER 7
R8       EQU   8                        REGISTER 8
R9       EQU   9                        REGISTER 9
RA       EQU   10                       REGISTER 10
ONE99    EQU   199                      HUNDRED NINTY NINE
TWO50    EQU   250                      TWO HUNDRED FIFTY
         SPACE
         SPACE
HEXTOBCD EQU   *
         STM   R1,R3,OPCSAVE            SAVE CALLERS
         STM   R4,R6,OPCSAVE+TWELVE        REGISTERS
         LA    R1,TEN                  SET UP REGISTERS
         LA    R4,TWO50                  FOR CONVERSION
         LA    R5,ONE99                     CALCULATION
         SPACE
XX       IC    R3,ZERO(R8)             PICK UP HEX CHARS
         SLL   R3,TWENTY4              SET UP TO PICK
         LA    R6,TWO                  SET TWO PASSES TO CONVERT BYTE
         SPACE
YY       SR    R2,R2                     FIRST FOUR
         SLDL  R2,FOUR                     BITS TO BE CONVERTED
         SR    R2,R1                   IS HEX CHAR 0-9
         BM    ZZ                      YES, CONVERT TO FX
         AR    R2,R5                   NO, SET UP TO CONVERT TO CX
         SPACE
ZZ       AR    R2,R4                   CONVERT
         STC   R2,ZERO(R7)             STORE CONVERTED CHAR IN SINK
         LA    R7,ONE(R7)              BUMP SINK POINTER
         BCT   R6,YY                   BR TO PROCESS NEXT 4 BITS
         LA    R8,ONE(R8)              BUMP SOURCE POINTER
         BCT   R9,XX                   BR IF MORE DATA TO CONVERT
         LM    R1,R3,OPCSAVE            RESTORE CALLERS
         LM    R4,R6,OPCSAVE+TWELVE        REGISTERS
         BR    RA                      RETURN TO CALLER
         SPACE
**********************************************************************
         SPACE
WRTMOD   DC    C'M1'                    WRITE MUDULE NAME
ERRWRT   DC    C'03'                    ERROR MODULE NAME
CKPTMOD  DC    C'06'                    CHECKPOINT MOD NAME
ZAPAREA  DC    100X'00'                 PATCH AREA             @Y17XART
         EJECT
         TLCBD
         TTRMD                                                   S22024
         EJECT
         DCBD  DSORG=TX
         EJECT
         TAVTD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         END
