IEDQBUFF CSECT
         TITLE 'BUFFER TRACE MACRO FUNCTION ROUTINE'
*000000-999999                                                 @OY19405
* $01=OZ41206  ETC2202  79.10.18  547784:                          @01A
* $02=OZ41222  ETC2202  79.10.18  547784:                          @02A
* $03=OZ41954  ETC2202  79.10.18  547784:                          @03A
* $11=OZ47193  ETC2302  80.08.14  613706:                          @11A
* $21=OZ49189  ETC2402  81.08.11  613706: UZ34871                  @21A
* $22=OZ51212  ETC2402  81.08.11  613706: UZ36295                  @22A
* $23=OZ53160  ETC2402  82.01.07  460025: USER BUFFER SUBTRACTED   @23A
*A096500                                                       @OZ46705
***********************************************************************
***********************************************************************
*                                                                     *
* MODULE NAME = IEDQBUFF                                              *
*                                                                     *
* DESCRIPTIVE NAME = BUFFER TRACE MACRO FUNCTION ROUTINE              *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = VS2 RELEASE 1.7                                            *
*                                                                     *
* FUNCTION = DETERMINES WHETHER IEDQFE30 MODULE IS TO BE ENTERED.     *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*   DEPENDENCIES = NONE                                               *
*                                                                     *
*   RESTRICTIONS = NONE                                               *
*                                                                     *
*   REGISTER CONVENTIONS = TCAM STANDARD                              *
*                                                                     *
*   PATCH LABEL = PATCH                                               *
*                                                                     *
* MODULE TYPE = MACRO FUNCTION ROUTINE                                *
*                                                                     *
*   PROCESSOR = ASSEMBLER F                                           *
*                                                                     *
*   MODULE SIZE = N/A                                                 *
*                                                                     *
*   ATTRIBUTES = SERIALLY REUSEABLE                                   *
*                                                                     *
* ENTRY POINT = IEDBUF                                                *
*                                                                     *
* INPUT = BUFFER FROM MESSAGE HANDLER                                 *
*                                                                     *
* OUTPUT = TO MESSAGE HANDLER                                         *
*                                                                     *
* EXIT-NORMAL = TO MESSAGE HANDLER VIA IEDQUI                         *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* RETURN CODES = REGISTER 15 WILL CONTAIN THE RETURN CODE AS FOLLOWS: *
*           F = TRACE TABLE NOT SPECIFIED ON INTRO, NO TRACE OCCURED  *
*           C = NO TTCIN VALUE IN LCB, NO TRACE OCCURED               *
*           8 = TRACESW NOT CODED FOR TERMNIAL TABLE ENTRY, NO TRACE  *
*           4 = TRACE SWITCH IS OFF, NO TRACE OCCURED                 *
*           1 = PARTIAL TRACE (ONE UNIT) OCCURED                      *
*           0 = FULL BUFFER TRACE OCCURED                             *
*                                                                     *
* EXTERNAL REFERENCES = IEDQAE - TO LOCATE OPTION FIELDS              *
*                       IEDQFE30 - TO MAKE THE TRACE ENTRY            *
*                                                                     *
*   DATA AREAS = TCAM BUFFER                                          *
*                                                                     *
*   CONTROL BLOCKS = AVT, DCT, LCB, QCB, TRM, PRF                     *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = NONE                                                       *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
RFE      EQU   2
R3       EQU   3
RSCB     EQU   3
R4       EQU   4
RLCB     EQU   4
R5       EQU   5
R6       EQU   6
RPREFIX  EQU   6
R7       EQU   7
RPARM    EQU   7
R8       EQU   8
RAVT     EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RBASE    EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ZERO     EQU   X'00'                    CONSTANT ZERO
ONE      EQU   X'01'                    CONSTANT ONE
FOUR     EQU   X'04'                    CONSTANT FOUR
EIGHT    EQU   X'08'                    CONSTANT EIGHT
CEE      EQU   X'0C'                    CONSTANT CHARLEY
FOX      EQU   X'0F'                    CONSTANT FOX
HDRLEN   EQU   30                                                  @01A
         USING IEDQAVTD,RAVT
         USING IEDQLCB,RLCB
         USING IEDQPRF,RPREFIX
         USING PARMLIST,RPARM
         USING *,RBASE
IEDQBUFF IEDHJN CODE
         EJECT
         OC    AVTBUFTR,AVTBUFTR        BUFFER TRACE TABLE EXIST
         BZ    EXITF                    NO, RETURN
         LR    RPARM,R1                 SAVE PARAMETER LIST
         L     RPREFIX,AVTADBUF         LOAD BUFFER ADDRESS
         L     RLCB,PRFLCB-1            LOAD LCB ADDRESS
         L     RSCB,LCBSCBA-1           LOAD SCB ADDRESS
         LH    R1,LCBTTCIN              GET CONNECTED INDEX
         N     R1,AVTCLRHI              CLEAR HIGH ORDER BYTES
         CLI   OPFL,ONE                 UNCONDIONAL TRACE
         BE    TRACE
         LTR   R1,R1                    IS TTCIN ZERO
         BZ    EXITC                    BRANCH ERROR
         L     R15,AVTRNMPT             GET TERMINAL
         BALR  R14,R15                  ENTRY ADDRESS
         LR    R5,R1                    SAVE TERMINAL ADDRESS
         LA    R1,AVTDOUBL              SET PARM LIST ADDRESS
         MVC   AVTDOUBL(4),AEOPT        MOVE IEDQAE VALUES TO
         L     R15,AVTUI                LOCATE TRACESW OPTION
         BALR  R14,R15                  FIELD
         LTR   R15,R15                  TEST RETURN CODE
         BNZ   EXIT8                    OPTION FIELD NOT CODED
         CLI   0(R8),ONE                IS TRACE SW ON IN OPTION
         BE    TRACE                    YES, THEN TRACE
         LA    R15,FOUR                 SET TRACE SW OFF RETURN CODE
EXIT     EQU   *
         L     RBASE,AVTUI              LOAD RETURN ADDRESS
         B     FOUR(,RBASE)                EXIT
EXITF    LA    R15,FOX                  SET RETURN CODE
         B     EXIT
EXITC    LA    R15,CEE                  SET RETURN CODE
         B     EXIT
EXIT8    LA    R15,EIGHT                SET RETURN CODE
         B     EXIT
EXIT1    LA    R15,ONE                  SET RETURN CODE
         B     EXIT
EXIT0    LA    R15,ZERO                 SET RETURN CODE
         B     EXIT
         USING IEDTRBUF,R10
BUMP     EQU   *
         OC    AVTAFE30,AVTAFE30        IS COMWRITE RUNNING
         BZ    IPOST                    NO, CONTINUE WITH NEXT TABLE
         L     R2,AVTAFE30              LOAD FE30 ADDRESS
         BAL   RA,FOUR(RFE)             LINK TO FE30
         L     RA,AVTBUFTR              RESTORE TABLE POINTER
         L     R5,CUR                   LOAD TABLE POINTER
         L     R2,0(R5)                 LOAD POINTER TO CURRENT ENTRY
         BR    R14                      GO TO CALLING ROUTINE
IPOST    MVC   0(4,R5),4(R5)            UPDATE TABLE POINTERS
         L     R2,COUNT                 UPDATE COUNT
         LA    R2,1(R2)                 OF TIMES TABLE
         ST    R2,COUNT                 HAS BEEN USED
         L     R2,CUR                   LOAD POINTER
         LA    R5,CUR1
         CR    R2,R5                    WHICH TABLE IS BEING USED NOW
         BNE   TAB2                     TABLE TWO
         LA    R5,CUR2                  UPDATE POINTER TO USE
         ST    R5,CUR                      TABLE TWO
         L     R2,0(R5)                 POINT TO CURRENT ENTRY
         BR    R14                      RETURN TO CALLING ROUTINE
TAB2     LA    R5,CUR1                  UPDATE POINTER TO
         ST    R5,CUR                      USE TABLE ONE
         L     R2,0(R5)                 POINT TO CURRENT ENTRY
         BR    R14                      RETURN TO CALLING ROUTINE
TRACE    EQU   *
         LA    R10,X'18'                FIXED DATA LENGTH IN AA TRACE
         AH    R10,AVTKEYLE             ADD KEY LENGTH
         LA    R10,X'1F'(R10)           ADJUST
         SRL   R10,5                          ENTRY
         SLL   R10,5                               SIZE
         STH   R10,SIZE                 SAVE ENTRY SIZE
         L     R10,AVTBUFTR             GET TRACE TABLE
         USING IEDTRBUF,R10
         USING IEDQLCB,R4
         USING IEDQSCB,R3
         L     R1,USERID                LOAD USER ID
         L     R5,CUR                   GET CURRENT POINTER
         L     R2,0(R5)                 GET CURRENT ENTRY
         ST    R1,0(R2)                 ENTER USER ID
         ST    R6,4(R2)                 STORE BUFFER ADDR
         MVC   8(4,R2),SCBERRST         MOVE IN SCB ERROR BYTES
         MVC   12(1,R2),LCBSENS0        MOVE IN LCB SENSE BYTE
         MVC   13(1,R2),LCBFLAG1        MOVE IN
         MVC   14(1,R2),LCBFLAG2             THE
         MVC   15(1,R2),LCBFLAG3               IOS FLAGS
         LH    R7,SIZE                  SIZE OF ONE ENTRY
         SH    R7,HTEN                  SIZE LEFT IN THIS ENTRY
         LA    R2,16(R2)                BUMP CURRENT DATA POINTER
         TM    AVTBUFSW,AVTFULLT        FULL BUFFER TRACE SPECIFIED
         BNO   PAR                      NO, TRACE 80 BYTES OF DATA
         BAL   R14,TRACALL              GO MOVE THE DATA IF SPACE
PAR      LA    R8,12(R6)                POINT TO DATA TO BE MOVED
         LR    R1,R7                    SAVE ENTRY SIZE
         LH    R7,AVTKEYLE              DATA LENGTH TO MOVE
         LH    R4,PRFSIZE               GET BUFFER DATA LENGTH
         N     R4,AVTCLRHI              CLEAR HIGH TWO BYTES   @OZ46705
         LTR   R4,R4                    IS PRFSIZE = 0         @OZ46705
         BNZ   PAR1                     NO, BRANCH             @OZ46705
         LA    R4,HDRLEN                SET UP TO TRACE HDR    @OZ46705
PAR1     EQU   *                                               @OZ46705
         CR    R4,R7                    IS KL LESS THAN DATA COUNT
         BH    DOKL                     YES
         LR    R7,R4                    NO, SWAP
DOKL     BCTR  R7,0                     REDUCE THE COUNT FOR EXECUTE
         EX    R7,MOVEDATA              DO IT
         LA    R7,1(R7)                 RESTORE COUNT
         SR    R1,R7                    SIZE OF TRACE ENTRY THATS LEFT
         LA    R2,0(R7,R2)              POINT TO DATA TARGET
         BCTR  R1,0                     REDUCE FOR MOVE
         EX    R1,MOVEZERO              CLEAR ENTRY
         LR    R7,R1                    PUT IN R7
         LA    R7,1(R7)                 RESTORE PROPER COUNT
         LA    R14,EXIT1                SET UP LINK REG
         LA    R2,0(R7,R2)              POINT TO NEXT ENTRY
         CL    R2,8(R5)                 TABLE FULL
         BNL   BUMP                     YES, UPDATE POINTERS
         ST    R2,0(R5)                 NO, SAVE OUR PLACE
         B     EXIT1                    RETURN TO MH
TRACALL  EQU   *
         L     R4,CUR1+8                COMPUTE SIZE OF ONE TABLE
         S     R4,CUR1+4                TO INSURE WE CAN WRITE
         CH    R4,PRFSIZE               IS ONE TABLE LARGE ENOUGH
         BLR   R14                      NO, THEN TRACE PARTIAL
         LA    R14,EXIT0                SET LINK REG FOR EXIT
         LH    R4,PRFSIZE               GET DATA COUNT TO BE TRACED
         N     R4,AVTCLRHI              CLEAR HIGH TWO BYTES       @01A
         LTR   R4,R4                    IS PRFSIZE=0               @01A
         BNZ   DATA                     NO, BRANCH                 @01A
         LA    R4,HDRLEN                SET UP TO TRACE HEADER     @01A
DATA     EQU   *                                                   @01A
         LA    R8,12(R6)                POINT TO DATA TO BE MOVED
         LR    R11,R6                   SET UP UNIT POINTER
         LH    R3,AVTKEYLE              GET DATA COUNT OF EACH UNIT
LOOP     LR    R1,R7                    LOAD AMT TO MOVE
         CR    R7,R3                    CORRECT SO FAR
         BL    OK                       YES
         LR    R1,R3                    NO, SWAP
OK       CR    R1,R4                    COMPARE WITH BUFFER COUNT
         BL    OKAGAIN                  ALLRIGHT
         LR    R1,R4                    NO, SWAP
OKAGAIN  BCTR  R1,0                     DECREMENT FOR MOVE
         EX    R1,MOVEDATA              MOVE DATA
         LA    R1,1(R1)                 BUMP CNT BACK
         SR    R4,R1                    DECREASE DATA LEFT TO MOVE
         SR    R7,R1                    DECREASE DATA SPACE LEFT
         AR    R2,R1                    UPDATE DATA POINTER
         AR    R8,R1                    UPDATE BUFFER POINTER      @11A
         LTR   R7,R7                    ANY SPACE LEFT             @02C
         BZ    CKMORE                   UPDATE AMT LEFT TO MOVE    @22C
         LTR   R4,R4                    ALL DATA BEEN MOVED        @02C
         BNZ   UPDATE                   NO, CONTINUE               @02C
         BCTR  R7,0                     DECREMENT FOR MOVE
         EX    R7,MOVEZERO              MOVE ZEROS
         AR    R2,R7                    UPDATE THE
         LA    R2,1(R2)                   TRACE ENTRY POINTER
         B     CLEANUP                  FINISHED...RETURN
UPDATE   CR    R1,R3                    DID WE MOVE ONE UNIT
         BE    NXTUNIT                  GET NEXT UNIT TO BE MOVED
         SR    R3,R1                    REDUCE COUNT               @21C
         LTR   R7,R7                    SPACE LEFT IN BUFFER       @21A
         BNZ   LOOP                     YES--GO MOVE DATA          @21A
CLEANUP  LH    R7,SIZE                  GET DATA SPACE IN ONE UNIT
         CL    R2,8(R5)                 LAST ENTRY IN TABLE
         BNL   BUMP1                    YES
         ST    R2,0(R5)                 NO, SAVE
         LTR   R4,R4                    THROUGH
         BZR   R14                      YES EXIT
         B     UPDATE                   CK ON SPACE                @21C
CKMORE   EQU   *                                                   @22A
         SR    R3,R1                    SUBT CNT ALREADY MOVED     @22A
         LTR   R3,R3                    ANY LEFT?                  @22A
         BNZ   CLEAN1                   YES-CONTINUE               @23C
         LH    R3,AVTKEYLE              GET DATA COUNT             @22A
CLEAN1   EQU   *                                                   @23A
         LH    R7,SIZE                  GET SPACE IN ONE UNIT      @23A
         CL    R2,8(R5)                 LAST ENTRY IN TABLE?       @23A
         BNL   BUMP1                    YES                        @23A
         ST    R2,0(R5)                 NO-SAVE                    @23A
         LTR   R4,R4                    THROUGH?                   @23A
         BZR   R14                      YES-EXIT                   @23A
UPDATE1  EQU   *                                                   @23A
         CR    R1,R3                    DID WE MOVE ONE UNIT?      @23A
         BE    NXTUNIT                  GET NXT UNIT TO MOVE       @23C
         B     LOOP                     NO-GO MOVE MORE DATA       @23A
NXTUNIT  L     R11,8(R11)               POINT TO NEXT UNIT
         LA    R8,12(R11)               POINT TO DATA TO BE MOVED
         LH    R3,AVTKEYLE              GET DATA COUNT
         LTR   R7,R7                    UNIT SIZE EXHAUSTED
         BNZ   LOOP                     NO, CONTINUE
         LH    R7,SIZE                  RESTORE TRACE ENTRY SIZE
         B     LOOP                     CONTINUE
BUMP1    BAL   R14,BUMP                 UPDATE TABLE POINTERS AND
*                                       RETURN
         LA    R14,EXIT0                SET LINK TO RETURN TO MH
         LH    R7,SIZE                  RESTORE TABLE ENTRY LENGTH
         LTR   R4,R4                    IS THERE MORE DATA IN BUFFER
         BZ    EXIT0                    NO, GO TO MH
         B     LOOP                     YES, MOVE IT
MOVEDATA MVC   0(0,R2),0(R8)
MOVEZERO MVC   0(0,R2),CLEAR
SIZE     DC    H'0'
HTEN     DC    X'0010'
CLEAR    DC    24F'0'
PATCH    DC    20F'0'                   PATCH AREA                 @11A
IEDTRBUF DSECT
CUR      DS    AL4
TABLE1   DS    AL4
TABLE2   DS    AL4
CUR1     DS    AL4
         DS    AL4
         DS    AL4
CUR2     DS    AL4
         DS    AL4
         DS    AL4
COUNT    DS    AL4
         EJECT
PARMLIST DSECT
         DS    XL1
         DS    XL1
         DS    XL1
         DS    XL1
USERID   DS    XL4
OPFL     DS    XL1
         DS    XL1                                                 @03A
AEOPT    DS    XL1
         DS    XL1
         DS    XL1
         DS    XL1
         EJECT
         TAVTD
         EJECT
         TDCTD
         EJECT
         TLCBD
         EJECT
         TQCBD
         EJECT
         TPRFD
         EJECT
         TSCBD
         EJECT
         TTRMD
         END
