         TITLE 'IGCMZ10D - MODIFY FUNCTION BUFFTR COMMAND'
IGCMZ10D CSECT
*A000000-999999                                                @OY19405
***********************************************************************
* C082000                                                      @OZ35627
*                                                                     *
* MODULE NAME = IGCMZ10D (TCAM, OPERATOR CONTROL)                     *
*                                                                     *
* DESCRIPTIVE NAME = MODIFY FUNCTION BUFFER TRACE COMMMAND            *
*                                                                     *
* COPYRIGHT = 5735-RC1 COPYRIGHT IBM CORP 1978                        *
*   LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                       *
*   REFER TO COPYRIGHT INSTRUCTIONS FORM NUMBER G120-2083             *
*                                                                     *
* STATUS = ACF/TCAM RELEASE 1.0 VERSION 0                             *
*                                                                     *
* FUNCTION - THIS MODULE RECEIVES CONTROL FROM IGCMM10D WHENEVER THE  *
*   COMMAND IS A 'BUFFTR'. A VALIDITY CHECK OF THE OPERAND IS PER-    *
*   FORMED AND PROPER BITS ARE SET TO TELL IEDQFE30 WHAT KIND OF TRACE*
*   IS TO BE PERFORMED.                                               *
*                    IF THE VALIDITY CHECKING PERFORMED BY THIS MODULE*
*   IS UNSUCCESSFUL,THE APPROPRIATE ERROR MESSAGE NUMBER IS PLACED IN *
*   REGISTER ZERO AND XCTL IS TO MODULE IGC0310D.                     *
*                                                                     *
* ENTRY POINTS -                                                      *
*   IGCMZ10D IS THE ONLY ENTRY POINT FOR THIS MODULE                  *
*                                                                     *
* INPUT -                                                             *
*    REGISTER 1 CONTAINS A POINTER TO THE OPERATOR CONTROL AVT AND    *
*   OPERATOR CONTROL RESIDENT WORK AREA CONTAINS THE OP CTL COMMAND   *
*   BEGINNING WITH THE OPERAND.                                       *
*                                                                     *
* OUTPUT -                                                            *
*         NONE                                                        *
*                                                                     *
* EXITS,NORMAL - COMMAND IS PROCESSED, AND A RESPONSE MESSAGE IS GEN- *
*              ERATED AND CONTROL IS PASSED TO THE MESSAGE WRITER     *
*              IGC0710D TO WRITE OUT THE MESSAGE.                     *
*                   IED621I BUFFTR COMMAND HAS BEEN PROCESSED         *
*                                                                     *
* EXITS,ERROR - EXITS TO IGC0310D ERROR MESSAGE MODULE TO WRITE OUT AN*
*              ERROR MESSAGES:                                        *
*                   IED018I XXXXXXXX COMMAND INVALID                  *
*                                                                     *
*                                                                     *
* TABLES/WORK AREAS - OPERATOR CONTROL AVT, TCAM AVT, OPCE, OPERATOR  *
*                    CONTROL RESIDENT WORK AREA.                      *
*                                                                     *
* ATTRIBUTES - SUPERVISOR MODE, DISABLED, TRANSIENT(TYPE 4 SVC), NON- *
*             REENTRANT, SERIALLY REUSABLE, REFRESHABLE.              *
*                                                                     *
***********************************************************************
         EJECT
         SPACE 1
RZERO    EQU   0                        PARM REG 0
RPARM    EQU   1                        PARM REG 1
ROPCAVT  EQU   2                        OP CONTROL AVT POINTER
ROPCE    EQU   3                        CURRENT ELEMENT ADDRESS
RAVT     EQU   4                        TCAM AVT ADDRESS
RWORKA   EQU   5                        WORK REGISTER
RLEN     EQU   6                        DATA LENGTH
RAPTR    EQU   7                        ADVANCE SCAN PTR
RRPTR    EQU   8                        REAR SCAN PTR
RTEMP    EQU   8                        TEMP REG
RBYSCN   EQU   9                        NUMBER OF BYTES SCANNED
RSCNRTN  EQU   10                       SCAN ROUTINE RETURN REG
RWRK11   EQU   11                       WORK REGISTER
RBASE    EQU   12                       MODULE BASE
RSAVE    EQU   13                       REG SAVE PTR
RRET     EQU   14                       SUBROUTINE RETURN ADDRESS
RLINK    EQU   15                       LINK REG
         SPACE
ZERO     EQU   0                        ZERO VALUE
ONE      EQU   1                        VALUE ONE
NAMELEN  EQU   2                        NAME FIELD LENGTH
VARINAME EQU   3                        OFFSET TO CHANGE XCTL NAME
FOUR     EQU   4                        VALUE FOUR
SIX      EQU   6                        VALUE SIX
SEVEN    EQU   7                        VALUE SEVEN
EIGHT    EQU   8                        VALUE EIGHT
TEN      EQU   10                       VALUE TEN
EIGHTEEN EQU   18                       VALUE EIGHTEEN
BLANK    EQU   C' '                     BLANK CHAR
COMMA    EQU   C','                     COMMA
LCX02    EQU   X'FF02'
LCX01    EQU   X'FF01'
LCXFD    EQU   X'FD00'
LCXFE    EQU   X'FE00'
         EJECT
         USING IEDQAVTD,RAVT            TCAM AVT ADDRESSABILITY
         USING IEDQOPCD,ROPCAVT         OP CONTROL AVT ADDRESSABILITY
         USING IEDQOPCE,ROPCE           ELEMENT ADDRESSABILITY
         USING IHADCB,RPARM             DCB ADDRESSABILITY
         USING IGCMZ10D,RBASE
         LR    RBASE,RLINK              SET BASE REGISTER
         SPACE 1
IGCMZ10D IEDHJN SKIPID,HJN
         LR    ROPCAVT,RPARM            SET BASE FOR OP CTL AVT
         LM    ROPCE,RBYSCN,OPCSAVE     RESTORE REGS FROM M0
         SR    RLINK,RLINK              CLEAR REG FOR WORK
         SR    RRET,RRET                CLEAR REG FOR WORK
         LA    RRET,ONE(,RRET)          INIT TO ONE
NEXT     ALR   RRPTR,RBYSCN             POINT TO LAST DELIMITER
         SR    RWRK11,RWRK11            CLEAR REG
         LA    RWRK11,TABLE             POINT TO TABLE
         BCTR  RBYSCN,RZERO             REDUCE FOR EXECUTE
LOOP     EX    RBYSCN,CLCOP             COMPARE OPERAND TO TABLE ENTRY
         BE    FOUND                    GOT IT
         LA    RWRK11,TEN(,RWRK11)      NO...LOOK AT NEXT TABLE ENTRY
         CLC   ERRWRT(ONE),ZERO(RWRK11) END OF TABLE
         BE    ERROR                    YES...OPERAND INVALID
         SLL   RRET,ONE                 MULTIPLY BY TWO
         B     LOOP                     CONTINUE
FOUND    OR    RLINK,RRET               SAVE OPERAND INDICATOR
         LR    RRET,RLINK               PUT TEST VALUE IN TEST REG
         SLL   RRET,SIX                 SET UP FOR TEST
         EX    RRET,TESTUC              CONFLICTING PARMS
         BE    ERROR                    YES
         SRL   RRET,EIGHT               SET UP FOR SECOND TEST
         EX    RRET,TESTPF              CONFLICTING PARMS
         BE    ERROR                    YES
         LA    RRET,ONE                 RE-INIT REG
         LH    RWORKA,EIGHT(,RWRK11)    GET FIELD FOR MODIFY
         EX    RWORKA,OR                OR ON BITS
         SRL   RWORKA,EIGHT             NOW USE SECOND FIELD
         EX    RWORKA,AND               AND THE BITS
         CLI   ZERO(RRPTR),BLANK        WAS THIS THE LAST OPERAND
         BE    EXIT                     YES....
         SR    RBYSCN,RBYSCN            INITIALIZE BYTES SCANNED REG
         LA    RRPTR,ONE(RRPTR)         POINT TO NEXT OPERAND
LOOPSCN  EQU   *
         LTR   RLEN,RLEN                TEST FOR END OF DATA
         BM    EXIT                     YES, END SCAN
         CLI   ZERO(RAPTR),COMMA        CHECK COMMA DELIMITER
         BE    SETRTN                   YES, SET UP RETURN
         CLI   ZERO(RAPTR),BLANK        CHECK BLANK DELIMITER
         BE    SETRTN                   YES, SET UP RETURN
         LA    RBYSCN,ONE(,RBYSCN)      BUMP BYTES SCANNED ONE
         LA    RAPTR,ONE(,RAPTR)        BUMP ADVANCE SCAN PTR
         BCTR  RLEN,RZERO               REDUCE DATA LENGTH BY ONE
         B     LOOPSCN                  LOOP TO SCAN NEXT POSITION
SETRTN   EQU   *
         BCTR  RLEN,RZERO               REDUCE DATA LENGTH BY ONE
         LA    RAPTR,ONE(,RAPTR)        BUMP ADVANCE PAST DEL
         LTR   RBYSCN,RBYSCN            ZERO BYTES SCANNED?
         BZ    EXIT                     YES, END SCAN
         MVI   OPCDOUBL,BLANK           SET OPCDOUBL TO
         MVC   OPCDOUBL+ONE(SEVEN),OPCDOUBL BLANKS
         CH    RBYSCN,HALF8             MORE THAN 8 BYTES SCANNED
         BH    ERROR                    YES... OPERAND IS WRONG
         BCTR  RBYSCN,RZERO             REDUCE COUNT FOR EXECUTE
         EX    RBYSCN,MVCOP             MOVE THE NEW OPERAND
         LA    RBYSCN,ONE(,RBYSCN)      RESTORE COUNT
         LA    RRPTR,ONE(,RRPTR)        POINT AT THIS OPERAND
         B     NEXT                     GO HANDLE THIS OPERAND
***************************************************************
EXIT     L     RWORKA,OPCWORK           GET ADDR OF MSG AREA
         LA    RWRK11,LEN621            GET MESSAGE LENGTH
         STH   RWRK11,ZERO(RWORKA)      PUT MESSAGE IN WORKAREA
         MVC   FOUR(LEN621,RWORKA),PROCMSG+ONE  MOVE MESSAGE
         MVC   OPCLDNME+VARINAME(NAMELEN),MSGWRT SET UP FOR XCTL
         B     OUT                      EXIT
ERROR    EQU   *
         LA    RZERO,EIGHTEEN           SET MSG NUMBER FOR 03
         MVC   OPCLDNME+VARINAME(NAMELEN),ERRWRT SET UP FOR XCTL
OUT      LR    RPARM,ROPCAVT            PASS OP CTL AVT PTR
         IEDXCTL                        CALL FUNCTION MODULE  @OZ35627
AND      NI    AVTBUFSW,ZERO            EXECUTE AND INSTRUCTION
OR       OI    AVTBUFSW,ZERO            EXECUTE OR INSTRUCTION
CLCOP    CLC   OPCDOUBL(ZERO),ZERO(RWRK11)  EXECUTE COMPARE INSTRUCTION
MVCOP    MVC   OPCDOUBL(ZERO),ZERO(RRPTR)   EXECUTE MOVE INSTRUCTION
TESTUC   CLI   TEST1,ZERO               TEST FOR CONFLICTING PARMS
TESTPF   CLI   TEST2,ZERO               TEST FOR CONFLICTING PARMS
TABLE    EQU   *
         DC    C'PARTIAL ',AL2(LCXFE)
         DC    C'FULL    ',AL2(LCX01)
         DC    C'UNCONDIT',AL2(LCX02)
LAST     DC    C'CONDITIO',AL2(LCXFD)
ERRWRT   DC    C'03'                    WRITE ERROR MSG MODULE
MSGWRT   DC    C'07'                    WRITE RESPONSE MSG MODULE
HALF8    DC    H'8'                     CONSTANT
TEST1    DC    X'C0'                    TEST FOR BOTH U AND C PARMS
TEST2    DC    X'03'                    TEST FOR BOTH P AND F PARMS
PROCMSG  DS    0H
         DC    AL1(ENDMSG-*-1)          LENGTH
         DC    C'IED621I '              MSG NUMBER
NUMBYTES DC    CL4' '                   NO. OF BYTES
         DC    C'BUFFTR COMMAND HAS BEEN PROCESSED'  TEXT
ENDMSG   EQU   *
LEN621   EQU   ENDMSG-PROCMSG-1         LENGTH OF MSG XXX
PATCH    DC    20F'0'                   PATCH AREA
         ORG
         EJECT
         TAVTD
         EJECT
         DCBD  DSORG=TR
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         END
