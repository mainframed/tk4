         TITLE ' IGCME10D - 3705 IPL - INPUT LOAD MODULE'
IGCME10D CSECT
         SPACE
************************START OF SPECFICATIONS*************************
*                                                                     *
* $MOD(IGCME10D) COMP(R@) PROD(TCAM):                              @01C
*                                                                     *
* DESCRIPTIVE NAME = 3705 IPL READ RECORD MODULE                      *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = VERSION 10.0                                               *
*    FUNCTION = THIS MODULE READS LOAD MODULE RECORDS OFF THE DATA    *
*    SET AND THE INPUT RECORD IS SEARCHED FOR A CONTROL RECORD. THE
*    COUNT AND RELATIVE ADDRESS IN THE CCW FIELD OF THE RECORD ARE
*    PLACED IN 'TXTLNGTH' AND 'TXTADDR'. THE FOLLOWING TEXT RECORD
*    IS PASSED TO IGCMG10D. IF A CONTROL RECORD INDICATES THAT
*    THE FOLLOWING TEXT RECORD IS THE LAST THEN 'LASTSW' IS SET IN
*    THE WORKAREA. IF AN RLD RECORD COMES AS THE LAST RECORD THEN
*    'TXTLNGTH' IS ZEROED AND 'LASTSW' IS TURNED ON. CONTROL IS THEN
*    PASSED TO IGCMG10D.
*    THIS ROUTINE RECEIVES CONTROL INITIALLY FROM EITHER IGCMD10D OR
*    IGCMG10D. IF INITIAL TEST WAS SELECTED IT RECEIVES CONTROL FIRST
*    FROM IGCMD10D, IF NOT FROM IGCMF10D. UPON BEING ENTERED IT SETS
*    UP ADDRESSABILITY FOR THE WORKAREA USED BY THE VARIOUS LOADS OF
*    IPL THEN DETERMINES WHO PASSED CONTROL. IF REGISTER 0
*    EQUALS 1 CONTROL WAS PASSED FROM IGCMD10D OR IGCMF10D, REG0 = 2
*    CONTROL CAME FROM IGCMG10D TO GET MORE DATA. IF REG0 = 3
*    CONTROL CAME FROM CESD CODE IN IGCMG10D, AND IF NOT 3 CONTROL
*    CAME FROM RLD CODE IN IGCMG10D.
*    IF ENTERED FROM IGCMD10D INPUT SWITCHES ARE CLEARED.
*    IF INITIAL TEST IS SELECTED, BITS CALLING FOR
*    RELOCATE ARE TURNED OFF AND THE ADDRESS OF DCB FOR INITIAL TEST
*    IS OBTAINED FROM THE WORKAREA. THE DECB IS INITIALIZED WITH THE
*    DCB ADDRESS AND THE ADDRESS OF THE INPUT BUFFER.  READ AND
*    CHECK ARE USED TO OBTAIN THE NEXT INPUT RECORDS.
*    A CHECK IS MADE TO SEE IF IT IS A TEXT RECORD. THE LOAD MODULE
*    IS ARRANGED SUCH THAT CESD RECORDS ARE FIRST, FOLLOWED BY
*    CONTROL AND TEXT RECORDS. A TEXT RECORD FOLLOWS A CONTROL
*    RECORD. IF NOT A TEXT RECORD A CHECK IS MADE TO SEE IF RELOCATE
*    HAS BEEN CANCELLED. IF NO EITHER THE CESD OR RLD CODE IN
*    IGCMG10D IS XCTLED TO. OTHERWISE THE RECORD IS CHECKED TO SEE IF
*    IT IS A CONTROL RECORD. IF YES THE BIT IN THE WORKAREA IS SET TO
*    INDICATE A TEXT RECORD IS TO FOLLOW. THE BUFFER SIZE IS CHECKED
*    AND IF GREATER THAN 1024 ERROR MESSAGE 167 RECORD TOO LARGE IS
*    WRITTEN OUT AND IPL TERMINATES. OTHERWISE A CHECK IS MADE TO
*    SEE IF THIS IS THE FIRST  TEXT RECORD. IF NO AND NO RELOCATE
*    AND NO INITIAL TEST AN XCTL TO IGCMG10D IS DONE IN ORDER TO SET
*    UP THE OUTPUT BUFFER FOR THE WRITE OPERATION. IF NOT 1ST TEXT
*    RECORD AND RELOCATE IS IN EFFECT THE TEXT POINTER IS CALCULATED
*    AND A CHECK IS MADE FOR LAST TEXT COMING, IF YES SET LAST TEXT
*    INDICATOR IN WORKAREA AND BRANCH BACK TO CODE TO READ ANOTHER
*    RECORD. IF NOT LAST TEXT COMING BRANCH TO READ ANOTHER RECORD.
*    IF RECORD IN THE INPUT BUFFER IS A TEXT RECORD, THE RECORD IS
*    MOVED TO THE WORK BUFFER AND IF THE LAST TEXT FLAG IS ON IT IS
*    PASSED TO IGCMG10D. IF NOT THE TEXT FLAG IS TURNED OFF AND
*    A READ FOR ANOTHER RECORD IS DONE.
*    IF RECORD READ IN IS TEXT AND INITIAL TEST FLAG IS ON A BRANCH
*    TO THE CODE WHICH SKIPS OVER THE FIRST X'700' BYTES IS DONE
*    AND THE INITIAL TEST FLAG IS TURNED OFF.
*    AS EACH CONTROL RECORD IS FOUND THE COUNT AND RELATIVE
*    ADDRESS IN THE CCW FIELD OF THE CONTROL RECORD ARE PLACED IN
*    'TXTLNGTH' AND 'TXTADDR' IN THE WORKAREA. THESE TWO VALUES
*    ARE USED WHEN PROCESSING THE NEXT RECORD READ WHICH WILL BE A
*    TEXT RECORD.
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = EBCDIC CHARACTER CODE DEPENDENCIES - CORRECTABLE  *
*                   BY REASSEMBLY                                     *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = R1 OPCAVT                                 *
*                           R2 OPCAVT                                 *
*                           R4 OPCE                                   *
*                           R7 = IPL/DUMP COMMON WORKAREA             *
*                           R4 = IPL WORKAREA 1                       *
*                           RB = IPL WORKAREA 2                       *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE =                                                       *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    ATTRIBUTES = REFRESHABLE,SERIALLY REUSABLE,TRANSIENT(TYPE 4),    *
*                 SUPERVISOR MODE,REENTRANT                           *
*                                                                     *
* ENTRY POINT = IGCME10D                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = XCTL SF=(E,OPCXCTL)                                    *
*                                                                     *
* INPUT = R0=1 ENTRY FROM IGCMD10D                                    *
*         R0=2 ENTRY FROM IGCMF10D                                    *
*         R0=3 ENTRY FOR CESD PROCESSING                              *
*         R0=4 ENTRY FOR RLD PROCESSING                               *
*                                                                     *
* OUTPUT =R0=1 EXIT TO IGCMG10D                                       *
*         OPCCOPCE CURRENT ELEMENT                                    *
*         R0=2 IGCMG10D FOR CESD PROCESSING                           *
*         R0=3 IGCMG10D FOR RLD PROCESSING                            *
*                                                                     *
* EXIT-NORMAL = IGCMF10D IGCMG10D                                     *
*                                                                     *
* EXIT-ERROR = IGCMI10D                                               *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA AREAS = COMMON DUMP/IPL WORKAREA                            *
*                 1ST IPL WORKAREA                                    *
*                 2ND IPL WORKAREA                                    *
*                 DECB                                                *
*                 LOCAL DATA AREA                                     *
*                                                                     *
*    CONTROL BLOCKS = AVT                                             *
*                     DCB                                             *
*                     OPCAVT                                          *
*                     OPCE                                            *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = READ CHECK XCTL                                            *
*                                                                     *
*  CHANGE ACTIVITY                                                    *
*A000000-999999                                                @X26X5R0
*C244000,267000                                                @OY12420
*A467000                                                       @OY12420
*C388000                                                       @ZA01100
*C120000,A120000,A129000,D144000,D174000,D182000,D190000,      @Y17XARS
*D266000,C310000,D402000-403000,C404000,C442000,A748000,       @Y17XARS
*D749000-757000,A380000,A765000                                @Y17XARS
*A287000,288000,338000,340000,350000,439000                    @OZ31840
*C341000,342000                                                @OZ31840
*A114620                                                       @OZ35627
*C114612,313000                                                @OZ35627
* $01=OZ41261 ETC2202 79.11.07 098061:                             @01A
* $21=OZ50665 ETC2402 81.04.14 162624:                             @21A
*************************END OF SPECIFICATIONS*************************
         EJECT
         SPACE  3
         SPACE  3
         USING IEDQOPCD,R2              ADDRESSABILITY FOR OPCAVT
         USING IEDQOPCE,R4              ADDRESSABILITY FOR OPCE
         USING DATADS,RB                ADDRESSABILITY FOR C-WKAREA
         USING IEDCOM,R7                ADDRESSABILITY FOR     @Y17XARS
*                                       COMMON WORKAREA        @Y17XARS
         BALR  RC,0                     ESTABLISH
         USING *,RC                     ADDRESSABILITY
IGCME10D IEDHJN SKIPID
         LR    R2,R1                    BASE FOR OPCAVT
         L     R4,OPCCOPCE              GET ELEMJ. OPCE OR L-WKAREA
         L     R7,OCMODNME              SET BASE FOR COMMON AREA
         DROP  R4                                              @Y17XARS
         LA    R4,COMCCWS               SET BASE FOR LWKAREA
         LA    RB,DATAOFF(R4)           ADDR OF C-WKAREA
         USING LDATA,R3                 ADDRESSABILITY FOR LOCAL DATA
         LA    R3,EIGHTY4(R4)           SET BASE FOR LOCAL DATA AREA
         USING CESDD,RD                 ADDRESSABILITY FOR CESD TABLE
         LA    RD,CESDOFF(R4)           BASE FOR CESD
         BCT   R0,TRYOUT                CONTROL FROM 1ST LOAD ?
         B     LOADRN                   YES
TRYOUT   EQU   *
         BCT   R0,TRYCESD               CONTROL FROM CESD CODE IN OUT
*                                       PUT MODULE
         B     INPUT190                 CONTROL IS FROM OUTPUT RTN
TRYCESD  EQU   *
         BCTR  R0,ZERO                  SUBTRACT ONE
*                                       EITHER RETURN FROM CESD OR
*                                       RLD PROCESSING IN OUTPUT MOD.
         L     R6,INBUFF(R4)            PICK UP ADDR OF BUFFER
         LTR   R0,R0                    IF 0 CSD PROCESSING
         BZ    INPUT02                  CESD PROCESSING WAS DONE
         B     INPUT18A                 CONTINUE RLD CHECKING
LOADRN   EQU   *
         MVI   INPUTSW,ZERO             INITIALIZE INPUT SWITCHES
         OI    ZERO(R4),RELOC           INDICATE TO TRY RELOCATE
         OI    ZERO(R4),CXTENDBT        IF 'CXTEND' PRESENT
         OI    ZERO(R4),NOOP            ASSUME NO BRING-UP
         XC    TOTLNGTW(EIGHT),TOTLNGTW  ZERO DATA PTRS.
         L     R1,FIRSTBLK              GET CESD TABLE QUEUE
         SPACE  3
         SPACE  3
****************  TEST FOR BRING-UP CONDITION ******************    BUP
INPUT02  EQU   *
         L     R5,TWENFOUR(,R4)         GET ADDR OF DCB OPENED    @01C
         TM    ZERO(R4),BRNGUP          BRING-UP SPECIFIED ?
         BNO   INPUT04A                 NO
         NI    ZERO(R4),SQUELCH         NO RELOCATE PROCESSING
         NI    ZERO(R4),DOBRUP          DO BRING-UP PROCESSING
INPUT04A EQU   *
         USING DECBIN1,R9               ADDRESSABILITY FOR DECB
         LA    R9,DECBOFF(R4)           PUT DECB ADDR IN REG9
         L     R8,INBUFF(R4)            GET ADDR INPUT BUFFER L-WKAREA
         ST    R8,DECBIN1+TWELVE        INSERT IT IN THE DECB
         ST    R5,DECBIN1+EIGHT         STORE DCB ADDRESS          @01C
         SPACE
READ     EQU   *
         LA    R8,DECBOFF(R4)           PUT DECB ADR IN REG 8  @YM04661
         SPACE
***************  READ RECORDS FROM LOAD MODULE  ****************
         LA    RD,REGSAVE(R4)           REG SAVEAREA IN L-WK
         SPACE 5
         DROP  R7                                              @YM04692
         USING IEDQOPCE,R6                                     @YM04692
         L     R6,OPCCOPCE              OPCE ADDRESSABILITY    @YM04692
         L     R6,OCMODNME              WA ADDRESSABILITY      @YM04692
         DROP  R6                                              @YM04692
         USING IEDCOM,R6                                       @YM04692
         L     R5,DCBAD                 GET DCB ADDRESS            @01C
         MVC   THREE(ONE,R5),RALTTRK+THREE  RESTORE CORRECT        @21A
*                                       CONCATENATION NUMBER SO    @21A
*                                       POINT WILL ADDRESS         @21A
*                                       CORRECT DATASET. THIS      @21A
*                                       IS ONLY A PROBLEM WHEN     @21A
*                                       CONCATENATED DATASETS      @21A
*                                       ARE USED.                  @21A
         LA    R6,COMTTRZ               TTRZ SAVE AREA ADDR    @YM04692
         POINT (R5),(R6)                SET READ-WRITE HEAD        @01C
         READ  (R8),SF,MF=E
         SPACE 5
         CHECK (R8)
         NOTE  (R5)                     GET TTR                    @01C
         AL    R1,FULONE                UPDATE TO NEXT RCD     @YM04692
         ST    R1,ZERO(R6)              SAVE FOR NEXT RECORD   @YM07698
         DROP  R6                                              @YM04692
         USING IEDCOM,R7                                       @YM04692
****************************************************************
         SPACE
** A LOAD MODULE RECORD IS IN THE BUFFER POINTED TO BY REG 8. **
         USING CESDD,RD                 ADDRESSABILITY FOR CESD TABL
         LA    RD,CESDOFF(R4)           BASE FOR CESD
         USING INPUTDS,R6
         L     R6,ARADDR(R8)       S    SET UP ADDRESSABILITY ON BUF
         TM    TXTSW,ONTXT              IS THIS A TEXT RECORD ?
         BO    INPUT29                  YES SEND BUF TO OUTPUT
         SPACE
*        BYPASSX ARE BRANCHES TO BYPASS SPECIAL LOAD           *
*        MODULE PROCESSING THAT IS REQUIRED ONLY FOR           *
*        NCP'S REQUIRING THE STORAGE PROTECT SUPPORT           *
*        OF THE 3705 HARDWARE.  WHEN PROCESSING THE            *
*        TARGETTED LOAD THESE BRANCHES ARE NOP'D               *
*        CAUSING ALL CODE FOLLOWING THE ENTRY 'CXTEND'         *
*        TO BE MOVED TO THE NEXT 2K BOUNDARY AND THE           *
*        ENTIRE LOAD IS RELOCATED AS NECESSRY.                 *
         SPACE
BYPASS1  EQU   *                        BYPASS CESD AND RLD HANDLING
         TM    ZERO(R4),RELOC           RELOCATE CANCELLED?
         BNO   INPUT18A                 YES
         SPACE
         TM    LMTYPE,CESD              IS THIS A CESD RECORD ?
         BO    CESD00                   YES - GO PROCESS IT
         TM    INPUTSW,RELON            RELOCATE IN PROGRESS ?
         BO    INPUT17                  YES - CHECK RLD'S
         NI    ZERO(R4),NORELOC         TURN OFF RELOCATE FLAG
         B     INPUT18A                 CONTINUE
INPUT17  EQU   *
         TM    LMTYPE,RLD               IS THIS AN RLD RECORD ?
         BNO   INPUT18A                 BRANCH                   S22024
         ST    R6,REGSAVE(R4)           SAVE ADDR OF BUFFER FOR WHEN
*                                       REENTERED AFTER RLD PROCESS.
         B     RLD00                    GO PATCH ADCONS
         SPACE
INPUT18A EQU   *
         TM    LMTYPE,CONTROL           DOES TEXT FOLLOW THIS RECORD ?
         BNO   INPUT20                  NO- CHECK FOR THE END
         OI    TXTSW,ONTXT              INDICATE TEXT IS TO FOLLOW
         CLC   COUNT(TWO),INBUFSZ       IS THE BUFFER TOO LARGE ?
         BNH   INPUT18                  NO - CONTINUE
         LA    R0,MSG167                SET ERROR MSG NUMBER
         B     ERROR                    BRANCH TO ERROR CODE
INPUT18  EQU   *
         TM    INPUTSW,FIRST            THIS FIRST TEXT ?
         BO    BYPASS2                  NO - CONTINUE
         OI    INPUTSW,FIRST            INDICATE THE FIRST
         B     INPUT191                 SKIP SENDING
         SPACE
BYPASS2  EQU   *
         TM    ZERO(R4),CARRYCDE        ENDREC PROCESSING      @OY12420
*                                       TO BE BYPASSED         @OY12420
         BNO   INPUT18B                 YES; BYPASS ENDREC PROCESSING
         SPACE
         L     RE,TXTADDRW              CALCULATE ENDING ADDRESS
         AH    RE,TXTLNGTH              OF PREVIOUS TEXT
         L     R5,INADDR-ONE            MATCH BEGINNING OF THIS
         LA    R5,ZERO(R5)              TEXT. RECORD OR IS
         CR    RE,R5                    THERE A GAP
         BNE   NOCARRY                  NO-- NO CARRY OVER
         OI    INPUTSW,CARRY            INDICATE THE CARRY
         LH    R5,TXTLNGTH              DECREMENT COUNT OF
         SH    R5,N4H                   OUTGOING TEXT BY
         STH   R5,TXTLNGTH              FOUR FOR CARRY
         B     INPUT18B                 GO SEND IT
         SPACE
NOCARRY  NI    INPUTSW,ONES-CARRY       TURN OFF CARRY
INPUT18B EQU   *
         SPACE
BYPASS3  EQU   *
         TM    ZERO(R4),NOOP            BRING-UP SPECIFIED
         BNO   BRINGUP                  YES- GOTO BRING-UP DISGUARD
         SPACE
         TM    ZERO(R4),STRETCH         STRETCH PROCESSING     @OY12420
         BNO   SEND                     NO
*                                       FALL THRU DURING RELOCATE
         TM    INPUTSW,BYFOCUS          BEYOND FOCUS POINT
         BO    INPUT18G                 YES - GO ADJUST
         L     R5,TXTADDRW              NO FOCUS IN THIS BUFFER
         AH    R5,TXTLNGTH              GET ENDING ADDR OF BUFFER
         C     R5,FOCUSPT               TO THE FOCUS YES ?
         BL    SEND                     NO SEND IT
         OI    INPUTSW,BYFOCUS          INDICATE BEYOND FOCUS
         C     R5,FOCUSPT               RE-ESTABLISH COND. CODE
         BE    SEND                     YES - NO EXCESS
         L     R5,FOCUSPT               SEND REMAINING NON-SHIFT
         S     R5,TXTADDRW              DATA
         MVC   SAVEIT(TWO),TXTLNGTH     SAVE OLD LENGTH
         STH   R5,TXTLNGTH
         OI    EIGHT(R4),SECOND         TURN BIT ONE
         B     SENDIT                   PREPARE TO EXIT
         SPACE 3
ADJUST   EQU   *
         NI    EIGHT(R4),OFF            TURN BIT OFF
         L     R7,WKBUFSAV(R4)          RELOAD START OF WKBUF  @OZ31840
         AR    R7,R5                    ADJUST BUFFER POINTER
         ST    R7,WKBUFSAV(R4)          SAVE START OF WKBUF    @OZ31840
         MVC   TXTADDR(THREE),FOCUSPT+ONE SET NEW TXTADDRW
         SH    R5,SAVEIT                COMPUTE NEW LENGTH
         LCR   R5,R5
         STH   R5,TXTLNGTH              SAVE NEW LENGTH AND
INPUT18G EQU   *
         L     R5,TXTADDRW              BUMP TXT ADDRESS
         AH    R5,GAPSIZE               BY GAP SIZE
         ST    R5,TXTADDRW
         SPACE  3
*    IGCME10D HAS SET UP A BUFFER'S WORTH OF TEXT IN THE WORK BUFFER  *
*    WHOSE ADDR IS IN THE L-WKAREA. REG 7 HAS ADDR OF A BLOCK OF TEXT *
*    OPCCOPCE CONTAINGS AN OPCE OR A L-WKAREA ADDRESS. INPUT BUFFER   *
*    AND WORK BUFFER ARE IN L-WKAREA; DATA IS IN WORK BUFFER.         *
         SPACE  3
SEND     EQU   *
         OI    EIGHT(R4),FIRSTONE       FIRST ENTRY
SENDIT   EQU   *
         LA    R0,ONE                   INDICATES CONTROL CAME FROM IN
*                                       INPUT RTN
         STM   R3,RB,MESAVE(R4)         SAVE REGISTERS
OUT      EQU   *
         MVC   OPCMODID,XCTLOUT         XCTL TO IFLOUPUT RTN   @Y17XARS
EXIT     EQU   *
         LR    R1,R2                    SET PARAMETER REG
         IEDXCTL                                               @OZ35627
         SPACE
INPUT190 EQU   *
         LM    R3,RB,MESAVE(R4)         RESTORE REGISTERS
         SPACE 3
         TM    EIGHT(R4),SECOND           RE-ENTERED FROM ADJUST
         BO    ADJUST                   YES
         NI    EIGHT(R4),OFF            TURN BIT OFF
*    SUBSEQUENT ENTRY FROM IGCMG10D. SET UP AS THOUGH IT WERE AN      *
*    INITIAL ENTRY.                                                   *
*    CHECK TO SEE IF THERE IS A CARRY OVER. IF YES SET UP WORKBUFFER  *
*    WITH VALUE PASSED FROM IGCMG10D. REG 6 THE INPUT BUFFER PTR; CON *
*    TAINS BUFFER OF DATA JUST SENT. IF THERE IS NO CARRY OVER SET    *
*    UP INPUT BUFFER REG AND WORK BUFFER REG                          *
         SPACE 3
INPUT191 EQU   *
         USING DECBIN1,R9               ESTABLISH ADDRESSABILITY FOR
*                                       DECB USED IN READ AND CHECK   *
         LA    R9,DECBOFF(R4)           ADDR OF DECB IN L-WKAREA
         LA    R8,DECBIN1               DECB
         USING BUFFERWK,RA              ADDRESSABILITY FOR WORK BUFF
         L     RA,WORKBUF(R4)           BASE FOR WORK BUFFER
         USING INPUTDS,R6               ADDRESS FOR BUFFER
         L     R6,TWELVE(R8)            BASE FOR INPUT BUFFER
         TM    INPUTSW,CARRY            CARR OVER VALUE
         BO    CARRYMV                  YES
         LA    R7,BUFFER                SET WKBUF @ - NOCARRY  @OZ31840
         ST    R7,WKBUFSAV(R4)          SAVE WKBUF @ - NOCARRY @OZ31840
         B     INPUT19                  BRANCH                   S22024
CARRYMV  EQU   *                        ADJUST POINTERS ETC...
         L     R7,WKBUFSAV(R4)          RELOAD START OF WKBUF  @OZ31840
         AH    R7,TXTLNGTH              POSITION PAST TXTLNGTH @OZ31840
         MVC   BUFFER-FOUR(FOUR),ZERO(R7)   CARRY 4 BYTES OVER @OZ31840
         LH    R5,COUNT                 ADJUST COUNT
         AH    R5,N4H                   BY ADDING 4 FOR
         STH   R5,TXTLNGTH              THE CARRY
         L     R5,INADDR-ONE            BACK UP TXTADDR
         LA    R5,ZERO(R5)              FIELD BY FOUR FOR
         SH    R5,N4H                   THE CARRY BYTES
         ST    R5,TXTADDRW                                  R
         LA    R7,BUFFER-FOUR           SET TEXT POINTER
         ST    R7,WKBUFSAV(R4)          SAVE WKBUF @ - CARRY   @OZ31840
         B     INPUT19A                 CONTINUE
         SPACE
INPUT19  EQU   *                        NO CARRY THIS TIME
         MVC   TXTLNGTH(TWO),COUNT      SAVE CONUT FOR OUTPUT
         MVC   TXTADDR(THREE),INADDR    SAVE REL ADDR FOR OUTPUT
INPUT19A EQU   *
         TM    LMTYPE,ENDOF             IS THIS THE LAST TEXT COMING ?
         BNO   READ                     NO-- CONTINUE READING
         OI    LASTSW,ONLAST            YES - INDICATE LAST TEXT
         B     READ                     READ ANOTHER RECORD
         SPACE
INPUT20  EQU   *                        THIS IS NOT A CONTROL RECORD
         TM    LMTYPE,ENDOF             IS THIS THE FINAL RECORD ?
         BNO   READ                     NO GO GET NEXT RECORD
         OI    LASTSW,ONLAST            YES SET LAST TEXT INDICATOR
         B     BYPASS3                  PREPARE TO SEND
***      CONTINUE                       PASS NULL BUFFER TO OUTPUT
         SPACE
*******  A TEXT RECORD IS IN THE BUFFER  ***********************
         SPACE
INPUT29  EQU   *                        TEXT JUST RECEIVED
         USING BUFFERWK,RA              ADDRESSABILITY FOR WORK BUFFER
         L     RA,WORKBUF(R4)           SET UP BASE
         MVC   BUFFER(TWO56),ZERO(R6)   MOVE IT TO
         MVC   BUFFER+TWO56(TWO56),TWO56(R6) BUFFER
         MVC   BUFFER+FIVE12(TWO56),FIVE12(R6)
         MVC   BUFFER+SEVEN68(TWO56),SEVEN68(R6)
         NI    SWITCH,ONES-ONTXT        TURN OFF TXT INDICATOR
         TM    SWITCH,ONLAST            THIS THE END ?
         BO    INPUT18B                 YES GO SEND IT
         B     READ                     NO - GO READ
         SPACE
BRINGUP  EQU   *                        BRING-UP DISGUARD RTN
         L     R5,TXTADDRW              GET TEXT ADDRESS
         C     R5,BUSTART               PASSED GARBAGE YES ?
         BNL   SEND                     YES CONTINUE
         AH    R5,TXTLNGTH              GO TO END OF BUFFER
         C     R5,BUSTART               HIT SIGNIFICANT CODE ?
         BNH   INPUT19                  GO SET UP LENGTH       @ZA01100
         LA    RA,FOUR(RA)              SKIP OVER PREFIX WORD
         AH    RA,TXTLNGTH              YES ADJUST BUFFER POINTERS
         S     R5,BUSTART                 ACCORDINGLY.
         SR    RA,R5                    POINTS AT BRUP START POINT
         MVC   TOTLNGTH,BUSTART+ONE     SET PROPER TOTAL
         MVC   TXTADDR,BUSTART+ONE      SET RELATIVE ADDRESS
         STH   R5,TXTLNGTH              SET NEW TEXT LENGTH
         OI    ZERO(R4),NOOP            NO BRING-UP
         OI    ZERO(R4),LOADBRUP        INDICATE 1ST BRUP RECORD
         ST    RA,REGSAVE(R4)           SAVE ADDR OF BRUP START POINT
        B      SEND                     GO SEND IT
         SPACE
ERROR    EQU   *
         MVC   OPCMODID,XCTLMI          INSERT ID OF IGCMI10D  @Y17XARS
         USING IEDQOPCE,R4              OPCE BASE              @Y17XARS
         L     R4,OPCCOPCE              OPCE ADDRESSABILITY    @Y17XARS
         USING IEDOCTR,R3               TRAILER BASE           @Y17XARS
         L     R3,OCTRUNIT              TRAILER ADDRESSABILITY @Y17XARS
         OI    OCTRRTN,OCTRERI          SET IPL ERROR FLAG     @Y17XARS
         MVI   OCSWITCH,OCIPLC          SET OCSWITCH=IPL CMD   @Y17XARS
         B     EXIT                     PREPARE TO EXIT
         SPACE  5
CESD00   EQU   *                        THE CESD PROCESSOR IS A PART
*                                       OF THE MODULE IGCMG10D. XCTL
*                                       TO IT. THE VALUE 2 IS IN REG0
         LA    R0,TWO                   UNIQUE VALUE TO IDENTIFY TO
*                                       IGCMG10D WHY IT IS BEING ENTER
         B     OUT                      PREPARE TO EXIT
         SPACE  5
RLD00    EQU   *                        THE RLD PROCESSOR IS A PART OF
*                                       THE MODULE IGCMG10D. XCTL TO IT
*                                       WITH THE VALUE 3 IN REG 0
         LA    R0,THREE                 UNIQUE VALUE TO IDENTIFY THAT
*                                       CONTROL CAME FROM INPUT AND
*                                       RLD PROCESSING IS NEEDED.
         B     OUT                      PREPARE TO EXIT
         EJECT
         SPACE
***************  LOCAL DATA (I.E. INPUT'S USE ONLY)  ***********
         SPACE
FULONE   DC    F'1'                     FULLWORD CONSTANT      @YM07643
BUSTART  DC    F'1792'                  BRING-UP START PT. IN L.M.
TWO56    EQU   256                      LENGTH IN MOVE INSTRUCTION
FIVE12   EQU   512                      LENGTH IN MOVE INSTRUCTION
SEVEN68  EQU   768                      OFFSET IN MOVE INSTRUCTION
LOADBRUP EQU   X'10'                    MASK TO INDICATE 1ST BRUP REC
BRNGUP   EQU   X'05'                    MASK TO CHECK FOR BRING-UP
NORELOC  EQU   X'BF'                    MASK TO TURN OFF RELOCATE
         SPACE 5
         SPACE 5
OFF      EQU   X'FC'                    MASK TO TURN OFF BITS
FIRSTONE EQU   X'02'                    FIRESTONE                S22024
MESAVE   EQU   128                      REG SAVE AREA IN L-WK
SECOND   EQU   X'03'                    SECOND                   S22024
INBUFF   EQU   32                       OFFSET TO ADDR INPUT BUFFER
WORKBUF  EQU   36                       OFFSET TO WORK BUFFER L-WKAREA
WKBUFSAV EQU   168                      OFFSET-WKBUF@ SAVEAREA @OZ31840
MSG167   EQU   167                      ERROR MSG NUMBER
CLNUPPRI EQU   X'88'                    CLEAN UP INDICATOR TO MH
AUTOIPL  EQU   X'DF'                    PRIORITY OF AUTO-IPL ELEMENT
XCTLMI   DC    C'MI'                    ID OF COMMON IPL-DUMP RTN
EIGHTY4  EQU   84                       EIGHTY4                  S22024
TWENFOUR EQU   24                       OFFSET IN L-WKAREA TO ADDR OF
*                                       DCB FOR L.M. OR BRING-UP
XCTLOUT  DC    C'MG'                    ID OF IFLOUPUT RTN
DATAOFF  EQU   184                      START OF C-WKAREA
SIXTY    EQU   60                       NEXT BLOCK ADDRESS
REGSAVE  EQU   96                       OFFSET TO SAVE AREA FOR BUFFER
         SPACE 2
         SPACE 5
         SPACE 5
******************** CESD TABLE QUEUE AND ASSOCIATED VALUES ****
CESDD    DSECT
****************************************************************
FIRSTBLK DS    AL4                      FIRST BLOCK PTR
LASTBLK  DS    AL4                      LAST BLOCK PTR
CURENTRY DS    AL4                      CURRENT ENTRY PTR
INUSE    EQU   X'01'                    THIS ENTRY IS IN USE
STOPPER  EQU   X'80'                    THIS IS THE END OF THE BLOCK
BLOCKADR DS    AL4                      ADDR OF BLOCK FROM GETMAIN
CESDOFF  EQU   40                       OFFSET IN L-WKAREA TO CESD 3ABL
DECBOFF  EQU   56                       OFFSET TO DECB IN L-WKAREA
CXTENDBT EQU   X'20'                    CXTEND PRESENT
RELOC    EQU   X'40'                    INDIATES TO TRY RELOCATE
NOOP     EQU   X'80'                    INDICATES NO BRING-UP
CARRYCDE EQU   X'02'                    INDICATES CARRY PROCESS@OY12420
STRETCH  EQU   X'08'                    INDICATES STRETCH      @OY12420
SQUELCH  EQU   X'BF'                    NO RELOCATE BUT DO BRING-UP
DOBRUP   EQU   X'7F'                    INDICATE TO DO BRING-UP
         SPACE  3
LDATA    DSECT
INPUTSW  DS    X                        INPUT SWITCH             S22024
FIRST    EQU   X'80'               THIS IS THE FIRST TEXT.
CARRY    EQU   X'40'               A CARRY CONDITION EXISTS
BYFOCUS  EQU   X'20'               BEYOND FOCUS POINT.
RELON    EQU   X'10'               RELOCATE IS REQUIRED.
RELGRP   EQU   X'04'               NO RELOCATE ON THIS GROUP.
FOUND     EQU   X'08'               CXTEND HAS BEEN FOUND.
         SPACE
NOP      EQU   X'00'               NOP FOR BYPASSX SWITCHES.
BRANCH   EQU   X'F0'               BRANCH FOR BYPASSX SWITCHES.
         SPACE
         DS    AL3                      ******
FOCUSPT  DS    AL4                      FOCUSPT                  S22024
GAPSIZE  DS    AL2                      GAPSIZE                  S22024
SAVEIT   DS    AL2                      SAVE IT                  S22024
         SPACE  3
INPUTDS  DSECT
LMTYPE   DC    AL1(0)              TYPE INDICATOR FOR LOAD
*                                  MODULE RECORD.
CONTROL  EQU   X'01'               INDICATOR FOR A CONTROL RECORD
ENDOF    EQU   X'0C'               INDICATOR FOR END OF THE L.M.
CESD     EQU   X'20'               INDICATOR CESD RECORD.
RLD      EQU   X'02'               INDICATOR FOR RLD RECORD.
         ORG   *+8                 N/A
INADDR   DC    AL3(0)              RELATIVE ADDR OF FOLLOWING
*                                  TEXT RECORD.
         ORG   *+2                 N/A
COUNT    DC    AL2(0)              NUMBER OF BYTES IN THE
*                                  FOLLOWING TEXT RECORD.
         SPACE
BUFFERWK DSECT
PREFIX   DS    AL4                      PREFIX                   S22024
BUFFER   DS    256F                     BUFFER                   S22024
         SPACE  3
INBUF1   DSECT
         DS    257F                     INBUF1                   S22024
         SPACE  3
OUTBUF1  DSECT
         DS    256H                     OUTBUF1                  S22024
         SPACE  3
DECBIN1  DSECT
         DS    F                        DCBIN1                   S22024
         DS    X                        DCBIN1                   S22024
         DS    X                        DCBIN1                   S22024
         DS    AL2                      DCBIN1                   S22024
DCBAD    DS    AL4                      DCBIN1                 @YM04692
         DS    AL4                      DCBIN1                   S22024
         DS    AL4                      DCBIN1                   S22024
         EJECT
DATADS   DSECT
****************************************************************
***        REGISTER,RETURNCODE AND NUMBER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         SPACE
RC00     EQU   0
RC04     EQU   4
RC08     EQU   8
RC12     EQU   12
RC16     EQU   16
RC20     EQU   20
RC24     EQU   24
RC28     EQU   28
RC32     EQU   32
RC36     EQU   36
RC40     EQU   40
RC44     EQU   44                                                   BUP
RC48     EQU   48
RC52     EQU   52
RC56     EQU   56
         SPACE
ZERO     EQU   0
ONE      EQU   1
TWO      EQU   2
THREE    EQU   3
FOUR     EQU   4
FIVE     EQU   5
SIX      EQU   6
SEVEN    EQU   7
EIGHT    EQU   8
NINE     EQU   9
TEN      EQU   10
ELEVEN   EQU   11
TWELVE   EQU   12
         SPACE 2
****************************************************************
**    MISCELLANEOUS  EQUATES  AND CONSTANTS                   **
         SPACE
BIT10    EQU   X'10'          TEST FOR OPEN IN DCB
IFLGSD   EQU   49             DCB IFLGS DISPLACEMENT
NOERRTN  EQU   X'0C'          INDICATE NO SYS ERROR RTNS.
UCBCA    EQU   19             UCB DISP OF CA INDICATOR.
MINICA   EQU   X'15'          MINI CA INDICATOR IN UCB.
         SPACE
ABORTVAL EQU   12             ABORT RET CODE THRESHOLD.
RETCODE  DC    H'0'                RETURN CODE.
MAXRC    DC    H'0'          MAXIMUM RETURN CODE SET.
RNDDN    DC    C'        '    RN DDNAME
RNADR    DC    C'   '              UNIT ADDRESS AREA.
ENTRYPT  DC    F'0'           ENTRY POINT FOR LOAD.
ARADDR   EQU   12             DECB AREA ADDR. DISP.
RNSWITCH EQU   X'14'         DISP OF SWITCH IN DIAG PHASE 1.
SIXTBIT  EQU   X'01'         SIXTEEN BIT INDICATOR.
ALIASIND EQU   X'80'          THIS IS AN ALIAS-INDICATOR.  BLDL
RENREUS  EQU   X'C0'          REENTRANT & REUSABLE         BLDL
ABORT    EQU   X'03'          ABORT SENSE INDICATORS.
         DS    0H
TXTLNGTH DC    H'0'           LENGTH OF TEXT RECORD
         DS    0F
TOTLNGTW DC    AL1(0)         TOTAL LENGTH OF DATA
TOTLNGTH DC    AL3(0)         TRANSFERRED
         DS    0F
TXTADDRW DC    AL1(0)         ADDRESS (REL TO ZERO) OF
TXTADDR  DC    AL3(0)         THIS TEXT RECORD.
         SPACE
N256HW   DC    H'256'         MAXIMUM MVC COUNT
INBUFSZ  DC    H'1024'        SIZE OF INPUT BUFFER
OUTBFSZ  DC    H'512'         SIZE OF OUTPUT BUFFER.
DOUBLE   DC    D'0'           DOUBLE WORD WORK AREA
LINECNT  DC    H'0'           LINE COUNT FOR OUTPUT
MAXLIN   DC    H'52'          MAXIMUM LINES PER PAGE.
N4H      DC    H'4'           FOUR CONSTANT
         SPACE
**   BLDL  LIST  FOR  LOAD  MODULE  DATA  SET                 **
         DS    0H
BLDLIST  DC    H'1'           ONE ENTRY IN THIS LIST.
         DC    H'58'          EACH ENTRY IS 58 BYTES LONG
MEMBER   EQU   *              MEMBER NAME PLACE HERE.
         DS    CL8                      EIGHT BYTS               S22024
RALTTRK  DC    4X'00'              USED IN FIND
*
Z        DC    X'00'          FLAG BYTE
C        DC    X'00'          FLAG BYTE
         ORG   MEMBER+22
ATTRIB   EQU   *              ATTRIBUTE FIELD
         ORG   MEMBER+29
EPAMEM   EQU   *              ENTRY PT IF MEMBER DIR.ENTRY.
         ORG   MEMBER+43
EPAALS   EQU   *              ENTRY PT IF ALIAS DIR.ENTRY.
         ORG   MEMBER+58
         SPACE
MAXIVT   EQU   *
         DC    V(CXWMAXI1)         ADDRESS OF MAXI PHASE 1
         DC    V(CXWMAXI2)         ADDRESS OF MAXI PHASE 2..
         SPACE
MINIVT   EQU   *
         DC    V(CXWMINI1)         ADDRESS OF MINI PHASE 1
         DC    V(CXWMINI2)         ADDRESS OF MINI PHASE 2..
         SPACE
PHASPTR  DC    A(MAXIVT)           PHASE VECTOR TABLE PTR..
PHASCNT  DC    H'8'                NUMBER OF PHASES TIMES FOUR..
MAXIPH1  DC    V(CXWMAXI1)         ADDRESS OF MAXI PHASE 1.
MINIPH1  DC    V(CXWMINI1)         ADDRESS OF MINI PHASE 1.
MAXIBUPH DC    CL8'IFL3705B'       NAME OF DIAG MAXI PHASE 1.
MINIBUPH DC    CL8'IFL3705A'       NAME OF DIAG MINI PHASE 1.
         SPACE
*                               *                              *
****************************************************************
***      SWITCHES AND TEST EQUATES                            **
         SPACE
SWITCH   EQU   *         * SWITCH BYTE *
         SPACE
SW1      EQU   *          INDICATES ONE PARM PROCESSED
ON1      EQU   X'80'          TURN ON SW1
OFF1     EQU   X'7F'          TURN OFF SW1
         SPACE
TXTSW    EQU   *            INDICATES TEXT RECORD IN NEXT BUFFER
ONTXT    EQU   X'40'          TURN ON TXTSW
OFFTXT   EQU   X'BF'          TURN OFF TXTSW
         SPACE
LASTSW   EQU   *            INDICATES LAST TEXT RECORD
ONLAST   EQU   X'20'          TURN ON LASTSW
         SPACE
ENDIN    EQU   *            INDICATES INPUT BUFFER IS EMPTY.
ONEND    EQU   X'10'          TURN ON ENDIN.
OFFEND   EQU   X'EF'          TURN OFF ENDIN.
         SPACE
IPLSW    EQU   *            INDICATES BOOTSTRAP IS TO BE SENT
ONIPL    EQU   X'08'          TURN ON IPLSW.
OFFIPL   EQU   X'F7'          TURN OFF IPLSW.
         SPACE
IOPEND   EQU   *            INDICATES AN EXCP IS OUTSTANDING.
ONIO     EQU   X'04'          TURN ON IOPEND
OFFIO    EQU   X'FB'          TURN OFF IOPEND
         SPACE
ERRENT   EQU   *            INDICATES ERROR RTN HAS BEEN ENTERED
ONENT    EQU   X'02'          TURN ON ERRENT.
         SPACE
BUFFERSW EQU   *                 INDICATES PRIMING OF BUFFERS..
BUFSW    EQU   X'01'                    BUFF SWITCH              S22024
         SPACE
ONES     EQU   X'FF'          USED IN SWITCH MANIPULATIONS.
         SPACE
         DC    AL1(0)      * ACTUAL SWITCH BYTE *
         SPACE 2
SWITCH2  EQU   *
CASW     EQU   *
         SPACE
LOADFLG  EQU   X'80'          LOADMOD KEYWORD PROCESSED.
UNITFLG  EQU   X'40'          UNIT    KEYWORD PROCESSED.
DIAGFLG  EQU   X'20'          DIAG    KEYWORD PROCESSED.            BUP
DIAGOK   EQU   X'10'          BRING-UP COMPLETED INDICATOR.         BUP
ONCA     EQU   X'01'               ON INDICATING MINI CA.
COMPLETE EQU   X'02'          LAST WRITE JUST ISSUED.
NXTPHS   EQU   X'04'          NEXT PHASE REQUEST.
         SPACE
         DC    AL1(0)          * ACTUAL SWITCH2 BYTE *
         SPACE
DIAGIND  DC    C'Y6'              INITIAL-TEST INDICATOR.
DIAGDEF  DC    C'Y6'               DEFAULT DIAG VALUE.
CHARN    EQU   C'N'           NO BRING-UP INDICATOR.                BUP
         SPACE 2
WARN     DC    AL1(0)        BYTE USED FOR WARNING INDICATORS
RNFULL   EQU   X'80'            RN IS FULL WARNING
         SPACE
GOODCODE EQU   X'7F'          NORMAL ECB COMPLETION CODE.
PERMERR  EQU   X'41'          PERMANENT ERROR ECB CODE.
         SPACE 2
*****************  CCW'S AND RELATED EQUATES  ******************
RNCCW    DS    0D             CHANNEL COMMAND WORDS
         DC    AL1(0)           COMMAND CODE
RNCCWAD  DC    AL3(0)           DATA ADDRESS
         DC    X'60'            FLAGS
         DC    AL1(0)             --
RNCCWLN  DC    AL2(1025)        COUNT FOR WRITE
         SPACE
NOPCCW   DS    0D             NOP CHANNEL COMMAND IS
         DC    AL1(3)           CHAINED TO THE NORMAL
         DC    AL3(*)           COMMANDS TO ENSURE
         DC    X'20'            DEVICE END IS RETURNED
         DC    AL3(1)           BEFORE ECB POSTED.
         SPACE
****************************************************************
         SPACE
**********  CONTROL BLOCKS FOR ASSOCIATED DATA SETS  ***********
         SPACE
ECBRN    DC    F'0'       **  ECB FOR EXCP'S TO 27RN.
         SPACE
IOBRN    DS    0F         **  IOB FOR EXCP'S TO 27RN.
         DC    X'42'         -COMMAND CHAINING & NOT RELATED.
         DC    AL1(0)        -FLAGS
IOBSENSE DC    AL2(0)        -SENSE BYTES
         DC    AL1(0)        -ECB CODE
         DC    AL3(ECBRN)    -ECB ADDRESS
         DC    AL1(0)        -FLAGS
         DC    AL3(0)        -CSW COMMAND ADDRESS.
IOBCSWS  DC    AL2(0)        -CSW STATUS BYTES
IOBCSWC  DC    AL2(0)        -CSW BYTE COUNT.
         DC    AL1(0)        -SIO CODE
         DC    AL3(RNCCW)    -CHANNEL PROGRAM ADDRESS.
         DC    AL1(0)        -RESERVED
         DC    AL3(0)                   DCB ADDRESS
         DC    AL1(0)        -REPOSITION MODIFIER
         DC    AL3(0)        -RESTART ADDRESS.
         DC    AL2(0)        -BLOCK COUNT INCREMENT N/A.
         DC    AL2(0)        -ERROR COUNTS.
         DC    AL1(0)        -EXTENT 0 OF DEB.
         DC    AL3(0)        -BBCCHHR
         DC    AL4(0)        -(SAME)
* END OF IOB DEFINITION  ***************************************
         EJECT
         TCOMD                                                 @Y17XARS
         TCOMIPLD                                              @Y17XARS
         EJECT
         TAVTD
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         DCBD  DSORG=TX
         EJECT
         TOCTRD                                                @Y17XARS
   END
