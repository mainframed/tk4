QNM      TITLE 'IEDQNM-ROUTINE TO BUILD CKREQ RECORD'
IEDQNM   CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A538000-539000                                                 SA51078
*D762000                                                        SA51078
*A505001-505002,510301                                          SA59179
*A516000,759000,778000                                          SA61045
*A133000-134000,283000-284000,286000,387300-389700,483400-485400,Y01004
*A759500-760500                                                  Y01004
*C186000,282000,285000,309000,450000-456000                      Y01004
*D312000                                                         Y01004
*A327000                                                       @SA74882
*D330000-333000                                                @SA74882
*C506200                                                       @OX11946
*D510200-511300,535000                                         @OX11946
*A483000                                                       @OZ11200
*C517400                                                       @OX22535
*A259000                                                       @OZ39371
         SPACE 3
***********************************************************************
*                                                                     *
*TITLE:'IEDQNM'-CKREQ FROM APPLICATION PROGRAM                        *
*                                                                     *
*MODULE-NAME=IEDQNM                                                   *
*                                                                     *
*DESCRIPTIVE-NAME=ROUTINE TO BUILD CHECKREQ RECORDS                   *
*                                                                     *
*COPYRIGHT='NONE'                                                     *
*                                                                     *
*  STATUS:  CHANGE LEVEL 5                                            *
*                                                                     *
*FUNCTION:THIS MODULE BUILDS CKREQ DISK RECORD(S) FOR ALL DESTINA-    *
*   TION QUEUES ASSOCIATED WITH THE APPLICATION PROGRAM WHICH         *
*   ISSUED THE CKREQ MACRO.                                           *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IEDQNM                                                       *
*                                                                     *
*INPUT:REGISTERS 2,3,9,12,14,15 CONTAIN THE FOLLOWING VALUES          *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORK AREA                                 *
*   3-ADDRESS OF THE REQUEST ELEMENT THIS MODULE IS TO PROCESS        *
*   4-ADDRESS OF DISK RECORD IF CONTINUED FROM PREVIOUS EXECUTION
*   9-ADDRESS OF AVT                                                  *
*   12-BASE FOR IEDQNF-CHECKPOINT EXECUTOR                            *
*   14-RETURN ADDRESS-IN IEDQNF                                       *
*   15-ENTRY POINT FOR THIS MODULE                                    *
*                                                                     *
*   THE FOLLOWING REQUEST ELEMENT POINTED TO BY R3                   *
*                                                                     *
*   OFFSET 0-KEY:X'60'                                                *
*        1-ADDRESS OF CHECKPOINT QCB                                  *
*        4-LINK FIELD                                                 *
*        8-ADDRESS OF ECB                                             *
*        12- ADDRESS OF FIRST INPUT PEWA IN CHAIN OFF TCX             *
*                                                                     *
*OUTPUT:ACKREQ DISK RECORD IS BUILT.ITS ADDRESS IS IN CKPLDRB IF      *
*   THIS IS THE FIRST RECORD BUILT FOR THIS REQUEST;IT IS IN          *
*   CKPEXCP IF NOT THE FIRST RECORD. ONE REQUEST MAY RESULT IN MORE   *
*   THAN ONE RECORD,BUT EACH ENTRY INTO THIS MODULE RESULTS IN ONLY   *
*   ONE RECORD.                                                       *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*                                                                     *
*        IEDQTRM-DETERMINES TERMINAL ADDRESS                          *
*        IEDQEB-AQCTL (SVC 102) - PUTS IEDQNM INTO KEY ZERO      Y01004
*        MODESET-SVC 107 - GETS IEDQNM OUT OF KEY ZERO           Y01004
*                                                                     *
*EXITS-NORMAL:THIS MODULE RETURNS TO THE ADDRESS IN R14. R15          *
*   CONTAINS THE OFFSET FOR THE I/O QUEUE MANAGER.                    *
*                                                                     *
*EXITS-ERROR:THIS MODULE RETURNS TO THE ADDRESS IN R14. R15           *
*   CONTAINS THE OFFSET FOR THE NO CORE ROUTINE.                      *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   AVT(AVTRNMPT,AVTOPTPT,AVTCLRHI)                                   *
*   CHECKPOINT WORK AREA                                              *
*   PEWA                                                              *
*   AIB                                                               *
*   TERMINAL TABLE                                                    *
*   QCB                                                               *
*   OPTION TABLE                                                      *
*                                                                     *
*ATTRIBUTES:REENTERABLE, RESIDENT                                Y01004
*                                                                     *
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         EJECT
         SPACE 3
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0
R1       EQU   1                        ADDRESS OF TERMINAL ENTRY
R2       EQU   2                        ADDRESS OF CKPT WORK AREA
R3       EQU   3                        ADDR OF OPTION FIELD
R4       EQU   4                        ADDRESS OF DISK RECORD
R5       EQU   5                        ADDRESS OF REQUEST ELEMENT
R6       EQU   6                        LENGTH OF OPTION FIELD
R7       EQU   7                        ADDRESS OF QCB;OPT LNGTH TB
R8       EQU   8                        OFFSET TO OPTION FIELD
RAVT     EQU   9                        ADDR OF AVT
R10      EQU   10                       INDEX-OPTION FIELDS LOOP
R11      EQU   11                       COMPARAND-NO.OPTION FIELDS
R12      EQU   12                       BASE FOR CKPT EXECUTOR
R13      EQU   13                       ADDR OPT FIELDS-THIS ENTRY
R14      EQU   14                       RETURN REG
R15      EQU   15                       BASE FOR THIS MODULE,RETURN    X
                                        CODE OFFSET
         SPACE 3
         USING *,R15                    BASE
IEDQNM   IEDHJN QNM00
         SPACE
         USING IEDQAVTD,RAVT
         USING IEDQCKPD,R2
         USING IEDQCRED,R3              BASE FOR REQUEST ELEMENT
         USING IEDQCDRD,R4
         SPACE
         ICM   R4,ALL,CKPEXCP           GET CURRENT EXCP RECORD. Y01004
         BZ    QNM05                    BRANCH IF NONE BEING WRITTN
         TM    CDRCKFLG,CDRCKRNC        CHECK FOR INCOMPLETE CREQ
         BZ    QNM05                    BRANCH IF NOT INCOMPLETE
         CLI   CDRKEY,CDRCKREQ          CHECK FOR CKREQ RECORD
         BNE   QNM05                    BRANCH IF NOT CKREQ
         L     R5,AVTCKPTB              CKPT QCB ELEMENT       @SA74882
         CR    R3,R5                    IS CURRENT ELEMENT     @SA74882
*                                       EQUAL TO FIRST ELEMENT @SA74882
*                                       ON QUEUE               @SA74882
         BE    QNM07                    YES                    @SA74882
         SPACE 3
*ISSUE GETMAIN IN ORDER TO BUILD DISK RECORD
         SPACE
QNM05    EQU   *
         LH    R10,CKPCKRLN             LENGTH OF RECORD
         LA    R11,CKPLDRB              ADDRESS TO PUT GETMAIN
         LR    R8,R15                   SAVE BASE
         GETMAIN EC,LV=(R10),A=(R11),MF=(E,CKPGETML)
         SPACE 3
         LTR   R15,R15                  CHECK FOR INSUFFICIENT CORE
         LR    R15,R8                   RESTORE BASE
         BNZ   QNM65                    BRANCH IF NO CORE
         L     R4,CKPLDRB
         SPACE
QNM07    EQU   *
         OI    CDRCKFLG,CDRCKRNC        TURN ON INCOMPLETE FLAG
         L     R5,CREDEB                GET INPUT PEWA FROM      Y02027
*                                       REQUEST ELEMENT          Y02027
         USING IEDQPEWA,R5              BASE FOR PEWA            Y02027
         SPACE 3
*BUILD DISK RECORD
         SPACE
QNM20    EQU   *
         MVI   CDRKEY,CDRCKREQ          PUT IN CKREQ KEY
         LH    R1,PEWAPETO              GET TERMNAME OFFSET      Y02027
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         STH   R1,CDRCKOFF
         LA    R6,PERAQCB               ADDR OF READ AHEAD QCB   Y02027
         SPACE 3
*                                                                Y02027
*              SET CREDEB TO NEXT INPUT PEWA                     Y02027
*              IF LAST PEWA SET FLAG SO NQ WILL NOT RETURN       Y02027
         LR    R7,R3                    GET CRE TO BACK UP TO    Y02027
         SH    R7,AVTHA16               BEGINNING OF AIB         Y02027
*                                       (CRE IS IN AIB+16)       Y02027
QNM21    EQU   *                                                 Y02027
         L     R5,PEWALINK              GET NEXT PEWA            Y02027
         ST    R5,CREDEB                AND STORE IN CRE         Y02027
         LTR   R5,R5                    END OF CHAIN             Y02027
         BNZ   QNM22                    BRANCH IF NO             Y02027
         NI    CDRCKFLG,AVTEFF-CDRCKRNC TURN OFF INCOMPLETE FLAG Y02027
         MVC   CREDEB(4),AVTFZERO       ZERO CREDEB IF           Y02027
*                                       NO MORE PEWAS IN A.P.    Y02027
         B     QNM25                    AVOID TEST               Y02027
QNM22    CLC   PEPCBAD-IEDQPEWA+ONE,AIBPCBAD-IEDQAIB+ONE(R7) GET Y02027
*                                       NEXT PEWA FOR SAME PCB   Y02027
         BNE   QNM21                    BRANCH IF NO             Y02027
QNM23    EQU   *                                                 Y02027
         TM    PEWAOPT2,PEWAIN          INPUT DCB                Y02027
         BNO   QNM21                    BRANCH IF NO             Y02027
QNM25    EQU   *                                                 Y02027
         STM   R14,R15,CKPSAVE2         SAVE REGISTERS         @OZ11200
         L     R15,AVTRNMPT             ADDRESS OF TERMNAME TABLE
         BALR  R14,R15                  GET ADDR OF TERMINAL ENTRY
         LM    R14,R15,CKPSAVE2         RESTORE REGS
         SPACE
         USING IEDQTRM,R1               BASE FOR TERMINAL ENTRY
         TM    TRMSTATE,TRMHELDN        CHECK FOR SYNC             0917
         BO    QNM26                    BRANCH IF SYNC=YES         0917
         XC    CDRCKOFF,CDRCKOFF        SET OFFSET TO 0 -NOT USED  0917
QNM26    EQU   *                                                   0917
         L     R7,TRMDESTQ-1            ADDR OF QCB
         USING IEDQQCB,R7               BASE
         LR    R11,R4                   SAVE BEGINNING OF DISK RCD 0827
         TM    TRMSTATE,TRMLOG          PROCESS ENTRY           SA59179
         BM    QNM27               YES,SAVE FIELDS             @OX11946
         TM    QCBDSFLG,QCBDISK         CHECK FOR DISK QUEUES
         BZ    QNM29                    BRANCH IF CORE ONLY        0910
         SPACE 3
         SPACE 3
*CHECKPOINT MASTER QCB FIELDS
         SPACE
QNM27    EQU   *                                                   1217
         MVC   CDRCKMSG(CKPMCTLN),QCBMSGCT MOVE MSG CT TO RECORD
         MVC   CDRCKIN(CKPSEQLN),TRMINSEQ MOVE SEQ NO.5 TO RECORD
         ICM   R8,ADDR,TRMSTAT+ONE      GET PEWA ADDRESS        SA61045
         BZ    QNM2703                  BR NOT OPEN             SA61045
         USING  IEDQPEWA,R8                                     SA61045
         NC    EOMSAVE+ONE(2),EOMSAVE+ONE  IS THERE AN EOM BUF  SA61045
         BZ    QNM2701                  BRANCH IF NO            SA61045
         L     R8,EOMSAVE               ADDRESS OF EOM BUFFER   SA61045
         B     QNM2702                  SET SEQ OUT             SA61045
QNM2701  EQU   *                                                SA61045
         CLC   PERAQCB+1(3),AVTDELAD+1   READ AHEAD Q EMTY      SA61045
         BE    QNM2703                  BR IF EMPTY             SA61045
         L     R8,PERAQCB               BFR ON READ AHAD Q      SA61045
QNM2702  EQU   *                                                SA61045
         DROP  R8                                               SA61045
         MVC   CDRCKIN+2(2),PRFTQBCK+1-IEDQPRF(R8)  SET NEW    @OX22535
*                                        SEQUENCE NUMBER       @OX22535
QNM2703  EQU   *                                                SA61045
         MVC   CDRCKQBC(CKPQBKLN),QCBQBACK  MOVE QBACK POINTERS
         SPACE 3
*BEGINNING OF LOOP THROUGH PRIORITY LEVEL QCBS
         SPACE
QNM28    EQU   *
         MVC   CDRCKQCB(CKPQCBLN),QCBDNHDR  MOVE PRIOR QCB PTRS
         MVC   CDRCKPQB(CKPQBKLN),QCBPQBCK                      SA51078
*                                       PRILEVEL QBACK PTR      SA51078
         CLI   QCBPRIPQ,0               CHECK FOR LAST PRIOR QCB
         BE    QNM29                    BRANCH IF LAST
         LA    R7,QCBPSIZE(,R7)         ADD LENGTH OF PRIOR QCB
         LA    R4,CKPQCBLN(,R4)         ADD LEN TO RECORD POSITION
         B     QNM28                    LOOP
         SPACE
*END OF LOOP THROUGH PRIORITY LEVEL QCBS
         SPACE 3
QNM29    EQU   *
         LR    R0,R11                   SAVE RECORD ADDRESS
         TM    TRMSTATE,TRMOPTFN        CHECK FOR OPTION FIELDS
         BZ    QNM50                    BRANCH IF OPTION NOT USED
         SPACE 3
*MOVE OPTION FIELDS TO DISK RECORD(USES REGISTERS 1.3.4.5.6.7.8.10.
*11,13)
         SPACE 3
*SET UP FOR LOOP
         SPACE
         SR    R11,R11                  CLEAR
         IC    R11,TRMOPNO              COMPARAND-NO.OF OPTN FIELDS
         L     R13,AVTOPTPT             ADDRESS OF OPTION TABLE
         L     R7,4(0,R13)              ADDR OF OPT LENGTH TABLE
         LH    R8,TRMOPTBL              OFFST TO OPT FOR THIS ENTRY
         N     R8,AVTCLRHI              CLEAR HIGH ORDER HALF WORD
         SLL   R8,2                     MULTIPLY OFFSET BY FOUR@OZ39371
         AR    R13,R8                   GET ADDR OF OPT-THIS ENTRY
         SR    R8,R8                    CLEAR-OFFSET TO EACH OPTFLD
         SR    R6,R6                    CLEAR-LENGTH FOR MOVE
         LA    R10,TRMOPT               BEGINNING OF OPTION OFFSETS
         SPACE 3
*BEGINNING OF LOOP THROUGH OPTION TABLE OFFSETS FOR THIS TERM ENTRY
         SPACE
QNM40    EQU   *
         LR    R5,R13                   INITIALIZE-OPTNS-THIS ENTRY
         IC    R8,0(R10)                OPTION OFFSET
         CLI   0(R10),X'FF'             CHECK FOR UNUSED FIELD
         BE    QNM48                    BRANCH IF NOT USED
         SPACE
         AR    R5,R8                    ADDRESS OF OPTION FIELD
         IC    R6,0(R7)                 LENGTH OF OPTION FIELD
         CLI   1(R7),X'D0'              CHECK OPTION TYPE        11111
         BH    QNM45                    BRANCH IF NOT ADDRESS TYPE 1111
         CLI   1(R7),X'80'              CHECK OPTION TYPE        E 111
         BH    QNM48                    BRANCH IF ADDRESS TYPE   E 1111
QNM45    EQU   *                                                 E 111
         EX    R6,QNMMOVE               MOVE OPTION FIELD TO RECORD
         LA    R4,1(R4,R6)              ADD LENGTH MOVED TO BASE OF    X
                                        DISK RECORD
QNM48    EQU   *
         LA    R7,10(0,R7)              MOVE TO NEXT EXTRY IN OPTN     X
                                        LENGTH TABLE
         LA    R10,1(0,R10)             BUMP INDEX
         BCT   R11,QNM40                SUBTRACT FROM NO.OPTN FLDS
         SPACE
*END OF LOOP OPTION FIELDS
         SPACE 3
QNM50    EQU   *
         LR    R4,R0                    RESTORE RECORD BEGINNING AD
         LA    R11,CKPIOQM              OFFSET FOR QUEUE MANAGER
         C     R0,CKPEXCP               COMPARE FOR CONTINUED CKREQ
         BNE   QNM60                    BRANCH IF THIS IS 1ST RCD
         LA    R11,CKPDIOR              OFFSET FOR DISK I/O RTN
         SPACE 3
*RETURN TO CHECKPOINT EXECUTOR-OFFSET FOR NEXT MODULE TO BE LOADED
*IS IN REGISTER 15
         SPACE
QNM60    EQU   *
         LR    R15,R11                  RETURN CODE
         BR    R14                      RETURN
         SPACE 3
*SET OFFSET FOR NO CORE MODULE AND RETURN TO CHECKPOINT EXECUTOR
         SPACE
QNM65    EQU   *
         LA    R15,CKPNOCOR             SET OFFSET INDEX         Y02027
         BR    R14                      RETURN                   Y02027
         SPACE 3
QNMMOVE MVC    CDRCKOPT(0),0(R5)        MOVE OPTION FIELD TO RECORD
         SPACE
ADDR     EQU   7                        MASK TO ICM 3-BYTE ADDRS Y01004
ALL      EQU   15                       MASK TO ICM ALL 4 BYTES. Y01004
ONE      EQU   1                        OFFSET OF ONE           SA61045
         EJECT
         TAIBD EXT=CKREQ
         SPACE 2
         TAVTD
         TCKPD 3330
         TTRMD
         TQCBD
         TDEBAPD
         TPRFD
         TPEWAD                                                 SA61045
         END
