         TITLE 'IEEVSND8 - OPERATOR SEND COMMAND, NOTICE HANDLER       *
                        '
IEEVSND8 CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
         MODID BRANCH=YES
REGS     DS    0H                                                  0024
*   COMPTR=R1;                      /* SAVE ADDR COMMON DATA AREA  0028
*                                      MOVE LIST FORMS OF MACROS TO
*                                      AUTOMATIC STORAGE             */
         LR    COMPTR,R1                                           0028
*   GEN(MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG );                 0029
         MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG
*   R1PTR=PARMRCD1;                 /* SET RECORD1 BASE        Y02676*/
         L     @10,PARMRCD1(,COMPTR)                               0030
         ST    @10,@TF00001                                        0030
         MVC   R1PTR(3),@TF00001+1                                 0030
*   IF FADDBC='1'B                  /* IS 'ALL' AND 'LOGON'        0031
*                                      SPECIFIED?                    */
*     THEN                          /* YES, ADD MSG TO NOTICE SECTION*/
         TM    FADDBC(COMPTR),B'00100000'                          0031
         BO    @RT00031                                            0031
*     GOTO RD1BKL;                  /* BRANCH TO ENQ ON NOTICE     0032
*                                      DIRECT- ORY RECORD            */
*   MSGNO=CBCMSGNO;                 /* SAVE NOTICES MSGNO SPEC'D ON
*                                      SEND CMD FROM COMMON (WHERE IT
*                                      WAS SAVED BY IEEVSEND)        */
         LH    @05,CBCMSGNO(,COMPTR)                               0033
         STH   @05,MSGNO                                           0033
*   IF MSGNO>R1BCMAX                /* SPECIFIED MSG NUMBER Y02676 0034
*                                      EXCEEDS MAXIMUM BRODCAST    0034
*                                      NOTICES MSG NO. SPECIFIED IN
*                                      RECORD 1                      */
*     THEN                          /* MSG NO. EXCEEDS MAXIMUM     0034
*                                      ALLOWED                       */
         CH    @05,R1BCMAX(,@10)                                   0034
         BH    @RT00034                                            0034
*     GOTO WMSG6;                   /* GIVE WARNING MESSAGE        0035
*                                                                    */
*RD1BKL:                            /* RECORD1 HAS BEEN READ         */
*   RNBCD=R1BCPTR;                  /* RNAME FOR ENQ ON DIRECTORY  0036
*                                                              Y02676*/
RD1BKL   L     @10,R1PTR-1                                         0036
         LA    @10,0(,@10)                                         0036
         MVC   RNBCD(3),R1BCPTR(@10)                               0036
*ENQBCD:                            /* ENQUEUE ON BRODCAST NOTICE  0037
*                                      DIRECTORY RECORD              */
*   GEN(ENQ (QNAME,RNBCD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );      0037
*                                                                  0037
ENQBCD   ENQ (QNAME,RNBCD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)
*/* ******************************************************************/
*/*                                                                  */
*/*      READ A BROADCAST NOTICES DIRECTORY RECORD                   */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0038
*READDIR:                           /* READ A DIRECTORY RECORD USING
*                                      RNAME AS RELATIVE BLOCK ADDR  */
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
READDIR  XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0038
*   P1READ='1'B;                    /* SET PARM FLAG FOR READ        */
         OI    P1READ(COMPTR),B'01000000'                          0039
*   PARMRBA=ADDR(RNBCD);            /* SET PARM RBA ADDRESS FOR READ */
         LA    @10,RNBCD                                           0040
         ST    @10,@TF00001                                        0040
         MVC   PARMRBA(4,COMPTR),@TF00001                          0040
*   PARMIOAD=ADDR(DIRAREA);         /* SET PARM AREA ADDRESS FOR READ*/
         LA    @10,DIRAREA                                         0041
         ST    @10,@TF00001                                        0041
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0041
*   R1=ADDR(SDIOPARM);              /* SET PARM FOR I/O MODULE Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0042
*   CALL IEEVSND5;                  /* CALL IO ROUTINE TO READ A   0043
*                                      NOTICE DIRECTORY RECORD       */
         L     @15,@CV00316                                        0043
         BALR  @14,@15                                             0043
*   RETC=R15;                       /* SAVE RETURN CODE FROM REG 15  */
         STC   R15,RETC                                            0044
*   IF RETC>0                       /* TEST RETURN CODE FROM IO RTN  */
*     THEN                          /* IF UNSUCCESSFUL OPERATION     */
         CLI   RETC,0                                              0045
         BH    @RT00045                                            0045
*     GOTO BADIO;                   /* GO TO PROCESS ERROR           */
*   BCDADD=RNBCD;                   /* SAVE RBA FOR LATER WRITE IF 0047
*                                      RECORD IS UPDATED             */
         MVC   BCDADD(3),RNBCD                                     0047
*   BCDPTR=PARMIOAD;                /* SET BASE FOR NOTICES Y02676 0048
*                                      DIRECTORY RECORD STRUCTURE    */
         MVC   BCDPTR(3),PARMIOAD+1(COMPTR)                        0048
*/* ******************************************************************/
*/*       THIS CODE SCANS THE BROADCAST NOTICES DIRECTORY RECORD     */
*/*       FOR THE APPROPRIATE ENTRY -- THE ONE REPRESENTING THE      */
*/*       SPECIFIED NOTICE MSGNO IF 'DELETE' WAS SPECIFIED, OR       */
*/*       THE FIRST AVAILABLE ENTRY IF A NOTICE IS TO BE ADDED.      */
*/* ******************************************************************/
*                                                                  0049
*   IF FADDBC='1'B                  /* IF ADDING MSG TO BC DIRECTORY */
*     THEN                          /* YES,                          */
         TM    FADDBC(COMPTR),B'00100000'                          0049
         BO    @RT00049                                            0049
*     GOTO ADDBC3;                  /* BRANCH TO SEARCH FOR UNUSED NO*/
*   DO I=1 TO DIM(BCDENTRY);        /* SCAN ALL ENTRIES        Y02676*/
         LA    I,1                                                 0051
@DL00051 DS    0H                                                  0052
*     IF BCDMSGNO(I)='0000'X        /* END OF DIRECTORY        Y02676*/
*       THEN                        /* YES, NO MORE DIRECTRY ENTRIES */
         L     @10,BCDPTR-1                                        0052
         LA    @10,0(,@10)                                         0052
         LR    @05,I                                               0052
         MH    @05,@CH00164                                        0052
         ST    @05,@TF00001                                        0052
         ALR   @05,@10                                             0052
         AL    @05,@CF00339                                        0052
         MVC   @ZT00002+2(2),BCDMSGNO(@05)                         0052
         L     @05,@ZT00002                                        0052
         LTR   @05,@05                                             0052
         BZ    @RT00052                                            0052
*       GOTO WMSG6;                 /* BRANCH TO ISSUE WARNING MSG 0053
*                                      'NO BROADCAST MESSAGE' TO   0053
*                                      TERMINAL                      */
*     IF BCDNOMSG(I)='1'B           /* THIS MSG NO UNUSED      Y02676*/
*       THEN                        /* YES,NO MSG ASSIGNED TO THIS 0054
*                                      NO.                           */
         LR    @05,@10                                             0054
         AL    @05,@TF00001                                        0054
         AL    @05,@CF00339                                        0054
         TM    BCDNOMSG(@05),B'10000000'                           0054
         BO    @RT00054                                            0054
*       GOTO LSTMSGBK;              /* STEP TO NEXT ENTRY      Y02676*/
*     IF BCDMSGNO(I)=MSGNO          /* ENTRY FOR MSGNO FOUND   Y02676*/
*       THEN                        /* YES, MATCH              Y02676*/
         LH    @05,MSGNO                                           0056
         AL    @10,@TF00001                                        0056
         AL    @10,@CF00339                                        0056
         MVC   @ZT00002+2(2),BCDMSGNO(@10)                         0056
         L     @10,@ZT00002                                        0056
         CR    @10,@05                                             0056
         BE    @RT00056                                            0056
*       GOTO DELETEMN;              /* DELETE NOTICE           Y02676*/
*     IF BCDMSGNO(I)>MSGNO          /* SCANNED PAST MSGNO      Y02676*/
*       THEN                        /* YES, NO SUCH NOTICE     Y02676*/
         CR    @10,@05                                             0058
         BH    @RT00058                                            0058
*       GOTO WMSG6;                 /* TAKE ERROR EXIT         Y02676*/
*LSTMSGBK:                          /* A MSG HAS BEEN PROCESSED,   0060
*                                      LISTED                        */
*   END;                                                           0060
LSTMSGBK AH    I,@CH00047                                          0060
         CH    I,@CH00163                                          0060
         BNH   @DL00051                                            0060
*   GOTO LRECEND;                   /* STEP TO NEXT RECORD     Y02676*/
         B     LRECEND                                             0061
*ADDBC3:                                                           0062
*   DO I=1 TO DIM(BCDENTRY);        /* SCAN ALL ENTRIES        Y02676*/
ADDBC3   LA    I,1                                                 0062
@DL00062 DS    0H                                                  0063
*     IF BCDNOMSG(I)='1'B           /* ENTRY AVAILABLE         Y02676*/
*       THEN                        /* YES, CAN BE USED        Y02676*/
         LR    @10,I                                               0063
         MH    @10,@CH00164                                        0063
         L     @05,BCDPTR-1                                        0063
         LA    @05,0(,@05)                                         0063
         ALR   @05,@10                                             0063
         AL    @05,@CF00339                                        0063
         TM    BCDNOMSG(@05),B'10000000'                           0063
         BO    @RT00063                                            0063
*       GOTO ADDBC4;                /* PUT NEW NOTICE HERE     Y02676*/
*   END;                                                           0065
         AH    I,@CH00047                                          0065
         CH    I,@CH00163                                          0065
         BNH   @DL00062                                            0065
*LRECEND:                           /* END OF DIRECTORY RECORD       */
*   IF BCDNEXT=0                    /* END OF DIR RCD          Y02676*/
*     THEN                          /* YES                           */
LRECEND  L     @10,BCDPTR-1                                        0066
         LA    @10,0(,@10)                                         0066
         MVC   @ZT00001+1(3),BCDNEXT(@10)                          0066
         L     @10,@ZT00001                                        0066
         LTR   @10,@10                                             0066
         BZ    @RT00066                                            0066
*     GOTO WMSG6;                   /* BRANCH TO ISSUE WARNING MSG 0067
*                                      'NO BROADCAST MESSAGE' TO   0067
*                                      TERMINAL DEQ ON PREVIOUS    0067
*                                      RECORD                        */
*   GEN(DEQ   (QNAME,RNBCD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) );       0068
         DEQ   (QNAME,RNBCD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)
*   RNBCD=BCDNEXT;                  /* RNAME FOR NEXT ENQ      Y02676*/
         L     @10,BCDPTR-1                                        0069
         LA    @10,0(,@10)                                         0069
         MVC   RNBCD(3),BCDNEXT(@10)                               0069
*   GOTO ENQBCD;                    /* GOTO SCAN NEXT BC DIRECTRY REC
*                                                                    */
         B     ENQBCD                                              0070
*   GEN(EJECT);                                                    0071
         EJECT
*WMSG6:                             /* ISSUE WARNING MSG TO SENDER   */
*   IF FADDBC='1'B                  /* TEST IF ADDING NOTICE WAS   0072
*                                      Y02676 REQUIRED               */
*     THEN                          /* YES,                          */
WMSG6    TM    FADDBC(COMPTR),B'00100000'                          0072
         BNO   @RF00072                                            0072
*     FMSG4='1'B;                   /* SET INDICATOR FOR WARNING MSG-
*                                      'NO SPACE IN BROADCAST DATA 0073
*                                      SET FOR NOTICES               */
         OI    FMSG4(COMPTR),B'00100000'                           0073
*   ELSE                            /* NO NOT ADDING A NOTICE RECORD */
*     FMSG6='1'B;                   /* SET INDICATOR FOR WARNING MSG-
*                                      'NO BROADCAST MSG'            */
         B     @RC00072                                            0074
@RF00072 OI    FMSG6(COMPTR),B'00001000'                           0074
*   GOTO EXITCODE;                  /* EXIT FROM ROUTINE       Y02676*/
         B     EXITCODE                                            0075
*BADIO:                             /* I/O ERROR IN IEEVSDIO       0076
*                                      PROCESSING                    */
*   FBADIO='1'B;                    /* SET FLAG FOR WARNING MSG      */
BADIO    OI    FBADIO(COMPTR),B'00000100'                          0076
*   SDIORC=RETC;                    /* SAVE SDIO RETURN CODE IN    0077
*                                      COMMON DATA AREA FOR USE BY 0077
*                                      IEEVSND4                      */
         MVC   SDIORC(1,COMPTR),RETC                               0077
*   GOTO EXITCODE;                  /* CALLER WILL ISSUE Y02676    0078
*                                      WARNING MSG TO SENDER       0078
*                                                                    */
         B     EXITCODE                                            0078
*                                                                  0079
*/* ******************************************************************/
*/*                                                                  */
*/*       WRITE NEW NOTICE TEXT TO RECORD LOCATED BY FIRST           */
*/*       AVAILABLE DIRECTORY ENTRY.                                 */
*/* ******************************************************************/
*                                                                  0079
*ADDBC4:                            /* AVAILABLE BROADCAST MSGNO IS
*                                      FOUND.                        */
*   CBCMSGNO=BCDMSGNO(I);           /* SAVE NOTICE MESSAGE NMBR    0079
*                                      Y02676 (MSGNO) OF MSG JUST  0079
*                                      ADDED. IEEVSND4 WILL GIVE A 0079
*                                      CONFIRM- ATION MSG            */
ADDBC4   L     @10,BCDPTR-1                                        0079
         LA    @10,0(,@10)                                         0079
         LR    @05,I                                               0079
         MH    @05,@CH00164                                        0079
         ST    @05,@TF00001                                        0079
         ALR   @05,@10                                             0079
         AL    @05,@CF00339                                        0079
         MVC   @ZT00002+2(2),BCDMSGNO(@05)                         0079
         L     @05,@ZT00002                                        0079
         STH   @05,CBCMSGNO(,COMPTR)                               0079
*   CBCMSGNO=CBCMSGNO&'7FFF'X;      /* TURN OFF HI-ORDER BIT   YM4152*/
*                                                                  0080
         N     @05,@CF00332                                        0080
         STH   @05,CBCMSGNO(,COMPTR)                               0080
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT BRODCAST MESSAGE RECORD TO BE WRITTEN INTO DS          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0081
*   BCMPTR=ADDR(MSGAREA);           /* SET BASE FOR NOTICE MSG Y02676*/
         LA    @05,MSGAREA                                         0081
         ST    @05,@TF00002                                        0081
         MVC   BCMPTR(3),@TF00002+1                                0081
*   BCMSG=BCMSG&&BCMSG;             /* CLEAR NOTICE RECORD     Y02676*/
         XC    BCMSG(129,@05),BCMSG(@05)                           0082
*   BCMLNG=TEXTLENG;                /* SET LENGTH OF MESSAGE ASSIGN
*                                      MESSAGE TEXT                  */
         SLR   @02,@02                                             0083
         IC    @02,TEXTLENG(,COMPTR)                               0083
         STC   @02,BCMLNG(,@05)                                    0083
*   BCMTEXT=COMBUF(TBEG:TBEG+TEXTLENG-1);                          0084
*                                                                  0084
         MVI   BCMTEXT+1(@05),C' '                                 0084
         MVC   BCMTEXT+2(123,@05),BCMTEXT+1(@05)                   0084
         BCTR  @02,0                                               0084
         SLR   @01,@01                                             0084
         IC    @01,TBEG(,COMPTR)                                   0084
         ALR   @01,COMPTR                                          0084
         EX    @02,@SM00343                                        0084
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL IO RTN TO WRITE A BRODCAST NOTICES MESSAGE RECORD        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0085
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
         XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0085
*   P2WRDI='1'B;                    /* SET PARM FLAG FOR WRITE BY  0086
*                                      BLOCK ID (RBA)                */
         OI    P2WRDI(COMPTR),B'10000000'                          0086
*   PARMIOAD=ADDR(MSGAREA);         /* SET AREA ADDRESS FOR WRITE    */
         ST    @05,@TF00002                                        0087
         MVC   PARMIOAD(4,COMPTR),@TF00002                         0087
*   PARMKEY=BCMKEY;                 /* SET PARM KEY FOR WRITE        */
         MVC   PARMKEY(1,COMPTR),BCMKEY                            0088
*   PARMRBA=ADDR(BCDMRBA(I));       /* SET RBA FOR WRITE       Y02676*/
         L     @05,@TF00001                                        0089
         AL    @10,@CF00346                                        0089
         LA    @10,BCDMRBA-2(@05,@10)                              0089
         ST    @10,@TF00001                                        0089
         MVC   PARMRBA(4,COMPTR),@TF00001                          0089
*   R1=ADDR(SDIOPARM);              /* SET PARM FOR I/O MODULE Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0090
*   CALL IEEVSND5;                  /* CALL IO RTN TO WRITE NOTICE 0091
*                                      MSG RECORD WITH SEND TEXT     */
         L     @15,@CV00316                                        0091
         BALR  @14,@15                                             0091
*   RETC=R15;                       /* SAVE RETURN CODE FROM REG 15  */
         STC   R15,RETC                                            0092
*   IF RETC>0                       /* TEST RETURN CODE FROM IO RTN  */
*     THEN                                                         0093
         CLI   RETC,0                                              0093
         BH    @RT00093                                            0093
*     GOTO BADIO;                   /* GOTO PROCESS ERROR          0094
*                                                                    */
*                                                                  0095
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ** */
*/*       THIS CODE UPDATES THE BROADCAST DIRECTORY RECORD TO        */
*/*       REFLECT THE RESULT OF THE FUNCTION FULFILLED. THAT IS, IF  */
*/*       'DELETE' IS SPECIFIED, THE REQUESTED MSGNO IS MARKED 'NOT  */
*/*       IN USE' IN THE NOTICE DIRECTORY RECORD OR IF 'ALL' AND     */
*/*       'LOGON' ARE SPECIFIED, THE RELATIVE BLOCK ADDRESS (RBA) OF */
*/*       THE ADDED MESSAGE IS INSERTED IN THE NOTICE DIRECTORY      */
*/*       RECORD.                                                    */
*/** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0095
*   BCDNOMSG(I)='0'B;               /* MARK ENTRY IN USE       Y02676*/
         LR    @10,I                                               0095
         MH    @10,@CH00164                                        0095
         L     @05,BCDPTR-1                                        0095
         LA    @05,0(,@05)                                         0095
         ALR   @05,@10                                             0095
         AL    @05,@CF00339                                        0095
         NI    BCDNOMSG(@05),B'01111111'                           0095
*   GOTO WRITBCD;                   /* UPDATE NOTICE DIR RCD   Y02676*/
         B     WRITBCD                                             0096
*DELETEMN:                                                         0097
*   BCDNOMSG(I)='1'B;               /* MARK ENTRY AVAILABLE    Y02676*/
DELETEMN LR    @10,I                                               0097
         MH    @10,@CH00164                                        0097
         L     @05,BCDPTR-1                                        0097
         LA    @05,0(,@05)                                         0097
         ALR   @05,@10                                             0097
         AL    @05,@CF00339                                        0097
         OI    BCDNOMSG(@05),B'10000000'                           0097
*   FNOMSG='1'B;                    /* SET ROUTING FLAG        Y02676*/
         OI    FNOMSG(COMPTR),B'10000000'                          0098
*WRITBCD:                           /* CALL I/O RTNE TO WRITE      0099
*                                      BRODCAST NOTICES DIRECTORY    */
*                                                                  0099
*   /*****************************************************************/
*   /*                                                               */
*   /* RECORD WITH UPDATE FOR ADDED MESSAGE.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0099
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
WRITBCD  XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0099
*   P2WRDI='1'B;                    /* SET PARM FLAG FOR WRITE BY  0100
*                                      BLOCK ID (RBA)                */
         OI    P2WRDI(COMPTR),B'10000000'                          0100
*   PARMRBA=ADDR(BCDADD);           /* SET PARM RBA ADDRESS FOR WRITE*/
         LA    @10,BCDADD                                          0101
         ST    @10,@TF00001                                        0101
         MVC   PARMRBA(4,COMPTR),@TF00001                          0101
*   PARMIOAD=ADDR(DIRAREA);         /* SET PARM AREA ADDR FOR WRITE  */
         LA    @10,DIRAREA                                         0102
         ST    @10,@TF00001                                        0102
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0102
*   PARMKEY=BCDKEY;                 /* SET PARM KEY FOR WRITE        */
         MVC   PARMKEY(1,COMPTR),BCDKEY                            0103
*   R1=ADDR(SDIOPARM);              /* SET PARM FOR I/O MODULE Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0104
*   CALL IEEVSND5;                  /* CALL IO RTN                   */
         L     @15,@CV00316                                        0105
         BALR  @14,@15                                             0105
*   RETC=R15;                       /* SAVE RETURN CODE FROM REG 15  */
         STC   R15,RETC                                            0106
*   IF RETC>0                       /* TEST RETURN CODE FROM IO RTN  */
*     THEN                          /* IF UNSUCCESSFUL OPERATION     */
         CLI   RETC,0                                              0107
         BH    @RT00107                                            0107
*     GOTO BADIO;                   /* GOTO PROCESS ERROR            */
*   IF FADDBC='1'B                  /* TEST ROUTING FLAG             */
*     THEN                          /* BROADCAST NOTICE MSG WAS ADDED*/
         TM    FADDBC(COMPTR),B'00100000'                          0109
         BNO   @RF00109                                            0109
*     FMSG8='1'B;                                                  0110
         OI    FMSG8(COMPTR),B'00000100'                           0110
*                                                                  0111
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*          E     X     I     T     C     O     D     E             */
*/*                                                                  */
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0111
*EXITCODE:                          /* CLEANUP AND END PROCESSING    */
*   GEN(DEQ   (QNAME,RNBCD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) );       0111
@RF00109 DS    0H                                                  0111
EXITCODE DEQ   (QNAME,RNBCD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)
*   RETURN;                         /* EXIT TO CALLER          Y02676*/
@EL00001 L     @13,4(,@13)                                         0112
@EF00001 L     @00,@SIZDATD                                        0112
         LR    @01,@12                                             0112
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0112
         BR    @14                                                 0112
*   GEN;                                                           0113
LISTBEG  ENQ   (QNAME,,E,3,SYSTEM),RET=HAVE,MF=L
         DEQ   (QNAME,,3,SYSTEM),RET=HAVE,MF=L
LISTEND  EQU   *                       END OF LIST FORMS
SPARE    DC    50X'00'              PATCH AREA
*   END IEEVSND8                                                   0114
*                                                                  0114
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJZT301)                                       */
*/*%INCLUDE SYSLIB  (IKJZT302)                                       */
*/*%INCLUDE SYSLIB  (IKJZT303)                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*                                                                  0114
*       ;                                                          0114
         B     @EL00001                                            0114
@DATA    DS    0H
@CH00047 DC    H'1'
@CH00164 DC    H'5'
@CH00163 DC    H'25'
@SM00343 MVC   BCMTEXT(0,@05),COMBUF-1(@01)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SAV001  EQU   @SA00001
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00001 DC    F'0'
@ZT00002 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IEEVSND8 CSECT
         DS    0F
@CF00339 DC    F'-5'
@CF00346 DC    F'-3'
@CF00332 DC    XL4'7FFF'
@DATD    DSECT
         DS    0D
MSGNO    DS    H
         DS    CL3
R1PTR    DS    AL3
         DS    CL1
BCDPTR   DS    AL3
         DS    CL1
BCMPTR   DS    AL3
         DS    CL1
BCDADD   DS    AL3
RETC     DS    AL1
         DS    CL3
DIRAREA  DS    CL129
         DS    CL3
MSGAREA  DS    CL129
RNBCD    DS    CL3
AUTOLIST DS    CL24
         ORG   AUTOLIST
ENQEL    DS    CL12
DEQL     DS    CL12
         ORG   AUTOLIST+24
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IEEVSND8 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
@CV00316 DC    V(IEEVSND5)
         DS    0D
BCDKEY   DC    X'00'
BCMKEY   DC    X'02'
QNAME    DC    CL8'SYSIKJBC'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
COMPTR   EQU   @03
R1       EQU   @01
I        EQU   @04
R15      EQU   @15
COMMON   EQU   0
COMMONA  EQU   COMMON
MSGFLAGS EQU   COMMONA+3
FMSG4    EQU   MSGFLAGS
FMSG6    EQU   MSGFLAGS
FMSG8    EQU   MSGFLAGS
FLAGS    EQU   COMMONA+4
@NM00002 EQU   FLAGS+1
FNOMSG   EQU   @NM00002
FADDBC   EQU   @NM00002
@NM00003 EQU   FLAGS+2
@NM00004 EQU   FLAGS+3
FSOURCE  EQU   @NM00004
FBADIO   EQU   @NM00004
SDIORC   EQU   COMMONA+16
TBEG     EQU   COMMONA+20
CSCBPTR  EQU   COMMONA+21
TEXTLENG EQU   COMMONA+28
CBCMSGNO EQU   COMMONA+32
COMMONB  EQU   COMMON+160
COMBUF   EQU   COMMONB
COMMONC  EQU   COMMON+284
SDIOPARM EQU   COMMONC+168
@NM00006 EQU   SDIOPARM
P1READ   EQU   @NM00006
@NM00007 EQU   SDIOPARM+1
P2WRDI   EQU   @NM00007
PARMKEY  EQU   SDIOPARM+2
PARMRBA  EQU   SDIOPARM+4
PARMIOAD EQU   SDIOPARM+8
PARMRCD1 EQU   COMMONC+196
R1BC     EQU   0
R1BCPTRP EQU   R1BC
R1BCPTR  EQU   R1BCPTRP+1
R1USPTRP EQU   R1BC+4
R1BCMAX  EQU   R1BC+12
BCDIR    EQU   0
BCDENTRY EQU   BCDIR
BCDMSGNO EQU   BCDENTRY
BCDNOMSG EQU   BCDMSGNO
BCDMRBA  EQU   BCDENTRY+2
BCDNEXT  EQU   BCDIR+126
BCMSG    EQU   0
BCMLNG   EQU   BCMSG
BCMTEXT  EQU   BCMSG+1
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHACT1   EQU   CHAIN+35
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSHORT  EQU   CHASM+24
CHSWT    EQU   CHSHORT
COMMONPT EQU   0
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
*                                      START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00013 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
CHARSV16 EQU   CHSHORT+108
CHARSV15 EQU   CHSHORT+104
CHJSCBVS EQU   CHSHORT+100
CHUSCVS  EQU   CHSHORT+96
@NM00012 EQU   CHSHORT+92
@NM00011 EQU   CHSHORT+88
CHSQA    EQU   CHSHORT+52
CHQPA    EQU   CHSHORT+16
CHJCL    EQU   CHSHORT+12
CHSPC    EQU   CHSHORT+8
CHSPB    EQU   CHSHORT+4
CHTCB    EQU   CHSHORT+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00010 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHAIN+36
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHAIN+34
CHQID    EQU   CHAIN+32
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPARM   EQU   CHKEY
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
@NM00009 EQU   BCMSG+126
BCDREND  EQU   BCDIR+125
@NM00008 EQU   R1BC+45
R1LEVEL  EQU   R1BC+38
R1DSN    EQU   R1BC+14
R1RECNUM EQU   R1BC+8
R1USPTR  EQU   R1USPTRP+1
R1USFLGS EQU   R1USPTRP
R1BCFLGS EQU   R1BCPTRP
PARMDCB  EQU   COMMONC+192
PARMLMCT EQU   COMMONC+188
PARMDDNM EQU   SDIOPARM+12
PARMFDBK EQU   SDIOPARM+3
P2DEVAD  EQU   @NM00007
P2DEL    EQU   @NM00007
P2CLOSE  EQU   @NM00007
P2WRDAF  EQU   @NM00007
P1READ1  EQU   @NM00006
P1CREATE EQU   @NM00006
P1OPEN   EQU   @NM00006
@NM00005 EQU   COMMONC+167
OPERID   EQU   COMMONC+160
IDUSRID  EQU   COMMONC
MSG1EXT  EQU   COMMONA+36
CBCCONID EQU   COMMONA+34
ACCESSOR EQU   COMMONA+29
COMBUFP  EQU   COMMONA+25
COMI     EQU   COMMONA+24
RETVATT1 EQU   COMMONA+17
IDTBL    EQU   COMMONA+13
IDCNT    EQU   COMMONA+12
MSG1EXTP EQU   COMMONA+9
M1IND    EQU   COMMONA+8
FBADTPUT EQU   @NM00004
FBADRITA EQU   @NM00004
FMSG1    EQU   @NM00004
FWTO2    EQU   @NM00004
FERRSYN  EQU   @NM00004
FCONSOL  EQU   FSOURCE
FTERM    EQU   FSOURCE
FERRID   EQU   @NM00003
FTEXT    EQU   @NM00003
FALL     EQU   @NM00003
FLOGON   EQU   @NM00003
FNOW     EQU   @NM00003
FLIST    EQU   @NM00003
FLISTALL EQU   @NM00003
FDEL     EQU   @NM00003
FCNS     EQU   @NM00002
FMAILFL  EQU   @NM00002
FUSER    EQU   @NM00002
FBRDCST  EQU   @NM00002
FMN      EQU   @NM00002
FYESBCM  EQU   @NM00002
FLISTING EQU   FLAGS
FOVER20  EQU   FLAGS
FENDUSL  EQU   FLAGS
FUPUSD   EQU   FLAGS
FCHNMSG  EQU   FLAGS
FBADSEND EQU   FLAGS
FANYINV  EQU   FLAGS
FOPEN    EQU   FLAGS
FMSGA    EQU   MSGFLAGS
FMSG9    EQU   MSGFLAGS
FMSG5    EQU   MSGFLAGS
FMSG3    EQU   MSGFLAGS
FMSG2    EQU   MSGFLAGS
VALCNT   EQU   COMMONA+2
TPUTRC   EQU   COMMONA+1
@NM00001 EQU   COMMONA
*                                      END UNREFERENCED COMPONENTS
@RT00031 EQU   RD1BKL
@RT00034 EQU   WMSG6
@RT00045 EQU   BADIO
@RT00049 EQU   ADDBC3
@RT00052 EQU   WMSG6
@RT00054 EQU   LSTMSGBK
@RT00056 EQU   DELETEMN
@RT00058 EQU   WMSG6
@RT00063 EQU   ADDBC4
@RT00066 EQU   WMSG6
@RC00072 EQU   EXITCODE
@RT00093 EQU   BADIO
@RT00107 EQU   BADIO
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IEEVSND8
