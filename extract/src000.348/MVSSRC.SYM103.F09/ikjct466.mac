         TITLE 'IKJCT466 OUTPUT CP ENTRY                               *
                        '
IKJCT466 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJCT466  76.035'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0027
*/********************************************************************/
*/*                                                                  */
*/*                       B E G I N  C O D E                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0027
*   CPPLPTR=R1;                     /* SAVE CPPL PASSED IN REG1      */
         LR    CPPLPTR,R1                                          0027
*   ECTPTR=CPPLECT;                 /* BASE ECT ON ADDR IN CPPL      */
         L     ECTPTR,CPPLECT(,CPPLPTR)                            0028
*/********************************************************************/
*/*   SET UP FIB PARAMETER LIST                                      */
*/********************************************************************/
*                                                                  0029
*   FIBPARMS=FIBPARMS&&FIBPARMS;    /* ZERO OUT FIB PARM LIST        */
         XC    FIBPARMS(32),FIBPARMS                               0029
*   FIBMAINP=ADDR(FIBPARMS);        /* INIT PTR TO PARM LIST         */
         LA    @14,FIBPARMS                                        0030
         ST    @14,FIBMAINP                                        0030
*   FIBUSER=0;                      /* ZERO USER ID FIELD            */
         SLR   @14,@14                                             0031
         ST    @14,FIBUSER                                         0031
*   FIBCPPL=R1;                     /* SAVE CPPL ADDRESS             */
         ST    R1,FIBCPPL                                          0032
*   FIBCODE=0;                      /* INIT FIB PARM                 */
         ST    @14,FIBCODE                                         0033
*   FIBMACRO='';                    /* BLANK MACRO NAME FIELD        */
         MVI   FIBMACRO,C' '                                       0034
         MVC   FIBMACRO+1(7),FIBMACRO                              0034
*   FIBID=FIBOUTPT;                 /* TELL SVC 100 THIS IS OUTPUT 0035
*                                      CMD                           */
         MVC   FIBID(2),@CH00163                                   0035
*   FIBHIGH='1'B;                   /* END OF FIBPARM LIST INDICATER */
         OI    FIBHIGH,B'10000000'                                 0036
*/********************************************************************/
*/*               ISSUE SVC 100                                      */
*/********************************************************************/
*                                                                  0037
*   R1=ADDR(FIBMAINP);              /* ADDR OF FIBPARMS FOR SVC 100  */
         LA    R1,FIBMAINP                                         0037
*   SVC(100);                       /* SVC FOR FIB, PROF AND OPER TSO
*                                      COMMANDS....IKJEFFS0 PL/S   0038
*                                      MACRO                         */
         SVC   100                                                 0038
*   OUTRTCD=R15;                    /* SAVE SVC 100 RETURN CODE FOR
*                                      '67                           */
         STH   R15,OUTRTCD                                         0039
*   RETCODE=R15;                    /* SAVE SVC100 RC TO CK ABND, ETC*/
         ST    R15,@TF00001                                        0040
         MVC   RETCODE(3),@TF00001+1                               0040
*/********************************************************************/
*/*             CHECK SVC 100 RETURN CODE                            */
*/********************************************************************/
*                                                                  0041
*   IF RETCODE^=FIBOKRC THEN        /* SVC 100 RETURN CODE NOT ZERO  */
*                                                                  0041
         MVC   @ZT00001+1(3),RETCODE                               0041
         L     @14,@ZT00001                                        0041
         LTR   @14,@14                                             0041
         BZ    @RF00041                                            0041
*     /***************************************************************/
*     /*                                                             */
*     /* SVC 100 RETURN CODE NON ZERO: ISSUE MSG IF NEEDED, ISSUE    */
*     /* TCLEARQ AND STACK                                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0042
*     DO;                                                          0042
*       IF ABENDCOD='000'X&RETCODE^=ERRORC THEN/* NO ABEND OCCURRED
*                                      AND RETURN CODE NOT 12.     0043
*                                      THEREFORE MSG NEEDED.         */
*                                                                  0043
         MVC   @TS00001(2),ABENDCOD                                0043
         NC    @TS00001(2),@CB00256                                0043
         BNZ   @RF00043                                            0043
         CLC   RETCODE(3),@CF00133+1                               0043
         BE    @RF00043                                            0043
*         /***********************************************************/
*         /*                                                         */
*         /* ERROR MESSAGE HANDLING                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0044
*         DO;                                                      0044
*           OUTCPPL=FIBCPPL;        /* PASS CPPL TO '67              */
         MVC   OUTCPPL(4),FIBCPPL                                  0045
*           IF RETCODE=FIBNOFIB THEN/* USER DOESN'T HAVE JCL ABILTY
*                                      FOR OUTPUT (RC=80)            */
         CLC   RETCODE(3),@CF00173+1                               0046
         BNE   @RF00046                                            0046
*             OUTMSGID=119;         /* NO CMD AUTHORIZATION MSG      */
         MVI   OUTMSGID,X'77'                                      0047
*           ELSE                    /* CHECK FURTHER                 */
*             IF RETCODE=FIBBADMC THEN/* SVC100 FAILED (RC=84)       */
         B     @RC00046                                            0048
@RF00046 CLC   RETCODE(3),@CF00175+1                               0048
         BNE   @RF00048                                            0048
*               DO;                                                0049
*                 OUTMSGID=103;     /* SVC100 FAILURE MSG            */
         MVI   OUTMSGID,X'67'                                      0050
*                 OUTMACN=FIBMACRO; /* PUT FAILING MACRO NAME IN   0051
*                                      MSGTBL                        */
         MVC   OUTMACN(8),FIBMACRO                                 0051
*                 RETCODE=FIBCODE;  /* PUT SVC100 RETCODE IN MSGTBL  */
         MVC   RETCODE(3),FIBCODE+1                                0052
*               END;                                               0053
*             ELSE                  /* RC=88 OR UNKNOWN              */
*               OUTMSGID=104;       /* FIB-SVC ERROR MSG             */
         B     @RC00048                                            0054
@RF00048 MVI   OUTMSGID,X'68'                                      0054
*           OUTCMDNM=ECTPCMD;       /* COMMAND NAME FOR MSGS         */
@RC00048 DS    0H                                                  0055
@RC00046 MVC   OUTCMDNM(8),ECTPCMD(ECTPTR)                         0055
*           OUTATTN=OUTATTN&&OUTATTN;/* CLEAR ECB FOR I/O SRVRTN     */
         L     @14,OUTATTN                                         0056
         LR    @10,@14                                             0056
         XR    @10,@14                                             0056
         ST    @10,OUTATTN                                         0056
*           KEY1='0'B;              /* NOT IN KEY 1 WHEN CALLING 67  */
         NI    KEY1,B'01111111'                                    0057
*           STORADDR=ADDR(OUTCOMTB);/* SET PARMLIST FOR MSG WRITER   */
         LA    @14,OUTCOMTB                                        0058
         ST    @14,STORADDR                                        0058
*           R1=ADDR(STORADDR);      /* SET REG1 WITH PARMLIST ADDR   */
         LA    R1,STORADDR                                         0059
*           GEN(LINK EP=IKJCT467);  /* CALL MSG WRITER               */
         LINK EP=IKJCT467
*           RETCODE=ERRORC;         /* TMP EXPECTS 0 OR 12 RETURN CD */
         MVC   RETCODE(3),@CF00133+1                               0061
*         END;                      /* END OF ERR MSG HANDLING       */
*                                                                  0062
*       /*************************************************************/
*       /*                                                           */
*       /* SETUP THEN ISSUE TCLEARQ AND STACK                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0063
*       OUTATTN=0;                  /* ZERO OUT ECB                  */
@RF00043 SLR   @14,@14                                             0063
         ST    @14,OUTATTN                                         0063
*       STACKLD(1:STCKLEN)=STACKL(1:STCKLEN);/* MOVE STACK INTO    0064
*                                      DYNAMIC CORE                  */
         L     @14,STCKLEN                                         0064
         BCTR  @14,0                                               0064
         EX    @14,@SM00259                                        0064
*       IOPLPTR=ADDR(IOPLAREA);     /* SET UP IOPL                   */
         LA    @14,IOPLAREA                                        0065
         ST    @14,IOPLPTR                                         0065
*       IOPL=IOPL&&IOPL;            /* ZERO IOPL                     */
         XC    IOPL(16,@14),IOPL(@14)                              0066
*       IOPLECT=CPPLECT;            /* ECT FROM CPPL                 */
         MVC   IOPLECT(4,@14),CPPLECT(CPPLPTR)                     0067
*       IOPLUPT=CPPLUPT;            /* UPT FROM CPPL                 */
         MVC   IOPLUPT(4,@14),CPPLUPT(CPPLPTR)                     0068
*       IOPLECB=ADDR(OUTATTN);      /* ECB FOR STACK MACRO           */
         LA    @10,OUTATTN                                         0069
         ST    @10,IOPLECB(,@14)                                   0069
*       GEN(TCLEARQ INPUT);         /* DELETE ANY INPUT LINES        */
         TCLEARQ INPUT
*       R1=IOPLPTR;                 /* PARM FOR STACK                */
         L     R1,IOPLPTR                                          0071
*       GEN(STACK  DELETE=ALL,PARM=STACKLD,MF=(E,(1)));            0072
         STACK  DELETE=ALL,PARM=STACKLD,MF=(E,(1))
*     END;                                                         0073
*                                                                  0073
*/********************************************************************/
*/*            RETURN TO TMP                                         */
*/********************************************************************/
*                                                                  0074
*   RETURN CODE(RETCODE);           /* RETURN TO TMP                 */
@RF00041 MVC   @ZT00001+1(3),RETCODE                               0074
         L     @10,@ZT00001                                        0074
         L     @13,4(,@13)                                         0074
         L     @00,@SIZDATD                                        0074
         LR    @01,@11                                             0074
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0074
         L     @14,12(,@13)                                        0074
         LM    @00,@12,20(@13)                                     0074
         BR    @14                                                 0074
*   END IKJCT466                                                   0075
*                                                                  0075
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJOCMTB)                                       */
*/*%INCLUDE SYSLIB  (IKJEFFIB)                                       */
*/*%INCLUDE SYSLIB  (IKJIOPL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJEFFS0)                                       */
*                                                                  0075
*       ;                                                          0075
@DATA    DS    0H
@CH00163 DC    XL2'0003'
@SM00259 MVC   STACKLD(0),STACKL
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00001 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IKJCT466 CSECT
         DS    0F
@CF00133 DC    F'12'
@CF00173 DC    F'80'
@CF00175 DC    F'84'
@DATD    DSECT
         DS    0D
FIBMAINP DS    AL4
         ORG   FIBMAINP
FIBHIGH  DS    BL1
         ORG   FIBMAINP+4
STORADDR DS    A
RETCODE  DS    FL3
         ORG   RETCODE
ABENDCOD DS    BL2
RETURNCD EQU   RETCODE+1
         ORG   RETCODE+3
@TS00001 DS    CL2
         DS    CL3
OUTCOMTB DS    CL312
         ORG   OUTCOMTB
OUTCPPL  DS    AL4
OUTMSGID DS    CL1
OUTFLAGS DS    CL1
         ORG   OUTFLAGS
KEY1     DS    BL1
         ORG   OUTCOMTB+6
OUTRTCD  DS    FL2
OUTMACN  DS    CL8
OUTCMDNM DS    CL8
OUTATTN  DS    AL4
         ORG   OUTATTN
@NM00001 DS    BL1
POSTED   EQU   OUTATTN+0
         ORG   OUTCOMTB+28
OUTEXTRA DS    CL4
OUTEMPMN DS    CL8
OUTSOBH  DS    AL4
OUTSOBSO DS    AL4
OUTRPL   DS    AL4
OUTRPLL  DS    FL4
OUTACB   DS    AL4
OUTACBL  DS    FL4
OUTEMPSB DS    AL4
OUTHOLD  DS    CL8
OUTBKNEW DS    CL8
OUTBKAPX DS    CL8
OUTBKCNT DS    FL4
STRCTNUM DS    FL4
O73PARM  DS    CL20
         ORG   O73PARM+0
OUTDCB   DS    AL4
PRINTDDN DS    CL8
OUTBUFA  DS    AL4
@NM00002 DS    FL4
         ORG   @NM00002+0
@NM00003 DS    CL1
@NM00004 DS    BL1
DSALLOC  EQU   @NM00002+1
DSOPEN   EQU   @NM00002+1
OUTRECV  EQU   @NM00002+1
NEEDFREE EQU   @NM00002+1
NEWDS    EQU   @NM00002+1
NOMEMNAM EQU   @NM00002+1
OUTRECUN EQU   @NM00002+1
OUTBUFL  DS    FL2
         ORG   OUTCOMTB+140
OUTRECA  DS    AL4
OUTRECL  DS    FL2
OUTKEYWD DS    CL2
         ORG   OUTKEYWD
PAUSE    DS    BL1
HOLD     EQU   OUTKEYWD+0
HERE     EQU   OUTKEYWD+0
BEGIN    EQU   OUTKEYWD+0
NEXT     EQU   OUTKEYWD+0
DELETE   EQU   OUTKEYWD+0
PRINT    EQU   OUTKEYWD+0
NEWCLASS EQU   OUTKEYWD+0
KEEP     DS    BL1
DEST     EQU   OUTKEYWD+1
SUBCONT  EQU   OUTKEYWD+1
SUBHERE  EQU   OUTKEYWD+1
SUBBEGN  EQU   OUTKEYWD+1
SUBNEXT  EQU   OUTKEYWD+1
         ORG   OUTCOMTB+148
OUTSW    DS    BL2
         ORG   OUTSW
SUBSYS   DS    BL1
SUBCMODE EQU   OUTSW+0
UNALCALL EQU   OUTSW+0
ENDSW    EQU   OUTSW+0
ERROR    EQU   OUTSW+0
ENDKEEP  EQU   OUTSW+0
NOWORK   EQU   OUTSW+0
HASPABND EQU   OUTSW+0
SYNADERR DS    BL1
OPENED   EQU   OUTSW+1
NONTERM  EQU   OUTSW+1
WORKDONE EQU   OUTSW+1
ENDLIST  EQU   OUTSW+1
         ORG   OUTCOMTB+150
OUTIDSSW DS    BL1
         ORG   OUTIDSSW
POINT    DS    BL1
@NM00005 EQU   OUTIDSSW+0
@NM00006 EQU   OUTIDSSW+0
EODSW    EQU   OUTIDSSW+0
TERM     EQU   OUTIDSSW+0
ALLOC    EQU   OUTIDSSW+0
INTRPMSG EQU   OUTIDSSW+0
@NM00007 EQU   OUTIDSSW+0
         ORG   OUTCOMTB+152
OUTDARB  DS    AL4
OUTDAIR  DS    AL4
OUTPDL   DS    AL4
OUTXMSG  DS    AL4
         ORG   OUTXMSG
OUTSYNMS DS    AL4
         ORG   OUTCOMTB+168
OUTXRPLY DS    AL4
OUTTCBH  DS    AL4
OHELPECB DS    AL4
OUTSBPDL DS    AL4
OUTSBBUF DS    AL4
OUTSTAE  DS    2A
OUTWORK  DS    12F
CLASBUFF DS    CL8
OSYSODDN DS    CL8
OUTPLIST DS    CL16
         ORG   OUTPLIST
OUTCPDE1 DS    AL4
OPRDSPDE DS    AL4
ONEWCPDE DS    AL4
ODESTPDE DS    AL4
         ORG   OUTCOMTB+276
OUTJBPDE DS    AL4
OUTCLPDE DS    AL4
OSVDSPDE DS    AL4
EWAPTR   DS    AL4
IOPLPTR  DS    AL4
IOPLAREA DS    CL16
         ORG   OUTCOMTB+312
FIBPARMS DS    CL32
         ORG   FIBPARMS
FIBCPPL  DS    AL4
FIBUSER  DS    AL4
FIBCODE  DS    AL4
FIBMACRO DS    CL8
FIBID    DS    FL2
FIBLEN   DS    FL2
@NM00008 DS    AL4
@NM00009 DS    AL4
         ORG   FIBPARMS+32
IKJCT466 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CB00256 DC    B'1111111111110000'
PATCH66  DS    CL50
         ORG   PATCH66
PTCHINIT DC    10CL5'ZAP66'
         ORG   PATCH66+50
@DATD    DSECT
*                                   LIST FORM OF STACK MACRO-DYNAMIC
STACKLD  STACK  DATASET=*,MF=L
         DS     0F
IKJCT466 CSECT
*                                   LIST FORM OF STACK MACRO-LOCAL
STACKL   STACK  DATASET=*,MF=L
STKLEN   EQU    *
         DS     0F
STCKLEN  DC     A(STKLEN-STACKL)    LENGTH OF STACK MACRO
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJCT466 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ECTPTR   EQU   @03
CPPLPTR  EQU   @02
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R15      EQU   @15
IOPL     EQU   0
IOPLUPT  EQU   IOPL
IOPLECT  EQU   IOPL+4
IOPLECB  EQU   IOPL+8
CPPL     EQU   0
CPPLUPT  EQU   CPPL+4
CPPLECT  EQU   CPPL+12
ECT      EQU   0
ECTPCMD  EQU   ECT+12
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
DUMMY    EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00016 EQU   ECT+52
@NM00015 EQU   ECT+48
@NM00014 EQU   ECT+44
@NM00013 EQU   ECTSWS2+1
@NM00012 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
@NM00011 EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00010 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
CPPLPSCB EQU   CPPL+8
CPPLCBUF EQU   CPPL
IOPLIOPB EQU   IOPL+12
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IKJCT466,(C'PLS1345',0701,76035)
