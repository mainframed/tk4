IKJEES75 CSECT                 MODULE FOR I/O FOR LISTBC
         TITLE    'IKJEES75 - LISTBC I/O MODULE'
***********************************************************************
*                                                                     *
*   MODULE-NAME= IKJEES75                                             *
*                                                                     *
*   DESCRIPTIVE-NAME= LISTBC I/O MODULE                               *
*                                                                     *
*   COPYRIGHT= NONE                                                   *
*                                                                     *
*   STATUS= OS/VS2, REL.2, LEVEL=0                                    *
*                                                                     *
*   FUNCTION= THIS ROUTINE PERFORMS BDAM I/O, ENQ/DEQ, AND PUTLINE    *
*     SERVICES FOR THE LISTBC COMMAND PROCESSOR.                      *
*                                                                     *
*     OPERATION= AN I/O PARM LIST WITH FUNCTION REQUEST BITS          *
*       RECEIVED AS INPUT TO IKJEES75 DETERMINES THE PROCESSING       *
*       PERFORMED BY THIS ROUTINE. THE FOLLOWING FUNCTIONS MAY BE     *
*       REQUESTED AND ARE SATISFIED IN THE ORDER LISTED:              *
*       - LOAD PUTLINE MODULES                                        *
*       - OPEN SYS1.BRODCAST (BROADCAST DATA SET) FOR BDAM I/O        *
*       - SHARED ENQ 'SYSIKJBC':'000000'X                             *
*       - DEQ 'SYSIKJBC':'000000'X                                    *
*       - EXCLUSIVE ENQ 'SYSIKJBC':RBA (RELATIVE BLOCK ADDRESS)       *
*       - DEQ 'SYSIKJBC':RBA                                          *
*       - READ MESSAGE/DIRECTORY RECORD BY RBA, DEVICE ADDR FDBK      *
*       - READ RECORD1                                                *
*       - WRITE MESSAGE/DIRECTORY RECORD BY RBA                       *
*       - WRITE (DELETE) MESSAGE RECORD BY RBA                        *
*       - PUTLINE ERROR/BROADCAST MESSAGE                             *
*       - CLOSE SYS1.BRODCAST (IF OPEN) AND RELEASE DCB/MACRO LISTS   *
*       - DELETE PUTLINE MODULES                                      *
*       ONLY ONE READ/WRITE OPERATION WILL BE HANDLED PER ENTRY.      *
*       ALL FUNCTION REQUEST BITS ARE CLEARED BEFORE CONTROL IS       *
*       RETURNED TO THE CALLER.                                       *
*       A DYNAMIC WORKAREA FOR A BDAM DCB, MACRO LISTS, ETC. IS       *
*       OBTAINED BY IKJEES75 ON FIRST ENTRY. A PTR TO THIS AREA       *
*       (TO THE DCB) IS SAVED IN THE I/O PARM LIST FOR USE IN         *
*       SUBSEQUENT INVOKATIONS VIA THE SAME LIST.  THIS AREA IS       *
*       NOT RELEASED UNTIL SPECIFICALLY REQUESTED BY THE CALLER.      *
*                                                                     *
*   NOTES=                                                            *
*                                                                     *
*     DEPENDENCIES=                                                   *
*                                                                     *
*       CHARACTER-CODE-DEPENDENCIES= THE OPERATION OF THIS MODULE     *
*         DEPENDS UPON AN INTERNAL REPRESENTATION OF THE EXTERNAL     *
*         CHARACTER SET WHICH IS EQUIVALENT TO THE ONE USED AT        *
*         ASSEMBLY TIME. THE DEPENDENCY CODE IS C.                    *
*                                                                     *
*     RESTRICTIONS= NONE                                              *
*                                                                     *
*     REGISTER-CONVENTIONS= SEE PROGRAM LABEL 'REGS'.                 *
*                                                                     *
*     PATCH-LABEL= SPARE                                              *
*                                                                     *
*   MODULE-TYPE= PROCEDURE                                            *
*                                                                     *
*     PROCESSOR= ASM                                                  *
*                                                                     *
*     MODULE-SIZE= 1602 BYTES                                         *
*                                                                     *
*     ATTRIBUTES= REENTERABLE                                         *
*                                                                     *
*   ENTRY-POINT= IKJEES75                                             *
*                                                                     *
*     PURPOSE= PERFORM ONE OR MORE FUNCTIONS DESCRIBED IN 'OPERATION' *
*                                                                     *
*     LINKAGE= CALLED BY IKJEES70                                     *
*                                                                     *
*     INPUT=                                                          *
*       REGISTER 1 CONTAINS THE ADDRESS OF AN I/O PARM LIST.          *
*         (SEE PROGRAM DSECT LABEL 'BCIOPARM'.)                       *
*       REGISTER 4 CONTAINS THE ADDRESS OF A READ-WRITE BUFFER        *
*         (FOR SPECIAL RECORD1 OR FOR DIRECTORY RECORD).              *
*       REGISTER 5 CONTAINS THE ADDRESS OF A READ-WRITE BUFFER        *
*         (FOR MESSAGE RECORD) PREFIXED BY A DUMMY PUTLINE            *
*         SEGMENT HEADER.                                             *
*                                                                     *
*   EXIT-NORMAL=                                                      *
*                                                                     *
*     CONDITION= RETURN TO ADDRESS PASSED IN REGISTER 14 UPON         *
*       SUCCESSFUL COMPLETION OF PROCESSING.                          *
*                                                                     *
*     OUTPUT= REQUESTED FUNCTION HAS BEEN PERFORMED. SEE 'OPERATION'. *
*                                                                     *
*     RETURN-CODES= 0                                                 *
*                                                                     *
*   EXIT-ERROR=                                                       *
*                                                                     *
*     CONDITION= RETURN TO ADDRESS PASSED IN REGISTER 14 UPON         *
*       UNSUCCESSFUL TERMINATION OF PROCESSING.                       *
*                                                                     *
*     OUTPUT= ERROR MESSAGE IDENTIFYING FAILURE IS ISSUED TO THE      *
*       TERMINAL ASSOCIATED WITH THE REQUEST.                         *
*                                                                     *
*     RETURN-CODES= 4                                                 *
*                                                                     *
*   EXTERNAL-REFERENCES=                                              *
*       LSTBMSG -- LABEL IN IKJEES74 (LISTBC CP MESSAGE MODULE)       *
*                                                                     *
*     ROUTINES=                                                       *
*       IKJPUTL IS LOADED, CALLED TO ISSUE MESSAGES TO THE            *
*         TERMINAL, AND DELETED AS DIRECTED BY THE CALLER.            *
*                                                                     *
*     DATA-AREAS=                             MACRO-DSECTS=           *
*       SYS1.BRODCAST DATA SET                     --                 *
*       DCB                                   X    DCBD               *
*       PUTLINE PARAMETER BLOCK               X    --                 *
*       IOPL                                       --                 *
*       IKJEES74 (PUTLINE PARAMETER BLOCKS)        --                 *
*       MACRO LIST FORMS, DECB                X    --                 *
*       BCIOPARM                                   --                 *
*       READ/WRITE BUFFERS                         --                 *
*                                                                     *
*     CONTROL-BLOCKS= NONE                                            *
*                                                                     *
*   TABLES= TRANSLATE TABLE FOR PRINTABLE HEX CONVERSION              *
*                                                                     *
*   MACROS=                                   SERVICE-ROUTINES=       *
*     MODID                                        --                 *
*     DCBD                                         --                 *
*     OPEN                                         SVC19              *
*     ENQ                                          SVC56              *
*     DEQ                                          SVC48              *
*     READ                                         READ               *
*     WRITE                                        WRITE              *
*     CHECK                                        CHECK              *
*     CLOSE                                        SVC20              *
*     PUTLINE                                      IKJPUTL            *
*     GETMAIN                                      SVC10              *
*     FREEMAIN                                     SVC10              *
*     LOAD                                         SVC8               *
*     DELETE                                       SVC9               *
*     RETURN                                       --                 *
*                                                                     *
*     SERIALIZATION= NONE                                             *
*                                                                     *
*   CHANGE-ACTIVITY= S/D SUPPORT CODE IS Y02676.                      *
*                                                                     *
*   MESSAGES= (TEXT RESIDENT IN IKJEES74)                             *
*     IKJ56905I -- BROADCAST DATA SET NOT USABLE+                     *
*                  I/O SYNAD ERROR                                    *
*     IKJ56458 --  BROADCAST DATA SET NOT USABLE,                     *
*                  I/O SYNAD ERROR                                    *
*                  CANNOT OPEN DATA SET                               *
*     IKJ56459 --  BROADCAST DATA SET NOT USABLE,                     *
*                  CANNOT OPEN DATA SET                               *
*     IKJ56959I -- COMMAND SYSTEM ERROR+                              *
*                  PUTLINE ERROR CODE --                              *
*                                                                     *
*   ABEND-CODES= NONE                                                 *
*                                                                     *
***********************************************************************
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        MAPPING DSECT FOR PARAMETERS TO COMMUNICATE FUNCTIONS TO BE  *
*        DONE- BETWEEN THE LISTBC MAIN MODULE AND THE I/O MODULE      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
BCIOPARM DSECT                    DSECT FOR PARMS TO I/O MODULE
*                                                                     *
BCIOF1   DS    1C                 FLAGS FOR OPERATIONS
BCOPEN   EQU   X'80'              PERFORM OPEN
BCENQ    EQU   X'40'              PERFORM ENQUEUE
BCRD     EQU   X'20'              READ SPECIFIED RECORD
BCRD1    EQU   X'10'              READ FIRST RECORD
BCUNUSED EQU   X'08'              ISSUE CHECK
BCDEQ    EQU   X'04'              PERFORM DEQUEUE
BCCLOSE  EQU   X'02'              INDICATES CLOSE
BCPUTL   EQU   X'01'              PERFORM PUTLINE
*                                                                     *
BCIOF2   DS    1C                 FLAGS FOR OPERATIONS
BCDIRR   EQU   X'80'              FLAG FOR DIRECTORY BUFFER      Y02676
BCENQX   EQU   X'40'              ENQUEUE FOR EXCLUSIVE USE      Y02676
BCLOAD   EQU   X'20'              LOAD PUTLINE MODULES
BCDELETE EQU   X'10'              DELETE PUTLINE MODULES
BCWRITE  EQU   X'08'              WRITE RECORD
BCDEQX   EQU   X'04'              DEQ FROM EXCLUSIVE ENQ
*                                                                     *
BCIOF3   DS    1C                 FLAGS FOR MESSAGE NUMBERS
BCERFLG  EQU   X'80'              INDICATES ERROR CONDITION
BC1LVL   EQU   X'40'              INDICATES ONE-LEVEL MESSAGE
BCTXTIN  EQU   X'20'              INDICATES TEXT INSERTION REQUIRED
BCHXCV   EQU   X'10'              INDICATES THAT RETURN CODE MUST BE
*                                 CONVERTED TO PRINTABLE HEX
*                                                                     *
BCPERMF  DS    1C                 FLAGS SET FOR LIFE OF LISTBC
BCDCB    EQU   X'80'              INDICATE DCB IS NOT SET UP
BCMSGSW  EQU   X'40'              MESSAGES FOUND
BCMAIL   EQU   X'20'              MAIL KEYWORD ON COMMAND
BCNOTICE EQU   X'10'              NOTICE KEYWORD ON COMMAND
BCLOGON  EQU   X'08'              CONTROL COMES FROM LOGON ROUTINE
BCERROR  EQU   X'04'              FLAG FOR I/O ERROR
BCPUTER  EQU   X'01'              FLAG TO INDICATE ONE ATTEMPT
*                                 HAS BEEN MADE TO PUTLINE A          *
*                                 MESSAGE TO A TERMINAL               *
*                                                                     *
BCPUTLP  DS    F                  PTR FOR PUTLINE
*                                 (IOPL FORMATTED BY CALLER)
*                                                                     *
BCDCBP   DS    F                  PTR TO DCB
BCDDNM   DS    CL8                BROADCAST DS DDNAME            Y02993
*                                                                     *
BCWRRBA  DS    F                  RBA FOR WRITE INSTRUCTION
*                                                                     *
BCEQXRBA DS    1F                 RBA FOR EXCLUSIVE ENQUEUE
*                                                                     *
BCIORBA  DS    2F                 RBA USED FOR READ AND FEEDBACK
*                                                                     *
BCERCDE  DS    H                  MESSAGE CODE TO BE USED FOR INDEX-
*                                 ING INTO THE MESSAGE MODULE
BCRTCDE  DS    H                  ERROR RETURN CODE FROM A SERVICE
*                                 ROUTINE WHICH WILL BE INSERTED INTO
*                                 AN APPROPRIATE ERROR MSG
         SPACE 3
***********************************************************************
*    STRUCTURE MAPPING INPUT/OUTPUT BUFFER FOR MESSAGES FROM          *
*                          SYS1.BRODCAST DATA SET                     *
***********************************************************************
BCMSGS   DSECT                                                   Y02993
BCSEGLTH DS    H                  LENGTH OF MESSAGE SEGMENT      Y02993
BCSEGOFF DS    H                  OFFSET TO MESSAGE SEGMENT      Y02993
BCBUF    DS    0CL129             READ BUFFER FOR MESSAGE RECORD Y02993
BCMSGL   DS    CL1                LENGTH OF MESSAGE TEXT         Y02993
BCTXT    DS    CL125              MESSAGE TEXT                   Y02993
BCCHAIN  DS    CL3                PTR TO NEXT MESSAGE            Y02993
BUFSIZE  EQU   *-BCBUF            READ BUFFER LENGTH             Y02993
         EJECT
***********************************************************************
*        MAPPING FOR MACRO PARMLISTS AND DYNAMIC WORKAREA             *
***********************************************************************
BCLISTS  DSECT
*        OPEN
BCOPL    OPEN  (,(OUTPUT)),MF=L   OPEN SYS1.BRODCAST
         SPACE 3
*        ENQUEUE SHARE
BCNQL    ENQ   (,,S,,SYSTEM),RET=HAVE,MF=L ENQUEUE SHARING       Y02993
         SPACE 3
*        DEQUEUE
BCDQL    DEQ   (,,,SYSTEM),RET=HAVE,MF=L DEQUEUE                 Y02993
         SPACE 3
*        ENQUEUE EXCLUSIVE
BCNQLX   ENQ   (BCQNM,,E,3,SYSTEM),MF=L
         SPACE 3
*        DEQUEUE FROM EXCLUSIVE ENQUEUE
BCDQLX   DEQ   (BCQNM,,3,SYSTEM),RET=HAVE,MF=L
         SPACE 3
*        READ
         READ  BCDECB1,DIF,,,'S',0,,MF=L
         SPACE 3
*        READ SPECIAL FIRST RECORD
         READ  BCDECB2,DI,,,'S',0,BCFRREC,MF=L
         SPACE 3
*        WRITE
         WRITE BCDECB3,DI,,,'S',0,,MF=L
         SPACE 3
*        WRITE
         WRITE BCDECB4,DI,,,'S',BCKEY,,MF=L
         SPACE 3
*        CLOSE
BCCLL    CLOSE 0,MF=L             CLOSE SYS1.BRODCAST
         SPACE 3
*        PUTLINE- ONE LEVEL
BCPUTL1L PUTLINE ,MF=L
         SPACE 3
*        PUTLINE- TWO LEVELS
BCPUTL2L PUTLINE OUTPUT=(0,MULTLVL),MF=L
         SPACE 3
*        PUTLINE- DATA                                                *
BCPUTLDL PUTLINE ,MF=L
*                                                                     *
         SPACE 3
***********************************************************************
*                     PUTLINE WORKAREA
***********************************************************************
BCDYNA   DS    0D                 ALIGN TO DOUBLE WORD           Y02676
BCDEC    DS    D                  CONTAINS PACK DECIMAL RESULT
*                                 OR ZONED HEX                   Y02676
UNPCK    DS    D                  CONTAINS ZONED DECIMAL RESULT
*                                 OR PRINTABLE HEX               Y02676
BCPUT    DS    1F                 PTR TO PUTLINE MODULES FROM LOAD
***********************************************************************
*        PARM BLOCKS USED BY PUTLINE FOR TWO LEVEL MESSAGES           *
*                     REQUIRING SEGMENT INSERTION                     *
***********************************************************************
MSG1B    DS    0H                 FIRST OF TWO LEVELS
MSG2PTR  DS    F                  POINTER TO SECOND LEVEL MSG
*                                 OUTPUT LINE DESCRIPTOR BLOCK (OLD)
MSG1SEG  DS    F                  NUMBER OF SEGMENTS IN LEVEL ONE
SEG1A    DS    F                  POINTER TO FIRST SEGMENT
SEG1B    DS    F                  POINTER TO SECOND SEGMENT
MSG1BL   EQU   *-MSG1B            LENGTH OF BLOCK                Y02676
*                                                                     *
MSG2B    DS    0H                 SECOND OF TWO LEVELS           Y02676
MSG3PTR  DS    F                  PTR TO THIRD LEVEL MSG (ZEROES)
MSG2SEG  DS    F                  NUMBER OF SEGMENTS IN SECOND LEVEL
SEG2A    DS    F                  POINTER TO FIRST SEGMENT
SEG2B    DS    F                  POINTER TO SECOND SEGMENT
SEG2C    DS    F                  POINTER TO THIRD SEGMENT
MSG2BL   EQU   *-MSG2B            LENGTH OF SECOND BLOCK         Y02676
*                                                                     *
MSG3B    DS    0H                 STRUCTURE FOR MESSAGE SEGMENT
SEGLTH   DS    H                  LENGTH OF MESSAGE SEGMENT
SEGOFSET DS    H                  OFFSET TO MESSAGE SEGMENT
SEGHDRL  EQU   *-MSG3B            LENGTH OF SEGMENT HEADER       Y02676
SEGSRT   DS    CL4                INSERTED TEXT                  Y02676
BCDYNEND DS    0C                 END OF DYNAMIC WORKAREA        Y02676
BCFIXLL  EQU   BCDYNEND-BCDYNA    LENGTH OF DYNAMIC WORKAREA     Y02676
         EJECT
BCDCBD   DCBD  DSORG=DA,DEVD=DA
DCBEND   DS    0D                      END OF DCB DSECT
DCBLENG  EQU   DCBEND-IHADCB      LENGTH OF DCB                  Y02993
         EJECT
IKJEES75 CSECT                    MODULE TO DO I/O FOR LISTBC
REGS     DS    0H                 LABEL FOR REGISTER EQUATES     Y02993
***********************************************************************
*                           REGISTER DEFINITION
***********************************************************************
REG0     EQU   0                  REGISTER FOR SVC RETURN DATA   Y02993
PARMREG  EQU   1                  REGISTER FOR PARAMETERS
REG2     EQU   2                  BASE FOR I/O PARMLIST          Y02993
REG3     EQU   3                  REGISTER FOR I/O RBA
REG4     EQU   4                  BASE FOR DIRECTORY RECORD      Y02993
REG5     EQU   5                  BASE FOR MESSAGE RECORD,       Y02993
*                                 SEGMENT, OR PARM BLOCK
REG6     EQU   6                                                 Y02993
REG7     EQU   7
REG8     EQU   8                  BASE FOR DYNAMIC WORKAREA      Y02993
REG9     EQU   9
REGA     EQU   10                 REGISTER FOR DCB POINTER
SAVE     EQU   13                 REGISTER FOR SAVE AREAS
REG15    EQU   15                 REG FOR RETURN CODES
***********************************************************************
*                      MISCELLANEOUS EQUATES
***********************************************************************
N0       EQU   0
N1       EQU   1                                                 Y02993
N2       EQU   2                                                 Y02993
N3       EQU   3                                                 Y02993
N4       EQU   4
BCIOERR  EQU   8                  I/O ERROR RETURN CODE
N8       EQU   8                                                 Y02993
         EJECT
         STM   14,12,12(13)       SAVE CALLERS REGISTERS
         BALR  12,0               ESTABLISH ADDRESSABILITY
         USING *,12
         MODID BRANCH=YES                                       Y01886
         USING IHADCB,REGA        BASE FOR DCB
         USING BCLISTS,REG8       BASE FOR MACRO LIST FORMS      Y02993
         USING BCIOPARM,REG2      BASE FOR PARAMETER LIST
         LR    REG2,PARMREG       SET UP BASE FOR PARM LIST
         SPACE 3
***********************************************************************
*        SET UP FOR REGISTER SAVE AREA                                *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=72,SP=1     GETMAIN FOR SAVE AREA FOR IKJEES75
         ST    SAVE,4(PARMREG)    SAVE PTR TO CALLERS SAVE AREA
         ST    PARMREG,8(SAVE)    CHAIN IKJEES75 SAVE AREA TO CALLERS
         LR    SAVE,PARMREG       SET UP PTR TO IKJEES75 SAVE AREA
         L     REGA,BCDCBP        ADDRESSING FOR DCB
         LA    REG8,DCBLENG(REGA)      ADDRESSING FOR MACRO PARM LISTS
         SPACE 3
***********************************************************************
*                                                                     *
*        SET UP DCB IN DYNAMIC CORE IF THIS IS THE FIRST USE OF THE   *
*              I/O MODULE                                             *
*                                                                     *
***********************************************************************
         TM    BCPERMF,BCDCB      SET UP DCB REQUESTED
         BO    BCCLOAD             NO, BRANCH TO CHECK FOR LOAD
         GETMAIN R,LV=WKARLEN,SP=1   GET CORE FOR DCB AND MACRO LISTS
         MVC   0(DCBLENG,PARMREG),BCCDCB  MOVE DCB TO GOTTEN CORE
         LR    REGA,PARMREG       SET BASE FOR DCB DSECT
         OI    BCPERMF,BCDCB      TURN ON FLAG TO INDICATE DCB HAS
*                                 BEEN SET UP
         ST    REGA,BCDCBP        SAVE DCB PTR
         SPACE 3
***********************************************************************
*                                                                     *
*        SET UP MACRO PARM LISTS IN DYNAMIC CORE IF THIS IS           *
*        THE FIRST USE OF THE I/O MODULE                              *
*                                                                     *
***********************************************************************
         MVC   DCBLENG(BCLENMV,PARMREG),BCBEGL  MACRO LISTS
         LA    REG8,DCBLENG(PARMREG)   BASE FOR PARM LISTS
         XC    BCPUT,BCPUT        INDICATE PUTLINE MODULE NOT    Y02676
*                                 LOADED
*                                                                     *
*        LOAD THE MODULES OF THE PUTLINE SERVICE ROUTINE              *
*                                                                     *
BCCLOAD  DS    0H                 CODE TO LOAD PUTLINE MODULES
         TM    BCIOF2,BCLOAD      IS LOAD OF PUTLINE MODULES REQUESTED?
         BZ    BCCONT             NO, BRANCH TO CHECK FOR OPEN
         NC    BCPUT,BCPUT        PUTLINE MODULES AVAILABLE      Y02676
         BNZ   BCCONT             YES, NO NEED TO LOAD AGAIN     Y02676
         LOAD  EP=IKJPUTL         YES, LOAD PUTLINE MODULES
         ST    REG0,BCPUT         SAVE PTR TO PUTLINE MODULES
         SPACE 3
BCCONT   TM    BCIOF1,BCOPEN      IS OPEN REQUESTED?
         BZ    BCCENQ             NO, BRANCH TO CHECK FOR ENQUE
***********************************************************************
*        OPEN SYS1.BRODCAST                                           *
***********************************************************************
         TM    BCPERMF,BCLOGON    ENTRY FROM LOGON               Y02676
         BO    BCCOPEN            YES, USE DEFAULT DDNAME        Y02676
         MVC   DCBDDNAM,BCDDNM    COPY DDNAME FROM IKJDAIR       Y02676
BCCOPEN  DS    0H                 CODE TO OPEN DATA SET
         LA    PARMREG,BCOPL      PTR TO GENERATED PARM LIST
         OPEN  ((REGA)),MF=(E,(1))     OPEN SYS1.BRODCAST
         TM    DCBOFLGS,DCBOFOPN  WAS OPEN SUCCESSFUL            Y02676
         BZ    BCERR1             NO, BRANCH TO PUT OUT ERROR MSG
         SPACE 3
*                                                                     *
*        ENQUEUE WITH SHARE FOR THE BROADCAST DATA SET                *
*                                                                     *
BCCENQ   DS    0H                 CODE TO ENQUEUE ON DATA SET
         TM    BCIOF1,BCENQ       IS ENQUEUE REQUESTED?
         BZ    BCCDEQ             NO, BRANCH TO CHECK FOR DEQUE
         LA    PARMREG,BCNQL      PTR TO GENERATED PARM LIST
         ENQ   ,MF=(E,(1))        ENQUEUE SHARING ON SYS1.BRODCAST
         SPACE 3
*                                                                     *
*        DEQUEUE FROM THE BROADCAST DATA SET                          *
*                                                                     *
BCCDEQ   DS    0H                 CODE TO DEQUEUE FROM BROADCAST D S
         TM    BCIOF1,BCDEQ       IS DEQUEUE REQUESTED?
         BZ    BCCENQX            NO, BRANCH TO CHECK FOR EXCLUSIVE
*                                 ENQUE
         LA    PARMREG,BCDQL      PTR TO GENERATED PARM LIST
         DEQ   ,MF=(E,(1))        DEQUEUE FROM SYS1.BRODCAST
         SPACE 3
*                                                                     *
*        ENQUEUE EXCLUSIVELY BY RBA TO WRITE BROADCAST RECORD         *
*                                                                     *
BCCENQX  DS   0H                  CODE TO ENQUEUE EXCLUSIVELY
         TM   BCIOF2,BCENQX       IS ENQUEUE EXCLUSIVE REQUESTED?
         BZ    BCCDEQX            NO, BRANCH TO CHECK FOR EXCLUSIVE
*                                 DEQUEUE
         LA    REG3,BCEQXRBA      RBA FOR ENQUEUE
         LA    PARMREG,BCNQLX     PTR TO ENQ PARM LIST
         ENQ   (,(REG3)),MF=(E,(1))  ENQUEUE EXCLUSIVE
         SPACE 3
*        DEQUEUE FROM EXCLUSIVE ENQUEUE BY RELATIVE BLOCK ADDRESS     *
BCCDEQX  DS    0H
         TM    BCIOF2,BCDEQX      EXCLUSIVE DEQUEUE REQUESTED?
         BZ    BCCREAD            NO, BRANCH TO CHECK FOR READ
         LA    REG3,BCEQXRBA      PTR TO RBA
         LA    PARMREG,BCDQLX     PTR TO DEQ PARM LIST
         DEQ   (,(REG3)),MF=(E,(1))
         SPACE 3
         SPACE 3
***********************************************************************
*                                                                     *
*        READ A MESSAGE OR DIRECTORY RECORD FROM BROADCAST DATA SET   *
*        BY RBA (WITH RELATIVE TRACK ADDRESS FEEDBACK)                *
*        BUFFER ADDRESS PASSED FROM CALLER IN REG4 (DIRECTORY RECORD) *
*        OR REG5 (MESSAGE RECORD).                                    *
***********************************************************************
BCCREAD  DS    0H                 CODE TO READ BY REL BLOCK ADDR
         TM    BCIOF1,BCRD        IS READ REQUESTED
         BZ    BCREAD1            BRANCH IF NOT
         TM    BCIOF2,BCDIRR      USE DIRECTORY BUFFER           Y02676
         BZ    BCREAD             BRANCH IF NOT
         LR    REG5,REG4          PTR TO BUFFER IN R5 FOR READ
BCREAD   LA    REG3,BCIORBA       RBA FOR READ
         READ  BCDECB1,DIF,(REGA),(REG5),,,(REG3),MF=(E,(1))
*                                                                     *
*        CHECK TO BE SURE I/O HAS COMPLETED SATISFACTORILY            *
*                                                                     *
BCCCHK1  DS    0H                 CODE TO ISSUE CHECK
         CHECK BCDECB1            CHECK FOR COMPLETE READ
         B     BCCCLOSE           CHECK NEXT OPTION              Y02676
***********************************************************************
*        READ RECORD1 (RBA=0) OF THE BROADCAST DATA SET               *
*        BUFFER ADDRESS PASSED FROM CALLER IN REG 4.                  *
***********************************************************************
BCREAD1  DS    0H                 CODE FOR READING FIRST RECORD
         TM    BCIOF1,BCRD1       IS READ OF FIRST RECORD REQUESTED
         BZ    BCCWRITE           BRANCH IF NOT
         READ  BCDECB2,DI,(REGA),(REG4),,,,MF=(E,(1)) READ FIRST REC
***********************************************************************
*        CHECK TO BE SURE I/O HAS COMPLETED SATISFACTORILY            *
***********************************************************************
BCCCHK2  DS    0H                 CODE TO ISSUE CHECK
         CHECK BCDECB2            CHECK FOR COMPLETE READ
         B     BCCCLOSE           GO CHECK FOR CLOSE
         SPACE 3
***********************************************************************
*        WRITE BY RBA UPDATED RECORDS TO SYS1.BRODCAST                *
***********************************************************************
BCCWRITE DS    0H                 CODE TO DO WRITE
         TM    BCIOF2,BCWRITE     IS WRITE REQUESTED
         BZ    BCCCLOSE           BRANCH IF NOT
         TM    BCIOF2,BCDIRR      USE DIRECTORY BUFFER           Y02676
         BZ    BCWRIT             BRANCH IF NOT
         LR    REG5,REG4          TRANSFER BUFFER POINTER FOR READ
         LA    REG3,BCWRRBA       RBA FOR WRITE
         WRITE BCDECB3,DI,(REGA),(REG5),,,(REG3),MF=(E,(1))
***********************************************************************
*        CHECK TO BE SURE I/O HAS COMPLETED SATISFACTORILY            *
***********************************************************************
BCCCHK   DS    0H                 CODE TO ISSUE CHECK
         CHECK BCDECB3            CHECK FOR COMPLETE WRITE
         B     BCCCLOSE           GO CHECK FOR CLOSE
         SPACE 3
***********************************************************************
*        REWRITE MESSAGE RECORD TO DATA SET WITH KEY 'FF'             *
*        AND FIRST DATA BYTE CONTAINING RELATIVE TRACK ADDRESS        *
*        (ALLOWS REUSE BY SIMULATING BDAM FREESPACE)                  *
***********************************************************************
BCWRIT   LA    REG3,BCWRRBA       RBA FOR WRITE
         MVC   0(1,REG5),BCIORBA+7     MOVE REL POSITION ON TRACK
         WRITE BCDECB4,DI,(REGA),(REG5),,,(REG3),MF=(E,(1))
***********************************************************************
*        CHECK TO BE SURE I/O HAS COMPLETED SATISFACTORILY            *
***********************************************************************
BCCCHK3  DS    0H                 CODE TO ISSUE CHECK
         CHECK BCDECB4            CHECK FOR COMPLETE WRITE
         SPACE 3
***********************************************************************
*        CLOSE SYS1.BRODCAST                                          *
***********************************************************************
BCCCLOSE DS    0H                 CODE TO ISSUE CLOSE
         TM    BCIOF1,BCCLOSE     IS CLOSE REQUESTED
         BZ    BCPUTLN            BRANCH IF NOT
         TM    DCBOFLGS,DCBOFOPN  DCB OPEN                       Y02993
         BNO   FREEDCB            NO, NO NEED TO CLOSE           Y02993
         LA    PARMREG,BCCLL      PTR TO GENERATED PARM LIST
         CLOSE ((REGA)),MF=(E,(1))      CLOSE DATA SET
         SPACE 3
***********************************************************************
*         THE DYNAMIC WORKAREA CONTAINING MACRO LISTS AND             *
*        THE DCB FOR SYS1.BRODCAST WILL BE RELEASED AUTOMATICALLY     *
*             AFTER THAT DATA SET IS CLOSED                           *
***********************************************************************
FREEDCB  DS    0H                 CODE TO RELEASE WORKAREA       Y02993
         LR    PARMREG,REGA       PTR TO DCB AND WORK AREA
         FREEMAIN R,LV=WKARLEN,A=(1),SP=1  FREE DCB AND MACRO LISTS
         XC    BCPERMF,BCPERMF    CLEAR 'PERMANENT' FLAGS
         B     BCDELET            CHECK NEXT OPTION              Y02993
*        PUTLINE MAY NOT BE ISSUED AFTER WORK AREA IS FREED           *
         SPACE 3
***********************************************************************
*        ISSUE PUTLINE FOR ERROR MESSAGES OR FOR PRINTING BROADCAST   *
*              MESSAGES.                                              *
***********************************************************************
BCPUTLN  DS    0H                 CODE TO DO PUTLINE
         TM    BCIOF1,BCPUTL      IS PUTLINE REQUESTED
         BZ    BCDELET            BRANCH IF NOT
         L     PARMREG,BCPUTLP    PTR TO PARM LIST FOR PUTLINE
         SPACE 3
***********************************************************************
*        CHECK TO SEE IF THE PUTLINE IS FOR AN ERROR MESSAGE. IF NOT  *
*        IT IS FOR A BROADCAST MESSAGE- BRANCH TO PUTLINE DATA        *
***********************************************************************
         TM    BCIOF3,BCERFLG     IS PUTLINE FOR ERROR MESSAGE?
         BZ    BCPUTLM            NO, BRANCH TO PUTLINE BROADCAST MSG
         SPACE 3
**********************************************************************
*        THE FOLLOWING CODE INDEXES INTO THE LISTBC MESSAGE MODULE    *
*        IKJEES74, AND RETRIEVES THE POINTER TO THE APPROPRIATE      *
*        ERROR MESSAGE OUT PUT LINE DESCRIPTOR BLOCK.                *
**********************************************************************
         SPACE 3
FINDMSG  EQU   *
         LH    REG9,BCERCDE       LOAD ERROR MESSAGE INDEX       Y02676
         BCTR  REG9,REG0          DECREMENT BY ONE               Y02676
         AR    REG9,REG9          DEVELOP HALFWORD INDEX         Y02676
         L     REG7,VMSG          LOAD THE ADDRESS CONSTANT FOR THE
*                                 MESSAGE MODULE IKJEES74
         AR    REG9,REG7          ADD TABLE ADDRESS TO INDEX     Y02676
         LR    REG5,REG7          GET MESSAGE MODULE ADDRESS     Y02676
         AH    REG5,0(REG9)       ADD OFFSET TO MESSAGE BLOCK    Y02676
***********************************************************************
*        DETERMINE IF THE ERROR MESSAGE REQUIRES TEXT INSERTION.      *
*        IF TEXT INSERTION IS NOT REQUIRED, IT IS THEN DETERMINED     *
*        IF THE ERROR MESSAGE IS A ONE-LEVEL OR TWO-LEVEL MESSAGE     *
*        AND THE APPROPRIATE 'PUTLINE' IS USED TO ISSUE THE ERROR     *
*        MESSAGE TO THE TERMINAL. IF TEXT INSERTION IS REQUIRED,      *
*        THEN A BRANCH IS TAKEN TO DO THE INSERTION.                  *
***********************************************************************
         TM    BCIOF3,BCTXTIN     IS TEXT INSERTION REQUIRED FOR THIS
*                                 ERROR MESSAGE?
         BO    TXTSRT             YES, BRANCH TO DO INSERTION
         L     REG15,BCPUT        LOAD THE ENTRY POINT TO PUTLINE
         TM    BCIOF3,BC1LVL      IS THIS A ONE-LEVEL ERROR MESSAGE?
         BO    BCPUTL1E           BRANCH TO ISSUE ONE-LEVEL ERROR MSG
         B     BCPUTL2E           BRANCH TO ISSUE TWO-LEVEL ERROR MSG
***********************************************************************
*        TEXT INSERTION IS REQUIRED FOR THE ERROR MESSAGE. THE        *
*        FOLLOWING CODE CONVERTS THE ERROR CODE, WHICH HAS BEEN       *
*        RETURNED BY THE EXTERNAL ROUTINE (I.E. PUTLINE OR            *
*        PARSE) FROM BINARY TO ZONED DECIMAL OR PRINTABLE HEX.        *
***********************************************************************
TXTSRT   EQU   *
         TM    BCIOF3,BCHXCV      IS ERROR CODE TO BE PUT OUT IN
*                                 PRINTABLE HEX?
         BO    HEXCV              YES, BRANCH TO DO CONVERSION
         LH    REG7,BCRTCDE       LOAD ERROR RETURN CODE FROM I/O PARM
*                                 LIST
         CVD   REG7,BCDEC         CONVERT RETURN CODE TO DECIMAL
         UNPK  UNPCK(N4),BCDEC    UNPACK THE RETURN CODE         Y02676
         MVZ   UNPCK+N3(N1),UNPCK MAKE SIGN PRINTABLE            Y02676
         B     INSERT             STEP TO INSERTION              Y02676
HEXCV    EQU   *                                                 Y02676
         MVO   UNPCK(N8),BCRTCDE(N2) ADD 'SIGN' TO SIMULATE DEC  Y02676
         UNPK  BCDEC(N8),UNPCK    UNPACK AS IF DECIMAL           Y02676
         MVN   UNPCK(N4),BCDEC    ZONES NOW ZERO                 Y02676
         TR    UNPCK(N4),TRTABLE  TRANSL RESULT TO PRINTABLE HEX Y02676
***********************************************************************
*        THE FOLLOWING CODE MOVES THE OUTPUT LINE DESCRIPTOR FOR      *
*        THE FIRST-LEVEL MESSAGE, THE OUTPUT LINE DESCRIPTOR FOR      *
*        THE SECOND-LEVEL MESSAGE, AND THE SEGMENT INTO THE WHICH     *
*        THE ERROR CODE IS TO BE PLACED INTO DYNAMIC CORE. THIS IS    *
*        FOR THE PURPOSE OF STORING INTO THE APPROPRIATE ADDRESS      *
*        CONSTANT, IN THE SECOND-LEVEL OUTPUT LINE DESCRIPTOR, THE    *
*        POINTER TO THE SEGMENT INTO WHICH THE ERROR CODE HAS BEEN    *
*        INSERTED;AND CHAINING THE OUTPUT LINE DESCRIPTOR FOR THE     *
*        SECOND-LEVEL MESSAGE TO THE OUTPUT LINE DESCRIPTOR FOR THE   *
*        FIRST-LEVEL MESSAGE. REG5 WILL THEN BE LOADED WITH THE       *
*        ADDRESS OF THE OUTPUT LINE DESCRIPTOR FOR THE FIRST LEVEL    *
*        MESSAGE AND THEN PUTLINED TO THE TERMINAL.                   *
***********************************************************************
INSERT   EQU   *
         MVC   MSG1B(MSG1BL),N0(REG5) MOVE OLD FOR FIRST-LEVEL MESSAGE
*                                 INTO DYNAMIC CORE              Y02676
         L     REG7,N0(REG5)      LOAD ADDRESS OF OLD FOR SECOND-LEVEL
*                                 ERROR MESSAGE                  Y02676
*                                                                Y02676
         MVC   MSG2B(MSG2BL),N0(REG7) MOVE OLD FOR 2ND-LEVEL MESSAGE
         LA    REG7,MSG2B         LOAD ADDRESS OF SECOND-LEVEL OLD
         ST    REG7,MSG2PTR       CHAIN OLD FOR SECOND-LEVEL TO OLD
*                                 FOR FIRST-LEVEL MESSAGE
         L     REG7,SEG2C         GET ADDRESS OF SEGMENT NEEDING TEXT
*                                 INSERTION
         MVC   MSG3B(SEGHDRL),N0(REG7) MOVE SEGMENT HEADER INSERT
*                                 INTO THE DYNAMIC AREA          Y02676
         LA    REG7,MSG3B         LOAD THE ADDRESS OF THE MESSAGE
*                                 SEGMENT NEEDING INSERTION
         ST    REG7,SEG2C         STORE ADDRESS IN SECOND-LEVEL OLD
         MVC   SEGSRT(N4),UNPCK   MOVE RETURN CODE TO SEGMENT    Y02676
         L     REG15,BCPUT        LOAD ADDRESS OF PUTLINE ENTRY
         LA    REG5,MSG1B         LOAD ADDRESS OF OLD FROM DYNAMIC AREA
         B     BCPUTL2E           BRANCH TO ISSUE ERROR MESSAGE TO
*                                 TERMINAL
***********************************************************************
*        THIS IS THE ENTRY FOR PUTTING OUT BROADCAST MESSAGES.  REG5  *
*        POINTS TO THE BUFFER WHERE THE MESSAGE WAS JUST READ INTO- SO*
*        REG5 IS DECREMENTED BY FOUR TO POINT TO THE LENGTH AND OFFSET*
*        FIELDS (USED BY PUTLINE) WHICH IMMEDIATELY PRECEDE THE BUFFER*
*        ALSO THE LENGTH OF THE MESSAGE IS IN THE FIRST BYTE OF THE   *
*        BUFFER- SO THIS LENGTH IS TRANSFERRED TO THE 'PREFIX' PARM   *
*        WORD AND THEN THE BYTE IS BLANKED OUT.                       *
*        THE LENGTH IS INCREMENTED TO INCLUDE THE LENGTH OF THE PREFIX*
*        WORD AND THE LENGTH OF THE LENGTH FIELD ITSELF.              *
*                                                                     *
***********************************************************************
BCPUTLM  DS    0H
         LA    REG6,BCBUF-BCMSGS  LENGTH OF PREFIX               Y02676
         SR    REG5,REG6          ADJUST PTR TO BUFFER START     Y02676
         USING BCMSGS,REG5        BUFFER ADDRESSABILITY          Y02676
         XC    BCSEGOFF,BCSEGOFF  SET MESSAGE OFFSET ZERO        Y02676
         IC    REG6,BCMSGL        LOAD MESSAGE LENGTH            Y02676
         LA    REG6,BCTXT-BCMSGS(REG6) ADD BYTE FOR LEN RECORDER Y02676
         STH   REG6,BCSEGLTH      SAVE TOTAL IN PARM BLOCK       Y02676
         MVI   BCMSGL,C' '        BLANK OUT LENGTH BYTE          Y02676
         DROP  REG5                                              Y02676
         L     REG15,BCPUT        PTR TO PUTLINE ENTRY POINT
         SPACE 3
PUTLDATA PUTLINE PARM=BCPUTLDL,OUTPUT=((REG5),DATA),ENTRY=(15),        C
               MF=(E,(1))
         LTR   REG15,REG15             TEST RTN CODE FROM PUTLINE
         BNZ   NOCORE                  BAD RTN CODE BRANCH TO ERR TRN
         B     BCDELET            BRANCH TO NEXT OPERATION
         SPACE 3
***********************************************************************
*        REG5 POINTS TO THE OUTPUT LINE DESCRIPTOR IN MESSAGE MODULE  *
*        IKJEES74 FOR THE APPROPRIATE ONE-LEVEL ERROR MESSAGE THAT    *
*        IS TO BE ISSUED TO THE TERMINAL VIA 'PUTLINE'.               *
***********************************************************************
BCPUTL1E PUTLINE PARM=BCPUTL1L,OUTPUT=((REG5)),ENTRY=(15),MF=(E,(1))
         LTR   REG15,REG15             CHECK RTN CODE FROM PUTLINE
         BNZ   NOCORE                  CHECK PUTINE RETURN CODE
         B     BCDELET            CONTINUE PROCESSING
         SPACE 3
***********************************************************************
*       THE FOLLOWING IS THE PUTLINE FOR ALL TWO-LEVEL ERROR          *
*       MESSAGES.  REG5 POINTS TO THE OUTPUT LINE DESCRIPTOR          *
*       FOR THE ERROR MESSAGE THAT IS TO BE ISSUED TO THE TERMINAL    *
*       VIA 'PUTLINE'.                                                *
***********************************************************************
BCPUTL2E PUTLINE PARM=BCPUTL2L,OUTPUT=((REG5),MULTLVL),ENTRY=(15),     C
               MF=(E,(1))
         LTR   REG15,REG15             CHECK PUTLINE RETURN CODE
         BNZ   NOCORE                  BRANCH TO ERROR ROUTINE
         SPACE 3
***********************************************************************
*        DELETE THE MODULES OF THE PUTLINE SERVICE ROUTINE            *
***********************************************************************
BCDELET  DS    0H                 CODE TO DELETE PUTLINE MODULES
         TM    BCIOF2,BCDELETE    IS DELETE REQUESTED
         BZ    BCEND              BRANCH IF NOT
         DELETE EP=IKJPUTL        MACRO
         SPACE 3
***********************************************************************
*        CLEAN UP CODE EXECUTED BEFORE RETURNING TO LISTBC MODULE     *
***********************************************************************
BCEND    DS    0H                 CLEAN UP CODE
         XC    BCIOF1(3),BCIOF1   CLEAR OPERATION FLAGS
         LR    PARMREG,SAVE       PTR TO THIS MODULES SAVE AREA
         L     SAVE,4(SAVE)       LOAD PTR TO CALLERS SAVE AREA
         FREEMAIN R,LV=72,A=(1),SP=1  FREE SAVE AREA
         LA    REG15,N0           LOAD ZERO RETURN CODE
         TM    BCPERMF,BCERROR    WAS THERE AN ERROR CONDITION?
         BZ    BCRTN              NO, RETURN TO CALLER
         LA    REG15,BCIOERR      YES SET RETURN CODE TO 8
BCRTN    EQU   *
         RETURN (14,12),RC=(15)   RETURN TO CALLER
BCEROUT  EQU   *
         OI    BCPERMF,BCERROR    INDICATE THAT AN ERROR CONDITION
*                                 OCCURRED
         B     BCEND              BRANCH TO FREE SAVE AREA
         SPACE 3
***********************************************************************
*        SYNAD ROUTINE TO HANDLE MESSAGES FOR I/O ERROR CASES.        *
***********************************************************************
BCSYNAD  DS    0H                 ERROR ROUTINE FROM READ
         XC    0(BUFSIZE,REG4),0(REG4) CLEAR READ BUFFER         Y02676
         TM    BCIOF1,BCRD1       RECORD1 READ FAILURE           Y02676
         BO    BCCCLOSE           YES, CAUSE FORMAT ERROR        Y02676
         XC    BCIOF1(3),BCIOF1   CLEAR OPERATION FLAGS
         OI    BCIOF1,BCPUTL      INDICATE PUTLINE
         OI    BCIOF3,BCERFLG     INDICATE ERROR CONDITION OCCURRED
         OI    BCPERMF,BCERROR    INDICATE ERROR HAS OCCURRED
         LA    REG7,1             LOAD ERROR MSG INDEX INTO REGISTER
         TM    BCPERMF,BCLOGON    ENTRY FROM LOGON               Y02676
         BNO   BCSYNAD1           USE REGULAR MESSAGE            Y02676
         LA    REG7,15            USE MESSAGE 15 INSTEAD         Y02676
         OI    BCIOF3,BC1LVL      SPECIAL ONE-LEVEL MESSAGE      Y02676
BCSYNAD1 DS    0H                 MESSAGE SELECTED               Y02676
         STH   REG7,BCERCDE       SAVE ERROR MSG INDEX
         B     BCPUTLN            RECYCLE TO PRODUCE MESSAGE     Y02676
         SPACE 3
***********************************************************************
*        ROUTINE TO HANDLE MESSAGES FOR AN OPEN ERROR.                *
***********************************************************************
BCERR1   DS    0H                 ERROR CASE
         OI    BCPERMF,BCERROR    INDICATE I/O ERROR HAS OCCURRED M0843
         XC    BCIOF1(3),BCIOF1   CLEAR OPERATION FLAGS
         OI    BCIOF1,BCPUTL      INDICATE PUTLINE
         OI    BCIOF3,BCERFLG     INDICATE ERROR CONDITION OCCURRED
         LA    REG7,2             LOAD ERROR MSG INDEX INTO REGISTER
         TM    BCPERMF,BCLOGON    ENTRY FROM LOGON               Y02676
         BNO   BCERR2             NO, NO SPECIAL MESSAGE         Y02676
         LA    REG7,16            YES, USE ONE-LEVEL MESSAGE     Y02676
         OI    BCIOF3,BC1LVL      INDICATE ONE-LEVEL             Y02676
BCERR2   DS    0H                 MESSAGE SELECTED               Y02676
         STH   REG7,BCERCDE       SAVE ERROR MSG INDEX
         B     BCPUTLN            PUT OUT MESSAGES
         SPACE 3
***********************************************************************
*        ROUTINE TO HANDLE MESSAGES FOR PUTLINE ERROR.                *
***********************************************************************
NOCORE   EQU   *
         TM    BCPERMF,BCPUTER    IS THIS SECOND ATTEMPT TO PUTLN
         BNZ   BCEROUT            YES,BRANCH TO SET RTNCD=8
         TM    BCPERMF,BCLOGON    ENTRY FROM LOGON               Y02676
         BO    BCEROUT            YES, NO MESSAGE ISSUED         Y02676
         STH   REG15,BCRTCDE      STORE RETURN CODE              Y02676
         LA    REG15,4            RETURN CODE IF ATTN INTERRUPT  Y02676
         CH    REG15,BCRTCDE      ATTENTION INTERRUPT            Y02676
         BE    BCEROUT            YES, NO MESSAGE                Y02676
         XC    BCIOF1(3),BCIOF1   CLEAR OPERATION FLAGS
         OI    BCPERMF,BCPUTER    INDICATE ONE ATTEMPT FAILED    Y02676
         OI    BCIOF1,BCPUTL      INDICATE PUTLINE
         OI    BCIOF3,BCERFLG     INDICATE ERROR MESSAGE         Y02676
         LA    REG15,16           CODE FOR INSUFFICIENT CORE     Y02676
         CH    REG15,BCRTCDE      WAS CORE INSUFFICIENT          Y02676
         BE    NOCORE1            YES, USE MESSAGE 8             Y02676
         OI    BCIOF3,BCTXTIN     INDICATE INSERT REQUIRED       Y02676
         LA    REG7,12            USE MESSAGE 12                 Y02676
         STH   REG7,BCERCDE       SAVE ERROR MSG INDEX           Y02676
         B     BCPUTLN            ISSUE MESSAGE                  Y02676
NOCORE1  OI    BCIOF3,BC1LVL      INDICATE ONE-LEVEL             Y02676
         LA    REG7,8             LOAD ERROR MSG INDEX INTO REGISTER
         STH   REG7,BCERCDE       SAVE ERROR MSG INDEX
         B     BCPUTLN            BRANCH TO ISSUE MESSAGE        Y02676
         EJECT
***********************************************************************
*        DCB FOR READING AND WRITING IN THE SYS1.BRODCAST DATA SET    *
***********************************************************************
         DS    0D                 ALIGN TO DOUBLE WORD           Y02993
BCCDCB   DCB   BLKSIZE=129,                                            C
               BUFL=129,                                               C
               DDNAME=SYSLBC,                                          C
               DSORG=DA,                                               C
               KEYLEN=1,                                               C
               MACRF=(RIC,WIC),                                        C
               OPTCD=WR,                                               C
               RECFM=F,                                                C
               SYNAD=BCSYNAD
         EJECT
***********************************************************************
*        FOLLOWING ARE PARAMETER LISTS FORMED BY THE LIST FORM OF     *
*             MACROS.                                                 *
***********************************************************************
BCBEGL   DS    0D                 START OF GENERATED LISTS       Y02993
         SPACE 3
*                                                                     *
*        OPEN
*                                                                     *
BCOPLST  OPEN  (,(OUTPUT)),MF=L   OPEN SYS1.BRODCAST
         SPACE 3
*                                                                     *
*        ENQUEUE SHARE
*                                                                     *
BCEQLST  ENQ   (BCQNM,BCFRREC,S,,SYSTEM),RET=HAVE,MF=L           Y02993
         SPACE 3
*                                                                     *
*        DEQUEUE
*                                                                     *
BCDQLST  DEQ   (BCQNM,BCFRREC,,SYSTEM),RET=HAVE,MF=L             Y02993
         SPACE 3
*                                                                     *
*        ENQUEUE EXCLUSIVE
*                                                                     *
BCEQLSTX ENQ   (BCQNM,,E,3,SYSTEM),MF=L
         SPACE 3
*                                                                     *
*        DEQUEUE FROM EXCLUSIVE ENQUEUE                               *
*                                                                     *
BCDQLSTX DEQ   (BCQNM,,3,SYSTEM),RET=HAVE,MF=L
         SPACE 3
*                                                                     *
*        READ
*                                                                     *
BCRDLST  READ  BCDECB,DIF,,,'S',0,,MF=L
         SPACE 3
*                                                                     *
*        READ SPECIAL FIRST RECORD
*                                                                     *
BCRDLST1 READ  DECB1,DI,,,'S',0,BCFRREC,MF=L
         SPACE 3
*                                                                     *
*        WRITE
*                                                                     *
BCWRLST  WRITE BCDEC1,DI,,,'S',0,,MF=L
         SPACE 3
*                                                                     *
*        WRITE
*                                                                     *
BCWRKLST WRITE BCDECBX,DI,,,'S',BCKEY,,MF=L
         SPACE 3
*                                                                     *
*        CLOSE
*                                                                     *
BCCLLST  CLOSE 0,MF=L             CLOSE SYS1.BRODCAST
         SPACE 3
*                                                                     *
*        PUTLINE- ONE LEVEL
*                                                                     *
BCPUTL1  PUTLINE ,MF=L
         SPACE 3
*                                                                     *
*        PUTLINE- TWO LEVELS
*                                                                     *
BCPUTL2  PUTLINE OUTPUT=(0,MULTLVL),MF=L
         SPACE 3
*                                                                     *
*        PUTLINE- DATA                                                *
*                                                                     *
BCPUTLD  PUTLINE ,MF=L
BCGETML1 GETMAIN   EC,MF=L
*                                                                     *
BCMOVEND DS    0D                 END OF LISTS TO MOVE           Y02993
BCLENMV  EQU   BCMOVEND-BCBEGL    LENGTH TO BE MOVED
WKARLEN  EQU   DCBLENG+BCLENMV+BCFIXLL LENGTH OF WORKAREA        Y02993
         EJECT
***********************************************************************
*                       CONSTANTS
***********************************************************************
BCQNM    DC    C'SYSIKJBC'        ENQUEUE NAME
BCFRREC  DC    X'000000'          RELATIVE BLOCK ADDRESS OF FIRST
*                                 RECORD IN DATA SET = ZERO
BCKEY   DC     X'FF'              KEY TO INDICATE RECORD IS AVAILABLE
VMSG    DC     V(LSTBMSG)         VCON FOR MESSAGE MODULE 'IKJEES74'
TRTABLE DC     C'0123456789ABCDEF'  TRANSLATE TABLE FOR PRINTABLE HEX
*                                   CONVERSION
SPARE    DC    50X'00'            PATCH AREA                     Y02676
         END
