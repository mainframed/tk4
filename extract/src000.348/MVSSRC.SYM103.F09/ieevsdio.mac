IEEVSDIO CSECT
* C 086000                                                      ZA30374
         ENTRY IEEVSND5                                          Y02676
IEEVSND5 DS    0H                   LABEL FOR OPERATOR SEND CMD  Y02676
          TITLE  'IEEVSDIO - I/O ROUTINE FOR USER SEND CMD FOR TSO'
***********************************************************************
*                                                                     *
*   MODULE-NAME= IEEVSDIO (ALSO KNOWN AS IEEVSND5)                    *
*                                                                     *
*   DESCRIPTIVE-NAME= BROADCAST DATA SET I/O MODULE                   *
*                                                                     *
*   COPYRIGHT= NONE                                                   *
*                                                                     *
*   STATUS= OS/VS2, REL.2, LEVEL=0                                    *
*                                                                     *
*   FUNCTION= IEEVSDIO PERFORMS I/O OPERATIONS FOR SEND AND OTHER     *
*     COMMAND PROCESSORS WHICH HAVE A REQUIREMENT FOR ACCESSING       *
*     THE BROADCAST DATA SET, SYS1.BRODCAST.                          *
*                                                                     *
*     OPERATION= ONE OF THE FOLLOWING OPERATIONS MAY BE REQUESTED     *
*       PER ENTRY TO IEEVSDIO (SEE SDIOPARM):                         *
*       - OPEN (OPTIONAL INITIALIZATION CHECK OF SYS1.BRODCAST)       *
*       - CLOSE                                                       *
*       - READ                                                        *
*       - WRITE 'DI'                                                  *
*       - WRITE 'DAF'                                                 *
*       - INITIALIZE SYS1.BRODCAST (SEE IKJZT301-05 FOR RECORD        *
*         FORMATS)--REQUESTED ONLY BY SYNC SUBCOMMAND OF ACCOUNT      *
*       A DCB IS OBTAINED AUTOMATICALLY WITH RECOGNITION OF AN        *
*       OPEN REQUEST. THE ADDRESS IS STORED IN THE PERMANENT DATA     *
*       SECTION OF SDIOPARM, FROM WHICH IT IS RETRIEVED TO IMPLEMENT  *
*       SUBSEQUENT REQUESTS. THE DCB IS RELEASED AFTER CLOSE.         *
*       THE CALLER MAY SPECIFY REAL TRACK OR RELATIVE BLOCK ADDRESS   *
*       FEEDBACK. TO CHECK FOR INITIALIZATION OF SYS1.BRODCAST, THE   *
*       FIRST RECORD (RECORD1) IS READ AND THE CONTENTS OF THE        *
*       HEADER CHECKED AGAINST 'SYS1.BRODCAST DATA SET LEVEL 2'.      *
*                                                                     *
*   NOTES=                                                            *
*                                                                     *
*     DEPENDENCIES=                                                   *
*                                                                     *
*       CHARACTER-CODE-DEPENDENCIES= THE OPERATION OF THIS MODULE     *
*         DEPENDS UPON AN INTERNAL REPRESENTATION OF THE EXTERNAL     *
*         CHARACTER SET WHICH IS EQUIVALENT TO THE ONE USED AT        *
*         ASSEMBLY TIME. THE DEPENDENCY CODE IS C.                    *
*                                                                     *
*     RESTRICTIONS= NONE                                              *
*                                                                     *
*     REGISTER-CONVENTIONS= SEE PROGRAM LABEL 'REGS'                  *
*                                                                     *
*     PATCH-LABEL= SPARE                                              *
*                                                                     *
*   MODULE-TYPE= PROCEDURE                                            *
*                                                                     *
*     PROCESSOR= ASM                                                  *
*                                                                     *
*     MODULE-SIZE= 2012 BYTES                                         *
*                                                                     *
*     ATTRIBUTES= REENTERABLE                                         *
*                                                                     *
*   ENTRY-POINT= IEEVSDIO                                             *
*                                                                     *
*     PURPOSE= PERFORM I/O ON SYS1.BRODCAST                           *
*                                                                     *
*     LINKAGE= CALLED BY ANY OF THE FOLLOWING:                        *
*       IKJRBBCR (ACCOUNT CP SYNC SUBCOMMAND)                         *
*       IKJEES10 (SEND CP)                                            *
*       IKJEES40 (ACCOUNT CP BROADCAST INTERFACE)                     *
*       IEEVSND9 (OPERATOR CP SEND SUBCOMMAND)                        *
*       IEEVSND2 "                                                    *
*       IEEVSND3 "                                                    *
*       IEEVSND8 "                                                    *
*                                                                     *
*     INPUT= REGISTER 1 CONTAINS THE ADDRESS OF A PARAMETER LIST,     *
*       SEE 'SDIOPARM'                                                *
*                                                                     *
*   ENTRY-POINT= IEEVSND5 (IDENTICAL TO IEEVSDIO)                     *
*                                                                     *
*   ENTRY-POINT= SYNAD0                                               *
*                                                                     *
*     PURPOSE= SYNAD ROUTINE FOR INITIALIZATION-CHECK READ            *
*                                                                     *
*     LINKAGE= BRANCHED TO BY CHECK SERVICE ROUTINE                   *
*                                                                     *
*     INPUT= REGISTER 0 CONTAINS THE ADDRESS OF THE DECB              *
*                                                                     *
*   ENTRY-POINT= SYNAD1                                               *
*                                                                     *
*     PURPOSE= SYNAD ROUTINE FOR ALL OTHER READ/WRITE OPERATIONS      *
*                                                                     *
*     LINKAGE= BRANCHED TO BY CHECK SERVICE ROUTINE                   *
*                                                                     *
*     INPUT= REGISTER 0 CONTAINS THE ADDRESS OF THE DECB              *
*                                                                     *
*   EXIT-NORMAL=                                                      *
*                                                                     *
*     CONDITION= RETURN TO ADDRESS PASSED IN REGISTER 14 UPON         *
*       COMPLETION OF PROCESSING.                                     *
*                                                                     *
*     OUTPUT= REQUESTED OPERATION HAS BEEN ATTEMPTED.                 *
*                                                                     *
*     RETURN-CODES= A RETURN CODE (HEX) IS PLACED IN REGISTER 15:     *
*       00 -- SUCCESS                                                 *
*       01 -- SYS1.BRODCAST FULL (WRITE 'DA')                         *
*       02 -- OPEN FAILURE                                            *
*       08 -- READ/WRITE FAILURE                                      *
*       10 -- SYS1.BRODCAST NOT INITIALIZED/NOT LEVEL 2               *
*             (OR RECORD1 READ FAILURE)                               *
*       40 -- GETMAIN FAILURE                                         *
*                                                                     *
*   EXIT-ERROR= NONE                                                  *
*                                                                     *
*   EXTERNAL-REFERENCES=                                              *
*                                                                     *
*     ROUTINES= NONE                                                  *
*                                                                     *
*     DATA-AREAS=                            DSECT-MACROS=            *
*       SDIOPARM                                  --                  *
*       READ/WRITE BUFFERS (CALLER SUPPLIED)      --                  *
*       SYS1.BRODCAST DATA SET                    --                  *
*       DCB                                  X    DCBD                *
*       MACRO LIST FORMS, DECB               X    --                  *
*       RECORD1 BUFFER, FORMATTING BUFFER    X    IKJZT301-05         *
*                                                                     *
*     CONTROL-BLOCKS=                        DSECT-MACROS=            *
*       CVT                                  (R)  CVT                 *
*       MASTER SCHEDULAR RESIDENT DATA AREA  (R)  IEEBASEA            *
*                                                                     *
*   TABLES= NONE                                                      *
*                                                                     *
*   MACROS=                                  SERVICE-ROUTINES=        *
*     SAVE                                        --                  *
*     MODID                                       --                  *
*     DCB                                         --                  *
*     READ                                        READ                *
*     WRITE                                       WRITE               *
*     CHECK                                       CHECK               *
*     OPEN                                        SVC19               *
*     CLOSE                                       SVC20               *
*     GETMAIN                                     SVC4,SVC10          *
*     FREEMAIN                                    SVC10               *
*                                                                     *
*     SERIALIZATION= NONE                                             *
*                                                                     *
*   CHANGE-ACTIVITY= S/D SUPPORT CODE IS Y02993.                      *
*                                                                     *
*   MESSAGES= NONE                                                    *
*                                                                     *
*   ABEND-CODES= NONE                                                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                   R E G I S T E R    E Q U A T E S                  *
*                                                                     *
***********************************************************************
*                                                                     *
REGS     DS    0H                  REGISTER DEFINITION           Y02676
R0       EQU   0                   REGISTER USED IN GETMAIN, FREEMAIN
R1       EQU   1                   TEMPORARY WORK REG
R2       EQU   2                   TEMPORARY USE
R3       EQU   3                   ADDRESS OF 129 BYTE READ/WRITE AREA
R4       EQU   4                   ADDRESS OF RBA (RELATIVE BLOCK
*                                  ADDRESS) OF DESIRED BLOCK
R5       EQU   5                   WORK REGISTER
R6       EQU   6                   COUNTER FOR LOOP CONTROL
R7       EQU   7                   ADDRESS OF PARAMETER LIST
R8       EQU   8                   WORK REGISTER
R9       EQU   9                   BASE REGISTER FOR CONTROL BLOCKS
R10      EQU   10                  BASE REGISTER FOR DSECT FOR DCB
R11      EQU   11                  BASE REGISTER FOR CSECT
R12      EQU   12                  BASE REGISTER FOR DATA AREA DSECT
R13      EQU   13                  ADDRESS OF THIS ROUTINE'S SAVE AREA
R14      EQU   14                  ADDRESS OF CALLING ROUTINE RETURN
R15      EQU   15                  RETURN CODE                        *
         EJECT
*                                                                     *
*                                                                     *
         SAVE  (14,12)             SAVE ALL REGISTERS
         LR    R7,R1               SAVE ADDRESS OF PARMLIST IN REG7
         LR    R11,R15             R11 = ADDRESS IEEVSDIO CSECT
         USING IEEVSDIO,R11        SET ADDRESSABILITY FOR CSECT
         MODID BRANCH=YES                                        Y01886
         LA    R0,DATAEND-DATABEG  SET R0 FOR GETMAIN FOR WORK AREA
         GETMAIN  R,LV=(0)         GET CORE FOR WORK AREA
         LR    R12,R1              MOVE ADDR OF GOTTEN CORE TO REG 12
         USING DATABEG,R12         SET ADDRESSABILITY FOR DATA AREA
         ST    R13,SAVER+OFFCALLR  SAVE ADDRESS OF CALLER'S SAVE AREA
         LR    R5,R13              GET ADDRESS CALLERS SAVE AREA
         LA    R13,SAVER
         ST    R13,OFFCALLD(R5)    SAVE ADDRESS OF THIS RTN'S SAVE AREA
         MVC   DECB1(LISTSL),DEC01 MOVE LISTS FOR MACRO INSTRUCTIONS
*                                  INTO GOTTEN CORE (DSECT)
         USING IHADCB,R10          ESTABLISH ADDRESSABILITY FOR IHADCB
         USING BCD,R3              RECORD ADDRESSABILITY         Y02676
         USING SDIOPARM,R7         SET ADDRESSABILITY FOR PARMLIST DSEC
         XC    RETCODE,RETCODE     SET ZERO RETURN CODE          Y02676
         TM    PARM1,P1OPEN        IS OPEN REQUESTED
         BZ    TESTREAD            NO, BRANCH
         LA    R5,DCBLNG+BCDLEN    DCB AND RECORD LENGTH         Y02676
         GETMAIN EC,LV=(R5),A=PARMDCB,MF=(E,GETML) OBTAIN CORE   Y02676
         LTR  R15,R15              TEST GETMAIN RETURN CODE IN REG 15
         BNZ  BADGM                IF NOT SUCCESSFUL (0), RETURN TO
*                                  CALLER WITH ERROR INDICATION
         L     R10,PARMDCB         SET DCB BASE                  Y02676
*        R10 HAS ADDRESS OF CORE GOTTEN FOR DCB VIA GETMAIN
         LA    R3,DCBLNG(R10)      SET RECORDS BASE              Y02676
*        R3 HAS ADDRESS OF CORE FOR RECORD1                      Y02676
         TM    PARM2,P2DEVAD       DEVICE ADDR FEEDBACK          Y02676
         BO    MOVEDCB             YES, MOVE IN SPECIAL DCB
OPEN0    MVC   0(DCBLNG,R10),BDAMDCB COPY BDAM DCB               Y02676
         B     OPEN1               STEP TO OPEN                  Y02676
MOVEDCB  DS    0H                  ACTUAL DEVICE ADDRESS         Y02676
         MVC   0(DCBLNG,R10),ACCTDCB COPY SPECIAL BDAM DCB       Y02676
OPEN1    MVC   DCBDDNAM(L'DCBDDNAM),PARMDDNM COPY DDNAME TO DCB  Y02676
         OPEN  ((R10),(OUTPUT)),MF=(E,OPENL) OPEN DATA SET FOR UPDATE
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFUL               Y02676
         BZ    BADOPEN             IF NOT SUCCESSFUL OPEN, BRANCH
         TM    PARM1,P1READ1       READ OF RECORD1 SKIP          Y02676
         BO    ENDIO               YES, NO CHECK REQUIRED        Y02676
*
* READ RECORD 1 OF SYS1.BRODCAST DATA SET TO DETERMINE IF DATA SET HAS*
* BEEN INITIALIZED.                                                   *
*                                                                     *
         LA    R5,SYNAD0           RECORD1 HAS SPECIAL SYNAD     Y02676
         STCM  R5,PTR24,DCBSYNAD+1 PUT SYNAD ADDR IN DCB         Y02676
         READ  DECB1,DI,(R10),(R3),'S',KEY,R1RBA,MF=E READ REC1 ZA30374
         CHECK DECB1
         LA    R5,SYNAD1           RESTORE SYNAD ADDRESS TO DCB
         STCM  R5,PTR24,DCBSYNAD+1 PUT SYNAD ADDR IN DCB         Y02676
         CLC   R1DSN(L'DSNAME),DSNAME DATA SET NAME PRESENT      Y02676
*                                  (IS DATA SET INITIALIZED)     Y02676
         BNE   SYNAD0              NO, TREAT AS BAD READ RECORD1 Y02676
         CLC   R1LEVEL(L'LEVEL2),LEVEL2 RELEASE 2 LEVEL          Y02676
         BNE   SYNAD0              NO, TREAT AS BAD READ RECORD1 Y02676
         ST    R3,PARMRCD1         SET RECORD1 PTR PARM          Y02676
         MVC   PARMLMCT,R1RECNUM   SAVE LIMIT COUNT PARM         Y02676
         B     ENDIO               END OF PROCESSING
         EJECT
TESTREAD DS    0H                  READ BY BLOCK ID
         TM    PARM1,P1READ        IS READ REQUESTED
         BZ    TESTWRDI            NO, BRANCH
         L     R10,PARMDCB         R10 = ADDRESS OF DCB FROM PARM
         L     R3,PARMIOAD         SET AREA ADDRESS FROM PARM LIST
         L     R4,PARMRBA          SET BLOCK ID (RBA) FROM PARM LIST
         READ  DECB1,DIF,(R10),(R3),'S',0,(R4),MF=E  READ A RECORD
         CHECK DECB1               CHECK THE READ
         MVC   PARMFDBK(L'PARMFDBK),RECPOS(R4)   PUT FEEDBACK OF RECORD
*                                  POSITION ON TRACK INTO PARM LIST
         B     ENDIO               END OF PROCESSING
         EJECT
TESTWRDI DS    0H                  WRITE BY BLOCK ID
         TM    PARM2,P2WRDI        IS WRITE 'DI' REQUESTED
         BZ    TESTWRDA            NO, BRANCH
         L     R10,PARMDCB         R10 = ADDRESS OF DCB FROM PARM
         L     R3,PARMIOAD         SET AREA ADDRESS FROM PARMLIST
         L     R4,PARMRBA          SET BLOCK ID (RBA) FROM PARMLIST
         MVC   KEY(L'PARMKEY),PARMKEY   SET KEY FROM PARMLIST
         TM    PARM2,P2DEL         TEST IF THIS WRITE IS A DELETION
         BNO   NOTDEL              NO, BRANCH AROUND FIRST BYTE SETTING
         MVC   0(L'PARMFDBK,R3),PARMFDBK  PUT POSITION OF RECORD ON
*                                  TRACK INTO FIRST BYTE OF DATA RECORD
*                                  TO SHOW 'AVAILABLE' TO BDAM
NOTDEL   DS    0H                  THIS WRITE IS NOT FOR A DELETION
         WRITE DECB2,DI,(R10),(R3),'S',KEY,(R4),MF=E  WRITE A RECORD
*                                                     BY BLOCK ID (RBA)
         CHECK DECB2               CHECK WRITE
         B     ENDIO               END OF PROCESSING
         SPACE 4
TESTWRDA DS    0H                  WRITE 'DA'
         TM    PARM2,P2WRDAF       IS WRITE 'DA' REQUESTED
         BZ    TESTCLOS            NO, BRANCH
         L     R10,PARMDCB         R10 = ADDRESS OF DCB FROM PARM
         MVC   DCBLIMCT,PARMLMCT+1 SET LIMIT COUNT IN            Y02676
*                                  DCB FOR EXTENDED SEARCH
*                                  TO NO. RECORDS IN DAT SET FROM REC 1
         L     R3,PARMIOAD         SET AREA ADDR FROM PARMLIST
         L     R4,PARMRBA          SET BLOCK ID FROM PARMLIST
         MVC   KEY(L'PARMKEY),PARMKEY   SET KEY FROM PARMLIST
         WRITE DECB3,DAF,(R10),(R3),'S',KEY,(R4),MF=E WRITE RECORD
         CHECK DECB3               CHECK THE WRITE
*                                  R4 = ADDRESS OF FEEDBACK RBA
         MVC   PARMRBA+1(RBAL),0(R4)                             Y02676
         B     ENDIO               END OF PROCESSING
         EJECT
TESTCLOS DS    0H                  CLOSE
         TM    PARM2,P2CLOSE       IS CLOSE REQUESTED
         BZ    INITDS              NO, BRANCH                    Y02676
*                                  CLOSE SYS1.BRODCAST DATA SET
CLOSEDCB L     R10,PARMDCB         R10 = PARM DCB ADDR           Y02676
         CLOSE  ((R10)),MF=(E,CLOSEL)  CLOSE DATA SET
FREEDCB  DS    0H                  FREE CORE GOTTEN FOR DCB
         LA    R0,DCBLNG+BCDLEN    LENGTH OF DCB AND RECORD      Y02676
         FREEMAIN  R,LV=(0),A=(R10)  FREE CORE FOR DCB
         B     ENDIO               END OF PROCESSING
         EJECT
INITDS   DS    0H
         TM    PARM1,P1CREATE      CREATE REQUESTED              Y02676
         BNO   ENDIO               NO PROCESSING REQUIRED        Y02676
         L     R10,PARMDCB         SET DCB BASE                  Y02676
         LA    R3,DCBLNG(R10)      SET RECORDS BASE              Y02676
         CLOSE  ((R10)),MF=(E,CLOSEL)  CLOSE DCB FOR BDAM
         NC    PARMRCD1,PARMRCD1   DATA SET FORMATTED OK?        Y02676
         BZ    BSAMCR              NO, REWRITE ENTIRE DATA SET  Y02676
         MVC   0(DCBLNG,R10),ACCTDCB  COPY SPECIAL BDAM DCB      Y02676
         MVC   DCBDDNAM(L'DCBDDNAM),PARMDDNM MOVE DDNAM INTO DCB Y02676
         OPEN   ((10),(OUTPUT)),MF=(E,OPENL)  OPEN TO CREATE BDAM
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFUL               Y02676
         BZ    BADOPEN             NO, BRANCH                    Y02676
         L     R8,R1RECNUM         TOT # OF RECORDS              Y02676
         L     R5,R1USPTRP         START OF MAIL SECTION         Y02676
         SR    R8,R5               TOT # OF MAIL RECORDS         Y02676
         LA    R4,BCFDBK           ADDR OF 8-BYTE FIELD          Y02676
         XC    PARMRCD1,PARMRCD1   CLEAR MAIL RECORD             Y02676
ERASLOOP STCM  R5,PTR24,BCFDBK     RBA OF MAIL RECORD            Y02676
         READ  DECB1,DIF,(R10),(R3),'S',0,(R4),MF=E ATTEMPT READ Y02676
         CHECK DECB1               CHECK FOR SUCCESS             Y02676
         XC    BCD,BCD                                           Y02676
         MVC   0(L'PARMFDBK,R3),RECPOS(R4)                       Y02676
         MVI   KEY,X'FF'                                         Y02676
         STCM  R5,PTR24,BCFDBK     RBA OF MAIL RECORD            Y02676
         WRITE DECB2,DI,(R10),(R3),'S',KEY,(R4),MF=E  WRITE DIR. RECORD
         CHECK DECB2
         LA    R5,NEXT(R5)                                       Y02676
         BCT   R8,ERASLOOP                                       Y02676
         CLOSE ((R10)),MF=(E,CLOSEL) CLOSE DCB FOR BDAM
         B     OPEN0
         EJECT
BSAMCR   MVC   0(DCBLNG,R10),BSAMDCB COPY BSAM DCB               Y02676
         MVC   DCBDDNAM(L'DCBDDNAM),PARMDDNM  MOVE DDNAME INTO DCB
         OPEN   ((10),(OUTPUT)),MF=(E,OPENL)  OPEN TO CREATE BDAM
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFUL               Y02676
         BZ    BADOPEN             NO, BRANCH
         EJECT
***********************************************************************
*                                                                     *
* THE FOLLOWING CODE CREATES A BDAM DATA SET BY ISSUING BSAM WRITE    *
* INSTRUCTIONS TO WRITE DUMMY RECORDS WITH KEY = X'FF'                *
* AND FIRST BYTE OF DATA = POSITION OF RECORD ON TRACK                *
* THE BROADCAST DATA SET MUST HAVE ONLY 1 EXTENT.                     *
* RECORDS ARE WRITTEN UNTIL THE RETURN CODE INDICATES THAT THE NEXT   *
* BLOCK REQUIRES SECONDARY SPACE ALLOCATION.                          *
*                                                                     *
***********************************************************************
         SR    R8,R8               R8 = 0 = NO. RECORDS WRITTEN
*                                                                     *
WRITESD  DS    0H
         WRITE DECB4,SD,(R10),DUMREC,'S',,,MF=E WRITE DUMMY      Y02676
         LA    R8,NEXT(R8)         BUMP COUNT OF RECORDS WRITTEN
         LR    R5,R15              R15 = RETURN CODE AFTER WRITE
         CHECK DECB4               CHECK THE WRITE FOR COMPLETION
         B     BTABLE(R5)          TEST RETURN CODE FROM WRITE
BTABLE   EQU   *                   BRANCH TABLE FOR RETURN CODE FROM
*                                  WRITE MACRO
         B     WRITESD             RET CODE = 00, WRITE ANOTHER BLOCK
         B     WRITESD             RET CODE = 04, WRITE ANOTHER BLOCK
         DS    0H                  RET CODE = 08, STOP WRITING.
*                                  BLOCK WILL BE WRITTEN. NEXT BLOCK
*                                  REQUIRES SECONDARY SPACE ALLOCATION
         ST    R8,RECCNT           SET NO. RECORDS IN DATA SET
         EJECT
*                                                                     *
* CLOSE DATA AND REPOSITION TO CONTINUE FORMATTING                    *
*                                                                     *
         CLOSE ((R10),REREAD),MF=(E,CLOSEL)  CLOSE FOR REREAD
         MVC   0(DCBLNG,R10),BDAMDCB COPY BDAM DCB               Y02676
         MVC   DCBLIMCT,RECCNT+1                                 Y02676
*                                         SET LIMCT FIELD IN DCB TO
*                                         NO. RECORDS IN DATA SET
         MVC   DCBDDNAM(L'DCBDDNAM),PARMDDNM  MOVE DDNAME INTO DCB
         OPEN  ((R10),(OUTPUT)),MF=(E,OPENL) OPEN DATA SET FOR UPDATE
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFUL               Y02676
         BZ    BADOPEN             NO, BRANCH
         EJECT
***********************************************************************
*                                                                     *
*  FIND MAXIMUM NO. OF BRODCAST 'NOTICES' MESSAGES FROM MASTER SCHED  *
*  BASE A                                                             *
*                                                                     *
***********************************************************************
FINDMAX  DS    0H                  FIND MAX NO. NOTICE MSGS
         L     R9,CVTPTR           R9 = ADDRESS CVT IN MAIN STORAGE
         USING CVTD,R9             SET ADDRESSABILITY FOR CVT DSECT
         L     R9,CVTMSER          R9 = ADDRESS MASTER SCHED BASEA
         USING BASE,R9             SET ADDRESSABILITY FOR M.S. BASEA
         MVC   BCMAX,BABCMAX       BCMAX = MAX NOTICES           Y02676
*                                  SPEC'D AT SYSGEN & KEPT IN
*                                  MASTER SCHEDULER BASE A
         DROP  R9                                                Y02676
         LH    R5,BCMAX
         LTR   R5,R5               TEST BCMAX FOR ZERO, INVALID VALUE
         BNZ   BCMAXSET            IF NOT ZERO, BRANCH AROUND SETTING
*                                  IF ZERO, SET BCMAX TO 1
         LA    R5,NEXT             R5 = 1
         STH   R5,BCMAX            SET BCMAX = 1 TO REPLACE ZERO
BCMAXSET DS    0H                  BCMAX CONTAINS NONZERO VALUE
*                                                                     *
* THE FOLLOWING CALCULATES THE RBA OF THE FIRST BRODCAST NOTICES      *
* MESSAGE RECORD.  THIS VALUE IS THEN USED IN FORMATTING THE BRODCAST *
* DIRECTORY RECORDS.  A UNIQUE MSG RBA IS PUT INTO THE DIRECTORY FOR  *
* EACH POSSIBLE BRODCAST MSG NUMBER.                                  *
* THE FORMULA USED IS:                                                *
*                                                                     *
*   RBA OF FIRST     RBA OF FIRST     NUMBER OF                       *
*   BRODCAST MSG  =  BRODCAST DIR  +  BRODCAST                        *
*    RECORD           RECORD          DIR RECORDS                     *
*                                                                     *
*                                                                     *
         LA    R6,BCDNENT          ENTRIES/NOTICE DIR RCD        Y02676
         SR    R8,R8               CLEAR R8
         LH    R9,BCMAX            R9 = MAXIMUM NUMBER OF BC MSG
*                                  R9 = DIVIDEND
         DR    R8,R6               DIVIDE BY ENTRIES             Y02676
*                                  PER BC DIRECTORY RECORD
*                                  R9 = QUOTIENT = NO. BC DIRECTORY REC
         LTR   R8,R8               R8 = REMAINDER
         BZ    NOREM               IF NO REMAINDER, BYPASS BUMP
         LA    R9,NEXT(R9)         BUMP R9 BY 1
NOREM    DS    0H
         A     R9,BDRBA1           ADD OFFSET TO RBA START       Y02676
         ST    R9,BMRBA            BMRBA = RBA OF FIRST BC MSG RECORD
         MVC   BCMNUM,BCMNUM1      INIT NOTICE NUMBER            Y02676
         MVC   BDRBA,BDRBA1        INIT NOTICE DIR RCD RBA       Y02676
         SPACE 4
BCDL1    DS    0H             FORMAT 1 BRODCAST DIRECTORY RECORD
         L     R8,BMRBA            R8 = RBA OF BRODCAST MESSAGE RECORD
         XC    BCD(BCDLEN),BCD     CLEAR NOTICE DIRECTORY RECORD Y02676
         MVI   BCDREND,ENDREC      SET END-OF-RECORD INDICATOR   Y02676
         LA    R4,BDRBA+1          RBA NEXT RECORD               Y02676
         LH    R1,BCMNUM           R1 = BRODCAST MESSAGE NUMBER
         CH    R1,BCMAX            TEST FOR MAXIMUM BRODCAST MSG NUM
         BH    DIREND              YES, END OF NOTICE DIRECTORY,
*                                  GO TO WRITE NOTICE MSG RECORDS
         LA    R6,BCDNENT          SET LOOP CONTROL              Y02676
         SPACE 4
BCDLOOP  DS    0H            FORMAT 25 BRODCAST DIRECTORY RECORD ENTRY
         CH    R1,BCMAX            IS IT MAXIMUM BRODCAST MSG NUM
         BH    ENDLOOP             YES, RECORD FORMAT DONE       Y02676
         MVC   BCDMSGNO,BCMNUM     SET MESSAGE NUMBER            Y02676
         OI    BCDMFLG,BCDNOMSG    SET BIT0 = 1, NO MSG FOR THIS Y02676
*                                  BRODCAST MESSAGE NUMBER
         MVC   BCDMRBA,BMRBA+1     SET NOTICE RBA                Y02676
         LA    R1,NEXT(R1)         BUMP BRODCAST MESSAGE NUMBER
         STH   R1,BCMNUM
         LA    R8,NEXT(R8)         BUMP BRODCAST MESSAGE RECORD RBA
         ST    R8,BMRBA
         LA    R3,L'BCDENTRY(R3)   STEP TO NEXT ENTRY            Y02676
         BCT   R6,BCDLOOP          EXECUTE LOOP 25 TIMES
ENDLOOP  DS    0H
         LA    R3,DCBLNG(R10)      RESTORE BCD BASE              Y02676
         L     R5,BDRBA            BUMP BC DIRECTORY POINTER
         LA    R5,NEXT(R5)
         CH    R1,BCMAX            CHECK FOR MAXIMUM BROADCAST MSGNO
         BH    WRITBCD             RECORD FORMAT DONE            Y02676
         STCM  R5,PTR24,BCDNEXT    SET CHAIN PTR                 Y02676
WRITBCD  DS    0H                  WRITE NOTICE DIRECTORY RECORD
         MVI   KEY,BDKEY           SET KEY = X'0
         WRITE DECB2,DI,(R10),(R3),'S',KEY,(R4),MF=E  WRITE DIR. RECORD
         CHECK DECB2
         ST    R5,BDRBA             SET RBA NEXT DIRECTORY REC
         B     BCDL1               BRANCH TO FORMAT ANOTHER RECORD
         EJECT
         SPACE 4
***********************************************************************
*        WRITE BROADCAST NOTICE MSG RECORDS TO RESERVE MAXIMUM SPACE  *
***********************************************************************
DIREND   DS    0H                  CREATE NOTICE RECORDS         Y02676
         ST    R5,BMRBAS           SAVE R5
         XC    BCD(BCDLEN),BCD     CLEAR NOTICE MODEL            Y02676
         LH    R6,BCMAX            INIT LOOP CONTROL REG TO NO. OF
*                                  BC NOTICE MSG RECORDS TO WRITE
         LA    R4,BMRBAS+1         RBA ADDR FOR WRITE            Y02676
         MVI   KEY,BMKEY           SET KEY FOR BROADCAST NOTICE MSG
*                                  RECORD
BCMLOOP  DS    0H                  WRITE A NULL BC NOTICE MSG RECORD
         WRITE DECB2,DI,(R10),(R3),'S',KEY,(R4),MF=E
*                                  WRITE NOTICE RECORD
         CHECK DECB2
         L     R5,BMRBAS
         LA    R5,NEXT(R5)         BUMP RBA OF NEXT NOTICE MSG TO
*                                  WRITE
         ST    R5,BMRBAS
         BCT   R6,BCMLOOP          LOOP UNTIL ALL NOTICES MSG
*                                  ARE WRITTEN
         EJECT
***********************************************************************
*                                                                     *
* SET UP RECORD 1 FOR SYS1.BRODCAST DATA SET                          *
*                                                                     *
***********************************************************************
         XC    BCD(BCDLEN),BCD     CLEAR RECORD1 MODEL           Y02676
         MVC   R1BCPTR,BDRBA1+1    PTR TO NOTICES DIRECTORY      Y02676
         MVC   R1USPTR,BMRBA+1     PTR TO MAIL DIRECTORY         Y02676
         MVC   R1BCMAX,BCMAX       NOTICES MAXIMUM               Y02676
*                                  SET NO. RECORDS IN DATA SET
         MVC   R1RECNUM(L'R1RECNUM),RECCNT
*                                                                     *
         MVC   R1DSN(L'DSNAME),DSNAME   DATA SET NAME
         MVC   R1LEVEL(L'R1LEVEL),LEVEL2 DATA SET FORMAT LEVEL   Y02676
         L     R5,RECCNT                R5 = NO. RECORDS IN D S
         S     R5,BMRBA                 R5 = NO. RECORDS IN D S MINUS
*                                       RBA OF FIRST USER DIR REC
         ST    R5,PARMLMCT              SAVE LIMIT CNT IN PARM LIST =
*                                       NO. RECORDS IN USER SECTION
         EJECT
***********************************************************************
*                                                                     *
* WRITE RECORD 1 OF SYS1.BRODCAST DATA SET                            *
*                                                                     *
***********************************************************************
         LA    R4,R1RBA            SET ADDRESS OF BLOCK ID (RBA)
         MVI   KEY,R1KEY           SET KEY
         WRITE  DECB2,DI,(R10),(R3),'S',KEY,(R4),MF=E  WRITE RECIRD 1
         CHECK DECB2
         ST    R3,PARMRCD1         SET RECORD1 PTR FOR CALLER    Y02676
         DROP  R3                                                Y02676
         B     ENDIO               END OF PROCESSING
         EJECT
ENDIO    DS    0H                  EXIT CODE
         L     R13,SAVER+OFFCALLR  RELOAD R13 WITH CALLER SAVE AREA ADD
         SR    R14,R14             CLEAR REG 14
         IC    R14,RETCODE         SAVE RETURN CODE IN REG 14
*                                  BEFORE ISSUING FREEMAIN
         LA    R0,DATAEND-DATABEG  SET R0 FOR FREEMAIN FOR WORK AREA
*        R12 HAS ADDRESS OF WORK AREA GOTTEN VIA GETMAIN
         FREEMAIN  R,LV=(0),A=(R12)  FREE CORE FOR WORK AREA DSECT
         LM    R0,R12,OFF0(R13)    RELOAD REGS ZERO THRU 12
         LR    R15,R14             PUT RETURN CODE INTO REG 15
                    L     R14,OFF14(R13)      RELOAD REG 14
         BR    R14                 RETURN TO CALLER
         SPACE 4
*                                                                     *
SYNAD1   DS    0H                  SYNAD ROUTINE, WRITE 'DAF'    Y02676
         LR    R5,R0               REG0 = ADDRESS OF DECB
         TM    ECBSTAT1(R5),ECBSPAC 'SPACE NOT FOUND'            Y02676
         BNO   SYNAD2              IF OFF, BRANCH                Y02676
         OI    RETCODE,DSFULL      SET RETURN FOR DATA SET FULL
         B     ENDIO               END OF PROCESSING
SYNAD2   DS    0H                  SYNAD ROUTINE, REGULAR I/O    Y02676
         OI    RETCODE,IOERR       SET RETURN CODE TO I/O ERROR  Y02676
         B     ENDIO               END OF PROCESSING             Y02676
         SPACE 4
SYNAD0   DS    0H                  SYNAD USED ON FIRST READ WHEN OPEN
*                                  IS REQUESTED
         OI    RETCODE,BADFMT      INDICATE FORMAT BAD           Y02676
         B     ENDIO               END OF PROCESSING             Y02676
BADOPEN  DS    0H                  OPEN WAS NOT SUCCESSFUL
         OI    RETCODE,OPENERR     SET RETURN CODE FOR OPEN ERROR
         B     FREEDCB             GO TO FREE CORE GOTTEN FOR DCB
*                                                                     *
         SPACE 2
BADGM    DS    0H                  GETMAIN FOR JFCB UNSUCCESSFUL
         OI    RETCODE,NOCORE      SET RETURN CODE FOR NOT ENOUGH CORE
         B     ENDIO               BRANCH TO EXIT
         EJECT
BCMNUM1  DC    H'1'                FIRST BRODCAST MSG NUMBER
BDRBA1   DC    F'1'                RBA FIRST BRODCAST DIR. RECORD
DSNAME   DC    C' SYS1.BRODCAST DATA SET '
LEVEL2   DC    C'LEVEL 2'          LEVEL INDICATOR               Y02676
R1RBA    DC    X'000000'           RELATIVE BLOCK ADDR OF FIRST RECORD
SPARE    DC    50X'00'             PATCH AREA                    Y02676
         EJECT
ENDREC   EQU   X'7F'               END OF RECORD INDICATOR
NEXT     EQU   1                   USED AS INCREMENT VALUE
RBAL     EQU   3                   RELATIVE BLOCK ADDRESS LENGTH
OFFCALLR EQU   4                   OFFSET IN MY SAVE AREA TO ADDR OF
*                                  CALLER'S SAVE AREA
PTR24    EQU   7                   MASK FOR STCM OF ADDRESS      Y02676
RECPOS   EQU   7                   POSITION OF RECORD BYTE IN
*                                  2-WORD FEEDBACK AREA AFTER READ
OFFCALLD EQU   8                   OFFSET IN SAVE AREA TO CALLED ADDR
OFF0     EQU   20                  OFFSET TO REG0 IN SAVE AREA
OFF14    EQU   12                  OFFSET TO REG14 IN SAVE AREA
         EJECT
***********************************************************************
*                                                                     *
*  THE FOLLOWING ARE EXCEPTION CODE BIT SETTINGS IN ECB+1 WHICH ARE
*  TESTED IN THE SYNAD ROUTINES.
*                                                                     *
***********************************************************************
*                                                                     *
ECBSTAT1 EQU   1                   OFFSET IN ECB TO 1ST          Y02676
*                                  EXCEPTION FLAG BYTE           Y02676
ECBSPAC  EQU   X'20'               SPACE NOT FOUND TO WRITE REC
         SPACE 2
***********************************************************************
*                                                                     *
*        THE FOLLOWING ARE USED TO SET THE RETURN CODE FOR CALLER     *
*                                                                     *
***********************************************************************
NOCORE   EQU   X'40'               NOT ENOUGH CORE FOR IO RTN
BADFMT   EQU   X'10'               WRONG LEVEL DATA SET          Y02676
IOERR    EQU   X'08'               I/O ERROR - SYNAD ENTERED
OPENERR  EQU   X'02'               ERROR OCCURRED DURING OPEN
DSFULL   EQU   X'01'               DATA SET FULL  ON   WRITE 'DA'
*                                                                     *
*                                                                     *
*                                                                     *
         EJECT
BDKEY    EQU   X'00'               KEY FOR BROADCAST DIRECTORY REC
USDKEY   EQU   X'01'               KEY FOR USER MAIL DIRECTORY RECS
BMKEY    EQU   X'02'               KEY FOR BROADCAST NOTICE MSG REC
R1KEY    EQU   X'04'               KEY FOR RECORD1
*                                                                     *
*        THE FOLLOWING ARE LIST FORMS OF MACROS WHICH ARE MOVED TO    *
*        GOTTEN CORE AT EXECUTION TIME.                               *
*        THE ORDER OF THE MACROS MUST NOT BE CHANGED             Y02676
*                                                                     *
         READ  DEC01,DIF,,,,,,MF=L  READ BY BLOCK ID (RBA) LIST
         WRITE DEC02,DI,,,,,,MF=L  WRITE BY BLOCK ID (REL. BLOCK ADDR)
         WRITE DEC03,DAF,,,,,,MF=L WRITE TO ADD A RECORD W/FEEDBACK
         WRITE DEC04,SD,,,,,,MF=L  WRITE DUMMY RECORD LIST
         OPEN  0,MF=L              OPEN LIST FORM
         CLOSE 0,MF=L              CLOSE LIST FORM
         GETMAIN  EC,MF=L          GETMAIN LIST FORM
LISTSEND EQU   *                   END OF LISTS FOR MACRO INSTRUCTIONS
*                                  TO BE USED TO MOVE INTO DSECT
LISTSL   EQU   LISTSEND-DEC01      LENGTH OF LISTS FOR MACRO INSTRUCT.
         EJECT
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
* BSAM DCB - USED TO CREATE SYS1.BRODCAST DATA SET                    *
*                                                                     *
***********************************************************************
BSAMDCB  DCB   BLKSIZE=129,                                            X
               BUFL=129,                                               X
               DEVD=DA,            DIRECT ACCESS                       X
               DDNAME=SYSLBC,      DDNAME FOR BROADCAST DATA SET       X
               DSORG=PS,           PHYSICAL SEQUENTIEL                 X
               KEYLEN=1,           KEY LENGTH = 1 BYTE                 X
               MACRF=(WL),         CREATE DIRECT DATA SET              X
               RECFM=F,            FIXED                               X
               SYNAD=SYNAD1
         EJECT
***********************************************************************
*                                                                     *
* BDAM DCB - USED TO ACCESS SYS1.BRODCAST DATA SET                    *
*   OPTCD='FR' CAUSES FEEDBACK TO BE IN RELATIVE BLOCK ADDRESS FORM.  *
*                                                                     *
***********************************************************************
BDAMDCB  DCB   BLKSIZE=129,                                            X
               BUFL=129,                                               X
               DDNAME=SYSLBC,      DDNAME FOR BROADCAST DATA SET       X
               DSORG=DA,           DIRECT ACCESS                       X
               KEYLEN=1,           KEY LENGTH = 1 BYTE                 X
               LIMCT=5,            SET AT EXECUTION TIME, NEVER ZERO   X
               MACRF=(RIC,WAIC),   READ, ID, CHECK, WRITE              X
               OPTCD=EFR,          RELATIVE BLOCK ADDRESSING           X
               RECFM=F,            FIXED                               X
               SYNAD=SYNAD1
         EJECT
***********************************************************************
*                                                                     *
* DCB FOR USE BY IKJEES40, ACCOUNT / BROADCAST DATA SET INTERFACE RTN *
*     OPTCD DOES NOT SPECIFY 'F',  FEEDBACK WILL BE IN ACTUAL DEVICE  *
*     ADDRESS FORM.                                                   *
*                                                                     *
***********************************************************************
ACCTDCB  DCB   BLKSIZE=129,                                            X
               BUFL=129,                                               X
               DDNAME=SYSLBC,      DDNAME FOR BROADCAST DATA SET       X
               DSORG=DA,           DIRECT ACCESS                       X
               KEYLEN=1,           KEY LENGTH = 1 BYTE                 X
               LIMCT=5,            SET AT EXECUTION TIME, NEVER ZERO   X
               MACRF=(RIC,WAIC),   READ, ID, CHECK, WRITE              X
               OPTCD=ER,           RELATIVE BLOCK ADDRESSING           X
               RECFM=F,            FIXED                               X
               SYNAD=SYNAD1
         EJECT
***********************************************************************
*                                                                     *
*        DSECT FOR PARAMETER LIST FROM CALLER                         *
*                                                                     *
***********************************************************************
*                                                                     *
SDIOPARM DSECT                     DSECT FOR PARM LIST FROM IEEVSEND
*
PARM1    DS    1C                  FLAG1 FOR OPERATIONS TO BE PERFORMED
P1OPEN   EQU   X'80'               OPEN - INITIAL FORMATTING IF FIRST
*                                       TIME DATA SET HAS BEEN USED
P1READ   EQU   X'40'               READ SPECIFIED RECORD
P1CREATE EQU   X'20'               CREATE BROADCAST DS (BSAM)    Y02676
P1READ1  EQU   X'10'               SKIP RECORD1 CHECK            Y02676
PARM2    DS    1C                  FLAG2 FOR OPERATIONS TO BE PERFORMED
P2WRDI   EQU   X'80'               WRITE SPECIFIED RECORD BY BLOCK ID
P2WRDAF  EQU   X'40'               WRITE SPECIFIED RECORD IN NEXT
*                                       AVAILABLE SPACE WITH FEEDBACK
P2CLOSE  EQU   X'20'               CLOSE
P2DEL    EQU   X'10'               DELETION OF THIS RECORD.
*                                  PUT PARMFDBK INTO FIRST BYTE OF DATA
P2DEVAD  EQU   X'08'               DEVICE ADDRESS FEEDBACK       Y02676
PARMKEY  DS    C                   KEY FOR READ/WRITE INSTRUCTION
PARMFDBK DS    C                   FEEDBACK FROM READ - POSITION
*                                  OF RECORD ON TRACK.  PUT INTO
*                                  FIRST BYTE OF DATA FOR DELETE
PARMRBA  DS    F                   ADDRESS OF RBA FOR READ/WRITE
PARMIOAD DS    F                   ADDRESS OF BUFFER FOR IO INSTRUCTION
PARMDDNM DS    CL8                 DDNAME FOR BROADCAST DATA SET
*        THE FOLLOWING FIELDS ARE NEVER CLEARED FROM PARM LIST
PARMLMCT DS    F                   LIMIT COUNT FOR EXTENDED SEARCH
PARMDCB  DS    F                   ADDRESS OF DCB
PARMRCD1 DS    F                   ADDRESS OF RECORD1 BUFFER     Y02676
*                                  PROVIDED FOR CALLER WITH      Y02676
*                                  RECORD1 READ AT OPEN          Y02676
         EJECT
***********************************************************************
*                                                                     *
DATABEG  DSECT                     DSECT FOR    WORK DATA AREA
         READ  DECB1,DIF,,,,,,MF=L  READ BY BLOCK ID (RBA) LIST
         WRITE DECB2,DI,,,,,,MF=L  WRITE BY BLOCK ID (REL. BLOCK ADDR)
         WRITE DECB3,DAF,,,,,,MF=L WRITE TO ADD A RECORD W/FEEDBACK
         WRITE DECB4,SD,,,,,,MF=L  WRITE DUMMY RECORD LIST
OPENL    OPEN  0,MF=L              OPEN LIST FORM
CLOSEL   CLOSE 0,MF=L              CLOSE LIST FORM
GETML    GETMAIN  EC,MF=L          GETMAIN LIST FORM
         EJECT
SAVER    DS    18F                 REGISTER SAVE AREA
RETCODE  DS    C                   RETURN CODE                   Y02676
KEY      DS    C                   KEY FOR READ/WRITE            Y02676
         SPACE 4
*                                                                     *
* THE FOLLOWING ARE USED FOR INITIAL FORMATTING OF DATA SET           *
*                                                                     *
BCMAX    DS    H                   MAXIMUM NUMBER BRODCAST MSGS ALLOWED
BCMSG1   DS    F                   ADDR FIRST BRODCAST MESSAGE RECORD
BMRBA    DS    F                   BRODCAST MESSAGE RBA
BMRBAS   DS    F                   RBA OF BROADCAST NOTICE MSG RECORD
*                                  TO BE WRITTEN WITH KEY '02'X TO
*                                  RESERVE IT AS UNAVAILABLE TO BDAM
BDRBA    DS    F                   BRODCAST DIRECTORY RBA
BCMNUM   DS    H                   BRODCAST MESSAGE NUMBER
DUMREC   DS    H                   DUMMY RECORD FOR BSAM CREATE  Y02676
BCFDBK   DS    2F                  TTR FEEDBACK AREA             Y02676
RECCNT   DS    F                   NUMBER OF RECORDS IN DATA SET
DATAEND  DS    0H                  END OF WORK DATA AREA
*                                                                     *
***********************************************************************
         EJECT
         IEZBITS                                                 Y02676
***********************************************************************
* THE FOLLOWING DSECT DESCRIBES BROADCAST DS RECORDS BUFFER      Y02676
***********************************************************************
BCD      DSECT                                                   Y02676
         IKJZT301 DSECT=NO                                       Y02676
         ORG   BCD                                               Y02676
         IKJZT302 DSECT=NO                                       Y02676
         ORG   BCD                                               Y02676
         IKJZT303 DSECT=NO                                       Y02676
         ORG   BCD                                               Y02676
         IKJZT304 DSECT=NO                                       Y02676
         ORG   BCD                                               Y02676
         IKJZT305 DSECT=NO                                       Y02676
BCDLEN   EQU   *-BCD               LENGTH OF RECORDS BUFFER      Y02676
         EJECT
CVTD     DSECT                DSECT TO MAP COMMUNICATIONS VECTOR TABLE.
         CVT
         EJECT
         IEEBASEA
         EJECT
         DCBD  DSORG=DA,DEVD=DA
DCBEND   EQU   *                   END OF DCB
DCBLNG   EQU   DCBEND-IHADCB       LENGTH OF DCB TO USE IN GETMAIN
*                                                                     *
         END
