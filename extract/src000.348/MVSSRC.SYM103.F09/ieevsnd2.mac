         TITLE 'IEEVSND2 - OPERATOR SEND COMMAND MAIL HANDLER          *
                        '
IEEVSND2 CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
         MODID BRANCH=YES
REGS     DS    0H                                                  0027
*   COMPTR=R1;                      /* SET BASE FOR COMMON DATA AREA
*                                      FROM REGISTER 1 MOVE LIST   0031
*                                      FORMS OF MACROS TO AUTOMATIC
*                                      STORAGE                       */
         LR    COMPTR,R1                                           0031
*   GEN(MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG );                 0032
         MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG
*   R1PTR=PARMRCD1;                 /* SET BASE FOR RECORD1    Y02676*/
         L     @10,PARMRCD1(,COMPTR)                               0033
         ST    @10,@TF00001                                        0033
         MVC   R1PTR(3),@TF00001+1                                 0033
*   RNUSD=R1USPTR;                  /* SET RNAME FOR ENQ ON USER DIR */
         MVC   RNUSD(3),R1USPTR(@10)                               0034
*ENQUSD:                            /* ENQUEUE ON USER DIRECTORY REC */
*   GEN(ENQ   (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );    0035
ENQUSD   ENQ   (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)
*   FUPUSD='0'B;                    /* TURN OFF UPDATE FLAG          */
         NI    FUPUSD(COMPTR),B'11110111'                          0036
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*       READ USER MAIL DIRECTORY RECORD                            */
*/*                                                                  */
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0037
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
         XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0037
*   P1READ='1'B;                    /* SET PARM FLAG FOR READ        */
         OI    P1READ(COMPTR),B'01000000'                          0038
*   PARMRBA=ADDR(RNUSD);            /* SET ADDR OF RBA OF REC TO READ*/
         LA    @10,RNUSD                                           0039
         ST    @10,@TF00001                                        0039
         MVC   PARMRBA(4,COMPTR),@TF00001                          0039
*   PARMIOAD=ADDR(DIRAREA);         /* SET PARM AREA ADDRESS FOR READ*/
         LA    @10,DIRAREA                                         0040
         ST    @10,@TF00001                                        0040
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0040
*   R1=ADDR(SDIOPARM);              /* SET SDIOPARM PTR        Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0041
*   CALL IEEVSND5;                  /* CALL IO RTN TO READ USER DIR  */
         L     @15,@CV00205                                        0042
         BALR  @14,@15                                             0042
*   RETC=R15;                       /* SAVE RETURN CODE FROM REG 15  */
         STC   R15,RETC                                            0043
*   IF RETC>0                       /* TEST RETURN CODE FROM IO RTN  */
*     THEN                          /* IF UNSUCCESSFUL OPERATION     */
         CLI   RETC,0                                              0044
         BH    @RT00044                                            0044
*     GOTO BADIO;                   /* GO TO PROCESS ERROR           */
*   USDPTR=PARMIOAD;                /* SET BASE FOR MAIL DIR RCD   0046
*                                                              Y02676*/
         MVC   USDPTR(3),PARMIOAD+1(COMPTR)                        0046
*   USDADD=RNUSD;                   /* SAVE RBA FOR WRITE IF UPDATED */
         MVC   USDADD(3),RNUSD                                     0047
*   DO I=1 TO DIM(USDENTRY);        /* SCAN THE USERID ENTRIES IN  0048
*                                      THIS USER DIRECTORY         0048
*                                      RECORD.Y02676                 */
         LA    I,1                                                 0048
@DL00048 DS    0H                                                  0049
*     IF USDENTRY(I)=ZERENT         /* TEST IF THIS ENTRY = ZERO     */
*       THEN                        /* THIS USERID ENTRY IS ZERO     */
         LR    @10,I                                               0049
         MH    @10,@CH00164                                        0049
         L     @05,USDPTR-1                                        0049
         LA    @05,0(,@05)                                         0049
         ALR   @05,@10                                             0049
         AL    @05,@CF00233                                        0049
         CLC   USDENTRY(13,@05),ZERENT                             0049
         BE    @RT00049                                            0049
*       GOTO LPEND1;                /* LOOP TO CHECK NEXT ENTRY FOR
*                                      EACH USERID IN DIRECTORY,     */
*     DO J=1 TO IDCNT;              /* SCAN ENTIRE LIST OF USERIDS 0051
*                                      SPECIFIED IN COMMAND          */
         LA    @10,1                                               0051
         B     @DE00051                                            0051
@DL00051 DS    0H                                                  0052
*       IF USDID(I)=IDUSRID(J)      /* IS USERID FROM USER DIRECTORY
*                                      EQUAL TO USERID FROM LIST OF
*                                      THOSE SPEC'D IN COMMAND       */
*         THEN                                                     0052
         LR    @05,I                                               0052
         MH    @05,@CH00164                                        0052
         L     @02,USDPTR-1                                        0052
         LA    @02,0(,@02)                                         0052
         SLA   @10,3                                               0052
         ALR   @02,@05                                             0052
         AL    @02,@CF00233                                        0052
         ALR   @10,COMPTR                                          0052
         CLC   USDID(7,@02),IDUSRID-8(@10)                         0052
         BE    @RT00052                                            0052
*         GOTO VALIDID;             /* YES, GO TO PROCESS THIS USRID
*                                      NO, CHECK NEXT USERID IN LIST */
*SCIDLST:                           /* CHECK NEXT ENTRY IN LIST OF 0054
*                                      USERIDS                       */
*     END;                                                         0054
SCIDLST  LA    @10,1                                               0054
         MVC   @ZT00003+3(1),J                                     0054
         AL    @10,@ZT00003                                        0054
@DE00051 STC   @10,J                                               0054
         MVC   @ZT00003+3(1),IDCNT(COMPTR)                         0054
         C     @10,@ZT00003                                        0054
         BNH   @DL00051                                            0054
*LPEND1:                            /* SCAN NEXT USERID ENTRY IN   0055
*                                      DIRECTORY REC                 */
*   END;                                                           0055
LPEND1   AH    I,@CH00047                                          0055
         CH    I,@CH00163                                          0055
         BNH   @DL00048                                            0055
*   IF FUPUSD='0'B                  /* IF RECORD HAS NOT BEEN UPDATED*/
*     THEN                                                         0056
         TM    FUPUSD(COMPTR),B'00001000'                          0056
         BZ    @RT00056                                            0056
*     GOTO DEQUSD;                  /* GOTO DEQ USER DIRECTRY REC IF
*                                      RECORD HAS BEEN UPDATED, -    */
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*                                                                  */
*/*       WRITE UPDATED USER MAIL DIRECTORY RECORD                   */
*/*                                                                  */
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*                                                                  0058
*UPUSD:                             /* WRITE UPDATED USER MAIL     0058
*                                      DIRECTORY REC                 */
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
UPUSD    XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0058
*   P2WRDI='1'B;                    /* SET PARM FLAG FOR WRITE BY  0059
*                                      BLOCK ID (RBA)                */
         OI    P2WRDI(COMPTR),B'10000000'                          0059
*   PARMRBA=ADDR(USDADD);           /* SET PARM RBA ADDRESS FOR WRITE*/
         LA    @10,USDADD                                          0060
         ST    @10,@TF00001                                        0060
         MVC   PARMRBA(4,COMPTR),@TF00001                          0060
*   PARMIOAD=ADDR(DIRAREA);         /* SET AREA ADDRESS FOR WRITE    */
         LA    @10,DIRAREA                                         0061
         ST    @10,@TF00001                                        0061
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0061
*   PARMKEY=USDKEY;                 /* SET PARM KEY FOR WRITE        */
         MVC   PARMKEY(1,COMPTR),USDKEY                            0062
*   R1=ADDR(SDIOPARM);              /* SET SDIOPARM PTR        Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0063
*   CALL IEEVSND5;                  /* CALL IO RTN TO WRITE MAIL DIR */
         L     @15,@CV00205                                        0064
         BALR  @14,@15                                             0064
*   RETC=R15;                       /* SAVE RETURN CODE        Y02676*/
         STC   R15,RETC                                            0065
*   IF RETC^=0                      /* CHECK RETURN CODE       Y02676*/
*     THEN                          /* UNSUCCESSFUL I/O        Y02676*/
         CLI   RETC,0                                              0066
         BNE   @RT00066                                            0066
*     GOTO BADIO;                   /* TAKE ERROR EXIT         Y02676*/
*   FUPUSD='0'B;                    /* TURN OFF FLAG FOR UPDATE USER
*                                      MAIL DIRECTORY RECORD         */
         NI    FUPUSD(COMPTR),B'11110111'                          0068
*DEQUSD:                            /* DEQUEUE ON USER DIRECTORY   0069
*                                      RECORD                        */
*   GEN(DEQ   (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) );/* DEQ ON
*                                      DIRECTRY REC JUST SCANED      */
DEQUSD   DEQ   (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)
*   IF FENDUSL='1'B                 /* CHECK FLAG FOR END OF USER  0070
*                                      LIST                          */
*     THEN                          /* YES, END OF USERID LIST       */
         TM    FENDUSL(COMPTR),B'00000100'                         0070
         BO    @RT00070                                            0070
*     GOTO EXITCODE;                /* GOTO CLEANUP EXIT CODE        */
*/*       CHECK IF END OF USER MAIL DIRECTORY                        */
*                                                                  0072
*   IF USDNEXT=0                    /* LAST MAIL DIR RCD       Y02676*/
*     THEN                          /* YES, CHAIN PTR IS 0           */
         L     @10,USDPTR-1                                        0072
         LA    @10,0(,@10)                                         0072
         MVC   @ZT00001+1(3),USDNEXT(@10)                          0072
         L     @10,@ZT00001                                        0072
         LTR   @10,@10                                             0072
         BNZ   @RF00072                                            0072
*     DO;                                                          0073
*       FMSG1='1'B;                 /* USERID NOT FOUND IN DIR Y02676*/
         OI    FMSG1(COMPTR),B'00001000'                           0074
*       GOTO EXITCODE;              /* EXIT FROM ROUTINE       Y02676*/
         B     EXITCODE                                            0075
*     END;                                                         0076
*   RNUSD=USDNEXT;                  /* SET RNAME FOR ENQ ON NEXT USER
*                                      DIRECTORY RECORD        YM6027*/
@RF00072 L     @10,USDPTR-1                                        0077
         LA    @10,0(,@10)                                         0077
         MVC   RNUSD(3),USDNEXT(@10)                               0077
*   GOTO ENQUSD;                    /* SCAN NEXT USER DIRECTRY RECORD*/
         B     ENQUSD                                              0078
*VALIDID:                           /* USERID SPEC'D IN SEND COMMAND
*                                      HAS BEEN FOUND IN USER      0079
*                                      DIRECTORY OF BROADCAST DS     */
*   VALCNT=VALCNT+1;                /* BUMP CNT OF VALID USERIDS     */
VALIDID  LA    @10,1                                               0079
         MVC   @ZT00003+3(1),VALCNT(COMPTR)                        0079
         AL    @10,@ZT00003                                        0079
         STC   @10,VALCNT(,COMPTR)                                 0079
*   IF USDRBA(I)^=0                 /* IF RBA OF USER MSG IN       0080
*                                      DIRECTORY                     */
*     THEN                                                         0080
         LR    @10,I                                               0080
         MH    @10,@CH00164                                        0080
         L     @05,USDPTR-1                                        0080
         LA    @05,0(,@05)                                         0080
         ALR   @05,@10                                             0080
         AL    @05,@CF00236                                        0080
         MVC   @ZT00001+1(3),USDRBA-7(@05)                         0080
         L     @10,@ZT00001                                        0080
         LTR   @10,@10                                             0080
         BNZ   @RT00080                                            0080
*     GOTO CHAINUM;                 /* IS NOT 0, GO TO CHAIN MSG     */
*FORMUSM:                           /* FORMAT NEW USER MAIL MSG REC  */
*   USMPTR=ADDR(MSGAREA2);          /* FORMAT NEW MSG RCD      Y02676*/
FORMUSM  LA    @10,MSGAREA2                                        0082
         ST    @10,@TF00001                                        0082
         MVC   USMPTR(3),@TF00001+1                                0082
*   USMLNG=TEXTLENG+LENGTH(OPERID); /* SET LENGTH              Y02676*/
         SLR   @05,@05                                             0083
         IC    @05,TEXTLENG(,COMPTR)                               0083
         LA    @02,7                                               0083
         ALR   @02,@05                                             0083
         STC   @02,USMLNG(,@10)                                    0083
*   USMTEXT(1:TEXTLENG)=COMBUF(TBEG:TBEG+TEXTLENG);/* COPY TEXT    0084
*                                                              Y02676
*                                                              YM6027*/
         LR    @02,@05                                             0084
         BCTR  @02,0                                               0084
         SLR   @01,@01                                             0084
         IC    @01,TBEG(,COMPTR)                                   0084
         ALR   @01,COMPTR                                          0084
         EX    @02,@SM00237                                        0084
*   USMTEXT(1+TEXTLENG:TEXTLENG+LENGTH(OPERID))=OPERID;/* COPY     0085
*                                      OPERATOR TAG            Y02676*/
         ALR   @05,@10                                             0085
         MVC   USMTEXT(7,@05),OPERID(COMPTR)                       0085
*   USMNEXT=0;                      /* NO NEXT RCD             Y02676*/
         SLR   @05,@05                                             0086
         ST    @05,@TF00001                                        0086
         MVC   USMNEXT(3,@10),@TF00001+1                           0086
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*                                                                  */
*/*   CALL TO RTN TO WRITE USER MAIL MESSAGE RECORD IN FIRST FREE SPAC
*                                                                    */
*/*   IF NO SPACE IS AVAILABLE, A WARNING MSG IS ROUTED TO SENDER.   */
*/*                                                                  */
*/*   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*                                                                  0087
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
         XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0087
*   P2WRDAF='1'B;                   /* SET PARM FLAG FOR WRITE IN  0088
*                                      FIRST FREE SPACE, TYPE 'DAF'  */
         OI    P2WRDAF(COMPTR),B'01000000'                         0088
*   PARMIOAD=ADDR(MSGAREA2);        /* SET AREA ADDRESS FOR WRITE    */
         ST    @10,@TF00001                                        0089
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0089
*   PARMRBA=ADDR(R1USPTR);          /* RBA OF 1ST MAIL DIR RCD Y02676
*                                      TO START BDAM EXTENDED SEARCH */
         L     @10,R1PTR-1                                         0090
         LA    @10,0(,@10)                                         0090
         LA    @10,R1USPTR(,@10)                                   0090
         ST    @10,@TF00001                                        0090
         MVC   PARMRBA(4,COMPTR),@TF00001                          0090
*   PARMKEY=USMKEY;                 /* SET PARM KEY FOR WRITE        */
         MVC   PARMKEY(1,COMPTR),USMKEY                            0091
*   R1=ADDR(SDIOPARM);              /* SET SDIOPARM PTR        Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0092
*   CALL IEEVSND5;                  /* CALL IO RTN TO WRITE MAIL MSG */
         L     @15,@CV00205                                        0093
         BALR  @14,@15                                             0093
*   RETC=R15;                       /* SAVE RET CODE FROM IEEVSDIO   */
         STC   R15,RETC                                            0094
*   IF R15^=0                       /* CHECK RETURN CODE IN REG15    */
*     THEN                          /* NOT ZERO, UNSUCCESSFUL WRITE  */
         LTR   R15,R15                                             0095
         BNZ   @RT00095                                            0095
*     GOTO BADWRITA;                /* ANALYZE IO RTN ERROR          */
*   FUPUSD='1'B;                    /* SET FLAG TO SAY USER DIRECTORY
*                                      MUST BE WRITTEN DUE TO UPDATE
*                                                              Y02676*/
         OI    FUPUSD(COMPTR),B'00001000'                          0097
*   USDEND(I)=PARMRBA;              /* SET NEW MAIL CHAIN END  Y02676*/
         L     @10,USDPTR-1                                        0098
         LA    @10,0(,@10)                                         0098
         LR    @05,I                                               0098
         MH    @05,@CH00164                                        0098
         MVC   @TF00001(4),PARMRBA(COMPTR)                         0098
         L     @02,@TF00001                                        0098
         ST    @02,@TF00001                                        0098
         ST    @05,@TF00002                                        0098
         ALR   @05,@10                                             0098
         AL    @05,@CF00239                                        0098
         MVC   USDEND-10(3,@05),@TF00001+1                         0098
*   IF FCHNMSG='1'B                 /* IF MORE THAN 1 USER MAIL MSG
*                                      GO TO WRITE PREVIOUS MAIL MSG
*                                      RECORD WITH UPDATED CHAIN PTR */
*     THEN                                                         0099
         TM    FCHNMSG(COMPTR),B'00010000'                         0099
         BO    @RT00099                                            0099
*     GOTO CHAIN3;                                                 0100
*   USDRBA(I)=PARMRBA;              /* PUT FEEDBACK PTR TO MSG RECORD
*                                      JUST WRITTEN INTO USER MAIL 0101
*                                      DIRECTORY RECORD ENTRY FOR  0101
*                                      THIS USERID                   */
         MVC   @TF00001(4),PARMRBA(COMPTR)                         0101
         L     @05,@TF00001                                        0101
         ST    @05,@TF00001                                        0101
         AL    @10,@TF00002                                        0101
         AL    @10,@CF00236                                        0101
         MVC   USDRBA-7(3,@10),@TF00001+1                          0101
*   IDUSRID(J)=BLNKID;              /* BLANK OUT USERID IN IDUSRID   */
         SLR   @10,@10                                             0102
         IC    @10,J                                               0102
         SLA   @10,3                                               0102
         ALR   @10,COMPTR                                          0102
         MVC   IDUSRID-8(8,@10),BLNKID                             0102
*ANYMORU:                           /* CHECK IF ANY MORE USERIDS TO
*                                      PROCESS                       */
*   IF VALCNT^=IDCNT                /* HAVE ALL USERIDS ON LIST BEEN
*                                      PROCESSED                     */
*     THEN                                                         0103
ANYMORU  CLC   VALCNT(1,COMPTR),IDCNT(COMPTR)                      0103
         BNE   @RT00103                                            0103
*     GOTO SCIDLST;                 /* NO, BRANCH TO CONTINUE SEARCH
*                                      OF USER DIRECTORY RECORDS     */
*   FENDUSL='1'B;                   /* SET FLAG FOR END OF USERID  0105
*                                      LIST                          */
         OI    FENDUSL(COMPTR),B'00000100'                         0105
*   GOTO UPUSD;                     /* GO TO WRITE UPDATED USER MAIL
*                                      DIRECTORY RECORD              */
         B     UPUSD                                               0106
*CHAIN3:                            /* THERE IS A CHAIN OF MSGS FOR
*                                      THIS USERID                   */
*   USMPTR=ADDR(MSGAREA);           /* SET BASE PREVIOUS MSG RCD   0107
*                                                              Y02676*/
CHAIN3   LA    @10,MSGAREA                                         0107
         ST    @10,@TF00001                                        0107
         MVC   USMPTR(3),@TF00001+1                                0107
*   USMNEXT=PARMRBA;                /* SET CHAIN PTR IN OLD LAST   0108
*                                      RECORD WITH FEEDBACK FROM   0108
*                                      WRITE OF LAST MSG RECORD    0108
*                                                              Y02676*/
         MVC   USMNEXT(3,@10),PARMRBA+1(COMPTR)                    0108
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*       WRITE USER MAIL MSG RECORD WITH UPDATED CHAIN POINTER TO   */
*/*       THE NEW MSG RECORD CONTAINING THE 'TEXT' OF THE SEND CMD   */
*/*                                                                  */
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0109
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
         XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0109
*   P2WRDI='1'B;                    /* SET PARM FLAG FOR WRITE BY  0110
*                                      BLOCK ID (RBA)                */
         OI    P2WRDI(COMPTR),B'10000000'                          0110
*   PARMKEY=USMKEY;                 /* SET PARM KEY FOR WRITE        */
         MVC   PARMKEY(1,COMPTR),USMKEY                            0111
*   PARMIOAD=ADDR(MSGAREA);         /* SET AREA ADDRESS FOR WRITE TO
*                                      POINT TO AREA IN WHICH USER 0112
*                                      MAIL MESSAGE RECORD WAS READ  */
         ST    @10,@TF00001                                        0112
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0112
*   PARMRBA=ADDR(USMADD);           /* SET PARM RBA ADDRESS FOR WRITE
*                                      TO PT TO RBA FOR NEXT-TO-LAST
*                                      USER MSG RECORD IN CHAIN      */
         LA    @10,USMADD                                          0113
         ST    @10,@TF00001                                        0113
         MVC   PARMRBA(4,COMPTR),@TF00001                          0113
*   R1=ADDR(SDIOPARM);              /* SET SDIOPARM PTR              */
         LA    R1,SDIOPARM(,COMPTR)                                0114
*   CALL IEEVSND5;                  /* CALL IO RTN TO WRITE MAIL MSG */
         L     @15,@CV00205                                        0115
         BALR  @14,@15                                             0115
*   RETC=R15;                       /* SAVE RETURN CODE FROM REG 15  */
         STC   R15,RETC                                            0116
*   IF RETC>0                       /* TEST RETURN CODE FROM IO RTN  */
*     THEN                          /* IF UNSUCCESSFUL OPERATION     */
         CLI   RETC,0                                              0117
         BH    @RT00117                                            0117
*     GOTO BADIO;                   /* GOTO PROCESS ERROR            */
*   IDUSRID(J)=BLNKID;              /* BLANK OUT IO IN IDUSRID       */
         SLR   @10,@10                                             0119
         IC    @10,J                                               0119
         SLA   @10,3                                               0119
         ALR   @10,COMPTR                                          0119
         MVC   IDUSRID-8(8,@10),BLNKID                             0119
*   GOTO ANYMORU;                   /* ANY MORE USERIDS TO PROCESS   */
         B     ANYMORU                                             0120
*CHAINUM:                           /* THERE IS A MSG CHAIN FOR THIS
*                                      USERID                        */
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*       READ LAST USER MAIL MSG RECORD                             */
*/*                                                                  */
*/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*                                                                  0121
*                                   /*                         YM6027*/
*   USMADD=USDEND(I);               /* SAVE FOR LATER UPDATE   Y02676*/
CHAINUM  LR    @10,I                                               0121
         MH    @10,@CH00164                                        0121
         L     @05,USDPTR-1                                        0121
         LA    @05,0(,@05)                                         0121
         ALR   @05,@10                                             0121
         AL    @05,@CF00239                                        0121
         MVC   USMADD(3),USDEND-10(@05)                            0121
*   SDIOPARM=SDIOPARM&&SDIOPARM;    /* CLEAR IO PARM AREA            */
         XC    SDIOPARM(20,COMPTR),SDIOPARM(COMPTR)                0122
*   P1READ='1'B;                    /* SET PARM FLAG FOR READ        */
         OI    P1READ(COMPTR),B'01000000'                          0123
*   PARMIOAD=ADDR(MSGAREA);         /* SET AREA ADDRESS FOR READ   0124
*                                                              YM6027*/
         LA    @10,MSGAREA                                         0124
         ST    @10,@TF00001                                        0124
         MVC   PARMIOAD(4,COMPTR),@TF00001                         0124
*   PARMRBA=ADDR(USMADD);           /* SET RBA FOR READ        Y02676*/
         LA    @10,USMADD                                          0125
         ST    @10,@TF00001                                        0125
         MVC   PARMRBA(4,COMPTR),@TF00001                          0125
*   R1=ADDR(SDIOPARM);              /* SET SDIOPARM PTR        Y02676*/
         LA    R1,SDIOPARM(,COMPTR)                                0126
*   CALL IEEVSND5;                  /* CALL IO RTN TO READ MAIL MSG  */
         L     @15,@CV00205                                        0127
         BALR  @14,@15                                             0127
*   RETC=R15;                       /* SAVE RETURN CODE FROM REG 15  */
         STC   R15,RETC                                            0128
*   IF RETC>0                       /* TEST RETURN CODE FROM IO RTN  */
*     THEN                          /* IF UNSUCCESSFUL OPERATION     */
         CLI   RETC,0                                              0129
         BH    @RT00129                                            0129
*     GOTO BADIO;                   /* GO TO PROCESS ERROR           */
*   FCHNMSG='1'B;                   /* SET FLAG TO INDICATE MORE THAN
*                                      1 USER MAIL MSG, IN A CHAIN   */
         OI    FCHNMSG(COMPTR),B'00010000'                         0131
*   GOTO FORMUSM;                                                  0132
         B     FORMUSM                                             0132
*                                                                  0133
*/*                                                                  */
*                                                                  0133
*BADIO:                             /* UNSUCCESSFUL RETURN FROM IO 0133
*                                      RTN, IEEVSND9                 */
*   FBADIO='1'B;                    /* SET MESSAGE INDICATOR         */
BADIO    OI    FBADIO(COMPTR),B'00000100'                          0133
*   SDIORC=RETC;                    /* SAVE RETURN CODE FROM IO RTN  */
         MVC   SDIORC(1,COMPTR),RETC                               0134
*   GOTO EXITCODE;                  /* ISSUE WARNING MSG       Y02676*/
         B     EXITCODE                                            0135
*BADWRITA:                          /* UNSUCCESSFUL RETURN FROM SDIO
*                                      AFTER WRITE                   */
*   FBADRITA='1'B;                  /* SET MESSAGE INDICATOR         */
BADWRITA OI    FBADRITA(COMPTR),B'00000010'                        0136
*   SDIORC=RETC;                    /* SAVE RETURN CODE FROM IO RTN  */
         MVC   SDIORC(1,COMPTR),RETC                               0137
*EXITCODE:                          /* END OF PROCESSING, CLEANUP AND
*                                      RETURN                        */
*   RETURN;                         /* RETURN TO CALLER        Y02676*/
@EL00001 L     @13,4(,@13)                                         0138
@EF00001 L     @00,@SIZDATD                                        0138
         LR    @01,@12                                             0138
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0138
         BR    @14                                                 0138
*   GEN;                                                           0139
LISTBEG  ENQ   (QNAME,,E,3,SYSTEM),RET=HAVE,MF=L
         DEQ   (QNAME,,3,SYSTEM),RET=HAVE,MF=L
LISTEND  EQU   *                       END OF LIST FORMS
SPARE    DC    50X'00'              PATCH AREA
*   END IEEVSND2                                                   0140
*                                                                  0140
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJZT301)                                       */
*/*%INCLUDE SYSLIB  (IKJZT304)                                       */
*/*%INCLUDE SYSLIB  (IKJZT305)                                       */
*                                                                  0140
*       ;                                                          0140
         B     @EL00001                                            0140
@DATA    DS    0H
@CH00047 DC    H'1'
@CH00163 DC    H'9'
@CH00164 DC    H'13'
@SM00237 MVC   USMTEXT(0,@10),COMBUF-1(@01)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SAV001  EQU   @SA00001
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00001 DC    F'0'
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IEEVSND2 CSECT
         DS    0F
@CF00233 DC    F'-13'
@CF00236 DC    F'-6'
@CF00239 DC    F'-3'
@DATD    DSECT
         DS    0D
         DS    CL1
R1PTR    DS    AL3
         DS    CL1
USDPTR   DS    AL3
         DS    CL1
USMPTR   DS    AL3
         DS    CL1
RNUSD    DS    AL3
J        DS    AL1
USMADD   DS    AL3
         DS    CL1
USDADD   DS    AL3
RETC     DS    AL1
         DS    CL3
DIRAREA  DS    CL129
         DS    CL3
MSGAREA  DS    CL129
         DS    CL3
MSGAREA2 DS    CL129
         DS    CL3
AUTOLIST DS    CL24
         ORG   AUTOLIST
ENQEL    DS    CL12
DEQL     DS    CL12
         ORG   AUTOLIST+24
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
@DATEND  EQU   *
IEEVSND2 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
@CV00205 DC    V(IEEVSND5)
         DS    0D
USDKEY   DC    X'01'
USMKEY   DC    X'03'
QNAME    DC    CL8'SYSIKJBC'
BLNKID   DC    CL8'        '
ZEROES   DC    13AL1(0)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
COMPTR   EQU   @03
R1       EQU   @01
I        EQU   @04
R15      EQU   @15
COMMON   EQU   0
COMMONA  EQU   COMMON
VALCNT   EQU   COMMONA+2
MSGFLAGS EQU   COMMONA+3
FLAGS    EQU   COMMONA+4
FCHNMSG  EQU   FLAGS
FUPUSD   EQU   FLAGS
FENDUSL  EQU   FLAGS
@NM00002 EQU   FLAGS+1
@NM00003 EQU   FLAGS+2
@NM00004 EQU   FLAGS+3
FSOURCE  EQU   @NM00004
FMSG1    EQU   @NM00004
FBADIO   EQU   @NM00004
FBADRITA EQU   @NM00004
IDCNT    EQU   COMMONA+12
SDIORC   EQU   COMMONA+16
TBEG     EQU   COMMONA+20
TEXTLENG EQU   COMMONA+28
COMMONB  EQU   COMMON+160
COMBUF   EQU   COMMONB
COMMONC  EQU   COMMON+284
IDUSRID  EQU   COMMONC
OPERID   EQU   COMMONC+160
SDIOPARM EQU   COMMONC+168
@NM00006 EQU   SDIOPARM
P1READ   EQU   @NM00006
@NM00007 EQU   SDIOPARM+1
P2WRDI   EQU   @NM00007
P2WRDAF  EQU   @NM00007
PARMKEY  EQU   SDIOPARM+2
PARMRBA  EQU   SDIOPARM+4
PARMIOAD EQU   SDIOPARM+8
PARMRCD1 EQU   COMMONC+196
R1BC     EQU   0
R1BCPTRP EQU   R1BC
R1USPTRP EQU   R1BC+4
R1USPTR  EQU   R1USPTRP+1
USDIR    EQU   0
USDENTRY EQU   USDIR
USDID    EQU   USDENTRY
USDRBA   EQU   USDENTRY+7
USDEND   EQU   USDENTRY+10
USDNEXT  EQU   USDIR+126
USMSG    EQU   0
USMLNG   EQU   USMSG
USMTEXT  EQU   USMSG+1
USMNEXT  EQU   USMSG+126
COMMONP  EQU   0
ZERENT   EQU   ZEROES
*                                      START UNREFERENCED COMPONENTS
USDREND  EQU   USDIR+125
@NM00009 EQU   USDIR+117
@NM00008 EQU   R1BC+45
R1LEVEL  EQU   R1BC+38
R1DSN    EQU   R1BC+14
R1BCMAX  EQU   R1BC+12
R1RECNUM EQU   R1BC+8
R1USFLGS EQU   R1USPTRP
R1BCPTR  EQU   R1BCPTRP+1
R1BCFLGS EQU   R1BCPTRP
PARMDCB  EQU   COMMONC+192
PARMLMCT EQU   COMMONC+188
PARMDDNM EQU   SDIOPARM+12
PARMFDBK EQU   SDIOPARM+3
P2DEVAD  EQU   @NM00007
P2DEL    EQU   @NM00007
P2CLOSE  EQU   @NM00007
P1READ1  EQU   @NM00006
P1CREATE EQU   @NM00006
P1OPEN   EQU   @NM00006
@NM00005 EQU   COMMONC+167
MSG1EXT  EQU   COMMONA+36
CBCCONID EQU   COMMONA+34
CBCMSGNO EQU   COMMONA+32
ACCESSOR EQU   COMMONA+29
COMBUFP  EQU   COMMONA+25
COMI     EQU   COMMONA+24
CSCBPTR  EQU   COMMONA+21
RETVATT1 EQU   COMMONA+17
IDTBL    EQU   COMMONA+13
MSG1EXTP EQU   COMMONA+9
M1IND    EQU   COMMONA+8
FBADTPUT EQU   @NM00004
FWTO2    EQU   @NM00004
FERRSYN  EQU   @NM00004
FCONSOL  EQU   FSOURCE
FTERM    EQU   FSOURCE
FERRID   EQU   @NM00003
FTEXT    EQU   @NM00003
FALL     EQU   @NM00003
FLOGON   EQU   @NM00003
FNOW     EQU   @NM00003
FLIST    EQU   @NM00003
FLISTALL EQU   @NM00003
FDEL     EQU   @NM00003
FCNS     EQU   @NM00002
FMAILFL  EQU   @NM00002
FUSER    EQU   @NM00002
FBRDCST  EQU   @NM00002
FMN      EQU   @NM00002
FADDBC   EQU   @NM00002
FYESBCM  EQU   @NM00002
FNOMSG   EQU   @NM00002
FLISTING EQU   FLAGS
FOVER20  EQU   FLAGS
FBADSEND EQU   FLAGS
FANYINV  EQU   FLAGS
FOPEN    EQU   FLAGS
FMSGA    EQU   MSGFLAGS
FMSG9    EQU   MSGFLAGS
FMSG8    EQU   MSGFLAGS
FMSG6    EQU   MSGFLAGS
FMSG5    EQU   MSGFLAGS
FMSG4    EQU   MSGFLAGS
FMSG3    EQU   MSGFLAGS
FMSG2    EQU   MSGFLAGS
TPUTRC   EQU   COMMONA+1
@NM00001 EQU   COMMONA
*                                      END UNREFERENCED COMPONENTS
@RT00044 EQU   BADIO
@RT00049 EQU   LPEND1
@RT00052 EQU   VALIDID
@RT00056 EQU   DEQUSD
@RT00066 EQU   BADIO
@RT00080 EQU   CHAINUM
@RT00095 EQU   BADWRITA
@RT00099 EQU   CHAIN3
@RT00103 EQU   SCIDLST
@RT00117 EQU   BADIO
@RT00129 EQU   BADIO
EXITCODE EQU   @EL00001
@RT00070 EQU   EXITCODE
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IEEVSND2
