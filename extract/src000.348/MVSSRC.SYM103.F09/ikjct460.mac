         TITLE 'IKJCT460 OUTPUT ESTAE EXIT                             *
                        '
IKJCT460 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJCT460  74.342'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0023
*/********************************************************************/
*/*                                                                  */
*/*                                                                  */
*/*                         HOUSEKEEPING                             */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0023
*   IF R0=TWELVE THEN               /* NO WORK AREA WAS OBTAINED     */
         C     R0,@CF00132                                         0023
         BNE   @RF00023                                            0023
*     DO;                           /* ADDR OF OUTCOMTB IN REG2    0024
*                                      OUTCOMTB BASED ON OCMTBPTR. 0024
*                                      OCMTBPTR DCL AS REG2          */
*       OUTSTAE(1)=R13;             /* SAVE CALLERS REG13 IN OUTCOMTB*/
         ST    R13,OUTSTAE(,OCMTBPTR)                              0025
*       OUTSTAE(2)=R14;             /* SAVE CALLERS REG14 IN OUTCOMTB*/
         ST    R14,OUTSTAE+4(,OCMTBPTR)                            0026
*       R13=ADDR(EWASA1);           /* SET UP SAVE AREA FOR 64 TO USE*/
         L     @06,EWAPTR(,OCMTBPTR)                               0027
         LA    R13,EWASA1(,@06)                                    0027
*       SDWASW=NO;                  /* INDICATE NO WORKAREA AVAILABLE*/
         NI    SDWASW(@06),B'01111111'                             0028
*       MAPSDWAC=R1;                /* SAVE COMPLETION CODE FROM REG1*/
         ST    R1,MAPSDWAC(,@06)                                   0029
*     END;                                                         0030
*   ELSE                            /* YES - WORK AREA AVAILABLE     */
*     DO;                           /* ADDR OUTCOMTB IN SDWAPARM   0031
*                                      FIELD OUTCOMTB BASED ON     0031
*                                      OCMTBPTR SET OCMTBPTR         */
         B     @RC00023                                            0031
@RF00023 DS    0H                                                  0032
*       SDWAPTR=R1;                 /* INIT SDWA BASE FOR          0032
*                                      ADDRESABILITY                 */
         LR    SDWAPTR,R1                                          0032
*       OCMTBPTR=SDWAPARM;          /* INIT OUTCOMTB BASE W/ PARM    */
         L     OCMTBPTR,SDWAPARM(,SDWAPTR)                         0033
*       OUTSTAE(1)=R13;             /* SAVE CALLERS REG13 IN OUTCOMTB*/
         ST    R13,OUTSTAE(,OCMTBPTR)                              0034
*       OUTSTAE(2)=R14;             /* SAVE CALLERS REG14 IN OUTCOMTB*/
         ST    R14,OUTSTAE+4(,OCMTBPTR)                            0035
*       R13=ADDR(EWASA1);           /* SET UP SAVE AREA FOR 64 TO USE*/
         L     @06,EWAPTR(,OCMTBPTR)                               0036
         LA    R13,EWASA1(,@06)                                    0036
*       ABENDCDS=SDWACMPC;          /* SAVE COMPLETION CODE FROM SDWA*/
         MVC   ABENDCDS(3,@06),SDWACMPC(SDWAPTR)                   0037
*       SDWASW=YES;                 /* INDICATE WORKAREA AVAILABLE   */
         OI    SDWASW(@06),B'10000000'                             0038
*     END;                                                         0039
*   IF FIRSTIME=ON THEN             /* THIS IS SECOND ENTRY          */
@RC00023 L     @06,EWAPTR(,OCMTBPTR)                               0040
         TM    FIRSTIME(@06),B'00100000'                           0040
         BNO   @RF00040                                            0040
*     DO;                                                          0041
*       R13=OUTSTAE(1);             /* RESTORE SAVE AREA REG         */
         L     R13,OUTSTAE(,OCMTBPTR)                              0042
*       R15=16;                     /* NO STAI PERCOLATION           */
         LA    R15,16                                              0043
*       GEN(BR 14);                 /* RETURN TO AVOID LOOPING       */
         BR 14
*     END;                                                         0045
*   ELSE                            /* FIRST ENTRY                   */
*     FIRSTIME=ON;                  /* INDICATE THIS IS 1ST ENTRY    */
         B     @RC00040                                            0046
@RF00040 L     @06,EWAPTR(,OCMTBPTR)                               0046
         OI    FIRSTIME(@06),B'00100000'                           0046
*                                                                  0047
*/********************************************************************/
*/*  THIS ROUTINE CALLS IKJCT464 TO CLEAN UP FOR PRINT, SAVE AND     */
*/*  SYSOUT DATA SETS, AND TO TELL SUBSYSTEM OUTPUT IS DONE.         */
*/********************************************************************/
*                                                                  0047
*   KEY1=OFF;                       /* THIS MODULE GETS CONTROL IN 0047
*                                      KEY0                          */
@RC00040 NI    KEY1(OCMTBPTR),B'01111111'                          0047
*   CODE=MAPSDWAC;                  /* GET A COPY OF THE ABEND CODE  */
         L     @06,EWAPTR(,OCMTBPTR)                               0048
         L     @03,MAPSDWAC(,@06)                                  0048
         ST    @03,CODE(,@06)                                      0048
*   CODE=CODE&CLEAN;                /* ZERO OUT UNIMPORTANT DIGITS TO
*                                      LEAVE ONLY 3 DIGITS OF SYSTEM
*                                      ABEND CODE                    */
         NC    CODE(4,@06),@CB00571                                0049
*   IF CODE=ERROR80A THEN           /* 80A GETMAIN ERROR OCCURRED    */
         CLC   CODE(4,@06),@CB00549                                0050
         BNE   @RF00050                                            0050
*     GMERROR=ON;                   /* SET WARNING SWITCH SO IKJCT467
*                                      IS NOT INVOKED BY 64 - 67 DOES
*                                      GETMAINS AND WILL ABEND TOO   */
         OI    GMERROR(@06),B'00010000'                            0051
*   ELSE                                                           0052
*     ;                             /* NOT 80A ERROR-DON'T NEED WARN */
@RF00050 DS    0H                                                  0053
*   SYSCODE=SYSCODE&CLEAN1;         /* ZERO OUT LO ORDER USER BITS OF
*                                      SYSCODE - LEAVING ONLY 3 DIGIT
*                                      SYSTEM CODE                   */
         L     @06,EWAPTR(,OCMTBPTR)                               0053
         NC    SYSCODE(2,@06),@CB00573                             0053
*   IF SYSCODE=DETACH1×SYSCODE=DETACH2 THEN/* IF CP TERMINATED BY TMP
*                                      DETACH WITH STAE (DBL ATTN)   */
         CLC   SYSCODE(2,@06),@CB00567                             0054
         BE    @RT00054                                            0054
         CLC   SYSCODE(2,@06),@CB00569                             0054
         BNE   @RF00054                                            0054
@RT00054 DS    0H                                                  0055
*     DTCHSTAE=YES;                 /* TELL '64 THAT DBL ATTN      0055
*                                      OCCURRED                      */
         L     @06,EWAPTR(,OCMTBPTR)                               0055
         OI    DTCHSTAE(@06),B'00000100'                           0055
*   ELSE                                                           0056
*     ;                                                            0056
@RF00054 DS    0H                                                  0057
*   R1=ADDR(PARMLIST);                                             0057
         L     @06,EWAPTR(,OCMTBPTR)                               0057
         LA    R1,PARMLIST(,@06)                                   0057
*   PARMLIST=ADDR(OUTCOMTB);                                       0058
         ST    OCMTBPTR,PARMLIST(,@06)                             0058
*   CALL IKJCT464;                  /* CALL CLEAN UP ROUTINE         */
         L     @15,@CV00576                                        0059
         BALR  @14,@15                                             0059
*                                                                  0060
*/********************************************************************/
*/*                                                                  */
*/*      DETERMINE IF DETACH WITH STAE (USER STRUCK A DBL ATTN),     */
*/*      OR AN ABEND OCCURRED.  IF ABEND, CHECK POSSIBILITIES:       */
*/*           0A - GETMAIN FAILURE FOR CORE                          */
*/*           B37,D37,E37 - DA SPACE FAILURE FOR PRINT OR SAVE DS    */
*/*           222 - OPER CANCEL                                      */
*/*           622 - LINEDROP CANCEL                                  */
*/*           913 - INVALID PASSWORD FOR PRINT OR SAVE DS            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0060
*   /*****************************************************************/
*   /*                                                               */
*   /* CP TERMINATED BY TMP DETACH WITH STAE (DBL ATTN)              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0060
*   IF SYSCODE=DETACH1×SYSCODE=DETACH2 THEN/* IF CP TERMINATED BY TMP
*                                      DETACH WITH STAE (DBL ATTN)   */
         L     @06,EWAPTR(,OCMTBPTR)                               0060
         CLC   SYSCODE(2,@06),@CB00567                             0060
         BE    @RT00060                                            0060
         CLC   SYSCODE(2,@06),@CB00569                             0060
         BNE   @RF00060                                            0060
@RT00060 DS    0H                                                  0061
*     DUMP=NO;                      /* DON'T GIVE A DUMP             */
*                                                                  0061
         L     @06,EWAPTR(,OCMTBPTR)                               0061
         NI    DUMP(@06),B'10111111'                               0061
*   /*****************************************************************/
*   /*                                                               */
*   /* CP TERMINATED BY ABEND                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0062
*   ELSE                            /* ELSE CP TERMINATED BY ABEND.  */
*     DO;                                                          0062
         B     @RC00060                                            0062
@RF00060 DS    0H                                                  0063
*       CPPLPTR=OUTCPPL;            /* INIT THE CPPL BASE            */
         L     @06,EWAPTR(,OCMTBPTR)                               0063
         L     @03,OUTCPPL(,OCMTBPTR)                              0063
         ST    @03,CPPLPTR(,@06)                                   0063
*       ECTPTR=CPPLECT;             /* INIT THE ECT BASE             */
         L     @03,CPPLECT(,@03)                                   0064
         ST    @03,ECTPTR(,@06)                                    0064
*       ECTRTCD=SDWACMPC;           /* SAVE ABEND CODE IN ECT        */
         MVC   ECTRTCD(3,@03),SDWACMPC(SDWAPTR)                    0065
*       ECTRCDF=ON;                 /* HI ORDER BIT ON-INDICATE ABEND*/
*                                                                  0066
         MVI   ECTRCDF(@03),B'10000000'                            0066
*       /*************************************************************/
*       /*                                                           */
*       /* FILL IN OUTRTCD WHICH IS MAPPPED BY OUTRTCD2              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0067
*       HOLDCODE=ABENDCDS;          /* PICK UP 12 BITS OF SYS ABEND
*                                      CODE AND 4 BITS OF USER ABEND
*                                      CODE                          */
         MVC   HOLDCODE(3,@06),ABENDCDS(@06)                       0067
*       OUTRTCD=OUTRTCD2/16;        /* DIVIDE TO SHIFT 4 PLACES    0068
*                                      RIGHT. THIS SHIFTS OUT THE 4
*                                      BITS OF USER CODE.            */
*                                                                  0068
         LH    @04,OUTRTCD2(,@06)                                  0068
         SRDA  @04,32                                              0068
         D     @04,@CF00097                                        0068
         STH   @05,OUTRTCD(,OCMTBPTR)                              0068
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE WHICH ABEND OCCURRED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0069
*       IF SYSCODE=B37×SYSCODE=D37×SYSCODE=E37 THEN/* DA SPACE     0069
*                                      FAILURE -B37,D37,E37?         */
         CLC   SYSCODE(2,@06),@CB00555                             0069
         BE    @RT00069                                            0069
         CLC   SYSCODE(2,@06),@CB00557                             0069
         BE    @RT00069                                            0069
         CLC   SYSCODE(2,@06),@CB00559                             0069
         BNE   @RF00069                                            0069
@RT00069 DS    0H                                                  0070
*         DO;                       /* YES                           */
*           DUMP=NO;                /* DON'T GIVE A DUMP             */
         L     @06,EWAPTR(,OCMTBPTR)                               0071
         NI    DUMP(@06),B'10111111'                               0071
*           OUTMSGID=114;           /* ISSUE 'NO DA SPACE' MSG FOR 0072
*                                      CMD                           */
         MVI   OUTMSGID(OCMTBPTR),X'72'                            0072
*           R1=ADDR(PARMLIST);                                     0073
         LA    R1,PARMLIST(,@06)                                   0073
*           PARMLIST=ADDR(OUTCOMTB);                               0074
         ST    OCMTBPTR,PARMLIST(,@06)                             0074
*           CALL IKJCT467;          /* CALL MSG HANDLER              */
         L     @15,@CV00577                                        0075
         BALR  @14,@15                                             0075
*         END;                                                     0076
*       ELSE                        /* CHECK FURTHER                 */
*         IF SYSCODE=PASSWORD THEN  /* BAD PASSWORD - 913            */
         B     @RC00069                                            0077
@RF00069 L     @06,EWAPTR(,OCMTBPTR)                               0077
         CLC   SYSCODE(2,@06),@CB00561                             0077
         BNE   @RF00077                                            0077
*           DO;                                                    0078
*             DUMP=NO;              /* DON'T GIVE A DUMP             */
         NI    DUMP(@06),B'10111111'                               0079
*             OUTMSGID=116;         /* ISSUE 'BAD PASSWD' MSG FOR CMD*/
         MVI   OUTMSGID(OCMTBPTR),X'74'                            0080
*             R1=ADDR(PARMLIST);                                   0081
         LA    R1,PARMLIST(,@06)                                   0081
*             PARMLIST=ADDR(OUTCOMTB);                             0082
         ST    OCMTBPTR,PARMLIST(,@06)                             0082
*             CALL IKJCT467;        /* CALL MSG HANDLER              */
         L     @15,@CV00577                                        0083
         BALR  @14,@15                                             0083
*           END;                                                   0084
*         ELSE                      /* CHECK FURTHER                 */
*           IF SYSCODE=LINEDROP×SYSCODE=OPERCAN THEN/* LINEDROP    0085
*                                      CANCEL = 622 OR OPER CANCEL 0085
*                                      WITHOUT DUMP=222              */
         B     @RC00077                                            0085
@RF00077 L     @06,EWAPTR(,OCMTBPTR)                               0085
         CLC   SYSCODE(2,@06),@CB00565                             0085
         BE    @RT00085                                            0085
         CLC   SYSCODE(2,@06),@CB00563                             0085
         BNE   @RF00085                                            0085
@RT00085 DS    0H                                                  0086
*             DUMP=NO;              /* DON'T GIVE A DUMP             */
         L     @06,EWAPTR(,OCMTBPTR)                               0086
         NI    DUMP(@06),B'10111111'                               0086
*           ELSE                    /* CHECK FURTHER                 */
*             DO;                                                  0087
         B     @RC00085                                            0087
@RF00085 DS    0H                                                  0088
*               SYSCODE=SYSCODE&CLEAN2;/* ZERO OUT 4 HI ORDER BITS OF
*                                      SYSTEM CODE TO CK FOR '0A' AND
*                                      '22' ABENDS                   */
         L     @06,EWAPTR(,OCMTBPTR)                               0088
         NC    SYSCODE(2,@06),@CB00575                             0088
*               IF SYSCODE=CANCEL THEN/* '22' ABEND                  */
         CLC   SYSCODE(2,@06),@CB00553                             0089
         BNE   @RF00089                                            0089
*                 IGNORE=YES;       /* ALLOW EXISTING DUMP OPT       */
         OI    IGNORE(@06),B'00001000'                             0090
*               ELSE                /* CHECK FURTHER                 */
*                 IF SYSCODE=GETMERR THEN/* GETMAIN/FREEMAIN       0091
*                                      FAILURE-0A?                   */
         B     @RC00089                                            0091
@RF00089 L     @06,EWAPTR(,OCMTBPTR)                               0091
         CLC   SYSCODE(2,@06),@CB00551                             0091
         BNE   @RF00091                                            0091
*                   DO;                                            0092
*                     DUMP=YES;     /* GIVE A DUMP                   */
         OI    DUMP(@06),B'01000000'                               0093
*                     IF GMERROR=NO THEN/* NOT AN 80A                */
         TM    GMERROR(@06),B'00010000'                            0094
         BNZ   @RF00094                                            0094
*                       DO;                                        0095
*                         OUTMSGID=117;/* ATTEMPT TO ISSUE MSG     0096
*                                      318I-MOST 0A ABENDS WILL MAKE
*                                      IT SINCE THEY AREN'T DUE TO 0096
*                                      LACK OF CORE                  */
         MVI   OUTMSGID(OCMTBPTR),X'75'                            0096
*                         R1=ADDR(PARMLIST);                       0097
         LA    R1,PARMLIST(,@06)                                   0097
*                         PARMLIST=ADDR(OUTCOMTB);                 0098
         ST    OCMTBPTR,PARMLIST(,@06)                             0098
*                         CALL IKJCT467;/* CALL MSG HANDLER          */
         L     @15,@CV00577                                        0099
         BALR  @14,@15                                             0099
*                       END;                                       0100
*                     ELSE                                         0101
*                       ;           /* IT WAS AN 80A                 */
@RF00094 DS    0H                                                  0102
*                   END;                                           0102
*                 ELSE              /* ELSE OTHER SYSTEM ABEND       */
*                   DO;                                            0103
         B     @RC00091                                            0103
@RF00091 DS    0H                                                  0104
*                     DUMP=YES;     /* GIVE A DUMP                   */
         L     @06,EWAPTR(,OCMTBPTR)                               0104
         OI    DUMP(@06),B'01000000'                               0104
*                     OUTMSGID=117; /* ISSUE GENERAL MSG FOR ABEND   */
         MVI   OUTMSGID(OCMTBPTR),X'75'                            0105
*                     R1=ADDR(PARMLIST);                           0106
         LA    R1,PARMLIST(,@06)                                   0106
*                     PARMLIST=ADDR(OUTCOMTB);                     0107
         ST    OCMTBPTR,PARMLIST(,@06)                             0107
*                     CALL IKJCT467;/* CALL MSG HANDLER              */
         L     @15,@CV00577                                        0108
         BALR  @14,@15                                             0108
*                   END;                                           0109
*             END;                                                 0110
@RC00091 DS    0H                                                  0110
@RC00089 DS    0H                                                  0111
*     END;                          /* END OF PROCESSING FOR ABEND 0111
*                                      TERMINATIONS                  */
@RC00085 DS    0H                                                  0111
@RC00077 DS    0H                                                  0111
@RC00069 DS    0H                                                  0112
*                                                                  0112
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE RESETS THE STACK AND CLEARS THE INPUT QUEUE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0112
*   CPPLPTR=OUTCPPL;                /* SET UP CPPL BASE              */
@RC00060 L     @06,EWAPTR(,OCMTBPTR)                               0112
         L     @03,OUTCPPL(,OCMTBPTR)                              0112
         ST    @03,CPPLPTR(,@06)                                   0112
*   IOPLPTR=ADDR(IOPLAREA);         /* BASE IOPL                     */
         LA    @11,IOPLAREA(,OCMTBPTR)                             0113
         ST    @11,IOPLPTR(,OCMTBPTR)                              0113
*   IOPLUPT=CPPLUPT;                /* ADDR UPT IN IOPL              */
         L     @10,CPPLUPT(,@03)                                   0114
         ST    @10,IOPLUPT(,@11)                                   0114
*   IOPLECT=CPPLECT;                /* ADDR ECT IN IOPL              */
         L     @03,CPPLECT(,@03)                                   0115
         ST    @03,IOPLECT(,@11)                                   0115
*   IOPLECB=ADDR(OUTATTN);          /* ADDR ATTN ECB IN IOPL         */
         LA    @03,OUTATTN(,OCMTBPTR)                              0116
         ST    @03,IOPLECB(,@11)                                   0116
*   IOPLIOPB=ADDR(STACKLST);        /* ADDR STPB IN IOPL             */
         LA    @03,STACKLST(,@06)                                  0117
         ST    @03,IOPLIOPB(,@11)                                  0117
*   STACKLST(1:STCKLEN)=STCKLST(1:STCKLEN);/* LIST TO DYN CORE       */
         L     @03,STCKLEN                                         0118
         BCTR  @03,0                                               0118
         EX    @03,@SM00674                                        0118
*   R1=ADDR(IOPL);                  /* SET R1 W/ IOPL PTR FOR STACK  */
         LR    R1,@11                                              0119
*   GEN(STACK MF=(E,(1)));                                         0120
         STACK MF=(E,(1))
*   GEN(TCLEARQ INPUT);             /* FLUSH THE TERMINAL INPUT      */
         TCLEARQ INPUT
*                                                                  0122
*/********************************************************************/
*/*   DETERMINE IF A DUMP IS NECESSARY. IF NOT INDICATE IN THE       */
*/*   WORKAREA THAT NODUMP OR DUMP OPTION IN EFFECT IS TO BE         */
*/*   USED.                                                          */
*/*   RETURN TO CALLER.                                              */
*/********************************************************************/
*                                                                  0122
*   IF DUMP=YES THEN                /* DUMP IS NECESSARY - A '0A'  0122
*                                      ABEND OR SOME ABEND OTHER THAN
*                                      THOSE CHECKED FOR OCCURRED    */
         L     @06,EWAPTR(,OCMTBPTR)                               0122
         TM    DUMP(@06),B'01000000'                               0122
         BNO   @RF00122                                            0122
*     DO;                                                          0123
*       SDMPLST(1:SDMPLEN)=SDUMPS(1:SDMPLEN);/* MOVE LIST FORM TO  0124
*                                      REENT CORE                    */
         L     @03,SDMPLEN                                         0124
         BCTR  @03,0                                               0124
         EX    @03,@SM00676                                        0124
*       R1=ADDR(SDMPLST);           /* POINT TO L FORM SDUMP         */
         LA    R1,SDMPLST(,@06)                                    0125
*       GEN(SDUMP MF=(E,(1)));      /* INVOKE SVC DUMP ROUTINE       */
         SDUMP MF=(E,(1))
*     END;                                                         0127
*   ELSE                                                           0128
*     ;                             /* NO DUMP FOR A B37, D37, E37,
*                                      913, 622, OR 222 ABEND        */
@RF00122 DS    0H                                                  0129
*   IF SDWASW=ON THEN               /* A WORKAREA WAS OBTAINED       */
         L     @06,EWAPTR(,OCMTBPTR)                               0129
         TM    SDWASW(@06),B'10000000'                             0129
         BNO   @RF00129                                            0129
*     DO;                                                          0130
*       SDWAREXN='IKJCT460';        /* SET NAME OF ESTAE ROUTINE     */
         MVC   SDWAREXN(8,SDWAPTR),@CC00665                        0131
*       R1=SDWAPTR;                 /* BASE SDWA ON REG1 FOR SETRP 0132
*                                      MAC                           */
         LR    R1,SDWAPTR                                          0132
*       IF IGNORE=YES THEN          /* USE DUMP OPTION IN EFFECT.  0133
*                                      THIS CONDITION OCCURS ON A  0133
*                                      '22' ABEND OTHER THAN 622 AND
*                                      222.                          */
         TM    IGNORE(@06),B'00001000'                             0133
         BNO   @RF00133                                            0133
*         DO;                       /* SETRP                       0134
*                                      DUMP(IGNORE)RECORD(YES)RC(16) */
*           RESPECIFY                                              0135
*            (GPR00P,                                              0135
*             GPR01P,                                              0135
*             GPR14P,                                              0135
*             GPR15P) RSTD;                                        0135
*           GPR01P->SDWARCDE=16;    /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'10'                              0136
*           GPR01P->SDWARCRD='1'B;  /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0137
*           RESPECIFY                                              0138
*            (GPR00P,                                              0138
*             GPR01P,                                              0138
*             GPR14P,                                              0138
*             GPR15P) UNRSTD;                                      0138
*         END;                                                     0139
*       ELSE                        /* DONT GIVE A DUMP SINCE SDUMP
*                                      WAS ALREADY ISSUED IF       0140
*                                      NECESSARY                     */
*         IF DTCHSTAE=YES THEN      /* DBL ATTN, SO DON'T RECORD IN
*                                      LOGREC                @ZA02553*/
         B     @RC00133                                            0140
@RF00133 L     @06,EWAPTR(,OCMTBPTR)                               0140
         TM    DTCHSTAE(@06),B'00000100'                           0140
         BNO   @RF00140                                            0140
*           DO;                     /* SETRP DUMP(NO)RC(16)RECORD(NO)*/
*             RESPECIFY                                            0142
*              (GPR00P,                                            0142
*               GPR01P,                                            0142
*               GPR14P,                                            0142
*               GPR15P) RSTD;                                      0142
*             GPR01P->SDWARCDE=16;  /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'10'                              0143
*             GPR01P->SDWARCRD='0'B;/* TURN OFF RECORD INDICATOR     */
         NI    SDWARCRD(GPR01P),B'01111111'                        0144
*             GPR01P->SDWAREQ='0'B; /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0145
*             RESPECIFY                                            0146
*              (GPR00P,                                            0146
*               GPR01P,                                            0146
*               GPR14P,                                            0146
*               GPR15P) UNRSTD;                                    0146
*           END;                    /*                       @ZA02553*/
*         ELSE                      /* WASN'T DBL ATTN, SO RECORD  0148
*                                                            @ZA02553*/
*           DO;                     /* SETRP                       0148
*                                      DUMP(NO)RECORD(YES)RC(16)     */
         B     @RC00140                                            0148
@RF00140 DS    0H                                                  0149
*             RESPECIFY                                            0149
*              (GPR00P,                                            0149
*               GPR01P,                                            0149
*               GPR14P,                                            0149
*               GPR15P) RSTD;                                      0149
*             GPR01P->SDWARCDE=16;  /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'10'                              0150
*             GPR01P->SDWARCRD='1'B;/* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0151
*             GPR01P->SDWAREQ='0'B; /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0152
*             RESPECIFY                                            0153
*              (GPR00P,                                            0153
*               GPR01P,                                            0153
*               GPR14P,                                            0153
*               GPR15P) UNRSTD;                                    0153
*           END;                                                   0154
*     END;                                                         0155
*   ELSE                                                           0156
*     ;                             /* NO WORK AREA - JUST RETURN    */
@RF00129 DS    0H                                                  0157
*/********************************************************************/
*/*     RETURN                                                       *
*/********************************************************************/
*                                                                  0157
*   R15=16;                         /* NO STAI PERCOLATION           */
@RC00129 LA    R15,16                                              0157
*   R13=OUTSTAE(1);                 /* RESTORE SAVE AREA REG         */
         L     R13,OUTSTAE(,OCMTBPTR)                              0158
*   R14=OUTSTAE(2);                 /* RESTORE RETURN REG            */
         L     R14,OUTSTAE+4(,OCMTBPTR)                            0159
*   END IKJCT460                                                   0160
*                                                                  0160
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJOCMTB)                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJIOPL )                                       */
*                                                                  0160
*       ;                                                          0160
@EL00001 DS    0H                                                  0160
@EF00001 DS    0H                                                  0160
@ER00001 BR    @14                                                 0160
@DATA    DS    0H
@SM00674 MVC   STACKLST(0,@06),STCKLST
@SM00676 MVC   SDMPLST(0,@06),SDUMPS
@DATD    DSECT
         DS    0F
IKJCT460 CSECT
         DS    0F
@CF00132 DC    F'12'
@CF00097 DC    F'16'
@DATD    DSECT
         DS    0D
IKJCT460 CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00576 DC    V(IKJCT464)
@CV00577 DC    V(IKJCT467)
         DS    0D
@CC00665 DC    C'IKJCT460'
@CB00549 DC    X'0080A000'
@CB00571 DC    X'00FFF000'
@CB00551 DC    X'00A0'
@CB00553 DC    X'0022'
@CB00555 DC    X'B370'
@CB00557 DC    X'D370'
@CB00559 DC    X'E370'
@CB00561 DC    X'9130'
@CB00563 DC    X'2220'
@CB00565 DC    X'6220'
@CB00567 DC    X'33E0'
@CB00569 DC    X'23E0'
@CB00573 DC    X'FFF0'
@CB00575 DC    X'0FF0'
PATCH60  DS    CL100
         ORG   PATCH60
PTCHINIT DC    20CL5'ZAP60'
         ORG   PATCH60+100
IKJCT460 CSECT
*                                       /* STACK LIST - LOCAL        */
STCKLST  STACK DELETE=ALL,MF=L
ENDSTCK  EQU   *
STCKLEN  DC    A(ENDSTCK-STCKLST)          LEN OF LIST
IKJCT460 CSECT
SDUMPS  SDUMP SDATA=(RGN,NUC,SQA,LPA),HDR='TSO OUTPUT CP ESTAE',MF=L
ENDSDMP EQU   *
SDMPLEN DC    A(ENDSDMP-SDUMPS)            LEN OF LIST
@DATD    DSECT
@ENDDATD EQU   *
IKJCT460 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
OCMTBPTR EQU   @02
SDWAPTR  EQU   @07
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR01F   EQU   @01
GPR14F   EQU   @14
GPR15F   EQU   @15
OUTCOMTB EQU   0
OUTCPPL  EQU   OUTCOMTB
OUTMSGID EQU   OUTCOMTB+4
OUTFLAGS EQU   OUTCOMTB+5
KEY1     EQU   OUTFLAGS
OUTRTCD  EQU   OUTCOMTB+6
OUTATTN  EQU   OUTCOMTB+24
O73PARM  EQU   OUTCOMTB+100
@NM00002 EQU   O73PARM+16
OUTKEYWD EQU   OUTCOMTB+146
OUTSW    EQU   OUTCOMTB+148
OUTIDSSW EQU   OUTCOMTB+150
OUTXMSG  EQU   OUTCOMTB+164
OUTSTAE  EQU   OUTCOMTB+188
OUTPLIST EQU   OUTCOMTB+260
EWAPTR   EQU   OUTCOMTB+288
IOPLPTR  EQU   OUTCOMTB+292
IOPLAREA EQU   OUTCOMTB+296
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
CPPL     EQU   0
CPPLUPT  EQU   CPPL+4
CPPLECT  EQU   CPPL+12
ECT      EQU   0
ECTRCDF  EQU   ECT
ECTRTCD  EQU   ECT+1
ECTSWS   EQU   ECT+28
IOPL     EQU   0
IOPLUPT  EQU   IOPL
IOPLECT  EQU   IOPL+4
IOPLECB  EQU   IOPL+8
IOPLIOPB EQU   IOPL+12
ESTAEWA  EQU   0
CPPLPTR  EQU   ESTAEWA+12
ECTPTR   EQU   ESTAEWA+16
SWITCHES EQU   ESTAEWA+20
SDWASW   EQU   SWITCHES
DUMP     EQU   SWITCHES
FIRSTIME EQU   SWITCHES
GMERROR  EQU   SWITCHES
IGNORE   EQU   SWITCHES
DTCHSTAE EQU   SWITCHES
MAPSDWAC EQU   ESTAEWA+24
ABENDCDS EQU   MAPSDWAC+1
SYSCODE  EQU   ABENDCDS
CODE     EQU   ESTAEWA+28
HOLDCODE EQU   ESTAEWA+32
OUTRTCD2 EQU   HOLDCODE
STACKLST EQU   ESTAEWA+36
CLOSELST EQU   ESTAEWA+52
SDMPLST  EQU   ESTAEWA+56
RBPTR    EQU   ESTAEWA+100
PARMLIST EQU   ESTAEWA+172
EWASA1   EQU   ESTAEWA+176
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
EWASA2   EQU   ESTAEWA+248
UHLDQTU  EQU   ESTAEWA+165
UDISPTU  EQU   ESTAEWA+154
UDDNTU   EQU   ESTAEWA+136
PTRLIST  EQU   ESTAEWA+124
RBS99    EQU   ESTAEWA+104
RBPND    EQU   RBPTR
@NM00063 EQU   CLOSELST
@NM00062 EQU   STACKLST+4
@NM00061 EQU   STACKLST
@NM00060 EQU   HOLDCODE+2
TWOSIGNF EQU   SYSCODE
@NM00059 EQU   SYSCODE
@NM00058 EQU   MAPSDWAC
@NM00057 EQU   SWITCHES
COUNT    EQU   ESTAEWA+8
ELEM     EQU   ESTAEWA+4
RETNCODE EQU   ESTAEWA
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00056 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
CPPLPSCB EQU   CPPL+8
CPPLCBUF EQU   CPPL
@NM00055 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00054 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00053 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00052 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00051 EQU   SDWADDAT+3
@NM00050 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00049 EQU   SDWADDAT+1
@NM00048 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00047 EQU   SDWADUMP+2
@NM00046 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00045 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00044 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00043 EQU   SDWAACF3
@NM00042 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00041 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00040 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00039 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00038 EQU   SDWA+239
@NM00037 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00036 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00035 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00034 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00033 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00032 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00031 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00030 EQU   SDWAINC2
@NM00029 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00028 EQU   SDWAILC2
@NM00027 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00026 EQU   SDWANXT2
@NM00025 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00024 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00023 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00022 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00021 EQU   SDWAINC1
@NM00020 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00019 EQU   SDWAILC1
@NM00018 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00017 EQU   SDWANXT1
@NM00016 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00015 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00014 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00013 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00012 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00011 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00010 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00009 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00008 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
OSVDSPDE EQU   OUTCOMTB+284
OUTCLPDE EQU   OUTCOMTB+280
OUTJBPDE EQU   OUTCOMTB+276
ODESTPDE EQU   OUTPLIST+12
ONEWCPDE EQU   OUTPLIST+8
OPRDSPDE EQU   OUTPLIST+4
OUTCPDE1 EQU   OUTPLIST
OSYSODDN EQU   OUTCOMTB+252
CLASBUFF EQU   OUTCOMTB+244
OUTWORK  EQU   OUTCOMTB+196
OUTSBBUF EQU   OUTCOMTB+184
OUTSBPDL EQU   OUTCOMTB+180
OHELPECB EQU   OUTCOMTB+176
OUTTCBH  EQU   OUTCOMTB+172
OUTXRPLY EQU   OUTCOMTB+168
OUTSYNMS EQU   OUTXMSG
OUTPDL   EQU   OUTCOMTB+160
OUTDAIR  EQU   OUTCOMTB+156
OUTDARB  EQU   OUTCOMTB+152
@NM00007 EQU   OUTIDSSW
INTRPMSG EQU   OUTIDSSW
ALLOC    EQU   OUTIDSSW
TERM     EQU   OUTIDSSW
EODSW    EQU   OUTIDSSW
@NM00006 EQU   OUTIDSSW
@NM00005 EQU   OUTIDSSW
POINT    EQU   OUTIDSSW
ENDLIST  EQU   OUTSW+1
WORKDONE EQU   OUTSW+1
NONTERM  EQU   OUTSW+1
OPENED   EQU   OUTSW+1
SYNADERR EQU   OUTSW+1
HASPABND EQU   OUTSW
NOWORK   EQU   OUTSW
ENDKEEP  EQU   OUTSW
ERROR    EQU   OUTSW
ENDSW    EQU   OUTSW
UNALCALL EQU   OUTSW
SUBCMODE EQU   OUTSW
SUBSYS   EQU   OUTSW
SUBNEXT  EQU   OUTKEYWD+1
SUBBEGN  EQU   OUTKEYWD+1
SUBHERE  EQU   OUTKEYWD+1
SUBCONT  EQU   OUTKEYWD+1
DEST     EQU   OUTKEYWD+1
KEEP     EQU   OUTKEYWD+1
NEWCLASS EQU   OUTKEYWD
PRINT    EQU   OUTKEYWD
DELETE   EQU   OUTKEYWD
NEXT     EQU   OUTKEYWD
BEGIN    EQU   OUTKEYWD
HERE     EQU   OUTKEYWD
HOLD     EQU   OUTKEYWD
PAUSE    EQU   OUTKEYWD
OUTRECL  EQU   OUTCOMTB+144
OUTRECA  EQU   OUTCOMTB+140
OUTBUFL  EQU   @NM00002+2
OUTRECUN EQU   @NM00002+1
NOMEMNAM EQU   @NM00002+1
NEWDS    EQU   @NM00002+1
NEEDFREE EQU   @NM00002+1
OUTRECV  EQU   @NM00002+1
DSOPEN   EQU   @NM00002+1
DSALLOC  EQU   @NM00002+1
@NM00004 EQU   @NM00002+1
@NM00003 EQU   @NM00002
OUTBUFA  EQU   O73PARM+12
PRINTDDN EQU   O73PARM+4
OUTDCB   EQU   O73PARM
STRCTNUM EQU   OUTCOMTB+96
OUTBKCNT EQU   OUTCOMTB+92
OUTBKAPX EQU   OUTCOMTB+84
OUTBKNEW EQU   OUTCOMTB+76
OUTHOLD  EQU   OUTCOMTB+68
OUTEMPSB EQU   OUTCOMTB+64
OUTACBL  EQU   OUTCOMTB+60
OUTACB   EQU   OUTCOMTB+56
OUTRPLL  EQU   OUTCOMTB+52
OUTRPL   EQU   OUTCOMTB+48
OUTSOBSO EQU   OUTCOMTB+44
OUTSOBH  EQU   OUTCOMTB+40
OUTEMPMN EQU   OUTCOMTB+32
OUTEXTRA EQU   OUTCOMTB+28
POSTED   EQU   OUTATTN
@NM00001 EQU   OUTATTN
OUTCMDNM EQU   OUTCOMTB+16
OUTMACN  EQU   OUTCOMTB+8
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00140 EQU   @RC00129
@RC00133 EQU   @RC00129
@ENDDATA EQU   *
         END   IKJCT460,(C'PLS0024',0603,74342)
