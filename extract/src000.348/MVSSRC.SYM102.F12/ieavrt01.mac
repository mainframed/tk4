         TITLE 'TIME SERVICE RTN - MODULE IEAVRT01 - CSECT IGC0001A    *
                        '
IGC0001A CSECT ,                                                   0001
@MAINENT BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGC0001A  76.246'                                 0001
         DROP  @15
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 200
*   SAVR(1)=AREAPTR;                /* SAVE INPUT REGISTERS          */
         ST    AREAPTR,SAVR(,RBPTR)                                0072
*   SAVR(2)=CODERG;                 /* DO                            */
         ST    CODERG,SAVR+4(,RBPTR)                               0073
*   SAVR(3)=RETADDR;                /* DO                            */
         ST    RETADDR,SAVR+8(,RBPTR)                              0074
*   RESPECIFY                                                      0075
*    (AREAPTR,                                                     0075
*     CODERG,                                                      0075
*     RETADDR) UNRSTD;                                             0075
*   XSAFLGS=0;                      /* INITIALIZE BIT FLAGS          */
         MVI   XSAFLGS(RBPTR),X'00'                                0076
*   RETCODE=0;                      /* INITIALIZE TO NO ERROR        */
         SLR   RETCODE,RETCODE                                     0077
*   CCODE='00'X;                    /* INITIALIZE STCK COND CODE     */
         MVI   CCODE(RBPTR),X'00'                                  0078
*   IF MNIGHTLH='00000000'X&        /* IF NOT YET INITIALIZED        */
*       MNIGHTRH='00000000'X THEN                                  0079
         SLR   @14,@14                                             0079
         L     @12,TPCPTR(,CVTREG)                                 0079
         CL    @14,MNIGHTLH(,@12)                                  0079
         BNE   @RF00079                                            0079
         CL    @14,MNIGHTRH(,@12)                                  0079
         BNE   @RF00079                                            0079
*     DO;                           /*                       @ZA11878*/
*       XSACLKNT='1'B;              /* CLOCKS NOT INIT       @ZA11878*/
         OI    XSACLKNT(RBPTR),B'00000100'                         0081
*       STCKAREA='';                /* MAKE TODC VALUE 0     @ZA11878*/
         XC    STCKAREA(8,RBPTR),STCKAREA(RBPTR)                   0082
*       TIME='';                    /* MAKE TIME VALUE 0     @ZA11878*/
         XC    TIME(8,RBPTR),TIME(RBPTR)                           0083
*       TZ=0;                       /* TIME ZONE TO 0        @ZA11878*/
         SLR   @14,@14                                             0084
         ST    @14,TZ(,RBPTR)                                      0084
*       DATE=15;                    /* DATE = 0 DECIMAL      @ZA11878*/
         MVC   DATE(4,RBPTR),@CF00063                              0085
*     END;                          /*                       @ZA11878*/
*   ELSE                            /* HERE IF INITIALIZED           */
*     DO;                           /*                       @ZA11878*/
         B     @RC00079                                            0087
@RF00079 DS    0H                                                  0088
*       DATE='FFFFFFFF'X;           /* FORCE DO LOOP         @ZA11878*/
         MVC   DATE(4,RBPTR),@CB02049                              0088
*       DO WHILE CCODE=0&           /* DO UNTIL ALL VALUES GOTTEN    */
*             (DATE^=CVTDATE×       /* OK OR UNTIL CAN'T GET TODC    */
*             TIME(1:1)='1'B×TIMELH>DAYLH×(TIMELH=DAYLH&TIMERH>DAYRH));
         B     @DE00089                                            0089
@DL00089 DS    0H                                                  0090
*         GENERATE CODE;                                           0090
*                                     /* STORE TODC AND COND CODE   */
            STCK STCKAREA(RBPTR)
            BZ   CCTEST
            MVI  CCODE(RBPTR),X'01'
CCTEST      EQU  *
*         IF CCODE^=0               /* IF STORE CLOCK FAILED         */
*           THEN                    /* USE ANOTHER CPU'S TOD CLK     */
         CLI   CCODE(RBPTR),0                                      0091
         BE    @RF00091                                            0091
*           DO;                                                    0092
*             RESPECIFY                                            0093
*              (PCCAPTR,                                           0093
*               R6,                                                0093
*               R11,                                               0093
*               R12,                                               0093
*               SLOTCNT,                                           0093
*               R14,                                               0093
*               R15) RSTD;                                         0093
*             CALL OTHERCLK;        /* GET TIME FROM OTHER CPU       */
         BAL   @14,OTHERCLK                                        0094
*             RESPECIFY                                            0095
*              (PCCAPTR,                                           0095
*               R6,                                                0095
*               R11,                                               0095
*               R12,                                               0095
*               SLOTCNT,                                           0095
*               R14,                                               0095
*               R15) UNRSTD;                                       0095
*           END;                                                   0096
*         DATE=CVTDATE;             /* GET CURRENT DATE              */
@RF00091 MVC   DATE(4,RBPTR),CVTDATE(CVTREG)                       0097
*         TZ=CVTTZ;                 /* GET CURRENT TIME ZONE         */
         L     @14,CVTTZ(,CVTREG)                                  0098
         ST    @14,TZ(,RBPTR)                                      0098
*         RESPECIFY                                                0099
*          (R6,                                                    0099
*           R7,                                                    0099
*           R14) RSTD;                                             0099
*         R6=DAYLH;                                                0100
         L     R6,DAYLH                                            0100
*         R7=DAYRH;                                                0101
         L     R7,DAYRH                                            0101
*         R14=CVTTPC;               /* LOCAL TIME=                 0102
*                                      (TODC+24HRS)-MNIGHT           */
         L     R14,CVTTPC(,CVTREG)                                 0102
*         GENERATE REFS(MNIGHTLH,MNIGHTRH);                        0103
*                                           /* GET LOCAL TIME      */
            AL    R7,WORKRH(RBPTR)
            BC    12,ADDLEFT1                *
            AL    R6,ONE
ADDLEFT1    AL    R6,WORKLH(RBPTR)
            SL    R7,MNIGHTRH(R14)
            BC    11,SUBLEFT1                *
            BCTR  R6,0
SUBLEFT1    SL    R6,MNIGHTLH(R14)
*         TIMELH=R6;                /* SAVE THE CURRENT TIME         */
         ST    R6,TIMELH(,RBPTR)                                   0104
*         TIMERH=R7;                /* DO                            */
         ST    R7,TIMERH(,RBPTR)                                   0105
*         RESPECIFY                                                0106
*          (R6,                                                    0106
*           R7,                                                    0106
*           R14) UNRSTD;                                           0106
*       END;                                                       0107
@DE00089 CLI   CCODE(RBPTR),0                                      0107
         BNE   @DC00089                                            0107
         CLC   DATE(4,RBPTR),CVTDATE(CVTREG)                       0107
         BNE   @DL00089                                            0107
         TM    TIME(RBPTR),B'10000000'                             0107
         BO    @DL00089                                            0107
         L     @14,DAYLH                                           0107
         L     @12,TIMELH(,RBPTR)                                  0107
         CLR   @12,@14                                             0107
         BH    @DL00089                                            0107
         CLR   @12,@14                                             0107
         BNE   @DC00089                                            0107
         CLC   TIMERH(4,RBPTR),DAYRH                               0107
         BH    @DL00089                                            0107
@DC00089 DS    0H                                                  0108
*     END;                          /*                       @ZA11878*/
*   XSAERRET='0'B;                  /* SAVE ERRET SPECIFICATION      */
@RC00079 NI    XSAERRET(RBPTR),B'11101111'                         0109
*   IF SAVR(2,26:26)='1'B           /* IF ERRET IS SPECIFIED         */
*     THEN                          /* SET XSAERRET TO ONE.          */
         TM    SAVR+7(RBPTR),B'01000000'                           0110
         BNO   @RF00110                                            0110
*     XSAERRET='1'B;                                               0111
         OI    XSAERRET(RBPTR),B'00010000'                         0111
*   IF CCODE^=0                     /* IF STCK CANNOT BE DONE        */
*     THEN                          /* SET RETCODE AND EXIT          */
@RF00110 CLI   CCODE(RBPTR),0                                      0112
         BE    @RF00112                                            0112
*     RETCODE=8;                                                   0113
         LA    RETCODE,8                                           0113
*   ELSE                            /* IF STCK WAS SUCCESSFUL,       */
*     DO;                           /* CONTINUE PROCESSING           */
         B     @RC00112                                            0114
@RF00112 DS    0H                                                  0115
*       IF SAVR(2,29:32)='4'X       /* IF 'STCK' WAS SPECIFIED       */
*         THEN                      /* PUT RESULTS INTO AREA         */
         TM    SAVR+7(RBPTR),B'00000100'                           0115
         BNO   @RF00115                                            0115
         TM    SAVR+7(RBPTR),B'00001011'                           0115
         BNZ   @RF00115                                            0115
*         DO;                                                      0116
*           IF RBLINK->PROTKEY/16>7 THEN/* IF CALLER HAS PROBLEM   0117
*                                      PROGRAM PROTECT KEY   @Z30KPYA*/
         L     @14,RBLINK(,RBPTR)                                  0117
         SLR   @12,@12                                             0117
         IC    @12,PROTKEY(,@14)                                   0117
         SRL   @12,4                                               0117
         C     @12,@CF01430                                        0117
         BNH   @RF00117                                            0117
*             DO;                   /* VALIDITY CK RETURN AREA FOR 0118
*                                      STORAGE KEY           @Z30KPYA*/
*               RFY                                                0119
*                (R1,                                              0119
*                 R2,                                              0119
*                 R11,                                             0119
*                 R12,                                             0119
*                 R13,                                             0119
*                 R14) RSTD;        /*                       @Z30KPYA*/
*               GEN CODE REFS(PSALITA,FLC);                        0120
*                                       /*GET LOCAL LOCK @Z30KPYA*/
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,               @Z30KPYA**
               RELATED=('VALIDITY CK INTF',(IEAVRT01,(NONE))) @Z30KPYA
*               R1=ADDR(AREA);      /* @ FIRST WORD TO CK    @Z30KPYA*/
         L     @10,RESLTPTR(,RBPTR)                                0121
         LR    R1,@10                                              0121
*               R2=ADDR(AREA)+K4;   /* @ LAST WORD TO CK     @Z30KPYA*/
         AL    @10,@CF00044                                        0122
         LR    R2,@10                                              0122
*               CALL VALIDCHK;      /* BR TO VALIDITY CHK ROUTINE  0123
*                                                            @Z30KPYA*/
         L     @15,CVT0VL00(,CVTREG)                               0123
         BALR  @14,@15                                             0123
*               GEN CODE SETS(R14,CCODE) REFS(RBPTR);              0124
*                                                  /* @Z30KPYA*/
         BALR  R14,0                  GET PSW COND CODE       @Z30KPYA
         STCM  R14,8,CCODE(RBPTR)     SAVE IT IN XSA OF SVRB  @Z30KPYA
*               IF CC='00'B THEN    /* VALIDITY CK OK?       @Z30KPYA*/
         TM    CC(RBPTR),B'00110000'                               0125
         BNZ   @RF00125                                            0125
*                 DO;               /* YES                   @Z30KPYA*/
*                   AREA=STCKAREA;  /* PUT VALUE IN USER AREA      0127
*                                                            @Z30KPYA*/
         L     @10,RESLTPTR(,RBPTR)                                0127
         MVC   AREA(8,@10),STCKAREA(RBPTR)                         0127
*                   RETCODE=0;      /* INDICATE ALL IS WELL  @Z30KPYA*/
         SLR   RETCODE,RETCODE                                     0128
*                 END;              /*                       @Z30KPYA*/
*               ELSE                /* VALIDITY CK FAILED    @Z30KPYA*/
*                 RETCODE=12;       /* 10B ABEND NEEDED      @Z30KPYA*/
         B     @RC00125                                            0130
@RF00125 LA    RETCODE,12                                          0130
*               GEN CODE REFS(PSALITA,FLC);                        0131
@RC00125 DS    0H                                                  0131
*                                        /*REL LOCAL LOCK @Z30KPYA*/
         SETLOCK RELEASE,TYPE=LOCAL,                          @Z30KPYA**
               RELATED=('VALIDITY CK INTF',(IEAVRT01,(NONE))) @Z30KPYA
*               RFY                                                0132
*                (R1,                                              0132
*                 R2,                                              0132
*                 R11,                                             0132
*                 R12,                                             0132
*                 R13,                                             0132
*                 R14) UNRSTD;      /*                       @Z30KPYA*/
*             END;                  /*                       @Z30KPYA*/
*           ELSE                    /* NO VALIDITY CK NEEDED @Z30KPYA*/
*             AREA=STCKAREA;        /* PUT VALUE IN USER AREA      0134
*                                                            @Z30KPYA*/
         B     @RC00117                                            0134
@RF00117 L     @14,RESLTPTR(,RBPTR)                                0134
         MVC   AREA(8,@14),STCKAREA(RBPTR)                         0134
*           IF XSACLKNT^='1'B THEN  /* IF CLOCKS INITIALIZED @ZA11878*/
@RC00117 TM    XSACLKNT(RBPTR),B'00000100'                         0135
         BO    @RF00135                                            0135
*             DO;                   /* SET OUTPUT VALUES     @ZA11878*/
*               R0=SAVR(1);         /* RETURN THE INPUT VALUE IN R0
*                                                            @ZA11878*/
         L     R0,SAVR(,RBPTR)                                     0137
*               DATE=SAVR(2);       /* RETURN THE INPUT VALUE IN R1
*                                                            @ZA11878*/
         MVC   DATE(4,RBPTR),SAVR+4(RBPTR)                         0138
*             END;                  /*                       @ZA11878*/
*           ELSE                    /* CLOCKS NOT INITIALIZED      0140
*                                                            @ZA11878*/
*             R0=0;                 /* RETURN A TIME OF 0    @ZA11878*/
         B     @RC00135                                            0140
@RF00135 SLR   R0,R0                                               0140
*         END;                                                     0141
*       ELSE                        /* HERE IF 'STCK' NOT SPEC.      */
*         DO;                                                      0142
         B     @RC00115                                            0142
@RF00115 DS    0H                                                  0143
*           IF SAVR(2,25:25)='1'B   /* IF 'GMT' WAS SPECIFIED        */
*             THEN                  /* SUBTRACT OUT TZ CONSTANT      */
         TM    SAVR+7(RBPTR),B'10000000'                           0143
         BNO   @RF00143                                            0143
*             DO;                                                  0144
*               TIMELHA=TIMELHA-TZ; /* TIME NOW HAS GMT              */
         L     @14,TIMELHA(,RBPTR)                                 0145
         SL    @14,TZ(,RBPTR)                                      0145
         ST    @14,TIMELHA(,RBPTR)                                 0145
*               IF TIME(1:1)='1'B×  /* IF TIME IS LESS               */
*                   (TIMELH>DAYLH×  /* THAN ZERO OR IF               */
*                   (TIMELH=DAYLH&  /* GREATER THAN OR               */
*                   TIMERH>DAYRH))  /* EQUAL TO 24 HRS               */
*                 THEN              /* ADJUST THE GMT.               */
         TM    TIME(RBPTR),B'10000000'                             0146
         BO    @RT00146                                            0146
         L     @14,DAYLH                                           0146
         L     @12,TIMELH(,RBPTR)                                  0146
         CLR   @12,@14                                             0146
         BH    @RT00146                                            0146
         CLR   @12,@14                                             0146
         BNE   @RF00146                                            0146
         CLC   TIMERH(4,RBPTR),DAYRH                               0146
         BNH   @RF00146                                            0146
@RT00146 DS    0H                                                  0147
*                 DO;                                              0147
*                   RESPECIFY                                      0148
*                    (DAY,                                         0148
*                     YEAR) RSTD;                                  0148
*                   WORKLH=0;                                      0149
         SLR   @14,@14                                             0149
         ST    @14,WORKLH(,RBPTR)                                  0149
*                   WORKRH=CVTDATE;                                0150
         L     @14,CVTDATE(,CVTREG)                                0150
         ST    @14,WORKRH(,RBPTR)                                  0150
*                   GENERATE        /* CONV DATE TO BIN              */
*                       (CVB YEAR,STCKAREA(RBPTR));                0151
         CVB YEAR,STCKAREA(RBPTR)
*                   DAY=YEAR//1000; /* GET DDD PORTION               */
         LA    @14,1000                                            0152
         LR    @00,YEAR                                            0152
         SRDA  @00,32                                              0152
         DR    @00,@14                                             0152
         LR    DAY,@00                                             0152
*                   YEAR=YEAR/1000; /* GET YEAR PORTION              */
         LR    @00,YEAR                                            0153
         SRDA  @00,32                                              0153
         DR    @00,@14                                             0153
         LR    YEAR,@01                                            0153
*                   IF TIME(1:1)='1'B/* IF GMT LT ZERO               */
*                     THEN          /* ADD A DAY TO TIME AND TAKE  0154
*                                      FROM DDD                      */
         TM    TIME(RBPTR),B'10000000'                             0154
         BNO   @RF00154                                            0154
*                     DO;                                          0155
*                       RESPECIFY                                  0156
*                        (R6,                                      0156
*                         R7) RSTD;                                0156
*                       R6=TIMELH;                                 0157
         L     R6,TIMELH(,RBPTR)                                   0157
*                       R7=TIMERH;                                 0158
         L     R7,TIMERH(,RBPTR)                                   0158
*                       GENERATE    /* TIME=TIME+24 HRS              */
*                           REFS(DAYLH,DAYRH);                     0159
                               AL   R7,DAYRH
                               BC   12,ADDLEFT2
                               AL   R6,ONE
ADDLEFT2                       AL   R6,DAYLH
*                       TIMELH=R6;                                 0160
         ST    R6,TIMELH(,RBPTR)                                   0160
*                       TIMERH=R7;                                 0161
         ST    R7,TIMERH(,RBPTR)                                   0161
*                       IF DAY^=1   /* IF NOT JANUARY 1              */
*                         THEN      /* SUBTRACT OUT DAY              */
         C     DAY,@CF00067                                        0162
         BE    @RF00162                                            0162
*                         DAY=DAY-1;                               0163
         BCTR  DAY,0                                               0163
*                       ELSE        /* IF JANUARY 1                  */
*                         DO;       /* GO BACK TO LAST               */
         B     @RC00162                                            0164
@RF00162 DS    0H                                                  0165
*                           YEAR=YEAR-1;/* DAY OF LAST YEAR          */
         BCTR  YEAR,0                                              0165
*                           WORKRH=YEAR;                           0166
         ST    YEAR,WORKRH(,RBPTR)                                 0166
*                           IF STCKAREA(63:64)/* IF LEAP YEAR        */
*                               ='00'B THEN/* RESET DDD TO 366       */
         TM    STCKAREA+7(RBPTR),B'00000011'                       0167
         BNZ   @RF00167                                            0167
*                             DAY=366;                             0168
         LA    DAY,366                                             0168
*                           ELSE    /* IF NOT LEAP YEAR              */
*                             DAY=365;/* RESET TO DAY 365            */
         B     @RC00167                                            0169
@RF00167 LA    DAY,365                                             0169
*                         END;                                     0170
*                     END;                                         0171
*                   ELSE            /* IF GMT GT 24 HRS              */
*                     DO;           /* SUB A DAY FROM TIME AND ADD IT
*                                      TO DDD                        */
         B     @RC00154                                            0172
@RF00154 DS    0H                                                  0173
*                       R6=TIMELH;                                 0173
         L     R6,TIMELH(,RBPTR)                                   0173
*                       R7=TIMERH;                                 0174
         L     R7,TIMERH(,RBPTR)                                   0174
*                       GENERATE    /* TIME=TIME-24 HRS              */
*                           REFS(DAYLH,DAYRH);                     0175
                               SL   R7,DAYRH
                               BC   11,SUBLEFT2
                               BCTR R6,0
SUBLEFT2                       SL   R6,DAYLH
*                       TIMELH=R6;                                 0176
         ST    R6,TIMELH(,RBPTR)                                   0176
*                       TIMERH=R7;                                 0177
         ST    R7,TIMERH(,RBPTR)                                   0177
*                       IF DAY<365  /* IF NOT YEAR END,              */
*                         THEN      /* ADD IN A DAY.                 */
         C     DAY,@CF02060                                        0178
         BNL   @RF00178                                            0178
*                         DAY=DAY+1;                               0179
         AL    DAY,@CF00067                                        0179
*                       ELSE        /* DAY= 365 OR 366               */
*                         DO;                                      0180
         B     @RC00178                                            0180
@RF00178 DS    0H                                                  0181
*                           WORKRH=YEAR;                           0181
         ST    YEAR,WORKRH(,RBPTR)                                 0181
*                           IF STCKAREA(63:64)/* IF LEAPYEAR         */
*                               ='00'B&/* AND DAY IS                 */
*                               DAY=365/* 365                        */
*                             THEN  /* NOT YEAR END                  */
         TM    STCKAREA+7(RBPTR),B'00000011'                       0182
         BNZ   @RF00182                                            0182
         C     DAY,@CF02060                                        0182
         BNE   @RF00182                                            0182
*                             DAY=DAY+1;/* ADD 1 TO DDD              */
         AL    DAY,@CF00067                                        0183
*                           ELSE    /* HERE IF ITS                   */
*                             DO;   /* YEAR END                      */
         B     @RC00182                                            0184
@RF00182 DS    0H                                                  0185
*                               YEAR=YEAR+1;/* ADD 1 TO YY           */
         LA    @14,1                                               0185
         ALR   YEAR,@14                                            0185
*                               DAY=1;/* SET DDD TO 1                */
         LR    DAY,@14                                             0186
*                             END;                                 0187
*                         END;                                     0188
@RC00182 DS    0H                                                  0189
*                       RESPECIFY                                  0189
*                        (R6,                                      0189
*                         R7) UNRSTD;                              0189
@RC00178 DS    0H                                                  0190
*                     END;                                         0190
*                   YEAR=(YEAR*1000)+DAY;/* NOW, CONVERT NEW VALUE 0191
*                                      BACK TO                       */
@RC00154 LR    @14,YEAR                                            0191
         MH    @14,@CH02057                                        0191
         ALR   @14,DAY                                             0191
         LR    YEAR,@14                                            0191
*                   GENERATE        /* CVTDATE FORMAT                */
*                       (CVD YEAR,STCKAREA(RBPTR));                0192
         CVD YEAR,STCKAREA(RBPTR)
*                   DATE=WORKRH;    /* 00YYDDD PKD DEC               */
         L     @14,WORKRH(,RBPTR)                                  0193
         ST    @14,DATE(,RBPTR)                                    0193
*                   RESPECIFY                                      0194
*                    (DAY,                                         0194
*                     YEAR) UNRSTD;                                0194
*                 END;                                             0195
*             END;                                                 0196
@RF00146 DS    0H                                                  0197
*           IF SAVR(2,29:32)='3'X   /* IF MIC REQUEST                */
*             THEN                  /* STORE TIME INTO AREA          */
@RF00143 TM    SAVR+7(RBPTR),B'00000011'                           0197
         BNO   @RF00197                                            0197
         TM    SAVR+7(RBPTR),B'00001100'                           0197
         BNZ   @RF00197                                            0197
*             DO;                                                  0198
*               IF RBLINK->PROTKEY/16>7 THEN/* IF CALLER HAS PROBLEM
*                                      PROGRAM PROTECT KEY   @Z30KPYA*/
         L     @14,RBLINK(,RBPTR)                                  0199
         SLR   @12,@12                                             0199
         IC    @12,PROTKEY(,@14)                                   0199
         SRL   @12,4                                               0199
         C     @12,@CF01430                                        0199
         BNH   @RF00199                                            0199
*                 DO;               /* VALIDITY CK RETURN AREA FOR 0200
*                                      STORAGE KEY           @Z30KPYA*/
*                   RFY                                            0201
*                    (R1,                                          0201
*                     R2,                                          0201
*                     R11,                                         0201
*                     R12,                                         0201
*                     R13,                                         0201
*                     R14) RSTD;    /*                       @Z30KPYA*/
*                   GEN CODE REFS(PSALITA,FLC);                    0202
*                                       /*GET LOCAL LOCK @Z30KPYA*/
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,               @Z30KPYA**
               RELATED=('VALIDITY CK INTF',(IEAVRT01,(NONE))) @Z30KPYA
*                   R1=ADDR(AREA);  /* @ FIRST WORD TO CK    @Z30KPYA*/
         L     @10,RESLTPTR(,RBPTR)                                0203
         LR    R1,@10                                              0203
*                   R2=ADDR(AREA)+K4;/* @ ENDING WORD TO CK  @Z30KPYA*/
         AL    @10,@CF00044                                        0204
         LR    R2,@10                                              0204
*                   CALL VALIDCHK;  /* BR TO VALIDITY CHK ROUTINE  0205
*                                                            @Z30KPYA*/
         L     @15,CVT0VL00(,CVTREG)                               0205
         BALR  @14,@15                                             0205
*                   GEN CODE SETS(R14,CCODE) REFS(RBPTR);          0206
*                                                  /* @Z30KPYA*/
         BALR  R14,0                  GET PSW COND CODE       @Z30KPYA
         STCM  R14,8,CCODE(RBPTR)     SAVE IT IN XSA OF SVRB  @Z30KPYA
*                   IF CC='00'B THEN/* VALIDITY CK OK?       @Z30KPYA*/
         TM    CC(RBPTR),B'00110000'                               0207
         BNZ   @RF00207                                            0207
*                     DO;           /* YES                   @Z30KPYA*/
*                       AREA=TIME;  /* PUT VALUE IN USER AREA      0209
*                                                            @Z30KPYA*/
         L     @10,RESLTPTR(,RBPTR)                                0209
         MVC   AREA(8,@10),TIME(RBPTR)                             0209
*                       RETCODE=0;  /* INDICATE ALL IS WELL  @Z30KPYA*/
         SLR   RETCODE,RETCODE                                     0210
*                     END;          /*                       @Z30KPYA*/
*                   ELSE            /* VALIDITY CK FAILED    @Z30KPYA*/
*                     RETCODE=12;   /* 10B ABEND NEEDED      @Z30KPYA*/
         B     @RC00207                                            0212
@RF00207 LA    RETCODE,12                                          0212
*                   GEN CODE REFS(PSALITA,FLC);                    0213
@RC00207 DS    0H                                                  0213
*                                        /*REL LOCAL LOCK @Z30KPYA*/
         SETLOCK RELEASE,TYPE=LOCAL,                          @Z30KPYA**
               RELATED=('VALIDITY CK INTF',(IEAVRT01,(NONE))) @Z30KPYA
*                   RFY                                            0214
*                    (R1,                                          0214
*                     R2,                                          0214
*                     R11,                                         0214
*                     R12,                                         0214
*                     R13,                                         0214
*                     R14) UNRSTD;  /*                       @Z30KPYA*/
*                 END;              /*                       @Z30KPYA*/
*               ELSE                /* NO VALIDITY CK NEEDED @Z30KPYA*/
*                 AREA=TIME;        /* PLACE VALUE IN USER AREA    0216
*                                                            @Z30KPYA*/
         B     @RC00199                                            0216
@RF00199 L     @14,RESLTPTR(,RBPTR)                                0216
         MVC   AREA(8,@14),TIME(RBPTR)                             0216
*               IF XSACLKNT='1'B THEN/* IF CLOCKS NOT INITIALIZED  0217
*                                                            @ZA11878*/
@RC00199 TM    XSACLKNT(RBPTR),B'00000100'                         0217
         BNO   @RF00217                                            0217
*                 R0=0;             /* RETURN A TIME OF 0    @ZA11878*/
         SLR   R0,R0                                               0218
*               ELSE                /* CLOCKS INITIALIZED    @ZA11878*/
*                 R0=SAVR(1);       /* RETURN THE INPUT VALUE      0219
*                                                            @ZA11878*/
         B     @RC00217                                            0219
@RF00217 L     R0,SAVR(,RBPTR)                                     0219
*             END;                                                 0220
*           ELSE                    /* HERE IF NOT MIC REQUEST       */
*             DO;                                                  0221
         B     @RC00197                                            0221
@RF00197 DS    0H                                                  0222
*               RESPECIFY                                          0222
*                (R6,                                              0222
*                 R7) RSTD;                                        0222
*               R6=TIMELH;                                         0223
         L     R6,TIMELH(,RBPTR)                                   0223
*               R7=TIMERH;                                         0224
         L     R7,TIMERH(,RBPTR)                                   0224
*               IF SAVR(2,29:32)='0'X/* IF TU REQUESTED,             */
*                 THEN              /* CONVERT TO TIMER UNITS        */
         TM    SAVR+7(RBPTR),B'00001111'                           0225
         BNZ   @RF00225                                            0225
*                 GENERATE REFS(KTU2);                             0226
                            SLDL  R6,13
                            D     R6,KTU2
                            SLL     R7,1
*               ELSE                /* HERE IF BIN OR DEC REQUEST    */
*                 DO;               /* CONVERT TO                    */
         B     @RC00225                                            0227
@RF00225 DS    0H                                                  0228
*                   GENERATE        /* HUNDREDTHS OF SECONDS         */
*                       REFS(K10000)(D  R6,K10000);                0228
         D  R6,K10000
*                   IF SAVR(2,29:32)='2'X/* IF DEC REQSTD            */
*                     THEN          /* CONV TO HHMMSSTH              */
         TM    SAVR+7(RBPTR),B'00000010'                           0229
         BNO   @RF00229                                            0229
         TM    SAVR+7(RBPTR),B'00001101'                           0229
         BNZ   @RF00229                                            0229
*                     DO;                                          0230
*                       RESPECIFY                                  0231
*                        (R0,                                      0231
*                         R1,                                      0231
*                         R2,                                      0231
*                         R13,                                     0231
*                         R14) RSTD;                               0231
*                       GENERATE;                                  0232
                                LA   R14,32      SHIFT COUNT
                                LA   R13,12      SET DIVISOR MASK
                                LA   R2,10       INITIAL DIVISOR
DECLOOP                         SR   R6,R6       CLEAR REMAINDER
                                DR   R6,R2       REMAINDER = DEC DIGIT
                                LR   R0,R6       SAVE THE DIGIT
                                SRDL R0,4        IN REGISTER 1
                                SH   R14,FOUR    ADJUST SHIFT COUNT
                                LTR  R7,R7       IF QUOTIENT 0 THEN
                                BZ   CONVEND     DONE. GO EXIT.
                                CL   R14,TWENTY4    CHANGE DIVISOR
                                BNL  DECLOOP        IF COUNT<24 FROM
                                XR   R2,R13         10 T0 6 T0 10 ETC
                                B    DECLOOP     LOOP
CONVEND                         SRL  R1,0(R14)   HERE WHEN DONE
                                LR   R7,R1       HHMMSSTH IN R7
*                       RESPECIFY                                  0233
*                        (R1,                                      0233
*                         R2,                                      0233
*                         R13,                                     0233
*                         R14) UNRSTD;                             0233
*                     END;                                         0234
*                 END;                                             0235
@RF00229 DS    0H                                                  0236
*               R0=R7;              /* TIME TO OUTPUT REG 0  @ZA11878*/
@RC00225 LR    R0,R7                                               0236
*               RETCODE=0;          /* INDICATE THAT ALL'S WELL      */
         SLR   RETCODE,RETCODE                                     0237
*             END;                                                 0238
*         END;                                                     0239
@RC00197 DS    0H                                                  0240
*     END;                                                         0240
@RC00115 DS    0H                                                  0241
*   RESPECIFY                                                      0241
*    (R1,                                                          0241
*     RETADDR) RSTD;                                               0241
@RC00112 DS    0H                                                  0242
*   R1=DATE;                        /* DATE TO OUTPUT REG 1  @ZA11878*/
         L     R1,DATE(,RBPTR)                                     0242
*   RESPECIFY                                                      0243
*    (R6,                                                          0243
*     R7) UNRSTD;                                                  0243
*   RETADDR=SAVR(3);                /* DO                            */
         L     RETADDR,SAVR+8(,RBPTR)                              0244
*   IF RETCODE^=0 THEN              /* IF POTENTIAL ABEND    @Z30KPYA*/
         LTR   RETCODE,RETCODE                                     0245
         BZ    @RF00245                                            0245
*     DO;                           /*                       @Z30KPYA*/
*       IF RETCODE=12 THEN          /* 10B ABEND IF RETCODE=12     0247
*                                                            @Z30KPYA*/
         C     RETCODE,@CF00986                                    0247
         BNE   @RF00247                                            0247
*         GEN CODE(ABEND X'10B',,,SYSTEM);/*                 @Z30KPYA*/
         ABEND X'10B',,,SYSTEM
*       ELSE                        /* RETCODE NOT 0 OR 12   @Z30KPYA*/
*         IF XSAERRET='0'B THEN     /* 20B ABEND IF RETCODE=8 AND  0249
*                                      ERRET NOT SPECIFIED   @Z30KPYA*/
         B     @RC00247                                            0249
@RF00247 TM    XSAERRET(RBPTR),B'00010000'                         0249
         BNZ   @RF00249                                            0249
*           GEN CODE(ABEND X'20B',,,SYSTEM);/*               @Z30KPYA*/
         ABEND X'20B',,,SYSTEM
*     END;                          /*                       @Z30KPYA*/
*   RETURN;                         /* TIME ROUTINE EXIT POINT       */
@EL00001 DS    0H                                                  0252
@EF00001 DS    0H                                                  0252
@ER00001 BR    @14                                                 0252
*   RESPECIFY                                                      0253
*    (R0,                                                          0253
*     R1,                                                          0253
*     RETADDR,                                                     0253
*     RETCODE) UNRSTD;                                             0253
*                                                                  0254
*/*  *****************************************************************/
*/*                                                                  */
*/*                      OTHERCLK SUBROUTINE                         */
*/*                                                                  */
*/*  *****************************************************************/
*/*                                                                  */
*/*        FUNCTION  - SEARCHES SYSTEM FOR A CPU WITH A GOOD TIME    */
*/*                    OF DAY CLOCK AND THEN GETS THAT CPU TO        */
*/*                    STORE ITS CLOCK INTO STCKAREA AND THE         */
*/*                    CONDITION CODE INTO CCODE.                    */
*/*                                                                  */
*/*        INPUT     - 1. PROTECT KEY ZERO                           */
*/*                    2. SUPERVISOR STATE                           */
*/*                    3. RBPTR POINTING TO THE SVRB                 */
*/*                    4. R14= RETURN ADDRESS                        */
*/*                                                                  */
*/*        ENVIRONMENT                                               */
*/*        CHANGES   - NO REGISTERS SAVED                            */
*/*                                                                  */
*/*        OTHER RTNS                                                */
*/*        USED      - RISGNL SHOULDER TAP                           */
*/*                    PAGE FIX AND FREE                             */
*/*                    WAIT                                          */
*/*                                                                  */
*/*        CALLERS   - TIME MAINLINE                                 */
*/*                                                                  */
*/*        OUTPUT    - IF SUCCESSFUL, TOD IN STCKAREA AND CCODE=0    */
*/*                    IF UNSUCCESSFUL, CCODE^=0                     */
*/*                                                                  */
*/*  *****************************************************************/
*                                                                  0254
*OTHERCLK:                                                         0254
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG,NOENTREG);               0254
OTHERCLK DS    0H                                                  0255
*   RESPECIFY                                                      0255
*    (PCCAPTR,                                                     0255
*     R6,                                                          0255
*     R11,                                                         0255
*     R12,                                                         0255
*     SLOTCNT,                                                     0255
*     R14) RSTD;                                                   0255
*   R6=R14;                         /* SAVE RETURN ADDRESS           */
         LR    R6,R14                                              0256
*   CCODE='FF'X;                    /* INITIALIZE CCODE^=0           */
         MVI   CCODE(RBPTR),X'FF'                                  0257
*   R11=ADDR(OTHERCLK);             /* SET REG FOR PAGE FIX INTF     */
         LA    R11,OTHERCLK                                        0258
*   R12=ADDR(TIMEEND);              /* SET REG FOR PAGE FIX INTF     */
         LA    R12,TIMEEND                                         0259
*   R13=ADDR(PGFIXECB);             /* SET REG FOR PAGE FIX INTF     */
         LA    R13,PGFIXECB(,RBPTR)                                0260
*   PGFIXECB=0;                     /* INITIALIZE PAGE FIX ECB       */
         SLR   @15,@15                                             0261
         ST    @15,PGFIXECB(,RBPTR)                                0261
*   GENERATE;                                                      0262
         PGFIX   R,A=(R11),EA=(R12),ECB=(R13),LONG=N
*   IF RETCODE=8 THEN               /* IF PAGE FIX IS PROCE  @OZ07159*/
         C     RETCODE,@CF00036                                    0263
         BNE   @RF00263                                            0263
*     DO;                           /* THEN WAIT             @OZ07159*/
*       R13=ADDR(PGFIXECB);         /* SET REG FOR WAIT              */
         LA    R13,PGFIXECB(,RBPTR)                                0265
*       GENERATE;                                                  0266
         WAIT    1,ECB=(R13)
*     END;                          /*                       @OZ07159*/
*   GENERATE REFS(PSALITA,FLC);                                    0268
@RF00263 DS    0H                                                  0268
         SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,                        CC
               RELATED=('tpccc and tpcwork',IEAVRT01(NONE))
*   R11=ADDR(TPC);                                                 0269
         L     R11,TPCPTR(,CVTREG)                                 0269
*   R11->TPCCC='FF'X;               /* INITIALIZE TPCCC TO NON ZERO  */
         MVI   TPCCC(R11),X'FF'                                    0270
*   DO SLOTCNT=DIM(PCCAT00P) TO 1   /* SCAN PCCAVT UNTIL ENTRIES     */
*         BY-1 WHILE CCODE^=0;      /* EXHAUSTED OR UNTIL A        0271
*                                      SUCCESSFUL STCK (CCODE=0)     */
         LA    SLOTCNT,16                                          0271
@DL00271 CLI   CCODE(RBPTR),0                                      0271
         BE    @DC00271                                            0271
*     PCCAPTR=PCCAT00P(SLOTCNT);    /* GET PTR TO PCCA ENTRY         */
         LR    @15,SLOTCNT                                         0272
         SLA   @15,2                                               0272
         L     @10,CVTPCCAT(,CVTREG)                               0272
         AL    @10,@CF02084                                        0272
         L     PCCAPTR,PCCAT00P(@15,@10)                           0272
*     IF PCCAPTR^=0&                /* IF SLOT REPRESENTS A PCCA     */
*         PCCANUTD='0'B             /* ENTRY WITH GOOD TOD CLK       */
*       THEN                        /* SHOULDER TAP THAT CPU         */
         LTR   PCCAPTR,PCCAPTR                                     0273
         BZ    @RF00273                                            0273
         TM    PCCANUTD(PCCAPTR),B'10000000'                       0273
         BNZ   @RF00273                                            0273
*       DO;                                                        0274
*         R12=ADDR(IEAVRTME);                                      0275
         LA    R12,IEAVRTME                                        0275
*         GENERATE REFS(CVT,CVTIPCRI)                              0276
*             (RISGNL SERIAL,CPU=(1),PARM=(11),EP=(12));           0276
         RISGNL SERIAL,CPU=(1),PARM=(11),EP=(12)
*         STCKAREA=TPCWORK;         /* GET TODC VALUE (IF ANY)       */
         L     @15,TPCPTR(,CVTREG)                                 0277
         MVC   STCKAREA(8,RBPTR),TPCWORK(@15)                      0277
*         CCODE=TPCCC;              /* GET RESULTING CC (IF ANY)     */
         MVC   CCODE(1,RBPTR),TPCCC(@15)                           0278
*       END;                                                       0279
*   END;                                                           0280
@RF00273 BCTR  SLOTCNT,0                                           0280
         LTR   SLOTCNT,SLOTCNT                                     0280
         BP    @DL00271                                            0280
@DC00271 DS    0H                                                  0281
*   GENERATE;                                                      0281
         SETLOCK RELEASE,TYPE=DISP,                                   CC
               RELATED=('tpccc and tpcwork',IEAVRT01(NONE))
*   R11=ADDR(OTHERCLK);             /* SET REG FOR PAGE FREE INTF    */
         LA    R11,OTHERCLK                                        0282
*   R12=ADDR(TIMEEND);              /* SET REG FOR PAGE FREE INTF    */
         LA    R12,TIMEEND                                         0283
*   GENERATE;                                                      0284
         PGFREE  R,A=(R11),EA=(R12)
*   R14=R6;                         /* RESTORE RETURN ADDRESS        */
         LR    R14,R6                                              0285
*   RESPECIFY                                                      0286
*    (PCCAPTR,                                                     0286
*     R6,                                                          0286
*     R11,                                                         0286
*     R12,                                                         0286
*     SLOTCNT,                                                     0286
*     R14) UNRSTD;                                                 0286
*   END;                            /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0287
@EF00002 DS    0H                                                  0287
@ER00002 BR    @14                                                 0287
*                                                                  0288
*/*  *****************************************************************/
*/*                                                                  */
*/*                IEAVRTME - ROUTINE FOR SHOULDER TAPPED CPU        */
*/*                                                                  */
*/*  *****************************************************************/
*/*                                                                  */
*/*               FUNCTION  - STORES TOD CLOCK INTO TPCWORK AND THE  */
*/*                           RESULTING CONDITION CODE INTO TPCCC.   */
*/*                                                                  */
*/*               INPUT     - 1. PROTECT KEY ZERO                    */
*/*                           2. SUPERVISOR STATE                    */
*/*                           3. R1 POINTING TO THE TPC              */
*/*                           4. RETURN ADDRESS IN R14               */
*/*                                                                  */
*/*               ENVIRONMENT                                        */
*/*               CHANGES   - NO REGISTERS SAVED                     */
*/*                                                                  */
*/*               OTHER RTNS                                         */
*/*               USED      - NONE                                   */
*/*                                                                  */
*/*               CALLERS   - EMERGENCY SIGNAL SLIH                  */
*/*                                                                  */
*/*               OUTPUT    - 1. TPCWORK SET WITH RESULTS OF A STCK  */
*/*                           2. TPCCC SET WITH THE STCK COND CODE   */
*/*                                                                  */
*/*  *****************************************************************/
*                                                                  0288
*IEAVRTME:                                                         0288
*   GENERATE CODE;                                                 0288
IEAVRTME DS    0H                                                  0288
         BALR  BASEREG,0
         USING *,BASEREG
         STCK  TPCWORK(R1)            STORE TIME OF DAY CLOCK
         MVI   TPCCC(R1),X'00'        SET CONDITION CODE TO ZERO
         BZ    EXIT                   BRANCH IF SUCCESSFUL
         MVI   TPCCC(R1),X'01'        SET CCODE^=0 OF UNSUCCESSFUL
EXIT     BR     R14                   RETURN TO ICC
*TIMEEND:                                                          0289
*   GEN(EQU *);                     /* ENDING ADDRESS FOR PGFIX/FREE
*                                                            @Z30KPYA*/
TIMEEND  EQU *
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0290
*     I031F FIXED(31) BASED,                                       0290
*     I031P PTR(31) BASED,                                         0290
*     I015F FIXED(15) BASED,                                       0290
*     I015P PTR(15) BASED,                                         0290
*     I008P PTR(8) BASED,                                          0290
*     I001C CHAR(1) BASED;                                         0290
*   END IGC0001A                                                   0291
*                                                                  0291
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCAT)                                       */
*/*%INCLUDE SYSLIB  (IHAPCCA )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IEAVVTPC)                                       */
*                                                                  0291
*       ;                                                          0291
         B     @EL00001                                            0291
@DATA    DS    0H
@CH02057 DC    H'1000'
@DATD    DSECT
         DS    0F
IGC0001A CSECT
         DS    0F
@CF00067 DC    F'1'
@CF00044 DC    F'4'
@CF01430 DC    F'7'
@CF00036 DC    F'8'
@CF00986 DC    F'12'
@CF00063 DC    F'15'
@CF02060 DC    F'365'
@CF02084 DC    F'-4'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IGC0001A CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
DAYLH    DC    A(82397)
DAYRH    DC    A((16777215+1962934273))
KTU2     DC    XL4'682AAAAB'
K10000   DC    F'40960000'
ONE      DC    F'1'
TWENTY4  DC    F'24'
FOUR     DC    H'4'
@CB02049 DC    X'FFFFFFFF'
         DS    CL2
TIMEPTCH DS    CL64
         ORG   TIMEPTCH
@NM00100 DC    16A(0)
         ORG   TIMEPTCH+64
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CVTREG   EQU   @03
PCCAPTR  EQU   @01
TCBPTR   EQU   @04
RBPTR    EQU   @05
AREAPTR  EQU   @00
CODERG   EQU   @01
DAY      EQU   @10
YEAR     EQU   @11
SLOTCNT  EQU   @13
RETADDR  EQU   @14
RETCODE  EQU   @15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R6       EQU   @06
R7       EQU   @07
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
BASEREG  EQU   @10
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CVTPTR   EQU   16
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVT0VL00 EQU   CVTMAP+24
CVTDATE  EQU   CVTMAP+56
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTTPC   EQU   CVTMAP+88
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTTZ    EQU   CVTMAP+304
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
PCCAVT   EQU   0
PCCAT00P EQU   PCCAVT
PCCA     EQU   0
PCCATMST EQU   PCCA+128
PCCATMFL EQU   PCCATMST
PCCATODE EQU   PCCATMST+1
PCCANUTD EQU   PCCATODE
PCCACCE  EQU   PCCATMST+2
PCCAINTE EQU   PCCATMST+3
PCCAEMSB EQU   PCCA+136
PCCAEMSI EQU   PCCAEMSB
PCCARISP EQU   PCCAEMSI
PCCAEMS2 EQU   PCCAEMSI+1
PCCAEMS3 EQU   PCCAEMSI+2
PCCARMSB EQU   PCCAEMSI+3
PCCAWERP EQU   PCCA+280
PCCACHPF EQU   PCCAWERP+4
PCCACHBL EQU   PCCAWERP+5
PCCACHVA EQU   PCCAWERP+6
PCCACHTS EQU   PCCAWERP+7
PCCACHS1 EQU   PCCA+288
PCCACHS2 EQU   PCCA+289
PCCACHRB EQU   PCCA+290
PCCACHF1 EQU   PCCA+308
PCCACHF2 EQU   PCCA+309
PCCACHF3 EQU   PCCA+310
PCCACHF4 EQU   PCCA+311
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBEXSAVE EQU   XRBESA
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00043 EQU   RBSECT+10
@NM00044 EQU   @NM00043
RBTRSVRB EQU   @NM00044
@NM00046 EQU   @NM00043+1
RBETXR   EQU   @NM00046
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00053 EQU   RBSECT+28
IRBEND   EQU   RBSECT+96
@NM00057 EQU   RBSECT+96
RBRSV138 EQU   @NM00057+7
RBRSV150 EQU   RBSECT+167
TPC      EQU   0
IEATPC   EQU   TPC
TPCFLGS1 EQU   IEATPC+4
TPCCC    EQU   IEATPC+7
TPCHDCCQ EQU   IEATPC+12
TPCDMTQE EQU   IEATPC+16
DFD      EQU   TPCDMTQE+4
TPCMNTQE EQU   IEATPC+40
MNIGHT   EQU   TPCMNTQE+16
MNIGHTLH EQU   MNIGHT
MNIGHTRH EQU   MNIGHT+4
TPCMFTQE EQU   IEATPC+64
IEATSELM EQU   IEATPC+88
TPCLMTQE EQU   IEATPC+112
TPCWORK  EQU   IEATPC+264
AREA     EQU   0
VALIDCHK EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTIPCRI EQU   CVTS01+408
CVTPCCAT EQU   CVTS01+416
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
TPCPTR   EQU   CVTTPC
SVRBXSA  EQU   RBEXSAVE
TIME     EQU   SVRBXSA
TIMELH   EQU   TIME
TIMELHA  EQU   TIMELH
TIMERH   EQU   TIME+4
INTV     EQU   SVRBXSA+8
SAVR     EQU   SVRBXSA+16
CCODE    EQU   SVRBXSA+29
CC       EQU   CCODE
XSAFLGS  EQU   SVRBXSA+31
XSAERRET EQU   XSAFLGS
XSACLKNT EQU   XSAFLGS
TZ       EQU   SVRBXSA+32
PGFIXECB EQU   TZ
DATE     EQU   SVRBXSA+36
STCKAREA EQU   SVRBXSA+40
WORKLH   EQU   STCKAREA
WORKRH   EQU   STCKAREA+4
RESLTPTR EQU   SAVR
CALLRPSW EQU   RBOPSW
PROTKEY  EQU   CALLRPSW+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00099 EQU   CALLRPSW+2
@NM00098 EQU   CALLRPSW
@NM00097 EQU   XSAFLGS
XSAUAREA EQU   XSAFLGS
XSAHIGH  EQU   XSAFLGS
XSATMOK  EQU   XSAFLGS
XSAMTYP  EQU   XSAFLGS
@NM00096 EQU   SVRBXSA+30
@NM00095 EQU   CCODE
@NM00094 EQU   CCODE
ERROR    EQU   SVRBXSA+28
INTVRH   EQU   INTV+4
INTVLH   EQU   INTV
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00058 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTIPCRP EQU   CVTS01+412
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
TPCCLA   EQU   IEATPC+408
TPCCKQ   EQU   IEATPC+404
TPCRSRB  EQU   IEATPC+360
TPCTCWA  EQU   IEATPC+356
TPCCRSAV EQU   IEATPC+352
TPCFRRP  EQU   IEATPC+348
TPCVPTR  EQU   IEATPC+344
TPCMISC  EQU   IEATPC+272
TPCWORKR EQU   TPCWORK+4
TPCWORKL EQU   TPCWORK
TPCSAVE2 EQU   IEATPC+200
TPCSAVE1 EQU   IEATPC+136
@NM00093 EQU   TPCLMTQE+16
@NM00092 EQU   TPCLMTQE+15
@NM00091 EQU   TPCLMTQE+14
@NM00090 EQU   TPCLMTQE+12
@NM00089 EQU   TPCLMTQE+8
@NM00088 EQU   TPCLMTQE+4
@NM00087 EQU   TPCLMTQE
@NM00086 EQU   IEATSELM+16
@NM00085 EQU   IEATSELM+15
@NM00084 EQU   IEATSELM+14
@NM00083 EQU   IEATSELM+12
@NM00082 EQU   IEATSELM+8
@NM00081 EQU   IEATSELM+4
@NM00080 EQU   IEATSELM
@NM00079 EQU   TPCMFTQE+16
@NM00078 EQU   TPCMFTQE+15
@NM00077 EQU   TPCMFTQE+14
@NM00076 EQU   TPCMFTQE+12
@NM00075 EQU   TPCMFTQE+8
@NM00074 EQU   TPCMFTQE+4
@NM00073 EQU   TPCMFTQE
@NM00072 EQU   TPCMNTQE+15
@NM00071 EQU   TPCMNTQE+14
@NM00070 EQU   TPCMNTQE+12
@NM00069 EQU   TPCMNTQE+8
@NM00068 EQU   TPCMNTQE+4
@NM00067 EQU   TPCMNTQE
@NM00066 EQU   TPCDMTQE+16
@NM00065 EQU   TPCDMTQE+15
@NM00064 EQU   TPCDMTQE+14
@NM00063 EQU   TPCDMTQE+12
@NM00062 EQU   TPCDMTQE+8
@NM00061 EQU   TPCDMTQE
TPCTZORG EQU   IEATPC+8
@NM00060 EQU   IEATPC+5
@NM00059 EQU   TPCFLGS1
TPCSYNC  EQU   TPCFLGS1
TPCABND  EQU   TPCFLGS1
TPCTPCA  EQU   IEATPC
SIRBEND  EQU   RBSECT+168
SVRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBSCBB   EQU   RBSECT+144
TIRBEND  EQU   @NM00057+8
PRBEND   EQU   @NM00057+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00057+6
RBRSV136 EQU   @NM00057+4
RBRSV135 EQU   @NM00057
@NM00056 EQU   RBSECT+32
@NM00055 EQU   @NM00053+1
@NM00054 EQU   @NM00053
RBPGMQ1  EQU   RBPGMQ+1
@NM00052 EQU   RBPGMQ
@NM00051 EQU   RBSECT+16
@NM00050 EQU   @NM00046
@NM00049 EQU   @NM00046
RBIQETP  EQU   @NM00046
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00046
@NM00048 EQU   @NM00046
@NM00047 EQU   @NM00046
RBPMSVRB EQU   @NM00044
RBATNXIT EQU   @NM00044
@NM00045 EQU   @NM00044
RBWAITP  EQU   @NM00044
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00044
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00042 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00041 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00040 EQU   RBOPSWB2
@NM00039 EQU   XRBPSW
@NM00038 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00037 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00036 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00035 EQU   XSTAB1
@NM00034 EQU   RBBASIC+8
@NM00033 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00032 EQU   RBPRFX
@NM00031 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00030 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00029 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00028 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00027 EQU   PCCA+512
PCCACAT  EQU   PCCA+384
PCCARV36 EQU   PCCA+380
PCCARV35 EQU   PCCA+378
PCCARV01 EQU   PCCA+377
PCCACPUM EQU   PCCA+376
PCCARV63 EQU   PCCA+372
PCCARV62 EQU   PCCA+368
PCCARV61 EQU   PCCA+364
PCCARV60 EQU   PCCA+360
PCCARV59 EQU   PCCA+356
PCCARV58 EQU   PCCA+352
PCCARV57 EQU   PCCA+348
PCCARV56 EQU   PCCA+344
PCCARV55 EQU   PCCA+340
PCCARV54 EQU   PCCA+336
PCCALOGA EQU   PCCA+332
PCCACHID EQU   PCCA+324
PCCACHSV EQU   PCCA+312
PCCARV79 EQU   PCCACHF4
PCCARV78 EQU   PCCACHF4
PCCARV77 EQU   PCCACHF4
PCCARV76 EQU   PCCACHF4
PCCARV75 EQU   PCCACHF4
PCCARV74 EQU   PCCACHF4
PCCARV73 EQU   PCCACHF4
PCCARV72 EQU   PCCACHF4
PCCARV71 EQU   PCCACHF3
PCCARV70 EQU   PCCACHF3
PCCARV69 EQU   PCCACHF3
PCCARV68 EQU   PCCACHF3
PCCARV67 EQU   PCCACHF3
PCCARV66 EQU   PCCACHF3
PCCARV65 EQU   PCCACHF3
PCCARV64 EQU   PCCACHF3
PCCACF28 EQU   PCCACHF2
PCCACF27 EQU   PCCACHF2
PCCACF26 EQU   PCCACHF2
PCCACF25 EQU   PCCACHF2
PCCACF24 EQU   PCCACHF2
PCCACF23 EQU   PCCACHF2
PCCACF22 EQU   PCCACHF2
PCCACF21 EQU   PCCACHF2
PCCACF18 EQU   PCCACHF1
PCCACF17 EQU   PCCACHF1
PCCACF16 EQU   PCCACHF1
PCCACF15 EQU   PCCACHF1
PCCACF14 EQU   PCCACHF1
PCCACF13 EQU   PCCACHF1
PCCACF12 EQU   PCCACHF1
PCCACF11 EQU   PCCACHF1
PCCARV05 EQU   PCCA+306
PCCACHPB EQU   PCCA+305
PCCALGP2 EQU   PCCA+304
PCCALGP1 EQU   PCCA+303
PCCALOGL EQU   PCCA+302
PCCARV80 EQU   PCCA+300
PCCACHW2 EQU   PCCA+296
PCCACHW1 EQU   PCCA+292
PCCAIOSI EQU   PCCA+291
PCCACNRB EQU   PCCACHRB
PCCACCVB EQU   PCCACHRB
PCCACSNB EQU   PCCACHRB
PCCARV52 EQU   PCCACHRB
PCCACHIB EQU   PCCACHRB
PCCACTIB EQU   PCCACHRB
PCCACINB EQU   PCCACHRB
PCCACSIB EQU   PCCACHRB
PCCARV51 EQU   PCCACHS2
PCCARV50 EQU   PCCACHS2
PCCACCRA EQU   PCCACHS2
PCCACURC EQU   PCCACHS2
PCCACNLG EQU   PCCACHS2
PCCACMOD EQU   PCCACHS2
PCCACALT EQU   PCCACHS2
PCCACIOR EQU   PCCACHS2
PCCARV47 EQU   PCCACHS1
PCCACUCB EQU   PCCACHS1
PCCACIBC EQU   PCCACHS1
PCCACAND EQU   PCCACHS1
PCCACNLS EQU   PCCACHS1
PCCACFRR EQU   PCCACHS1
PCCACNRE EQU   PCCACHS1
PCCACCMP EQU   PCCACHS1
PCCACSEQ EQU   PCCACHTS
PCCACDIN EQU   PCCACHTS
PCCARV44 EQU   PCCACHTS
PCCARV43 EQU   PCCACHTS
PCCACTEC EQU   PCCACHTS
PCCACDAV EQU   PCCACHVA
PCCACCHV EQU   PCCACHVA
PCCACCMD EQU   PCCACHVA
PCCACUNS EQU   PCCACHVA
PCCACSQV EQU   PCCACHVA
PCCARV42 EQU   PCCACHVA
PCCARV41 EQU   PCCACHVA
PCCACITF EQU   PCCACHVA
PCCARV40 EQU   PCCACHBL
PCCARV39 EQU   PCCACHBL
PCCARV38 EQU   PCCACHBL
PCCACCUE EQU   PCCACHBL
PCCACSTG EQU   PCCACHBL
PCCACSCU EQU   PCCACHBL
PCCACCHA EQU   PCCACHBL
PCCACCPU EQU   PCCACHBL
PCCACNOR EQU   PCCACHPF
PCCACCNT EQU   PCCACHPF
PCCACSNS EQU   PCCACHPF
PCCARV37 EQU   PCCACHPF
PCCACHIO EQU   PCCACHPF
PCCACTIO EQU   PCCACHPF
PCCACINT EQU   PCCACHPF
PCCACSIO EQU   PCCACHPF
PCCACHUB EQU   PCCAWERP
PCCACHEL EQU   PCCA+168
PCCALRBR EQU   PCCA+164
PCCALRBV EQU   PCCA+160
PCCAPWAR EQU   PCCA+156
PCCAPWAV EQU   PCCA+152
PCCAEMSA EQU   PCCAEMSB+12
PCCAEMSE EQU   PCCAEMSB+8
PCCAEMSP EQU   PCCAEMSB+4
PCCARMS  EQU   PCCARMSB
PCCARV34 EQU   PCCARMSB
PCCARV33 EQU   PCCARMSB
PCCARV32 EQU   PCCARMSB
PCCARV31 EQU   PCCARMSB
PCCARV30 EQU   PCCARMSB
PCCARV29 EQU   PCCARMSB
PCCARV28 EQU   PCCARMSB
PCCARV27 EQU   PCCAEMS3
PCCARV26 EQU   PCCAEMS3
PCCARV25 EQU   PCCAEMS3
PCCARV24 EQU   PCCAEMS3
PCCARV23 EQU   PCCAEMS3
PCCARV22 EQU   PCCAEMS3
PCCARV21 EQU   PCCAEMS3
PCCARV20 EQU   PCCAEMS3
PCCARV19 EQU   PCCAEMS2
PCCARV18 EQU   PCCAEMS2
PCCARV17 EQU   PCCAEMS2
PCCARV16 EQU   PCCAEMS2
PCCARV15 EQU   PCCAEMS2
PCCARV14 EQU   PCCAEMS2
PCCARV13 EQU   PCCAEMS2
PCCARV12 EQU   PCCAEMS2
PCCARV11 EQU   PCCARISP
PCCARV10 EQU   PCCARISP
PCCARV09 EQU   PCCARISP
PCCARV08 EQU   PCCARISP
PCCARV07 EQU   PCCARISP
PCCARV06 EQU   PCCARISP
PCCASERL EQU   PCCARISP
PCCAPARL EQU   PCCARISP
PCCARPB  EQU   PCCA+132
PCCACTIN EQU   PCCAINTE
PCCANFIN EQU   PCCAINTE
PCCANUIN EQU   PCCAINTE
PCCACTCC EQU   PCCACCE
PCCANFCC EQU   PCCACCE
PCCANUCC EQU   PCCACCE
PCCACTTD EQU   PCCATODE
PCCANFTD EQU   PCCATODE
PCCARV04 EQU   PCCATMFL
PCCARV03 EQU   PCCATMFL
PCCARV02 EQU   PCCATMFL
PCCAMINT EQU   PCCATMFL
PCCAMCC  EQU   PCCATMFL
PCCAVKIL EQU   PCCATMFL
PCCASYNC EQU   PCCATMFL
PCCAINIT EQU   PCCATMFL
PCCARV9E EQU   PCCA+124
PCCARV9D EQU   PCCA+120
PCCARV9C EQU   PCCA+116
PCCARV9B EQU   PCCA+112
PCCARV9A EQU   PCCA+108
PCCARV99 EQU   PCCA+104
PCCARV98 EQU   PCCA+100
PCCARV97 EQU   PCCA+96
PCCARV96 EQU   PCCA+92
PCCARV95 EQU   PCCA+88
PCCARV94 EQU   PCCA+84
PCCARV93 EQU   PCCA+80
PCCARV92 EQU   PCCA+76
PCCARV91 EQU   PCCA+72
PCCARV90 EQU   PCCA+68
PCCARV89 EQU   PCCA+64
PCCARV88 EQU   PCCA+60
PCCARV87 EQU   PCCA+56
PCCARV86 EQU   PCCA+52
PCCARV85 EQU   PCCA+48
PCCARV84 EQU   PCCA+44
PCCARV83 EQU   PCCA+40
PCCARV82 EQU   PCCA+36
PCCARV81 EQU   PCCA+32
PCCAPSAR EQU   PCCA+28
PCCAPSAV EQU   PCCA+24
PCCATQEP EQU   PCCA+20
PCCACAFM EQU   PCCA+18
PCCACPUA EQU   PCCA+16
PCCACPID EQU   PCCA+4
PCCAPCCA EQU   PCCA
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00135 EQU   @RC00115
@RC00162 EQU   @RC00154
@RC00167 EQU   @RC00154
@RC00217 EQU   @RC00197
@RF00245 EQU   @EL00001
@RF00249 EQU   @EL00001
@RC00247 EQU   @EL00001
@ENDDATA EQU   *
         END   IGC0001A,(C'PLS1047',0701,76246)
