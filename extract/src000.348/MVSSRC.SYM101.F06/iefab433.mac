         TITLE 'IEFAB433 - SPECIFIC VOLUME ALLOCATION CONTROL          *
                        '
IEFAB433 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(24)                                          01S0001
         DC    C'IEFAB433 76265  UZ05402 '                      01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(8),0(@01)                               01S0001
         MODESET EXTKEY=SCHED
*RETCODE = NOERROR;                    /*INIT LOCAL RETURN CODE VAR  */
         SLR   RETCODE,RETCODE                                  01S0047
*SIOTPTR = SIOT1P;                     /*PTR TO FIRST SIOT           */
         L     @10,@PC00001                                     01S0048
         L     @10,ALCWAPTR(,@10)                               01S0048
         MVC   SIOTPTR(4),SIOT1P(@10)                           01S0048
*DO SIOTCTR = ONE TO NUMREQS           /*DO UNTIL NO MORE REQ OR     */
*  WHILE (RETCODE = NOERROR & INDRETRY=OFF); /*ERROR                 */
         LA    SIOTCTR,1                                        01S0049
         B     @DE00049                                         01S0049
@DL00049 LTR   RETCODE,RETCODE                                  01S0049
         BNZ   @DC00049                                         01S0049
         L     @07,@PC00001                                     01S0049
         L     @07,ALCWAPTR(,@07)                               01S0049
         TM    INDRETRY(@07),B'01000000'                        01S0049
         BNZ   @DC00049                                         01S0049
*  NOSPECSW = OFF;                     /*INITIALIZE NOT SPECIFIC SW  */
         NI    NOSPECSW,B'01111111'                             01S0050
*  ALLALCSW = ON;                      /*ASSUME ALL CAN BE ALLOC'D   */
         OI    ALLALCSW,B'10000000'                             01S0051
*  UPEDLSW = OFF;                      /*INIT UPDATE EDL SWITCH      */
         NI    UPEDLSW,B'01111111'                              01S0052
*  IF SIOTALCD = OFF &                 /*WAS SIOT ENTRY ALLOCATED?   */
*     SIOTGIGN = OFF THEN              /*MUST PROCESS                */
         L     @07,SIOTPTR                                      01S0053
         TM    SIOTALCD(@07),B'00000010'                        01S0053
         BNZ   @RF00053                                         01S0053
         TM    SIOTGIGN(@07),B'00001000'                        01S0053
         BNZ   @RF00053                                         01S0053
*    DO;                                                        01S0054
*      VUPTR = SVOLUNAD;               /*PTR TO FIRST VOLUNIT ENTRY  */
         MVC   VUPTR(4),SVOLUNAD(@07)                           01S0055
*      DO VUCTR = ONE TO SVOLUNNO        /*DO UNTIL NO MORE VOLUNIT  */
*        WHILE (RETCODE = NOERROR & NOSPECSW = OFF /*ENTRY OR ERROR  */
*          & INDRETRY=OFF);                                     01S0056
         LA    VUCTR,1                                          01S0056
         B     @DE00056                                         01S0056
@DL00056 LTR   RETCODE,RETCODE                                  01S0056
         BNZ   @DC00056                                         01S0056
         TM    NOSPECSW,B'10000000'                             01S0056
         BNZ   @DC00056                                         01S0056
         L     @09,@PC00001                                     01S0056
         L     @09,ALCWAPTR(,@09)                               01S0056
         TM    INDRETRY(@09),B'01000000'                        01S0056
         BNZ   @DC00056                                         01S0056
*        IF VOLALOC = OFF & VDEVREQD=ON THEN /*ENTRY ALLOCATED? 01S0057
*                                              & DEV. REQ.           */
         L     @09,VUPTR                                        01S0057
         TM    VDEVREQD(@09),B'00100000'                        01S0057
         BNO   @RF00057                                         01S0057
         TM    VOLALOC(@09),B'10000000'                         01S0057
         BNZ   @RF00057                                         01S0057
*        IF VUDNALOC = OFF THEN        /*NOT MARKED FOR RECOVERY     */
         TM    VUDNALOC(@09),B'00001000'                        01S0058
         BNZ   @RF00058                                         01S0058
*          DO;                                                  01S0059
*            IF VOLSPEC = ON ×         /*VOLUNIT ENTRY SPECIFIC      */
*               VOLID(1) = TAPEGEND THEN                        01S0060
         TM    VOLSPEC(@09),B'00100000'                         01S0060
         BO    @RT00060                                         01S0060
         CLC   VOLID(1,@09),TAPEGEND                            01S0060
         BNE   @RF00060                                         01S0060
@RT00060 DS    0H                                               01S0061
*              DO;                     /*CK IF VOLUME MOUNTED ON
*                                        ELIGIBLE DEVICE             */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - FINDSPC                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - FIND SPECIFIC VOLUME REQUESTED                */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THE FUNCTION OF THIS ROUTINE IS TO DETERMINE WHETHER THE       */
*/*   REQUESTED VOLUME IS CURRENTLY MOUNTED ON AN ELIGIBLE DEVICE.   */
*/*   IF IT IS, THE DEVICE IS THEN SELECTED FOR ALLOCATION TO THIS   */
*/*   REQUEST.  IF THE VOLUME IS MOUNTED BUT THE DEVICE IS NOT       */
*/*   ELIGIBLE THEN THE REQUEST CANNOT BE ALLOCATED AT               */
*/*   THIS TIME AND THIS ROUTINE RETURNS WITH A REASON CODE          */
*/*   INDICATING THE FAILURE.                                        */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*   THIS ROUTINE SEARCHES EDL UCB ENTRIES TO SEE IF THE REQUESTED  */
*/*   VOLUME IS CURRENTLY MOUNTED. THE ELIGIBLE DEVICE TYPE INDICATOR*/
*/*   CONTAINED IN EACH GENERIC ENTRY OF THE EDL IS TESTED. IF THIS  */
*/*   DEVICE TYPE IS ELIGIBLE ALL OF THE UCB ENTRIES IN ALL OF THE   */
*/*   GROUP ENTRIES ARE EXAMINED TO SEE IF THEY CONTAIN              */
*/*   THE REQUESTED VOLUME.  IF THE VOLUME IS FOUND                  */
*/*   ON ONE OF THESE UNITS, THE STATUS OF THE UNIT IS               */
*/*   EXAMINED. IT MUST BE ONLINE, READY, NOT CURRENTLY IN USED BY   */
*/*   SYSTEM FUNCTION AND HAVE NO PENDING MOUNT UNLESS MOUNTING IS   */
*/*   ALLOWED FOR THIS ALLOCATION. IF PROCESSING IS BEING DONE FOR   */
*/*   PERMRES OR RESERVED VOLUMES, THE UNIT MUST HAVE ONE OF THESE   */
*/*   ATTRIBUTES AND MUST NOT BE MOUNT PENDING. THE UNIT     @ZA13813*/
*/*   MUST NOT BE INELIGIBLE BECAUSE OF JES3. IF ALL OF THESE@Y30QPPA*/
*/*   TESTS ARE PASSED, THE REQUEST WILL BE ALLOCATED TO A   @Y30QPPA*/
*/*   UNIT.                                                          */
*/*                                                                  */
*/* ENTRY - INLINE SEGMENT OF IEFAB433.                              */
*/*                                                                  */
*/*  PURPOSE - SEE FUNCTION.                                         */
*/*                                                                  */
*/*  INPUT -                                                         */
*/*     SIOT CURRENTLY BEING PROCESSED. - IN SIOTPTR.                */
*/*     VOLUNIT ENTRY CURRENTLY BEING PROCESSED - IN VUPTR           */
*/*     A FUNCTION MAP INDICATING WHETHER OR NOT TO CHECK FOR        */
*/*      THE PERMRES/RESERVED ATTRIBUTES IN THE DEVICE SELECTED.     */
*/*                                                                  */
*/* EXITS -                                                          */
*/*   CONDITION - VOLUME FOUND ON AN ELIGIBLE DEVICE.                */
*/*                                                                  */
*/*     OUTPUT -                                                     */
*/*       MATCHSW = 1,INDICATES VOLUME FOUND ON AN ELIGIBLE DEVICE.  */
*/*       UCBPTR      SET TO UCB TO BE ALLOCATED TO THIS REQUEST     */
*/*       EDLPTR   - POINTER TO EDL ENTRY CONTAINING UCB TO BE       */
*/*                  ALLOCATED TO THIS REQUEST.                      */
*/*       UCBENTNO - INDEX IN UCB LIST OF EDL GROUP ENTRY OF UCB     */
*/*                  CONTAINING VOLUME REQUESTED.                    */
*/*                                                                  */
*/*     RETURN CODE - NONE                                           */
*/*                                                                  */
*/*   CONDITION - VOLUME NOT FOUND ON AN ELIGIBLE DEVICE.            */
*/*                                                                  */
*/*     OUTPUT -                                                     */
*/*       MATCHSW = 0,INDICATES VOLUME NOT FOUND ON AN ELIGIBLE      */
*/*                   DEVICE.                                        */
*/*     RETURN CODE - NONE.                                          */
*/*                                                                  */
*/* EXIT - ERROR                                             @YM04974*/
*/*   CONDITION - NON-ALLOCATABLE UNIT OR                    @YM04974*/
*/*               VOL MOUNTING NOT ALLOWED OR                @YM04974*/
*/*               UNIT INELIGIBLE BECAUSE OF JES3            @Y30QPPA*/
*/*                                                          @YM04974*/
*/*     OUTPUT - MATCHSW = NO                                @YM04974*/
*/*              ALLALCSW = OFF                              @YM04974*/
*/*              SIOTRSNC - 21 - NON-ALLOCATABLE             @YM04974*/
*/*                         56 - VOL MOUNTING NOT ALLOWED    @YM04974*/
*/*                         83 - INELIGIBLE BECAUSE OF JES3  @Y30QPPA*/
*/*     RETURN CODE - 4 IN REG15                             @YM04974*/
*/*                                                                  */
*/********************************************************************/
*FOUNDSW = NO;                         /*INITIALIZE LOOP CONTROL     */
         NI    FOUNDSW,B'01111111'                              02S0062
*MATCHSW = NO;                         /*INITIALIZE LOOP CONTROL     */
         NI    MATCHSW,B'01111111'                              02S0063
*EDLPTR = EDLFGENP;                    /*INITIALIZE EDL POINTER      */
         L     @09,SIOTPTR                                      02S0064
         L     @09,SIOTEDLP(,@09)                               02S0064
         L     EDLPTR,EDLFGENP(,@09)                            02S0064
*RFY EDLUCBL BASED(EDLLISTP);          /*SET BASE FOR UCB LIST       */
*DO WHILE (EDLPTR^= ZERO & FOUNDSW = NO & MATCHSW = NO); /*LOOP THRU
*                                        EDL ENTRIES                 */
         B     @DE00066                                         02S0066
@DL00066 DS    0H                                               02S0067
*  EDLGNTP = EDLGRPTR;                 /*INIT GROUP ENTRY PTR        */
         L     EDLGNTP,EDLGRPTR(,EDLPTR)                        02S0067
*  IF EINDEVTP = OFF &                 /*IS THIS EDL ENTRY ELIGIBLE? */
*    (ONEGNRIC=OFF ×                                            02S0068
*    (ONEGNRIC=ON & EDLDEVT=LGENLOCK)) THEN                     02S0068
         TM    EINDEVTP(EDLPTR),B'10000000'                     02S0068
         BNZ   @RF00068                                         02S0068
         L     @09,@PC00001+4                                   02S0068
         L     @09,PSCPARMP(,@09)                               02S0068
         TM    ONEGNRIC(@09),B'00000100'                        02S0068
         BZ    @RT00068                                         02S0068
         TM    ONEGNRIC(@09),B'00000100'                        02S0068
         BNO   @RF00068                                         02S0068
         L     @09,@PC00001                                     02S0068
         L     @09,ALCWAPTR(,@09)                               02S0068
         CLC   EDLDEVT(4,EDLPTR),LGENLOCK(@09)                  02S0068
         BNE   @RF00068                                         02S0068
@RT00068 DS    0H                                               02S0069
*    DO WHILE (EDLGNTP^=ZERO & FOUNDSW = NO & MATCHSW = NO);    02S0069
         B     @DE00069                                         02S0069
@DL00069 DS    0H                                               02S0070
*      IF EDLJINEL = OFF THEN          /*GROUP NOT INELIGIBLE BECAUSE
*                                        OF JES3             @Y30QPPA*/
         TM    EDLJINEL(EDLGNTP),B'10000000'                    02S0070
         BNZ   @RF00070                                         02S0070
*        DO UCBENTNO = 1 BY 1 TO EDLUCBNO  /*IF YES, EXAMINE ALL UCBS*/
*          WHILE(FOUNDSW=NO & MATCHSW=NO); /*IN THIS ENTRY TIL FOUND */
         LA    UCBENTNO,1                                       02S0071
         B     @DE00071                                         02S0071
@DL00071 TM    FOUNDSW,B'10000000'                              02S0071
         BNZ   @DC00071                                         02S0071
         TM    MATCHSW,B'10000000'                              02S0071
         BNZ   @DC00071                                         02S0071
*          UCBPTR = EDLUCBAD(UCBENTNO); /*SET UCB MAPPING MACRO BASE */
         LR    @09,UCBENTNO                                     02S0072
         SLA   @09,2                                            02S0072
         L     @07,EDLLISTP(,EDLGNTP)                           02S0072
         ST    @09,@TF00001                                     02S0072
         ALR   @09,@07                                          02S0072
         AL    @09,@CF00891                                     02S0072
         SLR   @02,@02                                          02S0072
         ICM   @02,3,EDLUCBAD(@09)                              02S0072
         ST    @02,UCBPTR                                       02S0072
*          IF (UCBVOLI = VOLID) &      /*DOES VOLUME MOUNTED MATCH   */
*            (EDLNOJES(UCBENTNO) = OFF) THEN   /*VOLUME REQUESTED?
*                                        AND IF JES BIT OFF THIS UCB
*                                        MAY BE USED         @ZA12457*/
         L     @09,VUPTR                                        02S0073
         CLC   UCBVOLI(6,@02),VOLID(@09)                        02S0073
         BNE   @RF00073                                         02S0073
         AL    @07,@TF00001                                     02S0073
         BCTR  @07,0                                            02S0073
         BCTR  @07,0                                            02S0073
         TM    EDLNOJES-2(@07),B'00001000'                      02S0073
         BNZ   @RF00073                                         02S0073
*            DO;                       /*IF YES, SEE IF THIS REQUEST
*                                        CAN BE ALLOCATED.   @ZA12457*/
*              IF UCBNALOC=OFF THEN     /*OK UNIT                     *
         TM    UCBNALOC(@02),B'00000100'                        02S0075
         BNZ   @RF00075                                         02S0075
*                IF (UCBMOUNT = OFF ×   /*PENDING MOUNT?             */
*                   (UCBMOUNT=ON & VOLMNTSW = ON)) THEN /*PENDING MNT
*                                        AND VOL MOUNTING ALLOWED?   */
         TM    UCBMOUNT(@02),B'10000000'                        02S0076
         BZ    @RT00076                                         02S0076
         TM    UCBMOUNT(@02),B'10000000'                        02S0076
         BNO   @RF00076                                         02S0076
         L     @09,@PC00001                                     02S0076
         L     @09,ALCWAPTR(,@09)                               02S0076
         L     @09,FMAPPTR(,@09)                                02S0076
         TM    VOLMNTSW(@09),B'10000000'                        02S0076
         BNO   @RF00076                                         02S0076
@RT00076 DS    0H                                               02S0077
*                  IF UCBONLI = ON THEN  /*DEVICE ONLINE             */
         L     @09,UCBPTR                                       02S0077
         TM    UCBONLI(@09),B'10000000'                         02S0077
         BNO   @RF00077                                         02S0077
*                    DO;                                        02S0078
*                      IF PERMRES = OFF THEN /*IF NOT PROCESSING FOR
*                                          PERMRES/RESERVED THEN     */
         L     @09,@PC00001+4                                   02S0079
         L     @09,PSCPARMP(,@09)                               02S0079
         TM    PERMRES(@09),B'00010000'                         02S0079
         BNZ   @RF00079                                         02S0079
*                        MATCHSW = YES;  /*A MATCH HAS BEEN FOUND    */
         OI    MATCHSW,B'10000000'                              02S0080
*                      ELSE              /*PROCESSING IS FOR    02S0081
*                                          PERMRES/RESERVED          */
*                          /* IF PERMRES/RESERVED DIRECT ACCESS AND
*                             NOT MOUNT PENDING              @ZA13813*/
*                        IF (UCBPRES = ON & UCBMOUNT = OFF) ×   02S0081
*                           (UCBRESV= ON & UCBMOUNT = OFF) &    02S0081
*                            UCB3DACC = ON THEN                 02S0081
         B     @RC00079                                         02S0081
@RF00079 L     @09,UCBPTR                                       02S0081
         TM    UCBPRES(@09),B'00000100'                         02S0081
         BNO   @GL00013                                         02S0081
         TM    UCBMOUNT(@09),B'10000000'                        02S0081
         BZ    @RT00081                                         02S0081
@GL00013 L     @09,UCBPTR                                       02S0081
         TM    UCBRESV(@09),B'00100000'                         02S0081
         BNO   @RF00081                                         02S0081
         TM    UCBMOUNT(@09),B'10000000'                        02S0081
         BNZ   @RF00081                                         02S0081
         TM    UCB3DACC(@09),B'00100000'                        02S0081
         BNO   @RF00081                                         02S0081
@RT00081 DS    0H                                               02S0082
*                          MATCHSW = YES; /*IF YES, MATCH IS FOUND   */
         OI    MATCHSW,B'10000000'                              02S0082
*                        ELSE;                                  02S0083
@RF00081 DS    0H                                               02S0084
*                    END;                                       02S0084
*                  ELSE                /*NOT ONLINE                  */
*                    DO;                                        02S0085
         B     @RC00077                                         02S0085
@RF00077 DS    0H                                               02S0086
*                      FOUNDSW = ON;   /*VOLUME FOUND                */
         OI    FOUNDSW,B'10000000'                              02S0086
*                      ALLALCSW = OFF; /*NOT ALL ALLOC'D             */
         NI    ALLALCSW,B'01111111'                             02S0087
*                    END;                                       02S0088
*                ELSE                  /*VOLUME MOUNTED ON DEVICE    */
*                  DO;                 /*WHICH MAIN PATH CAN'T ALLOC */
         B     @RC00076                                         02S0089
@RF00076 DS    0H                                               02S0090
*                    FOUNDSW = YES;    /*SET VOLUME FOUND SWITCH     */
         OI    FOUNDSW,B'10000000'                              02S0090
*                    ALLALCSW = OFF;   /*NOT ALL ALLOC'D             */
         NI    ALLALCSW,B'01111111'                             02S0091
*                    SIOTRSNC = NOMOUNT; /*NOT ALLOWED TO MOUNT      */
         L     @09,SIOTPTR                                      02S0092
         MVC   SIOTRSNC(2,@09),@CH00101                         02S0092
*                    RETCODE = ERRORIND; /*INDICATE ERROR    @YM04974*/
         LA    RETCODE,4                                        02S0093
*                  END;                                         02S0094
*              ELSE                    /*UNIT NON ALLOCATABLE        */
*                DO;                                            02S0095
         B     @RC00075                                         02S0095
@RF00075 DS    0H                                               02S0096
*                  FOUNDSW=ON;         /*VOLUME FOUND                */
         OI    FOUNDSW,B'10000000'                              02S0096
*                  ALLALCSW = OFF;     /*NOT ALL ALLOC'D             */
         NI    ALLALCSW,B'01111111'                             02S0097
*                  SIOTRSNC=NONALLOC;  /*NON-ALLOCATABLE             */
         L     @09,SIOTPTR                                      02S0098
         MVC   SIOTRSNC(2,@09),@CH00129                         02S0098
*                  RETCODE = ERRORIND; /*INDICATE ERROR      @YM04974*/
         LA    RETCODE,4                                        02S0099
*                END;                                           02S0100
*            END;                                               02S0101
*          ELSE;                       /*VOLUME REQUESTED NOT ON
*                                        THIS UCB                    */
@RF00073 DS    0H                                               02S0103
*        END;                                                   02S0103
@RC00073 AH    UCBENTNO,@CH00055                                02S0103
@DE00071 C     UCBENTNO,EDLUCBNO(,EDLGNTP)                      02S0103
         BNH   @DL00071                                         02S0103
@DC00071 DS    0H                                               02S0104
*          IF MATCHSW = NO THEN                                 02S0104
@RF00070 TM    MATCHSW,B'10000000'                              02S0104
         BNZ   @RF00104                                         02S0104
*            EDLGNTP = EDLNXGRP;       /*INCREMENT TO NEXT GRP ENTRY */
         L     EDLGNTP,EDLNXGRP(,EDLGNTP)                       02S0105
*      ELSE;                           /*GROUP INELIGIBLE BECAUSE OF
*                                        JES3                @Y30QPPA*/
@RF00104 DS    0H                                               02S0107
*    END;                                                       02S0107
@DE00069 LTR   EDLGNTP,EDLGNTP                                  02S0107
         BZ    @DC00069                                         02S0107
         TM    FOUNDSW,B'10000000'                              02S0107
         BNZ   @DC00069                                         02S0107
         TM    MATCHSW,B'10000000'                              02S0107
         BZ    @DL00069                                         02S0107
@DC00069 DS    0H                                               02S0108
*  ELSE;                               /*THIS EDL ENTRY INELIGIBLE   */
@RF00068 DS    0H                                               02S0109
*    IF MATCHSW = NO THEN                                       02S0109
         TM    MATCHSW,B'10000000'                              02S0109
         BNZ   @RF00109                                         02S0109
*      EDLPTR = EDLNXTNT;              /*INCREMENT TO NEXT EDL ENTRY */
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0110
*END;                                                           02S0111
@RF00109 DS    0H                                               02S0111
@DE00066 LTR   EDLPTR,EDLPTR                                    02S0111
         BZ    @DC00066                                         02S0111
         TM    FOUNDSW,B'10000000'                              02S0111
         BNZ   @DC00066                                         02S0111
         TM    MATCHSW,B'10000000'                              02S0111
         BZ    @DL00066                                         02S0111
@DC00066 DS    0H                                               02S0112
*IF MATCHSW = NO & EDLPTR = ZERO & FOUNDSW = NO THEN /*IF NO MATCH
*                                        AFTER SEARCH OF             */
         TM    MATCHSW,B'10000000'                              02S0112
         BNZ   @RF00112                                         02S0112
         LTR   EDLPTR,EDLPTR                                    02S0112
         BNZ   @RF00112                                         02S0112
         TM    FOUNDSW,B'10000000'                              02S0112
         BNZ   @RF00112                                         02S0112
*  DO;                                 /*ALL ELIGIBLE EDL ENTRIES    */
*    ALLALCSW = OFF;                   /*NOT ALL ALLOC'D             */
         NI    ALLALCSW,B'01111111'                             02S0114
*  END;                                                         02S0115
*ELSE;                                                          02S0116
@RF00112 DS    0H                                               02S0117
*IF MATCHSW = YES THEN                                          02S0117
         TM    MATCHSW,B'10000000'                              02S0117
         BNO   @RF00117                                         02S0117
*  UCBENTNO = UCBENTNO - ONE;          /*IF MATCH FOUND ADJUST INDEX
*                                        TO COMPENSATE FOR ACTION OF
*                                        DO LOOP                     */
         BCTR  UCBENTNO,0                                       02S0118
*                IF MATCHSW = YES THEN     /*WAS VOLUME FOUND        */
@RF00117 TM    MATCHSW,B'10000000'                              01S0119
         BNO   @RF00119                                         01S0119
*                  DO;                                          01S0120
*                    USEUCB = ON;      /*INIT OK TO USE UCB SWITCH   */
         OI    USEUCB,B'10000000'                               01S0121
*                    IF MOUNTED = ON & /*GENERIC OR RECOVERY ALLOC   */
*                       SIOTDMND = OFF THEN /*NOT DEMAND ALLOCATION  */
         L     @09,@PC00001+4                                   01S0122
         L     @09,PSCPARMP(,@09)                               01S0122
         TM    MOUNTED(@09),B'00001000'                         01S0122
         BNO   @RF00122                                         01S0122
         L     @09,SIOTPTR                                      01S0122
         TM    SIOTDMND(@09),B'10000000'                        01S0122
         BNZ   @RF00122                                         01S0122
*                      DO;             /*SEE IF UCB IS DEMANDED      */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DMNDNEED                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - TEST IF UCB IS DEMANDED                       */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE DETERMINES IF THE UNIT ON WHICH A VOLUME WAS      */
*/*   FOUND MOUNTED IS NEEDED BY A DEMAND REQUEST (E.G. UNIT=190).   */
*/*                                                                  */
*/*   OPERATION - THE SIOT CHAIN IS SCANNED TO LOCATE EACH           */
*/*               DEMAND REQUEST.                                    */
*/*                                                                  */
*/* ENTRY - INLINE SUBROUTINE                                        */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     SIOT1P - PTR TO THE FIRST SIOT IN THE CHAIN                  */
*/*       SIOTDMND - 1 FOR DEMAND REQUESTS                           */
*/*       SIOUCBAD - FOR DEMAND REQUEST, ADDRESS OF THE DEMANDED UCB */
*/*       SIOTNPTR - PTR TO THE NEXT SIOT                            */
*/*     UCBPTR - PTR TO UCB                                          */
*/*                                                                  */
*/* EXIT-NORMAL - INLINE SUBROUTINE                                  */
*/*                                                                  */
*/*   CONDITIONS - FUNCTION COMPLETED                                */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*     USEUCB - 1 = NO DEMAND REQUEST NEEDS THIS UCB                */
*/*              0 = A DEMAND REQUEST NEEDS THIS UCB                 */
*/*                                                                  */
*/*   RETURN CODES - NONE                                            */
*/*                                                                  */
*/********************************************************************/
*RFY INDMSIOT BASED(SPTR);                                      02S0124
*SPTR = SIOT1P;                        /*POINT TO THE FIRST SIOT     */
         L     @09,@PC00001                                     02S0125
         L     @09,ALCWAPTR(,@09)                               02S0125
         L     SPTR,SIOT1P(,@09)                                02S0125
*DO WHILE (SPTR ^= ZERO                /*SCAN ALL SIOTS...           */
*   & USEUCB = ON);                    /*UNTIL UCB FOUND DEMANDED    */
         B     @DE00126                                         02S0126
@DL00126 DS    0H                                               02S0127
*  IF SIOTDMND = ON                    /*DEMAND REQ FOR THIS UCB?    */
*     & SIOUCBAD = UCBPTR THEN                                  02S0127
         TM    SIOTDMND(SPTR),B'10000000'                       02S0127
         BNO   @RF00127                                         02S0127
         SLR   @09,@09                                          02S0127
         ICM   @09,7,SIOUCBAD(SPTR)                             02S0127
         C     @09,UCBPTR                                       02S0127
         BNE   @RF00127                                         02S0127
*    USEUCB = OFF;                     /*INCICATE UCB IS DEMANDED    */
         NI    USEUCB,B'01111111'                               02S0128
*  ELSE;                               /*NOT DEMAND REQ FOR THIS UCB */
@RF00127 DS    0H                                               02S0130
*  SPTR = SIOTNPTR;                    /*POINT TO NEXT SIOT          */
         L     SPTR,SIOTNPTR(,SPTR)                             02S0130
*END;                                                           02S0131
@DE00126 LTR   SPTR,SPTR                                        02S0131
         BZ    @DC00126                                         02S0131
         TM    USEUCB,B'10000000'                               02S0131
         BO    @DL00126                                         02S0131
@DC00126 DS    0H                                               02S0132
*RFY INDMSIOT BASED(SIOTPTR);                                   02S0132
*                      END;                                     01S0133
*                    IF USEUCB = ON THEN /*OK TO USE UCB             */
@RF00122 TM    USEUCB,B'10000000'                               01S0134
         BNO   @RF00134                                         01S0134
*                      DO;                                      01S0135
*                        TVUCTR = VUCTR;   /*VOLUNIT CNTR            */
         LR    TVUCTR,VUCTR                                     01S0136
*                        IF ((UCB3DACC=ON & (UCBPRES=ON         01S0137
*                        × UCBRESV=ON))                         01S0137
*                        × (UCB3TAPE = ON                       01S0137
*                        & UCBRESV = ON)) THEN/*                01S0137
*                                            NON-REMOVABLE DEVICE    */
         L     @09,UCBPTR                                       01S0137
         TM    UCB3DACC(@09),B'00100000'                        01S0137
         BNO   @GL00026                                         01S0137
         TM    UCBPRES(@09),B'00100100'                         01S0137
         BNZ   @RT00137                                         01S0137
@GL00026 L     @09,UCBPTR                                       01S0137
         TM    UCB3TAPE(@09),B'10000000'                        01S0137
         BNO   @RF00137                                         01S0137
         TM    UCBRESV(@09),B'00100000'                         01S0137
         BNO   @RF00137                                         01S0137
@RT00137 DS    0H                                               01S0138
*                          DO;         /*YES, REMOVE UNIT AFF'S      */
*                            FUNC442 = FUNC442 && FUNC442;      01S0139
         XC    FUNC442(1),FUNC442                               01S0139
*                            IF MOUNTED=ON THEN /*GEN OR RECOV ALLOC */
         L     @09,@PC00001+4                                   01S0140
         L     @09,PSCPARMP(,@09)                               01S0140
         TM    MOUNTED(@09),B'00001000'                         01S0140
         BNO   @RF00140                                         01S0140
*                              UPALG442 = ON; /*YES,INDIC UP ALG TBLS*/
         OI    UPALG442,B'10000000'                             01S0141
*                            ELSE;     /*NO,DONT UPDATE ALG TBLS     */
@RF00140 DS    0H                                               01S0143
*                            CALL IEFAB442(FUNC442,ALCWAPTR,VOLID,
*                                         VOLUNTID);            01S0143
         LA    @09,FUNC442                                      01S0143
         ST    @09,@AL00001                                     01S0143
         L     @09,@PC00001                                     01S0143
         ST    @09,@AL00001+4                                   01S0143
         L     @09,VUPTR                                        01S0143
         ST    @09,@AL00001+8                                   01S0143
         LA    @09,VOLUNTID(,@09)                               01S0143
         ST    @09,@AL00001+12                                  01S0143
         L     @15,@CV00866                                     01S0143
         LA    @01,@AL00001                                     01S0143
         BALR  @14,@15                                          01S0143
*                            RETCODE = REG15; /*SAVE RETURN CODE     */
         LR    RETCODE,REG15                                    01S0144
*                          END;                                 01S0145
*                        ELSE;         /*NOT A FIXED DEVICE          */
@RF00137 DS    0H                                               01S0147
*                        IF RETCODE = NOERROR THEN /*ANY ERRORS?     */
         LTR   RETCODE,RETCODE                                  01S0147
         BNZ   @RF00147                                         01S0147
*                          DO;         /*NO,CONTINUE                 */
*                            CALL BALCUNPM; /*BUILD PARM LIST FOR
*                                             REQ TO UNIT            */
         BAL   @14,BALCUNPM                                     01S0149
*                            UCBDATAP = ADDR(UCBDATA);          01S0150
         LA    @09,UCBDATA                                      01S0150
         ST    @09,UCBDATAP                                     01S0150
*                            CALL IEFAB434(SIOTPTR,VUPTR,       01S0151
*                            UCBPTR,ARUINDIC,ARUWORD,ALCWAPTR,GROUPID,
*                                UCBDATAP);                     01S0151
         LA    @09,SIOTPTR                                      01S0151
         ST    @09,@AL00001                                     01S0151
         LA    @09,VUPTR                                        01S0151
         ST    @09,@AL00001+4                                   01S0151
         LA    @09,UCBPTR                                       01S0151
         ST    @09,@AL00001+8                                   01S0151
         LA    @09,ARUINDIC                                     01S0151
         ST    @09,@AL00001+12                                  01S0151
         LA    @09,ARUWORD                                      01S0151
         ST    @09,@AL00001+16                                  01S0151
         L     @09,@PC00001                                     01S0151
         ST    @09,@AL00001+20                                  01S0151
         LA    @09,GROUPID                                      01S0151
         ST    @09,@AL00001+24                                  01S0151
         LA    @09,UCBDATAP                                     01S0151
         ST    @09,@AL00001+28                                  01S0151
         L     @15,@CV00865                                     01S0151
         LA    @01,@AL00001                                     01S0151
         BALR  @14,@15                                          01S0151
*                                      /*ALLOCATE THE REQUEST TO UNIT*/
*                            RETCODE = REG15;  /*SAVE RETURN CODE    */
         LR    RETCODE,REG15                                    01S0152
*                            IF RETCODE = AFFTAPE THEN /*ERR DUAL DEN*/
         CH    RETCODE,@CH00093                                 01S0153
         BNE   @RF00153                                         01S0153
*                               RETCODE = ZERO;/*ALREADY MARKED RECOV*/
         SLR   RETCODE,RETCODE                                  01S0154
*                            IF RETCODE = NOERROR × /*ERROR RETURN?  */
*                               RETCODE=AFFCONT THEN /*AFFIN ERR CONT*/
@RF00153 LTR   RETCODE,RETCODE                                  01S0155
         BZ    @RT00155                                         01S0155
         CH    RETCODE,@CH00089                                 01S0155
         BNE   @RF00155                                         01S0155
@RT00155 DS    0H                                               01S0156
*                              DO;                              01S0156
*                                VOLALOC= ON;  /*IND. ENTRY PROCESSED*/
         L     @07,VUPTR                                        01S0157
         OI    VOLALOC(@07),B'10000000'                         01S0157
*                                TOTVOLUN = TOTVOLUN - ONE; /*DECREM.
*                                         RESIDUAL COUNT OF VOLUNIT
*                                         ENTRIES TO BE ALLOCATE     */
         L     @02,@PC00001                                     01S0158
         L     @02,ALCWAPTR(,@02)                               01S0158
         L     @15,TOTVOLUN(,@02)                               01S0158
         BCTR  @15,0                                            01S0158
         ST    @15,TOTVOLUN(,@02)                               01S0158
*                                EDLALCD(UCBENTNO) = ON; /*MARK UCB
*                                                  ENTRY IN EDL      */
         LR    @02,UCBENTNO                                     01S0159
         SLA   @02,2                                            01S0159
         L     @01,EDLLISTP(,EDLGNTP)                           01S0159
         ALR   @01,@02                                          01S0159
         BCTR  @01,0                                            01S0159
         BCTR  @01,0                                            01S0159
         OI    EDLALCD-2(@01),B'10000000'                       01S0159
*                                TVUPTR = VUPTR; /*PTR TO VOLUNIT ENT*/
         LR    TVUPTR,@07                                       01S0160
*                                IF EDLMGENS = OFF THEN /*MULT GENS
*                                                         NOT OK     */
         L     @07,SIOTPTR                                      01S0161
         L     @07,SIOTEDLP(,@07)                               01S0161
         TM    EDLMGENS(@07),B'01000000'                        01S0161
         BNZ   @RF00161                                         01S0161
*                                  CALL VUSCAN;  /*SEE IF UPDATE EDL
*                                                  NECESSARY         */
         BAL   @14,VUSCAN                                       01S0162
*                                IF UPEDLSW = ON THEN /*UPDATE EDL?  */
@RF00161 TM    UPEDLSW,B'10000000'                              01S0163
         BNO   @RF00163                                         01S0163
*                                  CALL UPDEDL; /*CALL UPDATE EDL    */
         BAL   @14,UPDEDL                                       01S0164
*                              END;                             01S0165
*                            ELSE;                              01S0166
@RF00155 DS    0H                                               01S0167
*                          END;                                 01S0167
*                        ELSE;                                  01S0168
@RF00147 DS    0H                                               01S0169
*                      END;                                     01S0169
*                    ELSE              /*NOT OK TO USE UCB           */
*                      ALLALCSW = OFF;  /*ALL REQUESTS NOT ALLOCATED */
         B     @RC00134                                         01S0170
@RF00134 NI    ALLALCSW,B'01111111'                             01S0170
*                  END;                                         01S0171
*                ELSE;                                          01S0172
@RF00119 DS    0H                                               01S0173
*              END;                                             01S0173
*            ELSE                      /*ENTRY NOT SPECIFIC          */
*              NOSPECSW = ON;          /*NOT SPECIFIC REQUEST        */
         B     @RC00060                                         01S0174
@RF00060 OI    NOSPECSW,B'10000000'                             01S0174
*          END;                                                 01S0175
*        ELSE                          /*RECOVERY NEEDED             */
*          ALLALCSW = OFF;             /*ALL NOT ALLOCATED           */
         B     @RC00058                                         01S0176
@RF00058 NI    ALLALCSW,B'01111111'                             01S0176
*        ELSE;                         /*THIS ENTRY ALREADY PROCESSED*/
@RF00057 DS    0H                                               01S0178
*        VUPTR = VUPTR + VOLENTLN;     /*PTR TO NEXT VOLUNIT ENTRY   */
@RC00057 L     @09,VUPTR                                        01S0178
         AL    @09,VOLENTLN                                     01S0178
         ST    @09,VUPTR                                        01S0178
*      END;                            /*DROP OUT WHEN NO MORE  01S0179
*                                        VOLUNITS FOR THIS SIOT      */
         AH    VUCTR,@CH00055                                   01S0179
@DE00056 L     @09,SIOTPTR                                      01S0179
         CH    VUCTR,SVOLUNNO(,@09)                             01S0179
         BNH   @DL00056                                         01S0179
@DC00056 DS    0H                                               01S0180
*      BVUPTR = SVOLUNAD;         /*GET FIRST VU ENTRY       @ZA10788*/
         L     @07,SIOTPTR                                      01S0180
         L     BVUPTR,SVOLUNAD(,@07)                            01S0180
*      DO BVUCTR = ONE TO SVOLUNNO; /*CHECK EACH ENTRY       @ZA10788*/
         LA    BVUCTR,1                                         01S0181
         B     @DE00181                                         01S0181
@DL00181 DS    0H                                               01S0182
*        IF BVUPTR->VUVINELG = ON &  /* ANY ERRORS?          @ZA10788*/
*          BVUPTR->VUDNALOC = ON THEN                     /* @ZA10788*/
         TM    VUVINELG(BVUPTR),B'00001010'                     01S0182
         BNO   @RF00182                                         01S0182
*          ALLALCSW = OFF;        /*DONT MARK SIOT ALLOCATED @ZA10788*/
         NI    ALLALCSW,B'01111111'                             01S0183
*        BVUPTR=BVUPTR+VOLENTLN;   /*NEXT VU ENTRY           @ZA10788*/
@RF00182 AL    BVUPTR,VOLENTLN                                  01S0184
*      END;                       /*END VU ENTRY CHECK       @ZA10788*/
         AH    BVUCTR,@CH00055                                  01S0185
@DE00181 L     @07,SIOTPTR                                      01S0185
         CH    BVUCTR,SVOLUNNO(,@07)                            01S0185
         BNH   @DL00181                                         01S0185
*      IF SIOTALCD=OFF & NOSPECSW=OFF  /*ALL VU ENTRIES SPECIFIC?    */
*         & ALLALCSW=ON                /*ANY ERRORS?                 */
*         & (RETCODE=NOERROR × RETCODE=AFFCONT)THEN             01S0186
         L     @07,SIOTPTR                                      01S0186
         TM    SIOTALCD(@07),B'00000010'                        01S0186
         BNZ   @RF00186                                         01S0186
         TM    NOSPECSW,B'10000000'                             01S0186
         BNZ   @RF00186                                         01S0186
         TM    ALLALCSW,B'10000000'                             01S0186
         BNO   @RF00186                                         01S0186
         LTR   RETCODE,RETCODE                                  01S0186
         BZ    @RT00186                                         01S0186
         CH    RETCODE,@CH00089                                 01S0186
         BNE   @RF00186                                         01S0186
@RT00186 DS    0H                                               01S0187
*         DO;                                                   01S0187
*           SIOTALCD = ON;             /*IND. SIOT PROCESSED         */
         L     @07,SIOTPTR                                      01S0188
         OI    SIOTALCD(@07),B'00000010'                        01S0188
*           TOTREQS = TOTREQS-ONE;     /*DECREM.TOTAL NO. IN CNT TAB */
         L     @07,@PC00001                                     01S0189
         L     @07,ALCWAPTR(,@07)                               01S0189
         L     @15,TOTREQS(,@07)                                01S0189
         BCTR  @15,0                                            01S0189
         ST    @15,TOTREQS(,@07)                                01S0189
*           IF PERMRES = ON THEN       /*COUNT TABLE MAPPED PER SIOT */
         L     @15,@PC00001+4                                   01S0190
         L     @01,PSCPARMP(,@15)                               01S0190
         TM    PERMRES(@01),B'00010000'                         01S0190
         BNO   @RF00190                                         01S0190
*             SPECREQS = SPECREQS-ONE; /*DECREM.NO.SPEC.IN CNT TABLE */
         L     @15,SPECREQS(,@07)                               01S0191
         BCTR  @15,0                                            01S0191
         ST    @15,SPECREQS(,@07)                               01S0191
*         END;                                                  01S0192
*      ELSE;                                                    01S0193
@RF00186 DS    0H                                               01S0194
*   END;                                                        01S0194
*  ELSE;                                                        01S0195
@RF00053 DS    0H                                               01S0196
*  SIOTPTR = SIOTNPTR;                 /*PTR TO NEXT SIOT            */
@RC00053 L     @07,SIOTPTR                                      01S0196
         L     @07,SIOTNPTR(,@07)                               01S0196
         ST    @07,SIOTPTR                                      01S0196
*END;                                                           01S0197
         AH    SIOTCTR,@CH00055                                 01S0197
@DE00049 L     @07,@PC00001                                     01S0197
         L     @07,ALCWAPTR(,@07)                               01S0197
         C     SIOTCTR,NUMREQS(,@07)                            01S0197
         BNH   @DL00049                                         01S0197
@DC00049 DS    0H                                               01S0198
*RETURN CODE(RETCODE);                  /*PASS RETURN CODE TO CALLER */
         IC    @02,@OLDKEY                                      01S0198
         L     @13,4(,@13)                                      01S0198
         L     @00,@SIZDATD                                     01S0198
         LR    @01,@11                                          01S0198
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@04                                          01S0198
         L     @14,12(,@13)                                     01S0198
         LM    @00,@12,20(@13)                                  01S0198
         BR    @14                                              01S0198
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - BALCUNPM                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - BUILD PARAMETER LIST TO ALLOC REQUEST TO UNIT */
*/*                                                                  */
*/* FUNCTION - THIS SEGMENT SETS UP PARAMETER INFORMATION FOR INPUT  */
*/*            TO ALLOCATE REQUEST TO UNIT (IEFAB434). INPUT         */
*/*            CONSISTS OF PROCESSING INDICATOR FLAGS AND INFORMATION*/
*/*            NECESSARY TO BUILD AN ETIOT REQUEST BLOCK.            */
*/*                                                                  */
*/* ENTRY - BALCUNPM                                                 */
*/*                                                                  */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*                                                                  */
*/*             INPUT -                                              */
*/*                EDLGNTP - POINTER TO GROUP ENTRY IN EDL.          */
*/*                SIOTPTR - POINTER TO SIOT BEING PROCESSED.        */
*/*                VUPTR   - POINTER TO VOLUNIT ENTRY BEING          */
*/*                          PROCESSED.                              */
*/*                TVUCTR  - RELATIVE POSITION IN CURRENT SIOTS      */
*/*                          VOLUNIT TABLE ENTRIES.                  */
*/*                                                                  */
*/* EXITS -                                                          */
*/*  CONDITION - PARAMETER LIST SUCCESSFULLY BUILT.                  */
*/*                                                                  */
*/*                                                                  */
*/*  OUTPUT - PARAMETERS FOR IEFAB434 SET UP                         */
*/*                                                                  */
*/*  RETURN CODE - NONE.                                             */
*/*                                                                  */
*/********************************************************************/
*BALCUNPM:                                                      02S0199
*  PROC;                                                        02S0199
@EL00001 IC    @02,@OLDKEY                                      02S0199
         L     @13,4(,@13)                                      02S0199
@EF00001 L     @00,@SIZDATD                                     02S0199
         LR    @01,@11                                          02S0199
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
@ER00001 LM    @14,@12,12(@13)                                  02S0199
         BR    @14                                              02S0199
BALCUNPM STM   @14,@12,12(@13)                                  02S0199
*ARUINDIC = ''B;                       /*CLEAR PARAMETER SWITCHES    */
         XC    ARUINDIC(4),ARUINDIC                             02S0200
*VOLUMEID = UCBVOLI;                   /*VOLSER TO IEFAB435 PARM LIST*/
         L     @10,UCBPTR                                       02S0201
         MVC   VOLUMEID(6),UCBVOLI(@10)                         02S0201
*IF SIOTETIO = ZERO THEN               /*DOES ETIOT ENTRY EXIST?     */
         L     @10,SIOTPTR                                      02S0202
         ICM   @06,15,SIOTETIO(@10)                             02S0202
         BNZ   @RF00202                                         02S0202
*  ARUETUPD = OFF;                     /*NO,INDICATE ETIOT CREATE    */
         NI    ARUETUPD,B'01111111'                             02S0203
*ELSE                                                           02S0204
*  ARUETUPD = ON;                      /*YES,INDICATE UPDATE ETIOT   */
         B     @RC00202                                         02S0204
@RF00202 OI    ARUETUPD,B'10000000'                             02S0204
*ARURLPOS = ONE;                       /*INIT RELATIVE POSITION IN
*                                        ETIOT COUNT                 */
@RC00202 LA    @10,1                                            02S0205
         STH   @10,ARURLPOS                                     02S0205
*AVUPTR = SVOLUNAD;                    /*PTR TO BASE OF VOLUNIT TABLE*/
         L     @06,SIOTPTR                                      02S0206
         L     AVUPTR,SVOLUNAD(,@06)                            02S0206
*DO I = ONE TO SVOLUNNO                /*SEARCH VOLUNIT TABLE UNTIL
*                                        ENTRY TO BE ALLOCATED IS
*                                        FOUND                       */
*  WHILE (TVUCTR ^= I);                                         02S0207
         LR    I,@10                                            02S0207
         B     @DE00207                                         02S0207
@DL00207 CR    TVUCTR,I                                         02S0207
         BE    @DC00207                                         02S0207
*  IF AVUPTR -> VDEVREQD = ON THEN     /*IF THIS VU ENTRY REQUIRES A
*                                        DEVICE THEN INCREMENT INDEX
*                                        TO NEXT AVAILABLE ETIOT     */
         TM    VDEVREQD(AVUPTR),B'00100000'                     02S0208
         BNO   @RF00208                                         02S0208
*    ARURLPOS = ARURLPOS + ONE;                                 02S0209
         LH    @10,ARURLPOS                                     02S0209
         LA    @10,1(,@10)                                      02S0209
         STH   @10,ARURLPOS                                     02S0209
*  ELSE;                                                        02S0210
@RF00208 DS    0H                                               02S0211
*  AVUPTR = AVUPTR + VOLENTLN;         /*UPDATE PTR TO NEXT VU ENTRY */
         AL    AVUPTR,VOLENTLN                                  02S0211
*END;                                                           02S0212
         AH    I,@CH00055                                       02S0212
@DE00207 L     @10,SIOTPTR                                      02S0212
         CH    I,SVOLUNNO(,@10)                                 02S0212
         BNH   @DL00207                                         02S0212
@DC00207 DS    0H                                               02S0213
*IF ARUETUPD = OFF THEN                /*IF ETIOT ENTRY MUST BE 02S0213
*                                        CREATED                     */
         TM    ARUETUPD,B'10000000'                             02S0213
         BNZ   @RF00213                                         02S0213
*  ARUNODEV = SIOTOTUN;                /*SET NUMBER OF DEVICE   02S0214
*                                        ENTRIES NEEDED              */
         L     @10,SIOTPTR                                      02S0214
         SLR   @04,@04                                          02S0214
         IC    @04,SIOTOTUN(,@10)                               02S0214
         STH   @04,ARUNODEV                                     02S0214
*ELSE;                                                          02S0215
@RF00213 DS    0H                                               02S0216
*ARUAFF = ON;                          /*INDIC DO AFFINITY PROC'NG   */
*ARUVLCHK = OFF;                       /*NO UCB VALIDITY CHECKING    */
         OI    ARUAFF,B'00100000'                               02S0217
         NI    ARUVLCHK,B'11101111'                             02S0217
*IF VOLSWOK = ON THEN                  /*VOL SWITCHING OK            */
         L     @10,@PC00001+4                                   02S0218
         L     @10,PSCPARMP(,@10)                               02S0218
         TM    VOLSWOK(@10),B'00000010'                         02S0218
         BNO   @RF00218                                         02S0218
*  ARUVOLSW = ON;                      /*INDICATE SO                 */
         OI    ARUVOLSW,B'00000010'                             02S0219
*IF MOUNTED = ON THEN                  /*IF PROCESSING FOR MOUNTED
*                                        VOLUMES                     */
@RF00218 L     @10,@PC00001+4                                   02S0220
         L     @10,PSCPARMP(,@10)                               02S0220
         TM    MOUNTED(@10),B'00001000'                         02S0220
         BNO   @RF00220                                         02S0220
* DO;                                                           02S0221
*  ARUUPDAL=ON;                        /*UPDATE ALGORITHM TABLES     */
         OI    ARUUPDAL,B'00000100'                             02S0222
* END;                                                          02S0223
*ELSE;                                                          02S0224
@RF00220 DS    0H                                               02S0225
*GROUPID = EDLGRID;                    /*SET GROUPID FROM CORRECT EDL
*                                        ENTRY FOUND BY FINDSPC      */
         MVC   GROUPID(4),EDLGRID(EDLGNTP)                      02S0225
*IF ^(((UCB3DACC=ON & (UCBPRES=ON                               02S0226
*  × UCBRESV=ON))                                               02S0226
*  × (UCB3TAPE = ON                                             02S0226
*  & UCBRESV = ON))) THEN                                       02S0226
         L     @10,UCBPTR                                       02S0226
         TM    UCB3DACC(@10),B'00100000'                        02S0226
         BNO   @GL00034                                         02S0226
         TM    UCBPRES(@10),B'00100100'                         02S0226
         BNZ   @RF00226                                         02S0226
@GL00034 L     @10,UCBPTR                                       02S0226
         TM    UCB3TAPE(@10),B'10000000'                        02S0226
         BNO   @RT00226                                         02S0226
         TM    UCBRESV(@10),B'00100000'                         02S0226
         BO    @RF00226                                         02S0226
@RT00226 DS    0H                                               02S0227
*  ARUUSEAT = ON;                      /*UPDATE USE ATTRIBUTE        */
         OI    ARUUSEAT,B'00001000'                             02S0227
*END;                                                           02S0228
@EL00002 DS    0H                                               02S0228
@EF00002 DS    0H                                               02S0228
@ER00002 LM    @14,@12,12(@13)                                  02S0228
         BR    @14                                              02S0228
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - UPDEDL                                            */
*/*                                                                  */
*/* DESCRIPTIVE NAME - UPDATE ELIGIBLE DEVICE LIST                   */
*/*                                                                  */
*/* FUNCTION -  THIS ROUTINE SETS ALL EDL ENTRIES,WHICH ARE OF A     */
*/*             DEVICE TYPE OTHER THAN THAT JUST ALLOCATED,          */
*/*             INELIGIBLE FOR THIS REQUEST.                         */
*/*                                                                  */
*/* ENTRY - A CLOSED SUBROUTINE OF IEFAB433.                         */
*/*   PURPOSE - SEE FUNCTION.                                        */
*/*                                                                  */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     EDLPTR - POINTER TO EDL ENTRY OF THE REQUEST JUST            */
*/*              ALLOCATED                                           */
*/*                                                                  */
*/* EXITS - RETURN TO CALLER.                                        */
*/*   CONDITION -                                                    */
*/*      ALL EDL ENTRIES FOR THIS REQUEST WHICH ARE OF A DIFFERENT   */
*/*      DEVICE TYPE THAN THE REQUEST JUST ALLOCATED MARKED          */
*/*      INELIGIBLE                                                  */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*     EINDEVTP - SET TO ONE, EDL ENTRIES ARE INELIGIBLE FOR        */
*/*                THIS REQUEST                                      */
*/*                                                                  */
*/*   RETURN CODE - NONE                                             */
*/*                                                                  */
*/********************************************************************/
*UPDEDL:                               /*INTERNAL PROC TO UPDATE THE */
*                                      /*EDL                         */
*PROC;                                                          02S0229
UPDEDL   STM   @14,@12,12(@13)                                  02S0229
*SAVEDLP = EDLPTR;                     /*SAVE PTR TO ALLOCATED EDL
*                                        ENTRY                       */
         LR    SAVEDLP,EDLPTR                                   02S0230
*EDLPTR = EDLFGENP;                    /*POINT TO FIRST ENTRY FOR
*                                        THIS REQUEST                */
         L     @10,SIOTPTR                                      02S0231
         L     @10,SIOTEDLP(,@10)                               02S0231
         L     EDLPTR,EDLFGENP(,@10)                            02S0231
*DO WHILE(EDLPTR^=ZERO);               /*SCAN FOR DIFFERENT DEVICE
*                                        TYPES                       */
         B     @DE00232                                         02S0232
@DL00232 DS    0H                                               02S0233
*  IF EDLDEVT ^= SAVEDLP -> EDLDEVT THEN /*SAME DEVICE TYPE ?        */
         CLC   EDLDEVT(4,EDLPTR),EDLDEVT(SAVEDLP)               02S0233
         BE    @RF00233                                         02S0233
*    DO;                                                        02S0234
*      EINDEVTP = ON;                  /*NO,MARK EDL ENTRY INELIGIBLE*/
         OI    EINDEVTP(EDLPTR),B'10000000'                     02S0235
*    END;                                                       02S0236
*  ELSE;                                                        02S0237
@RF00233 DS    0H                                               02S0238
*  EDLPTR = EDLNXTNT;                  /*INCREMENT TO NEXT EDL ENTRY */
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0238
*END;                                                           02S0239
@DE00232 LTR   EDLPTR,EDLPTR                                    02S0239
         BNZ   @DL00232                                         02S0239
*EDLPTR = SAVEDLP;                     /*RESTORE EDLPTR              */
         LR    EDLPTR,SAVEDLP                                   02S0240
*END UPDEDL;                           /*RETURN TO CALLER            */
@EL00003 DS    0H                                               02S0241
@EF00003 DS    0H                                               02S0241
@ER00003 LM    @14,@12,12(@13)                                  02S0241
         BR    @14                                              02S0241
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - VUSCAN                                            */
*/*                                                                  */
*/* DESCRIPTIVE NAME - VOLUNIT SCAN ROUTINE                          */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS ROUTINE SCANS ALL THE VOLUNIT ENTRIES FOR THE CURRENT SIOT*/
*/*   TO DETERMINE IF THE CURRENT ENTRY IS THE FIRST TO BE ALLOCATED */
*/*   FOR THIS REQUEST. IF NO OTHER ENTRIES HAVE BEEN ALLOCATED AN   */
*/*   ADDITIONAL CHECK IS MADE TO SEE IF THIS SIOT REPRESENTS A      */
*/*   MULTI-UNIT REQUEST. IF BOTH CONDITIONS ARE TRUE A SWITCH IS    */
*/*   SET TO INDICATE THAT THE EDL MUST BE UPDATED.                  */
*/*                                                                  */
*/* ENTRY POINT - THIS IS A CLOSED SUBROUTINE OF IEFAB433            */
*/*   PURPOSE - TO DETERMINE WHETHER THE EDL MUST BE UPDATED         */
*/*             BEFORE ALLOCATING THE REST OF THE REQUEST.           */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     SIOTPTR - PTR TO CURRENT SIOT                                */
*/*     SVOLUNAD - PTR TO FIRST VOLUNIT ENTRY FOR REQUEST (IN SIOT)  */
*/*     SVOLUNNO - NUMBER OF VOLUNIT ENTRIES FOR REQUEST (IN SIOT)   */
*/*     TVUPTR - POINTER TO VOLUNIT ENTRY JUST ALLOCATED             */
*/*                                                                  */
*/*                                                                  */
*/* EXITS -  RETURN TO CALLER                                        */
*/*                                                                  */
*/*   CONDITION - ALL VOLUNIT ENTRIES SCANNED                        */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*     UPEDLSW - SET ON IF EDL MUST BE UPDATED,OFF OTHERWISE        */
*/*                                                                  */
*/*   RETURN CODE - NONE                                             */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*VUSCAN:                                                        02S0242
*PROC;                                                          02S0242
VUSCAN   STM   @14,@12,12(@13)                                  02S0242
*VUALCSW = OFF;                        /*INIT LOOP EXIT CONDITION    */
         NI    VUALCSW,B'01111111'                              02S0243
*UPEDLSW = ON;                         /*INIT SWITCH TO-UPDATE REQ'D */
         OI    UPEDLSW,B'10000000'                              02S0244
*AVUPTR = SVOLUNAD;                    /*PT TO FIRST VU ENTRY FOR
*                                        THIS REQUEST                */
         L     @10,SIOTPTR                                      02S0245
         L     AVUPTR,SVOLUNAD(,@10)                            02S0245
*IF SIOTOTUN > ONE THEN                /*MULTI-UNIT REQUEST?         */
         CLI   SIOTOTUN(@10),1                                  02S0246
         BNH   @RF00246                                         02S0246
*  DO TVUCTR = ONE TO SVOLUNNO         /*YES,SCAN OTHER  VU ENTRIES  */
*    WHILE(VUALCSW = OFF);             /*UNTIL FIND ONE ALLOCATED    */
         LA    TVUCTR,1                                         02S0247
         B     @DE00247                                         02S0247
@DL00247 TM    VUALCSW,B'10000000'                              02S0247
         BNZ   @DC00247                                         02S0247
*    IF TVUPTR ^= AVUPTR THEN          /*DON'T CHECK CURRENT ENTRY   */
         CR    TVUPTR,AVUPTR                                    02S0248
         BE    @RF00248                                         02S0248
*      DO;                                                      02S0249
*        IF AVUPTR -> VOLALOC = ON  THEN /*ENTRY ALLOCATED?          */
         TM    VOLALOC(AVUPTR),B'10000000'                      02S0250
         BNO   @RF00250                                         02S0250
*          VUALCSW = ON;               /*YES,VU ENTRY FOR THIS  02S0251
*                                        REQUEST HAS ALREADY BEEN
*                                        ALLOCATED                   */
         OI    VUALCSW,B'10000000'                              02S0251
*      END;                                                     02S0252
*    ELSE;                             /*BYPASSED CURRENT ENTRY      */
@RF00248 DS    0H                                               02S0254
*    AVUPTR = AVUPTR + VOLENTLN;       /*PT TO NEXT ENTRY            */
@RC00248 AL    AVUPTR,VOLENTLN                                  02S0254
*  END;                                                         02S0255
         AH    TVUCTR,@CH00055                                  02S0255
@DE00247 L     @10,SIOTPTR                                      02S0255
         CH    TVUCTR,SVOLUNNO(,@10)                            02S0255
         BNH   @DL00247                                         02S0255
@DC00247 DS    0H                                               02S0256
*ELSE                                                           02S0256
*   VUALCSW = ON;                      /*FAKE THE 'NO UPDATE' COND'N */
         B     @RC00246                                         02S0256
@RF00246 OI    VUALCSW,B'10000000'                              02S0256
*IF VUALCSW = ON THEN                  /*ANY OTHERS ALLOCATED        */
@RC00246 TM    VUALCSW,B'10000000'                              02S0257
         BNO   @RF00257                                         02S0257
*  UPEDLSW = OFF;                      /*YES, UPDATE NOT REQUIRED    */
         NI    UPEDLSW,B'01111111'                              02S0258
*END VUSCAN;                           /*RETURN TO CALLER            */
@EL00004 DS    0H                                               02S0259
@EF00004 DS    0H                                               02S0259
@ER00004 LM    @14,@12,12(@13)                                  02S0259
         BR    @14                                              02S0259
*END                                                            01S0260
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A433SPEC)                                        *
*/*%INCLUDE SYSLIB  (A433DATA)                                        *
*/*%INCLUDE SYSLIB  (BALCDATA)                                        *
*/*%INCLUDE SYSLIB  (FNSPDATA)                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (UPEDLDAT)                                        *
*/*%INCLUDE SYSLIB  (VUSNDATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB425)                                        *
*/*%INCLUDE SYSLIB  (IEFZB428)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFZB422)                                        *
*/*%INCLUDE SYSLIB  (IEFZB423)                                        *
*/*%INCLUDE SYSLIB  (FINDSPC )                                        *
*/*%INCLUDE SYSLIB  (FNDSPSPC)                                        *
*/*%INCLUDE SYSLIB  (DMNDNEED)                                        *
*/*%INCLUDE SYSLIB  (DNEDSPEC)                                        *
*/*%INCLUDE SYSLIB  (BALCUNPM)                                        *
*/*%INCLUDE SYSLIB  (ARQINSPC)                                        *
*/*%INCLUDE SYSLIB  (UPDEDL  )                                        *
*/*%INCLUDE SYSLIB  (UPEDLSPC)                                        *
*/*%INCLUDE SYSLIB  (VUSCAN  )                                        *
*/*%INCLUDE SYSLIB  (VUSNSPEC)                                        *
*;                                                              01S0260
@DATA    DS    0H
@CH00055 DC    H'1'
@CH00129 DC    H'21'
@CH00089 DC    H'32'
@CH00093 DC    H'40'
@CH00101 DC    H'56'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@AL00001 DS    8A
@TF00001 DS    F
IEFAB433 CSECT
         DS    0F
@CF00891 DC    F'-4'
@DATD    DSECT
         DS    0D
EDLUCBLP DS    A
SIOTPTR  DS    A
UCBDATAP DS    A
UCBPTR   DS    A
VUPTR    DS    A
GROUPID  DS    F
FUNC442  DS    BL1
         ORG   FUNC442
UPALG442 DS    BL1
         ORG   FUNC442+1
ALLALCSW DS    BL1
MATCHSW  DS    BL1
NOSPECSW DS    BL1
UCBDATA  DS    CL9
         ORG   UCBDATA
@NM00003 DS    CL2
VOLUMEID DS    CL6
@NM00004 DS    CL1
         ORG   UCBDATA+9
UPEDLSW  DS    BL1
USEUCB   DS    BL1
         DS    CL1
ARUINDIC DS    BL4
         ORG   ARUINDIC
ARUETUPD DS    BL1
ARUUSECT EQU   ARUINDIC+0
ARUAFF   EQU   ARUINDIC+0
ARUVLCHK EQU   ARUINDIC+0
ARUUSEAT EQU   ARUINDIC+0
ARUUPDAL EQU   ARUINDIC+0
ARUVOLSW EQU   ARUINDIC+0
@NM00005 EQU   ARUINDIC+0
         ORG   ARUINDIC+4
ARUWORD  DS    CL4
         ORG   ARUWORD
ARURLPOS DS    FL2
ARUNODEV DS    FL2
         ORG   ARUWORD+4
FOUNDSW  DS    BL1
VUALCSW  DS    BL1
@OLDKEY  DS    AL1
IEFAB433 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00865 DC    V(IEFAB434)
@CV00866 DC    V(IEFAB442)
         DS    0D
VOLENTLN DC    AL4(28)
TAPEGEND DC    X'FF'
IEFAB433 CSECT
         DS   0H
A433PTCH DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB433 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SAVEDLP  EQU   @02
VUCTR    EQU   @08
UCBENTNO EQU   @06
BVUCTR   EQU   @03
TVUCTR   EQU   @07
SIOTCTR  EQU   @10
RETCODE  EQU   @04
I        EQU   @03
TVUPTR   EQU   @09
SPTR     EQU   @02
EDLPTR   EQU   @03
EDLGNTP  EQU   @05
BVUPTR   EQU   @02
AVUPTR   EQU   @02
REG15    EQU   @15
PSCPARM  EQU   0
PSSWTCHS EQU   PSCPARM
PERMRES  EQU   PSSWTCHS
MOUNTED  EQU   PSSWTCHS
ONEGNRIC EQU   PSSWTCHS
VOLSWOK  EQU   PSSWTCHS
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBONLI  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3TAPE EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00009 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
ALCWA    EQU   0
FMAPPTR  EQU   ALCWA+4
SIOT1P   EQU   ALCWA+8
CNTABLE  EQU   ALCWA+28
SPECREQS EQU   CNTABLE+12
TOTREQS  EQU   CNTABLE+36
NUMREQS  EQU   CNTABLE+40
TOTVOLUN EQU   CNTABLE+44
INDICATE EQU   ALCWA+112
INDRETRY EQU   INDICATE
@NM00011 EQU   ALCWA+113
TIOTHDRP EQU   ALCWA+120
LGENLOCK EQU   ALCWA+124
NAMES    EQU   0
FUNCMAP  EQU   0
VOLMNTSW EQU   FUNCMAP
WRTMSGSW EQU   FUNCMAP
UWAITSW  EQU   FUNCMAP
VWAITSW  EQU   FUNCMAP
OFFDEVSW EQU   FUNCMAP
CCLMNTSW EQU   FUNCMAP
GENLOKSW EQU   FUNCMAP
HDRMSGSW EQU   FUNCMAP+1
MTRJOBSW EQU   FUNCMAP+1
NOTIOTNQ EQU   FUNCMAP+1
TRKMSW   EQU   FUNCMAP+1
WAITOKSW EQU   FUNCMAP+1
ASNMSW   EQU   FUNCMAP+1
INDMSIOT EQU   0
SCTUSADD EQU   INDMSIOT+20
SIOTOTUN EQU   INDMSIOT+39
SIOTBYT1 EQU   INDMSIOT+43
SIOTALCD EQU   SIOTBYT1
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SIOTGIGN EQU   SIOTBYT0
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOUCBAD EQU   SCTUTYPE+5
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
SIOTDMND EQU   SIOTBYT2
SIOTRSNC EQU   INDMSIOT+130
SIOTEDLP EQU   INDMSIOT+136
SVOLUNAD EQU   INDMSIOT+140
SIOTETIO EQU   INDMSIOT+148
SIOTNPTR EQU   INDMSIOT+152
SVOLUNNO EQU   INDMSIOT+168
IEFEDL   EQU   0
EDLHDR   EQU   IEFEDL
EDLFGENP EQU   EDLHDR+8
EDLUVFLG EQU   EDLHDR+16
EDLMGENS EQU   EDLUVFLG
EDLENTRY EQU   0
EDLNXTNT EQU   EDLENTRY
EDLDEVT  EQU   EDLENTRY+4
EDLGRPTR EQU   EDLENTRY+12
EDLDTFLG EQU   EDLENTRY+20
EINDEVTP EQU   EDLDTFLG
EDLGNTRY EQU   0
EDLNXGRP EQU   EDLGNTRY
EDLUCBNO EQU   EDLGNTRY+4
EDLLISTP EQU   EDLGNTRY+8
EDLGRID  EQU   EDLGNTRY+12
EDLGRFLG EQU   EDLGNTRY+16
EDLJINEL EQU   EDLGRFLG
EDLUCBL  EQU   0
EDLUCBAD EQU   EDLUCBL
EDLINDIC EQU   EDLUCBL+2
EDLALCD  EQU   EDLINDIC
EDLNOJES EQU   EDLINDIC
VOLUNTAB EQU   0
VOLID    EQU   VOLUNTAB
VOLSTAT  EQU   VOLUNTAB+6
VOLSTATA EQU   VOLSTAT
VOLSPEC  EQU   VOLSTATA
VOLSTATB EQU   VOLSTAT+1
VOLALOC  EQU   VOLSTATB
VDEVREQD EQU   VOLSTATB
VUDNALOC EQU   VOLSTATB
VUVINELG EQU   VOLSTATB
VOLSTATC EQU   VOLSTAT+2
VOLSTATD EQU   VOLSTAT+3
VOLUNTID EQU   VOLUNTAB+10
UCBBGN   EQU   0
ALCWAPTR EQU   0
PSCPARMP EQU   0
UCBOBS01 EQU   UCBDEV
UCBVOLI  EQU   UCBOBS01+4
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBMOUNT EQU   UCBDMCT
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00008 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00008
UCBSKPFG EQU   @NM00008
UCBRIPND EQU   @NM00008
UCBRTIAC EQU   @NM00008
UCBRSV79 EQU   @NM00008
UCBRSV78 EQU   @NM00008
UCBRSV77 EQU   @NM00008
UCBOLTEP EQU   @NM00008
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00007 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVTOC  EQU   UCBOBS01
VUGRID   EQU   VOLUNTAB+24
VUUCBP   EQU   VOLUNTAB+20
VOLSIOTP EQU   VOLUNTAB+16
VOLALGTP EQU   VOLUNTAB+12
VURCVYPR EQU   VOLSTATD
VUVLUNIQ EQU   VOLSTATD
VUDMUNIQ EQU   VOLSTATD
VUUNALSW EQU   VOLSTATD
VUDMNDAL EQU   VOLSTATD
VUDMNDOF EQU   VOLSTATD
VUREALOC EQU   VOLSTATD
VUMUGDON EQU   VOLSTATD
@NM00031 EQU   VOLSTATC
@NM00030 EQU   VOLSTATC
VURECVRY EQU   VOLSTATC
VOLURREQ EQU   VOLSTATC
VOLGRREQ EQU   VOLSTATC
VOLDAREQ EQU   VOLSTATC
VOLCOREQ EQU   VOLSTATC
VOLTAREQ EQU   VOLSTATC
VUAFFWRK EQU   VOLSTATB
VUDADSME EQU   VOLSTATB
VUPROCED EQU   VOLSTATB
VOLMNTD  EQU   VOLSTATB
VOLDEFER EQU   VOLSTATA
VUDADSM  EQU   VOLSTATA
VOLRESVE EQU   VOLSTATA
VOLNSHR  EQU   VOLSTATA
VOLSTG   EQU   VOLSTATA
VOLPRV   EQU   VOLSTATA
VOLPUB   EQU   VOLSTATA
EDLVOLAF EQU   EDLINDIC
EDLENQ   EQU   EDLINDIC
EDLDADSM EQU   EDLINDIC
@NM00029 EQU   EDLENTRY+18
EDLNSCNT EQU   EDLENTRY+16
EDLGRPNO EQU   EDLENTRY+8
EDLVAM   EQU   EDLUVFLG
EDLGMTP  EQU   EDLHDR+12
EDLGENNO EQU   EDLHDR+4
EDLLUV   EQU   EDLHDR
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTATE  EQU   INDMSIOT+144
SIOTEDLS EQU   INDMSIOT+132
SCTANAME EQU   INDMSIOT+122
@NM00028 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00027 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00026 EQU   SIOTALTD
@NM00025 EQU   SIOTALTD
@NM00024 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00023 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00022 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00021 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
SIOTAFF  EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
SCTALCHK EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
SIOTRETN EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
SIOTDSNM EQU   SIOTTSTC
SIOTTRKM EQU   SIOTTSTC
@NM00020 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00019 EQU   SIOTTSTC
@NM00018 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTVRSB EQU   INDMSIOT+36
@NM00017 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00016 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
@NM00015 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SCTDDNAM EQU   INDMSIOT+4
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
EXTRACAL EQU   FUNCMAP+1
ALCASDSN EQU   ASNMSW
ALCSUBWT EQU   WAITOKSW
ALCATRKM EQU   TRKMSW
ALCNOENQ EQU   NOTIOTNQ
ALCJOBNM EQU   MTRJOBSW
ALCHDMSG EQU   HDRMSGSW
@NM00014 EQU   FUNCMAP+1
ALCGENER EQU   GENLOKSW
ALCCANCL EQU   CCLMNTSW
ALCOFFDV EQU   OFFDEVSW
@NM00013 EQU   FUNCMAP
ALCWTVOL EQU   VWAITSW
ALCWTUNT EQU   UWAITSW
ALCMSGLV EQU   WRTMSGSW
ALCMOUNT EQU   VOLMNTSW
ALCPROCN EQU   NAMES+16
ALCSTEPN EQU   NAMES+8
ALCJOBN  EQU   NAMES
EXITPRMP EQU   ALCWA+144
CANCELP  EQU   ALCWA+140
WORK3MP  EQU   ALCWA+136
WMASK2P  EQU   ALCWA+132
WMASKPTR EQU   ALCWA+128
TCBP     EQU   ALCWA+116
ALCWASID EQU   ALCWA+114
@NM00012 EQU   @NM00011
NODEVERR EQU   @NM00011
NEEDRCVY EQU   @NM00011
ALCWAREC EQU   @NM00011
WAITIGEN EQU   @NM00011
UNITRECS EQU   @NM00011
ALCWADUL EQU   INDICATE
ALCWISAM EQU   INDICATE
DSSUNIT  EQU   INDICATE
DSSTAPE  EQU   INDICATE
PRIVASUM EQU   INDICATE
INDREQU  EQU   INDICATE
INDWAIT  EQU   INDICATE
QMGRRBP  EQU   ALCWA+108
RIMTABCT EQU   ALCWA+104
RIMTABLN EQU   ALCWA+100
RIMTABP  EQU   ALCWA+96
ALGTABSZ EQU   ALCWA+92
ALGTABP  EQU   ALCWA+88
VOLUNSZE EQU   ALCWA+84
VOLUNPTR EQU   ALCWA+80
@NM00010 EQU   ALCWA+78
LTUNITID EQU   ALCWA+76
OTHEREQS EQU   CNTABLE+32
SUBSREQS EQU   CNTABLE+28
STRGREQS EQU   CNTABLE+24
PUBLREQS EQU   CNTABLE+20
PVTNREQS EQU   CNTABLE+16
TPREQS   EQU   CNTABLE+8
VAMREQS  EQU   CNTABLE+4
DMYREQS  EQU   CNTABLE
EDTABPTR EQU   ALCWA+24
FAILRSCP EQU   ALCWA+20
IOSLUTP  EQU   ALCWA+16
JSCBPTR  EQU   ALCWA+12
WASIZE   EQU   ALCWA
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00009
UCBHALI  EQU   @NM00009
UCBRSV09 EQU   @NM00009
UCBRSV08 EQU   @NM00009
UCBRSV07 EQU   @NM00009
UCBRSV06 EQU   @NM00009
UCBRSV05 EQU   @NM00009
UCBRSV04 EQU   @NM00009
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00006 EQU   UCB
PRLSTLEN EQU   PSCPARM+4
@NM00002 EQU   PSCPARM+1
@NM00001 EQU   PSSWTCHS
PUBSTOR  EQU   PSSWTCHS
STORAGE  EQU   PSSWTCHS
PUBLIC   EQU   PSSWTCHS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00075 EQU   @RC00073
@RC00058 EQU   @RC00057
@RC00186 EQU   @RC00053
@RF00226 EQU   @EL00002
@RF00250 EQU   @RC00248
@RF00257 EQU   @EL00004
@RC00076 EQU   @RC00075
@RC00060 EQU   @RC00058
@RF00190 EQU   @RC00186
@RC00077 EQU   @RC00076
@RC00119 EQU   @RC00060
@RC00079 EQU   @RC00077
@RC00134 EQU   @RC00119
@RC00147 EQU   @RC00134
@RC00155 EQU   @RC00147
@RF00163 EQU   @RC00155
@ENDDATA EQU   *
         END   IEFAB433,(C'PLS0953',0701,76265)
