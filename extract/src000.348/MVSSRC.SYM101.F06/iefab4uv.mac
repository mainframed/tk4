         TITLE 'IEFAB4UV - UNIT VERIFICATION ROUTINE                   *
                        '
IEFAB4UV CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB4UV  78.089'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GETMAIN  R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(8),0(@01)                               01S0001
         MODESET EXTKEY=SCHED
*                                        IN # OF BYTES AND IS GIVEN
*                                        IN HDR OF THIS SECTION      */
*RETCODE = SUCCESS;                    /*INITIALIZE RETURN CODE      */
         SLR   RETCODE,RETCODE                                  01S0054
*EDTPTR = ADDR(EDTTAB);                /*PTR TO EDT                  */
         L     @08,@CA00146                                     01S0055
         ST    @08,EDTPTR                                       01S0055
*IOSLUTP = CVTILK2;                    /*PTR TO IOS UCB LOOK-UP TABLE*/
         L     @08,CVTPTR                                       01S0056
         L     @08,CVTILK2(,@08)                                01S0056
         ST    @08,IOSLUTP                                      01S0056
*UCBLISTP = ZERO;                      /*CLEAR PTR TO UCB LIST       */
         SLR   @08,@08                                          01S0057
         ST    @08,UCBLISTP                                     01S0057
*IF CHKUNITS = ON × RETNUCBS = ON THEN /*CHK UNITS REQUESTED OR RETURN
*                                        UCBS REQUESTED      @Y30LPPC*/
         L     @08,@PC00001+4                                   01S0058
         TM    CHKUNITS(@08),B'01010000'                        01S0058
         BZ    @RF00058                                         01S0058
*  DO;                                                          01S0059
*    CALL CKUNITNM;                    /*VALIDATE INPUT UNIT NAME    */
         BAL   @14,CKUNITNM                                     01S0060
*  END;                                                         01S0061
*ELSE;                                 /*CHECK UNITS NOT REQUESTED   */
@RF00058 DS    0H                                               01S0063
*IF RETCODE = SUCCESS &                /*UNIT NAME VALID             */
*   (CHKUNITS = ON ×                   /*CHECK UNITS REQUESTED       */
*    CHKGROUP = ON) THEN               /*OR CHECK GROUPS REQUESTED   */
         LTR   RETCODE,RETCODE                                  01S0063
         BNZ   @RF00063                                         01S0063
         L     @08,@PC00001+4                                   01S0063
         TM    CHKUNITS(@08),B'11000000'                        01S0063
         BZ    @RF00063                                         01S0063
*  DO;                                                          01S0064
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONVERT                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CONVERT INPUT UNIT ADDRESSES TO UCB ADDRESSES */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   IF A LIST OF EBCDIC UNIT ADDRESSES WAS RECEIVED AS INPUT,      */
*/*   THIS SEGMENT IS INCLUDED TO CONVERT THE UNIT ADDRESSES TO      */
*/*   UCB ADDRESSES.                                                 */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     THE IOS UCB LOOK-UP TABLE IS USED TO SCAN ALL UCBS. EACH     */
*/*     INPUT UNIT ADDRESS IS COMPARED AGAINST THE UCBNAME FIELD     */
*/*     OF EACH UCB. WHEN A MATCH IS FOUND, THE ADDRESS OF THE       */
*/*     UCB IS PLACED IN A TABLE OF UCB ADDRESSES. THE SEARCH ENDS   */
*/*     WHEN ALL UNIT ADDRESSES HAVE BEEN CONVERTED OR WHEN THE      */
*/*     END OF THE IOS UCB LOOK-UP TABLE HAS BEEN REACHED.           */
*/*                                                                  */
*/* ENTRY - IN-LINE SUBROUTINE                                       */
*/*   PURPOSE - CONVERT UNIT ADDRESSES TO UCB ADDRESSES              */
*/*   INPUT -                                                        */
*/*     UNITNUMB - NUMBER OF INPUT UNIT ADDRESSES                    */
*/*     UNITADS - UNIT ADDRESSES                                     */
*/*                                                                  */
*/* EXIT-NORMAL -                                                    */
*/*   CONDITION - ALL UNIT ADDRESSES CONVERTED TO UCB ADDRESSES      */
*/*   OUTPUT - UCB ADDRESS LIST (UCBLIST) BUILT                      */
*/*   RETURN CODE - 0                                                */
*/*                                                                  */
*/* EXIT-ERROR -                                                     */
*/*   CONDITION - GETMAIN ERROR                                      */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 16                                               */
*/*                                                                  */
*/*   CONDITION - ONE OR MORE UNIT ADDRESS INVALID                   */
*/*   OUTPUT -                                                       */
*/*     HIGH ORDER BIT IN THE FLAG FIELD ASSOCIATED WITH EACH        */
*/*     INVALID ENTRY IS SET TO 1                                    */
*/*   RETURN CODE - 20                                               */
*/*                                                                  */
*/********************************************************************/
*SUBPL = SUBPLNUM;                     /*SUBPOOL 230 FOR GETMAIN     */
         LA    @15,230                                          02S0065
         ST    @15,SUBPL                                        02S0065
*LISTSIZE = LENGTH(UCBENT) * UNITNUMB; /*SIZE OF CORE FOR UCB LIST   */
         L     @14,@PC00001                                     02S0066
         L     @14,UNITNUMB(,@14)                               02S0066
         SLA   @14,2                                            02S0066
         ST    @14,LISTSIZE                                     02S0066
* /* ?GETSTORG (SUBPL,LISTSIZE,UCBLISTP);*/                     02S0067
*   /* DEFINITIONS OF GETMAIN PARMS */                          02S0067
*   DCL                                                         02S0067
*     GTSTR0   FIXED(31) REG(0),/*GTMN PARM REG*/               02S0067
*     GTSTR1   FIXED(31) REG(1),/*GTMN PARM REG*/               02S0067
*     GTSTR2   PTR(31)   REG(2),/*GTMN PARM REG*/               02S0067
*     GTSTR15  FIXED(31) REG(15),/*GTMN RET COD*/               02S0067
*     GTSTRTCD FIXED(31); /* GETMAIN RTN CODE  */               02S0067
*   DCL                                                         02S0068
*     GTSTR3   FIXED(31) REG(3),/* CLEARING REG*/               02S0068
*     GTSTR4   FIXED(31) REG(4),/* CLEARING REG*/               02S0068
*     GTSTR5   FIXED(31) REG(5),/* CLEARING REG*/               02S0068
*     GTSTR6   FIXED(31) REG(6),/* CLEARING REG*/               02S0068
*     GTSTR7   FIXED(31) REG(7),/* CLEARING REG*/               02S0068
*     GTSTR8   FIXED(31) REG(8),/* CLEARING REG*/               02S0068
*     GTSTZERO FIXED(31) INIT(0),                               02S0068
*     GTST253  FIXED(31) CONSTANT(253);                         02S0068
*   RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/               02S0069
*   GTSTR0 = LISTSIZE; /* SET AMOUNT*/                          02S0070
         LR    GTSTR0,@14                                       02S0070
*   GTSTR2 = SUBPL; /* SET SUBPOOL*/                            02S0071
         LR    GTSTR2,@15                                       02S0071
*   GENERATE CODE;                                              02S0072
     GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN
*   GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/               02S0073
         ST    GTSTR15,GTSTRTCD                                 02S0073
*   UCBLISTP = GTSTR1; /* ADDR OF GOTN STORG*/                  02S0074
         ST    GTSTR1,UCBLISTP                                  02S0074
*   RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */                02S0075
*   IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */               02S0076
         L     @15,GTSTRTCD                                     02S0076
         LTR   @15,@15                                          02S0076
         BNZ   @RF00076                                         02S0076
*     DO;               /* YES, CLEAR STORAGE.*/                02S0077
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       02S0078
*                          GTSTR7,GTSTR8) RSTD;                 02S0078
*       GTSTR4 = UCBLISTP; /*STORG PTR*/                        02S0079
         L     @09,UCBLISTP                                     02S0079
         LR    GTSTR4,@09                                       02S0079
*       GTSTR5 = LISTSIZE; /*STORG AMNT*/                       02S0080
         L     GTSTR5,LISTSIZE                                  02S0080
*       GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/               02S0081
         SLR   GTSTR7,GTSTR7                                    02S0081
*       IF SUBPL = GTST253 THEN                                 02S0082
         CLC   SUBPL(4),@CF01264                                02S0082
         BNE   @RF00082                                         02S0082
*      GEN                                                      02S0083
*   (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);           02S0083
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8
*       GEN REFS(GTSTR4,GTSTR6);                                02S0084
@RF00082 DS    0H                                               02S0084
          MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG
*       IF SUBPL = GTST253 THEN                                 02S0085
         CLC   SUBPL(4),@CF01264                                02S0085
         BNE   @RF00085                                         02S0085
*         GEN (MODESET KEYADDR=(2));                            02S0086
         MODESET KEYADDR=(2)
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       02S0087
*                          GTSTR7,GTSTR8) UNRSTD;               02S0087
@RF00085 DS    0H                                               02S0088
*     END;       /* STORAGE CLEARING COMPLETED */               02S0088
*   ELSE                                                        02S0089
*   UCBLISTP= 0;   /* CLEAR RETURN ADDR. */                     02S0089
         B     @RC00076                                         02S0089
@RF00076 SLR   @15,@15                                          02S0089
         ST    @15,UCBLISTP                                     02S0089
*   GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */               02S0090
@RC00076 L     GTSTR15,GTSTRTCD                                 02S0090
*                                      /* RESTORE LIST PRINT STATUS  */
* /*GET CORE FOR UCB LIST       */                              02S0091
*RETCODE = REG15;                      /*SAVE RETURN CODE            */
         LR    RETCODE,REG15                                    02S0091
*IF RETCODE = SUCCESS THEN             /*GETMAIN SUCCESSFUL          */
         LTR   RETCODE,RETCODE                                  02S0092
         BNZ   @RF00092                                         02S0092
*  DO;                                 /*CONVERT INPUT TO UCB ADDRS  */
*    DO ADDRINDX = 1 TO UNITNUMB;      /*INIT ADDRESS NOT FOUND      */
         LA    ADDRINDX,1                                       02S0094
         B     @DE00094                                         02S0094
@DL00094 DS    0H                                               02S0095
*      INVALID(ADDRINDX) = ON;         /*MARK INVALID                */
         LR    @08,ADDRINDX                                     02S0095
         SLA   @08,2                                            02S0095
         L     @04,@PC00001                                     02S0095
         L     @04,UNITPTR(,@04)                                02S0095
         ALR   @04,@08                                          02S0095
         BCTR  @04,0                                            02S0095
         OI    INVALID-3(@04),B'10000000'                       02S0095
*    END;                                                       02S0096
         AL    ADDRINDX,@CF00040                                02S0096
@DE00094 L     @08,@PC00001                                     02S0096
         C     ADDRINDX,UNITNUMB(,@08)                          02S0096
         BNH   @DL00094                                         02S0096
*    NUMFOUND = ZERO;                  /*INIT NO. UCB ADDRS FOUND    */
         SLR   NUMFOUND,NUMFOUND                                02S0097
*    DO LUTCTR = 1 BY 1                /*SCAN UCBS FOR DEVICE MATCH  */
*       WHILE(IOSLUT(LUTCTR) ^= LISTEND & NUMFOUND ^= UNITNUMB);
         LA    LUTCTR,1                                         02S0098
         B     @DE00098                                         02S0098
@DL00098 DS    0H                                               02S0099
*      IF IOSLUT(LUTCTR) ^= ZERO THEN  /*UCB PTR NOT ZERO            */
         LR    @08,LUTCTR                                       02S0099
         ALR   @08,@08                                          02S0099
         L     @01,IOSLUTP                                      02S0099
         BCTR  @01,0                                            02S0099
         BCTR  @01,0                                            02S0099
         LH    @08,IOSLUT(@08,@01)                              02S0099
         N     @08,@CF01280                                     02S0099
         LTR   @08,@08                                          02S0099
         BZ    @RF00099                                         02S0099
*        DO;                           /*SEARCH FOR MATCH            */
*          FOUNDSW = OFF;              /*INIT NO MATCH FOR THIS UCB  */
         NI    FOUNDSW,B'10111111'                              02S0101
*          DO ADDRINDX = 1 TO UNITNUMB /*COMPARE INPUT ADDRESSES     */
*             WHILE(FOUNDSW = OFF);    /*AGAINST ADDRESSES IN UCB    */
         LA    ADDRINDX,1                                       02S0102
         B     @DE00102                                         02S0102
@DL00102 TM    FOUNDSW,B'01000000'                              02S0102
         BNZ   @DC00102                                         02S0102
*            IF ADDRS(ADDRINDX) =                               02S0103
*               IOSLUT(LUTCTR)->UCBNAME &  /*MATCH-UCB FOUND @ZA03634*/
*               INVALID(ADDRINDX)=ON THEN   /*ENTRY NOT DONE  @ZA03634*
         LR    @08,ADDRINDX                                     02S0103
         SLA   @08,2                                            02S0103
         L     @04,@PC00001                                     02S0103
         L     @04,UNITPTR(,@04)                                02S0103
         LR    @15,LUTCTR                                       02S0103
         ALR   @15,@15                                          02S0103
         L     @01,IOSLUTP                                      02S0103
         BCTR  @01,0                                            02S0103
         BCTR  @01,0                                            02S0103
         LH    @15,IOSLUT(@15,@01)                              02S0103
         N     @15,@CF01280                                     02S0103
         ST    @08,@TF00001                                     02S0103
         ALR   @08,@04                                          02S0103
         AL    @08,@CF01282                                     02S0103
         CLC   ADDRS(3,@08),UCBNAME(@15)                        02S0103
         BNE   @RF00103                                         02S0103
         LR    @08,@04                                          02S0103
         AL    @08,@TF00001                                     02S0103
         BCTR  @08,0                                            02S0103
         TM    INVALID-3(@08),B'10000000'                       02S0103
         BNO   @RF00103                                         02S0103
*               DO;                    /*PROCESS MATCH               */
*                UCBENT(ADDRINDX) =                             02S0105
*                  IOSLUT(LUTCTR);     /*STORE UCB PTR IN ADDR LIST  */
         L     @08,UCBLISTP                                     02S0105
         L     @14,@TF00001                                     02S0105
         AL    @08,@CF01282                                     02S0105
         ST    @15,UCBENT(@14,@08)                              02S0105
*                INVALID(ADDRINDX) = OFF; /*SHOW INPUT ADDR VALID    */
         AL    @04,@TF00001                                     02S0106
         BCTR  @04,0                                            02S0106
         NI    INVALID-3(@04),B'01111111'                       02S0106
*                FOUNDSW = ON;         /*MATCH FOUND FOR THIS UCB    */
         OI    FOUNDSW,B'01000000'                              02S0107
*                NUMFOUND = NUMFOUND + 1; /*INCREMENT NO. MATCHES FND*/
         AL    NUMFOUND,@CF00040                                02S0108
*              END;                    /*END PROCESS MATCH           */
*            ELSE;                     /*NO MATCH                    */
@RF00103 DS    0H                                               02S0111
*          END;                        /*END OF INPUT ADDRS          */
         AL    ADDRINDX,@CF00040                                02S0111
@DE00102 L     @08,@PC00001                                     02S0111
         C     ADDRINDX,UNITNUMB(,@08)                          02S0111
         BNH   @DL00102                                         02S0111
@DC00102 DS    0H                                               02S0112
*        END;                          /*END SEARCH FOR MATCH        */
*      ELSE;                           /*ZERO UCB PTR                */
@RF00099 DS    0H                                               02S0114
*    END;                              /*END SCAN                    */
         AL    LUTCTR,@CF00040                                  02S0114
@DE00098 LR    @08,LUTCTR                                       02S0114
         ALR   @08,@08                                          02S0114
         L     @01,IOSLUTP                                      02S0114
         ALR   @01,@08                                          02S0114
         BCTR  @01,0                                            02S0114
         BCTR  @01,0                                            02S0114
         CLC   IOSLUT(2,@01),LISTEND                            02S0114
         BE    @DC00098                                         02S0114
         L     @08,@PC00001                                     02S0114
         C     NUMFOUND,UNITNUMB(,@08)                          02S0114
         BNE   @DL00098                                         02S0114
@DC00098 DS    0H                                               02S0115
*    IF NUMFOUND ^= UNITNUMB THEN      /*NOT ALL ADDRS FOUND         */
         L     @08,@PC00001                                     02S0115
         C     NUMFOUND,UNITNUMB(,@08)                          02S0115
         BE    @RF00115                                         02S0115
*      RETCODE = BADADDR;              /*SET ERROR RETURN CODE       */
         LA    RETCODE,20                                       02S0116
*  END;                                /*END CONVERT                 */
*ELSE                                  /*GETMAIN ERROR               */
*  RETCODE = GETERR;                   /*SET ERROR RETURN CODE       */
         B     @RC00092                                         02S0118
@RF00092 LA    RETCODE,16                                       02S0118
*    IF RETCODE = SUCCESS THEN         /*CONVERSION SUCCESSFUL       */
@RC00092 LTR   RETCODE,RETCODE                                  01S0119
         BNZ   @RF00119                                         01S0119
*      DO;                                                      01S0120
*        IF CHKUNITS = ON THEN         /*CHECK UNITS REQUESTED       */
         L     @08,@PC00001+4                                   01S0121
         TM    CHKUNITS(@08),B'01000000'                        01S0121
         BNO   @RF00121                                         01S0121
*          DO;                                                  01S0122
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CHKUNIT                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK IF UNITS ASSOCIATED WITH INPUT UNIT     */
*/*                    NAME ARE VALID                                */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS SEGMENT IS INCLUDED IF THE CALLER HAS REQUESTED THE       */
*/*   'CHECK UNITS' FUNCTION. THIS ROUTINE DETERMINES IF ALL         */
*/*   THE INPUT UNIT ADDRESSES ARE ASSOCIATED WITH THE INPUT UNIT    */
*/*   NAME.                                                          */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     THIS ROUTINE SCANS ALL OF THE EDT GENERIC, GROUP, AND UCB    */
*/*     ENTRIES WHICH ARE ASSOCIATED WITH THE INPUT UNIT NAME.       */
*/*     THE POINTER TO THE EDT ENTRY FOR THE INPUT UNIT NAME WAS     */
*/*     LOCATED BY SEGMENT CKUNITNM. THE UCB ADDRESSES IN THE        */
*/*     LIST BUILT BY SEGMENT CONVERT ARE COMPARED AGAINST THE       */
*/*     UCB ADDRESSES LOCATED BY THE INDEX VALUES IN THE EDT UCB     */
*/*     ENTRIES.                                                     */
*/*                                                                  */
*/* ENTRY - IN-LINE SUBROUTINE                                       */
*/*   PURPOSE - SEE FUNCTION                                         */
*/*   INPUT -                                                        */
*/*     PTR TO EDT LOOK-UP VALUE ENTRY                               */
*/*     UNITNUMB - NUMBER OF INPUT UNIT ADDRESSES                    */
*/*     UCBLIST - LIST OF UCB ADDRESSES DERIVED FROM INPUT UNIT ADDRS*/
*/*                                                                  */
*/* EXIT-NORMAL -                                                    */
*/*   CONDITION - ALL UCB ADDRESSES ASSOCIATED WITH UNIT NAME        */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 0                                                */
*/*                                                                  */
*/* EXIT-ERROR -                                                     */
*/*   CONDITION - UCB ADDRESS NOT ASSOCIATED WITH UNIT NAME          */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 8                                                */
*/*                                                                  */
*/********************************************************************/
*GENPTR = LUVGENP;                     /*PTR TO 1ST GENERIC ENTRY    */
         L     GENPTR,LUVGENP(,LUVPTR)                          02S0123
*NUMFOUND = ZERO;                      /*INIT COUNT OF UNITS FOUND   */
         SLR   NUMFOUND,NUMFOUND                                02S0124
*RFY GRPENTRY BASED(GRPTR);                                     02S0125
*DO GENCTR = 1 TO LUVGENNO             /*SCAN ALL GENERICS           */
*   WHILE(NUMFOUND ^= UNITNUMB);       /*UNTIL ALL UNITS FOUND       */
         LA    GENCTR,1                                         02S0126
         B     @DE00126                                         02S0126
@DL00126 L     @05,@PC00001                                     02S0126
         C     NUMFOUND,UNITNUMB(,@05)                          02S0126
         BE    @DC00126                                         02S0126
*  GRPTABP = GENGRPTR;                 /*PTR 1ST GROUP ENTRY         */
         L     GRPTABP,GENGRPTR(,GENPTR)                        02S0127
*  DO GRPCTR = 1 TO GENGRPNO           /*SCAN ALL GROUP ENTRIES      */
*     WHILE(NUMFOUND ^= UNITNUMB);     /*UNTIL ALL UNITS FOUND       */
         LA    GRPCTR,1                                         02S0128
         B     @DE00128                                         02S0128
@DL00128 L     @06,@PC00001                                     02S0128
         C     NUMFOUND,UNITNUMB(,@06)                          02S0128
         BE    @DC00128                                         02S0128
*    DO UCBCTR = 1 TO GRPUCBNO         /*SCAN ALL UCB ENTRIES        */
*       WHILE(NUMFOUND ^= UNITNUMB);   /*UNTIL ALL UNITS FOUND       */
         LA    UCBCTR,1                                         02S0129
         B     @DE00129                                         02S0129
@DL00129 L     @05,@PC00001                                     02S0129
         C     NUMFOUND,UNITNUMB(,@05)                          02S0129
         BE    @DC00129                                         02S0129
*      FOUNDSW = OFF;                  /*INIT MATCH NOT FOUND        */
         NI    FOUNDSW,B'10111111'                              02S0130
*      DO ADDRINDX = 1 TO UNITNUMB     /*SCAN ALL INPUT UCB ADDRS    */
*         WHILE(FOUNDSW = OFF);        /*UNTIL MATCH IS FOUND        */
         LA    ADDRINDX,1                                       02S0131
         B     @DE00131                                         02S0131
@DL00131 TM    FOUNDSW,B'01000000'                              02S0131
         BNZ   @DC00131                                         02S0131
*        IF UCBENT(ADDRINDX) =                                  02S0132
*           IOSLUT(EUCBTPOS(UCBCTR) + 1) THEN /*MATCH                */
         LR    @15,ADDRINDX                                     02S0132
         SLA   @15,2                                            02S0132
         LR    @14,UCBCTR                                       02S0132
         ALR   @14,@14                                          02S0132
         L     @01,GRPTR(,GRPTABP)                              02S0132
         L     @01,GRPUCBP(,@01)                                02S0132
         BCTR  @01,0                                            02S0132
         BCTR  @01,0                                            02S0132
         LH    @14,EUCBTPOS(@14,@01)                            02S0132
         ALR   @14,@14                                          02S0132
         L     @01,IOSLUTP                                      02S0132
         LH    @14,IOSLUT(@14,@01)                              02S0132
         N     @14,@CF01280                                     02S0132
         L     @01,UCBLISTP                                     02S0132
         AL    @01,@CF01282                                     02S0132
         C     @14,UCBENT(@15,@01)                              02S0132
         BNE   @RF00132                                         02S0132
*          DO;                         /*INDICATE MATCH              */
*            NUMFOUND = NUMFOUND + 1;  /*INCREMENT TOTAL FOUND CTR   */
         AL    NUMFOUND,@CF00040                                02S0134
*            FOUNDSW = ON;             /*EXIT LOOP FOR THIS UCB      */
         OI    FOUNDSW,B'01000000'                              02S0135
*          END;                        /*END INDICATE MATCH          */
*        ELSE;                         /*NO MATCH                    */
@RF00132 DS    0H                                               02S0138
*      END;                            /*END INPUT UCB ADDR SCAN     */
         AL    ADDRINDX,@CF00040                                02S0138
@DE00131 L     @15,@PC00001                                     02S0138
         C     ADDRINDX,UNITNUMB(,@15)                          02S0138
         BNH   @DL00131                                         02S0138
@DC00131 DS    0H                                               02S0139
*    END;                              /*END UCB ENTRY SCAN          */
         AL    UCBCTR,@CF00040                                  02S0139
@DE00129 L     @05,GRPTR(,GRPTABP)                              02S0139
         C     UCBCTR,GRPUCBNO(,@05)                            02S0139
         BNH   @DL00129                                         02S0139
@DC00129 DS    0H                                               02S0140
*    GRPTABP = GRPTABP + LENGTH(GRPTRTAB); /*PTR TO NEXT GROUP ENTRY */
         AL    GRPTABP,@CF00058                                 02S0140
*  END;                                /*END GROUP ENTRY SCAN        */
         AL    GRPCTR,@CF00040                                  02S0141
@DE00128 C     GRPCTR,GENGRPNO(,GENPTR)                         02S0141
         BNH   @DL00128                                         02S0141
@DC00128 DS    0H                                               02S0142
*  GENPTR = GENPTR + LENGTH(GENENTRY); /*PTR TO NEXT GENERIC ENTRY   */
         AL    GENPTR,@CF00125                                  02S0142
*END;                                  /*END GENERIC ENTRY SCAN      */
         AL    GENCTR,@CF00040                                  02S0143
@DE00126 C     GENCTR,LUVGENNO(,LUVPTR)                         02S0143
         BNH   @DL00126                                         02S0143
@DC00126 DS    0H                                               02S0144
*IF NUMFOUND ^= UNITNUMB THEN          /*NOT ALL UNITS FOUND         */
         L     @10,@PC00001                                     02S0144
         C     NUMFOUND,UNITNUMB(,@10)                          02S0144
         BE    @RF00144                                         02S0144
*  RETCODE = UNITERR;                  /*SET ERROR RETURN CODE       */
         LA    RETCODE,8                                        02S0145
*RFY GRPENTRY BASED(GRPPTR);                                    02S0146
@RF00144 DS    0H                                               02S0147
*          END;                                                 01S0147
*        ELSE;                         /*FUNCTION NOT REQUESTED      */
@RF00121 DS    0H                                               01S0149
*        IF RETCODE = SUCCESS &        /*NO ERRORS SO FAR            */
*           CHKGROUP = ON THEN         /*CHECK GROUPS REQUESTED      */
         LTR   RETCODE,RETCODE                                  01S0149
         BNZ   @RF00149                                         01S0149
         L     @10,@PC00001+4                                   01S0149
         TM    CHKGROUP(@10),B'10000000'                        01S0149
         BNO   @RF00149                                         01S0149
*          DO;                                                  01S0150
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CHKGRPS                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK FOR 'GROUP SPLITTING'                   */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS SEGMENT IS INCLUDED IF THE CALLER HAS REQUESTED THE       */
*/*   'CHECK GROUPS' FUNCTION. THE ROUTINE CHECKS TO SEE THAT        */
*/*   THE INPUT UNIT ADDRESSES DO NOT CAUSE 'GROUP SPLITTING',       */
*/*   THAT IS, FOR EACH GROUP, EITHER ALL THE UCB ADDRESSES          */
*/*   ASSOCIATED WITH THE GROUP ARE CONTAINED IN THE INPUT DEVICE    */
*/*   LIST, OR NONE OF THEM.                                         */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     THIS ROUTINE SCANS ALL OF THE EDT GROUP AND UCB ENTRIES.     */
*/*     THE UCB ADDRESSES IN THE LIST BUILT BY SEGMENT               */
*/*     CONVERT (UCBLIST) ARE COMPARED AGAINST THE                   */
*/*     UCB ADDRESSES LOCATED BY THE INDEX VALUES IN THE EDT UCB     */
*/*     ENTRIES. ONCE A MATCH HAS BEEN FOUND, THIS ROUTINE CHECKS    */
*/*     TO SEE THAT ALL THE OTHER UCBS IN THE GROUP ARE REPRESENTED  */
*/*     IN THE INPUT UCB LIST (UCBLIST). AS EACH MATCH IS FOUND, THE */
*/*     UCBLIST ENTRY IS ZEROED SO IT WILL NOT BE PROCESSED AGAIN.   */
*/*     IF ALL THE GROUP'S UCB ADDRESSES ARE FOUND IN UCBLIST,       */
*/*     PROCESSING CONTINUES. OTHERWISE, AN ERROR RETURN IS MADE.    */
*/*                                                                  */
*/* ENTRY - IN-LINE SUBROUTINE                                       */
*/*   PRUPOSE - CHECK FOR GROUP SPLITTING                            */
*/*   INPUT -                                                        */
*/*     PTR TO EDT - FOR PTR TO EDT GROUP SECTION                    */
*/*     UNITNUMB - NUMBER OF INPUT UNIT ADDRESSES                    */
*/*     UCBLIST - LIST OF UCB ADDRESSES DERIVED FROM INPUT UNIT ADDRS*/
*/*                                                                  */
*/* EXIT-NORMAL -                                                    */
*/*   CONDITION - GROUPS ARE NOT 'SPLIT'                             */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 0                                                */
*/*                                                                  */
*/* EXIT-ERROR -                                                     */
*/*   CONDITION - GROUPS ARE 'SPLIT'                                 */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 12                                               */
*/*                                                                  */
*/********************************************************************/
*BADGRPSW = OFF;                       /*INIT LOOP CONTROL           */
         NI    BADGRPSW,B'01111111'                             02S0151
*DO UCBINDX = 1 TO UNITNUMB            /*SCAN INPUT UCBS             */
*   WHILE(BADGRPSW = OFF);             /*UNTIL SPLIT GROUP FOUND     */
         LA    UCBINDX,1                                        02S0152
         B     @DE00152                                         02S0152
@DL00152 TM    BADGRPSW,B'10000000'                             02S0152
         BNZ   @DC00152                                         02S0152
*  IF UCBENT(UCBINDX) ^= ZERO THEN     /*ENTRY NOT PROCESSED YET     */
         LR    @10,UCBINDX                                      02S0153
         SLA   @10,2                                            02S0153
         L     @08,UCBLISTP                                     02S0153
         AL    @08,@CF01282                                     02S0153
         L     @10,UCBENT(@10,@08)                              02S0153
         LTR   @10,@10                                          02S0153
         BZ    @RF00153                                         02S0153
*    DO;                               /*FIND UCB'S GROUP IN EDT     */
*      GRPFNDSW = OFF;                 /*INIT GROUP NOT FOUND        */
         NI    GRPFNDSW,B'11011111'                             02S0155
*      GRPPTR = EDTGRPSP + LENGTH(GRPSECT); /*PTR TO 1ST GROUP       */
         LA    GRPPTR,8                                         02S0156
         L     @10,EDTPTR                                       02S0156
         AL    GRPPTR,EDTGRPSP(,@10)                            02S0156
*      DO GRPCTR = 1 TO GRPENTNO       /*SCAN GROUPS                 */
*         WHILE(GRPFNDSW = OFF);       /*UNTIL UCB'S GROUP FOUND     */
         LA    GRPCTR,1                                         02S0157
         B     @DE00157                                         02S0157
@DL00157 TM    GRPFNDSW,B'00100000'                             02S0157
         BNZ   @DC00157                                         02S0157
*        DO UCBCTR = 1 TO GRPUCBNO     /*SCAN UCBS IN GROUP          */
*           WHILE(GRPFNDSW = OFF);     /*UNTIL UCB'S GROUP FOUND     */
         LA    UCBCTR,1                                         02S0158
         B     @DE00158                                         02S0158
@DL00158 TM    GRPFNDSW,B'00100000'                             02S0158
         BNZ   @DC00158                                         02S0158
*          IF UCBENT(UCBINDX) =                                 02S0159
*             IOSLUT(EUCBTPOS(UCBCTR) + 1) THEN /*MATCH              */
         L     @10,UCBLISTP                                     02S0159
         LR    @08,UCBINDX                                      02S0159
         SLA   @08,2                                            02S0159
         LR    @15,UCBCTR                                       02S0159
         ALR   @15,@15                                          02S0159
         L     @01,GRPUCBP(,GRPPTR)                             02S0159
         BCTR  @01,0                                            02S0159
         BCTR  @01,0                                            02S0159
         LH    @15,EUCBTPOS(@15,@01)                            02S0159
         ALR   @15,@15                                          02S0159
         L     @01,IOSLUTP                                      02S0159
         LH    @15,IOSLUT(@15,@01)                              02S0159
         N     @15,@CF01280                                     02S0159
         LA    @14,0(@08,@10)                                   02S0159
         AL    @14,@CF01282                                     02S0159
         C     @15,UCBENT(,@14)                                 02S0159
         BNE   @RF00159                                         02S0159
*            DO;                       /*PROCESS GROUP FOUND         */
*              GRPFNDSW = ON;          /*INDICATE GROUP FOUND        */
         OI    GRPFNDSW,B'00100000'                             02S0161
*              UCBENT(UCBINDX) = ZERO; /*ZERO INPUT UCB ADDR         */
         SLR   @15,@15                                          02S0162
         AL    @10,@CF01282                                     02S0162
         ST    @15,UCBENT(@08,@10)                              02S0162
*              BADGRPSW = OFF;         /*INIT GROUP OK               */
         NI    BADGRPSW,B'01111111'                             02S0163
*              DO GRPINDX = 1 TO GRPUCBNO /*SCAN ALL UCBS IN GROUP   */
*                 WHILE(BADGRPSW = OFF); /*UNLESS GROUP IS SPLIT     */
         LA    GRPINDX,1                                        02S0164
         B     @DE00164                                         02S0164
@DL00164 TM    BADGRPSW,B'10000000'                             02S0164
         BNZ   @DC00164                                         02S0164
*                IF GRPINDX ^= UCBCTR THEN /*MATCH NOT FOUND YET     */
         CR    GRPINDX,UCBCTR                                   02S0165
         BE    @RF00165                                         02S0165
*                  DO;                 /*SET UP INPUT UCB SCAN       */
*                    BADGRPSW = ON;    /*ASSUME GROUP IS SPLIT       */
         OI    BADGRPSW,B'10000000'                             02S0167
*                    DO ADDRINDX = 1 TO UNITNUMB /*SCAN INPUT UCBS   */
*                       WHILE(BADGRPSW = ON); /*UNTIL MATCH FOUND    */
         LA    ADDRINDX,1                                       02S0168
         B     @DE00168                                         02S0168
@DL00168 TM    BADGRPSW,B'10000000'                             02S0168
         BNO   @DC00168                                         02S0168
*                      IF UCBENT(ADDRINDX) =                    02S0169
*                         IOSLUT(EUCBTPOS(GRPINDX) + 1) THEN  /*MATCH*/
         L     @10,UCBLISTP                                     02S0169
         LR    @08,ADDRINDX                                     02S0169
         SLA   @08,2                                            02S0169
         LR    @15,GRPINDX                                      02S0169
         ALR   @15,@15                                          02S0169
         L     @01,GRPUCBP(,GRPPTR)                             02S0169
         BCTR  @01,0                                            02S0169
         BCTR  @01,0                                            02S0169
         LH    @15,EUCBTPOS(@15,@01)                            02S0169
         ALR   @15,@15                                          02S0169
         L     @01,IOSLUTP                                      02S0169
         LH    @15,IOSLUT(@15,@01)                              02S0169
         N     @15,@CF01280                                     02S0169
         LA    @14,0(@08,@10)                                   02S0169
         AL    @14,@CF01282                                     02S0169
         C     @15,UCBENT(,@14)                                 02S0169
         BNE   @RF00169                                         02S0169
*                        DO;           /*PROCESS MATCH               */
*                          UCBENT(ADDRINDX)=ZERO; /*SHOW MATCH FOUND */
         SLR   @15,@15                                          02S0171
         AL    @10,@CF01282                                     02S0171
         ST    @15,UCBENT(@08,@10)                              02S0171
*                          BADGRPSW = OFF; /*GROUP OK SO FAR         */
         NI    BADGRPSW,B'01111111'                             02S0172
*                        END;          /*END MATCH                   */
*                      ELSE;           /*NO MATCH                    */
@RF00169 DS    0H                                               02S0175
*                    END;              /*END SCAN INPUT UCBS         */
         AL    ADDRINDX,@CF00040                                02S0175
@DE00168 L     @10,@PC00001                                     02S0175
         C     ADDRINDX,UNITNUMB(,@10)                          02S0175
         BNH   @DL00168                                         02S0175
@DC00168 DS    0H                                               02S0176
*                  END;                /*END SET UP INPUT UCB SCAN   */
*                ELSE;                 /*MATCH ALREADY FOUND         */
@RF00165 DS    0H                                               02S0178
*              END;                    /*END SCAN GROUPS UCBS        */
         AL    GRPINDX,@CF00040                                 02S0178
@DE00164 C     GRPINDX,GRPUCBNO(,GRPPTR)                        02S0178
         BNH   @DL00164                                         02S0178
@DC00164 DS    0H                                               02S0179
*            END;                      /*END PROCESS GROUP FOUND     */
*          ELSE;                       /*NO MATCH                    */
@RF00159 DS    0H                                               02S0181
*        END;                          /*END SCAN GROUPS UCBS        */
         AL    UCBCTR,@CF00040                                  02S0181
@DE00158 C     UCBCTR,GRPUCBNO(,GRPPTR)                         02S0181
         BNH   @DL00158                                         02S0181
@DC00158 DS    0H                                               02S0182
*        GRPPTR = GRPPTR + LENGTH(GRPENTRY); /*PTR TO NEXT GRP ENT   */
         AL    GRPPTR,@CF00125                                  02S0182
*      END;                            /*END SCAN GROUPS             */
         AL    GRPCTR,@CF00040                                  02S0183
@DE00157 L     @10,EDTPTR                                       02S0183
         L     @10,EDTGRPSP(,@10)                               02S0183
         C     GRPCTR,GRPENTNO(,@10)                            02S0183
         BNH   @DL00157                                         02S0183
@DC00157 DS    0H                                               02S0184
*    END;                              /*END FIND UCBS GROUP IN EDT  */
*  ELSE;                               /*MATCH ALREADY FOUND         */
@RF00153 DS    0H                                               02S0186
*END;                                  /*END INPUT UCB SCAN          */
         AL    UCBINDX,@CF00040                                 02S0186
@DE00152 L     @10,@PC00001                                     02S0186
         C     UCBINDX,UNITNUMB(,@10)                           02S0186
         BNH   @DL00152                                         02S0186
@DC00152 DS    0H                                               02S0187
*IF BADGRPSW = ON THEN                 /*GROUP IS SPLIT              */
         TM    BADGRPSW,B'10000000'                             02S0187
         BNO   @RF00187                                         02S0187
*  RETCODE = BADGROUP;                 /*SET ERROR RETURN CODE       */
         LA    RETCODE,12                                       02S0188
*          END;                                                 01S0189
*        ELSE;                         /*ERROR OR FUNC NOT REQUESTED */
@RF00149 DS    0H                                               01S0191
*      END;                                                     01S0191
*    ELSE;                             /*CONVERSION ERROR            */
@RF00119 DS    0H                                               01S0193
*  END;                                                         01S0193
*ELSE                                  /*FUNCTIONS NOT REQUESTED     */
*  IF RETCODE = SUCCESS &              /*NO ERRORS HAVE OCCURRED     */
*     RETNUNIT = ON THEN               /*RETURN UNIT NAME REQUESTED  */
         B     @RC00063                                         01S0194
@RF00063 LTR   RETCODE,RETCODE                                  01S0194
         BNZ   @RF00194                                         01S0194
         L     @08,@PC00001+4                                   01S0194
         TM    RETNUNIT(@08),B'00100000'                        01S0194
         BNO   @RF00194                                         01S0194
*    DO;                                                        01S0195
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - FINDNAME                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - RETURN UNIT NAME                              */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   THIS SEGMENT IS INCLUDED IF THE CALLER HAS REQUESTED THE       */
*/*   RETURN UNIT NAME FUNCTION. THE ROUTINE USES THE INPUT LOOK-UP  */
*/*   VALUE TO LOCATE THE CORRESPONDING UNIT NAME IN THE EDT. IF THE */
*/*   UNIT NAME IS FOUND, IT IS STORED IN THE RETURN AREA PROVIDED   */
*/*   IN THE INPUT PARAMETER TABLE (SEE DECLARATION OF UNITTAB2).    */
*/*                                                                  */
*/*   OPERATION - THE OPERATION IS DOCUMENTED BY THE CODE            */
*/*                                                                  */
*/* ENTRY - IN-LINE SUBROUTINE                                       */
*/*   PURPOSE - FIND AND RETURN UNIT NAME                            */
*/*   INPUT -                                                        */
*/*     EDTPTR - PTR TO EDT                                          */
*/*     UNITLUV - INPUT LOOK-UP VALUE                                */
*/*     UNITRETN - RETURN AREA FOR UNIT NAME                         */
*/*       NOTE: SINCE THIS ROUTINE MUST STORE INTO THE INPUT         */
*/*             PARAMETER AREA, THE PARAMETER AREA MUST BE IN KEY 1  */
*/*             CORE.                                                */
*/*                                                                  */
*/* EXIT-NORMAL -                                                    */
*/*   CONDITION - UNIT NAME FOUND                                    */
*/*   OUTPUT - UNIT NAME STORED IN CALLER'S RETURN AREA              */
*/*   RETURN CODE - 0                                                */
*/*                                                                  */
*/* EXIT-ERROR -                                                     */
*/*   CONDITION - UNIT NAME NOT FOUND                                */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 4                                                */
*/*                                                                  */
*/********************************************************************/
*FOUNDSW = OFF;                        /*INIT NAME NOT FOUND         */
         NI    FOUNDSW,B'10111111'                              02S0196
*LUVPTR = EDTLUVSP + LENGTH(LUVSECT);  /*PTR TO 1ST LOOK-UP ENTRY    */
         LA    LUVPTR,8                                         02S0197
         L     @08,EDTPTR                                       02S0197
         AL    LUVPTR,EDTLUVSP(,@08)                            02S0197
*DO LUVCTR = 1 TO LUVENTNO             /*SCAN ALL LOOK-UP ENTRIES    */
*   WHILE(FOUNDSW = OFF);              /*UNTIL LOOK-UP VALUE MATCH   */
         LA    LUVCTR,1                                         02S0198
         B     @DE00198                                         02S0198
@DL00198 TM    FOUNDSW,B'01000000'                              02S0198
         BNZ   @DC00198                                         02S0198
*  IF UNITLUV = LUVALUE THEN           /*MATCH                       */
         L     @08,@PC00001                                     02S0199
         CLC   UNITLUV(4,@08),LUVALUE(LUVPTR)                   02S0199
         BNE   @RF00199                                         02S0199
*    DO;                               /*PROCESS MATCH               */
*      FOUNDSW = ON;                   /*INDICATE TO EXIT LOOP       */
         OI    FOUNDSW,B'01000000'                              02S0201
*      UNITRETN = UNITNAME;            /*RETURN UNIT NAME ASSOCIATED
*                                        WITH LOOK-UP VALUE          */
         MVC   UNITRETN(8,@08),UNITNAME(LUVPTR)                 02S0202
*    END;                              /*END PROCESS MATCH           */
*  ELSE                                /*NO MATCH                    */
*    LUVPTR = LUVPTR + LENGTH(LUVENTRY); /*PTR TO NEXT LOOK-UP ENTRY */
         B     @RC00199                                         02S0204
@RF00199 AL    LUVPTR,@CF00140                                  02S0204
*END;                                  /*END SCAN LOOK-UP ENTRIES    */
@RC00199 AL    LUVCTR,@CF00040                                  02S0205
@DE00198 L     @08,EDTPTR                                       02S0205
         L     @08,EDTLUVSP(,@08)                               02S0205
         C     LUVCTR,LUVENTNO(,@08)                            02S0205
         BNH   @DL00198                                         02S0205
@DC00198 DS    0H                                               02S0206
*IF FOUNDSW = OFF THEN                 /*MATCH NEVER FOUND           */
         TM    FOUNDSW,B'01000000'                              02S0206
         BNZ   @RF00206                                         02S0206
*  RETCODE = NAMEERR;                  /*SET ERROR RETURN CODE       */
         LA    RETCODE,4                                        02S0207
*    END;                                                       01S0208
*  ELSE                                /*RETURN UNIT NAME NOT REQ'D  */
*    IF RETCODE = SUCCESS & RETNUCBS = ON THEN /*RETURN UCBS FUNCTIONS
*                                                            @Y30LPPC*/
         B     @RC00194                                         01S0209
@RF00194 SLR   @08,@08                                          01S0209
         CR    RETCODE,@08                                      01S0209
         BNE   @RF00209                                         01S0209
         L     @15,@PC00001+4                                   01S0209
         TM    RETNUCBS(@15),B'00010000'                        01S0209
         BNO   @RF00209                                         01S0209
*      DO;                             /*                    @Y30LPPC*/
*/********************************************************************/
*/*                                                          @Y30LPPC*/
*/* SEGMENT NAME - BILDUCBL                                  @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* DESCRIPTIVE NAME - BUILD A LIST OF UCB ADDRESSES         @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* FUNCTION -                                               @Y30LPPC*/
*/*   THIS SEGMENT TAKES A LOOK-UP-VALUE ENTRY IN THE        @Y30LPPC*/
*/*   ELIGIBLE DEVICES TABLE (EDT) AS INPUT AND BUILDS       @Y30LPPC*/
*/*   A LIST OF UCB ADDRESSES ASSOCIATED WITH THE            @Y30LPPC*/
*/*   LOOK-UP-VALUE.                                         @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/*   OPERATION -                                            @Y30LPPC*/
*/*     DOCUMENTED BY THE CODE                               @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* ENTRY - IN-LINE SUBROUTINE                               @Y30LPPC*/
*/*   PURPOSE - BUILD A LIST OF UCB ADDRESSES                @Y30LPPC*/
*/*   INPUT -                                                @Y30LPPC*/
*/*     LUVPTR - ADDRESS OF THE LOOK-UP-VALUE ENTRY          @Y30LPPC*/
*/*              TO BE SCANNED                               @Y30LPPC*/
*/*     SUBPLNUM - SUBPOOL FOR THE LIST                      @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* EXIT-NORMAL - RETURN TO CALLER                           @Y30LPPC*/
*/*   CONDITION - UCB LIST BUILT                             @Y30LPPC*/
*/*   OUTPUT -                                               @Y30LPPC*/
*/*     UCBLPTR - ADDRESS OF THE UCBLIST                     @Y30LPPC*/
*/*     UCBPLIST - UCB LIST FILLED IN (SEE A4UVDATA FOR      @Y30LPPC*/
*/*       DESCRIPTION OF FIELDS IN UCBLIST)                  @Y30LPPC*/
*/*     RETURN CODE - 0                                      @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* EXIT-ERROR -                                             @Y30LPPC*/
*/*   CONDITION - CORE NOT AVAILABLE FOR UCB LIST            @Y30LPPC*/
*/*   OUTPUT - NONE                                          @Y30LPPC*/
*/*   RETURN CODE - 16                                       @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/********************************************************************/
*NUMUCBS = ZERO;                       /* INIT TOTAL UCBS    @Y30LPPC*/
         ST    @08,NUMUCBS                                      02S0211
*FILLINL = OFF;                        /* INIT TO NO FILLIN  @Y30LPPC*/
*COUNTUCB = ON;                        /* SET COUNT ONLY FOR SCANEDT
*                                                            @Y30LPPC*/
         OI    COUNTUCB,B'00010000'                             02S0213
         NI    FILLINL,B'11110111'                              02S0213
*CALL SCANEDT;                         /* COUNT UCBS FOR LUV @Y30LPPC*/
         BAL   @14,SCANEDT                                      02S0214
*COUNTUCB = OFF;                       /*RESET FUNCTION      @Y30LPPC*/
         NI    COUNTUCB,B'11101111'                             02S0215
*SUBPL = SUBPLNUM;                     /* SUBPOOL FOR UCBLIST@Y30LPPC*/
         LA    @08,230                                          02S0216
         ST    @08,SUBPL                                        02S0216
*LISTSIZE = LENGTH(UCBPHDR) +          /* LENGTH OF LIST HDR @Y30LPPC*/
*           NUMUCBS * LENGTH(UCBPUCBP);/* LENGTH OF ENTRIES  @Y30LPPC*/
         L     @15,NUMUCBS                                      02S0217
         SLA   @15,2                                            02S0217
         AL    @15,@CF00050                                     02S0217
         ST    @15,LISTSIZE                                     02S0217
* /* ?GETSTORG (SUBPL,LISTSIZE,UCBLPTR);*/                      02S0218
*   RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/               02S0218
*   GTSTR0 = LISTSIZE; /* SET AMOUNT*/                          02S0219
         LR    GTSTR0,@15                                       02S0219
*   GTSTR2 = SUBPL; /* SET SUBPOOL*/                            02S0220
         LR    GTSTR2,@08                                       02S0220
*   GENERATE CODE;                                              02S0221
     GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN
*   GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/               02S0222
         ST    GTSTR15,GTSTRTCD                                 02S0222
*   UCBLPTR = GTSTR1; /* ADDR OF GOTN STORG*/                   02S0223
         L     @08,@PC00001                                     02S0223
         ST    GTSTR1,UCBLPTR(,@08)                             02S0223
*   RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */                02S0224
*   IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */               02S0225
         L     @08,GTSTRTCD                                     02S0225
         LTR   @08,@08                                          02S0225
         BNZ   @RF00225                                         02S0225
*     DO;               /* YES, CLEAR STORAGE.*/                02S0226
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       02S0227
*                          GTSTR7,GTSTR8) RSTD;                 02S0227
*       GTSTR4 = UCBLPTR; /*STORG PTR*/                         02S0228
         L     @03,@PC00001                                     02S0228
         L     @03,UCBLPTR(,@03)                                02S0228
         LR    GTSTR4,@03                                       02S0228
*       GTSTR5 = LISTSIZE; /*STORG AMNT*/                       02S0229
         L     GTSTR5,LISTSIZE                                  02S0229
*       GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/               02S0230
         SLR   GTSTR7,GTSTR7                                    02S0230
*       IF SUBPL = GTST253 THEN                                 02S0231
         CLC   SUBPL(4),@CF01264                                02S0231
         BNE   @RF00231                                         02S0231
*      GEN                                                      02S0232
*   (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);           02S0232
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8
*       GEN REFS(GTSTR4,GTSTR6);                                02S0233
@RF00231 DS    0H                                               02S0233
          MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG
*       IF SUBPL = GTST253 THEN                                 02S0234
         CLC   SUBPL(4),@CF01264                                02S0234
         BNE   @RF00234                                         02S0234
*         GEN (MODESET KEYADDR=(2));                            02S0235
         MODESET KEYADDR=(2)
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       02S0236
*                          GTSTR7,GTSTR8) UNRSTD;               02S0236
@RF00234 DS    0H                                               02S0237
*     END;       /* STORAGE CLEARING COMPLETED */               02S0237
*   ELSE                                                        02S0238
*   UCBLPTR= 0;   /* CLEAR RETURN ADDR. */                      02S0238
         B     @RC00225                                         02S0238
@RF00225 L     @08,@PC00001                                     02S0238
         SLR   @15,@15                                          02S0238
         ST    @15,UCBLPTR(,@08)                                02S0238
*   GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */               02S0239
@RC00225 L     GTSTR15,GTSTRTCD                                 02S0239
*                                      /* RESTORE LIST PRINT STATUS  */
*  /* CORE FOR UCB LIST  @Y30LPPC*/                             02S0240
*IF REG15 ^= SUCCESS THEN              /* GETMAIN FAILED     @Y30LPPC*/
         LTR   REG15,REG15                                      02S0240
         BZ    @RF00240                                         02S0240
*  RETCODE = GETERR;                   /* SET GETMAIN RETCODE@Y30LPPC*/
         LA    RETCODE,16                                       02S0241
*ELSE                                  /* GETMAIN SUCCESSFUL @Y30LPPC*/
*  DO;                                 /* FILL IN UCB LIST   @Y30LPPC*/
         B     @RC00240                                         02S0242
@RF00240 DS    0H                                               02S0243
*    UCBPSUBP = SUBPLNUM;              /* SUBPOOL            @Y30LPPC*/
         L     @08,@PC00001                                     02S0243
         L     @08,UCBLPTR(,@08)                                02S0243
         MVI   UCBPSUBP(@08),X'E6'                              02S0243
*    UCBPLNTH = LISTSIZE;              /* LENGTH OF LIST     @Y30LPPC*/
         MVC   UCBPLNTH(3,@08),LISTSIZE+1                       02S0244
*    UCBPNENT = NUMUCBS;               /* NUMBER OF ENTRIES  @Y30LPPC*/
         L     @15,NUMUCBS                                      02S0245
         ST    @15,UCBPNENT(,@08)                               02S0245
*    FILLINL = ON;                     /* SET FILL IN LIST   @Y30LPPC*/
         OI    FILLINL,B'00001000'                              02S0246
*    CALL SCANEDT;                     /* FILL IN LIST       @Y30LPPC*/
         BAL   @14,SCANEDT                                      02S0247
*  END;                                /* END FILL IN LIST   @Y30LPPC*/
*      END;                            /*                    @Y30LPPC*/
@RC00240 DS    0H                                               01S0250
*IF RETGRPID=ON THEN                   /*IF RETURN GROUP ID  @Z40LPPE*/
@RF00209 DS    0H                                               01S0250
@RC00194 DS    0H                                               01S0250
@RC00063 L     @10,@PC00001+4                                   01S0250
         TM    RETGRPID(@10),B'00001000'                        01S0250
         BNO   @RF00250                                         01S0250
*  DO;                                 /*                    @Z40LPPE*/
*/***********************************************************@Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/* SEGMENT NAME - GETGRPID                                  @Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/* DESCRIPTIVE NAME - GET GROUP IDS                         @Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/* FUNCTION - PROCESS THE INPUT UCB LIST BY RETURNING IN A  @Z40LPPE*/
*/*            GROUP ID LIST, A GROUP ID CORRESPONDING TO    @Z40LPPE*/
*/*            EACH UCB ADDRESS IN THE UCB LIST.             @Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/*   OPERATION - THIS ROUTINE WILL USE THE EDT'S GROUP      @Z40LPPE*/
*/*               SECTION AND UCB LIST SECTION TO SCAN THE   @Z40LPPE*/
*/*               INPUT UCB LIST. WHEN A MATCH IS FOUND THE  @Z40LPPE*/
*/*               GROUP ID IN THE GROUP SECTION IS PUT INTO  @Z40LPPE*/
*/*               THE APPROPRIATE SLOT OF THE GROUP ID TABLE.@Z40LPPE*/
*/*               IF NO MATCH IS FOUND, THE SLOT IN THE      @Z40LPPE*/
*/*               GROUP ID TABLE IS LEFT ZEROS, AS IT WAS    @Z40LPPE*/
*/*               INITIALIZED.                               @Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/* ENTRY - IN-LINE SUBROUTINE                               @Z40LPPE*/
*/*   PURPOSE - OBTAIN GROUP IDS FOR INPUT UCBS              @Z40LPPE*/
*/*   INPUT -                                                @Z40LPPE*/
*/*     GRPIDPTR - POINTER TO GROUP ID TABLE                 @Z40LPPE*/
*/*     LISTPTR - POINTER TO INPUT UCB LIST                  @Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/* EXIT - NORMAL -                                          @Z40LPPE*/
*/*   CONDITION - UCB LIST PROCESSED AND GROUP IDS OBTAINED  @Z40LPPE*/
*/*   OUTPUT - UPDATED GROUP ID TABLE                        @Z40LPPE*/
*/*                                                          @Z40LPPE*/
*/***********************************************************@Z40LPPE*/
*DO LISTINDX=1 TO UCBNOENT;            /*SCAN INPUT UCB LIST @Z40LPPE*/
         LA    LISTINDX,1                                       02S0252
         B     @DE00252                                         02S0252
@DL00252 DS    0H                                               02S0253
*GRPPTR=EDTGRPSP+LENGTH(GRPSECT);      /*SET PTR TO 1ST GROUP@Z40LPPE*/
         LA    GRPPTR,8                                         02S0253
         L     @10,EDTPTR                                       02S0253
         AL    GRPPTR,EDTGRPSP(,@10)                            02S0253
*  UCBFOUND=OFF;                       /*INIT UCB FOUND SWTCH@Z40LPPE*/
         NI    UCBFOUND,B'11111011'                             02S0254
*  DO GRPCTR=1 TO GRPENTNO             /*SCAN GRP SECT OF EDT@Z40LPPE*/
*     WHILE UCBFOUND=OFF;              /*UNTIL A UCB IS FOUND@Z40LPPE*/
         LA    GRPCTR,1                                         02S0255
         B     @DE00255                                         02S0255
@DL00255 TM    UCBFOUND,B'00000100'                             02S0255
         BNZ   @DC00255                                         02S0255
*    DO UCBCTR=1 TO GRPUCBNO           /*SCAN UCB SECT OF EDT@Z40LPPE*/
*      WHILE UCBFOUND=OFF;             /*UNTIL A UCB IS FOUND@Z40LPPE*/
         LA    UCBCTR,1                                         02S0256
         B     @DE00256                                         02S0256
@DL00256 TM    UCBFOUND,B'00000100'                             02S0256
         BNZ   @DC00256                                         02S0256
*      IF UCBADDRS(LISTINDX)=          /*IF INPUT UCB EQUALS @Z40LPPE*/
*         IOSLUT(EUCBTPOS(UCBCTR)+1) THEN /*UCB IN A GROUP   @Z40LPPE*/
         LR    @10,LISTINDX                                     02S0257
         SLA   @10,2                                            02S0257
         L     @08,@PC00001                                     02S0257
         L     @01,LISTPTR(,@08)                                02S0257
         LR    @15,UCBCTR                                       02S0257
         ALR   @15,@15                                          02S0257
         L     @14,GRPUCBP(,GRPPTR)                             02S0257
         BCTR  @14,0                                            02S0257
         BCTR  @14,0                                            02S0257
         LH    @15,EUCBTPOS(@15,@14)                            02S0257
         ALR   @15,@15                                          02S0257
         L     @14,IOSLUTP                                      02S0257
         LH    @00,IOSLUT(@15,@14)                              02S0257
         N     @00,@CF01280                                     02S0257
         C     @00,UCBADDRS-4(@10,@01)                          02S0257
         BNE   @RF00257                                         02S0257
*        DO;                           /*THEN                @Z40LPPE*/
*          GROUPID(LISTINDX)=GRPID;    /*PUT GRPID IN ID LIST@Z40LPPE*/
         L     @08,GRPIDPTR(,@08)                               02S0259
         L     @15,GRPID(,GRPPTR)                               02S0259
         AL    @08,@CF01282                                     02S0259
         ST    @15,GROUPID(@10,@08)                             02S0259
*          UCBFOUND=ON;                /*UCB FOUND SWITCH-ON @Z40LPPE*/
         OI    UCBFOUND,B'00000100'                             02S0260
*        END;                          /*                    @Z40LPPE*/
*      ELSE;                           /*CONTINUE UCB LOOP   @Z40LPPE*/
@RF00257 DS    0H                                               02S0263
*    END;                              /*SCAN NEXT GROUP SECT@Z40LPPE*/
         AL    UCBCTR,@CF00040                                  02S0263
@DE00256 C     UCBCTR,GRPUCBNO(,GRPPTR)                         02S0263
         BNH   @DL00256                                         02S0263
@DC00256 DS    0H                                               02S0264
*    GRPPTR=GRPPTR+LENGTH(GRPENTRY);   /*SET PTR TO NXT GROUP@Z40LPPE*/
         AL    GRPPTR,@CF00125                                  02S0264
*  END;                                /*END GROUP SECT SCAN @Z40LPPE*/
         AL    GRPCTR,@CF00040                                  02S0265
@DE00255 L     @10,EDTPTR                                       02S0265
         L     @10,EDTGRPSP(,@10)                               02S0265
         C     GRPCTR,GRPENTNO(,@10)                            02S0265
         BNH   @DL00255                                         02S0265
@DC00255 DS    0H                                               02S0266
*END;                                  /*END INPT UCBLST SCAN@Z40LPPE*/
         AL    LISTINDX,@CF00040                                02S0266
@DE00252 L     @10,@PC00001                                     02S0266
         L     @10,LISTPTR(,@10)                                02S0266
         C     LISTINDX,UCBNOENT(,@10)                          02S0266
         BNH   @DL00252                                         02S0266
*  END;                                /*                    @Z40LPPE*/
*ELSE;                                 /*                    @Z40LPPE*/
@RF00250 DS    0H                                               01S0269
*IF UCBLISTP ^= ZERO THEN              /*UCBLIST CORE GOTTEN         */
         L     @10,UCBLISTP                                     01S0269
         LTR   @10,@10                                          01S0269
         BZ    @RF00269                                         01S0269
*  DO;                                 /*FREE CORE                   */
*    RFY (REG0,REG1) RSTD;                                      01S0271
*    REG0 = LISTSIZE;                  /*AMOUNT OF CORE TO FREE      */
         L     REG0,LISTSIZE                                    01S0272
*    REG0 = REG0 × SUBP230;            /*SUBPOOL OF CORE TO FREE     */
         O     REG0,SUBP230                                     01S0273
*    REG1 = UCBLISTP;                  /*ADDR OF CORE TO FREE        */
         LR    REG1,@10                                         01S0274
*    GEN( FREEMAIN R,LV=(0),A=(1));    /*FREE UCBLIST                */
          FREEMAIN R,LV=(0),A=(1)
*    RFY (REG0,REG1) UNRSTD;                                    01S0276
*  END;                                /*END FREE CORE               */
*RETURN CODE(RETCODE);                                          01S0278
@RF00269 IC    @02,@OLDKEY                                      01S0278
         L     @13,4(,@13)                                      01S0278
         L     @00,@SIZDATD                                     01S0278
         LR    @01,@11                                          01S0278
         FREEMAIN R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@09                                          01S0278
         L     @14,12(,@13)                                     01S0278
         LM    @00,@12,20(@13)                                  01S0278
         BR    @14                                              01S0278
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKUNITNM                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK IF INPUT UNIT NAME IS VALID             */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*   IF A UNIT NAME WAS EXPECTED AS INPUT, THIS SEGMENT IS          */
*/*   INCLUDED TO DETERMINE IF THE UNIT NAME IS VALID                */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     THE INPUT UNIT NAME IS COMPARED AGAINST THE UNIT NAME FIELD  */
*/*     IN THE EDT LOOK-UP VALUE SECTIONS. THE SEARCH ENDS WHEN A    */
*/*     MATCH IS FOUND OR WHEN THE END OF THE LOOK-UP VALUE          */
*/*     SECTIONS HAS BEEN REACHED.                                   */
*/*                                                                  */
*/* ENTRY - IN-LINE SUBROUTINE                                       */
*/*   PURPOSE - CHECK IF INPUT UNIT NAME IS VALID                    */
*/*   INPUT -                                                        */
*/*     EDTPTR - PTR TO EDT                                          */
*/*     UNITNM - INPUT UNIT NAME                                     */
*/*                                                                  */
*/* EXIT-NORMAL -                                                    */
*/*   CONDITION - UNIT NAME IS VALID                                 */
*/*   OUTPUT -                                                       */
*/*     PTR TO EDT LOOK-UP VALUE SECTION FOR UNIT NAME (USED BY      */
*/*     SEGMENT CHKUNIT)                                             */
*/*   RETURN CODE - 0                                                */
*/*                                                                  */
*/* EXIT-ERROR - RETURN TO CALLER                                    */
*/*   CONDITION - UNIT NAME IS INVALID                               */
*/*   OUTPUT - NONE                                                  */
*/*   RETURN CODE - 4                                                */
*/*                                                                  */
*/********************************************************************/
*CKUNITNM: PROC OPTIONS(NOSAVEAREA,NOSAVE);                     02S0279
@EL00001 IC    @02,@OLDKEY                                      02S0279
         L     @13,4(,@13)                                      02S0279
@EF00001 L     @00,@SIZDATD                                     02S0279
         LR    @01,@11                                          02S0279
         FREEMAIN R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
@ER00001 LM    @14,@12,12(@13)                                  02S0279
         BR    @14                                              02S0279
CKUNITNM DS    0H                                               02S0280
*LUVPTR = EDTLUVSP + LENGTH(LUVSECT);  /*PTR TO 1ST LOOK-UP ENTRY    */
         LA    LUVPTR,8                                         02S0280
         L     @08,EDTPTR                                       02S0280
         AL    LUVPTR,EDTLUVSP(,@08)                            02S0280
*FOUNDSW = OFF;                        /*INIT NAME FOUND SWITCH OFF  */
         NI    FOUNDSW,B'10111111'                              02S0281
*DO LUVCTR = 1 TO LUVENTNO             /*SCAN ALL EDT LUV ENTRIES    */
*   WHILE(FOUNDSW = OFF);              /*UNTIL NAME IS FOUND         */
         LA    LUVCTR,1                                         02S0282
         B     @DE00282                                         02S0282
@DL00282 TM    FOUNDSW,B'01000000'                              02S0282
         BNZ   @DC00282                                         02S0282
*  IF UNITNM = UNITNAME THEN           /*UNIT NAME FOUND IN EDT      */
         L     @08,@PC00001                                     02S0283
         CLC   UNITNM(8,@08),UNITNAME(LUVPTR)                   02S0283
         BNE   @RF00283                                         02S0283
*    FOUNDSW = ON;                     /*INDICATE TO EXIT LOOP       */
         OI    FOUNDSW,B'01000000'                              02S0284
*  ELSE                                /*NO MATCH                    */
*    LUVPTR = LUVPTR + LENGTH(LUVENTRY); /*POINT TO NEXT EDT LUV ENT */
         B     @RC00283                                         02S0285
@RF00283 AL    LUVPTR,@CF00140                                  02S0285
*END;                                  /*END EDT LUV SCAN            */
@RC00283 AL    LUVCTR,@CF00040                                  02S0286
@DE00282 L     @08,EDTPTR                                       02S0286
         L     @08,EDTLUVSP(,@08)                               02S0286
         C     LUVCTR,LUVENTNO(,@08)                            02S0286
         BNH   @DL00282                                         02S0286
@DC00282 DS    0H                                               02S0287
*IF FOUNDSW = OFF THEN                 /*UNIT NAME NOT FOUND IN EDT  */
         TM    FOUNDSW,B'01000000'                              02S0287
         BNZ   @RF00287                                         02S0287
*  RETCODE = NAMEERR;                  /*SET ERROR RETURN CODE       */
         LA    RETCODE,4                                        02S0288
*END CKUNITNM;                                                  02S0289
@EL00002 DS    0H                                               02S0289
@EF00002 DS    0H                                               02S0289
@ER00002 BR    @14                                              02S0289
*SCANEDT: PROC ;                                           /*@Y30LPPC*/
SCANEDT  STM   @14,@12,12(@13)                                  02S0290
*/********************************************************************/
*/*                                                          @Y30LPPC*/
*/* SEGMENT NAME - SCANEDT                                   @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* DESCRIPTIVE NAME - SCAN EDT AND RETRIEVE INFORMATION     @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* FUNCTION -                                               @Y30LPPC*/
*/*   THIS SEGMENT TAKES A LOOK-UP-VALUE ENTRY IN THE        @Y30LPPC*/
*/*   ELIGIBLE DEVICES TABLE (EDT) AS INPUT AND PERFORMS     @Y30LPPC*/
*/*   ONE OF THE FOLLOWING:                                  @Y30LPPC*/
*/*     1) COUNTS THE UCBS ASSOCIATED WITH THE               @Y30LPPC*/
*/*        LUV ENTRY                                         @Y30LPPC*/
*/*     2) FILLS IN A UCB LIST WITH THE ADDRESS OF EACH      @Y30LPPC*/
*/*        UCB ASSOCIATED WITH THE LUV ENTRY                 @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/*   OPERATION -                                            @Y30LPPC*/
*/*     DOCUMENTED BY THE CODE                               @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* ENTRY - INTERNAL SUBROUTINE                              @Y30LPPC*/
*/*   PURPOSE - RETRIEVE INFORMATION FROM THE EDT            @Y30LPPC*/
*/*   INPUT -                                                @Y30LPPC*/
*/*     LUVPTR - ADDRESS OF THE LUV ENTRY IN THE EDT         @Y30LPPC*/
*/*     COUNTUCB - COUNTING FUNCTION DESIRED                 @Y30LPPC*/
*/*     FILLINL - FILL-IN-UCB-LIST FUNCTION DESIRED          @Y30LPPC*/
*/*     NUMUCBS - COUNT OF UCBS - MUST BE INITIALIZED        @Y30LPPC*/
*/*               ON ENTRY (COUNTING FUNCTION ONLY)          @Y30LPPC*/
*/*     UCBLPTR - ADDRESS OF UCB LIST (FILL-IN-UCB-LIST      @Y30LPPC*/
*/*               FUNCTION ONLY)                             @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* EXIT-NORMAL - RETURN TO CALLER                           @Y30LPPC*/
*/*   CONDITION - FUNCTION COMPLETED                         @Y30LPPC*/
*/*   OUTPUT -                                               @Y30LPPC*/
*/*     NUMUCBS - NUMBER OF UCBS ASSOCIATED WITH THE         @Y30LPPC*/
*/*               INPUT LUV (COUNTING FUNCTION ONLY)         @Y30LPPC*/
*/*     UCBPUCBP - ARRAY OF UCB ADDRESSES (FILL-IN-UCB-LIST  @Y30LPPC*/
*/*                FUNCTION ONLY)                            @Y30LPPC*/
*/*   RETURN CODE - 0                                        @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/* EXIT-ERROR - NONE                                        @Y30LPPC*/
*/*                                                          @Y30LPPC*/
*/********************************************************************/
*GENPTR = LUVGENP;                     /* FIRST GEN FOR LUV  @Y30LPPC*/
         L     GENPTR,LUVGENP(,LUVPTR)                          02S0291
*UCBLINDX = ONE;                       /* INIT UCBLIST INDEX @Y30LPPC*/
         LA    @05,1                                            02S0292
         LR    UCBLINDX,@05                                     02S0292
*RFY GRPENTRY BASED(GRPTR);                                /*@Y30LPPC*/
*DO GENCTR = 1 TO LUVGENNO;            /* SCAN ALL GENERICS  @Y30LPPC*/
         LR    GENCTR,@05                                       02S0294
         B     @DE00294                                         02S0294
@DL00294 DS    0H                                               02S0295
*  GRPTABP = GENGRPTR;                 /* PTR TO FIRST GROUP @Y30LPPC*/
         L     GRPTABP,GENGRPTR(,GENPTR)                        02S0295
*  DO GRPCTR =1 TO GENGRPNO;           /* SCAN ALL GROUPS    @Y30LPPC*/
         LA    GRPCTR,1                                         02S0296
         B     @DE00296                                         02S0296
@DL00296 DS    0H                                               02S0297
*    IF FILLINL = ON THEN              /* PUT UCBS IN LIST   @Y30LPPC*/
         TM    FILLINL,B'00001000'                              02S0297
         BNO   @RF00297                                         02S0297
*      DO UCBCTR = 1 TO GRPUCBNO;      /* SCAN ALL UCBS      @Y30LPPC*/
         LA    UCBCTR,1                                         02S0298
         B     @DE00298                                         02S0298
@DL00298 DS    0H                                               02S0299
*          UCBPUCBP(UCBLINDX) =        /* UCB LIST ENTRY     @Y30LPPC*/
*            IOSLUT(EUCBTPOS(UCBCTR) + 1); /* UCB ADDRESS FROM IOS
*                                         LOOK-UP-TABLE      @Y30LPPC*/
         LR    @09,UCBLINDX                                     02S0299
         SLA   @09,2                                            02S0299
         L     @05,@PC00001                                     02S0299
         L     @05,UCBLPTR(,@05)                                02S0299
         LR    @15,UCBCTR                                       02S0299
         ALR   @15,@15                                          02S0299
         L     @01,GRPTR(,GRPTABP)                              02S0299
         L     @01,GRPUCBP(,@01)                                02S0299
         BCTR  @01,0                                            02S0299
         BCTR  @01,0                                            02S0299
         LH    @15,EUCBTPOS(@15,@01)                            02S0299
         ALR   @15,@15                                          02S0299
         L     @01,IOSLUTP                                      02S0299
         LH    @15,IOSLUT(@15,@01)                              02S0299
         N     @15,@CF01280                                     02S0299
         ST    @15,UCBPUCBP-4(@09,@05)                          02S0299
*          UCBLINDX = UCBLINDX + 1;    /* NEXT SLOT IN LIST  @Y30LPPC*/
         AL    UCBLINDX,@CF00040                                02S0300
*      END;                            /* END SCAN ALL UCBS  @Y30LPPC*/
         AL    UCBCTR,@CF00040                                  02S0301
@DE00298 L     @09,GRPTR(,GRPTABP)                              02S0301
         C     UCBCTR,GRPUCBNO(,@09)                            02S0301
         BNH   @DL00298                                         02S0301
*    IF COUNTUCB = ON THEN             /* COUNTING REQUESTED @Y30LPPC*/
@RF00297 TM    COUNTUCB,B'00010000'                             02S0302
         BNO   @RF00302                                         02S0302
*      NUMUCBS = NUMUCBS + GRPUCBNO;   /* ADD NUMBER OF UCBS IN 02S0303
*                                         THE GROUP          @Y30LPPC*/
         L     @09,GRPTR(,GRPTABP)                              02S0303
         L     @06,NUMUCBS                                      02S0303
         AL    @06,GRPUCBNO(,@09)                               02S0303
         ST    @06,NUMUCBS                                      02S0303
*    GRPTABP = GRPTABP + LENGTH(GRPTRTAB); /* NEXR GROUP PTR @Y30LPPC*/
@RF00302 AL    GRPTABP,@CF00058                                 02S0304
*  END;                                /* END SCAN ALL GROUPS@Y30LPPC*/
         AL    GRPCTR,@CF00040                                  02S0305
@DE00296 C     GRPCTR,GENGRPNO(,GENPTR)                         02S0305
         BNH   @DL00296                                         02S0305
*  GENPTR = GENPTR + LENGTH(GENENTRY); /* NEXT GENERIC ENTRY @Y30LPPC*/
         AL    GENPTR,@CF00125                                  02S0306
*END;                                  /* END SCAN ALL GENS  @Y30LPPC*/
         AL    GENCTR,@CF00040                                  02S0307
@DE00294 C     GENCTR,LUVGENNO(,LUVPTR)                         02S0307
         BNH   @DL00294                                         02S0307
*END SCANEDT;                                              /*@Y30LPPC*/
@EL00003 DS    0H                                               02S0308
@EF00003 DS    0H                                               02S0308
@ER00003 LM    @14,@12,12(@13)                                  02S0308
         BR    @14                                              02S0308
*END IEFAB4UV                                                   01S0309
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A4UVSPEC)                                        *
*/*%INCLUDE SYSLIB  (A4UVDATA)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (IEFZB421)                                        *
*/*%INCLUDE SYSLIB  (CONVERT )                                        *
*/*%INCLUDE SYSLIB  (CONVSPEC)                                        *
*/*%INCLUDE SYSLIB  (CHKUNIT )                                        *
*/*%INCLUDE SYSLIB  (UNITSPEC)                                        *
*/*%INCLUDE SYSLIB  (CHKGRPS )                                        *
*/*%INCLUDE SYSLIB  (GRPSPEC )                                        *
*/*%INCLUDE SYSLIB  (FINDNAME)                                        *
*/*%INCLUDE SYSLIB  (FINDSPEC)                                        *
*/*%INCLUDE SYSLIB  (BILDUCBL)                                        *
*/*%INCLUDE SYSLIB  (BILDSPEC)                                        *
*/*%INCLUDE SYSLIB  (GETGRPID)                                        *
*/*%INCLUDE SYSLIB  (GRPIDSPC)                                        *
*/*%INCLUDE SYSLIB  (CKUNITNM)                                        *
*/*%INCLUDE SYSLIB  (CKUNSPEC)                                        *
*/*%INCLUDE SYSLIB  (SCANEDT )                                        *
*/*%INCLUDE SYSLIB  (SCANSPEC)                                        *
*;                                                              01S0309
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@TF00001 DS    F
IEFAB4UV CSECT
         DS    0F
@CF00040 DC    F'1'
@CF00058 DC    F'4'
@CF00050 DC    F'8'
@CF00125 DC    F'12'
@CF00140 DC    F'32'
@CF01264 DC    F'253'
@CF01282 DC    F'-4'
@CF01280 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
EDTPTR   DS    A
IOSLUTP  DS    A
UCBLISTP DS    A
UCBPTR   DS    A
LISTSIZE DS    F
NUMUCBS  DS    F
SUBPL    DS    F
GTSTRTCD DS    F
EDTABPTR DS    A
TCBPTR   DS    A
SWITCHES DS    BL1
         ORG   SWITCHES
BADGRPSW DS    BL1
FOUNDSW  EQU   SWITCHES+0
GRPFNDSW EQU   SWITCHES+0
COUNTUCB EQU   SWITCHES+0
FILLINL  EQU   SWITCHES+0
UCBFOUND EQU   SWITCHES+0
@NM00002 EQU   SWITCHES+0
         ORG   SWITCHES+1
@OLDKEY  DS    AL1
IEFAB4UV CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CA00146 DC    A(EDTTAB)
         DS    0D
GTSTZERO DC    F'0'
LISTEND  DC    XL2'FFFF'
         DS    CL2
SUBP230  DC    X'E6000000'
IEFAB4UV CSECT
         DS   0H
A4UVPTCH DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB4UV CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
UCBLINDX EQU   @02
UCBINDX  EQU   @03
UCBCTR   EQU   @06
RETCODE  EQU   @09
NUMFOUND EQU   @02
LUVCTR   EQU   @02
LUTCTR   EQU   @03
LISTINDX EQU   @03
GRPINDX  EQU   @04
GRPCTR   EQU   @07
GENCTR   EQU   @08
ADDRINDX EQU   @05
LUVPTR   EQU   @10
GRPTABP  EQU   @03
GRPPTR   EQU   @02
GENPTR   EQU   @04
REG0     EQU   @00
REG1     EQU   @01
REG15    EQU   @15
GTSTR0   EQU   @00
GTSTR1   EQU   @01
GTSTR2   EQU   @02
GTSTR15  EQU   @15
GTSTR4   EQU   @04
GTSTR5   EQU   @05
GTSTR6   EQU   @06
GTSTR7   EQU   @07
GTSTR8   EQU   @08
GTSTR3   EQU   @03
         EXTRN EDTTAB
CVTPTR   EQU   16
UNITTAB1 EQU   0
UNITNM   EQU   UNITTAB1
UNITNUMB EQU   UNITTAB1+8
UNITPTR  EQU   UNITTAB1+12
UNITTAB5 EQU   0
GRPIDPTR EQU   UNITTAB5
LISTPTR  EQU   UNITTAB5+4
UNITADS  EQU   0
ADDRS    EQU   UNITADS
FLAGS    EQU   UNITADS+3
INVALID  EQU   FLAGS
UNITTAB2 EQU   0
UNITRETN EQU   UNITTAB2
UNITLUV  EQU   UNITTAB2+8
UNITTAB3 EQU   0
UCBLPTR  EQU   UNITTAB3+8
UCBPLIST EQU   0
UCBPHDR  EQU   UCBPLIST
UCBPSUBP EQU   UCBPHDR
UCBPLNTH EQU   UCBPHDR+1
UCBPNENT EQU   UCBPHDR+4
UCBPUCBP EQU   UCBPLIST+8
GROUPID  EQU   0
IOSLUT   EQU   0
INPTLIST EQU   0
UCBNOENT EQU   INPTLIST
UCBADDRS EQU   INPTLIST+4
UCBLIST  EQU   0
UCBENT   EQU   UCBLIST
CVTMAP   EQU   0
CVTILK2  EQU   CVTMAP+40
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00008 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
EDTHDR   EQU   0
EDTLUVSP EQU   EDTHDR
EDTGENSP EQU   EDTHDR+4
EDTGRPSP EQU   EDTHDR+8
EDTUCBSP EQU   EDTHDR+12
EDTMSKTP EQU   EDTHDR+16
LUVSECT  EQU   0
LUVHDR   EQU   LUVSECT
LUVENTNO EQU   LUVHDR
LUVENTRY EQU   0
UNITNAME EQU   LUVENTRY
LUVALUE  EQU   LUVENTRY+8
LUVGMTP  EQU   LUVENTRY+12
LUVGENNO EQU   LUVENTRY+16
LUVGENP  EQU   LUVENTRY+20
LUVFLAGS EQU   LUVENTRY+24
GENSECT  EQU   0
GENHDR   EQU   GENSECT
GENENTRY EQU   0
GENGRPNO EQU   GENENTRY+4
GENGRPTR EQU   GENENTRY+8
GRPTRTAB EQU   0
GRPTR    EQU   GRPTRTAB
GRPSECT  EQU   0
GRPHDR   EQU   GRPSECT
GRPENTNO EQU   GRPHDR
GRPENTRY EQU   0
GRPID    EQU   GRPENTRY
GRPUCBNO EQU   GRPENTRY+4
GRPUCBP  EQU   GRPENTRY+8
EUCBSECT EQU   0
EUCBHDR  EQU   EUCBSECT
EUCBENTY EQU   0
EUCBTPOS EQU   EUCBENTY
GRMSKTAB EQU   0
GMTHDR   EQU   GRMSKTAB
GMTENTRY EQU   0
UCBBGN   EQU   0
UNITTAB  EQU   0
FUNCFLGS EQU   0
CHKGROUP EQU   FUNCFLGS
CHKUNITS EQU   FUNCFLGS
RETNUNIT EQU   FUNCFLGS
RETNUCBS EQU   FUNCFLGS
RETGRPID EQU   FUNCFLGS
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00007 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00007
UCBSKPFG EQU   @NM00007
UCBRIPND EQU   @NM00007
UCBRTIAC EQU   @NM00007
UCBRSV79 EQU   @NM00007
UCBRSV78 EQU   @NM00007
UCBRSV77 EQU   @NM00007
UCBOLTEP EQU   @NM00007
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00006 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00001 EQU   FUNCFLGS
GRPMASK  EQU   GMTENTRY
GMTENTLN EQU   GMTHDR+4
GMTENTNO EQU   GMTHDR
EUCBENLN EQU   EUCBHDR+4
EUCBENNO EQU   EUCBHDR
GRPENTLN EQU   GRPHDR+4
GENDEVT  EQU   GENENTRY
GENENTLN EQU   GENHDR+4
GENENTNO EQU   GENHDR
LUVAGMTP EQU   LUVENTRY+28
@NM00009 EQU   LUVFLAGS
LUVMGENS EQU   LUVFLAGS
LUVAGMSK EQU   LUVFLAGS
LUVVAM   EQU   LUVFLAGS
LUVENTLN EQU   LUVHDR+4
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00008
UCBHALI  EQU   @NM00008
UCBRSV09 EQU   @NM00008
UCBRSV08 EQU   @NM00008
UCBRSV07 EQU   @NM00008
UCBRSV06 EQU   @NM00008
UCBRSV05 EQU   @NM00008
UCBRSV04 EQU   @NM00008
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00005 EQU   UCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00004 EQU   CVTFIX+248
@NM00003 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
UNITINPT EQU   UNITTAB3
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00115 EQU   @RC00092
@RC00119 EQU   @RC00063
@RF00206 EQU   @RC00194
@RF00287 EQU   @EL00002
@RC00149 EQU   @RC00119
@RF00187 EQU   @RC00149
@ENDDATA EQU   *
         END   IEFAB4UV,(C'PLS2136',0701,78089)
