         TITLE 'IEFAB442 - AFFINITY REMOVER                            *
                        '
IEFAB442 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFAB442  74.212'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(16),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
*RTNCODE = SUCCESS;                    /*SET SUCCESSFUL RETURN CODE  */
         SLR   RTNCODE,RTNCODE                                  01S0017
*INUNITID = COMPUNIT;                  /*COPY UNIT ID SO IT WON'T
*                                        CHANGE WHEN VU ENTRIES ARE
*                                        UPDATED                     */
         L     @10,@PC00001+12                                  01S0018
         LH    INUNITID,COMPUNIT(,@10)                          01S0018
*LTUNITID = LTUNITID + ONE;            /*UPDATE LAST UNIT ID NUMBER  */
         L     @10,@PC00001+4                                   01S0019
         L     @10,ALCWAPTR(,@10)                               01S0019
         LA    @06,1                                            01S0019
         LH    @15,LTUNITID(,@10)                               01S0019
         ALR   @15,@06                                          01S0019
         STH   @15,LTUNITID(,@10)                               01S0019
*VUPTR = VOLUNPTR;                     /*POINT TO START OF VOLUNITS  */
         MVC   VUPTR(4),VOLUNPTR(@10)                           01S0020
*DO VUCTR=ONE TO VOLUNSZE/LENGTH(VOLUNTAB) /*SCAN VOLUNIT TABLE      */
*    WHILE RTNCODE = SUCCESS;                                   01S0021
         LR    VUCTR,@06                                        01S0021
         B     @DE00021                                         01S0021
@DL00021 LTR   RTNCODE,RTNCODE                                  01S0021
         BNZ   @DC00021                                         01S0021
*  IF VOLID = INVOLID                  /*REQ FOR THIS VOLUME..       */
*      & VOLUNTID = INUNITID THEN      /*WHICH HAS NOT YET BEEN 01S0022
*                                        ASSIGNED A NEW UNIT ID      */
         L     @10,VUPTR                                        01S0022
         L     @08,@PC00001+8                                   01S0022
         CLC   VOLID(6,@10),INVOLID(@08)                        01S0022
         BNE   @RF00022                                         01S0022
         CH    INUNITID,VOLUNTID(,@10)                          01S0022
         BNE   @RF00022                                         01S0022
*    DO;                               /*YES, PROCESS                */
*      IF VOLDEFER = OFF THEN          /*WAS DEFER-MOUNTED REQUESTED */
         TM    VOLDEFER(@10),B'00000001'                        01S0024
         BNZ   @RF00024                                         01S0024
*        VOLMNTD = ON;                 /*NO, VOL MUST BE MOUNTED     */
         OI    VOLMNTD(@10),B'01000000'                         01S0025
*      ELSE;                           /*DEFER MOUNTING WAS REQUESTED*/
@RF00024 DS    0H                                               01S0027
*      SIOTPTR = VOLSIOTP;             /*POINT TO THIS SIOT          */
         L     @10,VUPTR                                        01S0027
         L     SIOTPTR,VOLSIOTP(,@10)                           01S0027
*      VUP = SVOLUNAD;                 /*POINT TO FIRST VU FOR SIOT  */
         L     VUP,SVOLUNAD(,SIOTPTR)                           01S0028
*      UNAFFFND = OFF;                 /*NO UNIT AFF FOUND YET       */
         NI    UNAFFFND,B'01111111'                             01S0029
*      DO VUC=ONE TO SVOLUNNO;         /*SCAN VU'S FOR SIOT          */
         LA    VUC,1                                            01S0030
         B     @DE00030                                         01S0030
@DL00030 DS    0H                                               01S0031
*        RFY VOLUNTAB BASED(VUP);                               01S0031
*        IF VOLUNTID = INUNITID THEN   /*SAME UNIT REQUESTED ?       */
         CH    INUNITID,VOLUNTID(,VUP)                          01S0032
         BNE   @RF00032                                         01S0032
*          DO;                         /*YES,DETERMINE TYPE OF AFF   */
*            IF VOLID = INVOLID THEN   /*VOLUME AFFINITY ?           */
         L     @10,@PC00001+8                                   01S0034
         CLC   VOLID(6,VUP),INVOLID(@10)                        01S0034
         BNE   @RF00034                                         01S0034
*              DO;                     /*YES, PROCESS ..             */
*                VOLUNTID = LTUNITID;  /*GIVE VU THE NEW UNIT ID     */
         L     @10,@PC00001+4                                   01S0036
         L     @10,ALCWAPTR(,@10)                               01S0036
         MVC   VOLUNTID(2,VUP),LTUNITID(@10)                    01S0036
*                VOLNSHR = OFF;        /*INDICATE VOL IS SHAREABLE   */
         NI    VOLNSHR(VUP),B'11110111'                         01S0037
*              END;                                             01S0038
*            ELSE                      /*UNIT AFFINITY               */
*              DO;                                              01S0039
         B     @RC00034                                         01S0039
@RF00034 DS    0H                                               01S0040
*                IF UNAFFFND = OFF THEN /*FIRST UNIT AFFINITY ?      */
         TM    UNAFFFND,B'10000000'                             01S0040
         BNZ   @RF00040                                         01S0040
*                  DO;                 /*YES, PROCESS ..             */
*                    UNAFFFND = ON;    /*INDICATE UNIT AFFINITY FOUND*/
         OI    UNAFFFND,B'10000000'                             01S0042
*                    UNAFFVUP = VUP;   /*SET PTR TO VU ENTRY NOW
*                                        REQUIRING A DEVICE          */
         LR    UNAFFVUP,VUP                                     01S0043
*                  END;                                         01S0044
*                ELSE;                 /*NOT THE FIRST UNIT AFFINITY */
@RF00040 DS    0H                                               01S0046
*              END;                                             01S0046
*          END;                                                 01S0047
*        ELSE;                         /*DIFFERENT UNIT REQUESTED    */
@RF00032 DS    0H                                               01S0049
*        VUP = VUP + LENGTH(VOLUNTAB); /*POINT TO NEXT VOLUNIT ENTRY */
@RC00032 AH    VUP,@CH00385                                     01S0049
*        RFY VOLUNTAB BASED(VUPTR);                             01S0050
*      END;                                                     01S0051
         AH    VUC,@CH00046                                     01S0051
@DE00030 CH    VUC,SVOLUNNO(,SIOTPTR)                           01S0051
         BNH   @DL00030                                         01S0051
*      IF UNAFFFND = ON THEN           /*UNIT AFFINITY FOUND ?       */
         TM    UNAFFFND,B'10000000'                             01S0052
         BNO   @RF00052                                         01S0052
*        DO;                           /*YES,INCREMENT DEVS REQUIRED */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - INCRUNIT                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - INCREASE SIOT'S UNIT REQUIREMENTS             */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THIS ROUTINE DETERMINES IF ANOTHER UNIT CAN BE ADDED TO      */
*/*     A SIOTS UNIT REQUIREMENT. IF THE SIOT ALREADY REQUIRES       */
*/*     59 UNITS OR IS A DEMAND REQUEST THIS IS AN ERROR. OTHERWISE, */
*/*     'SIOTOTUN' IS INCREMENTED, AND IEFAB428 IS CALLED TO GET     */
*/*     A LARGER TIOT ENTRY FOR THIS SIOT IF ONE ALREADY EXISTS.     */
*/*                                                                  */
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF)   */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     SIOTPTR - PTR TO THE SIOT TO BE PROCESSED                    */
*/*       SIOTOTUN - NUMBER OF UNITS ALREADY REQ'D BY THIS SIOT      */
*/*       SIOTETIO - PTR TO DSAB FOR THIS SIOT, OR 0                 */
*/*       PTR TO VU ENTRY NOW REQUIRING A DEVICE                     */
*/*           .VUPTR    - PTR TO FIRST UNIT AFFINITY                 */
*/*                       SIOT FOR THE INPUT VOLUME                  */
*/*           .UNAFFVUP - PTR TO FIRST UNIT AFFINITY                 */
*/*                       TO THE INPUT VOLUME IN THIS SIOT           */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITIONS - SIOT'S UNIT REQUIREMENTS INCREMENTED WITHOUT      */
*/*                ANY ERROR                                         */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*     .LARGER TIOT ENTRY OBTAINED IF ANY ALREADY EXISTS            */
*/*     .SIOTOTUN INCREMENTED BY 1                                   */
*/*     .VDEVREQD=1 FOR VU ENTRY NOW NEEDING A DEVICE                */
*/*                                                                  */
*/*   RETURN CODES - RTNCODE = O                                     */
*/*                                                                  */
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */
*/*                                                                  */
*/*   CONDITIONS - SIOT ALREADY REQUIRES THE MAXIMUM NUMBER OF       */
*/*                DEVICES OR IS A DEMAND REQUEST                    */
*/*                                                                  */
*/*   OUTPUT - SIOT ERROR REASON CODE (SIOTRSNC) SET TO 9 IF         */
*/*            NON-DEMAND REQUEST OR 74 IF A DEMAND REQUEST.         */
*/*                                                                  */
*/*   RETURN CODES - RTNCODE = 4                                     */
*/*                                                                  */
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */
*/*                                                                  */
*/*   CONDITIONS - ERROR DETECTED BY MODULE IEFAB428                 */
*/*                                                                  */
*/*   OUTPUT - STEP-RELATED ERROR REASON CODE SET BY IEFAB428        */
*/*                                                                  */
*/*   RETURN CODES - RTNCODE = NON-ZERO                              */
*/*                                                                  */
*/********************************************************************/
*IF SIOTDMND = ON THEN                 /*DEMAND REQ?                 */
         TM    SIOTDMND(SIOTPTR),B'10000000'                    02S0054
         BNO   @RF00054                                         02S0054
*  DO;                                 /*YES, INDICATE ERROR         */
*    RTNCODE = FAILURE;                /*SET ERROR RETURN CODE       */
         LA    RTNCODE,4                                        02S0056
*    SIOTRSNC = ERROR74;               /*SET SIOT REASON CODE        */
         MVC   SIOTRSNC(2,SIOTPTR),@CH00068                     02S0057
*  END;                                                         02S0058
*ELSE                                  /*NOT A DEMAND REQ            */
*  DO;                                                          02S0059
         B     @RC00054                                         02S0059
@RF00054 DS    0H                                               02S0060
*IF SIOTOTUN < MAXUN59 THEN            /*OK TO ADD ANOTHER DEVICE ?  */
         CLI   SIOTOTUN(SIOTPTR),59                             02S0060
         BNL   @RF00060                                         02S0060
*  DO;                                 /*YES, PROCESS ..             */
*    SIOTOTUN = SIOTOTUN + ONE;        /*INCREMENT SIOT'S DEVICE REQS*/
         LA    @10,1                                            02S0062
         SLR   @08,@08                                          02S0062
         IC    @08,SIOTOTUN(,SIOTPTR)                           02S0062
         ALR   @10,@08                                          02S0062
         STC   @10,SIOTOTUN(,SIOTPTR)                           02S0062
*    IF VUPTR->VDEVREQD = OFF THEN     /*DID REQ FOR VOL NEED A DEV? */
         L     @10,VUPTR                                        02S0063
         TM    VDEVREQD(@10),B'00100000'                        02S0063
         BNZ   @RF00063                                         02S0063
*      TEMPVUP = VUPTR;                /*NO,SET PTR TO THIS VU ENTRY */
         LR    TEMPVUP,@10                                      02S0064
*    ELSE                              /*REQ FOR VOL ALREADY NEED VOL*/
*      TEMPVUP = UNAFFVUP;             /*..SET PTR TO UNIT AFF VU    */
         B     @RC00063                                         02S0065
@RF00063 LR    TEMPVUP,UNAFFVUP                                 02S0065
*    TEMPVUP->VDEVREQD = ON;           /*TURN ON DEV-REQ'D INDICATOR */
@RC00063 OI    VDEVREQD(TEMPVUP),B'00100000'                    02S0066
*    IF SIOTETIO ^= ZERO THEN          /*DOES ETIOT EXIST ?          */
         ICM   @10,15,SIOTETIO(SIOTPTR)                         02S0067
         BZ    @RF00067                                         02S0067
*      DO;                             /*YES, GET A LARGER TIOT      */
*        ETIORB = ETIORB && ETIORB;    /*CLEAR REQUEST BLOCK         */
         XC    ETIORB(42),ETIORB                                02S0069
*        EREQPTR = ADDR(ETIORB);       /*GET ADDR MAPPING MACRO      */
         LA    @10,ETIORB                                       02S0070
         ST    @10,EREQPTR                                      02S0070
*        EREQDEVS = SIOTOTUN;          /*SET NUMBER OF DEVICES REQ'D */
         SLR   @08,@08                                          02S0071
         IC    @08,SIOTOTUN(,SIOTPTR)                           02S0071
         STH   @08,EREQDEVS(,@10)                               02S0071
*        EREQMOVE = ON;                /*INDICATE ETIOT SWITCH FUNC  */
         OI    EREQMOVE(@10),B'00100000'                        02S0072
*        EREQSIOT = SIOTPTR;           /*STORE PTR TO SIOT IN THE RB */
         ST    SIOTPTR,EREQSIOT(,@10)                           02S0073
*        EREQJSCB = JSCBPTR;           /*STORE PTR TO JSCB IN THE RB */
         L     @08,@PC00001+4                                   02S0074
         L     @08,ALCWAPTR(,@08)                               02S0074
         MVC   EREQJSCB(4,@10),JSCBPTR(@08)                     02S0074
*        EREQRPOS = ONE;               /*INIT RELATIVE POSITION OF
*                                        THE NEW DEVICE-REQ'D ENTRY  */
         LA    @08,1                                            02S0075
         STH   @08,EREQRPOS(,@10)                               02S0075
*        VUP = SVOLUNAD;               /*POINT TO SIOT'S FIRST VU    */
         L     VUP,SVOLUNAD(,SIOTPTR)                           02S0076
*        DO VUC=ONE TO SVOLUNNO        /*SCAN ALL VU ENTRIES UP TO ..*/
*            WHILE (VUP^=TEMPVUP);     /*..THE NEW DEV-REQ'D ENTRY   */
         LA    @10,1                                            02S0077
         LR    VUC,@10                                          02S0077
         B     @DE00077                                         02S0077
@DL00077 CR    VUP,TEMPVUP                                      02S0077
         BE    @DC00077                                         02S0077
*          IF VUP->VDEVREQD=ON THEN    /*DEVICE-REQ'D FOR VU ENTRY ? */
         TM    VDEVREQD(VUP),B'00100000'                        02S0078
         BNO   @RF00078                                         02S0078
*            EREQRPOS=EREQRPOS + ONE;  /*YES,BUMP REL POSITION OF NEW*/
         L     @10,EREQPTR                                      02S0079
         LA    @04,1                                            02S0079
         AH    @04,EREQRPOS(,@10)                               02S0079
         STH   @04,EREQRPOS(,@10)                               02S0079
*          ELSE;                       /*VU ENTRY NOT DEVICE-REQUIRED*/
@RF00078 DS    0H                                               02S0081
*          VUP = VUP + LENGTH(VOLUNTAB); /*POINT TO NEXT VOLUNIT ENT */
         AH    VUP,@CH00385                                     02S0081
*        END;                                                   02S0082
         AH    VUC,@CH00046                                     02S0082
@DE00077 CH    VUC,SVOLUNNO(,SIOTPTR)                           02S0082
         BNH   @DL00077                                         02S0082
@DC00077 DS    0H                                               02S0083
*        CALL IEFAB428 (EREQPTR,JSCBPTR,EXITPRMP); /*BUILD NEW ENTRY,
*                                                    DELETE OLD.     */
         LA    @10,EREQPTR                                      02S0083
         ST    @10,@AL00001                                     02S0083
         L     @10,@PC00001+4                                   02S0083
         L     @10,ALCWAPTR(,@10)                               02S0083
         LA    @08,JSCBPTR(,@10)                                02S0083
         ST    @08,@AL00001+4                                   02S0083
         LA    @10,EXITPRMP(,@10)                               02S0083
         ST    @10,@AL00001+8                                   02S0083
         L     @15,@CV00083                                     02S0083
         LA    @01,@AL00001                                     02S0083
         BALR  @14,@15                                          02S0083
*        RTNCODE = REG15;              /*SAVE THE RETURN CODE        */
         LR    RTNCODE,REG15                                    02S0084
*        IF RTNCODE ^= SUCCESS THEN    /*ANY ERRORS ?                */
         LTR   RTNCODE,RTNCODE                                  02S0085
         BZ    @RF00085                                         02S0085
*          REASONCD = EREQCODE;        /*YES,COPY THE ERROR REASON CD*/
         L     @10,@PC00001+4                                   02S0086
         L     @10,ALCWAPTR(,@10)                               02S0086
         L     @10,FAILRSCP(,@10)                               02S0086
         L     @08,EREQPTR                                      02S0086
         LH    @08,EREQCODE(,@08)                               02S0086
         ST    @08,REASONCD(,@10)                               02S0086
*        ELSE;                         /*NO ERROR                    */
@RF00085 DS    0H                                               02S0088
*      END;                                                     02S0088
*    ELSE;                             /*NO ETIOT EXISTS             */
@RF00067 DS    0H                                               02S0090
*  END;                                                         02S0090
*ELSE                                  /*SIOT ALREADY NEEDS MAX UNITS*/
*  DO;                                                          02S0091
         B     @RC00060                                         02S0091
@RF00060 DS    0H                                               02S0092
*    RTNCODE = FAILURE;                /*SET ERROR RETURN CODE       */
         LA    RTNCODE,4                                        02S0092
*    SIOTRSNC = ERROR9;                /*SET SIOT REASON CODE        */
         MVC   SIOTRSNC(2,SIOTPTR),@CH00066                     02S0093
*  END;                                                         02S0094
*END;                                                           02S0095
*        END;                                                   01S0096
*      ELSE;                           /*NO UNIT AFFINITY FOUND      */
@RF00052 DS    0H                                               01S0098
*    END;                                                       01S0098
*  ELSE;                               /*NOT SIOT'S 1ST REQ FOR VOL  */
@RF00022 DS    0H                                               01S0100
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO NEXT VOLUNIT ENTRY */
@RC00022 LA    @10,28                                           01S0100
         AL    @10,VUPTR                                        01S0100
         ST    @10,VUPTR                                        01S0100
*END;                                                           01S0101
         AH    VUCTR,@CH00046                                   01S0101
@DE00021 L     @10,@PC00001+4                                   01S0101
         L     @10,ALCWAPTR(,@10)                               01S0101
         L     @00,VOLUNSZE(,@10)                               01S0101
         SRDA  @00,32                                           01S0101
         D     @00,@CF00385                                     01S0101
         CR    VUCTR,@01                                        01S0101
         BNH   @DL00021                                         01S0101
@DC00021 DS    0H                                               01S0102
*IF RTNCODE = SUCCESS THEN             /*ANY ERRORS ?                */
         SLR   @10,@10                                          01S0102
         CR    RTNCODE,@10                                      01S0102
         BNE   @RF00102                                         01S0102
*  DO;                                 /*NO,DO CLEANUP PROCESSING    */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CLEANCHG                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHANGE VU ENTRY FOR THE FIRST UNIT AFFINITY   */
*/*                    ENTRY TO THE INPUT VOLUME                     */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*     THIS SEGMENT LOCATES THE FIRST VOLUNIT ENTRY WITH UNIT       */
*/*     AFFINITY TO REQUESTS FOR THE INPUT VOLUME (IF ONE EXISTS),   */
*/*     AND UPDATES THIS VOLUNIT ENTRY AS FOLLOWS:                   */
*/*       .THE ENTRY IS MARKED SHAREABLE (VOLNSHR=0) IF THERE ARE    */
*/*        NO OTHER UNIT AFFINITY REQUESTS.                          */
*/*       .VOLMNTD IS SET ON (MEANING THE VOLUME MUST BE MOUNTED     */
*/*        BY ALLOCATION) UNLESS DEFER MOUNTING WAS REQUESTED        */
*/*     IF REQUESTED, IEFAB4F2 IS CALLED TO INDICATE THAT THIS       */
*/*     FIRST UNIT AFFINITY VU ENTRY REPRESENTS A UNIQUE UNIT        */
*/*     REQUEST (TO BE COVERED BY THE ALGORITHM).                    */
*/*                                                                  */
*/*   OPERATION - THE VOLUNIT TABLE IS FIRST SCANNED TO COUNT THE VU */
*/*               ENTRIES WITH UNIT AFFINITY TO THE INPUT VOLUME     */
*/*               AND TO SAVE A POINTER TO THE FIRST UNIT AFFINITY   */
*/*               REQUEST.                                           */
*/*                                                                  */
*/* ENTRY - (INLINE SUBROUTINE)                                      */
*/*                                                                  */
*/*   INPUT -                                                        */
*/*     UPALGSW - FUNCTION MAP BIT. IF 1, THE ALGORITHM TABLES       */
*/*               SHOULD BE UPDATED.                                 */
*/*     INUNITID - UNIT ID OF REQS WITH UNIT AFFINITY TO THE INPUT   */
*/*                VOLUME SERIAL NUMBER.                             */
*/*     ALCWAPTR - PTR TO THE ALLOCATION WORK AREA, WHICH CONTAINS   */
*/*       VOLUNSZE - SIZE OF THE VOLUNIT TABLE                       */
*/*       VOLUNPTR - PTR TO THE VOLUNIT TABLE                        */
*/*                                                                  */
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */
*/*                                                                  */
*/*   CONDITIONS - FUNCTION COMPLETED.                               */
*/*                                                                  */
*/*   OUTPUT - (AS DESCRIBED IN THE 'FUNCTION' SECTION OF THIS SPEC) */
*/*                                                                  */
*/*   RETURN CODES - NONE                                            */
*/*                                                                  */
*/********************************************************************/
*UNAFFCTR = ZERO;                      /*INIT COUNT OF UNIT AFF REQS */
         LR    UNAFFCTR,@10                                     02S0104
*UNAFFVUP = ZERO;                      /*INIT PTR TO VU WITH UNIT AFF*/
         LR    UNAFFVUP,@10                                     02S0105
*VUPTR = VOLUNPTR;                     /*POINT TO THE FIRST VU ENTRY */
         L     @10,@PC00001+4                                   02S0106
         L     @10,ALCWAPTR(,@10)                               02S0106
         MVC   VUPTR(4),VOLUNPTR(@10)                           02S0106
*DO VUCTR=ONE TO VOLUNSZE/LENGTH(VOLUNTAB); /*SCAN VOLUNIT TABLE     */
         LA    VUCTR,1                                          02S0107
         B     @DE00107                                         02S0107
@DL00107 DS    0H                                               02S0108
*  IF VOLUNTID = INUNITID THEN         /*UNIT AFFINITY TO REQUESTS
*                                          FOR INPUT VOL?            */
         L     @10,VUPTR                                        02S0108
         CH    INUNITID,VOLUNTID(,@10)                          02S0108
         BNE   @RF00108                                         02S0108
*    DO;                                                        02S0109
*      UNAFFCTR = UNAFFCTR + ONE;      /*YES,INCREMENT COUNT         */
         LA    @08,1                                            02S0110
         ALR   UNAFFCTR,@08                                     02S0110
*      IF UNAFFCTR = ONE THEN          /*FIRST UNITAFF VU ?          */
         CR    UNAFFCTR,@08                                     02S0111
         BNE   @RF00111                                         02S0111
*        UNAFFVUP = VUPTR;             /*YES, SAVE PTR TO VU         */
         LR    UNAFFVUP,@10                                     02S0112
*      ELSE;                           /*NOT FIRST UNIT AFF          */
@RF00111 DS    0H                                               02S0114
*    END;                                                       02S0114
*  ELSE;                               /*NOT UNIT AFF                */
@RF00108 DS    0H                                               02S0116
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO NEXT VOLUNIT ENTRY */
         LA    @10,28                                           02S0116
         AL    @10,VUPTR                                        02S0116
         ST    @10,VUPTR                                        02S0116
*END;                                                           02S0117
         AH    VUCTR,@CH00046                                   02S0117
@DE00107 L     @10,@PC00001+4                                   02S0117
         L     @10,ALCWAPTR(,@10)                               02S0117
         L     @00,VOLUNSZE(,@10)                               02S0117
         SRDA  @00,32                                           02S0117
         D     @00,@CF00385                                     02S0117
         CR    VUCTR,@01                                        02S0117
         BNH   @DL00107                                         02S0117
*IF UNAFFVUP ^= ZERO THEN              /*ANY UNIT AFF REQUEST ?      */
         LTR   UNAFFVUP,UNAFFVUP                                02S0118
         BZ    @RF00118                                         02S0118
*  DO;                                 /*YES, PROCESS ..             */
*    VUPTR = UNAFFVUP;                 /*POINT TO UNIT AFF REQUEST   */
         ST    UNAFFVUP,VUPTR                                   02S0120
*    IF UNAFFCTR = ONE THEN            /*ONLY ONE UNIT AFFINITY REQ? */
         CH    UNAFFCTR,@CH00046                                02S0121
         BNE   @RF00121                                         02S0121
*      VOLNSHR = OFF;                  /*YES,MARK VU ENTRY SHAREABLE */
         L     @10,VUPTR                                        02S0122
         NI    VOLNSHR(@10),B'11110111'                         02S0122
*    ELSE;                             /*MORE THAN ONE UNIT AFF REQ  */
@RF00121 DS    0H                                               02S0124
*    IF VOLDEFER = OFF THEN            /*WAS DEFER MOUNTING REQUESTED*/
         L     @10,VUPTR                                        02S0124
         TM    VOLDEFER(@10),B'00000001'                        02S0124
         BNZ   @RF00124                                         02S0124
*      VOLMNTD = ON;                   /*NO,INDICATE VOL MOUNT NEEDED*/
         OI    VOLMNTD(@10),B'01000000'                         02S0125
*    ELSE;                             /*DEFER MOUNTING WAS REQUESTED*/
@RF00124 DS    0H                                               02S0127
*    IF UPALGSW = ON THEN              /*ALG TABLES TO BE UPDATED?   */
         L     @10,@PC00001                                     02S0127
         TM    UPALGSW(@10),B'10000000'                         02S0127
         BNO   @RF00127                                         02S0127
*      CALL IEFAB4F2 (FUNC4F2,VUPTR,0,0,0); /*YES,FIRST UNIT AFF
*                                        NOW REQUIRES A UNIQUE DEVICE*/
         MVC   @AL00001(20),@AL00128                            02S0128
         LA    @10,VUPTR                                        02S0128
         ST    @10,@AL00001+4                                   02S0128
         L     @15,@CV00084                                     02S0128
         LA    @01,@AL00001                                     02S0128
         BALR  @14,@15                                          02S0128
*    ELSE;                             /*DON'T UPDATE ALG TABLES     */
@RF00127 DS    0H                                               02S0130
*  END;                                                         02S0130
*ELSE;                                 /*NO UNIT AFFINITY REQUEST    */
@RF00118 DS    0H                                               02S0132
*  END;                                                         01S0132
*ELSE;                                 /*ERROR                       */
@RF00102 DS    0H                                               01S0134
*RETURN CODE(RTNCODE);                 /*RETURN TO CALLER            */
         IC    @02,@OLDKEY                                      01S0134
         L     @13,4(,@13)                                      01S0134
         L     @00,@SIZDATD                                     01S0134
         LR    @01,@11                                          01S0134
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
         LR    @15,@04                                          01S0134
         L     @14,12(,@13)                                     01S0134
         LM    @00,@12,20(@13)                                  01S0134
         BR    @14                                              01S0134
*END IEFAB442                                                   01S0135
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (A442SPEC)                                        *
*/*%INCLUDE SYSLIB  (A442DATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB423)                                        *
*/*%INCLUDE SYSLIB  (IEFZB425)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFZB430)                                        *
*/*%INCLUDE SYSLIB  (INCRUNIT)                                        *
*/*%INCLUDE SYSLIB  (INCRSPEC)                                        *
*/*%INCLUDE SYSLIB  (CLEANCHG)                                        *
*/*%INCLUDE SYSLIB  (CLENSPEC)                                        *
*;                                                              01S0135
@DATA    DS    0H
@CH00046 DC    H'1'
@CH00066 DC    H'9'
@CH00068 DC    H'74'
         DS    0F
@AL00128 DC    A(@CB00072)             LIST WITH   5 ARGUMENT(S)
         DS    F
         DC    A(@CF00081)
         DC    A(@CF00081)
         DC    A(@CF00081)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
@AL00001 DS    5A
IEFAB442 CSECT
         DS    0F
@CF00081 DC    F'0'
@CF00385 DC    F'28'
@CH00385 EQU   @CF00385+2
@DATD    DSECT
         DS    0D
EREQPTR  DS    A
VUPTR    DS    A
UNAFFFND DS    BL1
ETIORB   DS    CL42
@OLDKEY  DS    AL1
IEFAB442 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00083 DC    V(IEFAB428)
@CV00084 DC    V(IEFAB4F2)
         DS    0D
@CB00072 DC    B'10000000'
IEFAB442 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFAB442 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
VUCTR    EQU   @09
VUC      EQU   @08
UNAFFCTR EQU   @02
RTNCODE  EQU   @04
INUNITID EQU   @07
VUP      EQU   @03
UNAFFVUP EQU   @05
TEMPVUP  EQU   @06
SIOTPTR  EQU   @02
REG15    EQU   @15
REASONCD EQU   0
VOLUNTAB EQU   0
VOLID    EQU   VOLUNTAB
VOLSTAT  EQU   VOLUNTAB+6
VOLSTATA EQU   VOLSTAT
VOLNSHR  EQU   VOLSTATA
VOLDEFER EQU   VOLSTATA
VOLSTATB EQU   VOLSTAT+1
VOLMNTD  EQU   VOLSTATB
VDEVREQD EQU   VOLSTATB
VOLSTATC EQU   VOLSTAT+2
VOLSTATD EQU   VOLSTAT+3
VOLUNTID EQU   VOLUNTAB+10
VOLSIOTP EQU   VOLUNTAB+16
ALCWA    EQU   0
JSCBPTR  EQU   ALCWA+12
FAILRSCP EQU   ALCWA+20
CNTABLE  EQU   ALCWA+28
LTUNITID EQU   ALCWA+76
VOLUNPTR EQU   ALCWA+80
VOLUNSZE EQU   ALCWA+84
INDICATE EQU   ALCWA+112
@NM00005 EQU   ALCWA+113
TIOTHDRP EQU   ALCWA+120
EXITPRMP EQU   ALCWA+144
NAMES    EQU   0
INDMSIOT EQU   0
SCTUSADD EQU   INDMSIOT+20
SIOTOTUN EQU   INDMSIOT+39
SIOTBYT1 EQU   INDMSIOT+43
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
SIOTDMND EQU   SIOTBYT2
SIOTRSNC EQU   INDMSIOT+130
SVOLUNAD EQU   INDMSIOT+140
SIOTETIO EQU   INDMSIOT+148
SVOLUNNO EQU   INDMSIOT+168
ETIOTREQ EQU   0
EREQMAP  EQU   ETIOTREQ
EREQMOVE EQU   EREQMAP
EREQSTAT EQU   ETIOTREQ+2
EREQSIOT EQU   ETIOTREQ+20
EREQRPOS EQU   ETIOTREQ+28
EREQDEVS EQU   ETIOTREQ+30
EREQJSCB EQU   ETIOTREQ+36
EREQCODE EQU   ETIOTREQ+40
FMAPBITS EQU   0
UPALGSW  EQU   FMAPBITS
ALCWAPTR EQU   0
INVOLID  EQU   0
COMPUNIT EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
EREQGRID EQU   ETIOTREQ+32
EREQUCB  EQU   ETIOTREQ+24
@NM00027 EQU   ETIOTREQ+19
EREQSSVA EQU   ETIOTREQ+16
@NM00026 EQU   ETIOTREQ+15
EREQJSVA EQU   ETIOTREQ+12
EREQDDNM EQU   ETIOTREQ+4
@NM00025 EQU   EREQSTAT
EREQCATL EQU   EREQSTAT
EREQJSCT EQU   EREQSTAT
EREQPASS EQU   EREQSTAT
EREQUNAL EQU   EREQSTAT
EREQVAM  EQU   EREQSTAT
EREQQNM  EQU   EREQSTAT
EREQTERM EQU   EREQSTAT
@NM00024 EQU   EREQMAP
EREQUPD  EQU   EREQMAP
EREQBLD  EQU   EREQMAP
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTNPTR EQU   INDMSIOT+152
SIOTATE  EQU   INDMSIOT+144
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SCTANAME EQU   INDMSIOT+122
@NM00023 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00022 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00021 EQU   SIOTALTD
@NM00020 EQU   SIOTALTD
@NM00019 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00018 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00017 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCBAD EQU   SCTUTYPE+5
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00016 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00015 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
@NM00014 EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
@NM00013 EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
@NM00012 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00011 EQU   SIOTTSTC
@NM00010 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTVRSB EQU   INDMSIOT+36
@NM00009 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00008 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
@NM00007 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SCTDDNAM EQU   INDMSIOT+4
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
ALCPROCN EQU   NAMES+16
ALCSTEPN EQU   NAMES+8
ALCJOBN  EQU   NAMES
CANCELP  EQU   ALCWA+140
WORK3MP  EQU   ALCWA+136
WMASK2P  EQU   ALCWA+132
WMASKPTR EQU   ALCWA+128
LGENLOCK EQU   ALCWA+124
TCBP     EQU   ALCWA+116
ALCWASID EQU   ALCWA+114
@NM00006 EQU   @NM00005
NODEVERR EQU   @NM00005
NEEDRCVY EQU   @NM00005
ALCWAREC EQU   @NM00005
WAITIGEN EQU   @NM00005
UNITRECS EQU   @NM00005
ALCWADUL EQU   INDICATE
ALCWISAM EQU   INDICATE
DSSUNIT  EQU   INDICATE
DSSTAPE  EQU   INDICATE
PRIVASUM EQU   INDICATE
INDREQU  EQU   INDICATE
INDRETRY EQU   INDICATE
INDWAIT  EQU   INDICATE
QMGRRBP  EQU   ALCWA+108
RIMTABCT EQU   ALCWA+104
RIMTABLN EQU   ALCWA+100
RIMTABP  EQU   ALCWA+96
ALGTABSZ EQU   ALCWA+92
ALGTABP  EQU   ALCWA+88
@NM00004 EQU   ALCWA+78
TOTVOLUN EQU   CNTABLE+44
NUMREQS  EQU   CNTABLE+40
TOTREQS  EQU   CNTABLE+36
OTHEREQS EQU   CNTABLE+32
SUBSREQS EQU   CNTABLE+28
STRGREQS EQU   CNTABLE+24
PUBLREQS EQU   CNTABLE+20
PVTNREQS EQU   CNTABLE+16
SPECREQS EQU   CNTABLE+12
TPREQS   EQU   CNTABLE+8
VAMREQS  EQU   CNTABLE+4
DMYREQS  EQU   CNTABLE
EDTABPTR EQU   ALCWA+24
IOSLUTP  EQU   ALCWA+16
SIOT1P   EQU   ALCWA+8
FMAPPTR  EQU   ALCWA+4
WASIZE   EQU   ALCWA
VUGRID   EQU   VOLUNTAB+24
VUUCBP   EQU   VOLUNTAB+20
VOLALGTP EQU   VOLUNTAB+12
VURCVYPR EQU   VOLSTATD
VUVLUNIQ EQU   VOLSTATD
VUDMUNIQ EQU   VOLSTATD
VUUNALSW EQU   VOLSTATD
VUDMNDAL EQU   VOLSTATD
VUDMNDOF EQU   VOLSTATD
VUREALOC EQU   VOLSTATD
VUMUGDON EQU   VOLSTATD
@NM00003 EQU   VOLSTATC
@NM00002 EQU   VOLSTATC
@NM00001 EQU   VOLSTATC
VOLURREQ EQU   VOLSTATC
VOLGRREQ EQU   VOLSTATC
VOLDAREQ EQU   VOLSTATC
VOLCOREQ EQU   VOLSTATC
VOLTAREQ EQU   VOLSTATC
VUAFFWRK EQU   VOLSTATB
VUVINELG EQU   VOLSTATB
VUDADSME EQU   VOLSTATB
VUDNALOC EQU   VOLSTATB
VUPROCED EQU   VOLSTATB
VOLALOC  EQU   VOLSTATB
VUDADSM  EQU   VOLSTATA
VOLRESVE EQU   VOLSTATA
VOLSTG   EQU   VOLSTATA
VOLSPEC  EQU   VOLSTATA
VOLPRV   EQU   VOLSTATA
VOLPUB   EQU   VOLSTATA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00034 EQU   @RC00032
@RC00052 EQU   @RC00022
@RC00054 EQU   @RC00052
@RC00060 EQU   @RC00052
@ENDDATA EQU   *
         END   IEFAB442,(C'PLS0422',0603,74212)
