         TITLE 'IEAVESPR-SUPERVISOR CONTROL FRR                        *
                        '
IEAVESPR CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IEAVESPR  77.089'                                 0001
IEAVERTN DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00225-IEAVERTN)
         ENTRY IEAVERTN
         DROP  @15
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*   SCRASCRA=NAMESCRA;              /* PUT ACRONYM IN SCRA           */
         L     @15,SDWAPARM(,SDWAPTR)                              0084
         MVC   SCRASCRA(4,@15),@CC01721                            0084
*   SCRACSTK=PSACSTK;               /* SAVE CURRENT STACK POINTER    */
         L     @12,PSACSTK                                         0085
         ST    @12,SCRACSTK(,@15)                                  0085
*   SCRARTNP=RTNRG;                 /* SAVE REGISTER 14 ACROSS MODULE*/
         ST    RTNRG,SCRARTNP(,@15)                                0086
*   SCRAWORK=WORKPARM;              /* SAVE ADDRESS OF WORK AREA     */
         ST    WORKPARM,SCRAWORK(,@15)                             0087
*   SCRASUPR=PSASUPER;              /* SET UP SUPER BITS IN SCRA FOR
*                                      RECORDING INTO SDWA           */
         L     @12,PSASUPER                                        0088
         ST    @12,SCRASUPR(,@15)                                  0088
*   WORKPTR=WORKPARM;               /* SAVE ADDRESS OF WORK AREA     */
         LR    WORKPTR,WORKPARM                                    0089
*   RESPECIFY                                                      0090
*    (WORKPARM,                                                    0090
*     RTNRG) UNRSTD;                                               0090
*   IF SCRAREC2=BITON               /* DOUBLE RECURSIVE ABEND ?      */
*     THEN                                                         0091
         TM    SCRAREC2(@15),B'01000000'                           0091
         BNO   @RF00091                                            0091
*     DO;                                                          0092
*                                                                  0093
*/*           SET UP FOR SYSTEM TERMINATION                          */
*                                                                  0093
*       RESPECIFY                                                  0093
*         WKREG RSTD;               /*                       @YM02118*/
*       GEN( LRA   WKREG,WTOMSG);   /*                       @YM02118*/
          LRA   WKREG,WTOMSG
*       PTRWTO=WKREG;               /*                       @YM02118*/
         ST    WKREG,PTRWTO(,WORKPTR)                              0095
*       GEN( LRA   WKREG,LOGLRB(,WORKPTR));/*                @YM02118*/
          LRA   WKREG,LOGLRB(,WORKPTR)
*       PTRLGREC=WKREG;             /*                       @YM02118*/
         ST    WKREG,PTRLGREC(,WORKPTR)                            0097
*       RFY                                                        0098
*         WKREG UNRSTD;             /*                       @YM02118*/
*       LOGLHDR=''B;                /* CLEAR OUT HEADER              */
         XC    LOGLHDR(32,WORKPTR),LOGLHDR(WORKPTR)                0099
*       LOGLRCDT=RCDTYPE;           /* PUT RECORD TYPE INTO BUFFER   */
         MVI   LOGLRCDT(WORKPTR),X'7D'                             0100
*       LOGLSIZE=LENGTH(LOGLRB);    /* LENGTH OF BUFFER SET UP       */
         MVC   LOGLSIZE(4,WORKPTR),@CF00326                        0101
*       LOGLCODE=WAITCODE;          /* PUT WAIT STATE CODE IN BUFFER */
         MVC   LOGLCODE(4,WORKPTR),@CB01716                        0102
*       RESPECIFY                                                  0103
*         PARMRG RSTD;                                             0103
*       GEN( LRA   PARMRG,0(WORKPTR));/*                     @YM02118*/
          LRA   PARMRG,0(WORKPTR)
*       GOTO IGFPTERM;              /* GO TO SYSTEM TERMINATION      */
         L     @12,@CV01741                                        0105
         BR    @12                                                 0105
*     END;                                                         0106
*   RESPECIFY                                                      0107
*     PARMRG UNRSTD;                                               0107
@RF00091 DS    0H                                                  0108
*   IF SCRAREC1=BITON               /* FIRST RECURSIVE ABEND?        */
*     THEN                                                         0108
         L     @12,SDWAPARM(,SDWAPTR)                              0108
         TM    SCRAREC1(@12),B'10000000'                           0108
         BNO   @RF00108                                            0108
*     DO;                                                          0109
*       SCRAREC2=BITON;             /* SET DOUBLE RECURSIVE INDICATOR*/
         OI    SCRAREC2(@12),B'01000000'                           0110
*       SCRAMTRM=BITON;             /* SET MEMTERM INDICATOR         */
         OI    SCRAMTRM(@12),B'10000000'                           0111
*SPRSPEC:                                                          0112
*       ;                           /* SPECIAL SUPER CONTROL FRR EXIT*/
SPRSPEC  DS    0H                                                  0113
*       SDWARTYA=ADDR(IEA0DS);      /* RETRY AT IEA0DS               */
         L     @12,@CV01737                                        0113
         ST    @12,SDWARTYA(,SDWAPTR)                              0113
*       PSASUPER=''B;               /* ZERO ALL SUPER BITS           */
         XC    PSASUPER(4),PSASUPER                                0114
*       LCCASPIN=''B;               /* ZERO ALL SPIN INDICATORS      */
         L     @12,LCCAPTR                                         0115
         XC    LCCASPIN(4,@12),LCCASPIN(@12)                       0115
*       LCCASPLJ=''B;               /* ZERO SPL JOURNAL WORD         */
         SLR   @10,@10                                             0116
         ST    @10,LCCASPLJ(,@12)                                  0116
*       LCCASMQJ=''B;               /* ZERO SMQ JOURNAL WORD         */
         ST    @10,LCCASMQJ(,@12)                                  0117
*       LCCAIHRC=''B;               /* ZERO RECURSION INDICATORS     */
         XC    LCCAIHRC(4,@12),LCCAIHRC(@12)                       0118
*       CALL IEAVERTN;              /* EXIT FROM SUPER FRR           */
         L     @15,@CA01767                                        0119
         BALR  @14,@15                                             0119
*     END;                                                         0120
*   SCRAREC1=BITON;                 /* SET FIRST RECURSION INDICATOR */
@RF00108 L     @12,SDWAPARM(,SDWAPTR)                              0121
         OI    SCRAREC1(@12),B'10000000'                           0121
*   SDWAREXN=SUPRNAME;              /* SET UP NAME OF RECOVERY     0122
*                                      ROUTINE                       */
         MVC   SDWAREXN(8,SDWAPTR),@CC01699                        0122
*   IF NASID^=ZERO                  /* DAT ERROR ?                   */
*     THEN                                                         0123
         LH    @10,NASID(,SDWAPTR)                                 0123
         N     @10,@CF01802                                        0123
         LTR   @10,@10                                             0123
         BZ    @RF00123                                            0123
*     DO;                                                          0124
*       SCRAMTRM=BITON;             /* YES, INDICATE MEMTERM CURRENT
*                                      MEMORY                        */
         OI    SCRAMTRM(@12),B'10000000'                           0125
*       IF PSACSTK^=PSASSTK         /* NOT DISPATCHER STACK          */
*           ×PSAIO=BITON            /* OR IO FLIH IN CONTROL         */
*           ×PSASVC=BITON           /* OR SVC FLIH IN CONTROL        */
*         THEN                                                     0126
         CLC   PSACSTK(4),PSASSTK                                  0126
         BNE   @RT00126                                            0126
         TM    PSAIO,B'11000000'                                   0126
         BNZ   @RT00126                                            0126
*         GO TO SPRSPEC;            /* THEN TAKE SPECIAL EXIT        */
*       ELSE                                                       0128
*         GO TO DISPEXIT;           /* MUST BE DISPATCHER IN CONTROL */
         B     DISPEXIT                                            0128
*     END;                                                         0129
*                                                                  0130
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR A MACHINE CHECK WITHIN TRACE WHICH WE CAN RETRY TO  */
*   /* THE CALLER OF TRACE WITH VALID REGISTERS. THIS PIECE OF CODE  */
*   /* CANNOT RECOVER FROM A PROGRAM CHECK WITHIN TRACE. IF THERE WAS*/
*   /* A PROGRAM CHECK, THE PC FLIH WILL INVOKE TRACE TO TRACE THE   */
*   /* PROGRAM CHECK. WHEN TRACE SAVES SOME OF THE PC FLIH'S         */
*   /* REGISTERS, IT WILL OVERLAY THE REGISTERS OF THE ORIGINAL      */
*   /* CALLER OF TRACE. THEREFORE, THIS PROCESSING IS PERFORMED ONLY */
*   /* FOR A MACHINE CHECK.                                  @ZA16400*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0130
*   IF SDWAMCHK='1'B                /* MACHINE CHECK         @ZA16400*/
*       &SDWARPIV='0'B              /* REGISTERS AND PSW ARE       0130
*                                      AVAILABLE             @ZA16400*/
*       &ADDR(IEAVTRCE)<SDWANXT1&SDWANXT1<=ADDR(TRCEEND)/* THE ERROR
*                                      WAS WITHIN TRACE      @ZA16400*/
*       &(SDWANXT1<=ADDR(TRCOM1)×ADDR(TRCOM2)<SDWANXT1)/* THE ERROR
*                                      WAS OUTSIDE THE PORTION OF  0130
*                                      TRACE WHICH SAVES REGISTERS 0130
*                                                            @ZA16400*/
*     THEN                                                         0130
@RF00123 TM    SDWAMCHK(SDWAPTR),B'10000000'                       0130
         BNO   @RF00130                                            0130
         TM    SDWARPIV(SDWAPTR),B'00000100'                       0130
         BNZ   @RF00130                                            0130
         L     @12,@CV01744                                        0130
         L     @10,SDWANXT1(,SDWAPTR)                              0130
         CR    @12,@10                                             0130
         BNL   @RF00130                                            0130
         L     @12,@CV01745                                        0130
         CR    @10,@12                                             0130
         BH    @RF00130                                            0130
         L     @12,@CV01746                                        0130
         CR    @10,@12                                             0130
         BNH   @RT00130                                            0130
         L     @12,@CV01747                                        0130
         CR    @12,@10                                             0130
         BNL   @RF00130                                            0130
@RT00130 DS    0H                                                  0131
*     DO;                           /*                       @ZA16400*/
*       CVTTRACE=CCVTTOFF;          /* TURN OFF TRACE. TRACE IS    0132
*                                      INVOKED BY BRANCHING TO     0132
*                                      CVTTRACE. THIS STATEMENT TURNS
*                                      CVTTRACE INTO A NOPR. THE NEXT
*                                      HALFWORD IN THE CVT IS AN   0132
*                                      INSTRUCTION WHICH WILL RETURN
*                                      CONTROL TO THE CALLER OF    0132
*                                      TRACE.                @ZA16400*/
         L     @12,CVTPTR                                          0132
         MVC   CVTTRACE(2,@12),@CB01729                            0132
*       SDWASR11=REG11;             /* RESTORE THE REGISTERS SAVED BY
*                                      TRACE                 @ZA16400*/
         L     @12,LCCAPTR                                         0133
         L     @12,LCCACPUS(,@12)                                  0133
         L     @12,WSACCWSA(,@12)                                  0133
         L     @10,REG11(,@12)                                     0133
         ST    @10,SDWASR11(,SDWAPTR)                              0133
*       SDWASR12=REG12;             /*                       @ZA16400*/
         L     @10,REG12(,@12)                                     0134
         ST    @10,SDWASR12(,SDWAPTR)                              0134
*       SDWASR13=REG13;             /*                       @ZA16400*/
         L     @10,REG13(,@12)                                     0135
         ST    @10,SDWASR13(,SDWAPTR)                              0135
*       SDWASR14=REG14;             /*                       @ZA16400*/
         L     @10,REG14(,@12)                                     0136
         ST    @10,SDWASR14(,SDWAPTR)                              0136
*       SDWASR15=REG15;             /*                       @ZA16400*/
         L     @12,REG15(,@12)                                     0137
         ST    @12,SDWASR15(,SDWAPTR)                              0137
*       SDWASR08=PSAGPREG(1);       /*                       @ZA16400*/
         L     @12,PSAGPREG                                        0138
         ST    @12,SDWASR08(,SDWAPTR)                              0138
*       IF TOTAL>=USED+LENGTH(RECTOFF)/* SPACE IN RECORDING AREA TO
*                                      INDICATE TRACE WAS TURNED OFF
*                                      ?                     @ZA16400*/
*         THEN                                                     0139
         SLR   @12,@12                                             0139
         IC    @12,USED(,SDWAPTR)                                  0139
         LA    @10,8                                               0139
         ALR   @10,@12                                             0139
         LH    @08,TOTAL(,SDWAPTR)                                 0139
         N     @08,@CF01802                                        0139
         CR    @10,@08                                             0139
         BH    @RF00139                                            0139
*         DO;                       /*                       @ZA16400*/
*           SDWAVRA(USED+1:USED+LENGTH(RECTOFF))=RECTOFF;/* YES,   0141
*                                      INDICATE TRACE WAS TURNED OFF
*                                                            @ZA16400*/
         ALR   @12,SDWAPTR                                         0141
         MVC   SDWAVRA(8,@12),@CC01725                             0141
*           USED=USED+LENGTH(RECTOFF);/* UPDATE LENGTH FIELD @ZA16400*/
         STC   @10,USED(,SDWAPTR)                                  0142
*         END;                      /*                       @ZA16400*/
*       SDWAMODN=TRNAME;            /* SET UP TRACE NAME IN SDWA   0144
*                                                            @ZA16400*/
@RF00139 MVC   SDWAMODN(8,SDWAPTR),@CC01727                        0144
*       SDWACSCT=TRNAME;            /*                       @ZA16400*/
         MVC   SDWACSCT(8,SDWAPTR),@CC01727                        0145
*       SDWARTYA=REG11;             /* SET RETRY ADDRESS AS CALLER OF
*                                      TRACE                 @ZA16400*/
         L     @12,LCCAPTR                                         0146
         L     @12,LCCACPUS(,@12)                                  0146
         L     @12,WSACCWSA(,@12)                                  0146
         L     @12,REG11(,@12)                                     0146
         ST    @12,SDWARTYA(,SDWAPTR)                              0146
*     END;                          /*                       @ZA16400*/
*   ELSE                                                           0148
*     DO;                           /*                       @ZA16400*/
         B     @RC00130                                            0148
@RF00130 DS    0H                                                  0149
*       IF PSACSTK=PSARSTK          /* RESTART FLIH IN CONTROL ?     */
*         THEN                                                     0149
         CLC   PSACSTK(4),PSARSTK                                  0149
         BNE   @RF00149                                            0149
*         DO;                                                      0150
*           SDWAMODN=RSTNAME;       /* SET UP RESTART NAME IN SDWA   */
         MVC   SDWAMODN(8,SDWAPTR),@CC01703                        0151
*           SDWACSCT=RSTNAME;                                      0152
         MVC   SDWACSCT(8,SDWAPTR),@CC01703                        0152
*           SDWARTYA=ADDR(IEAVERER);/* INDICATE RETRY AT RESTART FLIH*/
         L     @12,@CV01730                                        0153
         ST    @12,SDWARTYA(,SDWAPTR)                              0153
*         END;                      /* RECOVERY ROUTINE              */
*       ELSE                                                       0155
*         DO;                                                      0155
         B     @RC00149                                            0155
@RF00149 DS    0H                                                  0156
*           IF PSACSTK=PSAPSTK      /* PROGRAM FLIH IN CONTROL       */
*             THEN                                                 0156
         CLC   PSACSTK(4),PSAPSTK                                  0156
         BNE   @RF00156                                            0156
*             DO;                                                  0157
*               SDWAMODN=PGCNAME;   /* SET UP PROGRAM FLIH NAME IN 0158
*                                      SDWA                          */
         MVC   SDWAMODN(8,SDWAPTR),@CC01701                        0158
*               SDWACSCT=PGCNAME;                                  0159
         MVC   SDWACSCT(8,SDWAPTR),@CC01701                        0159
*               SDWARTYA=ADDR(IEAVEPCR);/* INDICATE RETRY AT PROGRAM */
         L     @12,@CV01731                                        0160
         ST    @12,SDWARTYA(,SDWAPTR)                              0160
*             END;                  /* FLIH RECOVERY ROUTINE         */
*           ELSE                                                   0162
*             DO;                                                  0162
         B     @RC00156                                            0162
@RF00156 DS    0H                                                  0163
*               IF PSACSTK=PSAESTK1 /* EXTERNAL FLIH NON-RECURSIVE   */
*                 THEN                                             0163
         CLC   PSACSTK(4),PSAESTK1                                 0163
         BNE   @RF00163                                            0163
*                 DO;                                              0164
*                   SDWAMODN=EXTNAME;/* SET UP EXT FLIH NAME IN SDWA */
         MVC   SDWAMODN(8,SDWAPTR),@CC01705                        0165
*                   SDWACSCT=EXTNAME;                              0166
         MVC   SDWACSCT(8,SDWAPTR),@CC01705                        0166
*                   SDWARTYA=ADDR(IEAVEE1R);/* INDICATE RETRY AT EXT
*                                      FLIH RECOVERY ROUTINE 1       */
         L     @12,@CV01732                                        0167
         ST    @12,SDWARTYA(,SDWAPTR)                              0167
*                 END;                                             0168
*               ELSE                                               0169
*                 DO;                                              0169
         B     @RC00163                                            0169
@RF00163 DS    0H                                                  0170
*                   IF PSACSTK=PSAESTK2/* EXT FLIH FIRST RECURSION ? */
*                     THEN                                         0170
         CLC   PSACSTK(4),PSAESTK2                                 0170
         BNE   @RF00170                                            0170
*                     DO;                                          0171
*                       SDWAMODN=EXTNAME;/* SET UP EXT FLIH NAME IN
*                                      SDWA                          */
         MVC   SDWAMODN(8,SDWAPTR),@CC01705                        0172
*                       SDWACSCT=EXTNAME;                          0173
         MVC   SDWACSCT(8,SDWAPTR),@CC01705                        0173
*                       SDWARTYA=ADDR(IEAVEE2R);/* INDICATE RETRY AT
*                                      EXT FLIH RECOVERY ROUTINE2    */
         L     @12,@CV01733                                        0174
         ST    @12,SDWARTYA(,SDWAPTR)                              0174
*                     END;                                         0175
*                   ELSE                                           0176
*                     DO;                                          0176
         B     @RC00170                                            0176
@RF00170 DS    0H                                                  0177
*                       IF PSACSTK=PSAESTK3/* EXT FLIH SECOND      0177
*                                      RECURSION?                    */
*                         THEN                                     0177
         CLC   PSACSTK(4),PSAESTK3                                 0177
         BNE   @RF00177                                            0177
*                         DO;                                      0178
*                           SDWAMODN=EXTNAME;/* SET UP EXT FLIH NAME
*                                      IN SDWA                       */
         MVC   SDWAMODN(8,SDWAPTR),@CC01705                        0179
*                           SDWACSCT=EXTNAME;                      0180
         MVC   SDWACSCT(8,SDWAPTR),@CC01705                        0180
*                           SDWARTYA=ADDR(IEAVEE3R);/* INDICATE RETRY
*                                      AT EXT FLIH RECOVERY ROUTINE3 */
         L     @12,@CV01734                                        0181
         ST    @12,SDWARTYA(,SDWAPTR)                              0181
*                         END;                                     0182
*                       ELSE                                       0183
*                         DO;       /*                       @ZA14298*/
         B     @RC00177                                            0183
@RF00177 DS    0H                                                  0184
*                           IF PSACSTK=PSAMSTK/* MCH STACK CURRENT 0184
*                                                            @ZA14298*/
*                             THEN                                 0184
         CLC   PSACSTK(4),PSAMSTK                                  0184
         BNE   @RF00184                                            0184
*                             DO;   /*                       @ZA14298*/
*                               SDWAMODN=MCHNAME;/* SET MCH NAME   0186
*                                                            @ZA14298*/
         MVC   SDWAMODN(8,SDWAPTR),@CC01723                        0186
*                               SDWACSCT=MCHNAME;/*          @ZA14298*/
         MVC   SDWACSCT(8,SDWAPTR),@CC01723                        0187
*                               SDWARTYA=ADDR(IGFPMSUP);/* RETRY ADDR
*                                                            @ZA14298*/
         L     @12,@CV01743                                        0188
         ST    @12,SDWARTYA(,SDWAPTR)                              0188
*                             END;  /*                       @ZA14298*/
*                           ELSE                                   0190
*                             DO;   /* PSACSTK MUST EQUAL PSASSTK    */
         B     @RC00184                                            0190
@RF00184 DS    0H                                                  0191
*                               IF PSAIO=BITON/* I/O FLIH IN CONTROL */
*                                 THEN                             0191
         TM    PSAIO,B'10000000'                                   0191
         BNO   @RF00191                                            0191
*                                 DO;                              0192
*                                   SDWAMODN=IONAME;/* SET UP I/O  0193
*                                      FLIH NAME                     */
         MVC   SDWAMODN(8,SDWAPTR),@CC01707                        0193
*                                   SDWACSCT=IONAME;/* IN SDWA       */
         MVC   SDWACSCT(8,SDWAPTR),@CC01707                        0194
*                                   SDWARTYA=ADDR(IEAVEIOR);/*     0195
*                                      INDICATE RETRY AT I/O FLIH  0195
*                                      RECOVERY ROUTINE              */
         L     @12,@CV01735                                        0195
         ST    @12,SDWARTYA(,SDWAPTR)                              0195
*                                 END;                             0196
*                               ELSE                               0197
*                                 DO;                              0197
         B     @RC00191                                            0197
@RF00191 DS    0H                                                  0198
*                                   IF PSASVC=BITON/* SVC FLIH IN  0198
*                                      CONTROL                       */
*                                     THEN                         0198
         TM    PSASVC,B'01000000'                                  0198
         BNO   @RF00198                                            0198
*                                    DO;                           0199
*                                     SDWAMODN=SVCNAME;/* SET UP SVC
*                                      FLIH                          */
         MVC   SDWAMODN(8,SDWAPTR),@CC01709                        0200
*                                     SDWACSCT=SVCNAME;/* NAME IN  0201
*                                      SDWA                          */
         MVC   SDWACSCT(8,SDWAPTR),@CC01709                        0201
*                                     SDWARTYA=ADDR(IEAVESVR);/*   0202
*                                      INDICATE RETRY AT SVC FLIH  0202
*                                      RECOVERY RTN                  */
*                                                                  0202
         L     @12,@CV01736                                        0202
         ST    @12,SDWARTYA(,SDWAPTR)                              0202
*                                     /*******************************/
*                                     /*                             */
*                                     /* SAVE COMPLETION CODE AND    */
*                                     /* REASON CODE IN CASE SU 7 IS */
*                                     /* INSTALLED AND THE ABEND WAS */
*                                     /* ISSUED BY A TYPE 6 SVC. IF  */
*                                     /* THESE CONDITIONS ARE MET,   */
*                                     /* IEAVESVR WILL RE-ISSUE THE  */
*                                     /* ABEND. SPECIAL PROCESSING IS*/
*                                     /* REQUIRED FOR TYPE 6 SVC'S   */
*                                     /* BECAUSE THEY RUN AS A PART  */
*                                     /* OF THE SVC FLIH. THIS FIX IS*/
*                                     /* COMPATABLE WITH MVS SYSTEMS */
*                                     /* WHICH DO NOT INCLUDE SU 7.  */
*                                     /*                     @ZA15739*/
*                                     /*                             */
*                                     /*******************************/
*                                                                  0203
*                                     SDWASR01=SDWAABCC;/*   @ZA15739*/
         L     @12,SDWAABCC(,SDWAPTR)                              0203
         ST    @12,SDWASR01(,SDWAPTR)                              0203
*                                     SDWASR00=SDWAGR15;/* SAVE THE
*                                      REASON CODE IN REG 0, BECAUSE
*                                      REG 15 IS INITIALIZED TO THE
*                                      MODULE'S ENTRY POINT BEFORE 0204
*                                      THE RETRY ROUTINE IS ENTERED
*                                                            @ZA15739*/
         L     @12,SDWAGR15(,SDWAPTR)                              0204
         ST    @12,SDWASR00(,SDWAPTR)                              0204
*                                    END;                          0205
*                                   ELSE                           0206
*                                    DO;/* DISPATCHER WAS IN CONTROL */
         B     @RC00198                                            0206
@RF00198 DS    0H                                                  0207
*DISPEXIT:                                                         0207
*                                     ;/* DISPATCHER IN CONTROL- PASS
*                                      CNTRL TO RECOVERY RTN         */
DISPEXIT DS    0H                                                  0208
*                                     SDWAMODN=DSPNAME;/* SET UP DISP
*                                      NAME                          */
         MVC   SDWAMODN(8,SDWAPTR),@CC01711                        0208
*                                     SDWACSCT=DSPNAME;/* IN SDWA    */
         MVC   SDWACSCT(8,SDWAPTR),@CC01711                        0209
*                                     SDWARTYA=ADDR(IEA0DS);/*     0210
*                                      DEFAULT RETRY@                */
         L     @12,@CV01737                                        0210
         ST    @12,SDWARTYA(,SDWAPTR)                              0210
*                                     RESPECIFY                    0211
*                                      (WORKPARM,                  0211
*                                       DISPENTY) RSTD;            0211
*                                     WORKPARM=WORKPTR;/* SET UP FRR
*                                      WORK AREA POINTER             */
         LR    WORKPARM,WORKPTR                                    0212
*                                     DISPENTY=ADDR(IEAVEDSR);/* SET
*                                      UP TO GO TO DISPATCHER      0213
*                                      RECOVERY ROUTINE              */
         L     DISPENTY,@CV01738                                   0213
*                                     GEN( BR DISPENTY);/* GO TO DISP
*                                      REC                           */
          BR DISPENTY
*                                    END;                          0215
*                                 END;                             0216
*                             END;                                 0217
*                         END;                                     0218
*                     END;                                         0219
*                 END;                                             0220
*             END;                                                 0221
*         END;                                                     0222
*     END;                          /*                       @ZA16400*/
*   RESPECIFY                                                      0224
*    (WORKPARM,                                                    0224
*     DISPENTY) UNRSTD;                                            0224
*                                                                  0225
*/*                                                                  */
*/*    RETURN ENTRY POINT FOR RECOVERY ROUTINES                      */
*/*    ALSO EXIT CODE FOR SUPERVISOR CONTROL FRR                     */
*/*                                                                  */
*                                                                  0225
*IEAVERTN:                                                         0225
*   ENTRY;                          /* RETURN POINT FROM DISP      0225
*                                      RECOVERY                      */
@EP00225 DS    0H                                                  0225
@EC00225 DS    0H                                                  0226
*/*   ONLY REGISTER 1 -SDWAPTR- PRESERVED AT THIS ENTRY POINT        */
*                                                                  0226
*   IF SCRAMTRM=BITON               /* MEMTERM BEEN INDICATED ?      */
*     THEN                                                         0226
         L     @12,SDWAPARM(,SDWAPTR)                              0226
         TM    SCRAMTRM(@12),B'10000000'                           0226
         BNO   @RF00226                                            0226
*     DO;                           /* YES, CHECK IF LOCAL LOCK HELD */
*       GENERATE REFS(PSAHLHI,PSALITA,PSAMPSW);                    0228
        SETLOCK TEST,TYPE=LOCAL,BRANCH=(NOTHELD,SPRCLNUP),             *
               RELATED=(LOCAL-LOCK,IEAVESPR)
*       ASCBTYP1=BITOFF;            /* LOCK HELD, TURN OFF TYPE1   0229
*                                      SWITCH                        */
         L     @12,ASCBPTR                                         0229
         NI    ASCBTYP1(@12),B'11111101'                           0229
*     END;                                                         0230
*SPRCLNUP:                                                         0231
*   ;                               /* IF RETRYING AT IEA0DS, MUST 0231
*                                      FREE ALL LOCKS                */
@RF00226 DS    0H                                                  0231
SPRCLNUP DS    0H                                                  0232
*   IF SDWARTYA=ADDR(IEA0DS)        /* ARE WE RETRYING AT IEA0DS     */
*     THEN                                                         0232
         L     @12,@CV01737                                        0232
         C     @12,SDWARTYA(,SDWAPTR)                              0232
         BNE   @RF00232                                            0232
*     DO;                           /* THEN MUST NOT HOLD ANY LOCKS  */
*       GENERATE REFS(PSAHLHI,PSALITA,PSAMPSW);                    0234
*                                          /* RELEASE ANY LOCKS HELD */
        SETLOCK RELEASE,DISABLED,TYPE=ALL,                             *
               RELATED=(ANY-LOCKS-HELD,IEAVEDS0)
*     END;                                                         0235
*   WORKPTR=SCRAWORK;               /* RESTORE PTR TO WORK AREA      */
@RF00232 L     @12,SDWAPARM(,SDWAPTR)                              0236
         L     WORKPTR,SCRAWORK(,@12)                              0236
*   CALL MEMTERM;                   /* MEMTERM CURRENT MEMORY IF   0237
*                                      MEMTERM INDICATED OR IF     0237
*                                      CURRENT MEMORY HAS BAD ASCB   */
         BAL   @14,MEMTERM                                         0237
*   IF SCRAABTM=BITON               /* IF ABTERM SPECIFIED           */
*     THEN                                                         0238
         L     @12,SDWAPARM(,SDWAPTR)                              0238
         TM    SCRAABTM(@12),B'01000000'                           0238
         BNO   @RF00238                                            0238
*     CALL ABTERM;                  /* ABTERM CURRENT TCB            */
         BAL   @14,ABTERM                                          0239
*   IF TOTAL>=USED+LENGTH(SCRA)     /* ROOM IN RECORDING AREA        */
*     THEN                                                         0240
@RF00238 SLR   @12,@12                                             0240
         IC    @12,USED(,SDWAPTR)                                  0240
         LA    @10,24                                              0240
         ALR   @10,@12                                             0240
         LH    @08,TOTAL(,SDWAPTR)                                 0240
         N     @08,@CF01802                                        0240
         CR    @10,@08                                             0240
         BH    @RF00240                                            0240
*     DO;                           /* TO PUT SCRA ?                 */
*       SDWAVRA(USED+1:USED+LENGTH(SCRA))=SCRA;/* RECORD SCRA        */
         ALR   @12,SDWAPTR                                         0242
         L     @08,SDWAPARM(,SDWAPTR)                              0242
         MVC   SDWAVRA(24,@12),SCRA(@08)                           0242
*       USED=USED+LENGTH(SCRA);     /* UPDATE LENGTH FIELD           */
         STC   @10,USED(,SDWAPTR)                                  0243
*     END;                                                         0244
*   DO;                             /* SETRP RC(4)RETADDR(RTRYADDR)RE
*                                      TREGS(YES)DUMP(YES)RECORD(YES)*/
@RF00240 DS    0H                                                  0246
*     RESPECIFY                                                    0246
*      (GPR00P,                                                    0246
*       GPR01P,                                                    0246
*       GPR14P,                                                    0246
*       GPR15P) RSTD;                                              0246
*     GPR01P->SDWARCDE=4;           /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0247
*     GPR01P->SDWARTYA=ADDR(RTRYADDR);/* SAVE RETRY ADDRESS          */
         L     @12,SDWARTYA(,SDWAPTR)                              0248
         ST    @12,SDWARTYA(,GPR01P)                               0248
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0249
*     GPR01P->SDWAREQ='1'B;         /* TURN ON DUMP INDICATOR        */
         OI    SDWAREQ(GPR01P),B'10000000'                         0250
*     GPR01P->SDWAUPRG='1'B;        /* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0251
*     RESPECIFY                                                    0252
*      (GPR00P,                                                    0252
*       GPR01P,                                                    0252
*       GPR14P,                                                    0252
*       GPR15P) UNRSTD;                                            0252
*   END;                                                           0253
*   RESPECIFY                                                      0254
*     RTNRG RSTD;                                                  0254
*   RTNRG=SCRARTNP;                 /* PICK UP RETURN ADDRESS        */
         L     @12,SDWAPARM(,SDWAPTR)                              0255
         L     RTNRG,SCRARTNP(,@12)                                0255
*   SCRA=''B;                       /* CLEAR SUP COMMUNICATIONS AREA */
         XC    SCRA(24,@12),SCRA(@12)                              0256
*   GENERATE( PTLB);                /* PURGE TABLES                  */
          PTLB
*   RETURN;                         /* RETURN TO RTM                 */
@EL00001 DS    0H                                                  0258
@EF00001 DS    0H                                                  0258
@ER00001 BR    @14                                                 0258
*   RESPECIFY                                                      0259
*     RTNRG UNRSTD;                                                0259
*                                                                  0260
*/*                                                                  */
*/*              MEMTERM ERROR ROUTINE                               */
*/*                                                                  */
*                                                                  0260
*MEMTERM:                                                          0260
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0260
MEMTERM  DS    0H                                                  0261
*   RESPECIFY                                                      0261
*    (ADDRASCB,                                                    0261
*     RTNCDERG,                                                    0261
*     WKREG2,                                                      0261
*     RTNRG) RSTD;                                                 0261
*   WKREG2=RTNRG;                   /* SAVE REGISTER 14 ACROSS     0262
*                                      MEMTERM                       */
         LR    WKREG2,RTNRG                                        0262
*   ADDRASCB=PSAAOLD;               /* SET UP ADDRESS OF CURRENT ASCB*/
         L     ADDRASCB,PSAAOLD                                    0263
*/*   REGISTERS 2-7 DESTROYED ACROSS CALL TO IEAVECAS                */
*                                                                  0264
*   CALL IEAVECAS;                  /* CALL ASCB VERIFICATION ROUTINE*/
         L     @15,@CV01739                                        0264
         BALR  @14,@15                                             0264
*   IF RTNCDERG=RTNCDE0&SCRAMTRM=BITOFF THEN                       0265
         LTR   RTNCDERG,RTNCDERG                                   0265
         BNZ   @RF00265                                            0265
         L     @12,SDWAPARM(,SDWAPTR)                              0265
         TM    SCRAMTRM(@12),B'10000000'                           0265
         BNZ   @RF00265                                            0265
*     DO;                                                          0266
*       RTNRG=WKREG2;               /* RESTORE REGISTER 14           */
         LR    RTNRG,WKREG2                                        0267
*       RETURN;                                                    0268
@EL00002 DS    0H                                                  0268
@EF00002 DS    0H                                                  0268
@ER00002 BR    @14                                                 0268
*     END;                                                         0269
*   IF RTNCDERG^=RTNCDE8            /* ASCB IS AN ASCB ?             */
*     THEN                                                         0270
@RF00265 C     RTNCDERG,@CF00050                                   0270
         BE    @RF00270                                            0270
*     DO;                           /* YES, MEMTERM CURRENT MEMORY   */
*       RESPECIFY                                                  0272
*        (SAVESDWA,                                                0272
*         SAVREG) RSTD;                                            0272
*       SAVESDWA=SDWAPTR;           /* SAVE SDWA ADDR ACROSS CALLRTM */
         LR    SAVESDWA,SDWAPTR                                    0273
*       SAVREG=WORKPTR;             /* SET UP SAVEAREA ADDRESS       */
         LR    SAVREG,WORKPTR                                      0274
*       PSASPR='1'B;                /* SET THE SUPER FRR FLAG IN THE
*                                      SUPER BITS SO THE LOCK MANAGER
*                                      DOES NOT ENABLE IN THE CALLRTM
*                                      WHEN THE DISPATCHER LOCK IS 0275
*                                      RELEASED.             @YA02995*/
         OI    PSASPR,B'00010000'                                  0275
*       GENERATE REFS(CVTBTERM,CVTMAP);                            0276
       CALLRTM TYPE=MEMTERM,COMPCOD=X'07C'  MEMTERM CURRENT MEMORY
*       SDWAPTR=SAVESDWA;           /* RESTORE SDWA PTR              */
         LR    SDWAPTR,SAVESDWA                                    0277
*       PSASPR='0'B;                /* TURN OFF THE SUPER BIT      0278
*                                                            @YA02995*/
         NI    PSASPR,B'11101111'                                  0278
*       RESPECIFY                                                  0279
*        (SAVESDWA,                                                0279
*         SAVREG) UNRSTD;                                          0279
*       IF PSATOLD^=0 THEN          /* IF NOT AN SRB, I.E., THE CPU
*                                      IS RUNNING IN THIS ADDR SPACE
*                                                            @ZA02995*/
         L     @12,PSATOLD                                         0280
         LTR   @12,@12                                             0280
         BZ    @RF00280                                            0280
*         DO;                       /*                       @ZA02995*/
*           RFY                                                    0282
*            (OLDCPUS,                                             0282
*             NEWCPUS) RSTD;                                       0282
*REDO:                                                             0283
*           OLDCPUS=ASCBCPUS;       /* GET CURRENT CPUS COUNT      0283
*                                                            @ZA02995*/
REDO     L     @10,ASCBPTR                                         0283
         L     OLDCPUS,ASCBCPUS(,@10)                              0283
*           NEWCPUS=OLDCPUS-1;      /* DECR THIS CPU FROM COUNT    0284
*                                                            @ZA02995*/
         LR    NEWCPUS,OLDCPUS                                     0284
         BCTR  NEWCPUS,0                                           0284
*           CS(OLDCPUS,NEWCPUS,ASCBCPUS);/* UPDATE COUNT     @ZA02995*/
         CS    OLDCPUS,@12,ASCBCPUS(@10)                           0285
*           BC(7,REDO);             /* IF FAILED, REDO THE CALC    0286
*                                                            @ZA02995*/
         BC    7,REDO                                              0286
*           RFY                                                    0287
*            (OLDCPUS,                                             0287
*             NEWCPUS) UNRSTD;                                     0287
*         END;                      /*                       @ZA02995*/
*     END;                                                         0289
@RF00280 DS    0H                                                  0290
*   PSAANEW=0;                      /* MAKE DISP START AT BEGINNING
*                                      OF QUEUE                      */
@RF00270 SLR   @12,@12                                             0290
         ST    @12,PSAANEW                                         0290
*   PSATOLD=0;                      /* MAKE CURRENT TCB POINTER 0    */
         ST    @12,PSATOLD                                         0291
*   RESPECIFY                                                      0292
*     WKREG RSTD;                                                  0292
*   WKREG=ADDR(MASCB->ASCBSTOR);    /* MASTER'S STOR POINTER @YM02629*/
         L     WKREG,MASCB                                         0293
         LA    WKREG,ASCBSTOR(,WKREG)                              0293
*   GENERATE REFS(WKREG,CR1);                                      0294
*                             /* LOAD NEW CONTROL REGISTER 1 */
       LCTL  CR1,CR1,0(WKREG)
*   SCRAMTRM=BITOFF;                /* TURN OFF MEMTERM INDICATOR    */
*   SCRAABTM=BITOFF;                /* TURN OFF ABTERM INDICATOR     */
         L     @12,SDWAPARM(,SDWAPTR)                              0296
         NI    SCRAMTRM(@12),B'00111111'                           0296
*   RESPECIFY                                                      0297
*    (ADDRASCB,                                                    0297
*     RTNCDERG,                                                    0297
*     WKREG) UNRSTD;                                               0297
*   RTNRG=WKREG2;                   /* RESTORE REGISTER 14           */
         LR    RTNRG,WKREG2                                        0298
*   RESPECIFY                                                      0299
*    (WKREG2) UNRSTD;                                              0299
*   END MEMTERM;                                                   0300
         B     @EL00002                                            0300
*   RESPECIFY                                                      0301
*     RTNRG UNRSTD;                                                0301
*                                                                  0302
*/*                                                                  */
*/*                           ABTERM ERROR ROUTINE                   */
*/*                                                                  */
*                                                                  0302
*ABTERM:                                                           0302
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0302
ABTERM   DS    0H                                                  0303
*   RESPECIFY                                                      0303
*    (ADDRTCB,                                                     0303
*     RTNCDERG,                                                    0303
*     RTNRG,                                                       0303
*     WKREG2) RSTD;                                                0303
*   WKREG2=RTNRG;                   /* SAVE REGISTER 14 ACROSS ABTERM*/
         LR    WKREG2,RTNRG                                        0304
*   RESPECIFY                                                      0305
*     RTNRG UNRSTD;                                                0305
*   ADDRTCB=PSATOLD;                /* GET ADDRESS OF CURRENT TCB    */
         L     ADDRTCB,PSATOLD                                     0306
*/*   REGISTERS 2-7 DESTROYED ACROSS CALL TO IEAVETCB                */
*                                                                  0307
*   CALL IEAVETCB;                  /* CALL TCB VERIFICATION ROUTINE */
         L     @15,@CV01742                                        0307
         BALR  @14,@15                                             0307
*   IF RTNCDERG^=8                  /* TCB IS A TCB ?                */
*     THEN                                                         0308
         C     RTNCDERG,@CF00050                                   0308
         BE    @RF00308                                            0308
*     DO;                           /* YES, ABTERM CURRENT TCB       */
*       RESPECIFY                                                  0310
*        (SAVESDWA,                                                0310
*         SAVREG) RSTD;                                            0310
*       SAVESDWA=SDWAPTR;           /* SAVE SDWA ADDR ACROSS CALLRTM */
         LR    SAVESDWA,SDWAPTR                                    0311
*       SAVREG=WORKPTR;             /* SET UP SAVE AREA ADDRESS      */
         LR    SAVREG,WORKPTR                                      0312
*       GENERATE;                                                  0313
       CALLRTM TYPE=ABTERM,COMPCOD=X'07C' ABTERM CURRENT TCB
*       SDWAPTR=SAVESDWA;           /* RESTORE SDWA POINTER          */
         LR    SDWAPTR,SAVESDWA                                    0314
*       RESPECIFY                                                  0315
*        (SAVESDWA,                                                0315
*         SAVREG) UNRSTD;                                          0315
*     END;                                                         0316
*   ELSE                            /* IF BAD CURRENT TCB THEN       */
*     PSATOLD=0;                    /* SET CURRENT TCB POINTER TO 0  */
         B     @RC00308                                            0317
@RF00308 SLR   @14,@14                                             0317
         ST    @14,PSATOLD                                         0317
*   RESPECIFY                                                      0318
*    (ADDRTCB,                                                     0318
*     RTNCDERG) UNRSTD;                                            0318
@RC00308 DS    0H                                                  0319
*   SCRAABTM=BITOFF;                /* TURN OFF ABTERM INDICATOR     */
         L     @12,SDWAPARM(,SDWAPTR)                              0319
         NI    SCRAABTM(@12),B'10111111'                           0319
*   RESPECIFY                                                      0320
*     RTNRG RSTD;                                                  0320
*   RTNRG=WKREG2;                   /* RESTORE REGISTER 14           */
         LR    RTNRG,WKREG2                                        0321
*   RESPECIFY                                                      0322
*     WKREG2 UNRSTD;                                               0322
*   END ABTERM;                                                    0323
@EL00003 DS    0H                                                  0323
@EF00003 DS    0H                                                  0323
@ER00003 BR    @14                                                 0323
*   RESPECIFY                                                      0324
*     RTNRG UNRSTD;                                                0324
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0325
*     GPR01P PTR(31) REG(1),                                       0325
*     GPR14P PTR(31) REG(14),                                      0325
*     GPR15P PTR(31) REG(15);                                      0325
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0326
*     I031F FIXED(31) BASED,                                       0326
*     I031P PTR(31) BASED,                                         0326
*     I015F FIXED(15) BASED,                                       0326
*     I015P PTR(15) BASED,                                         0326
*     I008P PTR(8) BASED,                                          0326
*     I001C CHAR(1) BASED;                                         0326
*   END IEAVESPR                                                   0327
*                                                                  0327
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASCRA )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*                                                                  0327
*       ;                                                          0327
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IEAVESPR CSECT
         DS    0F
@CF00050 DC    F'8'
@CF00326 DC    F'32'
@CF01802 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IEAVESPR CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA01767 DC    A(IEAVERTN)
@CV01730 DC    V(IEAVERER)
@CV01731 DC    V(IEAVEPCR)
@CV01732 DC    V(IEAVEE1R)
@CV01733 DC    V(IEAVEE2R)
@CV01734 DC    V(IEAVEE3R)
@CV01735 DC    V(IEAVEIOR)
@CV01736 DC    V(IEAVESVR)
@CV01737 DC    V(IEA0DS)
@CV01738 DC    V(IEAVEDSR)
@CV01739 DC    V(IEAVECAS)
@CV01740 DC    V(IEAMASCB)
@CV01741 DC    V(IGFPTERM)
@CV01742 DC    V(IEAVETCB)
@CV01743 DC    V(IGFPMSUP)
@CV01744 DC    V(IEAVTRCE)
@CV01745 DC    V(TRCEEND)
@CV01746 DC    V(TRCOM1)
@CV01747 DC    V(TRCOM2)
         DS    0D
MASCB    DC    VL4(IEAMASCB)
@CC01699 DC    C'IEAVESPR'
@CC01701 DC    C'IEAVEPC '
@CC01703 DC    C'IEAVERES'
@CC01705 DC    C'IEAVEEXT'
@CC01707 DC    C'IEAVEIO '
@CC01709 DC    C'IEAVESVC'
@CC01711 DC    C'IEAODS  '
@CC01723 DC    C'IGFPMSUP'
@CC01725 DC    C'TRACEOFF'
@CC01727 DC    C'IEAVTRCE'
@CC01721 DC    C'SCRA'
@CB01716 DC    X'0000001C'
@CB01729 DC    X'0700'
IEAVESPR CSECT
WTOMSG WTO   'IEA967W UNSUCCESSFUL RECOVERY ATTEMPT BY SUPERVISOR CONTR*
               0L',MCSFLAG=(BRDCST),DESC=1,MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVESPR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SDWAPTR  EQU   @01
WORKPARM EQU   @00
ADDRTCB  EQU   @00
ADDRASCB EQU   @00
PARMRG   EQU   @01
CR1      EQU   @01
WKREG2   EQU   @08
DISPENTY EQU   @10
WKREG    EQU   @10
WORKPTR  EQU   @11
SAVESDWA EQU   @12
NEWCPUS  EQU   @12
SAVREG   EQU   @13
OLDCPUS  EQU   @13
RTNRG    EQU   @14
RTNCDERG EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
ENTYPT   EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAANEW  EQU   PSA+544
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSAIO    EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASPR   EQU   PSASUP3
PSASUP4  EQU   PSASUPER+3
PSAGPREG EQU   PSA+556
PSAMPSW  EQU   PSA+592
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CVTPTR   EQU   16
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWAGR15 EQU   SDWAGRSV+60
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR00 EQU   SDWASRSV
SDWASR01 EQU   SDWASRSV+4
SDWASR08 EQU   SDWASRSV+32
SDWASR11 EQU   SDWASRSV+44
SDWASR12 EQU   SDWASRSV+48
SDWASR13 EQU   SDWASRSV+52
SDWASR14 EQU   SDWASRSV+56
SDWASR15 EQU   SDWASRSV+60
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAMCHK EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWARPIV EQU   SDWAERRD
SDWAFMID EQU   SDWA+236
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWAVRAL EQU   SDWARA
SDWADPVA EQU   SDWARA+2
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
ASCB     EQU   0
ASCBCPUS EQU   ASCB+32
ASCBSTOR EQU   ASCB+44
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBTYP1 EQU   ASCBFLG1
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
CVTMAP   EQU   0
CVTBTERM EQU   CVTMAP+52
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SCRA     EQU   0
SCRASCRA EQU   SCRA
SCRARTNP EQU   SCRA+4
SCRACSTK EQU   SCRA+8
SCRAFLGS EQU   SCRA+12
SCRARECF EQU   SCRAFLGS
SCRAREC1 EQU   SCRARECF
SCRAREC2 EQU   SCRARECF
SCRAACTF EQU   SCRAFLGS+1
SCRAMTRM EQU   SCRAACTF
SCRAABTM EQU   SCRAACTF
SCRAWORK EQU   SCRA+16
SCRASUPR EQU   SCRA+20
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
LCCASMQJ EQU   LCCA+864
LCCASPLJ EQU   LCCA+868
WSAC     EQU   0
WSACCWSA EQU   WSAC
TREGSV   EQU   0
REG11    EQU   TREGSV+8
REG12    EQU   TREGSV+12
REG13    EQU   TREGSV+16
REG14    EQU   TREGSV+20
REG15    EQU   TREGSV+24
TERMLIST EQU   0
PTRWTO   EQU   TERMLIST
PTRLGREC EQU   TERMLIST+4
LOGLRB   EQU   TERMLIST+8
LOGLHDR  EQU   LOGLRB
LOGLRCDT EQU   LOGLHDR
LOGLSIZE EQU   LOGLHDR+24
LOGLCODE EQU   LOGLHDR+28
RTRYADDR EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
PSASSTK  EQU   PSARSVTE+8
PSAMSTK  EQU   PSARSVTE+16
PSAPSTK  EQU   PSARSVTE+24
PSAESTK1 EQU   PSARSVTE+32
PSAESTK2 EQU   PSARSVTE+40
PSAESTK3 EQU   PSARSVTE+48
PSARSTK  EQU   PSARSVTE+56
ASCBPTR  EQU   PSAAOLD
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTTRACE EQU   CVTS01+52
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
LCCAPTR  EQU   PSALCCAV
TOTAL    EQU   SDWAVRAL
USED     EQU   SDWAURAL
NASID    EQU   SDWAFMID
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSAESAV3 EQU   PSARSVTE+52
PSAESAV2 EQU   PSARSVTE+44
PSAESAV1 EQU   PSARSVTE+36
PSAPSAV  EQU   PSARSVTE+28
PSAMSAV  EQU   PSARSVTE+20
PSASSAV  EQU   PSARSVTE+12
PSANSTK  EQU   PSARSVTE+4
LOGEND   EQU   TERMLIST+40
LOGLRES  EQU   LOGLHDR+1
@NM00075 EQU   TREGSV
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
SCRAEND  EQU   SCRA+24
SCRARS04 EQU   SCRAFLGS+2
SCRARS03 EQU   SCRAACTF
SCRARS02 EQU   SCRARECF
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00074 EQU   CVTFIX+248
@NM00073 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00048 EQU   SDWA+512
@NM00047 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
@NM00046 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00045 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00044 EQU   SDWADDAT+3
@NM00043 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00042 EQU   SDWADDAT+1
@NM00041 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00040 EQU   SDWADUMP+2
@NM00039 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00038 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
@NM00037 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00036 EQU   SDWAACF3
@NM00035 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
@NM00034 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00033 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00032 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00031 EQU   SDWA+239
@NM00030 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
@NM00029 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00028 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00027 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00026 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00025 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00024 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00023 EQU   SDWAINC2
@NM00022 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00021 EQU   SDWAILC2
@NM00020 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00019 EQU   SDWANXT2
@NM00018 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00017 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00016 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00015 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00014 EQU   SDWAINC1
@NM00013 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00012 EQU   SDWAILC1
@NM00011 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00010 EQU   SDWANXT1
@NM00009 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00008 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00007 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00006 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00005 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00004 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00003 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00002 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00001 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
@NM00072 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00071 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00070 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00069 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00068 EQU   FLCFSA
@NM00067 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00066 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00065 EQU   FLCIOA
@NM00064 EQU   FLCMCLA+15
@NM00063 EQU   FLCMCLA+14
@NM00062 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00061 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00060 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00059 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00058 EQU   FLCPER
@NM00057 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00056 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00055 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00054 EQU   FLCPIILC
@NM00053 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00052 EQU   FLCSVILC
@NM00051 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00050 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00049 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00126 EQU   SPRSPEC
@RF00126 EQU   DISPEXIT
@RC00130 EQU   @EC00225
@RC00149 EQU   @EC00225
@RC00156 EQU   @EC00225
@RC00163 EQU   @EC00225
@RC00170 EQU   @EC00225
@RC00177 EQU   @EC00225
@RC00184 EQU   @EC00225
@RC00191 EQU   @EC00225
@RC00198 EQU   @EC00225
@ENDDATA EQU   *
         END   IEAVESPR,(C'PLS1726',0701,77089)
