         TITLE 'IEAVEDR - IPC DIRECT SIGNAL SERVICE ROUTINE'
*/*IEAVEDR: CHART DSGNL SR */
*/* HEADER
*/*
*/*
*/*
*/*                                                  ID: 3.1.7.13.10.1
*/* DSGNL SERVICE ROUTINE
*/*                                                  PAGE # */
*/*IEAVEDR: E IEAVEDR */
*/* P DISABLE EXT & I/O SAVE SYSTEM MASK IN MODEL STOSM */
*/* P SAVE REG 14 IN PSA */
*/* P LOAD REG 14 WITH LCCA ADDR AND SAVE REGS */
*/* P ESTABLISH ADDRESSABILITY  */
*/* D (NO,DRINVPCA,YES,) VALID PCCA ADDR? */
*/*IEAVEDR2: E ENTRY FOR IEAVERI & IEAVERP */
*/* D (YES,IEAVEDRU,NO,) IS SYSTEM A UP? */
*/* P INITIALIZE RETRY COUNT TO 0 */
*/* P GET RECEIVER CPU ADDR FROM ITS PCCA ENTRY ADDR */
*/* P SET UP SIGP PARM R3=R0 */
*/* P INITIALIZE R15=0 */
*/*DREQCKLP: P NOP */
*/*DRBUSYLP: P INITIALIZE R1=0 */
*/* P SIGP R1,R2,0(R3) */
*/* D (YES,DRRC0,NO,) SUCCESS? (CC=0) */
*/*DRTSTL1: D (NO,DRCC1OR3,YES,) BUSY? (CC=2) */
*/* D (YES,DRBUSYT1,NO,) R15=0? */
*/*DRTSTL2: P DECREMENT COUNT BY 1 */
*/* D (NO,DRBUSYLP,YES,) BUSY COUNT=0? */
*/* P STORE CLOCK IN LCCADRT2 */
*/* D (NO,DRBUSYRC,YES,) GOOD CLOCK? */
*/* D (YES,DRBUSYCT,NO,) LCCADRT1 > LCCADRT2? */
*/*DRBUSYRC: P (,DREXIT) RC = 4 */
*/*DRBUSYT1: P STORE CLOCK IN LCCADRT1 */
*/* D (NO,DRBUSYCT,YES,) GOOD CLOCK? */
*/* P ADD 1 MINUTE INCREMENT TO LCCADRT1 */
*/*DRBUSYCT: P (,DRBUSYLP) SET R15=4096 */
*/*DRRC0: P (,DREXIT) RC = 0 */
*/*IEAVEDRU: P (,DREXIT) RC = 16 */
*/*DRCC1OR3: D (YES,DRRC12,NO,) NOT OPERATIONAL? (CC=3) */
*/* D (NO,DROPINVT,YES,) EQUIPMENT CHECK? */
*/*DRTSTL3: D (YES,DRRC8,NO,) RESTART? */
*/*DRBUSYCK: P UPDATE RETRY COUNT BY ONE */
*/* D (NO,DREQCKLP,YES,) RETRY COUNT GE 256? */
*/*DRRC8: P RETURN CODE = 8 */
*/*DREXIT: D (NO,DREXIT2,YES,) WAS CALL IEAVERI OR IEAVERP? */
*/* R RETURN BR 14 */
*/*DREXIT2: P RESTORE REGS */
*/* P RESTORE CALLER'S SYSTEM MASK */
*/* R RETURN BR 14 */
*/*DRRC12: P (,DREXIT) RETURN CODE = 12 */
*/*DROPINVT: D (NO,DRRECCK,YES,DRBUSYCK) OPERATOR INTERVENTION? */
*/*DRRECCK: D (NO,DRRC8,YES,DRBUSYCK) RECIEVER CHECK? */
*/*DRINVPCA: P RESTORE CALLER'S REGISTERS */
*/* P RESTORE CALLER'S SYSTEM MASK */
*/* S () ABEND:X'07B' DUMP SYSTEM */
*/* FOOTING
*/*
*/*  */
*/*IEAVEDR: END DSGNL SR */
*MODULE NAME= IEAVEDR
*
*DESCRIPTIVE NAME= INTERPROCESSOR COMMUNICATION DIRECT SIGNAL ROUTINE
*
*COPYRIGHT= N/A
*
*STATUS= REL. 02.0
*
*FUNCTION= PROVIDES THE USER WITH THE NECESSARY INTERFACE TO SIGNAL
*          (SIGP) OTHER CPUS IN ORDER TO INVOKE ANY ONE OF THE 12
*          HARDWARE FUNCTIONS (ORDERS).  THESE ARE SENSE, EXTERNAL
*          CALL, EMERGENCY SIGNAL, START, STOP, RESTART, INITIAL
*          PROGRAM RESET, PROGRAM RESET, STOP AND STORE STATUS, INITIAL
*          MICROPROGRAM LOAD, INITIAL CPU RESET, AND CPU RESET.
*
*  OPERATION= THE DIRECT SIGNAL SERVICE ROUTINE TESTS TO SEE IF IT WAS
*             PASSED A VALID PCCA ADDRESS.  IF THE PCCA ADDRESS
*             WAS VALID, THE PHYSICAL ADDRESS IN IN THE PCCA WILL BE
*             USED AS AN OPERAND FOR THE SIGP INSTRUCTION IN ORDER
*             TO DIRECT THE REQUEST TO THE APPROPRIATE CPU.  THE ORDER
*             CODE THAT WAS PASSED IN REGISTER 0 IS USED AS ANOTHER
*             SIGP OPERAND TO INDICATE WHICH ORDER SHOULD BE INITIATED.
*             REGISTER 1 WILL BE CLEAR AND PASSED AS ANOTHER OPERAND
*             TO SIGP  SO THAT STATUS INDICATORS MAY BE RETURNED
*             IF THE ORDER WAS UNSUCCESSFUL. DIRECT SIGNAL DISABLES
*             FOR EXTERNAL AND IO INTERRUPTS VIA STNSM AND RETURNS TO
*             ITS CALLER IN THE SAME STATE AS CALLED.  DIRECT SIGNAL
*             DOES NOT OBTAIN ANY LOCKS DURING ITS PROCESSING AND
*             RETURNS ITS RETURN CODE IN REGISTER 15.  IF THE RETURN
*             CODE IS 8, STATUS INDICATORS ARE RETURNED IN REG 1.
*             IF THE SYSTEM IS A UNIPROCESSOR (NOT EQUIPPED TO SEND
*             OR RECEIVING SIGP SIGNALS) A PROGRAM EXCEPTION WILL
*             OCCUR ON THE SIGP INSTRUCTION.  DIRECT SIGNAL WILL
*             RETRY FROM ITS FRR AND RETURN THE CALLER A RETURN
*             CODE OF 16.
*
*NOTES
*  DEPENDENCIES=  THE DIRECT SIGNAL SERVICE ROUTINE IS DEPENDENT
*             OF THE SIGNAL PROCESSOR (SIGP) INSTRUCTION AS DEFINED
*             IN "EXTENSIONS TO SYSTEM/370", PKD005808, DATED 12/30/71.
*             THE DIRECT SIGNAL SERVICE ROUTINE IS DEPENDENT ON
*             RMS USING ITS OWN SIGP INSTRUCTION TO SIGNAL OTHER
*             CPUS FOR ACR.
*    CHARACTER-CODE DEPENDENCIES= NONE
*  RESTRICTIONS=NONE.
*  REGISTER-CONVENTIONS= REFERENCE EQUATE SECTION
*  PATCH-LABEL= NONE, THIS IS A RESIDENT NUCLEUS MODULE.
*
*MODULE TYPE= PROCEDURE
*  PROCESSOR= ASSEM
*  MODULE SIZE= N/A
*  ATTRIBUTES= NUCLEUS,ZERO PROTECT KEY,DISABLED,REFRESHABLE,
*              SUPERVISOR MODE,ADDRSPC=FIXED.
*
*ENTRY POINT= IEAVEDR
*  PURPOSE= TO SIGNAL ANOTHER OR ONES OWN CPU.
*  LINKAGE= THE DSGNL MACRO WHICH EXPANDS INTO A BALR 14,15.
*  INPUT= REGISTER 1 - CONTAINS THE PCCA ADDRESS.
*         REGISTER 0 - CONTAINS THE REQUESTED ORDER CODE.
*         REGISTER 14 - CONTAINS THE RETURN ADDRESS.
*         REGISTER 15 - CONTAINS THE ENTRY POINT ADDRESS.
*  REGISTERS SAVED= REGISTER 2 THROUGH 5.
*  REGISTER USAGE= REGISTER 1 IS STATUS REGISTER FOR THE SIGP INSTR.
*                  REGISTER 2 CONTAINS THE ADDRESS OF THE CPU TO
*                  SIGNALLED BY THE SIGP INSTRUCTION.
*                  REGISTER 3 CONTAINS THE ORDER CODE FOR THE SIGP
*                  INSTRUCTION.
*                  REGISTER 4 CONTAINS A LOOP CONTROL FOR EQUIPMENT
*                  CHECK, RECEIVER CHECK AND OPERATOR INTERVENING
*                  CONDITIONS.
*                  REGISTER 5 USED AS THE BASE REGISTER.
*                  REGISTER 15 CONTAINS A LOOP CONTROL FOR TEMPORARY
*                  BUSY CONDITIONS.
*  REGISTERS RESTORED= REGISTER 2 THROUGH 5.
*
*EXIT - NORMAL= IEAVEDR.
*  CONDITIONS= NORMAL COMPLETION OF FUNCTION REGARDLESS OF ORDER
*             BEING INITIATED.
*  OUTPUT= AN INITIATED ORDER IF SUCCESSFUL AND RETURN CODES
*         INDICATING THE STATUS.
*  RETURN CODES= AS LISTED BELOW.
*  R.C. - 0  - SIGP FUNCTION SUCCESSFULLY INITIATED.  THE FUNCTION
*              IS NOT NECESSARILY COMPLETED UPON RETURN TO THE
*              CALLER.
*  R.C. - 4  - SIGP FUNCTION NOT COMPLETED BECAUSE ACCESS PATH TO
*              THE ADDRESSED PROCESSOR WAS BUSY OR THE ADDRESSED
*              PROCESSOR WAS IN A STATE WHERE IT COULD NOT ACCEPT
*              AND RESPOND TO THE FUNCTION CODE.
*  R.C. - 8  - SIGP FUNCTION UNSUCCESSFUL.  STATUS RETURNED IN
*              REGISTER 0.
*              REGISTER 0 STATUS ON R.C. 8.
*              BIT   0 = EQUIPMENT CHECK.
*                  1-23 = RESERVED
*                    24 = EXTERNAL CALL PENDING
*                    25 = STOPPED
*                    26 = OPERATOR INTERVENING
*                    27 = CHECK STOP
*                    28 = NOT READY
*                    29 = RESERVED
*                    30 = INVALID FUNCTION
*                    31 = RECEIVER CHECK
*  R.C. - 12 - NOT OPERATIONAL.  THE SPECIFIEC CPU IS EITHER NOT
*              INSTALLED OR IS NOT CONFIQURED INTO THE SYSTEM OR
*              IS POWERED OFF.
*  R.C. - 16 - SIGP FUNCTION UNSUCCESSFUL.  CPU IS AN UNIPROCESSOR
*              AND DOES NOT HAVE SIGP SENDING AND RECEIVING
*              CAPABILITIES.
*
*EXIT - ERROR= NONE.
*  RETURN CODES= NONE.
*
*EXTERNAL REFERENCES=
*  ROUTINES= NONE
*  DATA AREAS= NONE.
*  CONTROL BLOCKS=
*                 PSA - U,M.  LCCA - U,M.
*                 PCCA - U,M.  CVT - U.  CSD - U.
*
*TABLES= NONE.
*
*MACROS= ABEND.
*  SERIALIZATION= DISABLEMENT.
*
*CHANGE ACTIVITY= N/A
*
*MESSAGES= XXXXXXX - MSG. TEXT
*
*ABEND CODES= SYSTEM ABEND CODE 07B - INVALID PCCA ADDRESS.
*
***********************************************************************
IEAVEDR  CSECT
         ENTRY IEAVEDR2
         ENTRY IEAVEDR3                                        @YM08101
*        SYMBOLIC EQUATES
REG0     EQU   0                        REGISTER 0
REG1     EQU   1                        REGISTER 1
REG2     EQU   2                        REGISTER 2
REG3     EQU   3                        REGISTER 3
REG4     EQU   4                        REGISTER 4
REG5     EQU   5                        REGISTER 5
REG6     EQU   6                        REGISTER 6
REG15    EQU   15                       REGISTER 15
ZERO     EQU   0                        ZERO VALUE
STATUSR1 EQU   1                        REG 1 WITH SIGP STATUS BITS
NOTOPER  EQU   1                        CC 3 - NOT OPERATIVE
CPUID    EQU   2                        REG 2 WITH PHYSICAL CPUID
FUNCCDE  EQU   3                        REG 3 WITH SIGP FUNCTION CODE
FOUR     EQU   4                        RETURN CODE AND CONSTANT
EQCHKLPC EQU   4                        REG 4 - LOOP CONTROL REGISTER
*                                       FOR EQ CHK, RECEIVER CHK, AND
*                                       OPERATOR INTERVENING CONDITIONS
MULTBY4  EQU   2                        MASK TO SLL TO MULTIPLY BY 4
CVTREG2  EQU   2                        CVT BASE REGISTER
DRCC3    EQU   3                        BAD CLOCK
NOTBUSY  EQU   5                        CC 1 OR 3, BUT NOT 2 (BUSY CC)
BASER5   EQU   5                        REG 5 - BASE REGISTER
SUCCESS  EQU   8                        CC 0 SIGP SUCCESSFUL
EIGHT    EQU   8                        RETURN CODE AND CONSTANT
TWELVE   EQU   12                       RETURN CODE
REG14    EQU   14                       REGISTER 14
RETURN   EQU   14                       REG 14 - RETURN ADDRESS
RC16     EQU   16                       UNIPROCESSOR R.C.
K256     EQU   256                      CONTROL LOOP VALUE
DISABLE  EQU   X'FC'                    TO DISABLE EXT & I/O INTERRUPTS
XFF      EQU   X'FF'                    BYTE MASK OF FF
         EJECT
         USING LCCA,REG14
         USING PCCA,REG1
         USING PSA,0
         USING *,REG15
BASEADR  EQU   *
IEAVEDR  MODID BR=YES
         STNSM PSAIPCD+1,DISABLE        DISABLE FOR EXT & I/O INT AND
*                                       SAVE CALLERS SYSTEM MASK
         ST    RETURN,PSAIPCSA          SAVE REG 14 VALUE
         L     REG14,PSALCCAV           LOCATE LCCA
         STM   REG2,REG5,LCCADSR2       SAVE CALLERS REGS 2-5
         DROP  REG14
         LR    BASER5,REG15             EST ADDRESSABILITY FROM 15 AND
*                                       SAVE SWAIT INDICATOR (HIGH BIT)
         USING BASEADR,BASER5
         DROP  REG15
         LA    REG14,DREXITR            CALLERS AT THIS ENTRY POINT
*                                       WILL TAKE NORMAL EXIT
         EJECT
**********************************************************************
*        ROUTINE VALIDITY CHECKS THE PCCA ADDRESS
**********************************************************************
         LTR   REG1,REG1                DOES PCCA ADDR = 0
         BZ    DRINVPCA                 INVALID PCCA ADDRESS
         L     CVTREG2,CVTPTR           LOCATE CVT
         USING CVT,CVTREG2
         LH    REG4,PCCACPUA            OBTAIN PURPORTED CPUID
         SLL   REG4,MULTBY4             INDEX VALUE FOR PCCAVT
         L     REG3,CVTPCCAT            LOCATE PCCAVT
         L     REG15,0(REG4,REG3)       OBAIN PCCA ADDRESS FOR CPUID
         CR    REG1,REG15               DOES PCCA ADDRESSES AGREE?
         BNE   DRINVPCA                 INVALID PCCA ADDRESS
**********************************************************************
*        PCCA ADDRESS IS VALID, LOCATE PROCESSOR ADDR FOR SIGP
**********************************************************************
IEAVEDR2 DC    0H'0'
         L     REG15,CVTCSD            GET CSD ADDRESS
         TM    CSDFLAGS-CSD(REG15),CSDMP IS SYSTEM IN MP MODE
         BNO   IEAVEDRU                IF NO RETURN CODE 16
         LA    EQCHKLPC,K256            ESTABLISH CONTROL FOR EQ CHK,
*                                       RECEIVER CHK & OPERATOR INTVEN.
         LH    CPUID,PCCACPUA           OBTAIN PHYSICAL CPUID FOR
*                                       RECEIVING CPU
         LR    FUNCCDE,REG0             PLACE FUNCTION CODE TO SIGP
         SLR   REG15,REG15              BUSY LOOP CONTROL
DREQCKLP EQU   *
DRBUSYLP EQU   *
         LA    STATUSR1,ZERO            INITIALIZE STATUS REG TO ZERO
         SIGP  STATUSR1,CPUID,ZERO(FUNCCDE)  SIGNAL APPROPRIATE CPU
         BC    SUCCESS,DRRC0            SIGP SUCCESSFUL INITIATED
         EJECT
**********************************************************************
*        A CONDITION CODE OF 1,2, OR 3 HAS BEEN GENERATED
*        THE SIGP INSTRUCTION WILL BE RETRIED AS FOLLOWS
*            CC 1 - SIGP UNSUCCESSFUL - STATUS STORED IN R1 OPERAND
*        FOR CC 1 - IF STATUS WAS:
*                   1.  RECEIVER CHECK
*                   2.  OPERATOR INTERVENING
*                   3.  EQUIPMENT CHECK - EXCEPT FOR A RESTART ORDER
*                        WHICH WILL NOT BE RETRIED.
*                       *  THESE CONDITIONS WILL BE RETRIED 256 TIMES
*                          BEFORE GIVING THE CALLER A R.C. 8.
*                   4.  ALL OTHER CONDITIONS WILL RESULT IN A R.C. 8
*                       IMMEDIATELY WITH STATUS RETURNED IN REG 0.
*            CC 2 - SIGP UNSUCCESSFUL - TEMPORARY BUSY
*        FOR CC 2 - ALL ORDERS WILL BE RETRIED 1 MIN. OR 1024 TIMES,
*                   IF STCK FAILS,
*                   BEFORE GIVING THE CALLER A R.C. 4
*            CC 3 - ADDRESSED CPU NOT OPERATIVE
*        FOR CC 3 - A R.C. 12 WILL BE RETURNED TO THE CALLER
*
**********************************************************************
DRTSTL1  EQU   *
         BC    NOTBUSY,DRCC1OR3         EITHER A CC 1 OR 3
DRTSTL2  EQU   *
         LTR   REG15,REG15              WAS THIS A 1ST BUSY CONDITION?
         BZ    DRBUSYT1                 FIRST BUSY CONDITION
         BCT   REG15,DRBUSYLP           RECEIVING CPU IN TEMPORARY
*                                       BUSY CONDITION THAT PRECLUDED
*                                       SIGP OPERATION, TRY AGAIN
         L     REG1,PSALCCAV            OBTAIN LCCA ADDR
         STCK  LCCADRT2-LCCA(REG1)      STORE CLOCK VALUE
         BC    DRCC3,DRBUSYRC           CLOCK INOPERATIVE GIVE RC 4
         L     REG15,LCCADRT1-LCCA(REG1) OBTAIN INITIAL CLOCK VALUE
         C     REG15,LCCADRT2-LCCA(REG1) HAS ONE MINUTE ELASPED?
         BH    DRBUSYCT                 SET BUSY LOOP CTRL
DRBUSYRC DC    0H'0'
         LA    REG15,FOUR               TEMPORARY BUSY CONTROL EXHAUST-
*                                       ED, HANDLE AS IF PERMANENT.
         B     DREXIT                   GO TO COMMON EXIT CODE
DRBUSYT1 DC    0H'0'
         L     REG1,PSALCCAV            OBTAIN LCCA ADDR
         STCK  LCCADRT1-LCCA(REG1)      STORE CLOCK VALUE
         BC    DRCC3,DRBUSYCT           SET BUSY LOOP CTRL
         L     REG15,LCCADRT1-LCCA(REG1) OBTAIN CLOCK VALUE STORED
         AL    REG15,DRONEMIN           ADD ONE MIN INCREMENT
         ST    REG15,LCCADRT1-LCCA(REG1) NEW VALUE FOR 1 MIN TIME-OUT
DRBUSYCT DC    0H'0'
         L     REG15,DR1MEG            BUSY LOOP CONTROL       @ZA10845
         B     DRBUSYLP                REPEAT SIGP
         EJECT
***********************************************************************
*        RETURN CODE 0  - SIGP SUCCESSFULLY INITIATED                 *
***********************************************************************
DRRC0    EQU   *
         LA    REG15,ZERO               RC 0 - SUCCESSFUL
         B     DREXIT                   RETURN TO CALLER
         SPACE 2
***********************************************************************
*        RETRY FOR UNIPROCESSOR PGM CHK - R.C. 16
***********************************************************************
IEAVEDRU EQU   *
         LA    REG15,RC16              INDICATE UP - PGM CHECK RETRY
         B     DREXIT                  RETURN TO CALLER
         EJECT
***********************************************************************
*        CONDITION CODE 1 OR 3
*              CC 3 - GIVE CALLER A RC 12
*              CC 1 - DETERMINE IF SIGP SHOULD BE RETRIED
***********************************************************************
DRCC1OR3 EQU   *
         BC    NOTOPER,DRRC12           RECEIVING CPU NOT OPERATIVE
         LR    REG0,STATUSR1            IF RETURN IS TO CALLER
*                                       INSURE STATUS IS IN REG 0
         LTR   STATUSR1,STATUSR1        WAS EQ CHECK BIT ON?
         BNM   DROPINVT                 NO, CHECK FOR OTHER STATUS
DRTSTL3  EQU   *
         C     FUNCCDE,RESTART          WAS THIS A RESTART REQUEST?
         BE    DRRC8                    YES, DO NOT RETRY SIGP
DRBUSYCK EQU   *
         BCT   EQCHKLPC,DREQCKLP        RETRY EQ CHK, RECEIVER CKH AND
*                                       OPERATOR INTERVENING CONDITIONS
DRRC8    EQU   *
         LA    REG15,EIGHT              CONDITION STILL EXISTS RETURN
*                                       TO CALLER WITH STATUS IN REG 1
         EJECT
DREXIT   EQU   *
         BR    RETURN                  RETURN TO CALLER IF CALLER IS
*                                      IEAVERP OR IEAVERI; OTHERWISE
*                                      BRANCH TO DREXITR FOR NORMAL RET
DREXITR  DC    0H'0'
         USING LCCA,REG2
         L     REG2,PSALCCAV            LOCATE CPUS LCCA
         LM    REG2,REG5,LCCADSR2       RESTORE CALLERS REGS 2-5
         L     RETURN,PSAIPCSA          RESTORE REG 14
         EX    REG0,PSAIPCD             RESTORE CALLERS SYSTEM MASK
         BR    RETURN                   RETURN TO CALLER
         EJECT
***********************************************************************
*        RETURN CODE 12 - RECEIVING CPU NOT OPERATIVE                 *
***********************************************************************
DRRC12   EQU   *
***********************************************************************
*        THIS IS CODE MODIFICATION FOR HANDLING CC3
***********************************************************************
*                                                              @YM08101
         LR    REG0,REG2                OBTAIN CPUID FOR COMMON ROUTINE
         LR    REG4,REG14               SAVE CALLER'S RETURN ADDRESS
         L     REG1,PSALCCAV            OBTAIN LCCA ADDR FOR CR@YM08101
         BAL   REG14,IEAVEDR3           CALL COMMON ROUTINE    @YM08101
         LR    REG14,REG4               RESTORE CALLER'S RET ADDR
***********************************************************************
*        END OF CODE MODIFICATION FOR HANDLING CC3
***********************************************************************
         LA    REG15,TWELVE             RC 12 - NOT OPERATIVE
         B     DREXIT                   CHECK IF SWAIT OPTION ON
         SPACE 3
***********************************************************************
*        TEST IS STATUS RETURNED FROM SIGP IN REGISTER 1 INDICATES    *
*        SIGP NOT SUCCESSFULLY INITIATED BECAUSE OF OPERATOR          *
*        INTERVENING.                                                 *
***********************************************************************
DROPINVT EQU   *
         EX    STATUSR1,DROPINTM        EX TM TO DETERMINE IF STATUS
*                                       FOR OPERATOR INTERVENING IS ON
         BZ    DRRECCK                  NOT OPERATOR INTERVENING
DRTSTL4  EQU   *
         B     DRBUSYCK                 OPERATOR INTERVENING CHECK IF
*                                       LOOP CONTROL EXHAUSTED
         SPACE 3
***********************************************************************
*        TEST IF STATUS RETURNED FROM SIGP IN REGISTER 1 INDICATES    *
*        SIGP NOT SUCCESSFULLY INITIATED BECAUSE OF RECEIVER CHECK    *
***********************************************************************
DRRECCK  EQU   *
         EX    STATUSR1,DRRECCKT        EX TM TO DETERMINE IF STATUS
*                                       BIT INDICATES A RECEIVER CHECK
         BZ    DRRC8                    NOT A RECEIVER CHECK
DRTSTL5  EQU   *
         B     DRBUSYCK                 RECEIVER CHECK, CHECK IF LOOP
*                                       CONTROL EXHAUSTED.
         SPACE 3
***********************************************************************
*        TM INSTRUCTION OBJECT OF EX TO DETER IF OPERATOR INTERVENING *
*        STATUS IS INDICATED.                                         *
***********************************************************************
DROPINTM EQU   *
         TM    DROPINON,ZERO            WITH EX DETERMINE IF OPERATOR
*                                       INTERVENING STATUS BIT IS ON
         SPACE 3
***********************************************************************
*        TM INSTRUCTION OBJECT OF EX TO DETERMINE IF RECEIVER CHECK   *
*        STATUS BIT IS ON                                             *
***********************************************************************
DRRECCKT EQU   *
         TM    DRRECCKO,ZERO            WITH EX DETERMINE IF RECEIVER
*                                       CHECK STATUS BIT IS ON
         EJECT
**********************************************************************
*        PCCA ADDRESS INVALID ABEND THE CALLER
**********************************************************************
DRINVPCA EQU   *
         L     REG2,PSALCCAV            LOCATE THE LCCA
         USING LCCA,REG2
         LM    REG2,REG5,LCCADSR2       RESTORE CALLERS REGS 2-5
         EX    REG0,PSAIPCD             RESTORE CALLERS SYSTEM MASK
         ABEND X'07B',DUMP,,SYSTEM      ABEND THE CALLER
         SPACE 3
**********************************************************************
*        CONSTANTS
**********************************************************************
DRONEMIN DC    F'64'                   APPROXIMATELY ONE MINUTE
RESTART  DC    F'6'                     RESTART FUNCTION CODE
*                                       OPERATOR INTERVENING AND
*                                       RECEIVER CHECKS.
DR1MEG   DC    X'00100000'              BUSY CNTRL LOOP VALUE  @ZA10845
DROPINON DC    X'20'                    OPERATOR INTERVENING STATUS BIT
DRRECCKO DC    X'01'                    RECEIVER CHECK STATUS BIT
         TITLE 'IEAVEDR - IPC CC3 HANDLER ROUTINE'
***********************************************************************
*        THIS IS CODE FOR HANDLING CC3
***********************************************************************
         DROP  REG2                                            @YM08101
         DROP  REG1                                            @YM08101
         DROP  BASER5                                          @YM08101
*                                       CC3 HANDLING RTN       @YM08101
*                                       INITIATE ACR ON CC3 FOR  A SIGP
*                                       TO A LOGICALLY ONLINE CPU
IEAVEDR3 DC    0H'0'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
H16      EQU   16
RC4      EQU   4
D64      EQU   64
         USING PSA,0
         USING CVT,R6
         USING LCCA,R1
         USING CSD,R2
         USING PCCA,R5
         L     R15,LCCACPUS             GET CPU RELATED SAVE AREA
         L     R15,WSACEDS0-WSAC(R15) ADDR OF DISPATCHER COMM S.A.
         STM   R4,R7,D64(R15)           SAVE WORK REGS
         BALR  R7,R0                    EST ADDRESSABILITY
         USING *,R7
         L     R6,CVTPTR           OBTAIN CVT ADDRESS
         L     R2,CVTCSD           OBTAIN CSD ADDRESS
         LR    R3,R0               RECEIVING CPU'S ID
         STH   R3,PSASPAD          EST. OTHER CPU AS SENDER
         SLL   R3,MULTBY4          GET PCCAVT INDEX VALUE
         L     R4,CVTPCCAT         OBTAIN PCCAVT ADDRESS
         L     R5,0(R3,R4)         OBTAIN PCCA ADDR OF CPU
         LH    R4,PCCACAFM         OBTAIN CPU'S ALIVE MASK
         LH    R3,CSDCPUAL         OBTAIN SYSTEM ALIVE MASK
         NR    R4,R3               AND IT WITH SYSTEM ALIVE MASK
         BZ    IPCRC0              CC3 FOR NOT ALIVE CPU, OKAY - R.C. 0
         TM    CVTDSSAC,X'FF'           IS DSS ACTIVE
         BO    IPCIFDSS                 YES, WAIT SYSTEM
         LH    R3,PSACPULA         OBTAIN LOGICAL CPU ID
         SLL   R3,H16              PLACE IN HIGH ORDER BYTES
         O     R3,IPCRSTWD         OBTAIN OWN RESTART WORD
         SLR   R0,R0               CLEAR REG FOR C&S
IPCRSTST EQU   *
         CS    R0,R3,CVTRSTWD      TRY TO OBTAIN RESTART RESOURCE
         BZ    IPCRSTIT            TEST OWNER OF RESTART RESOURCE
         LH    R5,PSASPAD          OBTAIN OTHER CPUID
         SLL   R5,H16              PLACE IN HI ORDER BYTES
         O     R5,IPCRSTWD         MAKE RESTART WORD
         CR    R5,R0               DOES OTHER CPU OWN RS WD?
         BE    IPCRSTQT            YES, WAIT THIS CPU
         B     IPCRSTST            OTHERWISE, STEAL RESTART RESOURCE
IPCRSTIT EQU   *
         LM    R2,R5,FLCRNPSW      OBTAIN RESTART NEW/OLD
         STM   R2,R5,LCCADRT1      SAVE RESTART NEW/OLD
         LM    R2,R3,IPCRSNEW      OBTAIN RESTART NEW FOR OPERATOR
         STM   R2,R3,FLCRNPSW      INITIATED RESTART
IPCNOSAV EQU   *
         LPSW  IPCWSCC3            PLACE CPU IN WAIT STATE WITH
*                                  WAIT STATE CODE THAT REQUIRES
*                                  OPERATOR ACTION TO RESTART SYSTEM.
IPCRSCC3 EQU   *
         L     R5,PSAPCCAV         OBTAIN PCCA ADDR
         L     R4,PCCAPSAV         OBTAIN OWN PSA'S VIRTUAL ADDR
         CLC   FLCFLA-FLC(8,4),IPCWSCC3  WAS SS AND RESTART
*                                  DONE BY OPERATOR. IF NOT RELOAD WAIT
*                                  PSW.
         BNE   IPCNOSAV            RELOAD WAIT STATE
         XC    FLCFLA-FLC(8,4),FLCFLA-FLC(4) CLEAR PSW SAVE AREA
         LH    R4,IPCMFACD         OBTAIN MFA CODE
         STH   R4,FLCEICOD         SIMULATED MFA
         TM    LCCASPN1,LCCASIGP        IS SPIN BIT ON?
         BO    IPCSPNR1                 YES DON,T TURN IT ON
         SLR   R4,R4                    SET TURN OFF INDICATOR
         OI    LCCASPN1,LCCASIGP   TURN ON SPIN BIT TO
*                                  GET CONTROL BACK AFTER EXT INT
IPCSPNR1 EQU   *
         LM    R2,R3,IPCPSWRT      SAVE RETURN ADDRESS
         STM   R2,R3,FLCEOPSW      SET UP RETURN FROM EXT FLIH
         LPSW  FLCENPSW            FORCE ENTRY TO EXT FLIH
IPCEXTRT EQU   *
         LTR   R4,R4                    WAS SPIN BIT TURNED ON?
         BNZ   IPCSPNR2                 NO, AVOID TURNING OFF
         NI    LCCASPN1,XFF-LCCASIGP  TURN OFF SPIN BIT
IPCSPNR2 EQU   *
         LM    R2,R5,LCCADRT1      RESTORE RESTART NEW/OLD
         STM   R2,R5,FLCRNPSW      RESTORE RESTART NEW/OLD
         ST    R0,CVTRSTWD         RESTORED RESTART RESOURCE
IPCEXIT  EQU   *
         LM    R4,R7,D64(R15)      RESTORE REGISTERS OF CALLER
         LA    R15,RC4                  SET RETURN CODE TO 4
         BR    R14                 RETURN TO CALLER
         EJECT
IPCRC0   EQU   *
         LM    R4,R7,D64(R15)      RESTORE REGISTERS OF CALLER
         SLR   R15,R15             SET RETURN CODE TO ZERO
         BR    R14                 RETURN TO CALLER
         SPACE 3
IPCRSTQT EQU   *
         LPSW  IPCWSCPU            WAIT STATE THIS CPU
         SPACE 3
IPCIFDSS DC    0H'0'
         LPSW  IPCWSDSS                 DSS ACTIVE, WAIT SYSTEM
         EJECT
IPCMFACD DC    X'1200'             MFA INTERRUPT CODE
IPCRSTWD DS    0F
         DC    X'0000',CL2'IP'     RESTART RESOURCE WORD
         DS    0D
IPCRSNEW DC    X'040C0000'
         DC    A(IPCRSCC3)
IPCWSCC3 DC    X'040E0000'
         DC    XL4'02A'
IPCWSCPU DC    X'040E0000'
         DC    XL4'02B'
IPCPSWRT DC    X'040C0000'
         DC    A(IPCEXTRT)
IPCWSDSS DC    X'040E0000'
         DC    XL4'02C'
         EJECT
         IHAPCCA
         EJECT
         IHALCCA
         EJECT
         IHAPSA
         EJECT
         IHACSD
         EJECT
         IHAWSAVT CLASS=CPU,DSECT=YES
         EJECT
         CVT     LIST=YES,DSECT=YES,PREFIX=NO
         EJECT
         IHAFRRS
         END   IEAVEDR
