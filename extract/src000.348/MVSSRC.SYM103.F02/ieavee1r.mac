      TITLE 'IEAVEE1R- EXTERNAL FLIH RECOVERY ROUTINE (I)'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME =     IEAVEE1R
*
*02*     CSECT-NAME =   IEAVEE1R
*
*01*  DESCRIPTIVE-NAME =     EXTERNAL FLIH RECOVERY ROUTINE 1
*
*01*  COPYRIGHT =  NONE
*
*01*  STATUS =     VERSION 1
*
*01*  FUNCTION =
*        WHEN RECOVERY IS INITIATED FOR THE EXTERNAL FIRST LEVEL
*        INTERRUPT HANDLER, THE SUPER FRR WILL INDICATE A RETRY
*        TO IEAVEE1R.  THIS ROUTINE WILL CLEAN UP THE EXT FLIH
*        RESOURCES (NON-RECURSIVE), AND ALLOW PERCOLATION
*        TO THE NEXT LEVEL OF RECOVERY.
*
*02*     OPERATION =
*             CLEAR THE EXT FLIH RECURSION BIT 1;
*             CLEAR THE IPC SLIH FLAGS (EMS & EXT CALL);
*             FLIP THE FRR STACK TO THE PREVIOUS CURRENT STACK;
*             SET COMPLETION CODE IN REG 1 FOR ABEND;
*             EXIT TO IEAVEABD TO PERFORM ABEND;
*
*01*   NOTES =
*
*02*     DEPENDENCIES =
*             RTM:
*             RECOVERY IS CONTROLLED BY USE OF THE FRR STACK MECHANISM.
*
*             IEAVESVR:
*             THE SVC FLIH RECOVERY ROUTINE CONTAINS A COMMON
*             SECTION, STARTING AT THE EXTERNAL LABEL IEAVEABD,
*             WHICH WILL ABEND THE CURRENT TASK, AND PERCOLATE
*             THE ERROR.
*
*             IPC:
*             THE FLAGS FOR THE TWO IPC FUNCTIONS
*             EXTERNAL CALL AND EMERGENCY SIGNAL MUST BE CLEARED
*             TO MAKE THE FUNCTION OPERABLE.
*
*03*        CHARACTER-CODE-DEPENDENCIES =   NONE
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = SEE EQUATE SECTION OF MODULE
*
*02*     PATCH-LABEL =  NONE
*
*01*  MODULE-TYPE =     PROCEDURE
*
*02*     PROCESSOR =    ASSEMBLER
*
*02*     MODULE-SIZE =  36 BYTES
*
*02*     ATTRIBUTES =   NUCLEUS
*                       REUSABLE
*                       REENTRANT
*                       DISABLED
*                       ZERO PROTECT KEY
*                       SUPERVISOR MODE
*
*01*  ENTRY-POINT =     IEAVEE1R
*
*02*     PURPOSE =      THIS IS THE ONLY ENTRY TO IEAVEE1R
*
*02*     LINKAGE =      SUPER FRR WILL INDICATE A RETRY TO IEAVEE1R.
*                       RTM WILL PASS CONTROL VIA BR 15.
*
*02*     INPUT =
*
*03*          ENVIRONMENT =  DISABLED
*                            SUPERVISOR
*                            KEY 0
*                            NO LOCKS HELD
*
*03*          DATA =    DATA AREAS IN PSA AND LCCA
*
*03*          REGISTERS =    REG 15 = ENTRY POINT ADDRESS
*
*02*     OUTPUT =
*
*03*          DATA =    CURRENT FRR STACK = PREVIOUS CURRENT
*                       EXT FLIH RECURSION BIT (1) CLEARED
*                       IPC SLIH FLAGS CLEARED
*
*03*          REGISTERS =
*                       REG 1 = ABEND CODE
*                       REG 15= ADDR IEAVEABD
*
*02*     REGISTERS-SAVED =   NONE
*
*02*     REGISTER-USAGE =    REG 1 = ABEND CODE
*                            REG 15= IEAVEABD ENTRY POINT ADDRESS
*
*02*     REGISTERS-RESTORED =     ALL AS ON ENTRY EXCEPT REG 1 & 15
*
*01*  EXIT-NORMAL =     TO IEAVEABD WHO ISSUES AN SVC 13
*
*02*     CONDITIONS =   THE CURRENT TASK MUST BE TERMINATED FOR
*                       RECOVERY PURPOSES.
*
*02*     OUTPUT =  NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR =      NONE
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES =
*             IEAVEABD -- (ON EXIT) TO ISSUE AN SVC 13
*
*             INVSRTRY -- RSM FUNCTIONAL RECOVERY ROUTINE
*                  INPUT=
*                       DATA=      NONE
*                       REGISTERS=
*                                  R10= ENTRY POINT ADDRESS
*                                  R11= RETURN ADDRESS
*                  OUTPUT=
*                       DATA=      NONE
*                       REGISTERS=
*                                  R15= UNCHANGED
*02*     DATA-AREAS =
*             PSACSTK   -- CURRENT FRR STACK POINTER
*             PSAESAV1  -- EXT FLIH FRR STACK SAVE AREA
*             LCCAXRC1  -- EXT FLIH RECURSION BIT (1)
*             PSAEXT    -- EXT FLIH INDICATOR
*             PSAIPCES  -- EMS SLIH FLAG (PRIMARY)
*             PSAIPCEC  -- EXT CALL FLAG
*
*02*     CONTROL-BLOCKS =    PSA R/W
*                            LCCA R/W
*
*01*  TABLES =     NONE
*
*01*  MACROS =     NONE
*
*01*  SERIALIZATION =   DISABLE
*
*01*  CHANGE-ACTIVITY = Y021104
*
*01*  MESSAGES =   NONE
*
*01*  ABEND-CODES = X'3FC'
*
**** END OF SPECIFICATIONS ***/
         EJECT
IEAVEE1R CSECT
         SPACE 2
*/*IEAVEE1R: CHART EXT FLIH(1) FRR */
*/* HEADER
*/*
*/*
*/*
*/*                                                 SECTION 3.1.8.3
*/* EXT FLIH (I) RECOVERY ROUTINE
*/*                                                 PAGE # */
*/*IEAVEE1R: E IEAVEE1R ENTRY */
*/* P CLEAR THE EXT FLIH RECURSION BIT (1) */
*/* P CLEAR THE EMS SLIH FLAG AND EXT CALL FLAG */
*/* P FLIP THE FRR STACK TO THE PREVIOUS CURRENT STACK */
*/* P SET THE ABEND CODE IN REG 1 FOR SVC 13 */
*/* P EXIT TO IEAVEABD TO PERFORM ABEND */
*/* R IEAVEABD */
*/* FOOTING
*/*
*/*  */
*/*IEAVEE1R: END EXT(1) FLIH FRR */
         EJECT
***********************************************************************
*                                                                     *
*                           EQUATES                                   *
*                                                                     *
***********************************************************************
CXFF     EQU   X'FF'              CONSTANT VALUE = X'FF'
EXTCODE  EQU   X'3FC'             EXTERNAL FLIH ABEND CODE
CODEREG  EQU   1                  REG 1 = ABEND CODE
R10      EQU   10                 GENERAL REGISTER 10
R11      EQU   11                 GENERAL REGISTER 11
R15      EQU   15                 GENERAL REG 15
CCABASE  EQU   1                  BASE FOR LCCA
L20      EQU  20
***********************************************************************
*                                                                     *
*                      IEAVEE1R MAINLINE                              *
*                                                                     *
***********************************************************************
         USING PSA,0
         USING LCCA,CCABASE
         USING *,R15              REG 15 = ENTRY POINT ADDRESS
         L     CCABASE,PSALCCAV   SET UP BASE TO LCCA
         NI    PSASUP1,CXFF-PSAEXT
*                                 CLEAR EXT FLIH BIT
         NI    LCCAIHR1,CXFF-LCCAXRC1
*                                 CLEAR RECURSION 1 BIT
         NI   PSASUP2,CXFF-PSAIPCES-PSAIPCEC
*                                 CLEAR IPC FLAGS-- EMS & EX CALL
         MVC   PSACSTK,PSAESAV1   CURRENT FRR STACK = PREVIOUS CURRENT
         L     R10,AINVSR         GET THE ADDRESS OF RSM FRR
         BALR  R11,R10            GO TO RSM FRR FOR CLEANUP
         LA    CODEREG,EXTCODE    PUT EXT FLIH CODE IN REG 1 FOR ABEND
         L     R15,ADABEND        BRANCH TO ABEND ROUTINE LOCATED IN
         BR    R15                IEAVESVR (SVC FLIH FRR)
***********************************************************************
*                                                                     *
*                    CONSTANTS AND STORAGE                            *
*                                                                     *
***********************************************************************
         EXTRN IEAVEABD
ADABEND  DC    V(IEAVEABD)        ADDRESS COMMON ABEND ROUTINE
AINVSR   DC    V(INVSRTRY)        ADDRESS RSM FUNCTIONAL RECOVERY RTN
         TITLE 'IEAVEE1R- PSA MAPPING'
         IHAPSA
         TITLE 'IEAVEE1R- LCCA DSECT MAPPING'
         IHALCCA
         END
