         TITLE 'IEAVEPCR- PC FLIH RECOVERY ROUTINE'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVEPCR
*
*02*     CSECT-NAME = IEAVEPCR
*
*01*  DESCRIPTIVE-NAME = PROGRAM FLIH RECOVERY ROUTINE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = VERSION 1
*
*01*  FUNCTION =   PROGRAM FLIH RECOVERY HAS TWO PARTS:
*           IEAVEPCR: PROGRAM FLIH RECOVERY ROUTINE
*                  WHEN RECOVERY IS INITIATED FOR THE PROGRAM CHECK
*                  FIRST LEVEL INTERRUPT HANDLER, THE SUPER FRR WILL
*                  INDICATE A RETRY TO IEAVEPCR.  THIS ROUTINE WILL
*                  CLEAR THE PC FLIH RECURSION INDICATORS, MAKING THE
*                  FUNCTION OPERABLE.  IT WILL ALLOW PERCOLATION TO
*                  THE PREVIOUS LEVEL OF RECOVERY.
*
*           IEAVEFRE:= SUSPENDED SRB RMTR
*                  THIS PART OF IEAVEPCR IS ENTERED OF A SUSPENDED
*                  SRB IS PURGED OFF THE SCHEDULEING QUEUE.  ITS
*                  FUNCTION IS TO FREE THE STORAGE ALLOCATED FOR THE
*                  SUSPENDED SRB.
*
*02*     OPERATION =
*             IEAVEPCR ENTRY =
*                  CLEAR THE PC FLIH RECURSION INDICATORS;
*                  FLIP THE FRR STACK TO THE PREVIOUS CURRENT STACK;
*                  SET ABEND CODE IN REG 1 FOR SVC 13;
*                  EXIT TO IEAVEABD TO PERFORM ABEND;
*
*             IEAVEFRE ENTRY=
*                  CALL FREECELL TO FREE SRB CONTROL BLOCK;
*                  IF RETURN CODE NOT EQUAL 0
*                    THEN CALL FREEMAIN;
*                  EXIT BACK TO CALLER;
*01*   NOTES =
*
*02*     DEPENDENCIES =
*             RTM:
*             RECOVERY IS CONTROLLED BY USE OF THE FRR STACK MECHANISM.
*
*             IEAVESVR:
*             THE SVC FLIH RECOVERY ROUTINE CONTAINS A COMMON
*             SECTION, STARTING AT THE EXTERNAL LABEL IEAVEABD,
*             WHICH WILL ABEND THE CURRENT TASK, AND PERCOLATE
*             THE ERROR.
*
*             FREECELL:
*             FREECELL WILL NOT DESTROY THE SSRB ADDRESS IN
*             REG 1 IF IT IS UNSUCCESSFUL
*
*03*        CHARACTER-CODE-DEPENDENCIES =   NONE
*
*02*     RESTRICTIONS =  RMTR MUST NOT LEAVE SUPERVISOR STATE, AND CAN
*        NOT ISSUE ESTEA WITH BRANCH ENTRY
*
*02*     REGISTER-CONVENTIONS = SEE EQUATE SECTION OF MODULE
*
*02*     PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE =  100 BYTES
*
*02*     ATTRIBUTES =   NUCLEUS
*                       REUSABLE
*                       REENTRANT
*                       ZERO PROTECT KEY
*                       SUPERVISOR MODE
*
*01*  ENTRY-POINT =     IEAVEPCR
*
*02*     PURPOSE =      THIS ENTRY TO IEAVEPCR WILL CLEAN UP THE PC
*                       FLIH'S RESOURCES, AND ALLOW PERCOLATION TO THE
*                       NEXT LEVEL OF RECOVERY.
*
*02*     LINKAGE =      SUPER FRR WILL INDICATE A RETRY TO IEAVEPCR.
*                       RTM WILL PASS CONTROL VIA BR 15.
*
*02*     INPUT =
*
*03*          ENVIRONMENT =  DISABLED
*                            SUPERVISOR
*                            KEY 0
*                            NO LOCKS HELD
*
*03*          DATA =    DATA AREAS IN PSA AND LCCA
*
*03*          REGISTERS =    REG 15 = ENTRY POINT ADDRESS
*
*02*     OUTPUT =
*
*03*          DATA =    CURRENT FRR STACK = PREVIOUS CURRENT
*                       PC FLIH'S RECURSION BITS CLEARED
*
*03*          REGISTERS = REG 1 = ABEND CODE
*                         REG 15 = ADDR IEAVEABD
*                         ALL OTHERS AS ENTERED
*
*01*  ENTRY-POINT =     IEAVEFRE
*
*02*     PURPOSE =      THIS ENTRY TO IEAVEPCR WILL FREE THE STORAGE
*                       ALLOCATED FOA A SUSPENDED SRB.
*
*02*     LINKAGE =      CALLER WILL RESOLVE V-CON AND
*                       BALR 14, 15.
*
*02*     INPUT =
*
*03*          ENVIRONMENT =  ENABLED
*                            SUPERVISOR
*                            KEY 0
*                            NO LOCKS HELD
*
*03*          DATA =    NONE
*
*03*          REGISTERS =
*                            REG 1 = ADDR DEQUEUED SRB
*                            REG 14 = RETURN ADDRESS TO CALLER
*                            REG 15 = ENTRY POINT TO RMTR
*
*02*     OUTPUT =
*
*03*          DATA =    NONE
*
*03*          REGISTERS = NONE
*
*02*     REGISTERS-SAVED = NONE
*
*02*     REGISTER-USAGE = REG 1 = ABEND CODE
*                         REG 15 = ADDR IEAVEABD
*                         REG 0-7,14 & 15 DESTROYED BY FREECELL/
*                                      FREEMAIN INNERFACES
*
*02*     REGISTERS-RESTORED = ALL AS ON ENTRY EXCEPT AS NOTED ABOVE
*
*01*  EXIT-IEAVEPCR NORMAL = TO IEAVEABD WHO ISSUES AN SVC 13.
*
*02*     CONDITIONS = THE CURRENT TASK MUST BE TERMINATED FOR
*                     RECOVERY PURPOSES.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-IEAVEFRE NORMAL = BACK TO CALLER.
*
*02*     CONDITIONS = STORAGE FOR THE SSRB HAS BEEN FREED
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES = TO IEAVEABD (ON EXIT) TO ISSUE AN SVC 13
*             FREECELL (MACRO INNERFACE)
*             FREEMEAIN (MACRO INNERFACE)
*
*02*     DATA-AREAS =
*             PSAPI     --   PC FLIH RECURSION BIT IN PSASUP1
*             PSALCCAV  --   ADDRESS LOGICAL CCA
*             LCCAPSG1  --   SEGMENT RECURSION BIT
*             PCCAPDAT  --   TRANSLATION RECURSION BIT
*             LCCAPPIE  --   PIE RECURSION BIT
*             PSAAOLD   --   ASCB ADDRESS
*             SSRBSIZE  --   SIZE OF SUSPENDED SRB
*             PSACSTK   --   CURRENT FRR STACK POINTER
*             PSAPSAV   --   PC FLIH STACK POINTER SAVE AREA
*
*02*     CONTROL-BLOCKS =    PSA R/W
*                            LCCA R/W
*                            CVT R
*                            SSRB R
*
*01*  TABLES = NONE
*
*01*  MACROS = FREEMAIN RC,LV=SSRBSIZE,A=(1),SP=245,BRANCH=YES
*              FREECELL CPUID=(0),CELL=(1),SAVE=NO,BRANCH=YES
*
*02*     SERIALIZATION = DISABLE
*
*01*  CHANGE-ACTIVITY = Y021104
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = X'4FC'
*          NOTE = THE X'4FC' ABEND CODE MAY BE ISSUED BY THE PROGRAM
*          FLIH IN THE CASE OF LOW CORE OVERLAY.  IN THAT CASE
*          THE INCORRECT VALUES IN LOCATIONS X'208' - '217' ARE IN
*          THE FIRST FOUR REGISTERS.   REFERENCE PTM VS08516.
*
**** END OF SPECIFICATIONS ***/
         EJECT
IEAVEPCR CSECT
      SPACE 2
*/*IEAVEPCR: CHART PC FLIH FRR */
*/* HEADER
*/*
*/*
*/*
*/*                                                 SECTION 3.1.8.3
*/* PC FLIH RECOVERY ROUTINE
*/*                                                 PAGE # */
*/* E ENTRY IEAVEPCR */
*/* P CLEAR THE PC FLIH RECURSION INDICATOR */
*/* P FLIP THE FRR STACK TO PREVIOUS CURRENT STACK */
*/* P SET ABEND CODE IN REG 1 FOR SVC 13 */
*/* P EXIT TO IEAVEABD TO PERFORM ABEND */
*/* R IEAVEABD */
*/*IEAVEFRE: E ENTRY IEAVEFRE */
*/* L CALL FREECELL TO FREE SRB CONTROL BLOCK */
*/* D (YES,EXIT,NO,) SSRB FREED? */
*/* L CALL FREEMAIN TO FREE SSRB */
*/*EXIT: R RETURN TO CALLER */
*/* FOOTING
*/*
*/*  */
*/*IEAVERER: END PC FLIH  FRR */
         EJECT
***********************************************************************
*                                                                     *
*                            EQUATES                                  *
*                                                                     *
***********************************************************************
PCCODE   EQU   X'4FC'             PC FLIH ABEND CODE
CPUIDREG EQU   0                  CPU ID FIELD FOR FREECELL
CODEREG  EQU   1                  GENERAL REGISTER 1
SAVEREG  EQU   5                  SAVE AREA FOR RETURN ADDRESS
R7       EQU   7                  GENERAL REGISTER 7
SSRBSAVE EQU   7                  SAVE REG FOR SSRB ADDRESS    @YM08435
R14      EQU   14                 GENERAL REGISTER 14 = RETURN ADDR
R15      EQU   15                 GENERAL REGISTER 15
CCABASE  EQU   1                  BASE TO LCCA
SSRBPTR  EQU   1                  IEAVEFRE -- SSRB ADDRESS     @YM08435
BASEREG  EQU   6                  BASE REG FOR SSRB RMTR
C0       EQU   0
CXFF     EQU   X'FF'
CX38     EQU   X'38'
***********************************************************************
*                                                                     *
*                        IEAVEPCR MAINLINE                            *
*                                                                     *
***********************************************************************
         USING PSA,0
         USING LCCA,CCABASE
         USING *,R15               REG 15 = ENTRY POINT ADDRESS
         NI    PSASUP1,CXFF-PSAPI
*                                  CLEAR PC FLIH RECURSION BIT
         L     CCABASE,PSALCCAV    ESTABLISH BASE TO LCCA
         NI    LCCAIHR1,CXFF-CX38
*                                  CLEAR TRANSLATION RECURSION BIT
         MVC   PSACSTK,PSAPSAV     CURRENT FRR STACK = OLD CURRENT
         LA    CODEREG,PCCODE      PUT PC FLIH ABEND CODE IN REG 1
         L     R15,ADABEND         BRANCH TO ABEND ROUTINE LOCATED IN
         BR    R15                 IEAVESVR (SVC FLIH FRR)
***********************************************************************
*                                                                     *
*                      CONSTANTS & STORAGE                            *
*                                                                     *
***********************************************************************
ADABEND  DC    V(IEAVEABD)         ADDRESS COMMON ABEND ROUTINE
         TITLE 'IEAVEPCR- SUSPEND SRB RMTR (IEAVEFRE)'
***********************************************************************
*                                                                     *
*                        IEAVEFRE MAINLINE                            *
*                                                                     *
***********************************************************************
         ENTRY IEAVEFRE
IEAVEFRE DS    0H                  SUSPENDED SRB RMTR
         BALR  BASEREG,C0          ESTABLISH ADDRESSABILITY
         USING *,BASEREG
         LR    SAVEREG,R14         SAVE RETURN ADDRESS
         LR    SSRBSAVE,SSRBPTR    SAVE SSRB ADDR ACROSS FREECELL
*                                           INTERFACE          @YM08435
         L     CPUIDREG,IDFIELD    PUT ID IN REG 0 FOR FREECELL
         FREECELL CPID=(0),CELL=(1),SAVE=NO,BRANCH=YES
         LTR   R15,R15             CHECK RETURN CODE FROM FREECELL
         BZ    EXIT                IF SUCCESSFUL, RETURN
         FREEMAIN RU,LV=SSRBLEN,A=(SSRBSAVE),SP=245            @YM08435
EXIT     LR    R14,SAVEREG         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
***********************************************************************
*                                                                     *
*                      CONSTANTS & STORAGE                            *
*                                                                     *
***********************************************************************
IDFIELD  DS    0F                  CELL POOL ID
         DC    C'SRB'              SAVE AREA CELL POOL ID
         DC    X'00'
         TITLE 'IEAVEPCR- SSRB DSECT MAPPING'
         IHASSRB
         TITLE 'IEAVEPCR- PSA MAPPING'
         IHAPSA
         TITLE 'IEAVEPCR- LCCA DSECT MAPPING'
         IHALCCA
         TITLE 'IEAVEPCR- CVT DSECT MAPPING'
         CVT DSECT=YES,PREFIX=NO,LIST=NO
         END
