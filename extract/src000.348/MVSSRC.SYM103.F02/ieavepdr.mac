         TITLE 'IEAVEPDR -- PURGEDQ RECOVERY ROUTINE                   *
                        '
IEAVEPDR CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                          01S0001
         DC    C'IEAVEPDR  76.341'                              01S0001
IEAVEPDF DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00050-IEAVEPDF)
         ENTRY IEAVEPDF
IEAVEPDE DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00064-IEAVEPDE)
         ENTRY IEAVEPDE
IEAVEPDS DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00109-IEAVEPDS)
         ENTRY IEAVEPDS
         DROP  @15
@PROLOG  BALR  @10,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@10                                      01S0001
         AH    @15,4(,@15)                                      01S0001
         BR    @15                                              01S0001
@EP00001 DS    0H                                               01S0002
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 200
STAEWASZ EQU   16
*                                                               01S0050
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = THIS IS THE ENTRY POINT OF THE PURGE DQ FRR.  IT   */
*/*           IS ENTERED IF AN ERROR OCCURRED DURING THE QUEUE-      */
*/*           SCANNING PORTION OF THE PURGE DQ MAINLINE.  IT WILL    */
*/*           ATTEMPT TO VERIFY AND CORRECT THE SRB QUEUES BY        */
*/*           INVOKING A SECONDARY ENTRY POINT OF THE SCHEDULE       */
*/*           RECOVERY ROUTINE.  UPON RECIEVING CONTROL BACK         */
*/*           FROM THAT ROUTINE, IT WILL ISSUE THE SETRP MACRO       */
*/*           TO CAUSE RECORDING TO BE DONE, AND TO PERCOLATE        */
*/*           TO THE PURGEDQ ESTAE ROUTINE                           */
*/*                                                                  */
*/*     ENTRY POINT = IEAVEPDF                                       */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*          R0 = ADDRESS 200-BYTE WORK AREA                         */
*/*          R1 = ADDRESS SDWA                                       */
*/*          R14= RETURN ADDRESS TO RTM                              */
*/*          R15= ENTRY POINT ADDRESS                                */
*/*                                                                  */
*/*     OUTPUT:                                                      */
*/*           R7, R15 = VOLITILE                                     */
*/*           R10 = BASE REGISTER                                    */
*/*           R14 = RETURN ADDRESS TO RTM                            */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0050
*IEAVEPDF:                                                      01S0050
*   ENTRY;                          /* FRR ROUTINE FOR PURGEDQ       */
@EP00050 DS    0H                                               01S0051
*   RFY                                                         01S0051
*    (R0,                                                       01S0051
*     R1,                                                       01S0051
*     R14) RSTD;                                                01S0051
*   R14SAVE=R14;                    /* SAVE RETURN ADDRESS           */
         LR    R14SAVE,R14                                      01S0052
*   CALL IEAVESQV;                  /* VERIFY THE SRB QUEUE ISSUE
*                                      SETRP TO INDICATE RECORDING
*                                      AND PERCOLATION               */
         L     @15,@CV01407                                     01S0053
         BALR  @14,@15                                          01S0053
*   DO;                             /* SETRP RECORD(YES)RECPARM(MODNA
*                                      ME)RC(0)                      */
*     RESPECIFY                                                 01S0055
*      (GPR00P,                                                 01S0055
*       GPR01P,                                                 01S0055
*       GPR14P,                                                 01S0055
*       GPR15P) RSTD;                                           01S0055
*     GPR01P->SDWARCDE=0;           /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           01S0056
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                     01S0057
*     GPR15P=ADDR(MODNAME);         /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,MODNAME                                   01S0058
*     GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD PARAMETERS */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                01S0059
*     RESPECIFY                                                 01S0060
*      (GPR00P,                                                 01S0060
*       GPR01P,                                                 01S0060
*       GPR14P,                                                 01S0060
*       GPR15P) UNRSTD;                                         01S0060
*   END;                                                        01S0061
*   R14=R14SAVE;                    /* RESTORE RETURN ADDRESS        */
         LR    R14,R14SAVE                                      01S0062
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 DS    0H                                               01S0063
@EF00001 DS    0H                                               01S0063
@ER00001 BR    @14                                              01S0063
*                                                               01S0064
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = THIS SEGMENT CONTAINS THE ENTRY POINT TO THE       */
*/*           ESTAE ROUTINE FOR PURQE DQ.  IT WILL SET UP A          */
*/*           PARAMETER AREA, AND INDICATE RECORDING IS TO BE        */
*/*           DONE IN THE SDWA.                                      */
*/*                                                                  */
*/*     ENTRY POINT = IEAVEPDE                                       */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*           R0 = 12, IF NO SDWA                                    */
*/*           R1 = ADDRESS SDWA                                      */
*/*           R2 = ADDRESS PURGE DQ WORK AREA                        */
*/*           R10= BASE REGISTER                                     */
*/*           R14= RETURN ADDRESS TO RTM                             */
*/*           R15= ENTRY POINT ADDRESS                               */
*/*                                                                  */
*/*     OUTPUT =                                                     */
*/*           R2 = ADDRESS PURGE DQ WORK AREA                        */
*/*           R7 = RETURN ADDRESS TO RTM                             */
*/*           R8 = CONTENTS INPUT REG 0                              */
*/*           R9 = CONTENTS INPUT REG 1                              */
*/*           R11, R12, R14, R15 = VOLITILE                          */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0064
*IEAVEPDE:                                                      01S0064
*   ENTRY;                          /* PURGEDQ ESTEA ROUTINE         */
@EP00064 DS    0H                                               01S0065
*   R0SAVE=PARMREG0;                /* SAVE REGS 0, 1 AND 14         */
         LR    R0SAVE,PARMREG0                                  01S0065
*   R1SAVE=PARMREG1;                /* THEY ARE DESTROYED ACROSS     */
         LR    R1SAVE,PARMREG1                                  01S0066
*   R14SAVE=R14;                    /* INNERFACES                    */
         LR    R14SAVE,R14                                      01S0067
*   RFY                                                         01S0068
*     R14 UNRSTD;                                               01S0068
*   IF PARMREG0^=12                 /* CHECK THAT THE SDWA EXISTS    */
*     THEN                          /* AN SDWA HAS BEEN PASSED       */
         C     PARMREG0,@CF01429                                01S0069
         BE    @RF00069                                         01S0069
*     DO;                                                       01S0070
*       WAPTR=SDWAPARM;             /* R2->WORK AREA IN SVRB         */
         L     WAPTR,SDWAPARM(,SDWAPTR)                         01S0071
*       DO;                         /* SETRP                    01S0072
*                                      RECORD(YES)RECPARM(MODNAME)   */
*         RESPECIFY                                             01S0073
*          (GPR00P,                                             01S0073
*           GPR01P,                                             01S0073
*           GPR14P,                                             01S0073
*           GPR15P) RSTD;                                       01S0073
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           01S0074
*         GPR01P->SDWARCRD='1'B;    /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                     01S0075
*         GPR15P=ADDR(MODNAME);     /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,MODNAME                                   01S0076
*         GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD   01S0077
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                01S0077
*         RESPECIFY                                             01S0078
*          (GPR00P,                                             01S0078
*           GPR01P,                                             01S0078
*           GPR14P,                                             01S0078
*           GPR15P) UNRSTD;                                     01S0078
*       END;                                                    01S0079
*     END;                                                      01S0080
*   ELSE                                                        01S0081
*     ;                             /* NO SDWA EXISTS                */
@RF00069 DS    0H                                               01S0082
*   NUMERR=NUMERR+1;                /* INCREMENT THE ERROR COUNT     */
         LA    @12,1                                            01S0082
         SLR   @11,@11                                          01S0082
         IC    @11,NUMERR(,WAPTR)                               01S0082
         ALR   @12,@11                                          01S0082
         STC   @12,NUMERR(,WAPTR)                               01S0082
*                                                               01S0083
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = TO ISSUE STATUS TO START SRB'S IF THEY HAVE BEEN   */
*/*           STOPPED IN THE MAINLINE ROUTINE, AND RESTORE REGS      */
*/*           0 AND 1 TO ORIGINAL CONTENTS ON ENTRY.                 */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*           R2 = ADDRESS PURGE DQ WORK AREA                        */
*/*           R8 = ORIGINAL CONTENTS R0                              */
*/*           R9 = ORIGINAL CONTENTS R1                              */
*/*           R10= BASE REGISTER                                     */
*/*                                                                  */
*/*     OUTPUT =                                                     */
*/*           R0 = RESTORED                                          */
*/*           R1 = RESTORED                                          */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0083
*   IF STPSRB='1'B                  /* CHECK STATUS OF SRB'S         */
*     THEN                          /* SRB'S HAVE BEEN STOPPED       */
         TM    STPSRB(WAPTR),B'01000000'                        01S0083
         BNO   @RF00083                                         01S0083
*     DO;                                                       01S0084
*       GEN( STATUS START,SRB);     /* START UP THE SRBS             */
          STATUS START,SRB
*       STPSRB='0'B;                /* TURN OFF STOPPED FLAG         */
         NI    STPSRB(WAPTR),B'10111111'                        01S0086
*     END;                                                      01S0087
*   SDWAPTR=R1SAVE;                 /* RESTORE SDWA POINTER          */
@RF00083 LR    SDWAPTR,R1SAVE                                   01S0088
*   PARMREG0=R0SAVE;                /* RESTORE REG 0                 */
         LR    PARMREG0,R0SAVE                                  01S0089
*                                                               01S0090
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = IF AN ERROR OCCURRED DURING THE PROCESSING OF AN   */
*/*           RMTR ROUTINE INVOKED BY PURGEDQ, THEN THE ADDRESS OF   */
*/*           THE ASSOCIATED SRB WILL BE RECORDED IN THE SDWAM AND   */
*/*           A RETRY WILL BE ATTEMPTED.  IF THIS IS THE FIRST ERROR */
*/*           OCCURRENCE, A RETRY WILL ALSO BE ATTEMPTED.  OTHERWISE */
*/*           THE ERROR WILL BE PERCOLATED TO THE CALLER.            */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*           R0 = 12, IF NO SDWA                                    */
*/*           R1 = ADDRESS SDWA                                      */
*/*           R2 = ADDRESS PURGE DQ WORK AREA                        */
*/*           R10= BASE REGISTER                                     */
*/*                                                                  */
*/*     OUTPUT =                                                     */
*/*           R8, R9, R14 AND R15 = VOLITILE                         */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0090
*   RFY                                                         01S0090
*     SRBADR RSTD;                                              01S0090
*   SRBADR=JRNSRB;                  /* GET THE JOURNALLED SRB ADDR   */
         L     SRBADR,JRNSRB(,WAPTR)                            01S0091
*   IF SRBADR^=0                    /* CHECK IF RMTR IN PROCESS      */
*     THEN                          /* MAINLINE IN RMTR              */
         LTR   SRBADR,SRBADR                                    01S0092
         BZ    @RF00092                                         01S0092
*     DO;                                                       01S0093
*       IF PARMREG0^=12             /* AND THE SDWA EXISTS           */
*         THEN                      /* RECORD THE SRB IN THE SDWA    */
         C     PARMREG0,@CF01429                                01S0094
         BE    @RF00094                                         01S0094
*         DO;                                                   01S0095
*           RFY                                                 01S0096
*             TEMPREG RSTD;                                     01S0096
*           TEMPREG=SDWAURAL;       /* GET OFFSET INTO VAR REC AREA  */
         SLR   TEMPREG,TEMPREG                                  01S0097
         IC    TEMPREG,SDWAURAL(,SDWAPTR)                       01S0097
*           SDWAVRA(TEMPREG+1:TEMPREG+4)=SRBADR;/* STORE JOURNALLED
*                                      SRB IN SDWA           @ZA15356*/
         LR    @12,SDWAPTR                                      01S0098
         ALR   @12,TEMPREG                                      01S0098
         STCM  SRBADR,15,SDWAVRA(@12)                           01S0098
*           TEMPREG=TEMPREG+4;      /* UPDATE SDWA USER AREA INDEX   */
         AL    TEMPREG,@CF00071                                 01S0099
*           SDWAURAL=TEMPREG;       /* INCREMENT USED BYTE COUNT     */
         STC   TEMPREG,SDWAURAL(,SDWAPTR)                       01S0100
*           RFY                                                 01S0101
*            (SRBADR,                                           01S0101
*             TEMPREG) UNRSTD;                                  01S0101
*         END;                                                  01S0102
*       CALL RETRY;                 /* SET UP FOR RETRY              */
@RF00094 BAL   @14,RETRY                                        01S0103
*     END;                                                      01S0104
*   ELSE                            /* IF NOT IN MIDDLE OF RMTR      */
*     IF NUMERR^>1                  /* BUT NO RETRY ATTEMPTED PREV   */
*       THEN                                                    01S0105
         B     @RC00092                                         01S0105
@RF00092 CLI   NUMERR(WAPTR),1                                  01S0105
         BH    @RF00105                                         01S0105
*       CALL RETRY;                 /* SET UP FOR RETRY              */
         BAL   @14,RETRY                                        01S0106
*     ELSE                                                      01S0107
*       CALL PERC;                  /* OTHERWISE, PERCOLATE          */
         B     @RC00105                                         01S0107
@RF00105 BAL   @14,PERC                                         01S0107
*   RFY                                                         01S0108
*     R14 UNRSTD;                                               01S0108
*                                                               01S0109
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = THIS SEGMENT IS ENTERED ON A RETRY REQUEST.  IT    */
*/*           WILL ESTABLISH THE CORRECT ENVIRONMENT AND REGISTERS   */
*/*           BEFORE PROCEEDING TO THE MAIN PURGEDQ ENTRY POINT.     */
*/*                                                                  */
*/*     ENTRY POINT = IEAVEPDS                                       */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*           R10= BASE REGISTER                                     */
*/*                                                                  */
*/*     OUTPUT =                                                     */
*/*           R0, R1, R14 AND R15 = ORIGINAL CONTENTS WHEN PURGE DQ  */
*/*                                 ORIGINALLY ISSUED                */
*/*           R2 = PURGE DQ WORK AREA ADDRESS                        */
*/*           R5, R6, R11-R13 = VOLITILE                             */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0109
*IEAVEPDS:                                                      01S0109
*   ENTRY;                                                      01S0109
@EP00109 DS    0H                                               01S0109
@EC00109 DS    0H                                               01S0110
*   RFY                                                         01S0110
*    (RBSECPTR,                                                 01S0110
*     R0,                                                       01S0110
*     R1,                                                       01S0110
*     R15,                                                      01S0110
*     WAPTR,                                                    01S0110
*     PURGEDQR) RSTD;                                           01S0110
*   GEN CODE REFS(PSALITA,FLC);                                 01S0111
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=('OBTAIN LOCAL LO
               CK BEFORE ENTERING PURGEDQ',IEAVEPDR(IEAVEPDS))
*   RBSECPTR=PSATOLD->TCBRBP;                                   01S0112
         L     @14,PSATOLD                                      01S0112
         L     RBSECPTR,TCBRBP(,@14)                            01S0112
*   WAPTR=ADDR(RBEXSAVE);           /* FIND PURGEDQ WORK AREA IN RB  */
         LA    WAPTR,RBEXSAVE(,RBSECPTR)                        01S0113
*   RFY                                                         01S0114
*     R14 RSTD;                                                 01S0114
*   R14=RETADDR1;                   /* RET ADDR OF PURGEDQ CALLER    */
         L     R14,RETADDR1(,WAPTR)                             01S0115
*   R0=RBGRS0;                      /* RESTORE REGS 0,1 AND 15       */
         L     R0,RBGRS0(,RBSECPTR)                             01S0116
*   R1=RBGRS1;                      /* FROM THE CURRENT RB           */
         L     R1,RBGRS1(,RBSECPTR)                             01S0117
*   R15=RBGRS15;                                                01S0118
         L     R15,RBGRS15(,RBSECPTR)                           01S0118
*   PURGEDQR=ADDR(IGC123);          /* GET PURGEDQ ENTRY POINT ADDR  */
         L     PURGEDQR,@CA01408                                01S0119
*   GOTO PURGEDQR;                  /* GO TO PURGEDQ ENTRY POINT     */
         BR    PURGEDQR                                         01S0120
*                                                               01S0121
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = THIS SEGMENT COMMUNICATES TO RTM THAT PERCOLATION  */
*/*           IS REQUESTED.                                          */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*           R0 = 12, IF NO SDWA                                    */
*/*           R1 = ADDRESS SDWA                                      */
*/*           R2 = ADDRESS 200 BYTE WORK AREA                        */
*/*           R7 = RETURN ADDRESS TO RTM                             */
*/*           R10= BASE REGISTER                                     */
*/*                                                                  */
*/*     OUTPUT =                                                     */
*/*           R14 = RETURN ADDRESS TO RTM                            */
*/*           R15 = RETURN CODE (=0)                                 */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0121
*PERC:                                                          01S0121
*   PROC OPTIONS(NOSAVE);           /* PERCOLATION IS REQUESTED      */
PERC     DS    0H                                               01S0122
*   RFY                                                         01S0122
*     R14 UNRSTD;                                               01S0122
*   IF PARMREG0^=12                 /* IF AN SDWA HAS BEEN PASSED    */
*     THEN                          /* INDICATE PERCOLATION IN SDWA  */
         C     PARMREG0,@CF01429                                01S0123
         BE    @RF00123                                         01S0123
*     DO;                           /* SETRP WKAREA(R1)RC(0)         */
*       RESPECIFY                                               01S0125
*        (GPR00P,                                               01S0125
*         GPR01P,                                               01S0125
*         GPR14P,                                               01S0125
*         GPR15P) RSTD;                                         01S0125
*       GPR01P=R1;                                              01S0126
*       GPR01P->SDWARCDE=0;         /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           01S0127
*       RESPECIFY                                               01S0128
*        (GPR00P,                                               01S0128
*         GPR01P,                                               01S0128
*         GPR14P,                                               01S0128
*         GPR15P) UNRSTD;                                       01S0128
*     END;                                                      01S0129
*   ELSE                                                        01S0130
*     RETCODE=0;                    /* SET R15 = 0 FOR PERCOLATION   */
         B     @RC00123                                         01S0130
@RF00123 SLR   RETCODE,RETCODE                                  01S0130
*   RFY                                                         01S0131
*     R14 RSTD;                                                 01S0131
@RC00123 DS    0H                                               01S0132
*   R14=R14SAVE;                    /* RESTORE RETURN ADDRESS        */
         LR    R14,R14SAVE                                      01S0132
*   END PERC;                       /* RETURN TO CALLER              */
@EL00002 DS    0H                                               01S0133
@EF00002 DS    0H                                               01S0133
@ER00002 BR    @14                                              01S0133
*                                                               01S0134
*/********************************************************************/
*/*                                                                  */
*/*     PURPOSE = THIS SEGMENT COMMUNICATES TO RTM THAT A RETRY IS   */
*/*           WANTED.  THIS MAY BE DONE BY ISSUING THE SETRP         */
*/*           MACRO IF AN SDWA WAS PROVIDED, OR BY SETTING UP        */
*/*           REGISTERS 0 AND 15 IF NONE WAS PROVIDED.               */
*/*                                                                  */
*/*     INPUT =                                                      */
*/*           R0 = 12, IF NO SDWA                                    */
*/*           R1 = ADDRESS SDWA                                      */
*/*           R7 = RETURN ADDRESS TO RTM                             */
*/*           R10 = BASE REGISTER                                    */
*/*                                                                  */
*/*     OUTPUT =                                                     */
*/*           R0 = ADDRESS SETUP ROUTINE (=IEAVEPDS)                 */
*/*           R12= VOLITILE                                          */
*/*           R14= CALLER'S RETURN ADDRESS                           */
*/*           R15= RETURN CODE (=4)                                  */
*/*           ALL OTHER REGISTERS UNCHANGED                          */
*/*                                                                  */
*/********************************************************************/
*                                                               01S0134
*RETRY:                                                         01S0134
*   PROC OPTIONS(NOSAVE);           /* RETRY IS WANTED               */
RETRY    DS    0H                                               01S0135
*   RFY                                                         01S0135
*     R14 UNRSTD;                                               01S0135
*   IF PARMREG0^=12                 /* IF AN SDWA WAS PASSED         */
*     THEN                          /* INDICATE RETRY VIA SETRP      */
         C     PARMREG0,@CF01429                                01S0136
         BE    @RF00136                                         01S0136
*     DO;                           /* SETRP WKAREA(R1)FRESDWA(YES)RC
*                                      (4)RETADDR(IEAVEPDS)DUMP(NO)  */
*       RESPECIFY                                               01S0138
*        (GPR00P,                                               01S0138
*         GPR01P,                                               01S0138
*         GPR14P,                                               01S0138
*         GPR15P) RSTD;                                         01S0138
*       GPR01P=R1;                                              01S0139
*       GPR01P->SDWARCDE=4;         /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                           01S0140
*       GPR01P->SDWARTYA=ADDR(IEAVEPDS);/* SAVE RETRY ADDRESS        */
         L     @12,@CA01433                                     01S0141
         ST    @12,SDWARTYA(,GPR01P)                            01S0141
*       GPR01P->SDWAFREE='1'B;      /* SET FLAG TO FREE SDWA         */
         OI    SDWAFREE(GPR01P),B'00000100'                     01S0142
*       GPR01P->SDWAREQ='0'B;       /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                      01S0143
*       RESPECIFY                                               01S0144
*        (GPR00P,                                               01S0144
*         GPR01P,                                               01S0144
*         GPR14P,                                               01S0144
*         GPR15P) UNRSTD;                                       01S0144
*     END;                                                      01S0145
*   ELSE                                                        01S0146
*     DO;                           /* SET UP REG 0 FOR RETRY        */
         B     @RC00136                                         01S0146
@RF00136 DS    0H                                               01S0147
*       R0=ADDR(IEAVEPDS);          /* PUT ADDR OF SETUP RTN IN R0   */
         L     R0,@CA01433                                      01S0147
*       R15=4;                      /* SET RETURN CODE=4=RETRY       */
         LA    R15,4                                            01S0148
*     END;                                                      01S0149
*   RFY                                                         01S0150
*     R14 RSTD;                                                 01S0150
@RC00136 DS    0H                                               01S0151
*   R14=R14SAVE;                    /* RESTORE RETURN ADDRESS        */
         LR    R14,R14SAVE                                      01S0151
*   END RETRY;                                                  01S0152
@EL00003 DS    0H                                               01S0152
@EF00003 DS    0H                                               01S0152
@ER00003 BR    @14                                              01S0152
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                    01S0153
*     GPR01P PTR(31) REG(1),                                    01S0153
*     GPR14P PTR(31) REG(14),                                   01S0153
*     GPR15P PTR(31) REG(15);                                   01S0153
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0154
*     I031F FIXED(31) BASED,                                    01S0154
*     I031P PTR(31) BASED,                                      01S0154
*     I015F FIXED(15) BASED,                                    01S0154
*     I015P PTR(15) BASED,                                      01S0154
*     I008P PTR(8) BASED,                                       01S0154
*     I001C CHAR(1) BASED;                                      01S0154
*   END IEAVEPDR                                                01S0155
*                                                               01S0155
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (PDRFL1  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSUT5  (INITDCL )                                       */
*                                                               01S0155
*       ;                                                       01S0155
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IEAVEPDR CSECT
         DS    0F
@CF00071 DC    F'4'
@CF01429 DC    F'12'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEAVEPDR CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA01433 DC    A(IEAVEPDS)
@CV01407 DC    V(IEAVESQV)
@CA01408 DC    A(IGC123)
         DS    0D
MODNAME  DS    CL24
         ORG   MODNAME
MODULN   DC    CL8'IEAVEPD0'
CSECTN   DC    CL8'IGC123'
ESTAEN   DC    CL8'IEAVEPDE'
         ORG   MODNAME+24
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RBSECPTR EQU   @05
SDWAPTR  EQU   @01
TCBPTR   EQU   @05
WAPTR    EQU   @02
R14SAVE  EQU   @07
R14      EQU   @14
R0       EQU   @00
R1       EQU   @01
PURGEDQR EQU   @06
R0SAVE   EQU   @08
R1SAVE   EQU   @09
PARMREG0 EQU   @00
PARMREG1 EQU   @01
RETCODE  EQU   @15
R15      EQU   @15
TEMPREG  EQU   @08
SRBADR   EQU   @09
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
RETSAVE  EQU   @06
         EXTRN IGC123
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBEXSAVE EQU   XRBESA
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00012 EQU   RBSECT+10
@NM00013 EQU   @NM00012
RBTRSVRB EQU   @NM00013
@NM00015 EQU   @NM00012+1
RBETXR   EQU   @NM00015
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00022 EQU   RBSECT+28
IRBEND   EQU   RBSECT+96
@NM00026 EQU   RBSECT+96
RBRSV138 EQU   @NM00026+7
RBRSV150 EQU   RBSECT+167
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
WKAREA   EQU   0
PDQ2LIST EQU   WKAREA
PDQ2AST  EQU   PDQ2LIST+4
FLAGS1   EQU   WKAREA+20
STPSRB   EQU   FLAGS1
NUMERR   EQU   WKAREA+21
JRNSRB   EQU   WKAREA+28
RETADDR1 EQU   WKAREA+36
I256C    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
*                                      START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00027 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
RETADDR2 EQU   WKAREA+32
LASTSRB  EQU   WKAREA+24
@NM00105 EQU   FLAGS1
MATCH    EQU   FLAGS1
PURGHDR  EQU   WKAREA+16
STAEEND  EQU   WKAREA+16
PDQ2RMTR EQU   PDQ2LIST+12
PDQ2TCB  EQU   PDQ2AST+4
PDQ2AS   EQU   PDQ2AST+2
@NM00104 EQU   PDQ2AST
PDQ2ASCB EQU   PDQ2LIST
STAEBGN  EQU   WKAREA
@NM00103 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00102 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00101 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00100 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00075 EQU   SDWA+512
@NM00074 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00073 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00072 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00071 EQU   SDWADDAT+3
@NM00070 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00069 EQU   SDWADDAT+1
@NM00068 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00067 EQU   SDWADUMP+2
@NM00066 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00065 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00064 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00063 EQU   SDWAACF3
@NM00062 EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00061 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00060 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00059 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00058 EQU   SDWA+239
@NM00057 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00056 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00055 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00054 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00053 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00052 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00051 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00050 EQU   SDWAINC2
@NM00049 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00048 EQU   SDWAILC2
@NM00047 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00046 EQU   SDWANXT2
@NM00045 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00044 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00043 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00042 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00041 EQU   SDWAINC1
@NM00040 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00039 EQU   SDWAILC1
@NM00038 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00037 EQU   SDWANXT1
@NM00036 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00035 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00034 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00033 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00032 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00031 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00030 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00029 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00028 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SIRBEND  EQU   RBSECT+168
SVRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBSCBB   EQU   RBSECT+144
TIRBEND  EQU   @NM00026+8
PRBEND   EQU   @NM00026+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00026+6
RBRSV136 EQU   @NM00026+4
RBRSV135 EQU   @NM00026
@NM00025 EQU   RBSECT+32
@NM00024 EQU   @NM00022+1
@NM00023 EQU   @NM00022
RBPGMQ1  EQU   RBPGMQ+1
@NM00021 EQU   RBPGMQ
@NM00020 EQU   RBSECT+16
@NM00019 EQU   @NM00015
@NM00018 EQU   @NM00015
RBIQETP  EQU   @NM00015
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00015
@NM00017 EQU   @NM00015
@NM00016 EQU   @NM00015
RBPMSVRB EQU   @NM00013
RBATNXIT EQU   @NM00013
@NM00014 EQU   @NM00013
RBWAITP  EQU   @NM00013
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00013
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00011 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00010 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00009 EQU   RBOPSWB2
@NM00008 EQU   XRBPSW
@NM00007 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00006 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00005 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00004 EQU   XSTAB1
@NM00003 EQU   RBBASIC+8
@NM00002 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00001 EQU   RBPRFX
@NM00099 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00098 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00097 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00096 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00095 EQU   FLCFSA
@NM00094 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00093 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00092 EQU   FLCIOA
@NM00091 EQU   FLCMCLA+15
@NM00090 EQU   FLCMCLA+14
@NM00089 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00088 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00087 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00086 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00085 EQU   FLCPER
@NM00084 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00083 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00082 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00081 EQU   FLCPIILC
@NM00080 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00079 EQU   FLCSVILC
@NM00078 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00077 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00076 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RC00105 EQU   @EC00109
@RC00092 EQU   @EC00109
@ENDDATA EQU   *
         END   IEAVEPDR,(C'PLS2111',0701,76341)
