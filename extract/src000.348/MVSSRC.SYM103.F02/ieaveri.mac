         TITLE 'IEAVERI - REMOTE IMMEDIATE SERVICE ROUTINE'
*/*IEAVERI: CHART RISGNL SR */
*/* HEADER
*/*
*/*
*/*
*/*                                                  ID: 3.1.7.13.10.3
*/* RISGNL SERVICE ROUTINE
*/*                                                  PAGE # */
*/*IEAVERI: E IEAVERI */
*/* P DISABLE EXT & I/O INT SAVE SYS MASK IN MODEL STOSM */
*/* P SAVE REG 1 IN PSA, GET LCCA AND SAVE REGS */
*/* P ESTABLISH ADDRESSABILITY AND FRR */
*/* D (NO,RINVPCCA,YES,) PCCA ADDR VALID? */
*/* D (NO,RIRC4,YES,RIBUFCON) RECEIVING CPU ONLINE? */
*/*RIRC4: P (,RIEXIT) RETURN CODE = 4 */
*/*RIBUFCON: P BUILD SENDING CPU ES BUFFER (IN SENDING CPU'S PCCA) */
*/* P WORD 0 = PARALLEL/SERIAL RMS INDICATOR */
*/* P WORD 1 = ADDR RECEIVING RTN'S PARMS */
*/* P WORD 2 = ADDR RECEIVING RTN'S ENTRY POINT */
*/* P WORD 3 = RECEIVING CPU'S PCCA ADDR */
*/*RISIGP: P PLACE EMERGENCY SIGNAL FUNCTION CODE IN REG 0 */
*/* P SAVE CALLERS RETURN REG */
*/* P SAVE OWN REGS AND EST. IEAVEDR'S ADDR. */
*/* S IEAVEDR2:ISSUE EMERGENCY SIGNAL SIGP */
*/* P RESTORE REGS SAVED */
*/* D (YES,RILOPCK,NO,) SUCCESS? (RC=0) */
*/* D (NO,RIRETCHK,YES,RISIGP) BUSY? (RC=4) */
*/*RIRETCHK: P (,RIEXIT) CLEAR RIBUFFER */
*/*RINVPCCA: P DELETE FRR FROM STACK */
*/* P RESTORE CALLER'S REGISTERS */
*/* P RESTORE CALLER'S SYSTEM MASK */
*/* S () ABEND:X'07B' DUMP SYSTEM */
*/*RILOPCK: D (NO,%SER,YES,) PARALLEL REQUEST?    */
*/* D (NO,RIWINDOW,YES,RIEXIT) HAS RECEIVING ROUTINE BEEN INITIATED ?*/
*/*%SER: D (NO,RIWINDOW,YES,RIEXIT) HAS RECEIVING ROUTINE BEEN
*/*COMPLETED ? */
*/*RIEXIT: P DELETE FRR FROM STACK */
*/* P RESTORE CALLER'S REGISTERS */
*/* P RESTORE CALLER'S SYSTEM MASK */
*/* R RETURN */
*/*RIWINDOW: P TURN ON SIGP SPIN INDICATOR */
*/* P ENABLE/DISABLE FOR ES/MFA INTERRUPTS */
*/* P TURN OFF SPIN INDICATOR */
*/* D (YES,RILOPCK,NO,) RECEIVING CPU ONLINE? */
*/*RICSOFF: P (,RIEXIT) RC=20 REG0=0 */
*/* FOOTING
*/*
*/*  */
*/*IEAVERI: END RISGNL SR */
*MODULE NAME= IEAVERI
*
*DESCRIPTIVE NAME= INTERPROCESSOR COMMUNICATION REMOTE IMMEDIATE
*                  SERVICE ROUTINE.
*
*COPYRIGHT= N/A
*
*STATUS= REL. 02.0
*
*FUNCTION= PROVIDES THE USER WITH THE NECESSARY INTERFACE TO SIGNAL
*          (SIGP) OTHER CPUS IN ORDER TO INVOKE A SPECIFIC PROGRAM
*          ON ANY OF THE ONLINE MP CONFIGURED CPUS.  REMOTE IMMEDIATE
*          SERVICE ROUTINE WILL GENERATE AN EMERGENCY SIGNAL
*          TO THE SPECIFIED CPU WHOSE EMERGENCY SIGNAL SLIH WILL
*          ROUTE CONTROL TO THE SPECIFIED PROGRAM.
*
*  OPERATION= THE RI SIGNAL SERVICE ROUTINE TESTS TO SEE IF IT WAS
*             PASSED A VALID PCCA ADDRESS.  IF THE PCCA ADDRESS
*             WAS VALID, THE PHYSICAL ADDRESS IN IN THE PCCA WILL BE
*             USED AS AN OPERAND FOR THE SIGP INSTRUCTION IN ORDER
*             TO DIRECT THE REQUEST TO THE APPROPRIATE CPU. THE REQUEST
*             CODE THAT WAS PASSED IN REGISTER 0 IS USED  TO POST A
*             BIT IN A BUFFER IN THE SENDING CPU'S PCCA.  THIS
*             BIT INDICATES TO THE RECEIVING CPU'S EMERGENCY SIGNAL
*             SLIH THAT A SPECIFIC PROGRAM IS TO BE GIVEN CONTROL
*             EITHER IN SERIAL OR PARALLEL EXECUTION MODE WITH THE
*             SENDING CPU.  OTHER INFORMATION THE SENDING CPU BUILDS
*             IN THE BUFFER IS THE ENTRY POINT ADDRESS OF THE
*             ROUTINE TO RECEIVE CONTROL, THE PCCA ADDRESS OF
*             THE PHYSICAL CPU BEING SIGNALLED, AND THE ADDRESS
*             OF A PARAMETER IF ONE WAS PROVIDED OR ZEROS.
*             AFTER BUILDING THE BUFFER, IEAVERI CALLS IEAVEDR REQUEST-
*             ING A EMERGENCY SIGNAL ORDER CODE BE SIGP'D TO THE
*             RECEIVING CPU.
*             IF THE RETURN CODE IS A 0 THE SENDING CPU SPINS ON THE
*             BIT IN THE BUFFER UNTIL THE EMERGENCY SIGNAL SLIH TURNS
*             THE BIT OFF.  IF THE REQUEST WAS A PARALLEL REQUEST
*             THE BIT WILL BE TURN OFF BEFORE GIVING THE RECEIVING
*             ROUTINE CONTROL.  IF THE REQUEST WAS A SERIAL REQUEST
*             THE BIT WILL NOT BE TURN OFF UNTIL CONTROL IS RETURNED
*             TO THE EMERGENCY SIGNAL SLIH.  WHENEVER THE EMS SLIH
*             TURNS THE BIT OFF, THE REMOTE IMMEDIATE SERVICE ROUTINE
*             WILL TERMINATE ITS SPIN AND RETURN TO THE CALLER WITH A
*             RETURN CODE OF 0.  DURING THE SPIN, THE SENDING ROUTINE
*             MUST CONTINUE TO CHECK TO SEE IF THE RECEIVING CPU IS
*             ONLINE.  IF NOT, THE CPU MUST TERMINATE ITS SPIN AND
*             GIVE ITS CALLER A RETURN CODE 20. IF THE RETURN CODE
*             FROM IEAVEDR IS 4 (BUSY CONDITION) THE IEAVEDR RTN
*             WILL BE CALLED AGAIN.  ALL OTHER RETURN CODES
*             FROM IEAVEDR WILL BE RETURNED TO IEAVERI'S CALLER.
*             IF THE SYSTEM IS A UNIPROCESSOR (NOT EQUIPPED TO SEND
*             OR RECEIVING SIGP SIGNALS) A PROGRAM EXCEPTION WILL
*             OCCUR ON THE SIGP INSTRUCTION.  DIRECT SIGNAL WILL
*             RETRY FROM ITS FRR AND RETURN THE CALLER A RETURN
*             CODE OF 16.
*
*NOTES
*  DEPENDENCIES=  THE MACHINE CHECK HANDLER MUST ISSUE ITS OWN SIGP
*                EMERGENCY SIGNAL REQUEST TO INVOKE ACR PROCESSING.
*                THE SYSTEM TERMINATION FACILITY MUST ALSO ISSUE ITS
*                OWN SIGP EMERGENCY SIGNAL.  ANY CALLER OF REMOTE
*                IMMEDIATE SERVICE ROUTINE THAT HAS A RECEIVING
*                ROUTINE THAT OPENS A WINDOW MUST OBTAIN THE SALLOC
*                LOCK BEFORE CALLING IEAVERI.
*    CHARACTER-CODE DEPENDENCIES= NONE
*  RESTRICTIONS=AVAILABLE ONLY TO SUPERVISOR STATE, ZERO PROTECT KEY
*               CALLERS.
*  REGISTER-CONVENTIONS= REFERENCE EQUATE SECTION
*  PATCH-LABEL= NONE, THIS IS A RESIDENT NUCLEUS MODULE.
*
*MODULE TYPE= PROCEDURE
*  PROCESSOR= ASSEM
*  MODULE SIZE= N/A
*  ATTRIBUTES= NUCLEUS,ZERO PROTECT KEY,DISABLED,REFRESHABLE,
*              SUPERVISOR MODE,ADDRSPC=FIXED.
*
*ENTRY POINT= IEAVERI
*  PURPOSE= TO EXECUTE A ROUTINE VIA EMERGENCY SIGNAL ON ANY OF THE
*          ONLINE MP CONFIGURED CPUS.
*  LINKAGE= THE RISGNL MACRO WHICH EXPANDS INTO A BALR 14,15.
*  INPUT= REGISTER 1 - CONTAINS THE PCCA ADDRESS.
*         REGISTER 0 - CONTAINS THE SPECIFIC REQUEST CODE.
*         REGISTER 11 - CONTAINS THE PARAMETER ADDRESS.
*         REGISTER 12 - CONTAINS THE RECEIVING ROUTINE'S ENTRY
*                       POINT ADDRESS.
*         REGISTER 14 - CONTAINS THE RETURN ADDRESS.
*         REGISTER 15 - CONTAINS THE ENTRY POINT ADDRESS AND
*                       ITS HIGH ORDER BIT INDICATES IF THE
*                       SWAIT OPTION WAS SELECTED.
*  REGISTERS SAVED= REGISTER 2 THROUGH 5.
*  REGISTER USAGE= REGISTER 1 IS USED TO PASS THE PCCA ADDR TO IEAVEDR.
*                  REGISTER 2 IS USED AS ADDRESSABILITY TO LCCA TO SAVE
*                  REGISTERS BEFORE IEAVEDR CALL.
*                  REGISTER 4 IS USED AS A WORK REGISTER.
*                  REGISTER 5 USED AS THE BASE REGISTER.
*                  REGISTER 15 IS USED AS A WORK REG AND EP TO IEAVEDR.
*  REGISTERS RESTORED= REGISTER 2 THROUGH 5.
*
*EXIT - NORMAL= IEAVERI.
*  CONDITIONS= NORMAL COMPLETION OF FUNCTION REGARDLESS OF REQUEST
*             BEING INITIATED OR NOT.
*  OUTPUT= AN INITIATED EMERGENCY SIGNAL IF SUCCESSFUL AND RETURN CODES
*         INDICATING THE STATUS.
*  RETURN CODES= AS LISTED BELOW.
*  R.C. - 0  -  FUNCTION SUCCESSFULLY INITIATED.  THE FUNCTION
*              IS NOT NECESSARILY COMPLETED UPON RETURN TO THE
*              CALLER IF THE REQUEST WAS A PARALLEL REQUEST.  CONTROL
*              WILL NOT BE RETURNED TO THE CALLER UNTIL THE RECEIVING
*              ROUTINE HAS COMPLETED FOR A SERIAL REQUEST.
*  R.C. - 4  -  FUNCTION NOT COMPLETED BECAUSE CPU THAT WAS TO RECEIVE
*              THE CALL WAS NOT ONLINE.
*  R.C. - 8  -  FUNCTION UNSUCCESSFUL.  STATUS RETURNED IN
*              REGISTER 0.
*              REGISTER 0 STATUS ON R.C. 8.
*              BIT   0 = EQUIPMENT CHECK.
*                  1-24 = RESERVED
*                    25 = STOPPED
*                    26 = OPERATOR INTERVENING
*                    27 = CHECK STOP
*                    28 = NOT READY
*                    29 = RESERVED
*                    30 = INVALID FUNCTION
*                    31 = RECEIVER CHECK
*  R.C. - 12 - NOT OPERATIONAL.  THE SPECIFIED CPU IS EITHER NOT
*              INSTALLED OR IS NOT CONFIGURED INTO THE SYSTEM OR
*              IS POWERED OFF.
*  R.C. - 16 - SIGP FUNCTION UNSUCCESSFUL.  CPU IS AN UNIPROCESSOR
*              AND DOES NOT HAVE SIGP SENDING AND RECEIVING
*              CAPABILITIES.
*
*  R/C/ - 20 - UNABLE TO COMPLETE.  THE CPU'S ALIVE BIT WAS
*             TURNED OFF DURING THE REMOTE IMMEDIATE WINDOW SPIN
*              ROUTINE.
*
*EXIT - ERROR= NONE
*  RETURN CODES= NONE.
*
*EXTERNAL REFERENCES=
*  ROUTINES= NONE
*  DATA AREAS=REMOTE IMMEDIATE BUFFER.
*  CONTROL BLOCKS=
*                 PSA - R,M.  LCCA - R,M.
*                 PCCA - R,M.  CVT - R.  CSD - R.
*
*TABLES= NONE.
*
*MACROS= ABEND, WINDOW,
*
*  SERIALIZATION= DISABLEMENT.
*
*CHANGE ACTIVITY= N/A
*
*MESSAGES= XXXXXXX - MSG. TEXT
*
*ABEND CODES= SYSTEM ABEND CODE 07B - INVALID PCCA ADDRESS.
*
***********************************************************************
IEAVERI  CSECT
*        SYMBOLIC EQUATES
REG0     EQU   0                        REGISTER 0
REG1     EQU   1                        REGISTER 1
REG2     EQU   2                        REGISTER 2
REG3     EQU   3                        REGISTER 3
REG4     EQU   4                        REGISTER 4
REG5     EQU   5                        REGISTER 5
REG6     EQU   6                        REGISTER 6
REG14    EQU   14                       REGISTER 14
REG15    EQU   15                       REGISTER 15
ZERO     EQU   0                        0 VALUE
RRCPUID1 EQU   1                        RECEIVING RTNS PCCA ADDRESS
MULTBY4  EQU   2                        SLL CONSTANT TO MULT BY 4
FUNCCDE  EQU   0                        REG 0 SIGP FUNCTION CODE
EMSCODE  EQU   3                        EMS FUNCTION CODE
RIBUFNEW EQU   3                        REG 3 - C&S REPLACE VALUE
PARLIND  EQU   3                        CC 3 PARALLEL REQUEST
SERLIND  EQU   3                        CC 3 SERIAL REQUEST
CVTREG4  EQU   4                        REG4 BASE FOR CVT
CSDREG4  EQU   4                        REGISTER 4 BASE FOR CSD
FOUR     EQU   4                        VALUE 4
BASER5   EQU   5                        REG 5 BASE FOR IEAVERP
EIGHT    EQU   8                        CONSTANT 8
PARMR11  EQU   11                       CALLERS PARAMETER ADDRESS
RECRTNEP EQU   12                       CALLERS RECEIVING ROUTINES
*                                       ENTRY POINT
RETURN   EQU   14                       CALLERS RETURN ADDRESS
RIBUFFER EQU   15                       REG 15 ADDR OF EMS BUFFER
RIBUFOLD EQU   15                       REG 15  C&S COMPERAND
RETCODE  EQU   15                       REG 15, RETURN CODE REG
TWENTY   EQU   20                       RETURN CODE 20 - SPINNING
*                                       ON CPU THAT DIED
DISABLE  EQU   X'FC'                    DISABLE MASK
SIGPNACT EQU   X'BF'                    MASK OFF SPIN INDICATOR
XFF      EQU   X'FF'                    BYTE BASK OF FF
         EJECT
         USING *,REG15
BASEADR  EQU   *
IEAVERI  MODID BR=YES
         USING LCCA,REG1
         USING PSA,0
         STNSM PSAIPCR+1,DISABLE        DISABLE CALLER & SAVE SYS MASK
         ST    REG1,PSAIPCSA            SAVE CALLERS REG 1
         L     REG1,PSALCCAV            LOCATE LCCA
         STM   REG2,REG5,LCCARIR2       SAVE CALLERS REGS 2-5
         DROP  REG1
         L     REG1,ARIF                ADDR OF IEAVERI'S RECOVERY RTN
         SETFRR A,FRRAD=(1),WRKREGS=(3,4)
         OI    PSASUP2,PSAIPCRI         RI'S SUPER BIT
         L     REG1,PSAIPCSA            RESTORE CALLERS REG 1
         USING PCCA,REG1
         LR    BASER5,REG15             EST ADDRESSABILITY AND SAVE
*                                       SWAIT OPTION
         USING BASEADR,BASER5
         DROP  REG15
         EJECT
**********************************************************************
*        ROUTINE VALIDITY CHECKS THE PCCA ADDRESS
**********************************************************************
         LTR   REG1,REG1                IS PCCA ADDRESS 0?
         BZ    RINVPCCA                 INVALID PCCA ADDRESS
         L     CVTREG4,CVTPTR           LOCATE THE CVT
         USING CVT,REG4
         L     REG3,CVTPCCAT            LOCATE PCCAVT
         LH    REG2,PCCACPUA            OBTAIN PURPORTED CPUID
         SLL   REG2,MULTBY4             INDEX VALUE FOR PCCAVT
         L     REG15,0(REG2,REG3)       OBTAIN PCCA ADDRESS FOR CPUID
         CR    REG1,REG15               DOES PCCA ADDRESSES AGREE?
         BNE   RINVPCCA                 INVALID PCCA ADDRESS
**********************************************************************
*        PCCA IS A VALID PCCA ADDRESS, DETERMINE IF CPU IS ALIVE
**********************************************************************
         L     CSDREG4,CVTCSD           LOCATE THE CSD
         USING CSD,REG4
         LH    REG3,CSDCPUAL            LOCATE SYSTEM ALIVE BITS
         LH    REG4,PCCACAFM            LOCATE THE RECEIVING CPU ALIVE
*                                       MASK
         NR    REG4,REG3                AND THE MASKS TO DETERMINE IF
*                                       THE RECEIVING CPU IS ONLINE
         BZ    RIRC4                    THE RECEIVING CPU IS NOT ONLINE
         DROP  REG4
         L     REG4,PSAPCCAV            LOCATE SENDING CPUS PCCA
         DROP  REG1
         USING PCCA,REG4
         ST    PARMR11,PCCAEMSP         CALLERS PARAMETER ADDR
         ST    RRCPUID1,PCCAEMSA        RECEIVING CPUS PCCA ADDR
         ST    RECRTNEP,PCCAEMSE        RECEIVING ROUTINES ENTRY POINT
         ST    FUNCCDE,PCCAEMSI         INSERT THE FUNCTION CODE
*                                       ON IN THE REMOTE IMMEDIATE
*                                       BUFFER IN SENDING CPUS PCCA
RIBUFCON EQU   *
         L     REG2,PSALCCAV           OBTAIN LCCA FOR SAVING REGS
         ST    REG14,LCCADSR2-LCCA(REG2) SAV R14 IN IEAVEDR'S S.A.
         ST    REG1,LCCADSR3-LCCA(REG2) SAV R1 IN IEAVEDR'S S.A.
         ST    REG5,LCCADSR4-LCCA(REG2) SAV R5 (BASE REG)
RISIGP   EQU   *
         LA    REG0,EMSCODE             LOAD EMS FUNCTION CODE
         L     REG2,CVTPTR              SET CVT ADDR IN R2 FOR IEAVEDR
         L     REG15,AIEAVDR2           IEAVEDR'S SECONDARY ENTRY
         L     REG5,AIEAVEDR            ESTABLISH BASE FOR IEAVEDR
         BALR  REG14,REG15              ENTER IEAVEDR AT SECONDARY ENTY
         L     REG2,PSALCCAV            OBTAIN LCCA FOR RESTORING REGS
         L     REG14,LCCADSR2-LCCA(REG2) RESTORE RETURN REG
         L     REG5,LCCADSR4-LCCA(REG2) RESTORE BASE REG
         L     REG4,PSAPCCAV            RE-OBTAIN PCCA'S ADDRESS
         LTR   RETCODE,RETCODE          WAS DIRECT SIGNAL SUCCESSFUL
         BZ    RILOPCK                  SUCCESSFUL SIGP INITIATED
         C     RETCODE,BUSY             WAS SIGP TEMPRORARY BUSY
         BNE   RIRETCHK                 NOT BUSY, CONTINUE RC CHECK
         L     REG1,LCCADSR3-LCCA(REG2) RESTORE RECEIVING CPU'S PCCA
         B     RISIGP                   REPEAT SIGP UNTIL TEMPORARY
*                                       BUSY CONDITION CLEARS
RIRETCHK EQU   *
         LA    REG1,ZERO               GET A ZERO VALUE
         ST    REG1,PCCAEMSI           CLEAR EMS INDICATORS
         ST    REG1,PCCAEMSA           ZERO OUT PCCA ADDR
         B     RIEXIT                   EXIT
**********************************************************************
*        RECEIVING CPU IS LOGICALLY NOT ONLINE - R.C. 4              *
**********************************************************************
RIRC4    EQU   *
         LA    RETCODE,FOUR             RETURN CODE FOUR NOT ONLINE
         B     RIEXIT                   RETURN TO CALLER
         EJECT
RINVPCCA EQU   *
         SETFRR D,WRKREGS=(3,4)         DELETE IEAVERPS FRR
         NI    PSASUP2,XFF-PSAIPCRI     TURN OFF RI'S SUPER BIT
         L     REG2,PSALCCAV            LOCATE LCCA
         USING LCCA,REG2
         LM    REG2,REG5,LCCARIR2       RESTORE CALLERS REGS 2-5
         EX    REG0,PSAIPCR             RESTORE CALLERS SYSTEM MASK
         ABEND X'07B',DUMP,,SYSTEM
         EJECT
RILOPCK  EQU   *
         L     REG2,LCCADSR3-LCCA(REG2) RESTORE RECEIVING CPU'S PCCA
*                                       FOR WINDOW SPIN RTN
RILOPCK1 EQU   *
         L     RIBUFOLD,PCCAEMSI        OBTAIN CURRENT BUFFER VALUE
         ALR   RIBUFOLD,RIBUFOLD        BUFFER HAS SOME VALUE
         BZ    RIEXIT                   BUFFER WAS EMPTY
*                                       NOTE IF BUFFER EMPTY, R15=0
         BC    PARLIND,RIWINDOW         PARALLEL REQUEST
         ALR   RIBUFOLD,RIBUFOLD        NOT PARALLEL, TEST SERIAL
         BC    SERLIND,RIWINDOW         SERIAL REQUEST
*                                       EITHER SERIAL OR PARALLEL
*                                       BUT RECEIVING RTN HAS COMPLETED
*                                       OR HAS BEEN INITIATED.
         LA    RETCODE,ZERO             SET R15 TO A RETURN CODE 0
RIEXIT   EQU   *
         SETFRR D,WRKREGS=(3,4)         DELETE IEAVERPS FRR
         NI    PSASUP2,XFF-PSAIPCRI     TURN OFF RI'S SUPER BIT
         L     REG2,PSALCCAV
         USING LCCA,REG2
         LM    REG2,REG5,LCCARIR2       RESTORE CALLERS REGS 2-5
         DROP  REG2
         EX    REG0,PSAIPCR             RESTORE CALLERS SYSTEM MASK
         BR    RETURN                   RETURN TO CALLER
RIWINDOW EQU   *
         L     REG1,PSALCCAV            LOCATE LCCA
         USING LCCA,REG1
         OI    LCCASPN1,LCCASIGP        INDICATE RI SPIN BEING ENTERED
         L     REG0,PSAIPCR             SAVE LOW CORE VALUE IN CASE OF
*                                       AN INTERRUPT
         WINDOW LCCAICR0                OPEN A WINDOW FOR MFA AND EMS
         ST    REG0,PSAIPCR             RESTORE CALLERS SYSTEM MASK
         NI    LCCASPN1,SIGPNACT        TURN OFF RI SPIN INDICATOR
         L     REG1,CVTPTR
         USING CVT,REG1
         L     REG15,CVTCSD             LOCATE THE CSD
         USING CSD,REG15
         LH    REG3,CSDCPUAL            LOCATE THE CPU ALIVE MASK
         DROP  REG4
         USING PCCA,REG2
         LH    REG1,PCCACAFM            CHECK RECEIVING CPUS ALIVE MASK
         DROP  REG2
         USING PCCA,REG4
         NR    REG1,REG3                AND THE TWO MASKS
         BNZ   RILOPCK1                 RECEIVING CPU STILL ON LINE
RICSOFF  EQU   *
         ST    REG1,PCCAEMSI            COMPARE AND SWAP RI OFF
         ST    REG1,PCCAEMSA            ZERO OUT PCCA ADDR
         LA    RETCODE,TWENTY           RECEIVING CPU NO LONGER ALIVE
         B     RIEXIT                   RETURN TO CALLER
         DS    0F
AIEAVEDR DC    V(IEAVEDR)               IEAVEDR'S MAIN ENTRY POINT
AIEAVDR2 DC    V(IEAVEDR2)              IEAVEDR'S 2ND ENTRY POINT FOR
*                                       IEAVERI AND IEAVERP
BUSY     DC    F'4'                     CONSTANT TO TEST FOR BUSY COND.
RC16     DC    F'16'                    CONSTANT TO TEST FOR RC 16.
ARIF     DC    V(IEAVEIP1)              IEAVERIS FRR
         EJECT
         IHAFRRS
         IHAPCCA
         IHALCCA
         IHACSD
         IHAPSA
         CVT   LIST=YES,DSECT=YES,PREFIX=NO
         END   IEAVERI
