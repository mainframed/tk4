         TITLE 'IEAVEE3R- EXTERNAL FLIH RECOVERY ROUTINE (III)'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME =     IEAVEE3R
*
*02*     CSECT-NAME =   IEAVEE3R
*
*01*  DESCRIPTIVE-NAME =     EXTERNAL FLIH RECOVERY ROUTINE 3
*
*01*  COPYRIGHT =  NONE
*
*01*  STATUS =     VERSION 1
*
*01*  FUNCTION =
*        WHEN RECOVERY IS INITIATED FOR THE EXTERNAL FIRST LEVEL
*        INTERRUPT HANDLER (LEVEL 2 OF RECURSION), THE SUPER FRR WILL
*        INDICATE A RETRY TO IEAVEE3R.  THIS ROUTINE WILL CLEAR THE IPC
*        EMS RECURSION FLAG AND ALLOW PERCOLATION TO THE PREVIOUS
*        LEVEL OF RECOVERY.
*
*02*     OPERATION =
*             CLEAR EMS SLIH RECURSION FLAG;
*             FLIP THE FRR STACK TO THE EXT FLIH (2) STACK;
*             SET COMPLETION CODE IN REG 1 FOR ABEND;
*             EXIT TO IEAVEABD PERFORM ABEND;
*
*01*   NOTES =
*
*02*     DEPENDENCIES =
*             RTM:
*             RECOVERY IS CONTROLLED BY USE OF THE FRR STACK MECHANISM.
*
*             IEAVESVR:
*             THE SVC FLIH RECOVERY ROUTINE CONTAINS A COMMON
*             SECTION, STARTING AT THE EXTERNAL LABEL IEAVEABD,
*             WHICH WILL ABEND THE CURRENT TASK, AND PERCOLATE
*             THE ERROR.
*
*             IPC:
*             THE RECURSION FLAG FOR THE EMS SLIH MUST BE
*             CLEARED TO MAKE THE FUNCTION OPERABLE.
*
*03*        CHARACTER-CODE-DEPENDENCIES = NONE
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS =   SEE EQUATE SECTION OF MODULE
*
*02*     PATCH-LABEL = NONE
*
*01*  MODULE-TYPE =     PROCEDURE
*
*02*     PROCESSOR =    ASSEMBLER
*
*02*     MODULE-SIZE =  24 BYTES
*
*02*     ATTRIBUTES =   NUCLEUS
*                       REUSABLE
*                       REENTRANT
*                       DISABLED
*                       ZERO PROTECT KEY
*                       SUPERVISOR MODE
*
*01*  ENTRY-POINT =     IEAVEE3R
*
*02*     PURPOSE =      THIS IS THE ONLY ENTRY TO IEAVEE3R
*
*02*     LINKAGE =      SUPER FRR WILL INDICATE A RETRY TO IEAVEE3R.
*                       RTM WILL PASS CONTROL VIA BR 15.
*
*02*     INPUT =
*
*03*          ENVIRONMENT =  DISABLED
*                            SUPERVISOR
*                            KEY 0
*                            NO LOCKS HELD
*
*03*          DATA =    DATA AREAS IN PSA
*
*03*          REGISTERS =    REG 15 = ENTRY POINT ADDRESS
*
*02*     OUTPUT =
*
*03*          DATA =    CURRENT FRR STACK = EXT FLIH (2) STACK
*                       IPC EMS SLIH FLAGS CLEARED
*
*03*          REGISTERS =
*                       REG 1 = ABEND CODE
*                       REG 15= ADDR IEAVEABD
*
*02*     REGISTERS-SAVED = NONE
*
*02*     REGISTER-USAGE = REG 1 = ABEND CODE
*                         REG 15= ADDRESS IEAVEABD
*
*02*     REGISTERS-RESTORED = ALL AS ON ENTRY EXCEPT REG 1  & 15
*
*01*  EXIT-NORMAL = TO IEAVEABD WHO ISSUES AN SVC 13
*
*02*     CONDITIONS = THE CURRENT TASK MUST BE TERMINATED FOR
*                     RECOVERY PURPOSES.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR =      NONE
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES =
*             IEAVEABD -- (ON EXIT) TO ISSUE AN SVC 13
*
*             INVSRTRY -- RSM FUNCTIONAL RECOVERY ROUTINE
*                  INPUT=
*                       DATA=      NONE
*                       REGISTERS=
*                                  R10= ENTRY POINT ADDRESS
*                                  R11= RETURN ADDRESS
*                  OUTPUT=
*                       DATA=      NONE
*                       REGISTERS=
*                                  R15= UNCHANGED
*
*02*     DATA-AREAS =
*             PSACSTK   -- CURRENT FRR STACK POINTER
*             PSAESTK2  -- EXT FLIH (2) STACK POINTER
*             PSAIPCE2  -- EMS SLIH RECURSION FLAG
*
*02*     CONTROL-BLOCKS =    PSA R/W
*
*01*  TABLES = NONE
*
*01*  MACROS = NONE
*
*01*  SERIALIZATION =   DISABLE
*
*01*  CHANGE-ACTIVITY = Y021104
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = X'3FC'
*
**** END OF SPECIFICATIONS ***/
         EJECT
IEAVEE3R CSECT
      SPACE 2
*/*IEAVEE3R: CHART EXT FLIH (3) FRR */
*/* HEADER
*/*
*/*
*/*
*/*                                                 SECTION 3.1.8.3
*/* EXT FLIH (III) RECOVERY ROUTINE
*/*                                                 PAGE # */
*/* E ENTRY IEAVEE3R */
*/* P CLEAR EMS SLIH RECURSION FLAG */
*/* P FLIP THE FRR STACK TO EXT (2) STACK */
*/* P SET ABEND CODE IN REG 1 FOR SVC 13 */
*/* P EXIT TO IEAVEABD TO PERFORM ABEND */
*/* R IEAVEABD */
*/* FOOTING
*/*
*/*  */
*/*IEAVEE3R: END EXTFLIH (3) FRR */
         EJECT
***********************************************************************
*                                                                     *
*                            EQUATES                                  *
*                                                                     *
***********************************************************************
EXTCODE  EQU   X'3FC'             EXTERNAL FLIH ABEND CODE
CXFF     EQU   X'FF'              CONSTANT VALUE = X'FF'
CODEREG  EQU   1                  REG 1 = ABEND CODE
CCABASE  EQU   1                  BASE TO LCCA
R10      EQU   10                 GENERAL REGISTER 10
R11      EQU   11                 GENERAL REGISTER 11
R15      EQU   15                 GENERAL REGISTER 15
***********************************************************************
*                                                                     *
*                        IEAVEE3R MAINLINE                            *
*                                                                     *
***********************************************************************
         USING PSA,0
         USING    *,R15           REG 15 = ENTRY POINT ADDRESS
         NI    PSASUP2,CXFF-PSAIPCE2
*                                 CLEAR EMS RECURSION FLAG
         MVC   PSACSTK,PSAESTK2   CURRENT FRR STACK = EXT(2) FLIH STACK
         L     R10,AINVSR         GET THE ADDRESS OF RSM FRR
         BALR  R11,R10            GO TO RSM FRR FOR CLEANUP
         LA    CODEREG,EXTCODE    PUT EXT FLIH CODE IN REG 1 FOR ABEND
         L     R15,ADABEND        BRANCH TO ABEND ROUTINE LOCATED IN
         BR    R15                IEAVESVR (SVC FLIH FRR)
***********************************************************************
*                                                                     *
*                      CONSTANTS & STORAGE                            *
*                                                                     *
***********************************************************************
         EXTRN IEAVEABD
ADABEND  DC    V(IEAVEABD)        ADDRESS COMMON ABEND ROUTINE
AINVSR   DC    V(INVSRTRY)        ADDRESS RSM FUNCTIONAL RECOVERY RTN
         TITLE 'IEAVEE3R- PSA MAPPING'
         IHAPSA
         END
