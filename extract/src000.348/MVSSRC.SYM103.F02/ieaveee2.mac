         TITLE 'IEA0EF00- STAGE 1 EXIT EFFECTOR                        *
                        '
*                                                               02S0002
*/*  START OF SPECIFICATIONS ****                               02S0002
*                                                               02S0002
*01*  MODULE-NAME = IEAVEEE2                                    02S0002
*                                                               02S0002
*02*     CSECT-NAME = IEA0EF00                                  02S0002
*                                                               02S0002
*01*  DESCRIPTIVE-NAME = STAGE 2 EXIT EFFECTOR                  02S0002
*                                                               02S0002
*01*  COPYRIGHT = NONE                                          02S0002
*01*  STATUS = CHANGE LEVEL 0                                   02S0002
*                                                               02S0002
*01*  FUNCTION = THE FUNCTION OF STAGE 2 EXIT EFFECTOR IS TO QUEUE A
*     REQUEST TO SCHEDULE AN ASYNCHRONOUS EXIT. STAGE 3 EXIT EFFECTOR ,
*     ENTERED FROM THE DISPATCHER, WILL LATER PROCESS THOSE REQUESTS.
*     THE CALLER OF STAGE 2 WILL PASS EITHER AN SRB, AN RQE, OR AN IQE.
*     IQES REPRESENT GENERAL REQUESTS FOR SCHEDULING OF THE     02S0002
*     ASYNCHRONOUS EXIT. RQES ARE SPECIAL REQUESTS BY DATA MANAGEMENT
*     ROUTINES, GENERALLY SCHEDULED OUT OF I/O  APPENDAGE ROUTINES.
*     SRBS REPRESENT A SPECIAL REQUEST BY IOS TO SCHEDULE AN ERROR
*     RECOVERY PROCEDURE TO GET CONTROL UNDER A SPECIAL 'ERROR TASK' IN
*     THE ADDRESS SPACE.                                        02S0002
*     STAGE 2 WILL MERELY PLACE THE ELEMENT ON THE CORRECT QUEUE.
*                                                               02S0002
*02*     OPERATION =                                            02S0002
*        1.  IT WILL DETERMINE WHICH ELEMENT HAS BEEN PASSED TO  IT,
*        AN IQE, RQE, OR SRB.  IT WILL THEN PLACE THE ELEMENT ON THE
*        CORRECT QUEUE.                                         02S0002
*        2.  IT WILL THEN SET TWO SWITCHES, THE STAGE 2 SWITCH AND THE
*        STAGE 3 SWITCH. THE STAGE 3 SWITCH IS TESTED BY THE    02S0002
*        DISPATCHER. IT INDICATES TO HIM THAT THERE ARE ELEMENTS ON ONE
*        OF THE QUEUES, AND THUS THAT THE ADDRESS SPACE MAY HAVE
*        AVAILABLE WORK.  THIS SWITCH IS TURNED OFF BY STAGE 3 WHEN IT
*        HAS EMPTIED THE QUEUES. THE STAGE 2 SWITCH INDICATES THAT
*        SOMEONE HAS CALLED STAGE 2 EXIT EFFECTOR WITHOUT A     02S0002
*        CORRESPONDING ENTRY TO STAGE 3. LOCK MANAGER TESTS THIS SWITCH
*        WHEN RELEASING THE LOCAL LOCK.  IF IT IS ON, THEN LOCK MANAGER
*        WILL CALL MEMORY SWITCH FOR THAT ADDRESS SPACE. THIS SWITCH IS
*        TURNED OFF UNCONDITIONALLY BY STAGE 3 EXIT EFFECTOR ON EVERY
*        ENTRY.                                                 02S0002
*                                                               02S0002
*01*   NOTES =                                                  02S0002
*                                                               02S0002
*02*     DEPENDENCIES =                                         02S0002
*        1.  THE CALLER MUST HOLD THE LOCAL LOCK                02S0002
*        2.  THE CALLER MUST BE ADDRESSABLE TO THE ADDRESS SPACE IN
*        WHICH THE ASYNCHRONOUS EXIT WILL BE DISPATCHED.        02S0002
*                                                               02S0002
*03*        CHARACTER-CODE-DEPENDENCIES = NO CHARACTER CODE     02S0002
*           DEPENDENCIES.                                       02S0002
*                                                               02S0002
*02*     RESTRICTIONS =                                         02S0002
*        1. THE CALLER MUST BE IN SUPERVISOR STATE, KEY ZERO.   02S0002
*                                                               02S0002
*02*     REGISTER-CONVENTIONS = REGISTER USAGE IS DECLARED IN THE
*        SEGMENT LABELED 'DECLARES'.                            02S0002
*                                                               02S0002
*02*     PATCH-LABEL = NONE                                     02S0002
*                                                               02S0002
*01*  MODULE-TYPE = PROCEDURE                                   02S0002
*                                                               02S0002
*02*     PROCESSOR = PLS2                                       02S0002
*                                                               02S0002
*02*     MODULE-SIZE = 250 BYTES                                02S0002
*                                                               02S0002
*02*     ATTRIBUTES = NUCLEUS,ZERO PROTECT KEY, REFRESHABLE, SUPERVISOR
*        MODE                                                   02S0002
*                                                               02S0002
*01*  ENTRY-POINT = IEA0EF00                                    02S0002
*                                                               02S0002
*02*     PURPOSE = MAIN ENTRY, TO QUEUE A REQUEST FOR SCHEDULING OF AN
*        ASYNCHRONOUS EXIT.                                     02S0002
*                                                               02S0002
*02*     LINKAGE =                                              02S0002
*        REGISTER 0 = ADDRESS OF SRB, IF AN SRB IS BEING PASSED.
*        OTHERWISE, IRRELEVANT.                                 02S0002
*        REGISTER 1 = 0 , IF AN SRB ADDRESS IS BEING PASSED IN R0
*                   = COMPLEMENTED ADDR OF AN IQE, IF AN IQE IS BEING
*                   PASSED.                                     02S0002
*                   = TRUE ADDRESS OF  AND RQE, IF AN RQE IS BEING
*                   PASSED.                                     02S0002
*        REGISTER 14 = RETURN ADDRESS TO THE CALLER.            02S0002
*                                                               02S0002
*02*     INPUT = NONE                                           02S0002
*02*     OUTPUT = NONE                                          02S0002
*02*     REGISTERS-SAVED = REGISTERS 0-9,11-15 ARE SAVED AT THIS ENTRY
*        POINT.                                                 02S0002
*                                                               02S0002
*                                                               02S0002
*02*     REGISTERS-RESTORED = REGISTER 0, REGISTERS 2-9,11-15 RESTORED
*        O                                                      02S0002
*                                                               02S0002
*01*  EXIT-NORMAL = CALLER                                      02S0002
*                                                               02S0002
*02*     CONDITIONS = RETURN IS ALWAYS TO CALLER, TO ADDRESS POINTED TO
*        BY REGISTER 14. CONTROL WILL BE RETURNED IN THE SAME MODE,KEY
*        AND LOCK STATUS AS ON ENTRY.                           02S0002
*                                                               02S0002
*02*     OUTPUT =                                               02S0002
*        REGISTER 0  = UNCHANGED.                               02S0002
*        REGISTER 1  = TRUE ADDRESS OF IQE, RQE, OR SRB.        02S0002
*        REGISTERS 2-9,11-15  = UNCHANGED.                      02S0002
*        REGISTER 10 = VOLATILE.                                02S0002
*                                                               02S0002
*02*     RETURN-CODES = NONE                                    02S0002
*                                                               02S0002
*01*  EXIT-ERROR = NONE                                         02S0002
*                                                               02S0002
*01*  EXTERNAL-REFERENCES =                                     02S0002
*                                                               02S0002
*02*     ROUTINES = NONE                                        02S0002
*                                                               02S0002
*02*     DATA-AREAS = THE SAVE AREA POINTED TO BY WSALS2EE IS USED TO
*        SAVE REGISTERS. THIS AREA IS 80 BYTES LONG, AND IS SHARED WITH
*        STAGE 3 EXIT EFFECTOR.                                 02S0002
*                                                               02S0002
*02*     CONTROL-BLOCKS = PSA (R), ASCB (W), ASXB(W), IQE (W), RQE (W),
*        SRB (W) , DEB(R)                                       02S0002
*                                                               02S0002
*01*  TABLES = NONE                                             02S0002
*01*  MACROS = NONE                                             02S0002
*                                                               02S0002
*02*    SERIALIZATION = NO LOCKS OR ENQ RESOURCES ARE OBTAINED. 02S0002
*                                                               02S0002
*01*  CHANGE-ACTIVITY = (Y02751,Y02752)                         02S0002
*                                                               02S0002
*01*  MESSAGES = NONE                                           02S0002
*01*  ABEND-CODES = NONE                                        02S0002
**** END OF SPECIFICATIONS **                                        */
*                                                               02S0002
*   ;                                                           02S0002
*   GEN CODE;                                                   01S0003
*                                                               01S0003
IEA0EF00  CSECT
*   /*****************************************************************/
*   /*                                                               */
*   /* DECLARES                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0004
*                                                               02S0004
*/********************************************************************
*                                                                    */
*/* DECLARES-                                                        */
*/*  THIS SEGMENT CONTAINS ALL THE DECLARE STATEMENTS                */
*/********************************************************************
*                                                                    */
*                                                               02S0004
*   /*****************************************************************/
*   /*                                                               */
*   /* REGISTERS                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0004
*   DCL                                                         02S0004
*     RQEPTR PTR(31) REG(1) RSTD;   /* POINTS TO THE RQE             */
*   DCL                                                         02S0005
*     R1 PTR(31) REG(1) RSTD;       /* REGISTER 1                    */
*   DCL                                                         02S0006
*     R1A FIXED(31) REG(1) RSTD;    /* ARITHMETIC EQUIVALENT OF R1   */
*   DCL                                                         02S0007
*     IQEPTR PTR(31) REG(1) RSTD;   /* BASE FOR IQE                  */
*   DCL                                                         02S0008
*     SRBPTR PTR(31) REG(1) RSTD;   /* BASE FOR SRB                  */
*   DCL                                                         02S0009
*     R0 PTR(31) REG(0) RSTD;       /* REGISTER 0                    */
*   DCL                                                         02S0010
*     WAPTR PTR(31) REG(3) RSTD;    /* POINTER TO STAGE 2 WKAREA     */
*   DCL                                                         02S0011
*     ASXBPTR PTR(31) REG(7) RSTD;  /* POINTS TO THE ASXB            */
*   DCL                                                         02S0012
*     ASCBPTR PTR(31) REG(8) RSTD;  /* POINTS TO THE ASCB            */
*   DCL                                                         02S0013
*     R10 REG(10) PTR(31) RSTD;     /* REGISTER 10                   */
*   DCL                                                         02S0014
*     R11 REG(11) PTR(31);          /* REGISTER 11                   */
*   DCL                                                         02S0015
*     R12 REG(12) PTR(31);          /* REGISTER 12                   */
*   DCL                                                         02S0016
*     R13 REG(13) PTR(31);          /* REGISTER 13                   */
*                                                               02S0016
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSTANTS                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0017
*   DCL                                                         02S0017
*     ON BIT(1) CONSTANT('1'B);     /* SWITCH ON                     */
*   DCL                                                         02S0018
*     OFF BIT(1) CONSTANT('1'B);    /* SWITCH OFF                    */
*   DCL                                                         02S0019
*     NULL CHAR(24) INIT('00'X);    /* COMPARED AGAINST ASXBAEQ      */
*   DCL                                                         02S0020
*     YES FIXED(31) CONSTANT(0);    /* POSITIVE SWITCH               */
*   DCL                                                         02S0021
*     NO FIXED(31) CONSTANT(4);     /* NEGATIVE SWITCH               */
*   DCL                                                         02S0022
*     CVTPTR DEFINED(FLCCVT);       /* POINTS TO CVT                 */
*   DCL                                                         02S0023
*     DEBPTR PTR(31) DEFINED(RQEDEB);/* BASE FOR DEB         @YM01424*/
*   DCL                                                         02S0024
*    (DEBDAPTR,                                                 02S0024
*     DEBEXPTR,                                                 02S0024
*     DEBSBPTR) PTR(31) REG(15);    /* DUMMY SYMBOLS TO SATISFY 02S0024
*                                      MAPPING MACRO                 */
*                                                               02S0024
*   /*****************************************************************/
*   /*                                                               */
*   /* MAPPING MACROS                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0025
*                                                               03S0025
*/*            INTERRUPTION QUEUE ELEMENT - I.Q.E.        LEVEL=1    */
*                                                               03S0025
*   DECLARE                                                     03S0025
*     1 IQESECT BASED(IQEPTR),                                  03S0025
*      2 IQELNK PTR(31) BDY(BYTE),  /* .WORD REFERENCE FOR IQELNKA   */
*       3 IQESTAT1 CHAR(1),         /* .1 BYTE RESERVED              */
*       3 IQELNKA PTR(24) BDY(BYTE),/* .ADDR NEXT IQE                */
*      2 IQEPARAM PTR(31),          /* .PARMS TO BE PASSED TO ASYN
*                                      EXIT RTN                      */
*      2 IQEIRB PTR(31) BDY(BYTE),  /* .WORD REFERENCE FOR IQEIRBA   */
*       3 IQEFLAGS CHAR(1),         /* .FLAG FIELD                   */
*        4 IQEPURGE BIT(1),         /* .THIS IQE MUST NOT BE    03S0025
*                                      SCHEDULED                     */
*        4 * BIT(1),                /* RESERVED                      */
*        4 * BIT(1),                /* RESERVED                      */
*        4 * BIT(1),                /* RESERVED                      */
*        4 * BIT(1),                /* RESERVED                      */
*        4 * BIT(1),                /* RESERVED                      */
*        4 * BIT(1),                /* RESERVED                      */
*        4 * BIT(1),                /* RESERVED                      */
*       3 IQEIRBA PTR(24) BDY(BYTE),/* .ADDR IRB TO BE SCHEDULED     */
*      2 IQETCB PTR(31) BDY(BYTE),  /* .WORD REFERENCE FOR IQETCBA   */
*       3 IQESTAT2 CHAR(1),         /* .1 BYTE RESERVED              */
*       3 IQETCBA PTR(24) BDY(BYTE),/* .ADDR TCB ASSOCIATED WITH THIS
*                                      IQE                           */
*/*     THE FOLLOWING IS IN BEHALF OF S.M.F.                         */
*                                                               03S0025
*      2 IQEDCB PTR(31),            /* .ADDR OF DCB                  */
*      2 IQEOUTLM PTR(31);          /* .ADDR OF OUTPUT LIMIT         */
*   DECLARE                                                     03S0026
*     1 IQEEND(*) CHAR(1) BASED(ADDR(IQESECT)+LENGTH(IQESECT));/*
*                                      .END OF IQE              03S0026
*                                                                    */
*                                                               03S0027
*/********************************************************************/
*/*                                                                  */
*/* THIS DSECT DESCRIBES THE CONTROL BLOCK USED WITHIN THE EXCP PROC-*/
*/* ESSOR TO DEFINE A SINGLE REQUEST. IT CONTAINS ALL INFORMATION    */
*/* NECESSARY TO INITIATE AND TERMINATE I/O REQUESTS WITHIN THE EXCP */
*/* PROCESSOR.                                                       */
*/*                                                                  */
*/********************************************************************/
*                                                               03S0027
*   DECLARE                                                     03S0027
*     1 RQE BDY(WORD) BASED(RQEPTR),/* REQUEST QUEUE ELEMENT FOR EXCP*/
*      2 RQEUCB PTR(31),            /* ADDRESS OF THE UNIT CONTROL
*                                      BLOCK.                        */
*      2 RQEIOB PTR(31),            /* ADDRESS OF THE INPUT OUTPUT
*                                      BLOCK                         */
*      2 RQEDEB PTR(31),            /* ADDRESS OF THE DATA EXTENT
*                                      BLOCK                         */
*      2 RQETCB PTR(31),            /* ADDRESS OF THE TASK CONTROL
*                                      BLOCK                         */
*      2 RQETCCW PTR(31),           /* ADDRESS OF THE TRANSLATION IS
*                                      CONTROL BLOCK - THIS FIELD
*                                      USED BY VIO AS A WORK AREA.   */
*      2 RQENRQE PTR(31),           /* ADDRESS OF NEXT RQE ON RELATED
*                                      REQUEST QUEUE - THIS FIELD IS
*                                      USED BY VIO AS A WORK AREA.   */
*      2 RQERRQ PTR(31),            /* ADDRESS OF THE RELATED REQUEST
*                                      QUEUE - USED BY VIO AS A WORK
*                                      AREA                          */
*      2 RQESRB PTR(31),            /* ADDRESS OF SRB - USED BY VIO
*                                      AS A WORK AREA.               */
*      2 RQEIPIB PTR(31),           /* ADDRESS OF IOS PURGE INTERFACE
*                                      BLOCK.                        */
*      2 RQEPRT BIT(8),             /* PROTECTION KEY USED IN THE    */
*       3 RQEPKEY BIT(4),           /* PROTECTION KEY                */
*       3 * BIT(4),                 /* RESERVED - MUST BE ZERO       */
*      2 RQETYPE BIT(8),            /* RQE TYPE FLAGS                */
*       3 RQE114 BIT(1),            /* EXCPVR REQUEST                */
*       3 RQEVIRT BIT(1),           /* VIRTUAL EXCP REQUEST          */
*       3 RQE1TO1 BIT(1),           /* VIRTUAL = REAL EXCP REQUEST   */
*       3 RQEVAM BIT(1),            /* VIO REQUEST                   */
*       3 * BIT(2),                 /* RESERVED - MUST BE ZERO       */
*       3 RQETYP3 BIT(2),           /* TYPE 3 RELATED REQUEST        */
*        4 RQETYP2 BIT(1),          /* TYPE 2 RELATED REQUEST        */
*        4 RQETYP1 BIT(1),          /* TYPE 1 RELATED REQUEST        */
*      2 RQEFLAG BIT(8),            /* FLAGS INDICATING WORK TO DO
*                                      AND POSITION IN EXCP          */
*       3 RQERETRY BIT(1),          /* RETRY REQUEST FROM APPENDAGE  */
*       3 RQENOPST BIT(1),          /* NO POST REQUEST FROM APPEND   */
*       3 RQENOFRE BIT(1),          /* NO FREE REQUEST FROM APPEND   */
*       3 RQEFIXST BIT(1),          /* FIXING IS STARTED FOR REQUEST */
*       3 RQESTBL BIT(1),           /* REQUEST IS STARTABLE          */
*       3 RQESRBS BIT(1),           /* REQUEST SENT TO IOS           */
*       3 RQEPURGE BIT(1),          /* PURGE IN CONTROL              */
*       3 RQECHEAC BIT(1),          /* CHANNEL END APPENDAGE COMPL   */
*      2 * BIT(8),                  /* RESERVED                      */
*      2 RQEEND CHAR(0);            /* END OF RQE               03S0027
*                                                                    */
*                                                               03S0028
*/* **************************************************************** */
*/*                                                                  */
*/*            ***** DATA EXTENT BLOCK *****                         */
*/*                                                                  */
*/*  OS/VS1 RELEASE 3, OS/VS2 RELEASE 2, 11/01/73, LEVEL=9           */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      PL/S - DCL (DEBPTR,DEBDAPTR,DEBEXPTR,DEBSBPTR) PTR          */
*/*      BAL  - FIVE DSECTS ARE PRODUCED.  USING ON A DSECT NAME     */
*/*             GIVES ADDRESSABILITY FOR ALL SYMBOLS WITHIN THAT     */
*/*             DSECT.  THE DSECT NAMES AND THE SECTIONS WITHIN EACH */
*/*             DSECT ARE                                            */
*/*                                                                  */
*/*             DEB ***  APPENDAGE VECTOR TABLE SECTION              */
*/*                      PREFIX TABLE                                */
*/*                      BASIC SECTION                               */
*/*                      UNIT RECORD, MAGNETIC TAPE AND              */
*/*                        TELECOMMUNICATIONS DEVICES SECTION        */
*/*                      ISAM DEPENDENT SECTION                      */
*/*                      *** POINTERS TO THE DEB IN OTHER CONTROL    */
*/*                          BLOCKS SUCH AS DCB POINT TO THE BASIC   */
*/*                          SECTION.  USING ON DEBBASIC GIVES       */
*/*                          ADDRESSABILITY FOR BASIC SECTION AND    */
*/*                          NEXT TWO SECTIONS.  DEBAPPAD IN BASIC   */
*/*                          SECTION CONTAINS ADDRESS OF APPENDAGE   */
*/*                          VECTOR TABLE (AVT) SECTION.  PREFIX     */
*/*                          FOLLOWS AVT SECTION.                    */
*/*             DEBDASD  DIRECT ACCESS STORAGE DEVICE SECTION        */
*/*             DEBACSMD EXCP, BSAM AND QSAM DEPENDENT SECTION       */
*/*                      BPAM DEPENDENT SECTION                      */
*/*                      BDAM DEPENDENT SECTION                      */
*/*                      BTAM DEPENDENT SECTION                      */
*/*                      GAM DEPENDENT SECTION                       */
*/*                      ISAM LOAD MODE EXTENSION **                 */
*/*                      ISAM SCAN MODE EXTENSION **                 */
*/*                      BISAM MODE EXTENSION **                     */
*/*                      ** FOR THESE 3 EXTENSIONS, LOAD REGISTER    */
*/*                         FROM DEBEXPT IN ISAM DEPENDENT SECTION   */
*/*                         TO SET REGISTER FOR USING.               */
*/*             DEBSUBNM SUBROUTINE NAME SECTION                     */
*/*             DEBXTN   EXTENSION FOR OS/VS2                        */
*/*                                                                  */
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */
*/*             DSECT A SYNBOL IS IN BY USING THE STARTMENT NUMBER   */
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */
*/*             STATEMENT NUMBERS FOR DEBDASD AND DEBACSMD IS IN     */
*/*             THE DIRECT ACCESS STORAGE DEVICE SECTION.            */
*/*                                                                  */
*/*  F.E.'S                                                          */
*/*      MICROFICHE LISTING - IEZDEB                                 */
*/*                                                                  */
*/*  DEVELOPERS                                                      */
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */
*/*                                                                  */
*/*      FOR INTEGRATION, A LISTING SHOULD NOT BE REQUESTED.         */
*/*                                                                  */
*/*  FUNCTION                                                        */
*/*      THE DATA EXTENT BLOCK (DEB) CONTAINS AN EXTENSION OF        */
*/*      INFORMATION IN THE DCB.  EACH DEB IS ASSOCIATED WITH A      */
*/*      DCB, AND THE TWO POINT TO EACH OTHER.  THE DEB CONTAINS     */
*/*      INFORMATION CONCERNING THE PHYSICAL CHARACTERISTICS OF      */
*/*      THE DATA SET AND OTHER INFORMATION THAT IS USED BY THE      */
*/*      CONTROL PROGRAM.                                            */
*/*                                                                  */
*/* **************************************************************** */
*                                                               03S0028
*                                                               03S0028
*/*  *************************************************************** */
*/*                   DEB BASIC SECTION                              */
*/*  *************************************************************** */
*                                                               03S0028
*   DECLARE                                                     03S0028
*     1 DEBBASIC BASED(DEBPTR) BDY(WORD),                       03S0028
*       3 DEBTCBAD PTR(31),         /* ADDRESS OF TCB FOR THIS DEB   */
*        4 DEBNMSUB CHAR(1),        /* NUMBER OF SUBROUTINES LOADED
*                                      BY OPEN EXECUTOR ROUTINES     */
*        4 DEBTCBB PTR(24),         /* ADDRESS OF TCB FOR THIS DEB   */
*       3 DEBDEBAD PTR(31),         /* ADDRESS OF THE NEXT DEB IN THE
*                                      SAME TASK                     */
*        4 DEBAMLNG CHAR(1),        /* NUMBER OF BYTES IN THE ACCESS
*                                      METHOD DEPENDENT SECTION. FOR
*                                      BDAM THIS FIELD CONTAINS THE
*                                      LENGTH EXPRESSED IN NUMBER OF
*                                      WORDS                         */
*        4 DEBDEBB PTR(24),         /* *** SAME AS DEBDEBAD ABOVE    */
*       3 DEBIRBAD PTR(31),         /* IRB STORAGE ADDRESS USED FOR
*                                      APPENDAGE ASYNCHRONOUS EXITS  */
*        4 DEBOFLGS CHAR(1),        /* DATA SET STATUS FLAGS         */
*         5 DEBDISP BIT(2),         /* DATA SET DISPOSITION FLAGS    */
*         5 DEBEOF BIT(1),          /* END-OF-FILE (EOF) ENCOUNTERED
*                                      (TAPE INPUT) FORMAT 1 DSCB BIT
*                                      93.0 INDICATES THAT THE  03S0028
*                                      CURRENT VOLUME IS THE LAST
*                                      VOLUME OF THE DATA SET (DASD
*                                      INPUT)                        */
*         5 DEBRLSE BIT(1),         /* RELEASE UNUSED EXTERNAL  03S0028
*                                      STORAGE (DASD) EMULATOR TAPE
*                                      WITH SECOND GENERATION FORMAT.
*                                      TAPE MAY CONTAIN BLOCKS  03S0028
*                                      SHORTER THAN 12 CHARACTERS
*                                      (TAPE)                        */
*         5 DEBDCB BIT(1),          /* DCB MODIFICATION              */
*         5 DEBSPLIT BIT(1),        /* SPLIT CYLINDER (DASD) 7-TRACK
*                                      EMULATOR TAPE WITH POSSIBLE
*                                      MIXED PARITY RECORDS (TAPE)   */
*         5 DEBLABEL BIT(1),        /* NONSTANDARD LABELS            */
*         5 DEBRERR BIT(1),         /* USE REDUCED ERROR RECOVERY
*                                      PROCEDURE (TAPE) CONCATENATED
*                                      PARTITIONED ORGANIZATION DATA
*                                      SETS PROCESSED USING BPAM
*                                      (DASD)                        */
*        4 DEBIRBB PTR(24),         /* *** SAME AS DEBIRBAD ABOVE    */
*       3 DEBOPATB CHAR(1),         /* FLAGS INDICATING BOTH THE
*                                      METHOD OF I/O PROCESSING AND
*                                      THE DISPOSITION THAT IS TO BE
*                                      PERFORMED WHEN AN        03S0028
*                                      END-OF-VOLUME (EOV) CONDITION
*                                      OCCURS                        */
*        4 DEBABEND BIT(1),         /* SET BY ABEND INDICATING A
*                                      SYSABEND OR SYSUDUMP DATA SET
*                                      (OS/VS2)                      */
*        4 DEBZERO BIT(1),          /* ALWAYS ZERO                   */
*        4 DEBPOSIT BIT(2),         /* DATA SET POSITIONING FLAGS    */
*        4 DEBACCS BIT(4),          /* TYPE OF I/O ACCESSING BEING
*                                      DONE                          */
*       3 DEBQSCNT CHAR(1),         /* PURGE (SVC 16) - QUIESCE 03S0028
*                                      COUNT. NUMBER OF DEVICES 03S0028
*                                      EXECUTING USER'S CHANNEL 03S0028
*                                      PROGRAMS, AS SHOWN BY BITS 5
*                                      AND 6 OF UCBFL1 FIELDS        */
*       3 DEBFLGS1 CHAR(1),         /* FLAG FIELD                    */
*        4 DEBPWCKD BIT(1),         /* PASSWORD WAS SUPPLIED DURING
*                                      OPEN. EOV WILL NOT REQUEST A
*                                      PASSWORD FOR EACH ADDITIONAL
*                                      VOLUME OF A MULTIVOLUME DATA
*                                      SET                           */
*        4 DEBEOFDF BIT(1),         /* SET BY EOV TO INFORM CLOSE
*                                      THAT AN END-OF-FILE HAS BEEN
*                                      ENCOUNTERED AND, THEREFORE,
*                                      DEFERRED LABEL PROCESSING IS
*                                      ALLOWED                       */
*        4 DEBRSV01 BIT(1),         /* RESERVED                      */
*        4 DEBRSV02 BIT(1),         /* RESERVED                      */
*        4 DEBCINDI BIT(1),         /* DCB ASSOCIATED WITH THIS DEB
*                                      IS BEING PROCESSED BY THE
*                                      COMPATIBILITY INTERFACE  03S0028
*                                      ROUTINES (VSAM) ICB462        */
*        4 DEBF1CEV BIT(1),         /* EOV PROCESSING OCCURRED DURING
*                                      CLOSE PROCESSING. TESTED AND
*                                      SET TO ZERO BY CLOSE, SET TO
*                                      ONE BY EOV. (ICB353) A42228   */
*        4 DEBAPFIN BIT(1),         /* IF ON, AUTHORIZED PROGRAMS CAN
*                                      BE LOADED MDC001              */
*        4 DEBXTNIN BIT(1),         /* IF ONE, DEB EXTENSION EXISTS
*                                      (OS/VS2) MDC007               */
*       3 DEBRSV05 CHAR(1),         /* RESERVED                      */
*       3 DEBUSRPG PTR(31),         /* ADDRESS OF FIRST IOB IN THE
*                                      USER PURGE CHAIN (OS/VS1)
*                                      ADDRESS OF PURGED I/O RESTORE
*                                      LIST (PIRL) (OS/VS2) (MDC029)
*                                                              YM3158*/
*        4 DEBNMEXT CHAR(1),        /* NUMBER OF EXTENTS SPECIFIED IN
*                                      DSCB'S                        */
*        4 DEBUSRPB PTR(24),        /* *** SAME AS DEBUSRPG ABOVE    */
*       3 DEBRRQ PTR(31),           /* POINTER TO RELATED REQUEST
*                                      QUEUE (OS/VS2) MDC026         */
*        4 DEBECBAD PTR(31),        /* ADDRESS OF A PARAMETER LIST
*                                      USED TO LOCATE THE PURGE ECB
*                                      FOR AN SVC PURGE REQUEST 03S0028
*                                      (OS/VS1) MDC025               */
*         5 DEBPRIOR CHAR(1),       /* PRIORITY OF THE TASK OWNING
*                                      DEB                           */
*         5 DEBECBB PTR(24),        /* *** SAME AS DEBECBAD ABOVE    */
*       3 DEBDCBAD PTR(31),         /* ADDRESS OF DCB ASSOCIATED WITH
*                                      THIS DEB                      */
*        4 DEBPROTG CHAR(1),        /* TASK PROTECTION KEY IN HIGH-
*                                      ORDER 4 BITS                  */
*         5 DEBDEBID CHAR(1),       /* A HEX F IN LOW-ORDER 4 BITS TO
*                                      IDENTIFY THIS BLOCK AS A DEB  */
*        4 DEBDCBB PTR(24),         /* *** SAME AS DEBDCBAD ABOVE    */
*       3 DEBAPPAD PTR(31),         /* ADDRESS OF THE I/O APPENDAGE
*                                      VECTOR TABLE                  */
*        4 DEBEXSCL CHAR(1),        /* EXTENT SCALE- 4 FOR DIRECT
*                                      ACCESS DEVICE AND 3525 CARD
*                                      PUNCH WITH DEVICE-ASSOCIATED
*                                      DATA SET SUPPORT AND 2 FOR
*                                      NONDIRECT ACCESS DEVICE AND
*                                      COMMUNICATION DEVICE. THIS
*                                      FIELD IS USED TO DETERMINE THE
*                                      SIZE OF THE DEVICE DEPENDENT
*                                      SECTION ICB394                */
*        4 DEBAPPB PTR(24),         /* *** SAME AS DEBAPPAD ABOVE    */
*       3 DEBBASND CHAR(0) BDY(WORD);                           03S0028
*                                                               03S0028
*/*  *************************************************************** */
*/*    UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION*/
*/*                                                                  */
*/*      NOTE  FOR TELECOMMUNICATIONS DEVICES, THE UCB ADDRESS       */
*/*            IS REPEATED FOR EACH LINE ASSIGNED                    */
*/*  *************************************************************** */
*                                                               03S0029
*   DECLARE                                                     03S0029
*     1 DEBBAS02 DEF(DEBBASND) BDY(WORD),                       03S0029
*       3 DEBDDS1 BDY(WORD),                                    03S0029
*        4 DEBSUCBA PTR(31),        /* ADDRESS OF UCB ASSOCIATED WITH
*                                      A GIVEN DATA SET              */
*         5 DEBSDVM CHAR(1),        /* DEVICE MODIFIER. FOR MAGNETIC
*                                      TAPE, SET MODE OPERATION CODE.
*                                      FOR UNIT RECORD, NOT USED.    */
*         5 DEBSUCBB PTR(24),       /* *** SAME AS DEBSUCBA ABOVE    */
*/*      THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 WITH     */
*/*      DEVICE-ASSOCIATED DATA SET SUPPORT                          */
*                                                               03S0029
*        4 DEBRDCB PTR(31),         /* ADDRESS OF DCB FOR THE READ
*                                      ASSOCIATED DATA SET ICB394    */
*         5 DEBRSV06 CHAR(1),       /* RESERVED ICB394               */
*         5 DEBRDCBA PTR(24),       /* SAME AS DEBRDCB ABOVE ICB394  */
*        4 DEBPDCB PTR(31),         /* ADDRESS OF DCB FOR THE PUNCH
*                                      ASSOCIATED DATA SET ICB394    */
*         5 DEBRSV07 CHAR(1),       /* RESERVED ICB394               */
*         5 DEBPDCBA PTR(24),       /* SAME AS DEBPDCB ABOVE ICB394  */
*        4 DEBWDCB PTR(31),         /* ADDRESS OF DCB FOR THE PRINT
*                                      ASSOCIATED DATA SET ICB394    */
*         5 DEBRSV08 CHAR(1),       /* RESERVED ICB394               */
*         5 DEBWDCBA PTR(24);       /* SAME AS DEBWDCB ABOVE ICB394  */
*/*  *************************************************************** */
*/*              DEB ISAM DEPENDENT SECTION                          */
*/*                                                                  */
*/*      NOTE  PRESENT ONLY IF ISAM IS USED.  FOLLOWS THE BASIC      */
*/*            SECTION AND PRECEDES THE DIRECT ACCESS STORAGE        */
*/*            DEVICE SECTION.  COUNTED AS ONE EXTENT IN DEBNMEXT.   */
*/*  *************************************************************** */
*                                                               03S0030
*   DECLARE                                                     03S0030
*     1 DEBBAS01 DEF(DEBBASND) BDY(WORD),                       03S0030
*      2 DEBISAM BDY(WORD),                                     03S0030
*       3 DEBFIEAD PTR(31),         /* ADDRESS OF FIRST INDEX EXTENT */
*        4 DEBNIEE CHAR(1),         /* NUMBER OF EXTENTS OF     03S0030
*                                      INDEPENDENT INDEX AREA        */
*        4 DEBFIEB PTR(24),         /* *** SAME AS DEBFIEAD ABOVE    */
*       3 DEBFPEAD PTR(31),         /* ADDRESS OF THE FIRST PRIME
*                                      DATA EXTENT                   */
*        4 DEBNPEE CHAR(1),         /* NUMBER OF EXTENTS OF PRIME
*                                      DATA AREA (M=0 EXTENT)        */
*        4 DEBFPEB PTR(24),         /* *** SAME AS DEBFPEAD ABOVE    */
*       3 DEBFOEAD PTR(31),         /* ADDRESS OF THE FIRST OVERFLOW
*                                      EXTENT                        */
*        4 DEBNOEE CHAR(1),         /* NUMBER OF EXTENTS OF     03S0030
*                                      INDEPENDENT OVERFLOW AREA     */
*        4 DEBFOEB PTR(24),         /* *** SAME AS DEBFOEAD ABOVE    */
*       3 DEBEXPT PTR(31),          /* ADDRESS OF ISAM DEB EXTENSION
*                                      ICB379                        */
*        4 DEBRPSID BIT(8),         /* ROTATIONAL POSITION SENSING
*                                      (RPS) DEVICE INDICATORS       */
*         5 DEBRPSP BIT(1),         /* PRIME DATA AREA IS ON RPS
*                                      DEVICE                        */
*         5 DEBRPSI BIT(1),         /* INDEPENDENT INDEX AREA IS ON
*                                      RPS DEVICE                    */
*         5 DEBRPSO BIT(1),         /* INDEPENDENT OVERFLOW AREA IS
*                                      ON RPS DEVICE                 */
*         5 DEBRPSAP BIT(1),        /* RPS SIO APPENDAGE HAS BEEN
*                                      LOADED                        */
*         5 DEBRSV09 BIT(1),        /* RESERVED                      */
*         5 DEBRSV10 BIT(1),        /* RESERVED                      */
*         5 DEBRSV11 BIT(1),        /* RESERVED                      */
*         5 DEBRSV12 BIT(1),        /* RESERVED                      */
*        4 DEBEXPTA PTR(24);        /* SAME AS DEBEXPT ABOVE ICB379  */
*/*  *************************************************************** */
*/*           DIRECT ACCESS STORAGE DEVICE SECTION                   */
*/*                                                                  */
*/*      NOTE  IF ISAM IS BEING USED, THIS SECTION FOLLOWS THE       */
*/*            ISAM DEVICE DEPENDENT SECTION.  OTHERWISE, IT         */
*/*            FOLLOWS THE BASIC SECTION.                            */
*/*                                                                  */
*/*            THERE IS ONE OF THESE SECTIONS FOR EACH EXTENT.       */
*/*  *************************************************************** */
*                                                               03S0031
*   DECLARE                                                     03S0031
*     1 DEBDASD BASED(DEBDAPTR) BDY(WORD),                      03S0031
*       3 DEBUCBAD PTR(31),         /* ADDRESS OF UCB ASSOCIATED WITH
*                                      THIS DATA EXTENT              */
*        4 DEBDVMOD CHAR(1),        /* DEVICE MODIFIER - FILE MASK   */
*        4 DEBUCBA PTR(24),         /* *** SAME AS DEBUCBAD ABOVE    */
*       3 DEBBINUM CHAR(2),         /* BIN NUMBER                    */
*       3 DEBSTRCC CHAR(2),         /* CYLINDER ADDRESS FOR THE START
*                                      OF AN EXTENT LIMIT            */
*       3 DEBSTRHH CHAR(2),         /* READ/WRITE TRACK ADDRESS FOR
*                                      THE START OF AN EXTENT LIMIT  */
*       3 DEBENDCC CHAR(2),         /* CYLINDER ADDRESS FOR THE END
*                                      OF AN EXTENT LIMIT            */
*       3 DEBENDHH CHAR(2),         /* READ/WRITE TRACK ADDRESS FOR
*                                      THE END OF AN EXTENT LIMIT    */
*       3 DEBNMTRK CHAR(2);         /* NUMBER OF TRACKS ALLOCATED TO
*                                      A GIVEN EXTENT. FOR SPLIT
*                                      CYLINDER DATA SETS, THIS FIELD
*                                      REPRESENTS THE NUMBER OF 03S0031
*                                      TRACKS BETWEEN THE START 03S0031
*                                      ADDRESS OF THE EXTENT AND THE
*                                      END ADDRESS OF THE EXTENT.    */
*/*  *************************************************************** */
*/*      EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION         */
*/*  *************************************************************** */
*                                                               03S0032
*   DECLARE                                                     03S0032
*     1 DEBACSMD BASED(DEBEXPTR) BDY(WORD),                     03S0032
*       3 DEBVOLSQ CHAR(2),         /* VOLUME SEQUENCE NUMBER FOR
*                                      MULTIVOLUME SEQUENTIAL DATA
*                                      SETS                          */
*        4 DEBVOLBT BIT(8),         /* FIRST BYTE OF DEBVOLSQ   03S0032
*                                      (MDC016)               YA00318*/
*         5 DEBEXFUL BIT(1),        /* SET BY EOV WHEN REWRITING AN
*                                      OLD DIRECT ACCESS DATA SET TO
*                                      INDICATE THAT ALL PREVIOUS
*                                      EXISTING EXTENTS HAVE BEEN
*                                      FILLED (MDC017)        YA00318*/
*         5 DEBRSV36 BIT(1),        /* RESERVED MDC018               */
*         5 DEBRSV37 BIT(1),        /* RESERVED MDC018               */
*         5 DEBRSV38 BIT(1),        /* RESERVED MDC018               */
*         5 DEBRSV39 BIT(1),        /* RESERVED MDC018               */
*         5 DEBRSV40 BIT(1),        /* RESERVED MDC018               */
*         5 DEBRSV41 BIT(1),        /* RESERVED MDC018               */
*         5 DEBRSV42 BIT(1),        /* RESERVED MDC018               */
*        4 DEBVLSEQ PTR(8),         /* FOR DIRECT ACCESS, SEQUENCE
*                                      NUMBER OF THE VOLUME OF THE
*                                      DATA SET RELATIVE TO THE FIRST
*                                      VOLUME OF THE DATA SET. FOR
*                                      TAPE, SEQUENCE NUMBER OF THE
*                                      VOLUME OF THE DATA SET   03S0032
*                                      RELATIVE TO THE FIRST VOLUME
*                                      PROCESSED. (MDC019)    YA00318*/
*       3 DEBVOLNM CHAR(2),         /* TOTAL NUMBER OF VOLUMES IN A
*                                      MULTIVOLUME SEQUENTIAL DATA
*                                      SET.                          */
*       3 DEBDSNM CHAR(8) BDY(WORD),/* MEMBER NAME. THIS FIELD  03S0032
*                                      APPEARS ONLY WHEN AN OUTPUT
*                                      DATA SET HAS BEEN OPENED FOR A
*                                      MEMBER NAME AND THE DSCB 03S0032
*                                      SPECIFIES A PARTITIONED DATA
*                                      SET.                          */
*         5 DEBUTSAA PTR(31),       /* ADDRESS OF THE USER TOTALING
*                                      SAVE AREA                     */
*          6 DEBRSV13 CHAR(1),      /* RESERVED                      */
*          6 DEBUTSAB PTR(24),      /* *** SAME AS DEBUTSAA ABOVE    */
*         5 DEBRSV14 CHAR(4) BDY(WORD);/* RESERVED (IF USER TOTALING
*                                      WAS SPECIFIED)                */
*/*  *************************************************************** */
*/*                BPAM DEPENDENT SECTION                            */
*/*  *************************************************************** */
*                                                               03S0033
*   DECLARE                                                     03S0033
*     1 DEBACS01 BASED(DEBEXPTR) BDY(WORD),                     03S0033
*       3 DEBDSNAM CHAR(8) BDY(WORD),/* FOR A PARTITIONED DATA SET
*                                      OPENED FOR OUTPUT FOR A MEMBER
*                                      NAME, THIS FIELD IS THE MEMBER
*                                      NAME.                         */
*        4 DEBEXTNM CHAR(1);        /* FOR A PARTITIONED DATA SET
*                                      OPENED FOR INPUT, EACH ONE-
*                                      BYTE FIELD CONTAINS THE EXTENT
*                                      NUMBER OF THE FIRST EXTENT
*                                      ENTRY FOR EACH DATA SET EXCEPT
*                                      THE FIRST, IF TWO OR MORE DATA
*                                      SETS ARE CONCATENATED. THE
*                                      NUMBER OF BYTES IN THE FIELD
*                                      IS EQUAL TO ONE LESS THAN THE
*                                      NUMBER OF DATA SETS      03S0033
*                                      CONCATENATED.                 */
*/*  *************************************************************** */
*/*                BDAM DEPENDENT SECTION                            */
*/*  *************************************************************** */
*                                                               03S0034
*   DECLARE                                                     03S0034
*     1 DEBACS02 BASED(DEBEXPTR) BDY(WORD),                     03S0034
*                                                               03S0034
*/*                       *****************************************  */
*/*                       * FOR FIXED LENGTH RECORDS WITH THE     *  */
*/*                       * OPTION OF RELATIVE BLOCK ADDRESSING   *  */
*/*                       * (BUT NOT TRACK OVERFLOW)              *  */
*/*                       *****************************************  */
*                                                               03S0034
*       3 DEBDBLK FIXED(31),        /* ONE FOUR-BYTE FIELD FOR EACH
*                                      EXTENT DESCRIBED IN THE DEVICE
*                                      DEPENDENT SECTION.            */
*        4 DEBDBPT PTR(8),          /* NUMBER OF BLOCKS PER TRACK    */
*        4 DEBDBPE CHAR(3);         /* NUMBER OF BLOCKS PER EXTENT   */
*   DECLARE                                                     03S0035
*     1 DEBACS03 BASED(DEBEXPTR) BDY(WORD),                     03S0035
*                                                               03S0035
*/*                       *****************************************  */
*/*                       * FOR FIXED LENGTH RECORDS WITH THE     *  */
*/*                       * OPTION OF RELATIVE BLOCK ADDRESSING   *  */
*/*                       * AND TRACK OVERFLOW.                   *  */
*/*                       *****************************************  */
*                                                               03S0035
*       3 DEBDTPP FIXED(31),        /* NUMBER OF TRACKS PER PERIOD   */
*       3 DEBDBPP FIXED(31),        /* NUMBER OF BLOCKS PER PERIOD   */
*/*                       THE FOLLOWING FIELD OCCURS ONCE FOR        */
*/*                       EACH EXTENT.                               */
*                                                               03S0035
*       3 DEBDBPEF FIXED(31);       /* NUMBER OF BLOCKS PER EXTENT   */
*/*  *************************************************************** */
*/*               BTAM DEPENDENT SECTION                             */
*/*                                                                  */
*/*      NOTE  THIS SEGMENT IS ALWAYS PRESENT FOR BTAM.  IT IS       */
*/*            USED WHEN A BUFFER POOL OR DYNAMIC BUFFERING IS       */
*/*            USED.  OTHERWISE, THE FIELDS ARE ZERO.                */
*/*  *************************************************************** */
*                                                               03S0036
*   DECLARE                                                     03S0036
*     1 DEBACS04 BASED(DEBEXPTR) BDY(WORD),                     03S0036
*       3 DEBTBFRA PTR(31),         /* ADDRESS OF THE BUFFER ROUTINE */
*        4 DEBRSV15 CHAR(1),        /* RESERVED                      */
*        4 DEBTBFRB PTR(24),        /* ADDRESS OF THE BUFFER ROUTINE */
*/*                       THE FOLLOWING FIELD IS REPEATED FOR EACH   */
*/*                       CCW ON THE CHANNEL PROGRAM QUEUE           */
*                                                               03S0036
*       3 DEBTCCWA PTR(31),         /* ADDRESS OF THE FIRST (OR 03S0036
*                                      FOLLOWING) CCW ON THE QUEUE   */
*        4 DEBRSV16 CHAR(1),        /* RESERVED                      */
*        4 DEBTCCWB PTR(24);        /* *** SAME AS DEBCCWA ABOVE     */
*/*  *************************************************************** */
*/*                 GAM DEPENDENT SECTION                            */
*/*  *************************************************************** */
*                                                               03S0037
*   DECLARE                                                     03S0037
*     1 DEBACS05 BASED(DEBEXPTR) BDY(WORD),                     03S0037
*       3 DEBFUCBA PTR(31),         /* ADDRESS OF FIRST UCB          */
*        4 DEBRSV17 CHAR(1),        /* RESERVED                      */
*        4 DEBFUCBB PTR(24),        /* ADDRESS OF FIRST UCB          */
*       3 DEBLUCBA PTR(31),         /* ADDRESS OF LAST UCB           */
*        4 DEBRSV18 CHAR(1),        /* RESERVED                      */
*        4 DEBLUCBB PTR(24);        /* ADDRESS OF LAST UCB           */
*/*  *************************************************************** */
*/*               ISAM LOAD MODE EXTENSION                           */
*/*  *************************************************************** */
*                                                               03S0038
*   DECLARE                                                     03S0038
*     1 DEBACS06 BASED(DEBEXPT) BDY(WORD),                      03S0038
*      2 DEBDCBFA PTR(31),          /* ADDRESS OF DCB FIELD AREA
*                                      MDC013                        */
*      2 DEBPUT PTR(31);            /* ADDRESS OF PUT MODULE ICB379  */
*/*  *************************************************************** */
*/*               ISAM SCAN MODE EXTENSION                           */
*/*  *************************************************************** */
*                                                               03S0039
*   DECLARE                                                     03S0039
*     1 DEBACS07 BASED(DEBEXPT) BDY(WORD),                      03S0039
*      2 * PTR(31),                 /* DEBDCBFA - ADDRESS OF DCB
*                                      FIELD AREA MDC014             */
*      2 DEBGET PTR(31),            /* ADDRESS OF GET OR PUT MODULE -
*                                      THIS FIELD IS ALSO CALLED
*                                      DEBPUT ICB379                 */
*      2 DEBWKPT4 PTR(31),          /* SAME AS DCBWKPT4 - ADDRESS OF
*                                      UCB ICB379                    */
*      2 DEBWKPT5 PTR(31),          /* SAME AS DCBWKPT5 - ADDRESS OF
*                                      GET APPENDAGE MODULE ICB379   */
*      2 DEBCREAD PTR(31),          /* ADDRESS OF CHANNEL-END   03S0039
*                                      APPENDAGE FOR READ ICB379     */
*      2 DEBCSETL PTR(31),          /* ADDRESS OF CHANNEL-END   03S0039
*                                      APPENDAGE FOR SETL ICB379     */
*      2 DEBCWRIT PTR(31),          /* ADDRESS OF CHANNEL-END   03S0039
*                                      APPENDAGE FOR WRITE ICB379    */
*      2 DEBCCHK PTR(31),           /* ADDRESS OF CHANNEL-END   03S0039
*                                      APPENDAGE FOR WRITE VALIDITY
*                                      CHECK ICB379                  */
*      2 DEBCREWT PTR(31),          /* ADDRESS OF CHANNEL-END   03S0039
*                                      APPENDAGE FOR RE-WRITE ICB379 */
*      2 DEBCRECK PTR(31),          /* ADDRESS OF CHANNEL-END   03S0039
*                                      APPENDAGE FOR RE-CHECK ICB379 */
*      2 DEBAREAD PTR(31),          /* ADDRESS OF ABNORMAL-END  03S0039
*                                      APPENDAGE FOR READ ICB379     */
*      2 DEBASETL PTR(31),          /* ADDRESS OF ABNORMAL-END  03S0039
*                                      APPENDAGE FOR SETL ICB379     */
*      2 DEBAWRIT PTR(31),          /* ADDRESS OF ABNORMAL-END  03S0039
*                                      APPENDAGE FOR WRITE ICB379    */
*      2 DEBACHK PTR(31),           /* ADDRESS OF ABNORMAL-END  03S0039
*                                      APPENDAGE FOR WRITE VALIDITY
*                                      CHECK ICB379                  */
*      2 DEBAREWT PTR(31),          /* ADDRESS OF ABNORMAL-END  03S0039
*                                      APPENDAGE FOR RE-WRITE ICB379 */
*      2 DEBARECK PTR(31),          /* ADDRESS OF ABNORMAL-END  03S0039
*                                      APPENDAGE FOR RE-CHECK ICB379 */
*      2 DEBRPSST PTR(31);          /* ADDRESS OF RPS SIO APPENDAGE
*                                      IF ADDRSPC=REAL WAS NOT  03S0039
*                                      SPECIFIED ICB379              */
*/*  *************************************************************** */
*/*               BISAM MODE EXTENSION                               */
*/*  *************************************************************** */
*                                                               03S0040
*   DECLARE                                                     03S0040
*     1 DEBACS08 BASED(DEBEXPT) BDY(WORD),                      03S0040
*      2 * PTR(31),                 /* DEBDCBFA - ADDRESS OF DCB
*                                      FIELD AREA MDC015             */
*      2 DEBDISAD PTR(31),          /* ADDRESS OF PRIVILEGED MODULE
*                                      ENTERED WHEN A BISAM MACRO
*                                      INSTRUCTION IS EXECUTED ICB379*/
*      2 * PTR(31),                 /* DEBWKPT4 - SAME AS DCBWKPT4 -
*                                      ADDRESS OF THE PART 1    03S0040
*                                      APPENDAGE MODULE (ABNORMAL AND
*                                      CHANNEL-END APPANDAGES) ICB379*/
*      2 * PTR(31),                 /* DEBWKPT5 - SAME AS DCBWKPT5 -
*                                      ADDRESS OF THE PART 2    03S0040
*                                      APPENDAGE MODULE (ABNORMAL AND
*                                      CHANNEL-END APPANDAGES) ICB379*/
*      2 DEBFREED PTR(31),          /* ADDRESS OF DYNAMIC BUFFERING
*                                      MODULE ICB379                 */
*      2 DEBRPSIO PTR(31),          /* ADDRESS OF RPS SIO APPENDAGE
*                                      MODULE IF ADDRSPC=REAL WAS NOT
*                                      SPECIFIED AND IF DYNAMIC 03S0040
*                                      BUFFERING IS USED ICB379      */
*      2 DEBSIOA2 PTR(31);          /* ADDRESS OF DYNAMIC BUFFERING
*                                      APPENDAGE MODULE DISPLACED BY
*                                      PAGE FIX (PGFX) APPENDAGE IF
*                                      ADDRSPC=REAL WAS NOT SPECIFIED
*                                      ICB379                        */
*/*  *************************************************************** */
*/*               SUBROUTINE NAME SECTION                            */
*/*                                                                  */
*/*      NOTE  FOLLOWS THE ACCESS METHOD DEPENDENT SECTION, OR THE   */
*/*            DEVICE DEPENDENT SECTION IF THERE IS NO ACCESS        */
*/*            METHOD SECTION.                                       */
*/*  *************************************************************** */
*                                                               03S0041
*   DECLARE                                                     03S0041
*     1 DEBSUBNM BASED(DEBSBPTR) BDY(WORD),                     03S0041
*        4 DEBSUBID CHAR(2);        /* SUBORUTINE IDENTIFICATION.
*                                      EACH ACCESS METHOD SUBROUTINE,
*                                      APPENDAGE SUBROUTINE, AND IRB
*                                      ROUTINE WILL HAVE A UNIQUE
*                                      EIGHT-BYTE NAME. THE LOW-
*                                      ORDER TWO BYTES OF EACH  03S0041
*                                      ROUTINE NAME WILL BE IN THIS
*                                      FIELD IF THE SUBROUTINE IS
*                                      LOADED BY THE OPEN ROUTINES.  */
*/*  *************************************************************** */
*/*          APPENDAGE VECTOR TABLE SECTION OF THE DEB               */
*/*  *************************************************************** */
*                                                               03S0042
*   DECLARE                                                     03S0042
*     1 DEB BASED(DEBAPPAD) BDY(WORD),                          03S0042
*      2 DEBAVT BDY(WORD),          /* APPENDAGE VECTOR TABLE        */
*       3 DEBEOEA PTR(31),          /* ADDRESS OF END-OF-EXTENT 03S0042
*                                      APPENDAGE ROUTINE             */
*        4 DEBEOEAB CHAR(1),        /* FLAG BYTE ICB280              */
*         5 DEBRSV19 BIT(1),        /* RESERVED                      */
*         5 DEBRSV20 BIT(1),        /* RESERVED                      */
*         5 DEBRSV21 BIT(1),        /* RESERVED                      */
*         5 DEBRSV22 BIT(1),        /* RESERVED                      */
*         5 DEBEOENP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED
*                                      FOR THE END-OF-EXTENT    03S0042
*                                      APPENDAGE ICB280              */
*        4 DEBEOEAD PTR(24),        /* ADDRESS OF END-OF-EXTENT 03S0042
*                                      APPENDAGE ROUTINE ICB280      */
*       3 DEBSIOA PTR(31),          /* ADDRESS OF START I/O APPENDAGE
*                                      ROUTINE                       */
*        4 DEBSIOAB CHAR(1),        /* FLAG BYTE ICB280              */
*         5 DEBPGFX BIT(1),         /* ADDRESS IN DEBSIOAD CAN BE
*                                      USED TO DETERMINE THE ENTRY
*                                      POINT TO THE PAGE FIX (PGFX)
*                                      APPENDAGE ROUTINE BY ADDING 4
*                                      TO ADDRESS IN DEBSIOAD ICB280 */
*         5 DEBSIOX BIT(1),         /* IF ZERO, DO NOT ENTER SIO
*                                      APPENDAGE WHEN ERP IS ACTIVE.
*                                      IF ONE, ENTER SIO APPENDAGE
*                                      EVEN WHEN ERP IS ACTIVE. 03S0042
*                                      ICB372                        */
*         5 DEBIOVR BIT(1),         /* IF ONE, EXCPVR REQUEST IS
*                                      VALID. IF ZERO, EXCPVR REQUEST
*                                      IS INVALID AND WILL NOT BE
*                                      EXECUTED. ICB401              */
*         5 DEBRSV23 BIT(1),        /* RESERVED                      */
*         5 DEBSIONP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED
*                                      FOR THE SIO APPENDAGE ICB280  */
*        4 DEBSIOAD PTR(24),        /* ADDRESS OF START I/O APPENDAGE
*                                      ROUTINE ICB280                */
*       3 DEBPCIA PTR(31),          /* ADDRESS OF PCI APPENDAGE 03S0042
*                                      ROUTINE                       */
*        4 DEBPCIAB CHAR(1),        /* FLAG BYTE ICB280              */
*         5 DEBRSV24 BIT(1),        /* RESERVED                      */
*         5 DEBRSV25 BIT(1),        /* RESERVED                      */
*         5 DEBRSV26 BIT(1),        /* RESERVED                      */
*         5 DEBRSV27 BIT(1),        /* RESERVED                      */
*         5 DEBPCINP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED
*                                      FOR THE PCI APPENDAGE ROUTINE
*                                      ICB280                        */
*        4 DEBPCIAD PTR(24),        /* ADDRESS OF PROGRAM-      03S0042
*                                      CONTROLLED-INTERRUPTION (PCI)
*                                      APPENDAGE ROUTINE ICB280      */
*       3 DEBCEA PTR(31),           /* ADDRESS OF CHANNEL-END   03S0042
*                                      APPENDAGE ROUTINE             */
*        4 DEBCEAB CHAR(1),         /* FLAG BYTE ICB280              */
*         5 DEBRSV28 BIT(1),        /* RESERVED                      */
*         5 DEBRSV29 BIT(1),        /* RESERVED                      */
*         5 DEBRSV30 BIT(1),        /* RESERVED                      */
*         5 DEBRSV31 BIT(1),        /* RESERVED                      */
*         5 DEBCENP BIT(4),         /* NUMBER OF 2K PAGES TO BE FIXED
*                                      FOR THE CHANNEL-END APPENDAGE
*                                      ICB280                        */
*        4 DEBCEAD PTR(24),         /* ADDRESS OF CHANNEL END   03S0042
*                                      APPENDAGE ROUTINE ICB280      */
*       3 DEBXCEA PTR(31),          /* ADDRESS OF ABNORMAL-END  03S0042
*                                      APPENDAGE ROUTINE             */
*        4 DEBXCEAB CHAR(1),        /* FLAG BYTE ICB280              */
*         5 DEBRSV32 BIT(1),        /* RESERVED                      */
*         5 DEBRSV33 BIT(1),        /* RESERVED                      */
*         5 DEBRSV34 BIT(1),        /* RESERVED                      */
*         5 DEBRSV35 BIT(1),        /* RESERVED                      */
*         5 DEBXCENP BIT(4),        /* NUMBER OF 2K PAGES TO BE FIXED
*                                      FOR THE ABNORMAL-END APPENDAGE
*                                      ICB280                        */
*        4 DEBXCEAD PTR(24),        /* ADDRESS OF ABNORMAL-END  03S0042
*                                      APPENDAGE ROUTINE ICB280      */
*/*  *************************************************************** */
*/*                  DEB PREFIX TABLE                                */
*/*  *************************************************************** */
*                                                               03S0042
*      2 DEBPREFX BDY(WORD),        /* DEB PREFIX TABLE              */
*       3 DEBWKARA CHAR(1) BDY(WORD),/* I/O SUPPORT WORK AREA (DIRECT
*                                      ACCESS)                       */
*       3 DEBDSCBA CHAR(7) BDY(WORD,2),/* DSCB ADDRESS (BBCCHHR) USED
*                                      BY I/O SUPPORT (DIRECT ACCESS)*/
*       3 DEBXTNP PTR(31),          /* POINTER TO DEB EXTENSION 03S0042
*                                      (OS/VS2) MDC008               */
*        4 DEBDCBMK CHAR(4) BDY(WORD),/* DCB MODIFICATION MASK USED
*                                      BY I/O SUPPORT (OS/VS1) MDC009*/
*       3 DEBLNGTH CHAR(1),         /* LENGTH OF DEB IN DOUBLE WORDS */
*       3 DEBAMTYP CHAR(1),         /* ACCESS METHOD TYPE ICB380     */
*       3 DEBTBLOF FIXED(15);       /* OFFSET IN THE DEB TABLE TO THE
*                                      ENTRY FOR THIS DEB ICB380     */
*/*  *************************************************************** */
*/*                  DEB EXTENSION (OS/VS2)                          */
*/*  *************************************************************** */
*                                                               03S0043
*   DECLARE                                                     03S0043
*     1 DEBXTN BASED(DEBXTNP) BDY(WORD),                        03S0043
*      2 DEBXLNGH FIXED(15),        /* LENGTH OF DEB EXTENSION MDC002*/
*      2 DEBXFLG1 BIT(8),           /* FLAG BYTE (MDC027)      YM1272*/
*       3 DEBXCDCB BIT(1),          /* DEBDCBAD FIELD CONTAINS THE
*                                      ADDRESS OF A COPIED DCB. USED
*                                      BY END-OF-VOLUME, TCLOSE AND
*                                      TASK CLOSE. (MDC028)    YM1272*/
*       3 DEBXTSKC BIT(1),          /* TASK CLOSE IS CLOSING THE
*                                      RELATED DCB. SET BY TASK CLOSE
*                                      AND INTERROGATED BY      03S0043
*                                      END-OF-VOLUME, FEOV AND TCLOSE
*                                      FOR DEB'S NOT ON THE CURRENT
*                                      TCB DEB CHAIN. (MDC031) YM2869*/
*       3 DEBXRV42 BIT(1),          /* RESERVED                      */
*       3 DEBXRV43 BIT(1),          /* RESERVED                      */
*       3 DEBXRV44 BIT(1),          /* RESERVED                      */
*       3 DEBXRV45 BIT(1),          /* RESERVED                      */
*       3 DEBXRV46 BIT(1),          /* RESERVED                      */
*       3 DEBXRV47 BIT(1),          /* RESERVED                      */
*      2 DEBXRV48 CHAR(1),          /* RESERVED                      */
*      2 DEBXDSAB PTR(31),          /* POINTER TO DSAB MDC004        */
*      2 DEBXDCBM CHAR(4) BDY(WORD),/* DCB MODIFICATION MASK USED BY
*                                      I/O SUPPORT MDC005            */
*      2 DEBXDBPR PTR(31),          /* POINTER TO DEB MDC006         */
*      2 DEBXDSO1 BIT(8),           /* SAME AS DCBDSORG BYTE 1 MDC020*/
*      2 DEBXDSO2 BIT(8),           /* SAME AS DCBDSORG BYTE 2 MDC021*/
*      2 DEBXMCF1 BIT(8),           /* SAME AS DCBMACRF BYTE 1 MDC022*/
*      2 DEBXMCF2 BIT(8),           /* SAME AS DCBMACRF BYTE 2 MDC023*/
*      2 DEBXXARG PTR(31),          /* ADDRESS OF BDAM READ EXCLUSIVE
*                                      LIST MDC024                   */
*      2 DEBXRV39 PTR(31),          /* RESERVED                      */
*      2 DEBXRV40 PTR(31);          /* RESERVED                 03S0043
*                                                                    */
*                                                               03S0044
*/*********SERVICE REQUEST BLOCK************************************ */
*/*  OS/VS2 RELEASE 2    12/8/72   LEVEL=1                           */
*/*     BAL- DSECT  ALWAYS PRODUCED, PERFORM USING ON SRBSECT        */
*/*                                                                  */
*/*     PL/S  - SRBSECT WILL BE BASED(SRBPTR) .                      */
*/*        1. IF YOU WISH TO APPEND THE SRB TO THE END OF            */
*/*           ANOTHER CONTROL BLOCK, SET %SRBLEVEL='N'               */
*/*           WHERE N IS AN INTEGER BETWEEN 2 AND 3,INCLUSIVE.       */
*/*           SRBSECT WILL THEN BE AN UNBASED LEVEL N  VARIABLE.     */
*/*        2. IF YOU WISH TO APPEND ANOTHER CONTROL BLOCK TO THE END */
*/*           OF THE SRB, SET %SRB9999=',', AND THE SEMICOLON AT     */
*/*           THE END OF THE SRB WILL BE REPLACED WITH A COMMA.      */
*/*                                                                  */
*/*      EXAMPLE OF PLACING SRB BETWEEN TWO OTHER BLOCKS:            */
*/*         %SRBLEVEL='2'     ;                                      */
*/*         %SRB9999=',' ;                                           */
*/*     DECLARE  1 MYBLOCK,                                          */
*/*         2 MYFIELD,                                               */
*/*        %INCLUDE SYSLIB(IHASRB)  ;                                */
*/*         2 MYFIELD2 ;                                             */
*/****************************************************************** */
*                                                               03S0044
*   DECLARE                                                     03S0044
*     1 SRBSECT BASED(SRBPTR) BDY(WORD),                        03S0044
*        4 SRB,                                                 03S0044
*          6 SRBID CHAR(4),         /* SRB EBCDIC ACRONYM            */
*          6 SRBFLNK PTR(31),       /* FORWARD CHAIN FIELD           */
*          6 SRBASCB PTR(31),       /* ADDRESS SPACE TO BE DISPATCHED*/
*          6 SRBFLC BDY(WORD),      /* SRB AREA MOVED TO LOW CORE    */
*            8 SRBCPAFF BIT(16),    /* CPU AFFINITY MASK             */
*            8 SRBPASID FIXED(15),  /* PURGEDQ ASID                  */
*            8 SRBPTCB PTR(31),     /* PURGEDQ TCB ADDRESS           */
*          6 SRBEP PTR(31),         /* ENTRY POINT ADDRESS OF   03S0044
*                                      ASYNCHRONOUS ROUTINE          */
*          6 SRBRMTR PTR(31),       /* ADDRESS OF RESOURCE MGR  03S0044
*                                      TERMINATION ROUTINE FOR  03S0044
*                                      PURGEDQ                       */
*          6 SRBPARM PTR(31),       /* USER PARAMETER                */
*          6 SRBSAVE PTR(31),       /* SAVE AREA POINTER FOR    03S0044
*                                      REDISPATCH OF SUSPENDED S SRB.*/
*          6 SRBPKF BIT(8),         /* PROTECT KEY IN HIGH ORDER 4
*                                      BITS, LOW ORDER BITS 0        */
*          6 SRBPRIOR PTR(8),       /* PRIORITY LEVEL                */
*          6 * CHAR(2),             /* RESERVED                      */
*          6 * PTR(31)              /* RESERVED                      */
*                ;                                              03S0044
*                                                               03S0045
*/* **************************************************************** */
*/*                                                                  */
*/*            ADDRESS SPACE CONTROL BLOCK                           */
*/*                                                                  */
*/*  OS/VS2 RELEASE 2, 07/10/73, LEVEL=13                            */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON ASCB GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */
*/*      PL/S - DCL ASCBPTR PTR                                      */
*/*                                                                  */
*/* **************************************************************** */
*                                                               03S0045
*   DCL                                                         03S0045
*     1 ASCB BASED(ASCBPTR) BDY(DWORD),                         03S0045
*      2 ASCBEGIN CHAR(0),          /* BEGINNING OF ASCB             */
*      2 ASCBASCB CHAR(4) BDY(WORD),/* ACRONYM IN EBCDIC -ASCB-      */
*      2 ASCBFWDP PTR(31),          /* ADDRESS OF NEXT ASCB ON ASCB
*                                      READY QUEUE                   */
*      2 ASCBBWDP PTR(31),          /* ADDRESS OF PREVIOUS ASCB ON
*                                      ASCB READY QUEUE              */
*      2 ASCBLOCK FIXED(31),        /* LOCAL LOCK                    */
*      2 ASCBIOSP PTR(31),          /* POINTER TO IOS PURGE INTERFACE
*                                      CONTROL BLOCK (IPIB)          */
*      2 ASCBFSLQ PTR(31),          /* POINTER TO FIRST SUSPENDED SRB
*                                      ON THE LOCK SUSPENDED SRB
*                                      QUEUE                         */
*      2 ASCBLSLQ PTR(31),          /* POINTER TO LAST SUSPENDED SRB
*                                      ON THE LOCK SUSPENDED SRB
*                                      QUEUE                         */
*      2 ASCBSPL PTR(31),           /* POINTER TO SPL                */
*      2 ASCBCPUS FIXED(31),        /* NUMBER OF CPU'S ACTIVE IN THIS
*                                      MEMORY MDC007                 */
*      2 ASCBASID BIT(16) BDY(WORD),/* ADDRESS SPACE IDENTIFIER FOR
*                                      THE ASCB                      */
*      2 ASCBSEQN FIXED(15),        /* SEQUENCE NUMBER THAT     03S0045
*                                      REPRESENTS THE ASCB'S POSITION
*                                      ON THE DISPATCHING QUEUE      */
*      2 ASCBIOSM FIXED(15) BDY(WORD),/* I/O SERVICE MEASURE         */
*      2 ASCBRV07 PTR(8),           /* RESERVED MDC017               */
*      2 ASCBDP PTR(8),             /* DISPATCHING PRIORITY RANGE
*                                      FROM 0-255                    */
*      2 ASCBSTOR PTR(31),          /* TABLE LENGTH AND REAL ADDRESS
*                                      OF SEGMENT TABLE IN THE SAME
*                                      FORMAT AS CONTROL REGISTER ONE
*                                      MDC027                        */
*      2 ASCBLDA PTR(31),           /* POINTER TO LOCAL DATA AREA
*                                      PART OF LSQA FOR VSM          */
*      2 ASCBRSM PTR(31),           /* ADDRESS OF RSM'S CONTROL BLOCK
*                                      HEADER                        */
*      2 ASCBCSCB PTR(31),          /* ADDRESS OF CSCB               */
*      2 ASCBTSB PTR(31),           /* ADDRESS OF TSB                */
*      2 ASCBEJST BIT(64) BDY(DWORD),/* ELAPSED JOB STEP TIMING 03S0045
*                                      UNSIGNED 64-BIT BINARY NUMBER */
*      2 ASCBEWST BIT(64) BDY(DWORD),/* TIME OF DAY WHENEVER I-STREAM
*                                      IS SWITCHED FROM A MEMORY     */
*      2 ASCBJSTL BIT(32) BDY(WORD),/* CPU TIME LIMIT FOR THE JOB
*                                      STEP                          */
*      2 ASCBECB BIT(32) BDY(WORD), /* RCT'S WORK ECB                */
*      2 ASCBUBET BIT(32) BDY(WORD),/* TIME STAMP WHEN USER BECAME
*                                      READY                         */
*      2 ASCBQSVC FIXED(31),        /* CPID FOR SVRB QUICKCELL       */
*      2 ASCBDUMP PTR(31),          /* SVC DUMP'S ECB POINTER        */
*      2 ASCBFW1 FIXED(31),         /* FULL-WORD LABEL TO BE USED FOR
*                                      COMPARE AND SWAP FOR ANY BIT
*                                      IN THIS WORD MDC026           */
*       3 ASCBAFFN BIT(16) BDY(WORD),/* CPU AFFINITY INDICATOR       */
*       3 ASCBRCTF BIT(8),          /* FLAGS FOR RCT                 */
*        4 ASCBTMNO BIT(1),         /* MEMORY IS BEING QUIESCED, IS
*                                      QUIESCED, OR IS BEING RESTORED*/
*        4 ASCBFRS BIT(1),          /* RESTORE REQUEST               */
*        4 ASCBFQU BIT(1),          /* QUICESCE REQUEST              */
*        4 ASCBRV08 BIT(1),         /* RESERVED (MDC031)       YM2236*/
*        4 ASCBWAIT BIT(1),         /* LONG WAIT INDICATOR           */
*        4 ASCBOUT BIT(1),          /* ADDRESS SPACE CONSIDERED 03S0045
*                                      SWAPPED OUT                   */
*        4 ASCBTMLW BIT(1),         /* MEMORY IS IN A LONG WAIT      */
*        4 ASCBRF01 BIT(1),         /* RESERVED                      */
*       3 ASCBFLG1 BIT(8),          /* FLAG BYTE                     */
*        4 ASCBTOFF BIT(1),         /* MEMORY SHOULD NOT BE CHECKED
*                                      FOR JOB STEP TIMING           */
*        4 ASCBCMSH BIT(1),         /* CMS LOCK HELD                 */
*        4 ASCBS3S BIT(1),          /* STAGE II EXIT EFFECTOR HAS
*                                      SCHEDULED A RQE OR IQE AND
*                                      STAGE III EXIT EFFECTOR SHOULD
*                                      BE INVOKED                    */
*        4 ASCBTERM BIT(1),         /* ADDRESS SPACE TERMINATING
*                                      NORMALLY                      */
*        4 ASCBABNT BIT(1),         /* ADDRESS SPACE TERMINATING
*                                      ABNORMALLY                    */
*        4 ASCBSTND BIT(1),         /* TCB'S NON-DISPATCHABLE        */
*        4 ASCBTYP1 BIT(1),         /* TYPE1 SVC HAS CONTROL         */
*        4 ASCBNSWP BIT(1),         /* PROGRAM IS NON SWAPPABLE OR
*                                      WILL RUN IN V=R REGION        */
*      2 ASCBTMCH PTR(31),          /* TERMINATION QUEUE CHAIN       */
*      2 ASCBASXB PTR(31),          /* POINTER TO ADDRESS SPACE 03S0045
*                                      EXTENSION CONTROL BLOCK (ASXB)*/
*      2 ASCBSWCT FIXED(15) BDY(WORD),/* NUMBER OF TIMES MEMORY 03S0045
*                                      ENTERS SHORT WAIT             */
*      2 ASCBDSP1 BIT(8),           /* NON-DISPATCHABILITY FLAGS     */
*       3 ASCBNOQ BIT(1),           /* ASCB NOT ON ASCB DISPATCHING
*                                      QUEUE                         */
*       3 ASCBFAIL BIT(1),          /* A FAILURE HAS OCCURRED WITHIN
*                                      THE ADDRESS SPACE. THE MEMORY
*                                      IS NONDISPATCHABLE            */
*       3 ASCBRF02 BIT(1),          /* RESERVED MDC013               */
*       3 ASCBRF03 BIT(1),          /* RESERVED MDC014               */
*       3 ASCBRF04 BIT(1),          /* RESERVED                      */
*       3 ASCBRF05 BIT(1),          /* RESERVED                      */
*       3 ASCBRF06 BIT(1),          /* RESERVED                      */
*       3 ASCBRF07 BIT(1),          /* RESERVED                      */
*      2 ASCBFLG2 BIT(8),           /* FLAG BYTE MDC015              */
*       3 ASCBXMPT BIT(1),          /* ASCB EXEMPT FROM SYSTEM  03S0045
*                                      NON-DISPATCHABLE MDC013       */
*       3 ASCBPXMT BIT(1),          /* ASCB PERMANENTLY EXEMPT FROM
*                                      SYSTEM NON-DISPATCHABLE MDC014*/
*       3 ASCBCEXT BIT(1),          /* CANCEL TIMER EXTENSION BECAUSE
*                                      EOT PROCESSING IS STARTED FOR
*                                      THE JOB STEP TCB MDC021       */
*       3 ASCBS2S BIT(1),           /* FOR LOCK MANAGER, ENTRY MADE
*                                      TO STAGE II EXIT EFFECTOR
*                                      WITHOUT CORRESPONDING ENTRY TO
*                                      STAGE III EXIT EFFECTOR MDC020*/
*       3 ASCBSNQS BIT(1),          /* STATUS STOP NON-QUIESCEABLE
*                                      LEVEL SRB'S MDC028            */
*       3 ASCBRV04 BIT(1),          /* RESERVED                      */
*       3 ASCBRV05 BIT(1),          /* RESERVED                      */
*       3 ASCBRV06 BIT(1),          /* RESERVED                      */
*      2 ASCBSSRB FIXED(15) BDY(WORD),/* COUNT OF STATUS STOP SRB'S  */
*      2 ASCBSRBS FIXED(15),        /* COUNT OF SRB'S DISPATCHED IN
*                                      THIS MEMORY                   */
*      2 ASCBVSC FIXED(15) BDY(WORD),/* ALLOCATED AUXILIARY SLOT
*                                      COUNT (VAM) MDC004            */
*      2 ASCBNVSC FIXED(15),        /* ALLOCATED AUXILIARY SLOT COUNT
*                                      (NON-VAM) MDC005              */
*      2 ASCBTCBS FIXED(31),        /* NUMBER OF READY TCB'S IN THIS
*                                      MEMORY MDC006                 */
*      2 ASCBCMSF PTR(31),          /* ADDRESS OF NEXT ASCB ON CMS
*                                      SUSPEND QUEUE                 */
*      2 ASCBCMSB PTR(31),          /* ADDRESS OF PREVIOUS ASCB ON
*                                      CMS SUSPEND QUEUE             */
*      2 ASCBQECB BIT(32) BDY(WORD),/* QUIESCE ECB                   */
*      2 ASCBMECB BIT(32) BDY(WORD),/* MEMORY CREATE/DELETE ECB      */
*      2 ASCBOUCB PTR(31),          /* SYSTEM RESOURCES MANAGER (SRM)
*                                      USER CONTROL BLOCK POINTER    */
*      2 ASCBOUXB PTR(31),          /* SYSTEM RESOURCES MANAGER (SRM)
*                                      USER EXTENSION BLOCK POINTER  */
*      2 ASCBFMCT FIXED(15) BDY(WORD),/* ALLOCATED PAGE FRAME COUNT  */
*      2 ASCBRS01 FIXED(15),        /* RESERVED FOR FUTURE USE       */
*      2 ASCBXMPQ PTR(31),          /* POINTER TO XMPOST SRB QUEUE
*                                      MDC023                        */
*      2 ASCBIQEA PTR(31),          /* POINTER TO IQE FOR ATCAM 03S0045
*                                      ASYNCHRONOUS PROCESSING MDC010*/
*      2 ASCBRTWA PTR(31),          /* POINTER TO LAST RTM2 WORK AREA
*                                      ACQUIRED FROM SQA MDC011      */
*      2 ASCBMCC CHAR(4) BDY(WORD), /* USED TO HOLD A MEMORY    03S0045
*                                      TERMINATION COMPLETION CODE ON
*                                      ABNORMAL MEMORY TERMINATION
*                                      MDC012                        */
*      2 ASCBJBNI PTR(31),          /* POINTER TO JOBNAME FIELD FOR
*                                      INITIATED PROGRAMS OR ZERO
*                                      MDC018                        */
*      2 ASCBJBNS PTR(31),          /* POINTER TO JOBNAME FIELD FOR
*                                      START/MOUNT/LOGON OR ZERO
*                                      MDC019                        */
*      2 ASCBLGCB PTR(31),          /* ADDRESS OF LOGICAL GROUP CHAIN
*                                      BLOCK (LGCB) CHAIN MDC022     */
*      2 ASCBVGTT PTR(31),          /* ADDRESS OF VSAM GLOBAL   03S0045
*                                      TERMINATION TABLE (VGTT) 03S0045
*                                      MDC024                        */
*      2 ASCBPCTT PTR(31),          /* ADDRESS OF PRIVATE CATALOG
*                                      TERMINATION TABLE (PCTT) 03S0045
*                                      MDC025                        */
*      2 ASCBRS12 FIXED(15),        /* RESERVED FOR FUTURE USE       */
*      2 ASCBSMCT PTR(8),           /* NUMBER OF OUTSTANDING STEP
*                                      MUST COMPLETE REQUESTS IN
*                                      ADDRESS SPACE MDC016          */
*      2 ASCBRS14 BIT(8),           /* RESERVED FOR FUTURE USE       */
*      2 ASCBSWTL FIXED(31),        /* STEP WAIT TIME LIMIT MDC029   */
*      2 ASCBSRBT CHAR(8) BDY(DWORD),/* ACCUMULATED SRB TIME MDC030  */
*      2 ASCBEND CHAR(0) BDY(DWORD);/* END OF ASCB              03S0045
*                                                                    */
*                                                               03S0046
*/* **************************************************************** */
*/*                                                                  */
*/*            ADDRESS SPACE EXTENSION BLOCK                         */
*/*                                                                  */
*/*  OS/VS2 RELEASE 2, 07/10/73, LEVEL=7                             */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON ASXB GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */
*/*      PL/S - DCL ASXBPTR PTR                                      */
*/*                                                                  */
*/* **************************************************************** */
*                                                               03S0046
*   DCL                                                         03S0046
*     1 ASXB BASED(ASXBPTR) BDY(DWORD),                         03S0046
*      2 ASXBEGIN CHAR(0),          /* BEGINNING OF ASXB             */
*      2 ASXBASXB CHAR(4),          /* ACRONYM IN EBCDIC -ASXB-      */
*      2 ASXBFTCB PTR(31),          /* POINTER TO FIRST TCB ON TCB
*                                      QUEUE                         */
*      2 ASXBLTCB PTR(31),          /* POINTER TO LAST TCB ON TCB
*                                      QUEUE                         */
*      2 ASXBTCBS FIXED(15),        /* NUMBER TCB'S IN THE MEMORY    */
*      2 ASXBRS00 FIXED(15),        /* RESERVED                      */
*      2 ASXBMPST PTR(31),          /* ADDRESS OF MEMORY PROCESS
*                                      SCHEDULING TABLE MDC015       */
*      2 ASXBLWA PTR(31),           /* ADDRESS OF LWA MDC016         */
*      2 ASXBRV14 PTR(31),          /* RESERVED MDC006               */
*      2 ASXBRV15 PTR(31),          /* RESERVED MDC007               */
*      2 ASXBIHSA PTR(31),          /* POINTER TO INTERRUPT HANDLERS
*                                      SAVE AREA FOR LOCALLY LOCKED
*                                      INTERRUPTS                    */
*      2 ASXBFLSA(18) FIXED(31),    /* SAVE AREA FOR ANY FIRST LEVEL
*                                      BRANCH ENTRY (MUST BE FIRST
*                                      USER AFTER LOCAL LOCK    03S0046
*                                      OBTAINED)                     */
*      2 ASXBFRWA PTR(31),          /* POINTER TO FRR WORKAREA       */
*      2 ASXBSPSA PTR(31),          /* POINTER TO LOCAL WORK/SAVE
*                                      AREA VECTOR TABLE             */
*      2 ASXBRSMD PTR(31),          /* POINTER TO LOCAL RSM DATA AREA*/
*      2 ASXBRCTD PTR(31),          /* POINTER TO LOCAL RCT DATA AREA*/
*      2 ASXBDDR PTR(31),           /* POINTER TO DDR WAIT QUEUE     */
*      2 ASXBOUSB PTR(31),          /* POINTER TO SYSTEM RESOURCES
*                                      MANAGER (SRM) USER SWAPPABLE
*                                      BLOCK MDC004                  */
*      2 ASXBRV26 PTR(31),          /* RESERVED (MDC002)       YM2236*/
*      2 ASXBPRG CHAR(16) BDY(WORD),/* SVC PURGE I/O PARAMETER LIST
*                                      MDC003                        */
*      2 ASXBPSWD CHAR(8) BDY(WORD),/* USER'S LOGON PASSWORD. IF
*                                      BLANK, NOT REQUIRED. MDC005   */
*      2 ASXBSIRB PTR(31),          /* ADDRESS OF SIRB FOR THIS 03S0046
*                                      ADDRESS SPACE MDC010          */
*      2 ASXBETSK PTR(31),          /* ADDRESS OF ERROR TASK FOR THIS
*                                      ADDRESS SPACE MDC011          */
*      2 ASXBAEQ CHAR(24) BDY(WORD),/* QUEUE ANCHORS FOR EXIT   03S0046
*                                      EFFECTOR'S ASYNCHRONOUS EXIT
*                                      QUEUES MDC012                 */
*       3 ASXBFIQE PTR(31),         /* ADDRESS OF FIRST IQE MDC006   */
*       3 ASXBLIQE PTR(31),         /* ADDRESS OF LAST IQE MDC007    */
*       3 ASXBFRQE PTR(31),         /* ADDRESS OF FIRST RQE MDC008   */
*       3 ASXBLRQE PTR(31),         /* ADDRESS OF LAST IQE MDC009    */
*       3 ASXBFSRB PTR(31),         /* ADDRESS OF FIRST SRB MDC013   */
*       3 ASXBLSRB PTR(31),         /* ADDRESS OF LAST SRB MDC014    */
*      2 ASXBRV16 PTR(31),          /* RESERVED                      */
*      2 ASXBRV17 PTR(31),          /* RESERVED                      */
*      2 ASXBRV18 PTR(31),          /* RESERVED                      */
*      2 ASXBRV19 PTR(31),          /* RESERVED                      */
*      2 ASXBRV20 PTR(31),          /* RESERVED                      */
*      2 ASXBRV21 PTR(31),          /* RESERVED                      */
*      2 ASXBRV22 PTR(31),          /* RESERVED                      */
*      2 ASXBRV23 PTR(31),          /* RESERVED                      */
*      2 ASXBRV24 PTR(31),          /* RESERVED                      */
*      2 ASXBRV25 PTR(31),          /* RESERVED                      */
*      2 ASXBEND CHAR(0)            /* END OF ASXB                   */
*            BDY(DWORD);                                        03S0046
*                                                               03S0047
*/* **************************************************************** */
*/*                                                                  */
*/*            WORK/SAVE AREA VECTOR TABLES (WSAVT)                  */
*/*                                                                  */
*/*  OS/VS2 RELEASE 2, 07/26/73, LEVEL=17                            */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      PL/S - INCLUDE IHAASXB TO DEFINE ASXBSPSA FOR LOCAL WSAVT.  */
*/*             INCLUDE CVT TO DEFINE CVTSPSA FOR GLOBAL WSAVT.      */
*/*             INCLUDE IHALCCA TO DEFINE LCCACPUS FOR CPU WSAVT.    */
*/*                                                                  */
*/*             ALL 3 WSAVT'S ARE MAPPED UNLESS MACRO VARIABLE(S)    */
*/*             ARE SET TO NO.  CODING %WSALOCAL='NO' BEFORE INCLUDE */
*/*             MEANS THAT A MAPPING OF LOCAL WSAVT WILL NOT BE      */
*/*             PRODUCED.  %WSAGLOBL='NO' SUPPRESSES GLOBAL WSAVT    */
*/*             MAPPING.  %WSACPU='NO' SUPPRESSES CPU WSAVT MAPPING. */
*/*                                                                  */
*/*      BAL -  THERE ARE 4 KEYWORD PARAMETERS AS FOLLOWS -          */
*/*                                                                  */
*/*             1. CLASS=LOCAL/GLOBAL/CPU WITH A DEFAULT OF LOCAL.   */
*/*                THIS PARAMETER DETERMINES WHICH WSAVT MAPPING IS  */
*/*                PRODUCED.                                         */
*/*                                                                  */
*/*             2. DSECT=YES/NO WITH A DEFAULT OF YES.  IF YES, A    */
*/*                DSECT IS PRODUCED FOR MAPPING REQUESTED BY CLASS  */
*/*                PARAMETER.  THE DSECT NAMES ARE -                 */
*/*                     WSAL - LOCAL WSAVT                           */
*/*                     WSAG - GLOBAL WSAVT                          */
*/*                     WSAC - CPU WSAVT                             */
*/*                                                                  */
*/*             3. FUNC=INIT.  IF THIS PARAMETER IS SPECIFIED, AN    */
*/*                INITIALIZED TABLE OF HALF-WORD LENGTH VALUES      */
*/*                DESCRIBING THE NUMBER OF ENTRIES AND LENGTH OF    */
*/*                EACH ENTRY IN WSAVT SPECIFIED BY CLASS PARAMETER  */
*/*                IS PRODUCED.                                      */
*/*                                                                  */
*/*             4. ACR=YES/NO WITH A DEFAULT OF YES.  IF CLASS=CPU   */
*/*                AND DSECT=NO, ACR=YES CREATES A WORK/SAVE AREA    */
*/*                FOR ACR, AND ACR=NO CREATES A RESERVED 8-BYTE     */
*/*                AREA BECAUSE ACR IS NOT IN THE SYSTEM.            */
*/*                                                                  */
*/*             DSECT=NO MUST BE SPECIFIED IF FUNC=INIT IS SPECIFIED.*/
*/*                                                                  */
*/*             IF DSECT=NO IS SPECIFIED AND FUNC=INIT IS NOT        */
*/*             SPECIFIED, THE MAPPING OF WSAVT WILL BE FOLLOWED BY  */
*/*             MAPPING OF ACTUAL WORK/SAVE AREAS.                   */
*/*                                                                  */
*/* **************************************************************** */
*                                                               03S0047
*   DECLARE                                                     03S0047
*     1 WSAL BASED(ASXBSPSA) BDY(DWORD),/* LOCAL WORK/SAVE AREA 03S0047
*                                      VECTOR TABLE                  */
*      2 WSALCWSA PTR(31),          /* ADDRESS OF LOW-LEVEL COMMON
*                                      SAVE AREA (104 BYTES)         */
*      2 WSALVALC PTR(31),          /* ADDRESS OF VALIDITY CHECK SAVE
*                                      AREA (64 BYTES)               */
*      2 WSALRTM2 PTR(31),          /* ADDRESS OF RECOVERY      03S0047
*                                      TERMINATION MONITOR (RTM) SAVE
*                                      AREA (80 BYTES)               */
*      2 WSALSDMP PTR(31),          /* ADDRESS OF SDUMP SAVE AREA (80
*                                      BYTES)                        */
*      2 WSALABTM PTR(31),          /* ADDRESS OF ABTERM SAVE AREA
*                                      (80 BYTES)                    */
*      2 WSALCIRB PTR(31),          /* ADDRESS OF CIRB SAVE AREA (80
*                                      BYTES) MDC005                 */
*      2 WSALS2EE PTR(31),          /* ADDRESS OF STAGE 2 EXIT  03S0047
*                                      EFFECTOR SAVE AREA (80 BYTES) */
*      2 WSALEXIT PTR(31),          /* ADDRESS OF EXIT (SVC 3) SAVE
*                                      AREA (128 BYTES)              */
*      2 WSALPOST PTR(31),          /* ADDRESS OF POST SAVE AREA (72
*                                      BYTES)                        */
*      2 WSALWAIT PTR(31),          /* ADDRESS OF WAIT SAVE AREA (72
*                                      BYTES)                        */
*      2 WSALSTAT PTR(31),          /* ADDRESS OF STATUS SAVE AREA
*                                      (72 BYTES)                    */
*      2 WSALSTAE PTR(31),          /* ADDRESS OF STAE SAVE AREA (112
*                                      BYTES) MDC003                 */
*      2 WSALRV01 PTR(31),          /* RESERVED MDC015               */
*      2 WSALRSM PTR(31),           /* ADDRESS OF REAL STORAGE  03S0047
*                                      MANAGEMENT (RSM) SAVE AREA (72
*                                      BYTES) (MDC025)         YM2689*/
*      2 WSALACHP PTR(31);          /* ADDRESS OF ASCB CHAP ROUTINE
*                                      SAVE AREA (40 BYTES)          */
*   DECLARE                                                     03S0048
*     1 WSAG BASED(CVTSPSA) BDY(DWORD),/* GLOBAL WORK/SAVE AREA 03S0048
*                                      VECTOR TABLE                  */
*      2 WSAGPGIO PTR(31),          /* ADDRESS OF PAGE I/O ERROR SAVE
*                                      AREA (80 BYTES)               */
*      2 WSAGGMFM PTR(31),          /* ADDRESS OF GETMAIN/ FREEMAIN
*                                      SAVE AREA (1104 BYTES) MDC010 */
*      2 WSAGRSM PTR(31),           /* ADDRESS OF REAL STORAGE  03S0048
*                                      MANAGEMENT (RSM) SAVE AREA
*                                      (1024 BYTES)                  */
*      2 WSAGSSRS PTR(31),          /* ADDRESS OF SUSPEND/RESET FOR
*                                      RSM SAVE AREA (80 BYTES)      */
*      2 WSAGEMS0 PTR(31),          /* ADDRESS OF MEMORY SWITCH SAVE
*                                      AREA (56 BYTES)               */
*      2 WSAGSTAT PTR(31),          /* ADDRESS OF STATUS SAVE AREA
*                                      (72 BYTES)                    */
*      2 WSAGOPTM PTR(31),          /* ADDRESS OF SYSTEM RESOURCES
*                                      MANAGER (SRM) SAVE AREA (400
*                                      BYTES) MDC017                 */
*      2 WSAGMEMT PTR(31),          /* ADDRESS OF MEMORY TERMINATION
*                                      SAVE AREA (80 BYTES)          */
*      2 WSAGNQDQ PTR(31),          /* ADDRESS OF ENQ/DEQ SAVE AREA
*                                      (296 BYTES) MDC011            */
*      2 WSAGREST PTR(31),          /* ADDRESS OF WORK/SAVE AREA FOR
*                                      STATUS SAVING BY STOP AND
*                                      RESTART SUBROUTINE (168 BYTES)
*                                      MDC018                        */
*      2 WSAGSCHE PTR(31);          /* ADDRESS OF SCHEDULE ROUTINE
*                                      (IEAVESC0) SAVE AREA FOR 03S0048
*                                      SYSEVENT BRANCH ENTRY    03S0048
*                                      INTERFACE (72 BYTES) MDC014   */
*   DECLARE                                                     03S0049
*     1 WSAC BASED(LCCACPUS) BDY(DWORD),/* CPU WORK/SAVE AREA VECTOR
*                                      TABLE                         */
*      2 WSACCWSA PTR(31),          /* ADDRESS OF LOW-LEVEL COMMON
*                                      SAVE AREA (104 BYTES)         */
*      2 WSACGTF PTR(31),           /* ADDRESS OF GTF SAVE AREA (136
*                                      BYTES) MDC002                 */
*      2 WSACOPTM PTR(31),          /* ADDRESS OF SYSTEM RESOURCES
*                                      MANAGER (SRM) SAVE AREA (192
*                                      BYTES) MDC016                 */
*      2 WSACTIME PTR(31),          /* ADDRESS OF TIMER SAVE AREA (96
*                                      BYTES) MDC008                 */
*      2 WSACACR PTR(31),           /* ADDRESS OF AUTOMATIC CPU 03S0049
*                                      RECONFIGURATION (ACR) SAVE
*                                      AREA (1280 BYTES) (376 BYTES +
*                                      SOFTWARE FIELDS OF PSA) OR
*                                      ADDRESS OF 8-BYTE RESERVED
*                                      AREA IF ACR IS NOT IN THE
*                                      SYSTEM MDC024                 */
*      2 WSACRTMK PTR(31),          /* ADDRESS OF RECOVERY      03S0049
*                                      TERMINATION MONITOR MACHINE
*                                      CHECK HANDLER (RTM/MACHK) SAVE
*                                      AREA (88 BYTES)               */
*      2 WSACIOS PTR(31),           /* ADDRESS OF IOS (FLIH) SAVE
*                                      AREA (80 BYTES)               */
*      2 WSACEDS0 PTR(31),          /* ADDRESS OF DISPATCHER SAVE
*                                      AREA (80 BYTES)               */
*      2 WSACMF1 PTR(31),           /* ADDRESS OF MEASUREMENT   03S0049
*                                      FACILITY 1 SAVE AREA (144
*                                      BYTES) MDC019                 */
*      2 WSACABTM PTR(31),          /* ADDRESS OF ABTERM SAVE AREA
*                                      (72 BYTES) MDC006             */
*      2 WSACRSTI PTR(31),          /* ADDRESS OF I/O RESTART SAVE
*                                      AREA (128 BYTES) MDC009       */
*      2 WSACREST PTR(31),          /* ADDRESS OF WORK/SAVE AREA FOR
*                                      STATUS SAVING BY STOP AND
*                                      RESTART SUBROUTINE (80 BYTES)
*                                      MDC013                        */
*      2 WSACRRSA PTR(31),          /* ADDRESS OF SUPERVISOR REPAIR
*                                      ROUTINE SAVE AREA (64 BYTES)
*                                      MDC022                        */
*      2 WSACCCH PTR(31);           /* ADDRESS OF RECOVERY MANAGEMENT
*                                      SERVICES - CHANNEL CHECK 03S0049
*                                      HANDLER (RMS-CCH) SAVE AREA
*                                      (72 BYTES) MDC023        03S0049
*                                                                    */
*                                                               03S0050
*/* **************************************************************** */
*/*                                                                  */
*/*            LOGICAL CONFIGURATION COMMUNICATION AREA              */
*/*                                                                  */
*/*  OS/VS2 RELEASE 2, 09/18/73, LEVEL=15                            */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON LCCA GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */
*/*      PL/S - DCL LCCAPTR PTR                                      */
*/*                                                                  */
*/* **************************************************************** */
*                                                               03S0050
*   DECLARE                                                     03S0050
*     1 LCCA BASED(LCCAPTR) BDY(DWORD),                         03S0050
*      2 LCCALCCA CHAR(4) BDY(WORD),/* CONTROL BLOCK ACRONYM IN 03S0050
*                                      EBCDIC                        */
*      2 LCCACPUA PTR(15),          /* LOGICAL CPU ADDRESS           */
*      2 LCCARV77 FIXED(15),        /* RESERVED                      */
*      2 LCCAPGR1(16) FIXED(31),    /* PROGRAM CHECK FLIH REGISTER
*                                      SAVE AREA 1                   */
*      2 LCCAPGR2(16) FIXED(31),    /* PROGRAM CHECK FLIH REGISTER
*                                      SAVE AREA 2                   */
*      2 LCCAPPSW CHAR(8) BDY(DWORD),/* PROGRAM CHECK FLIH PSW SAVE
*                                      AREA                          */
*      2 LCCAPINT FIXED(31),        /* PROGRAM CHECK FLIH ILC AND
*                                      INTERRUPT CODE SAVE AREA      */
*      2 LCCAPVAD FIXED(31),        /* TRANSLATION EXCEPTION ADDRESS
*                                      SAVE AREA                     */
*      2 LCCAMCR1 FIXED(31),        /* MASTER MEMORY'S STOR REGISTER
*                                      VALUE                         */
*      2 LCCACR0 FIXED(31),         /* WORK AREA FOR TESTING BITS IN
*                                      CONTROL REGISTER 0            */
*      2 LCCAXGR1(16) FIXED(31),    /* EXTERNAL FLIH REGISTER SAVE
*                                      AREA 1                        */
*      2 LCCAXGR2(16) FIXED(31),    /* EXTERNAL FLIH REGISTER SAVE
*                                      AREA 2                        */
*      2 LCCAXGR3(16) FIXED(31),    /* EXTERNAL FLIH REGISTER SAVE
*                                      AREA 3                        */
*      2 LCCARSGR(16) FIXED(31),    /* RESTART FLIH REGISTER SAVE
*                                      AREA                          */
*      2 LCCARSFP CHAR(32) BDY(DWORD),/* RESTART FLIH FLOATING POINT
*                                      REGISTER SAVE AREA            */
*      2 LCCAGPGR(16) FIXED(31),    /* I/O AND SVC FLIH REGISTER SAVE
*                                      AREA                          */
*      2 LCCAIOPS CHAR(8) BDY(DWORD),/* I/O FLIH PSW SAVE AREA       */
*      2 LCCAIHRC CHAR(4) BDY(WORD),/* GENERAL FLIH RECURSION FLAGS  */
*       3 LCCAIHR1 BIT(8),          /* FIRST BYTE OF LCCAIHRC        */
*        4 LCCAXRC1 BIT(1),         /* EXTERNAL FLIH RECURSION BIT 1 */
*        4 LCCAXRC2 BIT(1),         /* EXTERNAL FLIH RECURSION BIT 2 */
*        4 LCCAPDAT BIT(1),         /* PROGRAM CHECK FLIH DAT   03S0050
*                                      RECURSION BIT                 */
*        4 LCCAPSG1 BIT(1),         /* PROGRAM CHECK FLIH SEGMENT
*                                      RECURSION BIT                 */
*        4 LCCAPPIE BIT(1),         /* PROGRAM CHECK FLIH SPIE  03S0050
*                                      PROCESS RECURSION BIT         */
*        4 LCCARV01 BIT(1),         /* RESERVED                      */
*        4 LCCARV02 BIT(1),         /* RESERVED                      */
*        4 LCCARV03 BIT(1),         /* RESERVED                      */
*       3 LCCAIHR2 BIT(8),          /* SECOND BYTE OF LCCAIHRC       */
*        4 LCCARV04 BIT(1),         /* RESERVED                      */
*        4 LCCARV05 BIT(1),         /* RESERVED                      */
*        4 LCCARV06 BIT(1),         /* RESERVED                      */
*        4 LCCARV07 BIT(1),         /* RESERVED                      */
*        4 LCCARV08 BIT(1),         /* RESERVED                      */
*        4 LCCARV09 BIT(1),         /* RESERVED                      */
*        4 LCCARV10 BIT(1),         /* RESERVED                      */
*        4 LCCARV11 BIT(1),         /* RESERVED                      */
*       3 LCCAIHR3 BIT(8),          /* THIRD BYTE OF LCCAIHRC        */
*        4 LCCARV12 BIT(1),         /* RESERVED                      */
*        4 LCCARV13 BIT(1),         /* RESERVED                      */
*        4 LCCARV14 BIT(1),         /* RESERVED                      */
*        4 LCCARV15 BIT(1),         /* RESERVED                      */
*        4 LCCARV16 BIT(1),         /* RESERVED                      */
*        4 LCCARV17 BIT(1),         /* RESERVED                      */
*        4 LCCARV18 BIT(1),         /* RESERVED                      */
*        4 LCCARV19 BIT(1),         /* RESERVED                      */
*       3 LCCAIHR4 BIT(8),          /* FOURTH BYTE OF LCCAIHRC       */
*        4 LCCARV20 BIT(1),         /* RESERVED                      */
*        4 LCCARV21 BIT(1),         /* RESERVED                      */
*        4 LCCARV22 BIT(1),         /* RESERVED                      */
*        4 LCCARV23 BIT(1),         /* RESERVED                      */
*        4 LCCARV24 BIT(1),         /* RESERVED                      */
*        4 LCCARV25 BIT(1),         /* RESERVED                      */
*        4 LCCARV26 BIT(1),         /* RESERVED                      */
*        4 LCCARV27 BIT(1),         /* RESERVED                      */
*      2 LCCASPIN CHAR(4) BDY(WORD),/* PROCESSOR IS SPINNING    03S0050
*                                      INDICATORS                    */
*       3 LCCASPN1 BIT(8),          /* FIRST BYTE OF LCCASPIN        */
*        4 LCCAPTLB BIT(1),         /* PTLB PROCESSOR SPIN BIT       */
*        4 LCCASIGP BIT(1),         /* SIGP PROCESSOR SPIN BIT       */
*        4 LCCALOCK BIT(1),         /* LOCK MANAGER SPIN BIT         */
*        4 LCCATSPN BIT(1),         /* SIMULATES SPIN FOR TIMER 03S0050
*                                      SUPERVISOR AT VARY TIME       */
*        4 LCCARSTR BIT(1),         /* USED BY A PROGRAM SPINNING FOR
*                                      THE RESTART RESOURCE MDC035   */
*        4 LCCAMFIO BIT(1),         /* MF/1 IOS INITIALIZATION SPIN
*                                      BIT - USED BY MF/1 EMERGENCY
*                                      SIGNAL (EMS) AND MALFUNCTION
*                                      ALERT (MFA) MDC036            */
*        4 LCCARV30 BIT(1),         /* RESERVED                      */
*        4 LCCARV31 BIT(1),         /* RESERVED                      */
*       3 LCCASPN2 BIT(8),          /* SECOND BYTE OF LCCASPIN       */
*        4 LCCARV32 BIT(1),         /* RESERVED                      */
*        4 LCCARV33 BIT(1),         /* RESERVED                      */
*        4 LCCARV34 BIT(1),         /* RESERVED                      */
*        4 LCCARV35 BIT(1),         /* RESERVED                      */
*        4 LCCARV36 BIT(1),         /* RESERVED                      */
*        4 LCCARV37 BIT(1),         /* RESERVED                      */
*        4 LCCARV38 BIT(1),         /* RESERVED                      */
*        4 LCCARV39 BIT(1),         /* RESERVED                      */
*       3 LCCASPN3 BIT(8),          /* THIRD BYTE OF LCCASPIN        */
*        4 LCCARV40 BIT(1),         /* RESERVED                      */
*        4 LCCARV41 BIT(1),         /* RESERVED                      */
*        4 LCCARV42 BIT(1),         /* RESERVED                      */
*        4 LCCARV43 BIT(1),         /* RESERVED                      */
*        4 LCCARV44 BIT(1),         /* RESERVED                      */
*        4 LCCARV45 BIT(1),         /* RESERVED                      */
*        4 LCCARV46 BIT(1),         /* RESERVED                      */
*        4 LCCARV47 BIT(1),         /* RESERVED                      */
*       3 LCCASPN4 BIT(8),          /* FOURTH BYTE OF LCCASPIN       */
*        4 LCCARV48 BIT(1),         /* RESERVED                      */
*        4 LCCARV49 BIT(1),         /* RESERVED                      */
*        4 LCCARV50 BIT(1),         /* RESERVED                      */
*        4 LCCARV51 BIT(1),         /* RESERVED                      */
*        4 LCCARV52 BIT(1),         /* RESERVED                      */
*        4 LCCARV53 BIT(1),         /* RESERVED                      */
*        4 LCCARV54 BIT(1),         /* RESERVED                      */
*        4 LCCARV55 BIT(1),         /* RESERVED                      */
*      2 LCCAESSA FIXED(31),        /* EMERGENCY SIGNAL SLIH SAVE
*                                      AREA FOR EXTERNAL FLIH RETURN
*                                      ADDRESS MDC012                */
*      2 LCCAASCP FIXED(31),        /* SAVE AREA FOR ISSUING    03S0050
*                                      PROCESSOR'S PCCA ADDRESS 03S0050
*                                      MDC013                        */
*      2 LCCACPUS PTR(31),          /* POINTER TO CPU WORK/SAVE AREA
*                                      VECTOR TABLE                  */
*      2 LCCADSF1 BIT(8) BDY(WORD), /* DISPATCHER STATUS INDICATOR
*                                      BYTE 1                        */
*       3 LCCAACR BIT(1),           /* ACR IN PROGRESS               */
*       3 LCCAVCPU BIT(1),          /* VARY CPU IN PROGRESS          */
*       3 LCCADSS BIT(1),           /* IF ON, INDICATES TO THE  03S0050
*                                      DISPATCHER THAT DSS IS WAITING
*                                      TO BE ACTIVATED AND A MEMORY
*                                      SWITCH MUST BE PERFORMED 03S0050
*                                      MDC002                        */
*       3 LCCATIMR BIT(1),          /* CPU'S TOD CLOCK IS TO BE OR IS
*                                      BEING SYNCHRONIZED MDC011     */
*       3 LCCARV58 BIT(1),          /* RESERVED                      */
*       3 LCCARV59 BIT(1),          /* RESERVED                      */
*       3 LCCARV60 BIT(1),          /* RESERVED                      */
*       3 LCCARV61 BIT(1),          /* RESERVED                      */
*      2 LCCADSF2 BIT(8) BDY(WORD,2),/* DISPATCHER STATUS INDICATOR
*                                      BYTE 2                        */
*       3 LCCASRBM BIT(1),          /* SRB MODE INDICATOR            */
*       3 LCCAGSRB BIT(1),          /* GLOBAL SRB-MODE INDICATOR     */
*       3 LCCADSPL BIT(1),          /* LOCAL LOCK GOTTEN BY     03S0050
*                                      DISPATCHER MDC040             */
*       3 LCCADSRW BIT(1),          /* DISPATCHER HAS DISPATCHED
*                                      READY WORK MDC046             */
*       3 LCCARV64 BIT(1),          /* RESERVED                      */
*       3 LCCARV65 BIT(1),          /* RESERVED                      */
*       3 LCCARV66 BIT(1),          /* RESERVED                      */
*       3 LCCARV67 BIT(1),          /* RESERVED                      */
*      2 LCCAPSMK CHAR(1) BDY(WORD,3),/* STORE AREA FOR FLIH'S STOSM
*                                      INSTRUCTION                   */
*      2 LCCARV68 CHAR(1),          /* RESERVED                      */
*      2 LCCASPSA CHAR(48) BDY(WORD),/* REGISTER SAVE AREA FOR  03S0050
*                                      INTER-CPU COMMUNICATION       */
*       3 LCCADSR2 FIXED(31),       /* IEAVEDR'S CALLER'S REGISTER 2
*                                      MDC014                        */
*       3 LCCADSR3 FIXED(31),       /* IEAVEDR'S CALLER'S REGISTER 3
*                                      MDC015                        */
*       3 LCCADSR4 FIXED(31),       /* IEAVEDR'S CALLER'S REGISTER 4
*                                      MDC016                        */
*       3 LCCADSR5 FIXED(31),       /* IEAVEDR'S CALLER'S REGISTER 5
*                                      MDC017                        */
*       3 LCCARPR2 FIXED(31),       /* IEAVERP'S CALLER'S REGISTER 2
*                                      MDC018                        */
*       3 LCCARPR3 FIXED(31),       /* IEAVERP'S CALLER'S REGISTER 3
*                                      MDC019                        */
*       3 LCCARPR4 FIXED(31),       /* IEAVERP'S CALLER'S REGISTER 4
*                                      MDC020                        */
*       3 LCCARPR5 FIXED(31),       /* IEAVERP'S CALLER'S REGISTER 5
*                                      MDC021                        */
*       3 LCCARIR2 FIXED(31),       /* IEAVERI'S CALLER'S REGISTER 2
*                                      MDC022                        */
*       3 LCCARIR3 FIXED(31),       /* IEAVERI'S CALLER'S REGISTER 3
*                                      MDC023                        */
*       3 LCCARIR4 FIXED(31),       /* IEAVERI'S CALLER'S REGISTER 4
*                                      MDC024                        */
*       3 LCCARIR5 FIXED(31),       /* IEAVERI'S CALLER'S REGISTER 5
*                                      MDC025                        */
*      2 LCCASTOD CHAR(8) BDY(DWORD),/* TOD AT LAST TASK TIME   03S0050
*                                      INTERVAL                      */
*      2 LCCADTOD CHAR(8) BDY(DWORD),/* TOD VALUE WHEN TCB IS   03S0050
*                                      DISPATCHED                    */
*      2 LCCAITOD CHAR(8) BDY(DWORD),/* TOD VALUE WHEN I/O OR   03S0050
*                                      EXTERNAL INTERRUPT            */
*      2 LCCAWTIM CHAR(8) BDY(DWORD),/* ACCUMULATED CPU WAIT TIME    */
*      2 LCCADSS1(3) FIXED(31),     /* GENERAL REGISTERS 15-1 AS
*                                      SAVED BY DSS PROGRAM OR SVC
*                                      INTERRUPT HANDLER MDC026      */
*      2 LCCADSS2(3) FIXED(31),     /* GENERAL REGISTERS 15-1 AS
*                                      SAVED BY DSS I/O OR EXTERNAL
*                                      INTERRUPT HANDLER MDC027      */
*      2 LCCADSS3(3) FIXED(31),     /* GENERAL REGISTERS 15-1 AS
*                                      SAVED BY DSS MACHINE CHECK
*                                      INTERRUPT HANDLER MDC028      */
*      2 LCCADSSC(2) FIXED(31),     /* DSS CONTROL REGISTERS 0 AND 1
*                                      SAVE AREA MDC029              */
*      2 LCCADSSR FIXED(31),        /* DSS CONTROL REGISTER 14 SAVE
*                                      AREA MDC030                   */
*      2 LCCASRBJ FIXED(31),        /* SUSPENDED SERVICE REQUEST
*                                      BLOCK (SRB) JOURNAL WORD USED
*                                      BY SETLOCK MDC043             */
*      2 LCCADCPU PTR(31),          /* VIRTUAL ADDRESS OF LCCA OF
*                                      FAILING CPU                   */
*      2 LCCARCPU PTR(31),          /* VIRTUAL ADDRESS OF LCCA OF
*                                      RECOVERING CPU                */
*      2 LCCACRLC FIXED(31),        /* ACR SAVE AREA FOR HIGHEST LOCK
*                                      HELD INDICATOR                */
*      2 LCCALCR0 FIXED(31),        /* SAVE AREA FOR CONTROL REGISTER
*                                      0 FOR SETLOCK                 */
*      2 LCCACRFL BIT(8),           /* ACR FLAGS                     */
*       3 LCCACRTM BIT(1),          /* RTM ENTRY BIT                 */
*       3 LCCACLMS BIT(1),          /* PROCESS SUSPENDED             */
*       3 LCCARV69 BIT(1),          /* RESERVED                      */
*       3 LCCARV70 BIT(1),          /* RESERVED                      */
*       3 LCCARV71 BIT(1),          /* RESERVED                      */
*       3 LCCARV72 BIT(1),          /* RESERVED                      */
*       3 LCCARV73 BIT(1),          /* RESERVED                      */
*       3 LCCAVARY BIT(1),          /* TELLS ACR THAT VARY IS IN
*                                      PROGRESS MDC038               */
*      2 LCCACREX BIT(8),           /* ACR ENTRY AND EXIT FLAGS      */
*       3 LCCACREF BIT(1),          /* EXTERNAL ROUTINE              */
*       3 LCCACRRM BIT(1),          /* FINAL EXIT                    */
*       3 LCCACRLE BIT(1),          /* LOCK MANAGER EXIT             */
*       3 LCCACRRT BIT(1),          /* FRR EXIT                      */
*       3 LCCACRIN BIT(1),          /* ENTRY TYPE = ACR              */
*       3 LCCACRLM BIT(1),          /* ENTRY TYPE = ACRLM            */
*       3 LCCACRDP BIT(1),          /* ENTRY TYPE = ACRDISP          */
*       3 LCCACRST BIT(1),          /* SYSTERM TERMINATION EXIT FLAG
*                                      MDC037                        */
*      2 LCCALKFG BIT(8),           /* LOCK FLAG BYTE MDC005         */
*       3 LCCALKDP BIT(1),          /* DISPATCHER LOCK OBTAINED BY
*                                      SETLOCK MDC039                */
*       3 LCCALKSA BIT(1),          /* STORAGE ALLOCATION LOCK  03S0050
*                                      OBTAINED BY SETLOCK MDC041    */
*       3 LCCALKAQ BIT(1),          /* ASCB BEING QUEUED TO THE 03S0050
*                                      SUSPEND QUEUE BY SETLOCK 03S0050
*                                      MDC042                        */
*       3 LCCALKRD BIT(1),          /* THIS IS A LOCK MANAGER RELEASE
*                                      DISABLED REQUEST MDC047       */
*       3 LCCARV84 BIT(1),          /* RESERVED                      */
*       3 LCCARV85 BIT(1),          /* RESERVED                      */
*       3 LCCARV86 BIT(1),          /* RESERVED                      */
*       3 LCCARV87 BIT(1),          /* RESERVED                      */
*      2 LCCARV88 CHAR(1),          /* RESERVED                      */
*      2 LCCAPINV FIXED(31),        /* SAVE AREA FOR CONTROL REGISTER
*                                      WHEN OPEN WINDOW INTERFACE TO
*                                      EXTERNAL FLIH IS INVOKED      */
*      2 LCCARV78 FIXED(31),        /* RESERVED                      */
*      2 LCCALWTM CHAR(8) BDY(DWORD),/* VALUE OF LCCAWTIM AT THE END
*                                      OF A MEASUREMENT INTERVAL
*                                      MDC001                        */
*      2 LCCAICR0 FIXED(31),        /* SAVE AREA FOR CONTROL REGISTER
*                                      0 FOR IPC MDC007              */
*      2 LCCAECSA FIXED(31),        /* EXTERNAL CALL'S SLIH SAVE AREA
*                                      FOR EXTERNAL FLIH RETURN 03S0050
*                                      REGISTER MDC008               */
*      2 LCCASRBF CHAR(8) BDY(DWORD),/* SRB FIELDS MDC009            */
*       3 LCCASAFN FIXED(15),       /* CPU AFFINITY IF IN SRB MODE
*                                      MDC003                        */
*       3 LCCAPGTA CHAR(6) BDY(DWORD,3),/* ASID/TCB IF IN SRB MODE
*                                      MDC004                        */
*      2 LCCARV89 FIXED(31),        /* RESERVED FOR SRB EXPANSION    */
*      2 LCCARV90 FIXED(31),        /* RESERVED                      */
*      2 LCCAIRT CHAR(128) BDY(DWORD),/* IOS RECOVERY TABLE     03S0050
*                                      DESCRIBING ACTIVE REQUESTS,
*                                      LOCKS, ETC. MDC010            */
*      2 LCCASMQJ FIXED(31),        /* GLOBAL SERVICE MANAGER QUEUE
*                                      (GSMQ) AND LOCAL SERVICE 03S0050
*                                      MANAGER QUEUE (LSMQ) JOURNAL
*                                      WORD USED BY DISPATCHER AND
*                                      SCHEDULE MDC044               */
*      2 LCCASPLJ FIXED(31),        /* GLOBAL SYSTEM PRIORITY LIST
*                                      (GSPL) AND LOCAL SYSTEM  03S0050
*                                      PRIORITY LIST (LSPL) JOURNAL
*                                      WORD USED BY DISPATCHER MDC045*/
*      2 LCCAESS2 PTR(31),          /* EMERGENCY SIGNAL SLIH SAVE
*                                      AREA FOR EXTERNAL FLIH'S 03S0050
*                                      RETURN ADDRESS ON RECURSIVE
*                                      ENTRIES (MDC048)        YM2608*/
*      2 LCCAR103 PTR(31),          /* RESERVED                      */
*      2 LCCADRT1 CHAR(8) BDY(DWORD),/* TIME OF DAY (TOD) ON FIRST
*                                      SIGP BUSY CONDITION (MDC049)
*                                                              YM3563*/
*      2 LCCADRT2 CHAR(8) BDY(DWORD),/* TIME OF DAY (TOD) ON    03S0050
*                                      SUBSEQUENT SIGP BUSY CONDITION
*                                      (MDC050)                YM3563*/
*      2 LCCAR108 PTR(31),          /* RESERVED                      */
*      2 LCCAR109 PTR(31),          /* RESERVED                      */
*      2 LCCAR110 PTR(31),          /* RESERVED                      */
*      2 LCCAR111 PTR(31),          /* RESERVED                      */
*      2 LCCAR112 PTR(31),          /* RESERVED                      */
*      2 LCCAR113 PTR(31),          /* RESERVED                      */
*      2 LCCAR114 PTR(31),          /* RESERVED                      */
*      2 LCCAR115 PTR(31),          /* RESERVED                      */
*      2 LCCAR116 PTR(31),          /* RESERVED                      */
*      2 LCCAR117 PTR(31),          /* RESERVED                      */
*      2 LCCAR118 PTR(31),          /* RESERVED                      */
*      2 LCCAR119 PTR(31),          /* RESERVED                      */
*      2 LCCAR120 PTR(31),          /* RESERVED                      */
*      2 LCCAR121 PTR(31),          /* RESERVED                      */
*      2 LCCAR122 PTR(31),          /* RESERVED                      */
*      2 LCCAR123 PTR(31),          /* RESERVED                      */
*      2 LCCAR124 PTR(31),          /* RESERVED                      */
*      2 LCCAR125 PTR(31);          /* RESERVED                 03S0050
*                                                                    */
*                                                               03S0051
*/*                                                                  */
*/*      COMMUNICATION VECTOR TABLE                                  */
*/*                                                                  */
*/*      OS/VS1 RELEASE 3, OS/VS2 RELEASE 2, 11/15/73, LEVEL=32      */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      PL/S - DCL CVTPTR PTR                                       */
*/*      BAL  - DSECT=YES SHOULD BE SPECIFIED ON MACRO CALL EXCEPT   */
*/*             WHEN CALLED DURING SYSGEN TO CREATE CSECT.  CVT FOR  */
*/*             OS/VS2 IS MAPPED UNLESS SYS=AOS1 IS SPECIFIED.  THE  */
*/*             PREFIX IS NOT MAPPED UNLESS PREFIX=YES IS SPECIFIED. */
*/*             A USING ON CVTMAP OR DSECT NAME WILL ESTABLISH       */
*/*             ADDRESSABILITY FOR ALL SYMBOLS EXCEPT IN THE 2       */
*/*             EXTENSIONS.  TO ESTABLISH ADDRESSABILITY FOR THE     */
*/*             OS - OS/VS COMMON EXTENSION, YOU SHOULD CODE         */
*/*                                                                  */
*/*             L     REG,CVTEXT1                                    */
*/*             USING CVTXTNT1,REG                                   */
*/*                                                                  */
*/*             TO ESTABLISH ADDRESSABILITY FOR THE OS/VS1 - OS/VS2  */
*/*             COMMON EXTENSION, YOU SHOULD CODE                    */
*/*                                                                  */
*/*             L     REG,CVTEXT2                                    */
*/*             USING CVTXTNT2,REG                                   */
*/*                                                                  */
*/*             WHERE REG IN EITHER CASE IS ANY REGISTER OTHER       */
*/*             THAN ZERO.                                           */
*/*                                                                  */
*/*             WHEN LISTING IS SUPPRESSED, YOU CAN DETERMINE WHICH  */
*/*             DSECT A SYMBOL IS IN BY USING THE STATEMENT NUMBER   */
*/*             IN THE DEFN COLUMN IN THE CROSS REFERENCE LISTING.   */
*/*             FOR EXAMPLE, ANY SYMBOL DEFINED BETWEEN THE          */
*/*             STATEMENT NUMBERS FOR CVTXTNT1 AND CVTXTNT2 IS IN    */
*/*             THE OS - OS/VS COMMON EXTENSION.                     */
*/*                                                                  */
*/*  F.E.'S                                                          */
*/*      MICROFICHE LISTING - CVT                                    */
*/*                                                                  */
*/*  DEVELOPERS                                                      */
*/*      BAL LISTING  - SPECIFY LIST=YES ON MACRO CALL               */
*/*      PL/S LISTING - SPECIFY %IHALIST='YES' BEFORE INCLUDE        */
*/*                                                                  */
*/*      FOR INTEGRATION, A LISTING MUST NOT BE REQUESTED UNLESS     */
*/*      YOUR MODULE CREATES THE CSECT.                              */
*                                                               03S0051
*                                                               03S0051
*/*                    CVT PROPER                                    */
*                                                               03S0051
*   DECLARE                                                     03S0051
*     1 CVTMAP BASED(CVTPTR) BDY(WORD),                         03S0051
*      2 CVT CHAR(0) BDY(WORD),     /* BEGINNING OF CVT MDC150       */
*      2 CVTTCBP PTR(31),           /* ADDRESS OF A DOUBLE WORD, THE
*                                      FIRST CONTAINING THE NEXT-TO-
*                                      BE-DISPATCHED TCB ADDRESS. THE
*                                      SECOND CONTAINING THE LAST
*                                      (CURRENT) TCB ADDRESS. BOTH
*                                      WORDS ARE IDENTICAL UNLESS THE
*                                      TASK GOES INTO A WAIT STATE.
*                                      WHEN IN A WAIT STATE, THE
*                                      FIRST WORD IS SET TO ZERO
*                                      UNTIL THE WAITING IS OVER AND
*                                      THEN BOTH WORDS ARE ONCE AGAIN
*                                      IDENTICAL. (OS/VS1) ADDRESS OF
*                                      4-WORD LIST OF ADDRESSES - THE
*                                      NEXT TCB, THE CURRENT TCB, THE
*                                      NEXT ASCB AND THE CURRENT
*                                      ASCB, IN THAT ORDER (OS/VS2)
*                                      MDC026                        */
*      2 CVT0EF00 PTR(31),          /* ADDRESS OF ROUTINE TO SCHEDULE
*                                      ASYNCHRONOUS EXITS            */
*      2 CVTLINK PTR(31),           /* ADDRESS OF DCB FOR       03S0051
*                                      SYS1.LINKLIB DATA SET         */
*      2 CVTJOB PTR(31),            /* ADDRESS OF QUEUE MANAGER 03S0051
*                                      RESIDENT DATA AREA (QMRES)
*                                      (OS/VS1) (MDC083)       XM4042*/
*      2 CVTBUF PTR(31),            /* ADDRESS OF THE BUFFER OF THE
*                                      RESIDENT CONSOLE INTERRUPT
*                                      ROUTINE                       */
*      2 CVTXAPG PTR(31),           /* ADDRESS OF I/O SUPERVISOR
*                                      APPENDAGE VECTOR TABLE        */
*      2 CVT0VL00 PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      TASK SUPERVISOR'S ADDRESS
*                                      VALIDITY CHECKING ROUTINE     */
*      2 CVTPCNVT PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      ROUTINE WHICH CONVERTS A 03S0051
*                                      RELATIVE TRACK ADDRESS (TTR)
*                                      TO AN ABSOLUTE TRACK ADDRESS
*                                      (MBBCCHHR)                    */
*      2 CVTPRLTV PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      ROUTINE WHICH CONVERTS AN
*                                      ABSOLUTE TRACK ADDRESS   03S0051
*                                      (MBBCCHHR) TO A RELATIVE TRACK
*                                      ADDRESS (TTR)                 */
*      2 CVTILK1 PTR(31),           /* ADDRESS OF THE CHANNEL AND
*                                      CONTROL UNIT PORTION OF THE
*                                      UCB LOOKUP TABLE              */
*      2 CVTILK2 PTR(31),           /* ADDRESS OF THE UCB HALFWORD
*                                      ADDRESS LIST PORTION OF THE
*                                      UCB LOOKUP TABLE              */
*      2 CVTXTLER PTR(31),          /* ADDRESS OF ENTRY POINT OF AN
*                                      XCTL ROUTINE THAT BRINGS 03S0051
*                                      SYSTEM ERROR ROUTINES INTO THE
*                                      ERROR TRANSIENT AREA          */
*      2 CVTSYSAD PTR(31),          /* ADDRESS OF THE SYSTEM    03S0051
*                                      RESIDENCE VOLUME ENTRY IN THE
*                                      UCB LOOKUP TABLE              */
*      2 CVTBTERM PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      ABTERM ROUTINE                */
*      2 CVTDATE CHAR(4) BDY(WORD), /* CURRENT DATE IN PACKED DECIMAL*/
*      2 CVTMSLT PTR(31),           /* ADDRESS OF THE MASTER COMMON
*                                      AREA IN MASTER SCHEDULER 03S0051
*                                      RESIDENT DATA AREA. NOTE - USE
*                                      CVTMSER INSTEAD TO ADDRESS
*                                      MASTER SCHEDULER RESIDENT DATA
*                                      AREA.                         */
*      2 CVTZDTAB PTR(31),          /* ADDRESS OF I/O DEVICE    03S0051
*                                      CHARACTERISTIC TABLE          */
*      2 CVTXITP PTR(31),           /* ADDRESS OF ERROR INTERPRETER
*                                      ROUTINE                       */
*      2 CVTDAR PTR(31),            /* SAME AS CVTDARA BELOW (OS/VS1)
*                                      MDC029                        */
*       3 CVTFLGS1 BIT(8),          /* FLAG BYTE (OS/VS1) MDC030     */
*        4 CVTDMPLK BIT(1),         /* SVC DUMP IS IN PROGRESS  03S0051
*                                      (OS/VS1) MDC030               */
*        4 CVTRSV01 BIT(1),         /* RESERVED                      */
*        4 CVTRSV02 BIT(1),         /* RESERVED                      */
*        4 CVTRSV03 BIT(1),         /* RESERVED                      */
*        4 CVTRSV04 BIT(1),         /* RESERVED                      */
*        4 CVTRSV05 BIT(1),         /* RESERVED                      */
*        4 CVTRSV06 BIT(1),         /* RESERVED                      */
*        4 CVTRSV07 BIT(1),         /* RESERVED                      */
*       3 CVTDARA PTR(24),          /* ADDRESS OF THE SYS1.DUMP I/O
*                                      CONTROL BLOCKS NEEDED BY 03S0051
*                                      ABEND'S DAMAGE ASSESSMENT
*                                      ROUTINE (DAR) (OS/VS1) MDC029 */
*      2 CVT0FN00 PTR(31),          /* ADDRESS OF ENTRY POINT OF THE
*                                      FINCH ROUTINE (OS/VS1)        */
*      2 CVTEXIT CHAR(2) BDY(WORD), /* AN SVC 3 INSTRUCTION. EXIT TO
*                                      DISPATCHER.                   */
*      2 CVTBRET CHAR(2) BDY(WORD,3),/* A BCR 15,14 INSTRUCTION.
*                                      RETURN TO CALLER (USED BY DATA
*                                      MANAGEMENT ROUTINES)          */
*      2 CVTSVDCB PTR(31),          /* ADDRESS OF THE DCB FOR THE
*                                      SYS1.SVCLIB DATA SET          */
*      2 CVTTPC PTR(31),            /* ADDRESS OF THE TIMER     03S0051
*                                      SUPERVISOR WORK AREA          */
*      2 CVTPBLDL PTR(31),          /* ADDRESS OF BRANCH AND LINK
*                                      (BALR) ENTRY POINT OF THE BLDL
*                                      ROUTINE (OS/VS1) MDC103       */
*      2 CVTSJQ PTR(31),            /* ADDRESS OF THE SELECTED JOB
*                                      QUEUE (OS/VS1)                */
*      2 CVTCUCB PTR(31),           /* ADDRESS OF THE TABLE THAT
*                                      CONTAINS THE CURRENT CONSOLE
*                                      UCB ADDRESSES                 */
*      2 CVTQTE00 PTR(31),          /* ADDRESS OF THE TIMER ENQUEUE
*                                      ROUTINE FOR INTERVAL TIMER    */
*      2 CVTQTD00 PTR(31),          /* ADDRESS OF THE TIMER DEQUEUE
*                                      ROUTINE FOR INTERVAL TIMER    */
*      2 CVTSTB PTR(31),            /* ADDRESS OF THE I/O DEVICE
*                                      STATISTICS TABLE              */
*      2 CVTDCB CHAR(1) BDY(WORD),  /* OPERATING SYSTEM CONFIGURATION*/
*        4 CVTRSV08 BIT(1),         /* RESERVED                      */
*        4 CVT1SSS BIT(1),          /* PCP                           */
*        4 CVT2SPS BIT(1),          /* MFT, OS/VS1                   */
*        4 CVT4MS1 BIT(1),          /* MVT, OS/VS2                   */
*        4 CVTRSV09 BIT(1),         /* RESERVED                      */
*        4 CVT4MPS BIT(1),          /* MODEL 65 MULTIPROCESSING      */
*        4 CVT6DAT BIT(1),          /* DYNAMIC ADDRESS TRANSLATION BY
*                                      CPU (OS/VS1, OS/VS2)          */
*        4 CVTMVS2 BIT(1),          /* MULTIPLE MEMORY OPTION OF
*                                      OS/VS2 IS PRESENT MDC131      */
*      2 CVTDCBA PTR(24),           /* ADDRESS OF THE DCB FOR THE
*                                      SYS1.LOGREC (OUTBOARD    03S0051
*                                      RECORDER) DATA SET FOR SYSTEM
*                                      ENVIRONMENT RECORDING (SER)   */
*      2 CVTIOQET PTR(31),          /* ADDRESS OF IOS REQUEST ELEMENT
*                                      TABLE (OS/VS1) MDC020         */
*      2 CVTIXAVL PTR(31),          /* ADDRESS OF THE I/O       03S0051
*                                      SUPERVISOR'S FREELIST POINTER
*                                      WHICH CONTAINS THE ADDRESS OF
*                                      THE NEXT REQUEST ELEMENT 03S0051
*                                      (OS/VS1) ADDRESS OF THE I/O
*                                      SUPERVISOR'S COMMUNICATION
*                                      AREA (IOCOM) (OS/VS2)         */
*      2 CVTNUCB PTR(31),           /* LOWEST ADDRESS NOT IN THE
*                                      NUCLEUS (ON PAGE BOUNDARY)    */
*      2 CVTFBOSV PTR(31),          /* ADDRESS OF PROGRAM FETCH 03S0051
*                                      ROUTINE                       */
*      2 CVT0DS PTR(31),            /* ADDRESS OF ENTRY POINT OF THE
*                                      DISPATCHER                    */
*      2 CVTILCH PTR(31),           /* ADDRESS OF THE LOGICAL CHANNEL
*                                      WORD TABLE                    */
*      2 CVTIERLC PTR(31),          /* ADDRESS OF THE ASYNCHRONOUS
*                                      EXIT QUEUE                    */
*      2 CVTMSER PTR(31),           /* ADDRESS OF DATA AREA OF MASTER
*                                      SCHEDULER RESIDENT DATA AREA  */
*      2 CVT0PT01 PTR(31),          /* ADDRESS OF BRANCH ENTRY POINT
*                                      OF POST ROUTINE               */
*      2 CVTRSV11 PTR(31),          /* ** CVTTRMTB FIELD UNUSED IN
*                                      OS/VS **                      */
*      2 CVTHEAD PTR(31),           /* ADDRESS OF THE HIGHEST   03S0051
*                                      PRIORITY TCB IN THE READY
*                                      QUEUE (OS/VS1) MDC025         */
*      2 CVTMZ00 PTR(31),           /* HIGHEST ADDRESS IN VIRTUAL
*                                      STORAGE FOR THE MACHINE       */
*      2 CVT1EF00 PTR(31),          /* ADDRESS OF ROUTINE WHICH 03S0051
*                                      CREATES IRB'S FOR EXITS       */
*      2 CVTQOCR PTR(31),           /* GRAPHICS INTERFACE TASK (GFX)
*                                      FIELD. ADDRESS OF SEVENTH WORD
*                                      OF GFX PARAMETER LIST, IF GFX
*                                      IS ACTIVE. ZERO IF GFX IS NOT
*                                      ACTIVE.                       */
*      2 CVTQMWR PTR(31),           /* ADDRESS OF QUEUE MANAGER'S
*                                      SYSTEM OUTPUT COMMUNICATIONS-
*                                      DATA-AREA (CDA), WHICH IS
*                                      STORED ON AN EXTERNAL DEVICE  */
*      2 CVTSNCTR FIXED(15),        /* SERIAL NUMBER COUNTER FOR
*                                      ASSIGNING SERIAL NUMBERS TO
*                                      NON-SPECIFIC, UNLABELED  03S0051
*                                      MAGNETIC TAPE VOLUMES         */
*      2 CVTOPTA CHAR(1),           /* OPTION INDICATORS             */
*       3 CVTCCH BIT(1),            /* CHANNEL CHECK HANDLER (CCH)
*                                      OPTION PRESENT - RECOVERY
*                                      MANAGEMENT SUPPORT (RMS) 03S0051
*                                                              XM4686*/
*       3 CVTAPR BIT(1),            /* ALTERNATE PATH RETRY (APR)
*                                      OPTION PRESENT - RECOVERY
*                                      MANAGEMENT SUPPORT (RMS)      */
*       3 CVTDDR BIT(1),            /* DYNAMIC DEVICE RECONFIGURATION
*                                      (DDR) OPTION PRESENT -   03S0051
*                                      RECOVERY MANAGEMENT SUPPORT
*                                      (RMS) (OS/VS1) DDR       03S0051
*                                      SYSTEM-INITIATED SWAP ACTIVE
*                                      (OS/VS2) MDC126               */
*       3 CVTNIP BIT(1),            /* NIP IS EXECUTING              */
*       3 CVTRSV12 BIT(1),          /* RESERVED                      */
*       3 CVTRSV13 BIT(1),          /* RESERVED                      */
*       3 CVTASCII BIT(1),          /* ASCII TAPE PROCESSING IS 03S0051
*                                      GENERATED IN THIS SYSTEM      */
*       3 CVTXPFP BIT(1),           /* CPU HAS EXTENDED PRECISION
*                                      FLOATING POINT FEATURE        */
*      2 CVTOPTB CHAR(1),           /* MISCELLANEOUS FLAGS           */
*       3 CVTPROT BIT(1),           /* CPU HAS STORE PROTECTION 03S0051
*                                      FEATURE (OS/VS1)              */
*       3 CVTCTIMS BIT(1),          /* IF ON, HARDWARE HAS THE CLOCK
*                                      COMPARATOR AND CPU TIMER 03S0051
*                                      FEATURE INSTALLED, AND OS/VS1
*                                      SYSGEN HAS SPECIFIED THIS
*                                      FEATURE (OS/VS1) MDC127       */
*       3 CVTTOD BIT(1),            /* CPU HAS TIME-OF-DAY CLOCK
*                                      FEATURE                       */
*       3 CVTNLOG BIT(1),           /* SYS1.LOGREC IS UNAVAILABLE FOR
*                                      ERROR RECORDING. ALWAYS SET TO
*                                      ZERO FOR OS/VS1 ICB382        */
*       3 CVTAPTHR BIT(1),          /* NIP SETS THIS BIT TO 1 WHEN
*                                      DEVICE TESTING IS COMPLETE. IF
*                                      1, I/O SUPERVISOR USES AN
*                                      ALTERNATE PATH TO A DEVICE
*                                      WHEN A CONDITION CODE OF 3
*                                      EXISTS. THIS BIT IS RESET BY
*                                      NIP TO 0 AFTER THE LINK PACK
*                                      AREA IS INITIALIZED.    YM2670*/
*       3 CVTFP BIT(1),             /* CPU HAS FETCH PROTECTION 03S0051
*                                      FEATURE (OS/VS1) ICB427       */
*       3 CVTRSV16 BIT(1),          /* RESERVED                      */
*       3 CVTRSV17 BIT(1),          /* RESERVED                      */
*      2 CVTQCDSR PTR(31),          /* CDE SEARCH ROUTINE ADDRESS
*                                      (OS/VS2) ADDRESS OF THE  03S0051
*                                      ROUTINE THAT SEARCHES THE
*                                      REENTERABLE LOAD MODULE QUEUE
*                                      (OS/VS1)                      */
*      2 CVTQLPAQ PTR(31),          /* ADDRESS OF POINTER TO MOST
*                                      RECENT ENTRY ON LINK PACK AREA
*                                      CDE QUEUE (OS/VS2) ADDRESS OF
*                                      THE REENTERABLE LOAD MODULE
*                                      QUEUE (OS/VS1)                */
*      2 CVTRSV18 PTR(31),          /* ** CVTMPCVT FIELD UNUSED IN
*                                      OS/VS **                      */
*      2 CVTSMCA PTR(31),           /* ADDRESS OF THE SYSTEM    03S0051
*                                      MANAGEMENT CONTROL AREA (SMCA)
*                                      IF THE SYSTEM MANAGEMENT 03S0051
*                                      FACILITIES (SMF) OPTION IS
*                                      PRESENT IN THE SYSTEM.   03S0051
*                                      OTHERWISE, ZERO.              */
*      2 CVTABEND PTR(31),          /* ADDRESS OF SECONDARY CVT FOR
*                                      ABEND IN EOT (OS/VS2) USED BY
*                                      AN INTERNAL ABEND TRACE  03S0051
*                                      ROUTINE FOR DEBUG PURPOSES
*                                      (OS/VS1)                XM0615*/
*      2 CVTUSER PTR(31),           /* A WORD AVAILABLE TO THE USER  */
*      2 CVTMDLDS PTR(31),          /* RESERVED FOR MODEL-DEPENDENT
*                                      SUPPORT                       */
*      2 CVTQABST CHAR(2) BDY(WORD),/* AN SVC 13 (ABEND) INSTRUCTION
*                                      (OS/VS2) RESERVED (OS/VS1)    */
*      2 CVTLNKSC CHAR(2) BDY(WORD,3),/* AN SVC 6 (LINK) INSTRUCTION
*                                      ICB369                        */
*      2 CVTTSCE PTR(31),           /* ADDRESS OF THE FIRST TIME
*                                      SLICE CONTROL ELEMENT (TSCE)  */
*      2 CVTPATCH PTR(31),          /* ADDRESS OF A 200-BYTE FE PATCH
*                                      AREA                          */
*      2 CVTRMS PTR(31),            /* RECOVERY MANAGEMENT SUPPORT
*                                      (RMS) COMMUNICATIONS VECTOR.
*                                      ADDRESS OF A MACHINE STATUS
*                                      BLOCK.                        */
*      2 CVTRV515 PTR(31),          /* ** CVTTSCVT FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC037        */
*      2 CVT0SCR1 PTR(31),          /* ADDRESS OF THE SECTOR    03S0051
*                                      CALCULATION ROUTINE FOR  03S0051
*                                      ROTATIONAL POSITION SENSING
*                                      (RPS)                         */
*      2 CVTGTF PTR(31),            /* GENERALIZED TRACE FACILITY
*                                      (GTF) CONTROL WORD ICB312     */
*       3 CVTGTFST BIT(8),          /* GTF FLAG BYTE ICB312          */
*        4 CVTGTFS BIT(2),          /* GTF STATUS (OS/VS1) MDC088    */
*         5 CVTGTFAV BIT(1),        /* IF ZERO, GTF NOT ACTIVE. IF
*                                      ONE, GTF ACTIVE. (OS/VS2)
*                                      MDC098                        */
*         5 CVTRV315 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTSTATE BIT(1),         /* GTF IS IN CONTROL PROCESSING A
*                                      HOOK (OS/VS1) MDC093          */
*         5 CVTRV316 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTTMODE BIT(1),         /* IF 0, MODE=INT SPECIFIED. IF
*                                      1, MODE=EXT SPECIFIED WHICH
*                                      MEANS TRACE DATA IS TO BE
*                                      WRITTEN TO AN EXTERNAL DEVICE.
*                                      (OS/VS1) MDC094               */
*         5 CVTRV317 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTFORM BIT(1),          /* TRACE DATA IS TO BE FORMATTED
*                                      ON ABNORMAL TERMINATION  03S0051
*                                      (OS/VS1) MDC095               */
*         5 CVTRV318 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTUSR BIT(1),           /* TRACE=USR SPECIFIED.     03S0051
*                                      USER-REQUESTED TRACE DATA IS
*                                      TO BE INCLUDED IN THE TRACE
*                                      DATA SET. (OS/VS1) MDC096     */
*         5 CVTRV319 BIT(1),        /* RESERVED (OS/VS2)             */
*        4 CVTRNIO BIT(1),          /* GTF IS ACTIVE AND TRACING RNIO
*                                      EVENTS MDC187                 */
*        4 CVTRSV27 BIT(1),         /* RESERVED                      */
*       3 CVTGTFA PTR(24),          /* ADDRESS OF THE MONITOR CALL
*                                      VECTOR TABLE (OS/VS1) ADDRESS
*                                      OF MAIN MONITOR CALL ROUTING
*                                      TABLE, MCHEAD (OS/VS2) MDC156 */
*      2 CVTAQAVT PTR(31),          /* ADDRESS OF THE FIRST WORD OF
*                                      THE TCAM DISPATCHER WHICH
*                                      CONTAINS THE ADDRESS OF THE
*                                      ADDRESS VECTOR TABLE (AVT). IF
*                                      ZERO, TCAM IS NOT STARTED     */
*       3 CVTTCMFG CHAR(1),         /* TCAM FLAGS                    */
*        4 CVTTCRDY BIT(1),         /* TCAM IS READY TO ACCEPT USERS */
*        4 CVTRSV28 BIT(1),         /* RESERVED                      */
*        4 CVTRSV29 BIT(1),         /* RESERVED                      */
*        4 CVTRSV30 BIT(1),         /* RESERVED                      */
*        4 CVTRSV31 BIT(1),         /* RESERVED                      */
*        4 CVTRSV32 BIT(1),         /* RESERVED                      */
*        4 CVTRSV33 BIT(1),         /* RESERVED                      */
*        4 CVTRSV34 BIT(1),         /* RESERVED                      */
*       3 CVTAQAVB PTR(24),         /* SAME AS CVTAQAVT ABOVE        */
*      2 CVTVOLM2 PTR(31),          /* RESERVED POINTER (OS/VS2)
*                                      MDC192                        */
*       3 CVTTATA PTR(31),          /* ADDRESS OF THE FIRST ENTRY IN
*                                      THE TCB ADDRESS TABLE. THE
*                                      FIRST ENTRY IS FOR PARTITION
*                                      0. (OS/VS1)                   */
*        4 CVTTSKS PTR(8),          /* MAXIMUM ALLOWABLE NUMBER OF
*                                      ENTRIES IN THE TCB ADDRESS
*                                      TABLE (OS/VS1)                */
*         5 CVTVOLF2 BIT(8),        /* RESERVED INITIALIZATION BYTE
*                                      (OS/VS2) MDC202               */
*          6 CVTVOLI2 BIT(1),       /* RESERVED INITIALIZATION FLAG
*                                      (OS/VS2) MDC203               */
*        4 CVTTAT PTR(24),          /* SAME AS CVTTATA ABOVE         */
*         5 CVTVOLT2 PTR(24),       /* RESERVED PARAMETER (OS/VS2)
*                                      MDC204                        */
*      2 CVTATER PTR(31),           /* ADDRESS OF THE SYSTEM ERROR
*                                      TCB. THE PURGE ROUTINE USES
*                                      THIS FIELD TO ACCESS THE SIRB.
*                                      (OS/VS1) ICB346               */
*       3 CVTSYST PTR(8),           /* NUMBER OF ENTRIES IN THE TCB
*                                      ADDRESS TABLE FOR TCB'S  03S0051
*                                      CREATED DURING SYSTEM    03S0051
*                                      GENERATION (OS/VS1)           */
*       3 CVTATERA PTR(24),         /* SAME AS CVTATER ABOVE         */
*      2 CVTEXT1 PTR(31),           /* ADDRESS OF OS - OS/VS COMMON
*                                      EXTENSION ICB421              */
*      2 CVTCBSP PTR(31),           /* ADDRESS OF ACCESS METHOD 03S0051
*                                      CONTROL BLOCK STRUCTURE MDC195*/
*      2 CVTPURG PTR(31),           /* ADDRESS OF SUBSYSTEM PURGE
*                                      ROUTINE ICB330                */
*       3 CVTRSV35 PTR(8),          /* RESERVED ICB330               */
*       3 CVTPURGA PTR(24),         /* ADDRESS OF SUBSYSTEM PURGE
*                                      ROUTINE ICB330                */
*      2 CVTAMFF CHAR(4),           /* RESERVED FOR ACCESS METHOD
*                                      FLAGS ICB436                  */
*      2 CVTQMSG PTR(31),           /* ADDRESS OF INFORMATION TO BE
*                                      PRINTED BY ABEND ICB307       */
*       3 CVTRSV36 PTR(8),          /* RESERVED ICB307               */
*       3 CVTQMSGA PTR(24),         /* ADDRESS OF INFORMATION TO BE
*                                      PRINTED BY ABEND ICB307       */
*      2 CVTDMSR PTR(31),           /* SAME AS CVTDMSRA BELOW ICB346 */
*       3 CVTRSV37 PTR(8),          /* RESERVED ICB346               */
*       3 CVTDMSRA PTR(24),         /* ADDRESS OF THE OPEN/CLOSE/EOV
*                                      SUPERVISORY ROUTINE IN THE
*                                      NUCLEUS. THIS ROUTINE HANDLES
*                                      THE ROUTING OF CONTROL AMONG
*                                      THE I/O SUPPORT ROUTINES.
*                                      ICB346                        */
*      2 CVTRSV38 PTR(31),          /* RESERVED                      */
*      2 CVTRSV39 PTR(31),          /* RESERVED                      */
*/*            OS/VS1 - OS/VS2 COMMON SECTION                        */
*                                                               03S0051
*      2 CVTREAL PTR(31),           /* ADDRESS OF THE VIRTUAL STORAGE
*                                      BYTE FOLLOWING THE HIGHEST
*                                      VIRTUAL=REAL STORAGE ADDRESS
*                                      ICB368                        */
*      2 CVTPTRV PTR(31),           /* ADDRESS OF PAGING SUPERVISOR
*                                      GENERAL ROUTINE TO TRANSLATE
*                                      REAL ADDRESSES TO VIRTUAL
*                                      ADDRESSES                     */
*      2 CVTMODE PTR(31),           /* ADDRESS OF ROUTINE TO CHANGE
*                                      SYSTEM MASK (OS/VS1) (MDC217)
*                                                              YM4244*/
*      2 CVTJESCT PTR(31),          /* ADDRESS OF JOB ENTRY SUBSYSTEM
*                                      (JES) CONTROL TABLE           */
*      2 CVTJEPS PTR(31),           /* ADDRESS OF JOB ENTRY     03S0051
*                                      PERIPHERAL SERVICES (JEPS)
*                                      MONITOR TCB (OS/VS1)    YM2702*/
*      2 CVTTZ FIXED(31),           /* DIFFERENCE BETWEEN LOCAL TIME
*                                      AND GREENWICH MEAN TIME IN
*                                      BINARY UNITS OF 1.048576 03S0051
*                                      SECONDS                       */
*      2 CVTMCHPR PTR(31),          /* ADDRESS OF MACHINE CHECK 03S0051
*                                      PARAMETER LIST                */
*      2 CVTEORM PTR(31),           /* HIGHEST REAL ADDRESS IN MAIN
*                                      STORAGE (OS/VS1) POTENTIAL
*                                      REAL HIGH STORAGE ADDRESS
*                                      (OS/VS2) MDC087               */
*      2 CVTERPV PTR(31),           /* ADDRESS OF I/O SUPERVISOR
*                                      SUBROUTINE TO CONVERT CCW DATA
*                                      ADDRESSES TO VIRTUAL ADDRESSES
*                                      ICB367                        */
*      2 CVTINTLA PTR(31),          /* ADDRESS OF A TIME INTERVAL.
*                                      I/O LOAD BALANCING COUNTS THE
*                                      NUMBER OF EXCP'S ISSUED DURING
*                                      THIS TIME INTERVAL AND USES
*                                      THE VALUE IN DETERMINING THE
*                                      AMOUNT OF I/O ACTIVITY IN THE
*                                      SYSTEM. ICB341                */
*      2 CVTAPF PTR(31),            /* SAME AS CVTAPFA BELOW ICB360  */
*       3 CVTRSV40 PTR(8),          /* RESERVED ICB360               */
*       3 CVTAPFA PTR(24),          /* ADDRESS OF BRANCH ENTRY POINT
*                                      IN AUTHORIZED PROGRAM FACILITY
*                                      (APF) ROUTINE                 */
*      2 CVTEXT2 PTR(31),           /* ADDRESS OF OS/VS1 - OS/VS2
*                                      COMMON EXTENSION ICB330       */
*       3 CVTRSV41 PTR(8),          /* RESERVED ICB330               */
*       3 CVTEXT2A PTR(24),         /* SAME AS CVTEXT2 ABOVE ICB330  */
*      2 CVTHJES PTR(31),           /* SAME AS CVTHJESA BELOW ICB454 */
*       3 CVTRSV42 PTR(8),          /* RESERVED ICB454               */
*       3 CVTHJESA PTR(24),         /* ADDRESS OF OPTIONAL JOB ENTRY
*                                      SUBSYSTEM (JES) COMMUNICATION
*                                      VECTOR TABLE ICB454           */
*      2 CVTRSV43 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV44 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV45 PTR(31),          /* RESERVED                      */
*      2 CVTRSV46 PTR(31),          /* RESERVED                      */
*/*            OS/VS1 OVERLAY                                        */
*                                                               03S0051
*      2 CVTPGSIA PTR(31),          /* ADDRESS OF PAGING SUPERVISOR
*                                      INFORMATION AREA              */
*      2 CVTPCVT PTR(31),           /* ADDRESS OF PAGED CVT EXTENSION*/
*      2 CVTA1F1 CHAR(1),           /* PAGE FAULT FLAGS              */
*       3 CVTPFSW BIT(1),           /* ONLY THE PAGING TASK MAY BE
*                                      DISPATCHED                    */
*       3 CVTSRSW BIT(1),           /* NO TASK EXCEPT THE PAGING TASK
*                                      MAY EXECUTE DISABLED CODE     */
*       3 CVTRSV47 BIT(1),          /* RESERVED                      */
*       3 CVTRSV48 BIT(1),          /* RESERVED                      */
*       3 CVTRSV49 BIT(1),          /* RESERVED                      */
*       3 CVTRSV50 BIT(1),          /* RESERVED                      */
*       3 CVTRSV51 BIT(1),          /* RESERVED                      */
*       3 CVTRSV52 BIT(1),          /* RESERVED                      */
*      2 CVTSYSK CHAR(1),           /* SYSTEM LOCK. IF NOT ZERO, ONLY
*                                      THE PAGING TASK MAY BE   03S0051
*                                      DISPATCHED                    */
*       3 CVTRSV53 BIT(1),          /* RESERVED                      */
*       3 CVTRSV54 BIT(1),          /* RESERVED                      */
*       3 CVTRSV55 BIT(1),          /* RESERVED                      */
*       3 CVTRSV56 BIT(1),          /* RESERVED                      */
*       3 CVTSLKR BIT(1),           /* MACHINE CHECK HANDLING IS IN
*                                      PROGRESS ICB320               */
*       3 CVTSLKQ BIT(1),           /* SYSTEM QUEUE AREA (SQA) HAS
*                                      BEEN EXHAUSTED                */
*       3 CVTSLKP BIT(1),           /* LAST PAGING CONTROL BLOCK
*                                      (PCB) HAS BEEN USED           */
*       3 CVTSLKO BIT(1),           /* A ROUTINE RUNNING DISABLED HAS
*                                      PRODUCED A PAGE FAULT         */
*      2 CVTSULK FIXED(15),         /* SUPERVISOR LOCK. NUMBER OF
*                                      TASKS ATTEMPTING TO EXECUTE
*                                      DISABLED ROUTINES. IF NOT
*                                      ZERO, ONLY ENABLED TASKS MAY
*                                      RUN.                          */
*      2 CVTSMF PTR(31),            /* ADDRESS OF SYSTEM MANAGEMENT
*                                      FACILITIES (SMF) TCB ICB395   */
*      2 CVTPNWFR PTR(31),          /* ADDRESS OF ROUTINE WHICH FREES
*                                      THE 'EMERGENCY' WORK AREA
*                                      (ICB413)                XM2452*/
*      2 CVTDDCE PTR(31),           /* ADDRESS OF DYNAMIC DISPATCHING
*                                      CONTROL ELEMENT ICB466        */
*      2 CVTRSV57 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV58 FIXED(15),        /* RESERVED                      */
*      2 CVTSTOA FIXED(31),         /* SAVE AREA FOR THE REAL STORAGE
*                                      ADDRESS OF THE SEGMENT TABLE
*                                      ORIGIN ICB496                 */
*      2 CVTVOLM1 PTR(31),          /* RESERVED POINTER MDC191       */
*       3 CVTVOLF1 BIT(8),          /* RESERVED INITIALIZATION BYTE
*                                      MDC199                        */
*        4 CVTVOLI1 BIT(1),         /* RESERVED INITIALIZATION FLAG
*                                      MDC200                        */
*       3 CVTVOLT1 PTR(24),         /* RESERVED PARAMETER MDC201     */
*      2 CVTRSV61 PTR(31),          /* RESERVED                      */
*      2 CVTATMCT PTR(31),          /* POINTER TO VTAM CONTROL TABLE
*                                      MDC082                        */
*       3 CVTATMST CHAR(1),         /* VTAM START STATUS MDC135      */
*       3 CVTATMCA PTR(24),         /* POINTER TO VTAM CONTROL TABLE
*                                      MDC138                        */
*      2 CVTAUTH PTR(31),           /* POINTER TO AUTHORIZED LIBRARY
*                                      TABLE MDC188                  */
*      2 CVTRV484 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV485 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV486 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV487 PTR(31),          /* RESERVED MDC106               */
*      2 CVTRV488 PTR(31);          /* RESERVED MDC106               */
*/*            OS/VS2 OVERLAY                                        */
*                                                               03S0052
*   DECLARE                                                     03S0052
*     1 CVTS01 DEF(CVTPGSIA) BDY(WORD),                         03S0052
*      2 CVTGETL PTR(31),           /* ADDRESS OF IKJGETL, TSO GET
*                                      LINE ROUTINE (MDC206)   YM2225*/
*      2 CVTLPDSR PTR(31),          /* ADDRESS OF LINK PACK AREA
*                                      (LPA) DIRECTORY SEARCH ROUTINE*/
*      2 CVTPVTP PTR(31),           /* ADDRESS OF PAGE VECTOR TABLE  */
*      2 CVTLPDIA PTR(31),          /* ADDRESS OF LINK PACK AREA
*                                      (LPA) DIRECTORY (ON PAGE 03S0052
*                                      BOUNDARY)                     */
*       3 CVTDIRST CHAR(1),         /* FLAG BYTE                     */
*        4 CVTDICOM BIT(1),         /* LPA DIRECTORY HAS BEEN   03S0052
*                                      INITIALIZED BY NIP            */
*        4 CVTRSV63 BIT(1),         /* RESERVED                      */
*        4 CVTRSV64 BIT(1),         /* RESERVED                      */
*        4 CVTRSV65 BIT(1),         /* RESERVED                      */
*        4 CVTRSV66 BIT(1),         /* RESERVED                      */
*        4 CVTRSV67 BIT(1),         /* RESERVED                      */
*        4 CVTRSV68 BIT(1),         /* RESERVED                      */
*        4 CVTRSV69 BIT(1),         /* RESERVED                      */
*       3 CVTLPDIR PTR(24),         /* ADDRESS OF LPA DIRECTORY. ON
*                                      PAGE BOUNDARY                 */
*      2 CVTRV320 PTR(31),          /* ** CVTPAGE1 FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC112        */
*      2 CVTRV321 PTR(31),          /* ** CVTPGSUP FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC113        */
*      2 CVTSLIDA CHAR(4) BDY(WORD),/* IDENTITY OF TCB CAUSING  03S0052
*                                      SUPERVISOR LOCK BYTE (CVTSYLK)
*                                      TO BE SET OR IDENTITY OF TCB
*                                      THAT SECOND EXIT PROCESSING IS
*                                      FOR WHEN CVTSEIC=1            */
*       3 CVTSYLK CHAR(1),          /* SUPERVISOR LOCK. ONLY ENABLED
*                                      TASKS MAY BE DISPATCHED       */
*       3 CVTSLID CHAR(3),          /* SAME AS CVTSLIDA ABOVE        */
*      2 CVTRV322 PTR(31),          /* ** CVTSER AND SUBFIELDS UNUSED
*                                      IN OS/VS2 REL 2 **       03S0052
*                                      MDC114-MDC117                 */
*      2 CVTRV328 PTR(31),          /* ** CVTSEG AND CVTSEGA FIELDS
*                                      UNUSED IN OS/VS2 REL 2 **
*                                      MDC139-MDC140                 */
*      2 CVTRV329 PTR(31),          /* ** CVTSEGB FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC141        */
*      2 CVTRV330 PTR(31),          /* ** CVTSEGC AND SUBFIELDS 03S0052
*                                      UNUSED IN OS/VS2 REL 2 **
*                                      MDC142-MDC144                 */
*      2 CVTRV331 PTR(31),          /* ** CVTSEGD AND SUBFIELDS 03S0052
*                                      UNUSED IN OS/VS2 REL 2 **
*                                      MDC145-MDC147                 */
*      2 CVTRSV77 PTR(8),           /* RESERVED                      */
*      2 CVTSPVLK PTR(8),           /* NUMBER OF TASKS WHICH HAVE
*                                      TERMINATED WHILE OWNING  03S0052
*                                      SUPERVISOR LOCK WITHOUT  03S0052
*                                      OPERATOR HAVING YET BEEN 03S0052
*                                      NOTIFIED                      */
*      2 CVTCTLFG CHAR(1),          /* SYSTEM CONTROL FLAGS          */
*       3 CVTRV323 BIT(1),          /* ** CVTPSIC BIT UNUSED IN 03S0052
*                                      OS/VS2 REL 2 ** MDC118        */
*       3 CVTRV333 BIT(1),          /* ** CVTAPGB BIT UNUSED IN 03S0052
*                                      OS/VS2 REL 2 ** MDC151        */
*       3 CVTRSV78 BIT(1),          /* RESERVED ICB382               */
*       3 CVTDSTAT BIT(1),          /* DEVSTAT OPTION IN EFFECT.
*                                      DEVICE ADDRESS FOR 2319, 3330,
*                                      2314, 3330-1, 3340 CAN VARY
*                                      ACROSS SYSTEMS MDC189         */
*       3 CVTRSV79 BIT(1),          /* RESERVED                      */
*       3 CVTNOMP BIT(1),           /* MULTIPROCESSING CODE IS NOT IN
*                                      THE SYSTEM MDC176             */
*       3 CVTGTRCE BIT(1),          /* GENERALIZED TRACE FACILITY
*                                      (GTF) HAS SUPPRESSED     03S0052
*                                      SUPERVISOR TRACE ICB446       */
*       3 CVTSDTRC BIT(1),          /* SVC DUMP HAS SUPPRESSED  03S0052
*                                      SUPERVISOR TRACE ICB446       */
*      2 CVTAPG CHAR(1),            /* DISPATCHING PRIORITY OF  03S0052
*                                      AUTOMATIC PRIORITY GROUP (APG)
*                                      ICB339                        */
*      2 CVTTRACE CHAR(2) BDY(WORD),/* BRANCH ON REGISTER       03S0052
*                                      INSTRUCTION. SET BY NIP. 03S0052
*                                      REGISTER TEN FOR TRACE.  03S0052
*                                      REGISTER ELEVEN FOR NO TRACE. */
*      2 CVTTRAC2 CHAR(2) BDY(WORD,3),/* BRANCH ON REGISTER 11  03S0052
*                                      INSTRUCTION. THIS ALLOWS FOR
*                                      SUPPRESSING TRACE DYNAMICALLY
*                                      BY SETTING CONDITION CODE MASK
*                                      TO ZERO IN FIRST INSTRUCTION
*                                      (CVTTRACE)                    */
*      2 CVTRSCN PTR(31),           /* ADDRESS OF ROUTINE TO SCAN TCB
*                                      TREE                          */
*      2 CVTTAS PTR(31),            /* ADDRESS OF ROUTINE TO TRANSFER
*                                      ADDRESS SPACE                 */
*      2 CVTRV332 PTR(31),          /* ** CVTPVALD FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC148        */
*      2 CVTSHRVM PTR(31),          /* LOWEST ADDRESS OF SHARED 03S0052
*                                      VIRTUAL STORAGE AREA. THIS
*                                      ADDRESS WILL BE EITHER THE
*                                      BEGINNING OF LINK PACK AREA
*                                      (LPA) DIRECTORY OR THE   03S0052
*                                      BEGINNING OF LPA UPDATE AREA
*                                      IF 'MLPA' OPTION WAS USED AT
*                                      SUPERVISOR INITIALIZATION.    */
*      2 CVT0VL01 PTR(31),          /* ENTRY POINT ADDRESS OF   03S0052
*                                      VALIDITY CHECK ROUTINE   03S0052
*                                      (IEA0VL01) USED TO COMPARE
*                                      PROTECT KEY OF AN ADDRESS WITH
*                                      TCB PROTECT KEY.              */
*      2 CVTRV324 PTR(31),          /* ** CVTPFIXQ FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC119        */
*      2 CVTRV325 PTR(31),          /* ** CVTPFIXR FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC120        */
*      2 CVTRV326 PTR(31),          /* ** CVTPFIXP FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC121        */
*      2 CVTRV327 PTR(31),          /* ** CVTPTCD FIELD UNUSED IN
*                                      OS/VS2 REL 2 ** MDC122        */
*      2 CVTSYSWT PTR(31),          /* ADDRESS OF THE SYSTEM    03S0052
*                                      MANAGEMENT FACILITIES (SMF)
*                                      SYSTEM WAIT TIME COLLECTION
*                                      AREA ICB469                   */
*      2 CVTPUTL PTR(31),           /* ADDRESS OF IKJPUTL, TSO PUT
*                                      LINE ROUTINE (MDC207)   YM2225*/
*      2 CVTSRBRT PTR(31),          /* DISPATCHER RETURN ADDRESS FOR
*                                      SRB ROUTINES MDC130           */
*      2 CVTOLT0A PTR(31),          /* BRANCH ENTRY TO OLTEP MEMORY
*                                      TERMINATION RESOURCE MANAGER
*                                      MDC129                        */
*      2 CVTSMFEX PTR(31),          /* BRANCH ENTRY TO SYSTEM   03S0052
*                                      MANAGEMENT FACILITIES (SMF)
*                                      EXCP COUNTING ROUTINE FOR VAM
*                                      WINDOW INTERCEPT MDC133       */
*      2 CVTCSPIE PTR(31),          /* FOR CHECKPOINT/RESTART, BRANCH
*                                      ENTRY TO SPIE MDC149          */
*      2 CVTPTGT PTR(31),           /* ADDRESS OF IKJPTGT, TSO PUTGET
*                                      ROUTINE (MDC208)        YM2225*/
*      2 CVTIOSPL PTR(8),           /* PRIORITY LEVEL OF I/O    03S0052
*                                      SUPERVISOR CHANNEL SCHEDULER
*                                      MDC019                        */
*      2 CVTRV513 CHAR(1),          /* RESERVED MDC165               */
*      2 CVTDSSAC CHAR(1),          /* DYNAMIC SUPPORT SYSTEM (DSS)
*                                      ACTIVATED FLAG - USED BY 03S0052
*                                      RESTART FLIH. IF X'00', DSS
*                                      NOT INITIALIZED. IF X'FF', DSS
*                                      HAS BEEN INITIALIZED. MDC163  */
*      2 CVTRV139 PTR(8),           /* RESERVED                      */
*      2 CVTSTCK PTR(31),           /* ADDRESS OF IKJSTCK, TSO STACK
*                                      ROUTINE (MDC209)        YM2225*/
*      2 CVTMAXMP PTR(15),          /* FOR MEASUREMENT FACILITY 03S0052
*                                      (MF/1), MAXIMUM PHYSICAL CPU
*                                      ADDRESS SUPPORTED BY THIS
*                                      RELEASE MDC165                */
*      2 CVTRV144 FIXED(15),        /* RESERVED                      */
*      2 CVTSCAN PTR(31),           /* ADDRESS OF IKJSCAN, TSO SCAN
*                                      ROUTINE (MDC210)        YM2225*/
*      2 CVTAUTHL PTR(31),          /* POINTER TO AUTHORIZED LIBRARY
*                                      TABLE MDC001                  */
*      2 CVTBLDCP PTR(31),          /* BRANCH ENTRY TO BUILD POOL
*                                      MDC003                        */
*      2 CVTGETCL PTR(31),          /* BRANCH ENTRY TO GET CELL 03S0052
*                                      MDC004                        */
*      2 CVTFRECL PTR(31),          /* BRANCH ENTRY TO FREE CELL
*                                      MDC005                        */
*      2 CVTDELCP PTR(31),          /* BRANCH ENTRY TO DELETE POOL
*                                      MDC006                        */
*      2 CVTCRMN PTR(31),           /* BRANCH ENTRY TO SVC 120  03S0052
*                                      (GETMAIN/FREEMAIN:CRBRANCH)
*                                      MDC007                        */
*      2 CVTCRAS PTR(31),           /* BRANCH ENTRY TO 'CREATE  03S0052
*                                      ADDRESS SPACE' MDC008         */
*      2 CVTQSAS PTR(31),           /* BRANCH ENTRY TO TASK     03S0052
*                                      TERMINATION MDC009            */
*      2 CVTFRAS PTR(31),           /* BRANCH ENTRY TO FREE ADDRESS
*                                      SPACE MDC010                  */
*      2 CVTS1EE PTR(31),           /* BRANCH ENTRY TO STAGE 1 EXIT
*                                      EFFECTOR MDC011               */
*      2 CVTPARS PTR(31),           /* ADDRESS OF IKJPARS, TSO PARSE
*                                      ROUTINE (MDC211)        YM2225*/
*      2 CVTQUIS PTR(31),           /* BRANCH ENTRY TO QUIESCE MDC013*/
*      2 CVTSTXU PTR(31),           /* BRANCH ENTRY TO ATTENTION EXIT
*                                      EPILOGUE MDC014               */
*      2 CVTOPTE PTR(31),           /* BRANCH ENTRY ADDRESS TO  03S0052
*                                      SYSEVENT MDC015               */
*      2 CVTSDRM PTR(31),           /* BRNACH ENTRY ADDRESS OF THE
*                                      RESOURCE MANAGER ROUTINE FOR
*                                      SVC DUMP. THIS ROUTINE CAN BE
*                                      INVOKED BY MEMORY TERMINATION
*                                      MDC077                        */
*      2 CVTIOSCS PTR(31),          /* ENTRY POINT OF I/O SUPERVISOR
*                                      CHANNEL SCHEDULER MDC018      */
*      2 CVTAQTOP PTR(31),          /* POINTER TO AREA CONTAINING
*                                      QUIESCE DESCRIPTOR BLOCK 03S0052
*                                      (QDB'S) FOR DEVICE ALLOCATION
*                                      MDC021                        */
*      2 CVTVVMDI PTR(31),          /* CONSTANT USED BY PAGED LINK
*                                      PACK AREA (LPA) DIRECTORY
*                                      SEARCH ALGORITHM MDC022       */
*      2 CVTASVT PTR(31),           /* POINTER TO ADDRESS SPACE 03S0052
*                                      VECTOR TABLE (ASVT) MDC070    */
*      2 CVTGDA PTR(31),            /* POINTER TO GLOBAL DATA AREA
*                                      (GDA) IN SQA MDC024           */
*      2 CVTASCBH PTR(31),          /* POINTER TO HIGHEST PRIORITY
*                                      ADDRESS SPACE CONTROL BLOCK
*                                      (ASCB) ON THE ASCB DISPATCHING
*                                      QUEUE (HEAD OF ASCB QUEUE)
*                                      MDC027                        */
*      2 CVTASCBL PTR(31),          /* POINTER TO LOWEST PRIORITY
*                                      ASCB ON ASCB DISPATCHING QUEUE
*                                      MDC028                        */
*      2 CVTRTMCT PTR(31),          /* POINTER TO               03S0052
*                                      RECOVERY/TERMINATION CONTROL
*                                      TABLE MDC031                  */
*      2 CVTSV60 PTR(31),           /* ADDRESS OF SVC 60 BRANCH ENTRY
*                                      POINT USED BY TYPE 2, 3, 4,
*                                      SVC'S MDC032                  */
*      2 CVTSDMP PTR(31),           /* ADDRESS OF SVC DUMP BRANCH
*                                      ENTRY POINT MDC033            */
*      2 CVTSCBP PTR(31),           /* ADDRESS OF SCB PURGE RESOURCE
*                                      MANAGER MDC034                */
*      2 CVTSDBF PTR(31),           /* ADDRESS OF 4K SQA BUFFER USED
*                                      BY SVC DUMP. HIGH ORDER BIT OF
*                                      THIS CVT WORD IS USED AS LOCK
*                                      TO INDICATE BUFFER IS IN USE
*                                      MDC035                        */
*      2 CVTRTMS PTR(31),           /* RTM1 INTERNAL SERVICABILITY
*                                      LEVEL INDICATOR MDC036        */
*      2 CVTTPIOS PTR(31),          /* ADDRESS OF THE TELEPROCESSING
*                                      I/O SUPERV1SOR ROUTINE (TPIOS)
*                                      MDC078                        */
*      2 CVTSIC PTR(31),            /* BRANCH ENTRY ADDRESS OF THE
*                                      ROUTINE TO SCHEDULE SYSTEM
*                                      INITIALIZED CANCEL MDC042     */
*      2 CVTOPCTP PTR(31),          /* ADDRESS OF SYSTEM RESOURCES
*                                      MANAGER (SRM) CONTROL TABLE
*                                      MDC043                        */
*      2 CVTEXPRO PTR(31),          /* ADDRESS OF EXIT PROLOGUE/TYPE
*                                      1 EXIT MDC044                 */
*      2 CVTGSMQ PTR(31),           /* ADDRESS OF GLOBAL SERVICE
*                                      MANAGER QUEUE MDC045          */
*      2 CVTLSMQ PTR(31),           /* ADDRESS OF LOCAL SERVICE 03S0052
*                                      MANAGER QUEUE MDC046          */
*      2 CVTGSPL PTR(31),           /* ADDRESS OF GLOBAL SYSTEM 03S0052
*                                      PRIORITY LIST QUEUE MDC047    */
*      2 CVTVWAIT PTR(31),          /* ADDRESS OF WAIT ROUTINE MDC048*/
*      2 CVTPARRL PTR(31),          /* ADDRESS OF PARTIALLY LOADED
*                                      DELETE QUEUE MDC049           */
*      2 CVTAPFT PTR(31),           /* ADDRESS OF AUTHORIZED PROGRAM
*                                      FACILITY (APF) TABLE.    03S0052
*                                      INITIALIZED BY NIP. MDC050    */
*      2 CVTQCS01 PTR(31),          /* BRANCH ENTRY ADDRESS TO  03S0052
*                                      PROGRAM MANAGER USED BY ATTACH
*                                      MDC051                        */
*      2 CVTFQCB PTR(31),           /* POINTER TO FIRST MAJOR QCB FOR
*                                      ENQ MDC052                    */
*      2 CVTLQCB PTR(31),           /* POINTER TO LAST MAJOR QCB FOR
*                                      ENQ MDC053                    */
*      2 CVTRENQ PTR(31),           /* RESOURCE MANAGER ADDRESS FOR
*                                      ENQ MDC054                    */
*      2 CVTRSPIE PTR(31),          /* RESOURCE MANAGER FOR SPIE
*                                      MDC055                        */
*      2 CVTLKRMA PTR(31),          /* RESOURCE MANAGER ADDRESS FOR
*                                      LOCK MANAGER MDC056           */
*      2 CVTCSD PTR(31),            /* VIRTUAL ADDRESS OF COMMON
*                                      SYSTEM DATA AREA (CSD).  03S0052
*                                      INITIALIZED BY NIP. MDC057    */
*      2 CVTDQIQE PTR(31),          /* RESOURCE MANAGER FOR EXIT
*                                      EFFECTORS MDC058              */
*      2 CVTRPOST PTR(31),          /* RESOURCE MANAGER FOR POST
*                                      MDC059                        */
*      2 CVT062R1 PTR(31),          /* BRANCH ENTRY TO DETACH MDC060 */
*      2 CVTVEAC0 PTR(31),          /* ASCBCHAP BRANCH ENTRY MDC061  */
*      2 CVTGLMN PTR(31),           /* GLOBAL BRANCH ENTRY ADDRESS
*                                      FOR GETMAIN/FREEMAIN MDC062   */
*      2 CVTSPSA PTR(31),           /* POINTER TO GLOBAL WORK/SAVE
*                                      AREA VECTOR TABLE (WSAG) 03S0052
*                                      MDC071                        */
*      2 CVTWSAL PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF
*                                      LOCAL WORK/SAVE AREAS MDC072  */
*      2 CVTWSAG PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF
*                                      GLOBAL WORK/SAVE AREAS MDC073 */
*      2 CVTWSAC PTR(31),           /* ADDRESS OF TABLE OF LENGTHS OF
*                                      CPU WORK/SAVE AREAS MDC074    */
*      2 CVTRECRQ PTR(31),          /* ADDRESS OF THE RECORDING 03S0052
*                                      REQUEST FACILITY (PART OF RTM1
*                                      - CALLED BY RTM2 AND RMS)
*                                      MDC075                        */
*      2 CVTASMVT PTR(31),          /* POINTER TO AUXILIARY STORAGE
*                                      MANAGEMENT VECTOR TABLE (AMVT)
*                                      MDC076                        */
*      2 CVTIOBP PTR(31),           /* ADDRESS OF THE BLOCK PROCESSOR
*                                      CVT MDC079                    */
*      2 CVTSPOST PTR(31),          /* POST RESOURCE MANAGER    03S0052
*                                      TERMINATION ROUTINE (RMTR)
*                                      ENTRY POINT MDC085            */
*      2 CVTRSTWD FIXED(31),        /* RESTART RESOURCE MANAGEMENT
*                                      WORD - CONTAINS IDENTIFIER OF
*                                      USER IF RESTART IS IN USE.
*                                      OTHERWISE, ZERO. MDC161       */
*      2 CVTFETCH PTR(31),          /* ADDRESS OF ENTRY POINT FOR
*                                      BASIC FETCH MDC196            */
*      2 CVT044R2 PTR(31),          /* ADDRESS OF IGC044R2 IN CHAP
*                                      SERVICE ROUTINE MDC197        */
*      2 CVTPERFM PTR(31),          /* ADDRESS OF THE PERFORMANCE
*                                      WORK AREA. SET BY IGX00018.
*                                      MDC205                        */
*      2 CVTDAIR PTR(31),           /* ADDRESS OF IKJDAIR, TSO  03S0052
*                                      DYNAMIC ALLOCATION INTERFACE
*                                      ROUTINE (MDC212)        YM2225*/
*      2 CVTEHDEF PTR(31),          /* ADDRESS OF IKJEHDEF, TSO 03S0052
*                                      DEFAULT SERVICE ROUTINE  03S0052
*                                      (MDC213)                YM2225*/
*      2 CVTEHCIR PTR(31),          /* ADDRESS OF IKJEHCIR, TSO 03S0052
*                                      CATALOG INFORMATION ROUTINE
*                                      (MDC214)                YM2225*/
*      2 CVTSSAP PTR(31),           /* ADDRESS OF SYSTEM SAVE AREA
*                                      MDC063                        */
*      2 CVTAIDVT PTR(31),          /* POINTER TO APPENDAGE ID VECTOR
*                                      TABLE MDC064                  */
*      2 CVTIPCDS PTR(31),          /* BRANCH ENTRY FOR DIRECT SIGNAL
*                                      SERVICE ROUTINE MDC065        */
*      2 CVTIPCRI PTR(31),          /* BRANCH ENTRY FOR REMOTE  03S0052
*                                      IMMEDIATE SIGNAL SERVICE 03S0052
*                                      ROUTINE MDC066                */
*      2 CVTIPCRP PTR(31),          /* BRANCH ENTRY FOR REMOTE  03S0052
*                                      PENDABLE SIGNAL SERVICE  03S0052
*                                      ROUTINE MDC067                */
*      2 CVTPCCAT PTR(31),          /* POINTER TO PHYSICAL CCA VECTOR
*                                      TABLE MDC068                  */
*      2 CVTLCCAT PTR(31),          /* POINTER TO LOGICAL CCA VECTOR
*                                      TABLE MDC069                  */
*      2 CVTRV210 BIT(8),           /* RESERVED                      */
*       3 CVTRV211 BIT(1),          /* RESERVED                      */
*       3 CVTRV212 BIT(1),          /* RESERVED                      */
*       3 CVTRV213 BIT(1),          /* RESERVED                      */
*       3 CVTRV214 BIT(1),          /* RESERVED                      */
*       3 CVTRV215 BIT(1),          /* RESERVED                      */
*       3 CVTRV216 BIT(1),          /* RESERVED                      */
*       3 CVTRV217 BIT(1),          /* RESERVED                      */
*       3 CVTRV218 BIT(1),          /* RESERVED                      */
*      2 CVTRV219 BIT(8),           /* RESERVED                      */
*       3 CVTRV220 BIT(1),          /* RESERVED                      */
*       3 CVTRV221 BIT(1),          /* RESERVED                      */
*       3 CVTRV222 BIT(1),          /* RESERVED                      */
*       3 CVTRV223 BIT(1),          /* RESERVED                      */
*       3 CVTRV224 BIT(1),          /* RESERVED                      */
*       3 CVTRV225 BIT(1),          /* RESERVED                      */
*       3 CVTRV226 BIT(1),          /* RESERVED                      */
*       3 CVTRV227 BIT(1),          /* RESERVED                      */
*      2 CVTRV228 BIT(8),           /* RESERVED                      */
*       3 CVTRV229 BIT(1),          /* RESERVED                      */
*       3 CVTRV230 BIT(1),          /* RESERVED                      */
*       3 CVTRV231 BIT(1),          /* RESERVED                      */
*       3 CVTRV232 BIT(1),          /* RESERVED                      */
*       3 CVTRV233 BIT(1),          /* RESERVED                      */
*       3 CVTRV234 BIT(1),          /* RESERVED                      */
*       3 CVTRV235 BIT(1),          /* RESERVED                      */
*       3 CVTRV236 BIT(1),          /* RESERVED                      */
*      2 CVTRV237 BIT(8),           /* RESERVED                      */
*       3 CVTRV238 BIT(1),          /* RESERVED                      */
*       3 CVTRV239 BIT(1),          /* RESERVED                      */
*       3 CVTRV240 BIT(1),          /* RESERVED                      */
*       3 CVTRV241 BIT(1),          /* RESERVED                      */
*       3 CVTRV242 BIT(1),          /* RESERVED                      */
*       3 CVTRV243 BIT(1),          /* RESERVED                      */
*       3 CVTRV244 BIT(1),          /* RESERVED                      */
*       3 CVTRV245 BIT(1),          /* RESERVED                      */
*      2 CVTRV246 PTR(8),           /* RESERVED                      */
*      2 CVTRV247 PTR(8),           /* RESERVED                      */
*      2 CVTRV248 PTR(8),           /* RESERVED                      */
*      2 CVTRV249 PTR(8),           /* RESERVED                      */
*      2 CVTRV250 PTR(8),           /* RESERVED                      */
*      2 CVTRV251 PTR(8),           /* RESERVED                      */
*      2 CVTRV252 PTR(15),          /* RESERVED                      */
*      2 CVTRV253 FIXED(15),        /* RESERVED                      */
*      2 CVTRV254 FIXED(15),        /* RESERVED                      */
*      2 CVTPWI PTR(31),            /* ADDRESS OF THE WINDOW    03S0052
*                                      INTERCEPT ROUTINE MDC104      */
*      2 CVTPVBP PTR(31),           /* ADDRESS OF THE VIRTUAL BLOCK
*                                      PROCESSOR MDC105              */
*      2 CVTMFCTL PTR(31),          /* POINTER TO MEASUREMENT   03S0052
*                                      FACILITY CONTROL BLOCK MDC100 */
*      2 CVTMFRTR PTR(31),          /* IF MEASUREMENT FACILITY IS
*                                      ACTIVE, CONTAINS ADDRESS OF
*                                      MEASUREMENT FACILITY ROUTER.
*                                      OTHERWISE, ADDRESS OF CVTBRET.
*                                      MDC101                        */
*       3 CVTMFACT BIT(1),          /* IF ONE, I/O SUPERVISOR AND
*                                      TIMER SECOND LEVEL INTERRUPT
*                                      HANDLER HOOKS BRANCH TO  03S0052
*                                      MEASUREMENT FACILITY ROUTER
*                                      MDC102                        */
*      2 CVTVPSIB PTR(31),          /* BRANCH ENTRY TO PAGE SERVICES
*                                      MDC108                        */
*      2 CVTVSI PTR(31),            /* BRANCH ENTRY TO VAM SERVICES
*                                      MDC109                        */
*      2 CVTVFP PTR(31),            /* BRANCH ENTRY TO FINDPAGE 03S0052
*                                      MDC110                        */
*      2 CVTRV262 BIT(8),           /* RESERVED                      */
*       3 CVTRV263 BIT(1),          /* RESERVED                      */
*       3 CVTRV264 BIT(1),          /* RESERVED                      */
*       3 CVTRV265 BIT(1),          /* RESERVED                      */
*       3 CVTRV266 BIT(1),          /* RESERVED                      */
*       3 CVTRV267 BIT(1),          /* RESERVED                      */
*       3 CVTRV268 BIT(1),          /* RESERVED                      */
*       3 CVTRV269 BIT(1),          /* RESERVED                      */
*       3 CVTRV270 BIT(1),          /* RESERVED                      */
*      2 CVTRV271 BIT(8),           /* RESERVED                      */
*       3 CVTRV272 BIT(1),          /* RESERVED                      */
*       3 CVTRV273 BIT(1),          /* RESERVED                      */
*       3 CVTRV274 BIT(1),          /* RESERVED                      */
*       3 CVTRV275 BIT(1),          /* RESERVED                      */
*       3 CVTRV276 BIT(1),          /* RESERVED                      */
*       3 CVTRV277 BIT(1),          /* RESERVED                      */
*       3 CVTRV278 BIT(1),          /* RESERVED                      */
*       3 CVTRV279 BIT(1),          /* RESERVED                      */
*      2 CVTRV280 BIT(8),           /* RESERVED                      */
*       3 CVTRV281 BIT(1),          /* RESERVED                      */
*       3 CVTRV282 BIT(1),          /* RESERVED                      */
*       3 CVTRV283 BIT(1),          /* RESERVED                      */
*       3 CVTRV284 BIT(1),          /* RESERVED                      */
*       3 CVTRV285 BIT(1),          /* RESERVED                      */
*       3 CVTRV286 BIT(1),          /* RESERVED                      */
*       3 CVTRV287 BIT(1),          /* RESERVED                      */
*       3 CVTRV288 BIT(1),          /* RESERVED                      */
*      2 CVTRV289 BIT(8),           /* RESERVED                      */
*       3 CVTRV290 BIT(1),          /* RESERVED                      */
*       3 CVTRV291 BIT(1),          /* RESERVED                      */
*       3 CVTRV292 BIT(1),          /* RESERVED                      */
*       3 CVTRV293 BIT(1),          /* RESERVED                      */
*       3 CVTRV294 BIT(1),          /* RESERVED                      */
*       3 CVTRV295 BIT(1),          /* RESERVED                      */
*       3 CVTRV296 BIT(1),          /* RESERVED                      */
*       3 CVTRV297 BIT(1),          /* RESERVED                      */
*      2 CVTRV298 PTR(8),           /* RESERVED                      */
*      2 CVTRV299 PTR(8),           /* RESERVED                      */
*      2 CVTRV300 PTR(8),           /* RESERVED                      */
*      2 CVTRV301 PTR(8),           /* RESERVED                      */
*      2 CVTRV302 PTR(15),          /* RESERVED                      */
*      2 CVTRV303 PTR(15),          /* RESERVED                      */
*      2 CVTRV304 FIXED(15),        /* RESERVED                      */
*      2 CVTRV305 FIXED(15),        /* RESERVED                      */
*      2 CVTRV306 FIXED(15),        /* RESERVED                      */
*      2 CVTRV307 FIXED(15),        /* RESERVED                      */
*      2 CVTVIOP PTR(31),           /* ENTRY POINT OF PAGE I/O POST
*                                      MDC111                        */
*      2 CVTRMBR PTR(31),           /* ADDRESS OF REGMAIN BRANCH
*                                      ENTRY MDC123                  */
*      2 CVTLFRM PTR(31),           /* LIST FORMAT FREEMAIN BRANCH
*                                      ENTRY POINT MDC124            */
*      2 CVTGMBR PTR(31),           /* LIST FORMAT GETMAIN BRANCH
*                                      ENTRY POINT MDC125            */
*      2 CVT0TC0A PTR(31),          /* ADDRESS OF TASK CLOSE MODULE
*                                      IFG0TC0A MDC128               */
*      2 CVTRLSTG FIXED(31),        /* SIZE OF ACTUAL REAL STORAGE
*                                      ONLINE AT IPL TIME IN 'K'.
*                                      VALUE PLACED HERE BY IEAVNIP0.
*                                      MDC153                        */
*      2 CVTSPFRR PTR(31),          /* 'SUPER FRR' ADDRESS (ADDRESS
*                                      OF FUNCTIONAL RECOVERY ROUTINE
*                                      ESTABLISHED AT NIP0 TIME TO
*                                      PROTECT SUPERVISOR CONTROL
*                                      PROGRAM) MDC154               */
*      2 CVTVEMS0 PTR(31),          /* ADDRESS OF MEMORY SWITCH 03S0052
*                                      ROUTINE MDC155                */
*      2 CVTJRECM PTR(31),          /* ADDRESS OF SUBSYSTEM INTERFACE
*                                      RESOURCE MANAGER MDC157       */
*      2 CVTIRECM PTR(31),          /* ADDRESS OF INITIATOR RESOURCE
*                                      MANAGER MDC158                */
*      2 CVTDARCM PTR(31),          /* ADDRESS OF DEVICE ALLOCATION
*                                      RESOURCE MANAGER MDC159       */
*      2 CVT0PT02 PTR(31),          /* ADDRESS OF POST ENTRY POINT
*                                      IEA0PT02 MDC160               */
*      2 CVTSTPRS PTR(31),          /* ENTRY POINT OF STOP AND  03S0052
*                                      RESTART SUBROUTINE MDC162     */
*      2 CVTWTCB PTR(31),           /* ADDRESS OF WAIT STATE TCB
*                                      MDC164                        */
*      2 CVTVACR PTR(31),           /* ACR/VARY CPU CHANNEL RECOVERY
*                                      ROUTINE ADDRESS. ADDRESS 03S0052
*                                      FILLED IN BY VARY CPU    03S0052
*                                      PROCESSOR. MDC178             */
*      2 CVTQUIT PTR(31),           /* VARY CPU SHUTDOWN ROUTINE
*                                      ADDRESS. ADDRESS FILLED IN BY
*                                      VARY CPU PROCESSOR. MDC179    */
*      2 CVTGTFR8 PTR(31),          /* GENERALIZED TRACE FACILITY
*                                      (GTF) CONTROL REGISTER 8 03S0052
*                                      INITIALIZATION ROUTINE ADDRESS
*                                      MDC180                        */
*      2 CVTVSTOP PTR(31),          /* ADDRESS OF VARY CPU STOP CPU
*                                      ROUTINE MDC169                */
*      2 CVTVPSA PTR(31),           /* ADDRESS OF COPY OF SYSGEN'ED
*                                      PSA - PLACED HERE BY NIP 03S0052
*                                      MDC170                        */
*      2 CVTRMPTT PTR(31),          /* ADDRESS OF ISTRAMA1, THE 03S0052
*                                      RESOURCE MANAGER FOR NORMAL
*                                      AND ABNORMAL TASK TERMINATION
*                                      MDC171                        */
*      2 CVTRMPMT PTR(31),          /* ADDRESS OF ISTRAMA2, THE 03S0052
*                                      RESOURCE MANAGER FOR NORMAL
*                                      AND ABNORMAL MEMORY      03S0052
*                                      TERMINATION MDC172            */
*      2 CVTEXP1 PTR(31),           /* ADDRESS OF EXIT PROLOGUE WHICH
*                                      RETURNS TO THE DISPATCHER
*                                      MDC173                        */
*      2 CVTCSDRL PTR(31),          /* REAL ADDRESS OF COMMON SYSTEM
*                                      DATA AREA (CSD). INITIALIZED
*                                      BY NIP. MDC174                */
*      2 CVTSSRB PTR(31),           /* STATUS STOP SRB ENTRY MDC175  */
*      2 CVTRPT PTR(31),            /* ADDRESS OF IGARPT01 MODULE OF
*                                      RADIX PARTITION TREE SERVICES.
*                                      INITIALIZED BY NIP. MDC177    */
*      2 CVTQV1 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION
*                                      FOR SINGLE THREADED QUEUES
*                                      WITH HEADERS ONLY MDC181      */
*      2 CVTQV2 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION
*                                      FOR SINGLE THREADED QUEUES
*                                      WITH HEADER AND TRAILER MDC182*/
*      2 CVTQV3 PTR(31),            /* ADDRESS OF QUEUE VERIFICATION
*                                      FOR DOUBLE THREADED QUEUES
*                                      MDC183                        */
*      2 CVTGSDA PTR(31),           /* ADDRESS OF GLOBAL SYSTEM 03S0052
*                                      DUPLEX AREA. ADDRESS FILLED IN
*                                      BY NIP0. MDC184               */
*       3 CVTGSDAB BIT(1),          /* IF HIGH-ORDER BIT IS ONE,
*                                      THERE IS A VALID VALUE IN
*                                      FOLLOWING 31 BITS MDC185      */
*      2 CVTADV PTR(31),            /* ADDRESS OF ADDRESS       03S0052
*                                      VERIFICATION ROUTINE MDC186   */
*      2 CVTTPIO PTR(31);           /* ADDRESS OF VTAM TPIO (SVC 124)
*                                      ROUTINE MDC193                */
*/*                                                                  */
*/*            OS - OS/VS COMMON EXTENSION                           */
*/*                                                                  */
*                                                               03S0053
*   DECLARE                                                     03S0053
*     1 CVTXTNT1 BASED(CVTEXT1),    /* START OF OS - OS/VS COMMON
*                                      EXTENSION ICB421              */
*      2 CVTFACHN PTR(31),          /* ADDRESS OF CHAIN OF DCB FIELD
*                                      AREAS (ISAM) ICB421           */
*      2 CVTRSV87 PTR(31),          /* RESERVED                      */
*      2 CVTRSV88 PTR(31);          /* RESERVED                      */
*/*                                                                  */
*/*            OS/VS1 - OS/VS2 COMMON EXTENSION                      */
*/*                                                                  */
*                                                               03S0054
*   DECLARE                                                     03S0054
*     1 CVTXTNT2 BASED(CVTEXT2),    /* START OF OS/VS1 - OS/VS2 03S0054
*                                      EXTENSION                     */
*      2 CVTDSSV PTR(31),           /* ADDRESS OF THE DYNAMIC SUPPORT
*                                      SYSTEM (DSS) VECTOR TABLE
*                                      ICB313                        */
*       3 CVTRSV89 PTR(8),          /* RESERVED ICB313               */
*       3 CVTDSSVA PTR(24),         /* ADDRESS OF THE DSS VECTOR
*                                      TABLE ICB313                  */
*      2 CVTNUCLS CHAR(1),          /* IDENTIFICATION OF THE NUCLEUS
*                                      MEMBER NAME ICB322            */
*      2 CVTRSV90 BIT(8),           /* RESERVED                      */
*       3 CVTRSV9A BIT(1),          /* RESERVED                      */
*       3 CVTRSV9B BIT(1),          /* RESERVED                      */
*       3 CVTRSV9C BIT(1),          /* RESERVED                      */
*       3 CVTRSV9D BIT(1),          /* RESERVED                      */
*       3 CVTRSV9E BIT(1),          /* RESERVED                      */
*       3 CVTRSV9F BIT(1),          /* RESERVED                      */
*       3 CVTRSV9G BIT(1),          /* RESERVED                      */
*       3 CVTRSV9H BIT(1),          /* RESERVED                      */
*      2 CVTRSV91 FIXED(15),        /* RESERVED                      */
*      2 CVTDEBVR PTR(31),          /* ADDRESS OF BRANCH ENTRY POINT
*                                      OF DEB VALIDITY CHECK ROUTINE
*                                      (ICB380)                XM9028*/
*      2 CVTRSV92 PTR(31),          /* RESERVED (MDC190)       YM2278*/
*      2 CVTRSV93 PTR(31),          /* RESERVED                      */
*      2 CVTRSV94 PTR(31),          /* RESERVED                      */
*      2 CVTQID PTR(31),            /* SAVE AS CVTQIDA BELOW ICB381  */
*       3 CVTRSV95 PTR(8),          /* RESERVED ICB381               */
*       3 CVTQIDA PTR(24),          /* ADDRESS OF QUEUE         03S0054
*                                      IDENTIFICATION (QID) TABLE
*                                      PREFIX ICB381                 */
*      2 CVTOLTEP PTR(31),          /* POINTER TO CONTROL BLOCK 03S0054
*                                      CREATED BY SVC 59 TO POINT TO
*                                      PSEUDO-DEB'S ICB423           */
*      2 CVTRSV96 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV97 FIXED(15),        /* RESERVED                      */
*      2 CVTRSV98 PTR(31),          /* RESERVED                      */
*      2 CVTRSV99 PTR(31),          /* RESERVED                      */
*      2 CVTRSVA0 PTR(31),          /* RESERVED                      */
*      2 CVTRSVA1 PTR(31),          /* RESERVED                      */
*      2 CVTRV400 BIT(8),           /* RESERVED                      */
*       3 CVTRV401 BIT(1),          /* RESERVED                      */
*       3 CVTRV402 BIT(1),          /* RESERVED                      */
*       3 CVTRV403 BIT(1),          /* RESERVED                      */
*       3 CVTRV404 BIT(1),          /* RESERVED                      */
*       3 CVTRV405 BIT(1),          /* RESERVED                      */
*       3 CVTRV406 BIT(1),          /* RESERVED                      */
*       3 CVTRV407 BIT(1),          /* RESERVED                      */
*       3 CVTRV408 BIT(1),          /* RESERVED                      */
*      2 CVTRV409 BIT(8),           /* RESERVED                      */
*       3 CVTRV410 BIT(1),          /* RESERVED                      */
*       3 CVTRV411 BIT(1),          /* RESERVED                      */
*       3 CVTRV412 BIT(1),          /* RESERVED                      */
*       3 CVTRV413 BIT(1),          /* RESERVED                      */
*       3 CVTRV414 BIT(1),          /* RESERVED                      */
*       3 CVTRV415 BIT(1),          /* RESERVED                      */
*       3 CVTRV416 BIT(1),          /* RESERVED                      */
*       3 CVTRV417 BIT(1),          /* RESERVED                      */
*      2 CVTRV418 PTR(8),           /* RESERVED                      */
*      2 CVTRV419 PTR(8),           /* RESERVED                      */
*      2 CVTRV420 PTR(15),          /* RESERVED                      */
*      2 CVTRV421 FIXED(15),        /* RESERVED                      */
*      2 CVTRV422 FIXED(15),        /* RESERVED                      */
*      2 CVTRV423 FIXED(15),        /* RESERVED                      */
*      2 CVTATCVT PTR(31),          /* POINTER TO VTAM'S CVT MDC080  */
*       3 CVTATACT BIT(1),          /* IF ON, VTAM IS ACTIVE MDC081  */
*      2 CVTRV425 PTR(31),          /* RESERVED                      */
*      2 CVTRV426 PTR(31),          /* RESERVED                      */
*      2 CVTRV427 PTR(31),          /* RESERVED                      */
*      2 CVTRV428 FIXED(31),        /* RESERVED                      */
*      2 CVTRV429 BIT(8),           /* RESERVED                      */
*       3 CVTRV430 BIT(1),          /* RESERVED                      */
*       3 CVTRV431 BIT(1),          /* RESERVED                      */
*       3 CVTRV432 BIT(1),          /* RESERVED                      */
*       3 CVTRV433 BIT(1),          /* RESERVED                      */
*       3 CVTRV434 BIT(1),          /* RESERVED                      */
*       3 CVTRV435 BIT(1),          /* RESERVED                      */
*       3 CVTRV436 BIT(1),          /* RESERVED                      */
*       3 CVTRV437 BIT(1),          /* RESERVED                      */
*      2 CVTRV438 BIT(8),           /* RESERVED                      */
*       3 CVTRV439 BIT(1),          /* RESERVED                      */
*       3 CVTRV440 BIT(1),          /* RESERVED                      */
*       3 CVTRV441 BIT(1),          /* RESERVED                      */
*       3 CVTRV442 BIT(1),          /* RESERVED                      */
*       3 CVTRV443 BIT(1),          /* RESERVED                      */
*       3 CVTRV444 BIT(1),          /* RESERVED                      */
*       3 CVTRV445 BIT(1),          /* RESERVED                      */
*       3 CVTRV446 BIT(1),          /* RESERVED                      */
*      2 CVTRV447 PTR(8),           /* RESERVED                      */
*      2 CVTRV448 PTR(8),           /* RESERVED                      */
*      2 CVTRV449 PTR(15),          /* RESERVED                      */
*      2 CVTRV450 FIXED(15),        /* RESERVED                      */
*      2 CVTRV451 FIXED(15),        /* RESERVED                      */
*      2 CVTRV452 FIXED(15),        /* RESERVED                      */
*      2 CVTRV453 PTR(31),          /* RESERVED                      */
*      2 CVTRV454 PTR(31),          /* RESERVED                      */
*      2 CVTRV455 PTR(31),          /* RESERVED                      */
*      2 CVTRV456 PTR(31),          /* RESERVED                      */
*      2 CVTRV457 BIT(8),           /* RESERVED                      */
*       3 CVTRV458 BIT(1),          /* RESERVED                      */
*       3 CVTRV459 BIT(1),          /* RESERVED                      */
*       3 CVTRV460 BIT(1),          /* RESERVED                      */
*       3 CVTRV461 BIT(1),          /* RESERVED                      */
*       3 CVTRV462 BIT(1),          /* RESERVED                      */
*       3 CVTRV463 BIT(1),          /* RESERVED                      */
*       3 CVTRV464 BIT(1),          /* RESERVED                      */
*       3 CVTRV465 BIT(1),          /* RESERVED                      */
*      2 CVTRV466 BIT(8),           /* RESERVED                      */
*       3 CVTRV467 BIT(1),          /* RESERVED                      */
*       3 CVTRV468 BIT(1),          /* RESERVED                      */
*       3 CVTRV469 BIT(1),          /* RESERVED                      */
*       3 CVTRV470 BIT(1),          /* RESERVED                      */
*       3 CVTRV471 BIT(1),          /* RESERVED                      */
*       3 CVTRV472 BIT(1),          /* RESERVED                      */
*       3 CVTRV473 BIT(1),          /* RESERVED                      */
*       3 CVTRV474 BIT(1),          /* RESERVED                      */
*      2 CVTRV475 PTR(8),           /* RESERVED                      */
*      2 CVTRV476 PTR(8),           /* RESERVED                      */
*      2 CVTRV477 PTR(8),           /* RESERVED                      */
*      2 CVTRV478 PTR(8),           /* RESERVED                      */
*      2 CVTRV479 FIXED(15),        /* RESERVED                      */
*      2 CVTRV480 PTR(31),          /* RESERVED                      */
*      2 CVTRV481 PTR(31),          /* RESERVED                      */
*      2 CVTRV482 PTR(31);          /* RESERVED                      */
*/*                       CVT PREFIX                                 */
*                                                               03S0055
*   DCL                                                         03S0055
*     1 CVTFIX BASED(CVTPTR-256) BDY(WORD),                     03S0055
*      2 * CHAR(248) BDY(WORD),     /* RESERVED                      */
*      2 * CHAR(2) BDY(WORD),       /* RESERVED                      */
*      2 CVTMDL CHAR(2) BDY(WORD,3),/* CPU MODEL NUMBER IN SIGNLESS
*                                      PACKED DECIMAL, I.E., A MODEL
*                                      145 WOULD BE REPRESENTED AS
*                                      0145 HEX                      */
*      2 CVTRELNO CHAR(4) BDY(WORD),/* RELEASE NUMBER (EBCDIC)       */
*       3 CVTNUMB CHAR(2) BDY(WORD),/* RELEASE NUMBER                */
*       3 CVTLEVL CHAR(2) BDY(WORD,3);/* LEVEL NUMBER OF THIS RELEASE*/
*/*                    END OF CVT MACRO                              */
*                                                               03S0056
*                                                               03S0056
*/* **************************************************************** */
*/*                                                                  */
*/*            PREFIXED SAVE AREA                                    */
*/*                                                                  */
*/*  OS/VS2 RELEASE 2, 11/15/73, LEVEL=24                            */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL  - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.      */
*/*             USING ON PSA GIVES ADDRESSABILITY FOR ALL SYMBOLS.   */
*/*      PL/S - PSA WILL BE BASED(0) FOR PL/S I OR LOCATION(0) FOR   */
*/*             PL/S II UNLESS %PSABASE IS SET TO SOME OTHER VALUE   */
*/*             BEFORE INCLUDE FOR MACRO.                            */
*/*                                                                  */
*/*  NOTE                                                            */
*/*      THE LABELS BEGINNING WITH PSA OR FLC ARE THE PROPER LABELS  */
*/*      TO USE.  THE OTHER LABELS ARE GIVEN AS ALIAS NAMES FOR      */
*/*      COMPATIBILITY WITH LABELS USED FOR SYSTEM 360 LOW CORE.     */
*/*                                                                  */
*/* **************************************************************** */
*                                                               03S0056
*   DECLARE                                                     03S0056
*     1 PSA LOCATION(0) BDY(DWORD),                             03S0056
*      2 FLCRNPSW CHAR(8) BDY(DWORD),/* RESTART NEW PSW (AFTER IPL)  */
*       3 FLCIPPSW CHAR(8) BDY(DWORD),/* IPL PSW                     */
*      2 FLCROPSW CHAR(8) BDY(DWORD),/* RESTART OLD PSW (AFTER IPL)  */
*       3 FLCICCW1 CHAR(8) BDY(DWORD),/* IPL CCW1                    */
*      2 FLCICCW2 CHAR(8) BDY(DWORD),/* IPL CCW2                     */
*       3 FLCCVT PTR(31),           /* ADDRESS OF CVT (AFTER IPL)    */
*       3 * CHAR(4),                /* RESERVED (AFTER IPL)          */
*      2 FLCEOPSW CHAR(8) BDY(DWORD),/* EXTERNAL OLD PSW             */
*      2 FLCSOPSW CHAR(8) BDY(DWORD),/* SVC OLD PSW                  */
*      2 FLCPOPSW CHAR(8) BDY(DWORD),/* PROGRAM CHECK OLD PSW        */
*      2 FLCMOPSW CHAR(8) BDY(DWORD),/* MACHINE CHECK OLD PSW        */
*      2 FLCIOPSW CHAR(8) BDY(DWORD),/* INPUT/OUTPUT OLD PSW         */
*      2 FLCCSW CHAR(8) BDY(DWORD), /* CHANNEL STATUS WORD           */
*      2 FLCCAW CHAR(4) BDY(WORD),  /* CHANNEL ADDRESS WORD          */
*      2 FLCCVT2 PTR(31),           /* ADDRESS OF CVT - USED BY DUMP
*                                      ROUTINES ICB319               */
*      2 FLCTIMER CHAR(4),          /* TIMER                         */
*      2 FLCTRACE PTR(31),          /* ADDRESS OF TRACE TABLE HEADER */
*      2 FLCENPSW CHAR(8) BDY(DWORD),/* EXTERNAL NEW PSW             */
*      2 FLCSNPSW CHAR(8) BDY(DWORD),/* SVC NEW PSW                  */
*      2 FLCPNPSW CHAR(8) BDY(DWORD),/* PROGRAM CHECK NEW PSW        */
*      2 FLCMNPSW CHAR(8) BDY(DWORD),/* MACHINE CHECK NEW PSW        */
*      2 FLCINPSW CHAR(8) BDY(DWORD),/* INPUT/OUTPUT NEW PSW         */
*      2 * CHAR(4),                 /* RESERVED                      */
*      2 PSAEEPSW CHAR(4) BDY(WORD),/* EXTENDED PSW DATA STORED ON
*                                      EXTERNAL INTERRUPT MDC084     */
*       3 PSASPAD FIXED(15),        /* ISSUING PROCESSOR'S PHYSICAL
*                                      ADDRESS ON EMS OR EXTERNAL
*                                      CALL INTERRUPT MDC046         */
*       3 FLCEICOD FIXED(15),       /* EXTERNAL INTERRUPTION CODE    */
*      2 PSAESPSW CHAR(4) BDY(WORD),/* EXTENDED PSW DATA STORED ON
*                                      SVC INTERRUPT MDC085          */
*       3 * CHAR(1),                /* RESERVED - SET TO ZERO        */
*       3 FLCSVILC PTR(8),          /* SVC INSTRUCTION LENGTH COUNTER
*                                      - NUMBER OF BYTES MDC079      */
*        4 * BIT(5),                /* ALWAYS ZERO                   */
*        4 FLCSILCB BIT(3),         /* SIGNIFICANT BITS IN ILC FIELD
*                                      - LAST BIT IS ALWAYS ZERO
*                                      MDC080                        */
*       3 FLCSVCN FIXED(15),        /* SVC INTERRUPTION CODE - SVC
*                                      NUMBER MDC081                 */
*      2 PSAEPPSW CHAR(8) BDY(WORD),/* EXTENDED PSW FOR PROGRAM 03S0056
*                                      INTERRUPT MDC086              */
*       3 * CHAR(1),                /* RESERVED - SET TO ZERO        */
*       3 FLCPIILC PTR(8),          /* PROGRAM INSTRUCTION LENGTH
*                                      COUNTER - NUMBER OF BYTES IN
*                                      INSTRUCTION CAUSING PROGRAM
*                                      INTERRUPTION MDC082           */
*        4 * BIT(5),                /* ALWAYS ZERO                   */
*        4 FLCPILCB BIT(3),         /* SIGNIFICANT BITS IN ILC FIELD
*                                      - LAST BIT IS ALWAYS ZERO
*                                      MDC083                        */
*       3 FLCPICOD FIXED(15),       /* PROGRAM INTERRUPTION CODE     */
*        4 PSARV049 CHAR(1),        /* RESERVED FOR IMPRECISE   03S0056
*                                      INTERRUPTS MDC087             */
*        4 PSAPICOD PTR(8),         /* 8-BIT INTERRUPT CODE MDC088   */
*         5 PSAPIPER BIT(1),        /* PER INTERRUPT OCCURRED MDC089 */
*         5 PSAPIMC BIT(1),         /* MONITOR CALL INTERRUPT   03S0056
*                                      OCCURRED MDC090               */
*         5 PSAPIPC BIT(6),         /* AN UNSOLICITED PROGRAM CHECK
*                                      HAS OCCURRED IF ANY OF THESE 6
*                                      BITS ARE ON MDC091            */
*       3 FLCTEA PTR(31),           /* TRANSLATION EXCEPTION ADDRESS */
*        4 * CHAR(1),               /* RESERVED - SET TO ZERO        */
*        4 FLCTEAA PTR(24),         /* TRANSLATION EXCEPTION ADDRESS */
*      2 * CHAR(1),                 /* RESERVED - SET TO ZERO        */
*      2 FLCMCNUM PTR(8),           /* MONITOR CLASS NUMBER          */
*      2 FLCPERCD CHAR(1),          /* PROGRAM EVENT RECORDING CODE  */
*      2 * CHAR(1),                 /* RESERVED - SET TO ZERO        */
*      2 FLCPER PTR(31),            /* PER ADDRESS                   */
*       3 * CHAR(1),                /* RESERVED - SET TO ZERO        */
*       3 FLCPERA PTR(24),          /* PER ADDRESS                   */
*      2 * CHAR(1),                 /* RESERVED - SET TO ZERO        */
*      2 FLCMTRCD CHAR(3),          /* MONITOR CODE                  */
*      2 * CHAR(8),                 /* RESERVED                      */
*      2 FLCMCLA CHAR(344) BDY(DWORD),/* MACHINE CHECK LOGOUT AREA   */
*       3 FLCCHNID CHAR(4),         /* CHANNEL ID                    */
*       3 FLCIOEL PTR(31),          /* SAME AS FLCIOELA BELOW        */
*        4 * CHAR(1),               /* RESERVED                      */
*        4 FLCIOELA PTR(24),        /* I/O EXTENDED LOGOUT (IOEL)
*                                      POINTER                       */
*       3 FLCLCL CHAR(4),           /* LIMITED CHANNEL LOGOUT (ECSW) */
*       3 * CHAR(2),                /* RESERVED                      */
*       3 * CHAR(1),                /* RESERVED MDC051               */
*       3 * CHAR(1),                /* RESERVED MDC052               */
*       3 FLCIOA PTR(31),           /* I/O ADDRESS                   */
*        4 * CHAR(1),               /* RESERVED                      */
*        4 FLCIOAA PTR(24),         /* I/O ADDRESS                   */
*       3 * CHAR(44),               /* RESERVED                      */
*       3 FLCMCIC CHAR(8),          /* MACHINE-CHECK INTERRUPTION
*                                      CODE                          */
*       3 * CHAR(8),                /* RESERVED                      */
*       3 FLCFSA PTR(31),           /* FAILING STORAGE ADDRESS       */
*        4 * CHAR(1),               /* ZEROES                        */
*        4 FLCFSAA PTR(24),         /* FAILING STORAGE ADDRESS       */
*       3 FLCRGNCD CHAR(4),         /* REGION CODE                   */
*       3 FLCFLA CHAR(96) BDY(WORD),/* FIXED LOGOUT AREA             */
*       3 FLCFPSAV CHAR(32) BDY(DWORD),/* FLOATING POINT REGISTER
*                                      SAVE AREA                     */
*       3 FLCGRSAV(16) FIXED(31),   /* GENERAL REGISTER SAVE AREA    */
*       3 FLCCRSAV(16) FIXED(31),   /* CONTROL REGISTER SAVE AREA    */
*      2 FLCHDEND CHAR(0) BDY(DWORD),/* END OF HARDWARE ASSIGNMENTS  */
*      2 PSAPSA CHAR(4) BDY(WORD),  /* CONTROL BLOCK ACRONYM IN 03S0056
*                                      EBCDIC                        */
*      2 PSACPUPA PTR(15),          /* PHYSICAL CPU ADDRESS (CHANGED
*                                      DURING ACR) (MDC130)    YM3489*/
*      2 PSACPULA PTR(15),          /* LOGICAL CPU ADDRESS           */
*      2 PSAPCCAV PTR(31),          /* VIRTUAL ADDRESS OF PCCA       */
*      2 PSAPCCAR PTR(31),          /* REAL ADDRESS OF PCCA          */
*      2 PSALCCAV PTR(31),          /* VIRTUAL ADDRESS OF LCCA       */
*      2 PSALCCAR PTR(31),          /* REAL ADDRESS OF LCCA          */
*      2 PSATNEW PTR(31),           /* TCB NEW POINTER               */
*      2 PSATOLD PTR(31),           /* TCB OLD POINTER               */
*      2 PSAANEW PTR(31),           /* ASCB NEW POINTER              */
*      2 PSAAOLD PTR(31),           /* ASCB OLD POINTER              */
*      2 PSASUPER CHAR(4) BDY(WORD),/* SUPERVISOR CONTROL WORD       */
*       3 PSASUP1 BIT(8),           /* FIRST BYTE OF PSASUPER        */
*        4 PSAIO BIT(1),            /* I/O FLIH                      */
*        4 PSASVC BIT(1),           /* SVC FLIH                      */
*        4 PSAEXT BIT(1),           /* EXTERNAL FLIH                 */
*        4 PSAPI BIT(1),            /* PROGRAM CHECK FLIH            */
*        4 PSALOCK BIT(1),          /* LOCK ROUTINE                  */
*        4 PSADISP BIT(1),          /* DISPATCHER                    */
*        4 PSAIPCDR BIT(1),         /* SIGP - DIRECT                 */
*        4 PSAIPCRP BIT(1),         /* SIGP - REMOTE PENDING         */
*       3 PSASUP2 BIT(8),           /* SECOND BYTE OF PSASUPER       */
*        4 PSAIPCRI BIT(1),         /* SIGP - REMOTE IMMEDIATE       */
*        4 PSAGTF BIT(1),           /* GTF GIVEN CONTROL FROM FLIH   */
*        4 PSAIPCEC BIT(1),         /* EXTERNAL CALL SLIH IS ACTIVE
*                                      MDC047                        */
*        4 PSAIPCES BIT(1),         /* EMERGENCY SIGNAL SLIH IS 03S0056
*                                      ACTIVE MDC048                 */
*        4 PSAIPCE2 BIT(1),         /* EMERGENCY SIGNAL (EMS) SLIH
*                                      RECURSIVE ENTRY FLAG MDC110   */
*        4 PSAACR BIT(1),           /* AUTOMATIC CPU RECONFIGURATION
*                                      (ACR) IN CONTROL MDC119       */
*        4 PSARTM BIT(1),           /* RECOVERY TERMINATION MONITOR
*                                      (RTM) IN CONTROL MDC120       */
*        4 PSALCR BIT(1),           /* LOW CORE REFRESH ROUTINE IS
*                                      ACTIVE MDC126                 */
*       3 PSASUP3 BIT(8),           /* THIRD BYTE OF PSASUPER        */
*        4 PSAIOSUP BIT(1),         /* IF ON, A MAINLINE IOS    03S0056
*                                      COMPONENT SUCH AS CHANNEL
*                                      SCHEDULER HAS ENTERED A  03S0056
*                                      PHYSICALLY DISABLED STATE
*                                      WITHOUT REGARD TO LOCKING
*                                      REQUIREMENTS MDC127           */
*        4 PSARV008 BIT(1),         /* RESERVED                      */
*        4 PSARV009 BIT(1),         /* RESERVED                      */
*        4 PSARV010 BIT(1),         /* RESERVED                      */
*        4 PSARV011 BIT(1),         /* RESERVED                      */
*        4 PSARV012 BIT(1),         /* RESERVED                      */
*        4 PSARV013 BIT(1),         /* RESERVED                      */
*        4 PSARV014 BIT(1),         /* RESERVED                      */
*       3 PSASUP4 BIT(8),           /* FOURTH BYTE OF PSASUPER       */
*        4 PSARV015 BIT(1),         /* RESERVED                      */
*        4 PSARV016 BIT(1),         /* RESERVED                      */
*        4 PSARV017 BIT(1),         /* RESERVED                      */
*        4 PSARV018 BIT(1),         /* RESERVED                      */
*        4 PSARV019 BIT(1),         /* RESERVED                      */
*        4 PSARV020 BIT(1),         /* RESERVED                      */
*        4 PSARV021 BIT(1),         /* RESERVED                      */
*        4 PSARV022 BIT(1),         /* RESERVED                      */
*      2 PSAGPREG(3) FIXED(31),     /* REGISTER SAVE AREA FOR I/O
*                                      FLIH, SVC FLIH, EXTERNAL FLIH
*                                      AND SYSTEM TRACE              */
*      2 PSARSREG FIXED(31),        /* RESTART FLIH REGISTER SAVE    */
*      2 PSAPIREG FIXED(31),        /* PROGRAM CHECK FLIH REGISTER
*                                      SAVE                          */
*      2 PSAEXPS1 CHAR(8) BDY(DWORD),/* EXTERNAL FLIH PSW SAVE AREA 1*/
*      2 PSAEXPS2 CHAR(8) BDY(DWORD),/* EXTERNAL FLIH PSW SAVE AREA 2*/
*      2 PSAMPSW CHAR(8) BDY(DWORD),/* SETLOCK MODEL PSW             */
*      2 PSAMCHEX CHAR(8) BDY(DWORD),/* MCH EXIT PSW                 */
*      2 PSAIPCR CHAR(4) BDY(WORD), /* IPC INSTRUCTION TO BE EXECUTED*/
*      2 PSAIPCRM CHAR(1),          /* BYTE USED BY ABOVE IPC   03S0056
*                                      INSTRUCTION                   */
*      2 * CHAR(3),                 /* RESERVED                      */
*      2 PSAIPCD CHAR(4) BDY(WORD), /* IPC INSTRUCTION TO BE EXECUTED*/
*      2 PSAIPCDM CHAR(1),          /* BYTE USED BY ABOVE IPC   03S0056
*                                      INSTRUCTION                   */
*      2 * CHAR(3),                 /* RESERVED                      */
*      2 PSAIPCSA FIXED(31),        /* IPC REGISTER SAVE AREA MDC049 */
*      2 PSAHLHIS FIXED(31),        /* SAVE AREA FOR PSAHLHI MDC050  */
*      2 PSARECUR CHAR(1),          /* RESTART FLIH RECURSION   03S0056
*                                      INDICATOR. IF X'00', FLIH NOT
*                                      IN CONTROL. IF X'FF', FLIH IN
*                                      CONTROL, ENTRY IS RECURSIVE
*                                      MDC093                        */
*      2 PSADSSGO PTR(8),           /* INITIALIZE DSS FLAG, SET BY
*                                      OPERATOR. IF X'00', DSS NOT TO
*                                      BE ACTIVATED. IF NOT X'00',
*                                      NEXT RESTART INTERRUPT FROM
*                                      CONSOLE SHOULD INITIALIZE DSS.
*                                      MDC094                        */
*      2 PSARV050 FIXED(15),        /* RESERVED                      */
*      2 PSASRSA PTR(31),           /* REAL ADDRESS OF SAVE AREA USED
*                                      DURING STOP AND RESTART  03S0056
*                                      SUBROUTINE MDC095             */
*      2 PSACLHT CHAR(56) BDY(WORD),/* CPU LOCKS HELD TABLE.    03S0056
*                                      INITIALIZED TO ZERO. IF LOCK
*                                      IS HELD, WORD REPRESENTING
*                                      LOCK HAS ITS ADDRESS.         */
*       3 PSADISPL PTR(31),         /* GLOBAL DISPATCHER LOCK        */
*       3 PSAASML PTR(31),          /* AUXILIARY STORAGE MANAGEMENT
*                                      (ASM) LOCK MDC002             */
*       3 PSASALCL PTR(31),         /* SPACE ALLOCATION LOCK MDC003  */
*       3 PSAIOSSL PTR(31),         /* IOS SYNCHRONIZATION LOCK 03S0056
*                                      MDC010                        */
*       3 PSAIOSCL PTR(31),         /* IOS CHANNEL AVAILABLE TABLE
*                                      LOCK MDC004                   */
*       3 PSAIOSUL PTR(31),         /* IOS UNIT CONTROL BLOCK LOCK
*                                      MDC005                        */
*       3 PSAIOSLL PTR(31),         /* IOS LOGICAL CHANNEL QUEUE LOCK
*                                      MDC006                        */
*       3 PSATPNCL PTR(31),         /* TCAM'S TPNCP LOCK MDC007      */
*       3 PSATPDNL PTR(31),         /* TCAM'S TPDNCB LOCK MDC008     */
*       3 PSATPACL PTR(31),         /* TCAM'S TPACBDEB LOCK MDC009   */
*       3 PSAOPTL PTR(31),          /* OPTIMIZER LOCK                */
*       3 PSACMSL PTR(31),          /* CROSS MEMORY SERVICES LOCK    */
*       3 PSALOCAL PTR(31),         /* LOCAL LOCK                    */
*       3 PSARV023 PTR(31),         /* RESERVED LOCK                 */
*      2 PSALKSA CHAR(64) BDY(WORD),/* SETLOCK REGISTER SAVE AREA    */
*       3 PSALKR0 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 0 */
*       3 PSALKR1 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 1 */
*       3 PSALKR2 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 2 */
*       3 PSALKR3 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 3 */
*       3 PSALKR4 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 4 */
*       3 PSALKR5 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 5 */
*       3 PSALKR6 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 6 */
*       3 PSALKR7 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 7 */
*       3 PSALKR8 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 8 */
*       3 PSALKR9 FIXED(31),        /* SETLOCK'S CALLER'S REGISTER 9 */
*       3 PSALKR10 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 10*/
*       3 PSALKR11 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 11*/
*       3 PSALKR12 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 12*/
*       3 PSALKR13 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 13*/
*       3 PSALKR14 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 14*/
*       3 PSALKR15 FIXED(31),       /* SETLOCK'S CALLER'S REGISTER 15*/
*      2 PSAHLHI CHAR(4) BDY(WORD), /* HIGHEST LOCK HELD INDICATOR   */
*       3 PSACLHS BIT(32) BDY(WORD),/* CPU LOCKS HELD STRING MDC122  */
*      2 PSALITA PTR(31),           /* ADDRESS OF LOCK INTERFACE
*                                      TABLE                         */
*      2 PSAPSWSV CHAR(8) BDY(DWORD),/* PSW SAVE AREA FOR DISPATCHER
*                                      AND ACR                       */
*      2 PSACR0 FIXED(31),          /* SAVE AREA FOR CONTROL REGISTER
*                                      0                             */
*      2 PSAMCHFL BIT(8),           /* MCH RECURSION FLAGS           */
*      2 PSASYMSK CHAR(1),          /* THIS FIELD WILL BE USED IN
*                                      CONJUNCTION WITH THE STNSM
*                                      INSTRUCTION TO PLACE IOS 03S0056
*                                      CHANNEL SCHEDULER INTO A 03S0056
*                                      DISABLED STATE AND       03S0056
*                                      SIMULTANEOUSLY SAVE THE SYSTEM
*                                      MASK OF THE CALLER MDC022     */
*      2 PSARV061 CHAR(1),          /* RESERVED (MDC060)       YM4244*/
*      2 PSAMCHIC CHAR(1),          /* MCH INITIALIZATION COMPLETE
*                                      FLAGS MDC098                  */
*      2 PSAWKRAP PTR(31),          /* REAL ADDRESS OF VARY CPU 03S0056
*                                      PARAMETER LIST MDC106         */
*      2 PSAWKVAP PTR(31),          /* VIRTUAL ADDRESS OF VARY CPU
*                                      PARAMETER LIST MDC107         */
*      2 PSAVSTAP FIXED(15),        /* WORK AREA FOR VARY CPU MDC108 */
*      2 PSACPUSA PTR(15),          /* PHYSICAL CPU ADDRESS (STATIC)
*                                      (MDC131)                YM3489*/
*      2 PSASTOR FIXED(31),         /* MASTER MEMORY'S SEGMENT TABLE
*                                      ORIGIN REGISTER (STOR) VALUE  */
*      2 PSADSSRS FIXED(31),        /* REGISTER SAVE FOR DSS PROGRAM
*                                      AND SVC INTERRUPT HANDLERS
*                                      MDC053                        */
*      2 PSADSSR2 FIXED(31),        /* REGISTER SAVE AREA FOR DSS I/O
*                                      AND EXTERNAL INTERRUPT   03S0056
*                                      HANDLERS MDC054               */
*      2 PSADSSR3 FIXED(31),        /* REGISTER SAVE AREA FOR DSS
*                                      ERROR RECOVERY ROUTINE MDC055 */
*      2 PSADSSWK FIXED(31),        /* WORK AREA FOR DSS INTERRUPT
*                                      HANDLERS MDC056               */
*      2 PSADSSTS(5) FIXED(31),     /* REGISTER SAVE FOR DSS MODULES
*                                      MAKING CALLS TO IQATSS MDC023 */
*      2 PSADSSFL CHAR(4) BDY(WORD),/* DSS FLAG BYTES MDC024         */
*       3 PSADSSF1 BIT(8),          /* DSS STATUS BYTE MDC029        */
*        4 PSADSSMV BIT(1),         /* DSS MONITORING, VS2 RUNNING
*                                      MDC030                        */
*        4 PSADSSDM BIT(1),         /* DSS IN VS2-2 VM MDC031        */
*        4 PSADSSDD BIT(1),         /* DSS IN DSS VM MDC032          */
*        4 PSADSSDW BIT(1),         /* DSS IN DSS WAIT MDC033        */
*        4 PSADSSTP BIT(1),         /* DSS PROCESSING SIGP MDC034    */
*        4 PSADSSSP BIT(1),         /* DSS SIGP PENDING MDC035       */
*        4 PSADSSOI BIT(1),         /* DSS EXECUTING OVERLAID   03S0056
*                                      INSTRUCTION MDC036            */
*        4 PSADSSPI BIT(1),         /* DSS EXECUTING PRIVILEGED 03S0056
*                                      INSTRUCTION MDC037            */
*       3 PSADSSF2 CHAR(1),         /* SYSTEM STATUS BYTE MDC038     */
*       3 PSADSSF3 BIT(8),          /* DSS FLAG BYTE MDC099          */
*        4 PSADSSGP BIT(1),         /* DSS SIGP INDICATOR MDC100     */
*        4 PSADSSES BIT(1),         /* ERROR SHORT SAVE INDICATOR
*                                      MDC113                        */
*        4 PSADSSNM BIT(1),         /* NON-MONITORABLE CODE INDICATOR
*                                      MDC114                        */
*        4 PSADSSRW BIT(1),         /* DSS OWNS CVTRSTWD MDC117      */
*        4 PSARV054 BIT(1),         /* RESERVED FOR DSS MDC100       */
*        4 PSARV055 BIT(1),         /* RESERVED FOR DSS MDC100       */
*        4 PSARV056 BIT(1),         /* RESERVED FOR DSS MDC100       */
*        4 PSARV057 BIT(1),         /* RESERVED FOR DSS MDC100       */
*       3 PSADSSF4 BIT(8),          /* DSS RECURSION FLAGS MDC101    */
*        4 PSADSSRC BIT(1),         /* PROGRAM-SVC RECURSION FLAG
*                                      MDC057                        */
*        4 PSADSS12 BIT(1),         /* PROGRAM INTERRUPT 12 RECURSION
*                                      FLAG MDC058                   */
*        4 PSADSSIE BIT(1),         /* I/O-EXTERNAL RECURSION FLAG
*                                      MDC059                        */
*        4 PSADSSC0 BIT(1),         /* CONTROL REGISTER 0 INVALID
*                                      FLAG MDC092                   */
*        4 PSADSSDE BIT(1),         /* DAT ERROR WHILE DSS RUNNING IN
*                                      VS2 VM MDC102                 */
*        4 PSADSSVE BIT(1),         /* DAT ERROR WHILE DSS RUNNING IN
*                                      DSS VM MDC103                 */
*        4 PSADSS10 BIT(1),         /* SEGMENT EXCEPTION RECURSION
*                                      FLAG MDC104                   */
*        4 PSADSS05 BIT(1),         /* ADDRESSING EXCEPTION RECURSION
*                                      FLAG MDC105                   */
*      2 PSADSSRP CHAR(8) BDY(DWORD),/* DSS TO VS2-2 RESUME PSW 03S0056
*                                      MDC025                        */
*      2 PSADSSPP CHAR(8) BDY(DWORD),/* DSS PSW FOR RETURNING CONTROL
*                                      FROM PRIVILEGED INSTRUCTION
*                                      STREAM TO VS2 MDC026          */
*      2 PSADSS14 FIXED(31),        /* RESTART SECOND LEVEL INTERRUPT
*                                      HANDLER CONTROL REGISTER 14
*                                      SAVE AREA MDC115              */
*      2 PSADSSFW FIXED(31),        /* FULL-WORD DSS WORK AREA MDC116*/
*      2 PSADSSPR FIXED(31),        /* DSS REGISTER SAVE FOR    03S0056
*                                      PRIVILEGED INSTRUCTION STREAM
*                                      MDC028                        */
*      2 PSADSSED CHAR(0) BDY(WORD),/* END OF DSS FIELDS MDC045      */
*      2 PSARV025 FIXED(31),        /* RESERVED FOR DSS              */
*      2 PSARV040 PTR(31),          /* RESERVED FOR DSS              */
*      2 PSARV041 PTR(31),          /* RESERVED FOR DSS              */
*      2 PSARV042 PTR(31),          /* RESERVED FOR DSS              */
*      2 PSARV043 PTR(31),          /* RESERVED FOR DSS              */
*      2 PSARV044 PTR(31),          /* RESERVED FOR DSS              */
*      2 PSARV045 PTR(31),          /* RESERVED FOR DSS              */
*      2 PSARSVT(16) PTR(31),       /* RECOVERY STACK VECTOR TABLE
*                                      (EACH ELEMENT MAPPED BELOW)
*                                      MDC064                        */
*      2 PSASRPSW CHAR(8) BDY(DWORD),/* RESUME PSW FOR STOP AND 03S0056
*                                      RESTART SUBROUTINE MDC096     */
*      2 PSARSPSW CHAR(8) BDY(DWORD),/* RESUME PSW FIELD FOR RESTART
*                                      INTERRUPT HANDLER MDC097      */
*      2 PSASTART CHAR(16) BDY(DWORD),/* START FATHOM RECORDING 03S0056
*                                      MDC111                        */
*      2 PSASTOP CHAR(16) BDY(DWORD),/* STOP FATHOM RECORDING MDC112 */
*      2 PSASFACC CHAR(4) BDY(WORD),/* SETFRR ABEND COMPLETION CODE
*                                      USED WHEN A SETFRR ADD IS
*                                      ISSUED AGAINST A FULL FRR
*                                      STACK MDC123                  */
*      2 PSALSFCC CHAR(4) BDY(WORD),/* A LOAD INSTRUCTION TO PRIME
*                                      REGISTER 1 WITH THE SETFRR
*                                      ABEND COMPLETION CODE IN 03S0056
*                                      PSASFACC MDC124               */
*      2 PSASVC13 CHAR(2),          /* AN SVC 13 INSTRUCTION MDC125  */
*      2 PSARV059 FIXED(15),        /* RESERVED                      */
*      2 PSARV060 FIXED(31),        /* RESERVED                      */
*      2 PSAPCPSW CHAR(8) BDY(DWORD),/* TEMPORARY OLD PSW STORAGE FOR
*                                      PROGRAM FLIH (MDC129)   YM0943*/
*      2 PSAUSEND CHAR(0) BDY(DWORD),/* END OF ASSIGNED FIELDS MDC109*/
*      2 * CHAR(2040) BDY(DWORD),   /* RESERVED                      */
*      2 PSASTAK CHAR(340) BDY(DWORD),/* NORMAL FRR STACK MDC118     */
*      2 * CHAR(684);               /* RESERVED FOR EXPANSION OF
*                                      PSASTAK MDC118                */
*   DECLARE                                                     03S0057
*     FLC DEF(PSA) CHAR(LENGTH(PSA)) BDY(DWORD);                03S0057
*   DECLARE                                                     03S0058
*     1 PSARSVTE CHAR(64) DEF(PSARSVT) BDY(WORD),/* RECOVERY STACK
*                                      VECTOR TABLE MDC065           */
*      2 PSACSTK PTR(31),           /* ADDRESS OF CURRENTLY USED
*                                      FUNCTIONAL RECOVERY ROUTINE
*                                      (FRR) STACK MDC061            */
*      2 PSANSTK PTR(31),           /* ADDRESS OF NORMAL FRR STACK
*                                      MDC062                        */
*      2 PSASSTK PTR(31),           /* ADDRESS OF SVC-I/O- DISPATCHER
*                                      FRR STACK MDC063              */
*      2 PSASSAV PTR(31),           /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY SVC-I/O- DISPATCHER
*                                      MDC066                        */
*      2 PSAMSTK PTR(31),           /* ADDRESS OF MCH FRR STACK 03S0058
*                                      MDC067                        */
*      2 PSAMSAV PTR(31),           /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY MCH MDC068           */
*      2 PSAPSTK PTR(31),           /* ADDRESS OF PROGRAM CHECK FLIH
*                                      FRR STACK MDC069              */
*      2 PSAPSAV PTR(31),           /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY PROGRAM CHECK FLIH
*                                      MDC070                        */
*      2 PSAESTK1 PTR(31),          /* ADDRESS OF EXTERNAL FLIH FRR
*                                      STACK FOR NON- RECURSIVE 03S0058
*                                      ENTRIES MDC071                */
*      2 PSAESAV1 PTR(31),          /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY NON- RECURSIVE  03S0058
*                                      ENTRIES MDC072                */
*      2 PSAESTK2 PTR(31),          /* ADDRESS OF EXTERNAL FLIH FRR
*                                      STACK FOR FIRST LEVEL    03S0058
*                                      RECURSIONS MDC073             */
*      2 PSAESAV2 PTR(31),          /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY EXTERNAL FLIH FOR
*                                      FIRST LEVEL RECURSIONS MDC074 */
*      2 PSAESTK3 PTR(31),          /* ADDRESS OF EXTERNAL FLIH FRR
*                                      STACK FOR SECOND LEVEL   03S0058
*                                      RECURSIONS AND ACR MDC075     */
*      2 PSAESAV3 PTR(31),          /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY EXTERNAL FLIH (ACR)
*                                      FOR SECOND LEVEL RECURSIONS
*                                      MDC076                        */
*      2 PSARSTK PTR(31),           /* ADDRESS OF RESTART FLIH FRR
*                                      STACK MDC077                  */
*      2 PSARSAV PTR(31);           /* ADDRESS OF INTERRUPTED STACK
*                                      SAVED BY RESTART FLIH MDC078
*                                                                    */
*                                                               01S0059
*   /*****************************************************************/
*   /*                                                               */
*   /* EXECUTABLE CODE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0059
*                                                               02S0059
*   /*****************************************************************/
*   /*                                                               */
*   /* STAGE2 - THIS SEGMENT IS THE MAINLINE EXECUTABLE CODE. SEE THE*/
*   /* MODULE PROLOG FOR DESCRIPTION OF INPUTS. PERFORM              */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0059
*                                                               03S0059
*/********************************************************************
*                                                                    */
*/********************************************************************
*                                                                    */
*/*  INIT2-                                                          */
*/*  THIS SEGMENT SAVES STATUS AND ESTABLISHES AN FRR.               */
*/*      INPUT:                                                      */
*/*        R0-R9,R11-R15  - AS PASSED FROM USER. THESE WILL          */
*/*                 BE SAVED.                                        */
*/********************************************************************
*                                                                    */
*                                                               03S0059
*   GEN CODE REFS(PSAAOLD,ASXBSPSA,ASCBASXB,WSALS2EE,RECADDR,R12,R13,
*       R10,ASXB,ASCB,WSAL,PSACSTK);                            03S0059
        L   R10,PSAAOLD                GET CURRENT ASCB ADDR
        L   R10,ASCBASXB-ASCB(R10)     GET CURRENT ASXB
        L   R10,ASXBSPSA-ASXB(R10)     GET ADDR OF WSA VECTOR TBL
        L   R10,WSALS2EE-WSAL(R10)     GET WORK AREA ADDR
        STM 0,15,0(R10)                SAVE REGISTERS
        LR   WAPTR,R10                 SAVE WORKAREA ADDR
        BALR  10,0                     ESTABLISH BASE
        USING *,10
IEAVEEE2  MODID  BR=YES
*   ASCBPTR=PSAAOLD;                /* GET CURRENT ASCB ADDR         */
         L     ASCBPTR,PSAAOLD                                  03S0060
*   ASXBPTR=ASCBASXB;               /* GET CURRENT ASXB ADDR         */
         L     ASXBPTR,ASCBASXB(,ASCBPTR)                       03S0061
*/********************************************************************
*                                                                    */
*/*  END OF INIT2 -                                                  */
*/*      OUTPUT:                                                     */
*/*        R10 - CONTAINS BASE ADDRESS                               */
*/*        WAPTR (R3) - CONTAINS ADDR OF WORK SAVE AREA.             */
*/*        ASCBPTR (R8) - CONTAINS ADDR OF CURRENT ASCB.             */
*/*        ASXBPTR (R7) - CONTAINS ADDR OF CURRENT ASXB.             */
*/*        THE SAVE AREA POINTED TO BY WAPTR CONTAINS THE            */
*/*             CALLERS REGISTERS.                                   */
*/********************************************************************
*                                                                    */
*                                                               03S0062
*   IF R1=0                         /* IF SRBS ARE PASSED            */
*     THEN                                                      02S0062
         SLR   @12,@12                                          02S0062
         CR    R1,@12                                           02S0062
         BNE   @RF00062                                         02S0062
*     DO;                                                       02S0063
*                                                               02S0063
*       /*************************************************************/
*       /*                                                           */
*       /* QUEUE THE SRB TO THE ASYNCHRONOUS EXIT QUEUE              */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0064
*                                                               03S0064
*/********************************************************************
*                                                                    */
*/*  QSRB -                                                          */
*/*  THIS SEGMENT QUEUES THE SRB TO THE ASYNCHRONOUS EXIT QUEUE      */
*/*      INPUT:                                                      */
*/*        R0 - CONTAINS ADDR OF SRB TO BE ENQUEUED.                 */
*/*        ASXBPTR (R7) -CONTAINS ADDR OF CURRENT ASXB.              */
*/********************************************************************
*                                                                    */
*                                                               03S0064
*       SRBPTR=R0;                  /* GET ADDRESS OF SRB            */
         LR    SRBPTR,R0                                        03S0064
*       IF ASXBLSRB=0               /* IF Q IS EMPTY                 */
*         THEN                                                  03S0065
         C     @12,ASXBLSRB(,ASXBPTR)                           03S0065
         BNE   @RF00065                                         03S0065
*         DO;                                                   03S0066
*           ASXBFSRB=SRBPTR;        /* POINT TO FIRST                */
         ST    SRBPTR,ASXBFSRB(,ASXBPTR)                        03S0067
*           ASXBLSRB=SRBPTR;        /* AND LAST                      */
         ST    SRBPTR,ASXBLSRB(,ASXBPTR)                        03S0068
*         END;                                                  03S0069
*       ELSE                                                    03S0070
*         DO;                                                   03S0070
         B     @RC00065                                         03S0070
@RF00065 DS    0H                                               03S0071
*           ASXBLSRB->SRBFLNK=SRBPTR;/* CHAIN OFF LAST SRB           */
         L     @12,ASXBLSRB(,ASXBPTR)                           03S0071
         ST    SRBPTR,SRBFLNK(,@12)                             03S0071
*           ASXBLSRB=SRBPTR;        /* POINT TO LAST                 */
         ST    SRBPTR,ASXBLSRB(,ASXBPTR)                        03S0072
*         END;                                                  03S0073
*       SRBFLNK=0;                  /* ZERO CHAIN FIELD              */
@RC00065 SLR   @12,@12                                          03S0074
         ST    @12,SRBFLNK(,SRBPTR)                             03S0074
*/********************************************************************
*                                                                    */
*/*  END OF QSRB -                                                   */
*/*      OUTPUT:                                                     */
*/*        SRBPTR (R1) -CONTAINS ADDR OF SRB.                        */
*/********************************************************************
*                                                                    */
*                                                               03S0075
*     END;                                                      02S0075
*   ELSE                                                        02S0076
*     IF R1A<0                      /* IF AN IQE IS PASSED           */
*       THEN                                                    02S0076
         B     @RC00062                                         02S0076
@RF00062 SLR   @12,@12                                          02S0076
         CR    R1A,@12                                          02S0076
         BNL   @RF00076                                         02S0076
*       DO;                                                     02S0077
*                                                               02S0077
*         /***********************************************************/
*         /*                                                         */
*         /* QUEUE THE IQE TO THE ASYNCHRONOUS EXIT QUEUE            */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0078
*                                                               03S0078
*/********************************************************************
*                                                                    */
*/*  QIQE -                                                          */
*/* THIS SEGMENT QUEUES THE IQE TO THE ASYNCHRONOUS EXIT QUEUE       */
*/*      INPUT:                                                      */
*/*        IQEPTR (R1) - CONTAINS THE COMPLEMENTED ADDR OF THE       */
*/*                   IQE TO BE ENQUEUED.                            */
*/*        ASXBPTR (R7) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/********************************************************************
*                                                                    */
*                                                               03S0078
*         IQEPTR=-IQEPTR;           /* GET TRUE ADDRESS OF IQE       */
         LCR   IQEPTR,IQEPTR                                    03S0078
*         IF ASXBLIQE=0             /* IF THE QUEUE IS EMPTY         */
*           THEN                                                03S0079
         C     @12,ASXBLIQE(,ASXBPTR)                           03S0079
         BNE   @RF00079                                         03S0079
*           DO;                                                 03S0080
*             ASXBFIQE=IQEPTR;      /* SET PTR TO FIRST IQE          */
         ST    IQEPTR,ASXBFIQE(,ASXBPTR)                        03S0081
*             ASXBLIQE=IQEPTR;      /* SET PTR TO LAST IQE           */
         ST    IQEPTR,ASXBLIQE(,ASXBPTR)                        03S0082
*           END;                                                03S0083
*         ELSE                                                  03S0084
*           DO;                                                 03S0084
         B     @RC00079                                         03S0084
@RF00079 DS    0H                                               03S0085
*             ASXBLIQE->IQELNKA=IQEPTR;/* SET PTR IN LAST IQE        */
         L     @12,ASXBLIQE(,ASXBPTR)                           03S0085
         STCM  IQEPTR,7,IQELNKA(@12)                            03S0085
*             ASXBLIQE=IQEPTR;      /* SET PTR TO LAST               */
         ST    IQEPTR,ASXBLIQE(,ASXBPTR)                        03S0086
*           END;                                                03S0087
*         IQELNKA=0;                /* CLEAR FORWARD CHAIN IN LAST   */
@RC00079 SLR   @12,@12                                          03S0088
         STCM  @12,7,IQELNKA(IQEPTR)                            03S0088
*/********************************************************************
*                                                                    */
*/*  END OF QIQE -                                                   */
*/*      OUTPUT:                                                     */
*/*        IQEPTR (R1) - CONTAINS TRUE ADDR OF THE IQE.              */
*/********************************************************************
*                                                                    */
*                                                               03S0089
*       END;                                                    02S0089
*     ELSE                                                      02S0090
*       DO;                                                     02S0090
*                                                               02S0090
         B     @RC00076                                         02S0090
@RF00076 DS    0H                                               02S0091
*         /***********************************************************/
*         /*                                                         */
*         /* QUEUE THE RQE TO THE ASYNCHRONOUS EXIT QUEUE            */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0091
*                                                               03S0091
*/********************************************************************
*                                                                    */
*/*  QRQE -                                                          */
*/* THIS SEGMENT QUEUES THE RQE TO THE ASYNCHRONOUS EXIT QUEUE       */
*/*      INPUT:                                                      */
*/*        RQEPTR    (R1) -CONTAINS ADDR OF RQE TO BE ENQUEUED.      */
*/*        ASXBPTR (R7) - CONTAINS ADDR OF CURRENT ASXB.             */
*/********************************************************************
*                                                                    */
*                                                               03S0091
*         IF ASXBLRQE=0             /* IF THERE ARE NO RQES ON Q     */
*           THEN                                                03S0091
         ICM   @12,15,ASXBLRQE(ASXBPTR)                         03S0091
         BNZ   @RF00091                                         03S0091
*           DO;                                                 03S0092
*             ASXBFRQE=RQEPTR;      /* POINT TO FIRST                */
         ST    RQEPTR,ASXBFRQE(,ASXBPTR)                        03S0093
*             ASXBLRQE=RQEPTR;      /* POINT TO LAST                 */
         ST    RQEPTR,ASXBLRQE(,ASXBPTR)                        03S0094
*           END;                                                03S0095
*         ELSE                                                  03S0096
*           DO;                                                 03S0096
         B     @RC00091                                         03S0096
@RF00091 DS    0H                                               03S0097
*             ASXBLRQE->RQENRQE=RQEPTR;/* CHAIN OFF LAST RQE         */
         L     @12,ASXBLRQE(,ASXBPTR)                           03S0097
         ST    RQEPTR,RQENRQE(,@12)                             03S0097
*             ASXBLRQE=RQEPTR;      /* POINT TO LAST                 */
         ST    RQEPTR,ASXBLRQE(,ASXBPTR)                        03S0098
*           END;                                                03S0099
*         RQENRQE=0;                /* ZERO CHAIN FIELD              */
@RC00091 SLR   @12,@12                                          03S0100
         ST    @12,RQENRQE(,RQEPTR)                             03S0100
*         RQETCB=DEBTCBB;           /* COPY TCB ADDR INTO A FIXED
*                                      AREA                  @YM05064*/
         L     @12,DEBPTR(,RQEPTR)                              03S0101
         SLR   @11,@11                                          03S0101
         ICM   @11,7,DEBTCBB(@12)                               03S0101
         ST    @11,RQETCB(,RQEPTR)                              03S0101
*         RQERRQ=DEBIRBB;           /* COPY IRB ADDR INTO A FIXED
*                                      AREA                  @YM05064*/
         SLR   @11,@11                                          03S0102
         ICM   @11,7,DEBIRBB(@12)                               03S0102
         ST    @11,RQERRQ(,RQEPTR)                              03S0102
*/********************************************************************
*                                                                    */
*/*  END OF QRQE -                                                   */
*/*      OUTPUT:  NONE.                                              */
*/********************************************************************
*                                                                    */
*                                                               03S0103
*       END;                                                    02S0103
*   ASCBS3S=ON;                     /* TURN ON THE STAGE 3 SWITCH    */
@RC00076 DS    0H                                               02S0104
@RC00062 OI    ASCBS3S(ASCBPTR),B'00100000'                     02S0104
*   ASCBS2S=ON;                     /* TURN ON THE STAGE 2 SWITCH    */
*                                                               02S0105
         OI    ASCBS2S(ASCBPTR),B'00010000'                     02S0105
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE REGISTERS                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0106
*                                                               03S0106
*/********************************************************************
*                                                                    */
*/*   RESREG  -                                                      */
*/*   THIS SEGMENT RESTORES THE CALLERS REGISTERS,                   */
*/*    AND RETURNS TO THE CALLER VIA A BR14.                         */
*/*      INPUT:                                                      */
*/*        R1   -CONTAINS TRUE ADDR OF IQE ,RQE,OR SRB               */
*/*        WAPTR (R3) -CONTAINS ADDR OF WORK SAVE AREA.              */
*/*              THIS WORK SAVE AREA CONTAINS THE CALLERS            */
*/*               REGISTERS.                                         */
*/********************************************************************
*                                                                    */
*                                                               03S0106
*   GEN CODE REFS(PSACSTK,R11,R12);                             03S0106
*                                                               03S0106
        L     0,0(WAPTR)           RESTORE REGISTER 0
        LM    2,15,8(WAPTR)        RESTORE REGISTERS 2-15
        BR     14
*/********************************************************************
*                                                                    */
*/*  END OF RESREG -                                                 */
*/*      OUTPUT:                                                     */
*/*        R1 - CONTAINS TRUE ADDR OF IQE,RQE,OR SRB                 */
*/*        R0,R2-R9,R11-R15 - ARE RESTORED TO THE CONTENTS AT THE    */
*/*        CALL TO STAGE 2 EXIT EFFECTOR.                            */
*/*        THIS SEGMENT RETURNS TO THE CALLER OF STAGE 2 EXIT        */
*/*         EFFECTOR.                                                */
*/********************************************************************
*                                                                    */
*                                                               03S0107
*                                                               02S0107
*/********************************************************************
*                                                                    */
*                                                               02S0107
*   END IEA0EF00                                                01S0107
*                                                               01S0107
*/********************************************************************
*                                                                    */
*                                                               01S0107
*                                                               01S0107
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSLIB  (IHAIQE  )                                       */
*/*%INCLUDE SYSLIB  (IECDRQE )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSUT5  (STAGE2  )                                       */
*/*%INCLUDE SYSUT5  (INIT2   )                                       */
*/*%INCLUDE SYSUT5  (QSRB    )                                       */
*/*%INCLUDE SYSUT5  (QIQE    )                                       */
*/*%INCLUDE SYSUT5  (QRQE    )                                       */
*/*%INCLUDE SYSUT5  (RESREG  )                                       */
*                                                               01S0107
*       ;                                                       01S0107
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IEA0EF00 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
LCCAPTR  DS    A
RECADDR  DS    F
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEA0EF00 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
NULL     DC    X'00'
         DC    XL23'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RQEPTR   EQU   @01
R1       EQU   @01
R1A      EQU   @01
IQEPTR   EQU   @01
SRBPTR   EQU   @01
R0       EQU   @00
WAPTR    EQU   @03
ASXBPTR  EQU   @07
ASCBPTR  EQU   @08
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
DEBDAPTR EQU   @15
DEBEXPTR EQU   @15
DEBSBPTR EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IQESECT  EQU   0
IQELNK   EQU   IQESECT
IQELNKA  EQU   IQELNK+1
IQEIRB   EQU   IQESECT+8
IQEFLAGS EQU   IQEIRB
IQETCB   EQU   IQESECT+12
RQE      EQU   0
RQEDEB   EQU   RQE+8
RQETCB   EQU   RQE+12
RQENRQE  EQU   RQE+20
RQERRQ   EQU   RQE+24
RQEPRT   EQU   RQE+36
RQETYPE  EQU   RQE+37
RQETYP3  EQU   RQETYPE
RQEFLAG  EQU   RQE+38
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBTCBB  EQU   DEBTCBAD+1
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBIRBB  EQU   DEBIRBAD+1
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLNK  EQU   SRB+4
SRBFLC   EQU   SRB+12
ASCB     EQU   0
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBS3S  EQU   ASCBFLG1
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBS2S  EQU   ASCBFLG2
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBFIQE EQU   ASXBAEQ
ASXBLIQE EQU   ASXBAEQ+4
ASXBFRQE EQU   ASXBAEQ+8
ASXBLRQE EQU   ASXBAEQ+12
ASXBFSRB EQU   ASXBAEQ+16
ASXBLSRB EQU   ASXBAEQ+20
WSAL     EQU   0
WSALS2EE EQU   WSAL+24
WSAG     EQU   0
WSAC     EQU   0
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTRSV90 EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IQEEND   EQU   0
CVTPTR   EQU   FLCCVT
DEBPTR   EQU   RQEDEB
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTWSAG  EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTSYSWT EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00018 EQU   CVTFIX+248
@NM00017 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTRSVA1 EQU   CVTXTNT2+48
CVTRSVA0 EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTRSV90
CVTRSV9G EQU   CVTRSV90
CVTRSV9F EQU   CVTRSV90
CVTRSV9E EQU   CVTRSV90
CVTRSV9D EQU   CVTRSV90
CVTRSV9C EQU   CVTRSV90
CVTRSV9B EQU   CVTRSV90
CVTRSV9A EQU   CVTRSV90
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTRV484 EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTINTLA EQU   CVTMAP+320
CVTERPV  EQU   CVTMAP+316
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTRV319 EQU   CVTUSR
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTIERLC EQU   CVTMAP+144
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCAR123 EQU   LCCA+956
LCCAR122 EQU   LCCA+952
LCCAR121 EQU   LCCA+948
LCCAR120 EQU   LCCA+944
LCCAR119 EQU   LCCA+940
LCCAR118 EQU   LCCA+936
LCCAR117 EQU   LCCA+932
LCCAR116 EQU   LCCA+928
LCCAR115 EQU   LCCA+924
LCCAR114 EQU   LCCA+920
LCCAR113 EQU   LCCA+916
LCCAR112 EQU   LCCA+912
LCCAR111 EQU   LCCA+908
LCCAR110 EQU   LCCA+904
LCCAR109 EQU   LCCA+900
LCCAR108 EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCARV90 EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCARSFP EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALRV01 EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBRV23 EQU   ASXB+220
ASXBRV22 EQU   ASXB+216
ASXBRV21 EQU   ASXB+212
ASXBRV20 EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV18 EQU   ASXB+200
ASXBRV17 EQU   ASXB+196
ASXBRV16 EQU   ASXB+192
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00016 EQU   SRB+40
@NM00015 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBID    EQU   SRB
DEBXRV40 EQU   DEBXTN+28
DEBXRV39 EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXRV42 EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBRSV23 EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBRSV19 EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00014 EQU   DEBACS08+12
@NM00013 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00012 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00011 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSV01 EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBNMSUB EQU   DEBTCBAD
RQEEND   EQU   RQE+40
@NM00010 EQU   RQE+39
RQECHEAC EQU   RQEFLAG
RQEPURGE EQU   RQEFLAG
RQESRBS  EQU   RQEFLAG
RQESTBL  EQU   RQEFLAG
RQEFIXST EQU   RQEFLAG
RQENOFRE EQU   RQEFLAG
RQENOPST EQU   RQEFLAG
RQERETRY EQU   RQEFLAG
RQETYP1  EQU   RQETYP3
RQETYP2  EQU   RQETYP3
@NM00009 EQU   RQETYPE
RQEVAM   EQU   RQETYPE
RQE1TO1  EQU   RQETYPE
RQEVIRT  EQU   RQETYPE
RQE114   EQU   RQETYPE
@NM00008 EQU   RQEPRT
RQEPKEY  EQU   RQEPRT
RQEIPIB  EQU   RQE+32
RQESRB   EQU   RQE+28
RQETCCW  EQU   RQE+16
RQEIOB   EQU   RQE+4
RQEUCB   EQU   RQE
IQEOUTLM EQU   IQESECT+20
IQEDCB   EQU   IQESECT+16
IQETCBA  EQU   IQETCB+1
IQESTAT2 EQU   IQETCB
IQEIRBA  EQU   IQEIRB+1
@NM00007 EQU   IQEFLAGS
@NM00006 EQU   IQEFLAGS
@NM00005 EQU   IQEFLAGS
@NM00004 EQU   IQEFLAGS
@NM00003 EQU   IQEFLAGS
@NM00002 EQU   IQEFLAGS
@NM00001 EQU   IQEFLAGS
IQEPURGE EQU   IQEFLAGS
IQEPARAM EQU   IQESECT+4
IQESTAT1 EQU   IQELNK
@NM00042 EQU   PSA+3412
PSASTAK  EQU   PSA+3072
@NM00041 EQU   PSA+1032
PSAUSEND EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSARV060 EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSARV054 EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00040 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00039 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSARV009 EQU   PSASUP3
PSARV008 EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00038 EQU   FLCFSA
@NM00037 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00036 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00035 EQU   FLCIOA
@NM00034 EQU   FLCMCLA+15
@NM00033 EQU   FLCMCLA+14
@NM00032 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00031 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00030 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00029 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00028 EQU   FLCPER
@NM00027 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00026 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00025 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00024 EQU   FLCPIILC
@NM00023 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00022 EQU   FLCSVILC
@NM00021 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00020 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00019 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEA0EF00
