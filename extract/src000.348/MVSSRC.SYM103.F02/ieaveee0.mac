         TITLE '    IEAVEEE0 - STAGE 3 EXIT EFFECTOR                   *
                        '
IEA0EF03 CSECT ,                                                01S0001
@PROLOG  BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*/*                    END OF CVT MACRO                              */
*                                                               03S0075
*                                                               01S0075
*/*   MAINLINE CODE FOR STAGE 3 EXIT EFFECTOR                        */
*                                                               01S0075
*                                                               02S0075
*/********************************************************************/
*/*  STAGE3-                                                         */
*/*      THIS IS THE MAINLINE CODE FOR THE STAGE 3 EXIT EFFECTOR     */
*/*      INPUT:                                                      */
*/*        SEE PROLOGUE                                              */
*/********************************************************************/
*/********************************************************************/
*/*  INITIALIZATION                                                  */
*/********************************************************************/
*                                                               02S0075
*                                                               03S0075
*/********************************************************************/
*/*  INIT3 -                                                         */
*/*     THIS ROUTINE PERFORMS SPECIAL INITIALIZATION .               */
*/*      INPUT:                                                      */
*/*        ASCBPTR  (R8) - CONTAINS ADDR OF THE CURRENT ASCB.        */
*/*        R14 - RETURN ADDR TO THE DISPATCHER.                      */
*/********************************************************************/
*                                                               03S0075
*   ASXBPTR=ASCBASXB;               /* POINT TO ASXB                 */
         L     ASXBPTR,ASCBASXB(,ASCBPTR)                       03S0075
*   SAVE1=R14;                      /* SAVE RETURN ADDRESS           */
         L     @15,ASXBSPSA(,ASXBPTR)                           03S0076
         L     @15,WSALS2EE(,@15)                               03S0076
         STCM  R14,15,SAVE1(@15)                                03S0076
*/********************************************************************/
*/*  END OF INIT3 -                                                  */
*/*      OUTPUT:                                                     */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/*        SAVE1  - CONTAINS SAVED RETURN ADDR TO THE DISPATCHER.    */
*/********************************************************************/
*                                                               03S0077
*                                                               02S0077
*/********************************************************************/
*/*    IQE PROCESSING                                                */
*/********************************************************************/
*                                                               02S0077
*                                                               03S0077
*/********************************************************************/
*/*  IQEPROC-                                                        */
*/*     THIS SEGMENT PROCESSES IQES.                                 */
*/*      IT SCANS THE ASYNCHRONOUS EXIT QUEUES, LOOKING FOR          */
*/*      IQES THAT CAN BE DEQUEUED.  IT WILL THEN DEQUEUE THE        */
*/*      ELIGIBLE IQES, AND SCHEDULE THE CORRESPONDING ASYNCHRONOUS  */
*/*      EXIT.                                                       */
*/*      INPUT:                                                      */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF CURRENT ASXB.             */
*/*        ASCBPTR (R8) - CONTAINS ADDR OF CURRENT ASCB.             */
*/********************************************************************/
*                                                               03S0077
*   PREVIQE=0;                      /* SET POINTER TO PREVIOUS       */
         SLR   PREVIQE,PREVIQE                                  03S0077
*   IQEPTR=ASXBFIQE;                /* SET PTR TO FIRST IQE          */
         L     IQEPTR,ASXBFIQE(,ASXBPTR)                        03S0078
*   DO WHILE IQEPTR^=0;             /* DO WHILE THERE ARE ANY IQES ON
*                                      THE QUEUE                     */
         B     @DE00079                                         03S0079
@DL00079 DS    0H                                               03S0080
*     RESPECIFY                                                 03S0080
*       DQ RSTD;                    /* RESTRICT THE REGISTER         */
*                                                               03S0080
*     /***************************************************************/
*     /*                                                             */
*     /* TEST THE IQE                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0081
*                                                               04S0081
*/********************************************************************/
*/*  TESTIQE  -                                                      */
*/*    THIS SEGMENTS TESTS TO SEE IF THE IQE SHOULD BE DEQUEUED      */
*/*      IF IT CAN BE DEQUEUED, THE DQ SWITCH WILL BE SET TO 0.      */
*/*      OTHERWISE IT WILL BE SET TO 4   .                           */
*/*      INPUT:                                                      */
*/*        IQEPTR (R2) - CONTAINS ADDR OF THE IQE BEING TESTED.      */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/********************************************************************/
*                                                               04S0081
*     TCBPTR=IQETCBA;               /* GET THE TCB ADDRESS           */
         L     TCBPTR,IQETCBA-1(,IQEPTR)                        04S0081
         LA    TCBPTR,0(,TCBPTR)                                04S0081
*     RBSECPTR=IQEIRBA;             /* GET THE IRB ADDRESS           */
         L     RBSECPTR,IQEIRBA-1(,IQEPTR)                      04S0082
         LA    RBSECPTR,0(,RBSECPTR)                            04S0082
*     DQ=YES;                       /* INITIALIZE THE SWITCH         */
         SLR   DQ,DQ                                            04S0083
*     IF(TCBPTR=ASXBETSK&           /* IF THIS IS THE ERROR TASK     */
*         ASXBSIRB->RBFACTV=ON)     /* AND THE SIRB IS ACTIVE        */
*         ×TCBFX=ON                 /* OR ASYNCH EXITS ARE SUPPRESSED*/
*         ×RBFACTV=ON               /* OR THE RB IS ALREADY ACTIVE   */
*         ×(TCBACTIV=ON&TCBCCPVI^=PSACPULA)/* OR TCB ACTIVE ON  04S0084
*                                      ANOTHER CPU                   */
*         ×IQEPURGE=ON              /* OR THE IQE HAS BEEN PURGED    */
*       THEN                                                    04S0084
         C     TCBPTR,ASXBETSK(,ASXBPTR)                        04S0084
         BNE   @GL00004                                         04S0084
         L     @15,ASXBSIRB(,ASXBPTR)                           04S0084
         TM    RBFACTV(@15),B'01000000'                         04S0084
         BO    @RT00084                                         04S0084
@GL00004 TM    TCBFX(TCBPTR),B'00000001'                        04S0084
         BO    @RT00084                                         04S0084
         TM    RBFACTV(RBSECPTR),B'01000000'                    04S0084
         BO    @RT00084                                         04S0084
         TM    TCBACTIV(TCBPTR),B'10000000'                     04S0084
         BNO   @GL00001                                         04S0084
         CLC   TCBCCPVI(2,TCBPTR),PSACPULA                      04S0084
         BNE   @RT00084                                         04S0084
@GL00001 TM    IQEPURGE(IQEPTR),B'10000000'                     04S0084
         BNO   @RF00084                                         04S0084
@RT00084 DS    0H                                               04S0085
*       DQ=NO;                      /* THEN DONT DEQUEUE IT          */
         LA    DQ,4                                             04S0085
*     ELSE                                                      04S0086
*       IF RBATNXIT=ON              /* IF THIS IS AN ATTN IRB        */
*         THEN                                                  04S0086
         B     @RC00084                                         04S0086
@RF00084 TM    RBATNXIT(RBSECPTR),B'00000010'                   04S0086
         BNO   @RF00086                                         04S0086
*         IF TCBATT=ON              /* IF ATTN EXITS ARE SUPPR       */
*           THEN                                                04S0087
         TM    TCBATT(TCBPTR),B'00100000'                       04S0087
         BNO   @RF00087                                         04S0087
*           DQ=NO;                  /* DONT DEQUEUE IT               */
         LA    DQ,4                                             04S0088
*         ELSE                                                  04S0089
*                                                               04S0089
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK THE SUBTASKS FOR TCBATT OR TCBFX                */
*           /*                                                       */
*           /*********************************************************/
*                                                               04S0089
*                                                               05S0089
*/********************************************************************/
*/*  CHECKSUB -                                                      */
*/*      THIS ROUTINE SCANS THE SUBTASK TREE TO SEE IF EITHER        */
*/*      ALL ASYNCHRONOUS EXITS OR ATTENTION EXITS ARE SUPPRESSED    */
*/*      FOR ANY OF THE SUBTASKS.   IF THEY ARE SUPPRESSED,A DQ SWITCH
*                                                                    */
*/*      WILL BE SET TO 'NO'.  THIS IS ENTERED ONLY                  */
*/*      IF  THE ASYNCHRONOUS EXIT BEING SCHEDULED IS AN ATTENTION   */
*/*      EXIT.  THIS IS DONE TO AVOID SPECIFIC PROBLEMS IN THE       */
*/*      TSO ATTENTION PROCESSING.                                   */
*/*      INPUT:                                                      */
*/*        TCBPTR (R4) - CONTAINS ADDR OF TCB TO WHICH IRB IS BEING  */
*/*                 SCHEDULED.                                       */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF CURRENT ASXB              */
*/********************************************************************/
*                                                               05S0089
*           DO;                                                 05S0089
         B     @RC00087                                         05S0089
@RF00087 DS    0H                                               05S0090
*             RESPECIFY                                         05S0090
*              (R10,                                            05S0090
*               R11) RSTD;          /* RESTRICT THE REGS             */
*/* SAVE REGISTERS ACROSS TREE SCAN INTERFACE                        */
*                                                               05S0091
*             SAVE2=R7;                                         05S0091
         L     @15,ASXBSPSA(,ASXBPTR)                           05S0091
         L     @15,WSALS2EE(,@15)                               05S0091
         STCM  R7,15,SAVE2(@15)                                 05S0091
*             SAVE3=R8;                                         05S0092
         STCM  R8,15,SAVE3(@15)                                 05S0092
*             SAVE4=R9;                                         05S0093
         STCM  R9,15,SAVE4(@15)                                 05S0093
*             R10=TCBPTR;           /* SET TO START OF SEARCH        */
         LR    R10,TCBPTR                                       05S0094
*             R8=R10;               /* SET TO TOP TCB IN TREE        */
         LR    R8,R10                                           05S0095
*             R11=ADDR(NOTCB);      /* SET RET ADDR IF NOT FOUND     */
         LA    R11,NOTCB                                        05S0096
*CALLTR:                                                        05S0097
*             CALL IEATRSCN;        /* CALL THE TREE SCAN RTN        */
CALLTR   L     @15,@CV00060                                     05S0097
         BALR  @14,@15                                          05S0097
*             IF R10->TCBFC=ON THEN /* IF DESCENDENT TASK IS COMPLETE
*                                                            @ZA11369*/
         TM    TCBFC(R10),B'10000000'                           05S0098
         BO    @RT00098                                         05S0098
*               GO TO CALLTR;       /* THEN IGNORE IT        @ZA11369*/
*             IF R10->TCBFX=ON      /* IF ASYNCH EXITS ARE SUPPRESSED*/
*                 ×R10->TCBATT=ON   /* OR ATTN EXITS ARE SUPPRESSED  */
*               THEN                                            05S0100
         TM    TCBFX(R10),B'00000001'                           05S0100
         BO    @RT00100                                         05S0100
         TM    TCBATT(R10),B'00100000'                          05S0100
         BNO   @RF00100                                         05S0100
@RT00100 DS    0H                                               05S0101
*               DQ=NO;              /* DONT DEQUEUE IT               */
         LA    DQ,4                                             05S0101
*             ELSE                                              05S0102
*               GO TO CALLTR;       /* GET NEXT TCB                  */
*NOTCB:                                                         05S0103
*             ;                                                 05S0103
*                                                               05S0103
NOTCB    DS    0H                                               05S0104
*/*  RESTORE REGISTERS AFTER TREE SCAN INTERFACE                     */
*                                                               05S0104
*             R7=SAVE2;                                         05S0104
         L     @15,ASXBSPSA(,ASXBPTR)                           05S0104
         L     @15,WSALS2EE(,@15)                               05S0104
         ICM   R7,15,SAVE2(@15)                                 05S0104
*             R8=SAVE3;                                         05S0105
         ICM   R8,15,SAVE3(@15)                                 05S0105
*             R9=SAVE4;                                         05S0106
         ICM   R9,15,SAVE4(@15)                                 05S0106
*             RESPECIFY                                         05S0107
*              (R10,                                            05S0107
*               R11) UNRSTD;        /* FREE THE REGS                 */
*           END;                                                05S0108
*                                                               05S0108
*/********************************************************************/
*/*   END OF CHECKSUB -                                              */
*/*      OUTPUT -                                                    */
*/*        DQ (R13) - SET TO NO IF THE  IRB IS NOT TO BE ENQUEUED    */
*/*        R10,R11,R14,R15,SAVE2,SAVE3,SAVE4 - VOLATILE              */
*/********************************************************************/
*                                                               05S0109
*                                                               04S0109
*/********************************************************************/
*/*  END OF TESTIQE -                                                */
*/*      OUTPUT -                                                    */
*/*       R10,R11,R14,R15 - VOLATILE                                 */
*/*       DQ (R13) = 0 IF IQE SHOULD BE DEQUEUED                     */
*/*                = 4 IF IQE SHOULD NOT BE DEQUEUED                 */
*/*       TCBPTR (R4) = ADDRESS OF TCB                               */
*/*       RBSECPTR (R5) = ADDRESS OF THE IRB                         */
*/********************************************************************/
*                                                               04S0109
*     IF DQ=YES                     /* IF IT SHOULD BE DEQUEUED      */
*       THEN                                                    03S0109
@RC00087 DS    0H                                               03S0109
@RF00086 DS    0H                                               03S0109
@RC00084 LTR   DQ,DQ                                            03S0109
         BNZ   @RF00109                                         03S0109
*CSLOOP1:                                                       03S0110
*       IF TCBS3A=OFF THEN          /* CHECK FOR INTERSECT WITH 03S0110
*                                      SUSPEND/RESUME        @Z40FPYJ*/
CSLOOP1  TM    TCBS3A(TCBPTR),B'01000000'                       03S0110
         BNZ   @RF00110                                         03S0110
*         DO;                                                   03S0111
*           RFY                                                 03S0112
*            (WRKREG1,                                          03S0112
*             WRKREG2) RSTD;                                    03S0112
*           WRKREG1=TCBXSCT&S3AOFMSK;/* TURN OFF S3A IN REGISTER
*                                                            @Z40FPYJ*/
         L     @15,TCBXSCT(,TCBPTR)                             03S0113
         LR    WRKREG1,@15                                      03S0113
         N     WRKREG1,@CF00090                                 03S0113
*           WRKREG2=TCBXSCT×S3AONMSK;/* TURN ON S3A IN REGISTER 03S0114
*                                                            @Z40FPYJ*/
         O     @15,@CF00088                                     03S0114
         LR    WRKREG2,@15                                      03S0114
*           GENERATE;                                           03S0115
*                                      /*                   @Z40FPYJ*/
          CS    WRKREG1,WRKREG2,TCBXSCT(TCBPTR) TURN ON S3A   @Z40FPYJ
          BNE   CSLOOP1                   LOOP ON FAILURE     @Z40FPYJ
*           RESPECIFY                                           03S0116
*             DQ UNRSTD;            /* FREE THE REGISTER             */
*           RESPECIFY                                           03S0117
*            (WRKREG1,                                          03S0117
*             WRKREG2) UNRSTD;      /* FREE THE REGISTERS            */
*                                                               03S0117
*           /*********************************************************/
*           /*                                                       */
*           /* DEQUEUE THE IQE                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0118
*                                                               04S0118
*/********************************************************************/
*/*   DQIQE -                                                        */
*/*      THIS SEGMENT DEQUEUES THE IQE FROM THE ASYNCHRONOUS EXIT  Q.*/
*/*      INPUT:                                                      */
*/*        IQEPTR  (R2) - POINTS TO THE IQE TO BE DEQUEUED           */
*/*        PREVIQE (R3) - CONTAINS ADDR OF THE IQE  PRECEDING THE ONE*/
*/*                TO BE DEQUEUED.  IF THERE IS NO PREVIOUS , THEN IT*/
*/*                CONTAINS ZERORES.                                 */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/********************************************************************/
*                                                               04S0118
*           IF PREVIQE=0            /* IF THIS IS THE TOP IQE        */
*             THEN                                              04S0118
         LTR   PREVIQE,PREVIQE                                  04S0118
         BNZ   @RF00118                                         04S0118
*             ASXBFIQE=IQEPTR->IQELNKA;/* UPDATE PTR TO FIRST        */
         L     @15,IQELNKA-1(,IQEPTR)                           04S0119
         LA    @15,0(,@15)                                      04S0119
         ST    @15,ASXBFIQE(,ASXBPTR)                           04S0119
*           ELSE                                                04S0120
*             PREVIQE->IQELNKA=IQEPTR->IQELNKA;/* UPDATE CHAIN IN
*                                      PREVIOUS IQE                  */
         B     @RC00118                                         04S0120
@RF00118 MVC   IQELNKA(3,PREVIQE),IQELNKA(IQEPTR)               04S0120
*           IF ASXBLIQE=IQEPTR      /* IF THIS WAS LAST IQE          */
*             THEN                                              04S0121
@RC00118 C     IQEPTR,ASXBLIQE(,ASXBPTR)                        04S0121
         BNE   @RF00121                                         04S0121
*             ASXBLIQE=PREVIQE;     /* UPDATE PTR TO LAST IQE        */
         ST    PREVIQE,ASXBLIQE(,ASXBPTR)                       04S0122
*/********************************************************************/
*/*  END OF DQIQE -                                                  */
*/********************************************************************/
*                                                               04S0123
*           BLOCK=-IQEPTR;          /* INDICATE AN IQE TO SUBRTN     */
*                                                               03S0123
@RF00121 LCR   @15,IQEPTR                                       03S0123
         LR    BLOCK,@15                                        03S0123
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE THE IRB AND THE TCB                        */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0124
*           CALL IRBTCBIN;          /* INIT THE IRB AND TCB          */
         BAL   @14,IRBTCBIN                                     03S0124
*           TCBS3A=OFF;             /* TURN OFF RESUME/TCTL INTERSECT
*                                      FLAG                  @Z40FPYJ*/
         NI    TCBS3A(TCBPTR),B'10111111'                       03S0125
*         END;                                                  03S0126
*       ELSE                        /* TCBS3A IS ON          @ZA32738*/
*         PREVIQE=IQEPTR;           /* SAVE CURRENT IN PREV  @ZA32738*/
         B     @RC00110                                         03S0127
@RF00110 LR    PREVIQE,IQEPTR                                   03S0127
*     ELSE                                                      03S0128
*       PREVIQE=IQEPTR;             /* UPDATE PREVIOUS PTR           */
         B     @RC00109                                         03S0128
@RF00109 LR    PREVIQE,IQEPTR                                   03S0128
*     IQEPTR=IQEPTR->IQELNKA;       /* UPDATE TO NEXT IQE            */
@RC00109 L     @15,IQELNKA-1(,IQEPTR)                           03S0129
         LA    @15,0(,@15)                                      03S0129
         LR    IQEPTR,@15                                       03S0129
*   END;                                                        03S0130
*                                                               03S0130
@DE00079 LTR   IQEPTR,IQEPTR                                    03S0130
         BNZ   @DL00079                                         03S0130
*/********************************************************************/
*/*  END OF  IQEPROC -                                               */
*/*        OUTPUT:                                                   */
*/*        PREVIQE (R3) - VOLATILE                                   */
*/*        IQEPTR (R2) - VOLATILE                                    */
*/*        R4,R5,R10,R11,R13,R14,R15 - VOLATILE                      */
*/*        SAVE2,SAVE3,SAVE4 - VOLATILE                              */
*/********************************************************************/
*                                                               03S0131
*                                                               02S0131
*/********************************************************************/
*/*    RQE PROCESSING                                                */
*/********************************************************************/
*                                                               02S0131
*                                                               03S0131
*/********************************************************************/
*/*   RQEPROC  -                                                     */
*/*   THIS SEGMENT PROCESSES RQES ON THE QUEUES.  IT SCANS THE       */
*/*    ASYNCHRONOUS EXIT QUEUES LOOKING FOR RQES THAT CAN BE         */
*/*    DEQUEUED AT THIS TIME.  IT DEQUEUES THE ONES THAT CAN BE      */
*/*    AND SCHEDULES THE CORRESPONDING ASYNCHRONOUS EXITS.           */
*/*      INPUT:                                                      */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF CURRENT ASXB.             */
*/*        ASCBPTR (R8) - CONTAINS ADDR OF CURRENT ASCB.             */
*/********************************************************************/
*                                                               03S0131
*   PREVRQE=0;                      /* CLEAR PTR TO PREVIOUS         */
         SLR   PREVRQE,PREVRQE                                  03S0131
*   RQEPTR=ASXBFRQE;                /* POINT TO TOP RQE              */
         L     RQEPTR,ASXBFRQE(,ASXBPTR)                        03S0132
*   DO WHILE RQEPTR^=0;             /* WHILE THERE ARE ANY RQES      */
         B     @DE00133                                         03S0133
@DL00133 DS    0H                                               03S0134
*     RESPECIFY                                                 03S0134
*       DQ RSTD;                    /* RESTRICT REGISTER             */
*                                                               03S0134
*     /***************************************************************/
*     /*                                                             */
*     /* TEST THE RQE                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               03S0135
*                                                               04S0135
*/********************************************************************/
*/*  TESTRQE -                                                       */
*/*      THIS SEGMENT DETERMINES IF AN RQE CAN BE DEQUEUED FROM      */
*/*      THE ASYNCHRONOUS EXIT QUEUE.  IF IT CAN, DQ IS SET TO 0    .*/
*/*      OTHERWISE, DQ IS SET TO 4   .                               */
*/*      INPUT:                                                      */
*/*        RQEPTR   (R2) - CONTAINS ADDR OF THE RQE TO BE TESTED.    */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF CURRENT ASXB.             */
*/********************************************************************/
*                                                               04S0135
*     TCBPTR=RQETCB;                /* GET TCB ADDRESS       @YM01424*/
         L     TCBPTR,RQETCB(,RQEPTR)                           04S0135
*     RBSECPTR=RQERRQ;              /* GET IRB ADDRESS       @YM01424*/
         L     RBSECPTR,RQERRQ(,RQEPTR)                         04S0136
*     DQ=YES;                       /* TURN OFF THE SWITCH           */
         SLR   DQ,DQ                                            04S0137
*     IF(TCBPTR=ASXBETSK            /* IF THIS IS THE ERROR TASK     */
*         &ASXBSIRB->RBFACTV=ON)    /* AND THE SIRB IS ACTIVE        */
*         ×TCBFX=ON                 /* OR ASYNCH EXITS ARE SUPPRESSED*/
*         ×RBFACTV=ON               /* OR THE IRB IS ACTIVE          */
*         ×(TCBACTIV=ON             /* OR THE TASK IS ACTIVE         */
*         &TCBCCPVI^=PSACPULA)      /* ON ANOTHER CPU                */
*       THEN                                                    04S0138
         C     TCBPTR,ASXBETSK(,ASXBPTR)                        04S0138
         BNE   @GL00010                                         04S0138
         L     @15,ASXBSIRB(,ASXBPTR)                           04S0138
         TM    RBFACTV(@15),B'01000000'                         04S0138
         BO    @RT00138                                         04S0138
@GL00010 TM    TCBFX(TCBPTR),B'00000001'                        04S0138
         BO    @RT00138                                         04S0138
         TM    RBFACTV(RBSECPTR),B'01000000'                    04S0138
         BO    @RT00138                                         04S0138
         TM    TCBACTIV(TCBPTR),B'10000000'                     04S0138
         BNO   @RF00138                                         04S0138
         CLC   TCBCCPVI(2,TCBPTR),PSACPULA                      04S0138
         BE    @RF00138                                         04S0138
@RT00138 DS    0H                                               04S0139
*       DQ=NO;                      /* THEN DONT DEQUEUE             */
         LA    DQ,4                                             04S0139
*/********************************************************************/
*/*  END OF TESTRQE -                                                */
*/*      OUTPUT:                                                     */
*/*        DQ (R13) = 0  , IF RQE IS TO BE DEQUEUED.                 */
*/*                 =4  , IF IT IS NOT.                              */
*/*        TCBPTR (R4)  - CONTAINS ADDR OF TCB TO WHICH THE RQE      */
*/*                   IS BEING SCHEDULED.                            */
*/*        RBSECPTR (R5) - CONTAINS ADDR OF THE IRB WHICH IS BEING   */
*/*              SCHEDULED.                                          */
*/********************************************************************/
*                                                               04S0140
*                                   /* DEQUEUED                      */
*     IF DQ=YES                     /* IF SO                         */
*       THEN                                                    03S0140
@RF00138 LTR   DQ,DQ                                            03S0140
         BNZ   @RF00140                                         03S0140
*CSLOOP2:                                                       03S0141
*       IF TCBS3A=OFF THEN          /* CHECK FOR INTERSECT WITH 03S0141
*                                      SUSPEND/RESUME        @Z40FPYJ*/
CSLOOP2  TM    TCBS3A(TCBPTR),B'01000000'                       03S0141
         BNZ   @RF00141                                         03S0141
*         DO;                                                   03S0142
*           RFY                                                 03S0143
*            (WRKREG1,                                          03S0143
*             WRKREG2) RSTD;                                    03S0143
*           WRKREG1=TCBXSCT&S3AOFMSK;/* TURN OFF S3A IN REGISTER
*                                                            @Z40FPYJ*/
         L     @15,TCBXSCT(,TCBPTR)                             03S0144
         LR    WRKREG1,@15                                      03S0144
         N     WRKREG1,@CF00090                                 03S0144
*           WRKREG2=TCBXSCT×S3AONMSK;/* TURN ON S3A IN REGISTER 03S0145
*                                                            @Z40FPYJ*/
         O     @15,@CF00088                                     03S0145
         LR    WRKREG2,@15                                      03S0145
*           GENERATE;                                           03S0146
*                                      /*                   @Z40FPYJ*/
          CS    WRKREG1,WRKREG2,TCBXSCT(TCBPTR) TURN ON S3A   @Z40FPYJ
          BNE   CSLOOP2                   LOOP ON FAILURE     @Z40FPYJ
*           RESPECIFY                                           03S0147
*             DQ UNRSTD;            /* FREE THE REGISTER             */
*           RESPECIFY                                           03S0148
*            (WRKREG1,                                          03S0148
*             WRKREG2) UNRSTD;      /* FREE THE REGISTERS            */
*                                                               03S0148
*           /*********************************************************/
*           /*                                                       */
*           /* DEQUEUE THE RQE                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0149
*                                                               04S0149
*/********************************************************************/
*/*  DQRQE -                                                         */
*/*      THIS SEGMENT DEQUEUES AN RQE FROM THE ASYNCHRONOUS EXIT QUEUE
*                                                                    */
*/*      INPUT:                                                      */
*/*        RQEPTR   (R2)  - CONTAINS ADDR OF THE RQE TO BE DEQUEUED. */
*/*        PREVRQE (R3) - CONTAINS ADDR OF PREVIOUS RQE IF THERE IS  */
*/*                   ONE, OR ZEROES IF THERE IS NO PREVIOUS RQE.    */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/********************************************************************/
*                                                               04S0149
*           IF PREVRQE=0            /* IF THIS IS THE TOP RQE        */
*             THEN                                              04S0149
         LTR   PREVRQE,PREVRQE                                  04S0149
         BNZ   @RF00149                                         04S0149
*             ASXBFRQE=RQEPTR->RQENRQE;/* UPDATE PTR TO FIRST RQE    */
         L     @15,RQENRQE(,RQEPTR)                             04S0150
         ST    @15,ASXBFRQE(,ASXBPTR)                           04S0150
*           ELSE                                                04S0151
*             PREVRQE->RQENRQE=RQEPTR->RQENRQE;                 04S0151
         B     @RC00149                                         04S0151
@RF00149 L     @15,RQENRQE(,RQEPTR)                             04S0151
         ST    @15,RQENRQE(,PREVRQE)                            04S0151
*           IF ASXBLRQE=RQEPTR      /* IF THIS WAS LAST RQE          */
*             THEN                                              04S0152
@RC00149 C     RQEPTR,ASXBLRQE(,ASXBPTR)                        04S0152
         BNE   @RF00152                                         04S0152
*             ASXBLRQE=PREVRQE;     /* UPDATE PTR TO LAST            */
         ST    PREVRQE,ASXBLRQE(,ASXBPTR)                       04S0153
*/********************************************************************/
*/*  END OF DQRQE -                                                  */
*/********************************************************************/
*                                                               04S0154
*                                                               03S0154
*           /*********************************************************/
*           /*                                                       */
*           /* INITIALIZE THE IRB AND TCB                            */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0154
*           CALL IRBTCBIN;          /* INITIALIZE THE IRB AND TCB    */
@RF00152 BAL   @14,IRBTCBIN                                     03S0154
*           TCBS3A=OFF;             /* TURN OFF RESUME/TCTL INTERSECT
*                                      FLAG                  @Z40FPYJ*/
         NI    TCBS3A(TCBPTR),B'10111111'                       03S0155
*         END;                                                  03S0156
*       ELSE                        /* TCBS3A IS ON          @ZA32738*/
*         PREVRQE=RQEPTR;           /* SAVE CURRENT IN PREV  @ZA32738*/
         B     @RC00141                                         03S0157
@RF00141 LR    PREVRQE,RQEPTR                                   03S0157
*     ELSE                                                      03S0158
*       PREVRQE=RQEPTR;             /* UPDATE PREVIOUS POINTER       */
         B     @RC00140                                         03S0158
@RF00140 LR    PREVRQE,RQEPTR                                   03S0158
*     RQEPTR=RQEPTR->RQENRQE;       /* PICK UP THE NEXT RQE          */
@RC00140 L     RQEPTR,RQENRQE(,RQEPTR)                          03S0159
*   END;                                                        03S0160
*                                                               03S0160
@DE00133 SLR   @15,@15                                          03S0160
         CR    RQEPTR,@15                                       03S0160
         BNE   @DL00133                                         03S0160
*/********************************************************************/
*/*  END OF RQEPROC -                                                */
*/*      OUTPUT:                                                     */
*/*        R2-R5 - VOLATILE                                          */
*/*        R10,R11 - VOLATILE                                        */
*/*        R13,R14 - VOLATILE                                        */
*/********************************************************************/
*                                                               03S0161
*                                                               02S0161
*/********************************************************************/
*/*   SRB PROCESSING                                                 */
*/********************************************************************/
*                                                               02S0161
*                                                               03S0161
*/********************************************************************/
*/*  SRBPROC  -                                                      */
*/*   THIS SEGMENT PROCESSES SRBS.  IT TAKES ONLY THE TOP SRB ON THE */
*/*   QUEUE.  IF THE ADDRESS SPACE SIRB CAN BE SCHEDULED AT THIS TIME*/
*/*   THEN THE TOP SRB WILL BE DEQUEUED, AND THE SIRB SCHEDULED      */
*/*    TO THE TASK DESIGNATED AS THE ERROR TASK, I.E. THE ONE        */
*/*   UNDER WHICH ERPS ARE TO EXECUTE.                               */
*/*      INPUT:                                                      */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF CURRENT ASXB.             */
*/*        ASCBPTR (R8) - CONTAINS ADDR OF CURRENT ASCB.             */
*/********************************************************************/
*                                                               03S0161
*   SRBPTR=ASXBFSRB;                /* POINT TO FIRST SRB            */
         L     SRBPTR,ASXBFSRB(,ASXBPTR)                        03S0161
*   IF SRBPTR^=0                    /* IF THERE IS AN SRB            */
*     THEN                                                      03S0162
         CR    SRBPTR,@15                                       03S0162
         BE    @RF00162                                         03S0162
*     DO;                                                       03S0163
*       RESPECIFY                                               03S0164
*         DQ RSTD;                  /* RESTRIC TTHE REGISTER         */
*                                                               03S0164
*       /*************************************************************/
*       /*                                                           */
*       /* TEST THE SRB                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0165
*                                                               04S0165
*/********************************************************************/
*/*  TESTSRB -                                                       */
*/*      THIS SEGMENT DETERMINES WHETHER THE SRB MAY BE DEQUEUED     */
*/*      NOW.  IF IT CAN BE DEQUEUED, A DQ SWITCH IS SET             */
*/*      TO     0.  OTHERWISE , IT IS SET TO  4  .                   */
*/*      INPUT:                                                      */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/********************************************************************/
*                                                               04S0165
*       TCBPTR=ASXBETSK;            /* POINT TO THE ERROR TASK       */
         L     TCBPTR,ASXBETSK(,ASXBPTR)                        04S0165
*       RBSECPTR=ASXBSIRB;          /* POINT TO THE SIRB             */
         L     RBSECPTR,ASXBSIRB(,ASXBPTR)                      04S0166
*       IF TCBACTIV=ON              /* IF THE TASK IS ACTIVE         */
*           &TCBCCPVI^=PSACPULA     /* ON ANOTHER CPU                */
*           ×RBFACTV=ON             /* OR THE SIRB IS ACTIVE         */
*         THEN                                                  04S0167
         TM    TCBACTIV(TCBPTR),B'10000000'                     04S0167
         BNO   @GL00013                                         04S0167
         CLC   TCBCCPVI(2,TCBPTR),PSACPULA                      04S0167
         BNE   @RT00167                                         04S0167
@GL00013 TM    RBFACTV(RBSECPTR),B'01000000'                    04S0167
         BNO   @RF00167                                         04S0167
@RT00167 DS    0H                                               04S0168
*         DQ=NO;                    /* THEN DONT DEQUEUE IT          */
         LA    DQ,4                                             04S0168
*       ELSE                                                    04S0169
*         DQ=YES;                   /* DO DEQUEUE IT                 */
         B     @RC00167                                         04S0169
@RF00167 SLR   DQ,DQ                                            04S0169
*/********************************************************************/
*/*  END OF TESTSRB-                                                 */
*/*      OUTPUT:                                                     */
*/*        DQ (R13) - EQUALS   0   IF THE SRB CAN BE DEQUEUED.       */
*/*                   EQUALS  4   IF THE SRB CANNOT BE DEQUEUED.     */
*/*        TCBPTR (R4) -CONTAINS ADDR OF THE  ERROR TASK.            */
*/*        RBSECPTR (R5) - CONTAINS ADDR OF THE SIRB.                */
*/********************************************************************/
*                                                               04S0170
*       IF DQ=YES                   /* IF IT SHOULD BE DEQUEUED      */
*         THEN                                                  03S0170
@RC00167 LTR   DQ,DQ                                            03S0170
         BNZ   @RF00170                                         03S0170
*CSLOOP3:                                                       03S0171
*         IF TCBS3A=OFF THEN        /* CHECK FOR INTERSECT WITH 03S0171
*                                      SUSPEND/RESUME        @Z40FPYJ*/
CSLOOP3  TM    TCBS3A(TCBPTR),B'01000000'                       03S0171
         BNZ   @RF00171                                         03S0171
*           DO;                                                 03S0172
*             RFY                                               03S0173
*              (WRKREG1,                                        03S0173
*               WRKREG2) RSTD;                                  03S0173
*             WRKREG1=TCBXSCT&S3AOFMSK;/* TURN OFF S3A IN REGISTER
*                                                            @Z40FPYJ*/
         L     @15,TCBXSCT(,TCBPTR)                             03S0174
         LR    WRKREG1,@15                                      03S0174
         N     WRKREG1,@CF00090                                 03S0174
*             WRKREG2=TCBXSCT×S3AONMSK;/* TURN ON S3A IN REGISTER
*                                                            @Z40FPYJ*/
         O     @15,@CF00088                                     03S0175
         LR    WRKREG2,@15                                      03S0175
*             GENERATE;                                         03S0176
*                                                               03S0176
*                                      /*                   @Z40FPYJ*/
          CS    WRKREG1,WRKREG2,TCBXSCT(TCBPTR) TURN ON S3A   @Z40FPYJ
          BNE   CSLOOP3                   LOOP ON FAILURE     @Z40FPYJ
*             /*******************************************************/
*             /*                                                     */
*             /* DEQUEUE THE SRB                                     */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0177
*             RESPECIFY                                         03S0177
*               DQ UNRSTD;          /* FREE THE REGISTER             */
*             RESPECIFY                                         03S0178
*              (WRKREG1,                                        03S0178
*               WRKREG2) UNRSTD;    /* FREE THE REGISTERS            */
*             ASXBFSRB=SRBFLNK;     /* UPDATE POINTER TO FIRST       */
         L     @15,SRBFLNK(,SRBPTR)                             03S0179
         ST    @15,ASXBFSRB(,ASXBPTR)                           03S0179
*             IF ASXBFSRB=0         /* IF THIS WAS ONLY SRB          */
*               THEN                                            03S0180
         SLR   @11,@11                                          03S0180
         CR    @15,@11                                          03S0180
         BNE   @RF00180                                         03S0180
*               ASXBLSRB=0;         /* UPDATE LAST SRB PTR           */
*                                                               03S0181
         ST    @11,ASXBLSRB(,ASXBPTR)                           03S0181
*             /*******************************************************/
*             /*                                                     */
*             /* INITIALIZE THE SIRB                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0182
*                                                               04S0182
*/****************************************************************** */
*/*  INITSIRB -                                                      */
*/*      THIS SEGMENT INITIALIZES SPECIAL FIELDS FOR THE SIRB        */
*/*      INPUT-                                                      */
*/*        RBSECPTR - R5 - ADDRESS OF SIRB                           */
*/****************************************************************** */
*                                                               04S0182
*             RBSIZE=ADDR(SIRBLEN)/8;/* SET SIZE OF SIRB             */
@RF00180 LA    @00,SIRBLEN                                      04S0182
         SRL   @00,3                                            04S0182
         STH   @00,RBSIZE(,RBSECPTR)                            04S0182
*             RBSTAB=SIRBSTAB;      /* SET THE STAB BYTES            */
         MVC   RBSTAB(2,RBSECPTR),@CB00081                      04S0183
*             RBOPSW=SIRBPSW;       /* SET THE PSW FIELDS            */
         MVC   RBOPSW(8,RBSECPTR),@CB00084                      04S0184
*             RBEP=ADDR(IECVERPL);  /* SET ENTRY POINT               */
         L     @15,@CV00061                                     04S0185
         ST    @15,RBEP(,RBSECPTR)                              04S0185
*/****************************************************************** */
*/* END OF INITSIRB                                                  */
*/****************************************************************** */
*                                                               04S0186
*                                                               03S0186
*             /*******************************************************/
*             /*                                                     */
*             /* INITIALIZE THE SIRB AND TCB                         */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0186
*             CALL IRBTCBIN;        /* INITIALIZE IRB AND TCB        */
         BAL   @14,IRBTCBIN                                     03S0186
*             TCBS3A=OFF;           /* TURN OFF RESUME/TCTL INTERSECT
*                                      FLAG                  @Z40FPYJ*/
         NI    TCBS3A(TCBPTR),B'10111111'                       03S0187
*           END;                                                03S0188
*     END;                                                      03S0189
*                                                               03S0189
@RF00171 DS    0H                                               03S0189
@RF00170 DS    0H                                               03S0190
*/********************************************************************/
*/*  END OF SRBPROC -                                                */
*/*      OUTPUT:                                                     */
*/*        R2,R4,R5 - VOLATILE                                       */
*/*        R10,R11,R13,R14 - VOLATILE                                */
*/********************************************************************/
*                                                               03S0190
*   IF ASXBAEQ=NULL                 /* IF QUEUES EMPTY               */
*     THEN                                                      02S0190
@RF00162 CLC   ASXBAEQ(24,ASXBPTR),NULL                         02S0190
         BNE   @RF00190                                         02S0190
*     ASCBS3S='0'B;                 /* TURN OFF STAGE 3 SWITCH       */
         NI    ASCBS3S(ASCBPTR),B'11011111'                     02S0191
*   ASCBS2S='0'B;                   /* TURN OFF THE STAGE 2 SWITCH   */
@RF00190 NI    ASCBS2S(ASCBPTR),B'11101111'                     02S0192
*/*  RESTORE STATUS AND RETURN                                       */
*                                                               02S0193
*                                                               03S0193
*/********************************************************************/
*/*   RESREG  -                                                      */
*/*        THIS SEGMENT RESTORES THE NECESSARY REGISTERS BEFORE      */
*/*      RETURNING TO THE DISPATCHER.                                */
*/*      INPUT:                                                      */
*/*        ASXBPTR (R6) - CONTAINS ADDR OF THE CURRENT ASXB.         */
*/*                 THE ASXB THEN POINTS TO THE LOCAL WSA VECTOR     */
*/*                  TABLE,WHICH POINTS TO THE SAVE AREA.            */
*/*        SAVE1 - CONTAINS THE SAVED RETURN ADDR.                   */
*/********************************************************************/
*                                                               03S0193
*   R14=SAVE1;                      /* RESTORE RETURN REGISTER       */
         L     @15,ASXBSPSA(,ASXBPTR)                           03S0193
         L     @15,WSALS2EE(,@15)                               03S0193
         ICM   R14,15,SAVE1(@15)                                03S0193
*/********************************************************************/
*/*  END OF RESREG -                                                 */
*/*      OUTPUT:                                                     */
*/*        R14 - CONTAINS RETURN ADDR TO THE DISPATCHER.             */
*/********************************************************************/
*                                                               03S0194
*                                                               02S0194
*/********************************************************************/
*                                                               02S0194
*                                                               01S0194
*/*  INTERNAL PROCEDURES                                             */
*                                                               01S0194
*                                                               02S0194
*/********************************************************************/
*/*  IRBTCBIN -                                                      */
*/*      THIS SEGMENT INITIALIZES A TCB AND IRB.  IT HANDLES SAVING  */
*/*      STATUS OF THE PREVIOUS ROUTINE, AND SETTING UP  FOR DISPATCH*/
*/*      OF THE ASYNCHRONOUS EXIT.                                   */
*/*      INPUT:                                                      */
*/*        TCBPTR  (R4) - CONTAINS ADDR OF TCB TO WHICH THE IRB      */
*/*                  IS BEING SCHEDULED.                             */
*/*        RBSECPTR - (R5) CONTAINS ADDR OF THE IRB WHICH IS         */
*/*            BEING SCHEDULED.                                      */
*/*        R2 - CONTAINS ADDR OF THE CONTROL BLOCK WHICH HAS         */
*/*            SCHEDULED THE IRB.  IF COMPLEMENTED, IT IS THE        */
*/*            NEGATIVE ADDR OF AN IQE.  IF POSITIVE, IT IS THE      */
*/*            ADDR OF AN  SRB OR RQE.                               */
*/*        ASCBPTR (R8) - CONTAINS CURRENT ASCB ADDR                 */
*/*        R14 - CONTAINS RETURN ADDR.                               */
*/********************************************************************/
*                                                               02S0194
*IRBTCBIN:                                                      02S0194
*   PROC OPTIONS(NOSAVE NOSAVEAREA);                            02S0194
@EL00001 DS    0H                                               02S0194
@EF00001 DS    0H                                               02S0194
@ER00001 BR    @14                                              02S0194
IRBTCBIN DS    0H                                               02S0195
*   RBFACTV=ON;                     /* SET THE RB ACTIVE     @ZA09499*/
         OI    RBFACTV(RBSECPTR),B'01000000'                    02S0195
*   RBGRSAVE=TCBGRS;                /* SAVE TASK'S REGISTERS         */
         MVC   RBGRSAVE(64,RBSECPTR),TCBGRS(TCBPTR)             02S0196
*   IF BLOCK<0                      /* IF THIS IS AN IQE             */
*     THEN                                                      02S0197
         LTR   BLOCK,BLOCK                                      02S0197
         BNM   @RF00197                                         02S0197
*     DO;                                                       02S0198
*       IQEPTR=-BLOCK;              /* SET ADDRESS POSITIVE          */
         LCR   @15,BLOCK                                        02S0199
         LR    IQEPTR,@15                                       02S0199
*       TCBGRS0=IQEPTR;             /* SET R0 TO ADDR OF IQE         */
         ST    IQEPTR,TCBGRS0(,TCBPTR)                          02S0200
*       TCBGRS1=IQEPARAM;           /* SET R1 TO PARAMETER           */
         L     @15,IQEPARAM(,IQEPTR)                            02S0201
         ST    @15,TCBGRS1(,TCBPTR)                             02S0201
*       IF RBIQETP=ANRQE1×          /* IF THE IRB INDICATES RQES     */
*           RBIQETP=ANRQE2          /* SCHEDULE THE IRB              */
*         THEN                                                  02S0202
         TM    RBIQETP(RBSECPTR),B'00000100'                    02S0202
         BNO   @GL00015                                         02S0202
         TM    RBIQETP(RBSECPTR),B'00001000'                    02S0202
         BZ    @RT00202                                         02S0202
@GL00015 TM    RBIQETP(RBSECPTR),B'00001100'                    02S0202
         BNZ   @RF00202                                         02S0202
@RT00202 DS    0H                                               02S0203
*         RBIQETP='11'B;            /* CORRECT TO INDICATE IQES      */
         OI    RBIQETP(RBSECPTR),B'00001100'                    02S0203
*     END;                                                      02S0204
*   ELSE                                                        02S0205
*     TCBGRS1=BLOCK;                /* SET R1 TO ADDR OF RQE OR SRB  */
         B     @RC00197                                         02S0205
@RF00197 ST    BLOCK,TCBGRS1(,TCBPTR)                           02S0205
*   TCBGRS13=RBPPSAV1;              /* SET R13 TO ADDR OF PROBLEM
*                                      PROGRAM SAVE AREA             */
@RC00197 L     @15,RBPPSAV1-1(,RBSECPTR)                        02S0206
         LA    @15,0(,@15)                                      02S0206
         ST    @15,TCBGRS13(,TCBPTR)                            02S0206
*   TCBGRS14=ADDR(CVTEXIT);         /* R14 POINTS TO SVC 3           */
         L     @15,CVTPTR                                       02S0207
         LA    @15,CVTEXIT(,@15)                                02S0207
         ST    @15,TCBGRS14(,TCBPTR)                            02S0207
*   TCBGRS15=RBEP;                  /* R15 CONTAINS ENTRY POINT      */
         L     @15,RBEP(,RBSECPTR)                              02S0208
         ST    @15,TCBGRS15(,TCBPTR)                            02S0208
*   RBIQE1=BLOCK;                   /* POINT TO IQE/RQE/SRB          */
         STCM  BLOCK,7,RBIQE1(RBSECPTR)                         02S0209
*   RBOPSW(6:8)=RBEP;               /* PSW SET TO ENTRY POINT        */
*                                                               02S0210
         STCM  @15,7,RBOPSW+5(RBSECPTR)                         02S0210
*   /*****************************************************************/
*   /*                                                               */
*   /* QUEUE THE RB TO THE TCB                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0211
*                                                               03S0211
*/********************************************************************/
*/*  QRB -                                                           */
*/*  THIS SEGMENT QUEUES THE IRB TO THE TCB.  IT ALSO BUMPS THE COUNT*/
*/*   OF READY TCBS IF THE TASK WAS NOT PREVIOUSLY READY,BUT NOW IS. */
*/*      INPUT:                                                      */
*/*        TCBPTR (R4) - CONTAINS ADDR OF THE TCB TO WHICH IRB       */
*/*                 IS BEING QUEUED.                                 */
*/*        RBSECPTR (R5) - CONTAINS ADDRESS OF THE IRB.              */
*/*        ASCBPTR (R8) - CONTAINS ADDR OF THE CURRENT ASCB.         */
*/********************************************************************/
*                                                               03S0211
*   RBLINKB=TCBRBP;                 /* POINT TO PREVIOUS RB          */
         L     @15,TCBRBP(,TCBPTR)                              03S0211
         STCM  @15,7,RBLINKB(RBSECPTR)                          03S0211
*   TCBRBP=RBSECPTR;                /* POINT TO NEW RB               */
         ST    RBSECPTR,TCBRBP(,TCBPTR)                         03S0212
*   IF RBLINKB->RBWCF>0             /* IF OLD RB WAS WAITING         */
*     THEN                                                      03S0213
         CLI   RBWCF(@15),0                                     03S0213
         BNH   @RF00213                                         03S0213
*     IF TCBFLGS4=0&TCBFLGS5=0      /* AND TASK WAS DISPATCHABLE     */
*       THEN                                                    03S0214
         CLI   TCBFLGS4(TCBPTR),0                               03S0214
         BNE   @RF00214                                         03S0214
         CLI   TCBFLGS5(TCBPTR),0                               03S0214
         BNE   @RF00214                                         03S0214
*       DO;                                                     03S0215
*                                                               03S0215
*         /***********************************************************/
*         /*                                                         */
*         /* INCREMENT THE COUNT OF READY TCBS                       */
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0216
*         RESPECIFY                                             03S0216
*          (WRKREG1,                                            03S0216
*           WRKREG2) RSTD;          /* RESTRICT REGS                 */
*         WRKREG1=ASCBTCBS;         /* GET COUNT OF TCBS             */
         L     WRKREG1,ASCBTCBS(,ASCBPTR)                       03S0217
*CSLOOP:                                                        03S0218
*         WRKREG2=WRKREG1+1;        /* BUMP COUNT                    */
CSLOOP   LA    WRKREG2,1                                        03S0218
         ALR   WRKREG2,WRKREG1                                  03S0218
*         GEN CODE;                                             03S0219
         CS    WRKREG1,WRKREG2,ASCBTCBS(ASCBPTR)
        BNE    CSLOOP
*         RESPECIFY                                             03S0220
*          (WRKREG1,                                            03S0220
*           WRKREG2) UNRSTD;        /* FREE THE REGS                 */
*       END;                                                    03S0221
*                                                               03S0221
*/********************************************************************/
*/*  END OF QRB -                                                    */
*/*      OUTPUT:                                                     */
*/*        WRKREG1 (R10) - VOLATILE                                  */
*/*        WRKREG2 (R11) - VOLATILE.                                 */
*/********************************************************************/
*                                                               03S0222
*   END IRBTCBIN;                                               02S0222
*                                                               02S0222
@EL00002 DS    0H                                               02S0222
@EF00002 DS    0H                                               02S0222
@ER00002 BR    @14                                              02S0222
*/********************************************************************/
*/*  END OF IRBTCBIN -                                               */
*/*      OUTPUT:                                                     */
*/*        R2 - CONTAINS TRUE ADDR OF IQE,RQE,OR SRB.                */
*/*        R10,R11 - VOLATILE.                                       */
*/********************************************************************/
*                                                               02S0223
*   END IEA0EF03                                                01S0223
*                                                               01S0223
*/********************************************************************/
*                                                               01S0223
*                                                               01S0223
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSUT5  (REGS    )                                       */
*/*%INCLUDE SYSUT5  (VARIBLE )                                       */
*/*%INCLUDE SYSUT5  (CONS    )                                       */
*/*%INCLUDE SYSUT5  (MAPMACS )                                       */
*/*%INCLUDE SYSLIB  (IHAIQE  )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IECDRQE )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSUT5  (STAGE3  )                                       */
*/*%INCLUDE SYSUT5  (INIT3   )                                       */
*/*%INCLUDE SYSUT5  (IQEPROC )                                       */
*/*%INCLUDE SYSUT5  (TESTIQE )                                       */
*/*%INCLUDE SYSUT5  (CHECKSUB)                                       */
*/*%INCLUDE SYSUT5  (DQIQE   )                                       */
*/*%INCLUDE SYSUT5  (RQEPROC )                                       */
*/*%INCLUDE SYSUT5  (TESTRQE )                                       */
*/*%INCLUDE SYSUT5  (DQRQE   )                                       */
*/*%INCLUDE SYSUT5  (SRBPROC )                                       */
*/*%INCLUDE SYSUT5  (TESTSRB )                                       */
*/*%INCLUDE SYSUT5  (INITSIRB)                                       */
*/*%INCLUDE SYSUT5  (RESREG  )                                       */
*/*%INCLUDE SYSUT5  (IRBTCBIN)                                       */
*/*%INCLUDE SYSUT5  (QRB     )                                       */
*                                                               01S0223
*       ;                                                       01S0223
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IEA0EF03 CSECT
         DS    0F
@CF00088 DC    XL4'40000000'
@CF00090 DC    XL4'BFFFFFFF'
@DATD    DSECT
         DS    0D
LCCAPTR  DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEA0EF03 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00060 DC    V(IEATRSCN)
@CV00061 DC    V(IECVERPL)
         DS    0D
@CB00084 DC    X'070C000000000000'
@CB00081 DC    X'8000'
NULL     DC    X'00'
         DC    XL23'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
BLOCK    EQU   @02
BLOCKPTR EQU   @02
RQEPTR   EQU   @02
IQEPTR   EQU   @02
SRBPTR   EQU   @02
PREVIQE  EQU   @03
PREVRQE  EQU   @03
TCBPTR   EQU   @04
RBSECPTR EQU   @05
ASXBPTR  EQU   @06
R7       EQU   @07
ASCBPTR  EQU   @08
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
WRKREG1  EQU   @10
DQ       EQU   @13
R11      EQU   @11
WRKREG2  EQU   @11
R14      EQU   @14
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSACPULA EQU   PSA+518
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
WKAREA   EQU   0
SAVE1    EQU   WKAREA
SAVE2    EQU   WKAREA+4
SAVE3    EQU   WKAREA+8
SAVE4    EQU   WKAREA+12
IQESECT  EQU   0
IQELNK   EQU   IQESECT
IQELNKA  EQU   IQELNK+1
IQEPARAM EQU   IQESECT+4
IQEIRB   EQU   IQESECT+8
IQEFLAGS EQU   IQEIRB
IQEPURGE EQU   IQEFLAGS
IQEIRBA  EQU   IQEIRB+1
IQETCB   EQU   IQESECT+12
IQETCBA  EQU   IQETCB+1
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFX    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBFC    EQU   TCBFLGS5
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBGRS0  EQU   TCBGRS
TCBGRS1  EQU   TCBGRS+4
TCBGRS13 EQU   TCBGRS+52
TCBGRS14 EQU   TCBGRS+56
TCBGRS15 EQU   TCBGRS+60
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBACTIV EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBCCPVI EQU   TCBXSCT+2
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RQE      EQU   0
RQETCB   EQU   RQE+12
RQENRQE  EQU   RQE+20
RQERRQ   EQU   RQE+24
RQEPRT   EQU   RQE+36
RQETYPE  EQU   RQE+37
RQETYP3  EQU   RQETYPE
RQEFLAG  EQU   RQE+38
RQEFLAG3 EQU   RQE+39
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLNK  EQU   SRB+4
SRBFLC   EQU   SRB+12
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
RBPPSAV1 EQU   RBPPSAV+1
RBSIZE   EQU   RBSECT+8
@NM00027 EQU   RBSECT+10
@NM00028 EQU   @NM00027
RBTRSVRB EQU   @NM00028
RBATNXIT EQU   @NM00028
@NM00030 EQU   @NM00027+1
RBETXR   EQU   @NM00030
RBIQETP  EQU   @NM00030
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00037 EQU   RBSECT+28
@NM00038 EQU   @NM00037
IRBEND   EQU   RBSECT+96
@NM00041 EQU   RBSECT+96
RBRSV138 EQU   @NM00041+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBS3S  EQU   ASCBFLG1
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBS2S  EQU   ASCBFLG2
ASCBTCBS EQU   ASCB+124
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBSIRB EQU   ASXB+160
ASXBETSK EQU   ASXB+164
ASXBAEQ  EQU   ASXB+168
ASXBFIQE EQU   ASXBAEQ
ASXBLIQE EQU   ASXBAEQ+4
ASXBFRQE EQU   ASXBAEQ+8
ASXBLRQE EQU   ASXBAEQ+12
ASXBFSRB EQU   ASXBAEQ+16
ASXBLSRB EQU   ASXBAEQ+20
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
WSAL     EQU   0
WSALS2EE EQU   WSAL+24
WSAG     EQU   0
WSAC     EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTEXIT  EQU   CVTMAP+80
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IQEEND   EQU   0
CVTPTR   EQU   FLCCVT
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBIQE1   EQU   RBIQE+1
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00042 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00068 EQU   CVTFIX+248
@NM00067 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00041+8
PRBEND   EQU   @NM00041+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00041+6
RBRSV136 EQU   @NM00041+4
RBRSV135 EQU   @NM00041
@NM00040 EQU   RBSECT+32
@NM00039 EQU   @NM00037+1
RBSCF    EQU   @NM00038
RBPGMQ1  EQU   RBPGMQ+1
@NM00036 EQU   RBPGMQ
@NM00035 EQU   RBSECT+16
@NM00034 EQU   @NM00030
@NM00033 EQU   @NM00030
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00030
@NM00032 EQU   @NM00030
@NM00031 EQU   @NM00030
RBPMSVRB EQU   @NM00028
@NM00029 EQU   @NM00028
RBWAITP  EQU   @NM00028
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00028
RBABOPSW EQU   RBSECT+4
@NM00026 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00025 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00024 EQU   RBOPSWB2
@NM00023 EQU   XRBPSW
@NM00022 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00021 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00020 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00019 EQU   XSTAB1
@NM00018 EQU   RBBASIC+8
@NM00017 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00016 EQU   RBPRFX
@NM00015 EQU   SRB+40
@NM00014 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBID    EQU   SRB
RQEEND   EQU   RQE+40
@NM00013 EQU   RQEFLAG3
RQEINIOS EQU   RQEFLAG3
RQECHEAC EQU   RQEFLAG
RQEPURGE EQU   RQEFLAG
RQESRBS  EQU   RQEFLAG
RQESTBL  EQU   RQEFLAG
RQEFIXST EQU   RQEFLAG
RQENOFRE EQU   RQEFLAG
RQENOPST EQU   RQEFLAG
RQERETRY EQU   RQEFLAG
RQETYP1  EQU   RQETYP3
RQETYP2  EQU   RQETYP3
RQEDIE   EQU   RQETYPE
RQEEOEE  EQU   RQETYPE
RQEVAM   EQU   RQETYPE
RQE1TO1  EQU   RQETYPE
RQEVIRT  EQU   RQETYPE
RQE114   EQU   RQETYPE
RQESMFRQ EQU   RQEPRT
@NM00012 EQU   RQEPRT
RQEPKEY  EQU   RQEPRT
RQEIPIB  EQU   RQE+32
RQESRB   EQU   RQE+28
RQETCCW  EQU   RQE+16
RQEDEB   EQU   RQE+8
RQEIOB   EQU   RQE+4
RQEUCB   EQU   RQE
@NM00011 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00010 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBSTAFX EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00009 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00008 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
IQEOUTLM EQU   IQESECT+20
IQEDCB   EQU   IQESECT+16
IQESTAT2 EQU   IQETCB
@NM00007 EQU   IQEFLAGS
@NM00006 EQU   IQEFLAGS
@NM00005 EQU   IQEFLAGS
@NM00004 EQU   IQEFLAGS
@NM00003 EQU   IQEFLAGS
@NM00002 EQU   IQEFLAGS
@NM00001 EQU   IQEFLAGS
IQESTAT1 EQU   IQELNK
@NM00066 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00065 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00064 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00063 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00062 EQU   FLCFSA
@NM00061 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00060 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00059 EQU   FLCIOA
@NM00058 EQU   FLCMCLA+15
@NM00057 EQU   FLCMCLA+14
@NM00056 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00055 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00054 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00053 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00052 EQU   FLCPER
@NM00051 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00050 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00049 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00048 EQU   FLCPIILC
@NM00047 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00046 EQU   FLCSVILC
@NM00045 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00044 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00043 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00098 EQU   CALLTR
@RF00100 EQU   CALLTR
@RC00110 EQU   @RC00109
@RC00141 EQU   @RC00140
@RF00202 EQU   @RC00197
@RF00214 EQU   @EL00002
@RF00213 EQU   @EL00002
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IEA0EF03,(C'PLS1403',0701,78167)
