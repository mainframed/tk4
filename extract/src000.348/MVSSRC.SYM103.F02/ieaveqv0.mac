         TITLE ' IEAVEQV1:  PROC   OPTIONS(NOSAVEAREA  REENTRANT CODERE*
               EG(12)   '
IEAVEQV1 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00001-@MAINENT)
IEAVEQV2 DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00062-IEAVEQV2)
         ENTRY IEAVEQV2
IEAVEQV3 DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL2(@EP00065-IEAVEQV3)
         ENTRY IEAVEQV3
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         AH    @15,4(,@15)                                      01S0001
         BR    @15                                              01S0001
@EP00001 DS    0H                                               01S0002
*   WRKREG=1;                       /* SINGLE-THREAD Q               */
         LA    WRKREG,1                                         01S0060
*   GO TO COMMON;                   /* PROCEED TO COMMON PROC        */
         B     COMMON                                           01S0061
*/********************************************************************/
*/* THIS ENTRY POINT IS USED FOR TYPE-2 QUEUES. THAT IS,             */
*/* SINGLE-THREADED QUEUES WITH A HEADER AND TRAILER.                */
*/********************************************************************/
*                                                               01S0062
*IEAVEQV2:                                                      01S0062
*   ENTRY;                                                      01S0062
@EP00062 DS    0H                                               01S0063
*   WRKREG=2;                       /* SINGLE-THREAD W/TRAILER       */
         LA    WRKREG,2                                         01S0063
*   GO TO COMMON;                                               01S0064
*                                                               01S0064
         B     COMMON                                           01S0064
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ENTRY POINT IS USED FOR TYPE-3 QUEUES. THAT IS,          */
*   /* DOUBLE-THREADED QUEUES.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0065
*IEAVEQV3:                                                      01S0065
*   ENTRY;                                                      01S0065
@EP00065 DS    0H                                               01S0066
*   WRKREG=3;                       /* DOUBLE THREAD                 */
         LA    WRKREG,3                                         01S0066
*   GO TO COMMON;                                               01S0067
*                                                               01S0067
         B     COMMON                                           01S0067
*/********************************************************************/
*/* COMMON PROCESSING FOR ALL TYPES OF QUEUES.                       */
*/********************************************************************/
*                                                               01S0068
*                                                               02S0068
*/********************************************************************/
*/* COMMON                                                           */
*/*  THIS IS THE MAINLINE SEGMENT THAT PERFORMS COMMON PROCESSING    */
*/*  FOR ALL TYPES OF QUEUES.                                        */
*/*      INPUT-                                                      */
*/*       SAME AS ON ENTRY, WITH THE FOLLOWING EXCEPTION             */
*/*        WRKREG (R3) = 1, IF THIS IS A TYPE 1 QUEUE                */
*/*                    =2 , IF THIS IS A TYPE 2 QUEUE                */
*/*                    = 3, IF THIS IS A TYPE 3 QUEUE                */
*/********************************************************************/
*                                                               02S0068
*COMMON:                                                        02S0068
*   ;                                                           02S0068
*                                                               02S0068
COMMON   DS    0H                                               02S0069
*/********************************************************************/
*/* VALIDITY CHECK THE PARAMETER LIST.                               */
*/********************************************************************/
*                                                               02S0069
*                                                               03S0069
*/*  VALCHK -                                                        */
*/*  THIS SEGMENT VALIDITY CHECKS THE CALLERS INPUT             03S0069
*    PARAMETERS.    IT INSURES THAT FIELDS DO NOT CONTAIN       03S0069
*    OBVIOUSLY BAD INFORMATION.  IT ALSO INSURES THAT RESERVED  03S0069
*    FIELDS ARE ZERO.                                                */
*                                                               03S0069
*   S15=0;                          /* INIT RETURN CODE REG          */
         SLR   @10,@10                                          03S0069
         ST    @10,S15(,R13)                                    03S0069
*   IF QVPLEVR=0                    /* NO EVR SPECIFIED              */
*       ×QVPLWKA=0                  /* NO WORK AREA SPECIFIED        */
*       ×QVPLHDR=0                  /* NO HEADER SPECIFIED           */
*       ×QVPLRES1^='0000000'B       /* RESERVED BITS NOT ZERO        */
*       ×'00000000'X^=(QVPLFPTR&ROUND4)/* FWD PTR NOT WORD OFFSET    */
*       ×QVPLRES2^='0000000'B       /* RESERVED BITS NOT ZERO        */
*       ×(WRKREG>1                  /* QUEUE HAS TRAILER             */
*       &(QVPLTRLR=0×QVPLRES3^='0000000'B))/* TRAILER NOT SPEC OR
*                                      RESV                          */
*       ×                           /* BITS NOT SET                  */
*       (WRKREG=3                   /* DOUBLE THREAD                 */
*       &(QVPLRES4^='0000000'B      /* RSVD NOT SET                  */
*       ×'00000000'X^=(QVPLBPTR&ROUND4))/* BACK PTR NOT WORD OFFSET  */
*       ) THEN                                                  03S0070
         L     @08,QVPLPTR(,R13)                                03S0070
         C     @10,QVPLEVR(,@08)                                03S0070
         BE    @RT00070                                         03S0070
         C     @10,QVPLWKA(,@08)                                03S0070
         BE    @RT00070                                         03S0070
         C     @10,QVPLHDR(,@08)                                03S0070
         BE    @RT00070                                         03S0070
         TM    QVPLRES1(@08),B'01111111'                        03S0070
         BNZ   @RT00070                                         03S0070
         LH    @00,QVPLFPTR(,@08)                               03S0070
         N     @00,@CF00152                                     03S0070
         LTR   @00,@00                                          03S0070
         BNZ   @RT00070                                         03S0070
         TM    QVPLRES2(@08),B'01111111'                        03S0070
         BNZ   @RT00070                                         03S0070
         C     WRKREG,@CF00081                                  03S0070
         BNH   @GL00001                                         03S0070
         C     @10,QVPLTRLR(,@08)                               03S0070
         BE    @RT00070                                         03S0070
         TM    QVPLRES3(@08),B'01111111'                        03S0070
         BNZ   @RT00070                                         03S0070
@GL00001 C     WRKREG,@CF00160                                  03S0070
         BNE   @RF00070                                         03S0070
         L     @10,QVPLPTR(,R13)                                03S0070
         TM    QVPLRES4(@10),B'01111111'                        03S0070
         BNZ   @RT00070                                         03S0070
         LH    @10,QVPLBPTR(,@10)                               03S0070
         N     @10,@CF00152                                     03S0070
         LTR   @10,@10                                          03S0070
         BZ    @RF00070                                         03S0070
@RT00070 DS    0H                                               03S0071
*     S15=24;                       /* INDICATE ERROR                */
*                                                               03S0071
         MVC   S15(4,R13),@CF00087                              03S0071
*   /*****************************************************************/
*   /*                                                               */
*   /* THE PARAMTERS SEEM TO BE VALID.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               03S0072
*   ELSE                                                        03S0072
*     DO;                                                       03S0072
*                                                               03S0072
         B     @RC00070                                         03S0072
@RF00070 DS    0H                                               03S0073
*       /*************************************************************/
*       /*                                                           */
*       /* THE PARAMETERS ARE REFERENCED TO INSURE THAT IF THEY ARE  */
*       /* INVALID, ANY PROGRAM CHECKS WILL OCCUR BEFORE QUEUE       */
*       /* VERIFIER BEGINS ITS PROCESSING.                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0073
*       R15=QVPL(1);                /* REFERENCE FIRST BYTE          */
         L     @10,QVPLPTR(,R13)                                03S0073
         SLR   R15,R15                                          03S0073
         IC    R15,QVPL(,@10)                                   03S0073
*       IF WRKREG=1                 /* IF TYPE 1 QUEUE               */
*         THEN                      /* REFERENCE PARM LIST           */
         C     WRKREG,@CF00081                                  03S0074
         BNE   @RF00074                                         03S0074
*         R15=QVPLTYP1(LENGTH(QVPLTYP1));/* REFERENCE LAST BYTE      */
         SLR   R15,R15                                          03S0075
         IC    R15,QVPLTYP1+27(,@10)                            03S0075
*       ELSE                                                    03S0076
*         IF WRKREG=2               /* IF TYPE 2                     */
*           THEN                                                03S0076
         B     @RC00074                                         03S0076
@RF00074 C     WRKREG,@CF00111                                  03S0076
         BNE   @RF00076                                         03S0076
*           R15=QVPL(LENGTH(QVPLTYP2));/* REFERNCE LAST BYTE         */
         L     @10,QVPLPTR(,R13)                                03S0077
         SLR   R15,R15                                          03S0077
         IC    R15,QVPL+32(,@10)                                03S0077
*         ELSE                                                  03S0078
*           R15=QVPL(LENGTH(QVPLTYP3));/* REFERENCE LAST BYTE        */
*                                                               03S0078
         B     @RC00076                                         03S0078
@RF00076 L     @10,QVPLPTR(,R13)                                03S0078
         SLR   R15,R15                                          03S0078
         IC    R15,QVPL+39(,@10)                                03S0078
*       /*************************************************************/
*       /*                                                           */
*       /* REFERENCE OUTPUT DATA AREA                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0079
*       IF QVPLODA^=0 THEN                                      03S0079
@RC00076 DS    0H                                               03S0079
@RC00074 L     @10,QVPLPTR(,R13)                                03S0079
         L     @10,QVPLODA(,@10)                                03S0079
         LTR   @10,@10                                          03S0079
         BZ    @RF00079                                         03S0079
*         DO;                                                   03S0080
*           R15PTR8=ODA(1);         /* REFERENCE FIRST BYTE          */
         SLR   R15PTR8,R15PTR8                                  03S0081
         IC    R15PTR8,ODA(,@10)                                03S0081
*           R15PTR8=ODA(4+QVODSIZE);/* REFERENCE LAST BYTE           */
         SLR   @08,@08                                          03S0082
         IC    @08,QVODSIZE(,@10)                               03S0082
         SLR   R15PTR8,R15PTR8                                  03S0082
         IC    R15PTR8,ODA+3(@08,@10)                           03S0082
*         END;                                                  03S0083
*     END;                                                      03S0084
@RF00079 DS    0H                                               03S0085
*   IF S15^=24                      /* IF VALID                      */
*     THEN                                                      02S0085
@RC00070 CLC   S15(4,R13),@CF00087                              02S0085
         BE    @RF00085                                         02S0085
*     DO;                                                       02S0086
*                                                               02S0086
*       /*************************************************************/
*       /*                                                           */
*       /* PERFORM INITIALIZATION                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0087
*                                                               03S0087
*/********************************************************************/
*/*  INIT - THIS SEGMENT PERFORMS BASIC INITIALIZATION               */
*/*      IT FIRST CLEARS THE WORK AREA, AND THEN FILLS               */
*/*      IN INDICATORS, DEPENDING ON THE TYPE OF QUEUE AND           */
*/*      ON THE VALUES IN THE QUEUE HEADER AND TRAILER.              */
*/*      INPUT:                                                      */
*/*        WRKREG (R3)                                               */
*/*          =1, FOR A TYPE 1 QUEUE                                  */
*/*          =2, FOR A TYPE 2 QUEUE                                  */
*/*          =3, FOR A TYPE 3 QUEUE                                  */
*/*        R13 = ADDRESS OF 72 BYTE REGISTER SAVE AREA.              */
*/********************************************************************/
*                                                               03S0087
*       WAPTR=QVPLWKA;              /* GET ADDR OF WORK AREA         */
         L     @10,QVPLPTR(,R13)                                03S0087
         L     WAPTR,QVPLWKA(,@10)                              03S0087
*       WKA='0'B;                   /* ZERO ENTIRE WORK AREA         */
         XC    WKA+1(35,WAPTR),WKA+1(WAPTR)                     03S0088
         MVI   WKA(WAPTR),B'00000000'                           03S0088
*       QTYPE=WRKREG;               /* INDICATE TYPE OF QUEUE        */
         STC   WRKREG,QTYPE(,WAPTR)                             03S0089
*       RESPECIFY                                               03S0090
*         WRKREG UNRSTD;                                        03S0090
*                                                               03S0090
*       /*************************************************************/
*       /*                                                           */
*       /* SET HN TO 1 IF THE HEADER INDICATES NO ELEMENTS           */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0091
*       IF((QVPLHDR->PTR31)=QVPLNOEL×(QVPLHD3=YES&QVPLHDR->PTR24=NOELM3
*           ))                      /* IF NO ELEMENTS                */
*         THEN                                                  03S0091
         L     @08,QVPLHDR(,@10)                                03S0091
         CLC   PTR31(4,@08),QVPLNOEL(@10)                       03S0091
         BE    @RT00091                                         03S0091
         TM    QVPLHD3(@10),B'10000000'                         03S0091
         BNO   @RF00091                                         03S0091
         CLC   PTR24(3,@08),NOELM3(@10)                         03S0091
         BNE   @RF00091                                         03S0091
@RT00091 DS    0H                                               03S0092
*         HN=YES;                   /* SET SWITCH                    */
         OI    HN(WAPTR),B'01000000'                            03S0092
*       ELSE                                                    03S0093
*                                                               03S0093
*         /***********************************************************/
*         /*                                                         */
*         /* SET HQ TO 1 IF THE HEADER CONTAINS THE ADDRESS OF A     */
*         /* QUEUE ELEMENT.                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                               03S0093
*         DO;                                                   03S0093
*                                                               03S0093
         B     @RC00091                                         03S0093
@RF00091 DS    0H                                               03S0094
*           /*********************************************************/
*           /*                                                       */
*           /* VERIFY CONTENTS OF HEADER                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0094
*           RESPECIFY                                           03S0094
*             R0 RSTD;                                          03S0094
*           R0=QVPLHDR->PTR31;                                  03S0095
         L     @10,QVPLPTR(,R13)                                03S0095
         L     @08,QVPLHDR(,@10)                                03S0095
         L     R0,PTR31(,@08)                                   03S0095
*           R1=S0;                                              03S0096
         L     R1,S0(,R13)                                      03S0096
*           CALL EVR;                                           03S0097
         L     @15,QVPLEVR(,@10)                                03S0097
         BALR  @14,@15                                          03S0097
*           RESPECIFY                                           03S0098
*             R15 RSTD;                                         03S0098
*           RESPECIFY                                           03S0099
*             R0 UNRSTD;                                        03S0099
*           R1=S1;                                              03S0100
         L     R1,S1(,R13)                                      03S0100
*           WAPTR=QVPLWKA;          /* RESTORE R2                    */
         L     @14,QVPLPTR(,R13)                                03S0101
         L     WAPTR,QVPLWKA(,@14)                              03S0101
*           IF R15^=8               /* IF VALID                      */
*             THEN                                              03S0102
         C     R15,@CF00058                                     03S0102
         BE    @RF00102                                         03S0102
*             HQ=YES;               /* TURN ON SWITCH                */
         OI    HQ(WAPTR),B'10000000'                            03S0103
*           RESPECIFY                                           03S0104
*             R15 UNRSTD;                                       03S0104
@RF00102 DS    0H                                               03S0105
*         END;                                                  03S0105
*       IF QTYPE>1                  /* IF QUEUE HAS TRAILER          */
*         THEN                                                  03S0106
@RC00091 CLI   QTYPE(WAPTR),1                                   03S0106
         BNH   @RF00106                                         03S0106
*         DO;                                                   03S0107
*                                                               03S0107
*           /*********************************************************/
*           /*                                                       */
*           /* SET TN TO 1 IF THE QUEUE TRAILER INDICATES NO ELEMENTS*/
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0108
*           IF((QVPLTRLR->PTR31)=QVPLNOEL×(QVPLTR3=YES&QVPLTRLR->PTR24=
*               NOELM3))            /* IF NO ELEMENTS                */
*             THEN                                              03S0108
         L     @10,QVPLPTR(,R13)                                03S0108
         L     @08,QVPLTRLR(,@10)                               03S0108
         CLC   PTR31(4,@08),QVPLNOEL(@10)                       03S0108
         BE    @RT00108                                         03S0108
         TM    QVPLTR3(@10),B'10000000'                         03S0108
         BNO   @RF00108                                         03S0108
         CLC   PTR24(3,@08),NOELM3(@10)                         03S0108
         BNE   @RF00108                                         03S0108
@RT00108 DS    0H                                               03S0109
*             TN=YES;               /* SET SWITCH                    */
         OI    TN(WAPTR),B'01000000'                            03S0109
*           ELSE                                                03S0110
*                                                               03S0110
*             /*******************************************************/
*             /*                                                     */
*             /* SET TQ TO 1 IF THE TRAILER POINTS TO A QUEUE        */
*             /* ELEMENT.                                            */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0110
*             DO;                                               03S0110
*                                                               03S0110
         B     @RC00108                                         03S0110
@RF00108 DS    0H                                               03S0111
*               /*****************************************************/
*               /*                                                   */
*               /* VERIFY CONTENTS OF TRAILER                        */
*               /*                                                   */
*               /*****************************************************/
*                                                               03S0111
*               RESPECIFY                                       03S0111
*                 R0 RSTD;                                      03S0111
*               R0=QVPLTRLR->PTR31; /* ADDR FOR VERIFICATION         */
         L     @10,QVPLPTR(,R13)                                03S0112
         L     @08,QVPLTRLR(,@10)                               03S0112
         L     R0,PTR31(,@08)                                   03S0112
*               R1=S0;              /* SET UP PARM REGISTER          */
         L     R1,S0(,R13)                                      03S0113
*               CALL EVR;           /* VERIFY ADDRESS                */
         L     @15,QVPLEVR(,@10)                                03S0114
         BALR  @14,@15                                          03S0114
*               RESPECIFY                                       03S0115
*                 R0 UNRSTD;                                    03S0115
*               RESPECIFY                                       03S0116
*                 R15 RSTD;                                     03S0116
*               R1=S1;              /* RESTORE PARM LIST ADDR        */
         L     R1,S1(,R13)                                      03S0117
*               WAPTR=QVPLWKA;      /* RESTORE R2                    */
         L     @14,QVPLPTR(,R13)                                03S0118
         L     WAPTR,QVPLWKA(,@14)                              03S0118
*               IF R15^=8           /* IF VALID                      */
*                 THEN                                          03S0119
         C     R15,@CF00058                                     03S0119
         BE    @RF00119                                         03S0119
*                 TQ=YES;           /* SET SWITCH                    */
         OI    TQ(WAPTR),B'10000000'                            03S0120
*               RESPECIFY                                       03S0121
*                 R15 UNRSTD;                                   03S0121
@RF00119 DS    0H                                               03S0122
*             END;                                              03S0122
*         END;                                                  03S0123
*                                                               03S0123
@RC00108 DS    0H                                               03S0124
*/********************************************************************/
*/* END OF INIT                                                      */
*/*      OUTPUT:                                                     */
*/*       THE OUTPUT FROM THIS SEGMENT DEFINES THE STANDARD          */
*/*       INPUTS TO ALL OTHER SEGMENTS.                              */
*/*         WAPTR (R2) - CONTAINS THE ADDRESS OF THE WORK AREA.      */
*/*         QTYPE = CONTAINS INDICATOR OF THE TYPE OF QUEUE.         */
*/*               = 1, FOR A SINGLE-THREADED QUEUE WITH HEADER ONLY  */
*/*               =2, FOR A SINGLE-THREADED QUEUE WITH HEADER AND    */
*/*                 TRAILER.                                         */
*/*               =3, FOR A DOUBLE-THREADED QUEUE.                   */
*/*                                                                  */
*/*        HQ=0, IF THE HEADER DOES NOT POINT TO AN ELEMENT.         */
*/*          =1, IF THE HEADER POINTS TO A QUEUE ELEMENT.            */
*/*                                                                  */
*/*        HN =0, IF THE HEADER DOES NOT INDICATE NO ELEMENTS.       */
*/*           =1, IF THE HEADER INDICATES THERE ARE NO ELEMENTS.     */
*/*                                                                  */
*/*        TN = 1, IF THE TRAILER INDICATES THERE ARE NO ELEMENTS.   */
*/*           =0, IF IT DOES NOT INDICATE NO ELEMENTS.               */
*/*                                                                  */
*/*        TQ = 1, IF THE TRAILER POINTS TO A QUEUE ELEMENT.         */
*/*           = 0, IF THE TRAILER DOES NOT POINT TO A QUEUE ELEMENT. */
*/*                                                                  */
*/*        R13 = CONTAINS THE ADDRESS OF THE 72-BYTE REGISTER SAVE   */
*/*          AREA, WHICH CONTAINS THE REGISTERS ON ENTRY.            */
*/*                                                                  */
*/*      OTHER OUTPUT:                                               */
*/*        R3-R7 = VOLATILE                                          */
*/*        R0,R14,R15 = VOLATILE                                     */
*/****************************************************************** */
*                                                               03S0124
*       IF HN=YES                   /* IF HEADER SHOWS NO ELEMENTS   */
*           &(QTYPE=1×TN=YES)       /* TRAILER SHOWS NO ELEMENTS OR
*                                      THERE IS NO TRAILER           */
*         THEN                                                  02S0124
*                                                               02S0124
@RF00106 TM    HN(WAPTR),B'01000000'                            02S0124
         BNO   @RF00124                                         02S0124
         CLI   QTYPE(WAPTR),1                                   02S0124
         BE    @RT00124                                         02S0124
         TM    TN(WAPTR),B'01000000'                            02S0124
         BNO   @RF00124                                         02S0124
@RT00124 DS    0H                                               02S0125
*         /***********************************************************/
*         /*                                                         */
*         /* THE QUEUE IS EMPTY--NO ERRORS                           */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0125
*         S15=0;                    /* INDICATE NO ERRORS            */
         SLR   @10,@10                                          02S0125
         ST    @10,S15(,R13)                                    02S0125
*       ELSE                                                    02S0126
*                                                               02S0126
*         /***********************************************************/
*         /*                                                         */
*         /* THE QUEUE IS NOT EMPTY                                  */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0126
*         DO;                                                   02S0126
         B     @RC00124                                         02S0126
@RF00124 DS    0H                                               02S0127
*           IF QTYPE>=2             /* QUEUE HAS TRAILER             */
*             THEN                                              02S0127
         CLI   QTYPE(WAPTR),2                                   02S0127
         BL    @RF00127                                         02S0127
*             DO;                                               02S0128
*                                                               02S0128
*               /*****************************************************/
*               /*                                                   */
*               /* VALIDATE FORWARD CHAIN IN LAST ELEMENT            */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0129
*                                                               03S0129
*/********************************************************************/
*/*  FIXLAST -   THIS SEGMENT  VALIDATES AND CORRECTS THE FORWARD    */
*/*  CHAIN FIELD OF THE QUEUE ELEMENT POINTED TO BY THE Q  TRAILER.  */
*/*  IT WILL INSURE THAT THE  FORWARD CHAIN FIELD CONTAINS THE       */
*/*  LAST-ELEMENT INDICATOR (QVPLLELM)                               */
*/*      INPUT:                                                      */
*/*        STANDARD INPUT (SEE SEGMENT INIT)                         */
*/********************************************************************/
*                                                               03S0129
*               IF TQ=YES           /* TRAILER GOOD                  */
*                 THEN                                          03S0129
         TM    TQ(WAPTR),B'10000000'                            03S0129
         BNO   @RF00129                                         03S0129
*                 DO;                                           03S0130
*                   RESPECIFY                                   03S0131
*                     WRKREG RSTD;                              03S0131
*                   WRKREG=(QVPLTRLR->PTR24)+QVPLFPTR;/* GET ADDRESS
*                                      OF FORWARD CHAIN FIELD        */
         L     @10,QVPLPTR(,R13)                                03S0132
         L     @08,QVPLTRLR(,@10)                               03S0132
         L     WRKREG,PTR24-1(,@08)                             03S0132
         LA    WRKREG,0(,WRKREG)                                03S0132
         AH    WRKREG,QVPLFPTR(,@10)                            03S0132
*                   IF WRKREG->PTR24^=LASTELM3/* IF NOT THE LAST
*                                      INDICATOR                     */
*                       ×(QVPLFP3=NO&WRKREG->PTR31^=QVPLLELM) THEN
*                                                               03S0133
         CLC   PTR24(3,WRKREG),LASTELM3(@10)                    03S0133
         BNE   @RT00133                                         03S0133
         TM    QVPLFP3(@10),B'10000000'                         03S0133
         BNZ   @RF00133                                         03S0133
         CLC   PTR31(4,WRKREG),QVPLLELM(@10)                    03S0133
         BE    @RF00133                                         03S0133
@RT00133 DS    0H                                               03S0134
*                     /***********************************************/
*                     /*                                             */
*                     /* ERROR CONDITION - RECORD ERROR AND CORRECT  */
*                     /* BY STORING QVPLLELM INTO THE FORWARD CHAIN. */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0134
*                     DO;                                       03S0134
*                       RESPECIFY                               03S0135
*                         WRKREG UNRSTD;                        03S0135
*                       ERRPARM=BADLAST;/* INDIC ERROR               */
         MVI   ERRPARM(WAPTR),X'0A'                             03S0136
*                       ERRELM=QVPLTRLR->PTR31;/* ADDR OF BAD ELEMENT*/
         L     @10,QVPLPTR(,R13)                                03S0137
         L     @08,QVPLTRLR(,@10)                               03S0137
         MVC   ERRELM(3,WAPTR),PTR31+1(@08)                     03S0137
*                       CORRECT=QVPLLELM;/* INDIC CORRECT VALUE      */
         L     @10,QVPLLELM(,@10)                               03S0138
         ST    @10,CORRECT(,WAPTR)                              03S0138
*                       CALL RECORD;/* RECORD AND CORRECT            */
         BAL   @14,RECORD                                       03S0139
*                     END;                                      03S0140
*                 END;                                          03S0141
*                                                               03S0141
@RF00133 DS    0H                                               03S0142
*/********************************************************************/
*/* END OF FIXLAST                                                   */
*/*      OUTPUT:                                                     */
*/*        WRKREG (R3) - VOLATILE                                    */
*/********************************************************************/
*                                                               03S0142
*               IF QTYPE=3          /* IF DBL-THREAD                 */
*                 THEN                                          02S0142
@RF00129 CLI   QTYPE(WAPTR),3                                   02S0142
         BNE   @RF00142                                         02S0142
*                 DO;                                           02S0143
*                                                               02S0143
*                   /*************************************************/
*                   /*                                               */
*                   /* CHECK OUT BACK CHAIN OF FIRST ELEMENT         */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0144
*                                                               03S0144
*/********************************************************************/
*/*   FIXFIRST -                                                     */
*/*  THIS SEGMENT INSURES THAT THE BACKWARD CHAIN FIELD OF THE       */
*/*  POINTED TO BY THE QUEUE HEADER CONTAINS THE FIRST-ELEMENT       */
*/*  INDICATOR (QVPLFELM) .  IF IT DOES NOT, THE ERROR WILL BE       */
*/*  RECORDED AND THE CHAIN FIELD WILL BE CORRECTED.                 */
*/*      INPUT:                                                      */
*/*        STANDARD INPUT  (SEE SEGMENT INIT)                        */
*/********************************************************************/
*                                                               03S0144
*                   IF HQ=YES       /* HEADER GOOD                   */
*                     THEN                                      03S0144
         TM    HQ(WAPTR),B'10000000'                            03S0144
         BNO   @RF00144                                         03S0144
*                     DO;                                       03S0145
*                       RESPECIFY                               03S0146
*                         WRKREG RSTD;                          03S0146
*                       WRKREG=(QVPLHDR->PTR24)+QVPLBPTR;/* GET 03S0147
*                                      ADDRESS OF BACK CHAIN PTR OF
*                                      FIRST ELEMENT                 */
         L     @10,QVPLPTR(,R13)                                03S0147
         L     @08,QVPLHDR(,@10)                                03S0147
         L     WRKREG,PTR24-1(,@08)                             03S0147
         LA    WRKREG,0(,WRKREG)                                03S0147
         AH    WRKREG,QVPLBPTR(,@10)                            03S0147
*                       IF WRKREG->PTR24^=FRSTELM3/* IF NOT THE FIRST
*                                      ELEMENT INDICATOR             */
*                           ×(QVPLBP3=NO&WRKREG->PTR31^=QVPLFELM) THEN
*                                                               03S0148
         CLC   PTR24(3,WRKREG),FRSTELM3(@10)                    03S0148
         BNE   @RT00148                                         03S0148
         TM    QVPLBP3(@10),B'10000000'                         03S0148
         BNZ   @RF00148                                         03S0148
         CLC   PTR31(4,WRKREG),QVPLFELM(@10)                    03S0148
         BE    @RF00148                                         03S0148
@RT00148 DS    0H                                               03S0149
*                         /*******************************************/
*                         /*                                         */
*                         /* ERROR CONDITION - RECORD AND CORRECT THE*/
*                         /* BACKWARD CHAIN FIELD OF THE FIRST       */
*                         /* ELEMENT.                                */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0149
*                         DO;                                   03S0149
*                           RESPECIFY                           03S0150
*                             WRKREG UNRSTD;                    03S0150
*                           ERRPARM=BADFRST;/* INDIC ERROR           */
         MVI   ERRPARM(WAPTR),X'0B'                             03S0151
*                           ERRELM=QVPLHDR->PTR31;/* ADDR OF BAD
*                                      ELEMENT                       */
         L     @10,QVPLPTR(,R13)                                03S0152
         L     @08,QVPLHDR(,@10)                                03S0152
         MVC   ERRELM(3,WAPTR),PTR31+1(@08)                     03S0152
*                           CORRECT=QVPLFELM;/* INDIC CORRECT VALUE  */
         L     @10,QVPLFELM(,@10)                               03S0153
         ST    @10,CORRECT(,WAPTR)                              03S0153
*                           CALL RECORD;/* RECORD AND CORRECT        */
         BAL   @14,RECORD                                       03S0154
*                         END;                                  03S0155
*                     END;                                      03S0156
*                                                               03S0156
@RF00148 DS    0H                                               03S0157
*/********************************************************************/
*/*  END OF FIXFIRST                                                 */
*/*      OUTPUT:                                                     */
*/*       WRKREG (R3) - VOLATILE                                     */
*/********************************************************************/
*                                                               03S0157
*                 END;                                          02S0157
@RF00144 DS    0H                                               02S0158
*             END;                                              02S0158
*                                                               02S0158
@RF00142 DS    0H                                               02S0159
*           /*********************************************************/
*           /*                                                       */
*           /* INDICATE FORWARD SCAN                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0159
*           DIR=FORWARD;                                        02S0159
@RF00127 MVI   DIR(WAPTR),X'01'                                 02S0159
*           NDIR=BACKWARD;                                      02S0160
*                                                               02S0160
         MVI   NDIR(WAPTR),X'02'                                02S0160
*           /*********************************************************/
*           /*                                                       */
*           /* DO A FORWARD SCAN                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0161
*           CALL SCAN;                                          02S0161
*                                                               02S0161
         BAL   @14,SCAN                                         02S0161
*           /*********************************************************/
*           /*                                                       */
*           /* THE QUEUE HAS NOW BEEN SCANNED GOING FORWARD. IF AN   */
*           /* ERROR HAS BEEN FOUND ON THE SCAN, ERRVAL1 WILL BE     */
*           /* NON-ZERO.                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0162
*           IF QTYPE^=1             /* QUEUE HAS TRAILER             */
*               &ERRVAL1=0          /* NO ERRORS FOUND ON SCAN       */
*               &TQ=YES             /* TRAILER POINTS TO ELEMENT     */
*               &LASTFWD^=QVPLTRLR->PTR24/* TRAILER DOES NOT POINT TO
*                                      THE LAST FOUND                */
*             THEN                                              02S0162
*                                                               02S0162
         CLI   QTYPE(WAPTR),1                                   02S0162
         BE    @RF00162                                         02S0162
         CLI   ERRVAL1(WAPTR),0                                 02S0162
         BNE   @RF00162                                         02S0162
         TM    TQ(WAPTR),B'10000000'                            02S0162
         BNO   @RF00162                                         02S0162
         L     @10,QVPLPTR(,R13)                                02S0162
         L     @10,QVPLTRLR(,@10)                               02S0162
         CLC   LASTFWD(3,WAPTR),PTR24(@10)                      02S0162
         BE    @RF00162                                         02S0162
*             /*******************************************************/
*             /*                                                     */
*             /* ALTHOUGH THE FORWARD SCAN SHOWED NO ERRORS, THE LAST*/
*             /* ELEMENT ON THE SCAN WAS NOT THE ONE POINTED TO BY   */
*             /* THE QUEUE TRAILER. ASSUME THAT THE FORWARD CHAIN    */
*             /* POINTER OF THE LAST ELEMENT ON THE FORWARD SCAN IS  */
*             /* IN ERROR.                                           */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0163
*             ERRVAL1=BADFCHN;      /* INDICATE ERROR                */
         MVI   ERRVAL1(WAPTR),X'04'                             02S0163
*           IF TQ=NO                /* IF TRAILER NO GOOD            */
*               &                   /* AND                           */
*               QTYPE>1             /* QUEUE HAS A TRAILER           */
*             THEN                                              02S0164
@RF00162 TM    TQ(WAPTR),B'10000000'                            02S0164
         BNZ   @RF00164                                         02S0164
         CLI   QTYPE(WAPTR),1                                   02S0164
         BNH   @RF00164                                         02S0164
*             ERRVAL2=BADTAIL;      /* INDICATE ERROR                */
*                                                               02S0165
         MVI   ERRVAL2(WAPTR),X'03'                             02S0165
*           /*********************************************************/
*           /*                                                       */
*           /* IF NO ERRORS HAVE BEEN FOUND BY NOW, THEN THE QUEUE   */
*           /* STRUCTURE IS VALID. OTHERWISE VALIDATION MUST         */
*           /* CONTINUE.                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0166
*           IF ERRVAL1^=0×ERRVAL2^=0/* IF AN ERROR FOUND             */
*             THEN                                              02S0166
*                                                               02S0166
@RF00164 CLI   ERRVAL1(WAPTR),0                                 02S0166
         BNE   @RT00166                                         02S0166
         CLI   ERRVAL2(WAPTR),0                                 02S0166
         BE    @RF00166                                         02S0166
@RT00166 DS    0H                                               02S0167
*             /*******************************************************/
*             /*                                                     */
*             /* AN ERROR HAS BEEN FOUND                             */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0167
*             DO;                                               02S0167
*               IF QTYPE=3          /* IF A DOUBLE-THREAD            */
*                 THEN                                          02S0168
         CLI   QTYPE(WAPTR),3                                   02S0168
         BNE   @RF00168                                         02S0168
*                 DO;                                           02S0169
*                                                               02S0169
*                   /*************************************************/
*                   /*                                               */
*                   /* DO A BACKWARD SCAN                            */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0170
*                   DIR=BACKWARD;                               02S0170
         MVI   DIR(WAPTR),X'02'                                 02S0170
*                   NDIR=FORWARD;                               02S0171
         MVI   NDIR(WAPTR),X'01'                                02S0171
*                   CALL SCAN;                                  02S0172
*                                                               02S0172
         BAL   @14,SCAN                                         02S0172
*                   /*************************************************/
*                   /*                                               */
*                   /* THE QUEUE HAS NOW BEEN SCANNED BACKWARD. IF AN*/
*                   /* ERROR IN THE BACKWARD CHAIN WAS FOUND, ERRVAL2*/
*                   /* WILL BE NON-ZERO.                             */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0173
*                   IF ERRVAL2=0    /* IF NO ERRORS ON SCAN          */
*                       &HQ=YES     /* HEADER POINTS TO ELEMENT      */
*                     THEN                                      02S0173
         CLI   ERRVAL2(WAPTR),0                                 02S0173
         BNE   @RF00173                                         02S0173
         TM    HQ(WAPTR),B'10000000'                            02S0173
         BNO   @RF00173                                         02S0173
*                     IF LASTBAK^=QVPLHDR->PTR24/* HEADER DOES NOT
*                                      POINT TO LAST FOUND GOING
*                                      BACKWARDS                     */
*                       THEN                                    02S0174
*                                                               02S0174
         L     @10,QVPLPTR(,R13)                                02S0174
         L     @10,QVPLHDR(,@10)                                02S0174
         CLC   LASTBAK(3,WAPTR),PTR24(@10)                      02S0174
         BE    @RF00174                                         02S0174
*                       /*********************************************/
*                       /*                                           */
*                       /* ALTHOUGH NO ERRORS WERE FOUND ON THE      */
*                       /* BACKWARD CHAIN, THE BACKWARD CHAIN DOES   */
*                       /* NOT MEET THE ELEMENT POINTED TO BY THE    */
*                       /* QUEUE HEADER. ASSUME THAT THE BACKWARD    */
*                       /* CHAIN POINTER IS BAD.                     */
*                       /*                                           */
*                       /*********************************************/
*                                                               02S0175
*                       ERRVAL2=BADBCHN;/* INDICATE ERROR            */
         MVI   ERRVAL2(WAPTR),X'05'                             02S0175
*                     ELSE                                      02S0176
*                                                               02S0176
*                       /*********************************************/
*                       /*                                           */
*                       /* THE BACKWARD CHAIN IS COMPLETE. IF THERE  */
*                       /* HAD BEEN ANY ERROS IN THE FORWARD CHAIN   */
*                       /* POINTERS, THEN THEY WOULD HAVE BEEN       */
*                       /* CORRECTED BY THE FIXNEXT SEGMENT INVOKED  */
*                       /* DURING THE BACKWARD SCAN. THEREFORE,      */
*                       /* NULLIFY THE FORWARD CHAIN ERROR.          */
*                       /*                                           */
*                       /*********************************************/
*                                                               02S0176
*                       ERRVAL1=0;  /* ALL FORWARD CHAIN ERRORS HAVE
*                                      BEEN CORRECTED.               */
         B     @RC00174                                         02S0176
@RF00174 MVI   ERRVAL1(WAPTR),X'00'                             02S0176
*                 END;                                          02S0177
@RC00174 DS    0H                                               02S0177
@RF00173 DS    0H                                               02S0178
*               IF ERRVAL1^=0×ERRVAL2^=0/* IF THERE ARE ANY     02S0178
*                                      OUTSTANDING ERRORS            */
*                 THEN                                          02S0178
@RF00168 CLI   ERRVAL1(WAPTR),0                                 02S0178
         BNE   @RT00178                                         02S0178
         CLI   ERRVAL2(WAPTR),0                                 02S0178
         BE    @RF00178                                         02S0178
@RT00178 DS    0H                                               02S0179
*                 DO;                                           02S0179
*                                                               02S0179
*                   /*************************************************/
*                   /*                                               */
*                   /* REPAIR THE QUEUE                              */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0180
*                                                               03S0180
*/********************************************************************/
*/*         FIXQ                                                     */
*/*     IF AN ERROR IN THE QUEUE STRUCTURE IS DETECTED, THIS         */
*/*  SEGMENT ANALYZES THE  ERROR AND ATTEMPTS TO RECONSTRUCT THE     */
*/* QUEUE IF POSSIBLE.                                               */
*/*      INPUT:                                                      */
*/*        STANDARD INPUT (SEE SEGMENT INIT)                         */
*/*        LASTBAK = ADDRESS OF LAST ELEMENT FOUND                   */
*/*          ON A BACKWARDS ON A DOUBLE-THREADED QUEUE.              */
*/*        LASTFWD = ADDRESS OF THE LAST ELEMENT FOUND               */
*/*             GOING FORWARD ON THE QUEUE.                          */
*/*        ERRVAL1 = A CODE INDICATING THE TYPE OF ERROR             */
*/*           FOUND ON A FORWARD SCAN. ZERO IF NO ERRORS             */
*/*        ERRVAL2 = A CODE INDICATING THE TYPE OF ERROR             */
*/*          FOUND ON A BACKWARD SCAN OF THE QUEUE. ZERO             */
*/*          IF THERE ARE NO ERRORS.                                 */
*/********************************************************************/
*/*                                                                  */
*                                                               03S0180
*                   IF QTYPE=2&TQ=YES/* IF TYPE 2 AND GOOD TRAILER   */
*                     THEN                                      03S0180
         CLI   QTYPE(WAPTR),2                                   03S0180
         BNE   @RF00180                                         03S0180
         TM    TQ(WAPTR),B'10000000'                            03S0180
         BNO   @RF00180                                         03S0180
*                     LASTBAK=QVPLTRLR->PTR31;/* INITIALIZE VARIABLE */
         L     @10,QVPLPTR(,R13)                                03S0181
         L     @10,QVPLTRLR(,@10)                               03S0181
         MVC   LASTBAK(3,WAPTR),PTR31+1(@10)                    03S0181
*                   IF HQ=NO        /* THE HEADER IS BAD             */
*                     THEN                                      03S0182
*                                                               03S0182
@RF00180 TM    HQ(WAPTR),B'10000000'                            03S0182
         BNZ   @RF00182                                         03S0182
*                     /***********************************************/
*                     /*                                             */
*                     /* THE HEADER IS BAD. FIX IT BY STORING        */
*                     /* QVPLNOEL INTO IT OR STORING THE ADDRESS OF  */
*                     /* THE LAST ELEMENT FOUND GOING BACKWARDS.     */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0183
*                     DO;                                       03S0183
*                       IF(QTYPE=1×TQ=NO)/* IF Q HAS NO TRAILER OR
*                                      TRAILER IS BAD                */
*                         THEN                                  03S0184
         CLI   QTYPE(WAPTR),1                                   03S0184
         BE    @RT00184                                         03S0184
         TM    TQ(WAPTR),B'10000000'                            03S0184
         BNZ   @RF00184                                         03S0184
@RT00184 DS    0H                                               03S0185
*                         CORRECT=QVPLNOEL;/* INDICATE NO ELEMENTS   */
         L     @10,QVPLPTR(,R13)                                03S0185
         L     @10,QVPLNOEL(,@10)                               03S0185
         ST    @10,CORRECT(,WAPTR)                              03S0185
*                       ELSE                                    03S0186
*                         CORRECT=LASTBAK;/* POINT TO LAST FOUND
*                                      GOING BACKWARDS               */
         B     @RC00184                                         03S0186
@RF00184 SLR   @10,@10                                          03S0186
         ICM   @10,7,LASTBAK(WAPTR)                             03S0186
         ST    @10,CORRECT(,WAPTR)                              03S0186
*                       ERRPARM=BADHEAD;/* INDICATE BAD HEADER       */
@RC00184 MVI   ERRPARM(WAPTR),X'02'                             03S0187
*                       CALL RECORD;/* RECORD AND REPAIR             */
         BAL   @14,RECORD                                       03S0188
*                     END;                                      03S0189
*                   IF TQ=NO&QTYPE>1/* IF TRAILER IS BAD             */
*                     THEN                                      03S0190
*                                                               03S0190
@RF00182 TM    TQ(WAPTR),B'10000000'                            03S0190
         BNZ   @RF00190                                         03S0190
         CLI   QTYPE(WAPTR),1                                   03S0190
         BNH   @RF00190                                         03S0190
*                     /***********************************************/
*                     /*                                             */
*                     /* THE TRAILER IS BAD. FIX IT TO QVPLNOEL OR TO*/
*                     /* THE ADDRESS OF THE LAST ELEMENT FOUND ON THE*/
*                     /* FORWARD CHAIN.                              */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0191
*                     DO;                                       03S0191
*                       IF HQ=YES   /* IF HEADER GOOD                */
*                         THEN                                  03S0192
         TM    HQ(WAPTR),B'10000000'                            03S0192
         BNO   @RF00192                                         03S0192
*                         CORRECT=LASTFWD;/* SET TRLR TO LAST ELEM
*                                      FOUND GOING FORWARD           */
         SLR   @10,@10                                          03S0193
         ICM   @10,7,LASTFWD(WAPTR)                             03S0193
         ST    @10,CORRECT(,WAPTR)                              03S0193
*                       ELSE                                    03S0194
*                         CORRECT=QVPLNOEL;/* SET TRAILER TO NONE    */
         B     @RC00192                                         03S0194
@RF00192 L     @10,QVPLPTR(,R13)                                03S0194
         L     @10,QVPLNOEL(,@10)                               03S0194
         ST    @10,CORRECT(,WAPTR)                              03S0194
*                       ERRPARM=BADTAIL;/* SET ERROR CODE            */
@RC00192 MVI   ERRPARM(WAPTR),X'03'                             03S0195
*                       CALL RECORD;/* RECORD/REPAIR                 */
         BAL   @14,RECORD                                       03S0196
*                     END;                                      03S0197
*                   IF ERRVAL1>BADTAIL/* IF ERROR IN FORWARD CHAIN   */
*                     THEN                                      03S0198
*                                                               03S0198
@RF00190 CLI   ERRVAL1(WAPTR),3                                 03S0198
         BNH   @RF00198                                         03S0198
*                     /***********************************************/
*                     /*                                             */
*                     /* THE FORWARD CHAIN IS BAD. CHANGE THE CHAIN  */
*                     /* POINTER OF THE LAST ELEMENT FOUND ON THAT   */
*                     /* CHAIN TO EITHER QVPLLELM OR TO THE ADDRESS  */
*                     /* OF THE LAST ELEMENT FOUND ON THE BACKWARD   */
*                     /* CHAIN.                                      */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0199
*                     DO;                                       03S0199
*                       IF TQ=YES   /* IF TRLR GOOD                  */
*                         THEN                                  03S0200
         TM    TQ(WAPTR),B'10000000'                            03S0200
         BNO   @RF00200                                         03S0200
*                         CORRECT=LASTBAK;/* POINT ELEM TO LAST FOUND
*                                      BACKWARDS                     */
         SLR   @10,@10                                          03S0201
         ICM   @10,7,LASTBAK(WAPTR)                             03S0201
         ST    @10,CORRECT(,WAPTR)                              03S0201
*                       ELSE        /* NO TRLR OR BAD TRLR           */
*                         CORRECT=QVPLLELM;/* MAKE IT THE LAST ONE   */
         B     @RC00200                                         03S0202
@RF00200 L     @10,QVPLPTR(,R13)                                03S0202
         L     @10,QVPLLELM(,@10)                               03S0202
         ST    @10,CORRECT(,WAPTR)                              03S0202
*                       ERRPARM=ERRVAL1;/* SET ERROR CODE            */
@RC00200 IC    @10,ERRVAL1(,WAPTR)                              03S0203
         STC   @10,ERRPARM(,WAPTR)                              03S0203
*                       ERRELM=LASTFWD;/* GIVE BAD ELEMENT           */
         MVC   ERRELM(3,WAPTR),LASTFWD(WAPTR)                   03S0204
*                       CALL RECORD;/* RECORD/REPAIR                 */
         BAL   @14,RECORD                                       03S0205
*                     END;                                      03S0206
*                   IF ERRVAL2>BADTAIL/* ERROR IN BACKWARD CHAIN     */
*                     THEN                                      03S0207
*                                                               03S0207
@RF00198 CLI   ERRVAL2(WAPTR),3                                 03S0207
         BNH   @RF00207                                         03S0207
*                     /***********************************************/
*                     /*                                             */
*                     /* THE BACKWARD CHAIN IS BAD. CHANGE THE       */
*                     /* BACKWARD CHAIN POINTER OF THE LAST ELEMENT  */
*                     /* FOUND ON THAT CHAIN TO EITHER QVPLFELM OR TO*/
*                     /* THE ADDRESS OF THE LAST ELEMENT FOUND ON THE*/
*                     /* FORWARD CHAIN.                              */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0208
*                     DO;                                       03S0208
*                       IF HQ=YES   /* IF HEADER GOOD                */
*                         THEN                                  03S0209
         TM    HQ(WAPTR),B'10000000'                            03S0209
         BNO   @RF00209                                         03S0209
*                         CORRECT=LASTFWD;/* SET CHAIN PTR TO ADDR OF
*                                      LAST ON FORWARD SCAN          */
         SLR   @10,@10                                          03S0210
         ICM   @10,7,LASTFWD(WAPTR)                             03S0210
         ST    @10,CORRECT(,WAPTR)                              03S0210
*                       ELSE        /* HEADER BAD                    */
*                         CORRECT=QVPLFELM;/* MAKE IT FIRST ELEMENT  */
         B     @RC00209                                         03S0211
@RF00209 L     @10,QVPLPTR(,R13)                                03S0211
         L     @10,QVPLFELM(,@10)                               03S0211
         ST    @10,CORRECT(,WAPTR)                              03S0211
*                       ERRPARM=ERRVAL2;/* SET ERROR CODE            */
@RC00209 IC    @10,ERRVAL2(,WAPTR)                              03S0212
         STC   @10,ERRPARM(,WAPTR)                              03S0212
*                       ERRELM=LASTBAK;/* SPEC ADDR OF BAD ELEM      */
         MVC   ERRELM(3,WAPTR),LASTBAK(WAPTR)                   03S0213
*                       CALL RECORD;/* RECORD/REPAIR                 */
         BAL   @14,RECORD                                       03S0214
*                     END;                                      03S0215
*                                                               03S0215
*/********************************************************************/
*/* END OF FIXQ                                                      */
*/********************************************************************/
*                                                               03S0216
*                 END;                                          02S0216
@RF00207 DS    0H                                               02S0217
*             END;                                              02S0217
*                                                               02S0217
@RF00178 DS    0H                                               02S0218
*           /*********************************************************/
*           /*                                                       */
*           /* THE QUEUE STRUCTURE IS NOW VALID. REMOVE BAD ELEMENTS */
*           /* FROM THE QUEUE                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0218
*                                                               03S0218
*/********************************************************************/
*/*  RMVBAD -  THIS SEGMENT REMOVES ELEMENTS WITH BAD DATA FROM 03S0218
*     THE QUEUE.  PRIOR TO THIS THE QUEUE STRUCTURE HAS BEEN VALIDATED
*    AND/OR CORRECTED.  THE QUEUE WILL BE SCANNED, AND THE ELEMENT
*    VERIFICATION ROUTINE INVOKED FOR EACH ELEMENT.  IF A RETURN
*    CODE OF 4 IS PASSED BACK, THE ELEMENT IS REMOVED FROM THE QUEUE.
*    NOTE:  SINCE PRIOR  CHAIN VALIDATION HAS BEEN DONE, THERE SHOULD
*    BE NO RETURN CODES OF 8 PASSED BACK FROM THE EVR.               */
*/********************************************************************/
*                                                               03S0218
*           IF QVPLHDR->PTR24^=NOELM3/* IF THERE ARE ELEMENTS        */
*               ×(QVPLHD3=NO&QVPLHDR->PTR31^=QVPLNOEL) THEN     03S0218
@RF00166 L     @10,QVPLPTR(,R13)                                03S0218
         L     @08,QVPLHDR(,@10)                                03S0218
         CLC   PTR24(3,@08),NOELM3(@10)                         03S0218
         BNE   @RT00218                                         03S0218
         TM    QVPLHD3(@10),B'10000000'                         03S0218
         BNZ   @RF00218                                         03S0218
         CLC   PTR31(4,@08),QVPLNOEL(@10)                       03S0218
         BE    @RF00218                                         03S0218
@RT00218 DS    0H                                               03S0219
*             DO;                                               03S0219
*               CURRENT=QVPLHDR->PTR24;/* GET ADDR OF FIRST  @ZA07522*/
         L     @10,QVPLPTR(,R13)                                03S0220
         L     @10,QVPLHDR(,@10)                                03S0220
         L     @10,PTR24-1(,@10)                                03S0220
         LA    @10,0(,@10)                                      03S0220
         ST    @10,CURRENT(,WAPTR)                              03S0220
*               PREV=0;             /* INITIALIZE PREVIOUS           */
         SLR   PREV,PREV                                        03S0221
*               DO WHILE CURRENT^=0;/* WHILE THERE ARE ELEMENTS      */
         B     @DE00222                                         03S0222
@DL00222 DS    0H                                               03S0223
*                 NEXT=(CURRENT+QVPLFPTR)->PTR24;/* NEXT ADDR   03S0223
*                                                            @ZA07522*/
         L     @10,QVPLPTR(,R13)                                03S0223
         LH    @08,QVPLFPTR(,@10)                               03S0223
         AL    @08,CURRENT(,WAPTR)                              03S0223
         L     @08,PTR24-1(,@08)                                03S0223
         LA    @08,0(,@08)                                      03S0223
         ST    @08,NEXT(,WAPTR)                                 03S0223
*                 IF NEXT=QVPLLELM  /* IF THIS IS LAST ELEMENT       */
*                     ×(NEXT3=LASTELM3&QVPLFP3=YES) THEN        03S0224
         C     @08,QVPLLELM(,@10)                               03S0224
         BE    @RT00224                                         03S0224
         CLC   NEXT3(3,WAPTR),LASTELM3(@10)                     03S0224
         BNE   @RF00224                                         03S0224
         TM    QVPLFP3(@10),B'10000000'                         03S0224
         BNO   @RF00224                                         03S0224
@RT00224 DS    0H                                               03S0225
*                   NEXT=0;                                     03S0225
         SLR   @10,@10                                          03S0225
         ST    @10,NEXT(,WAPTR)                                 03S0225
*                 RESPECIFY                                     03S0226
*                   R0 RSTD;                                    03S0226
@RF00224 DS    0H                                               03S0227
*                 R0=CURRENT3;                                  03S0227
         L     R0,CURRENT3-1(,WAPTR)                            03S0227
         ICM   R0,8,@CB00272                                    03S0227
*                 R1=S0;            /* SET UP PARM VALUE             */
         L     R1,S0(,R13)                                      03S0228
*                 CALL EVR;                                     03S0229
         L     @10,QVPLPTR(,R13)                                03S0229
         L     @15,QVPLEVR(,@10)                                03S0229
         BALR  @14,@15                                          03S0229
*                 R1=S1;            /* RESTORE R1                    */
         L     R1,S1(,R13)                                      03S0230
*                 WAPTR=QVPLWKA;    /* RESTORE R2                    */
         L     @10,QVPLPTR(,R13)                                03S0231
         L     WAPTR,QVPLWKA(,@10)                              03S0231
*                 RESPECIFY                                     03S0232
*                   R15 RSTD;                                   03S0232
*                 RESPECIFY                                     03S0233
*                   R0 UNRSTD;                                  03S0233
*                 IF R15=4 THEN                                 03S0234
         C     R15,@CF00133                                     03S0234
         BNE   @RF00234                                         03S0234
*                   DO;                                         03S0235
*                     RESPECIFY                                 03S0236
*                       R15 UNRSTD;                             03S0236
*                                                               03S0236
*                     /***********************************************/
*                     /*                                             */
*                     /* DEQUEUE THE ELEMENT                         */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0237
*                                                               04S0237
*/********************************************************************/
*/*  DQELM                                                           */
*/*  THIS SEGMENT  DEQUEUES AN ELEMENT FROM THE QUEUE.               */
*/*  INPUT:                                                          */
*/*       PREV       = CONTAINS EITHER 0 IF THIS IS THE TOP ELEMENT  */
*/*           ON THE QUEUE, OR IF IT IS NOT THE TOP ELEMENT, IT      */
*/*           CONTAINS THE ADDRESS OF THE PREVIOUS ELEMENT.          */
*/*       NEXT       = CONTAINS EITHER THE ADDRESS OF THE NEXT       */
*/*          ELEMENT ON THE QUEUE, OR ZERO IF THIS IS THE LAST       */
*/*          ELEMENT.                                                */
*/*      OTHER STANDARD INPUTS.                                      */
*/********************************************************************/
*                                                               04S0237
*                     RESPECIFY                                 04S0237
*                      (WRKREG,                                 04S0237
*                       WRKRG2) RSTD;                           04S0237
*                     IF PREV=0     /* FIRST ELEMENT                 */
*                       THEN                                    04S0238
         SLR   @08,@08                                          04S0238
         CR    PREV,@08                                         04S0238
         BNE   @RF00238                                         04S0238
*                       IF NEXT=0   /* LAST ELEMENT                  */
*                         THEN                                  04S0239
*                                                               04S0239
         C     @08,NEXT(,WAPTR)                                 04S0239
         BNE   @RF00239                                         04S0239
*                         /*******************************************/
*                         /*                                         */
*                         /* THE ONLY ELEMENT ON THE QUEUE.          */
*                         /*                                         */
*                         /*******************************************/
*                                                               04S0240
*                         DO;                                   04S0240
*                           WRKREG=QVPLNOEL;/* VALUE FOR HEADER      */
         L     @10,QVPLNOEL(,@10)                               04S0241
         LR    WRKREG,@10                                       04S0241
*                           WRKRG2=QVPLNOEL;/* VALUE FOR TRAILER     */
         LR    WRKRG2,@10                                       04S0242
*                         END;                                  04S0243
*                       ELSE        /* NOT LAST                      */
*                                                               04S0244
*                         /*******************************************/
*                         /*                                         */
*                         /* THE FIRST BUT NOT THE ONLY ELEMENT .    */
*                         /*                                         */
*                         /*******************************************/
*                                                               04S0244
*                         DO;                                   04S0244
         B     @RC00239                                         04S0244
@RF00239 DS    0H                                               04S0245
*                           WRKREG=NEXT;/* VALUE FOR HEADER          */
         L     WRKREG,NEXT(,WAPTR)                              04S0245
*                           WRKRG2=QVPLFELM;/* VALUE FOR BACKWARD
*                                      CHAIN IN NEXT                 */
         L     @10,QVPLPTR(,R13)                                04S0246
         L     WRKRG2,QVPLFELM(,@10)                            04S0246
*                         END;                                  04S0247
*                     ELSE          /* NOT FIRST ELEMENT             */
*                       IF NEXT=0   /* IF LAST ELEMENT               */
*                         THEN                                  04S0248
*                                                               04S0248
         B     @RC00238                                         04S0248
@RF00238 L     @10,NEXT(,WAPTR)                                 04S0248
         LTR   @10,@10                                          04S0248
         BNZ   @RF00248                                         04S0248
*                         /*******************************************/
*                         /*                                         */
*                         /* THE LAST ELEMENT BUT NOT THE FIRST.     */
*                         /*                                         */
*                         /*******************************************/
*                                                               04S0249
*                         DO;                                   04S0249
*                           WRKREG=QVPLLELM;/* VALUE FOR FORWARD
*                                      CHAIN OF PREVIOUS ELEMENT     */
         L     @10,QVPLPTR(,R13)                                04S0250
         L     WRKREG,QVPLLELM(,@10)                            04S0250
*                           WRKRG2=PREV;/* VALUE FOR TRAILER         */
         LR    WRKRG2,PREV                                      04S0251
*                         END;                                  04S0252
*                       ELSE        /* NOT LAST ELEMENT              */
*                                                               04S0253
*                         /*******************************************/
*                         /*                                         */
*                         /* NEITHER THE FIRST NOR THE LAST ELEMENT. */
*                         /*                                         */
*                         /*******************************************/
*                                                               04S0253
*                         DO;                                   04S0253
         B     @RC00248                                         04S0253
@RF00248 DS    0H                                               04S0254
*                           WRKREG=NEXT;/* VALUE FOR FORWARD CHAIN IN
*                                      PREVIOUS                      */
         L     WRKREG,NEXT(,WAPTR)                              04S0254
*                           WRKRG2=PREV;/* VALUE FOR BACKWARD CHAIN
*                                      IN NEXT                       */
         LR    WRKRG2,PREV                                      04S0255
*                         END;                                  04S0256
*                     IF PREV=0     /* TOP ELEMENT                   */
*                       THEN                                    04S0257
*                                                               04S0257
@RC00248 DS    0H                                               04S0257
@RC00238 LTR   PREV,PREV                                        04S0257
         BNZ   @RF00257                                         04S0257
*                       /*********************************************/
*                       /*                                           */
*                       /* FIRST ELEMENT - UPDATE THE HEADER.        */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0258
*                       IF QVPLHD3=YES/* IF 3-BYTE FIELD             */
*                         THEN                                  04S0258
         L     @10,QVPLPTR(,R13)                                04S0258
         TM    QVPLHD3(@10),B'10000000'                         04S0258
         BNO   @RF00258                                         04S0258
*                         QVPLHDR->PTR24=WRKREG;                04S0259
         L     @10,QVPLHDR(,@10)                                04S0259
         STCM  WRKREG,7,PTR24(@10)                              04S0259
*                       ELSE                                    04S0260
*                         QVPLHDR->PTR31=WRKREG;                04S0260
         B     @RC00258                                         04S0260
@RF00258 L     @10,QVPLPTR(,R13)                                04S0260
         L     @10,QVPLHDR(,@10)                                04S0260
         ST    WRKREG,PTR31(,@10)                               04S0260
*                     ELSE          /* NOT TOP ELEMENT               */
*                                                               04S0261
*                       /*********************************************/
*                       /*                                           */
*                       /* NOT THE FIRST ELEMENT- UPDATE THE FORWARD */
*                       /* CHAIN OF PREVIOUS                         */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0261
*                       IF QVPLFP3=YES THEN                     04S0261
         B     @RC00257                                         04S0261
@RF00257 L     @10,QVPLPTR(,R13)                                04S0261
         TM    QVPLFP3(@10),B'10000000'                         04S0261
         BNO   @RF00261                                         04S0261
*                         EVAL(PREV+QVPLFPTR)->PTR24=WRKREG;/* CHANGE
*                                      3-BYTE CHAIN                  */
         LR    @08,PREV                                         04S0262
         AH    @08,QVPLFPTR(,@10)                               04S0262
         STCM  WRKREG,7,PTR24(@08)                              04S0262
*                       ELSE                                    04S0263
*                         EVAL(PREV+QVPLFPTR)->PTR31=WRKREG;/* CHANGE
*                                      4-BYTE CHAIN                  */
         B     @RC00261                                         04S0263
@RF00261 L     @10,QVPLPTR(,R13)                                04S0263
         LR    @08,PREV                                         04S0263
         AH    @08,QVPLFPTR(,@10)                               04S0263
         ST    WRKREG,PTR31(,@08)                               04S0263
*                     IF NEXT=0     /* BOTTOM ELEMENT                */
*                         &QTYPE>=2 /* QUEUE HAS TRAILER             */
*                       THEN                                    04S0264
*                                                               04S0264
@RC00261 DS    0H                                               04S0264
@RC00257 L     @10,NEXT(,WAPTR)                                 04S0264
         LTR   @10,@10                                          04S0264
         BNZ   @RF00264                                         04S0264
         CLI   QTYPE(WAPTR),2                                   04S0264
         BL    @RF00264                                         04S0264
*                       /*********************************************/
*                       /*                                           */
*                       /* LAST ELEMENT - UPDATE THE TRAILER.        */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0265
*                       IF QVPLTR3=YES THEN                     04S0265
         L     @10,QVPLPTR(,R13)                                04S0265
         TM    QVPLTR3(@10),B'10000000'                         04S0265
         BNO   @RF00265                                         04S0265
*                         QVPLTRLR->PTR24=WRKRG2;/* CHANGE 3-BYTE
*                                      TRAILER                       */
         L     @10,QVPLTRLR(,@10)                               04S0266
         STCM  WRKRG2,7,PTR24(@10)                              04S0266
*                       ELSE                                    04S0267
*                         QVPLTRLR->PTR31=WRKRG2;/* CHANGE 4-BYTE
*                                      TRAILER                       */
         B     @RC00265                                         04S0267
@RF00265 L     @10,QVPLPTR(,R13)                                04S0267
         L     @10,QVPLTRLR(,@10)                               04S0267
         ST    WRKRG2,PTR31(,@10)                               04S0267
*                     IF NEXT^=0    /* IF NOT THE BOTTOM ELEM        */
*                         &QTYPE=3  /* DOUBLE THREAD QUEUE           */
*                       THEN                                    04S0268
*                                                               04S0268
@RC00265 DS    0H                                               04S0268
@RF00264 L     @10,NEXT(,WAPTR)                                 04S0268
         LTR   @10,@10                                          04S0268
         BZ    @RF00268                                         04S0268
         CLI   QTYPE(WAPTR),3                                   04S0268
         BNE   @RF00268                                         04S0268
*                       /*********************************************/
*                       /*                                           */
*                       /* NOT THE LAST - UPDATE THE BACKWARD CHAIN  */
*                       /* OF THE NEXT ELEMENT.                      */
*                       /*                                           */
*                       /*********************************************/
*                                                               04S0269
*                       DO;                                     04S0269
*                         IF QVPLBP3=YES/* IF 3-BYTE BACK CHAIN      */
*                           THEN                                04S0270
         L     @08,QVPLPTR(,R13)                                04S0270
         TM    QVPLBP3(@08),B'10000000'                         04S0270
         BNO   @RF00270                                         04S0270
*                           EVAL(NEXT+QVPLBPTR)->PTR24=WRKRG2;/*
*                                      UPDATE 3-BYTE CHAIN           */
         AH    @10,QVPLBPTR(,@08)                               04S0271
         STCM  WRKRG2,7,PTR24(@10)                              04S0271
*                         ELSE                                  04S0272
*                           EVAL(NEXT+QVPLBPTR)->PTR31=WRKRG2;/*
*                                      UPDATE 4-BYTE CHAIN           */
         B     @RC00270                                         04S0272
@RF00270 L     @10,QVPLPTR(,R13)                                04S0272
         LH    @10,QVPLBPTR(,@10)                               04S0272
         AL    @10,NEXT(,WAPTR)                                 04S0272
         ST    WRKRG2,PTR31(,@10)                               04S0272
*                       END;                                    04S0273
@RC00270 DS    0H                                               04S0274
*                     RESPECIFY                                 04S0274
*                      (WRKREG,                                 04S0274
*                       WRKRG2) UNRSTD;                         04S0274
*                                                               04S0274
@RF00268 DS    0H                                               04S0275
*/********************************************************************/
*/*  END OF DQELM                                                    */
*/*      OUTPUT -                                                    */
*/*        WRKREG (R3) - VOLATILE                                    */
*/*        WRKRG2 (R4) - VOLATILE                                    */
*/********************************************************************/
*                                                               04S0275
*                     ERRPARM=BADDATA;                          03S0275
         MVI   ERRPARM(WAPTR),X'01'                             03S0275
*                     ERRELM=CURRENT;                           03S0276
         MVC   ERRELM(3,WAPTR),CURRENT+1(WAPTR)                 03S0276
*                     CALL RECORD;  /* RECORD THE ERROR              */
         BAL   @14,RECORD                                       03S0277
*                   END;                                        03S0278
*                 ELSE                                          03S0279
*                   PREV=CURRENT;                               03S0279
         B     @RC00234                                         03S0279
@RF00234 L     PREV,CURRENT(,WAPTR)                             03S0279
*                 CURRENT=NEXT;                                 03S0280
@RC00234 L     @10,NEXT(,WAPTR)                                 03S0280
         ST    @10,CURRENT(,WAPTR)                              03S0280
*               END;                                            03S0281
@DE00222 L     @10,CURRENT(,WAPTR)                              03S0281
         LTR   @10,@10                                          03S0281
         BNZ   @DL00222                                         03S0281
*             END;                                              03S0282
*         END;                                                  02S0283
*                                                               02S0283
@RF00218 DS    0H                                               02S0284
*       /*************************************************************/
*       /*                                                           */
*       /* ALL QUEUE VALIDATION HAS NOW BEEN DONE. THE REMAINING CODE*/
*       /* FINISHES RECORDING.                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0284
*       IF QVPLODA^=0               /* THERE IS AN ODA               */
*           &QVODSIZE-QVODUSED>=4   /* THERE IS ROOM TO RECORD       */
*           &ERRCODE^=0             /* THERE IS AN ERROR             */
*         THEN                                                  02S0284
@RC00124 L     @10,QVPLPTR(,R13)                                02S0284
         L     @10,QVPLODA(,@10)                                02S0284
         LTR   @10,@10                                          02S0284
         BZ    @RF00284                                         02S0284
         LA    @08,4                                            02S0284
         SLR   @03,@03                                          02S0284
         IC    @03,QVODUSED(,@10)                               02S0284
         SLR   @00,@00                                          02S0284
         IC    @00,QVODSIZE(,@10)                               02S0284
         SLR   @00,@03                                          02S0284
         CR    @00,@08                                          02S0284
         BL    @RF00284                                         02S0284
         CLI   ERRCODE(R13),0                                   02S0284
         BE    @RF00284                                         02S0284
*         DO;                                                   02S0285
*           QVODR15=ERRR15;         /* RECORD REG 15                 */
         LR    @15,@10                                          02S0286
         ALR   @15,@08                                          02S0286
         ALR   @15,@03                                          02S0286
         MVC   QVODR15(4,@15),ERRR15(R13)                       02S0286
*           QVODUSED=QVODUSED+      /* INCREMENT BYTES USED          */
*               LENGTH(QVODCMMN)+NREC*LENGTH(QVODENT);          02S0287
         ALR   @03,@08                                          02S0287
         SLR   @08,@08                                          02S0287
         IC    @08,NREC(,R13)                                   02S0287
         SLA   @08,4                                            02S0287
         ALR   @03,@08                                          02S0287
         STC   @03,QVODUSED(,@10)                               02S0287
*         END;                                                  02S0288
*     END;                                                      02S0289
*                                                               01S0290
*/********************************************************************/
*/*  INCLUDED HERE ARE THE INTERNAL PROCEDURES                       */
*/********************************************************************/
*                                                               01S0290
*   RESPECIFY                                                   01S0290
*    (SAVERET1,                                                 01S0290
*     SAVERET2) RSTD;                                           01S0290
*                                                               02S0291
*/********************************************************************/
*/*      SCAN -                                                      */
*/* THIS SEGMENT WILL SCAN A CHAIN, EITHER FORWARD OR BACKWARD       */
*/* AND WILL INDICATE IF THE CHAIN IS BROKEN AT SOME POINT.          */
*/* THE CHAIN IS BROKEN IF IT IS CIRCULAR OR IF THE LAST QUEUE       */
*/* ELEMENT FOUND DOES NOT CONTAIN THE PROPER 'LAST-ELEMENT'         */
*/* INDICATION.                                                      */
*/********************************************************************/
*                                                               02S0291
*   RESPECIFY                                                   02S0291
*     R14 RSTD;                                                 02S0291
*SCAN:                                                          02S0292
*   PROC OPTIONS(NOSAVE NOSAVEAREA);                            02S0292
@EL00001 DS    0H                                               02S0292
@EF00001 DS    0H                                               02S0292
@ER00001 LM    @14,@12,12(@13)                                  02S0292
         BR    @14                                              02S0292
SCAN     DS    0H                                               02S0293
*   SAVERET1=R14;                   /* SAVE RETURN REGISTER          */
         LR    SAVERET1,R14                                     02S0293
*   RESPECIFY                                                   02S0294
*     R14 UNRSTD;                                               02S0294
*   ERRREG=0;                                                   02S0295
         SLR   ERRREG,ERRREG                                    02S0295
*   CURRENT=0;                                                  02S0296
         SLR   @03,@03                                          02S0296
         ST    @03,CURRENT(,WAPTR)                              02S0296
*   IF HTQ(DIR)=YES                 /* IF HEADER(TRAILER) POINTS TO A
*                                      QUEUE ELEMENT                 */
*     THEN                                                      02S0297
         SLR   @03,@03                                          02S0297
         IC    @03,DIR(,WAPTR)                                  02S0297
         LR    @15,@03                                          02S0297
         MH    @15,@CH00163                                     02S0297
         ALR   @15,WAPTR                                        02S0297
         AL    @15,@CF00273                                     02S0297
         TM    HTQ(@15),B'10000000'                             02S0297
         BNO   @RF00297                                         02S0297
*     DO;                                                       02S0298
*       CURRENT=HDRTLR(DIR)->PTR24; /* GET ADDR OF FIRST ELEM        */
         MH    @03,@CH00032                                     02S0299
         L     @15,QVPLPTR(,R13)                                02S0299
         L     @14,HDRTLR-12(@03,@15)                           02S0299
         L     @00,PTR24-1(,@14)                                02S0299
         ICM   @00,8,@CB00272                                   02S0299
         ST    @00,CURRENT(,WAPTR)                              02S0299
*       NEXT=(CURRENT+FBOFFSET(DIR))->PTR31;/* GET NEXT ELEMENT      */
         LH    @03,FBOFFSET-12(@03,@15)                         02S0300
         N     @03,@CF00274                                     02S0300
         ALR   @00,@03                                          02S0300
         LR    @03,@00                                          02S0300
         L     @03,PTR31(,@03)                                  02S0300
         ST    @03,NEXT(,WAPTR)                                 02S0300
*       COUNT=2;                    /* INITIALIZE THE CIRCULARITY
*                                      COUNT                         */
         MVC   COUNT(3,WAPTR),@CF00111+1                        02S0301
*     END;                                                      02S0302
*   ELSE                                                        02S0303
*                                                               02S0303
*     /***************************************************************/
*     /*                                                             */
*     /* THE HEADER(TRAILER DOES NOT POINT TO A QUEUE ELEMENT. IT IS */
*     /* ASSUMED TO BE BAD SINCE EMPTY QUEUES HAVE BEEN HANDLED      */
*     /* EARLIER.                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0303
*     ERRREG=BADHEAD;               /* INDICATE BAD HEADER OR TRAILER*/
*                                                               02S0303
         B     @RC00297                                         02S0303
@RF00297 LA    ERRREG,2                                         02S0303
*   /*****************************************************************/
*   /*                                                               */
*   /* CONTINUE TO SCAN THROUGH THE QUEUE UNTIL AN ERROR IS FOUND OR */
*   /* UNTIL THE END OF THE CHAIN IS REACHED.                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0304
*   DO WHILE ERRREG=0               /* ERROR NOT YET DETECTED        */
*         &                         /* AND                           */
*         (NEXT3^=LASTFST3(DIR)     /* THIS IS NOT THE LAST ELEMENT
*                                      OR                            */
*         ×(FB3(DIR)=NO             /* THE CHAIN POINTER IS 4 BYTES
*                                      AND                           */
*         &NEXT^=LASTFST(DIR)))     /* THIS IS NOT THE LAST          */
*         ;                                                     02S0304
@RC00297 B     @DE00304                                         02S0304
@DL00304 DS    0H                                               02S0305
*     IF NEXT3^=0                   /* IF THE CHAIN FIELD IS NOT ZERO*/
*       THEN                                                    02S0305
         L     @03,NEXT3-1(,WAPTR)                              02S0305
         LA    @03,0(,@03)                                      02S0305
         LTR   @03,@03                                          02S0305
         BZ    @RF00305                                         02S0305
*       DO;                                                     02S0306
*         RESPECIFY                                             02S0307
*           R0 RSTD;                                            02S0307
*                                                               02S0307
*         /***********************************************************/
*         /*                                                         */
*         /* INVOKE THE USERS ELEMENT VERIFICATION ROUTINE AND CHECK */
*         /* FOR A RETURN CODE OF 8,MEANING THAT THE ADDRESS DOES NOT*/
*         /* CONTAIN A QUEUE ELEMENT.                                */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0308
*         R1=S0;                    /* INIT PARAMETER REGISTER       */
         L     R1,S0(,R13)                                      02S0308
*         R0=NEXT3;                 /* PASS ADDR TO BE VERIFIED      */
         LR    R0,@03                                           02S0309
*         CALL EVR;                 /* VERIFY ADDRESS                */
         L     @03,QVPLPTR(,R13)                                02S0310
         L     @15,QVPLEVR(,@03)                                02S0310
         BALR  @14,@15                                          02S0310
*         RESPECIFY                                             02S0311
*           R15 RSTD;                                           02S0311
*         RESPECIFY                                             02S0312
*           R0 UNRSTD;                                          02S0312
*         R1=S1;                    /* RESTORE R1                    */
         L     R1,S1(,R13)                                      02S0313
*         WAPTR=QVPLWKA;            /* RESTORE R2                    */
         L     @14,QVPLPTR(,R13)                                02S0314
         L     WAPTR,QVPLWKA(,@14)                              02S0314
*         IF R15^=8                 /* IF IT IS A QUEUE ELEMENT      */
*           THEN                                                02S0315
         C     R15,@CF00058                                     02S0315
         BE    @RF00315                                         02S0315
*           DO;                                                 02S0316
*             RESPECIFY                                         02S0317
*               R15 UNRSTD;                                     02S0317
*                                                               02S0317
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK FOR CIRCULARITY                               */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0318
*                                                               03S0318
*/********************************************************************/
*/* CIRCCHEK                                                         */
*/*  THIS SEGMENT INSURES THAT THE  QUEUE IS NOT CIRCULAR. IT        */
*/*  SCANS THE QUEUE IN THE DIRECTION INDICATED BY THE DIR VALUE.    */
*/*  IF THE ELEMENT INDICATED BY THE 'NEXT' VALUE (R10) IS FOUND,    */
*/*  IT IS CHECKED TO SEE  THAT IT IS IN THE POSITION ON THE QUEUE   */
*/*  INDICATED BY THE 'COUNT' VALUE.  IF IT IS NOT,  THE QUEUE       */
*/*  IS CIRCULAR.                                                    */
*/*      INPUT:                                                      */
*/*       NEXT = CONTAINS THE ADDRESS OF THE NEXT ELEMENT ON         */
*/*          THE QUEUE. THE QUEUE WILL BE SCANNED UP TO THIS ELEMENT */
*/*       COUNT  = NUMBER REPRESENTING THE POSITION ON THE QUEUE THAT*/
*/*         THE NEXT ELEMENT SHOULD BE AT.                           */
*/*       DIR = 1, IF THIS IS A FORWARD SEARCH OF THE QUEUE.         */
*/*           = 2, IF THIS IS A BACKWARD SEARCH OF THE QUEUE.        */
*/*       OTHER STANDARD INPUTS.                                03S0318
*/********************************************************************/
*                                                               03S0318
*             RESPECIFY                                         03S0318
*              (WRKREG,                                         03S0318
*               WRKRG2) RSTD;                                   03S0318
*             WRKRG2=1;             /* INITIALIZE COUNT              */
         LA    WRKRG2,1                                         03S0319
*             WRKREG=HDRTLR(DIR)->PTR24;/* GET CONTENTS OF HEADER OR
*                                      TRAILER                       */
         SLR   @05,@05                                          03S0320
         IC    @05,DIR(,WAPTR)                                  03S0320
         MH    @05,@CH00032                                     03S0320
         L     @05,HDRTLR-12(@05,@14)                           03S0320
         L     WRKREG,PTR24-1(,@05)                             03S0320
         LA    WRKREG,0(,WRKREG)                                03S0320
*             DO WHILE(WRKREG^=NEXT3);/* LOOP WHILE NEXT HAS NOT BEEN
*                                      FOUND                         */
         B     @DE00321                                         03S0321
@DL00321 DS    0H                                               03S0322
*               WRKREG=(WRKREG+FBOFFSET(DIR))->PTR24;/* GET NEXT
*                                      ELEMENT                       */
         SLR   @05,@05                                          03S0322
         IC    @05,DIR(,WAPTR)                                  03S0322
         MH    @05,@CH00032                                     03S0322
         L     @15,QVPLPTR(,R13)                                03S0322
         LR    @14,WRKREG                                       03S0322
         LH    @05,FBOFFSET-12(@05,@15)                         03S0322
         N     @05,@CF00274                                     03S0322
         ALR   @14,@05                                          03S0322
         L     @05,PTR24-1(,@14)                                03S0322
         LA    @05,0(,@05)                                      03S0322
         LR    WRKREG,@05                                       03S0322
*               WRKRG2=WRKRG2+1;    /* BUMP COUNT                    */
         AL    WRKRG2,@CF00081                                  03S0323
*             END;                                              03S0324
@DE00321 L     @05,NEXT3-1(,WAPTR)                              03S0324
         LA    @05,0(,@05)                                      03S0324
         CR    WRKREG,@05                                       03S0324
         BNE   @DL00321                                         03S0324
*             IF WRKRG2^=COUNT THEN                             03S0325
         L     @05,COUNT-1(,WAPTR)                              03S0325
         LA    @05,0(,@05)                                      03S0325
         CR    WRKRG2,@05                                       03S0325
         BE    @RF00325                                         03S0325
*               ERRREG=CIRCFCHN;    /* INDICATE CIRCULAR CHAIN       */
         LA    ERRREG,6                                         03S0326
*             RESPECIFY                                         03S0327
*              (WRKREG,                                         03S0327
*               WRKRG2) UNRSTD;                                 03S0327
*                                                               03S0327
@RF00325 DS    0H                                               03S0328
*/********************************************************************/
*/* END OF CIRCHEK -                                                 */
*/*      OUTPUT -                                                    */
*/*       WRKRG2 (R4) - VOLATILE                                     */
*/*       WRKREG (R3) - VOLATILE                                     */
*/*       ERRREG (R9) - 6, IF THE QUEUE IS CIRCULAR.                 */
*/********************************************************************/
*                                                               03S0328
*                                                               02S0328
*             /*******************************************************/
*             /*                                                     */
*             /* IF THE QUEUE IS CIRCULAR, ERRREG WILL CONTAIN THE   */
*             /* VALUE 6.                                            */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0328
*             IF ERRREG=0           /* IF NOT CIRCULAR               */
*               THEN                                            02S0328
         LTR   ERRREG,ERRREG                                    02S0328
         BNZ   @RF00328                                         02S0328
*               DO;                                             02S0329
*                 IF QTYPE=3        /* IF DOUBLE-THREADED            */
*                   THEN                                        02S0330
         CLI   QTYPE(WAPTR),3                                   02S0330
         BNE   @RF00330                                         02S0330
*                   DO;                                         02S0331
*                                                               02S0331
*                     /***********************************************/
*                     /*                                             */
*                     /* FIX THE NEXT ELEMENT ON THE QUEUE           */
*                     /*                                             */
*                     /***********************************************/
*                                                               02S0332
*                                                               03S0332
*/*  FIXNEXT - THIS SEGMENT INSURES THAT ON A DOUBLE-THREADED   03S0332
*    QUEUE THE NEXT ELEMENT ON THE QUEUE  POINTS BACK TO THE    03S0332
*    CURRENT ELEMENT ON THE QUEUE.  IF THIS IS A FORWARD SCAN,  03S0332
*    IT WILL INSURE THAT THE BACKWARD POINTER OF THE NEXT       03S0332
*    ELEMENT POINTS TO THE CURRENT.  IF THIS IS A BACKWARD      03S0332
*    SCAN, IT WILL INSURE THAT THE FORWARD POINTER OF THE       03S0332
*    PREVIOUS ELEMENT POINTS TO THE CURRENT.                         */
*                                                               03S0332
*                     IF(NEXT+FBOFFSET(NDIR))->PTR24^=CURRENT3/* IF
*                                      THE NEXT ELEMENT DOES NOT
*                                      POINT BACK TO THE CURRENT     */
*                       THEN                                    03S0332
         SLR   @03,@03                                          03S0332
         IC    @03,NDIR(,WAPTR)                                 03S0332
         MH    @03,@CH00032                                     03S0332
         L     @15,QVPLPTR(,R13)                                03S0332
         LH    @03,FBOFFSET-12(@03,@15)                         03S0332
         N     @03,@CF00274                                     03S0332
         AL    @03,NEXT(,WAPTR)                                 03S0332
         CLC   PTR24(3,@03),CURRENT3(WAPTR)                     03S0332
         BE    @RF00332                                         03S0332
*                       DO;                                     03S0333
*                         ERRPARM=BADNEXT+(DIR-1);/* INDICATE CHAIN
*                                      IN NEXT OR PREVIOUS IS BAD    */
         LA    @03,7                                            03S0334
         SLR   @00,@00                                          03S0334
         IC    @00,DIR(,WAPTR)                                  03S0334
         ALR   @03,@00                                          03S0334
         STC   @03,ERRPARM(,WAPTR)                              03S0334
*                         CORRECT=CURRENT3;/* CORRECT CHAIN TO POINT
*                                      TO THE CURRENT                */
         L     @03,CURRENT3-1(,WAPTR)                           03S0335
         LA    @03,0(,@03)                                      03S0335
         ST    @03,CORRECT(,WAPTR)                              03S0335
*                         ERRELM=NEXT3;/* INDICATE ADDRESS OF ELEMENT
*                                      WITH ERROR                    */
         MVC   ERRELM(3,WAPTR),NEXT3(WAPTR)                     03S0336
*                         CALL RECORD;/* RECORD AND REPAIR ERROR     */
         BAL   @14,RECORD                                       03S0337
*                       END;                                    03S0338
*                   END;                                        02S0339
*                                                               02S0339
@RF00332 DS    0H                                               02S0340
*                 /***************************************************/
*                 /*                                                 */
*                 /* MOVE TO NEXT ELEMENT                            */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0340
*                 CURRENT=NEXT;                                 02S0340
@RF00330 L     @03,NEXT(,WAPTR)                                 02S0340
         ST    @03,CURRENT(,WAPTR)                              02S0340
*                 NEXT=(CURRENT+FBOFFSET(DIR))->PTR31;          02S0341
         SLR   @15,@15                                          02S0341
         IC    @15,DIR(,WAPTR)                                  02S0341
         MH    @15,@CH00032                                     02S0341
         L     @14,QVPLPTR(,R13)                                02S0341
         LH    @15,FBOFFSET-12(@15,@14)                         02S0341
         N     @15,@CF00274                                     02S0341
         ALR   @03,@15                                          02S0341
         L     @03,PTR31(,@03)                                  02S0341
         ST    @03,NEXT(,WAPTR)                                 02S0341
*                 COUNT=COUNT+1;    /* INCREMENT COUNT OF ELEMENTS.
*                                      THIS COUNT IS USED WHEN  02S0342
*                                      CHECKING FOR CIRCULARITY.     */
         LA    @03,1                                            02S0342
         L     @00,COUNT-1(,WAPTR)                              02S0342
         ICM   @00,8,@CB00272                                   02S0342
         ALR   @03,@00                                          02S0342
         STCM  @03,7,COUNT(WAPTR)                               02S0342
*               END;                                            02S0343
*           END;                                                02S0344
*         ELSE                      /* A BAD CHAIN- A RETURN CODE OF
*                                      8 FROM THE EVR                */
*           ERRREG=BADFCHN;                                     02S0345
         B     @RC00315                                         02S0345
@RF00315 LA    ERRREG,4                                         02S0345
*       END;                                                    02S0346
*     ELSE                          /* CHAIN IS ZERO AND IT SHOULD
*                                      NOT BE                        */
*       ERRREG=BADFCHN;                                         02S0347
         B     @RC00305                                         02S0347
@RF00305 LA    ERRREG,4                                         02S0347
*   END;                                                        02S0348
@RC00305 DS    0H                                               02S0348
@DE00304 LTR   ERRREG,ERRREG                                    02S0348
         BNZ   @DC00304                                         02S0348
         SLR   @03,@03                                          02S0348
         IC    @03,DIR(,WAPTR)                                  02S0348
         MH    @03,@CH00032                                     02S0348
         L     @15,QVPLPTR(,R13)                                02S0348
         ALR   @03,@15                                          02S0348
         CLC   NEXT3(3,WAPTR),LASTFST3-12(@03)                  02S0348
         BNE   @DL00304                                         02S0348
         SLR   @03,@03                                          02S0348
         IC    @03,DIR(,WAPTR)                                  02S0348
         MH    @03,@CH00032                                     02S0348
         ALR   @03,@15                                          02S0348
         TM    FB3-12(@03),B'10000000'                          02S0348
         BNZ   @DC00304                                         02S0348
         SLR   @03,@03                                          02S0348
         IC    @03,DIR(,WAPTR)                                  02S0348
         MH    @03,@CH00032                                     02S0348
         L     @00,NEXT(,WAPTR)                                 02S0348
         C     @00,LASTFST-12(@03,@15)                          02S0348
         BNE   @DL00304                                         02S0348
@DC00304 DS    0H                                               02S0349
*   LSTFOUND(DIR)=CURRENT;          /* INDICATE ADDRESS OF LAST 02S0349
*                                      ELEMENT FOUND ON THE SCAN     */
         LA    @03,5                                            02S0349
         SLR   @05,@05                                          02S0349
         IC    @05,DIR(,WAPTR)                                  02S0349
         MR    @04,@03                                          02S0349
         L     @00,CURRENT(,WAPTR)                              02S0349
         ALR   @05,WAPTR                                        02S0349
         AL    @05,@CF00275                                     02S0349
         STCM  @00,7,LSTFOUND-2(@05)                            02S0349
*   IF ERRREG^=0                    /* IF ERROR ON SCAN              */
*     THEN                                                      02S0350
         LTR   ERRREG,ERRREG                                    02S0350
         BZ    @RF00350                                         02S0350
*     ERRVAL(DIR)=ERRREG+DIR-1;     /* CONVERT ERROR CODE            */
         SLR   @15,@15                                          02S0351
         IC    @15,DIR(,WAPTR)                                  02S0351
         LR    @05,@03                                          02S0351
         MR    @04,@15                                          02S0351
         ALR   @15,ERRREG                                       02S0351
         BCTR  @15,0                                            02S0351
         AL    @05,@CF00276                                     02S0351
         STC   @15,ERRVAL-1(@05,WAPTR)                          02S0351
*   RESPECIFY                                                   02S0352
*     R14 RSTD;                                                 02S0352
@RF00350 DS    0H                                               02S0353
*   R14=SAVERET1;                   /* RESTORE RETURN REGISTER       */
         LR    R14,SAVERET1                                     02S0353
*   END SCAN;                                                   02S0354
@EL00002 DS    0H                                               02S0354
@EF00002 DS    0H                                               02S0354
@ER00002 BR    @14                                              02S0354
*   RESPECIFY                                                   02S0355
*     R14 UNRSTD;                                               02S0355
*                                                               02S0356
*/****************************************************************** */
*/*     RECORD -                                                     */
*/*  THIS SUBROUTINE HANDLES RECORDING OF ERRORS AS WELL AS          */
*/* CORRECTION OF ANY ERRORS IN  THE CHAIN INFORMATION.              */
*/* IT WILL INCREMENT THE COUNT OF ERRORS DETECTED, AND IF           */
*/* RECORDING IS DONE, WILL INCREMENT THE COUNT OF RECORDED ERRORS.  */
*/* IT WILL ALSO UPDATE THE RETURN CODE VALUE TO INDICATE THE HIGHEST*/
*/* SEVERITY ERROR DETECTED SO FAR.                                  */
*/*      INPUT:                                                      */
*/*       ERRPARM = CONTAINS A CODE INDICATING THE SPECIFIC          */
*/*         ERROR.                                                   */
*/*        OTHER STANDARD INPUT (SEE SEGMENT INIT)                   */
*/*                                                                  */
*/*       IF THIS IS AN ERROR IN THE FORWARD OR BACKWARD CHAIN       */
*/*        FIELD, THEN ERRELM CONTAINS THE ADDRESS OF THE BAD        */
*/*        ELEMENT AND CORRECT CONTAINS THE VALUE THAT THE           */
*/*        CHAIN FIELD SHOULD CONTAIN.                               */
*/*                                                                  */
*/*      IF THE QUEUE HEADER IS BAD OR THE QUEUE TRAILER IS BAD,     */
*/*      THEN CORRECT CONTAINS THE VALUE THAT SHOULD BE IN THAT FIELD.
*                                                                    */
*/********************************************************************/
*                                                               02S0356
*RECORD:                                                        02S0356
*   PROC OPTIONS(NOSAVE NOSAVEAREA);                            02S0356
RECORD   DS    0H                                               02S0357
*   RESPECIFY                                                   02S0357
*     R14 RSTD;                                                 02S0357
*   SAVERET2=R14;                   /* SAVE RETURN REGISTER          */
         LR    SAVERET2,R14                                     02S0358
*   RESPECIFY                                                   02S0359
*     R14 UNRSTD;                                               02S0359
*   NDET=NDET+1;                    /* BUMP CT OF DETECTED ERRORS    */
*                                                               02S0360
         LA    @03,1                                            02S0360
         SLR   @00,@00                                          02S0360
         IC    @00,NDET(,R13)                                   02S0360
         ALR   @03,@00                                          02S0360
         STC   @03,NDET(,R13)                                   02S0360
*   /*****************************************************************/
*   /*                                                               */
*   /* UPDATE THE ERROR SVERITY INDICATION FOR OUTPUT REGISTER 15.   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0361
*   IF ERRPARM>BADDATA              /* IF ERROR MORE SEVERE THAN BAD
*                                      DATA                          */
*     THEN                                                      02S0361
         CLI   ERRPARM(WAPTR),1                                 02S0361
         BNH   @RF00361                                         02S0361
*     ERRCODE=8;                                                02S0362
         MVI   ERRCODE(R13),X'08'                               02S0362
*   ELSE                                                        02S0363
*     IF ERRCODE^=8                 /* IF HIGHER SEVERITY NOT YET
*                                      FOUND                         */
*       THEN                                                    02S0363
         B     @RC00361                                         02S0363
@RF00361 CLI   ERRCODE(R13),8                                   02S0363
         BE    @RF00363                                         02S0363
*       ERRCODE=4;                  /* INDICATE DATA ERROR           */
*                                                               02S0364
         MVI   ERRCODE(R13),X'04'                               02S0364
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR OVERFLOW OF RECORDING AREA.                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0365
*   IF QVPLODA=0×LENGTH(QVODENT)>QVODSIZE-(LENGTH(QVODCMMN)+QVODUSED+
*       LENGTH(QVODENT)*NREC)       /* IF THERE IS NO SPACE TO RECORD*/
*     THEN                                                      02S0365
@RF00363 DS    0H                                               02S0365
@RC00361 L     @03,QVPLPTR(,R13)                                02S0365
         L     @03,QVPLODA(,@03)                                02S0365
         LTR   @03,@03                                          02S0365
         BZ    @RT00365                                         02S0365
         LA    @00,4                                            02S0365
         SLR   @15,@15                                          02S0365
         IC    @15,QVODUSED(,@03)                               02S0365
         ALR   @00,@15                                          02S0365
         SLR   @15,@15                                          02S0365
         IC    @15,NREC(,R13)                                   02S0365
         SLA   @15,4                                            02S0365
         ALR   @00,@15                                          02S0365
         LCR   @00,@00                                          02S0365
         SLR   @15,@15                                          02S0365
         IC    @15,QVODSIZE(,@03)                               02S0365
         ALR   @00,@15                                          02S0365
         C     @00,@CF00127                                     02S0365
         BNL   @RF00365                                         02S0365
@RT00365 DS    0H                                               02S0366
*     ERR2MANY=YES;                 /* INDICATE OVERFLOW             */
         OI    ERR2MANY(R13),B'10000000'                        02S0366
*   ELSE                            /* ROOM TO RECORD                */
*     DO;                                                       02S0367
         B     @RC00365                                         02S0367
@RF00365 DS    0H                                               02S0368
*       NREC=NREC+1;                /* BUMP RECORDED COUNT FOR OUTPUT
*                                      REGISTER 15.                  */
         LA    @03,1                                            02S0368
         SLR   @00,@00                                          02S0368
         IC    @00,NREC(,R13)                                   02S0368
         ALR   @03,@00                                          02S0368
         STC   @03,NREC(,R13)                                   02S0368
*       QVODCDAT(NREC)=CDAT(ERRPARM);/* RECORD CONSTANT DATA         */
         SLA   @03,4                                            02S0369
         L     @15,QVPLPTR(,R13)                                02S0369
         L     @15,QVPLODA(,@15)                                02S0369
         LA    @14,4                                            02S0369
         ALR   @14,@15                                          02S0369
         SLR   @07,@07                                          02S0369
         IC    @07,QVODUSED(,@15)                               02S0369
         ALR   @14,@07                                          02S0369
         ALR   @14,@03                                          02S0369
         AL    @14,@CF00277                                     02S0369
         SLR   @03,@03                                          02S0369
         IC    @03,ERRPARM(,WAPTR)                              02S0369
         SLA   @03,2                                            02S0369
         LA    @15,CDAT-4(@03)                                  02S0369
         MVC   QVODCDAT-4(4,@14),0(@15)                         02S0369
*     END;                                                      02S0370
*   RESPECIFY                                                   02S0371
*     WRKREG RSTD;                                              02S0371
@RC00365 DS    0H                                               02S0372
*   IF ERRC(ERRPARM)=8              /* IF HEADER BAD                 */
*     THEN                                                      02S0372
*                                                               02S0372
         SLR   @15,@15                                          02S0372
         IC    @15,ERRPARM(,WAPTR)                              02S0372
         SLA   @15,2                                            02S0372
         SLR   @00,@00                                          02S0372
         IC    @00,ERRC-4(@15)                                  02S0372
         C     @00,@CF00058                                     02S0372
         BNE   @RF00372                                         02S0372
*     /***************************************************************/
*     /*                                                             */
*     /* A BAD HEADER                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0373
*     DO;                                                       02S0373
*       ERRELM=QVPLHDR;             /* SET ADDR OF HEADER            */
         L     @15,QVPLPTR(,R13)                                02S0374
         L     @00,QVPLHDR(,@15)                                02S0374
         STCM  @00,7,ERRELM(WAPTR)                              02S0374
*       LEN3BYTE=QVPLFLGH;          /* SET LENGTH INDIC              */
         MVC   LEN3BYTE(1,WAPTR),QVPLFLGH(@15)                  02S0375
*       WRKREG=ERRELM;              /* SET PTR TO BAD FIELD          */
         LR    WRKREG,@00                                       02S0376
*     END;                                                      02S0377
*   ELSE                                                        02S0378
*     IF ERRC(ERRPARM)=12           /* IF BAD TRAILER                */
*       THEN                                                    02S0378
*                                                               02S0378
         B     @RC00372                                         02S0378
@RF00372 SLR   @15,@15                                          02S0378
         IC    @15,ERRPARM(,WAPTR)                              02S0378
         SLA   @15,2                                            02S0378
         SLR   @00,@00                                          02S0378
         IC    @00,ERRC-4(@15)                                  02S0378
         C     @00,@CF00032                                     02S0378
         BNE   @RF00378                                         02S0378
*       /*************************************************************/
*       /*                                                           */
*       /* A BAD TRAILER                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0379
*       DO;                                                     02S0379
*         ERRELM=QVPLTRLR;          /* SET ADDR OF TRAILER           */
         L     @15,QVPLPTR(,R13)                                02S0380
         L     @00,QVPLTRLR(,@15)                               02S0380
         STCM  @00,7,ERRELM(WAPTR)                              02S0380
*         WRKREG=ERRELM;            /* SET ADDR OF BAD FIELD         */
         LR    WRKREG,@00                                       02S0381
*         LEN3BYTE=QVPLFLGT;        /* SET LENGTH INDIC              */
         MVC   LEN3BYTE(1,WAPTR),QVPLFLGT(@15)                  02S0382
*       END;                                                    02S0383
*     ELSE                                                      02S0384
*       IF ERRC(ERRPARM)=16         /* IF BAD FORWARD CHAIN          */
*         THEN                                                  02S0384
*                                                               02S0384
         B     @RC00378                                         02S0384
@RF00378 SLR   @15,@15                                          02S0384
         IC    @15,ERRPARM(,WAPTR)                              02S0384
         SLA   @15,2                                            02S0384
         SLR   @00,@00                                          02S0384
         IC    @00,ERRC-4(@15)                                  02S0384
         C     @00,@CF00127                                     02S0384
         BNE   @RF00384                                         02S0384
*         /***********************************************************/
*         /*                                                         */
*         /* A BAD FORWARD CHAIN                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0385
*         DO;                                                   02S0385
*           LEN3BYTE=QVPLFLGF;      /* SET LENGTH INDIC              */
         L     @15,QVPLPTR(,R13)                                02S0386
         MVC   LEN3BYTE(1,WAPTR),QVPLFLGF(@15)                  02S0386
*           WRKREG=ERRELM+QVPLFPTR; /* SET ADDR OF BAD FIELD         */
         L     WRKREG,ERRELM-1(,WAPTR)                          02S0387
         LA    WRKREG,0(,WRKREG)                                02S0387
         AH    WRKREG,QVPLFPTR(,@15)                            02S0387
*         END;                                                  02S0388
*       ELSE                                                    02S0389
*         IF ERRC(ERRPARM)=20       /* IF BAD BACK CHAIN             */
*           THEN                                                02S0389
         B     @RC00384                                         02S0389
@RF00384 SLR   @15,@15                                          02S0389
         IC    @15,ERRPARM(,WAPTR)                              02S0389
         SLA   @15,2                                            02S0389
         SLR   @00,@00                                          02S0389
         IC    @00,ERRC-4(@15)                                  02S0389
         C     @00,@CF00267                                     02S0389
         BNE   @RF00389                                         02S0389
*           DO;                                                 02S0390
*                                                               02S0390
*             /*******************************************************/
*             /*                                                     */
*             /* A BAD BACKWARD CHAIN                                */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0391
*             LEN3BYTE=QVPLFLGB;    /* SET LENGTH                    */
         L     @15,QVPLPTR(,R13)                                02S0391
         MVC   LEN3BYTE(1,WAPTR),QVPLFLGB(@15)                  02S0391
*             WRKREG=ERRELM+QVPLBPTR;/* SET ADDR OF                  */
         L     WRKREG,ERRELM-1(,WAPTR)                          02S0392
         LA    WRKREG,0(,WRKREG)                                02S0392
         AH    WRKREG,QVPLBPTR(,@15)                            02S0392
*           END;                    /* BAD FIELD                     */
*   IF ERRC(ERRPARM)^=4             /* IF NOT A DATA ERROR           */
*     THEN                                                      02S0394
*                                                               02S0394
@RF00389 DS    0H                                               02S0394
@RC00384 DS    0H                                               02S0394
@RC00378 DS    0H                                               02S0394
@RC00372 LA    @15,4                                            02S0394
         SLR   @14,@14                                          02S0394
         IC    @14,ERRPARM(,WAPTR)                              02S0394
         SLA   @14,2                                            02S0394
         SLR   @00,@00                                          02S0394
         IC    @00,ERRC-4(@14)                                  02S0394
         CR    @15,@00                                          02S0394
         BE    @RF00394                                         02S0394
*     /***************************************************************/
*     /*                                                             */
*     /* THIS IS NOT A DATA ERROR- I.E., THE CHAIN IS BAD AT SOME    */
*     /* POINT. THIS IS NOT A DEQUEUEING OPERATION.                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0395
*     DO;                                                       02S0395
*       IF ERR2MANY=NO              /* IF THERE IS SPACE             */
*         THEN                                                  02S0396
         TM    ERR2MANY(R13),B'10000000'                        02S0396
         BNZ   @RF00396                                         02S0396
*         DO;                                                   02S0397
*                                                               02S0397
*           /*********************************************************/
*           /*                                                       */
*           /* RECORD IN THE ERROR ENTRY (A) THE ADDRESS OF THE BAD  */
*           /* HEADER ,TRAILER, OR QUEUE ELEMENT AND (B) THE INVALID */
*           /* CONTENTS.                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0398
*           QVODVW1(NREC)=ERRELM;   /* RECORD ADDR OF BAD ELEM       */
         SLR   @14,@14                                          02S0398
         IC    @14,NREC(,R13)                                   02S0398
         SLA   @14,4                                            02S0398
         L     @07,QVPLPTR(,R13)                                02S0398
         L     @07,QVPLODA(,@07)                                02S0398
         ALR   @15,@07                                          02S0398
         SLR   @06,@06                                          02S0398
         IC    @06,QVODUSED(,@07)                               02S0398
         ALR   @15,@06                                          02S0398
         L     @00,ERRELM-1(,WAPTR)                             02S0398
         ICM   @00,8,@CB00272                                   02S0398
         LA    @07,0(@14,@15)                                   02S0398
         AL    @07,@CF00278                                     02S0398
         ST    @00,QVODVW1-8(,@07)                              02S0398
*           QVODVW2(NREC)=WRKREG->PTR31;/* RECORD BAD VALUE          */
         L     @00,PTR31(,WRKREG)                               02S0399
         AL    @15,@CF00276                                     02S0399
         ST    @00,QVODVW2-12(@14,@15)                          02S0399
*         END;                                                  02S0400
*                                                               02S0400
*       /*************************************************************/
*       /*                                                           */
*       /* CORRECT THE BAD FIELD                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0401
*       IF LEN3=YES                 /* IF 3-BYTE LENGTH              */
*         THEN                                                  02S0401
@RF00396 TM    LEN3(WAPTR),B'10000000'                          02S0401
         BNO   @RF00401                                         02S0401
*         WRKREG->PTR24=CORRECT;    /* FIX 3 BYTES                   */
         MVC   PTR24(3,WRKREG),CORRECT+1(WAPTR)                 02S0402
*       ELSE                                                    02S0403
*         WRKREG->PTR31=CORRECT;    /* FIX 4 BYTES                   */
         B     @RC00401                                         02S0403
@RF00401 L     @00,CORRECT(,WAPTR)                              02S0403
         ST    @00,PTR31(,WRKREG)                               02S0403
*       IF ERR2MANY=NO              /* IF SPACE AVAILABLE            */
*         THEN                                                  02S0404
@RC00401 TM    ERR2MANY(R13),B'10000000'                        02S0404
         BNZ   @RF00404                                         02S0404
*         DO;                                                   02S0405
*                                                               02S0405
*           /*********************************************************/
*           /*                                                       */
*           /* RECORD THE NEW VALUE                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0406
*           QVODVW3(NREC)=WRKREG->PTR31;/* RECORD NEW VALUE          */
         SLR   @15,@15                                          02S0406
         IC    @15,NREC(,R13)                                   02S0406
         SLA   @15,4                                            02S0406
         L     @14,QVPLPTR(,R13)                                02S0406
         L     @14,QVPLODA(,@14)                                02S0406
         LA    @07,4                                            02S0406
         ALR   @07,@14                                          02S0406
         SLR   @06,@06                                          02S0406
         IC    @06,QVODUSED(,@14)                               02S0406
         ALR   @07,@06                                          02S0406
         L     @00,PTR31(,WRKREG)                               02S0406
         ST    @00,QVODVW3-16(@15,@07)                          02S0406
*           RESPECIFY                                           02S0407
*             WRKREG UNRSTD;                                    02S0407
*         END;                                                  02S0408
*     END;                                                      02S0409
*   ELSE                            /* THIS IS A DATA ERROR          */
*                                                               02S0410
*     /***************************************************************/
*     /*                                                             */
*     /* THIS IS A DATA ERROR (ERROR CODE EQUAL TO 4). AN ELEMENT HAS*/
*     /* BEEN DEQUEUED.                                              */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0410
*     IF ERR2MANY=NO                /* IF SPACE TO RECORD            */
*       THEN                                                    02S0410
         B     @RC00394                                         02S0410
@RF00394 TM    ERR2MANY(R13),B'10000000'                        02S0410
         BNZ   @RF00410                                         02S0410
*       DO;                                                     02S0411
*                                                               02S0411
*         /***********************************************************/
*         /*                                                         */
*         /* RECORD THE ADDRESS OF THE DEQUEUED ELEMENT, THE ADDRESS */
*         /* OF THE PREVIOUS ELEMENT, AND THE ADDRESS OF THE NEXT    */
*         /* ELEMENT.                                                */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0412
*         QVODVW1(NREC)=ERRELM;     /* RECORD ADDR OF ELEM           */
         SLR   @03,@03                                          02S0412
         IC    @03,NREC(,R13)                                   02S0412
         SLA   @03,4                                            02S0412
         L     @15,QVPLPTR(,R13)                                02S0412
         L     @15,QVPLODA(,@15)                                02S0412
         LA    @14,4                                            02S0412
         ALR   @14,@15                                          02S0412
         SLR   @07,@07                                          02S0412
         IC    @07,QVODUSED(,@15)                               02S0412
         ALR   @14,@07                                          02S0412
         L     @00,ERRELM-1(,WAPTR)                             02S0412
         ICM   @00,8,@CB00272                                   02S0412
         LA    @15,0(@03,@14)                                   02S0412
         AL    @15,@CF00278                                     02S0412
         ST    @00,QVODVW1-8(,@15)                              02S0412
*         QVODVW2(NREC)=PREV;       /* RECORD ADDR OF PREVIOUS       */
         LA    @15,0(@03,@14)                                   02S0413
         AL    @15,@CF00276                                     02S0413
         ST    PREV,QVODVW2-12(,@15)                            02S0413
*         QVODVW3(NREC)=NEXT;       /* RECORD ADDR OF NEXT           */
         L     @00,NEXT(,WAPTR)                                 02S0414
         ST    @00,QVODVW3-16(@03,@14)                          02S0414
*       END;                                                    02S0415
*   RESPECIFY                                                   02S0416
*     R14 RSTD;                                                 02S0416
@RF00410 DS    0H                                               02S0416
@RC00394 DS    0H                                               02S0417
*   R14=SAVERET2;                   /* RESTORE RETURN REG            */
         LR    R14,SAVERET2                                     02S0417
*   END RECORD;                                                 02S0418
@EL00003 DS    0H                                               02S0418
@EF00003 DS    0H                                               02S0418
@ER00003 BR    @14                                              02S0418
*   RESPECIFY                                                   02S0419
*     R14 UNRSTD;                                               02S0419
*   END IEAVEQV1                                                01S0420
*                                                               01S0420
*/********************************************************************/
*                                                               01S0420
*                                                               01S0420
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSLIB  (IHAQVPL )                                       */
*/*%INCLUDE SYSLIB  (IHAQVOD )                                       */
*/*%INCLUDE SYSUT5  (COMMON  )                                       */
*/*%INCLUDE SYSUT5  (VALCHK  )                                       */
*/*%INCLUDE SYSUT5  (INIT    )                                       */
*/*%INCLUDE SYSUT5  (FIXLAST )                                       */
*/*%INCLUDE SYSUT5  (FIXFIRST)                                       */
*/*%INCLUDE SYSUT5  (FIXQ    )                                       */
*/*%INCLUDE SYSUT5  (RMVBAD  )                                       */
*/*%INCLUDE SYSUT5  (DQELM   )                                       */
*/*%INCLUDE SYSUT5  (SCAN    )                                       */
*/*%INCLUDE SYSUT5  (CIRCCHEK)                                       */
*/*%INCLUDE SYSUT5  (FIXNEXT )                                       */
*/*%INCLUDE SYSUT5  (RECORD  )                                       */
*                                                               01S0420
*       ;                                                       01S0420
@DATA    DS    0H
@CH00163 DC    H'5'
@DATD    DSECT
         DS    0F
IEAVEQV1 CSECT
         DS    0F
@CF00081 DC    F'1'
@CF00111 DC    F'2'
@CF00160 DC    F'3'
@CF00133 DC    F'4'
@CF00058 DC    F'8'
@CF00032 DC    F'12'
@CH00032 EQU   @CF00032+2
@CF00127 DC    F'16'
@CF00267 DC    F'20'
@CF00087 DC    F'24'
@CF00277 DC    F'-12'
@CF00278 DC    F'-8'
@CF00273 DC    F'-5'
@CF00276 DC    F'-4'
@CF00275 DC    F'-3'
@CF00152 DC    XL4'00000003'
@CF00274 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IEAVEQV1 CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CB00272 DC    X'00'
CDAT     DC    X'04040000'
         ORG   CDAT+0
ERRC     DS    AL1
ERRX     DS    AL1
@NM00013 DS    CL2
         ORG   CDAT+4
         DC    X'08080000'
         ORG   CDAT+8
         DC    X'0C0C0000'
         ORG   CDAT+12
         DC    X'10100000'
         ORG   CDAT+16
         DC    X'14140000'
         ORG   CDAT+20
         DC    X'10180000'
         ORG   CDAT+24
         DC    X'141C0000'
         ORG   CDAT+28
         DC    X'14200000'
         ORG   CDAT+32
         DC    X'10240000'
         ORG   CDAT+36
         DC    X'10280000'
         ORG   CDAT+40
         DC    X'142C0000'
         ORG   CDAT+44
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
WAPTR    EQU   @02
WRKREG   EQU   @03
WRKRG2   EQU   @04
SAVERET1 EQU   @08
R9       EQU   @09
ERRREG   EQU   @09
SAVERET2 EQU   @10
R11      EQU   @11
PREV     EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
R15PTR8  EQU   @15
R10      EQU   @10
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
SA       EQU   0
S15      EQU   SA+16
S0       EQU   SA+20
S1       EQU   SA+24
WKA      EQU   0
FBDES    EQU   WKA
FWDDES   EQU   FBDES
@NM00002 EQU   FWDDES
HQ       EQU   @NM00002
HN       EQU   @NM00002
ERRVAL1  EQU   FWDDES+1
LASTFWD  EQU   FWDDES+2
BWDDES   EQU   FBDES+5
@NM00004 EQU   BWDDES
TQ       EQU   @NM00004
TN       EQU   @NM00004
ERRVAL2  EQU   BWDDES+1
LASTBAK  EQU   BWDDES+2
QTYPE    EQU   WKA+10
DIR      EQU   WKA+11
NDIR     EQU   WKA+12
COUNT    EQU   WKA+13
ERRPARM  EQU   WKA+16
LEN3BYTE EQU   WKA+17
LEN3     EQU   LEN3BYTE
CORRECT  EQU   WKA+20
ERRELM   EQU   WKA+25
CURRENT  EQU   WKA+28
CURRENT3 EQU   CURRENT+1
NEXT     EQU   WKA+32
NEXT3    EQU   NEXT+1
QVPL     EQU   0
QVPLTYP3 EQU   QVPL
QVPLTYP2 EQU   QVPLTYP3
QVPLTYP1 EQU   QVPLTYP2
QVPLEVR  EQU   QVPLTYP1
QVPLODA  EQU   QVPLTYP1+4
QVPLWKA  EQU   QVPLTYP1+8
QVPLNOEL EQU   QVPLTYP1+12
QVPLHDR  EQU   QVPLTYP1+16
QVPLHF   EQU   QVPLTYP1+20
QVPLFLGH EQU   QVPLHF
QVPLHD3  EQU   QVPLFLGH
QVPLRES1 EQU   QVPLFLGH
QVPLFLGF EQU   QVPLHF+1
QVPLFP3  EQU   QVPLFLGF
QVPLRES2 EQU   QVPLFLGF
QVPLFPTR EQU   QVPLHF+2
QVPLLELM EQU   QVPLTYP1+24
QVPLTRLR EQU   QVPLTYP2+28
QVPLTB   EQU   QVPLTYP2+32
QVPLFLGT EQU   QVPLTB
QVPLTR3  EQU   QVPLFLGT
QVPLRES3 EQU   QVPLFLGT
QVPLFLGB EQU   QVPLTB+1
QVPLBP3  EQU   QVPLFLGB
QVPLRES4 EQU   QVPLFLGB
QVPLBPTR EQU   QVPLTB+2
QVPLFELM EQU   QVPLTYP2+36
QVODHDR  EQU   0
QVODSIZE EQU   QVODHDR+1
QVODUSED EQU   QVODHDR+3
QVODVRA  EQU   0
QVODCMMN EQU   QVODVRA
QVODR15  EQU   QVODCMMN
QVODFLGS EQU   QVODR15
QVODENT  EQU   QVODVRA+4
QVODCDAT EQU   QVODENT
QVODVDAT EQU   QVODENT+4
QVODVW1  EQU   QVODVDAT
QVODVW2  EQU   QVODVDAT+4
QVODVW3  EQU   QVODVDAT+8
ODA      EQU   0
PTR31    EQU   0
PTR24    EQU   PTR31+1
EVR      EQU   0
WKAFB    EQU   FBDES
@NM00008 EQU   WKAFB
HTQ      EQU   @NM00008
ERRVAL   EQU   WKAFB+1
LSTFOUND EQU   WKAFB+2
FWDBWD   EQU   QVPLHDR
HDRTLR   EQU   FWDBWD
@NM00009 EQU   FWDBWD+4
@NM00011 EQU   FWDBWD+5
FB3      EQU   @NM00011
FBOFFSET EQU   FWDBWD+6
LASTFST  EQU   FWDBWD+8
LASTFST3 EQU   LASTFST+1
QVPLPTR  EQU   S1
ERRR15   EQU   S15
ERR2MANY EQU   ERRR15
NREC     EQU   ERRR15+1
NDET     EQU   ERRR15+2
ERRCODE  EQU   ERRR15+3
LASTELM3 EQU   QVPLLELM+1
FRSTELM3 EQU   QVPLFELM+1
NOELM3   EQU   QVPLNOEL+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00014 EQU   ERRR15
@NM00012 EQU   LASTFST
@NM00010 EQU   @NM00009
HTLEN    EQU   @NM00009
HTN      EQU   @NM00008
@NM00015 EQU   PTR31
QVODRES4 EQU   QVODCDAT+2
QVODERRX EQU   QVODCDAT+1
QVODERRC EQU   QVODCDAT
QVODRCOD EQU   QVODR15+3
QVODNDET EQU   QVODR15+2
QVODNREC EQU   QVODR15+1
QVODRES3 EQU   QVODFLGS
QVODOVFL EQU   QVODFLGS
QVODRES2 EQU   QVODHDR+2
QVODRES1 EQU   QVODHDR
@NM00007 EQU   NEXT
@NM00006 EQU   CURRENT
@NM00005 EQU   @NM00004
@NM00003 EQU   @NM00002
S12      EQU   SA+68
S11      EQU   SA+64
S10      EQU   SA+60
S9       EQU   SA+56
S8       EQU   SA+52
S7       EQU   SA+48
S6       EQU   SA+44
S5       EQU   SA+40
S4       EQU   SA+36
S3       EQU   SA+32
S2       EQU   SA+28
S14      EQU   SA+12
@NM00001 EQU   SA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00239 EQU   @RC00238
@RC00258 EQU   @RC00257
@RC00315 EQU   @RC00305
@RF00404 EQU   @RC00394
@PB00003 EQU   @EL00001
@RF00328 EQU   @RC00315
@PB00002 EQU   @PB00003
@RF00085 EQU   @PB00002
@RF00284 EQU   @PB00002
@ENDDATA EQU   *
         END   IEAVEQV1,(C'PLS1913',0701,75350)
