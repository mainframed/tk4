         TITLE 'IEAVEE2R- EXTERNAL FLIH RECOVERY ROUTINE (II)'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVEE2R
*
*02*     CSECT-NAME = IEAVEE2R
*
*01*  DESCRIPTIVE-NAME = EXTERNAL FLIH RECOVERY ROUTINE 2
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS =     VERSION 1
*
*
*01*  FUNCTION =
*        WHEN RECOVERY IS INITIATED FOR THE EXTERNAL FIRST LEVEL
*        INTERRUPT HANDLER (LEVEL 1 OF RECURSION), THE SUPER FRR WILL
*        INDICATE A RETRY TO IEAVEE2R.  THIS ROUTINE WILL CLEAR THE
*        APPROPRIATE EXT FLIH INDICATORS, MAKING THE FUNCTION OPERABLE.
*        IT WILL PERCOLATE THE ERROR TO THE PREVIOUS LEVEL OF RECOVERY.
*
*02*     OPERATION =
*             CLEAR THE EXT FLIH RECURSION BIT 2;
*             IF EMS RECURSION FLAG IS OFF
*                  THEN CLEAR EMS PRIMARY FLAG;
*             CLEAR EMS RECURSION FLAG;
*             FLIP THE FRR STACK TO THE EXT FLIH(1) STACK;
*             SET ABEND CODE IN REG 1 FOR SVC 13;
*             EXIT TO IEAVEABD TO PERFORM ABEND;
*
*01*   NOTES =
*
*02*     DEPENDENCIES =
*             RTM:
*             RECOVERY IS CONTROLLED BY USE OF THE FRR STACK MECHANISM.
*
*             IEAVESVR:
*             THE SVC FLIH RECOVERY ROUTINE CONTAINS A COMMON
*             SECTION, STARTING AT THE EXTERNAL LABEL IEAVEABD,
*             WHICH WILL ABEND THE CURRENT TASK, AND PERCOLATE
*             THE ERROR.
*
*             IPC:
*             FLAGS FOR EMERGENCY SIGNAL MUST BE CLEARED
*             TO MAKE THE FUNCTION OPERABLE.
*
*03*        CHARACTER-CODE-DEPENDENCIES = NONE
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = SEE EQUATE SECTION OF MODULE
*
*02*     PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE =  44 BYTES
*
*02*     ATTRIBUTES =   NUCLEUS
*                       REUSABLE
*                       REENTRANT
*                       DISABLED
*                       ZERO PROTECT KEY
*                       SUPERVISOR MODE
*
*01*  ENTRY-POINT =     IEAVEE2R
*
*02*     PURPOSE =      THIS IS THE ONLY ENTRY TO IEAVEE2R
*
*02*     LINKAGE =      SUPER FRR WILL INDICATE A RETRY TO IEAVEE2R.
*                       RTM WILL PASS CONTROL VIA BR 15.
*
*02*     INPUT =
*
*03*          ENVIRONMENT =  DISABLED
*                            SUPERVISOR
*                            KEY 0
*                            NO LOCKS HELD
*
*03*          DATA =    DATA AREAS IN PSA AND LCCA
*
*03*          REGISTERS =    REG 15 = ENTRY POINT ADDRESS
*
*02*     OUTPUT =
*
*03*          DATA =    CURRENT FRR STACK = EXT FLIH (1) STACK
*                       EXT FLIH RECURSION BIT(2) CLEARED
*                       EMS SLIH FLAGS CLEARED;
*
*03*          REGISTERS =
*                       REG 1 = ABEND CODE
*                       REG 15= ADDR IEAVEABD
*
*02*     REGISTERS-SAVED =   NONE
*
*02*     REGISTER-USAGE = REG 1 = ABEND CODE
*                         REG 15= IEAVEABD ENTRY POINT ADDRESS
*
*02*     REGISTERS-RESTORED = ALL AS ON ENTRY EXCEPT REG 1 & 15
*
*01*  EXIT-NORMAL = TO IEAVEABD WHO ISSUES AN SVC 13
*
*02*     CONDITIONS = THE CURRENT TASK MUST BE TERMINATED FOR
*                     RECOVERY PURPOSES.
*
*02*     OUTPUT =  NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES =
*             IEAVEABD -- (ON EXIT) TO ISSUE AN SVC 13
*
*             INVSRTRY -- RSM FUNCTIONAL RECOVERY ROUTINE
*                  INPUT=
*                       DATA=      NONE
*                       REGISTERS=
*                                  R10= ENTRY POINT ADDRESS
*                                  R11= RETURN ADDRESS
*                  OUTPUT=
*                       DATA=      NONE
*                       REGISTERS=
*                                  R15= UNCHANGED
*
*02*     DATA-AREAS =
*             PSACSTK   -- CURRENT FRR STACK POINTER
*             PSAESST1  -- EXT FLIH (1) FRR STACK SAVE POINTER
*             LCCAXRC2  -- EXT FLIH (2) RECURSION BIT
*             PSAIPCES  -- EMS SLIH FLAG (PRIMARY)
*             PSAIPCE2  -- EMS SLIH RECURSION FLAG
*
*02*     CONTROL-BLOCKS =    PSA R/W
*                            LCCA R/W
*
*01*  TABLES = NONE
*
*01*  MACROS = NONE
*
*01*  SERIALIZATION = DISABLE
*
*01*  CHANGE-ACTIVITY = Y021104
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = X'3FC'
*
**** END OF SPECIFICATIONS ***/
         EJECT
IEAVEE2R CSECT
      SPACE 2
*/*IEAVEE2R: CHART EXT FLIH (2) FRR */
*/* HEADER
*/*
*/*
*/*
*/*                                                 SECTION 3.1.8.3
*/* EXT FLIH (II) RECOVERY ROUTINE
*/*                                                 PAGE # */
*/*IEAVEE2R: E IEAVEE2R */
*/* P CLEAR THE EXT FLIH RECURSION BIT(2) */
*/* D (YES,RECURSON,NO,) EMS RECURSION? */
*/* P CLEAR EMS PRIMARY FLAG */
*/*RECURSON: P CLEAR EMS RECURSION FLAG */
*/* P FLIP THE FRR STACK TO THE EXT FLIH (1) STACK */
*/* P SET ABEND CODE IN REG 1 FOR SVC 13 */
*/* P EXIT TO IEAVEABD TO PERFORM ABEND */
*/* R IEAVEABD */
*/* FOOTING
*/*
*/*  */
*/*IEAVEE2R: END EXTFLIH (2) FRR */
         EJECT
***********************************************************************
*                                                                     *
*                            EQUATES                                  *
*                                                                     *
***********************************************************************
CXFF     EQU   X'FF'              CONSTANT VALUE = X'FF'
EXTCODE  EQU   X'3FC'             EXTERNAL FLIH ABEND CODE
CODEREG  EQU   1                  REG 1 = ABEND CODE
R10      EQU   10                 GENERAL REGISTER 10
R11      EQU   11                 GENERAL REGISTER 11
R15      EQU   15                 GENERAL REGISTER 15
CCABASE  EQU   1                  BASE FOR LCCA
***********************************************************************
*                                                                     *
*                        IEAVEE2R MAINLINE                            *
*                                                                     *
***********************************************************************
         USING PSA,0
         USING LCCA,CCABASE
         USING *,R15              REG 15 = ENTRY POINT ADDRESS
         L     CCABASE,PSALCCAV   SET UP BASE TO LCCA
         NI    LCCAIHR1,CXFF-LCCAXRC2
*                                 CLEAR RECURSION 2 BIT
         TM    PSASUP2,PSAIPCE2   IS THIS A EMS RECURSION?
         BO    RECURSON           IF SO, TURN OFF RECURSION FLAG
         NI    PSASUP2,CXFF-PSAIPCES
*                                 CLEAR EMS PRIMARY FLAG
RECURSON NI    PSASUP2,CXFF-PSAIPCE2
*                                 EMS RECURSION FLAG
         MVC   PSACSTK,PSAESTK1   CURRENT FRR STACK = EXT(1) FLIH STACK
         L     R10,AINVSR         GET THE ADDRESS OF RSM FRR
         BALR  R11,R10            GO TO RSM FRR FOR CLEANUP
         LA    CODEREG,EXTCODE    PUT EXT FLIH CODE IN REG 1 FOR ABEND
         L     R15,ADABEND        BRANCH TO ABEND ROUTINE LOCATED IN
         BR    R15                IEAVESVR (SVC FLIH FRR)
***********************************************************************
*                                                                     *
*                      CONSTANTS & STORAGE                            *
*                                                                     *
***********************************************************************
         EXTRN IEAVEABD
ADABEND  DC    V(IEAVEABD)        ADDRESS COMMON ABEND ROUTINE
AINVSR   DC    V(INVSRTRY)        ADDRESS RSM FUNCTIONAL RECOVERY RTN
         TITLE 'IEAVEE2R- PSA MAPPING'
         IHAPSA
         TITLE 'IEAVEE2R- LCCA DSECT MAPPING'
         IHALCCA
         END
