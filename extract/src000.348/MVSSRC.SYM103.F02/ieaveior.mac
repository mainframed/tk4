      TITLE 'IEAVEIOR- I/O FLIH RECOVERY'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVEIOR
*
*02*     CSECT-NAME = IEAVEIOR
*
*01*  DESCRIPTIVE-NAME = I/O FLIH RECOVERY ROUTINE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = VERSION 1
*
*01*  FUNCTION =
*        WHEN RECOVERY IS INITIATED FOR THE I/O FIRST LEVEL
*        INTERRUPT HANDLER, THE SUPER FRR WILL INDICATE A RETRY
*        TO THE IEAVEIOR.  THIS ROUTINE WILL CLEAR THE I/O FLIH
*        RECURSION INDICATOR, MAKING THE FUNCTION OPERABLE.  IT
*        WILL ALLOW PERCOLATION TO THE PREVIOUS LEVEL OF
*        RECOVERY.
*
*02*     OPERATION =
*
*             IEAVEIOR ENTRY =
*
*                  CLEAR THE I/O FLIH RECURSION INDICATOR;
*                  FLIP THE FRR STACK TO THE NORMAL STACK;
*                  SET COMPLETION CODE IN REG 1 FOR ABEND;
*                  EXIT TO IEAVEABD TO PERFORM ABEND;
*
*01*   NOTES =
*
*02*     DEPENDENCIES =
*             RTM:
*             RECOVERY IS CONTROLLED BY USE OF THE FRR STACK MECHANISM.
*
*             IEAVESVR:
*             THE SVC FLIH RECOVERY ROUTINE CONTAINS A COMMON
*             SECTION, STARTING AT THE EXTERNAL LABEL IEAVEABD,
*             WHICH WILL ABEND THE CURRENT TASK, AND PERCOLATE
*             THE ERROR.
*
*03*        CHARACTER-CODE-DEPENDENCIES =   NONE
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = SEE EQUATE SECTION OF MODULE
*
*02*     PATCH-LABEL =
*
*01*  MODULE-TYPE = PROCEDURE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE = 24 BYTES
*
*02*     ATTRIBUTES =   NUCLEUS
*                       REUSABLE
*                       REENTRANT
*                       DISABLED
*                       ZERO PROTECT KEY
*                       SUPERVISOR MODE
*
*01*  ENTRY-POINT = IEAVEIOR
*
*02*     PURPOSE = THIS IS THE ONLY ENTRY TO IEAVEIOR
*
*02*     LINKAGE =  SUPER FRR WILL INDICATE A RETRY TO IEAVEIOR
*                   RTM WILL PASS CONTROL VIA BR 15.
*
*02*     INPUT =
*
*03*          ENVIRONMENT =  DISABLED
*                            SUPERVISOR
*                            KEY 0
*                            NO LOCKS HELD
*
*03*          DATA = DATA AREAS IN PSA
*
*03*          REGISTERS = REG 15 = ENTRY POINT ADDRESS
*
*
*02*     OUTPUT =
*
*03*          DATA = CURRENT FRR STACK = NORMAL
*                    I/O FLIH RECURSION BIT CLEARED
*
*03*          REGISTERS =
*                       REG 1 = ABEND CODE
*                       REG 15= ADDRESS IEAVEABD
*                       ALL OTHERS AS ENTERED
*
*02*     REGISTERS-SAVED =   NONE
*
*02*     REGISTER-USAGE = REG 1 = ABEND CODE
*                         REG 15= IEAVEABD ENTRY POINT ADDRESS
*
*02*     REGISTERS-RESTORED = ALL AS ON ENTRY EXCEPT REG 1 & 15
*
*01*  EXIT-NORMAL =     TO IEAVEABD WHO ISSUES AN SVC 13
*
*02*     CONDITIONS = THE CURRENT TASK MUST BE TERMINATED FOR
*                     RECOVERY PURPOSES.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES = TO IEAVEABD TO ISSUE AN SVC 13 (ON EXIT)
*
*02*     DATA-AREAS =
*             PSANSTK   -- NORMAL FRR STACK POINTER
*             PSACSTK   -- CURRENT FRR STACK POINTER
*             PSAIO     -- I/O FLIH RECURSION BIT
*
*02*     CONTROL-BLOCKS = PSA R/W
*
*01*  TABLES = NONE
*
*01*  MACROS = NONE
*
*01*  SERIALIZATION = DISABLE
*
*01*  CHANGE-ACTIVITY = Y021104
*
*01*  MESSAGES =   NONE
*
*01*  ABEND-CODES = X'2FC'
*
**** END OF SPECIFICATIONS ***/
      EJECT
IEAVEIOR CSECT
      SPACE 2
*/*IEAVEIOR: CHART I/O FLIH FRR */
*/* HEADER
*/*
*/*
*/*
*/*                                                 SECTION 3.1.8.3
*/* I/O FLIH RECOVERY ROUTINE
*/*                                                 PAGE # */
*/*IEAVEIOR: E IEAVEIOR */
*/* P CLEAR THE I/O FLIH RECURSION INDICATOR */
*/* P FLIP THE FRR STACK TO THE NORMAL STACK */
*/* P SET ABEND CODE IN REG 1 FOR SVC 13 */
*/* P EXIT TO IEAVEABD TO PERFORM ABEND */
*/* R IEAVEABD */
*/* FOOTING
*/*
*/*  */
*/*IEAVEIOR: END I/O FLIH FRR */
         EJECT
***********************************************************************
*                                                                     *
*                            EQUATES                                  *
*                                                                     *
***********************************************************************
IOCODE   EQU   X'2FC'             I/O FLIH ABEND CODE
CODEREG  EQU   1                  GENERAL REGISTER 1
R15      EQU   15                 GENERAL REGISTER 15
CXFF     EQU   X'FF'              CONSTANT = X'FF'
***********************************************************************
*                                                                     *
*                        IEAVEIOR MAINLINE                            *
*                                                                     *
***********************************************************************
         USING PSA,0
         USING *,R15              REG 15 = ENTRY POINT ADDRESS
         NI    PSASUP1,CXFF-PSAIO
*                                 CLEAR I/O FLIH RECURSION BIT
         MVC   PSACSTK,PSANSTK    MAKE CURRENT FRR STACK = NORMAL
         LA    CODEREG,IOCODE     PUT IO FLIH ABEND CODE IN REG 1
         L     R15,ADABEND        BRANCH TO ABEND ROUTINE LOCATED IN
         BR    R15                IEAVESVR (SVC FLIH FRR)
***********************************************************************
*                                                                     *
*                      CONSTANTS & STORAGE                            *
*                                                                     *
***********************************************************************
         EXTRN IEAVEABD
ADABEND  DC    V(IEAVEABD)        ADDRESS COMMON ABEND ROUTINE
         TITLE 'IEAVEIOR- PSA MAPPING'
         IHAPSA
         END
