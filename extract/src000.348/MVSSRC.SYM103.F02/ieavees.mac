         TITLE 'IEAVEES - EMERGENCY SIGNAL SLIH'
*/*IEAVEES: CHART EMS SIG SLIH */
*/* HEADER
*/*
*/*
*/*                                                   ID: 3.1.7.13.10.5
*/* EMERGENCY SIGNAL SLIH
*/*                                                    PAGE # */
*/*IEAVEES: E IEAVEES */
*/*EMSENTRY: D (NO,EMSFRSTE,YES,) IS THIS A RECURSIVE ENTRY?  */
*/* P SET RECURSIVE ENTRY INDICATOR */
*/* P (,EMSMAINL) SAVE EXT FLIH'S RETURN ADDRESS */
*/*EMSFRSTE: P SET EMSACTIVE INDICATOR */
*/* P SAVE EXT FLIH'S RETURN ADDRESS */
*/*EMSMAINL: P GET ADDR OF SENDING CPU'S PCCA */
*/*EMSRMSCH: D (YES,EMSEXIT,NO,) EMS BUFFER WORD0=0? */
*/* D (YES,EMSRMSBR,NO,) RMS INDICATOR ON? */
*/*EMSRMSRT: D (NO,EMSEXIT,YES,) DOES ES BELONG TO THIS CPU? */
*/* P LOAD REGS 1 & 15 FROM WORDS 1 & 2 OF ES BUFFER */
*/* D (YES,EMSPARL,NO,) PARALLEL REQUEST? */
*/* S RECEIVING RTN:BALR 14,15 TO RECEIVING RTN */
*/* P (,EMSEXIT) TURN OFF SERIAL INDICATOR */
*/*EMSPARL: P TURN PARALLEL INDICATOR OFF */
*/*EMSPARLE: S RECEIVING RTN:BALR 14,15 TO RECEIVING RTN */
*/*EMSEXIT: D (YES,EMSEXIT2,NO,) IS THIS A RECUSION? */
*/* P RESTORE EXT FLIH'S RETURN ADDRESS */
*/* P TURN OFF EMS SLIH ACTIVE INDICATOR */
*/* R RETURN TO EXT FLIH */
*/*EMSEXIT2: P TURN OFF RECURSION INDICATOR */
*/* R RETURN TO EXT FLIH */
*/*EMSRMSBR: S (,EMSRMSCH) IGFPTSIG:BALR 2,15 TO ACR PROCESS */
*/* FOOTING
*/*
*/*  */
*/*IEAVEES: END EMS SIG SLIH */
*MODULE NAME= IEAVEES
*
*DESCRIPTIVE NAME= EMERGENCY SIGNAL SECOND LEVEL INTERRUPT HANDLER
*
*COPYRIGHT= N/A
*
*STATUS= REL. 02.0
*
*FUNCTION= UPON AN EMERGENCY SIGNAL INTERRUPT, ROUTES CONTROL FROM THE
*          EXTERNAL FLIH TO THE APPROPRIATE RECEIVING ROUTINE AS
*          INDICATED BY THE ENTRY POINT ADDRESS IN THE REMOTE
*          IMMEDIATE BUFFER IN THE CALLER'S PCCA.  THE ENTRY
*          POINT ADDRESS IS SUPPLIED BY IEAVERI WHEN INVOKED
*          INVOKED BY A CALLER AS A RESULT OF ISSUING THE
*          RISGNL MACRO.
*
*  OPERATION= WHENEVER THE EXTERNAL FLIH RECOGNIZES A EMERGENCY SIGNAL
*             INTERRUPT CODE, IT PASSES CONTROL TO THE EMERGENCY
*             SIGNAL SECOND LEVEL INTERRUPT HANDLER.  REGISTER 10
*             CONTAINS THE ENTRY POINT ADDRESS OF IEAVEES AND
*             REGISTER 2 THE RETURN ADDRESS.  WHEN ENTERED, IEAVEES
*             WILL TEST ITS PSASUPER BITS TO DETERMINE IF THIS
*             IS A RECURSIVE ENTRY AND BASED ON THE TEST
*             WILL TURN ON ITS APPROPRIATE BIT IN PSASUPER TO INDICATE
*             IT IS IN CONTROL.  THE PCCA ADDRESS WILL BE OBTAINED BY
*             USING THE SENDING CPU'S INTERRUPT ID (STORED
*             IN A HALFWORD AT LOCATION AT 84 WHENEVER THE
*             INTERRUPT IS GENERATED) AS AN INDEX VALUE INTO THE PCCA
*             VECTOR TABLE. THE SENDING CPU'S PCCA ADDRESS IS USED TO
*             REFERENCE THE REMOTE IMMEDIATE BUFFER.
*             IEAVEES WILL LOAD THE EMS BUFFER WORD, PCCAEMSI INTO A
*             AND REGISTER TEST FOR SPECIFIC BITS SET BY IEAVERI
*             WHENEVER IT WAS INVOKED THROUGH A RISGNL MACRO REQUEST OR
*             IF RMS TURNED ITS BIT ON BEFORE A EMS SIGP.  THE THREE
*             POSSIBLE BIT SETTINGS ARE PARALLEL, SERIAL OR RMS REQUEST
*             IF IEAVEES FINDS A BIT ON, IT TESTS IF IT WAS A RMS
*             REQUEST.  IF SO, IEAVEES WILL BALR 2,15 TO RMS'S
*             SERVICE ROUTINE, IGFPTSIG.  WHEN CONTROL IS RETURNED
*             IEAVEES WILL TEST TO SEE IF ANOTHER REQUEST IS PRESENT.
*             IF ANOTHER REQUEST IS PRESENT, IEAVEES WILL OBTAIN THE
*             THE APPROPRIATE PROGRAM'S ENTRY POINT FROM THE EMS BUFFER
*             WORD, PCCAEMSI AND IF A SERIAL REQUEST COMPARE AND
*             SWAP THE BIT OFF AND BALR 14,15 TO THE PROGRAM.
*             ON RECEIVING CONTROL BACK FROM THE PROGRAM, IEAVEES AGAIN
*             TEST TO SEE IF THIS IS A RECURSIVE ENTRY.  IF IT IS,
*             THE APPROPRIATE BITS ARE TURNED OFF. IF THE REQUEST WAS A
*             SERIAL REQUEST, THE SERIAL REQUEST BIT WILL BE
*             COMPARED AND SWAPPED OFF BEFORE GIVING THE RECEIVING
*             ROUTINE CONTROL.  IF THE REQUEST IS A PARALLEL REQUEST
*             THE PARALLEL REQUEST BIT WILL BE SWAPPED OFF AFTER THE
*             RECEIVING ROUTINE HAS RETURNED CONTROL TO THE SLIH.  IF
*             THE REQUEST IS A PARALLEL REQUEST, A TEST MUST BE MADE
*             TO DETERMINE IF THIS IS A RECURSIVE ENTRY OR NOT, BECAUSE
*             THE METHOD OF FINDING THE SENDING CPU'S PCCA IS DIFFERENT
*             FOR THE FIRST ENTRY AND THE SECOND ENTRY.  ON THE FIRST
*             THE PCCA ADDRESS IS SAVED IN THE LCCA AND ON THE SECOND
*             THE PCCA ADDRESS IS ALWAYS FOUND BY CONVERTING THE
*             SENDING CPU'S PHYSICAL ADDRESS TO THE PCCA ADDRESS.
*
*NOTES
*  DEPENDENCIES=  RECEIVING ROUTINES MUST RETURN CONTROL TO IEAVEES VIA
*                BR 14.  THEY WILL RECEIVE CONTROL DISABLED EXCEPT
*                FOR MACHINE CHECK AND MUST REMAIN IN THAT STATE.
*                AN EXCEPTION TO THE ABOVE IS THAT THEY MAY OPEN A
*                WINDOW FOR MFA AND OTHER EMSS.  PRIOR TO INVOKING
*                THE RISGNL THEY MUST OBTAIN THE SALLOC LOCK IF THEIR
*                RECEIVING ROUTINE CONTAINS A WINDOW.
*                THEY MAY NOT REQUEST GLOBAL SPIN LOCKS DURING THEIR
*                PROCESSING.  THEY MAY NOT CAUSE ANY PAGE FAULTS
*                DURING THEIR PROCESSING OR CALL ANY SUPERVISORY
*                WHICH DOES NOT MAINTAIN THE ABOVE RESTRICTIONS.
*                ONE VALID EXCEPTION TO THE ABOVE IS THE TOD CLOCK
*                SYNCHRONIZATION RECEIVING ROUTINE WHICH WILL ENABLE
*                FOR TOD SYNCHRONIZATION CHECK INTERRUPTS.
*                ANY RECEIVING ROUTINE WHICH HAS A DEPENDENCY ON THE
*                SENDING CPU (SPINS ON AN INDICATOR SET BY THE SENDING
*                CPU) MUST TERMINATE THE DEPENDENCY TEST (THE SPIN)
*                IF THE SENDING CPU IS THE SAME CPU ON WHICH THE
*                RECEIVING ROUTINE IS EXECUTING ITS SPIN.  IF THIS
*                CONDITION EXISTS (ACR IS AN EXAMPLE) THE SPIN MUST
*                BE TERMINATED TO AVOID AN INTERLOCK.
*    CHARACTER-CODE DEPENDENCIES= NONE
*  RESTRICTIONS=AVAILABLE ONLY TO SUPERVISOR STATE, ZERO PROTECT KEY
*               CALLERS.
*  REGISTER-CONVENTIONS= REFERENCE EQUATE SECTION
*  PATCH-LABEL= NONE, THIS IS A RESIDENT NUCLEUS MODULE.
*
*MODULE TYPE= PROCEDURE
*  PROCESSOR= ASSEM
*  MODULE SIZE= N/A
*  ATTRIBUTES= NUCLEUS,ZERO PROTECT KEY,DISABLED,REFRESHABLE,
*              SUPERVISOR MODE,ADDRSPC=FIXED.
*
*ENTRY POINT= IEAVEES
*  PURPOSE= TO ROUTE CONTROL TO THE APPROPRIATE ROUTINE WHENEVER
*         THE EXTERNAL FLIH RECOGNIZES AN EMERGENCY SIGNAL INTERRUPT.
*  LINKAGE= EXTERNAL FLIH BALRS 2,10 TO IEAVEES'S ENTRY POINT.
*  INPUT= REGISTER 10 - CONTAINS IEAVEES'S ENTRY POINT ADDRESS.
*         REGISTER 2 - CONTAINS EXTERNAL FLIH'S RETURN ADDRESS.
*  REGISTERS SAVED= REGISTER 2 IN THE LCCA - LCCAESSA.
*  REGISTER USAGE= REGISTER 1 IS USED AS PARAMETER REGISTER WHEN
*                             THE RECEIVING ROUTINE.
*                  REGISTER 2 IS THE RETURN ADDRESS TO THE EXTERNAL
*                             FLIH AND A WORK REGISTER.
*                  REGISTER 3 IS USED AS A COMPARE AND SWAP WORK REG.
*                  REGISTER 4 IS USED AS A WORK REGISTER.
*                  REGISTER 5 IS USED A PCCA BASE REGISTER
*                             FOR THE SENDING CPU.
*                  REGISTER 6 IS USED AS A PCCA BASE REGISTER FOR THE
*                             THE CURRENT CPU.
*                  REGISTER 8 IS USED AS LCCA BASE.
*                  REGISTER 10 IS USED AS THE BASE REGISTER.
*                  REGISTER 14 IS A BALR REGISTER FOR RECEIVING CONTROL
*                              BACK FROM RECEIVING ROUTINES.
*                  REGISTER 15 IS USED AS A BALR REG TO BRANCH
*                              TO RECEIVING ROUTINE'S ENTRY POINTS.
*  REGISTERS RESTORED= REGISTER 2.
*
*EXIT - NORMAL= IEAVEES.
*  CONDITIONS= WHENEVER EMS REQUESTS HAVE BEEN EXECUTED.
*  OUTPUT= NONE, EXCEPT THE EMS BUFFER HAS BEEN MODIFIED TO
*         INDICATE THAT THE REQUEST ROUTINE HAS BEEN COMPLETED.
*  RETURN CODES= NONE.
*
*EXIT - ERROR= NONE.
*  CONDITIONS= N/A
*  OUTPUT= N/A
*  RETURN CODES= NONE.
*
*EXTERNAL REFERENCES=
*  ROUTINES= RMS/ACR - (IGFPTSIG)
*  DATA AREAS=REMOTE PENDABLE BUFFER.
*  CONTROL BLOCKS=  PSA - R,M.  LCCA - R,M.
*                 PCCA - R,M.  CVT - R.  PCCAVT - R.
*
*TABLES= NONE.
*
*MACROS= NONE..
*  SERIALIZATION= DISABLEMENT.
*
*CHANGE ACTIVITY= N/A
*
*MESSAGES= XXXXXXX - MSG. TEXT
*
*ABEND CODES= NONE.
*
***********************************************************************
IEAVEES  CSECT
         USING *,BASER10
EMSENTRY EQU   *
IEAVEES  MODID BR=YES
***********************************************************************
*        SYMBOLIC EQUATES
***********************************************************************
ZERO     EQU   0                       VALUE 0
PARMREG  EQU   1                       REG 1 - PARAMETER ADDR TO
*                                      RECEIVING ROUTINE
RETURN2  EQU   2                       REG 2 - RETURN ADDRESS IN FLIH
RIBUFOLD EQU   2                       REG 2 - C&S COMPERAND
MULTBY4  EQU   2                       SLL 2 BITS FOR MULT BY 4
CVTREG   EQU   2                       REG 2 - CVT BASE
PCCAVT3  EQU   3                       REG 3 - PCCA VECTOR TABLE ADDR
RIBUFNEW EQU   3                       REG 3 - C&S REPLACE VALUE
CPUADR4  EQU   4                       SENDING CPUS ID
PCCASIGP EQU   4                       PCCA ADDRESS OF SIGP''D CPU
PCCASD5  EQU   5                       PCCA ADDRESS OF SENDING CPU
OWNPCCA  EQU   6                       PCCA ADDRESS OF CURRENT CPU
LCCAPTR8 EQU   8                       LCCA ADDRESS OF CURRENT CPU
BASER10  EQU   10                      IEAVEES BASE REGISTER AND
*                                      ENTRY POINT ADDRESS WHEN ENTERED
*                                      FROM FLIH
RETURN14 EQU   14                      REG 14 - RETURN ADDRESS OF
*                                      IEAVEES WHEN GIVING CONTROL TO
*                                      RECEIVING ROUTINE
RECRTNEP EQU   15                      REG 15 - ENTRY POINT ADDRESS
*                                      OF RECEIVING ROUTINE
XFF      EQU   X'FF'                   MASK X'FF'
         EJECT
         USING PSA,0
         L     LCCAPTR8,PSALCCAV       LOCATE CURRENT CPUS LCCA
         USING LCCA,LCCAPTR8
         TM    PSASUP2,RECURSON        TEST LEVEL OF ENTRIES
         BZ    EMSFRSTE                FIRST ENTRY TO EMS SLIH
         OI    PSASUP2,PSAIPCE2        INDICATE 2ND LEVEL ENTRY
         ST    RETURN2,LCCAESS2        SAVE RETURN ADDRESS OF FLIH
         B     EMSMAINL                CONTINUE WITH MAINLINE PROCESS
EMSFRSTE EQU   *
         OI    PSASUP2,PSAIPCES        TURN ON EMS ACTIVE INDICATOR
         ST    RETURN2,LCCAESSA        SAVE RETURN ADDRESS OF FLIH
EMSMAINL EQU   *
         L     CVTREG,CVTPTR           LOCATE THE CVT
         USING CVT,CVTREG
         L     PCCAVT3,CVTPCCAT        LOCATE THE PCCA VECTOR TABLE
         LH    CPUADR4,PSASPAD          OBTAIN PHYSICAL CPU ID
         SLL   CPUADR4,MULTBY4         LOCATE ITS ENTRY IN THE PCCA
*                                      VECTOR TABLE
         L     PCCASD5,ZERO(CPUADR4,PCCAVT3)  OBTAIN SENDING CPUS
*                                             PCCA ADDRESS IN ORDER
*                                             TO REFERENCE EMS BUFFER
         USING PCCA,PCCASD5
         TM    PSASUP2,PSAIPCE2        IS THIS A 2ND ENTRY?
         BO    EMSRMSCH                AVOID SAVING PCCA ADDRESS
         ST    PCCASD5,LCCAASCP        SAVE THE PCCA ADDRESS
EMSRMSCH EQU   *
         L     RIBUFOLD,PCCAEMSI       OBTAIN EMS BUFFER
         LTR   RIBUFOLD,RIBUFOLD       IS EMS BUFFER EMPTY?
         BZ    EMSEXIT                 EMPTY BUFFER, RETURN TO FLIH
         TM    PCCARMSB,PCCARMS        IS THE RMS INDICATOR ON?@YM06063
         BO    EMSRMSBR                RMS IS REQUESTED        @YM06063
EMSRMSRT EQU   *
         L     OWNPCCA,PSAPCCAV        OBTAIN THIS CPUS PCCA ADDRESS
         L     PCCASIGP,PCCAEMSA       OBTAIN PCCA ADDRESS OF CPU
*                                      SIGP WAS INTENDED FOR
         CR    OWNPCCA,PCCASIGP        WAS EMS SENT TO THE CPU THAT
*                                      WAS SIGNALED
         BNE   EMSEXIT                 NO, RETURN TO FLIH
         L     RECRTNEP,PCCAEMSE       OBTAIN RECEIVING RTNS ENTRY PT
         L     PARMREG,PCCAEMSP        OBTAIN RECEIVING RTNS PARM ADDR
         LTR   RIBUFOLD,RIBUFOLD       WAS THIS A PARALLEL OR SERIAL
*                                      EMS REQUEST?
         BM    EMSPARL                 HI-ORDER BIT INDICATES PARALLEL
         BALR  RETURN14,RECRTNEP       SERIAL REQUEST, GIVE RECEIVING
*                                      ROUTINE CONTROL
EMSRET1  EQU   *
         L     BASER10,ABASE-EMSRET1(RETURN14)  RE-ESTABLISH BASE REG
         L     LCCAPTR8,PSALCCAV       LOCATE CURRENT CPUS LCCA
         TM    PSASUP2,PSAIPCE2        IS THIS A 2ND ENTRY?
         BO    EMSPCCAC                GO CONVERT SENDING CPU ADDR
         L     PCCASD5,LCCAASCP        RESTORE SENDING CPU'S PCCA
EMSRET1A EQU   *
         L     RIBUFOLD,MASKONS        MASK THAT REPRESENTS SERIAL RQ
         LA    RIBUFNEW,ZERO           REPLACE VALUE
EMSSERL  EQU   *
         CS    RIBUFOLD,RIBUFNEW,PCCAEMSI  TURN OFF SERIAL INDICATOR
         BZ    EMSEXIT                 SERIAL INDICATOR SWAPPED OFF
         LR    RIBUFNEW,RIBUFOLD       RMS INDICATOR ALSO ON
         N     RIBUFNEW,SERLOFF        AND OFF SERIAL INDICATOR
         B     EMSSERL                 REPEAT BUFFER UPDATE
EMSPCCAC EQU   *
         L     CVTREG,CVTPTR           LOCATE THE CVT
         L     PCCAVT3,CVTPCCAT        LOCATE THE PCCA VECTOR TABLE
         LH    CPUADR4,PSASPAD          OBTAIN PHYSICAL CPU ID
         SLL   CPUADR4,MULTBY4         LOCATE ITS ENTRY IN THE PCCA
*                                      VECTOR TABLE
         L     PCCASD5,ZERO(CPUADR4,PCCAVT3)  OBTAIN SENDING CPUS
         B     EMSRET1A                GO SWAP OFF SERIAL BIT
EMSPARL  EQU   *
         L     RIBUFOLD,MASKONP        MASK THAT REPRESENTS PARALLEL RQ
         LA    RIBUFNEW,ZERO           REPLACE VALUE
EMSPARLL EQU   *
         CS    RIBUFOLD,RIBUFNEW,PCCAEMSI  TURN OFF PARALLEL INDICATOR
         BZ    EMSPARLE                VALUE SWAPPED OFF SUCCESSFULLY
         LR    RIBUFNEW,RIBUFOLD       RMS INDICATOR ON
         N     RIBUFNEW,PARLOFF        TURN OFF PARALLEL INDICATOR
         B     EMSPARLL                REPEAT BUFFER UPDATE
EMSPARLE EQU   *
         BALR  RETURN14,RECRTNEP       GIVE CONTROL TO RECEIVING RTN
EMSRET2  EQU   *
         L     BASER10,ABASE-EMSRET2(RETURN14) RE-ESTABLISH BASE REG
EMSEXIT  EQU   *
         L     LCCAPTR8,PSALCCAV       LOCATE LCCA
         TM    PSASUP2,PSAIPCE2        IS THIS A SECOND ENTRY?
         BO    EMSEXIT2                TURN OFF RECURSON BIT
         NI    PSASUP2,EMSNACT         TURN OFF EMS ACTIVE INDICATOR
         L     RETURN2,LCCAESSA        OBTAIN FLIH RETURN ADDRESS
         BR    RETURN2                 RETURN TO FLIH
EMSEXIT2 EQU   *
         NI    PSASUP2,RECUROFF        TURN OFF SECOND ENTRY BIT
         L     RETURN2,LCCAESS2        OBTAIN FLIH RETURN ADDRESS
         BR    RETURN2                 RETURN TO FLIH
EMSRMSBR EQU   *
         L     RECRTNEP,ARMSRTN        RMS RTN ENTRY POINT
         BALR  RETURN2,RECRTNEP       GIVEN RMS RTN CONTROL
EMSRET3  EQU   *
         L     BASER10,ABASE-EMSRET3(RETURN2) RE-ESTABLISH BASE REG
         L     LCCAPTR8,PSALCCAV       OBTAIN LCCA VALUE
         TM    PSASUP2,PSAIPCE2        IS THIS A SECOND ENTRY?
         BZ    EMSRET3O                NO, RELOAD PCCA VALUE
         L     CVTREG,CVTPTR           LOCATE THE CVT
         L     PCCAVT3,CVTPCCAT        LOCATE THE PCCA VECTOR TABLE
         LH    CPUADR4,PSASPAD          OBTAIN PHYSICAL CPU ID
         SLL   CPUADR4,MULTBY4         LOCATE ITS ENTRY IN THE PCCA
*                                      VECTOR TABLE
         L     PCCASD5,ZERO(CPUADR4,PCCAVT3)  OBTAIN SENDING CPUS
         B     EMSRMSCH                DETERMINE IF ANOTHER REQUEST IS
*                                      IN THE EMS BUFFER
EMSRET3O EQU   *
         L     PCCASD5,LCCAASCP        OBTAIN SAVED SENDERS PCCA ADDR
         B     EMSRMSCH                DETERMINE IF ANOTHER REQUEST IS
*                                      IN THE EMS BUFFER
*              CONSTANTS
***********************************************************************
         DS    0D
MASKONS  DC    X'40000000'             SERIAL INDICATOR MASK
MASKONP  DC    X'80000000'             PARALLLEL INDICATOR MASK
PARLOFF  DC    X'7FFFFFFF'             MASK TO AND PARALLEL BIT OFF
SERLOFF  DC    X'BFFFFFFF'             MASK TO AND SERIAL INDICATOR OFF
ABASE    DC    A(EMSENTRY)             IEAVEES ENTRY POINT
ARMSRTN  DC    V(IGFPTSIG)             RMS SERVICE ROUTINE
         IHAPSA
         IHALCCA
         IHAPCCA
         CVT   DSECT=YES,LIST=YES,PREFIX=NO
EMSNACT  EQU   XFF-PSAIPCES            MASK TO TURN OFF SLIH ACTIVE
*                                      IF ENTERED FOR THE FIRST TIME
RECURSON EQU   PSAIPCES+PSAIPCE2       EMS SLIH ACTIVE AND
*                                      HAS BEEN ENTERED TWICE
RECUROFF EQU   XFF-PSAIPCE2            MASK TO TURN OFF SLIH
*                                      ACTIVE IF THIS IS A SECOND ENTRY
         END   IEAVEES
