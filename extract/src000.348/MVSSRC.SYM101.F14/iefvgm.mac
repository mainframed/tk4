         EJECT
         IEFCOMWA                                                Y02668
AWA      DSECT
         IEFVMAWA
         EJECT
         IFGRPL                                                  Y02668
         EJECT
NEL      DSECT
         IEFNEL SUBCOM=C
         EJECT
         IEFVKEYS                                                 19874
         IEFTXTFT
***********************************************************************
**********************************************************************
IEFVGM   CSECT
*/*
**********************************************************************
*
*   MODULE NAME= IEFVGM
*
*   DESCRIPTIVE NAME= MESSAGE MODULE
*
*   COPYRIGHT= N/A
*
* STATUS - VS2 SU 16 - IN THIS MODULE, SU 16 SUPPORTS          @G16APPK
*          VPSS SUPPORT(SU 29 - @G29AN2E) AND RACF             @G16APPK
*          VERSION 2(SU 32 - @G32HPPJ).                        @G16APPK
*          SU16 PTF                                            @ZA19982
*          MERGE SU4,10,16 CODE TO REL 037 PTF                 @ZA27753
*
*   FUNCTION= PRINT OUT ERROR MESSAGES OR JCL STATEMENTS
*      OPERATION= WHEN IEFVGM RECEIVES CONTROL REGISTER 2 CONTAINS THE
*                 PRIMARY MESSAGE NUMBER OR IS ZERO.  IF A     @G29AN2E
*                 PRIMARY MESSAGE NUMBER IS GIVEN, THEN THE    @G29AN2E
*                 MESSAGE IS LOCATED AND PUT TO THE MESSAGE    @G29AN2E
*                 DATA SET.  IF REGISTER 2 IS ZERO AND         @G29AN2E
*                 AOMSGTXT FLAG IS ON IN THE COMWA, THEN AN    @G29AN2E
*                 ERROR MESSAGE IN THE VGM MESSAGE BUFFER IS   @G29AN2E
*                 PUT TO THE MESSAGE DATA SET.  IF REGISTER 2  @G29AN2E
*                 IS ZERO AND AOMSGTXT FLAG IS NOT ON, THEN A  @G29AN2E
*                 STATEMENT (POINTED TO BY REGISTER 9) IS      @G29AN2E
*                 PACKED AND PUT TO THE LIST DATA SET.  IF AN  @G29AN2E
*                 I/O ERROR IS ENCOUNTERED, AN I/O ERROR WTO   @G29AN2E
*                 IS ISSUED AND EXIT IS TO THE TERMINATION     @G29AN2E
*                 ROUTINE.                                     @G29AN2E
*                                                              @G29AN2E
*                 A WARNING WTO IS ISSUED IF IT HAS NOT        @G29AN2E
*                 PREVIOUSLY BEEN ISSUED IN CASES WHEN THE     @G29AN2E
*                 PRIMARY MESSAGE NUMBER IS A WARNING          @G29AN2E
*                 MESSAGE OR WHEN AOWRNREQ IS TURNED ON IN     @G29AN2E
*                 THE COMWA.                                   @G29AN2E
*                                                              @G29AN2E
*
*   NOTES
*      CHARACTER CODE DEPENDENCIES= EBCDIC
*      DEPENDENCIES= NONE
*      RESTRICTIONS= NONE
*      REGISTER CONVENTIONS= R0-RF
*      PATCH-LABEL= PATCH
*
*   MODULE TYPE= PROCEEDURE
*      PROCESSOR= ASSEMBLER
*      MODULE SIZE=
*      ATTRIBUTES= NCAL,LET,LIST,XREF,RENT,REFR
*
*   ENTRY POINT= IEFVGM
*      PURPOSE= WRITE OUT A MESSAGE
*      LINKAGE= LOAD VCON BRANCH REGISTER
*      INPUT DATA= STATEMENT (REG 2=ZERO, REG 9=STATEMENT POINTER)
*                  ERROR MESSAGE (REG 2=PRIMARY MESSAGE NUMBER)
*      REGISTERS SAVED= 14,12
*      REGISTER CONTENTS DURING PROCESSING= N/A
*      REGISTERS RESTORED= 14,12
*
*   EXIT - NORMAL= BRANCH REGISTER 14
*      CONDITIONS= MESSAGE OR STATEMENT WRITTEN
*      OUTPUT DATA= NONE
*      RETURN CODES= NONE
*
*   EXIT - ERROR= LOAD TERMINATION RTN VCON AND BRANCH REGISTER
*      CONDITIONS= I/O ERROR ON PUT OF MESSAGE OR STATEMENT.
*      OUTPUT DATA= SET TERM BIT IN WORK AREA
*      RETURN CODES= AN 8 IN WORK AREA RETURN CODE FIELD
*
*    EXTERNAL REFERANCES= NONE
*      ROUTINES= NONE
*      DATA AREAS= IWA,AWA,NEL
*      CONTROL BLOCKS= NONE
*      TABLE= NONE
*      MACROS= GETMAIN FREEMAIN RETURN IEFSAVER IEFRELSE
*      ENQUEUE RESOURCES= N/A
*
*   MESSAGES= NONE
*
*   CHANGE LEVEL = Z40MPTH,G29AN2E,G32HPPJ                     @G32HPPJ
*   CHANGE LEVEL = Z40MPTH,ZA19982,ZA27753                     @ZA27753
*
**********************************************************************
**/
***********************************************************************
***********************************************************************
***********************************************************************
***********************************************************************
AOSTMTLT EQU   10            LENGTH OF STMT # FIELD IN MSG       Y02668
HDRLINES EQU   2                                                 Y02668
HDRLTH   EQU   17                                                Y02668
VFBMSG   EQU   X'FF'                                             Y02668
VGM0     EQU   0                                               @G29AN2E
VGM1     EQU   1                                               @G29AN2E
VGM9     EQU   9                                               @G29AN2E
L160     EQU   160                                             @G29AN2E
MAXLEN   EQU   110           MAXIMUN LENGTH TEXT TO BE PASSED  @G29AN2E
B3       EQU   B'0011'       ICM MASK                          @G29AN2E
AOMSGLO  EQU   8             OFFSET TO MSG LENGTH              @G29AN2E
*
         SAVE  (14,12)                 SAVE USER REGS
         BALR  RB,0                    SETUP MODULE BASE
         USING *,RB
*****************************************************************Y02668
* MODULE TRACE CODE - FOR TESTING.                               Y02668
         L     RF,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         CNOP  2,4
         BALR  RE,RF               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'VGM '             MOD ID USED BY TRACE.         Y02668
* TRACE RETURNS HERE.                                            Y02668
*****************************************************************Y02668
         B     GM1                 BR AROUND MODULE IDENTIFIER   Y02668
         MODID BR=NO                                             Y02668
*        DC    C'SU32'             FUNCTION ID                 @G32HPPJ
*        DC    C'01'               LEVEL # (PROTECT)           @G32HPPJ
*        DC    C'02'          LEVEL # (PUT MSG 50 IN TABLE)    @ZA19982
         DC    C'03'   LEV # (MERGE SU4,10,16 CODE TO 037 PTF) @ZA27753
GM1      DS    0H
***********************************************************************
*                   ISSUE WARNING WTO IF                         Y02668
*                   WARNING MSG IS ISSUED                        Y02668
***********************************************************************
         TM    AOSW1,AOVFBSW       CREATED MSG INDICATED       @YA00069
         BO    GM200               YES.  GO TO PROCESS MSG     @YA00069
         LTR   R2,R2               MSG OR STMT TO BE ISSUED?     Y02668
         BZ    GM200               STMT.  BYPASS WTO CODE        Y02668
         TM    SWI,WAWRNWTO        HAS A WARNING WTO BEEN ISSUED Y02668
         BO    GM200               YES.  GO TO PROCESS MSG       Y02668
         TM    AOSW4,AOWRNREQ      IS WARNING REQUESTED?       @G29AN2E
         BO    GM150                                           @G29AN2E
         LA    R6,GWRNKEYS         GET KEY TABLE ADDRESS         Y02668
         LA    R8,GWKEYLTH         GET TABLE LENGTH              Y02668
GM100    DS    0H                                                Y02668
         CLM   R2,1,0(R6)          IS THIS A WARNING KEY?        Y02668
         BE    GM150               YES ISSUE WARNING WTO         Y02668
         LA    R6,1(R6)            NO  INCREMENT TABLE POINTER   Y02668
         BCT   R8,GM100            DECREMENT AND SEARCH TABLE    Y02668
         B     GM200               NOT A WARNING MESSAGE -       Y02668
*                                  GO TO PROCESS MESSAGE         Y02668
GM150    DS    0H                                                Y02668
***********************************************************************
*        ISSUE WARNING WRITE TO OPERATOR                         Y02668
***********************************************************************
         IEFSAVER   ,              SAVE AREA FOR IEFVHR          Y02668
         TM    AOSW4,AODFWMSG     WRN MSG ISSUED TO CONSOLE?    YM00398
         BO    GM160               YES, DO NOT ISSUE AGAIN      YM00398
         LA    R5,IEF677I          GET WARNING MESSAGE KEY       Y02668
         L     RF,IEFVHRV          GET IEFVHR ADDRESS            Y02668
         BALR  RE,RF               GO TO PUT OUT WTO             Y02668
         OI    AOSW4,AODFWMSG     CONSOLE WRN MSG ISSUED        YM00398
GM160    DS    0H                                               YM00398
         IEFRELSE   ,              RELEASE IEFVHR SAVE AREA      Y02668
         TM    AOSW4,AOWRNREQ      IS WARNING REQUESTED        @G29AN2E
         BZ    GM200               NO, GO PROCESS MSG          @G29AN2E
         NI    AOSW4,X'FF'-AOWRNREQ TURN OFF WARNING REQ FLAG  @G29AN2E
         XR    R2,R2               CLER WORK REG               @G29AN2E
         TM    AOSW4,AOMSGTXT      HAS TEXT ALSO BEEN PASSED?  @G29AN2E
         BO    GM230               YES, GO PROCESS TEXT        @G29AN2E
         B     GM600               GO EXIT                     @G29AN2E
*
*
***********************************************************************
*             ENTRY DETERMINATION
*             WORK AREA PREPARATION
*             .R2 CONTAINS MESSAGE NO. OF SECONDARY MESSAGE      OR
*             .R2 EQUAL ZERO AND R9 CONTAINS STATEMENT PTR
*             .R6 CONTAINS ADDR OF WORK BUFFER
***********************************************************************
GM200    EQU   *
         TM    AOSW4,AOMSGTXT      IS TEXT PASSED?             @G29AN2E
         BO    GM230               YES - CHECK MSG LEN         @G29AN2E
         L     R1,WAMSGBUF         GET WORK AREA ADDRESS         Y02668
         MVI   0(R1),C' '          BLANK OUT                     Y02668
         MVC   1(159,R1),0(R1)     WORK BUFFER                   Y02668
         LR    R6,R1                   SAVE BUFFER PTR
         LR    R8,R1                   SAVE ADDR BUFFER
         TM    AOSW1,AOVFBSW       CALLED BY VFB?                Y02668
         BO    AOEPCVT             YES, GO TO MOVE STMT #        Y02668
GM210    LTR   R2,R2                   TEST FOR MESSAGE          Y02668
         BZ    GM400                   BCH ON STATEMENT ENTRY
         L     R7,CTRLWAP          MESSAGE ENTRY-GET SEC MESSAGE
         USING AWA,R7
         L     R9,TEXTBUFP         ADDR OF TEXT STRING.          Y02668
         USING TEXT,R9             PREFIX ADDRESSABILITY.        Y02668
         TM    STRINDCS,PROCSTR    PROC STATEMENT?               Y02668
         BZ    GM225               BRANCH NO.                    Y02668
         DROP  R9                                                Y02668
         CLI   MSGKEY,EXECK       IS EXECK IN MSGKEY?            A32755
         BNE   GM225              TRANSFER IF MSGKEY NOT EXEC.   A32755
         MVI   MSGKEY,INTKEY3     MOVE PROC KEY INTO MSGKEY.     A32755
GM225    DS    0H                                                A32755
         SR    R9,R9               CLEAR SEC MSG NUMBER REG.     Y02668
         IC    R9,MSGKEY               LOCATE SECONDARY MSG NO
         DROP  R7
         B     AOEPCVT            SKIP TO MOVE STMT #          @G29AN2E
GM230    DS    0H                                              @G29AN2E
         L     R1,WAMSGBUF        GET ADDR OF MSG BUFFER       @G29AN2E
         LR    R8,R1              SAVE ADDR                    @G29AN2E
         XR    R7,R7              CLEAR WORK REG               @G29AN2E
         CH    R7,AOMSGLO(R1)     IS LENGTH OF MSG>0           @G29AN2E
         BE    GM600              NO, GO EXIT                  @G29AN2E
         LA    R7,MAXLEN          STORE MAX ALLOWABLE MSG LEN  @G29AN2E
         CH    R7,AOMSGLO(R1)     IS MSG LONGER THAN MAX       @G29AN2E
         BNH   GM235              YES, ASSUME MAX LENGTH       @G29AN2E
         ICM   R7,B3,AOMSGLO(R1)  NO, GET ACTUAL LENGTH        @G29AN2E
GM235    DS    0H                                              @G29AN2E
         LA    R7,AOSTMTLT(R7)     GET TOTAL LENGTH TO WRITE   @G29AN2E
         LA    RE,L160             GET LENGTH OF BUFFER        @G29AN2E
         SR    RE,R7               GET TOTAL BLANKS NEEDED     @G29AN2E
         LR    RF,R1               GET ADDR OF BUFFER          @G29AN2E
         AR    RF,R7               GET ADDR OF FIRST BLANK     @G29AN2E
         MVI   VGM0(RF),C' '       MOVE FIRST BLANK            @G29AN2E
         BCTR  RE,0                GET NUMBER LEFT TO DO       @G29AN2E
         BCTR  RE,0                DECREMENT FOR MOVE          @G29AN2E
         EX    RE,MVCBLANK         BLANK OUT REST OF BUFFER    @G29AN2E
         MVI   VGM0(R1),C' '       BLANK OUT FIRST CHAR        @G29AN2E
         MVC   VGM1(VGM9,R1),VGM0(R1) BLANK OUT NEXT 9 CHARS   @G29AN2E
*                                                                Y02668
* MOVE IN STMT # FOR THIS MESSAGE                                Y02668
*                                                                Y02668
         SPACE 2                                                 Y02668
AOEPCVT  DS    0H                                                Y02668
         LH    R4,WASTMTNO         GET NUMBER OF THIS STMT       Y02668
         CVD   R4,AOEPWORK         CONVERT TO DECIMAL            Y02668
         UNPK  0(5,R8),AOEPWORK(8) UNPACK STMT# TO MSG BUFFER    Y02668
         OI    4(R8),X'F0'         CHANGE SIGN TO ZONE           Y02668
         LR    R4,R8                                             Y02668
AOEPCVT1 DS    0H                                                Y02668
         CLI   0(R4),X'F0'         CHECK FOR LEADING ZERO        Y02668
         BNE   AOEPCVT2            BRANCH IF NO                  Y02668
         MVI   0(R4),C' '          CHANGE LEADING ZERO TO BLANK  Y02668
         LA    R4,1(R4)            POINTS TO NEXT BYTE           Y02668
         B     AOEPCVT1            BRANCH TO CHECK AGAIN         Y02668
AOEPCVT2 DS    0H                                                Y02668
         TM    AOSW4,AOMSGTXT      IS TEXT PASSED?             @G29AN2E
         BO    GM355               YES, GO CHECK HEADER        @G29AN2E
         LA    R7,AOSTMTLT         R7=STMT # LENGTH              Y02668
         LA    R8,0(R7,R8)         ADJUST PTR INTO BUFFER        Y02668
         SR    R4,R4         PRIMARY MESSAGE SCAN BEGINS AT BEGINNI0725
*                            OF TABLE                              0725
         TM    AOSW1,AOVFBSW       FROM VFB?                     Y02668
         BZ    GM300               NO, BRANCH AROUND             Y02668
         IC    R4,IWAMSLEN         GET MSG LENGTH                Y02668
         LR    R3,R9               SAVE PTR                      Y02668
         NI    AOSW1,255-AOVFBSW   TURN OFF VFB SWITCH           Y02668
         LA    R2,VFBMSG           IND MSG TO PUT ROUTINE        Y02668
AOEP0235 DS    0H                                                Y02668
         AR    R7,R4               ADD LENGTHS                   Y02668
         BCTR  R4,0                DECREMENT BY 1 FOR MOVE       Y02668
         EX    R4,MVC3             EXECUTE MOVE                  Y02668
         B     GM350                                             Y02668
GM250    EQU   *
         LTR   R9,R9                   TEST FOR SECOND MSG
         BZ    GM350          BCH ON NO SECONDARY MSG FOUND
         LR    R2,R9                 RESET FOR SECOND MSG
         LA    R4,KEFAC      SECONDARY MESSAGE SCAN BEGINS AT MIDDLE725
*                            OF TABLE                              0725
         XR    R9,R9                  FLAG END OF MSGS
*
***********************************************************************
***********************************************************************
*             ERROR MESSAGE PROCESSING-
*             THERE EXIST 2 POSSIBLE MESSAGES-PRIMARY MSG NO. IS IN THE
*             REG 2-SECONDARY MSG NO. IN IWA UNDER LABEL MSGKEY.
*             PRIMARY MSG IS LOCATED AND INSERTED INTO THE BUFFER AREA
*             THEN THE SECONDARY MSG IS LOCATED,INSERTED INTO THE
*             BUFFER,AND THE 2 MSG LENGTHS ARE TOTALLED AND INSERTED
*             IN FRONT OF COMPLETED MESSAGE.
*             .R2 CONTAINS MSG NUMBER -SEARCH ARGUMENT
*             .R3 SCANS TABLE OF MSG MOD AND MSGS WITHIN PARTICULAR
*              MODULE -ENDS POINTING TO LENGTH CHARACTER OF MSG DESIRED
*             .R4  ON ENTRY TO TABLE SCAN ROUTINE POINTS TO RELATIV0725
*              START LOCATION WHERE SCAN IS TO BEGIN. PRIMARY MESSA0725
*              START AT THE BEGINNING -SECONDARY MESSAGES START AT 0725
*              MIDDLE. THEN  REG4  IS ZEROED TO BE USED            0725
*             .R4 USED TO INCREMENT SCANNING REG
*             .R5 HOLDS ADDR OF SYMBOLIC NAME OF MSG MODULE LOADED
*              TO DELETE LATER
*             .R6 POINTS TO BUFFER AREA
*             .R8 USED TO PUT MSG IN START OF BUFFER -FIRST MSG
*                             OR     MIDDLE OF BUFFER-SECOND MSG
*             .R9 HOLDS SECOND MSG NO. DURING PROCESSING OF PRIMARY
*              MSG
***********************************************************************
GM300    EQU   *
         LA    R3,GMT1                 TABLE ADDR
         ALR   R3,R4               ADJUST TO STARTING POINT       19874
         SR    R4,R4
GM305    EQU   *
         IC    R4,0(R3)                HI NO. OF MODULE
         CR    R2,R4                   MESSAGE IN THIS MODULE
         BNH   GM320               YES, LOAD MODULE               19874
GM310    EQU   *
         LA    R3,2(R3)                TEST NEXT NO.
         CLI   0(R3),X'00'         IS IT END OF TABLE              0725
         BNE   GM305            BCH ON NO                          0725
         B     GM350          GO PUT OUT PRIMARY ONLY              0725
GM320    EQU   *
         SR    R4,R4                   SETUP TO LOAD MSG MOD
         IC    R4,1(R3)                POSITION OF MOD VCON IN TABLE
         LA    R3,GMT2                 TBL OF VCONS
         AR    R3,R4                   PLUS POSITION OF PARTIC MOD
         LR    R0,R3                   SETUP TO LOAD
         LR    R5,R3                   SAVE ADDR OF SYMBOLIC MODULE
         LOAD  EPLOC=(0)
         LR    R3,R0                   LOCATION OF ENTRY PT
*
***********************************************************************
*             SCAN MESSAGES IN MODULE FOR PARTICULAR MESSAGE NO.
*             .FORMAT OF MESSAGE-1 BYTE MESSAGE NO
*                                1 BYTE LENGTH OF MESSAGE
*                                MESSAGE
***********************************************************************
GM330    EQU   *
         SR    R4,R4
         CLI   0(R3),X'FF'
         BE    GM339               BCH NO MSG FOUND
         IC    R4,0(R3)                MESSAGE NO.
         CR    R2,R4                   IS THIS THE MESSAGE
         BE    GM340                   BCH  ON  YES
         IC    R4,1(R3)                NO-LENGTH OF MSG
         LA    R3,2(R4,R3)    ADJUST TO POINT TO NEXT MSG
         B     GM330
*
GM339    EQU   *
         LR    R0,R5          SETUP TO DELETE MSG MODULE
         DELETE EPLOC=(0)
GM3395   EQU   *             EXIT POINT                            0725
         LR    R3,R6          ADDR OF BUFFER TO FREE
         B     GM600             EXIT FROM ROUTINE
***********************************************************************
*             MESSAGE FOUND
*             .MOVE MSG INTO BUFFER+1
*             .SAVE MSG LENGTH IN REG7
*             .TEST END OF MESSAGES-REG1 IS ZERO
*             .DELETE MODULE AND RESCAN FOR SECOND MSG
*             .R3 POINTS TO MSG
*             .R7 TOTALS LENGTH OF BOTH MSGS
*             .R8 BUFFER ADJUST REG TO INSERT MSGS
***********************************************************************
GM340    EQU   *
         IC    R4,1(R3)                LENGTH OF MSG
         LA    R3,2(R3)                POINTS TO MSG CONTENT
         CLI   0(R3),C' '          IS THIS SECOND LINE OF MSG    Y02668
         BNE   GM345               BRANCH NO                     Y02668
         MVI   0(R6),C' '          BLANK OUT STMT #              Y02668
         MVC   1(5,R6),0(R6)       ALREADY IN THE BUFFER         Y02668
GM345    DS    0H                                                Y02668
         AR    R7,R4                   TOTAL LENGTH
         BCTR  R4,0                    DECREMENT COUNT ONE FOR EXEC MVC
         EX    R4,MVC3                 MOVE MSG INTO BUFFER
         LR    R0,R5                   ADDR OF SYMBOLIC NAME TO DELETE
         DELETE EPLOC=(0)
         LTR   R9,R9                    TEST END OF MSGS
         BZ    GM350                   BCH YES
         LA    R8,2(R4,R8)         ADJUST PTR INTO BUFFER        Y02668
         MVI   0(R8),C' '               MOVE IN BLANK FOR SPACING
         LA    R7,1(R7)                ADJUST LENGTH TO INCLUDE SPACE
         B     GM250
MVC3     MVC   0(0,R8),0(R3)                                     Y02668
GM350    EQU   *
         LTR   R7,R7        IS THERE A PRIMARY MSG TO PUT OUT      0725
         BZ    GM3395                BCH NO TO EXIT                0725
         MVI   0(R6),C' '              BLANK FIRST BYTE          Y02668
GM355    DS    0H                                              @G29AN2E
         LA    R5,WAJOBPFX         ADDR OF IWA JOB PFX           Y02668
         USING TEXT,R5             SET ADDRESSIBILITY TO PFX     Y02668
         TM    STRJINDC,JTXMHEDR   HAS A HEADER BEEN WRITTEN ?   Y02668
         BZ    GM700               NO GO TO WRITE HEADER         Y02668
         DROP  R5                  DROP TEXT BASE                Y02668
GM360    EQU   *                                                 Y02668
         TM    AOSW4,AOMSGTXT      IS TEXT PASSED?             @G29AN2E
         BO    GM365               YES, GO SET UP FOR PUT      @G29AN2E
         LR    R3,R6               GET MESSAGE ADDRESS           Y02668
         LA    R4,1(R7)            GET MESSAGE LENGTH            Y02668
         BAL   R9,GM500            GO TO WRITE MSG               Y02668
         B     GM600               RETURN TO CALLER              Y02668
GM365    DS    0H                                              @G29AN2E
         L     R3,WAMSGBUF         GET ADDR OF BUFFER          @G29AN2E
         LR    R4,R7               GET LENGTH OF MESSAGE       @G29AN2E
         BAL   R9,GM500            GO TO WRITE TEXT            @G29AN2E
         B     GM600               RETURN TO CALLER            @G29AN2E
***********************************************************************
***********************************************************************
*             STATEMENT PROCESSING-
*             .INPUT-REG9 PTS TO STATEMENT
*              MOVE STATEMENT INTO MESSAGE BUFFER
***********************************************************************
GM400    EQU   *
         LR    R3,R6                   ADDR OF BUFFER
         SR    R7,R7          CLEAR                                I68
         IC    R7,IWAMSLEN    PICK UP MESSAGE LENGTH - USUALLY 80  I68
         LR    R4,R7          PUT LENGTH IN REG 4                Y02668
         L     R9,AOWSTMT          R9 PTR TO 'WRITE' BUFFER      Y02668
         BCTR  R7,0                    LESS CT FOR EXEC MVC      Y02668
         EX    R7,MVC1                 MOVE DATA FIELD           Y02668
         BAL   R9,GM500            GO TO  WRITE STMT             Y02668
         B     GM600               RETURN TO CALLER              Y02668
*
**********************************************************************
*             PUT STATEMENT OR ERROR MESSAGE MESSAGE DATASET
*             .R3 -PTR TO MESSAGE OR STATEMENT
*             .R4 -LENGTH OF MESSAGE OR PACKED STATEMENT
**********************************************************************
GM500    EQU   *
         L     R5,WANELPTR         GET NEL BASE                  Y02668
         USING NEL,R5              ESTABLISH BASE                Y02668
         LA    RA,RPLADDR          GET RPL BASE                  Y02668
         USING IFGRPL,RA           ESTABLISH BASE                Y02668
         MVI   RPLREQ,RPLPUT       OPERATION TO BE A PUT         Y02668
         TM    AOSW4,AOMSGTXT      IS TEXT PASSED?             @G29AN2E
         BO    GM5005                                          @G29AN2E
         LTR   R2,R2               TEST FOR STMT OR MSG          Y02668
         BZ    PUTSTMT             GO TO STMT PROCESSING         Y02668
GM5005   DS    0H                                              @G29AN2E
         MVC   RPLDACB,NELMSGCB    MOVE IN ACB POINTER           Y02668
         B     GM551               BRANCH ARROUND TEXT PROC      Y02668
PUTSTMT  MVC   RPLDACB,NELSTMCB    MOVE ACB POINTER              Y02668
GM551    ST    R3,RPLAREA          POINTER TO RECORD             Y02668
         XC    RPLARG(4),RPLARG    ZERO FIELD                    Y02668
         MVI   RPLOPT1,RPLSEQ      SET TO SEQUENTIAL             Y02668
         ST    R4,RPLRLEN          STORE RECORD LENGTH.          Y02668
         XC    RPLBUFL(4),RPLBUFL  ZERO BUFFER LENGTH.           Y02668
         XC    RPLDDDD(4),RPLDDDD  ZERO RETURN POINTER           Y02668
         ST    RD,IWASACHN         CHAIN SAVE AREAS              Y02668
         LA    RD,IWAIOSA          POINT OT ACC. MTHD. SAVE AREA Y02668
         LR    R1,RA            REG. 1 POINTS TO RPL             Y02668
         PUT   RPL=(1)
         L     RD,IWASACHN         RESTORE SAVE AREA POINTER     Y02668
         TM    AOSW1,AOIOERR       I/O ERROR FROM LIST DATA SET? Y02668
         BO    ERREXIT             IF YES GO TO IEFVHN           Y02668
         LTR   RF,RF               CHECK RETURN CODE             Y02668
         BCR   8,R9                RETURN TO CALLER              Y02668
**********************************************************************
*        I/O ERROR MESSAGE HANDLER                               Y02668
**********************************************************************
         CLC   RPLDACB,NELMSGCB    I/O ERROR ON MSG DATA SET?    Y02668
         BE    MSGDSERR            ISSUE MSG ERROR WTO           Y02668
         LA    R5,4                I/O ERROR MSG CODE            Y02668
         L     RF,IEFVHRV          GET WTO RTN ADDR              Y02668
         BALR  RE,RF               GO TO ISSUE MSG               Y02668
         LA    R2,20               I/O ERROR MSG CODE            Y02668
         MVI   AOSW1,AOIOERR       SET LIST I/O ERROR IN IWA     Y02668
         MVC   1(159,R6),0(R6)     ZERO WORK BUFFER              Y02668
         LR    R8,R6               SET WORK BUFFER POINTER       Y02668
         B     GM210               GO TO PUT OUT MESSAGE         Y02668
MSGDSERR DS    0H                                                Y02668
         LA    R5,5                I/O ERROR MSG CODE            Y02668
         L     RF,IEFVHRV          GET WTO RTN ADDR              Y02668
         BALR  RE,RF               GO TO ISSUE MSG               Y02668
**********************************************************************
*        EXIT ROUTINE I/O ERROR                                  Y02668
**********************************************************************
ERREXIT  DS    0H                                                Y02668
         MVC   IWARET(2),PGMERROR  SET RETURN CODE IN IWA        Y02668
         OI    AOSW4,CWATERM       INDICATE TERMINATION          Y02668
         L     RF,TERMRTN          GET TERMINATION ADDRESS       Y02668
         BR    RF                  GO TO TERMINATION             Y02668
IEFVHRV  DC    V(IEFVHR)                                         Y02668
**********************************************************************
*             EXIT ROUTINE
*             .FREE CORE BUFFER AREA
*             .RETURN
**********************************************************************
GM600    EQU   *
GM650    EQU   *
         RETURN (14,12)
*****************************************************************Y02668
*   PUT HEADER ROUTINE                                           Y02668
*****************************************************************Y02668
GM700    EQU   *                                                 Y02668
         LA    R3,HEADER           GET HEADER ADDRESS            Y02668
         LA    R4,HDRLTH           GET HEADER LENGTH             Y02668
         LA    R8,HDRLINES         GET NUMBER OF LINES TO PRINT  Y02668
GM750    EQU   *                                                 Y02668
         BAL   R9,GM500            GO TO PRINT HEADER            Y02668
         LA    R3,HDRLTH(R3)       GET NEXT LINE ADDRESS         Y02668
         BCT   R8,GM750            LOOP TO PRINT NEXT LINE       Y02668
         LA    R3,WAJOBPFX         ADDR OF IWA JOB PFX           Y02668
         USING TEXT,R3             SET ADDRESSIBILITY TO PFX     Y02668
         OI    STRJINDC,JTXMHEDR   INDICATE HEADER WRITTEN       Y02668
         DROP  R3                  DROP TEXT BASE                Y02668
         B     GM360               RETURN TO PRINT MSG           Y02668
PGMERROR DC    X'0024'             PGM ERROR RETURN CODE         Y02668
HEADER   DC    CL17' STMT NO. MESSAGE'                           Y02668
         DC    CL17'-                '                           Y02668
MVC1     MVC   0(0,R6),0(R9)                                     Y02668
MVCBLANK MVC   VGM1(0,RF),VGM0(RF)   BLANK OUT REST OF BUFFER  @G29AN2E
***********************************************************************
*             .A PRIMARY MESSAGE CONTAINS THE IEF6..I  IDENTIFICATION
*              AND ALWAYS APPEARS FIRST IN THE MESSAGE LINE.
*              IT DESCRIBES THE ERROR
*             .A SECONDARY MESSAGE DOES NOT HAVE AN IDENTIFICATION. IT
*              IS ASSOCIATED WITH A PARTICULAR INTERPRETER KEY. IT
*              ALWAYS FOLLOWS THE PRIMARY MESSAGE IN THE MESSAGE LINE
*              IT IDENTIFIES THE PARTICULAR PARAMETER FIELD IN ERROR
*              AND ON WHICH PARTICULAR TYPE JCL STATEMENT THE ERROR
*              OCCURRED
*
*              PRIMARY MESSAGES ARE IDENTIFIED BY A PARTICULAR INTE0725
*              NAL MESSAGE NUMBER.  SECONDARY MESSAGES ARE IDENTIFI0725
*              BY THEIR INTERNAL KEY.                              0725
*             TWO TABLES ARE USED TO OBTAIN ANY GIVEN MESSAGE NUMBER
*             .TABLE1 - EACH ENTRY IN GMT1 IS 2 BYTES
*              (GMT1)        .FIRST BYTE IS THE HIGHEST MSG NUMBER
*                                CONTAINED IN THE MODULE LOCATED AT
*                                A DISPLACEMENT VALUE  INDICATED BY THE
*                            .THE SECOND BYTE VALUE  WITHIN
*             .TABLE2 - EACH ENTRY IN GMT2 IS  8 BYTES - THE TABLE IS
*              (GMT2)  A LIST OF MESSAGE TEXT MODULES
*
*  NOTES--     PRIMARY MESSAGE NUMBERS ARE LOCATED IN THE FIRST HAL0725
*              OF THE TABLE GMT1-SCAN BEGINS AT THE BEGINNING.     0725
*              SECONDARY MESSAGE NUMBERS (KEYS) ARE LOCATED IN THE 0725
*              LAST HALF-SCAN BEGINS AT THE MIDDLE                 0725
*
*             TABLE INSERTS SHOULD REQUIRE ONLY REASSEMBLY TO CORRECT
*              POSITION DISPLACEMENTS WITHIN TABLE 2
*
***********************************************************************
*          TABLE 1 -OF HIGH MESSAGE NUMBERS AND THEIR RESPECTIVE MODULE
*              POSITION DISPLACEMENTS WITHIN TABLE 2
GMT1     EQU   *
         DC    X'07'
         DC    AL1(M1-GMT2)
         DC    X'0F'
         DC    AL1(M2-GMT2)
         DC    X'17'
         DC    AL1(M3-GMT2)
         DC    X'1F'
         DC    AL1(M4-GMT2)
         DC    X'27'
         DC    AL1(M5-GMT2)
         DC    X'2F'
         DC    AL1(M6-GMT2)
         DC    X'37'
         DC    AL1(M7-GMT2)
         DC    X'3F'                                               0725
         DC    AL1(M70-GMT2)                                       0725
         DC    X'50'                                           @ZA19982
         DC    AL1(M71-GMT2)                                      O106
         DC    X'00'       END OF PRIMARY MESSAGES                 0725
GMTK     EQU   *                                                   0725
         DC    AL1(THRESHMK)                                M3944,M5688
         DC    AL1(M76-GMT2)                                M3944,M5688
         DC    AL1(QNAMEK)                                        M3131
         DC    AL1(M67-GMT2)                                      20002
         DC    AL1(DUMMK)                                         19874
         DC    AL1(M78-GMT2)                                       0725
         DC    AL1(DISPK)                                         19874
         DC    AL1(M8-GMT2)
         DC    AL1(SEPMK)                                         19874
         DC    AL1(M9-GMT2)
         DC    AL1(BUFLMK)                                        19874
         DC    AL1(M10-GMT2)
         DC    AL1(DSORGMK)                                       19874
         DC    AL1(M11-GMT2)
         DC    AL1(NTMMK)                                         19874
         DC    AL1(M12-GMT2)
         DC    AL1(DDK)                                           19874
         DC    AL1(M13-GMT2)
         DC    AL1(RDPEK)                                         19874
         DC    AL1(M19-GMT2)                                       AAAA
         DC    AL1(CONDPEK)                                       19874
         DC    AL1(M14-GMT2)
         DC    AL1(EXECK)                                         19874
         DC    AL1(M15-GMT2)
         DC    AL1(ROLLJK)                                        19874
         DC    AL1(M17-GMT2)
         DC    AL1(JOBK)                                          19874
         DC    AL1(M16-GMT2)
         DC    AL1(INTKEY8)                                   M3738O106
         DC    AL1(M18-GMT2)
         DC    X'00'
         DS    0D
*          TABLE 2 -OF MESSAGE TEXT MODULES
GMT2     EQU   *
M1       DC    CL8'IEFVGM1'   MSG NOS   01   -  07
M2       DC    CL8'IEFVGM2'             08   -  0F
M3       DC    CL8'IEFVGM3'             10   -  17
M4       DC    CL8'IEFVGM4'             18   -  1F
M5       DC    CL8'IEFVGM5'             20   -  27
M6       DC    CL8'IEFVGM6'             28   -  2F
M7       DC    CL8'IEFVGM7'             30   -  37                 0725
M70      DC    CL8'IEFVGM70'            38   -  3F                 0725
M71      DC    CL8'IEFVGM71'            40   -  50             @ZA19982
*             INSERT NEW MODULES OF PRIMARY MESSAGES HERE          0725
*                                                                  0725
*             MODULES OF MESSAGES ASSOCIATED WITH  INTERNAL KEYS   0725
M76      DC    CL8'IEFVGM76'            1B   -  2E             @G32HPPJ
M67      DC    CL8'IEFVGM67'            2F   -  36          M3944,M5688
M78      DC    CL8'IEFVGM78'            37   -  3E                19874
M8       DC    CL8'IEFVGM8'             3F   -  46                19874
M9       DC    CL8'IEFVGM9'             47   -  4E                19874
M10      DC    CL8'IEFVGM10'            4F   -  56                19874
M11      DC    CL8'IEFVGM11'            57   -  5E                19874
M12      DC    CL8'IEFVGM12'            5F   -  66                19874
M13      DC    CL8'IEFVGM13'            67   -  6E                19874
M19      DC    CL8'IEFVGM19'            7E   -  85                19874
M14      DC    CL8'IEFVGM14'            86   -  8D                19874
M15      DC    CL8'IEFVGM15'            8E   -  94                19874
M17      DC    CL8'IEFVGM17'            A5   -  AC                19874
M16      DC    CL8'IEFVGM16'            AD   -  B4                19874
M18      DC    CL8'IEFVGM18'            F0   -  F7                19874
CF0      DC    F'0'
CF0F     DC    X'0000FFFF'
KEFAC    EQU   GMTK-GMT1      DISPLACEMENT FACTOR TO SCAN KEY MSGS 0725
***********************************************************************
*     WARNING MESSAGE KEY TABLE                                  Y02668
***********************************************************************
GWRNKEYS EQU   *                   BEGINNING OF WRN KEY TABLE    Y02668
         DC    X'02'               MSG - IEF674I                 Y02668
         DC    X'04'               MSG - IEF675I                 Y02668
         DC    X'13'               MSG - IEF676I                 Y02668
         DC    X'30'               MSG - IEF648I                 Y02668
         DC    X'37'               MSG - IEF655I                 Y02668
         DC    X'38'               MSG - IEF681I                 Y02668
         DC    X'42'               MSG - IEF682I                 Y02668
         DC    X'4A'               MSG - IEF684I                 Y02668
         DC    X'4B'               MSG - IEF685I                 Y02668
         DC    X'50'          MSG - IEF686I                    @ZA19982
GWKEYEND EQU   *                   END OF WRN KEY TABLE          Y02668
GWKEYLTH EQU   GWKEYEND-GWRNKEYS   LENGTH OF WARNING KEY TABLE   Y02668
IEF677I  EQU   1                   WARNING WTO KEY               Y02668
PATCH    DC    25F'0'              **********PATCH SPACE*********Y02668
         END
