         TITLE 'IEFVHN'
***********************************************************************
*
*   MODULE NAME= IEFVHN
*
*   DESCRIPTIVE NAME= INTERPRETER TERMINATION ROUTINE
*
*   COPYRIGHT= N/A
*
*   STATUS= VS2 SU16 - IN THIS MODULE, SU 16 SUPPORTS          @G16AP2F
*           VPSS SUPPORT (SU 29 - @G29AN2F).                   @G16AP2F
*           MERGE SU4,10,16 CODE TO REL 037 PTF                @ZA27750
*
*   FUNCTION=  THIS ROUTINE PERFORMS CLEAN UP FUNCTIONS
*             JUST PRIOR TO INTERPRETER TERMINATION.   IT FREES AREAS
*             GOTTEN BY THE INITIALIZATION ROUTINE(IEFVHE), ISSUES
*             WTO'S INFORMING THE OPERATOR OF JOB STATUS AT
*             INTERPRETER END, AND SETS RETURN CODES TO BE PASSED
*             TO THE INTERPRETER'S CALLER.
*             SWA SUPPORT -
*             ALL CODE REFERENCING THE 3RD BYTE OF A TTR HAS BEEN
*             REMOVED.THE SWA VIRTUAL ADDRESSING MAKES THIS TEST
*             INVALID.
*
*
*      OPERATION=
*              .A CHECK IS MADE TO SEE IF A JCL OR I/O ERROR HAS
*               OCCURRED.   IF A JCL ERROR, A WTO IS ISSUED ( JOB NOT
*               RUN JCL  ERROR), AND A RETURN CODE OF 4 IS PLACED IN
*               REG 15.   IF AN I/O ERROR, A RETURN CODE OF 8 IS PLACED
*               IN REG 15.
*              .INPUT AND OUTPUT BUFFERS ARE FREED.
*              .FREE LOCAL WORK AREA
*              .IF LOADED, SWA MANAGER IS DELETED
*              .IF SPECIAL ACCESS METHOD PROVIDED, FREE IT
*              .RESTORE QMPA FOR RETURN TO CALLER
*              .INITIALIZE NELJCT PTR
*              .CHECK FOR SMF.  IF FUNCTIONAL, CHECK IF USER RTN
*               WAS LOADED.   IF YES, DELETE IT.
*               MOVE UPDATED JMR BACK TO CALLER'S STORAGE AND
*               FREE CORE THAT HELD IT.
*              .FREE DSENQ TABLE CORE.
*              .FREE INTERPRETER WORK AREA
*              .CHECK IF SPECIAL RETURN PROVIDED.   IF YES, SET
*               UP FOR XCTL OR BR, AND TAKE SPECIAL EXIT.
*               IF NORMAL RETURN, RE-LOAD CALLER'S REGS AND EXIT.
*
*
*   NOTES
*      CHARACTER CODE DEPENDENCIES= EBCDIC
*      DEPENDENCIES= NONE
*      RESTRICTIONS= NONE
*      REGISTER CONVENTIONS= REG11 - BASE REGISTER
*                            REG12 - INTERPRETER WORK AREA PTR
*                            REG13 - REG SAVE AREA PTR
*      PATCH-LABEL= PATCH
*
*
*   MODULE TYPE= BAL CSECT
*      PROCESSOR= ASSEMBLER
*      ATTRIBUTES= NCAL,LET,LIST,XREF,RENT,REFR
*                  KEY 0, PAGEABLE LPA
*
*
*   ENTRY POINT= IEFVHN FROM IEFVHH,IEFKG, AND  IEFVHQ
*      PURPOSE= TO TERMINATE INTERPRETER
*      LINKAGE= BALR AND BR 14
*      INPUT DATA= R12 - IWA PTR, R13 - RSA PTR
*      REGISTERS SAVED= NONE
*      REGISTER CONTENTS DURING PROCESSING=
*               R0  - WORK REG
*               R1  - PARMLIST PTR AND WORK REG
*               R2  - NEL PTR
*               R3  - SUBROUTINE LINKAGE  AND WORK REG
*               R4  - MSG AREA PTR AND WORK REG
*               R5  - REG SAVE AREA INDEX REG
*               R6  - SUBROUTINE LINKAGE AND WORK REG
*               R7  - NEL EXIT LIST PTR
*               R8  - JCT BASE AND NEL EXIT LIST PTR
*               R9  - MSG CODE AND WORK REG
*               R10 - WORK REG
*               R11 - CSECT BASE REG
*               R12 - PTR TO INTERPRETER WORK AREA
*               R13 - PTR TO REG SAVE AREA
*               R14 - LINKAGE AND WORK REG
*               R15 - LINKAGE AND WORK  REG
*      REGISTERS RESTORED= R14-R12
*
*
*   EXIT - MORMAL= BR  14 TO INTERPRETER'S CALLER
*      CONDITIONS= CLEAN UP PROCESSING COMPLETE
*      OUTPUT DATA= R1 - PTR TO NEL, R15 - RETURN CODE
*      RETURN CODES= ZERO(0) INDICATES INTERPRETATION SUCCESSFUL
*
*
*   EXIT - ERROR= BR 14 TO INTERPRETER'S CALLER
*      CONDITIONS= CLEAN UP PROCESSING COMPLETE
*      OUTPUT DATA= R1 - PTR TO NEL, R15 - RETURN CODE
*      RETURN CODES=  4 - JCL ERROR
*                     8 - I/O ERROR
*
*
*   EXTERNAL REFERENCES=
*      ROUTINES= IEFKG
*      DATA AREAS= IWA,QMPA
*      CONTROL BLOCKS= JCT,JMR,NEL
*      TABLE= NONE
*      MACROS= IEFVMIWA,IEFAJCTB,IEFJMRIEFRELSE,FREEPOOL,MODID,XCTL,
*              IEFQMNGR,IEFNEL,DELETE,FREEMAIN,GETMAIN,RETURN
*      ENQUEUE RESOURCES= NONE
*
*
*   MESSAGES=
*            IEF428I TERMINATED DUE TO I/O ERROR
*            IEF452I JJJ JOB NOT RUN JCL ERROR
*
*   CHANGE LEVEL = Y02668, Z40MPTH, OZ10444, G29AN2F, OZ27750  @ZA27750
*
***********************************************************************
         EJECT
         IEFCOMWA
         IEFVMIWA
         EJECT
         IEFVMEWA
ENDLAREA EQU   *
         EJECT
         EJECT
JCTD     DSECT
         IEFAJCTB
     IEFJMR
         EJECT
         IEFZB9RD
         EJECT
         IEFQMNGR
QPARMEND DS    0D
         EJECT
         IEFTXTFT
         EJECT
*********
NELHERE  DSECT
         IEFNEL  SUBCOM=I,EXITS=(RTN,QEP,SMF)
         EJECT
IEFVHN   CSECT                                                    M1865
* CODE ADDED TO VHNEXOUT ROUTINE                               @ZA10444
*                   RD=PTR TO CURRENT REG SAVE AREA
*                                  AND CANNOT BE CLOBBERED
         BALR  RB,0
         USING *,RB          *
*
*****************************************************************Y02668
* MODULE TRACE CODE - FOR TESTING.                               Y02668
         L     RF,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         BALR  RE,RF               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'VHN '             MOD ID USED BY TRACE.         Y02668
* TRACE RETURNS HERE.                                            Y02668
*****************************************************************Y02668
         B     HN1                 BRANCH AROUND ID.             Y02668
         MODID BR=NO                                             Y02668
*        DC    C'SU16'            FUNCTION ID                  @G16AP2F
*        DC    C'01'              LEVEL # (SU16)               @G16AP2F
         DC    C'02'  LEV # (MERGE SU4,10,16 CODE TO 037 PTF)  @ZA27750
HN1      DS    0H                                                Y02668
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*  TERMINATION - RETURN CODE PROCESSING                         *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
VHN0010  DS    0H                                                Y02668
         L     R1,WORD(RD)         PICK UP PTR TO REG SAVE       Y02668
*                                  AREA OF INTERPRETER'S CALLER  Y02668
         CL    R1,IWASAVPT         IS THIS, IN FACT THE CORRECT  Y02668
*                                  SAVE AREA PTR(SAVED ON ENTRY  Y02668
*                                  BY NB903)                     Y02668
         BE    VHN0020             YES, CONTINUE TERMINATION     Y02668
*                                  NO, FREE EXCESS RSA AND CHECK Y02668
         IEFRELSE ,                NEXT BACKWARD CHAIN PTR       Y02668
         B     VHN0010             GO BACK AND CHECK AGAIN       Y02668
         SPACE 2                                                 Y02668
VHN0020  DS    0H                **RETURN CODE PROCESSING        Y02668
         L     R1,WORD(RD)         ADDRESS CALLER'S RSA          Y02668
         XC    SAVERF(WORD,R1),SAVERF(R1) ZERO RETURN CODE REG   Y02668
*                                  IN CALLER'S SAVE AREA         Y02668
         CLC   IWARET(2),IOERROR   TEMP *** I/O ERROR?/PGM CHK   Y02668
         BL    VHN0030             NO, CHECK FOR JCL ERROR       Y02668
         MVC   SAVERF+2(HALFWORD,R1),IWARET INITIALIZE CALLER'S  Y02668
*                                  REG15 TO I/O ERR RETURN CODE  Y02668
         B     VHN0040             CONTINUE TERMINATION          Y02668
VHN0030  DS    0H                                                Y02668
         LA    R2,JCT              GET PTR TO JCT                Y02668
         USING JCTD,R2             ADDRESSABILITY OF JCT         Y02668
         TM    JCTJSTAT,INCMSTS    WAS JOB FAILED                Y02668
         BZ    VHN0040             NO, THEREFORE, JOB IS         Y02668
         MVI   SAVERF+3(R1),JCLERROR INDICATE JCL ERROR IN       Y02668
         DROP  R2                                                Y02668
         LA    R2,WAJOBPFX         GET PTR TO SAVED JOB PFX      Y02668
         USING TEXT,R2             ADDRESSABILITY OF JOB PFX     Y02668
         TM    STRJINDC,JTXJOBFL   WAS JOB FAILED IN THE CONV.   Y02668
         BO    VHN0040             YES - NO MSG ISSUED           Y02668
         LA    R5,IEF452I          GET JCL ERROR MSG KEY         Y02668
         L     RF,IEFVHRV          GET WTO RTN ADDR              Y02668
         BALR  RE,RF               GO ISSUE ERROR MSG            Y02668
*                                  SUCCESSFUL AND REG15=0        Y02668
*                                  CALLER'S REG15                Y02668
VHN0040  DS    0H                                                Y02668
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  EXIT LIST PROCESSING - WTO PROCESSING                        *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
VHNEXLST DS    0H
*              THE EXIT LIST ENTRY FOR THE ALTERNATE SWA       @G29AN2F
*              MANAGER FOR LOCATE MODE WAS SAVED BY IEFNB903   @G29AN2F
*              IN THE IWA. IF THE EXIT LIST NAME ENTRY HAS     @G29AN2F
*              THE NAME OF THE MODULE IN IT, THEN THE NAME     @G29AN2F
*              WILL BE LEFT JUSTIFIED IN THE FIELD AND PADDED  @G29AN2F
*              WITH BLANKS. THE DELETE WILL BE ISSUED          @G29AN2F
*              POINTING TO THE NAME                            @G29AN2F
         SPACE 1
         L     R3,AOQLOCEP        ADDR OF ALT SWA MNGR LOC EP  @G29AN2F
         LTR   R3,R3              DOES THE ENTRY EXIST?        @G29AN2F
         BZ    VHNEXLS2           NO, TEST FOR ALT SWA MNGR    @G29AN2F
*                                 MOVE MODE                    @G29AN2F
         LA    R3,AOQLOCEX        ADDR OF EXIT LIST ENTRY      @G29AN2F
         USING NELEXENT,R3        ADDR OF EXIT LIST            @G29AN2F
         CLI   NELEXLK,NELEXNAM   DOES LIST HAVE 6 BYTE NAME?  @G29AN2F
         BNE   VHNEXLS2           NO, CHECK MOVE MODE          @G29AN2F
         BAL   RA,VHNDEL          GO DO DELETE                 @G29AN2F
         XC    AOQLOCEP,AOQLOCEP  ZERO ADDRESS TO AVOID SECOND @G29AN2F
*                                 DELETE                       @G29AN2F
VHNEXLS2 DS    0H                                              @G29AN2F
*                                                                Y02621
*              THE JOURNAL MERGE EXIT LIST ENTRY WAS SAVED BY    Y02621
*              IEFNB903 IN THE IWA.IF THE EXIT LIST ENTRY HAS THEY02621
*              NAME OF A MODULE IN IT,THEN THE NAME WILL BE LEFT Y02621
*              JUSTIFIED IN THE FIELD AND PADDED WITH BLANKS.THE Y02621
*              DELETE WILL BE ISSUED POINTING TO THE NAME.       Y02621
         SPACE 1                                                 Y02621
         L     R3,AOJMRGEP        ADDRESS OF EP TO JOURNAL MERGE Y02621
         LTR   R3,R3              DOES THE ENTRY EXIST?          Y02621
         BZ    VHNEXOUT           NO,BYPASS DELETION CODE        Y02621
         LA    R3,AOJRNLEX        ADDRESS OF EXIT LIST ENTRY     Y02621
         CLI   NELEXLK,NELEXNAM   DOES LIST HAVE 6 BYTE NAME?    Y02621
         BNE   VHNEXOUT           NO-NO NEED TO DELETE           Y02621
         BAL   RA,VHNDEL          GO DO DELETE                 @G29AN2F
         XC    AOJMRGEP,AOJMRGEP  ZERO ADDRESS TO AVOID SECOND @G29AN2F
*                                 DELETE                       @G29AN2F
         DROP  R3                 RELEASE REG                  @G29AN2F
VHNEXOUT DS    0H                                                Y02621
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  SET UP NEL TO BE RETURNED TO INTERPRETER'S CALLER            *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         L     R3,WANELPTR         GET PTR TO NEL                Y02668
         USING NELHERE,R3          ADDRESS NEL                   Y02668
         L     RE,NELQMPA          GET PTR TO QMPA IN CALLER'S   Y02668
*                                  CORE                          Y02668
         MVC   NONE(QMPALEN,RE),QPARM OVERLAY CALLER'S QMPA WITH Y02668
*                                  THE QMPA THE INTERPRETER USED Y02668
         LA    R2,JCT              GET PTR TO JCT                Y02668
         USING JCTD,R2             ADDRESS THE JCT               Y02668
         MVC   NELJCT(WORD),JCTDSKAD PUT THE SVA OF THE JCT      Y02668
*                                  INTO THE NEL                  Y02668
         DROP  R2                                                Y02668
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  FREE I/O BUFFERS                                             *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         L     R1,TEXTBUFP         GET ADDR OF INTERNAL TEXT     Y02668
*                                  BUFFER                        Y02668
         LTR   R1,R1               ALREADY FREE IF ZERO        @ZA10444
         BZ    VHN0050             BYPASS FREEMAIN IF PTR ZERO @ZA10444
         LA    R2,WORD*2           GET TXTBUF HEADER LENGTH      Y02668
         SR    R1,R2               PUSH TEXTBUF PTR BACK TO      Y02668
*                                  POINT TO TEXTBUF HEADER       Y02668
         LH    R0,TXTBUFLT         GET TEXT BUFFER LENGTH        Y02668
         BAL   RA,VHNFREE          FREE THE TEXT BUFFER          Y02668
         XC    TEXTBUFP,TEXTBUFP   ZERO POINTER SO WON'T TRY FREE
*                                  AGAIN IF ENTERED ON RETRY   @ZA10444
VHN0050  EQU   *                                               @ZA10444
*                                                                Y02668
         L     R1,AOWSTMT          GET ADDR OF SYSTEM OUTPUT     Y02668
*                                  BUFFER                        Y02668
         LTR   R1,R1               ALREADY FREE IF ZERO        @ZA10444
         BZ    VHN0055             BYPASS FREEMAIN IF PTR ZERO @ZA10444
         LA    R0,AOWBFLTH         GET BUFFER LENGTH             Y02668
         BAL   RA,VHNFREE          GO TO FREE SYSTEM OUTPUT BUF  Y02668
         XC    AOWSTMT,AOWSTMT     ZERO PTR AFTER BUFFER FREED @ZA10444
VHN0055  EQU   *                                               @ZA10444
         L     R1,WAMSGBUF         GET PTR TO MSG BUFFER         Y02668
         LTR   R1,R1               ALREADY FREE IF ZERO        @ZA10444
         BZ    VHN0060             BYPASS FREEMAIN IF PTR ZERO @ZA10444
         LA    R0,MSBUFLEN         GET MSG BUFFER LENGTH        YM00364
         BAL   RA,VHNFREE          GO TO FREE MSG BUFFER         Y02668
         XC    WAMSGBUF,WAMSGBUF   ZERO PTR AFTER BUFFER FREED @ZA10444
VHN0060  EQU   *                                               @ZA10444
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  FREE CORE USED FOR TABLES AND WORK AREAS                     *Y02668
*  DELETE IEFUJV                                                *YM0581
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         TM    NELOPSWT,NELSMF     WAS A JMR CREATED FOR SMF     Y02668
*                                  PROCESSING                    Y02668
         BZ    VHN0100             NO, BYPASS FREEING OF         Y02668
*                                  JMR CODE                      Y02668
         L     R1,IWAJMRPT         GET ADDR OF JMR CORE          Y02668
         LTR   R1,R1               ALREADY FREE IF ZERO        @ZA10444
         BZ    VHN0100             BYPASS FREEMAIN IF PTR ZERO @ZA10444
         LA    R0,TABLEN           GET LENGTH OF GOTTEN CORE     Y02668
         BAL   RA,VHNFREE                                        Y02668
         XC    IWAJMRPT,IWAJMRPT   ZERO PTR AFTER BUFFER FREED @ZA10444
         DELETE EP=IEFUJV          DELETE USER ROUTINE.         YM00581
VHN0100  DS    0H                                                Y02668
         L     R1,DSENQTP          GET ADDR OF DSENQ TABLE       Y02668
         LTR   R1,R1               ALREADY FREE IF ZERO        @ZA10444
         BZ    VHN0110             BYPASS FREEMAIN IF PTR ZERO @ZA10444
         LA    R0,TABLEN           GET TABLE LENGTH              Y02668
         BAL   RA,VHNFREE          FREE THE DSENQ TABLE          Y02668
         XC    DSENQTP,DSENQTP     ZERO PTR AFTER BUFFER FREED @ZA10444
VHN0110  EQU   *                                               @ZA10444
*                                                                Y02668
         L     R1,CTRLWAP          GET ADDR OF LOCAL WORK        Y02668
*                                  AREA                          Y02668
         LTR   R1,R1               ALREADY FREE IF ZERO        @ZA10444
         BZ    VHN0120             BYPASS FREEMAIN IF PTR ZERO @ZA10444
         L     R0,IWALWLGN   LOAD LWA LENGTH FROM IWA TO FREE. @Z40MPTH
         BAL   RA,VHNFREE          FREE THE LOCAL WORK AREA      Y02668
         XC    CTRLWAP,CTRLWAP     ZERO PTR AFTER BUFFER FREED @ZA10444
VHN0120  EQU   *                                               @ZA10444
         L     R1,BUFADDR          GET 'TRACE ' RTN BUFFER ADDR  Y02668
         LTR   R1,R1               WAS 'TRACE' ACTIVE?           Y02668
         BZ    VHN0125             NO, GO TO FREE OTHER WORK AREAY02668
         LH    R0,BUFLTH           YES, GET BUFFER LENGTH        Y02668
         BAL   RA,VHNFREE          FREE THE 'TRACE' BUFFER       Y02668
VHN0125  DS    0H                                                Y02668
         EJECT                                                   Y02668
*****************************************************************Y02653
*                                                                Y02653
* DEACTIVATE THE ESTAE ENVIRONMENT OVER INTERPRETER              Y02653
*                                                                Y02653
*****************************************************************Y02653
         SPACE 1
         L     R1,AOSTAPRM         ADDRESS OF USER PARAM AREA    Y02653
         LTR   R1,R1               WAS ESTAE ACTIVE?             Y02653
         BZ    VHN0150         NO IF POINTER IS ZERO-BYPASS      Y02653
*              FREEING THE USER AREA SINCE IT DOESN NOT EXIST,ANDY02653
*              BYPASS CANCELLING ESTAE SINCE IT WAS NOT ACTIVE.  Y02653
         LA     R0,EREPLEN        LENGHT OF USER PARMAETER LIST  Y02653
         BAL    RA,VHNFREE        FREE USER PARAMTER LIST        Y02653
         SPACE 1
         ESTAE  0                                                Y02653
         SPACE 1
VHN0150  DS    0H                                                Y02653
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*  FREE THE IWA                                                 *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         LR    R1,RC               GET ADDR OF IWA               Y02668
         LA    R0,WALTH            GET IWA LENGTH.               Y02668
         BAL   RA,VHNFREE          GO TO FREE IWA                Y02668
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*  RESTORE CALLER'S REGS AND EXIT                               *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         IEFRELSE  ,               RESTORE CALLER'S RSA PTR      Y02668
         RETURN (14,12)            RETURN TO INTERP'S CALLER     Y02668
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*  SUBROUTINE TO CLEAR CORE                                     *Y02668
*              R0 - LENGTH OF CORE TO FREE                      *Y02668
*              R1 - ADDRESS OF CORE TO BE FREED                 *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2
VHNFREE  DS    0H                                                Y02668
         FREEMAIN  R,LV=(0),A=(1)  FREE CORE AS REQUESTED        Y02668
         BR    RA                  RETURN TO CALLER              Y02668
         SPACE 4
***************************************************************@G29AN2F
*                                                              @G29AN2F
*   SUBROUTINE TO DELETE EXIT LIST ENTRY POINT                 @G29AN2F
*                                                              @G29AN2F
*              R3 - ADDRESS OF NEL EXIT LIST ENTRY             @G29AN2F
*                                                              @G29AN2F
***************************************************************@G29AN2F
         SPACE 2
VHNDEL   DS    0H                                              @G29AN2F
         USING NELEXENT,R3       SET UP ADDRESSABILITY         @G29AN2F
         MVC   ZERO(MVSIX,R3),NELEXEP  LEFT JUSTIFY NAME IN FIELDY02621
         MVC   SIX(MVTWO,R3),BLANK2  PAD FIELD WITH BLANKS       Y02621
         DROP  R3                                                Y02621
         SPACE 1
         DELETE EPLOC=(3)         DELETE JOURNAL MERGE ROUTINE   Y02621
         SPACE 1
         BR    RA                 RETURN TO CALLER             @G29AN2F
         EJECT
*****************************************************************Y02668
*                 DECLARED STORAGE                              *Y02668
*****************************************************************Y02668
IOERROR  DC    X'0008'             TEMP***
TXTBUFLT DC    H'8192'             8K INTERNAL TEXT BUFFER       Y02668
BLANK2   DC    X'4040'       BLANKS TO PAD MODULE NAME
BUFLTH   DC    H'2048'             'TRACE' BUFFER LENGTH         Y02668
*****************************************************************
*                                                               *
*                        EQUATES                                *
*                                                               *
*****************************************************************
         SPACE 2
MSBUFLEN EQU   160       MSG BUF LEN                             Y02668
WORD     EQU   4                                                 Y02668
SAVERF   EQU   16                  DISPL OF R15 IN SAVE AREA     Y02668
HALFWORD EQU   2                                                 Y02668
JCLERROR EQU   4                   JCL ERROR RETURN CODE         Y02668
QMPALEN  EQU   32                                                Y02668
AOWBFLTH EQU   90                                                Y02668
TABLEN   EQU   176                                               Y02668
NONE     EQU   0                                                 Y02668
ZERO     EQU   0                                                 Y02668
SIX      EQU   6                                                 Y02668
MVSIX    EQU   6                                                 Y02668
MVTWO    EQU   2                                                 Y02668
IEF452I  EQU   6                   JCL ERROR MSG KEY             Y02668
*****************************************************************Y02668
*                 VCONS                                         *Y02668
*****************************************************************Y02668
IEFVHRV  DC    V(IEFVHR)           WTO RTN                       Y02668
PATCH    DC    25F'0'              **********PATCH SPACE*********Y02668
         END   IEFVHN
