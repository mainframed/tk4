         TITLE 'DECOMPRESSION MODULE IEZDCODE'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      DECOMPRESSION SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*        STATUS
*
*              CHANGE LEVEL ZERO
*              RELEASE NINETEEN
*
*        FUNCTION
*
*              CHARACTER STRING DECOMPRESSION
*              REPLACING COUNT FIELDS WITH SERIES OF BLANKS
*              REVERSING COMPRESSION BY IEZNCODE
*
*              DEBLOCKS COMPRESSED RECORDS
*              BY UPDATING PARAMETER AREA
*
*              SETS IEZTYPE TO X'80'
*              IF COMPRESSED RECORD IS FLAGGED
*              X'00' IF NOT
*
*        ENTRY POINTS
*
*              IEZDCODE
*
*        INPUT
*
*              REGISTER 13 ADDRESSES SAVE AREA
*              REGISTER 14 ADDRESSES RETURN POINT
*              REGISTER 1 ADDRESSES POINTER TO PARAMETER AREA
*
*        OUTPUT
*
*              REGISTER 15 CONTAINS RETURN CODE
*              OTHER REGISTERS ARE RESTORED
*
*        EXTERNAL REFERENCES
*
*              READS AND SCRATCHES COMPRESSED RECORD
*              ADDRESSED BY IEZCOMPR
*              WITH LENGTH CONTAINED THEREIN
*
*              WRITES UNCOMPRESSED RECORD
*              ADDRESSED BY IEZUNCOM
*              WITH LENGTH NOT EXCEEDING IEZOUT
*
*              READS IEZUNCOM, IEZOUT AND IEZCHAR
*              UPDATES IEZCOMPR
*              WRITES IEZTYPE
*              SCRATCHES IEZRES
*
*        NORMAL EXITS
*
*              RETURN CODE ZERO MEANS TRANSLATION COMPLETED
*              FOR ONE RECORD
*
*              RETURN CODE FOUR MEANS END OF BLOCK TERMINATION
*              WITH NO RECORD TRANSLATED
*
*        ABNORMAL EXITS
*
*              RETURN CODE EIGHT MEANS ERROR TERMINATION
*              BECAUSE UNCOMPRESSED RECORD WOULD BE LONGER THAN IEZOUT
*
*              ERROR DETECTING INSTRUCTIONS ARE FLAGGED
*              WITH ASTERISK BEGINNING REMARK
*
*        TABLES AND WORK AREAS
*
*              PARAMETER AREA BELOW
*
*        ATTRIBUTES
*
*              REFRESHABLE
*
*        NOTES
*
*              OPERATION CHARACTER-CODE INDEPENDENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      COMPRESSION FORMAT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*        BLOCK
*
*              COMPRESSED RECORDS      SEE BELOW
*              END OF BLOCK MARK       2 BYTES OF ZERO
*
*        COMPRESSED RECORD
*
*              SPECIAL RECORD FLAG     1 BIT
*              COMPR RECORD LENGTH     15 BITS
*              SEGMENTS                SEE BELOW
*
*        SEGMENT
*
*              MERGED COUNTS FLAG      1 BIT
*              BLANK CHAR COUNT        3 (FLAG ON) OR 7 (FLAG OFF) BITS
*              NONBLANK CHAR COUNT     4 (FLAG ON) OR 8 (FLAG OFF) BITS
*              NONBLANK CHARS          1 BYTE EACH
*
*                                      AN UNCOMPRESSED SEGMENT
*                                      IS A SERIES OF NONBLANKS
*                                      FOLLOWED BY A SERIES OF BLANKS
*                                      EITHER SERIES POSSIBLY EMPTY
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      PARAMETER AREA
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IEZPARM  DSECT                         PARAMETER AREA
IEZUNCOM DS    A                       PTR TO UNCOMPRESSED RECORD
IEZCOMPR DS    A                       PTR TO NEXT COMPRESSED RECORD
IEZLEN   DS    H                       LENGTH OF UNCOMPRESSED RECORD
IEZOUT   DS    H                       LENGTH OF AREA FOR OUTPUT RECORD
IEZCHAR  DS    C                       CHARACTER CODE OF BLANK
IEZTYPE  DS    B                       FLAG ASSOCIATED WITH RECORD
IEZRES   DS    H                       WORK AREA
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      GENERAL REGISTERS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BASE     EQU   11                      CODE BASE
DATA     EQU   12                      DATA BASE
SAVE     EQU   13                      SAVE AREA
BACK     EQU   14                      RETURN POINT
CODE     EQU   15                      RETURN CODE
WORK     EQU   0                       WORK REGISTER
PASS     EQU   1                       PARAMETER LIST
*
UNCOM    EQU   2                       INDEX THROUGH TARGET RECORD
COMPR    EQU   3                       INDEX THROUGH SOURCE RECORD
MAXUNCOM EQU   4                       * END OF TARGET RECORD
MAXCOMPR EQU   5                       END OF SOURCE RECORD
BLANKS   EQU   6                       COUNT OF BLANKS IN SEGMENT
CHARS    EQU   7                       COUNT OF CHARS IN SEGMENT
RETAIN   EQU   X'80'                   RETAIN COUNT FLAG        A46304
DISPL0   EQU   0                       ZERO OFFSET              A46304
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      BEGIN MODULE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IEZDCODE CSECT                         BEGIN MODULE
*
         STM   BACK,DATA,12(SAVE)      SAVE REGISTERS
         BALR  BASE,0                  ADDRESS CODE
         USING *,BASE                  CODE ADDRESSABILITY
**************************************************************** Y02668
* MODULE TRACE CODE - FOR TESTING                                Y02668
         L     15,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         BALR  14,15               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'DCOD'             MOD ID USED BY TRACE          Y02668
* TRACE RETURNS HERE.                                            Y02668
**************************************************************** Y02668
         B     D1                  BYPASS ID                     Y02668
         MODID BR=NO                                             Y02668
         DC    C'MVM'              FUNCTION ID AND               Y02668
         DC    C'01'               LEVEL # (TRACE + PATCH)       Y02668
D1       DS    0H                  BEGIN                         Y02668
         L     DATA,0(PASS)            ADDRESS DATA
         USING IEZPARM,DATA            DATA ADDRESSABILITY
         LA    WORK,1                  CONSTANT REGISTER
         LA    CODE,2                  CONSTANT AND FLAG REGISTER
         LM    UNCOM,COMPR,IEZPARM     LOAD SOURCE AND TARGET POINTERS
*
         TM    0(COMPR),X'80'          IF RECORD FLAGGED
         BO    ON                      THEN PROCESS FLAG
*
         MVI   IEZTYPE,X'00'           WRITE FLAG OFF
*
         B     OFF                     CONTINUE PROCESSING
*
ON       DS    0H                      RECORD FLAGGED
*
         MVI   IEZTYPE,X'80'           WRITE FLAG ON
         NI    0(COMPR),X'FF'-X'80'    TURN FLAG OFF
*
OFF      DS    0H                      RECORD FLAG PROCESSED
*
         MVC   IEZRES,0(COMPR)         MOVE SOURCE LENGTH
         LH    MAXCOMPR,IEZRES         LOAD SOURCE LENGTH
*
         LTR   MAXCOMPR,MAXCOMPR       IF SOURCE LENGTH ZERO
         BZ    BLOCK                   THEN END OF BLOCK
*
         AR    MAXCOMPR,COMPR          COMPUTE SOURCE LIMIT
         LR    MAXUNCOM,UNCOM          * PREPARE TARGET LIMIT
         AH    MAXUNCOM,IEZOUT         * COMPUTE TARGET LIMIT
         AR    COMPR,CODE              ADDRESS FIRST SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      BEGIN SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SEGMENT  DS    0H                      DECOMPRESS SEGMENT
*
         SR    BLANKS,BLANKS           ZERO BLANK COUNT
         SR    CHARS,CHARS             ZERO NONBLANK COUNT
*
         TM    0(COMPR),X'80'          IF COUNTS FLAGGED
         BO    SHORT                   THEN UNMERGE COUNTS
*
         IC    BLANKS,0(COMPR)         LOAD BLANK COUNT
         IC    CHARS,1(COMPR)          LOAD NONBLANK COUNT
         AR    COMPR,CODE              BUMP SOURCE POINTER
*
         B     LONG                    CONTINUE PROCESSING
*
SHORT    DS    0H                      UNMERGE COUNTS
*
         NI    0(COMPR),X'FF'-X'80'    TURN COUNT FLAG OFF
         IC    CHARS,0(COMPR)          PREPARE COUNTS
         SLDL  BLANKS,32-4             UNMERGE BLANK COUNT
         SRL   CHARS,32-4              UNMERGE NONBLANK COUNT
         OI    DISPL0(COMPR),RETAIN    SET RETAIN COUNT FLAG    A46304
         AR    COMPR,WORK              BUMP SOURCE POINTER
*
LONG     DS    0H                      COUNTS LOADED
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      TRANSLATE NONBLANKS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         LTR   CHARS,CHARS             IF NO NONBLANKS
         BZ    NOCHAR                  THEN DECOMPRESS NONE
*
CHAR     DS    0H                      DECOMPRESS NONBLANK
*
         CR    UNCOM,MAXUNCOM          * IF TARGET FULL
         BNL   ERROR                   * THEN ERROR
*
         MVC   0(1,UNCOM),0(COMPR)     DECOMPRESS NONBLANK
         AR    COMPR,WORK              BUMP SOURCE POINTER
         AR    UNCOM,WORK              BUMP TARGET POINTER
*
         BCT   CHARS,CHAR              NEXT NONBLANK IF ANY
*
NOCHAR   DS    0H                      NONBLANKS DECOMPRESSED
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      TRANSLATE BLANKS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         LTR   BLANKS,BLANKS           IF NO BLANKS
         BZ    NOBLANK                 THEN DECOMPRESS NONE
*
BLANK    DS    0H                      DECOMPRESS BLANK
*
         CR    UNCOM,MAXUNCOM          * IF TARGET FULL
         BNL   ERROR                   * THEN ERROR
*
         MVC   0(1,UNCOM),IEZCHAR      DECOMPRESS BLANK
         AR    UNCOM,WORK              BUMP TARGET POINTER
*
         BCT   BLANKS,BLANK            NEXT BLANK IF ANY
*
NOBLANK  DS    0H                      BLANKS DECOMPRESSED
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      END SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         CR    COMPR,MAXCOMPR          IF SOURCE NOT FINISHED
         BL    SEGMENT                 THEN DECOMPRESS NEXT SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      END MODULE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         ST    COMPR,IEZCOMPR          UPDATE SOURCE POINTER
         S     UNCOM,IEZUNCOM          COMPUTE TARGET LENGTH
         STH   UNCOM,IEZLEN            WRITE TARGET LENGTH
         SR    CODE,CODE               RETURN TRANSLATION COMPLETE CODE
*
RETURN   DS    0H                      EXIT MODULE
*
         L     BACK,12(SAVE)           RESTORE 14                Y02668
         LM    WORK,DATA,20(SAVE)      RESTORE REGISTERS         Y02668
*
         BR    BACK                    RETURN CONTROL
*
BLOCK    DS    0H                      END OF BLOCK
*
         AR    CODE,CODE               RETURN END OF BLOCK CODE
*
         B     RETURN                  EXIT MODULE
*
ERROR    DS    0H                      * ERROR DETECTED
*
         LA    CODE,8                  * RETURN ERROR CODE
*
         B     RETURN                  * EXIT MODULE
*
PATCH    DC    25F'0'              PATCH SPACE                   Y02668
         END   IEZDCODE
