         TITLE 'IEFVGI - IEFQMNGR'
         IEFQMNGR
         TITLE 'IEFVGI - IWA'
         IEFCOMWA                                                Y02668
         IEFVMIWA
         TITLE 'IEFVGI - AWA'
AWA      DSECT
         USING AWA,RA
         IEFVMAWA
         TITLE 'IEFVGI - CSECT'
IEFVGI   CSECT
***********************************************************************
*                                                                     *
*        INPUT TO THIS ROUTINE.                                       *
*                                                                     *
*              R1 = POINTS TO ENTRY TO BE PLACED IN DICTIONARY.       *
*              RA = ADDRESS OF AUXILIARY WORK AREA.                   *
*              RC = ADDRESS OF INTERPRETER WORK AREA.                 *
*              RD = ADDRESS OF CURRENT REGISTER SAVE AREA.            *
*              RE = RETURN ADDRESS.                                   *
*                                                                     *
***********************************************************************
*
         STM   14,12,12(13)       SAVE REGISTERS.
         SPACE
         BALR  RB,0               REG 11 IS THE BASE REGISTER
         USING *,RB                    OF THE INPUT ROUTINE.
*****************************************************************Y02028
* MODULE TRACE CODE - FOR TESTING.                               Y02028
         L     RF,TRACEV           LOAD TRACE RTNE ADDR.         Y02028
         BALR  RE,RF               ENTER MOD ID IN TRACE RECORD. Y02028
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02028
         DC    C'VGI '             MOD ID USED BY TRACE.         Y02028
* TRACE RETURNS HERE.                                            Y02028
*****************************************************************Y02028
         B     VGI                 BR AROUND ID.                 Y02668
         MODID BR=NO               MODULE IDENT.                 Y02668
*        DC    C'REL4'              FUNCTION ID AND            @Z40MPTH
*        DC    C'02'   LEV # (RACF)                            @Z40RPSM
         DC    C'03'   LEV # (MERGE SU4,10,16 CODE TO 037 PTF) @ZA27750
VGI      DS    0H                                                Y02668
         USING AWA,RA             AWA ADDRESS
         SPACE
         LA    R9,SREFB           ADDRESS OF INPUT DICTIONARY.
         SR    R6,R6              SET R6 FOR IC INSTRUCTIONS.
         SR    R8,R8              R8 = ZERO FOR COMPARES & ZEROEING.
         LA    R7,7(R9)           POINT AT FIRST ENTRY IN TABLE.
         TM    SWD,DCTFST         IS THIS THE FIRST DICT ENTRY.
         BO    GI1                NO. GO TO POINT TO NEXT ENTRY SLOT.
*
*   FIRST DICTIONARY ENTRY.  SET DCTFST, ZERO SREFB TABLE AND ZERO
*        TSREFB SLOT IN IWA. ALSO, SET TABLE ID = 8.
*
         OI    SWD,DCTFST         SET BIT INDICATING FIRS DICT ENTRY.
         XC    0(176,R9),0(R9)    ZERO DICT 1.
         MVI   3(R9),GIDCTID      SET TABLE ID.
         ST    R8,TSREFB          ZERO TSREFB SLOT IN IWA.
         B     GI2                GO TO STORE ENTRY.
*
*   NOT FIRST ENTRY - CHAIN TO END OF DICT.
*
GI1      DS    0H
         IC    R6,0(R7)           PICK UP LENGTH OF ENTRY.
         LA    R7,0(R6,R7)        INCREMENT TO NEXT ENTRY POSITION.
         CLI   0(R7),X'00'        IS IT THE END OF TABLE.
         BNE   GI1                NO. GO TO GET NEXT ENTRY POSITION.
         SPACE
*
*   END OF DICT ENTRIES - COMPUTE OVERFLOW POSSIBILITY.
*
         IC    R6,0(R1)           GET NEW ENTRY LENGTH.
         LA    R5,1(R6,R7)        COMPUTE NEW END ADDR+1 (TO SHOW END).
         SR    R5,R9              SUBTRACT START ADDRESS
         CH    R5,GI176           WILL ENTRY OVERFLOW TABLE.
         BH    GIOVFLW            YES. GO TO HANDLE OVERFLOW.
*
*   MOVE ENTRY TO DICTIONARY. COMPUTE RELATIVE ADDRESS.
*
GI2      DS    0H
         IC    R6,0(R1)           GET ENTRY LENGTH.
         BCTR  R6,0               DECREMENT FOR EXECUTE INSTRUCTION.
         EX    R6,GIMVC1          MOVE NEW ENTRY TO TABLE.
         SR    R7,R9              COMPUTE RELATIVE ADDRESS OF ENTRY.
         SLL   R7,24              SHIFT REL ADDR TO 1ST BYTE.
*
*   CHECK FOR EXEC PROC STMT - STORE REL ADDRESS AND ZERO TTR.
*
         CLI   1(R1),GIPROC       IS IT AN EXEC PROC ENTRY.
         BNE   GI3                NO. GO TO CHECK FOR EXEC PGM.
         SPACE
         ST    R7,RELPROC         SET PROC REL ADDR & ZERO TTR IN IWA.
         B     GIEXIT             GO TO EXIT.
*
*   CHECK FOR EXEC PGM STMT - STORE REL ADDRESS AND ZERO TTR.
*
GI3      CLI   1(R1),GIPGM        IS IT AN EXEC PGM ENTRY.
         BNE   GI3A                    NO, GO TEST PGM/PROC
         XC    RELPROC(4),RELPROC       CLEAR LAST PROC POINTER
         B     GI4                     GO SET LAST PGM REL ADDR
        SPACE
GI3A     DS    0H
         CLI   1(R1),GIPPM        IS IT PGM WITHIN A PROCEDURE.
         BNE   GIEXIT             NO GO TO EXIT.
GI4      DS    0H
         ST    R7,RELPGM          SET PGM REL ADDR & ZERO TTR IN IWA.
*        FALL THRU TO EXIT
*
*   EXIT.
*
GIEXIT   DS    0H
         LM    14,12,12(13)       RESTORE REGS
         BR    14                 EXIT
         SPACE 3
***********************************************************************
*                                                                     *
*        HANDLING OF DICTIONARY OVERFLOW.                             *
*                                                                     *
***********************************************************************
GIOVFLW  DS    0H
         LR    R5,R1              SAVE R1.
***********************************************************************
         IEFSAVER SAVEPTR         GET NEW REGIESTER SAVE AREA.
***********************************************************************
         SPACE
         LA    R4,QPARM           Q-MANAGER PARAMETER AREA
         USING IOPARAMS,R4             ADDRESSING.
         L     R3,QMPCL           SET UP REGS FOR STORE DICT ADD & TTR.
         L     R2,GIVHQ           INTERFACE MODULE (IEFVHQ) ADDRESS.
         SPACE
*
*   CHECK FOR FIRST DICT PUT OUT - ASSIGN FIRST TTR.
*
         CL    R8,TSREFB          IS THIS THE FIRST DICTIONARY.
         BNE   GIOVFLW1           NO. GO TO CHAIN DICTS.
         MVI   QMPOP,QMASGN       INDICATE ASSIGN ONLY.
         BALR  RE,R2              LINK TO Q-MNGR INTERFACE.
         SPACE
         MVC   TSREFB(4),0(R3)    MOVE TTR TO IWA (FIRST DICT TTR SAVE)
         MVC   0(3,R9),0(R3)      ALSO MOVE TTR TO DICTIONARY.
*   FALL THRU TO CHAIN TABLES.
GIOVFLW1 DS    0H
         MVC   4(3,R9),IWANXTSV    MOVE CHAIN SVA TO DICT BLOCK.YM02716
         SPACE
*
*   CHECK VOR PROC TTR - IF NO TTR ASSIGN DICT TTR TO RELPROC.
*
         LA    RF,RELPROC         POINT TO PROC TTR IN IWA.
         BAL   RE,GITTRCK         LINK TO CHECK FOR TTR.
*
*   CHECK FOR PGM TTR - IF NO TTR ASSIGN DICT TTR TO RELPGM.
*
         LA    RF,RELPGM          POINT TO PGM TTR IN IWA.
         BAL   RE,GITTRCK         LINK TO CHECK FOR PGM TTR & MVC
*                                      DICT TTR TO RELPGM IN IWA.
*
*   WRITE AND ASSIGN DICTIONARY - MOVE CHAIN TTR TO DICT TTR - UPDATE
*        TNEXT AND CLEAR (TO ZEROES) REST OF DICT 1. POINT R7 AT
*        BEGINNING DICTIONARY ENTRY.
*
         ST    R9,0(R3)           MOVE DICT ADDR TO QMPCA.
         MVC   4(3,R3),0(R9)      MOVE TTR TO QMPEX.
         MVI   DISPLID(R3),DICTRYID  BLOCK ID TO REMOTE LIST     Y02621
         SPACE
         BALR  RE,R2              LINK TO QMNGR INTERFACE (IEFVHQ).
* AFTER BLOCK IS WRITTEN, CLEAR BLOCK ID IN REMOTE LIST TO       Y02621
* PREVENT INCORRECT IDENTIFICATION OF NEXT BLOCK WRITTEN. SWA    Y02621
* MGR USES  THIS ID IF NONZERO. IF ZERO, IT WILL USE ID IN BLOCK.Y02621
         MVI   DISPLID(R3),0       ZERO ID IN REMOTE LIST.       Y02621
         SPACE
         MVC   0(3,R9),IWANXTSV    MOVE CHAIN SVA TO NEW BLOCK. YM02716
         SPACE
         MVC   IWANXTSV(4),0(R3)   SAVE SVA FOR NEXT DICT BLOCK YM02716
         SPACE
         XC    4(172,R9),4(R9)    ZERO REST OF DICT (ID STAYS).
         SPACE
         LA    R7,7(R9)           POINT R7 AT 1ST ENTRY SLOT OF THIS
*                                      DICTIONARY.
***********************************************************************
         IEFRELSE  SAVEPTR        RELEASE NEW REGISTER SAVE AREA.
***********************************************************************
         LR    R1,R5              RESTORE R1.
         B     GI2                TO TO MOVE NEW ENTRY TO DICTIONARY.
         SPACE
*
*   CHECK AND UPDATE RELPROC AND RELPGM.
*
GITTRCK  DS    0H
         CL    R8,0(RF)           IS THERE AN ENTRY FOR RELPROC/RELPGM
         BC    8,0(RE)            NO. - RETURN -
         CLC   1(3,RF),GIZERO3    YES. IS THERE ALREADY A TTR ASSIGNED.
         BNE   0(RE)              YES. - RETURN -
         MVC   1(3,RF),0(R9)      NO MOVE DICT TTR TO RELPROC/RELPGM.
         BR    RE                 RETURN.
         SPACE 2
GIMVC1   MVC   0(1,R7),0(R1)      MOVE NEW ENTRY TO DICTIONARY.
         SPACE 2
***********************************************************************
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
***********************************************************************
GIVHQ    DC    V(IEFVHQ)          Q-MANAGER INTERFACE.
GI176    DC    H'176'             LENGTH OF DICTIONARY.
GIZERO3  DC    X'000000'          RELPROC/RELPGM TTR CHECK.
GIPROC   EQU   X'80'              EXEC PROC DICT INDICATOR.
GIPGM    EQU   X'40'              EXEC PGM DICT INDICATOR.
GIPPM    EQU   X'20'               PGM WITHIN PROC INDICATOR.
GIDCTID  EQU   X'08'              DICTIONARY 1 ID.
DISPLID  EQU   7                  DISPLACEMENT OF BLOCK ID       Y02621
DICTRYID EQU   X'25'              BLOCK ID FOR DICTIONARY RECORD Y02621
*                                                                Y02668
PATCH    DC    25F'0'              **********PATCH SPACE*********Y02028
         END
