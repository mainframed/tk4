*****************************************************************Y02668
*
*
*  MODULE NAME - IEFNB903
*
*
*  DESCRIPTIVE NAME - INTERPRETER INITIALIZATION ROUTINE
*
*
*  COPYRIGHT - N/A
*
*
*  STATUS - VS2 SU16 -IN THIS MODULE, SU 16 SUPPORTS           @G16AP2F
*           VPSS SUPPORT (SU 29 - @G29AN2F).                   @G16AP2F
*           MERGE SU4,10,16 CODE TO REL 037 PTF                @ZA27750
*
*
*  FUNCTION - THIS ROUTINE GETS AND PARTIALLY INITIALIZES INTERPRETER
*             WORK AREAS AND CONTROL BLOCKS.
*
*     OPERATION - . SAVES CALLER'S REGISTERS AND BEGINS INITIALIZATION
*                 . CORE IS GOTTEN AND INITIALIZED FOR THE INTERPRETER
*                   WORK AREA(IWA), I/O BUFFER, JMR, LOCAL WORK AREA
*                   (MAPPED BY EWA,DWA,JWA), DSENQ TABLE, AND SYSOUT
*                   MESSAGE BUFFER.   REG12 IS SET TO POINT TO THE
*                   IWA FOR THE LIFE OF THE INTERPRETER.
*                 . A REG SAVE AREA IS GOTTEN, CHAINED AND THE
*                   POINTER TO IT SAVED IN THE IWA.
*                 . A PTR TO THE INTERPRETER TERMINATION RTN IS
*                   SAVED IN THE IWA.
*                 . THE QMPA PASSED BY THE CALLER IS MOVED INTO THE
*                   IWA.
*                 . IF USING SMF THE JMR IS MOVED FROM THE CALLER'S
*                   CORE.
*                 . THE UNIQUE DSN FIELD (FOR TEMP DATA SET NAMES) IS
*                   INITIALIZED IN THE IWA.
*                 . SCONS FOR THE KEYWORD SERVICE RTNS ARE CALCULATED
*                   AND SAVED IN THE IWA.
*                 . AN ESTAE ENVIRONMENT IS ESTABLISHED FOR THE
*                   INTERPRETER.
*                 . SWA SUPPORT - THE NEL EXIT LIST IS SCANNED @G29AN2F
*                   FOR AN ALTERNATE SWA MANAGER MOVE MODE AND @G29AN2F
*                   LOCATE MODE ENTRY POINTS.                  @G29AN2F
*                   AN ALTERNATE ENTRY FOR THE MOVE MODE       @G29AN2F
*                   POINTS TO THE JOURNAL MERGE INTERFACE ROUTINE.
*                   IF THE ENTRY DOES NOT EXIST NO JOURNAL
*                   MERGE CAN TAKE PLACE.   IF THE ENTRY IS FOUND
*                   THE JOURNAL MERGE RTN IS LOADED AND ITS ADDR
*                   SAVED IN THE IWA.   IEFVHQ TESTS THIS ADDR FIELD
*                   AND IF INITIALIZED, EXITS TO IT INSTEAD OF GOING
*                   DIRECTLY TO THE SWA MANAGER.   THE JOURNAL MERGE
*                   RTN IS DELETED BY IEFVHN AT TERMINATION.
*                   AN ALTERNATE ENTRY FOR THE LOCATE MODE     @G29AN2F
*                   CAUSES THE ROUTINE TO BE LOADED AND ITS    @G29AN2F
*                   ADDR SAVED IN THE COMWA. IEFVHQ TESTS THIS @G29AN2F
*                   ADDR FIELD AND IF INITIALIZED, EXITS TO IT @G29AN2F
*                   INSTEAD OF GOING DIRECTLY TO THE SWA MNGR  @G29AN2F
*                   FOR LOCATE MODE. THE ALTERNATE SWA MANAGER @G29AN2F
*                   LOCATE MODE IS DELETED BY IEFVHN AT TERMIN-@G29AN2F
*                   ATION.                                     @G29AN2F
*
*
*  NOTES -
*
*     DEPENDENCIES - NONE
*     CHARACTER-CODE DEPENDENCIES - EBCDIC
*     RESTRICTIONS - NONE
*     REGISTER CONVENTIONS - REG 11 - MODULE BASE
*                            REG 12 - IWA PTR
*                            REG 13 - REG SAVE AREA PTR
*     PATCH-LABEL - PATCH
*
*
*  MODULE TYPE - PLS
*     PROCESSOR - PLSII COMPILER
*     ATTRIBUTES - REFRESHABLE, PRIVILEGED, REENTRANT, KEY 0,
*                  PAGEABLE LPA
*
*
*  ENTRY POINT - IEFNB903 FROM IEFIB600 (SWA CREATE)
*     PURPOSE - TO HAVE INTERPRETER CREATE JOB CONTROL BLOCKS IN
*               SWA.
*     LINKAGE - LINK
*     INPUT - R1 - PTR TO NEL, R13 - PTR TO REG SAVE AREA
*     REGISTERS SAVED - REG14-REG12
*     REGISTER USAGE -
*                     R0  - WORK REG
*                     R1  - WORK REG
*                     R2  - WORK REG( ADDRESSES SEVERAL CONTROL
*                           BLOCKS AT DIFFERENT TIMES)
*                     R3  - POINTS TO NEL
*                     R4  - WORK REG
*                     R5  - WORK REG
*                     R6  - UNUSED
*                     R7  - UNUSED
*                     R8  - UNUSED
*                     R9  - UNUSED
*                     R10 - LINKAGE REG
*                     R11 - MODULE BASE
*                     R12 - PTR TO IWA
*                     R13 - REG SAVE AREA PTR
*                     R14 - LINKAGE AND WORK REG
*                     R15 - LINKAGE AND WORK REG
*     REGISTERS RESTORED - NONE
*
*
*  EXIT - NORMAL  - IEFVHE
*     CONDITIONS - INITIALIZATION COMPLETE AND READY TO GET
*                  FIRST TEXT STRING
*     OUTPUT - REG 12 - PTR TO IWA, REG 13 - PTR TO REG SAVE AREA
*     RETURN CODES - NONE
*
*
*  EXIT - ERROR - NONE
*
*
*  EXTERNAL REFERENCES -
*     ROUTINES - IEFVHQ (TO ASSIGN SVA'S)
*                IEFVHN (TO GET TERM RTN ADDR AND SAVE IN IWA)
*     DATA AREAS - IWA, LWA, QMPA
*     CONTROL BLOCKS - JMR, JCT, SCT
*     TABLES - INTERNAL KEYS (IEFVKEYS)
*     MACROS - LOAD, GETMAIN, FREEMAIN, IEFVMIWA, IEFVMDWA,
*              IEFVMEWA, IEFVMJWA, IEFJMR, IEFAJCTB, IEFASCTB,
*              IEFNEL, IEFQMNGR
*     SERIALIZATION - NONE
*
*
*  CHANGE ACTIVITY - Z40MPTH,Z40RPSM,@G29AN2F,ZA27750          @ZA27750
*
*
*  MESSAGES - NONE
*
*
*****************************************************************Y02668
         EJECT
         SPACE 5
JCTD     DSECT
         IEFAJCTB
         EJECT
JCTXD    DSECT                                                 @Z40RPSM
         IEFJCTX                                               @Z40RPSM
         EJECT
         IEFCOMWA
         IEFVMIWA
         SPACE 5
NEL      DSECT
         IEFNEL  SUBCOM=I,EXITS=(QEP,SMF,RTN)
         SPACE 5
         IFGRPL
         SPACE 5
SCTD     DSECT
         IEFASCTB
         SPACE 5
         IEFVMEWA NA                                           @Z40MPTH
         SPACE 5
         IEFVMJWA  NA
         SPACE 5
         IEFVMDWA  NA
ENDWA    EQU   *                                               @Z40MPTH
         SPACE 5
AWA      DSECT               ADDRESSABILITY TO AWA....         @Z40MPTH
         IEFVMAWA                                              @Z40MPTH
         SPACE 5
         IEFQMNGR
         SPACE 5
         IEFJMR
         SPACE 5
         IEFZB9RD
         SPACE 5
         IEFVKEYS
         SPACE 5
         SPACE 5
GENDSNAM DSECT                                                   Y02668
PREFIX   DS    CL3                                               Y02668
DATE     DS    CL5                                               Y02668
PERIOD   DS    CL1                                               Y02668
PREFIX1  DS    CL1                                               Y02668
TIME     DS    CL6                                               Y02668
PERIOD2  DS    CL1                                               Y02668
DSTYPE   DS    CL1                                               Y02668
SYSTYPE  DS    CL1                                               Y02668
FILLER   DS    CL3                                               Y02668
PERIOD3  DS    CL1                                               Y02668
         EJECT
IEFNB903 CSECT
         ENTRY TRACE
         STM   14,12,12(13)        SAVE CALLER'S REGS            Y02668
         BALR  RB,0                MODULE BASE REG               Y02668
         USING *,RB                GET ADDRESSABILITY            Y02668
         B     NB903BGN            BYPASS DECLARED STORAGE       Y02668
         MODID BR=NO                                             Y02668
*        DC    C'SU16'            FUNCTION ID                  @G16AP2F
*        DC    C'01'              LEVEL # (SU16)               @G16AP2F
         DC    C'02'   LEV # (MERGE SU4,10,16 CODE TO 037 PTF) @ZA27750
NB903BGN DS    0H                                                Y02668
*                                                                Y02668
*  INITIALIZE INTERPRETER                                        Y02668
*                                                                Y02668
         SPACE 2                                                 Y02668
         LR    R3,R1               SAVE NEL ADDR BECAUSE R1      Y02668
         USING NEL,R3              IS CLOBBERED BY GETMAIN       Y02668
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  GET CORE FOR WORK AREAS AND INITIALIZE                       *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         IEFSAVER  ,               GET INTERPRETER SAVE AREA     Y02668
         LA    R0,WALTH            LOAD WORK AREA LENGTH.        Y02668
         BAL   RA,VHEGAC           GET CORE FOR IWA AND CLEAR IT.Y02668
         LR    RC,R1               INITIALIZE REG12 TO POINT TO  Y02668
*                                  IWA. R12  POINTS TO IWA THRU  Y02668
*                                  LIFE OF INTERPRETER           Y02668
         XC    BUFADDR(4),BUFADDR  INIT TO 0 FOR INTERP *TEMP****Y02668
         LA    R0,WALTH            LOAD WORK AREA LENGTH.        Y02668
         ST    R0,IWAL             SAVE LENGTH IN FIRST WORD     Y02668
         MVC   IWAID,ID            INITIALIZE IWA IDENTIFIER     Y02668
         ST    R3,WANELPTR         SAVE NEL PTR IN IWA           Y02668
         ST    RD,SAVEPTR          SAVE PTR TO CURRENT SAVE AREA Y02668
         MVC   IWASAVPT(WORDLEN),WORDLEN(RD)   SAVE PTR TO       Y02668
*                                  CALLER'S SAVE AREA            Y02668
         L     R0,IEFVHNV          GET PTR TO INTERPRETER        Y02668
*                                  TERMINATION ROUTINE           Y02668
         ST    R0,TERMRTN          SAVE IN IWA FOR C/I COMMON    Y02668
*                                  SERVICE RTNS                  Y02668
         MVC   IWACONID(WORDLEN),NELCOMID UNCONDITIONALLY MOVE   Y02668
*                                  CONSOLE ID TO IWA - ZERO VALUEY02668
*                                  RESULTS IN A DEFAULT TO THE   Y02668
*                                  MASTER CONSOLE - USED BY WTO  Y02668
*        CALCULATE THE LONGEST WORKAREA AND GETCORE FOR THAT   @Z40MPTH
*        LENGTH...                                             @Z40MPTH
         SPACE 1
         LA    R0,LJWA            LENGTH OF JWA                @Z40MPTH
         LA    R5,LEWA            LENGTH OF EWA                @Z40MPTH
         CR    R0,R5              IS EWA LONGER THAN JWA?      @Z40MPTH
         BH    NB9JWA             JWA IS LONGER,LEAVE R0 SAME  @Z40MPTH
         LR    R0,R5              R5(EWA) GREATER THAN R0(JWA) @Z40MPTH
NB9JWA   EQU   *                                               @Z40MPTH
         LA    R5,LDWA            LENGTH OF DWA                @Z40MPTH
         CR    R0,R5              IS DWA LONGER THAN  R0 LENTH @Z40MPTH
         BH    NB9GET             R0 LENGTH IS GREATER,ADD AWA @Z40MPTH
         LR    R0,R5              DWA LONGER THAN LENGTH IN R0.@Z40MPTH
NB9GET   EQU   *                  LENGTH OF AWA ADDED TO LENGTH@Z40MPTH
*                                 OF LONGEST WORKAREA.         @Z40MPTH
         LA    R5,LNGTHAWA        LENGTH OF AWA                @Z40MPTH
         AR    R0,R5              ADD AWA LEN TO LONGEST WKAREA@Z40MPTH
         ST    R0,IWALWLGN      STORE LWA LENGTH INTO IWA FOR  @Z40MPTH
*                                 IEFVHN TO FREE IT WITH       @Z40MPTH
         BAL   RA,VHEGAC           GET CORE FOR LOCAL WORK AREA  Y02668
*                                  AND CLEAR IT                  Y02668
         ST    R1,CTRLWAP          SAVE PTR TO LWA IN IWA        Y02668
         EJECT
*****************************************************************Y02653
*                                                                Y02653
* SETUP ESTAE ENVIRONMENT OVER INTERPRETER                       Y02653
*                                                                Y02653
*****************************************************************Y02653
        SPACE 1
         L     R0,LENESTAE         GET CORE FOR ESTAE LIST FORM  Y02653
         BAL   RA,VHEGAC           GET CORE SUBROUTINE           Y02653
         LR    R5,R1               ADDRESSABILITY FOR ESTAE LIST Y02653
         L     R4,LENESTAE         LENGHT OF LIST FORM FOR MOVE  Y02653
         BCTR  R4,0          DECREMENT FOR MOVE INTO CORE.      YM02681
         EX    R4,MOVESTAE         MOVE LIST TO GOTTEN CORE      Y02653
         LA    R0,EREPLEN          LENGTH OF USER PARAMETER AREA Y02653
         BAL   RA,VHEGAC           GET CORE SUBROUTINE           Y02653
         LR    R4,R1               ADDRESSABILITY TO PARAM AREA  Y02653
         ST    R4,AOSTAPRM         ADDRESS OF USER PARAM AREA    Y02653
         USING EREPL,R4      ADDRESSABILITY TO USER PARMAETERS   Y02653
         ST    RC,EREPLIWA         IWA ADDR IN PARAM AREA ESTAE  Y02653
         MVC   EREPLRSV(LEN4),IWASAVPT   CALLERS S/A PTR TO EREPLY02653
         DROP  R4                  DROP ADDRESSABILITY PARAM AREAY02653
         L     R6,IEFNB9IR         ADDRESS OF ESTAE EXIT         Y02653
*                                                                Y02653
         ESTAE (6),PARAM=(4),MF=(E,(5))                          Y02653
         LTR   RF,RF          WAS ESTAE SUCCESSFUL?              Y02653
         BZ    NB903ES       YES,CONTINUE NORMALLY               Y02653
*        IF ESTAE WAS NOT SUCCESSFUL,FREE THE USER PARAMETER     Y02653
*        AREA AND ZERO THE POINTER TO IT IN THE IWA.             Y02653
         L     R1,AOSTAPRM        ADDRESS OF USER AREA GOTTEN    Y02653
         LA    R0,EREPLEN         LENGTH OF USER AREA            Y02653
         FREEMAIN R,LV=(0),A=(1)  FREE USER PARAMETER LIST       Y02653
         XC    AOSTAPRM(4),AOSTAPRM  ZERO USER PARAM PTR.        Y02653
NB903ES  DS    0H                                                Y02653
*        FREE ESTAE EXIT LIST IN GOTTEN CORE
         LR    R1,R5              ADDRESS OF LIST IN CORE        Y02653
         L     R0,LENESTAE        LENGTH OF LIST IN CORE         Y02653
         FREEMAIN R,LV=(0),A=(1)   FREE CORE                     Y02653
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*  SET UP QMPA, JMR AND DSENQ TABLE IN INTERPRETER'S  CORE      *Y02668
*  LOAD IEFUJV                                                  *YM0581
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         L     R1,NELQMPA          GET PTR TO QMPA PASSED BY     Y02668
*                                  THE INTERPRETER'S CALLER      Y02668
         MVC   QPARM(QMPALEN),NONE(R1)  MOVE CALLER'S QMPA       Y02668
*                                  INTO INTERPRETER WORK AREA    Y02668
*                                  THIS ALLOWS CALLER TO SPECIFY Y02668
*                                  SWA SUBPOOL FOR INTERPRETER   Y02668
         TM    NELOPSWT,NELSMF     IS SMF BEING USED             Y02668
         BZ    VHEDSENQ            NO, BYPASS JMR PROCESSING     Y02668
         LA    R0,TABLEN           GET LENGTH OF JMR             Y02668
         BAL   RA,VHEGAC           GET CORE AND CLEAR FOR JMR    Y02668
         ST    R1,IWAJMRPT         SAVE JMR PTR IN IWA           Y02668
         USING JMR,R1              ADDRESS NEWLY GOTTEN CORE     Y02668
         L     RE,NELJMR           GET PTR TO CALLER'S JMR       Y02668
         MVC   JMRJOB(JESSJMR),NONE(RE)  MOVE JMR INTO           Y02668
*                                  INTERPRETER'S CORE-SO THE USERY02668
*                                  CANNOT ACCESS JESS CORE       Y02668
         LOAD  EP=IEFUJV           LOAD USER ROUTINE.           YM00581
         L     R1,IWAJMRPT         RESTORE R1,DESTROYED BY LOAD YM00581
         ST    R0,JMRUJVP                                       YM00581
         LA    R2,JCT              GET JCT PTR                  YM00388
         USING JCTD,R2             ADDRESS JCT                   Y02668
         MVC   JCTJMROP(1),JMROPT  PUT SMF OPTIONS IN JCT        Y02668
         DROP  R2
         DROP  R1                                                Y02668
VHEDSENQ DS    0H                                                Y02668
         LA    R0,TABLEN           GET DSENQ TABLE LENGTH        Y02668
         BAL   RA,VHEGAC           GET AND CLEAR CORE FOR TABLE  Y02668
         ST    R1,DSENQTP          SAVE DSENQ TABL PTR IN IWA    Y02668
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  GET I/O BUFFERS AND INITIALIZE PTRS IN IQA                   *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         LH    R0,TXTBUFLT         GET LENGTH OF TEXT BUFFER     Y02668
         BAL   RA,VHEGAC           GET AND CLEAR CORE FOR        Y02668
*                                  INTERNAL TEXT BUFFER          Y02668
         LH    R0,TXTBUFLT         GET TEXT BUFFER LENGTH AGAIN  Y02668
         ST    R0,NONE(R1)         PUT LENGTH IN HEADER          Y02668
         MVC   WORDLEN(WORDLEN,R1),TEXTID PUT ID IN TEXT BUF     Y02668
         LA    R1,DBLEWORD(R1)     ALLOW FOR DOUBLE WORD HEADER  Y02668
         ST    R1,TEXTBUFP         SAVE PTR TO 1ST AVAILABLE BYTEY02668
         LA    R0,AOWBFLTH         GET LENGTH OF SYSTEM OUTPUT   Y02668
*                                  BUFFER                        Y02668
         BAL   RA,VHEGAC           GET CORE FOR BUFFER AND CLEAR Y02668
         ST    R1,AOWSTMT          SAVE BUFFER PTR IN IWA        Y02668
         LA    R0,MSBUFLEN         GET MSG BUFFER LENGTH         Y02668
         BAL   RA,VHEGAC           GET AND CLEAR CORE FOR MSG    Y02668
*                                  BUFFER FOR VGM                Y02668
         ST    R1,WAMSGBUF         SAVE MSG BUF PTR IN IWA       Y02668
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  CREATE UNIQUE DSN QUALIFIER - USED FOR SYSTEM GENERATED DSNS *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         LA    R2,UNQNAME          GET PTR TO UNIQUE NAME FIELD  Y02668
*                                  IN IWA                        Y02668
         USING GENDSNAM,R2         ADDRESS GENERATED DSNAME      Y02668
*                                  STRUCTURE AND MAP IT INTO IWA Y02668
         MVC   PREFIX,SYS          INSERT PREFIX INTO NAME(SYS)  Y02668
         SPACE 1                                                 Y02668
*****************************************************************Y02668
*                                                               *Y02668
* GET DATE AND TIME BY ISSUING TIME MACRO-                      *Y02668
*                     R0 RETURNS WITH TIME                      *Y02668
*                     R1 RETURNS WITH DATE                      *Y02668
*                                                                Y02668
*****************************************************************Y02668
         SPACE 1                                                 Y02668
         LA    R0,DBLEWORD         GET WORK AREA FOR UNPACK      Y02668
         BAL   RA,VHEGAC           INSTRUCTION                   Y02668
         LR    R4,R1               SAVE WORK AREA ADDRESS        Y02668
         SR    R0,R0               ????  TEMP ***********        Y02668
         TIME  DEC                 IN DECIMAL, READY TO UNPACK   Y02668
         ST    R1,NONE(R4)         PREPARE TO UNPACK DATE IN WORKY02668
*                                  AREA                          Y02668
         UNPK  NONE(LEN8,R4),NONE(LEN4,R4) UNPACK DATE           Y02668
         OI    SIGNDIGT(R4),SIGN   CHANGE SIGN DIGIT             Y02668
         MVC   DATE(LEN5),DATEDSPL(R4) DATE TO NAME FIELD        Y02668
         MVI   PERIOD,DOT          INSERT QUALIFYING PERIOD      Y02668
*  TIME                                                          Y02668
         XC    NONE(LEN8,R4),NONE(R4) ZERO WORK AREA FOR NEXT    Y02668
*                                  UNPACK                        Y02668
         ST    R0,NONE(R4)         SET UP TO UNPACK TIME         Y02668
         MVI   PREFIX1,T           MOVE TIME PREFIX(T) TO NAME   Y02668
         OI    DISPL3(R4),BSIGN    SIGN LAST DIGIT               Y02668
         UNPK  NONE(LEN8,R4),NONE(LEN4,R4) UNPACK TIME           Y02668
         MVC   TIME(LEN6),1(R4)    MOVE TIME INTO NAME           Y02668
         MVI   PERIOD2,DOT         INSERT SECOND QUALIFYING      Y02668
*                                  PERIOD                        Y02668
         MVI   DSTYPE,R            INDICATE SYSIN D.S.-VDA CAN   Y02668
*                                  CHANGE                        Y02668
         MVI   SYSTYPE,A           INDICATE AOS OR VIRTUAL SYSTEMY02668
         MVC   FILLER(LEN3),ZEROS  SUPPLY FILLER                 Y02668
         MVI   PERIOD3,DOT         INSERT 3RD AUALIFYING PERIOD  Y02668
         LR    R1,R4               SET UP TO FREE UNPACK WORK    Y02668
*                                  AREA                          Y02668
         FREEMAIN R,LV=DBLEWORD,A=(1) FREE IT                    Y02668
         DROP  R2                                                Y02668
         EJECT                                                   Y02668
*****************************************************************Y02668
*                                                               *Y02668
*  SCONS FOR CONTROL BLOCKS IN IWA                              *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         LH    R4,SCONREG2         SET UP SCON BASED ON IWA(R12)
         LA    R5,JCT-COMWA        RELATIVE PTR TO JCT.          Y02668
         OR    R5,R4               CREATE JCT SCON
         STH   R5,JCTS             SAVE IN IWA
         LA    R5,JCTX-COMWA       RELATIVE PTR TO JCTX        @Z40RPSM
         OR    R5,R4               CREATE JCTX SCON            @Z40RPSM
         STH   R5,JCTXS            SAVE IN IWA                 @Z40RPSM
         LA    R5,SCT-COMWA        RELATIVE PTR TO SCT.          Y02668
         OR    R5,R4               CREATE SCT SCON
         STH   R5,SCTS             SAVE IN IWA
         LA    R5,DSNAME-COMWA     RELATIVE PTR TO DSN TABLE.    Y02668
         OR    R5,R4               CREATE DSN TABLE SCON
         STH   R5,DSNAMES          SAVE IN IWA
         LA    R5,SREFB-COMWA      RELATIVE PTR TO 1ST REFERBACK.Y02668
*                                  DICTIONARY
         OR    R5,R4               CREATE DICTIONARY SCON
         STH   R5,SREFBS           SAVE IN IWA
         LA    R5,DREFB-COMWA      RELATIVE PTR TO 2ND REFERBACK.Y02668
*                                  DICTIONARY
         OR    R5,R4               CREATE DICTIONARY SCON
         STH   R5,DREFBS           SAVE IN IWA
*
         LH    R4,SCONREG1         SET UP SCON BASED ON LWA(R10)
         SR    R5,R5               CLEAR REGS
         OR    R5,R4               CREATE SCON FOR SWITCHES
         STH   R5,JEDSWS           SAVE IN IWA
         LA    R5,LNGJACT+LNGTHAWA RELATIVE PTR TO JACT
         OR    R5,R4               CREATE SCON FOR JACT
         STH   R5,JACTS            SAVE IN IWA.                  Y02668
         LA    R5,LNGTHACT+LNGTHAWA  RELATIVE PTR TO STEP ACT. @Z40MPTH
         OR    R5,R4               CREATE SCON FORACT
         STH   R5,ACTS             SAVE IN IWA
         LA    R5,LNGORTAB+LNGTHAWA  RELATIVE PTR TO ORIDE TAB.@Z40MPTH
         OR R5,R4                  CREATE O'RIDE TABLE SCON
         STH   R5,POVRRDS          SAVE IN IWA
         LA    R5,LNGSIOT+LNGTHAWA RELATIVE PTR TO SIOT
         OR    R5,R4               CREATE SIOT SCON
         STH   R5,SIOTS            SAVE IN IWA
         LA    R5,LNGJFCB+LNGTHAWA RELATIVE PTR TO JFCB
         OR    R5,R4               CREATE JFCBX SCON
         STH   R5,JFCBS            SAVE IN IWA
         LA    R5,LNGJFCBX+LNGTHAWA RELATIVE PTR TO JFCBX
         OR    R5,R4               CREATE JFCBX SCON
         STH   R5,JFCBXS           SAVE IN IWA
         LA    R5,LNGJFCBE+LNGTHAWA  RELATIVE PTR TO JFCBE.    @Z40MPTH
         OR    R5,R4              CREATE JFCB SCON             @Z40MPTH
         STH   R5,JFCBES          STORE INTO IWA...            @Z40MPTH
         LA    R5,QPARM            INITIALIZE PTR TO
         ST    R5,QPARMP           SWA-MANAGER PARM AREA
         EJECT
*****************************************************************
*                                                               *
*  ASSIGN SVA'S FOR INTERPRETER CONTROL BLOCKS RESIDING IN SWA  *
*                                                               *
*****************************************************************
         SPACE 2
         L     R2,QPARMP           GET PTR TO SWA MANAGER
*                                  PARAMETER AREA
         USING IOPARAMS,R2         ADDRESS QMPA
         L     RA,CTRLWAP          GET LOCAL WORK AREA PTR       Y02668
         USING AWA,RA        ADDRESS AWA FOR PARMLIST          @Z40MPTH
*                                  CONTAINS EXTERNAL PARM LIST   Y02668
*                                  FOR SWA MANAGER               Y02668
         XC    QLINKWA(32),QLINKWA ZERO AREA                   @Z40RPSM
         LA    R5,QLINKWA          GET PTR TO SWA MANAGER
*                                  EXTERNAL(USER) PARM LIST
         ST    R5,QMPCL            TELL SWA MANAGER WHERE IT IS
*                                  BY INITIALIZING FIELD IN QMPA
         MVI   QMPOP,QMASGS        INDICATE ASSIGN STARTS ARE TO Y02668
*                                  BE DONE
         MVI   QMPCM,RECNO         INDICATE NUMBER OF RECORDS
*                                  TO ASSIGN
         DROP  R2
         L     RF,IEFVHQV          PTR TO SWA-MNGR INTERFACE RTN
         BALR  RE,RF               GO TO ASSIGN RECORDS
         EJECT                                                   Y02668
*****************************************************************
*  INITIALIZE CONTROL BLOCKS/WORK AREAS WITH SVA'S ASSIGNED     *
*****************************************************************
         SPACE 1
         LA    R2,JCT              PTR TO JCT
         USING JCTD,R2             ADDRESS JCT
         MVC   JCTDSKAD(SVALEN),NONE(R5) MOVE 1ST SVA TO JCT
         MVC   JCTJCTX(WORDLEN),DISPL28(R5)  MOVE 8TH SVA      @Z40RPSM
*                               INTO PTR TO JCTX.              @Z40RPSM
         TM    NELOPSWT,NELSMF     IS SMF BEING USED            YM01587
         BZ    NB9NOSMF            NO, DON'T INIT JCT WITH JMR  YM01587
*                                  SVA                          YM01587
         MVC   JCTJMR(SVALEN),DISPL20(R5) USE 7TH  SVA RETURNED
*                                  FOR JMR - PUT IT IN JCT
NB9NOSMF DS    0H                                               YM01587
         DROP  R2
         LA    R2,SCT              PTR TO SCT
         USING SCTD,R2             ADDRESS SCT
         MVC   SCTANSCT(SVALEN),WORDLEN(R5) MOVE 2ND SVA TO SCT
         DROP  R2
         MVC   TNEXT(WORDLEN*2),DISPL8(R5)  MOVE 3RD AND 4TH SVA
*                                  TO IWA TO BE USED LATER
         MVC   TSIOT(WORDLEN),DISPL16(R5) MOVE 5TH SVA TO IWA TO Y02668
*                                  LATER BE USED FOR SIOT
         MVC   IWANXTSV(WORDLEN),DISPL24(R5) MOVE 7TH SVA TO    YM02716*
                                   IWA FOR LATER USE IN DSENQT  YM02716*
                                   AND REFERBACK DICT.          YM02716
         LA    R2,JCTX            PTR TO JCTX.                 @Z40RPSM
         USING JCTXD,R2          ADDRESS JCTX.                 @Z40RPSM
         MVC   JCTXDSKA(WORDLEN),DISPL28(R5)  MOVE 8TH SVA     @Z40RPSM
*                                  INTO JCTX SELF PTR.         @Z40RPSM
         DROP  R2                                              @Z40RPSM
         EJECT
*****************************************************************
*                                                               *
*  EXIT LIST PROCESSING                                         *
*                                                               *
*****************************************************************
         SPACE 2
VHEEXLST DS    0H
         L     R2,NELEXLST        LOAD POINTER TO EXIT LIST      Y02621
         LTR   R2,R2               DOES EXIT LIST EXIST FOR NEL  Y02621
         BZ    VHEEXOUT            NO,EXIT LIST PROCESSING BYPASSY02621
         USING NELEXITS,R2
         LH    R4,NELEXLEN         LENGTH OF EXIT LIST           Y02621
         DROP  R2
         SRA   R4,3(0)             SHIFT DIVIDEND INTO REGISTER 5Y02621
         BCTR  R4,0       DECREMENT 1 FOR HEADER,INCLUDED IN LEN Y02621
*        REGISTER 4 NOW HAS NUMBER OF ENTRIES IN THE EXIT LIST.  Y02621
         SPACE 1
VHELOOP1 LA    R2,LEN8(R2)         LOOK AT FIRST EXIT LIST ENTRY Y02621
         USING NELEXENT,R2
*
*   EXIT LIST SEARCH
*
         CLI   NELEXID,NELQEPEX   IS IT JOURNAL MERGE ENTRY?     Y02621
         BE    VHEJRNLX           YES,PROCESS THE ENTRY          Y02621
         CLI   NELEXID,NELQLPEX   QUEUE MNGR LOC MODE ENTRY?   @G29AN2F
         BE    VHEQLPEX           YES, PROCESS THE ENTRY       @G29AN2F
VHENXTEX BCT   R4,VHELOOP1        CHECK NEXT ENTRY               Y02621
         B     VHEEXOUT           NO JOURNAL MERGE ENTRY FOUND   Y02621
         SPACE  2
VHEJRNLX DS    0H    JOURNAL MERGE EXIT PROCESSING               Y02621
         CLI   NELEXLK,NELEXNOP   SHOULD ENTRY BE IGNORED?       Y02621
         BE    VHENXTEX           YES,DO NOT PROCESS ENTRY.    @G29AN2F
         CLI   NELEXLK,NELEXNAM   ENTRY HAVE 6 BYTE NAME?        Y02621
         BNE   VHEXTADD           THEN CONTAINS ADDR OF LOAD.    Y02621
         MVC   AOJRNLEX(6),NELEXEP  MOVE NAME INTO FIELD TO LOAD Y02621
         MVC   AOJRNLEX+6(2),BLANK2 BLANK TRAILING 2 BYTES.      Y02621
         LA    R6,AOJRNLEX        ADDRESS OF NAME PARAMETER      Y02621
         LOAD  EPLOC=(6)          LOAD JOURNAL MERGE ROUTINE.    Y02621
         ST    R0,AOJMRGEP        EP ADDRESS INTO IWA FIELD      Y02621
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*   EXIT TO START PROCESSING TEXT                               *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 5
         B     VHELSTMV           MOVE WHOLE EXIT LIST ENTRY     Y02621
VHEXTADD MVC   AOJMRGEP(4),NELEXEPA  MOVE ADDRESS TO IWA         Y02621
VHELSTMV MVC   AOJRNLEX(8),NELEXLK  MOVE EXIT LIST ENTRY TO IWA  Y02621
         B     VHENXTEX            PROCESS NEXT ENTRY,IF ANY     Y02621
         SPACE 1
VHEQLPEX DS    0H                QUEUE MNGR LOCATE MODE EXIT   @G29AN2F
         CLI   NELEXLK,NELEXNOP  SHOULD ENTRY BE IGNORED?      @G29AN2F
         BE    VHENXTEX          YES, DO NOT PROCESS ENTRY     @G29AN2F
         CLI   NELEXLK,NELEXNAM  ENTRY HAVE 6 BYTE NAME?       @G29AN2F
         BNE   VHEQLADD          THEN CONTAINS ADDR OF LOAD    @G29AN2F
         MVC   AOQLOCEX(6),NELEXEP MOVE NAME TO IWA FIELD      @G29AN2F
         MVC   AOQLOCEX+6(2),BLANK2 BLANK TRAILING 2 BYTES     @G29AN2F
         LA    R6,AOQLOCEX       GET ADDR OF NAME OF EXIT      @G29AN2F
         LOAD  EPLOC=(6)         LOAD QUEUE MNGR LOC ROUTINE   @G29AN2F
         ST    R0,AOQLOCEP       EP ADDR INTO COMWA FIELD      @G29AN2F
         B     VHELOCMV          MOVE WHOLE EXIT LIST ENTRY    @G29AN2F
VHEQLADD MVC   AOQLOCEP(4),NELEXEPA MOVE ADDR TO COMWA         @G29AN2F
VHELOCMV MVC   AOQLOCEX(8),NELEXLK  MOVE EXIT LIST ENTRY TO IWA@G29AN2F
         B     VHENXTEX          PROCESS NEXT ENTRY, IF ANY    @G29AN2F
VHEEXOUT DS    0H       EXIT LIST PROCESSING FINISHED            Y02621
         DROP  R2                                                Y02621
         EJECT
         L     RF,IEFVHEV          ADDR OF INTERP ROUTER         Y02668
         BR    RF                  EXIT TO GET 1ST TEXT STRING   Y02668
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*  ROUTINE TO GET AND CLEAR CORE                                *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
VHEGAC   DS    0H                                                Y02668
         STM   R4,R7,12(RD)        SAVE REGS CLOBBERED BY MVCL   Y02668
         LR    R5,R0               PUT LENGTH IN ODD REG FOR MVCLY02668
         GETMAIN  R,LV=(0)         GET REQUESTED CORE            Y02668
         LR    R4,R1               SET UP TARGET OF MVCL AND     Y02668
*                                  PRESERVE REG1 FOR RETURN      Y02668
         SR    R7,R7               INDICATE PADDING CHAR OF 0    Y02668
*                                  FOR MVCL AND OBJECT COUNT OF 0Y02668
         SR    R6,R6               INDICATE NO MVCL OBJECT ADDR  Y02668
         MVCL  R4,R6               CLEAR REQUESTED CORE          Y02668
         LM    R4,R7,12(RD)        RESTORE REGS CLOBBERED        Y02668
*                                  BY MOVE CHAR LONG(MVCL)       Y02668
         BR    RA                                                Y02668
         EJECT
*****************************************************************Y02668
*   DECLARED  STORAGE                                           *Y02668
*****************************************************************Y02668
MOVESTAE MVC   LEN0(LEN0,R5),NB9ESTAE    MOVE LIST FORM TO AREA  Y02653
ID       DC    X'11111111'         IDENTIFIER                    Y02668
BLANK2   DC    X'4040'             TWO BLANKS FOR PADDING        Y02621
TXTBUFLT DC    H'8192'             8K INTERNAL TEXT BUFFER       Y02668
TEXTID   DC    X'EEEEEEEE'         TEXT BUFFER IDENTIFIER        Y02668
SYS      DC    C'SYS'                                            Y02668
ZEROS    DC    X'F0F0F0'                                         Y02668
SCONREG1 DC    XL2'A000'           LOCAL WORK AREA BASE          Y02668
SCONREG2 DC    XL2'C000'           IWA BASE                      Y02668
IEFVHEV  DC    V(IEFVHE)           INTERPRETER ROUTER            Y02668
IEFVHNV  DC    V(IEFVHN)           INTERPRETER TERMINATION RTN   Y02668
IEFVHQV  DC    V(IEFVHQ)           SWA MANGER INTERFACE RTN
IEFNB9IR DC    V(IEFNB9IR)         ESTAE RECOVERY EXIT ROUTINE   Y02653
         SPACE 1
NB9ESTAE ESTAE XCTL=NO,PURGE=NONE,ASYNCH=YES,RECORD=YES,MF=L
LENESTAE DC    A(*-NB9ESTAE)       LENGTH OF ESTAE LIST MACRO    Y02653
PATCH    DC    25F'0'
         EJECT
*****************************************************************Y02668
*                                                               *Y02668
*                        EQUATES                                *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
MSBUFLEN EQU   160        MSG BUFFER LENGTH FOR VGM              Y02668
LNGTHAWA EQU   ENDAWA-QLINKWA                                    Y02668
LDWA     EQU   ENDWA-DWA                                       @Z40MPTH
LNGJACT  EQU   JACT-JASW1                                        Y02668
LNGSIOT  EQU   SIOT-DWA                                          Y02668
LNGJFCB  EQU   JFCB-DWA                                          Y02668
LNGJFCBX EQU   JFCBX-DWA                                         Y02668
LNGORTAB EQU   EAORTABL-EWA       DISPLACEMENT OF ORIDE TABLE  @Z40MPTH
LNGTHACT EQU   ACT-EWA            DISPLACEMENT OF ACT IN EWA.  @Z40MPTH
LNGJFCBE EQU   JFCBEX-DWA         DISPLACEMENT OF JFCBE IN DWA.@Z40MPTH
WORDLEN  EQU   4                                                 Y02668
QMPALEN  EQU   32                                                Y02668
NONE     EQU   0                                                 Y02668
JESSJMR  EQU   56                  LENGTH OF JESS JMR            Y02668
TABLEN   EQU   176                                               Y02668
AOWBFLTH EQU   90                                                Y02668
DBLEWORD EQU   8                                                 Y02668
SIGNDIGT EQU   7                                                 Y02668
BYTE0    EQU   0                                                 Y02668
HEX00    EQU   0                                                 Y02668
NEXT     EQU   1                                                 Y02668
SIGN     EQU   X'F0'                                             Y02668
DATEDSPL EQU   3                                                 Y02668
DOT      EQU   C'.'                                              Y02668
T        EQU   C'T'                                              Y02668
R        EQU   C'R'                                              Y02668
A        EQU   C'A'                                              Y02668
BSIGN    EQU   X'0F'                                             Y02668
LEN0     EQU   0                                                 Y02653
LEN3     EQU   3                                                 Y02668
LEN4     EQU   4                                                 Y02668
LEN5     EQU   5                                                 Y02668
LEN6     EQU   6                                                 Y02668
LEN8     EQU   8                                                 Y02668
RECNO    EQU   X'80'               RECORD NUMBER               @Z40RPSM
SVALEN   EQU   3                   SWA VIRTUAL ADDR LENGTH
DISPL20  EQU   20
DISPL24  EQU   24
DISPL3   EQU   3                                                 Y02668
DISPL8   EQU   8
DISPL16  EQU   16
DISPL28  EQU   28                                              @Z40RPSM
         EJECT
TRACE    DS    0H
         BALR  15,0                SET BASE REG.
         USING *,15
****************************************************************YM08105
         B     TRNOP               DEACTIVATE TRACE             YM08105
*                                  ZAP THIS INSTR TO '47000000' YM08105
*                                  TO TRACE MODULE FLOW.        YM08105
****************************************************************YM08105
         STM   11,1,TRSAVE         SAVE CALLER'S REGS.
*  REGISTER 12 CONTAINS ADDRESS OF WORK AREA.                    Y02668
         L     1,BUFADDR           LOAD CONTENTS.
         LTR   1,1                 TRACE BUFFER OBTAINED ?
         BNZ   TR5                 BRANCH YES.
* TRACE BUFFER NOT YET OBTAINED.
         LR    11,15               SAVE BASE REGISTER.
         LH    0,BUFLTH            LOAD BUF LENTH.
         GETMAIN  R,LV=(0)
         LR    15,11               RESTORE BASE REGISTER.
         ST    1,BUFADDR           SAVE BUFFER ADDRESS.
         ST    1,NEXTPTR           INIT NEXT ENTRY PTR.
         AH    1,BUFLTH            ADD LENGTH TO
         ST    1,BUFEND            COMPUTE BUFFER END ADDR.
* TRACE BUFFER EXISTS AND PTRS ARE INITIALIZED.
TR5      DS    0H
         CLC   NEXTPTR(4),BUFEND   IS BUFFER FILLED ?
         BNE   TR10                BRANCH NO.
* BUFFER HAS BEEN FILLED. START OVER.
         MVC   NEXTPTR(4),BUFADDR  SET NEXT ENTRY TO START OF BUF.
TR10     DS    0H
         L     1,NEXTPTR           LOAD PTR TO NEXT ENTRY.
         L     14,TRSAVE+12        LOAD ADDR OF CALLER.
         MVC   0(4,1),4(14)        MOD ID IS 2ND WD AFTER CALLING      *
                                   ADDR. MOVE ID TO BUF.
         LA    1,4(1)              SET ENTRY PTR TO NEXT LOC AND
         ST    1,NEXTPTR           SAVE.
         LM    11,1,TRSAVE         RESTORE REGS.
TRNOP    DS    0H                                               YM08105
         LA    14,8(14)            PT LINK REG BEYOND PARM LIST.
         BR    14                  RETURN TO NEXT EXECUTABLE INSTR.
         SPACE 2
         DS    0H
BUFLTH   DC    AL2(2048)           BUFFER LENGTH.
         EJECT
         END   IEFNB903
