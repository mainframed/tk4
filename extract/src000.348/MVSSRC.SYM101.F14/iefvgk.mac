***********************************************************************
*                                                                     *
*  MODULE NAME= IEFVGK                                                *
*  DESCRIPTIVE NAME= GET KEY/POSITIONAL UTILITY ROUTINE               *
*  COPYRIGHT= NONE                                                    *
*  STATUS= REL. 037 PTF                                       @ZA27750*
*                                                                     *
*  FUNCTION/OPERATION   THIS UTILITY ROUTINE GETS THE NEXT KEYWORD    *
*        OR POSITIONAL PARAMETER IN THE INTERNAL TEXT BUFFER FOR      *
*        THE CALLING PROCESSOR ROUTINE (IEFVDA, IEFVEA OR IEFVJA).    *
*        IT ALSO HANDLES THE GETTING OF CHAINED BUFFERS FROM DISK     *
*        WHEN A LONG JCL STATEMENT CAUSES OVERFLOW.                   *
*                                                                     *
*  NOTES                                                              *
*      CHARACTER CODE DEPENDENCIES= EBCDIC                            *
*      DEPENDENCIES= NONE                                             *
*      RESTRICTIONS= NONE                                             *
*      REGISTER CONVENTIONS= IWASL (NAME OF AREA IN IWA WHERE         *
*                            REGISTER CONVENTIONS ARE FOUND)          *
*      PATCH-LABEL= N/A                                               *
*                                                                     *
*  MODULE TYPE= PROCEDURE                                             *
*      PROCESSOR= ASSEMBLER                                           *
*      MODULE SIZE= N/A                                               *
*      ATTRIBUTES= READ ONLY / REENTRANT / PAGED LPA                  *
*                                                                     *
*  ENTRY POINT= IEFVGK                                                *
*      PURPOSE= MAIN ENTRY                                            *
*      LINKAGE= NONE                                                  *
*      INPUT DATA= 1. PTR. TO JOB,EXEC,OR DD WORK AREA                *
*                  2. BASE REGISTER OF JOB,EXEC,OR DD WORK AREA       *
*                  3. PTR TO IWA                                      *
*                  4. PTR TO THE CURRENT REGISTER SAVE AREA           *
*                  5. RETURN ADDRESS                                  *
*      REGISTERS SAVED= NONE                                          *
*      REGISTER CONTENTS DURING PROCESSING=                           *
*                        R6= CURRENT KEY POINTER                      *
*                        R7= CURRENT NUMBER POINTER                   *
*                        R8= CURRENT LENGTH                           *
*                        R9= CURRENT LENGTH POINTER                   *
*                        R10 - RF= SAME AS INPUT                      *
*      REGISTERS RESTORED= NONE                                       *
*                                                                     *
*  EXIT - NORMAL= KEYWORD PROCESSING ROUTINE                          *
*      CONDITIONS= WHEN KEY HAS BEEN RECEIVED AND VALIDATED           *
*      OUTPUT DATA= 1. R2= LENGTH OF CURRENT POSITIONAL PARAMETER     *
*                   2. R3= PTR TO LENGTH BYTE OF CURRENT PARAMETER    *
*                   3. R4= PTR TO PARAMETER DESCRIPTOR TABLE          *
*      RETURN CODES= NONE                                             *
*  EXIT - ERROR= THE CLEANUP PORTION OF THE PROCESSING ROUTINE        *
*      CONDITIONS= WHEN ERROR HAS BEEN DETECTED                       *
*      OUTPUT DATA= ERROR MESSAGE                                     *
*      RETURN CODES= NONE                                             *
*                                                                     *
*  EXTERNAL REFERENCES=                                               *
*      ROUTINES= IEFVHQ                                               *
*      DATA AREAS= IWA,LWA                                            *
*      CONTROL BLOCKS= QMPA - U,M                                     *
*          KEY:  C=CREATE, U=USED, M=MODIFY, D=DELETE                 *
*      TABLES= IEFVKEYS ( TABLE OF VALID KEYS )                       *
*      MACROS= NONE                                                   *
*      ENQUEUE RESOURCES= NONE                                        *
*                                                                     *
*  MESSAGES= IEF640I- EXCESSIVE NBR OF POSITIONAL SUBPARAMETERS       *
*            IEF641I- IMPROPER SUBPARAMETER LIST                      *
*                                                                     *
*  CHANGE LEVEL = Z40MPTH,Z40RPSM,ZA27750                     @ZA27750*
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
         IEFTXTFT
         TITLE 'IEFVGK - KEYS'
         IEFVKEYS
         TITLE 'IEFVGK - IEFQMNGR'
         IEFQMNGR
         TITLE 'IEFVGK - IWA'
         IEFCOMWA
         IEFVMIWA
         TITLE 'IEFVGK - AWA'
GKWORK   DSECT
         IEFVMAWA
         TITLE 'IEFVGK - CSECT'
*                                                                     *
***********************************************************************
*                                                                     *
*              EQUATES - ERROR MESSAGE NUMBERS.                       *
*                                                                     *
***********************************************************************
*                                                                     *
GKER1    EQU   X'28'   IEF640I EXCESSIVE NBR OF POS. SUBPARAMETERS.
GKER2    EQU   X'29'   IEF641I IMPROPER SUBPARAMETER LIST.
*****************************************************************Y02668
*                                                               *Y02668
*                 GENERAL  EQUATES                              *Y02668
*                                                               *Y02668
*****************************************************************Y02668
         SPACE 2                                                 Y02668
         EJECT
IEFVGK   CSECT
***********************************************************************
*                                                                     *
*        INPUT TO THIS ROUTINE:                                       *
*                                                                     *
*              RA POINTS TO JOB, EXEC OR DD WORK AREA.                *
*              RB IS BASE REGISTER OF JOB, EXEC OR DD ROUTINE.        *
*              RC POINTS TO INTERPRETER WORK AREA.                    *
*              RD POINTS TO CURRENT REGISTER SAVE AREA.               *
*              RE RETURN ADDRESS.                                     *
*                                                                     *
***********************************************************************
*
         SPACE 2
         STM   R5,R1,12(RD)       SAVE ALL REGISTERS BUT R2,R3 & R4.
         SPACE
         BALR  RB,0               REGISTER 11 IS THE BASE
         USING *,RB                    OF THIS ROUTINE.
*****************************************************************Y02668
* MODULE TRACE CODE - FOR TESTING.                               Y02668
         L     RF,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         BALR  RE,RF               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'VGK '             MOD ID USED BY TRACE.         Y02668
* TRACE RETURNS HERE.                                            Y02668
*****************************************************************Y02668
GKBASE   EQU   *
         B     GKB1A                                             Y02668
         MODID BRANCH=NO                                         Y02668
*        DC    C'SPLT'             FUNCTION ID AND               Y02668
*        DC    C'05'               LEVEL # (TEXT PFX FIX).       Y02668
*        DC    C'REL37'             FUNCTION ID AND            @Z40MPTH
*        DC    C'02'   LEV # (RACF)                            @Z40RPSM
         DC    C'03'   LEV # (MERGE SU4,10,16 CODE TO 037 PTF) @ZA27750
GKB1A    DS    0H                                                Y02668
         USING GKWORK,RA          LOCAL WORK AREA (GOTTEN IN CALLING
*                                      PROGRAM).
         LM    R2,R5,TNUM         GET CURRENT PARAM/SUBPARAM STATUS.
         CLR   R2,R3              PARAMETERS TO PROCESS.
         BNE   GKB2               YES. GO TO GET POSITIONAL.
         CLR   R4,R5              SUBPARAMETER TO PROCESS.
         BNE   GKB2               YES. GO TO GET POSITIONAL.
         EJECT
***********************************************************************
**                                                                   **
**             GET KEY PROCESSING.                                   **
**                                                                   **
***********************************************************************
GKB4     DS    0H
         LM    R6,R9,TKEYPX       R6 = CURRENT KEY POINTER.
*                                 R7 = CURRENT NUMBER POINTER.
*                                 R8 = CURRENT LENGTH.
*                                 R9 = CURRENT LENGTH POINTER.
         LTR   R6,R6              CURRENT KEY POINTER = ZERO.
         BE    GKB5A              YES. INITIAL ENTRY TO GET KEY.
         LR    R6,R9              TAKE TLENP.
         AR    R6,R8              ADD TLEN.
         LA    R6,1(R6,0)         PLUS ONE. R6 NOW POINTS TO NEXT KEY.
GKF3     DS    0H
         CLI   0(R6),ENDK          END KEY                        19378
         BE    AOGK5               YES,GO TO CLEANUP             Y02668
         BAL   RE,GKL1             GO PROCESS DEFAULT TABLE      Y02668
         LA    R7,1(R6,0)         R7 NOW POINTS TO NEW NBR.
         LR    R9,R7              SET R9 (TLENP) TO BE INCREMENTED
*                                      BY GET POS.
         L     R4,TBRANCH         BRANCH TABLE ADDRESS TO R4.
         SR    R5,R5
         IC    R5,0(R6)           THIS KEY TO R5.
         STC   R5,MSGKEY          STORE KEY IN IWA FOR POSS ERROR MSG.
         SR    R1,R1
         IC    R1,TBASE           COMPUTE TABLE ENTRY ADDRESS FROM BASE
         SR    R1,R5                   KEY AND CURRENT KEY.
         MH    R1,GK06
         LA    R1,0(R1,R4)        R1 NOW POINTS AT TABLE ENTRY.
         CLC   0(1,R7),0(R1)      TOO MANY PARAMETERS FOR THIS KEY.
         BH    GKG5               YES. GO TO SET ERROR MSG.
         XC    TNUM(16),TNUM      ZERO STATUS TABLE.
         MVC   TNUM+3(1),0(R7)    MOVE NBR OF PARAMS TO TABLE.
         SR    R8,R8              SET LENGTH SLOT TO ZERO.
         STM   R6,R9,TKEYPX       STORE UPDATED STATUS OF KEY,NUM & LEN
         LH    R9,2(R1)           BRANCH RETURN RELATIVE ADDRESS TO R9.
         L     R8,36(RD)          JOB,EXEC OR DD BASE TO R8.
         LA    R9,0(R9,R8)        ABSOLUTE BRANCH RTN ADDR TO R9.
         ST    R9,48(RD)          STORE INTO R14 RETURN SLOT.
         LH    R9,4(R1)           PDT RELATIVE ADDRESS TO R9.
         LA    R9,0(R9,R8)        PDT ADDRESS TO R9.
         ST    R9,TPDTSAVE        SAVE TO PICK UP ON EXIT.
         MVC   TSUBPARM(1),1(R1)  SAVE SUBPARM CHECK FIELD FOR GET POS.
         CLI   TNUM+3,X'00'       DOES NBR PARAMS EQUAL ZERO.
         BE    GKJ2A              YES. GO TO EXIT.
         B     GKB2               GO TO GET POS.
*
*   INITIALIZE WORK AREA.
*
GKB5A    DS    0H
         L     R6,TEXTBUFP         GET POINTER TO TEXT AND       Y02668
         USING TEXT,R6             ADDRESSABILITY FOR TEXT PREFIXY02668
         TM    STRINDCS,PROCSTR    Q. PROC STMT TEXT STRING      Y02668
         BO    AOGK2               YES, PROCESS AS EXEC STMT     Y02668
         TM    STRINDCS,JOBSTR     Q. JOB STMT TEXT STRING       Y02668
         BZ    AOGK1               NO, CHECK IF EXEC STMT        Y02668
         LA    R6,STRJPFXL(R6)     INCRE BY JOB PFX LTH          Y02668
         B     AOGK4               EXIT TO STORE JOB KEY PTR     Y02668
AOGK1    DS    0H                                                Y02668
         TM    STRINDCS,EXECSTR    Q. EXEC STMT TEXT STRING      Y02668
         BZ    AOGK3               NO, ASSUME DD STMT TXT STRING Y02668
AOGK2    DS    0H                                                Y02668
         LA    R6,STREPFXL(R6)     INCRE PTR BY EXEC/PROC PFX LTHY02668
         B     AOGK4               GO TO STORE PTR               Y02668
AOGK3    DS    0H                                                Y02668
         LA    R6,STRDPFXL(R6)     INCRE PTR BY DD PREFIX LENGTH Y02668
AOGK4    DS    0H                                                Y02668
         ST    R6,TBEGPX           SAVE POINTER.                 Y02668
         MVC   TBASE(1),0(R6)      MOVE BASE KEY TO LWA.         Y02668
         B     GKF3               GO TO PROCESS KEY.
         SPACE
AOGK5    DS    0H                                                Y02668
         OI    AOSW1,AOENDKSW      SET END KEY SW TO INDICATE    Y02668*
                                   TEXT STRING PROCESSED TO END. Y02668
         XC    MSGKEY,MSGKEY       TELL VGM NO SECONDARY MSG    YM00393
         B     GKE4                GET READY TO EXIT             Y02668
GKG5     DS    0H                                                Y02668
         MVI   MSGSEC,GKER1        ERROR:'TOO MANY PARMS'        Y02668
         LA    R6,1(R6)            POINT BEYOND KEY IN ERROR     Y02668
GKE4     DS    0H                                                Y02668
         MVC   48(4,RD),TCLEANUP   MOVE CLEANUP ADDR TO R14 SLOT Y02668
         B     GKK2               GO TO EXIT.
         EJECT
***********************************************************************
**                                                                   **
**             GET POSITIONAL PROCESSING.                            **
**                                                                   **
***********************************************************************
         SPACE
GKB2     DS    0H
         LM    R2,R5,TNUM
*        R2 = TNUM
*        R3 = TCT
*        R4 = TNUM1
*        R5 = TCT1
         SPACE
         LM    R8,R9,TLEN
*        R8 = TLEN
*        R9 = TLENPX
         SPACE
         CLR   R4,R5              SUBPARAMETERS TO PROCESS.
         BNE   GKB1               YES. GO TO INCREMENT TCT1.
         LA    R3,1(R3,0)         NO. PROCESSING PARAMETER. INCR. TCT.
         B     GKD1               GO TO INCREMENT TO NEXT LENGTH.
         SPACE
GKE2     DS    0H
         SR    R8,R8
         IC    R8,0(R9)           PUT CURRENT LENGTH INTO R8.
         LR    R7,R8              TLEN OR N' TO R7.
         SRL   R7,7
         LTR   R7,R7              IS THERE A HIGH ORDER ONE.
         BNE   GKE1               YES. SUBPARAMETER. GO TO SET UP
         SPACE
GKH2     DS    0H
         SPACE 2
*   S A V E  S T A T U S  A N D  R E T U R N  O N  R E G  1 4.
GKJ2     DS    0H
         STM   R8,R9,TLEN         STORE LENGTH AND LENGTH POINTER.
         STM   R2,R5,TNUM         STORE PARAM/SUBPARAM STATUS.
GKJ2A    DS    0H
         LM    R2,R4,TLEN         R2 = LENGTH.
*                                 R3 = LENGTH POINTER.
*                                 R4 = PDT POINTER.
GKK2     DS    0H
         LM    R5,R1,12(RD)       RESTORE REGISTERS.
         BR    RE                 RETURN.
         SPACE 2
GKB1     DS    0H
         LA    R5,1(R5,0)         INCREMENT TCT1.
GKD1     DS    0H
         AR    R9,R8              ADD OLD LENGTH.
         LA    R9,1(R9,0)         POINT AT NEXT LENGTH SLOT.
         B     GKE2
         SPACE
GKE1     DS    0H
         LR    R4,R8              PICK UP NBR SUBPARAMS.
         N     R4,GKPATRN2        TURN OFF HIGH ORDER BIT.
         LA    R5,1               SET TCT1 TO ONE.
         LA    R9,1(R9,0)         INCREMENT POINTER TO LENGTH.
         IC    R8,0(R9)           PUT CURRENT LENGTH IN R8.
         CLI   TSUBPARM,X'FF'     IF SUBPARAMETERS ARE ALLOWED IN  AABA
         BE    GKH2               THE FIRST 8 PARAMETERS, ALLOW    AABA
*                                 THEM ANYWHERE.                   AABA
         SPACE
         SPACE
         SR    R6,R6              *    THIS SEQUENCE CHECKS TO SEE
         IC    R6,TSUBPARM        *    IF A SUBPARAMETER IS OK IN
         LH    R7,GKPATRN1        *    THIS POSITION OF THE PARAM
         SRL   R7,0(R3)           *    FIELD. R3 IS THE NUMBER OF THE
         NR    R7,R6              *    CURRENT PARAM UNDER THIS KEY.
         BC    4,GKH2             SUBPARAMETER IS OK. CONTINUE.
         MVI   MSGSEC,GKER2       ERROR. SET ERROR CODE. SUBPARM ERROR.
         B     GKE4               GO TO GET CLEANUP ADDRESS.
         EJECT
***********************************************************************
*                                                                     *
*               DEFAULT TABLE PROCESSING ROUTINE                      *
*                                                                     *
***********************************************************************
         SPACE
*        R6= PTR TO KEY                                          Y02668
GKL1     DS    0H                                                Y02668
         LA    R3,GKDFLT           GET DEFAULT TABLE ADDRESS     Y02668
         LA    R4,GKTLTH           GET LENGTH OF TABLE           Y02668
GKL2     DS    0H                                                Y02668
         CLC   0(1,R3),0(R6)      COMPARE KEYS                   Y02668
         BE    GKL3                YES, GO SET BIT IN IWA        Y02668
         LA    R3,1(R3)            NO, INDEX INTO TABLE          Y02668
         BCT   R4,GKL2             LOOP BACK UNTIL END OF TABLE  Y02668
*  KEYWORD IS NOT IN DEFAULT TABLE.                             YM00368
         NI    AOSW2,255-AODFLTKW  CLEAR SW, IF ON FROM THE     YM00368*
                                   PREVIOUS KEYWORD.            YM00368
         BR    RE                  RETURN TO CALLER              Y02668
GKL3     DS    0H                                                Y02668
         OI    AOSW2,AODFLTKW      SET BIT INDICATING DEFAULT    Y02668
         BR    RE                  RETURN TO CALLER              Y02668
         EJECT
*  TABLE OF KEYWORDS FOR WHICH DEFAULTS ARE SUPPLIED.            Y02668
GKDFLT   DS    0H                                                Y02668
         DC    AL1(HOLDK)          HOLD                          Y02668
         DC    AL1(FREEK)          FREE                          Y02668
         DC    AL1(COPIESK)        COPIES                        Y02668
         DC    AL1(DYNMPEK)        DYNAMNBR.                     Y02668
         DC    AL1(DYNMEEK)        DYNAMNBR=                     Y02668
         DC    AL1(PRFMPEK)        PERFORM.  - EXEC STMT         Y02668
         DC    AL1(PRFMEEK)        PERFORM=  - EXEC STMT         Y02668
         DC    AL1(PRFMJK)         PERFORM   - JOB STMT          Y02668
GKTLTH   EQU   *-GKDFLT            TABLE LENGTH                  Y02668
***********************************************************************
*                                                                     *
*              CONSTANTS                                              *
*                                                                     *
***********************************************************************
GK06     DC    H'6'
GKPATRN1 DS    0H                 CHECK HIGH ORDER ONE PATTERN.
         DC    XL2'0100'
GKPATRN2 DS    0F                 TURN OFF HIGH ORDER ONE PATTERN.
         DC    XL4'0000007F'
PATCH    DC    25F'0'              **********PATCH SPACE*********Y02668
         END
