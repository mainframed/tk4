***********************************************************************
*                                                                     *
*  MODULE NAME= IEFVJA                                                *
*                                                                     *
*  DESCRIPTIVE NAME= JOB STATEMENT PROCESSOR                          *
*                                                                     *
*  COPYRIGHT= N/A                                                     *
*                                                                     *
*  STATUS= OS/VS2 REL. 037 PTF                                @ZA26751*
*                                                                     *
*  FUNCTION= THIS IS THE MAIN PROCESSING MODULE FOR A JOB STATEMENT.  *
*            IT 1. CREATES AND INITIALIZES CONTROL BLOCKS AND         *
*                  TABLES.                                            *
*               2. CHECKS VALIDITY OF JOB CARD KEYWORDS, AND IN       *
*                  SOME CASES THEIR VALUES.                           *
*               3. SETS JOB-FAIL BIT FOR INVALID KEYWORDS.            *
*                                                                     *
*  OPERATION= IT INITIALIZES A JCT FOR A JOB BY SETTING MSGCLASS=A,   *
*             MSGLEVEL=0, INTERNAL JOB SERIAL NUMBER=1, JCT ID=0,     *
*             TYPRUN= SETUP AND SETS THE DEFAULT PRIORITY WHICH HAD   *
*             BEEN SPECIFIED IN THE READER PARMS. IEFVJA ALSO         *
*             SETS UP A JOB ACCOUNT CONTROL TABLE EVEN IF ACCOUNTING  *
*             INFORMATION HAS NOT BEEN SPECIFIED. IT INITIALIZES THE  *
*             NUMBER OF SIOTS SLOT (DDINO) IN THE IWA AND SETS THE    *
*             FIRST TIME.                                             *
*             THE PARAMETER DESCRIPTOR TABLE (PDT), USED TO CHECK THE *
*             FORMAT OF THE KEYWORD IS USED BY THE EXTERNAL ROUTINE   *
*             IEFVGT TO PROCESS THE KEYWORD VALUE; THE KEYWORD BRANCH *
*             TABLE (KBT) IS USED BY IEFVGK TO GET THE NEXT KEY.      *
*             THE INTERNAL TEXT IS THEN PROCESSED BY THE APPROPIATE   *
*             KEYWORD ROUTINE. IF THE ROUTINE FINDS THE KEYWORD IN-   *
*             VALID, THE PROCESSING ROUTINE GOES TO THE CLEAN-UP      *
*             ROUTINE WHICH SETS THE JOB-FAIL BIT IN THE JCT, AND     *
*             PLACES THE APPROPIATE ERROR MESSAGE IN MSGSEC.          *
*                                                                     *
*  NOTES                                                              *
*      CHARACTER CODE DEPENDENCIES= EBCDIC                            *
*      DEPENDENCIES= NONE                                             *
*      RESTRICTIONS= NONE                                             *
*      REGISTER CONVENTIONS= IWASL (NAME OF AREA IN IWA WHERE         *
*                            REGISTER CONVENTIONS ARE ESTABLISHED)    *
*      PATCH LABEL= PATCH                                             *
*                                                                     *
*  MODULE TYPE= PROCEDURE                                             *
*      PROCESSOR= ASSEMBLER                                           *
*      MODULE SIZE= N/A                                               *
*      ATTIRBUTES= READ ONLY / REENTRANT / PAGED LPA                  *
*                                                                     *
*  ENTRY POINT= IEFVJA                                                *
*      PURPOSE= MAIN ENTRY POINT                                      *
*      LINKAGE= BR                                                    *
*      INPUT DATA= INTERNAL TEXT, IWA, NEL                            *
*      REGISTERS SAVED= NONE                                          *
*      REGISTER CONTENTS DURING PROCESSING=                           *
*              R5 = ERROR MESSAGE CODE REGISTER.                      *
*              R8 = JCT ADDRESSING.                                   *
*              R9 = ADDRESS OF TEST AND STORE.                        *
*              RA = LOCAL AND GET-T+S WORK AREA.                      *
*              RB = JOB ROUTINE BASE REGISTER.                        *
*              RC = INTERPRETER WORK AREA.                            *
*              RD = REGISTER SAVE AREA.                               *
*              RE = LINK RETURN REGISTER.                             *
*              RF = ADDRESS OF GET KEY/POS ROUTINE.                   *
*      REGISTERS RESTORED= NONE                                       *
*                                                                     *
*  EXIT - NORMAL= IEFVHE                                              *
*      CONDITIONS= WHEN PROCESSING OF JOB CARD IS COMPLETE            *
*      OUTPUT DATA= REGISTERS 12 AND 13 REMAIN UNCHANGED              *
*      RETURN CODES= NONE                                             *
*                                                                     *
*  EXIT - ERROR= IEFVHE                                               *
*      CONDITION= AFTER AN ERROR HAS BEEN FOUND ON THE JOB CARD       *
*      OUTPUT DATA= ERROR MESSAGE VIA IEFVGM                          *
*      RETURN CODES= NONE                                             *
*                                                                     *
*  EXTERNAL REFERENCES=                                               *
*      ROUTINES= IEFVGK,IEFVGT,IEFVGM,IEFVHQ                          *
*      DATA AREAS= IWA,LWA,NEL                                        *
*      CONTROL BLOCKS= JCT - C,U,M                                    *
*                      QMPA - U,M                                     *
*                      JACT - C,U,M                                   *
*                      JMR  - U                               @ZA02952*
*          KEY: C=CREATE, U= USED, M=MODIFY                           *
*      TABLES= IEFVKEYS (TABLE OF VALID KEYS)                         *
*      MACROS= IEFVMIWA, IEFVMJWA, IEFAJCTB, IEFQMNGR                 *
*                                                                     *
*  MESSAGES= IEF639I - INVALID CLASS DESIGNATION                      *
*            IEF642I - EXCESSIVE PARAMETER LENGTH                     *
*            IEF646I - POSITIONAL PARAMETER MISSING                   *
*            IEF675I - PERFORM VALUE INVALID OR OMITTED - SYSTEM      *
*                      DEFAULT SUBSTITUTED                            *
*            IEF676I - PERFORM VALUE UNDEFINED TO SYSTEM - DEFAULT    *
*                      SUBSTITUTED                                    *
*                                                                     *
*   CHANGE LEVEL = OZ02952,OZ04561,OZ25756,OZ26751            @ZA26751*
*                = Z40RPTH, Z40RPSM, OZ27750                  @ZA27750*
*                                                                     *
***********************************************************************
*                                                                     *
         EJECT
         MACRO
         KKK   &A,&B,&C,&D
         DC    XL1'&A'            NBR PARAMS THIS KEY.
         DC    BL1'&B'       1 MEANS SUBPARAM OK THIS POS.
         DC    Y(&C)            OFFSET TO KEY PROCESSOR.
         DC    Y(&D)            OFFSET TO PDT.
         MEND
         MACRO
         SSS   &A,&B
         DC    XL1'&A'            NBR CNTRL BYTES/NBR BYTES COMPARE.
         DC    C'&B'              COMPARE PATTERN.
         MEND
         MACRO
         MMM   &A,&B,&C
         DC    FL1'&A'            MAX PARAMETER LENGTH.
         DC    XL1'&B'            FUNCT/TABLE.
         DC    AL1(&C)            OFFSET IN TABLE.
         MEND
         MACRO
         DDD   &A,&B,&C,&D
         DC    XL1'&A'            FUNCT/TABLE.
         DC    AL1(&B)            OFFSET IN TABLE.
         DC    FL&C'&D'           MAX NBR (CVB).
         MEND
         MACRO
         CCC   &A,&B
         DC    FL1'&A'            LENGTH OF THIS POSITIONAL PDT.
         DC    XL1'&B'            NBR CNTRL BYTES/NBR BYTES COMPARE.
         MEND
         MACRO
         BBB   &A,&B,&C
         DC    XL1'&A'            FUNCT/TABLE.
         DC    AL1(&B)          OFFSET IN TABLE.
         DC    XL1'&C'            BIT PATTERN.
         MEND
         MACRO
         BBC   &A,&B,&C
         DC    XL1'&A'            FUNCT/TABLE.
         DC    AL1(&B)            OFFSET IN TABLE.
         DC    AL1(&C)            BIT PATTERN.
         MEND
         TITLE 'IEFVJA - NEL'
JANEL    DSECT
         IEFNEL SUBCOM=I                                         Y02668
         TITLE 'IEFVJA - KEYS'
         IEFVKEYS
         TITLE 'IEFVJA - JMR'
         IEFJMR                                                @ZA02952
         EJECT
         TITLE 'IEFVJA - IEFQMNGR'
         IEFQMNGR
         TITLE 'IEFVJA - JCT'
JAJCT    DSECT
JAACT    EQU   JAJCT
         IEFAJCTB
         TITLE 'IEFVJA - JCTX'                                 @Z40RPSM
JAJCTX   DSECT
         IEFJCTX                                               @Z40RPSM
         TITLE 'IEFVJA - IWA'
         IEFCOMWA
         EJECT
         IEFVMIWA
         IEFTXTFT
         EJECT
         TITLE 'IEFVJA - JWA'
         IEFVMJWA
JAWORK   EQU   JWA
         TITLE 'IEFVJA - JOB ROUTINE'
IEFVJA   CSECT
* A PDT - SCAN KEYWORD                                         @ZA04561
* A 031565-031595,016760,008513  D 022198,031500               @ZA02952
* A 030350  C 030300                                           @ZA02952
* CHANGE PDT, BRANCH TABLE, AND CODE FOR PRTY                  @ZA26751
* CHANGE PDT, BRANCH TABLE, AND CODE FOR TYPRUN                @ZA26751
* RECOMPILE TO CORRECT MICROFICHE                              @ZA25756
***********************************************************************
*                                                                     *
*        INPUT TO THIS ROUTINE:                                       *
*                                                                     *
*              RC = ADDRESS OF INTERPRETER WORK AREA.                 *
*              RD = CURRENT REGISTER SAVE AREA.                       *
*                                                                     *
***********************************************************************
         SPACE
JAERMAX  EQU   X'26'              ERROR NBR USED TO INDEX TO ERROR RTN.
JAFORMAT EQU   32                 ERROR MSG NBR FO FORMAT ERROR.   287
JANOREAL EQU   X'49'              IEF673I ADDRSPC=REAL INVALID   Y01029
JABADCLS EQU   39                 IEF639I INVALID CLASS DESIGNATION.
JAMISSIN EQU   46                 IEF646I ERROR MSG - POS PARAM MISSING
JAADDRSP EQU   X'80'              ADDRSPC FLAG
JAREGOFF EQU   92                 OFFSET TO REGION STORE SLOT IN JCT.
JALENGTH EQU   42            IEF642I - EXCESSIVE PARAMETER LENGTH  AACA
JAALPHA  EQU   47      IEF647I-NON-ALPHABETIC FIRST CHARACTER  @Z40RPTH
WRNMSG03 EQU   X'04'              INVALID PERFORM VALUE          Y02655
WRNMSG05 EQU   X'13'              PERFORM VAL NOT SYS DEF'D     YM00368
JAZERO   EQU   0                   ZERO DISPLACEMENT              M1715
JA2      EQU   2                   DISPLACEMENT BYTE            YM00376
JA8      EQU   8                   LENGTH FOR MOVE               Y02655
JA16     EQU   16                  LENGTH F0R MOVE               Y02655
LENZERO  EQU   X'00'               PARAM LENGTH ZERO              M1715
         SPACE 2
         BALR  RB,0               REGISTER 11 IS THE BASE REGISTER
         USING *,RB                    OF THE JOB ROUTINE.
JABASE   EQU   *
*****************************************************************Y02668
* MODULE TRACE CODE - FOR TESTING.                               Y02668
         L     RF,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         BALR  RE,RF               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'VJA '             MOD ID USED BY TRACE.         Y02668
* TRACE RETURNS HERE.                                            Y02668
*****************************************************************Y02668
         B     JAA1               ********************
         MODID BR=NO                                             Y01889
         DC    C'REL37'             FUNCTION ID AND            @Z40RPTH
*        DC    C'02'       LEV # (TYPRUN = SCAN)               @ZA04561
*        DC    C'04'       LEV # (RACF)                        @Z40RPSM
*        DC    C'05'  LEV # (MERGE SU4,10,16 CODE TO 037 PTF)  @ZA27750
         DC    C'06'       LEV # (REMOVE TYRUN & PRTY CODE)    @ZA26751
      EJECT
***********************************************************************
**                                                                   **
**             HEADER PORTION OF JOB ROUTINE.                        **
**                                                                   **
***********************************************************************
*
*        REGISTER USAGE:
*
*              R5 = ERROR MESSAGE CODE REGISTER.
*              R8 = JCT ADDRESSING.
*              R9 = ADDRESS OF TEST AND STORE.
*              RA = LOCAL AND GET-T+S WORK AREA.
*              RB = JOB ROUTINE BASE REGISTER.
*              RC = INTERPRETER WORK AREA.
*              RD = REGISTER SAVE AREA.
*              RE = LINK RETURN REGISTER.
*              RF = ADDRESS OF GET KEY/POS ROUTINE.
*
         SPACE
JAA1     DS    0H
         L     RA,CTRLWAP         LOCAL WORK AREA
         USING JAWORK,RA               ADDRESSING.
         L     R9,JATESTOR        T AND S ADDRESS.
         XC    JAWORK(JATEMP2+2-JAWORK),JAWORK   ZERO WORK AREA.
         L     RF,JAGETKEP        GET KEY/POS ADDRESS.
         LA    R8,JCT             JCT
         USING JAJCT,R8                ADDRESSING.
*
*   INITIALIZE JCT - JOBNAME SLOT TO BLANKS, DEFAULT MSGLEVEL,     I68
*        DEFAULT PRTY, INTERNAL JOB SER = 1,TYPRUN=SETUP, & JCT ID=0.
*        STEP NUMBER=1, CHECKPOINT ID TO BLANKS                @ZA02952
*        JOBCLASS IS SET TO DEFAULT VALUE USED BY JES.         @ZA02952
*        USER ID TO BLANKS                                     @Z40RPTH
*        GROUP ID TO BLANKS                                    @Z40RPSM
*
         MVI   JCTJNAME,C' '
         MVC   JCTJNAME+1(7),JCTJNAME  BLANK JOBNAME SLOT.
         MVI   JCTJSRNO,X'01'      SET INTERNAL JOB SER NBR TO 1
         MVI   JCTSNUMB,X'01'     SET STEP NUMBER=1                AACA
         MVI   JCTCKIDT,C' '           * MOVE BLANKS INTO          AACA
         MVC   JCTCKIDT+1(15),JCTCKIDT * CHECKPOINT ID SLOT        AACA
         MVI   JCTUSER,C' '            * MOVE BLANKS INTO      @Z40RPTH
         MVC   JCTUSER+1(6),JCTUSER    * USER ID SLOT          @Z40RPTH
         LA    R3,JCTX                   ADDRESS JCTX          @Z40RPSM
         USING JAJCTX,R3                JCTX ADDRESSABILITY    @Z40RPSM
         MVI   JCTXGROP,C' '            * MOVE BLANKS INTO     @Z40RPSM
         MVC   JCTXGROP+1(7),JCTXGROP  * JCTX .                @Z40RPSM
         MVI   JCTXIDNT,JCTXID      SWA ID INTO JCTXIDNT       @Z40RPSM
         DROP  R3                                              @Z40RPSM
         L     R3,WANELPTR         ADDRESS OF NEL              @ZA02952
         USING JANEL,R3            NEL ADDRESSABILITY          @ZA02952
         L     R4,NELJMR           JMR ADDRESS                 @ZA02952
         USING JMR,R4              JMR ADDRESSABILITY          @ZA02952
         MVC   JCTJCSMF,JMRCLASS   SET JOBCLASS DEFAULT IN JCT @ZA02952
         DROP  R4                  RELEASE REGISTER 4          @ZA02952
         DROP  R3                  RELEASE REGISTER 3          @ZA02952
*
*   NOTE - IEFVHA ORIGINALLY ZEROES JCT, IEFVHH ZEROES JCT AFTER
*        EACH JOB STATEMENT.  THEREFORE, JCT ID IS ALREADY = 0,
*        AND TYPRUN = SETUP                                        I68
         SPACE
*
*   CLEAR ACT
*
         LA    R4,JACT            ACT ADDRESS.
         XC    0(176,R4),0(R4)    ZERO 176 BYTE ACT.
         MVI   ACTPRGNM-ACTDSKAD(R4),C' '   BLANK PGMNM SLOT.
         MVC   ACTPRGNM-ACTDSKAD+1(19,R4),ACTPRGNM-ACTDSKAD(R4)
*                                                                  AACA
* BLANK RESTART STEPNAME SLOT IN IWA, CLEAR CHKPT/RESTART SWITCHES AACA
*                                                                  AACA
         TM    SWH,CPSTPFL        IS C/R STEP FLUSH ON             AACA
         BZ    JAAA1               IF NO, DON'T BLANK FIELD     YM01573
*                                  FOR VEA                      YM01573
         MVC   IWAJOBS1(16),ACTPRGNM-ACTDSKAD(R4) USE BLANKS IN ACTAACA
*                                 TO BLANK OUT SLOT IN IWA
JAAA1    DS    0H
         MVI   IWAINTS8,X'00'     CLEAR SWITCHES.                  AACA
*
*   ERROR MESSAGES SETUP.
*
         OI    JASW1,JANOJBNM+JANOPGNM+JANOACTN+JAACTPUT  SET ERROR SWS
         LA    R5,JAERMAX         SET ERROR MESSAGE REGISTER FOR
*                                      INDEXING ON ERROR RETURNS.
*
*   INITIALIZE DICTIONARY SWITCH FOR ENTRIES TO DICT 1 (SREFB).
*   CLEAR DDINO IN IWA (NECESSARY FOR JOBLIB WHEN NOT 1ST JOB).
*   CLEAR REGION AND ROLL SWITCHES IN IWA - CLEAR ROLL FIELD.      AACA
*   CLEAR REGION SPACE IN IWA.                                     AACA
*   SET NORESTART FLAG IN JCT - TO BE CLEARED IF RESTART SPECIFIED.AACA
*
         NI    SWD,FF-DCTFST-JOBREGNS-JOBADDRF  CLEAR SWITCHES IN SWD.
         MVI   IWAJBADR,LENZERO     CLEAR ADDRSPC FLAG          Y01029
         NI    JCTSTAT2,FF-JCTADSPC     CLEAR ADDRSPC FLAG      Y01029
         OI    SWD,DBFST          TURN ON FIRST ENTRY DSENQ SW     750
         XC    DDINTNO(2),DDINTNO CLEAR NBR DD STMTS SLOT IN IWA Y02668
         XC    IWAJOBS6(4),IWAJOBS6     CLEAR REGION SPACE.        AACA
*****************************************************************Y01113
*     CLEAR JOBCAT FIELDS AND SWITCH IN IWA                      Y01113
*****************************************************************Y01113
         XC    IWAJSIOT(4),IWAJSIOT    CLEAR TTR FIELD           Y01113
         NI    DDSWX1,FF-IWAJCAT-IWASCAT-IWASCAT2 CLR SWITCHES   Y01113
         XC    IWACATCT(1),IWACATCT  CLEAR P.C. COUNT FIELD      Y01113
         XC    JBCONCAT(1),JBCONCAT  CLEAR JOBLIB COUNT FIELD    Y01113
         SPACE
*
*   INITIALIZE CORE FOR GET KEY/POS AND TEST & STORE.
*
         LA    R7,JACLEANP        CLEANUP ADDRESS.
         ST    R7,TCLEANUP
         LA    R7,JABRANCH        BRANCHING TABLE ADDRESS.
         ST    R7,TBRANCH
*
*   GET FIRST KEY.
*
         BALR  RE,RF              GO TO GET FIRST KEY.
         EJECT
***********************************************************************
*                                                                     *
*              JOB KEY PROCESSING.                                    *
*                                                                     *
***********************************************************************
JAJOB    DS    0H
*
*   JOBNAME.
*
         BALR  RE,R9              GO TO TEST AND STORE JOBNAME.
*
*   ACCOUNT NUMBER.
*
         BALR  RE,RF              GET NEXT POSITIONAL - ACCOUNT NBR.
         SPACE
         LA    R7,JACT+ACTJNFLD-ACTDSKAD+1  ADDR OF ACCNT FIELD TO R7.
         LA    R0,1               CNTR1 = NBR OF ACCNT FIELDS.
         L     R6,TNUM1           CNTR2 = TOTAL LENGTH ACCNT FIELD.
         LTR   R2,R2              NULL PARAMETER.
         BZ    JAC3               YES. GO CHECK FOR ACCNTING INFO.
         SPACE
         NI    JASW1,X'FF'-JANOACTN-JAACTPUT     TURN OFF NO ACT SW &
*                                           NO ACT PUT SWITCH.
         EX    R2,JAJOBMV1        MOVE LENGTH AND ACNT NBR TO ACT.
         AR    R6,R2                   OF ACNT FIELDS + LENGTH.
JAC3     DS    0H
         LA    R7,1(R7,R2)        POINT TO NEXT ACT STORE POSITION.
         CLC   TNUM1,TCT1         ACCOUNTING INFO TO STORE.
         BE    JAE2               NO GO TO GET NEXT POSITIONAL.
         SPACE
         BALR  RE,RF              GET POSITIONAL - ACCOUNTING INFO.
         SPACE
         A     R0,JA1             INCREMENT CNTR1 BY ONE.
         LTR   R2,R2              IS THIS A NULL PARAMETER.
         BZ    JAC3               NO.  GO GET NEXT POSITIONAL.
         SPACE
         AR    R6,R2              ADD LENGTH TO CNTR 2.
         NI    JASW1,X'FF'-JAACTPUT    TURN OFF NO ACT TO PUT SW.
         CL    R6,JA144           DOES TOTAL ACCNTING FIELD EXCEDE 144.
         BH    JAER6              YES. -ERROR- ACCNT FIELD EXCEDES 144.
         SPACE
         EX    R2,JAJOBMV1        NO. MOVE ACTNG INFO TO ACT.
         SPACE
         B     JAC3               GO TO CHECK FOR MORE ACTNG INFO.
         SPACE
JAE2     DS    0H
         STC   R0,JACT+ACTJNFLD-ACTDSKAD   STORE NBR ACCNT FIELDS.
         SPACE
*
*   PROGRAMMER NAME.
*
         BALR  RE,RF              GET NEXT POSITIONAL - PROG NAME.
         SPACE
         BALR  RE,R9              TEST AND STORE PROGRAMMER NAME.
         SPACE
         BALR  RE,RF              GO GET NEXT KEY.
         SPACE
JAJOBMV1 MVC   0(1,R7),0(R3)      MOVE ACNTNG FIELDS TO ACT (EXECUTED).
         EJECT
***********************************************************************
*                                                                     *
*     GROUP/USER/MSGLEVEL/MSGCLASS/RD   KEY PROCESSING.        @Z40RPSM
*                                                                     *
***********************************************************************
JARD     DS    0H                                                 M1715
         CLI   JAZERO(R3),LENZERO      PARAMETER LENGTH ZERO?     M1715
         BE    JAER1                   YES-ERROR CONDITION.       M1715
         BALR  RE,R9               TEST AND STORE.               Y02668
         MVC   IWAINTS8(1),JCTRSW2 MOVE CKPT SWS TO WA FOR VEA.  Y02668
         NI    IWAINTS8,JCTNORST+JCTNOCKP+JCTRESTT    CLEAR      Y02668*
                                   REDUNDANT BITS.               Y02668
         BALR  RE,RF               GET NEXT KEY.                 Y02668
JAUSER   DS    0H                                              @Z40RPTH
JAGROUP  DS    0H                                              @Z40RPSM
JAMSCL   DS    0H
         BALR  RE,R9              TEST AND STORE.
         BALR  RE,RF              GO TO GET NEXT KEY               I68
JAMSLV   DS    0H   PARM OR SYSGEN DEFAULT VALUES ARE ALREADY SET  I68
         LTR   R2,R2          IS LENGTH OF JCL LEVEL ZERO          I68
         BZ    JAMSLGET       YES - GO GET ALLOCATION LEVEL        I68
         NI    JCTJMGLV,X'8F' NO - CLEAR DEFAULT JCL LEVEL         I68
JAMSLGET BALR  RE,R9                   TEST AND STORE             M3309
         BALR  RE,RF                   GET NEXT KEY               M3309
         LTR   R2,R2          IS LENGTH OF ALLOCATION LEVEL ZERO   I68
         BZ    JAMSLOUT       YES - BRANCH NO MORE MSGLEVEL PROCESSING
         NI    JCTJMGLV,X'7F' NO - CLEAR DEFAULT ALLOCATION LEVEL  I68
         BALR  RE,R9          GO TO TEST AND STORE                 I68
JAMSLOUT BALR  RE,RF          GO TO GET NEXT KEY                   I68
         EJECT
***********************************************************************
*                                                                     *
*     TYPRUN KEYWORD PROCESSING                               @ZA26751*
*                                                                     *
*  THE INTERPRETER DOES NOT PROCESS THIS KEYWORD BUT RATHER   @ZA26751*
*  ALLOWS ALL THE PROCESSING TO BE DONE BY THE JOB ENTRY      @ZA26751*
*  SUBSYSTEM (JES).                                           @ZA26751*
*                                                                     *
***********************************************************************
         SPACE 2
JATYP    DS    0H                 TYPRUN KEYWORD PROCESSING    @ZA26751
         BALR  RE,RF              GO TO GET NEXT KEY           @ZA26751
         B     JATYP              LOOP UNTIL NEW KEYWORD FOUND @ZA26751
         SPACE 2
***********************************************************************
*                                                                     *
*     PRTY KEY PROCESSING                                     @ZA26751*
*                                                                     *
*  THE INTERPRETER DOES NOT PROCESS THIS KEYWORD BUT RATHER   @ZA26751*
*  ALLOWS ALL THE PROCESSING TO BE DONE BY THE JOB ENTRY      @ZA26751*
*  SUBSYSTEM (JES).                                           @ZA26751*
*                                                                     *
***********************************************************************
         SPACE 2
JAPRTY   DS    0H                 PRTY KEYWORD PROCESSING      @ZA26751
         BALR  RE,RF              GO TO GET NEXT KEY           @ZA26751
         B     JAPRTY             LOOP UNTIL NEW KEYWORD FOUND @ZA26751
         SPACE 2
         EJECT
*******************************************************************AACA
*                                                                  AACA
*              RESTART KEY PROCESSING.                             AACA
*                                                                  AACA
*******************************************************************AACA
JAREST   DS    0H                                                  AACA
*                                                                  AACA
*        IF RESTART=STEPNAME OR STEPNAME.PROCSTEPNAME, IEFVGT      AACA
*        CHECKS 1ST CHARACTER ALPHA AND TEMPORARILY MOVES UP TO 17 AACA
*        BYTES TO SRCHL1.  (THIS IS A REFERBACK WORK AREA WHICH IS AACA
*        NOT USED DURING JOB STATEMENT PROCESSING.)  ALSO          AACA
*        SETS BITS JATCKPTR AND JATSTEPR IN JCT. IF THERE IS A CHECKID,
*        JATSTEPR IS TURNED OFF AND UP TO 16 BYTES ARE MOVED TO    AACA
*        JATCKIDT OF JCT.  JATCKIDL IS SET BY STC OF R2.           AACA
         OI    SWH,CPFLGXX        INDICATE RESTART                 AACA
         LTR   R2,R2              1ST PARAMETER IS REQUIRED.       AACA
         BZ    JAER1              NOT THERE - ERROR.               AACA
         CLI   1(R3),C'*'         IS IT RESTART = *.               AACA
         BNE   JAREST1            NO. GO CHECK STEPNAME            AACA
         C     R2,JA1             ONE CHARACTER ONLY.              AACA
         BNE   JAER1              NO - ERROR.                      AACA
         ST    R4,TPDTP           * SET UP PDT POINTERS FOR GT SO  AACA
         LA    R6,JAST5           * THAT IT WILL LOOK AT 2ND ENTRY AACA
         ST    R6,TCPDTP          * IN RESTART PDT BYPASSING 1ST.  AACA
         MVI   IWAJOBS3,C'*'      INDICATE CHECKPOINT IS 1ST STEP. AACA
         B     JAREST5            GO TO PROCESS CHECKID.           AACA
         SPACE
JAREST1  DS    0H                                                  AACA
         BALR  RE,R9         ERROE CHECK STEPNAME & MVC TO SRCHL1  AACA
         SPACE
         LA    R4,8          SET UP FOR SCAN OF STEPNAME.PROCSTEP  AACA
         LR    R6,R2              TOTAL LENGTH.                    AACA
         LR    R7,R3              POINTER TO PARAMETER.            AACA
JAREST2  DS    0H                                                  AACA
         CLI   1(R3),C'.'         SCAN FOR PERIOD.                 AACA
         BE    JAREST3       STEPNAME.PROCSTEP - GO SAVE STEPNAME  AACA
         LA    R3,1(R3,0)         NO HIT - POINT AT NEXT BYTE.     AACA
         BCT   R6,JAREST2         DECREMENT COUNT AND TRY AGAIN.   AACA
         LR    R6,R2              STEPNAME.   - RESTORE R6.        AACA
         B     JAREST4            GO TO SAVE STEPNAME.             AACA
JAREST3  DS    0H                                                  AACA
         SR    R2,R6         DETERMINE LENGTH OF CALLING STEPNAME  AACA
         CLR   R2,R4                                               AACA
         BH    JAER1                                               AACA
         BCTR  R2,0                                                AACA
         EX    R2,JARESTM1        MOVE CALLING STEPNAME TO IWAJOBS1AACA
         LA    R7,1(R3)           POINT R7 AT PROCSTEP-1.          AACA
         BCTR  R6,0               DECREMENT BECAUSE OF PERIOD.     AACA
JAREST4  DS    0H                                                  AACA
         CLR   R6,R4              DOES STEPNAME EXCEED 8 CHARACTERSAACA
         BH    JAER1              YES - ERROR                      AACA
         BCTR  R6,0               DECREMENT FOR EX STMT.           AACA
         EX    R6,JARESTM2   MOVE STEPNAME OR PROCSTEP TO IWAJOBS3 AACA
JAREST5  DS    0H                                                  AACA
         BALR  RE,RF              GET CHECKID.                     AACA
         BALR  RE,R9         CHECK 1ST CHAR ALPHA - MOVE TO JCT    AACA
         STC   R2,JCTCKIDL        IF NOT SAVE CHECKID LENGTH IN JCTAACA
*                                                                  AACA
         BALR  RE,RF              GET NEXT KEYWORD                 AACA
         SPACE 2
JARESTM1 MVC   IWAJOBS1(1),1(R7)       EXECUTED.                   AACA
JARESTM2 MVC   IWAJOBS3(1),1(R7)       EXECUTED.                   AACA
         EJECT
***********************************************************************
*                            TIME KEY PROCESSING                      *
***********************************************************************
JATIME   XC    JCTJMRSS+DEC1(DEC8),JCTJMRSS+DEC1 CLEAR THE WORK    SMF1
*                                           FIELDS                 SMF1
         BALR  RE,R9                   CONVETT MIN TO BINARY       SMF1
         CLC   TNUM(DEC4),TCT          ARE ALL SUB PARAMS DONE     SMF1
         BE    JATIME1                 YES                         SMF1
         BALR  RE,RF                   NO, GO GET 2ND ONE (SECS)   SMF1
         BALR  RE,R9                   AND CONVERT TO BINARY       SMF1
JATIME1  L     R6,JCTJMRSS+DEC1        *                           SMF1
         MH    R6,JA6000               MIN TO 1/100 SECS           SMF1
         L     R7,JCTJMRSS+DEC5        *                           SMF1
         MH    R7,JA100                SECS TO 1/100 SECS          SMF1
         AR    R6,R7                   ADD TOGETHER                SMF1
         SLL   R6,DEC8                 SHIFT LEFT ONE BYTE         SMF1
         ST    R6,JCTJMRTL             AND STORE                   SMF1
         XC    JCTJMRSS+DEC1(DEC8),JCTJMRSS+DEC1  REINITIALIZE @YA02020
*              FIELD TO ZERO AFTER USE....                     @YA02020
         BALR  RE,RF                   AND GO AWAY FOR NEXT        SMF1
*                                           KEYWORD                SMF1
         EJECT
***********************************************************************
*                                                                     *
*              COND KEY PROCESSING                                    *
*                                                                     *
***********************************************************************
JACOND   DS    0H
         SPACE
         LA    R7,JCTJDPCD        DEPENDENCY CODE ADDR TO R7.
JBB2     DS    0H
         OI    JASW1,JACONDER     SET COND ERROR FLAG.
*
*   DEPENDENCY CODE
*
         BALR  RE,R9              TEST & STORE CODE. (TEMP1)
*
*   CHECK FOR THE COND AS A SUBPARAMETER. (PROPER NBR PARENTHESIS).
*
         BCTR  R3,0               POINT TO BYTE BEFORE TLENP. HOPEFULLY
*                                      IT IS THE SUBPARAMETER BYTE.
         SR    R2,R2
         IC    R2,0(R3)           PICK UP BYTE.
         SRL   R2,4               SHIFT TO GET HIGH ORDER BITS ONLY.
         X     R2,JAMSK1          CHECK FOR SUBPARM INDICATOR ONLY.
         BC    4,JAER1            IF OTHER BITS ON NOT SUBPARM -ERROR-
*
*   DEPENDENCY OPERATOR
*
         BALR  RE,RF              GET OPERATOR.
         SPACE
         LTR   R2,R2              IS THERE AN OPERATOR.
         BZ    JAER1              NO. ERROR.
         SPACE
         CLC   TNUM1(4),TCT1      ARE THERE MORE PARAMS IN COND FIELD.
         BNE   JAER1              YES. ERROR.
         SPACE
         XC    JATEMP2(2),JATEMP2      ZERO TEMP2 FOR OR OF OP CODE.
*
*   DEPENDENCY OPERATOR
*
         BALR  RE,R9              TEST & STORE OPERATOR. (TEMP 2)
         SPACE
         ST    RB,TPDTP           SPOIL PDTP SO THAT T&S WILL START AT
*                                      TOP AND CYCLE THRU TABLE AGAIN.
         MVC   0(4,R7),JATEMP1    MOVE CODE & OPERATOR TO JCT.
         LA    R7,4(R7,0)         INCREMENT TO NEXT STORE POSITION.
         NI    JASW1,X'FF'-JACONDER    TURN OFF COND ERROR FLAG.
         SPACE
         BALR  RE,RF              GO TO GET NEXT COND CODE OR NEXT KEY.
         SPACE
         B     JBB2               IF ANOTHER COND GO TO PROCESS.
         EJECT
***********************************************************************
*                                                                     *
*              REGION KEY PROCESSING.                                 *
*                                                                     *
***********************************************************************
JAREG    DS    0H
         LTR   R2,R2              IS PRIMARY REGION SPECIFIED      AACA
         BZ    JAREG01            NO-GO GET NEXT KEY               AACA
         BAL   RE,JAREG1          CHECK HIGH SPEED REGION SYNTAX.  AACA
         BALR  RE,R9              LINK TO TEST NUMERICS, CVB & MVC-JCT.
         OI    SWD,JOBREGNS        SET SW - REGION ON JOB STMT.  Y02668
         MVC   IWAJOBS6(2),JAREGOFF(R8) MOVE REGION TO IWA FOR SCT.AACA
         SPACE
JAREG01  DS    0H                                                  AACA
         ST    R4,TPDTP           * SET UP PDT POINTERS FOR GT SO  AACA
         LA    R6,JAREGB+1        * THAT IT WILL LOOK AT 2ND ENTRY AACA
         ST    R6,TCPDTP          * IN REGION PDT, BYPASSING 1ST.  AACA
         BALR  RE,RF                                               AACA
         SPACE
         BAL   RE,JAREG1          CHECK LCS.                       AACA
         BALR  RE,R9              CVB & MOVE TO JATEMP1.           AACA
         SR    R4,R4              ZERO R4                        Y01029
         IC    R4,JATEMP1         FIRST BYTE H1 IN R4            Y01029
         SLL   R4,8               MOVE FIRST BYTE H1             Y01029
         IC    R4,JATEMP1+1       INSERT SECOND BYTE OF H1       Y01029
         AH    R4,JAREGOFF(R8)    ADD H0 VALUE TO H1             Y01029
         C     R4,MAXVAL          MAX VALUE EXCEEDED ?           Y01029
         BH    JAER77             YES, ERROR MSG                 Y01029
         STH   R4,JAREGOFF(R8)    JCT REGION = H0 + H1           Y01029
         STH   R4,IWAJOBS6        IWA REGION = H0 + H1           Y01029
         BALR  RE,RF              GET NEXT KEY.                    AACA
         SPACE
JAREG1   DS    0H                                                  AACA
         LA    R6,0(R2,R3)        CHECK FOR REGION OF XXXXXK.      AACA
         CLI   0(R6),C'K'                                          AACA
         BNE   JAER1              NO 'K'.  GO TO ERROR.            AACA
         BCTR  R2,0               SET TO PROCESS NUMERICS ONLY.    AACA
         LTR   R2,R2         WAS 'K' ONLY SPECIFICATION?        YA02009
         BZ    JAER1         YES,FORMAT ERROR IN REGION FIELD.. YA02009
         BR    RE                 RETURN.                          AACA
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*              ROLL KEY PROCESSING.                                   *
*                                                                     *
***********************************************************************
JAROLL   DS    0H
         SPACE
         BALR  RE,RF              GET NEXT KEYWORD.
         B     JAROLL                                           Y01029
         EJECT
***********************************************************************
*                                                                     *
*              CLASS KEY PROCESSING.                                  *
*                                                                     *
***********************************************************************
JACLASS  DS    0H                                               YM00362
         LA    R7,JACLSTBL         ADDR OF TABLE OF CLASSES.    YM00362
         LA    R6,JACLSLTH         CLASS TABLE LENGTH.          YM00362
JACLASS1 DS    0H                                               YM00362
         CLC   0(1,R7),1(R3)       SPECIFIED CLASS IN TABLE?    YM00362
         BE    JACLASS2            BR YES TO ENTER CLASS IN JCT.YM00362
         LA    R7,1(R7)            POINT TO NEXT ENTRY IN TABLE.YM00362
         BCT   R6,JACLASS1         REDUCE ENTRY COUNT, AND BR   YM00362*
                                   TO CHECK NEXT ENTRY.         YM00362
* FALL THRU IF ALL ENTRIES CHECKED AND NO MATCH FOUND.          YM00362
* SPECIFIED CLASS IS INVALID.                                   YM00362
         MVI   MSGSEC,JABADCLS    SET MSG NBR FOR IEF639I
         B     JACLEANP           GO TO CLEANUP.
JACLASS2 DS    0H
         BALR  RE,R9              TEST FOR ONE BYTE ONLY.
         MVC   JCTJCSMF(1),1(R3)   MOVE JOBCLASS VALUE TO JCT.  YM00361
         BALR  RE,RF              GO TO GET NEXT KEYWORD.
         SPACE 2
*  TABLE OF VALID CLASS VALUES.                                 YM00362
JACLSTBL DS    0C                                               YM00362
         DC    C'ABCDEFGHI'                                     YM00362
         DC    C'JKLMNOPQR'                                     YM00362
         DC    C'STUVWXYZ'                                      YM00362
         DC    C'0123456789'                                    YM00362
JACLSEND DS    0C                                               YM00362
JACLSLTH EQU   JACLSEND-JACLSTBL                                YM00362
         EJECT
***********************************************************************
**                                                                   **
**                   ADDRSPC KEY PROCESSING                          **
**                                                                   **
**                                                                   **
***********************************************************************
*
JAADDR   DS    0H                                                Y01029
         LTR   R2,R2              ADDRSPC PARAMETER SPECIFIED?   Y01029
         BZ    TEST               NO, GET NEXT KEY(NULLIFY)      Y01029
         BALR  RE,R9              TEST AND STORE ROUTINE         Y01029
         OI    SWD,JOBADDRF        SET SW - ADDRSPC ON JOB STMT. Y02668
         TM    JCTSTAT2,JCTADSPC  ADDRSPC=REAL?                  Y01029
         BZ    TEST               NO,NO TSO CHECK               Y01029
         L     R3,WANELPTR         ADDRESS OF NEL.               Y02668
         USING JANEL,R3            NEL ADDRESSABILITY            Y01029
         TM    NELOPSW2,NELADSPC   IS THIS A TSO USER ?          Y01029
         BZ    JAADDR1             NO GO TO SET ADDRSPC BIT      Y01029
         DROP  R3
         MVI   MSGSEC,JANOREAL     YES, ADDRSPC=REAL INVALID     Y01029
         MVI   MSGKEY,JOBK         ON JOB STATEMENT              Y01029
         B     JAERRTN             EXIT TO ERROR RTN             Y01029
JAADDR1  DS    0H                                                Y01029
         OI    IWAJBADR,JCTADSPC                                 Y01029
TEST     DS    0H                                                Y01029
         BALR  RE,RF               GO GET NEXT KEY               Y01029
         EJECT
************************************************************     Y02655
**                                                        **     Y02655
**                 PERFORM KEY PROCESSING                 **     Y02655
**                                                        **     Y02655
************************************************************     Y02655
          SPACE
JAPRFM   DS    0H                                                Y02655
         OI    JCT+JCTSTAT2-INJMJCT,JCTPERFM SET JOB PRFM FLAG. YM00368
         LTR   R2,R2               PERFORM VALUE SPECIFIED?     YM00368
         BZ    JAPRFM1             NO, ISSUE WARNING MSG.       YM00368
         BALR  RE,R9               GO TO TEST AND STORE RTNE.   YM00368
         CLI   MSGSEC,JAZERO       VGT ENTERS MSG CODE IF ERROR.YM00368
         BE    JAPRFM2             BRANCH ON ERROR.             YM00368
         MVI   MSGSEC,JAZERO       ZERO MESSAGE FIELD.          YM00368
JAPRFM1  DS    0H                                               YM00368
         MVI   MSGKEY,JAZERO       CLEAR SECONDARY MSG FIELD.   YM00368
         LA    R2,WRNMSG03         LOAD WARNING MSG CODE.       YM00368
         L     R3,JAVGM            GET MESSAGE MODULE ADDRESS.  YM00368
         BALR  RE,R3               ISSUE MESSAGE.               YM00368
         BALR  RE,RF               GO GET NEXT KEY.             YM00368
*  IEFVGT WILL ACCEPT VALUES IN THE RANGE OF 0-255.             YM00368
JAPRFM2  DS    0H                                               YM00368
         CLI   JCT+JCTPRFMF-INJMJCT,JAZERO VALUE EQUAL ZERO?    YM00368
         BE    JAPRFM1             BRANCH YES, ZERO IS INVALID. YM00368
         SR    R1,R1               CLEAR REG 1.                 YM00368
         IC    R1,JCT+JCTPRFMF-INJMJCT GET SPECIFIED VALUE.     YM00368
         SYSEVENT VERIFYPG         VALIDATE VALUE.              YM00368
         L     RF,JAGETKEP         RESTORE GET KEY ADDRESS.     YM00368
*  SRM RETURNS ZERO IN BYTE 2 IF SPECIFIED VALUE IS DEFINED TO  YM00368
*  SYSTEM, OR A DEFAULT VALUE IF SPECIFIED VALUE IS UNDEFINED.  YM00368
         CLM   R1,JA2,JACON0       ZERO RETURN CODE ?           YM00376
         BZ    JAPRFM3             BRANCH YES, VALID VALUE.     YM00368
*  SPECIFIED VALUE IS INVALID.                                  YM00368
         STCM  R1,JA2,JCT+JCTPRFMF-INJMJCT ENTER DEFAULT IN JCT.YM00376
         MVI   MSGKEY,JAZERO       CLEAR SECONDARY MSG FIELD.   YM00368
         LA    R2,WRNMSG05         INSERT WARNING MSG FOR VGM.  YM00368
         L     R3,JAVGM            GET MESSAGE MODULE ADDRESS.  YM00368
         BALR  RE,R3               ISSUE MESSAGE.               YM00368
JAPRFM3  DS    0H                                               YM00368
         BALR  RE,RF               GO GET NEXT KEY.             YM00368
         EJECT                                                  YM00368
***************************************************************@Z40RPTH
**                                                           **@Z40RPTH
**           PASSWORD KEYWORD PROCESSING                     **@Z40RPSM
**                                                           **@Z40RPTH
* REGISTER 4 CONTAINS THE ADDRESS OF THE PDT FOR THE PASSWORD  @Z40RPSM
* KEYWORD.  THE PDT WILL NOT BE USED SINCE NO DATA WILL BE     @Z40RPTH
* MOVED TO A CONTROL BLOCK.  ALL PASSWORD KEYWORD PROCESSING IS@Z40RPSM
* HANDLED BY THIS ROUTINE.  THEREFORE, REGISTER 4 CAN BE       @Z40RPTH
* DESTROYED AND USED AS A WORK REGISTER.                       @Z40RPTH
***************************************************************@Z40RPTH
         SPACE 2
JAPASS   DS    0H                                              @Z40RPSM
         LA    R4,EIGHT       PUT VALUE 8 IN REG. 4            @Z40RPSM
         CR    R2,R4          PASSWORD LENGTH GREATER THAN 8?  @Z40RPSM
         BNH   PASSOK         NO,PASSWORD IS VALID             @Z40RPSM
         B     JAER8          YES,ISSUE ERROR MESSAGE IEF642I  @Z40RPTH
PASSOK   BALR  RE,RF          GET NEXT KEYWORD                 @Z40RPSM
         B JAPASS             FOR 2ND PASSWORD                 @Z40RPSM
         EJECT
***************************************************************@Z40RPTH
**                                                           **@Z40RPTH
**               NOTIFY KEYWORD PROCESSING                   **@Z40RPTH
**                                                           **@Z40RPTH
* REGISTER 4 CONTAINS THE ADDRESS OF THE PDT FOR THE NOTIFY    @Z40RPTH
* KEYWORD.  THE PDT WILL NOT BE USED SINCE NO DATA WILL BE     @Z40RPTH
* MOVED TO A CONTROL BLOCK. ALL NOTIFY KEYWORD PROCESSING IS   @Z40RPTH
* HANDLED BY THIS ROUTINE. THEREFORE, REGISTER 4 CAN BE        @Z40RPTH
* DESTROYED AND USED AS A WORK REGISTER.                       @Z40RPTH
***************************************************************@Z40RPTH
         SPACE 2
JANOTIFY DS    0H                                              @Z40RPTH
         LA    R4,SEVEN        PUT VALUE 7 IN REG. 4           @Z40RPTH
         CR    R2,R4           USER ID GREATER THAN 7 CHARS?   @Z40RPTH
         BNH   CHECKN          NO,CHECK FIRST CHARACTER        @Z40RPTH
         B     JAER8          YES,ISSUE ERROR MESSAGE IEF642I  @Z40RPTH
CHECKN   LA    R3,1(0,R3)     POINT TO FIRST CHARACTER         @Z40RPTH
         CLI   0(R3),E9       COMPARE FIRST CHAR. TO X'E9'=Z   @Z40RPTH
         BH    JAER9          NUMERIC FIRST CHAR. INVALID      @Z40RPTH
         BALR  RE,RF          GET NEXT KEYWORD                 @Z40RPTH
         EJECT
***********************************************************************
**                                                                   **
**             CLEANUP PORTION OF JOB ROUTINE.                       **
**                                                                   **
***********************************************************************
JACLEANP DS    0H
*                                                               YM00368
*   PERFORM CHECK.                                              YM00368
*                                                               YM00368
         CLI JCT+JCTPRFMF-INJMJCT,JAZERO PERF VALUE SPECIFIED?  YM00368
         BNE   JAE1               YES,CONTINUE NORMAL PROCESSINGYM00368
*  PERFORM VALUE NOT SPECIFIED ON JOB STMT. IEFVJA OBTAINS      YM00368
*  DEFAULT FOR EXEC PROCESSOR IN THE EVENT A PERFORM VALUE      YM00368
*  WAS NOT SPECIFIED ON AN EXEC STMT.                           YM00368
         SR    R1,R1              CLEAR REG FOR SYSEVENT        YM00368
         SYSEVENT VERIFYPG                                      YM00368
         STCM  R1,JA2,JCT+JCTPRFMF-INJMJCT SAVE DEFLT VALUE     YM00368
*
*   ERROR CHECK.
*
         CLI   MSGSEC,X'00'       IS ERROR FLAG EQUAL ZERO.
         BNE   JAERRTN            NO - ERROR.
*
*   JOBNAME CHECK.
*
JAE1     DS    0H
         TM    JASW1,JANOJBNM     IS THE NO JOBNAME SWITCH ON.
         BO    JAER4              YES. -ERROR- -NO JOBNAME-
*
*   CONDITION CHECK.
*
         MVI   MSGKEY,CONDJK      SET SECONDARY MESSAGE FOR COND.
         TM    JASW1,JACONDER     IS THE CONDITION ERROR SWITCH ON.
         BO    JAER1              YES. -ERROR- -OPERATOR MISSING-
*
*   CHECK FOR ACCOUNT NUMBER OR PROGRAMMER NAME NEEDED AND MISSIOG.
*
         LA    R3,WAJOBPFX         ADDR OF PSEUDO JOB PFX.       Y02668
         USING TEXT,R3             PREFIX ADDRESSABILITY.        Y02668
         TM    JASW1,JANOPGNM     IS THERE A PROGRAMMER NAME.
         BZ    JAE12              YES. GO TO CHECK ACCNT NBR.
         TM    STRJINDC,JTXPROGN   PROGR NAME REQUIRED?          Y02668
         BO    JAER2              YES. ERROR -PROGRAMMER NAME MISS-
         SPACE
JAE12    DS    0H
         TM    JASW1,JANOACTN     IS THERE AN ACCOUNT NUMBER.
         BZ    JABLPCHK            BYPASS ACCT # REQUIRED CHECK. Y02668
         TM    STRJINDC,JTXACCTN   ACCT NUMBER REQUIRED?         Y02668
         BO    JAER3              YES. -ERROR-  -ACT NBR MISSING-
*  CHECK IF BYPASS LABEL PROCESSING DEFAULT SPECIFIED.           Y02668
JABLPCHK DS    0H                                                Y02668
         TM    STRJLABD,JTXLABLP   IS DEFAULT BLP?               Y02668
         BZ    JAACTCK             NO, DEFLT IS NL, NO BIT SET.  Y02668
         OI    JCTSTAT2,JCTBLP     SET BLP FLAG IN JCT.          Y02668
         DROP  R3                                                Y02668
*
*   ACT TO PUT OUT.
*
JAACTCK DS     0H
         LA    R4,JACT            JOB ACT ADDRESS TO R4.
         MVC   0(3,R4),TNEXT      DISK ADDR THIS ACT TO ACT.
         MVI   3(R4),ACTID        ACT IDENT = 1.
         LA    R7,QPARM           Q-MANAGER PARAMETER AREA.
         USING IOPARAMS,R7             LIST ADDRESSING.
         L     R6,QMPCL           QMPCA ADDRESS TO R6.
         ST    R4,0(R6)           ACT ADDRESS TO QMPCA.
         MVC   4(4,R6),TNEXT      TTR TO QMPEX.
         L     RF,JAVHQ           IEFVHQ ADDRESS TO R15.
         SPACE
         BALR  RE,RF              LINK TO QMANAGER TO WRITE AND ASSIGN.
         SPACE
         MVC   JCTACTAD(4),TNEXT  MOVE ACT TTR TO JCT.
         MVC   TNEXT(4),0(R6)     REPLACE TTR IN IWA.
*   FALL THROUGH TO EXIT.
         SPACE
*
*   EXIT TO IEFVHF.
*
JAEXIT   DS    0H
         MVI   MSGKEY,DEC0         ZERO SECONDARY MESSAGE        Y02668
         SPACE
         L     RF,JAVHE            SET EXIT TO ROUTER.           Y02668
         SPACE
         BR    RF                 ***   EXIT   ***
         EJECT
***********************************************************************
**                                                                   **
**             ERROR ROUTINES.                                       **
**                                                                   **
***********************************************************************
         SPACE
JAER2    BCTR  R5,0               IEF633I - PROGRAMMER NAME MISSING.
JAER3    BCTR  R5,0               IEF634I - ACCOUNT NUMBER MISSING.
JAER4    BCTR  R5,0               IEF635I - JOBNAME MISSING.
JAER5    BCTR  R5,0               NOT USED BY IEFVJA.
JAER6    BCTR  R5,0               IEF637I - ACCT FIELD EXCEEDS MAXIMUM.
*                                      MSG NBR IS STORED INTO IWA.
JAER77   STC   R5,MSGSEC          IEF638I - MAX REGION EXCEEDED  Y01029
         MVI   MSGKEY,JOBK        SET MSGKEY TO JOB KEY.
         SPACE
*
*   FAIL JOB - ENTER MESSAGE INTO SMB.
*
JAERRTN  DS    0H
         OI    JCTJSTAT,INCMSTS   FAIL JOB.
         OI    JCTJMGLV,INCMMGL1  DEFAULT TO MESSAGE LEVEL = 1.
         SPACE
         CLI   JCTJNAME,C' '      TEST FOR JOBNAME IN JCT         22297
         BNE   JAERMSG             YES,GO PUT OUT MESSAGE         22297
         MVC   JCTJNAME(8),JAERDUM  NO,PUT DUMMY NAME IN JCT      22297
*                                       THEN GO PUT OUT MESSAGE   22297
JAERMSG  SR    R2,R2                                              22297
         IC    R2,MSGSEC          MSG NBR TO R2.
         L     RF,JAVGM           IEFVGM ADDRESS TO R15.
         SPACE
         BALR  RE,RF              LINK TO MESSAGE MODULE.
         SPACE
         B     JAACTCK            GO TO PUT OUT ACT & EXIT.
         SPACE 2
JAER1    DS    0H
         MVI   MSGSEC,JAFORMAT    SET MESSAGE FOR FORMAT ERROR.
         B     JAERRTN
         SPACE 3
JAER7    DS    0H                                                  AACA
         MVI   MSGSEC,JAMISSIN    IEF646I - REQ POS PARAM MISSING. AACA
         B     JAERRTN                                             AACA
         SPACE 3                                                   AACA
JAER8    DS    0H                                                  AACA
         MVI   MSGSEC,JALENGTH IEF642I-EXCESSIVE PARAMETER LENGTH  AACA
         B     JAERRTN                                             AACA
         SPACE 3
JAER9    DS    0H                                              @Z40RPTH
         MVI   MSGSEC,JAALPHA      IEF647I-NON ALPHABETIC      @Z40RPTH
*                                  FIRST CHARACTER             @Z40RPTH
         B     JAERRTN                                         @Z40RPTH
         EJECT
***********************************************************************
**                                                                   **
**             TABLES FOR JOB ROUTINE.                               **
**                                                                   **
***********************************************************************
*
*   BRANCHING TABLE FOR GET KEY/POS.
*
         SPACE
JABRANCH DS    0H
JAJOBA   EQU   *                  JOB KEY.
         KKK   03,01000000,JAJOB-JABASE,JAJOBB-JABASE
JAMSLVA  EQU   *                  MSGLEVEL KEY.
         KKK   02,00000000,JAMSLV-JABASE,JAMSLVB-JABASE            I68
JAMSCLA  EQU   *                  MSGCLASS KEY.
         KKK   01,00000000,JAMSCL-JABASE,JAMSCLB-JABASE
JATYPA   EQU   *                  TYPRUN KEY.
         KKK   FF,00000000,JATYP-JABASE,JATYPB-JABASE          @ZA26751
JAPRTYA  EQU   *                  PRTY KEY.
         KKK   FF,00000000,JAPRTY-JABASE,JAPRTYB-JABASE        @ZA26751
JACONDA  EQU   *                  COND KEY.
         KKK   08,11111111,JACOND-JABASE,JACONDB-JABASE
JAREGA   EQU   *                  REGION KEY.
         KKK   02,0,JAREG-JABASE,JAREGB-JABASE                     AACA
JACLASSA EQU   *                  CLASS KEY.                       AACA
         KKK   01,0,JACLASS-JABASE,JACLASSB-JABASE                 AACA
JAROLLA  EQU   *                  ROLL KEY.                        AACA
         KKK   02,0,JAROLL-JABASE,JAROLLB-JABASE                   AACA
JARDA    EQU   *                  RD KEY.                          AACA
         KKK   01,0,JARD-JABASE,JARDB-JABASE                       AACA
JARESTA  EQU   *                  RESTART KEY.                     AACA
         KKK   02,0,JAREST-JABASE,JARESTB-JABASE                   AACA
JATIMEA  EQU   *                       TIME KEY               M0444SMF1
         KKK   02,00000000,JATIME-JABASE,JATIMEB-JABASE       M0444SMF1
JANOTIFA EQU   *                  NOTIFY KEY                      20001
         KKK   01,0,JANOTIFY-JABASE,JANOTIFB-JABASE               20001
JAADDRA  EQU   *                   ADDRSPC KEY                  Y01029
         KKK   01,0,JAADDR-JABASE,JAADDRB-JABASE                Y01029
JAPRFMA  EQU   *                        PERFORM KEY              Y02655
         KKK   01,0,JAPRFM-JABASE,JAPRFMB-JABASE                 Y02655
JAUSERA  EQU   *                   USER KEY                    @Z40RPTH
         KKK   01,0,JAUSER-JABASE,JAUSERB-JABASE               @Z40RPTH
JAPASSA  EQU   *               PASSWORD KEY                    @Z40RPSM
         KKK   02,0,JAPASS-JABASE,JAPASSB-JABASE               @Z40RPSM
JAGROUPA EQU *                GROUP KEYWORD.                   @Z40RPSM
         KKK   01,0,JAGROUP-JABASE,JAGROUPB-JABASE             @Z40RPSM
         EJECT
*
*   PARAMETER DESCRIPTER TABLE FOR TEST AND STORE (PDT).
*
         SPACE
JAJOBB   EQU   *                  JOB PDT.
         DC    FL1'17'            LENGTH OF PDT FOR JOB.
*   JOBNAME
         CCC   8,50
         MMM   8,61,JCTJNAME-INJMJCT
         BBC   40,JASW1-JAWORK,FF-JANOJBNM
*   PROGRAMMER NAME.
         CCC   8,50
         MMM   20,53,ACTPRGNM-ACTDSKAD
         BBC   40,JASW1-JAWORK,FF-JANOPGNM-JAACTPUT
         SPACE
JATYPB   EQU   *                  TYPRUN PDT.                  @ZA26751
*              DUMMY PDT SINCE TYPRUN IS A SUBSYSTEM RATHER    @ZA26751
*              THAN A CONTROL PROGRAM KEYWORD                  @ZA26751
         SPACE
JAMSLVB  EQU   *                  MSGLEVEL PDT.
         DC    AL1(MSLENDX-JAMSLVB)     LENGTH OF MSGLEVEL PDT     I68
JAMSLVC  DC    AL1(JAMSLVD-JAMSLVC)     LENGTH OF FIRST POSITIONAL PDT
*   TWO        JCL LEVEL                                           I68
         SSS   31,2                                                I68
         BBC   01,JCTJMGLV-INJMJCT,INCMMGL2                        I68
*   ONE
         SSS   31,1
         BBC   01,JCTJMGLV-INJMJCT,INCMMGL1
*   ZERO
         SSS   01,0
JAMSLVD  DC    AL1(MSLENDX-JAMSLVD)     LENGTH OF SECOND POSITIONAL PDT
*   ONE        ALLOCATION LEVEL                                    I68
         SSS   31,1                                                I68
         BBC   01,JCTJMGLV-INJMJCT,INCMALL                         I68
*   ZERO                                                           I68
         SSS   01,0                                                I68
MSLENDX  EQU   *                                                   I68
         SPACE
JAMSCLB  EQU   *                  MSGCLASS PDT.
         DC    FL1'7'             LENGTH OF MSGCLASS PDT.
         CCC   6,30
         DC    FL1'1'             MAX PARAMETER LENGTH.
         DC    XL1'70'            FUNCT/TABLE.
         DC    XL1'51'            FUNCT/TABLE.
         DC    AL1(JCTJMGPO-INJMJCT)   OFFSET IN TABLE.
         SPACE
JAPRTYB  EQU   *                  PRTY PDT.                    @ZA26751
*              DUMMY PDT SINCE PRTY IS A SUBSYSTEM RATHER      @ZA26751
*              THAN A CONTROL PROGRAM KEYWORD.                 @ZA26751
JATIMEB  EQU   *                       TIME PDT                    SMF1
         DC    FL1'17'                 LENGTH OF TIME PDT          SMF1
         CCC   8,50
         MMM   4,31,JCTJMRSS+2-INJMJCT
         DC    FL3'1440'               MAXIMUM NUMBER OF MINUTES   SMF1
         CCC   8,50
         MMM   2,31,JCTJMRSS+6-INJMJCT
         DC    FL3'59'                 MAXIMUM NUMBER OF SECONDS   SMF1
JANOTIFB EQU   *                  JUST LABEL FOR NOTIFY PDT    @Z40RPTH
*                                 NO FUNCTIONAL PDT            @Z40RPTH
         SPACE
JACONDB  EQU   *                  COND PDT.
         DC    FL1'45'            LENGTH OF COND PDT.
*   CODE.
         CCC   7,40
         DC    FL1'4'             MAXIMUM PARAMETER LENGTH.
         DDD   20,JATEMP1-JAWORK,2,4095
         DC    FL1'37'            LENGTH THIS POSITIONAL PDT.
*   OPERATORS.
*   GT
         SSS   32,GT
         BBB   00,JATEMP2-JAWORK,20
*   GE
         SSS   32,GE
         BBB   00,JATEMP2-JAWORK,B0
*   EQ
         SSS   32,EQ
         BBB   00,JATEMP2-JAWORK,80
*   NE
         SSS   32,NE
         BBB   00,JATEMP2-JAWORK,70
*   LE
         SSS   32,LE
         BBB   00,JATEMP2-JAWORK,D0
*   LT
         SSS   32,LT
         BBB   00,JATEMP2-JAWORK,40
         SPACE
JAREGB   EQU   *                  REGION PDT.
         DC    AL1(JAEND7-JAREGB)       LENGTH OF REGION PDT.      AACA
         CCC   07,40                                            YM00395
         DC    FL1'5'             MAXIMUM PARAMETER LENGTH.
         DC    XL1'21' FUNCT/TABLE.
         DC    AL1(JAREGOFF) OFFSET IN TABLE.
         DC    XL2'3FFF'          MAX REGION SEZE.                 AACA
JAST7    EQU   *                                                   AACA
         DC    AL1(JAEND7-JAST7)  LENGTH LCS PDT.                  AACA
         DC    XL1'40'            CONTROL/COMPARE.                 AACA
         DC    FL1'5'             MAX PARAMETER LENGTH.            AACA
         DC    XL1'20'            CVB (2)/ JWA.                    AACA
         DC    AL1(JATEMP1-JAWORK)      OFFSET.                    AACA
         DC    XL2'3FFF'          MAX   LCS SIZE.                  AACA
JAEND7   EQU   *                                                   AACA
         SPACE
JAROLLB  EQU   *                  ROLL PDT                       Y01029
         DC    AL1(JAEND2-JAROLLB)
JAEND2   EQU   *                                                   AACA
JACLASSB EQU   *                  CLASS PDT.                       AACA
         DC    AL1(JAEND3-JACLASSB)    LENGTH OF CLASS PDT.        AACA
JAST3    EQU   *                                                   AACA
         DC    AL1(JAEND3-JAST3)       LENGTH OF 1ST POS PARAM.    AACA
         DC    XL1'10'                 CONTROL/COMPARE             AACA
         DC    XL1'01'                 MAX PARAMETER LENGTH.       AACA
         DC    XL1'70'                 CHECK FOR ALPHA/NUMERIC.    AACA
JAEND3   EQU   *                                                   AACA
         SPACE
JARDB    EQU   *                  RD PDT.                          AACA
         DC    AL1(JAEND4-JARDB)                                   AACA
JAST4    EQU   *                                                   AACA
         DC    AL1(JAEND4-JAST4)                                   AACA
         SSS   31,R                                                AACA
         BBC   01,JCTRSW2-INJMJCT,JCTRESTT                       Y02668
         SSS   32,NR                                               AACA
         BBC   01,JCTRSW2-INJMJCT,JCTNORST                       Y02668
         SSS   32,NC                                               AACA
         BBC   01,JCTRSW2-INJMJCT,JCTNOCKP                       Y02668
         SSS   63,RNC                                              AACA
         BBC   01,JCTRSW2-INJMJCT,JCTRESTT                       Y02668
         BBC   01,JCTRSW2-INJMJCT,JCTNOCKP                       Y02668
JAEND4   EQU   *                                                   AACA
         SPACE
JARESTB  EQU   *                  RESTART PDT.                     AACA
         DC    AL1(JAEND6-JARESTB)     LENGTH TOTAL PDT.           AACA
JAST5    EQU   *                                                   AACA
         DC    AL1(JAEND5-JAST5)       LENGTH 1ST PARAM PDT.       AACA
         DC    XL1'20'            CTRL BYTES/COMPARE BYTES         AACA
         MMM   17,60,SRCHL1-JAWORK                                 AACA
JAEND5   EQU   *                                                   AACA
JAST6    EQU   *                                                   AACA
         DC    AL1(JAEND6-JAST6)       LENGTH CHKID PDT.           AACA
         DC    XL1'20'            CTRL BYTES/COMPARE BYTES         AACA
         MMM   16,51,JCTCKIDT-INJMJCT                            A43678
JAEND6   EQU   *                                                 Y01029
JAADDRB  EQU   *                         ADDRSPC PDT             Y01029
         DC   AL1(JAEND8-JAADDRB)        LENGTH ADDRSPC PDT      Y01029
JAST1A   EQU   *                                                 Y01029
         DC   AL1(JAEND8-JAST1A)         LENGTH POSITIONAL PDT   Y01029
         SSS   34,REAL                                          YM00395
         BBC  01,JCTSTAT2-INJMJCT,JCTADSPC                       Y01029
         SSS   04,VIRT                                          YM00395
JAEND8   EQU   *                                                 Y01029
JAPRFMB  EQU   *                        PERFORM PDT              Y02655
         DC    AL1(JAEND9-JAPRFMB)      LENGTH PERFORM PDT       Y02655
JAST9    EQU   *                                                 Y02655
         DC    AL1(JAEND9-JAST9)        LENGTH POSITIONAL PDT    Y02655
         DC    XL1'30'            CONTROL BYTE                   Y02655
         DC    FL1'3'             MAX PARAMETER LENGTH           Y02655
         DC    XL1'11'            FUNCTION/TABLE                 Y02655
         DC    AL1(JCTPRFMF-INJMJCT) OFFSET IN TABLE             Y02655
         DC    XL1'FF'            MAX NBR (CVB)                  Y02655
JAEND9   EQU   *                                                 Y02655
JAUSERB  EQU   *                   USER PDT                    @Z40RPTH
         DC    AL1(JAUSER3-JAUSERB) LENGTH OF ENTRY            @Z40RPTH
JAUSER1  DS    0C                  START OF POSITION           @Z40RPTH
         DC    AL1(JAUSER3-JAUSER1) LENGTH OF POSITION         @Z40RPTH
         DC    XL1'20'           CONTROL BYTE                  @Z40RPTH
JAUSER2  DS    0C                  START OF CONTROL BYTES      @Z40RPTH
         MMM   7,61,JCTUSER-INJMJCT                            @Z40RPTH
JAUSER3  DS    0C                  END OF ENTRY                @Z40RPTH
         SPACE 2                                               @Z40RPTH
JAPASSB  EQU   *                   JUST LABEL FOR PASSWORD     @Z40RPSM
*                                  NO FUNCTIONAL PDT           @Z40RPSM
JAGROUPB EQU   *                   GROUP PDT.                  @Z40RPSM
         DC AL1(JAGROUP3-JAGROUPB) LENGTH OF ENTRY.            @Z40RPSM
JAGROUP1 DS    0C                  START OF POSITION.          @Z40RPSM
         DC AL1(JAGROUP3-JAGROUP1) LENGTH OF POSITION.         @Z40RPSM
         DC XL1'20'                CONTROL BYTE.               @Z40RPSM
JAGROUP2 DS   0C                   START OF CONTROL BYTE.      @Z40RPSM
         MMM  8,6D,JCTXGROP-JCTXIN                             @Z40RPSM
JAGROUP3 DS   0C                   END OF ENTRY.               @Z40RPSM
***********************************************************************
*                                                                     *
*              CONSTANTS                                              *
*                                                                     *
***********************************************************************
FILLER   DS    0F                                                Y01029
MAXVAL   DC    XL4'00003FFF'           MAX REGION VALUE          Y01029
JA100    DC    H'100'                  CONVERSION OF SECS TO       SMF1
*                                           100THS SECS.           SMF1
JA6000   DC    H'6000'                 CONVERSION OF MINS TO       SMF1
*                                           100THS SECS            SMF1
JACON0   DC    H'0'                HALFWORD ZERO CONSTANT.      YM00376
DEC0     EQU   0                       NUMERIC EQUATE            Y02668
DEC3     EQU   3                       NUMERIC EQUATE
DEC1     EQU   1                       NUMERIC EQUATE
DEC8     EQU   8                       NUMERIC EQUATE
DEC4     EQU   4                       NUMERIC EQUATE
DEC5     EQU   5                       NUMERIC EQUATE
EIGHT    EQU   8              MAXIMUM LENGTH OF PASSWORD       @Z40RPSM
SEVEN    EQU   7              MAXIMUM LENGTH OF NOTIFY ID      @Z40RPTH
E9       EQU   C'Z'           LETTER Z                         @Z40RPTH
JATESTOR DC    V(IEFVGT)          TEST AND STORE.
JAGETKEP DC    V(IEFVGK)          GET KEY/POS.
JAVHQ    DC    V(IEFVHQ)          QMANAGER INTERFACE.
JAVGM    DC   V(IEFVGM)           MESSAGE MODULE.
JAVHE    DC    V(IEFVHE)           CONTROL ROUTINE.              Y02668
PATCH    DC    25F'0'              **********PATCH SPACE*********Y02668
JAERDUM  DC    C'JOBFAIL '                                        22297
JAMSK1   DC    F'8'               MASK FOR COND SUBPARM CHECK.
JA144    DC    F'144'
JA1      DC    F'1'
         END
