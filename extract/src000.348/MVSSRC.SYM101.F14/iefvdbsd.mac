**********************************************************************
*
*   MODULE NAME= IEFVDBSD
*
*   DESCRIPTIVE NAME= DSENQ TABLE PROCESSOR
*
*   COPYRIGHT=  N/A
*
*   STATUS= OS/VS2 REL.037 PTF                                 @ZA27750
*
*   FUNCTION= TO CREATE A DSENQ TABLE FOR ALL EXPLICIT DSNAMES DATA
*             SETS AND INDICATE EACH AS EITHER EXCLUSIVE OR SHARED.
*      OPERATION= SCANS JFCB DSNAME ENTRY FROM END TO BEGINING FOR
*                 1ST NON-BLANK CHARACTER. THEN, SCANS DOWN TABLE FOR
*                 DUPLICATE NAMES OR AVAILABLE SPACE. IF DUPLICATE
*                 NAME IS FOUND, A TEST IS MADE TO SEE IF NEW ENTRY IS
*                 EXCLUSIVE OR SHARED. IF EXCLUSIVE,OVERLAY OLD ENTRY;
*                 IF SHARED, EXIT LEAVING OLD ENTRY IN TACT. TEST FOR
*                 ROOM IN TABLE, IF SO MOVE IN ENTRY; ELSE CREATE A
*                 NEW TABLE.
*
*   NOTES
*      CHARACTER CODE DEPENDENCIES= EBCIDIC
*      DEPENDENCIES= NONE
*      RESTRICTIONS= NONE
*      REGISTER CONVENTIONS= RB- BASE REGISTER
*                            RE- RETURN REGISTER
*      PATCH-LABEL= PATCH SPACE
*
*   MODULE TYPE= PROCEDURE
*      PROCESSOR= ASSEMBLER
*      MODULE SIZE= N/A
*      ATTRIBUTES= REENTRANT
*
*   ENTRY POINT= IEFVDBSD
*      PURPOSE= MAIN ENTRY POINT
*      LINKAGE= STANDARD ENTRY LINKAGE
*      INPUT DATA= REG 12 POINTS TO IWA
*      REGISTERS SAVED= ALL
*      REGISTER CONTENTS DURING PROCESSING=
*               R2- DSENQ TABLE POINTER
*               R3- LENGTH OF NEW ENTRY
*               R4- WORK REGISTER
*               R5- POINTER TO TABLE SPACE
*               R6- TOTAL SPACE OCCUPIED IN TABLE
*               R7- WORK REGISTER
*               R9- S CON OF SIOT
*               RA- S CON OF JFCB
*               RB- BASE REGISTER
*               RE- RETURN REGISTER
*      REGISTERS RESTORED= ALL
*
*   EXIT - NORMAL= REGISTER 14
*      CONDITIONS= WHEN DSNAME IS PROCESSED
*      OUTPUT DATA= DSENQ TABLE ENTRY IF NEW DSNAME; ELSE UPDATE REFER-
*                   ENCE COUNT
*      RETURN CODES= NONE
*
*   EXIT - ERROR= N/A
*      CONDITIONS=
*      OUTPUT DATA=
*      RETURN CODES=
*
*   EXTERNAL REFERENCES=
*      ROUTINES= IEFVHQ
*      DATA AREAS= IWA,LWA
*      CONTROL BLOCKS= SIOT,JFCB
*      TABLE= DSENQ TABLE
*      MACROS= IEFSAVER,IEFRELSE
*      ENQUEUE RESOURCES= N/A
*      CHANGE LEVEL= N/A
*
*   MESSAGES= NONE
*
*   CHANGE LEVEL = Z40MPTH
*                = Z40RPSM
*                = ZA27750                                     @ZA27750
*
**********************************************************************
         EJECT
         IEFCOMWA
         IEFVMIWA
         IEFVMDWA
         EJECT
DDSCT    DSECT                                                   Y02668
         IEFASCTB                                                Y02668
         EJECT
VDBDSNQT DSECT                                                   Y02668
         IEFZB902
JFD      DSECT
         IEFJFCBN
DDSIOT   DSECT                                                     3480
         IEFASIOT                                                  3480
         IEFQMNGR
DSNSHR   EQU   X'08'         EQUATE FOR DATA SET SHARE FLAG
IEFVDBSD CSECT
         SAVE  (14,12)
         BALR  RB,0
         USING *,RB
*****************************************************************Y02668
* MODULE TRACE CODE - FOR TESTING.                               Y02668
         L     RF,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         BALR  RE,RF               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'DBSD'             MOD ID USED BY TRACE.         Y02668
* TRACE RETURNS HERE.                                            Y02668
*****************************************************************Y02668
         B     DB100               MODULE ID.                    Y02668
         MODID BR=NO                                             Y02668
*        DC    C'REL4'             FUNCTION ID AND             @Z40MPTH
*        DC    C'02' LEV # (RACF)                              @Z40RPSM
         DC    C'03' LEV # (MERGE SU4,10,16 CODE TO 037 PTF)   @ZA27750
DB100    DS    0H                                                Y02668
         L     R9,IWASIOTP                                       Y02668
         L     RA,IWAJFCBP                                       Y02668
         USING INDMSIOT,R9                                         3480
         USING INFMJFCB,RA
         LA    R1,SCT             GET ADDRESS OS SCT             Y02668
         USING INSMSCT,R1                                        Y02668
         L     R2,DSENQTP              DSN ENQ TABLE PTR
         TM    SWD,DBFST               FIRST TIME SWITCH
         BO    DB200
         B     DB400                   JUST A DSN TO PROCESS
*
*
***********************************************************************
*             FIRST TIME MODULE ENTRY
*             .ZERO AREA
*             .SAVE TABLE ID
*             .BCH TO ROUTINE TO PROCESS DSNAME
***********************************************************************
*
DB200    EQU   *
         XI    SWD,DBFST        TURN OFF FIRST TIME SWITCH
         XC    0(176,R2),0(R2)         ZERO AREA
         USING DSNQTABL,R2                                       Y02668
         MVI   DSNQID,X'0F'                 TABLE  ID            Y02668
***********************************************************************
*             PROCESS DSNAME-
*             .SCAN JFCB DSNAME ENTRY FROM END TO BEGIN'G  A32735,33487
*              FOR 1ST NON-BLANK CHARACTER                 A32735,33487
*             .SCAN DOWN TABLE FOR DUPLICATES OR AVAILABLE SPACE
*             .JFCB IN LWA POINTED TO BY RA
***********************************************************************
*
DB400    EQU   *
         XR    R3,R3                   SETUP SCAN REGS
         XR    R4,R4
         LA    R3,43                                       A32735,33487
DB405    LA    R4,JFCBDSNM(R3)  SCAN JFCBDSNM END TO       A32735,33487
         CLI   0(R4),C' '       BEGIN FOR 1ST NON BLANK    A32735,33487
         BNE   DB420            NON BLANK CHAR FOUND, BR   A32735,33487
         BCT   R3,DB405         BLANK-REDUCE INDEX-RESCAN  A32735,33487
*
***********************************************************************
*         NON-BLANK FOUND-REG 3 CONTAINS ONE LESS          A32735,33487
*             THAN ACTUAL DSNAME                           A32735,33487
*             SCAN TABLE ENTRIES FOR DUPLICATES OR SPACE AVAILABLE
*             .R4 AND R5 USED FOR CALCULATING LENGTH OF ENTRIES AND
*              NEXT ADDR TO COMPARE
*             .R6 TOTALS SPACE OCCUPIED IN TABLE-TO SEE IF NEW ENTRY
*              WILL FIT
***********************************************************************
DB420    EQU   *
         LA    R5,DSNQNTRY                                       Y02668
         USING DSNQNTRY,R5       GET TABLE ADDRESSABILITY        Y02668
         XR    R4,R4
         LA    R7,1(R3)          SAVE COUNT-R3 IS 1 LESS   A32735,33487
*                              THAN ACTUAL DSNAME LENGTH   A32735,33487
         XR    R6,R6
DB430    EQU   *
         IC    R4,DSNQDSNL                                       Y02668
         CR    R7,R4              COMPARE COUNTS                 A23637
         BC    7,DB440            GET NEXT ENTRY                 A23637
         EX    R3,COMPARE              SCAN FOR DUPLICATE
         BE    DB490                   BCH YES
DB440    CLC   DSNQSTEP(3),CF0F       3 BYTES OF ZERO            Y02668
         BE    DB500                   BCH AVAILABLE
         LA    R5,3(R4,R5)             ADJUST TO NEXT ENTRY     Y02668
         LA    R6,3(R6,R4)                                       Y02668
         B     DB430                   RETEST
*
COMPARE  CLC   JFCBDSNM(0),DSNQDSN COMPARE FOR DUPLICATES        Y02668
*
*
***********************************************************************
*             ENTERED ON DUPLICATE DSNAME FOUND
*             TEST IF NEW ENTRY EXCLUSIVE
*              .IF NEW ENTRY EXCLUSIVE - OVERLAY OLD ENTRY
*              .IF NEW ENTRY SHARED - EXIT LEAVING OLD ENTRY IN TACT
**********************************************************************
DB490    EQU   *
         MVC   DSNQSTEP(1),SCTSNUMB   UPDATE REFERRING STEP NBR  Y02668
         TM    JFCBIND2,DSNSHR             TEST DSNAME SHARE
         BZ    DB530      NOT SHARE-GO SET EXCLUSIVE INDICATOR     0750
         TM    SCTSDISP,X'04'      IF DISP=(SHR,DELETE)            3480
         BO   DB530               SET EXCLUSIVE INDICATOR          3480
       TM  SIOTALTD,X'04'    TEST ALTERNATE DISP FOR DELETE        3480
         BO   DB530   YES,SET EXCLUSIVE INDICATOR                  3480
         B     DB900
***********************************************************************
*             MOVE ENTRY INTO TABLE
*              TEST FOR TABLE ROOM
*             .JFCBDSNM CONTAINS NEW DSN
*             .R3 CONTAINS LENGTH OF NEW ENTRY
*             .R5 POINTS TO TABLE SPACE
*             .R6 CONTAINS TOTAL SPACE OCCUPIED
***********************************************************************
DB500    EQU   *
         LA    R7,159              159=MAX AVAILABLE SPACE,     YM04472*
                                  BASED ON TBL LTH(176)-HDR(14) YM04472*
                                  - NEXT ENTRY INDIC(3).        YM04472
         LA    R6,4(R6,R3)     ADD ENTRY LENGTH BEFORE COMPARE   Y02668
         CR    R6,R7                   TEST IF ENTRY WILL FIT
         BNH   DB525                BCH ON ENOUGH ROOM
         BAL   R4,DB600             GO WRITE/ASSIGN
DB525    EQU   *
         EX    R3,MOVE                 EXEC MOVE-R3 CONTAINS LESS 1
         LA    R3,1(R3)                ADD 1 TO EXEC. LEN
         STC   R3,DSNQDSNL                SAVE LENGTH BYTE       Y02668
         MVC   DSNQSTEP(1),SCTSNUMB    MOVE IN STEP NUMBER       Y02668
         SR    R7,R6                    GET NUMBER BYTES LEFT    Y02668
         STH   R7,DSNQFREE              STORE NO. FREE BYTES     Y02668
         TM    JFCBIND2,DSNSHR             TEST DSNAME SHARE
         BZ    DB530              GO INDICATE EXCLUSIVE
         TM    SCTSDISP,X'04'      IF DISP=(SHR,DELETE)            3480
         BO   DB530               SET EXCLUSIVE INDICATOR          3480
       TM  SIOTALTD,X'04'    TEST ALTERNATE DISP FOR DELETE        3480
         BO   DB530   YES,SET EXCLUSIVE INDICATOR                  3480
         MVI   DSNQFLG1,X'80'              INDICATE SHARED       Y02668
         B     DB900
DB530    EQU   *
         MVI   DSNQFLG1,X'00'      ZERO INDICATES EXCLUSIVE     Y02668
         B     DB900             NOW GO EXIT
*
MOVE     MVC   DSNQDSN(0),JFCBDSNM              MOVE IN ENTRY    Y02668
*
*
***********************************************************************
*
*             WRITE AND ASSIGN VIA IEFVHQ
*             .PARAMETER LIST SHOULD BE PRESET FOR WRITE/ASSIGN
*
***********************************************************************
DB600    EQU   *
         ST    R1,IWASCTAD        SAVE SCT ADDRESS               Y02668
         LA    R8,QPARM           LOC OF QUEUE MAN
         USING IOPARAMS,R8
         L     R8,QMPCL           PTS TO QMPCA                   Y02668
         MVC   DSNQSVA(3),IWANXTSV SVA FOR THIS TABLE.          YM02716
         MVC   4(4,R8),IWANXTSV    SAVE IN QMPEX.               YM02716
         ST    R2,0(R8)           STORE ADDR INTO QMPCA          Y02668
         IEFSAVER
         L     RF,VHQ                  VCON HQ
         BALR  RE,RF
         IEFRELSE
         MVC   IWANXTSV(4),0(R8)   REPLACE SVA.                 YM02716
         MVC   DSNQNSVA(3),DSNQSVA     CHAIN DSENQ TABLES        Y02668
         LA    R5,14(R2)          RESET PTR TO START             Y02668
         XC    DSNQNTRY(162),DSNQNTRY  ZERO TABLE                Y02668
         L     R1,IWASCTAD        RESTORE SCT ADDRESS            Y02668
         BR    R4
*
**********************************************************************
*             EXIT
***********************************************************************
DB900    EQU   *
         RETURN (14,12)
*
*
***********************************************************************
*             MODULE CONSTANTS
         DS    0F
CF0F     DC    X'00000000'                                       Y02668
CF00F    DC    X'00000FFF'
VHQ      DC    V(IEFVHQ)
PATCH    DC    25F'0'              **********PATCH SPACE*********Y02668
         END
