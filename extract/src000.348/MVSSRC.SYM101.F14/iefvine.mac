         TITLE ' /***************************************************'
IEFVINE  CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @09,@01                                             0001
         USING @DATD,@09                                           0001
         LM    @00,@01,20(@13)                                     0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
**************************************************************** Y02668
*  MODULE TRACE CODE - FOR TESTING.                              Y02668
         L     15,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         CNOP  2,4                                               Y02668
         BALR  14,15               ENTER MOD ID IN TRACE RECORD  Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'VINE'             MOD ID USED BY TRACE.         Y02668
*  TRACE RETURNS HERE                                            Y02668
**************************************************************** Y02668
         B     STRT
         DC    X'11111111'
         DC    CL4'VINE'
         DC    CL4'L.01'
         DC    C'MVM'              FUNCTION ID AND               Y02668
         DC    C'01'               LEVEL # (TRACE AND PATCH)     Y02668
*                                                                  0017
*                                                                  0017
*STRT:;                                                            0018
STRT     DS    0H                                                  0019
*FIVE=ONE;                                                         0019
         LR    FIVE,ONE                                            0019
*TWO=0;                                /* CLEAR REG2 FOR TRT         */
         SR    @12,@12                                             0020
         LR    TWO,@12                                             0020
*BEGIN=FIVE+2;                                                     0021
*                                                                  0021
         LA    BEGIN,2                                             0021
         AR    BEGIN,FIVE                                          0021
*/*                         LABEL SCAN                               */
*                                                                  0022
*  IF BEGIN->ONEBYTE=' ' THEN          /*IF CARD NOT A CONTINUATION  */
         CLI   ONEBYTE(BEGIN),C' '                                 0022
         BNE   @RF00022                                            0022
*    DO;                               /*CHECK IF COL. 3 CONTAINS A  */
*      INCRE=FIVE+3;                   /*BLANK(LABEL CHECK) IF YES,  */
         LA    INCRE,3                                             0024
         AR    INCRE,FIVE                                          0024
*      LENGTH=0;                       /*UPDATE POINTER TO COL. 4,SET*/
         LR    LENGTH,@12                                          0025
*      GOTO NONBLNK;                   /*LENGTH TO ZERO, AND BRANCH  */
         B     NONBLNK                                             0026
*    END;                              /*TO VERB CHECK RTN,BYPASSING */
*                                      /*LABEL SYNTAX CHECKING       */
*                                      /* IF LABEL FOUND, CHECK      */
*                                      /* IF FIRST CHAR IS           */
*                                      /* ALPHABETIC OR NATIONAL     */
*GENERATE;                                                         0028
@RF00022 DS    0H                                                  0028
         TRT   0(1,BEGIN),TRTTAB
         BNZ   LABERR                  IF NO, ERROR
*  IF BEGIN->ONEBYTE>='F0'X THEN GOTO LABERR;  /*IF 1ST NUMERIC,ERROR*/
         CLI   ONEBYTE(BEGIN),X'F0'                                0029
         BNL   @RT00029                                            0029
*                                      /* IS REMAINING PART OF LABEL */
*                                      /* ALPHA-NUMERIC.             */
*GENERATE;                                                         0031
         TRT   1(8,BEGIN),TRTTAB
         BZ    LABERR                  IF LABEL TOO LONG, ERROR
*  IF TWO ^=4 THEN GOTO LABERR;        /* IF NOT, LABEL INVALID      */
         CH    TWO,@CH00038                                        0032
         BNE   @RT00032                                            0032
*INCRE=ONE;                            /* IF LABEL VALID, UPDATE PTR */
         LR    INCRE,ONE                                           0034
*LENGTH=ONE-BEGIN;                     /*PASSED THE LABEL  AND       */
         LR    LENGTH,ONE                                          0035
         SR    LENGTH,BEGIN                                        0035
*                                      /* CALCULATE THE LABEL LENGTH */
*NONBLNK:IF INCRE->ONEBYTE^=' ' THEN GOTO CHECK;   /* CHECK FOR      */
NONBLNK  CLI   ONEBYTE(INCRE),C' '                                 0036
         BNE   @RT00036                                            0036
*INCRE=INCRE+1;                        /* BEGINNING OF VERB          */
         AH    INCRE,@CH00050                                      0038
*GOTO NONBLNK;                                                     0039
         B     NONBLNK                                             0039
*CHECK:;                                                      /*M3122*/
CHECK    DS    0H                                                  0041
*      IF INCRE->VERB=PRC THEN         /* IF 'PROC' VERB FOUND  M3122*/
         CLC   VERB(5,INCRE),PRC                                   0041
         BNE   @RF00041                                            0041
*        DO;                                                  /*M3122*/
*          RE:RETCODE=LENGTH;          /* SET RETURN CODE EQUAL M3122*/
RE       ST    LENGTH,RETCODE(,R13)                                0043
*             RETURN;                  /* TO THE LABEL LENGTH   M3122*/
@EL00001 DS    0H                                                  0044
@EF00001 L     @00,@SIZDATD                                        0044
         LR    @01,@09                                             0044
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0044
         BR    @14                                                 0044
*        END;                          /* AND RETURN CONTROL TO M3122*/
*                                      /* IEFVINA.              M3122*/
*      IF INCRE->VERB=PND THEN GOTO RE;/* IF 'PEND' VERB FOUND  M3122*/
@RF00041 CLC   VERB(5,INCRE),PND                                   0046
         BE    @RT00046                                            0046
*                                      /* PROCESS LIKE PROC STMTM3122*/
*LABERR:;                              /* IF NEITHER VERB FOUND M3122*/
LABERR   DS    0H                                                  0049
*       RETCODE=12;                    /* OR INVALID LABEL      M3122*/
         MVC   RETCODE(4,R13),@CF00083                             0049
*                                      /* PREVIOUSLY DETECTED   M3122*/
*                                      /* SET RETURN CODE TO 12 M3122*/
*       RETURN;                        /*AND RETURN TO IEFVINA  M3122*/
         B     @EL00001                                            0050
*END IEFVINE;                                                      0051
         B     @EL00001                                            0051
@DATA    DS    0H
@CH00050 DC    H'1'
@CH00038 DC    H'4'
@DATD    DSECT
         DS    0F
@PC00001 DS    1F
@ZTEMPS  DS    C
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
@TEMPS   EQU   @ZTEMPS
@L       EQU   @ZLEN
IEFVINE  CSECT
         DS    0F
@CF00083 DC    F'12'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
@DATEND  EQU   *
IEFVINE  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@SIZ001  EQU   @SIZDATD
         DS    0D
PRC      DC    CL5'PROC '
PND      DC    CL5'PEND '
PATCH    DC    XL100'0'
TRTTAB   DC    64AL1(8)
         DC    AL1(4)
         DC    26AL1(8)
         DC    AL1(0)
         DC    31AL1(8)
         DC    2AL1(0)
         DC    68AL1(8)
         DC    9AL1(0)
         DC    7AL1(8)
         DC    9AL1(0)
         DC    8AL1(8)
         DC    8AL1(0)
         DC    6AL1(8)
         DC    10AL1(0)
         DC    6AL1(8)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@0       EQU   00
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
ONE      EQU   @01
TWO      EQU   @02
FIVE     EQU   @05
R13      EQU   @13
BEGIN    EQU   @04
INCRE    EQU   @03
LENGTH   EQU   @06
VERB     EQU   0
RETCODE  EQU   16
ONEBYTE  EQU   0
DUMMY    EQU   0
@RT00029 EQU   LABERR
@RT00032 EQU   LABERR
@RT00036 EQU   CHECK
@RT00046 EQU   RE
@EL01    EQU   @EL00001
@ENDDATA EQU   *
         END   IEFVINE
