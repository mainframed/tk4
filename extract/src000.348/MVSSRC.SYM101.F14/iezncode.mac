         TITLE 'COMPRESSION MODULE IEZNCODE'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      COMPRESSION SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*        STATUS
*
*              CHANGE LEVEL ZERO
*              RELEASE NINETEEN
*
*        FUNCTION
*
*              CHARACTER STRING COMPRESSION
*              REPLACING SERIES OF BLANKS WITH COUNT FIELDS
*              FOR DECOMPRESSION BY IEZDCODE
*
*              BLOCKS COMPRESSED RECORDS
*              BY UPDATING PARAMETER AREA
*
*              FLAGS COMPRESSED RECORD
*              IF IEZTYPE IS X'80'
*              NOT IF X'00'
*
*        ENTRY POINTS
*
*              IEZNCODE
*
*        INPUT
*
*              REGISTER 13 ADDRESSES SAVE AREA
*              REGISTER 14 ADDRESSES RETURN POINT
*              REGISTER 1 ADDRESSES POINTER TO PARAMETER AREA
*
*        OUTPUT
*
*              REGISTER 15 CONTAINS RETURN CODE
*              OTHER REGISTERS ARE RESTORED
*
*        EXTERNAL REFERENCES
*
*              READS UNCOMPRESSED RECORD
*              ADDRESSED BY IEZUNCOM
*              WITH LENGTH IEZLEN
*
*              WRITES COMPRESSED RECORD
*              ADDRESSED BY IEZCOMPR
*              WITH LENGTH NOT EXCEEDING IEZOUT
*
*              READS IEZUNCOM, IEZLEN, IEZCHAR AND IEZTYPE
*              UPDATES IEZCOMPR AND IEZOUT
*              SCRATCHES IEZRES
*
*        NORMAL EXITS
*
*              RETURN CODE ZERO MEANS TRANSLATION COMPLETED
*              FOR ONE RECORD
*
*              RETURN CODE FOUR MEANS END OF BLOCK TERMINATION
*              WITH NO RECORD TRANSLATED
*
*        ABNORMAL EXITS
*
*              NONE
*
*        TABLES AND WORK AREAS
*
*              PARAMETER AREA BELOW
*
*        ATTRIBUTES
*
*              REFRESHABLE
*
*        NOTES
*
*              OPERATION CHARACTER-CODE INDEPENDENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      COMPRESSION FORMAT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*        BLOCK
*
*              COMPRESSED RECORDS      SEE BELOW
*              END OF BLOCK MARK       2 BYTES OF ZERO
*
*        COMPRESSED RECORD
*
*              SPECIAL RECORD FLAG     1 BIT
*              COMPR RECORD LENGTH     15 BITS
*              SEGMENTS                SEE BELOW
*
*        SEGMENT
*
*              MERGED COUNTS FLAG      1 BIT
*              BLANK CHAR COUNT        3 (FLAG ON) OR 7 (FLAG OFF) BITS
*              NONBLANK CHAR COUNT     4 (FLAG ON) OR 8 (FLAG OFF) BITS
*              NONBLANK CHARS          1 BYTE EACH
*
*                                      AN UNCOMPRESSED SEGMENT
*                                      IS A SERIES OF NONBLANKS
*                                      FOLLOWED BY A SERIES OF BLANKS
*                                      EITHER SERIES POSSIBLY EMPTY
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      PARAMETER AREA
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IEZPARM  DSECT                         PARAMETER AREA
IEZUNCOM DS    A                       PTR TO UNCOMPRESSED RECORD
IEZCOMPR DS    A                       PTR TO NEXT COMPRESSED RECORD
IEZLEN   DS    H                       LENGTH OF UNCOMPRESSED RECORD
IEZOUT   DS    H                       LENGTH OF AREA FOR OUTPUT RECORD
IEZCHAR  DS    C                       CHARACTER CODE OF BLANK
IEZTYPE  DS    B                       FLAG ASSOCIATED WITH RECORD
IEZRES   DS    H                       WORK AREA
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      GENERAL REGISTERS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BASE     EQU   11                      CODE BASE
DATA     EQU   12                      DATA BASE
SAVE     EQU   13                      SAVE AREA
BACK     EQU   14                      RETURN POINT
CODE     EQU   15                      RETURN CODE
WORK     EQU   0                       WORK REGISTER
PASS     EQU   1                       PARAMETER LIST
*
UNCOM    EQU   2                       INDEX THROUGH SOURCE RECORD
COMPR    EQU   3                       INDEX THROUGH TARGET RECORD
MAXUNCOM EQU   4                       END OF SOURCE RECORD
MAXCOMPR EQU   5                       END OF TARGET RECORD
BLANKS   EQU   6                       COUNT OF BLANKS IN SEGMENT
CHARS    EQU   7                       COUNT OF CHARS IN SEGMENT
LENGTH   EQU   8                       BEGINNING OF TARGET RECORD
COUNTS   EQU   9                       BEGINNING OF SEGMENT
OUT      EQU   10                      SPACE FOR TARGET RECORDS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      BEGIN MODULE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IEZNCODE CSECT                         BEGIN MODULE
*
         STM   BACK,DATA,12(SAVE)      SAVE REGISTERS
         BALR  BASE,0                  ADDRESS CODE
         USING *,BASE                  CODE ADDRESSABILITY
**************************************************************** Y02668
* MODULE TRACE CODE - FOR TESTING                                Y02668
         L     15,TRACEV           LOAD TRACE RTNE ADDR.         Y02668
         BALR  14,15               ENTER MOD ID IN TRACE RECORD. Y02668
TRACEV   DC    V(TRACE)            TRACE RTNE ADDR.              Y02668
         DC    C'NCOD'             MOD ID USED BY TRACE          Y02668
* TRACE RETURNS HERE.                                            Y02668
**************************************************************** Y02668
         B     N1                  BYPASS ID                     Y02668
         MODID BR=NO                                             Y02668
         DC    C'MVM'              FUNCTION ID AND               Y02668
         DC    C'01'               LEVEL # (TRACE + PATCH)       Y02668
N1       DS    0H                  BEGIN                         Y02668
         L     DATA,0(PASS)            ADDRESS DATA
         USING IEZPARM,DATA            DATA ADDRESSABILITY
         LA    WORK,1                  CONSTANT REGISTER
         LA    CODE,2                  CONSTANT AND FLAG REGISTER
         LM    UNCOM,COMPR,IEZPARM     LOAD SOURCE AND TARGET POINTERS
         LR    MAXUNCOM,UNCOM          PREPARE SOURCE LIMIT
         AH    MAXUNCOM,IEZLEN         COMPUTE SOURCE LIMIT
         LH    OUT,IEZOUT              LOAD TARGET SPACE
         LA    MAXCOMPR,0(COMPR,OUT)   PREPARE TARGET LIMIT
         SR    MAXCOMPR,CODE           DECREMENT FOR END OF BLOCK MARK
         LR    LENGTH,COMPR            ADDRESS TARGET RECORD
         AR    COMPR,CODE              ADDRESS FIRST SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      BEGIN SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SEGMENT  DS    0H                      COMPRESS SEGMENT
*
         LTR   CODE,CODE               IF LAST SEGMENT COMPRESSED
         BZ    FINISH                  THEN FINISH RECORD
*
         LR    COUNTS,COMPR            SAVE ADDRESS FOR COUNT FIELDS
         AR    COMPR,CODE              ADDRESS COMPRESSED CHARACTERS
         SR    CHARS,CHARS             ZERO NONBLANK CHARS COUNTED
         SR    BLANKS,BLANKS           ZERO BLANKS COUNTED
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      TRANSLATE NONBLANKS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHAR     DS    0H                      COUNT NONBLANK CHAR
*
         CR    UNCOM,MAXUNCOM          IF SOURCE FINISHED
         BNL   RECORD                  THEN FINISH RECORD
*
         CR    COMPR,MAXCOMPR          IF TARGET LIMIT EXCEEDED
         BNL   BLOCK                   THEN FINISH BLOCK
*
         CH    CHARS,MAXCHAR           IF CHAR COUNT FULL
         BNL   COUNTED                 THEN FINISH SEGMENT
*
         CLC   0(1,UNCOM),IEZCHAR      IF SOURCE BLANK
         BE    BLANK                   THEN COUNT BLANKS
*
         MVC   0(1,COMPR),0(UNCOM)     COMPRESS CHAR
         AR    UNCOM,WORK              BUMP SOURCE POINTER
         AR    COMPR,WORK              BUMP TARGET POINTER
         AR    CHARS,WORK              BUMP CHAR COUNT
*
         B     CHAR                    NEXT CHAR
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      TRANSLATE BLANKS
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BLANK    DS    0H                      COUNT BLANK
*
         CR    UNCOM,MAXUNCOM          IF SOURCE FINISHED
         BNL   RECORD                  THEN FINISH RECORD
*
         CH    BLANKS,MAXBLANK         IF BLANK COUNT FULL
         BNL   COUNTED                 THEN FINISH SEGMENT
*
         CLC   0(1,UNCOM),IEZCHAR      IF SOURCE NONBLANK
         BNE   COUNTED                 THEN FINISH SEGMENT
*
         AR    UNCOM,WORK              BUMP SOURCE POINTER
         AR    BLANKS,WORK             BUMP BLANK COUNT
*
         B     BLANK                   NEXT BLANK
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      END SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
RECORD   DS    0H                      FINISH LAST SEGMENT IN RECORD
*
         SR    CODE,CODE               FLAG LAST SEGMENT COMPRESSED
*
COUNTED  DS    0H                      FINISH SEGMENT
*
         STC   BLANKS,0(COUNTS)        WRITE BLANK COUNT
         STC   CHARS,1(COUNTS)         WRITE NONBLANK COUNT
*
         TM    0(COUNTS),B'11111000'   IF LEFT COUNT LARGE
         BNZ   SEGMENT                 THEN NEXT SEGMENT
*
         TM    1(COUNTS),B'11110000'   IF RIGHT COUNT LARGE
         BNZ   SEGMENT                 THEN NEXT SEGMENT
*
         MVO   1(1,COUNTS),0(1,COUNTS) MERGE COUNTS
         OI    1(COUNTS),X'80'         FLAG MERGED COUNTS
         EX    CHARS,MOVE              SHIFT SEGMENT
         SR    COMPR,WORK              SHIFT TARGET POINTER
*
         B     SEGMENT                 NEXT SEGMENT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                                      END MODULE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FINISH   DS    0H                      FINISH RECORD
*
         XC    0(2,COMPR),0(COMPR)     END OF BLOCK IF LAST CALL
         ST    COMPR,IEZCOMPR          UPDATE TARGET POINTER
         SR    COMPR,LENGTH            COMPUTE TARGET LENGTH
         STH   COMPR,IEZRES            STORE TARGET LENGTH
         MVC   0(2,LENGTH),IEZRES      WRITE TARGET LENGTH
         OC    0(1,LENGTH),IEZTYPE     FLAG RECORD LENGTH
         SR    OUT,COMPR               COMPUTE TARGET SPACE
         STH   OUT,IEZOUT              UPDATE TARGET SPACE
*
RETURN   DS    0H                      EXIT MODULE
*
         L     BACK,12(SAVE)           RESTORE 14                Y02668
         LM    WORK,DATA,20(SAVE)      RESTORE REGISTERS         Y02668
*
         BR    BACK                    RETURN CONTROL
*
BLOCK    DS    0H                      FINISH BLOCK
*
         XC    0(2,LENGTH),0(LENGTH)   MARK END OF BLOCK
         AR    CODE,CODE               RETURN END OF BLOCK CODE
*
         B     RETURN                  EXIT MODULE
*
MAXBLANK DC    H'127'                  MAXIMUM BLANKS IN SEGMENT
MAXCHAR  DC    H'255'                  MAXIMUM NONBLANKS IN SEGMENT
MOVE     MVC   0(0,COUNTS),1(COUNTS)   EXECUTED INSTRUCTION
*
PATCH    DC    25F'0'              PATCH SPACE                   Y02668
         END
*
