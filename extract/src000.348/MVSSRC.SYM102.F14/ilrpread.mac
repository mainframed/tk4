         TITLE ' ILRPREAD-ASM READ/WRITE ROUTINE                       *
                        '
ILRPREAD CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ILRPREAD  76.114'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @09,@01                                             0001
         USING @DATD,@09                                           0001
         LM    @00,@01,20(@13)                                     0001
*                                                                  0181
*/********************************************************************/
*/*                                                                  */
*/* INITIALIZATION: ILRPREAD INITIALIZATION ROUTINE                  */
*/*                                                                  */
*/* INPUT: INPUT PARAMETER LIST IS POINTED BY REG1                   */
*/*             FLAG     -FLAGS FOR ILRPREAD                         */
*/*             TOTSLOTS -NUMBER OF SLOTS TO BE READ/WRITE           */
*/*             FRTSLOT  -FIRST SLOT NUMBER                          */
*/*             TABENTRY -PTR TO PART OR TPABTBLE ENTRY              */
*/*             INBUF    -PTR TO BUFFER                              */
*/*                                                                  */
*/* FUNCTION:  1.OBTAIN SQA FOR BUILDING IOSB,SRB AND CHANNEL PROGRAM*/
*/*            2.ISSUE ESTAE FOR ABNORMAL TERMINATION                */
*/*            3.GET UCB AND EDB HEADER PTR                          */
*/*                                                                  */
*/* OUTPUT: WORK AREA FOR CHANNEL PROGRAM,IOSB AND SRB OBTAINED.     */
*/*         ESTABLISH ESTAE EXIT ROUTINE TO HANDLE ABNORMAL          */
*/*         TERMINATION                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0181
*   INPTR=R1;                       /* SAVE INPUT PARAMETER REG      */
         ST    R1,INPTR                                            0181
*   R13SAVE=RSAVE;                  /* SAVE REGISTER 13              */
         ST    RSAVE,R13SAVE                                       0182
*   RSAVE=ADDR(SAVAREA);            /* R13 PTR TO 18 WORDS SAVEAREA  */
         LA    RSAVE,SAVAREA                                       0183
*   RTCODE=ZERO;                    /* INIT RETURN CODE              */
         SLR   RTCODE,RTCODE                                       0184
*   INBUF=BUFPTR;                   /* SET INPUT BUFFER PTR          */
         L     @15,INPTR                                           0185
         L     @15,BUFPTR(,@15)                                    0185
         ST    @15,INBUF                                           0185
*   IOSBLEN=(LENGTH(IOSB)+SEVEN)/EIGHT*EIGHT;/* ROUND IOSB TO DOUBLE
*                                      WORD                          */
         LA    IOSBLEN,112                                         0186
*   SRBLEN=(LENGTH(SRB)+SEVEN)/EIGHT*EIGHT;/* ROUND SRB TO DOUBLE  0187
*                                      WORD                          */
         LA    SRBLEN,48                                           0187
*   CCWLEN=LENGTH(SEEKADDR)+MAXSLOTS*(LENGTH(SRHADDR)+LENGTH(CCWS));
         LA    CCWLEN,408                                          0188
*                                   /* CALCULATE SIZE REQUIRED TO  0189
*                                      BUILD CHANNEL PROGRAM(S)      */
*   SQASIZE=IOSBLEN+SRBLEN+CCWLEN;  /* CALC TOTAL CORE REQUIRED      */
         LR    @15,IOSBLEN                                         0189
         ALR   @15,SRBLEN                                          0189
         ALR   @15,CCWLEN                                          0189
         ST    @15,SQASIZE                                         0189
*   DO;                             /* GETMAIN (RC) LV(SQASIZE)    0190
*                                      SP(245)                       */
*     RESPECIFY                                                    0191
*      (GPR01F,                                                    0191
*       GPR15F,                                                    0191
*       GPR00F) RESTRICTED;                                        0191
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0192
*     GPR15F=0;                     /* RC-TYPE GETMAIN               */
         SLR   GPR15F,GPR15F                                       0193
*     GPR00F=SQASIZE;               /* LENGTH REQUESTED              */
         L     @11,SQASIZE                                         0194
         LR    GPR00F,@11                                          0194
*     GPR15F=GPR15F×((245)*256);    /* SP IN BYTE 2                  */
         O     GPR15F,@CF02517                                     0195
*     SVC(120);                     /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0196
*     RESPECIFY                                                    0197
*      (GPR01F,                                                    0197
*       GPR15F,                                                    0197
*       GPR00F) UNRESTRICTED;                                      0197
*   END;                            /* GETMAIN (RC) LV(SQASIZE)    0198
*                                      SP(245)                       */
*   RFY                                                            0199
*    (R0,                                                          0199
*     R15) RSTD;                    /* RESTRICT REG 0AND 15          */
*   IF R15=SUCCESS THEN             /* GETMAIN SUCCESSFUL?           */
         LTR   R15,R15                                             0200
         BNZ   @RF00200                                            0200
*     DO;                           /* YES                           */
*       SQAPTR=R1;                  /* SAVE GETMAIN SQA PTR          */
         ST    R1,SQAPTR                                           0202
*       R0=SQAPTR;                  /* SET GETMAIN ADDRESS           */
         L     @11,SQAPTR                                          0203
         LR    R0,@11                                              0203
*       R1=SQASIZE;                 /* SET GETMAIN LENGTH            */
         L     R1,SQASIZE                                          0204
*       MVCL(R0,R14);               /* CLEAR GETMAIN WORKAREA WITH 0205
*                                      ZERO                          */
         MVCL  R0,R14                                              0205
*     END;                                                         0206
*   ELSE                            /* GETMAIN FAIL                  */
*     DO;                                                          0207
         B     @RC00200                                            0207
@RF00200 DS    0H                                                  0208
*       RTCODE=NOCORE;              /* SET RETURN CODE-NO WORKAREA   */
         LA    RTCODE,8                                            0208
*       GOTO EXIT;                  /* RETURN TO CALLER              */
         B     EXIT                                                0209
*     END;                                                         0210
*   RFY                                                            0211
*    (R0,                                                          0211
*     R15) UNRSTD;                  /* RELEASE REG 0 AND REG15       */
@RC00200 DS    0H                                                  0212
*   ESTAEPL(1:ESTPLLEN)=ESTPLFMT(1:ESTPLLEN);/* INIT PARM LIST       */
         L     @15,ESTPLLEN                                        0212
         BCTR  @15,0                                               0212
         EX    @15,@SM02520                                        0212
*   RFY                                                            0213
*     R15 RSTD;                     /* RESTRICT REG15                */
*   ESTPTR=ADDR(SQAINFO);           /* PASS SQA GETMAIN INFO TO ESTAE*/
         LA    ESTPTR,SQAINFO                                      0214
*/*          THE REASON FOR ISSUING PURGE=HALT                       */
*/*      WHEN THE ESTAE EXIT IS TAKEN, ALL OUTSTANDING REQUESTS FOR  */
*/*      I/O OPERATION WILL NOT BE SAVED.  AND I/O OPERATION WILL    */
*/*       BE IMMEDIATELY STOP. THIS MAY CAUSE THE PAGE BEEN READ OR  */
*/*      WRITTEN WITH GARBAGE IN IT.  A WARNING MESSAGE WILL BE      */
*/*      ISSUED TO THE USER BY THE CALLER OF ILRPREAD TO INDICATE    */
*/*      ABNORMAL TERMINATION HAS OCCURED AND SYSTEM CAN NOT BE      */
*/*      WARM STARTED.                                               */
*                                                                  0215
*   GEN REFS(ESTAEXIT);                                            0215
*                                     /*
 ESTAE  ESTAEXIT,PARAM=(ESTPTR),TERM=YES,PURGE=HALT,                  **
               RELATED=(ILRPREAD,'CANCEL ESTAE'),MF=(E,ESTAEPL)
*   IF R15^=SUCCESS THEN            /* ESTAE REQUEST FAIL?           */
         LTR   R15,R15                                             0216
         BZ    @RF00216                                            0216
*     DO;                           /* YES                           */
*       RTCODE=REQFAIL;             /* CAN NOT ESTABLISH ESTAE       */
         LA    RTCODE,4                                            0218
*       GOTO FREE;                  /* RETURN TO CALLER              */
         B     FREE                                                0219
*     END;                          /* END OF ESTAE FAIL             */
*   ELSE                                                           0221
*     ;                             /* ESTAE REQUEST ESTABLISHED     */
@RF00216 DS    0H                                                  0222
*   RFY                                                            0222
*     R15 UNRSTD;                   /* RELEASE REG 15                */
*   IOSBPTR=SQAPTR;                 /* SET IOSB ADDRESS              */
         L     @15,SQAPTR                                          0223
         LR    IOSBPTR,@15                                         0223
*   SRBPTR=SQAPTR+IOSBLEN;          /* SET SRB ADDRESS               */
         ALR   @15,IOSBLEN                                         0224
         LR    SRBPTR,@15                                          0224
*   SEEKPTR=SRBPTR+SRBLEN;          /* PTR TO THE CCW SEEK ADDRESS   */
         LR    SEEKPTR,SRBPTR                                      0225
         ALR   SEEKPTR,SRBLEN                                      0225
*   RFY                                                            0226
*     IDAEDB BASED(EDBPTR);         /* SET ADDRESS ABILITY TO EDB    */
*   RFY                                                            0227
*     IDAEDBHD BASED(EDBHDPTR);     /* SET ADDR. ABILITY TO EDB HDR  */
*   IF TPARB=ON THEN                /* TPARB IN USE?                 */
         L     @15,INPTR                                           0228
         TM    TPARB(@15),B'01000000'                              0228
         BNO   @RF00228                                            0228
*     DO;                           /* YES                           */
*       TPAEPTR=TABENTRY;           /* GET TPARTBLE ENTRY PTR        */
         L     TPAEPTR,TABENTRY(,@15)                              0230
*       UCBPTR=TPAEUCB;             /* GET UCB PTR                   */
         L     UCBPTR,TPAEUCB(,TPAEPTR)                            0231
*       EDBHDPTR=TPAEEDB;           /* GET EDB HEADER PTR            */
         L     @15,TPAEEDB(,TPAEPTR)                               0232
         ST    @15,EDBHDPTR                                        0232
*     END;                                                         0233
*   ELSE                            /* PART IN USE                   */
*     DO;                                                          0234
         B     @RC00228                                            0234
@RF00228 DS    0H                                                  0235
*       PAREPTR=TABENTRY;           /* GET PART ENTRY PTR            */
         L     @15,INPTR                                           0235
         L     PAREPTR,TABENTRY(,@15)                              0235
*       UCBPTR=PAREUCBP;            /* GET PTR TO UCB                */
         L     UCBPTR,PAREUCBP(,PAREPTR)                           0236
*       EDBHDPTR=PAREEDBP;          /* GET EDB HDR PTR               */
         L     @15,PAREEDBP(,PAREPTR)                              0237
         ST    @15,EDBHDPTR                                        0237
*     END;                                                         0238
*                                                                  0239
*/********************************************************************/
*/*                                                                  */
*/* BLDIOSB: SEGMENT TO BUILD IOSB TO START I/O                      */
*/*                                                                  */
*/* INPUT:   IOSB FROM GETMAIN IN SQA                                */
*/*                                                                  */
*/* PROCESS: TO INITIALIZE IOSB FOR READ/WRITE THROUGH MISCELLANEOUS */
*/*          DRIVER ID. A LOCAL LOCK IS REQUESTED FOR THIS DRIVER.   */
*/*          THE NORMAL AND ABNORMAL END APPENDAGES,AND I/O          */
*/*          TERMINATION ROUTINE WILL BE LOCATED BY IOSB.            */
*/*                                                                  */
*/* OUTPUT:  THE FOLLOWING FIELDS ARE INITIALIZED:                   */
*/*          IOSASID          IOSDCHN           IOSRST               */
*/*          IOSDVRID         IOSCCHN                                */
*/*          IOSPRLVL         IOSUCB                                 */
*/*          IOSPGAD          IOSVST                                 */
*/*          IOSNRM           IOSUSE(ECB)                            */
*/*          IOSABN           IOSFMSK                                */
*/*                                                                  */
*/********************************************************************/
*/*BLDIOSB:    CHART (AREF)                                          */
*/*HEADER                                                          0239
*/*  BUILD IOSB                                                      */
*/*BLDIOSB:    E  BUILD IOSB                                         */
*/*            P  FILL IN ASID                                       */
*/*            P  SET DRIVER ID TO MISCELLANEOUS ID                  */
*/*            P  SET PRIORITY LEVEL TO 4                            */
*/*            P  SET TERMINATION ADDRESS                            */
*/*            P  SET NORMAL APPENDAGE ADDRESS                       */
*/*            P  SET ABNORMAL APPENDAGE ADDRESS                     */
*/*            P  USE IOSUSE AS ECB                                  */
*/*            P  LOAL LOCK IS REQUIRED                              */
*/*            P  SET I/O FILE MASK                                  */
*/*            P  COMMAND AND DATA CHAINING REQUIRED                 */
*/*            P  SET UCB ADDRESS                                    */
*/*            P  SET SRB ADDRESS                                    */
*/*            R  END OF BUILDING IOSB                               */
*/*BLDIOSB:    END                                                   */
*                                                                  0239
*   ASCBPTR=PSAAOLD;                /* SET ADDRESSABILITY TO ASCB    */
@RC00228 L     @15,PSAAOLD                                         0239
         ST    @15,ASCBPTR                                         0239
*   IOSASID=ASCBASID;               /* ASM'S ASID                    */
         MVC   IOSASID(2,IOSBPTR),ASCBASID(@15)                    0240
*   IOSDVRID=IOSMISID;              /* MISCELLANEOUS DRIVER ID-'01'  */
         MVI   IOSDVRID(IOSBPTR),X'01'                             0241
*   IOSPRLVL=NQUISCFG;              /* SET PRIORITY LEVEL TO 4       */
         MVI   IOSPRLVL(IOSBPTR),X'04'                             0242
*   IOSPGAD=ADDR(PREADTRM);         /* SET TERMINATION ADDRESS       */
         LA    @11,PREADTRM                                        0243
         ST    @11,IOSPGAD(,IOSBPTR)                               0243
*   IOSNRM=ADDR(PREADNRM);          /* SET NORMAL END APPENDAGE      */
         LA    @11,PREADNRM                                        0244
         ST    @11,IOSNRM(,IOSBPTR)                                0244
*   IOSABN=ADDR(PREADABN);          /* SET ABNORMAL END APPENDAGE    */
         LA    @11,PREADABN                                        0245
         ST    @11,IOSABN(,IOSBPTR)                                0245
*   IOSFMSK=FILEMASK;               /* PAGE SPACE FILE MASK          */
         MVI   IOSFMSK(IOSBPTR),X'88'                              0246
*   IOSDCHN=ON;                     /* SET DATA CHAINING             */
*   IOSCCHN=ON;                     /* SET COMMAND CHAINING          */
         OI    IOSDCHN(IOSBPTR),B'11000000'                        0248
*   IOSUCB=UCBPTR;                  /* SET UCB ADDRESS               */
         ST    UCBPTR,IOSUCB(,IOSBPTR)                             0249
*   IOSSRB=SRBPTR;                  /* SET SRB ADDRESS               */
         ST    SRBPTR,IOSSRB(,IOSBPTR)                             0250
*                                                                  0251
*/********************************************************************/
*/*                                                                  */
*/* BLDSRB: SEGMENT TO BUILD SRB TO START I/O                        */
*/*                                                                  */
*/* INPUT:  SRB FROM GETMAIN IN SQA                                  */
*/*                                                                  */
*/* PROCESS: TO INITIALIZE SRB FOR SCHEDULE A READ/WRITE OPERATION.  */
*/*          SRB WILL CONTAIN THE CURRENT TCB ADDRESS AND ASID FOR   */
*/*          PURGE I/O WHENEVER AN ABNORMAL CONDITION OCCURRED.      */
*/*                                                                  */
*/* OUTPUT:  THE FOLLOWING FIELDS ARE INITIALIZED:                   */
*/*                                                                  */
*/*              SRBID        SRBPARM                                */
*/*              SRBPRIOR     SRBPASID                               */
*/*              SRBPTCB                                             */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*/*BLDSRB:     CHART (AREF)                                          */
*/*HEADER                                                          0251
*/*  BUILD SRB                                                       */
*/*BLDSRB:     E  BUILD SRB                                          */
*/*            P  SET SRB ID                                         */
*/*            P  SET ASID FOR PURGE                                 */
*/*            P  SET TCB ADDRESS FOR PURGE                          */
*/*            P  SET IOSB ADDRESS IN SRB PARAMETER                  */
*/*            P  SET PRIORITY LEVEL TO FOUR                         */
*/*            R  END OF BUILDING SRB                                */
*/*BLDSRB:     END                                                   */
*                                                                  0251
*   SRBID=SRBIDCHR;                 /* SET SRB ID FIELD              */
         MVC   SRBID(4,SRBPTR),SRBIDCHR                            0251
*   SRBPASID=ASCBASID;              /* SET ASM'S ASID                */
         LH    @15,ASCBASID(,@15)                                  0252
         N     @15,@CF02522                                        0252
         STH   @15,SRBPASID(,SRBPTR)                               0252
*   SRBPTCB=PSATOLD;                /* SET TCB ADDRESS               */
         L     @15,PSATOLD                                         0253
         ST    @15,SRBPTCB(,SRBPTR)                                0253
*   SRBPARM=IOSBPTR;                /* ASSOCIATE IOSB TO SRB         */
         ST    IOSBPTR,SRBPARM(,SRBPTR)                            0254
*   SRBPRIOR=NQUISCFG;              /* NON-QUIESCEABLE PRIORITY      */
         MVI   SRBPRIOR(SRBPTR),X'04'                              0255
*                                                                  0256
*/********************************************************************/
*/*                                                                  */
*/*  BLDCP: BUILD CHANNEL PROGRAM TO READ/WRITE REQUESTED SLOTS      */
*/*                                                                  */
*/*  INPUT: FRTSLOT-FIRST SLOT NUMBER                                */
*/*         TOTSLOTS-TOTAL NUMBER OF SLOTS TO BE READ/WRITTEN        */
*/*                                                                  */
*/*  PROCESS: TO BUILD CHANNEL PROGRAM TO READ AND WRITE RESQUESTD   */
*/*           SLOTS. THE MAXIMUM NUMBER OF CCWS CAN  NOT EXCEED TO   */
*/*           READ OR WRITE MORE THAN 10 SLOTS OR ACCROSS            */
*/*           CYLINDER BOUNDARY                                      */
*/*                                                                  */
*/*  OUTPUT: A CHANNEL PROGRAM WILL BE BUILT TO READ OR WRITE        */
*/*          REQUESTED SLOTS                                         */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*/*BUILDCP:        CHART (AREF)                                      */
*/*HEADER                                                          0256
*/*  BUILD CHANNEL PROGRAM                                           */
*/*BUILDCP:        E BUILDCP                                         */
*/*                P CALCULATE RBA FOR  REQUESTED SLOT               */
*/*                S CONVERT: CONVERT RBA TO MBBCCHHR                */
*/*                D (YES,,NO,%CONERR) CONVERT OK?                   */
*/*                P SET SEEK ADDRESS IN IOSB                        */
*/*%BLDCP:         P SET UP SEEK HEAD IN CCW                         */
*/*                P SET UP SEARCH ID EQUAL                          */
*/*                P SET UP TIC CCW                                  */
*/*                D (READ,,WRIT,%WRCCW) READ OR WRITE REQUESTED?    */
*/*                P (,%SETBUF) SET UP READ OP CODE IN CCW           */
*/*%WRCCW:         P SET UP WRITE OP CODE IN CCW                     */
*/*%SETBUF:        P GET BUFFER REAL ADDRESS                         */
*/*                P SET UP READ/WRITE CCW                           */
*/*                P DECREMENT COUNT OF REQUESTS                     */
*/*                D (YES,,NO,%ENDCP) MORE REQUESTS TO PROCESS?      */
*/*                P CALCULATE RBA FOR NEXT REQUESTED SLOT           */
*/*                S CONVERT: CONVERT RBA TO MBBCCHHR                */
*/*                D (YES,,NO,%CONERR) CONVERT OK?                   */
*/*                D (YES,%ENDCP,NO,) PROCESS MORE THAN 10 SLOTS?    */
*/*                D (YES,%BLDCP,NO,) REQUESTED SLOT ON SAME CYL?    */
*/*%ENDCP:         P TURN OFF CHAIN BIT IN THE LAST CCW              */
*/*                R END OF BUILD CHANNEL PROGRAM                    */
*/*%CONERR:        P SET CONVERT ERROR                               */
*/*                R END OF BUILD CHANNEL PROGRAM                    */
*/*BUILDCP:        END                                               */
*                                                                  0256
*   REQUESTS=TOTSLOTS;              /* TOTAL NUMBER OF REQUESTED I/O */
         L     @15,INPTR                                           0256
         SLR   @11,@11                                             0256
         IC    @11,TOTSLOTS(,@15)                                  0256
         ST    @11,REQUESTS                                        0256
*   SLOT=FRTSLOT;                   /* GET FIRST REQUESTED SLOT      */
         LH    @15,FRTSLOT(,@15)                                   0257
         ST    @15,SLOT                                            0257
*   CYLBREAK=OFF;                   /* INIT CHANNEL PGM NOT BUILT    */
         NI    CYLBREAK,B'01111111'                                0258
*   DO WHILE(REQUESTS^=ZERO&RTCODE=ZERO);/* PROCESS ALL I/O REQS     */
         B     @DE00259                                            0259
@DL00259 DS    0H                                                  0260
*     SRHPTR=SEEKPTR+LENGTH(SEEKADDR);/* SET SEARCH ADDR PTR         */
         LA    SRHPTR,8                                            0260
         ALR   SRHPTR,SEEKPTR                                      0260
*     CCWPTR=SRHPTR+MAXSLOTS*LENGTH(SRHADDR);/* SET CCWS PTR         */
         LA    CCWPTR,80                                           0261
         ALR   CCWPTR,SRHPTR                                       0261
*     SRHAREA=''B;                  /* INIT SEARCH ADDRESSES AREA    */
         XC    SRHAREA(80,SRHPTR),SRHAREA(SRHPTR)                  0262
*     IOSVST=CCWPTR;                /* SET CHANNEL PGM VIRTUAL ADDR  */
         ST    CCWPTR,IOSVST(,IOSBPTR)                             0263
*     R1=CCWPTR;                    /* SET INDEX REG FOR CCWS        */
         LR    R1,CCWPTR                                           0264
*     RFY                                                          0265
*       R5 RSTD;                    /* RESTRICT REG 5                */
*     GEN REFS(CCWS,R1,R5,ADDRERR) SETS(R5);                       0266
*                                            /*
    LRA  R5,CCWS(R1)
    BC   7,ADDRERR
*     IOSRST=R5;                    /* SET CHANNEL PGM REAL ADDR     */
         ST    R5,IOSRST(,IOSBPTR)                                 0267
*     RFY                                                          0268
*       R5 UNRSTD;                  /* RELEASE REG 5                 */
*     IF CYLBREAK=OFF THEN          /* CHANNEL PGM BUILT?            */
         TM    CYLBREAK,B'10000000'                                0269
         BNZ   @RF00269                                            0269
*       DO;                         /* NO                            */
*         SEEKADDR=''B;             /* INIT SEEK ADDR-MBBCCHHR       */
         XC    SEEKADDR(8,SEEKPTR),SEEKADDR(SEEKPTR)               0271
*         SEEKRBA=SLOT*PAGESIZE;    /* CALCULATE RBA                 */
         L     @15,SLOT                                            0272
         SLA   @15,12                                              0272
         ST    @15,SEEKRBA(,SEEKPTR)                               0272
*         R1=SEEKPTR;               /* SET PTR TO RBA                */
         LR    R1,SEEKPTR                                          0273
*         RFY                                                      0274
*          (R0,                                                    0274
*           R15) RSTD;              /* RESTRICT R0 AND R15           */
*         R0=EDBHDPTR;              /* PASS EDB HDR PTR              */
         L     R0,EDBHDPTR                                         0275
*         CALL ILRCNVRT;            /* INVOKE CONVERT RTN            */
         BAL   @14,ILRCNVRT                                        0276
*         IF R15^=SUCCESS THEN      /* CONVERT OK?                   */
         LTR   R15,R15                                             0277
         BZ    @RF00277                                            0277
*           RTCODE=REQFAIL;         /* NO-SET REQUEST FAIL           */
         LA    RTCODE,4                                            0278
*         RFY                                                      0279
*          (R0,                                                    0279
*           R15) UNRSTD;            /* RELEASE REG0 AND REG15        */
@RF00277 DS    0H                                                  0280
*       END;                        /* END OF CONVERT RBA            */
*     ELSE                                                         0281
*       SEEKADDR=SVSRH;             /* RESTORE SEEK ADDRESS          */
         B     @RC00269                                            0281
@RF00269 MVC   SEEKADDR(8,SEEKPTR),SVSRH                           0281
*     IF RTCODE=SUCCESS THEN        /* SEEK ADDRESS OBTAINED         */
@RC00269 LTR   RTCODE,RTCODE                                       0282
         BNZ   @RF00282                                            0282
*       DO;                                                        0283
*         SRHADDR=SEEKADDR;         /* SET SEARCH ADDR FOR 1ST SLOT
*                                      IN THE CHANNEL PROGRAM        */
         MVC   SRHADDR(8,SRHPTR),SEEKADDR(SEEKPTR)                 0284
*         IOSEEK=SEEKADDR;          /* SET STATIC SEEK ADDR          */
         MVC   IOSEEK(8,IOSBPTR),SEEKADDR(SEEKPTR)                 0285
*         IOSEEKA=SEEKADDR;         /* SET DYNAMIC SEEK ADDR         */
         MVC   IOSEEKA(8,IOSBPTR),SEEKADDR(SEEKPTR)                0286
*       END;                        /* END OF INIT SEEK ADDR         */
*     CYLBREAK=OFF;                 /* INIT NOT CROSS CYL BOUNDARY   */
@RF00282 NI    CYLBREAK,B'01111111'                                0288
*     DO I=1 TO MAXSLOTS WHILE(REQUESTS^=ZERO&/* BUILD CHANNEL PGM   */
*           CYLBREAK=OFF&           /* CHECK ON SAME CYLINDER        */
*           RTCODE=ZERO);                                          0289
         LA    @15,1                                               0289
         ST    @15,I                                               0289
@DL00289 SLR   @15,@15                                             0289
         C     @15,REQUESTS                                        0289
         BE    @DC00289                                            0289
         TM    CYLBREAK,B'10000000'                                0289
         BNZ   @DC00289                                            0289
         CR    RTCODE,@15                                          0289
         BNE   @DC00289                                            0289
*       IF SEEKADDR^=SRHADDR THEN   /* BUILD FIRST CCWS?             */
         CLC   SEEKADDR(8,SEEKPTR),SRHADDR(SRHPTR)                 0290
         BE    @RF00290                                            0290
*         DO;                       /* NO                            */
*           SRHADDR=''B;            /* INIT SEARCH ADDR              */
         XC    SRHADDR(8,SRHPTR),SRHADDR(SRHPTR)                   0292
*           SRHRBA=SLOT*PAGESIZE;   /* CALCULATE RBA FOR SLOT        */
         L     @15,SLOT                                            0293
         SLA   @15,12                                              0293
         ST    @15,SRHRBA(,SRHPTR)                                 0293
*           R1=SRHPTR;              /* SET PTR TO RBA                */
         LR    R1,SRHPTR                                           0294
*           RFY                                                    0295
*            (R0,                                                  0295
*             R15) RSTD;            /* RESTRICT REG0 AND REG5        */
*           R0=EDBHDPTR;            /* SET EDB PTR                   */
         L     R0,EDBHDPTR                                         0296
*           CALL ILRCNVRT;          /* INVOKE CONVERT RTN            */
         BAL   @14,ILRCNVRT                                        0297
*           IF R15^=SUCCESS THEN    /* CONVERT OK?                   */
         LTR   R15,R15                                             0298
         BZ    @RF00298                                            0298
*             RTCODE=REQFAIL;       /* NO-SET REQUEST FAIL           */
         LA    RTCODE,4                                            0299
*           ELSE                    /* CONVERT SUCCESS               */
*             IF CCWCC^=SRHCC THEN  /* SLOTS ON THE SAME CYL?        */
         B     @RC00298                                            0300
@RF00298 CLC   CCWCC(2,SEEKPTR),SRHCC(SRHPTR)                      0300
         BE    @RF00300                                            0300
*               DO;                 /* NO                            */
*                 SVSRH=SRHADDR;    /* SAVE SEARCH ADDR              */
         MVC   SVSRH(8),SRHADDR(SRHPTR)                            0302
*                 CYLBREAK=ON;      /* SET CYL BREAK                 */
         OI    CYLBREAK,B'10000000'                                0303
*               END;                /* END OF CYL BREAK              */
*           RFY                                                    0305
*            (R0,                                                  0305
*             R15) UNRSTD;          /* RELEASE REG 0 AND REG 15      */
@RF00300 DS    0H                                                  0305
@RC00298 DS    0H                                                  0306
*         END;                      /* END OF GET NET SLOT           */
*       ELSE                                                       0307
*         ;                         /* BUILD FIRST CCWS              */
@RF00290 DS    0H                                                  0308
*       IF(CYLBREAK=OFF&RTCODE=SUCCESS) THEN/* CHECK FOR CYL BREAK 0308
*                                      AND PREVIOUS PROCESS        0308
*                                      SUCCESSFUL                    */
         TM    CYLBREAK,B'10000000'                                0308
         BNZ   @RF00308                                            0308
         LTR   RTCODE,RTCODE                                       0308
         BNZ   @RF00308                                            0308
*         DO;                                                      0309
*           CCWS=CCWSKLN;           /* INIT READ/WRITE CCWS          */
         MVC   CCWS(32,CCWPTR),CCWSKLN                             0310
*           R1=SRHPTR;              /* SET INDEX REG FOR SEARCH ADDR */
         LR    R1,SRHPTR                                           0311
*           RFY                                                    0312
*             R5 RSTD;              /* RESTRICT REG 5                */
*           GEN REFS(R1,SRHBB,R5,ADDRERR) SETS(R5);                0313
*                                              /*
      LRA R5,SRHBB(R1)
      BC  7,ADDRERR
*           CCWSKAD=R5;             /* SET SEEK HEAD CCW PTR         */
         STCM  R5,7,CCWSKAD(CCWPTR)                                0314
*           GEN REFS(R1,SRHCC,R5,ADDRERR) SETS(R5);                0315
*                                             /*
       LRA   R5,SRHCC(R1)
        BC   7,ADDRERR
*           CCWSIAD=R5;             /* INIT SEARCH ID ADDR           */
         STCM  R5,7,CCWSIAD(CCWPTR)                                0316
*           R1=CCWPTR;              /* SET INDEX REG FOR CCWS        */
         LR    R1,CCWPTR                                           0317
*           GEN REFS(CCWSRCH,R1,R5,ADDRERR) SETS(R5);              0318
*                                              /*
      LRA  R5,CCWSRCH(R1)
      BC   7,ADDRERR
*           CCWTAD=R5;              /* SET REAL SEARCH ADDR IN TIC   */
         STCM  R5,7,CCWTAD(CCWPTR)                                 0319
*           IF WRIT=ON THEN         /* WRITE REQUESTED?              */
         L     @15,INPTR                                           0320
         TM    WRIT(@15),B'10000000'                               0320
         BNO   @RF00320                                            0320
*             CCWRDWT=WRITEOP;      /* SET WRITE OP CODE             */
         MVI   CCWRDWT(CCWPTR),X'05'                               0321
*           ELSE                                                   0322
*             CCWRDWT=READOP;       /* SET READ OP CODE              */
         B     @RC00320                                            0322
@RF00320 MVI   CCWRDWT(CCWPTR),X'06'                               0322
*           R1=INBUF;               /* SET INDEX REG FOR INPUT BUFFER*/
@RC00320 L     R1,INBUF                                            0323
*           GEN REFS(R1,R5,ADDRERR) SETS(R5);                      0324
*                                       /*
      LRA   R5,0(R1)
       BC    7,ADDRERR
*           CCWRWAD=R5;             /* SET REAL ADDRESS OF READ/WRITE
*                                      BUFFER                        */
         STCM  R5,7,CCWRWAD(CCWPTR)                                0325
*           RFY                                                    0326
*             R5 UNRSTD;            /* RELEASE REG 5                 */
*           CCWPTR=CCWPTR+LENGTH(CCWS);/* UPDATE CCWS PTR            */
         AL    CCWPTR,@CF00066                                     0327
*           SRHPTR=SRHPTR+LENGTH(SRHADDR);/* UPDATE SEARCH ADDR PTR  */
         AL    SRHPTR,@CF00056                                     0328
*           INBUF=INBUF+PAGESIZE;   /* UPDATE BUFFER PTR             */
         L     @15,@CF02414                                        0329
         AL    @15,INBUF                                           0329
         ST    @15,INBUF                                           0329
*           REQUESTS=REQUESTS-ONE;  /* DECREMENT NUMBER OF REQUEST   */
         L     @15,REQUESTS                                        0330
         BCTR  @15,0                                               0330
         ST    @15,REQUESTS                                        0330
*           SLOT=SLOT+ONE;          /* GET NEXT SLOT                 */
         LA    @15,1                                               0331
         AL    @15,SLOT                                            0331
         ST    @15,SLOT                                            0331
*         END;                      /* END OF BUILD ONE SET OF CCWS
*                                      FOR READ/WRITE                */
*     END;                          /* END OF BUILDING CHANNEL PGM   */
@RF00308 LA    @15,1                                               0333
         AL    @15,I                                               0333
         ST    @15,I                                               0333
         C     @15,@CF02419                                        0333
         BNH   @DL00289                                            0333
@DC00289 DS    0H                                                  0334
*     IF RTCODE=SUCCESS THEN        /* CHANNEL PGM BUILT SUCCESSFUL  */
         LTR   RTCODE,RTCODE                                       0334
         BNZ   @RF00334                                            0334
*       DO;                         /* YES                           */
*         CCWPTR=CCWPTR-LENGTH(CCWS);/* BACK UP TO LAST CCW          */
         SL    CCWPTR,@CF00066                                     0336
*         CCWRWFG=''B;              /* TURN OFF THE CHAIN BIT        */
         XC    CCWRWFG(2,CCWPTR),CCWRWFG(CCWPTR)                   0337
*                                                                  0338
*/********************************************************************/
*/*                                                                  */
*/*  STARTIO: START READ/WRITE REQUESTED SLOTS                       */
*/*                                                                  */
*/*  INPUT:   IOSB                                                   */
*/*           SRB                                                    */
*/*           CCWS                                                   */
*/*                                                                  */
*/*  PROCESS: TO READ/WRITE SLOTS BY USING STARTIO MACRO             */
*/*                                                                  */
*/*  OUTPUT:  A SET OF SLOTS WILL BE READ/WRITTEN FROM/ON A DATASET  */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0338
*         SVIOSB=IOSB;              /* SAVE IOSB FOR RETRY           */
         MVC   SVIOSB(108),IOSB(IOSBPTR)                           0338
*         RETRY=OFF;                /* INIT RETRY SWITCH             */
*         IOEND=OFF;                /* INIT IO STARTED               */
         NI    RETRY,B'10011111'                                   0340
*         DO WHILE(RTCODE=ZERO&IOEND=OFF);/* PROCESS READ OR WRITE   */
         B     @DE00341                                            0341
@DL00341 DS    0H                                                  0342
*           IF RETRY=ON THEN        /* REQUIRE RETRY?                */
         TM    RETRY,B'00100000'                                   0342
         BNO   @RF00342                                            0342
*             IOSB=SVIOSB;          /* YES-RESET IOSB                */
         MVC   IOSB(108,IOSBPTR),SVIOSB                            0343
*           R1=IOSSRB;              /* SET PTR TO SRB                */
@RF00342 L     R1,IOSSRB(,IOSBPTR)                                 0344
*           GEN REFS(CVTPTR,CVTMAP,CVTIXAVL,IOCOM,IOCSTIO,R1,LINKREG,
*               BASEREG,RSAVE) SETS(LINKREG,BASEREG);              0345
*                                                 /*
        STM LINKREG,BASEREG,0(RSAVE)
        STARTIO SRB=(1),TCB=SRB
        LM  LINKREG,BASEREG,0(RSAVE)
*           R1=ADDR(IOSUSE);        /* SET PTR TO ECB                */
         LA    R1,IOSUSE(,IOSBPTR)                                 0346
*           GEN;                                                   0347
*                                      /*
        WAIT ECB=(1),                                                 **
                RELATED=('ECB IS POSTED IN IOS TERMINATION ROUTINE')
*           IF IOSCOD^=IOSNRMC THEN /* IO NORMAL COMPLETION? NO      */
         CLI   IOSCOD(IOSBPTR),X'7F'                               0348
         BE    @RF00348                                            0348
*             IF(IOSCOD=IOSABNC&    /* IO GOT PGM/MACHINE CHECK      */
*                 RETRY=OFF) THEN   /* NOT RETRY YET                 */
         CLI   IOSCOD(IOSBPTR),X'45'                               0349
         BNE   @RF00349                                            0349
         TM    RETRY,B'00100000'                                   0349
         BNZ   @RF00349                                            0349
*               RETRY=ON;           /* SET GOING TO RETRY            */
         OI    RETRY,B'00100000'                                   0350
*             ELSE                                                 0351
*               RTCODE=REQFAIL;     /* SET REQUEST FAILED            */
         B     @RC00349                                            0351
@RF00349 LA    RTCODE,4                                            0351
*           ELSE                    /* IO SUCCESSFULLY COMPLETED     */
*             IOEND=ON;             /* IO COMPLETED                  */
         B     @RC00348                                            0352
@RF00348 OI    IOEND,B'01000000'                                   0352
*         END;                      /* END OF START IO               */
@RC00348 DS    0H                                                  0353
@DE00341 LTR   RTCODE,RTCODE                                       0353
         BNZ   @DC00341                                            0353
         TM    IOEND,B'01000000'                                   0353
         BZ    @DL00341                                            0353
@DC00341 DS    0H                                                  0354
*         IF(REQUESTS^=ZERO&RTCODE=ZERO) THEN/* ALL REQUESTS       0354
*                                      PROCESSED?                    */
         SLR   @15,@15                                             0354
         C     @15,REQUESTS                                        0354
         BE    @RF00354                                            0354
         CR    RTCODE,@15                                          0354
         BNE   @RF00354                                            0354
*           IOSB=SVIOSB;            /* NO-RESET IOSB                 */
         MVC   IOSB(108,IOSBPTR),SVIOSB                            0355
*       END;                        /* END OF START IO               */
*     ELSE                                                         0357
*       ;                           /* CHANNEL PGM BUILT FAIL        */
@RF00334 DS    0H                                                  0358
*   END;                            /* END OF PROCESSING ALL REQS    */
@RC00334 DS    0H                                                  0358
@DE00259 SLR   @15,@15                                             0358
         C     @15,REQUESTS                                        0358
         BE    @DC00259                                            0358
         CR    RTCODE,@15                                          0358
         BE    @DL00259                                            0358
@DC00259 DS    0H                                                  0359
*                                                                  0359
*/********************************************************************/
*/*                                                                  */
*/*  TERMRTN: TERMINATION ROUTINE                                    */
*/*                                                                  */
*/*  INPUT:   SQAPTR -GETMAIN PTR IN SQA                             */
*/*           SQASIZE-GETMAIN SIZE IN SQA                            */
*/*                                                                  */
*/*  PROCESS: 1.FREE ALL OBTAINED STORAGE IN SQA FOR IOSB,SRB AND    */
*/*             CCWS                                                 */
*/*           2.CANCEL ESTAE                                         */
*/*           3.RETURN TO CALLER                                     */
*/*                                                                  */
*/*  OUTPUT:  REGISTER 15 WILL CONTAIN RETURN CODE                   */
*/*                0 IO SUCCESSFULLY COMPLETED                       */
*/*                4 IO FAIL-IO ERROR OR SEEK ADDRESS CONVERSION ERR */
*/*                8 SQA NOT AVAILABLE FOR BUILDING CONTROL BLOCKS   */
*/*                  -IOSB,SRB,CCWS                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0359
*   GEN;                                                           0359
*                                          /*
    ESTAE 0,RELATED=(ILRPREAD,'ISSUE ESTAE')
*FREE:                                                             0360
*   RFY                                                            0360
*     SQAAREA BASED(SQAPTR);        /* SET PTR TO SQA GETMAIN AREA   */
FREE     DS    0H                                                  0361
*   DO;                             /* FREEMAIN(RC)                0361
*                                      LV(SQASIZE)A(SQAAREA) SP(245) */
*     RESPECIFY                                                    0362
*      (GPR01F,                                                    0362
*       GPR15F,                                                    0362
*       GPR00F) RESTRICTED;                                        0362
*     GPR01F=0;                     /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0363
*     GPR15F=1;                     /* SET TYPE                      */
         LA    GPR15F,1                                            0364
*     GPR00F=SQASIZE;               /* LENGTH REQUESTED              */
         L     GPR00F,SQASIZE                                      0365
*     GPR01F=ADDR(SQAAREA);         /* SET REGISTER ONE              */
         L     GPR01F,SQAPTR                                       0366
*     GPR15F=GPR15F+((245)*256);    /* SUBPOOL VALUE                 */
         AL    GPR15F,@CF02517                                     0367
*     SVC(120);                     /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0368
*     RESPECIFY                                                    0369
*      (GPR01F,                                                    0369
*       GPR15F,                                                    0369
*       GPR00F) UNRESTRICTED;                                      0369
*   END;                            /* FREEMAIN(RC)                0370
*                                      LV(SQASIZE)A(SQAAREA) SP(245) */
*EXIT:                                                             0371
*   RSAVE=R13SAVE;                  /* RESTORE REG13 FOR SAVEAREA    */
EXIT     L     RSAVE,R13SAVE                                       0371
*   RETURN CODE(RTCODE);            /* RETURN TO CALLER              */
         L     @00,@SIZDATD                                        0372
         LR    @01,@09                                             0372
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@10                                             0372
         L     @14,12(,@13)                                        0372
         LM    @00,@12,20(@13)                                     0372
         BR    @14                                                 0372
*ADDRERR:                                                          0373
*   RTCODE=REQFAIL;                 /* FIND INVALID ADDRESS          */
ADDRERR  LA    RTCODE,4                                            0373
*   GOTO FREE;                                                     0374
         B     FREE                                                0374
*                                                                  0375
*/********************************************************************/
*/*                                                                  */
*/*  IORTNS:  IOS NORMAL,ABNORMAL END APPENDAGES AND A TERMINATION   */
*/*           ROUTINE                                                */
*/*                                                                  */
*/*  INPUT:  NONE FOR APPENDAGES                                     */
*/*          IOSBPTR FOR TERMINATION ROUTINE                         */
*/*                                                                  */
*/*  PROCESS:  THE APPENDAGES ARE NULL ROUTINES. THE TERMINATION     */
*/*            ROUTINE POSTS THE MAINLINE THAT I/O HAS COMPLETED     */
*/*                                                                  */
*/*  OUTPUT:   NONE FOR APPENDATES                                   */
*/*            I/O COMPLETION POSTED AND LOCAL LOCK RELEASED FOR     */
*/*            TERMINATION ROUTINE                                   */
*/*                                                                  */
*/********************************************************************/
*/*IORTNS:         CHART (AREF)                                      */
*/*HEADER                                                          0375
*/*  I/O APPENDATES AND TERMINATION ROUTINE                          */
*/*PREADNRM:       E NORMAL END APPENDAGE                            */
*/*                N NULL ROUTINE                                    */
*/*                R RETURN TO IOS                                   */
*/*PREADABN:       E ABNORMAL END APPENDAGE                          */
*/*                N NULL ROUTINE                                    */
*/*                R RETURN TO IOS                                   */
*/*PREADTRM:       E TERMINATION ROUTINE                             */
*/*                S POST: INDICATE I/O COMPLETE                     */
*/*                S SETLOCK: FREE LOCAL LOCK                        */
*/*                R RETURN TO DISPATCHER                            */
*/*IORTNS:         END                                               */
*                                                                  0375
*                                                                  0375
*/********************************************************************/
*/*                                                                  */
*/* PREADNRM                                                         */
*/* PREADABN: ILRPREAD NORMAL AND ABNORMAL END APPENDAGES            */
*/*                                                                  */
*/* INPUT: NONE                                                      */
*/*                                                                  */
*/* PROCESS: BRANCH BACK TO IOS                                      */
*/*                                                                  */
*/* OUTPUT: NONE                                                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0375
*PREADNRM:                                                         0375
*PREADABN:                                                         0375
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0375
PREADNRM DS    0H                                                  0375
PREADABN DS    0H                                                  0376
*   RETURN;                         /* RETURN TO IOS-CALLER          */
@EL00002 DS    0H                                                  0376
@EF00002 DS    0H                                                  0376
@ER00002 BR    @14                                                 0376
*   END PREADNRM;                                                  0377
*                                                                  0378
*/********************************************************************/
*/*                                                                  */
*/* PREADTRM: ILRPREAD TERMINATION APPENDAGE                         */
*/*                                                                  */
*/* INPUT: IOSBPTR-PTR TO IOSB                                       */
*/*                                                                  */
*/*                                                                  */
*/* PROCESS: POST I/O COMPLETION  TO MAIN ROUTINE                    */
*/*          ALSO RELEASE THE LOCAL LOCK WHICH IS OBTAINED BY IOS    */
*/*                                                                  */
*/* OUTPUT: I/O COMPLETION POSTED                                    */
*/*         LOCAL LOCK RELEASED                                      */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0378
*PREADTRM:                                                         0378
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0378
*                                                                  0378
PREADTRM DS    0H                                                  0379
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ADDRESSABILITY                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0379
*   GEN REFS(BASEREG,R15,PREADTRM) SETS(BASEREG,R15);              0379
*                                                  /*
        LR BASEREG,R15
        LA R15,PREADTRM-@PSTART
        SR BASEREG,R15
*   RFY                                                            0380
*     IOSB BASED(R1);               /* GET PTR TO IOSB               */
*   RFY                                                            0381
*    (R7,                                                          0381
*     R8) RSTD;                     /* RESTRICT REG 7 AND REG 8      */
*   R7=LINKREG;                     /* SAVE DISPATCHER ADDR          */
         LR    R7,LINKREG                                          0382
*   R8=RSAVE;                       /* SAVE REG 13                   */
         LR    R8,RSAVE                                            0383
*   RFY                                                            0384
*    (R10,                                                         0384
*     R11) RSTD;                    /* RESTRICT REG10,AND 11         */
*   R10=ZERO;                       /* NO COMPLETION CODE            */
         SLR   R10,R10                                             0385
*   R11=ADDR(IOSUSE);               /* PTR TO ECB(IOSUSE)            */
         LA    R11,IOSUSE(,R1)                                     0386
*   CALL POSTRTN;                   /* CALL POST ROUTINE             */
         L     @06,CVTPTR                                          0387
         L     @15,CVT0PT01(,@06)                                  0387
         BALR  @14,@15                                             0387
*   GEN REFS(PSALITA,FLC);                                         0388
*                          /*
    SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                              **
               RELATED=(LOCAL,'LOCK OBTAINED BY IOS')
*   RFY                                                            0389
*    (R10,                                                         0389
*     R11) UNRSTD;                  /* RELEASE REG 10 AND REG 11     */
*   RSAVE=R8;                       /* RESTORE REG 13                */
         LR    RSAVE,R8                                            0390
*   LINKREG=R7;                     /* RESTORE REG 14                */
         LR    LINKREG,R7                                          0391
*   RFY                                                            0392
*    (R7,                                                          0392
*     R8) UNRSTD;                   /* RELEASE R7 AND R8             */
*   RETURN;                         /* RETURN TO DISPATCHER          */
@EL00003 DS    0H                                                  0393
@EF00003 DS    0H                                                  0393
@ER00003 BR    @14                                                 0393
*   END PREADTRM;                                                  0394
*                                                                  0395
*/********************************************************************/
*/*                                                                  */
*/* ESTAEXIT: ESTAE EXIT ROUTINE                                     */
*/*                                                                  */
*/* INPUT:    INPUT PARAMETER LIST WHICH EITHER IS CONTAINED IN      */
*/*           SDWA OR IN REGISTER 2.                                 */
*/*           INPUT PARAMETER LIST CONTAINS AS FOLLOW:               */
*/*                                                                  */
*/*                       GETMAIN PTR FROM SQA                       */
*/*                       GETMAIN LENGTH FROM SQA                    */
*/*                                                                  */
*/*                                                                  */
*/* PROCESS:  FREE THE STORAGE AREA IF IT IS OBTAINED FROM SQA       */
*/*           IF SDWA IS OBTAINED. OTHERWISE , THE STORAGE WILL      */
*/*           NOT BE FREED                                           */
*/*                                                                  */
*/* OUTPUT:   OBTAINED STORAGE AREA IS FREED                         */
*/*                                                                  */
*/********************************************************************/
*/*ESTAEXIT:   CHART (AREF)                                          */
*/*HEADER                                                          0395
*/*  ILRPREAD ESTAE EXIT ROUTINE                                     */
*/*ESTAEXIT:   E  PREAD ESTAE EXIT RTN                               */
*/*            D  (YES,,NO,%ESTAE40) SDWA AVAILABLE?                 */
*/*            P  GET SQA GETMAIN INFORMATION FROM SDWA PARAM        */
*/*            S  FREEMAIN: FREE OBTAINED SQA AREA                   */
*/*            S  SETRP: SET RETURN PARAMETERS                       */
*/*%ESTAE40:   R  RETURN TO CALLER WITH RETURN CODE ZERO             */
*/*ESTAEXIT:   END                                                   */
*                                                                  0395
*ESTAEXIT:                                                         0395
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0395
ESTAEXIT DS    0H                                                  0396
*   GEN REFS(BASEREG,R15,ESTAEXIT) SETS(BASEREG,R15);              0396
*                                                   /*
        LR BASEREG,R15
        LA R15,ESTAEXIT-@PSTART
        SR BASEREG,R15
*   RFY                                                            0397
*     R0 RSTD;                      /* RESTRICT REG 0                */
*   IF R0^=NOSDWA THEN              /* SDWA AVAILABLE?               */
         C     R0,@CF02428                                         0398
         BE    @RF00398                                            0398
*     DO;                           /* YES                           */
*       GEN REFS(LINKREG,BASEREG,R13)( STM LINKREG,BASEREG,12(R13));
          STM LINKREG,BASEREG,12(R13)
*       SDWAPTR=R1;                 /* GET SDWA ADDRESS              */
         LR    SDWAPTR,R1                                          0401
*       ESTPTR=SDWAPARM;            /* GET PTR TO ESTAE PARM LIST    */
         L     ESTPTR,SDWAPARM(,SDWAPTR)                           0402
*       RFY                                                        0403
*         SQAAREA BASED(ESTSQAPR);  /* SET PTR TO SQA GETMAIN AREA   */
*       DO;                         /* FREEMAIN(RC)                0404
*                                      LV(ESTSQASZ)A(SQAAREA) SP(245)*/
*         RESPECIFY                                                0405
*          (GPR01F,                                                0405
*           GPR15F,                                                0405
*           GPR00F) RESTRICTED;                                    0405
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0406
*         GPR15F=1;                 /* SET TYPE                      */
         LA    GPR15F,1                                            0407
*         GPR00F=ESTSQASZ;          /* LENGTH REQUESTED              */
         L     GPR00F,ESTSQASZ(,ESTPTR)                            0408
*         GPR01F=ADDR(SQAAREA);     /* SET REGISTER ONE              */
         L     GPR01F,ESTSQAPR(,ESTPTR)                            0409
*         GPR15F=GPR15F+((245)*256);/* SUBPOOL VALUE                 */
         AL    GPR15F,@CF02517                                     0410
*         SVC(120);                 /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0411
*         RESPECIFY                                                0412
*          (GPR01F,                                                0412
*           GPR15F,                                                0412
*           GPR00F) UNRESTRICTED;                                  0412
*       END;                        /* FREEMAIN(RC)                0413
*                                      LV(ESTSQASZ)A(SQAAREA) SP(245)*/
*       R1=SDWAPTR;                 /* SET PARAM TO SDWA             */
         LR    R1,SDWAPTR                                          0414
*       DO;                         /* SETRP RC(0)                   */
*         RESPECIFY                                                0416
*          (GPR00P,                                                0416
*           GPR01P,                                                0416
*           GPR14P,                                                0416
*           GPR15P) RSTD;                                          0416
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0417
*         RESPECIFY                                                0418
*          (GPR00P,                                                0418
*           GPR01P,                                                0418
*           GPR14P,                                                0418
*           GPR15P) UNRSTD;                                        0418
*       END;                                                       0419
*       GEN REFS(LINKREG,BASEREG,R13) SETS(LINKREG,BASEREG)        0420
*           ( LM LINKREG,BASEREG,12(R13));                         0420
          LM LINKREG,BASEREG,12(R13)
*     END;                          /* END OF FREE SQA               */
*   RFY                                                            0422
*     R0 UNRSTD;                    /* RELEASE REG 0                 */
@RF00398 DS    0H                                                  0423
*   RETURN CODE(ZERO);              /* RETURN TO CALLER              */
         SLR   @15,@15                                             0423
@EL00004 DS    0H                                                  0423
@EF00004 DS    0H                                                  0423
@ER00004 BR    @14                                                 0423
*   END ESTAEXIT;                                                  0424
*                                                                  0425
*/* MACCOMP Y-4SCICW/PZD81                                           */
*/* MACSTAT Y-475152/415304                                          */
*/*A 000000-999999                                           @Z40WPWF*/
*/********************************************************************/
*/*                                                                  */
*/* NAME: ILRCNVRT                                                   */
*/*                                                                  */
*/* STATUS: OS/VS2 RELEASE 4.1, LEVEL 0                              */
*/*                                                                  */
*/* ENTRY POINT: ILRCNVRT                                            */
*/*                                                                  */
*/* FUNCTION: CONVERT AN RBA TO A FULL SEEK ADDRESS- MBBCCHHR        */
*/*                                                                  */
*/* INPUT: R0- EDB HEADER ADDRESS                                    */
*/*        R1- POINTER TO 8 BYTE AREA TO STORE SEEK ADDRESS          */
*/*            WORD 1- RBA TO BE CONVERTED                           */
*/*        R13- SAVE AREA POINTER                                    */
*/*        R14- RETURN ADDRESS                                       */
*/*                                                                  */
*/* PROCESS: CONVERTS AN RBA TO MBBCCHHR USING THE EDB AND LPMB.     */
*/*                                                                  */
*/* OUTPUT: MBBCCHHR IN 8 BYTE AREA POINTED TO BY REG 1              */
*/*         R15- RETURN CODE                                         */
*/*              0 - CONVERSION OK                                   */
*/*              4- EDB NOT FOUND FOR THIS RBA                       */
*/*                                                                  */
*/* EXIT-NORMAL: RETURN TO CALLER                                    */
*/*              R15= 0                                              */
*/*                                                                  */
*/* EXIT-ERROR: RETURN TO CALLER                                     */
*/*              R15= 4                                              */
*/*                                                                  */
*/* EXTERNAL REFERENCES: NONE                                        */
*/*                                                                  */
*/* REGISTERS CLOBBERED: REGISTERS SAVED UPON ENTRY                  */
*/*                      THEN REGS 0-5 USED FOR PROCESSING           */
*/*                      UPON RETURN, ALL REGS RESTORED EXCEPT       */
*/*                      R15 WHICH CONTAINS THE RETURN CODE          */
*/*                                                                  */
*/* MAPPING MACROS USED:  IDAEDB                                     */
*/*                       IDALPMB                                    */
*/*                                                                  */
*/* NOTES: THE CALLING MODULE MUST INCLUDE THE MAPPING MACROS LISTED */
*/*        ABOVE. ADDRESSABILITY FOR THESE MACROS WILL BE SET UP IN  */
*/*        THIS ROUTINE.                                             */
*/*        ALL LABELS AND DATA AREAS CREATED BY THIS ROUTINE BEGIN   */
*/*        WITH THE FIVE CHARACTERS 'CNVRT'.                         */
*/*        THIS ROUTINE REQUIRES THAT THE CALLING MODULE DECLARE     */
*/*        REGISTERS AS R0-R15.                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0425
*                                                                  0425
*/*ILRCNVRT: CHART                                                   */
*/* HEADER                                                         0425
*/*  ILRCNVRT:  ASM CONVERT ROUTINE                                  */
*/*ILRCNVRT:  E CONVERT RBA TO SEEK ADDR                             */
*/* P SET UP PTR TO EDB HDR                                          */
*/* P SET UP PTR TO 1ST EDB ENTRY                                    */
*/* P PICK UP RBA FROM INPUT PARMS                                   */
*/* P INITIALIZE RETURN CODE TO 4                                    */
*/* N LOOP WHILE R15 = 4                                             */
*/*%CNV1: D (NO,,YES,%CNV4) ALL EDB ENTRIES TRIED?                   */
*/*       D (YES,,NO,%CNV4) RETURN CODE STILL 4?                     */
*/*       D (YES,,NO,%CNV2) RBA IN THIS EDB ENTRY                    */
*/* P (,%CNV1) SET RETURN CODE TO ZERO                               */
*/*%CNV2: P (,%CNV1) UPDATE TO NEXT EDB ENTRY                        */
*/* N END OF LOOP                                                    */
*/*%CNV4: D (YES,,NO,%CNVEXT)  EDB ENTRY FOUND?                      */
*/* P GET LPMB ADDRESS                                               */
*/* P ZERO 8 BYTE OUTPUT AREA                                        */
*/* P GET RELATIVE RBA PER THIS EXTENT                               */
*/* P SET UP EXTENT NUMBER- M                                        */
*/* P CALCULATE RELATIVE CYLINDER FOR DATA SET                       */
*/* P CALCULATE RELATIVE TRACK FOR DATA SET                          */
*/* P CALCULATE RECORD NUMBER- R                                     */
*/* P CALCULATE ACTUAL CYLINDER FOR DEVICE                           */
*/* P CALCULATE ACTUAL TRACK FOR DEVICE                              */
*/*%CNVEXT: R RETURN TO CALLER                                       */
*/*ILRCNVRT: END                                                     */
*                                                                  0425
*ILRCNVRT:                                                         0425
*   PROC OPTIONS(NOSAVEAREA);                                      0425
ILRCNVRT STM   @14,@12,12(@13)                                     0425
*   DCL                                                            0426
*     1 CNVRTSKA CHAR(8) BASED(R1)  /* FULL SEEK ADDRESS             */
*           BDY(DWORD),                                            0426
*      2 CNVRTM CHAR(1),            /* EXTENT NUMBER                 */
*      2 * CHAR(2),                 /* BIN NUMBER                    */
*      2 CNVRTCC CHAR(2),           /* CYLINDER NUMBER               */
*      2 CNVRTHH CHAR(2),           /* TRACK (HEAD) NUMBER           */
*      2 CNVRTR CHAR(1);            /* RECORD NUMBER                 */
*   DCL                                                            0427
*     CNVRTBAD FIXED(31) CONSTANT(4);/* BAD RETURN CODE              */
*   DCL                                                            0428
*     CNVRTOK FIXED(31) CONSTANT(0);/* GOOD RETURN CODE              */
*   DCL                                                            0429
*     CNVRTRBA FIXED(31) DEFINED(CNVRTSKA);                        0429
*   DCL                                                            0430
*     CNVRTONE FIXED(31) CONSTANT(1);/* CONSTANT OF ONE              */
*   RFY                                                            0431
*    (R0,                                                          0431
*     R1,                                                          0431
*     R2) RSTD;                     /* SAVE PARM REGISTERS           */
*   R2=R0;                          /* SET UP EDBHDPTR IN REG2       */
         LR    R2,R0                                               0432
*   RFY                                                            0433
*     R0 UNRSTD;                    /* NO NEED FOR R0                */
*   RFY                                                            0434
*     R3 RSTD;                                                     0434
*   R3=R2+LENGTH(IDAEDBHD);         /* POINT R3 TO FIRST EDB ENTRY   */
         LA    R3,8                                                0435
         ALR   R3,R2                                               0435
*   RFY                                                            0436
*     R5 RSTD;                                                     0436
*   R5=CNVRTRBA;                    /* RBA TO BE CONVERTED           */
         L     R5,CNVRTRBA(,R1)                                    0437
*   RFY                                                            0438
*    (R4,                                                          0438
*     R15) RSTD;                                                   0438
*   R15=CNVRTBAD;                   /* INITIALIZE RETURN CODE        */
         LA    R15,4                                               0439
*   DO R4=R2->EDBNO TO 1 BY-1       /* LOOP THROUGH EDB ENTRIES      */
*         WHILE R15=CNVRTBAD;                                      0440
         SLR   R4,R4                                               0440
         IC    R4,EDBNO(,R2)                                       0440
         B     @DE00440                                            0440
@DL00440 C     R15,@CF00038                                        0440
         BNE   @DC00440                                            0440
*     IF R5=>R3->EDBLORBA&          /* IF RBA IN THIS EXTENT         */
*         R5<=R3->EDBHIRBA THEN     /* THEN RESET RETURN CODE        */
         CL    R5,EDBLORBA(,R3)                                    0441
         BL    @RF00441                                            0441
         CL    R5,EDBHIRBA(,R3)                                    0441
         BH    @RF00441                                            0441
*       R15=CNVRTOK;                                               0442
         SLR   R15,R15                                             0442
*     ELSE                          /* ELSE, CHECK NEXT ENTRY        */
*       R3=R3+R2->EDBLEN;                                          0443
         B     @RC00441                                            0443
@RF00441 AH    R3,EDBLEN(,R2)                                      0443
*   END;                                                           0444
@RC00441 BCTR  R4,0                                                0444
@DE00440 LTR   R4,R4                                               0444
         BP    @DL00440                                            0444
@DC00440 DS    0H                                                  0445
*   IF R15=CNVRTOK                  /* IF FOUND EDB ENTRY,           */
*     THEN                                                         0445
         LTR   R15,R15                                             0445
         BNZ   @RF00445                                            0445
*     DO;                           /* THEN DO CONVERSION            */
*/*                                                                  */
*/*                 FOUND EDB ENTRY                                  */
*/*                                                                  */
*                                                                  0447
*       R2=R3->EDBLPMBA;            /* GET LPMB ADDRESS              */
         L     R2,EDBLPMBA(,R3)                                    0447
*       CNVRTSKA=''B;               /* ZERO FULL SEEK ADDRESS        */
         XC    CNVRTSKA(8,R1),CNVRTSKA(R1)                         0448
*       R5=R5-R3->EDBLORBA;         /* RELATIVE RBA THIS EXTENT      */
         SL    R5,EDBLORBA(,R3)                                    0449
*       CNVRTM=R3->EDBM;            /* SET UP EXTENT NUMBER          */
         IC    @08,EDBM(,R3)                                       0450
         STC   @08,CNVRTM(,R1)                                     0450
*/*                                                                  */
*/*          OPTIMIZE CODE BY USING ASSEMBLER FOR DIVISION           */
*/*                                                                  */
*                                                                  0451
*       GENERATE REFS(LPMAUSZ,LPMBPTRK,LPMBLKSZ,R2,R4,R5,CNVRTCC,  0451
*           CNVRTHH);                                              0451
*
*           CNVRTCC = REL RBA / BYTES PER ALLOCATION UNIT
*           R5= R5 / LPMAUSZ
*           R4= R5 // LPMAUSZ
*
            SR   R4,R4                 ZERO EVEN REGISTER
            D    R4,LPMAUSZ(,R2)       RBA / BYTES PER ALLOC UNIT
            STCM R5,3,CNVRTCC(R1)      RELATIVE CYL VALVE
            LR   R5,R4                 REMAINDER= RELATIVE TRACK
*
*           CNVRTHH = RELATIVE TRACK / BYTES PER TRACK
*           R5= R5 / LPMBPTRK
*           R4= R5 // LPMBPTRK
*
            SR   R4,R4                 ZERO EVEN REGISTER
            D    R4,LPMBPTRK(,R2)      REL TRACK / BYTES PER TRACK
            STCM R5,3,CNVRTHH(R1)      RELATIVE TRACK VALVE
*
*           CNVRTR= (( RELATIVE RECORD + BLOCKSIZE -1) / BLOCKSIZE)+1
*                R7= ( R6 + LPMBLKSZ - 1 ) / LPMBLKSZ
*
            A    R4,LPMBLKSZ(,R2)      ADD PHYSICAL BLOCKSIZE
            BCTR R4,0                  SUBTRACT 1 FOR ROUNDING
            LR   R5,R4                 SET UP FOR DIVISION
            SR   R4,R4                 ZERO EVEN REGISTER
            D    R4,LPMBLKSZ(,R2)      DIVIDE BY BLOCKSIZE
*       CNVRTR=R5+CNVRTONE;         /* RECORD NUMBER                 */
         LA    @08,1                                               0452
         ALR   @08,R5                                              0452
         STC   @08,CNVRTR(,R1)                                     0452
*/*                                                                  */
*/*      CNVRTCC=(CNVRTCC * LPMTRKAU + CNVRTHH + EDBSTTRK)/ LPMTPC   */
*/*      CNVRTHH=(CNVRTCC * LPMTRKAU + CNVRTHH + EDBSTTRK)// LPMTPC  */
*/*                                                                  */
*                                                                  0453
*       R5=CNVRTCC*(R2->LPMTRKAU)+CNVRTHH+(R3->EDBSTTRK);          0453
         SLR   R5,R5                                               0453
         ICM   R5,3,CNVRTCC(R1)                                    0453
         MH    R5,LPMTRKAU(,R2)                                    0453
         SLR   @08,@08                                             0453
         ICM   @08,3,CNVRTHH(R1)                                   0453
         ALR   R5,@08                                              0453
         AL    R5,EDBSTTRK(,R3)                                    0453
*       GENERATE REFS(LPMTPC,R3,R4,R5,R2,R1,CNVRTCC,CNVRTHH);      0454
*
*           CNVRTCC= R5 / LPMTPC
*           CNVRTHH= R5 // LPMTPC
*
            SR    R4,R4                ZERO EVEN REGISTER
            LH    R3,LPMTPC(,R2)       PICK UP TRACKS PER CYLINDER
            DR   R4,R3                 R5 / LPMTPC
            STCM R5,3,CNVRTCC(R1)      ACTUAL CYLINDER ADDRESS
            STCM R4,3,CNVRTHH(R1)      ACTUAL HEAD ADDRESS
*     END;                          /* END OF CONVERSION PROCESS     */
*   RETURN CODE(R15);               /* RETURN TO CALLER              */
@RF00445 L     @14,12(,@13)                                        0456
         LM    @00,@12,20(@13)                                     0456
         BR    @14                                                 0456
*   END ILRCNVRT;                                                  0457
*   RFY                                                            0458
*    (R1,                                                          0458
*     R2,                                                          0458
*     R3,                                                          0458
*     R4,                                                          0458
*     R5,                                                          0458
*     R15) UNRSTD;                                                 0458
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0459
*     GPR01F FIXED(31) REG(1),                                     0459
*     GPR15F FIXED(31) REG(15),                                    0459
*     GPR00P PTR(31) REG(0),                                       0459
*     GPR01P PTR(31) REG(1),                                       0459
*     GPR14P PTR(31) REG(14),                                      0459
*     GPR15P PTR(31) REG(15);                                      0459
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0460
*     I031F FIXED(31) BASED,                                       0460
*     I031P PTR(31) BASED,                                         0460
*     I015F FIXED(15) BASED,                                       0460
*     I015P PTR(15) BASED,                                         0460
*     I008P PTR(8) BASED,                                          0460
*     I001C CHAR(1) BASED;                                         0460
*   END ILRPREAD                                                   0461
*                                                                  0461
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IECDIOCM)                                       */
*/*%INCLUDE SYSLIB  (IDAEDB  )                                       */
*/*%INCLUDE SYSLIB  (IDALPMB )                                       */
*/*%INCLUDE SYSLIB  (ILRPART )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (ILRTPARB)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (ILRCNVRT)                                       */
*                                                                  0461
*       ;                                                          0461
@DATA    DS    0H
@SM02520 MVC   ESTAEPL(0),ESTPLFMT
@DATD    DSECT
         DS    0F
ILRPREAD CSECT
         DS    0F
@CF00038 DC    F'4'
@CF00056 DC    F'8'
@CF02419 DC    F'10'
@CF02428 DC    F'12'
@CF00066 DC    F'32'
@CF02414 DC    F'4096'
@CF02517 DC    F'62720'
@CF02522 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PARTPTR  DS    A
TPARPTR  DS    A
TPASPTR  DS    A
INPTR    DS    A
EDBPTR   DS    A
EDBHDPTR DS    A
INBUF    DS    A
SLOT     DS    F
I        DS    F
REQUESTS DS    F
SVIOSB   DS    CL108
         DS    CL4
SVSRH    DS    CL8
PREADSTS DS    BL1
         ORG   PREADSTS
CYLBREAK DS    BL1
IOEND    EQU   PREADSTS+0
RETRY    EQU   PREADSTS+0
@NM00109 EQU   PREADSTS+0
         ORG   PREADSTS+1
         DS    CL3
REGSAVE  DS    CL80
         ORG   REGSAVE
R13SAVE  DS    AL4
R14SAVE  DS    AL4
SAVAREA  DS    CL72
         ORG   REGSAVE+80
SQAINFO  DS    CL8
         ORG   SQAINFO
SQAPTR   DS    AL4
SQASIZE  DS    FL4
         ORG   SQAINFO+8
ILRPREAD CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SRBIDCHR DC    CL4'SRB'
         DS    CL4
CCWSKLN  DS    CL32
         ORG   CCWSKLN
INITSEEK DC    X'1B00000040000006'
INITSRCH DC    X'3100000040000005'
INITTIC  DC    X'0800000000000000'
INITRW   DC    X'0000000040001000'
         ORG   CCWSKLN+32
ILRPREAD CSECT
         DS   0H
PREADPAT DC ((@DATA-@PSTART)/20)X'00'
ILRPREAD CSECT
*                                     /*
ESTPLFMT  ESTAE  MF=L                 ESTAE PARM LIST-STATIC
ESTPLLEN  DC  A(*-ESTPLFMT)           LENGTH OF LIST
@DATD    DSECT
*                                     /*
ESTAEPL   ESTAE  MF=L                 DSECT CORE FOR PARM LIST
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ILRPREAD CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RTCODE   EQU   @10
CCWLEN   EQU   @02
SRBLEN   EQU   @05
IOSBLEN  EQU   @03
CCWPTR   EQU   @03
SRHPTR   EQU   @11
SEEKPTR  EQU   @08
ESTPTR   EQU   @04
UCBPTR   EQU   @05
TPAEPTR  EQU   @03
SRBPTR   EQU   @02
SDWAPTR  EQU   @03
PAREPTR  EQU   @03
IOSBPTR  EQU   @04
BASEREG  EQU   @12
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R10      EQU   @10
R11      EQU   @11
RSAVE    EQU   @13
LINKREG  EQU   @14
R4       EQU   @04
R5       EQU   @05
R7       EQU   @07
R8       EQU   @08
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
R6       EQU   @06
R9       EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSDCHN  EQU   IOSACHN
IOSCCHN  EQU   IOSACHN
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSDVRID EQU   IOSB+4
IOSPRLVL EQU   IOSB+5
IOSASID  EQU   IOSB+6
IOSPGAD  EQU   IOSB+8
IOSPKEY  EQU   IOSB+12
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00002 EQU   IOSB+20
IOSCSW   EQU   @NM00002+1
IOSTATUS EQU   IOSCSW+3
IOSSRB   EQU   IOSB+28
IOSUSE   EQU   IOSB+32
IOSIPIB  EQU   IOSB+44
IOSNRM   EQU   IOSB+60
IOSABN   EQU   IOSB+64
IOSDIE   EQU   IOSB+68
IOSDIEFG EQU   IOSDIE
IOSRST   EQU   IOSB+72
IOSVST   EQU   IOSB+76
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSFMSK  EQU   IOSB+88
IOSCKEY  EQU   IOSB+89
IOSEEK   EQU   IOSB+92
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIXAVL EQU   CVTMAP+124
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOCOM    EQU   0
IOCSTIO  EQU   IOCOM+28
IDAEDBHD EQU   0
EDBNO    EQU   IDAEDBHD+1
EDBLEN   EQU   IDAEDBHD+2
IDAEDB   EQU   0
EDBFLG1  EQU   IDAEDB+2
EDBM     EQU   IDAEDB+3
EDBLPMBA EQU   IDAEDB+4
EDBSTTRK EQU   IDAEDB+8
EDBLORBA EQU   IDAEDB+12
EDBHIRBA EQU   IDAEDB+16
IDALPMB  EQU   0
LPMBFLGS EQU   IDALPMB+1
LPMAUSZ  EQU   IDALPMB+4
LPMBPTRK EQU   IDALPMB+8
LPMBLKSZ EQU   IDALPMB+12
LPMTRKAU EQU   IDALPMB+16
LPMTPC   EQU   IDALPMB+18
PART     EQU   0
PARTHDR  EQU   PART
PARTTPAR EQU   PARTHDR+24
PARTCOMQ EQU   PARTHDR+48
PARTSPLQ EQU   PARTHDR+56
PARTDUPQ EQU   PARTHDR+64
PARTLOCQ EQU   PARTHDR+72
PARTENT  EQU   0
PARELKUP EQU   PARTENT+4
PARELKFL EQU   PARELKUP
PARETYPE EQU   PARTENT+8
PAREFLG1 EQU   PARTENT+9
PAREEDBP EQU   PARTENT+40
PAREUCBP EQU   PARTENT+44
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBFLC   EQU   SRB+12
SRBPASID EQU   SRBFLC+2
SRBPTCB  EQU   SRBFLC+4
SRBPARM  EQU   SRB+28
SRBPRIOR EQU   SRB+37
TPARTBLE EQU   0
TPARHEAD EQU   TPARTBLE
TPARFLAG EQU   TPARHEAD+8
TPARENT  EQU   0
TPAESTAT EQU   TPARENT+2
TPAECLAS EQU   TPARENT+3
TPAEEDB  EQU   TPARENT+52
TPAEUCB  EQU   TPARENT+56
TPASENT  EQU   0
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00107 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
POSTRTN  EQU   0
PRDINPUT EQU   0
FLAG     EQU   PRDINPUT
WRIT     EQU   FLAG
TPARB    EQU   FLAG
TOTSLOTS EQU   PRDINPUT+1
FRTSLOT  EQU   PRDINPUT+2
TABENTRY EQU   PRDINPUT+4
BUFPTR   EQU   PRDINPUT+8
SEEKADDR EQU   0
CCWCC    EQU   SEEKADDR+3
SRHADDR  EQU   0
SRHBB    EQU   SRHADDR+1
SRHCC    EQU   SRHADDR+3
CCWS     EQU   0
CCWSEEK  EQU   CCWS
CCWSKAD  EQU   CCWSEEK+1
CCWSRCH  EQU   CCWS+8
CCWSIAD  EQU   CCWSRCH+1
CCWTIC   EQU   CCWS+16
CCWTAD   EQU   CCWTIC+1
CCWRW    EQU   CCWS+24
CCWRDWT  EQU   CCWRW
CCWRWAD  EQU   CCWRW+1
CCWRWFG  EQU   CCWRW+4
ESTAPARM EQU   0
ESTSQAPR EQU   ESTAPARM
ESTSQASZ EQU   ESTAPARM+4
SQAAREA  EQU   0
SRHAREA  EQU   0
CNVRTSKA EQU   0
CNVRTM   EQU   CNVRTSKA
CNVRTCC  EQU   CNVRTSKA+3
CNVRTHH  EQU   CNVRTSKA+5
CNVRTR   EQU   CNVRTSKA+7
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
UCBBGN   EQU   0
ASCBPTR  EQU   PSAAOLD
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOCOMPTR EQU   CVTIXAVL
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00106 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
SEEKRBA  EQU   SEEKADDR
SRHRBA   EQU   SRHADDR
CNVRTRBA EQU   CNVRTSKA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00106
UCBSKPFG EQU   @NM00106
UCBRIPND EQU   @NM00106
UCBRTIAC EQU   @NM00106
UCBRSV79 EQU   @NM00106
UCBRSV78 EQU   @NM00106
UCBRSV77 EQU   @NM00106
UCBOLTEP EQU   @NM00106
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00105 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00007 EQU   IOSPCISC+4
@NM00006 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00005 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
@NM00110 EQU   CNVRTSKA+1
CCWRWCN  EQU   CCWRW+6
CCWTCT   EQU   CCWTIC+6
CCWTFG   EQU   CCWTIC+4
CCWT     EQU   CCWTIC
CCWSICT  EQU   CCWSRCH+6
CCWSIFG  EQU   CCWSRCH+4
CCWSIDE  EQU   CCWSRCH
CCWSKCT  EQU   CCWSEEK+6
CCWSKFG  EQU   CCWSEEK+4
CCWSKOP  EQU   CCWSEEK
SRHR     EQU   SRHADDR+7
SRHHH    EQU   SRHADDR+5
SRHM     EQU   SRHADDR
CCWR     EQU   SEEKADDR+7
CCWHH    EQU   SEEKADDR+5
CCWBB    EQU   SEEKADDR+1
CCWM     EQU   SEEKADDR
@NM00108 EQU   FLAG
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00107
UCBHALI  EQU   @NM00107
UCBRSV09 EQU   @NM00107
UCBRSV08 EQU   @NM00107
UCBRSV07 EQU   @NM00107
UCBRSV06 EQU   @NM00107
UCBRSV05 EQU   @NM00107
UCBRSV04 EQU   @NM00107
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00104 EQU   UCB
TPASDSN  EQU   TPASENT+4
@NM00103 EQU   TPASENT+1
TPASFLAG EQU   TPASENT
@NM00102 EQU   TPARENT+80
TPAEIORB EQU   TPARENT+76
TPAEPATP EQU   TPARENT+72
TPAEPATB EQU   TPARENT+68
TPAESZSL EQU   TPARENT+64
TPAEPCT  EQU   TPARENT+60
TPAEDSN  EQU   TPARENT+8
@NM00101 EQU   TPARENT+5
TPAEDSNL EQU   TPARENT+4
@NM00100 EQU   TPAECLAS
TPAELOCL EQU   TPAECLAS
TPAEDPLX EQU   TPAECLAS
TPAECOMM EQU   TPAECLAS
TPAEPLPA EQU   TPAECLAS
@NM00099 EQU   TPAESTAT
TPAEVALD EQU   TPAESTAT
TPAESKIP EQU   TPAESTAT
TPAEXPND EQU   TPAESTAT
TPAEPRVI EQU   TPAESTAT
TPAEPARM EQU   TPAESTAT
TPAETYPE EQU   TPARENT
@NM00098 EQU   TPARTBLE+8192
@NM00097 EQU   TPARTBLE+7408
TPARSENT EQU   TPARTBLE+6208
TPARPENT EQU   TPARTBLE+64
@NM00096 EQU   TPARHEAD+40
TPARTIME EQU   TPARHEAD+32
@NM00095 EQU   TPARHEAD+28
TPARPCTQ EQU   TPARHEAD+24
TPAREXPD EQU   TPARHEAD+20
TPARNPGS EQU   TPARHEAD+16
TPARUSE  EQU   TPARHEAD+12
@NM00094 EQU   TPARHEAD+9
@NM00093 EQU   TPARFLAG
TPARWARM EQU   TPARFLAG
TPARIDNT EQU   TPARHEAD
@NM00092 EQU   SRB+40
@NM00091 EQU   SRB+38
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBFLNK  EQU   SRB+4
@NM00090 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00089 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00088 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00087 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00086 EQU   SDWADDAT+3
@NM00085 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00084 EQU   SDWADDAT+1
@NM00083 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00082 EQU   SDWADUMP+2
@NM00081 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00080 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00079 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00078 EQU   SDWAACF3
@NM00077 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00076 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00075 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00074 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00073 EQU   SDWA+239
@NM00072 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00071 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00070 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00069 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00068 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00067 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00066 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00065 EQU   SDWAINC2
@NM00064 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00063 EQU   SDWAILC2
@NM00062 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00061 EQU   SDWANXT2
@NM00060 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00059 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00058 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00057 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00056 EQU   SDWAINC1
@NM00055 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00054 EQU   SDWAILC1
@NM00053 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00052 EQU   SDWANXT1
@NM00051 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00050 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00049 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00048 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00047 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00046 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00045 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00044 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00043 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
@NM00018 EQU   PARTENT+62
PARELCYL EQU   PARTENT+60
PARERQTM EQU   PARTENT+56
PAREWTQE EQU   PARTENT+52
PARENODE EQU   PARTENT+48
PAREPCTP EQU   PARTENT+36
PAREPATP EQU   PARTENT+32
PAREIORB EQU   PARTENT+28
PARERRCT EQU   PARTENT+24
PARESLTA EQU   PARTENT+20
PARESZSL EQU   PARTENT+16
PAREIOEQ EQU   PARTENT+12
PARENN   EQU   PARTENT+10
@NM00017 EQU   PAREFLG1
PAREINCP EQU   PAREFLG1
PAREDSBD EQU   PAREFLG1
PARENUSE EQU   PAREFLG1
@NM00016 EQU   PARETYPE
PARELOCL EQU   PARETYPE
PAREDPLX EQU   PARETYPE
PARECOMM EQU   PARETYPE
PAREPLPA EQU   PARETYPE
PARECPCT EQU   PARELKUP+2
PAREIORN EQU   PARELKUP+1
@NM00015 EQU   PARELKFL
PAREFSIP EQU   PARELKFL
PAREPARE EQU   PARTENT
PARTENTS EQU   PART+80
PARTLOCL EQU   PARTLOCQ+4
PARTLOCF EQU   PARTLOCQ
PARTDUPL EQU   PARTDUPQ+4
PARTDUPF EQU   PARTDUPQ
PARTSPLL EQU   PARTSPLQ+4
PARTSPLF EQU   PARTSPLQ
PARTCOML EQU   PARTCOMQ+4
PARTCOMF EQU   PARTCOMQ
PARTLOCK EQU   PARTHDR+44
PARTLKUP EQU   PARTHDR+40
@NM00014 EQU   PARTHDR+34
PARTLCNT EQU   PARTHDR+32
PARTPCTQ EQU   PARTHDR+28
PARTDSNL EQU   PARTTPAR
PARTCIR2 EQU   PARTHDR+20
PARTCIR1 EQU   PARTHDR+16
PARTAIAE EQU   PARTHDR+12
PARTEUSE EQU   PARTHDR+8
PARTSIZE EQU   PARTHDR+4
PARTIDEN EQU   PARTHDR
LPMBSST  EQU   IDALPMB+28
LPMBEXT  EQU   IDALPMB+24
@NM00013 EQU   IDALPMB+22
LPMBLKTR EQU   IDALPMB+20
LPMBLEN  EQU   IDALPMB+2
@NM00012 EQU   LPMBFLGS
LPMBSSTH EQU   LPMBFLGS
LPMBTOFL EQU   LPMBFLGS
LPMSS    EQU   LPMBFLGS
LPMREPL  EQU   LPMBFLGS
LPMBRPS  EQU   LPMBFLGS
LPMBID   EQU   IDALPMB
EDBTKBAL EQU   IDAEDB+20
@NM00011 EQU   EDBFLG1
EDBPSDS  EQU   EDBFLG1
EDBTOFLW EQU   EDBFLG1
EDBLKR   EQU   EDBFLG1
@NM00010 EQU   IDAEDB
EDBLPMBC EQU   IDAEDBHD+4
EDBID    EQU   IDAEDBHD
IOCOEND  EQU   IOCOM+128
IOCPATCH EQU   IOCOM+124
IOCUCBBM EQU   IOCOM+120
IOCQCNT  EQU   IOCOM+116
IOCIOSDQ EQU   IOCOM+112
IOCIOSEQ EQU   IOCOM+108
IOCSVCF  EQU   IOCOM+104
IOCTCCW  EQU   IOCOM+100
IOCRSVTB EQU   IOCOM+96
IOCMFCNT EQU   IOCOM+92
IOCMFHK  EQU   IOCOM+88
IOCGENA  EQU   IOCOM+84
IOCCCH   EQU   IOCOM+80
IOCASYNQ EQU   IOCOM+76
IOCLCHTB EQU   IOCOM+72
IOCATTBL EQU   IOCOM+68
IOCOMEX  EQU   IOCOM+64
IOCSYNCH EQU   IOCOM+56
IOCCATLK EQU   IOCOM+48
IOCPRGID EQU   IOCOM+44
IOCIOSCP EQU   IOCOM+40
IOCORMGT EQU   IOCOM+36
IOCVOID  EQU   IOCOM+32
IOCSCOMP EQU   IOCOM+24
IOCHD160 EQU   IOCOM+20
IOCINT   EQU   IOCOM+16
IOCCTBL  EQU   IOCOM+12
IOCHIO   EQU   IOCOM+8
IOCPST   EQU   IOCOM+4
IOCPGCT  EQU   IOCOM+2
IOCVOICT EQU   IOCOM
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00009 EQU   CVTFIX+248
@NM00008 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00004 EQU   IOSCKEY
IOSCUDEV EQU   IOSPATH+1
@NM00003 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSNOTRS EQU   IOSDIEFG
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00002
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00001 EQU   IOSPKEY
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00042 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00041 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00040 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00039 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00038 EQU   FLCFSA
@NM00037 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00036 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00035 EQU   FLCIOA
@NM00034 EQU   FLCMCLA+15
@NM00033 EQU   FLCMCLA+14
@NM00032 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00031 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00030 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00029 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00028 EQU   FLCPER
@NM00027 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00026 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00025 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00024 EQU   FLCPIILC
@NM00023 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00022 EQU   FLCSVILC
@NM00021 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00020 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00019 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00349 EQU   @RC00348
@RF00354 EQU   @RC00334
@ENDDATA EQU   *
         END   ILRPREAD,(C'PLS2043',0701,76114)
