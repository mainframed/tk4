IEAVTRCE CSECT
         TITLE 'IEAVTRCE - SYSTEM TRACE ROUTINE'
         USING *,XTRBASE           BASE NEEDED FOR MODID MACRO
         MODID
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVTRCE
*
*02*     CSECT-NAME = IEAVTRCE
*
*01*  DESCRIPTIVE-NAME = VS2/2 TRACE ROUTINE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = 0
*
*01*  FUNCTION = RECORD THE FOLLOWING SYSTEM ACTIVITY:
*                1. EXTERNAL INTERRUPTS
*                2. I/O INTERRUPTS
*                3. PROGRAM INTERRUPTS
*                4. SVC INTERRUPTS
*                5. START I/O (FROM IOS)
*                6. TASK DISPATCH/EXIT PROLOG DISPATCH EVENTS
*                7. SERVICE REQUEST EVENTS
*
*                THE FORMAT OF EACH TRACE TABLE ENTRY FOLLOWS
*                THE PROLOG.
*
*02*     OPERATION = A UNIQUE ENTRY POINT EXISTS FOR EACH
*                    FUNCTION IDENTIFIED ABOVE. AFTER UPDATING
*                    THE CURRENT TRACE TABLE ENTRY POINTER,
*                    THE DESIRED INFORMATION IS PLACED INTO
*                    THE TRACE TABLE.
*                    SOME SPECIAL ENTRY POINTS HAVE BEEN       @ZA16400
*                    DEFINED SO IEAVESPR CAN DETECT THAT A     @ZA16400
*                    FAILURE OCCURRED WITHIN TRACE AND THAT    @ZA16400
*                    THE REGISTERS HAD BEEN SAVED.             @ZA16400
*
*01*   NOTES
*
*02*     DEPENDENCIES = THIS MODULE DOES NOT CONTAIN ANY
*                       HARDWARE DEPENDENCIES. THE FOLLOWING
*                       ARE THE SOFTWARE DEPENDENCIES:
*                       (1) COMPARE-AND-SWAP MUST BE USED TO
*                           UPDATE THE CURRENT ENTRY POINTER
*                       (2) A CPU RELATED SAVE AREA IS USED
*                           TO ELIMINATE MP PROBLEMS
*                       (3) A ONE WORD REGISTER SAVE
*                           LOCATION IS REQUIRED IN THE PSA
*                           (SERIALIZED BY DISABLEMENT)
*
*03*        CHARACTER-CODE-DEPENDENCIES = THIS MODULE IS NOT
*                                         CHARACTER CODE
*                                         DEPENDENT
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = REFER TO THE 'REGISTER EQUATES'
*                               PORTION OF THIS MODULE
*
*02*     PATCH-LABEL = NONE WITHIN THIS MODULE. COMMON
*                      NUCLEUS MAINTENANCE AREA SHOULD
*                      BE USED (IEAPACH)
*
*01*  MODULE-TYPE = MODULE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE = APPROXIMATELY 700 BYTES
*
*02*     ATTRIBUTES = NUCLEUS CODE, REFRESHABLE, SUPERVISOR
*                     PROTECT KEY, SUPERVISOR STATE, AND
*                     DISABLED FOR ALL MASKABLE INTERRUPTS
*                     ON CALLER'S CPU
*
*01*  ENTRY-POINT = TREX
*
*02*     PURPOSE = RECORD EXTERNAL INTERRUPTS IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTERS 0,1 - AS AT TIME OF INTERRUPT
*                REGISTERS 2-9 - IRRELEVANT
*                REGISTER  10  - ENTRY POINT ADDRESS
*                REGISTER  11  - RETURN ADDRESS
*                REGISTERS 12-14 - IRRELEVANT
*                REGISTER  15 - AS AT TIME OF INTERRUPT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER.
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRIO
*
*02*     PURPOSE = RECORD I/O INTERRUPTS IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTERS 0-2   - AS AT TIME OF INTERRUPT
*                REGISTERS 3-4   - IRRELEVANT
*                REGISTERS 5-9   - AS AT TIME OF INTERRUPT
*                REGISTER  10    - ENTRY POINT ADDRESS
*                REGISTER  11    - RETURN ADDRESS
*                REGISTERS 12-15 - AS AT TIME OF INTERRUPT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMAT AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRPI
*
*02*     PURPOSE = RECORD PROGRAM INTERRUPTS IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTERS 0-9   - AS AT TIME OF INTERRUPT
*                REGISTER  10    - ENTRY POINT ADDRESS
*                REGISTER  11    - RETURN ADDRESS
*                REGISTERS 12-15 - AS AT TIME OF INTERRUPT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRSVC
*
*02*     PURPOSE = RECORD SVC INTERRUPTS IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTERS 0-9   - AS AT TIME OF INTERRUPT
*                REGISTER  10    - ENTRY POINT ADDRESS
*                REGISTER  11    - RETURN ADDRESS
*                REGISTERS 12-15 - AS AT TIME OF INTERRUPT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRSIO/TRACE
*
*02*     PURPOSE = RECORD START I/O EVENTS IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTER  0     IRRELEVANT
*                REGISTER  1     SRB ADDRESS
*                REGISTERS 2-5   IRRELEVANT
*                REGISTER  6     DEVICE ADDRESS
*                REGISTERS 7-9   IRRELEVANT
*                REGISTER  10    ENTRY POINT ADDRESS
*                REGISTER  11    RETURN ADDRESS
*                REGISTER  12    CONDITION CODE
*                REGISTERS 13-15 IRRELEVANT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRDISP
*
*02*     PURPOSE = RECORD TASK/RB DISPATCH IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTERS 0-1   - AS AT DISPATCH
*                REGISTERS 2-9   - IRRELEVANT
*                REGISTER  10    - ENTRY POINT ADDRESS
*                REGISTER  11    - RETURN ADDRESS
*                REGISTERS 12-14 - IRRELEVANT
*                REGISTER  15    - AS AT DISPATCH
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRSRB1
*
*02*     PURPOSE = RECORD EVENT DISPATCH IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTER  0     - SRB ADDRESS
*                REGISTER  1     - PARAMETER AREA ADDRESS
*                REGISTERS 2-9   - IRRELEVANT
*                REGISTER  10    - ENTRY POINT ADDRESS
*                REGISTER  11    - RETURN ADDRESS
*                REGISTERS 12-15 - IRRELEVANT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTERS-RESTORED = REGISTERS 8,11-15
*
*01*  ENTRY-POINT = TRSRB2
*
*02*     PURPOSE = RECORD EVENT REDISPATCH IN TRACE TABLE
*
*02*     LINKAGE = BRANCH ENTERED
*
*02*     INPUT = REGISTERS 0-9   - IRRELEVANT
*                REGISTER  10    - ENTRY POINT ADDRESS
*                REGISTER  11    - RETURN ADDRESS
*                REGISTER  12-15 - IRRELEVANT
*
*02*     OUTPUT = TRACE TABLE ENTRY (SEE FORMATS AT END OF
*                 PROLOG) AND UPDATED CURRENT TRACE TABLE
*                 ENTRY POINTER
*
*02*     REGISTERS-SAVED = REGISTERS 11-15 ARE SAVED IN THE
*                          CPU RELATED SAVE AREA POINTED TO
*                          BY WSACCWSA. REGISTER 8 IS SAVED
*                          IN THE PSA (PSAGPREG)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES' PORTION
*                         OF THIS MODULE
*
*02*     REGISTER-RESTORED = REGISTERS 8,11-15
*
*
*01*  EXIT-NORMAL = POSTCOM
*
*02*     CONDITIONS = RETURN TO CALLER VIA BRANCH
*
*02*     OUTPUT = SEE FORMATS OF TRACE TABLE ENTRIES
*                 AT END OF PROLOG
*
*                 REGISTERS - SAME CONTENTS AS AT ENTRY
*
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*02*     CONDITIONS = N/A
*
*02*     OUTPUT = N/A
*
*02*     RETURN-CODES = N/A
*
*01*  EXTERNAL-REFERENCES
*
*02*     ROUTINES = NONE
*
*02*     DATA-AREAS = TRACE TABLE HEADER - CURRENT, FIRST, LAST
*                     TRACE TABLE ENTRIES - REFLECT TRACE RESULTS
*
*02*     CONTROL-BLOCKS = ASCB R
*                         FLC  R
*                         LCCA R
*                         PCCA R
*                         PSA  R,W
*                         RB   R
*                         SRB  R
*                         TCB  R
*                         TQE  R
*                         WSA  R,W
*                         IOSB R                               @Z40FPYJ
*
*01*  TABLES = NONE
*
*01*  MACROS = NONE
*
*02*     SERIALIZATION = COMPARE-AND-SWAP DONE ON CURRENT
*                        TRACE TABLE ENTRY POINTER. NO LOCKS
*                        OR ENQUES ARE NEEDED. THE REGISTER
*                        SAVE AREA IN THE PSA IS SERIALIZED
*                        BY DISABLEMENT
*
*01*  CHANGE-ACTIVITY = Y02136
*                       Y02139
*                       DCRR 20889
*                       YM01922
*                       YM02115
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = NONE
*
**** END OF SPECIFICATIONS */
         EJECT
* NOTE THAT THE IDENTIFIER IS IN THE PSW FOR EXTERNAL, I/O, SVC, AND
* PROGRAM INTERRUPT AND DISPATCHER TRACES. IT IS LOCATED IN BIT
* POSITIONS 17-19 OF THE PSW.
         SPACE 3
* EXTERNAL INTERRUPT
         SPACE
* .................................................................
* .               .       .       .       .       .       .       .
* .    EXTERNAL   .  REG  .  REG  .  REG  . CPUID .CURRENT. TIMER .
* .     OLD PSW   .   15  .   0   .   1   . & ASID. OR TQE. VALUE .
* . IDENTIFIER= 1 .       .       .       .       . TCB   .       .
* .               .       .       .       .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         SPACE 3
* I/O INTERRUPT
         SPACE
* .................................................................
* .               .               .       .       .       .       .
* .      I/O      .      CSW      . RE-   . CPUID .CURRENT. TIMER .
* .    OLD PSW    .               . SERVED. & ASID. TCB   . VALUE .
* . IDENTIFIER= 5 .               . (ZERO).       .       .       .
* .               .               .       .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         SPACE 3
* PROGRAM INTERRUPT
         SPACE
* .................................................................
* .               .       .       .       .       .       .       .
* .      PI       .       . TRANS .       .       .       .       .
* .    OLD PSW    .  REG  . EXCEPT.  REG  . CPUID .CURRENT. TIMER .
* . IDENTIFIER= 3 .   15  . ADDR  .   1   . & ASID.  TCB  . VALUE .
* .               .       .       .       .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         EJECT
* SVC INTERRUPT
         SPACE
* .................................................................
* .               .       .       .       .       .       .       .
* .      SVC      .  REG  .  REG  .  REG  . CPUID .CURRENT. TIMER .
* .    OLD PSW    .   15  .   0   .   1   . & ASID.  TCB  . VALUE .
* . IDENTIFIER= 2 .       .       .       .       .       .       .
* .               .       .       .       .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         SPACE 3
* START I/O    IDENTIFIER = 0
         SPACE
* .................................................................
* .   .   .       .               .       .       .       .       .
* . C . D .  CAW  .      CSW      . IOSB  . CPUID . TCB   . TIMER .
* . C . E .       .               . FROM  . & ASID. FROM  . VALUE .
* .   . V .       .               . IOS   .       . SRB   .       .
* .   .   .       .               .       .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         SPACE 3
* TASK DISPATCHER
         SPACE
* .................................................................
* .               .       .       .       .       .       .       .
* . NEW PSW TO BE .  REG  .  REG  .  REG  . CPUID .  NEW  . TIMER .
* .    LOADED     .   15  .   0   .   1   . & ASID.  TCB  . VALUE .
* . IDENTIFIER= 7 . (NEW) . (NEW) . (NEW) .       .       .       .
* .               .       .       .       .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         SPACE 3
* EVENT DISPATCHER
         SPACE
* .................................................................
* .               .       .       .       .       .       .       .
* . NEW PSW TO BE . ZERO  .  SRB  . PARAM . CPUID . TCB   . TIMER .
* .    LOADED     . & ASID. ADDR. .  LIST . & ASID. FOR   . VALUE .
* . IDENTIFIER=   .       .  OR   .  ADDR..       . PURGE .       .
* .    4 OR 6     .       . REG 0 .   OR  .       .       .       .
* .               .       .       . REG 1 .       .       .       .
* .0.......4.......8.......C.......0.......4.......8.......C.......
         EJECT
         ENTRY TREX,TRPI,TRSVC,TRIO,TRDISP,TRSIO,TRACE,TRSRB1,TRSRB2
         ENTRY TRCEEND,TRCOM1,TRCOM2  SEE                      @ZA16400
*                                  'OPERATION' IN THE PROLOG   @ZA16400
*                                  FOR AN EXPLANATION OF THESE @ZA16400
*                                  ENTRIES                     @ZA16400
         SPACE  3
*        REGISTER EQUATES
         SPACE 3
R0       EQU   0                   REG 0
R1       EQU   1                   REG 1
R6       EQU   6                   REG 6
R8       EQU   8                   REG 8                         Y02139
RA       EQU   10                  REG 10
R11      EQU   11                  REG 11
RC       EQU   12                  REG 12
RD       EQU   13                  REG 13
RE       EQU   14                  REG 14
RF       EQU   15                  REG 15
XTRBASE  EQU   10                  BASE REG FOR MAINLINE CODE
XRET     EQU   11                  RETURN REGISTER AND BASE FOR
*                                  INTERNAL SUBROUTINES
TRPTRG   EQU   12                  TRACE TABLE ENTRY POINTER
TRTAPTR  EQU   13                  POINTER TO TRACE HEADER
         SPACE 3
*        COUNT FIELD EQUATES
C1       EQU   1                   BYTE
C2       EQU   2                   HALF WORD
C3       EQU   3                   THREE BYTES
C4       EQU   4                   FULL WORD
C8       EQU   8                   DOUBLEWORD
         EJECT
*        GENERAL EQUATES
         SPACE 1
ENTLEN   EQU   32                  LENGTH OF A TRACE TABLE ENTRY
PSW      EQU   0                   PSW OFFSET IN TABLE ENTRY
T        EQU   2                   OFFSET FOR ENTRY TYPE
ECCCPM   EQU   2                   OFFSET FOR EC MODE COND CODE
*                                  AND PROGRAM MASK
BCCCPM   EQU   4                   OFFSET FOR BC MODE COND CODE
*                                  AND PROGRAM MASK
BCINTCOD EQU   2                   OFFSET FOR BC MODE INT. CODE
ILC      EQU   4                   OFFSET OF ILC IN BC MODE PSW
REG      EQU   8                   REG OFFSET IN TABLE ENTRY
REGF     EQU   8                   REG 15 OFFSET - TABLE ENTRY @YM01922
REG0     EQU   12                  REG 0 OFFSET IN TABLE ENTRY @YM01922
LOC90    EQU   12                  TRANSLATION EXCEPTION ADDR  @YM01922
*                                  OFFSET IN TABLE ENTRY       @YM01922
REG1     EQU   16                  REG 1 OFFSET IN TABLE ENTRY @YM01922
DEV      EQU   0                   DEVICE FIELD OFFSET IN ENTRY
CAW      EQU   4                   CAW OFFSET IN ENTRY
CSW      EQU   8                   CSW OFFSET IN TABLE ENTRY
TRCIOSB  EQU   16                  IOSB ADDR OFFSET IN ENTRY     Y02136
TRCSTOP  EQU   20                  OFFSET FOR 'TRACE STOPPED' FLAG
TRCCPUID EQU   20                  OFFSET TO CPUID IN ENTRY    @Z40FPYJ
TRCASIDF EQU   22                  OFFSET TO ASID IN ENTRY       Y02139
TCBF     EQU   24                  OFFSET TO TCB ADDR IN ENTRY
TIMESTMP EQU   28                  OFFSET TO TIME STAMP IN TABLE ENTRY
ILCRIGHT EQU   17                  VALUE TO SHIFT ILC TO RIGHT JUSTIFY
ILCLEFT  EQU   6                   VLAUE TO POSITION ILC FOR EXEC OF OI
ON       EQU   255                 MASK OF ALL ONES
M3       EQU   3                   MASK FOR ICM OF BYTES 2,3 OF REG
M4       EQU   4                   MASK FOR ICM OF BYTE 1 OF REG
TWO      EQU   2                   VALUE OF TWO
X0F      EQU   X'0F'               MASK TO CLEAR TYPE CODE AREA
X7F      EQU   X'7F'               MASK TO CLEAR HIGH BIT OF BYTE
TRON     EQU   X'80'               MASK TO FLAG CPU WAITING    @Z40FPYJ
         EJECT
*        ENTRY TYPE CODES
         SPACE 1
SVCCODE  EQU   X'20'               SVC ENTRY
EXTCODE  EQU   X'10'               EXTERNAL INTERRUPT ENTRY
IOCODE   EQU   X'50'               I/O INTERRUPT ENTRY
PGMCODE  EQU   X'30'               PROGRAM INTERRUPT ENTRY
SIOCODE  EQU   X'00'               START I/O ENTRY
DSPCODE  EQU   X'70'               TASK DISPATCHER ENTRY
SRBCODE1 EQU   X'40'               EVENT DISPATCHER ENTRY        Y02139
*                                   FOR DISPATCH OF NEW SRB
SRBCODE2 EQU   X'60'               EVENT DISPATCHER ENTRY        Y02139
*                                   FOR REDISPATCH OF SUSPENDED SRB
         SPACE 3
BEGIN    EQU   *                   LABEL USED ONLY FOR TESTING PURPOSES
         SPACE 3
         USING FLC,0
         USING STORAGE,R8                                        Y02139
         EJECT
***      TRACE ENTRY FOR SVC INTERRUPTS
         SPACE 1
         CNOP  0,8
         USING *,XTRBASE
TRSVC    BAL   XTRBASE,PRECOM      INITIAL PHASE                 Y02136
         USING *,XTRBASE
*        RETURN FROM COMMON SUBROUTINE
         LD    R0,SVCOPSW          TRACE SVC                   @Z40FPYJ
         STD   R0,PSW(TRPTRG)      OLD PSW                     @Z40FPYJ
         L     RF,FLCSVILC-C1      GET ILC AND INTERRUPT CODE
* PUT CC AND PROGRAM MASK IN THEIR BC MODE POSITIONS           @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)                         @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)                         @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG) INT. CODE IN BC MODE    @Z40FPYJ
         NI    PSW+T(TRPTRG),X0F   CLEAR  TYPE CODE FIELD      @Z40FPYJ
         SRL   RF,ILCRIGHT         POSITION ILC                @Z40FPYJ
         SLL   RF,ILCLEFT          IN REG  15 FOR              @Z40FPYJ
         EX    RF,ILCINPSW         EXECUTE  INTO TRACE PSW     @Z40FPYJ
         ST    R0,REG0(TRPTRG)     PLACE REG 0 IN TABLE ENTRY  @YM01922
SV1      OI    PSW+T(TRPTRG),SVCCODE    SET THE ENTRY TYPE
SV2      LA    XTRBASE,COMBASE     ADJUST BASE REGISTER FOR COMMON
*                                  CODE
         USING COMBASE,XTRBASE
         B     TRCOMM              GO TO COMMON TRACE ROUTINE
         USING SV1,XTRBASE
         EJECT
***      TRACE ENTRY FOR I/O INTERRUPTS
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1
         USING *,XTRBASE
TRIO     BAL   XTRBASE,PRECOM      INITIAL PHASE                 Y02136
         USING *,XTRBASE           ADJUST BASE REG
         LD    R0,IOOPSW                TRACE I/O              @Z40FPYJ
         STD   R0,PSW(TRPTRG)           OLD PSW                @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)  SHIFT THE CC           @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)    AND PRG MASK         @Z40FPYJ
         L     RF,FLCIOA                                       @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG)  DEV ADDRESS            @Z40FPYJ
         OI    PSW+T(TRPTRG),IOCODE     SET TYPE CODE
         LD    R0,FLCCSW                TRACE                  @Z40FPYJ
         STD   R0,CSW(TRPTRG)           CSW                    @Z40FPYJ
         L     RF,PSATOLD               TRACE                  @Z40FPYJ
         ST    RF,TCBF(TRPTRG)          OLD TCB                @Z40FPYJ
         L     RD,PSAAOLD          ADDRESS OLD ASCB              Y02139
         USING ASCB,RD                                           Y02139
         LH    RF,ASCBASID              TRACE                  @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG)        ASID                 @Z40FPYJ
         DROP  RD                                                Y02139
         SLR   RF,RF               CLEAR                       @Z40FPYJ
         ST    RF,TRCIOSB(TRPTRG)    RSVD FIELD                @Z40FPYJ
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         EJECT                                                 @Z40FPYJ
***      TRACE ENTRY FROM SIO
         CNOP  0,8                                             @Z40FPYJ
         USING *,XTRBASE
TRSIO    BAL   XTRBASE,PRECOM      INITIAL PHASE                 Y02136
TRACE    EQU   TRSIO               NAME USED BY SVM IOS SIO ROUTINE
*        RETURN FROM COMMON ROUTINE
         USING *,XTRBASE
         ST    R6,DEV(TRPTRG)      STORE DEVICE
         L     RF,TREGSV12         GET CC REG                  @Z40FPYJ
         N     RF,CC               LEAVE CC                    @Z40FPYJ
         STC   RF,DEV(TRPTRG)      TRACE CC                    @Z40FPYJ
         L     RF,FLCCAW           TRACE                       @Z40FPYJ
         ST    RF,CAW(TRPTRG)        CAW                       @Z40FPYJ
         LD    R0,FLCCSW           TRACE                       @Z40FPYJ
         STD   R0,CSW(TRPTRG)        CSW                       @Z40FPYJ
         USING SRBSECT,R1                                        Y02139
         L     RF,SRBPTCB          TRACE                       @Z40FPYJ
         ST    RF,TCBF(TRPTRG)       PURGE TCB                 @Z40FPYJ
         L     RF,SRBPARM          TRACE                       @Z40FPYJ
         ST    RF,TRCIOSB(TRPTRG)    IOSB                      @Z40FPYJ
         USING IOSB,RF                                         @Z40FOYJ
         L     RF,IOSASID-C2       TRACE                       @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG)   ASID                      @Z40FPYJ
         DROP  R1                                                Y02139
***      NOTE --- TYPE CODE IS 0 SO IMPLICITLY SET
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         EJECT
***      TRACE ENTRY FOR EXTERNAL INTERRUPT
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1
         USING *,XTRBASE
TREX     BAL   XTRBASE,PRECOM2     INITIAL PHASE               @Z40FPYJ
         USING *,XTRBASE
BASE3    ST    R0,REG+4(TRPTRG)    TRACE REG 0                 @Z40FPYJ
         LD    R0,EXOPSW           LOAD EXTOPSW                @Z40FPYJ
         ST    RF,REG(TRPTRG)      TRACE REG 15                @Z40FPYJ
         STD   R0,PSW(TRPTRG)      TRACE EXT OPSW              @Z40FPYJ
         ST    R1,REG+8(TRPTRG)    TRACE REG 1                 @Z40FPYJ
         L     RF,FLCEICOD-C2      GET INT CODE AND PRECEEDING 0'S
*                                  FROM LOW CORE
         LR    RE,RF               SAVE INTERRUPT CODE         Z40FPYJ
* PUT CC AND PROGRAM MASK IN THEIR BC MODE POSITIONS           @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)                         @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)                         @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG) INT. CODE IN BC MODE    @Z40FPYJ
         NI    PSW+T(TRPTRG),X0F   CLEAR  TYPE CODE FIELD      @Z40FPYJ
         SRL   RF,ILCRIGHT         POSITION ILC                @Z40FPYJ
         SLL   RF,ILCLEFT          IN REG  15 FOR              @Z40FPYJ
         EX    RF,ILCINPSW         EXECUTE  INTO TRACE PSW     @Z40FPYJ
         OI    PSW+T(TRPTRG),EXTCODE    INDICATE INTERRUPT TYPE
         CH    RE,COMPINTC         COMPARATOR INTERRUPT        @Z40FPYJ
         BNE   EXT5                NO, TRACE CURRENT TCB AND ASID
         L     XRET,PSAPCCAV       YES, ADDRESS PCCA             Y02139
         USING PCCA,XRET                                         Y02139
         L     XRET,PCCATQEP       TRY TO ADDRESS TQE            Y02139
         LTR   XRET,XRET           HAS TQE BEEN PURGED           Y02139
         BZ    EXT4                YES, TRACE ZERO TCB ADDRESS AND ASID*
                                                                 Y02139
         USING TQE,XRET
         L     RF,TQETCB           TRACE                       @Z40FPYJ
         ST    RF,TCBF(TRPTRG)       TCB                       @Z40FPYJ
         LH    RF,TQEAID           TRACE                       @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG) ASID                        @Z40FPYJ
         DROP XRET
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         CNOP  0,8
EXT4     ST    XRET,TCBF(TRPTRG)   TRACE ZERO TCB ADDRESS        Y02139
         STH   XRET,TRCASIDF(TRPTRG) TRACE ZERO ASID             Y02139
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         CNOP  0,8
         SPACE 1
EXT5     L     RF,PSATOLD          TRACE                       @Z40FPYJ
         ST    RF,TCBF(TRPTRG)       TCB                       @Z40FPYJ
         L     RD,PSAAOLD          ADDRESS ASCB                  Y02139
         USING ASCB,RD                                           Y02139
         LH    RF,ASCBASID         TRACE                       @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG)   ASID                      @Z40FPYJ
         DROP  RD                                                Y02139
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         EJECT
***      TRACE ENTRY FOR TASK DISPATCHER
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1
         USING *,XTRBASE
TRDISP   BAL   XTRBASE,PRECOM3     INITIAL PHASE               @Z40FPYJ
         USING *,XTRBASE
BASE2    ST    R0,REG+4(TRPTRG)    TRACE 0,                    @Z40FPYJ
         LD    R0,PSAPSWSV         GET PSW                     @Z40FPYJ
         ST    RF,REG(TRPTRG)      TRACE REG 15                @Z40FPYJ
         STD   R0,PSW(TRPTRG)      TRACE PSW                   @Z40FPYJ
         ST    R1,REG+8(TRPTRG)    TRACE REG 1                 @Z40FPYJ
         L     RD,PSATOLD          GET TCB ADDRESS           DCRR 20889
         LTR   RD,RD               IS TCB AVAILABLE?           @YM02115
         BNZ   FINDRB              BRANCH WHEN AVAILABLE       @YM02115
         SR    RF,RF               INDICATE NO ILC OR          @YM02115
*                                  INTERRUPT CODE AVAILABLE    @YM02115
         B     CONVPSW             GO CONVERT PSW              @YM02115
         CNOP  0,8                                             @Z40FPYJ
FINDRB   EQU   *                   USED ONLY WHEN TCB          @YM02115
*                                  ADDRESS IS AVAILABLE        @YM02115
         USING TCB,RD                                        DCRR 20889
         L     RD,TCBRBP           GET RB ADDR FROM TCB      DCRR 20889
         DROP  RD                                            DCRR 20889
         S     RD,RBPFXLEN         GET START OF PREFIX       DCRR 20889
         USING RBPRFXST,RD                                   DCRR 20889
         L     RF,RBINLNTH-C1      GET ILC AND CODE            @Z40FPYJ
CONVPSW  EQU   *                   USED ONLY WHEN TCB          @YM02115
*                                  ADDRESS IS NOT AVAILABLE    @YM02115
* PUT CC AND PROGRAM MASK IN THEIR BC MODE POSITIONS           @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)                         @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)                         @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG) INT. CODE IN BC MODE    @Z40FPYJ
         NI    PSW+T(TRPTRG),X0F   CLEAR  TYPE CODE FIELD      @Z40FPYJ
         SRL   RF,ILCRIGHT         POSITION ILC                @Z40FPYJ
         SLL   RF,ILCLEFT          IN REG  15 FOR              @Z40FPYJ
         EX    RF,ILCINPSW         EXECUTE  INTO TRACE PSW     @Z40FPYJ
         OI    PSW+T(TRPTRG),DSPCODE    INSERT ENTRY TYPE
         L     RF,PSATOLD          TRACE                       @Z40FPYJ
         ST    RF,TCBF(TRPTRG)       TCB                       @Z40FPYJ
         L     RD,PSAAOLD          ADDRESS ASCB                  Y02139
         USING ASCB,RD                                           Y02139
         LH    RF,ASCBASID         TRACE                       @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG)   ASID                      @Z40FPYJ
         DROP  RD                                                Y02139
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         EJECT
***      TRACE ENTRY FOR EVENT DISPATCHER                        Y02139
***      ON INITIAL DISPATCH OF SRB                              Y02139
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1
         USING *,XTRBASE
TRSRB1   BAL   XTRBASE,PRECOM      INITIAL PHASE
         USING *,XTRBASE
         ST    R0,REG+4(TRPTRG)    TRACE REG 0                 @Z40FPYJ
         LD    R0,PSAPSWSV         TRACE                       @Z4OFPYJ
         STD   R0,PSW(TRPTRG)        PSW                       @Z40FPYJ
         ST    R1,REG+8(TRPTRG)    TRACE REG 1                 @Z40FPYJ
         SR    RF,RF               INDICATE ZERO ILC AND INTCOD
* PUT CC AND PROGRAM MASK IN THEIR BC MODE POSITIONS           @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)                         @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)                         @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG) INT. CODE IN BC MODE    @Z40FPYJ
         NI    PSW+T(TRPTRG),X0F   CLEAR  TYPE CODE FIELD      @Z40FPYJ
         SRL   RF,ILCRIGHT         POSITION ILC                @Z40FPYJ
         SLL   RF,ILCLEFT          IN REG  15 FOR              @Z40FPYJ
         EX    RF,ILCINPSW         EXECUTE  INTO TRACE PSW     @Z40FPYJ
         OI    PSW+T(TRPTRG),SRBCODE1    INSERT ENTRY TYPE
         L     RD,PSAAOLD          ADDRESS ASCB
         USING ASCB,RD
         LH    RD,ASCBASID         GET OLD ASID
         DROP  RD
         ST    RD,REG(TRPTRG)      TRACE OLD ASID
         LR    RE,R0               ADDRESS SRB
         USING SRBSECT,RE
         L     RF,SRBPASID-C2      TRACE                      @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG)   PURGE ASID               @Z40FPYJ
         L     RF,SRBPTCB          TRACE                       @Z40FPYJ
         ST    RF,TCBF(TRPTRG)       TCB                       @Z40FPYJ
         DROP  RE
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         SPACE 3
***      TRACE ENTRY FOR EVENT DISPATCHER                        Y02139
***      ON REDISPATCH OF SUSPENDED SRB                          Y02139
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1
         USING *,XTRBASE
TRSRB2   BAL   XTRBASE,PRECOM      INITIAL PHASE
         USING *,XTRBASE
         ST    R0,REG+4(TRPTRG)    TRACE REG 0                 @Z40FPYJ
         LD    R0,PSAPSWSV         TRACE                       @Z40FPYJ
         STD   R0,PSW(TRPTRG)        PSW                       @Z40FPYJ
         ST    R1,REG+8(TRPTRG)    TRACE REG 1                 @Z40FPYJ
         SR    RF,RF               INDICATE ZERO ILC AND INTCOD
* PUT CC AND PROGRAM MASK IN THEIR BC MODE POSITIONS           @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)                         @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)                         @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG) INT. CODE IN BC MODE    @Z40FPYJ
         NI    PSW+T(TRPTRG),X0F   CLEAR  TYPE CODE FIELD      @Z40FPYJ
         SRL   RF,ILCRIGHT         POSITION ILC                @Z40FPYJ
         SLL   RF,ILCLEFT          IN REG  15 FOR              @Z40FPYJ
         EX    RF,ILCINPSW         EXECUTE  INTO TRACE PSW     @Z40FPYJ
         OI    PSW+T(TRPTRG),SRBCODE2    INSERT ENTRY TYPE
         L     RD,PSAAOLD          ADDRESS ASCB
         USING ASCB,RD
         LH    RD,ASCBASID         GET OLD ASID
         DROP  RD
         ST    RD,REG(TRPTRG)      TRACE OLD ASID
         L     RD,PSALCCAV         ADDRESS LCCA
         USING LCCA,RD
         L     RF,LCCAPGTA-C2       TRACE                      @Z40FPYJ
         STH   RF,TRCASIDF(TRPTRG)     ASID                    @Z40FPYJ
         L     RD,LCCAPGTA+C2       TRACE                      @Z40FPYJ
         ST    RD,TCBF(TRPTRG)         TCB                     @Z40FPYJ
         DROP  RD
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         EJECT
***      TRACE ENTRY FOR PROGRAM INTERRUPTS
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1
         USING *,XTRBASE
TRPI     BAL   XTRBASE,PRECOM      INITIAL PHASE                 Y02139
         USING *,XTRBASE
         LD    R0,PIOPSW           TRACE                       @Z40FPYJ
         STD   R0,PSW(TRPTRG)        PSW                       @Z40FPYJ
         L     RF,FLCPIILC-C1      GET ILC,INT.CODE AND LEADING 0'S
* PUT CC AND PROGRAM MASK IN THEIR BC MODE POSITIONS           @Z40FPYJ
         IC    XRET,PSW+ECCCPM(TRPTRG)                         @Z40FPYJ
         STC   XRET,PSW+BCCCPM(TRPTRG)                         @Z40FPYJ
         STH   RF,PSW+BCINTCOD(TRPTRG) INT. CODE IN BC MODE    @Z40FPYJ
         NI    PSW+T(TRPTRG),X0F   CLEAR  TYPE CODE FIELD      @Z40FPYJ
         SRL   RF,ILCRIGHT         POSITION ILC                @Z40FPYJ
         SLL   RF,ILCLEFT          IN REG  15 FOR              @Z40FPYJ
         EX    RF,ILCINPSW         EXECUTE  INTO TRACE PSW     @Z40FPYJ
COMBASE  L     RF,FLCTEA           GET TRANSLATION EXCEPTION   @YM01922
*                                  ADDRESS                     @YM01922
         ST    RF,LOC90(TRPTRG)    PLACE IT IN TABLE ENTRY     @YM01922
         OI    PSW+T(TRPTRG),PGMCODE    SET ENTRY TYPE         @YM01922
         SPACE 3
*        THIS PORTION COMMON TO SVC AND PROGRAM INTERRUPT CODE
         SPACE 1
TRCOMM   ST    R1,REG1(TRPTRG)     PLACE REG 1 IN TABLE VALUE
         L     RF,TREGSV15         RESTORE 15 TO ENTRY VALUE
         ST    RF,REGF(TRPTRG)     PLACE REG 15 IN TABLE ENTRY
         L     RF,PSATOLD          TRACE                       @Z40FPYJ
         ST    RF,TCBF(TRPTRG)       TCB                       @Z40FPYJ
         L     RD,PSAAOLD          ADDRESS ASCB                  Y02139
         USING ASCB,RD                                           Y02139
         LH    RF,ASCBASID         TRACE                      @VS40131
         STH   RF,TRCASIDF(TRPTRG)   ASID                      @Z40FPYJ
         DROP  RD                                                Y02139
         LD    R0,TRFP0            RESTORE FP REG              @ZA16400
         LM    R11,RF,TREGSV       RESTORE CALLERS             @Z40FPYJ
         L     R8,PSAGPREG            REGISTERS                @Z40FPYJ
         BR    XRET                RETURN  TO CALLER           @Z40FPYJ
         EJECT
***      PRECOMMON -- PERFORM INIT FOR ALL ENTRIES
         CNOP  0,8                                             @Z40FPYJ
         SPACE 2
TRCOM1   EQU   *                   BEGINNING OF CODE WHICH     @ZA16400
*                                  SAVES REGISTERS             @ZA16400
PRECOM   ST    R8,PSAGPREG         SAVE REG 8                    Y02136
*                                  THE ABOVE AREA CAN BE USED
*                                  BECAUSE TRACE MUST ALWAYS
*                                  BE ENTERED DISABLED
PRECOMA  NI    FLCTRACE,X'FF'-TRON  TURN OFF CPU WAITING FLAG  @Z40FPYJ
PRECOMB  L     R8,PSALCCAV         ADDRESS LOGICAL CCA         @Z40FPYJ
         USING LCCA,R8                                           Y02136
         L     R8,LCCACPUS         ADDRESS WORK/SAVE AREA VT     Y02136
         USING WSAC,R8                                           Y02136
         L     R8,WSACCWSA         ADDRESS LOWEST LEVEL WSA      Y02136
         USING STORAGE,R8                                        Y02136
         STD   R0,TRFP0            SAVE FP REG                 @ZA16400
         STM   R11,RF,TREGSV       SAVE REGS 11 THRU 15
TRCOM2   EQU   *                   END OF CODE WHICH SAVES     @ZA16400
*                                  REGISTERS                   @ZA16400
         BALR  XRET,0              SET BASE
         USING *,XRET
         L     TRTAPTR,FLCTRACE    GET ADDRESS OF TRACE HEADER
         USING TRHDR,TRTAPTR       GPR 13
FCH      L     TRPTRG,TRPTR        GET ADDRESS OF CURRENT ENTRY  Y02136
RET1     LR    RE,TRPTRG           SAVE ADDRESS OF CURRENT ENTRY Y02136
         LA    TRPTRG,ENTLEN(TRPTRG)    POINT TO NEXT ENTRY
         CL    TRPTRG,TREND        ARE WE AT END OF TABLE
         BNL   TREOT               YES, GO WRAP AROUND
STR      CS    RE,TRPTRG,TRPTR     NO, UPDATE THE POINTER        Y02136
         BNZ   FCH                 ANOTHER CPU UPDATED IT, RETRY Y02136
         STCK  CLOCK               STORE THE TOD CLOCK
         BZ    GOODTIME            DID THE CLOCK WORK            Y02139
         XC    CLOCKV(C4),CLOCKV   NO, RECORD TIME ZERO          Y02139
GOODTIME MVC   TIMESTMP(C4,TRPTRG),CLOCKV    BYTES 2-5 OF CLOCK
         L     RE,PSACPUSA-C2      GET PHYSICAL CPU ADDR       @Z40FPYJ
         A     RE,LOGCPU           MAKE IT LOGICAL ADDR        @Z40FPYJ
         STH   RE,TRCCPUID(TRPTRG) TRACE IT AND CLEAR STOP FLG @Z40FPYJ
         BR    XTRBASE             RETURN TO CALLER
TREOT    L     TRPTRG,TRBEG        RESET POINTER TO BEGIN OF TABLE
         B     STR                 BACK TO STORE IT
TRCEEND  EQU   *              AS FAR AS IEAVESPR IS CONCERNED, @ZA16400
*                             THE END OF TRACE, BECAUSE THIS   @ZA16400
*                             IS THE HIGHEST INSTRUCTION ADDR. @ZA16400
*                             WHICH WILL BE EXECUTED WITHIN    @ZA16400
*                             TRACE AFTER REGISTERS HAVE BEEN  @ZA16400
*                             SAVED. (THE EXECUTED INSTR. IS   @ZA16400
*                             A TRIVIAL EXCEPTION.)            @ZA16400
         DROP  TRTAPTR
         DROP  XRET
         EJECT                                                 @Z40FPYJ
***      EXT   PRECOMMON - ELIMINATE ENTRIES WHILE WAITING     @Z40FPYJ
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1                                               @Z40FPYJ
PRECOM2  ST    R8,PSAGPREG    SAVE REG 8                       @Z40FPYJ
         USING BASE3,XTRBASE                                   @Z40FPYJ
         TM    FLCTRACE,TRON  IS CPU WAITING?                  @Z40FPYJ
         BNO   PRECOMB        NO, GO TRACE                     @Z40FPYJ
         LH    R8,FLCEICOD    GET EXT.INT.CODE                 @Z40FPYJ
         CH    R8,COMPINTC    CLOCK COMP?                      @Z40FPYJ
         BNE   PRECOMA        NO, TRACE IT                     @Z40FPYJ
EXIT1    L     R8,PSAGPREG    RESTORE R8                       @Z40FPYJ
         BR    XRET           RETURN-NO TRACE                  @Z40FPYJ
         DROP  XTRBASE
         SPACE 3                                               @Z40FPYJ
***      DISP  PRECOMMON  - ELIMINATE ENTRIES WHILE WAITING    @Z40FPYJ
         CNOP  0,8                                             @Z40FPYJ
         SPACE 1                                               @Z40FPYJ
PRECOM3  ST    R8,PSAGPREG      SAVE REG 8                     @Z40FPYJ
         USING BASE2,XTRBASE                                   @Z40FPYJ
         L     R8,PSAPSWSV+C4   2ND WORD OF PSW                @Z40FPYJ
         LTR   R8,R8            IS IT ZERO?                    @Z40FPYJ
         BNZ   PRECOMA          NO, GO TRACE                   @Z40FPYJ
         TM    FLCTRACE,TRON    YES, ARE WE WAITING            @Z40FPYJ
         BO    EXIT1            EXIT                           @Z40FPYJ
         OI    FLCTRACE,TRON    TURN ON CPU WAITING FLAG       @Z40FPYJ
         B     PRECOMB          GO TO COMMON                   @Z40FPYJ
         EJECT                                                 @Z40FPYJ
*        THIS INSTRUCTION IS THE SUBJECT OF AN EXECUTE INST.
*        IT INSERTS THE ILC INTO BITS 32 AND 33 OF PSW IN TRACE TABLE
         SPACE 1
         CNOP  0,8                                             @Z40FPYJ
ILCINPSW OI    PSW+ILC(TRPTRG),0   EXECUTED INSTRUCTION
         DROP  XTRBASE
         EJECT
***      CONSTANTS AND WORK AREAS
         SPACE 2
RBPFXLEN DC    A(RBPRFLNA)         LENGTH OF RB PREFIX       DCRR 20889
CC       DC    X'00000030'                                     @Z40FPYJ
LOGCPU   DC    X'00000040'         LOGICAL CPU VALUE           @Z40FPYJ
COMPINTC DC    X'1004'             CLOCK COMPARATOR EXT. INT. CODE
         SPACE 3
***      DSECT DEFINITIONS OF CONTROL BLOCKS AND WORK AREAS
         SPACE 2
STORAGE  DSECT                     CCA COMMON WORK/SAVE AREA     Y02136
CLOCK    DS    D                   WORK AREA FOR READING TOD CLOCK
CLOCKV   EQU   CLOCK+2             ONLY BYTES 2-5 TRACED
         SPACE 2
TREGSV   DS    5F                  REGISTER SAVE AREA R11-15
TREGSV12 EQU   TREGSV+4            SLOT FOR GPR 12
TREGSV15 EQU   TREGSV+16           SLOT FOR GPR 15
TREG8SV  DS    F                   REGISTER 8 SAVE AREA          Y02136
TRFP0    DS    D                   SLOT FOR FP REG 0           @ZA16400
         SPACE 2
         IEAPXNIP TRACE=MAP        TRACE TABLE HEADER
         EJECT
*** FIXED LOW CORE AND PREFIXED STORAGE AREA DESCRIPTION
         IHAPSA
PSACPUID EQU   PSACPULA+1          SECOND BYTE OF LOGICAL ADDR. TRACED
         EJECT
***      REQUEST BLOCK DESCRIPTION
         IHARB
         EJECT
***      TASK CONTROL BLOCK DESCRIPTION
         IKJTCB
         EJECT
***      ADDRESS SPACE CONTROL BLOCK DESCRIPTION
         IHAASCB
         EJECT
***      TIMER QUEUE ELEMENT DESCRIPTION
         IHATQE
         EJECT
***      DESCRIPTION OF SERVICE REQUEST BLOCK
         IHASRB
         IECDIOSB
         EJECT
***      DESCRIPTION OF PHYSICAL CCA ELEMENT
         IHAPCCA
         EJECT
***      DESCRIPTION OF LOGICAL CCA ELEMENT
         IHALCCA
         EJECT
***      DESCRIPTION OF WORK/SAVE AREA VECTOR TABLE
         IHAWSAVT CLASS=CPU
         END
