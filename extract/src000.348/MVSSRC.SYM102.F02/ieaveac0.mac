         TITLE 'IEAVEAC0 - ASCB DISPATCHING QUEUE CHAINER              *
                        '
IEAVEAC0 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVEAC0  74.039'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
*   STM(REG8,REG1,ACSAVEA);         /* SAVE REGISTERS 8-1 INCLUDING
*                                      EP                            */
         STM   REG8,REG1,ACSAVEA(REG13)                            0060
*   RFY                                                            0061
*     REG0 UNRSTD;                                                 0061
*   REG9=CVTPTR;                    /* ADDRESS OF THE CVT            */
         L     REG9,CVTPTR                                         0062
*   RFY                                                            0063
*     CVTMAP BASED(REG9);                                          0063
*                                                                  0063
*/* P  ESTABLISH BASE REGISTER                                       */
*                                                                  0064
*   REG10=R15WORK;                  /* INITIALIZE BASE REGISTER AT 0064
*                                      EXECUTION TIME                */
         LR    REG10,R15WORK                                       0064
*   GEN(USING IEAVEAC0,REG10);      /* SPECIFY BASE REGISTER         */
         USING IEAVEAC0,REG10
*/* S LOCK: OBTAIN GLOBAL DISPATCHER LOCK                            */
*                                                                  0066
*   CALL LOCK;                      /* UNCONDITIONALLY REQUEST LOCK  */
         BAL   @14,LOCK                                            0066
*   REG8->FRR6LOCK=R15WORK;         /* SAVE SETLOCK RETURN CODE      */
         STC   R15WORK,FRR6LOCK(,REG8)                             0067
*   ACLOCKRC=R15WORK;               /* SAVE SETLOCK RETURN CODE      */
         STC   R15WORK,ACLOCKRC(,REG13)                            0068
*   RFY                                                            0069
*     R15WORK UNRSTD;                                              0069
*   RFY                                                            0070
*     REG8 UNRSTD;                                                 0070
*                                                                  0070
*/* P INITIALIZE RETURN CODE TO ZERO                                 */
*                                                                  0071
*   ACRETCOD=RC0;                   /* SET CODE 0                  0071
*                                                                    */
         MVI   ACRETCOD(REG13),X'00'                               0071
*                                                                  0072
*/* D (NO,%AC3,YES,) WAS MOVE OPTION SPECIFIED ?                     */
*                                                                  0072
*   IF ACECODE=CODE0MOV THEN        /* WAS ENTRY CODE 0 SPECIFIED ?  */
         CLI   ACECODE(REG13),0                                    0072
         BNE   @RF00072                                            0072
*     DO;                           /* MOVE OPTION                   */
*                                                                  0073
*       /*************************************************************/
*       /*                                                           */
*       /* MOVE OPTION                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0074
*AC000300:                                                         0074
*       DO;                         /* PROCESS ALL PARAMETER LIST  0074
*                                      ENTRIES                       */
AC000300 DS    0H                                                  0075
*/* AC000300: D (YES,%AC8,NO,) IS GIVEN ASCB TOP ON QUEUE ?          */
*                                                                  0075
*         R11PARM=MOVEASCB;         /* ADDRESS OF ASCB               */
         L     R11PARM,MOVEASCB(,REG1)                             0075
*         IF R11PARM^=CVTASCBH THEN /* IF NOT TOP ASCB       @YM03475*/
         L     @08,CVTASCBH(,REG9)                                 0076
         CR    R11PARM,@08                                         0076
         BE    @RF00076                                            0076
*           DO;                     /* CHAP THIS ASCB                */
*/* S DEQUEUE:  DEQUEUE GIVEN ASCB                                   */
*                                                                  0078
*             DO;                   /* INVOKE DEQUEUE                */
*               R12SCAN=CVTASCBH;   /* START SCANNING FROM TOP OF  0079
*                                      QUEUE                         */
         LR    R12SCAN,@08                                         0079
*               CALL DEQUEUE;       /* DEQUEUE ASCB                  */
         BAL   @14,DEQUEUE                                         0080
*             END;                  /* DEQUEUE INVOKED               */
*/* P SAVE OLD, SET NEW PRIORITY INTO THE DEQUEUED ASCB              */
*                                                                  0082
*             RFY                                                  0082
*               REG0 RSTD;                                         0082
*             REG0=R11PARM->ASCBDP; /* SAVE                  @YM01849*/
         SLR   REG0,REG0                                           0083
         IC    REG0,ASCBDP(,R11PARM)                               0083
*             R11PARM->ASCBDP=MOVEDP;/* PASS NEW DISPATCHING PRIORITY
*                                                            @YM01849*/
         MVC   ASCBDP(1,R11PARM),MOVEDP+1(REG1)                    0084
*             RFY                                                  0085
*               R15WORK RSTD;                                      0085
*                                                                  0085
*/* D (YES,%AC7,NO,) WAS ASCB ON THE QUEUE ?                         */
*                                                                  0086
*             IF R15WORK>ZERO THEN  /* IF ASCB NOT DEQUEUED THEN     */
         LTR   R15WORK,R15WORK                                     0086
         BNP   @RF00086                                            0086
*               DO;                 /* NOTIFY INVOKER                */
*                 RFY                                              0088
*                   R15WORK UNRSTD;                                0088
*                                                                  0088
*/* P (,%AC8) SET INDICATOR IN PARM LIST AND RETURN CODE 4           */
*                                                                  0089
*                 MOVEOFF='1'B;     /* NOTE ASCB NOT FOUND OR ONLY 0089
*                                      ASCB ON QUEUE                 */
         OI    MOVEOFF(REG1),B'01000000'                           0089
*                 ACRETCOD=RC4;     /* RETURN CODE                   */
         MVI   ACRETCOD(REG13),X'04'                               0090
*                 RFY                                              0091
*                   R15WORK UNRSTD;                                0091
*               END;                /* INVOKER NOTIFIED              */
*/* %AC7: S ENQUEUE:  ENQUEUE ASCB AT GIVEN PRIORITY                 */
*                                                                  0093
*             ELSE                  /* IF ASCB SUCCESSFULLY DEQUEUED
*                                      THEN                          */
*               DO;                 /* INVOKE ENQUEUE                */
         B     @RC00086                                            0093
@RF00086 DS    0H                                                  0094
*                 IF(MOVEDP>REG0)×(R11PARM->ASCBBWDP=ZERO) THEN/* IF
*                                      ASCB GOES HIGHER ON THE QUEUE */
         CH    REG0,MOVEDP(,REG1)                                  0094
         BL    @RT00094                                            0094
         ICM   @08,15,ASCBBWDP(R11PARM)                            0094
         BNZ   @RF00094                                            0094
@RT00094 DS    0H                                                  0095
*                   R12SCAN=CVTASCBH;/* START SCANNING FROM TOP OF 0095
*                                      QUEUE                         */
         L     R12SCAN,CVTASCBH(,REG9)                             0095
*                 ELSE              /* IF ASCB GOES LOWER ON QUEUE 0096
*                                      THEN                          */
*                   R12SCAN=R11PARM->ASCBBWDP;/* START SCANNING FROM
*                                      LAST ASCB POSITION            */
         B     @RC00094                                            0096
@RF00094 L     R12SCAN,ASCBBWDP(,R11PARM)                          0096
*                 R11PARM=R11PARM;  /* PASS DEQUEUED ASCB            */
@RC00094 DS    0H                                                  0098
*                 CALL ENQUEUE;     /* REENQUEUE ASCB                */
         BAL   @14,ENQUEUE                                         0098
*               END;                /* ENQUEUE INVOKED               */
*             RFY                                                  0100
*               REG0 UNRSTD;                                       0100
@RC00086 DS    0H                                                  0101
*           END;                    /* ASCB NOW CHAPPED              */
*/* %AC8: D (NO,AC000300,YES,) ALL INPUT ASCB'S CHAPPED ?            */
*                                                                  0102
*         IF MOVELAST='0'B THEN     /* IF LAST VECTOR ENTRY NOT YET
*                                      PROCESSED THEN                */
@RF00076 TM    MOVELAST(REG1),B'10000000'                          0102
         BNZ   @RF00102                                            0102
*           DO;                                                    0103
*             REG1=ADDR(MOVENEXT);  /* INCREMENT PARAMETER VECTOR  0104
*                                      POINTER                       */
         LA    @08,MOVENEXT(,REG1)                                 0104
         LR    REG1,@08                                            0104
*             GOTO AC000300;        /* REPEAT LOOP                   */
         B     AC000300                                            0105
*           END;                                                   0106
*       END AC000300;               /* ALL PARAMETER VECTOR ENTRIES
*                                      PROCESSED                     */
@RF00102 DS    0H                                                  0108
*/* S SEQUENCE:  REORDER ASCB SEQUENCE NUMBERS                       */
*                                                                  0108
*       DO;                         /* INVOKE SEQUENCE               */
*         RFY                                                      0109
*           R15WORK RSTD;                                          0109
*         R15WORK=TWO;              /* SEQUENCE NUMBER OF SECOND   0110
*                                      ELEMENT ON QUEUE      @YM03475*/
         LA    R15WORK,2                                           0110
*         R12SCAN=CVTASCBH->ASCBFWDP;/* START SCANNING AT NEXT FROM
*                                      TOP OF QUEUE          @YM03475*/
         L     @14,CVTASCBH(,REG9)                                 0111
         L     R12SCAN,ASCBFWDP(,@14)                              0111
*         CALL SEQUENCE;            /* REORDER ASCB SEQUENCE NUMBERS */
         BAL   @14,SEQUENCE                                        0112
*         RFY                                                      0113
*           R15WORK UNRSTD;                                        0113
*       END;                        /* SEQUENCE INVOKED              */
*/* P (,%AC6) SET MEMORY SWITCH CODE TO DISPATCH FROM TOP OF QUEUE   */
*                                                                  0115
*       REG1=ZERO;                  /* PASS ENTRY CODE FOR RESET TO
*                                      TOP OF DISPATCHING QUEUE      */
         SLR   REG1,REG1                                           0115
*     END;                          /* END MOVE                    0116
*                                                                    */
*                                                                  0117
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR ADD OR DELETE AT TOP OF QUEUE                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0117
*/* %AC3: D (YES,AC000400,NO,) IS INPUT ASCB TOP ON QUEUE ?          */
*                                                                  0117
*   ELSE                                                           0117
*     IF REG1=CVTASCBH THEN         /* IF TOP OF QUEUE       @YM03475*/
         B     @RC00072                                            0117
@RF00072 L     @08,CVTASCBH(,REG9)                                 0117
         CR    REG1,@08                                            0117
         BE    @RT00117                                            0117
*       GOTO AC000400;              /* IGNORE REQUEST        @YM03475*/
*/* D (NO,AC000100,YES,) WAS ADD OPTION SPECIFIED ?                  */
*                                                                  0119
*     ELSE                          /* NOT MOVE OPTION               */
*       IF ACECODE=CODE1ADD THEN    /* WAS ENTRY CODE 1 SPECIFIED ?  */
         CLI   ACECODE(REG13),1                                    0119
         BNE   @RF00119                                            0119
*         DO;                       /* ADD OPTION                    */
*                                                                  0120
*           /*********************************************************/
*           /*                                                       */
*           /* ADD OPTION                                            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0121
*/* S ENQUEUE:  ENQUEUE ASCB AT GIVEN PRIORITY                       */
*                                                                  0121
*           DO;                     /* INVOKE ENQUEUE                */
*             R11PARM=REG1;         /* PASS ASCB ADDRESS             */
         LR    R11PARM,REG1                                        0122
*             R12SCAN=CVTASCBH;     /* START SCANNING AT TOP OF QUEUE*/
         LR    R12SCAN,@08                                         0123
*             CALL ENQUEUE;         /* ENQUEUE ASCB                  */
         BAL   @14,ENQUEUE                                         0124
*           END;                    /* ENQUEUE INVOKED               */
*/* S SEQUENCE:  REORDER ASCB SEQUENCE NUMBERS                       */
*                                                                  0126
*           DO;                     /* INVOKE SEQUENCE               */
*             RFY                                                  0127
*               R15WORK RSTD;                                      0127
*             R15WORK=REG1->ASCBBWDP->ASCBSEQN+ONE;/* FIRST NUMBER TO
*                                      BE ASSIGNED           @YM03475*/
         L     @08,ASCBBWDP(,REG1)                                 0128
         LA    R15WORK,1                                           0128
         AH    R15WORK,ASCBSEQN(,@08)                              0128
*             R12SCAN=REG1;         /* START SCANNING AT THIS ASCB   */
         LR    R12SCAN,REG1                                        0129
*             CALL SEQUENCE;        /* REORDER ASCB SEQUENCE NUMBERS */
         BAL   @14,SEQUENCE                                        0130
*             RFY                                                  0131
*               R15WORK UNRSTD;                                    0131
*           END;                    /* SEQUENCE INVOKED              */
*/* P (,%AC6) SET MEMORY SWITCH CODE TO RESET ASCB NEW               */
*                                                                  0133
*           REG1=REG1;              /* PASS ASCB ADDRESS             */
*         END;                      /* END ADD OPTION              0134
*                                                                    */
*       ELSE                        /* ASSUME ENTRY CODE 2           */
*         DO;                       /* DELETE OPTION                 */
*                                                                  0135
         B     @RC00119                                            0135
@RF00119 DS    0H                                                  0136
*           /*********************************************************/
*           /*                                                       */
*           /* DELETE OPTION                                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0136
*/* AC000100: D (NO,AC000200,YES,) IS A TASK ACTIVE IN THE MEMORY ?  */
*                                                                  0136
*AC000100:                          /*                       @YM02483*/
*           IF REG1->ASCBCPUS<=ZERO THEN/* IF NO ACTIVE TASKS      0136
*                                                            @YM01849*/
AC000100 SLR   @08,@08                                             0136
         C     @08,ASCBCPUS(,REG1)                                 0136
         BNL   @RT00136                                            0136
*             GOTO AC000200;        /* GO UNCHAIN ASCB       @YM01849*/
*/* S UNLOCK: RELEASE GLOBAL DISP LOCK                               */
*                                                                  0138
*           RFY                                                    0138
*             REG0 RSTD;                                           0138
*           REG0=LOCK0;             /* SPECIFY RELEASE GLOBAL      0139
*                                      DISPATCHER LOCK       @YM01849*/
         LR    REG0,@08                                            0139
*           CALL UNLOCK;            /* RELEASE LOCK FOR SPIN @YM01849*/
         BAL   @14,UNLOCK                                          0140
*           RFY                                                    0141
*             REG0 UNRSTD;                                         0141
*                                                                  0142
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK IF ALTERNATE CPU RECOVERY (ACR) HAS BEEN        */
*           /* ENTERED. IF SO, BRANCH TO ACR DISABLED TO ALLOW ACR   */
*           /* PROCESSING TO COMPLETE. THIS IS REQUIRED, BECAUSE THIS*/
*           /* ROUTINE RUNS IN SRB MODE WHILE SPINNING ON ASCBCPUS.  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0142
*/* %AC1: D (NO,%AC2,YES,) HAS ACR BEEN ENTERED ?                    */
*                                                                  0142
*           IF LCCAACR='1'B THEN    /* ACR IN PROCESS ?      @YM01849*/
         L     @08,PSALCCAV                                        0142
         TM    LCCAACR(@08),B'10000000'                            0142
         BNO   @RF00142                                            0142
*             DO;                   /* CALL ACR              @YM01849*/
*/* P DISABLE EXTERNAL AND I/O INTERRUPTS                            */
*                                                                  0144
*               GEN(STNSM ACOMASK(REG13),DMASK);/* DISABLE   @YM01849*/
         STNSM ACOMASK(REG13),DMASK
*               R15WORK=REG10;      /* SAVE BASE REGISTER    @YM01849*/
         LR    R15WORK,REG10                                       0145
*/* L ACR: ALLOW ALTERNATE CPU RECOVERY TO COMPLETE                  */
*                                                                  0146
*               REG10=PSALCCAV;     /* ADDRESS OF CURRENT LCCA     0146
*                                                            @YM01849*/
         L     REG10,PSALCCAV                                      0146
*               GENERATE REFS(LCCA,LCCACPUS,WSAC,WSACACR,CVTMAP,   0147
*                   CVTBTERM);                                     0147
         CALLRTM TYPE=ACRLM,CCA=(REG10) INVOKE ACR             @YM01849
*               REG10=R15WORK;      /* RESTORE BASE REG      @YM01849*/
         LR    REG10,R15WORK                                       0148
*/* P  RESET PSW MASK                                                */
*                                                                  0149
*               R15WORK=ACOMASK;    /* ORIGINAL PSW MASK     @YM01849*/
         SLR   R15WORK,R15WORK                                     0149
         IC    R15WORK,ACOMASK(,REG13)                             0149
*               GEN(EX    R15WORK,ACENABLE);/* ENABLE        @YM01849*/
         EX    R15WORK,ACENABLE
*             END;                  /* END ACR CALL          @YM01849*/
*                                                                  0151
*           /*********************************************************/
*           /*                                                       */
*           /* REOBTAIN DISP LOCK TO CHECK FOR ACTIVE TASK           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0152
*/* %AC2: S (,AC000100) LOCK: OBTAIN GLOBAL DISP LOCK                */
*                                                                  0152
*           RFY                                                    0152
*             REG8 RSTD;                                           0152
@RF00142 DS    0H                                                  0153
*           CALL LOCK;              /* REOBTAIN DISPATCHER LOCK    0153
*                                                            @YM01849*/
         BAL   @14,LOCK                                            0153
*           REG8->FRR6LOCK=ACLOCKRC;/* RESET ORIGINAL SETLOCK RETURN
*                                      CODE                  @YM01849*/
         MVC   FRR6LOCK(1,REG8),ACLOCKRC(REG13)                    0154
*           RFY                                                    0155
*             REG8 UNRSTD;                                         0155
*           GOTO AC000100;          /* CONTINUE WAIT LOOP    @YM01849
*                                                                    */
         B     AC000100                                            0156
*                                                                  0157
*           /*********************************************************/
*           /*                                                       */
*           /* ALL TASKS IN THE ADDRESS SPACE STOPPED, UNCHAIN ASCB  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0157
*/* AC000200: S DEQUEUE: UNCHAIN INPUT ASCB                          */
*                                                                  0157
*AC000200:                          /*                       @YM02483*/
*           DO;                     /* INVOKE DEQUEUE                */
AC000200 DS    0H                                                  0158
*             R11PARM=REG1;         /* PASS ADDRESS OF ASCB TO     0158
*                                      DEQUEUE                       */
         LR    R11PARM,REG1                                        0158
*             R12SCAN=CVTASCBH;     /* START SCANNING AT TOP OF QUEUE*/
         L     R12SCAN,CVTASCBH(,REG9)                             0159
*             CALL DEQUEUE;         /* DEQUEUE ASCB                  */
         BAL   @14,DEQUEUE                                         0160
*           END;                    /* DEQUEUE INVOKED               */
*/* P  IF DEQUEUE FAILED THEN SET RETURN CODE                        */
*                                                                  0162
*           IF R15WORK>ZERO THEN    /* IF ASCB NOT DEQUEUED THEN     */
         LTR   R15WORK,R15WORK                                     0162
         BNP   @RF00162                                            0162
*             ACRETCOD=RC4;         /* RETURN ERROR CODE             */
         MVI   ACRETCOD(REG13),X'04'                               0163
*/* P SET CODE TO DISPATCH FROM TOP OF QUEUE                         */
*                                                                  0164
*           REG1=ZERO;              /* MEMORY SWITCH ENTRY CODE    0164
*                                                            @YM02483*/
@RF00162 SLR   REG1,REG1                                           0164
*         END;                      /* END DELETE OPTION           0165
*                                                                    */
*                                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT LINKAGE                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*/* %AC6: L IEAVEMS0: MEMORY SWITCH                                  */
*                                                                  0166
*   CALL IEAVEMS0;                  /* CALL MEMORY SWITCH WITH CODE
*                                      AS SET IN REG1        @YM02483*/
@RC00119 DS    0H                                                  0166
@RC00072 L     @15,@CV01750                                        0166
         BALR  @14,@15                                             0166
*/* AC000400: P SET UNLOCK ENTRY CODE TO SETLOCK RETURN CODE         */
*                                                                  0167
*   RFY                                                            0167
*     REG0 RSTD;                                                   0167
*AC000400:                                                         0168
*   REG0=ACLOCKRC;                  /* DETERMINES WHETHER LOCK IS  0168
*                                      FREED                         */
AC000400 SLR   REG0,REG0                                           0168
         IC    REG0,ACLOCKRC(,REG13)                               0168
*/* S UNLOCK: CANCEL FRR AND COND FREE LOCK                          */
*                                                                  0169
*   CALL UNLOCK;                    /* INVOKE SUBROUTINE             */
         BAL   @14,UNLOCK                                          0169
*/* P RESTORE REGS, SET RETURN CODE                                  */
*                                                                  0170
*   RFY                                                            0170
*     REG8 RSTD;                                                   0170
*   RFY                                                            0171
*     REG14 RSTD;                                                  0171
*   ACSAVE13=REG13;                 /* SET SAVE AREA ADDRESS INTO  0172
*                                      SAVE AREA                     */
         ST    REG13,ACSAVE13(,REG13)                              0172
*   LM(REG8,REG1,ACSAVEA);          /* RESTORE REGS 8 - 1            */
         LM    REG8,REG1,ACSAVEA(REG13)                            0173
*   R15WORK=ACRETCOD;               /* RETURN CODE                   */
         SLR   R15WORK,R15WORK                                     0174
         IC    R15WORK,ACRETCOD(,REG13)                            0174
*/* R () RETURN TO CALLER                                            */
*                                                                  0175
*   GOTO REG14;                     /* RETURN                        */
         BR    REG14                                               0175
*   RFY                                                            0176
*     REG0 UNRSTD;                                                 0176
*   RFY                                                            0177
*     REG8 UNRSTD;                                                 0177
*   RFY                                                            0178
*     REG14 UNRSTD;                                                0178
*   RFY                                                            0179
*     R15WORK UNRSTD;                                              0179
*                                                                  0179
*/* IEAVEAC0: END FLOWCHART                                          */
*                                                                  0180
*                                                                  0180
*/* ENQUEUE: CHART                                                   */
*/* FOOTING                                                        0180
*/* SUBROUTINE CHAINS ASCB ONTO DISPATCHING QUEUE                    */
*                                                                  0180
*ENQUEUE:                                                          0180
*   PROC                            /* ENQUEUE ASCB TO QUEUE AT GIVEN
*                                      PRIORITY                      */
*       OPTIONS(NOSAVEAREA,NOSAVE); /* REG14 ADDRESSES RETURN POINT  */
@EL00001 DS    0H                                                  0180
@EF00001 DS    0H                                                  0180
@ER00001 BR    @14                                                 0180
@PB00001 DS    0H                                                  0180
ENQUEUE  DS    0H                                                  0181
*   RFY                                                            0181
*     REG14 RSTD;                   /* PRESERVE RETURN REGISTER      */
*                                                                  0181
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQUEUE SUBROUTINE. AT ENTRY AND EXIT R11PARM->ASCB FOR       */
*   /* ENQUEUEING, AND R12SCAN->ASCB FROM WHICH DOWNWARD QUEUE SCAN  */
*   /* STARTS. FOR EXAMPLE R12SCAN=CVTASCBH SCANS ENTIRE QUEUE.      */
*   /* R12SCAN AND R15WORK CLOBBERED. THIS SUBROUTINE ASSUMES THAT   */
*   /* THE INPUT ASCB IS NOT THE TOP ASCB ON THE QUEUE, AND THAT THE */
*   /* TOP ASCB ALWAYS HAS DISPATCHING PRIORITY 255.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0182
*/* E  BEGIN ENQUEUE                                                 */
*/* P  MARK ASCB ENQUEUED                                            */
*                                                                  0182
*   R11PARM->ASCBNOQ='0'B;          /* MARK ASCB ENQUEUED            */
         NI    ASCBNOQ(R11PARM),B'01111111'                        0182
*/* P  FIND QUEUE POSITION FOR ENQUEUEING                            */
*                                                                  0183
*   DO WHILE(R12SCAN>ZERO           /* FIND END OF QUEUE             */
*         &R12SCAN->ASCBDP>=R11PARM->ASCBDP);/* OR A LOWER PRIORITY
*                                      ASCB                  @YM01849*/
         B     @DE00183                                            0183
@DL00183 DS    0H                                                  0184
*     R12SCAN=R12SCAN->ASCBFWDP;    /* SCAN ASCB QUEUE               */
         L     R12SCAN,ASCBFWDP(,R12SCAN)                          0184
*   END;                            /* END OF QUEUE OR LOWER PRIORITY
*                                      ASCB FOUND                    */
@DE00183 LTR   R12SCAN,R12SCAN                                     0185
         BNP   @DC00183                                            0185
         CLC   ASCBDP(1,R12SCAN),ASCBDP(R11PARM)                   0185
         BNL   @DL00183                                            0185
@DC00183 DS    0H                                                  0186
*/* P  ENQUEUE ASCB                                                  */
*                                                                  0186
*   /*****************************************************************/
*   /*                                                               */
*   /* CHAIN TOP POINTERS TO NEXT HIGHER PRIORITY ASCB               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*   DO;                             /* CHAIN PRECEEDING TO SUBJECT 0186
*                                      ASCB                          */
*     DO;                           /* FIND NEXT HIGHER PRIORITY ASCB*/
*       RFY                                                        0188
*         R15WORK RSTD;                                            0188
*       IF R12SCAN=ZERO THEN        /* IF ENQUEUEING TO BOTTOM OF  0189
*                                      QUEUE THEN                    */
         LTR   R12SCAN,R12SCAN                                     0189
         BNZ   @RF00189                                            0189
*         DO;                       /* CHAIN BOTTOM POINTERS TO    0190
*                                      BOTTOM OF QUEUE               */
*           R15WORK=CVTASCBL;       /* ENQUEUE AFTER LAST ASCB ON  0191
*                                      QUEUE                         */
         L     R15WORK,CVTASCBL(,REG9)                             0191
*           CVTASCBL=R11PARM;       /* CHAIN BOTTOM BACKWARD POINTER */
         ST    R11PARM,CVTASCBL(,REG9)                             0192
*         END;                      /* BOTTOM POINTERS CHAINED TO  0193
*                                      BOTTOM OF QUEUE               */
*       ELSE                        /* IF NOT ENQUEUEING TO BOTTOM OF
*                                      QUEUE THEN                    */
*         DO;                       /* CHAIN BOTTOM POINTERS TO NEXT
*                                      LOWER PRIORITY ASCB           */
         B     @RC00189                                            0194
@RF00189 DS    0H                                                  0195
*           R15WORK=R12SCAN->ASCBBWDP;/* ENQUEUE AFTER LAST ASCB   0195
*                                      SCANNED                       */
         L     R15WORK,ASCBBWDP(,R12SCAN)                          0195
*           R12SCAN->ASCBBWDP=R11PARM;/* CHAIN BOTTOM BACKWARD     0196
*                                      POINTER                       */
         ST    R11PARM,ASCBBWDP(,R12SCAN)                          0196
*         END;                      /* BOTTOM POINTERS CHAINED TO  0197
*                                      NEXT LOWER PRIORITY ASCB      */
*     END;                          /* NEXT HIGHER PRIORITY ASCB   0198
*                                      FOUND                         */
*                                                                  0198
@RC00189 DS    0H                                                  0199
*     /***************************************************************/
*     /*                                                             */
*     /* CHAIN TOP POINTERS TO NEXT HIGHER PRIORITY ASCB             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0199
*     R15WORK->ASCBFWDP=R11PARM;    /* CHAIN TOP FOREWARD POINTER    */
         ST    R11PARM,ASCBFWDP(,R15WORK)                          0199
*     R11PARM->ASCBBWDP=R15WORK;    /* CHAIN TOP BACKWARD POINTER    */
*                                                                  0200
         ST    R15WORK,ASCBBWDP(,R11PARM)                          0200
*     /***************************************************************/
*     /*                                                             */
*     /* CHAIN BOTTOM POINTER                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0201
*     R11PARM->ASCBFWDP=R12SCAN;    /* CHAIN BOTTOM FORWARD POINTER  */
         ST    R12SCAN,ASCBFWDP(,R11PARM)                          0201
*   END;                            /* SUBJECT CHAINED TO PRECEEDING
*                                      ASCB                          */
*/* R () END ENQUEUE                                                 */
*                                                                  0203
*   RFY                                                            0203
*     REG14 UNRSTD;                 /* RELEASE RETURN REGISTER       */
*   RFY                                                            0204
*     R15WORK UNRSTD;                                              0204
*   END ENQUEUE;                    /* ASCB ENQUEUED TO QUEUE AT   0205
*                                      GIVEN PRIORITY                */
@EL00002 DS    0H                                                  0205
@EF00002 DS    0H                                                  0205
@ER00002 BR    @14                                                 0205
*/* ENQUEUE: END FLOWCHART                                           */
*                                                                  0206
*                                                                  0206
*/* DEQUEUE: CHART                                                   */
*/* FOOTING                                                        0206
*/* SUBROUTINE UNCHAINS ASCB FROM THE DISPATCHING QUEUE              */
*                                                                  0206
*DEQUEUE:                                                          0206
*   PROC                            /* DEQUEUE GIVEN ASCB FROM QUEUE */
*       OPTIONS(NOSAVEAREA,NOSAVE); /* REG14 ADDRESSES RETURN POINT  */
DEQUEUE  DS    0H                                                  0207
*   RFY                                                            0207
*     REG14 RSTD;                   /* PRESERVE RETURN REGISTER      */
*                                                                  0207
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQUEUE SUBROUTINE. AT ENTRY AND EXIT R11PARM->ASCB GIVEN FOR */
*   /* DELETION, AND R12SCAN->ASCB FROM WHICH DOWNWARD QUEUE SCANNING*/
*   /* STARTS. FOR EXAMPLE R12SCAN=CVTASCBH SCANS ENTIRE QUEUE.      */
*   /* R12SCAN CLOBBERED AND R15WORK SET TO RETURN CODE. THIS        */
*   /* SUBROUTINE ASSUMES THAT THE INPUT ASCB IS NOT THE TOP ASCB ON */
*   /* THE QUEUE.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*/* E  BEGIN DEQUEUE                                                 */
*/* P  MARK ASCB DEQUEUED                                            */
*                                                                  0208
*   R11PARM->ASCBNOQ='1'B;          /* MARK ASCB DEQUEUED            */
         OI    ASCBNOQ(R11PARM),B'10000000'                        0208
*/* P  FIND GIVEN ASCB OR BOTTOM OF QUEUE                            */
*                                                                  0209
*   DO WHILE(R12SCAN>ZERO           /* UNTIL BOTTOM OF QUEUE REACHED */
*         &R12SCAN^=R11PARM);       /* OR GIVEN ASCB FOUND           */
         B     @DE00209                                            0209
@DL00209 DS    0H                                                  0210
*     R12SCAN=R12SCAN->ASCBFWDP;    /* SCAN ASCB QUEUE               */
         L     R12SCAN,ASCBFWDP(,R12SCAN)                          0210
*   END;                            /* GIVEN ASCB FOUND OR END OF  0211
*                                      QUEUE REACHED                 */
@DE00209 LTR   R12SCAN,R12SCAN                                     0211
         BNP   @DC00209                                            0211
         CR    R12SCAN,R11PARM                                     0211
         BNE   @DL00209                                            0211
@DC00209 DS    0H                                                  0212
*/* P  SET RETURN CODE DEPENDING UPON RESULT OF SEARCH               */
*                                                                  0212
*   RFY                                                            0212
*     R15WORK RSTD;                                                0212
*   IF R12SCAN=ZERO THEN            /* IF QUEUE DOES NOT CONTAIN   0213
*                                      GIVEN ASCB THEN               */
         LTR   R12SCAN,R12SCAN                                     0213
         BNZ   @RF00213                                            0213
*     R15WORK=RC4;                  /* NOTIFY INVOKER                */
         LA    R15WORK,4                                           0214
*   ELSE                            /* IF NOTHING UNTOWARD HAPPENED
*                                      THEN                          */
*     DO;                           /* ACCEPT REQUEST                */
         B     @RC00213                                            0215
@RF00213 DS    0H                                                  0216
*       R15WORK=RC0;                /* RETURN CODE FOR DEQUEUE     0216
*                                      PERFORMED                     */
         SLR   R15WORK,R15WORK                                     0216
*/* P  DEQUEUE ASCB IF OK                                            */
*                                                                  0217
*       /*************************************************************/
*       /*                                                           */
*       /* RECHAIN TOP POINTER                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0217
*       R12SCAN->ASCBBWDP->ASCBFWDP=R12SCAN->ASCBFWDP;/* CHAIN TOP 0217
*                                      POINTER SO                    */
*                                                                  0217
         L     @08,ASCBBWDP(,R12SCAN)                              0217
         MVC   ASCBFWDP(4,@08),ASCBFWDP(R12SCAN)                   0217
*       /*************************************************************/
*       /*                                                           */
*       /* RECHAIN BOTTOM POINTER                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0218
*       IF R12SCAN=CVTASCBL THEN    /* IF DEQUEUEING FROM BOTTOM OF
*                                      QUEUE THEN                    */
         C     R12SCAN,CVTASCBL(,REG9)                             0218
         BNE   @RF00218                                            0218
*         CVTASCBL=R12SCAN->ASCBBWDP;/* CHAIN BOTTOM POINTER THUS    */
         ST    @08,CVTASCBL(,REG9)                                 0219
*       ELSE                        /* IF NOT DEQUEUEING FROM BOTTOM
*                                      OF QUEUE THEN                 */
*         R12SCAN->ASCBFWDP->ASCBBWDP=R12SCAN->ASCBBWDP;/* CHAIN   0220
*                                      BOTTOM POINTER SO             */
         B     @RC00218                                            0220
@RF00218 L     @08,ASCBFWDP(,R12SCAN)                              0220
         MVC   ASCBBWDP(4,@08),ASCBBWDP(R12SCAN)                   0220
*     END;                                                         0221
*                                                                  0221
*/* R () END DEQUEUE                                                 */
*                                                                  0222
*   RFY                                                            0222
*     REG14 UNRSTD;                 /* RELEASE RETURN REGISTER       */
*   RFY                                                            0223
*     R15WORK UNRSTD;                                              0223
*   END DEQUEUE;                    /* GIVEN ASCB DEQUEUED FROM QUEUE*/
@EL00003 DS    0H                                                  0224
@EF00003 DS    0H                                                  0224
@ER00003 BR    @14                                                 0224
*   RFY                                                            0225
*     R15WORK UNRSTD;                                              0225
*                                                                  0225
*/* DEQUEUE: END FLOWCHART                                           */
*                                                                  0226
*                                                                  0226
*/* SEQUENCE: CHART                                                  */
*/* FOOTING                                                        0226
*/* SUBROUTINE RENUMBERS THE ASCB SEQUENCING                         */
*                                                                  0226
*SEQUENCE:                                                         0226
*   PROC                            /* REORDER THE ASCB QUEUE      0226
*                                      PRIORITY SEQUENCE NUMBERS     */
*       OPTIONS(NOSAVEAREA,NOSAVE); /* REG14 ADDRESSES RETURN POINT  */
SEQUENCE DS    0H                                                  0227
*   RFY                                                            0227
*     REG14 RSTD;                   /* PRESERVE RETURN REGISTER      */
*   RFY                                                            0228
*     R15WORK RSTD;                                                0228
*                                                                  0228
*   /*****************************************************************/
*   /*                                                               */
*   /* SEQUENCE SUBROUTINE. AT ENTRY R12SCAN->ASCB FOR START OF      */
*   /* DOWNWARD SCAN -- FOR EXAMPLE R12SCAN=CVTASCBH SCANS ENTIRE    */
*   /* QUEUE. R15WORK ON ENTRY CONTAINS THE FIRST SEQUENCE NUMBER TO */
*   /* BE ASSIGNED. R12SCAN AND R15WORK CLOBBERED.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0229
*/* E  BEGIN SEQUENCE                                                */
*/* P  PLACE SEQUENCE NUMBERS IN REMAINDER OF QUEUE                  */
*                                                                  0229
*   DO WHILE(R12SCAN>ZERO);         /* UNTIL END OF QUEUE REACHED    */
         B     @DE00229                                            0229
@DL00229 DS    0H                                                  0230
*     R12SCAN->ASCBSEQN=R15WORK;    /* NUMBER THIS ASCB              */
         STH   R15WORK,ASCBSEQN(,R12SCAN)                          0230
*     R12SCAN=R12SCAN->ASCBFWDP;    /* FIND NEXT ASCB                */
         L     R12SCAN,ASCBFWDP(,R12SCAN)                          0231
*     R15WORK=R15WORK+ONE;          /* FIND NEXT ORDINAL             */
         AH    R15WORK,@CH00088                                    0232
*   END;                            /* ENTIRE QUEUE RENUMBERED       */
@DE00229 LTR   R12SCAN,R12SCAN                                     0233
         BP    @DL00229                                            0233
*/* R () END SEQUENCE                                                */
*                                                                  0234
*   RFY                                                            0234
*     REG14 UNRSTD;                 /* RELEASE RETURN REGISTER       */
*   RFY                                                            0235
*     R15WORK UNRSTD;                                              0235
*   END SEQUENCE;                   /* ASCB QUEUE PRIORITY SEQUENCE
*                                      NUMBERS REORDERED             */
@EL00004 DS    0H                                                  0236
@EF00004 DS    0H                                                  0236
@ER00004 BR    @14                                                 0236
*/* SEQUENCE: END FLOWCHART                                          */
*                                                                  0237
*                                                                  0237
*/* LOCK: CHART                                                      */
*/* FOOTING                                                        0237
*/* SUBROUTINE OBTAINS THE GLOBAL DISPATCHER LOCK                    */
*                                                                  0237
*LOCK:                                                             0237
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);                          0237
*                                                                  0237
LOCK     DS    0H                                                  0238
*   /*****************************************************************/
*   /*                                                               */
*   /* REG8 SET TO ADDRESS OF FRR 6-WORD WORK AREA. R15WORK SET TO   */
*   /* SETLOCK RETURN CODE. REG0, R11PARM, R12SCAN ALTERED.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0238
*/* E ENTER LOCK                                                     */
*                                                                  0238
*   RFY                                                            0238
*     REG0 RSTD;                                                   0238
*   RFY                                                            0239
*     REG14 RSTD;                                                  0239
*   REG0=REG14;                     /* SAVE RETURN ADDRESS           */
         LR    REG0,REG14                                          0240
*/* L SETLOCK: OBTAIN DISPATCHER LOCK                                */
*                                                                  0241
*   RFY                                                            0241
*     REG8 RSTD;                    /* RESTRICT FROM COMPILER        */
*   REG8=REG13;                     /* SAVE SAVEAREA ADDRESS @YM00864*/
         LR    REG8,REG13                                          0242
*   GEN REFS(PSALITA) SETS(R11PARM,R12SCAN,REG13,REG14);           0243
*                                                                  0243
  SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,RELATED=(DISP,IEAVEAC0,UNLOCK)
*/* P  SAVE RETURN CODE                                              */
*                                                                  0244
*   RFY                                                            0244
*     R15WORK RSTD;                                                0244
*   R15WORK=REG13;                  /* SAVE RETURN CODE              */
         LR    R15WORK,REG13                                       0245
*   REG13=REG8;                     /* RESTORE SAVEAREA ADDRESS    0246
*                                                            @YM00864*/
         LR    REG13,REG8                                          0246
*/* L SETFRR:  ADD FRR                                               */
*                                                                  0247
*   REG14=ADDR(IEAVEAC3);           /* PASS ADDRESS OF FRR    @Y02753*/
         LA    REG14,IEAVEAC3                                      0247
*   GENERATE;                                                      0248
         SETFRR A,FRRAD=(REG14),PARMAD=(REG8),                         *
               WRKREGS=(R12SCAN,REG8)                           @Y02753
*   ACFRR6AD=REG8;                  /* SAVE ADDRESS OF FRR6WORD    0249
*                                                             @Y02753*/
         ST    REG8,ACFRR6AD(,REG13)                               0249
*   RFY                                                            0250
*     R15WORK UNRSTD;                                              0250
*   RFY                                                            0251
*     REG8 UNRSTD;                                                 0251
*   REG14=REG0;                     /* RESTORE RETURN ADDRESS        */
         LR    REG14,REG0                                          0252
*   RFY                                                            0253
*     REG0 UNRSTD;                                                 0253
*   RFY                                                            0254
*     REG14 UNRSTD;                                                0254
*                                                                  0254
*/* R () RETURN                                                      */
*                                                                  0255
*   END LOCK;                       /* END SUBROUTINE                */
@EL00005 DS    0H                                                  0255
@EF00005 DS    0H                                                  0255
@ER00005 BR    @14                                                 0255
*/* LOCK: END FLOWCHART                                              */
*                                                                  0256
*                                                                  0256
*/* UNLOCK: CHART                                                    */
*/* FOOTING                                                        0256
*/* SUBROUTINE RELEASES GLOBAL DISP LOCK                             */
*                                                                  0256
*UNLOCK:                                                           0256
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);                          0256
*                                                                  0256
UNLOCK   DS    0H                                                  0257
*   /*****************************************************************/
*   /*                                                               */
*   /* INPUT: REG0 CONTAINS ENTRY CODE, 0 - FREE THE GLOBAL          */
*   /* DISPATCHER LOCK. 4 - DO NOT FREE LOCK. REG0, R11PARM, R12SCAN,*/
*   /* REG8 ALTERED.                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0257
*/* E ENTER UNLOCK                                                   */
*                                                                  0257
*   RFY                                                            0257
*     REG0 RSTD;                                                   0257
*   RFY                                                            0258
*     REG14 RSTD;                                                  0258
*                                                                  0258
*/* L SETFRR:  DELETE FRR                                            */
*                                                                  0259
*   GENERATE;                                                      0259
*                                                                  0259
        SETFRR D,WRKREGS=(R12SCAN,R15WORK)                      @Y02753
*/* D (NO,%AC5,YES,) IS LOCK TO BE FREED ?                           */
*                                                                  0260
*   IF REG0^=LOCK4 THEN             /* SETLOCK RET CODE 4 IS LOCK  0260
*                                      HELD ON ENTRY TO ASCBCHAP     */
         CH    REG0,@CH00065                                       0260
         BE    @RF00260                                            0260
*     DO;                           /* RELEASE LOCK                  */
*/* L SETLOCK: RELEASE GLOBAL DISP LOCK                              */
*                                                                  0262
*       REG0=REG14;                 /* SAVE RETURN ADDRESS           */
         LR    REG0,REG14                                          0262
*       RFY                                                        0263
*         REG8 RSTD;                /* RESTRICT FROM COMPILER        */
*       REG8=REG13;                 /* SAVE SAVEAREA ADDRESS @YM00864*/
         LR    REG8,REG13                                          0264
*       GEN REFS(PSALITA) SETS(R11PARM,R12SCAN,REG13,REG14);       0265
  SETLOCK RELEASE,TYPE=DISP,RELATED=(DISP,IEAVEAC0,LOCK)
*       REG13=REG8;                 /* RESTORE SAVEAREA ADDRESS    0266
*                                                            @YM00864*/
         LR    REG13,REG8                                          0266
*       REG14=REG0;                 /* RESTORE RETURN ADDRESS        */
         LR    REG14,REG0                                          0267
*       RFY                                                        0268
*         REG8 UNRSTD;              /* RELEASE FOR COMPILER          */
*     END;                          /* SETLOCK INVOKED               */
*/* %AC5: R () RETURN                                                */
*                                                                  0270
*   END UNLOCK;                     /* RETURN TO CALLING POINT       */
@EL00006 DS    0H                                                  0270
@EF00006 DS    0H                                                  0270
@ER00006 BR    @14                                                 0270
*/* UNLOCK: END FLOWCHART                                            */
*                                                                  0271
*   RFY                                                            0271
*     REG0 UNRSTD;                                                 0271
*   RFY                                                            0272
*     REG14 UNRSTD;                                                0272
*                                                                  0273
*/* IEAVEAC3: CHART                                                  */
*/* FOOTING                                                        0273
*/* FRR FOR ASCBCHAP                                                 */
*                                                                  0273
*IEAVEAC3:                                                         0273
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/* FRR                      */
*                                                                  0273
IEAVEAC3 DS    0H                                                  0274
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS A FUNCTIONAL RECOVERY ROUTINE FOR ASCBCHAP. IT*/
*   /* INVOKES QUEUE VERIFIER (IEAVEQV0 AT ENTRY POINT IEAVEQV3) TO  */
*   /* VALIDATE THE ASCB DISPATCHING QUEUE, AND THEN PERCOLATES THE  */
*   /* ERROR. REGISTER USAGE: 0 - INPUT, ADDRESS OF A 200 BYTE WORK  */
*   /* AREA. 1 - ADDRESS OF THE SDWA.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0274
*/* E ENTER IEAVEAC3                                                 */
*                                                                  0274
*   RFY                                                            0274
*     REG14 RSTD;                                                  0274
*   RFY                                                            0275
*     R15WORK RSTD;                                                0275
*   REG10=R15WORK;                  /* FRR ENTRY POINT ADDRESS     0276
*                                                             @Y02753*/
         LR    REG10,R15WORK                                       0276
*   GEN(USING IEAVEAC3,REG10);      /* FRR ADDRESSABILITY     @Y02753*/
         USING IEAVEAC3,REG10
*   RFY                                                            0278
*     REG0 RSTD;                                                   0278
*   RFY                                                            0279
*     REG1 RSTD;                                                   0279
*   RFY                                                            0280
*     CVTMAP BASED(CVTPTR);                                        0280
*   RFY                                                            0281
*     REG9 RSTD;                                                   0281
*   REG9=REG0;                      /* ADDRESS OF 200 BYTE WORKAREA
*                                                             @Y02753*/
         LR    REG9,REG0                                           0282
*   REG6=REG14;                     /* SAVE RETURN ADDRESS    @Y02753*/
         LR    REG6,REG14                                          0283
*   RFY                                                            0284
*     REG14 UNRSTD;                                                0284
*                                                                  0284
*/* P SET RECORDING PARMS AND REQUEST RECORDING                      */
*                                                                  0285
*   DO;                             /* SETRP                       0285
*                                      RECORD(YES)RC(0)RECPARM(IDFRR)*/
*     RESPECIFY                                                    0286
*      (GPR00P,                                                    0286
*       GPR01P,                                                    0286
*       GPR14P,                                                    0286
*       GPR15P) RSTD;                                              0286
*     GPR01P->SDWARCDE=0;           /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0287
*     GPR01P->SDWARCRD='1'B;        /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0288
*     GPR15P=ADDR(IDFRR);           /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,IDFRR                                        0289
*     GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD PARAMETERS */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0290
*     RESPECIFY                                                    0291
*      (GPR00P,                                                    0291
*       GPR01P,                                                    0291
*       GPR14P,                                                    0291
*       GPR15P) UNRSTD;                                            0291
*   END;                            /*                        @Y02753*/
*   REG7=REG1;                      /* SAVE SDWA ADDRESS      @Y02753*/
         LR    REG7,REG1                                           0293
*   REG13=ADDR(QVSAVEA);            /* ADDRESS OF SAVE AREA   @Y02753*/
         LA    REG13,QVSAVEA(,REG9)                                0294
*   R15WORK=ZERO;                   /* SPECIFY CURRENT ADDRESS SPACE
*                                      FOR DUMP TASK          @Y02753*/
         SLR   R15WORK,R15WORK                                     0295
*/* L SDUMP: REQUEST DUMP OF THE TRACE TABLE                         */
*                                                                  0296
*   GENERATE;                                                      0296
*             /* NOTE: MACRO REQUIRES COMPILER ADEFS OPTION */
         LA    REG1,QVWORKA(,REG9)      ADDRESS OF LIST AREA    @Y02753
         MVC   0(SDUMPLNG,REG1),SDUMPLST MOVE LIST FORM         @Y02753
         SDUMP ASID=(R15WORK),BRANCH=YES,MF=(E,(1)) DUMP TRACE  @Y02753
*   RFY                                                            0297
*     R15WORK UNRSTD;                                              0297
*   REG0=REG7;                      /* ADDRESS OF SDWA INTO 0 FOR  0298
*                                      IEAVEQV3               @Y02753*/
         LR    REG0,REG7                                           0298
*   REG1=REG9;                      /* ADDRESS OF FRRWORKA    @Y02753*/
         LR    REG1,REG9                                           0299
*   RFY                                                            0300
*     REG8 RSTD;                                                   0300
*   REG8=ADDR(REG7->SDWARA);        /* ADDRESS OF OUTPUT DATA AREA 0301
*                                                             @Y02753*/
         LA    REG8,SDWARA(,REG7)                                  0301
*/* P BUILD PARAMETER LIST FOR IEAVEQV3                              */
*                                                                  0302
*   FRRWORKA=FRRWORKA&&FRRWORKA;    /* CLEAR WORKAREA         @Y02753*/
         XC    FRRWORKA(152,REG9),FRRWORKA(REG9)                   0302
*   RFY                                                            0303
*     QVPL BASED(REG1);                                            0303
*   QVPLODA=REG8;                   /* OUTPUT DATA AREA ADDRESS    0304
*                                                             @Y02753*/
         ST    REG8,QVPLODA(,REG1)                                 0304
*   RFY                                                            0305
*     REG8 UNRSTD;                                                 0305
*   QVPLEVR=ADDR(IEAVEAC4);         /* ASCB VERIFICATION ROUTINE   0306
*                                                            @YM06720*/
         LA    @08,IEAVEAC4                                        0306
         ST    @08,QVPLEVR(,REG1)                                  0306
*   QVPLWKA=ADDR(QVWORKA);          /* WORKAREA ADDRESS       @Y02753*/
         LA    @08,QVWORKA(,REG9)                                  0307
         ST    @08,QVPLWKA(,REG1)                                  0307
*   QVPLHDR=ADDR(CVTASCBH);         /* QUEUE HEADER           @Y02753*/
         L     @08,CVTPTR                                          0308
         LA    @15,CVTASCBH(,@08)                                  0308
         ST    @15,QVPLHDR(,REG1)                                  0308
*   QVPLTRLR=ADDR(CVTASCBL);        /* QUEUE TRAILER          @Y02753*/
         LA    @08,CVTASCBL(,@08)                                  0309
         ST    @08,QVPLTRLR(,REG1)                                 0309
*   RFY                                                            0310
*     REG8 RSTD;                                                   0310
*   GEN(LA    REG8,ASCBFWDP-ASCB);  /* OFFSET IN ASCB TO FORWARD   0311
*                                      POINTER                @Y02753*/
         LA    REG8,ASCBFWDP-ASCB
*   QVPLFPTR=REG8;                  /* INTO PARM LIST         @Y02753*/
         STH   REG8,QVPLFPTR(,REG1)                                0312
*   GEN(LA    REG8,ASCBBWDP-ASCB);  /* OFFSET IN ASCB TO BACK POINTER
*                                                             @Y02753*/
         LA    REG8,ASCBBWDP-ASCB
*   QVPLBPTR=REG8;                  /* INTO PARAMETER LIST. NOTE:  0314
*                                      FIELDS QVPLLELM, QVPLNOEL,  0314
*                                      QVPLFELM ARE INPUT, REMAIN SET
*                                      TO ZERO.               @Y02753*/
         STH   REG8,QVPLBPTR(,REG1)                                0314
*/* L IEAVEQV3: VALIDATE ASCB DISPATCHING QUEUE                      */
*                                                                  0315
*   CALL IEAVEQV3;                  /* INVOKE QUEUE VERIFIER  @Y02753*/
         L     @15,@CV01752                                        0315
         BALR  @14,@15                                             0315
*/* R () RETURN TO RTM, RC=0                                         */
*                                                                  0316
*   REG1=REG7;                      /* ADDRESS OF SDWA        @Y02753*/
         LR    REG1,REG7                                           0316
*   REG9=REG1->SDWAPARM;            /* FRR 6-WORD WORKAREA    @Y02753*/
         L     REG9,SDWAPARM(,REG1)                                0317
*   IF REG9->FRR6LOCK^=LOCK4 THEN   /* WAS LOCK HELD ON ENTRY ?    0318
*                                                             @Y02753*/
         CLI   FRR6LOCK(REG9),4                                    0318
         BE    @RF00318                                            0318
*     DO;                           /* SETRP RC(0)FRELOCK(DISP)      */
*       RESPECIFY                                                  0320
*        (GPR00P,                                                  0320
*         GPR01P,                                                  0320
*         GPR14P,                                                  0320
*         GPR15P) RSTD;                                            0320
*       GPR01P->SDWARCDE=0;         /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0321
*       GPR01P->SDWAACF3=GPR01P->SDWAACF3×'00010000'B;/* INITIALIZE
*                                      LOCK FLAGS                    */
         OI    SDWAACF3(GPR01P),B'00010000'                        0322
*       RESPECIFY                                                  0323
*        (GPR00P,                                                  0323
*         GPR01P,                                                  0323
*         GPR14P,                                                  0323
*         GPR15P) UNRSTD;                                          0323
*     END;                          /* GLOBAL DISP LOCK TO BE FREED
*                                                             @Y02753*/
*   RFY                                                            0325
*     REG14 RSTD;                                                  0325
@RF00318 DS    0H                                                  0326
*   REG14=REG6;                     /* RESTORE RETURN ADDRESS @Y02753*/
         LR    REG14,REG6                                          0326
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0327
*     GPR01P PTR(31) REG(1),                                       0327
*     GPR14P PTR(31) REG(14),                                      0327
*     GPR15P PTR(31) REG(15);                                      0327
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0328
*     I031F FIXED(31) BASED,                                       0328
*     I031P PTR(31) BASED,                                         0328
*     I015F FIXED(15) BASED,                                       0328
*     I015P PTR(15) BASED,                                         0328
*     I008P PTR(8) BASED,                                          0328
*     I001C CHAR(1) BASED;          /*                        @Y02753*/
*   END IEAVEAC3;                   /* END FRR                @Y02753*/
@EL00007 DS    0H                                                  0329
@EF00007 DS    0H                                                  0329
@ER00007 BR    @14                                                 0329
*/* IEAVEAC3: END FLOWCHART                                          */
*                                                                  0330
*                                                                  0330
*/* IEAVEAC4: CHART                                                  */
*/* FOOTING                                                        0330
*/* ASCB VERIFICATION ROUTINE                                        */
*                                                                  0330
*IEAVEAC4:                                                         0330
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/* ASCB VERIFICATION ROUTINE
*                                                            @YM06720*/
IEAVEAC4 DS    0H                                                  0331
*/********************************************************************/
*/*                                                                  */
*/*    THIS ROUTINE IS PART OF ASCBCHAP'S RECOVERY. IT IS            */
*/*    INVOKED BY THE QUEUE VERIFIER ROUTINE TO VALIDATE             */
*/*    THE ASCB DISPATCHING QUEUE. TO HANDLE THE ERROR WHERE         */
*/*    ASCBCHAP WAS IN THE PROCESS OF REMOVING AN ASCB FROM          */
*/*    ITS DISPATCHING QUEUE (ASCBNOQ BIT ON), RETURN CODE 4         */
*/*    WILL BE SET SO THAT THE ASCB GETS DEQUEUED.                   */
*/*                                                                  */
*/*    SYSTEM ROUTINES CALLED / MACROS ISSUED:                       */
*/*    IEAVEGAS - GENERAL ASCB CONTROL BLOCK VERIFICATION ROUTINE    */
*/*          INPUT REGISTERS: 0 - ASCB ADDRESS                       */
*/*                           1 - SDWA ADDRESS                       */
*/*                          14 - RETURN ADDRESS                     */
*/*                          15 - ENTRY POINT ADDRESS                */
*/*                                                                  */
*/*          OUTPUT REGISTERS: 0,1,8-14 - UNCHANGED                  */
*/*                            2-7 - UNPREDICTABLE                   */
*/*                            15 - RETURN CODE                      */
*/*                                 0, IF THE ASCB IS VALID          */
*/*                                 4, IF IT IS AN ASCB BUT INVALID  */
*/*                                 8, IF IT IS NOT AN ASCB          */
*/*                                                                  */
*/*    REGISTER USAGE:                                               */
*/*             INPUT: 0 - ADDRESS TO BE VERIFIED                    */
*/*                    1 - SDWA ADDRESS                              */
*/*                   14 - RETURN ADDRESS                            */
*/*                   15 - ENTRY POINT ADDRESS                       */
*/*                                                                  */
*/*             REGISTERS 8 - 14 ARE SAVED FOR QUEUE VERIFIER.       */
*/*                                                                  */
*/*             WORK:  2 - ADDRESS OF DISPATCHER'S SAVE AREA         */
*/*                    8 - ADDRESS OF DISPATCHER'S SAVE AREA         */
*/*                   10 - BASE REGISTER                             */
*/*                   12 - ASCB ADDRESS                              */
*/*                                                                  */
*/*             OUTPUT: 8 - 14 ARE RESTORED                          */
*/*                    15 - RETURN CODE                              */
*/*                       0, IF THE ASCB IS VALID                    */
*/*                       4, IF IT IS AN ASCB BUT INVALID OR         */
*/*                          IN THE PROCESS OF BEING DEQUEUED        */
*/*                       8, IF IT IS NOT AN ASCB                    */
*/*                                                                  */
*/********************************************************************/
*/* E ENTER IEAVEAC4                                                 */
*                                                                  0331
*   RFY                                                            0331
*    (REG0,                                                        0331
*     REG1,                                                        0331
*     REG2,                                                        0331
*     REG8,                                                        0331
*     REG9,                                                        0331
*     REG10,                                                       0331
*     R11PARM,                                                     0331
*     R12SCAN,                                                     0331
*     REG13,                                                       0331
*     REG14,                                                       0331
*     R15WORK) RSTD;                /*                       @YM06720*/
*/* P SAVE QUEUE VERIFIER'S REGISTERS                                */
*                                                                  0332
*   REG2=PSALCCAV->LCCACPUS->WSACEDS0;/* OBTAIN ADDR OF DISPATCHER'S
*                                      SAVE AREA             @YM06720*/
         L     REG2,PSALCCAV                                       0332
         L     REG2,LCCACPUS(,REG2)                                0332
         L     REG2,WSACEDS0(,REG2)                                0332
*   RFY                                                            0333
*     DSPSAVEA BASED(REG2);         /* ESTABLISH ADDRESSABILITY TO 0333
*                                      DISPATCHER'S SAVE AREA      0333
*                                                            @YM06720*/
*   STM(REG8,REG14,DSPSAVEA);       /* SAVE QUEUE VERIFIER'S REGS 8 -
*                                      14                    @YM06720*/
         STM   REG8,REG14,DSPSAVEA(REG2)                           0334
*   RFY                                                            0335
*    (REG9,                                                        0335
*     R11PARM,                                                     0335
*     REG13) UNRSTD;                /*                       @YM06720*/
*/* P ESTABLISH ADDRESSABILITY                                       */
*                                                                  0336
*   REG10=R15WORK;                  /* OBTAIN ENTRY POINT ADDRESS  0336
*                                                            @YM06720*/
         LR    REG10,R15WORK                                       0336
*   GEN(USING IEAVEAC4,REG10);      /* ESTABLISH BASE REG    @YM06720*/
         USING IEAVEAC4,REG10
*   R12SCAN=REG0;                   /* OBTAIN ASCB ADDR      @YM06720*/
         LR    R12SCAN,REG0                                        0338
*   REG8=REG2;                      /* GET ADDR OF DISPATCHER'S SAVE
*                                      AREA INTO A REG NOT DESTROYED
*                                                            @YM06720*/
         LR    REG8,REG2                                           0339
*   RFY                                                            0340
*     DSPSAVEA BASED(REG8);         /* RE-ESTABLISH ADDRESSABILITY TO
*                                      DISPATCHER'S SAVE AREA      0340
*                                                            @YM06720*/
*/* L IEAVEGAS: VERIFY EACH ASCB                                     */
*                                                                  0341
*   CALL IEAVEGAS;                  /* INVOKE ASCB CONTROL BLOCK   0341
*                                      VERIFIER ROUTINE      @YM06720*/
         L     @15,@CV01751                                        0341
         BALR  @14,@15                                             0341
*/* D (NO,%NOTZERO,YES,) VALID ASCB ?                                */
*                                                                  0342
*   IF R15WORK=ZERO THEN            /* WAS ASCB VALID - RETURN CODE 0
*                                                            @YM06720*/
         LTR   R15WORK,R15WORK                                     0342
         BNZ   @RF00342                                            0342
*/* D (NO,%RETURN,YES,) ASCB MARKED NOT ON QUEUE ?                   */
*                                                                  0343
*     IF R12SCAN->ASCBNOQ='1'B THEN /* WAS ASCB MARKED NOT ON      0343
*                                      DISPATCHING QUEUE     @YM06720*/
         TM    ASCBNOQ(R12SCAN),B'10000000'                        0343
         BNO   @RF00343                                            0343
*/* P (,%RETURN) SET RETURN CODE FOUR                                */
*                                                                  0344
*       R15WORK=FOUR;               /* MARKED NOT ON QUEUE - SET   0344
*                                      RETURN CODE 4 TO GET ASCB   0344
*                                      DEQUEUED              @YM06720*/
         LA    R15WORK,4                                           0344
*     ELSE                                                         0345
*       ;                           /*                       @YM06720*/
@RF00343 DS    0H                                                  0346
*   ELSE                            /* NOT VALID ASCB        @YM06720*/
*/* %NOTZERO: D (NO,%RETURN,YES,) ASCB WITH INVALID DATA ?           */
*                                                                  0346
*     IF R15WORK=FOUR THEN          /* WAS IT AN ASCB WITH INVALID 0346
*                                      DATA - RETURN CODE 4  @YM06720*/
         B     @RC00342                                            0346
@RF00342 CH    R15WORK,@CH00065                                    0346
         BNE   @RF00346                                            0346
*/* P MARK ASCB AS NOT ON QUEUE                                      */
*                                                                  0347
*       R12SCAN->ASCBNOQ='1'B;      /* INVALID ASCB - INDICATE NOT ON
*                                      QUEUE                 @YM06720*/
         OI    ASCBNOQ(R12SCAN),B'10000000'                        0347
*/* %RETURN: P RESTORE QUEUE VERIFIER'S REGISTERS                    */
*                                                                  0348
*   RFY                                                            0348
*    (REG9,                                                        0348
*     R11PARM,                                                     0348
*     REG13) RSTD;                  /*                       @YM06720*/
@RF00346 DS    0H                                                  0348
@RC00342 DS    0H                                                  0349
*   LM(REG8,REG14,DSPSAVEA);        /* RESTORE REGS 8 - 14 FOR RETURN
*                                      TO QUEUE VERIFIER     @YM06720*/
         LM    REG8,REG14,DSPSAVEA(REG8)                           0349
*/* R RETURN TO QUEUE VERIFIER                                       */
*                                                                  0350
*   END IEAVEAC4;                   /* END ASCB VERIFICATION ROUTINE
*                                                            @YM06720*/
@EL00008 DS    0H                                                  0350
@EF00008 DS    0H                                                  0350
@ER00008 BR    @14                                                 0350
*/* IEAVEAC4: END FLOWCHART                                          */
*                                                                  0351
*   END IEAVEAC0                    /* END PROCEDURE               0351
*                                                                    */
*                                                                  0351
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IHAQVPL )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*                                                                  0351
*       ;                                                          0351
@DATA    DS    0H
@CH00088 DC    H'1'
@CH00065 DC    H'4'
@DATD    DSECT
         DS    0F
IEAVEAC0 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IEAVEAC0 CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01750 DC    V(IEAVEMS0)
@CV01751 DC    V(IEAVEGAS)
@CV01752 DC    V(IEAVEQV3)
         DS    0D
IDSDUMP  DS    CL25
         ORG   IDSDUMP
IDLNGTH  DC    AL1(24)
IDFRR    DS    CL24
         ORG   IDFRR
IDPROGMN DC    CL8'IEAVEAC0'
IDCSECT  DC    CL8'IEAVEAC0'
IDFRRENT DC    CL8'IEAVEAC3'
         ORG   IDSDUMP+25
IEAVEAC0 CSECT
*                              /* ASSEMBLER DATA */
ACENABLE STOSM ACOMASK(REG13),0         EXECUTE TARGET INSTRUCTION
SDUMPLST SDUMP HDRAD=IDSDUMP,SDATA=(TRT),MF=L SDUMP FOR FRR
SDUMPLNG EQU   *-SDUMPLST               LENGTH OF SDUMP LIST FORM
DMASK    EQU   X'FC'                    PSW MASK TO DISABLE
@DATD    DSECT
@ENDDATD EQU   *
IEAVEAC0 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REG8     EQU   @08
REG9     EQU   @09
REG10    EQU   @10
R11PARM  EQU   @11
R12SCAN  EQU   @12
REG13    EQU   @13
REG14    EQU   @14
R15WORK  EQU   @15
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
QVPLPTR  EQU   0
FRRSPTR  EQU   0
FRREPTR  EQU   0
SDWAPTR  EQU   0
CVTMAP   EQU   0
CVTBTERM EQU   CVTMAP+52
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTRSV90 EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCAACR  EQU   LCCADSF1
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
ASCB     EQU   0
ASCBFWDP EQU   ASCB+4
ASCBBWDP EQU   ASCB+8
ASCBCPUS EQU   ASCB+32
ASCBSEQN EQU   ASCB+38
ASCBDP   EQU   ASCB+43
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBNOQ  EQU   ASCBDSP1
ASCBFLG2 EQU   ASCB+115
WSAC     EQU   0
WSACACR  EQU   WSAC+16
WSACEDS0 EQU   WSAC+28
QVPL     EQU   0
QVPLTYP3 EQU   QVPL
QVPLTYP2 EQU   QVPLTYP3
QVPLTYP1 EQU   QVPLTYP2
QVPLEVR  EQU   QVPLTYP1
QVPLODA  EQU   QVPLTYP1+4
QVPLWKA  EQU   QVPLTYP1+8
QVPLHDR  EQU   QVPLTYP1+16
QVPLHF   EQU   QVPLTYP1+20
QVPLFLGH EQU   QVPLHF
QVPLFLGF EQU   QVPLHF+1
QVPLFPTR EQU   QVPLHF+2
QVPLTRLR EQU   QVPLTYP2+28
QVPLTB   EQU   QVPLTYP2+32
QVPLFLGT EQU   QVPLTB
QVPLFLGB EQU   QVPLTB+1
QVPLBPTR EQU   QVPLTB+2
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSENTR EQU   0
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
MOVELIST EQU   0
MOVENTRY EQU   MOVELIST
MOVEBITS EQU   MOVENTRY
MOVELAST EQU   MOVEBITS
MOVEOFF  EQU   MOVEBITS
MOVEDP   EQU   MOVENTRY+2
MOVEASCB EQU   MOVENTRY+4
MOVENEXT EQU   MOVELIST+8
FRRWORKA EQU   0
QVSAVEA  EQU   FRRWORKA+40
QVWORKA  EQU   FRRWORKA+112
FRR6WORD EQU   0
FRR6WD1  EQU   FRR6WORD
FRR6LOCK EQU   FRR6WD1
ACSAVEA  EQU   0
ACSAVE13 EQU   ACSAVEA+20
ACFRR6AD EQU   ACSAVE13
ACSAVE15 EQU   ACSAVEA+28
ACOMASK  EQU   ACSAVE15
ACLOCKRC EQU   ACSAVE15+1
ACRETCOD EQU   ACSAVE15+3
ACSAVE01 EQU   ACSAVEA+32
ACSAVE0  EQU   ACSAVE01
ACECODE  EQU   ACSAVE0+3
DSPSAVEA EQU   0
I256C    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASCBH EQU   CVTS01+216
CVTASCBL EQU   CVTS01+220
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
DSPS$E14 EQU   DSPSAVEA+24
DSPS$E13 EQU   DSPSAVEA+20
DSPS$E12 EQU   DSPSAVEA+16
DSPS$E11 EQU   DSPSAVEA+12
DSPS$E10 EQU   DSPSAVEA+8
DSPSAVE9 EQU   DSPSAVEA+4
DSPSAVE8 EQU   DSPSAVEA
ACSAVE1  EQU   ACSAVE01+4
@NM00081 EQU   ACSAVE0
@NM00080 EQU   ACSAVE15+2
ACSAVE14 EQU   ACSAVEA+24
ACSAVE12 EQU   ACSAVEA+16
ACSAVE11 EQU   ACSAVEA+12
ACSAVE10 EQU   ACSAVEA+8
ACSAVE9  EQU   ACSAVEA+4
ACSAVE8  EQU   ACSAVEA
@NM00079 EQU   FRR6WORD+4
@NM00078 EQU   FRR6WD1+1
QVPARMS  EQU   FRRWORKA
@NM00077 EQU   MOVEBITS
@NM00076 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00075 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00074 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00073 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00072 EQU   SDWADDAT+3
@NM00071 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00070 EQU   SDWADDAT+1
@NM00069 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00068 EQU   SDWADUMP+2
@NM00067 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00066 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00065 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00064 EQU   SDWAACF3
@NM00063 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00062 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00061 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00060 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00059 EQU   SDWA+239
@NM00058 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00057 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00056 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00055 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00054 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00053 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00052 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00051 EQU   SDWAINC2
@NM00050 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00049 EQU   SDWAILC2
@NM00048 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00047 EQU   SDWANXT2
@NM00046 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00045 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00044 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00043 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00042 EQU   SDWAINC1
@NM00041 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00040 EQU   SDWAILC1
@NM00039 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00038 EQU   SDWANXT1
@NM00037 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00036 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00035 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00034 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00033 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00032 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00031 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00030 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00029 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
FRRSPARM EQU   FRRSENTR+8
@NM00028 EQU   FRRSFLGS+1
@NM00027 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSFRRA EQU   FRRSENTR
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
FRRSCURR EQU   FRRSHEAD+12
FRRSELEN EQU   FRRSHEAD+8
FRRSLAST EQU   FRRSHEAD+4
FRRSEMP  EQU   FRRSHEAD
QVPLFELM EQU   QVPLTYP2+36
QVPLRES4 EQU   QVPLFLGB
QVPLBP3  EQU   QVPLFLGB
QVPLRES3 EQU   QVPLFLGT
QVPLTR3  EQU   QVPLFLGT
QVPLLELM EQU   QVPLTYP1+24
QVPLRES2 EQU   QVPLFLGF
QVPLFP3  EQU   QVPLFLGF
QVPLRES1 EQU   QVPLFLGH
QVPLHD3  EQU   QVPLFLGH
QVPLNOEL EQU   QVPLTYP1+12
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBASID EQU   ASCB+36
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCAR123 EQU   LCCA+956
LCCAR122 EQU   LCCA+952
LCCAR121 EQU   LCCA+948
LCCAR120 EQU   LCCA+944
LCCAR119 EQU   LCCA+940
LCCAR118 EQU   LCCA+936
LCCAR117 EQU   LCCA+932
LCCAR116 EQU   LCCA+928
LCCAR115 EQU   LCCA+924
LCCAR114 EQU   LCCA+920
LCCAR113 EQU   LCCA+916
LCCAR112 EQU   LCCA+912
LCCAR111 EQU   LCCA+908
LCCAR110 EQU   LCCA+904
LCCAR109 EQU   LCCA+900
LCCAR108 EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCARV90 EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCARSFP EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTRSVA1 EQU   CVTXTNT2+48
CVTRSVA0 EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTRSV90
CVTRSV9G EQU   CVTRSV90
CVTRSV9F EQU   CVTRSV90
CVTRSV9E EQU   CVTRSV90
CVTRSV9D EQU   CVTRSV90
CVTRSV9C EQU   CVTRSV90
CVTRSV9B EQU   CVTRSV90
CVTRSV9A EQU   CVTRSV90
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTRV484 EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTRV319 EQU   CVTUSR
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00024 EQU   PSA+3412
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1032
PSAUSEND EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSARV060 EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSARV010 EQU   PSASUP3
PSARV009 EQU   PSASUP3
PSARV008 EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSAIPCRP EQU   PSASUP1
PSAIPCDR EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00117 EQU   AC000400
@RT00136 EQU   AC000200
@RC00213 EQU   @EL00003
@RC00218 EQU   @EL00003
@RF00260 EQU   @EL00006
@PB00008 EQU   @EL00001
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEAVEAC0
