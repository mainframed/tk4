         TITLE 'IEAVMODE - MODESET SERVICE ROUTINE'
IEAVMODE START
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVMODE
*
*02*     CSECT-NAME = IEAVMODE
*
*01*  DESCRIPTIVE-NAME = MODESET SERVICE ROUTINE
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = 0
*
*01*  FUNCTION = ANY OF THE FOLLOWING:
*                    1. CHANGE THE KEY IN THE RB OLD PSW TO ZERO
*                       OR THE KEY VALUE IN THE CURRENT TCB.
*                    2. CHANGE THE STATE IN THE RB OLD PSW TO
*                       PROBLEM OR SUPERVISOR.
*
*02*     OPERATION = SEE METHOD OF OPERATION DIAGRAM.
*
*01*  NOTES
*
*02*     DEPENDENCIES = THIS MODULE DOES NOT CONTAIN
*                       HARDWARE DEPENDENCIES.  MODULE RECEIVES
*                       CONTROL WITH LOCAL LOCK HELD.
*
*03*        CHARACTER-CODE-DEPENDENCIES = THIS MODULE IS NOT
*                                         CHARACTER CODE
*                                         DEPENDENT.
*
*02*     RESTRICTIONS = NONE
*
*02*     REGISTER-CONVENTIONS = REFER TO 'REGISTER EQUATES'
*                               PORTION OF THIS MODULE.
*
*02*     PATCH-LABEL = NONE WITHIN THIS MODULE. THE COMMON
*                      NUCLEUS MAINTENANCE AREA SHOULD BE
*                      USED (IEAPATCH).
*
*01*  MODULE-TYPE = MODULE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE = APPROXIMATELY 200 BYTES.
*
*02*     ATTRIBUTES = RESIDENT, REFRESHABLE, KEY ZERO,
*                     SUPERVISOR MODE, ENABLE,
*                     LOCALLY LOCKED, TYPE 1 SVC
*
*01*  ENTRY-POINT = IGC107
*
*02*     LINKAGE = VIA SVC INTERRUPT HANDLER (TYPE 1 SVC)
*
*02*     INPUT = REGISTER
*                  0 - IRRELEVANT
*                  1 - PARAMETER LIST
*                  2 - IRRELEVANT
*                  3 - ADDRESS OF CVT (NOT USED)
*                  4 - ADDRESS OF CURRENT TCB
*                  5 - ADDRESS OF CURRENT RB
*                  6 - ENTRY POINT ADDRESS
*                  7 - ADDRESS OF CURRENT ASCB
*                  8-13 - IRRELEVANT
*                 14 - RETURN ADDRESS
*                 15 - IRRELEVANT
*
*                PARAMETER LIST (CONTENTS OF REGISTER 1)
*                  BITS 0-25 = RESERVED (MUST BE ZERO)
*                  BITS 26-27 = 00 - NO ACTION
*                               01 - INVALID
*                               10 - PLACE TCB KEY IN RBOPSW
*                               11 - SET RBOPSW KEY TO ZERO
*                  BITS 28-29 = 00 - NO ACTION
*                               01 - TURN ON STATE BIT (PROB) IN
*                                    RBOPSW
*                               10 - INVALID
*                               11 - TURN OFF STATE BIT (SUPR) IN
*                                    RBOPSW
*                  BITS 30-31 = RESERVED (MUST BE ZERO)
*
*02*     OUTPUT = REFER TO OUTPUT OF EXIT-NORMAL AND
*                 EXIT-ERROR
*
*02*     REGISTER-SAVED = NONE (SAVED BY SVC INTERRUPT HANDLER)
*
*02*     REGISTER-USAGE = REFER TO 'REGISTER EQUATES'
*                         PORTION OF THIS MODULE.
*
*02*     REGISTERS-RESTORED = NONE (RESTORED AT EXIT TIME)
*
*01*  EXIT-NORMAL = DONE (MAINLINE EXIT)
*
*02*     CONDITIONS = FUNCTION COMPLETE, RETURN TO CALLER
*                     VIA BRANCHING TO ADDRESS CONTAINED
*                     IN REGISTER 14 AT ENTRY
*
*02*     OUTPUT = REGISTERS
*                   0-1 - UNPREDICTABLE
*                   2-13 - SAME AS ENTRY
*                          (RESTORED WHEN REDISPATCHED)
*                   14 - UNPREDICTABLE
*                   15 - ZERO (SUCCESSFUL INDICATION
*                              FOR COMPATABILITY)
*                 DATA
*
*                    RBOPSW - KEY AND STATE MODIFIED AS REQUESTED
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = ERRTN
*
*02*     CONDITIONS = ABEND CALLER, INVALID INPUT DETECTED.
*
*02*     OUTPUT = REGISTERS
*                   0 - ABEND FLAGS
*                   1 - ABEND CODE
*                   2 - INPUT PARAMETER LIST
*                   3-15 - IRRELEVANT
*
*
*02*     RETURN-CODES = NONE
*
*01*  EXTERNAL-REFERENCES
*
*02*     ROUTINES = ABEND
*
*02*     DATA-AREAS = LOCAL WORK/SAVE AREA - SERIALIZED VIA
*                                            LOCAL LOCK
*
*02*     CONTROL-BLOCKS = ASCB   R
*                         ASXB   R
*                         RB     R,W
*                         TCB    R
*                         WSAVT  R
*
*01*  TABLES = LOCAL SAVE AREA - SEE DSECT (STORAGE)
*              COMMENTARY FOR DESCRIPTION
*
*01*  MACROS = ABEND
*              MODID
*
*02*     SERIALIZATION = RESOURCES ENQUEUED - NONE
*                        LOCKS - LOCAL LOCK HELD WHEN ENTERED AND
*                                NEVER RELEASED
*
*01*  CHANGE-ACTIVITY = THIS MODULE HAS BEEN COMPLETELY
*                       REWRITTEN FOR VS2 RELEASE 2 (AS THE
*                       RESULT OF PTM #VS04244), WHICH ELIMINATED
*                       MOST OF THE PREVIOUS MODESET FUNCTION.
*
*01*  MESSAGES = NONE
*
*01*  ABEND-CODES = 16B - INVALID INPUT PARAMETERS
*
**** END OF SPECIFICATIONS ***/
* A-000000-999999                                              @YM04244
         EJECT
         ENTRY IGC107
IGC107   EQU   IEAVMODE         ENTRY NAME
         BALR  R6BASE,R0        ESTABLISH BASE REGISTER
         USING *,R6BASE         DITTO
         USING TCB,R4TCB        ESTABLISH TCB ADDRESSABILITY
         USING RBBASIC,R5RB     ESTABLISH RB ADDRESSABILITY
         USING ASCB,R7ASCB      ESTABLISH ASCB ADDRESSABILITY
         MODID                  IDENTIFY MODULE
         LTR   R2PLIST,R1PLIST  Q. NULL PARAMETER LIST
         BZ    ERRTN            A. YES. INVALID INPUT
         SPACE 2
         L     R8WK,RSVDBITS    PREPARE TO TEST RESERVED BITS
         NR    R8WK,R1PLIST     Q. RESERVED BITS SPECIFIED
         BNZ   ERRTN            A. YES. INVALID INPUT
INPUTOK  EQU   *                LOCATE WORK AREA
         L     R8WK,ASCBASXB     ADDRESS ASXB
         L     R8WK,ASXBSPSA-ASXB(R8WK) ADDRESS WSA VECTOR TABLE
         L     R3SAVE,WSALCWSA-WSAL(R8WK) ADDRESS LOCAL WORK/SAVE AREA
         USING STORAGE,R3SAVE   WORK AREA ADDRESSABILITY
         IC    R8WK,RBOPSW+ONE  GET PSW KEY AND MODE DATA
         ST    R1PLIST,PARMLIST SAVE INPUT PARAMETER LIST
         STC   R8WK,WORKBYTE    SAVE PSW KEY AND MODE DATA
         SPACE 2
         TM    KEYNMODE,MODEFLGS Q. MODE CHANGE REQUESTED
         BZ    CHECKKEY         A. NO. SKIP IT
         BO    SMODE            A. YES AND SUPR MODE REQUESTED
         TM    KEYNMODE,MODEBAD Q. INVALID MODE REQUEST
         BO    ERRTN            A. YES. INVALID INPUT
PMODE    EQU   *                A. NO. VALID PROBLEM MODE REQUEST
         OI    WORKBYTE,PROBMODE CHANGE TO PROBLEM MODE
         B     CHECKKEY          MODE PROCESSING COMPLETE
SMODE    EQU   *                SUPERVISOR MODE REQUESTED
         NI    WORKBYTE,SUPRMODE CHANGE TO SUPERVISOR MODE
         SPACE 2
CHECKKEY EQU   *                KEY PROCESSING
         TM    KEYNMODE,KEYFLGS Q. KEY CHANGE REQUESTED
         BZ    DONE             A. NO. SKIP IT.
         BO    ZEROKEY          A. YES AND ZERO KEY REQUESTED
         TM    KEYNMODE,KEYBAD  Q. INVALID KEY REQUEST
         BO    ERRTN            A. YES. INVALID INPUT
NZEROKEY EQU   *                A. NO. VALID TCB KEY REQUEST
         MVI   TEMPKEY,CLRBITS  ONLY KEY BITS OF TCB BYTE WANTED
         NC    TEMPKEY,TCBPKF   ONLY KEY BITS WILL BE ON
         NI    WORKBYTE,CLEARKEY ZERO CURRENT KEY BITS
         OC    WORKBYTE(ONE),TEMPKEY  TURN ON TCB KEY BITS
         B     DONE             THAT'S ALL FOLKS
ZEROKEY  EQU   *                ZERO KEY REQUESTED
         NI    WORKBYTE,CLEARKEY ZERO KEY BITS
         SPACE 2
DONE     EQU   *                NORMAL EXIT
         IC    R8WK,WORKBYTE    GET NEW PSW KEY AND MODE DATA
         STC   R8WK,RBOPSW+ONE  PUT NEW KEY AND MODE DATA INTO         X
                                RB OLD PSW
         SR    R15RC,R15RC      SUCCESSFUL INDICATOR - COMPATABILITY
         BR    R14RTURN         RETURN
         SPACE 3
ERRTN    EQU   *                INVALID INPUT - ABEND
         ABEND X'16B',DUMP,,SYSTEM  DUMP IT
         EJECT
* REGISTER EQUATES
R0       EQU   0                   USED FOR ESTABLISHING ADDRESSABILITY
R1PLIST  EQU   1                   CONTAINS INPUT PARAMETER LIST
R2PLIST  EQU   2                   COPY OF INPUT PARAMETER LIST
R3SAVE   EQU   3                   POINTS TO LOCAL MODESET WORK AREA
R4TCB    EQU   4                   POINTS TO CURRENT TCB
R5RB     EQU   5                   POINTS TO CURRENT RB
R6BASE   EQU   6                   BASE (ENTRY POINT ADDRESS)
R7ASCB   EQU   7                   POINTS TO CURRENT ASCB
R8WK     EQU   8                   WORK REGISTER
R14RTURN EQU   14                  RETURN ADDRESS
R15RC    EQU   15                  CONTAINS SUCCESSFUL RETURN CODE
         SPACE 2
* CONSTANTS
         DS    0F                  INSURE FULL WORK BOUNDARY
RSVDBITS DC    X'FFFFFFC3'         RESERVED BITS OF PARAMETER LIST
ONE      EQU   1                   CONSTANT OF 1
         SPACE 2
* MASKS
MODEFLGS EQU   X'0C'               MODE FLAGS
KEYFLGS  EQU   X'30'               KEY FLAGS
PROBMODE EQU   X'01'               SET PROBLEM MODE
SUPRMODE EQU   X'FE'               SET SUPERVISOR MODE
CLRBITS  EQU   X'F0'               ZERO NON-KEY BITS
CLEARKEY EQU   X'0F'               CLEARS KEY BITS
KEYBAD   EQU   X'10'               DETERMINE VALIDITY OF KEY REQUEST
MODEBAD  EQU   X'08'               DETERMINE VALIDITY OF MODE REQUEST
         SPACE 2
STORAGE DSECT                      MAPS WORK AREA
PARMLIST DS    F                   SAVE AREA FOR PARAMETER LIST
KEYNMODE EQU   PARMLIST+3          KEY AND MODE FLAGS OF PARM LIST
WORKBYTE DS    B                   NEW KEY AND MODE DATA
TEMPKEY  DS    B                   USED WHEN OBTAINING KEY FROM TCB
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IKJRB
         EJECT
         IKJTCB
         EJECT
         IHAWSAVT
         END   IEAVMODE
