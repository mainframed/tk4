         TITLE 'IEAVEED0 - DETACH SVC - ENTRY POINT IGC062'
IGC062   CSECT
*A-000000-999999                                                @Y02752
         SPACE 2
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVEED0
*
*02*     CSECT-NAME = IGC062
*
*01*  DESCRIPTIVE-NAME = DETACH
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = OS/VS2 RELEASE 2 VERSION 1
*
*01*  FUNCTION = THIS MODULE PROVIDES AN SVC TO FREE TCB RESOURCES OF A
*     COMPLETED SUBTASK, AND TO FORCE COMPLETION OF AN INCOMPLETE
*     SUBTASK. A BRANCH ENTRY IS USED FOR THE LATTER PURPOSE BY ABEND,
*     AND IS CALLED BY END OF TASK PROCESSING AS A TASK TERMINATION
*     RESOURCE MANAGER (TRRM).
*
*02*     OPERATION = SVC ENTRY PERFORMS VALIDITY CHECKING AND
*        INITIALIZATION FUNCTIONS AND CALLS SUBROUTINE SUBRTN (SEE
*        INTRODUCTORY COMMENTS FOR SUBRTN).  ABEND BRANCH ENTRY SAVES
*        REGISTERS AND CALLS SUBROUTINE SUBRTN.  END OF TASK BRANCH
*        ENTRY (TTRM) POSTS THE END OF TASK ECB, IF THERE IS ONE, AND
*        SCHEDULES THE END OF TASK EXIT  ROUTINE (ETXR) IF THERE IS
*        ONE. THE TCB IS DEQUEUED FROM THE TCB DISPATCHING QUEUE. IF
*        THERE WAS NEITHER AN ECB NOR ETXR, THE TCB RESOURCES ARE
*        FREED, OTHERWISE NOT.
*
*01*   NOTES =
*
*02*     DEPENDENCIES = THE LOCAL LOCK IS HELD UPON ENTRY, AND MAY BE
*        RELEASED AND REOBTAINED BY SUBROUTINE  SUBRTN. OTHERWISE, IT
*        IS HELD THROUGHOUT THIS MODULE.
*
*03*           CHARACTER-CODE-DEPENDENCIES = NONE
*
*02*     RESTRICTIONS = THE BRANCH ENTRY POINT IS LIMITED IN USE TO
*        ABEND AND END OF TASK.
*
*02*     REGISTER-CONVENTIONS = REGISTER DEFINITIONS FOLLOW THESE
*        SPECIFICATIONS. FURTHER INFORMATION ON THE USAGE OF REGISTERS
*        IS CONTAINED IN THE INTRODUCTORY COMMENTS PRECEEDING
*        EACH SUBROUTINE, RECOVERY ROUTINE, AND THE BRANCH
*        ENTRY ROUTINE.
*
*02*     PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = SVC ROUTINE
*
*02*     PROCESSOR = ASSEMBLER
*
*02*     MODULE-SIZE = SEE SYMBOL IGC062 IN THE EXTERNAL SYMBOL
*        DICTIONARY.
*
*02*     ATTRIBUTES = PAGED-LPA, ZERO PROTECT KEY, REFRESHABLE,
*        SUPERVISOR MODE.
*
*01*  ENTRY-POINT = IGC062
*
*02*     PURPOSE = SVC DETACH
*
*02*     LINKAGE = SVC 62 (DETACH MACRO)
*
*02*     INPUT = REGISTER 1 CONTAINS THE ADDRESS OF A FULLWORD, WHICH
*        IN TURN CONTAINS THE ADDRESS OF THE SUBTASK TCB TO BE
*        DETACHED. BIT 0 OF REGISTER 1 = 0 INDICATES STAE=NO, BIT 0 OF
*        REGISTER 1 = 1 INDICATES STAE=YES.
*
*02*     OUTPUT = SEE BELOW.
*
*01*  EXIT-NORMAL =
*
*02*     CONDITIONS = RETURN VIA EXIT PROLOGUE, IEAVEXPR.
*
*02*     OUTPUT = RETURN CODE. IF THE SUBTASK IS INCOMPLETE, IT IS
*        ABTERMED, USING CODE 13E FOR STAE=NO, 33E FOR STAE=YES. THIS
*        IS OUTPUT TO RTM (RECOVERY TERMINATION MANAGER), USED TO
*        DETERMINE WHETHER OR NOT A STAE EXIT IS TO BE SCHEDULED.
*
*02*     RETURN-CODES = 4 - AN INCOMPLETE SUBTASK WAS ABTERMED WITH
*        CODE 33E. 0 - ALL OTHER CONDITIONS.
*
*01*  EXIT-ERROR = DET00100
*
*02*     CONDITIONS = AN INVALID PARAMETER OR INVALID PARAMETER WORD
*        ADDRESS WAS PASSED TO DETACH.
*
*02*     OUTPUT = ABEND CODE 23E.
*
*02*     RETURN-CODES = NONE
*
*01*  ENTRY-POINT = IGC062R1
*
*02*     PURPOSE = CALLED AS A DETACH BRANCH ENTRY BY ABEND, AND AS A
*        TTRM BY END OF TASK.
*
*02*     LINKAGE = BRANCH ENTERED, ADDRESS OBTAINED FROM CVT062R1.
*
*02*     INPUT = SEE INTRODUCTORY COMMENTS PRECEEDING IGC062R1.
*
*02*     OUTPUT = NONE
*
*01*  EXIT-NORMAL = DET04010
*
*02*     CONDITIONS = RETURN VIA BR 14.
*
*02*     OUTPUT = NONE
*
*02*     RETURN-CODES = NONE
*
*01*  EXIT-ERROR = NONE
*
*01*  ENTRY-POINT = IGC062R2
*
*02*     PURPOSE = FUNCTIONAL RECOVERY ROUTINE (FRR) IN EFFECT WHILE
*        LOCAL LOCK IS HELD.
*
*02*     LINKAGE = FROM RTM, ADDRESS FROM STACK ELEMENT CREATED BY
*        SETFRR (SEE SUBROUTINE FRRON).
*
*02*     INPUT = REGISTER 0 - ADDRESS OF A 200 BYTE WORKAREA.
*        REGISTER 1 - ADDRESS OF AN SDWA. REGISTER 14 -
*        RETURN ADDRESS.
*
*02*     OUTPUT = SEE BELOW.
*
*01*  EXIT-NORMAL = DET80000
*
*02*     CONDITIONS = FRR WAS ENTERED FROM SVC DETACH, AS A RESULT OF A
*        FAILURE, OR AS A RESULT OF VALIDITY CHECKING.
*
*02*     OUTPUT = RETURN CODE. SDWACMPC MAY BE MODIFIED TO 23E (INVALID
*        INPUT PARAMETER) OR 43E (INVALID END OF TASK ECB ADDRESS).
*        SDWASRSV IS UPDATED. SDWARCDE, SDWARCRD, SDWAUPRG, SDWARTYA,
*        AND SDWARECP ARE SET BY SETRP MACRO.
*
*02*     RETURN-CODES = 0, NO RETRY.
*
*01*  EXIT-NORMAL = DET80030
*
*02*     CONDITIONS = FRR WAS ENTERED FROM IGC062R1 (BRANCH ENTRY)
*        PROCESSING.
*
*02*     OUTPUT = RETURN CODE. SDWARCDE, SDWARCRD, AND SDWARECP ARE SET
*        BY SETRP MACRO. THE DETACH TCB IS DEQUEUED FROM THE
*        DISPATCHING AND FAMILY QUEUES.
*
*02*     RETURN-CODES = 4, RETRY.
*
*01*  EXIT-ERROR = NONE
*
*01*  ENTRY-POINT = IGC062R3
*
*02*     PURPOSE = RECOVERY RETRY ROUTINE (SEE INTRODUCTORY COMMENTS
*        PRECEEDING IGC062R3).
*
*02*     LINKAGE = FROM RTM, USING ADDRESS IN SDWARTYA.
*
*02*     INPUT = SEE INTRODUCTORY COMMENTS PRECEEDING IGC062R3.
*
*02*     OUTPUT = SEE INTRODUCTORY COMMENTS PRECEEDING IGC062R3.
*
*01*  EXIT-NORMAL = DET70010
*
*02*     CONDITIONS = RETURN TO BRANCH CALLER OF DETACH.
*
*02*     OUTPUT = SEE INTRODUCTORY COMMENTS PRECEEDING IGC062R3.
*
*02*     RETURN-CODES = NONE.
*
*01*  EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES =
*
*02*     ROUTINES = STATUS, TO STOP THE SUBTASK TO BE DETACHED, BRANCH
*        ADDRESS OBTAINED FROM SCVTSTAT. WAIT SVC, TO WAIT FOR
*        COMPLETION OF ABTERMED SUBTASK. POST TO POST END OF TASK ECB,
*        BRANCH ADDRESS FROM CVT0PT02. ABTERM TO ABTERM AN INCOMPLETE
*        SUBTASK, OR TO ABTERM MOTHER TASK IN CASE OF ERROR IN END OF
*        TASK PROCESSING, BRANCH LINKAGE GENERATED BY CALLRTM MACRO.
*        FREEMAIN TO FREE TCB, TCB PROBLEM PROGRAM SAVE AREA, IRB, IRB
*        PROBLEM PROGRAM SAVE AREA, IQE, BRANCH LINKAGE GENERATED BY
*        FREEMAIN MACRO. IGC044R2 TO VALIDATE THE TCB QUEUES IN ERROR
*        PROCESSING, BRANCH ADDRESS FROM V-TYPE ADDRESS CONSTANT. STAGE
*        II EXIT EFFECTOR TO SCHEDULE END OF TASK EXIT ROUTINE (ETXR),
*        BRANCH ADDRESS FROM CVT0EF00.
*
*02*     DATA-AREAS = SDWA
*
*02*     CONTROL-BLOCKS = TCB(D), RB(R), CVT(R), SCVT(R), PSA(R),
*        IQE(D), IRB(D)
*
*01*  TABLES = NONE.
*
*01*  MACROS = WAIT, ABEND, CALLRTM, FREEMAIN, SETFRR, SETRP, MODESET.
*
*02*    SERIALIZATION = LOCAL LOCK.
*
*01*  CHANGE-ACTIVITY = Y02752, Y02753
*
*01*  MESSAGES = NONE.
*
*01*  ABEND-CODES = 13E, 23E, 33E, 43E, 53E. 13E - CODE FOR ABTERMING
*     INCOMPLETE SUBTASK, STAE=NO. 23E - INVALID PARAMETER OR PARAMETER
*     WORD ADDRESS. 33E - CODE FOR ABTERMING INCOMPLETE SUBTASK,
*     STAE=YES. 43E - INVALID IND OF TASK ECB ADDRESS (CONTENTS OF
*     FIELD TCBECB IN COMPLETING TCB). 53E - ERROR OCCURRED IN TASK
*     TERMINATION PROCESSING OF A SUBTASK BEFORE ECB AND ETXR COULD BE
*     PROCESSED.
*
**** END OF SPECIFICATIONS ***/
         EJECT
* DETACH REGISTERS
         SPACE
R0       EQU   0                       WORK REGISTER
R1INPARM EQU   1                       INPUT ADDRESS
R1       EQU   1                       WORK REGISTER
R2       EQU   2                       WORK REGISTER
R2DETTCB EQU   2                       ADDRESS OF THE DETACH TCB
R3       EQU   3                       WORK REGISTER
R4OTCB   EQU   4                       ADDRESS OF MOTHER TCB
R4       EQU   4                       WORK REGISTER
R5RB     EQU   5                       ADDRESS OF CURRENT RB, SVC ENTRY
R5FRR    EQU   5                       ADDRESS OF FRR WORKAREA
R6BASE   EQU   6                       BASE REGISTER
R7       EQU   7                       WORK REGISTER
R8       EQU   8                       WORK REGISTER
R9       EQU   9                       MAINTENANCE REGISTER
R10      EQU   10                      WORK REGISTER
R11      EQU   11                      WORK REGISTER
R12      EQU   12                      WORK REGISTER
R13WKPTR EQU   13                      ADDRESS OF WORKAREA
R13      EQU   13                      WORK REGISTER
R14      EQU   14                      BRANCH REGISTER
R15      EQU   15                      WORK REGISTER
         SPACE 2
* MODULE EQUATES
         SPACE
USECNT1  EQU   1                       IRB USE COUNT 1
C0       EQU   0                       CONSTANT 0
C1       EQU   1                       CONSTANT 1
C2       EQU   2                       CONSTANT 2
C3       EQU   3                       CONSTANT 3
C4       EQU   4                       CONSTANT 4
C7       EQU   7                       CONSTANT 7
C8       EQU   8                       CONSTANT 8
C255     EQU   255                     CONSTANT 255
CXF0     EQU   X'F0'                   CONSTANT X'F0'
KEYMASK  EQU   B'11110000'             MASK TO CLEAR PROTECT KEY
WORDMASK EQU   B'00000011'             MASK TO CHECK FULLWORD ALIGNMENT
FF       EQU   X'FF'                   BYTE OF ONES
SVAREAL  EQU   72                      LENGTH OF PROBLEM PGM SAVE AREA
SP250    EQU   250                     SUBPOOL ID
SP253    EQU   253                     SUBPOOL ID
ABEND13E EQU   X'13E'                  ABEND CODE FOR SUBTASK ABTERM,
*                                        WITH STAE=NO
ABEND23E EQU   X'23E'                  ABEND CODE FOR MOTHER, INVALID
*                                        PARAMETER
ABEND33E EQU   X'33E'                  ABEND CODE FOR SUBTASK ABTERM,
*                                        WITH STAE=YES
ABEND43E EQU   X'43E'                  ABEND CODE FOR MOTHER, INVALID
*                                        ATTACH ECB
ABEND53E EQU   X'53E'                  CODE FOR MOTHER, SUBTASK
*                                      ENCOUNTERED ERROR IN END OF
*                                      TASK BEFORE ECB/ETXR PROCESSING
PTCBCODE EQU   X'0B'                   STATUS STOP TCB ENTRY CODE
               SPACE 3
* MODULE USING STATEMENTS
         SPACE 2
         USING WKAREA,R13WKPTR         PRIVATE WORK/SAVE AREA
         USING DETFRRWA,R5FRR          FRR SIX WORD WORKAREA
         USING PSA,R0                  ADDRESSABILITY FOR PREFIX SAVE
*                                        AREA
         SPACE 3
         ENTRY IGC062R1
         SPACE 3
*/* IGC062: CHART                                                    */
*/* FOOTING
*/* DETACH MAINLINE - SVC ENTRY                                      */
         EJECT
*/* IGC062: E ENTER SVC DETACH                                       */
         SPACE 2
         USING IGC062,R6BASE
         MODID BR=YES                  IDENTIFIER
         SPACE
*/* P SET UP WORKAREA IN RBEXSAVE                                    */
         SPACE
         LA    R13WKPTR,RBEXSAVE-RBBASIC(,R5RB)  ADDRESS WORKAREA
         XC    0(WKLENTH,R13WKPTR),0(R13WKPTR) CLEAR WORKAREA
         ST    R14,WKR14RET            SAVE RETURN ADDRESS
         SPACE
*/* S FRRON: ESTABLISH FRR                                           */
         SPACE
         LR    R8,R5RB                 SAVE CURRENT RB ADDRESS
         BAL   R14,FRRON               ESTABLISH FRR
         SPACE
*/* D (NO,DET00100,YES,) INPUT PARAMETER FULLWORD                    */
         SPACE
         LA    R7,WORDMASK             CHECK ALIGNMENT
         NR    R7,R1                   IS PARM ADDR ON FULLWORD BDY
         BNZ   DET00100                NO, GO ABEND CURRENT TASK, 23E
*                                      YES, CHECK STORAGE KEY
         SPACE
*/* P VALIDITY CHECK INPUT PARM STORAGE ADDRESS                      */
         SPACE
         L     R7,RBLINK-RBBASIC(,R8)  ADDRESS OF CALLER'S RB
         IC    R2,RBOPSW+C1-RBBASIC(,R7) PSW KEY-CMWP FIELDS
         LA    R7,KEYMASK              TO CLEAR CMWP BITS, HIGH BYTES
         NR    R2,R7                   CALLER'S PROTECT KEY
         MODESET KEYADDR=(2)           SET CALLER'S PROTECT KEY
         L     R7,0(,R1)               INPUT PARM FETCH CHECK
         ST    R7,0(,R1)               INPUT PARM STORE CHECK
         MODESET EXTKEY=SUPR           RESET KEY 0
         SPACE
*/* D (NO,DET00100,YES,) IS INPUT ADDRESS OF A SUBTASK               */
         SPACE
         LA    R7,0(,R7)               INSURE BYTE0 = 0
         ICM   R8,B'1111',TCBLTC-TCB(R4OTCB)  ADDR OF NEWEST SUBTASK
         B     DET00210                ENTER LOOP
         SPACE
DET00200 EQU   *                       TOP OF LOOP
         ICM   R8,B'1111',TCBNTC-TCB(R8) ADDR OF NEXT SUBTASK
DET00210 EQU   *                       LOOP ENTRY POINT
         BZ    DET00100                SUBTASK PTR 0, GO ABEND
*                                        CURRENT TASK, 23E
         CR    R7,R8                   IS THIS THE INPUT SUBTASK
         BNE   DET00200                NO, CONTINUE LOOP
*                                      YES, CONTINUE DETACH
         SPACE
*/* D (NO,DET00220,YES,) WAS STAE=YES SPECIFIED                      */
         SPACE
         LTR   R1,R1                   BIT0=1 FOR STAE=YES
         BNM   DET00220                BYPASS FLAG SETTING, BIT0 IS OFF
         SPACE
*/* P SET INDICATOR FOR STAE=YES                                     */
         SPACE
         OI    WKFLAGS,WKSTAE          SET STAE INDICATOR
         SPACE
*/* DET00220: D (NO,DET00240,YES,) IS DETACH TCB IN ABEND            */
         SPACE
DET00220 EQU   *                       *
         TM    TCBFLGS1-TCB(R7),TCBFA  IS ABEND IN PROCESS
         BNO   DET00240                NO, BYPASS SETTING OF FLAG
         SPACE
*/* P SET INDICATOR FOR NO ABTERM                                    */
         SPACE
         OI    WKFLAGS,WKTCBFA         SUBTASK NOT TO BE ABTERMED
         SPACE
*/* DET00240: D (NO,DET00230,YES,) WOULD AN ABEND CAUSE RECURSION    */
         SPACE
DET00240 EQU   *                       *
         TM    TCBFBYT1-TCB(R7),TCBRTM2 HAS RTM2 ALREADY BEEN ENTERED
         BNO   DET00230                NO, BYPASS SETTING OF FLAG
         SPACE
*/* P SET INDICATOR FOR CONDITIONAL FREEMAINS                        */
         SPACE
         OI    WKFLAGS,WKCONDL         PERFORM CONDITIONAL FREEMAINS
         SPACE
*/* DET00230: S SUBRTN: PERFORM DETACH, WITH ABTERM IF REQUIRED      */
         SPACE
DET00230 EQU   *                       *
         LR    R2DETTCB,R7             ADDRESS OF TCB TO BE DETACHED
         ST    R2DETTCB,WKR1TCB        JOURNAL DETACH TCB ADDRESS
         BAL   R14,SUBRTN              PERFORM DETACH
         SPACE
*/* S FRROFF: CANCEL FRR                                             */
         SPACE
         BAL   R14,FRROFF              CANCEL FRR
         SPACE
*/* R RETURN TO SVC CALLER                                           */
         SPACE
         L     R14,WKR14RET            RESTORE RETURN ADDRESS
         BR    R14                     RETURN, VIA EXIT PROLOG
         SPACE 3
*/* DET00100: S FRROFF: CANCEL FRR                                   */
         SPACE
DET00100 EQU   *                       *
         BAL   R14,FRROFF              CANCEL FRR
         SPACE
*/* L () ABEND: TERMINATE CURRENT TASK, 23E                          */
         SPACE
         LA    R1,ABEND23E             ERROR CODE FOR CURRENT TASK
         SPACE
         ABEND (1),DUMP,,SYSTEM
         SPACE 2
*/* IGC062: END FLOWCHART                                            */
         EJECT
*/* SUBRTN: CHART BEGIN FLOWCHART                                    */
*/* FOOTING
*/* SUBROUTINE WHICH PERFORMS NORMAL DETACH FUNCTIONS                */
         SPACE 2
***********************************************************************
*                                                                     *
* SUBROUTINE SUBRTN PERFORMS NORMAL DETACH PROCESSING: UNCHAINING OF  *
* THE TCB FROM ITS FAMILY QUEUE, AND FREEING THE TCB STORAGE AND THE  *
* STORAGE OCCUPIED BY THE ASSOCIATED PROBLEM PROGRAM SAVE AREA, IF    *
* THERE IS ONE. THE DETACH TASK IS FIRST ABTERMED, IF IT HAS NOT COM- *
* PLETED, AND IF IT IS NOT ALREADY ABENDING. THIS ROUTINE IS CALLED   *
* BY THE SVC ENTRY, AND BY THE BRANCH ENTRY FROM ABEND.               *
*                                                                     *
* SUBROUTINES CALLED: FRRON, FRROFF, FREE, FREETCB, POSTRTN, ABTERMR  *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: STATUS, WAIT, SETLOCK       *
*                                                                     *
* REGISTER USAGE: R2DETTCB - ADDRESS OF TCB TO BE DETACHED            *
*                 R13WKPTR - ADDRESS OF WORKAREA                      *
*                 R14      - RETURN ADDRESS                           *
*                 R5FRR    - FRR WORKAREA ADDRESS SAVE REGISTER       *
*                                                                     *
* RETURN CODES SET: 0, 4                                              *
*                                                                     *
***********************************************************************
         SPACE 2
*/* E ENTER SUBRTN                                                   */
         SPACE
SUBRTN   DS    0H                      ENTRY POINT
         ST    R14,WKSUBRET            SAVE RETURN ADDRESS
         SPACE
*/* D (NO,DET01100,YES,) IS DETACH TCBFC = 1                         */
         SPACE
         TM    TCBFLGS5-TCB(R2DETTCB),TCBFC  HAS SUBTASK BEEN THROUGH
*                                             EXIT
         BZ    DET01100                      NO, FORCE COMPLETION IF
*                                             NECESSARY
         SPACE
*                                            YES - UNCHAIN TCB AND FREE
         SPACE
*/* S (,DET01110) FREETCB: FREE TCB RESOURCES                        */
         SPACE
         BAL   R14,FREETCB             FREE TCB RESOURCES
         B     DET01110                GO TO EXIT SUBROUTINE
         EJECT
***********************************************************************
*                                                                     *
*           PROCESS SUBTASK WHICH HAS NOT YET COMPLETED               *
*                                                                     *
***********************************************************************
         SPACE 2
*/* DET01100: D (NO,DET01120,YES,) IS DETACH TCBACTIV = 1            */
         SPACE
DET01100 EQU   *                       *
         TM    TCBFBYT1-TCB(R2DETTCB),TCBACTIV  IS SUBTASK ACTIVE
         BZ    DET01120                NO, BYPASS STATUS STOP
         SPACE
*/* L STATUS: STOP DETACH TCB                                        */
         SPACE
         LR    R1,R2DETTCB             ADDR OF TCB TO STOP     @YM02796
         LR    R7,R13WKPTR             SAVE
         L     R15,CVTPTR              ADDRESS OF CVT
         L     R15,CVTABEND-CVTMAP(,R15)  ADDR OF SECONDARY CVT
         L     R15,SCVTSTAT-SCVTSECT(,R15) ADDR OF STATUS BRANCH ENTRY
         LA    R0,PTCBCODE             STATUS ENTRY CODE, STOP TCB
         SR    R13,R13                 MASK, NO NONDISP BITS TO BE SET
         BALR  R14,R15                 INVOKE STATUS (STOPS TASK VIA
*                                        SIGP, STAYS STOPPED WHILE
*                                        DETACH HOLDS LOCAL LOCK)
         LR    R13WKPTR,R7             RESTORE
         SPACE
*/* DET01120: D (NO,DET01130,YES,) IS THERE AN ETXR                  */
         SPACE
DET01120 EQU   *                       *
         ICM   R8,B'1111',TCBIQE-TCB(R2DETTCB)  ADDRESS OF IQE
         BZ    DET01130                IF ADDRESS 0, BYPASS PROCESSING
         SPACE
*/* D (NO,DET01140,YES,) IS IRB USE COUNT = 1                        */
         SPACE
         L     R11,IQEIRB-IQESECT(,R8) ADDRESS OF IRB
         CLI   RBUSE-RBSECT(R11),USECNT1  IS USE COUNT 1
         BNE   DET01140                NO, GO DECREMENT USE COUNT
         SPACE
*/* S FREE: FREE IRB PROB PGM SAVE AREA, SUBPOOL 250                 */
         SPACE
         L     R1,RBPPSAV-RBSECT(,R11) ADDRESS OF IRB USER SAVE AREA
         LA    R0,SVAREAL              LENGTH OF SAVE AREA
         LA    R3,SP250                SUBPOOL NUMBER
         BAL   R14,FREE                FREE SAVE AREA
         SPACE
*/* S (,DET01150) FREE: FREE IRB,SUBPOOL 253                         */
         SPACE
         LA    R0,RBSECT-RBPRFXST(R0)  OFFSET FROM IRB ADDR TO PREFIX
         LR    R1,R11                  ADDRESS OF IRB
         SR    R1,R0                   ADDRESS OF IRB PREFIX
         LA    R0,IRBLEN               LENGTH OF IRB
         LA    R3,SP253                SUBPOOL NUMBER
         BAL   R14,FREE                FREE IRB
         B     DET01150                CONTINUE ETXR PROCESSING
         SPACE
*/* DET01140: P DECREMENT IRB USE COUNT BY 1                         */
         SPACE
DET01140 EQU   *                       *
         IC    R0,RBUSE-RBSECT(,R11)   IRB USE COUNT IN LOW ORDER BYTE
         BCTR  R0,R0                     LESS 1
         STC   R0,RBUSE-RBSECT(,R11)   SAVE USE COUNT
         SPACE
*/* DET01150: S FREE: FREE IQE, SUBPOOL 253                          */
         SPACE
DET01150 EQU   *                       *
         LR    R1,R8                   ADDRESS OF IQE
         LA    R0,IQELEN               LENGTH OF IQE
         LA    R3,SP253                SUBPOOL NUMBER
         BAL   R14,FREE                FREE IQE
         SPACE
*/* P SET DETACH TCBIQE = 0, TCBFETXR = 0                            */
         SPACE
         XC    TCBIQE-TCB(C4,R2DETTCB),TCBIQE-TCB(R2DETTCB)  ZERO
         NI    TCBFLGS2-TCB(R2DETTCB),FF-TCBFETXR  ETXR FLAG OFF
         SPACE
*/* DET01130: D (NO,DET01160,YES,) SHOULD SUBTASK BE ABTERMED        */
         SPACE
DET01130 EQU   *                       *
         TM    WKFLAGS,WKTCBFA         WAS SUBTASK IN ABEND WHEN SVC
*                                        WAS ISSUED
         BO    DET01160                YES, BYPASS ABTERM
         SPACE
*/* P INDICATE ABEND CODE 13E FOR SUBTASK                            */
         SPACE
         LA    R1,ABEND13E             CODE FOR SUBTASK, STAE=NO
         SPACE
*/* D (NO,DET01170,YES,) WAS STAE=YES SPECIFIED                      */
         SPACE
         TM    WKFLAGS,WKSTAE          IS COMP CODE 13E CORRECT
         BZ    DET01170                YES, STAE=NO
*                                      NO, STAE=YES
         SPACE
*/* P INDICATE ABEND CODE 33E FOR SUBTASK                            */
         SPACE
         LA    R1,ABEND33E             CODE FOR SUBTASK, STAE=YES
         SPACE
*/* DET01170: L RTM: ABTERM SUBTASK                                  */
         SPACE
DET01170 EQU   *                       *
         LR    R12,R2DETTCB            SAVE
         BAL   R14,ABTERMR             CALL ABTERMING SUBROUTINE
         LR    R2DETTCB,R12            RESTORE
         SPACE
*/* DET01160: P SAVE DETACH TCBECB, RESET TO WORKAREA ECB ADDRESS    */
         SPACE
DET01160 EQU   *                       *
         L     R10,TCBECB-TCB(,R2DETTCB) GET ECB ADDRESS
         LA    R8,WKECB                ADDRESS OF WORKAREA ECB
         ST    R8,TCBECB-TCB(,R2DETTCB)  INTO DETACH TCB
         TM    TCBFBYT2-TCB(R2DETTCB),TCBECBNV IS NO CHECK FLAG NOW SET
         BZ    DET02030                NO, SAVE THIS STATUS
         OI    WKFLAGS,WKECBNV         YES, SAVE THIS STATUS
DET02030 EQU   *                       *
         OI    TCBFBYT2-TCB(R2DETTCB),TCBECBNV WORKAREA ECB NOT CHECKED
         SPACE
*/* S FRROFF: CANCEL FRR                                             */
         SPACE
         BAL   R14,FRROFF              CANCEL FRR
         SPACE
*/* L SETLOCK: RELEASE LOCAL LOCK                                    */
         SPACE
         LR    R7,R13WKPTR             SAVE
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=('ENTERED WITH LOCK HELD')
         SPACE
*/* L WAIT SVC: ALLOW SUBTASK TO COMPLETE                            */
         SPACE
         LR    R1,R8                   ECB ADDRESS
         WAIT  ECB=(1)                 ISSUE SVC
         SPACE
*/* L SETLOCK: GET LOCAL LOCK                                        */
         SPACE
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=('RELEASED BY EXIT')
         LR    R13WKPTR,R7             RESTORE
         SPACE
*/* S FRRON: ESTABLISH FRR                                           */
         SPACE
         BAL   R14,FRRON               ADD DETACH FRR TO STACK
         SPACE
*/* D (NO,DET01180,YES,) WAS THERE AN ATTACH ECB                     */
         SPACE
         LTR   R11,R10                 IS SAVED ECB PTR = 0
         BZ    DET01180                YES, BYPASS POST
         SPACE
*/* S POSTRTN: POST ATTACH ECB WITH TCB COMPLETION CODE              */
         SPACE
         TM    WKFLAGS,WKECBNV         WAS NO CHECK FLAG ON PREVIOUSLY
         BO    DET02040                YES, LEAVE ON
         NI    TCBFBYT2-TCB(R2DETTCB),FF-TCBECBNV NO, RESET TO CHECK
DET02040 EQU   *                       *
         BAL   R14,POSTRTN             INVOKE POST
         SPACE
*/* DET01180: S FREETCB: FREE TCB RESOURCES                          */
         SPACE
DET01180 EQU   *                       *
         BAL   R14,FREETCB             UNCHAIN AND FREE TCB, SAVEAREA
         SPACE
*/* P SET RETURN CODE TO 4                                           */
         SPACE
         LA    R15,C4                  RETURN CODE USED WHEN SUBTASK
*                                        ABTERMED WITH 33E
         SPACE
*/* D (YES,DET01190,NO,) WAS STAE=YES SPECIFIED                      */
         SPACE
         TM    WKFLAGS,WKSTAE          WAS STAE=YES SPECIFIED
         BO    DET01190                YES, LEAVE RETURN CODE AS IS
         SPACE
*/* DET01110: P SET RETURN CODE 0                                    */
         SPACE
DET01110 EQU   *                       *
         SR    R15,R15                 RETURN CODE 0
         SPACE
*/* DET01190: R RETURN TO CALLING POINT                              */
         SPACE
DET01190 EQU   *                       *
         L     R14,WKSUBRET            RESTORE RETURN ADDRESS
         BR    R14                     RETURN
         SPACE 2
*/* SUBRTN: END FLOWCHART                                            */
         EJECT
*/* POSTRTN: CHART                                                   */
*/* FOOTING
*/* POSTS ATTACH ECB                                                 */
         SPACE 2
***********************************************************************
*                                                                     *
* SUBROUTINE POSTRTN VALIDITY CHECKS AND POSTS THE ATTACH ECB,        *
* ADDRESSED BY TCBECB OF THE DETACH TCB. IF VALIDITY CHECK FAILS, THE *
* FRR IS ENTERED TO SET CODE 43E. THIS SUBROUTINE IS CALLED BY SUBROU-*
* TINE SUBRTN AND BY THE END OF TASK BRANCH ENTRY.                    *
*                                                                     *
* SUBROUTINES CALLED: NONE                                            *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: POST IS INVOKED AT BRANCH   *
*                                         ENTRY IEA0PT02              *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE: R0       - DESTROYED                                *
*                 R2DETTCB - DETACH TCB ADDRESS                       *
*                 R4OTCB   - ADDRESS OF MOTHER TCB OF DETACH TCB      *
*                 R10      - DESTROYED                                *
*                 R11      - INPUT, ECB ADDRESS                       *
*                 R12      - DESTROYED                                *
*                 R14      - RETURN ADDRESS                           *
*                                                                     *
***********************************************************************
         SPACE 3
*/* E ENTER POSTRTN                                                  */
         SPACE
*/* D (NO,DET04110,YES,) IS ECB TO BE VALIDITY CHECKED               */
         SPACE
POSTRTN  EQU   *                       ENTRY POINT
         TM    TCBFBYT2-TCB(R2DETTCB),TCBECBNV IS SYSTEM ECB INDICATED
         BO    DET04110                YES, BYPASS VALIDITY CHECK
         SPACE
*/* P VALIDITY CHECK ECB BEFORE POSTING                              */
         SPACE
         LR    R0,R2DETTCB             SAVE DETACH TCB ADDRESS
         SR    R2,R2                   CLEAR
         IC    R2,TCBPKF-TCB(R4OTCB)   CORRECT ECB PROTECT KEY
         OI    DETFRRF1,DETECB         INDICATE CHECKING ECB
         MODESET KEYADDR=(2)           SET CALLER'S PROTECT KEY
         OC    0(C4,R11),0(R11)        REFERENCE ECB IN CALLER'S KEY
         MODESET EXTKEY=SUPR           RESET KEY 0
         NI    DETFRRF1,FF-DETECB      RESET CHECK FLAG
         LR    R2DETTCB,R0             RESTORE
         SPACE
*/* DET04110: L IEAV0PT02: POST ATTACH ECB                           */
         SPACE
DET04110 EQU   *                       *
         SR    R10,R10                 CLEAR
         L     R15,CVTPTR              ADDRESS OF CVT
         LR    R0,R14                  SAVE RETURN ADDRESS
         ICM   R10,B'0111',TCBCMPC-TCB(R2DETTCB)  GET COMPLETION CODE
         LR    R12,R4OTCB              ADDRESS OF MOTHER TCB
         L     R15,CVT0PT02-CVT(,R15)  BRANCH ENTRY ADDRESS
         BALR  R14,R15                 INVOKE POST
* NOTE - - REGISTERS 10 - 15 DESTROYED
         SPACE
*/* R RETURN                                                         */
         SPACE
         LR    R14,R0                  RESTORE RETURN ADDRESS
         BR    R14                     RETURN
         SPACE
*/* POSTRTN: END FLOWCHART                                           */
         EJECT
*/* ABTERMR: CHART                                                   */
*/* FOOTING
*/* ABTERM SUBROUTINE                                                */
***********************************************************************
*                                                                     *
* SUBROUTINE ABTERMR ABTERMS A TCB. IT IS CALLED BY SUBROUTINE SUBRTN *
* AND RECOVERY RETRY ROUTINE IGC062R3.                                *
*                                                                     *
* SUBROUTINES CALLED: NONE                                            *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: CALLRTM                     *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*        R0    - DESTROYED                                            *
*        R1    - INPUT, COMPLETION CODE                               *
*        R2    - DESTROYED                                            *
*        R7    - DESTROYED                                            *
*        R12   - ADDRESS OF TCB TO BE ABTERMED                        *
*        R14   - RETURN ADDRESS                                       *
*        R15   - DESTROYED                                            *
*                                                                     *
***********************************************************************
*/* E ENTER ABTERMR                                                  */
         SPACE
ABTERMR  EQU   *                       ENTRY POINT
         LR    R7,R14                  SAVE RETURN ADDRESS
         SPACE
*/* L CALLRTM: ABTERM TASK                                           */
         SPACE
         CALLRTM TYPE=ABTERM,DUMP=NO,COMPCOD=(1),TCB=(12)      @YM03636
         SPACE
*/* R () RETURN                                                      */
         SPACE
         LR    R14,R7                  RESTORE RETURN ADDRESS
         BR    R14                     RETURN
*/* ABTERMR: END FLOWCHART                                           */
         EJECT
*/* FREETCB: CHART                                                   */
*/* FOOTING
*/* SUBROUTINE WHICH FREES TCB RESOURCES                             */
         SPACE 2
***********************************************************************
*                                                                     *
* SUBROUTINE FREETCB DEQUEUES THE DETACH TCB FROM ITS FAMILY QUEUE,   *
* FREES THE TCB'S PROBLEM PROGRAM SAVE AREA, IF ONE EXISTS, AND FREES *
* THE TCB STORAGE. IT IS CALLED BY SUBROUTINE SUBRTN AND BY THE       *
* BRANCH ENTRY FROM END-OF-TASK.                                      *
*                                                                     *
* SUBROUTINES CALLED: FREE, DEQUEUE                                   *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: NONE                        *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE: R5       - RESTRICTED                               *
*                 R8       - RETURN ADDRESS SAVE REGISTER             *
*                 R2DETTCB - ADDRESS OF THE DETACH TCB                *
*                 R14      - RETURN ADDRESS                           *
*                                                                     *
***********************************************************************
         SPACE 2
*/* E ENTER FREETCB                                                  */
         SPACE
FREETCB  DS    0H                      ENTRY POINT
         LR    R8,R14                  SAVE RETURN ADDRESS
         SPACE
*/* D (NO,DET02000,YES,) IS THERE A PROB PGM SAVE AREA               */
         SPACE
         SR    R1,R1                   CLEAR
         ICM   R1,B'0111',TCBFSAB-TCB(R2DETTCB) SAVE AREA ADDRESS
         BZ    DET02000                BYPASS FREEING IF ADDRESS 0
         SPACE
*/* S FREE: FREE PROBLEM PROGRAM SAVE AREA, SP 250                   */
         SPACE
         LA    R0,SVAREAL              LENGTH OF SAVE AREA
         LA    R3,SP250                SUBPOOL NUMBER
         BAL   R14,FREE                FREEMAIN SAVE AREA
         SPACE
*/* DET02000: S DEQUEUE: UNCHAIN TCB FROM FAMILY QUEUE               */
         SPACE
DET02000 EQU   *                       *
         BAL   R14,DEQUEUE             UNCHAIN FROM FAMILY QUEUE
         SPACE
*/* S FREE: FREE DETACH TCB                                          */
         SPACE
         LR    R1,R2DETTCB             ADDRESS OF TCB
         LA    R7,TCBPXLEN             LENGTH OF TCB PREFIX
         SR    R1,R7                   ADDRESS OF TCB PREFIX
         LA    R0,TCBLEN               LENGTH OF TCB
         LA    R3,SP253                SUBPOOL NUMBER
         BAL   R14,FREE                FREE TCB
         SPACE
*/* R RETURN TO CALLING POINT                                        */
         SPACE
         LR    R14,R8                  RESTORE
         BR    R14                     RETURN
         SPACE 2
*/* FREETCB: END FLOWCHART                                           */
         EJECT
*/* FREE: CHART                                                      */
*/* FOOTING
*/* SUBROUTINE WHICH PERFORMS FREEMAINS                              */
         SPACE 2
***********************************************************************
*                                                                     *
* SUBROUTINE FREE INVOKES A BRANCH ENTRY FREEMAIN. IF THE DETACH TASK *
* IS IN ABEND, THE FREEMAIN IS CONDITIONAL. OTHERWISE, THE FREEMAIN   *
* IS UNCONDITIONAL. IT IS CALLED BY SUBROUTINES FREETCB AND SUBRTN.   *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: FREEMAIN BRANCH ENTRY       *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE: R0       - LENGTH OF AREA TO BE FREED               *
*                 R1       - ADDRESS OF AREA TO BE FREED              *
*                 R2DETTCB - ADDRESS OF THE DETACH TCB                *
*                 R3       - SUBPOOL ID OF AREA TO BE FREED           *
*                 R4OTCB   - ADDRESS OF THE MOTHER TCB                *
*                 R5       - RESTRICTED                               *
*                 R8       - RESTRICTED                               *
*                 R12      - RETURN ADDRESS SAVE REGISTER             *
*                 R13WKPTR - ADDRESS OF WORKAREA                      *
*                                                                     *
***********************************************************************
         SPACE 2
*/* E ENTER FREE                                                     */
         SPACE
FREE     DS    0H                      ENTRY POINT
         LR    R12,R14                 SAVE RETURN ADDRESS
         SPACE
*/* D (YES,DET03010,NO,) IS THIS A PERMANENTLY RESIDENT TASK         */
         SPACE
         TM    TCBFLGS7-TCB(R2DETTCB),TCBRSTSK IS TASK PERM RESIDENT
         BO    DET03010                YES, PERFORM NO FREEMAINS
         SPACE
         L     R7,PSAAOLD-PSA(R0)      ADDRESS OF CURRENT ASCB
         SPACE
*/* D (NO,DET03000,YES,) WAS CONDITIONAL FREEMAIN REQUESTED          */
         SPACE
         TM    WKFLAGS,WKCONDL         CONDITIONAL FREEMAIN REQUESTED
         BZ    DET03000                NO, ISSUE UNCONDITIONAL REQUEST
         SPACE
*/* L (,DET03010) FREEMAIN: CONDITIONALLY FREE INPUT AREA            */
         SPACE
         FREEMAIN RC,LV=(0),A=(1),SP=(3),BRANCH=YES
         B     DET03010                GO EXIT SUBROUTINE
         SPACE
*/* DET03000: L FREEMAIN: UNCOND FREE INPUT AREA                     */
         SPACE
DET03000 EQU   *                       *
         FREEMAIN RU,LV=(0),A=(1),SP=(3),BRANCH=YES
         SPACE
*/* DET03010: R RETURN TO CALLING POINT                              */
         SPACE
DET03010 EQU   *                       *
         LR    R14,R12                 RESTORE
         BR    R14                     RETURN
         SPACE 2
*/* FREE: END FLOWCHART                                              */
         EJECT
*/* DEQUEUE: CHART                                                   */
*/* FOOTING
*/* SUBROUTINE REMOVES DETACH TCB FROM THE FAMILY QUEUE              */
***********************************************************************
*                                                                     *
* SUBROUTINE DEQUEUE REMOVES THE DETACH TCB FROM THE FAMILY QUEUE,    *
* IF IT IS STILL ON THAT QUEUE.                                       *
*                                                                     *
* SUBROUTINES CALLED: NONE                                            *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: NONE                        *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*        R2DETTCB - ADDRESS OF THE DETACH TCB                         *
*        R4OTCB - ADDRESS OF THE MOTHER TCB                           *
*        R7    - DESTROYED                                            *
*        R11   - DESTROYED                                            *
*        R14   - RETURN ADDRESS                                       *
*                                                                     *
* LEVEL - 2 (CALLED BY SUBROUTINE FREETCB AND THE FRR)                *
*                                                                     *
***********************************************************************
         SPACE
*/* E ENTER DEQUEUE                                                  */
*/* P REMOVE DETACH TCB FROM THE FAMILY QUEUE                        */
         SPACE
DEQUEUE  EQU   *                       *
         LA    R11,TCBLTC-TCB(,R4OTCB) INITIAL CHAIN FIELD ADDRESS
         B     DET02010                ENTER LOOP
         SPACE
DET02020 EQU   *                       TOP OF LOOP
         LA    R11,TCBNTC-TCB(,R7)     UPDATE CHAIN FIELD ADDRESS
DET02010 EQU   *                       *
         ICM   R7,B'1111',0(R11)       CHAIN FIELD CONTENTS (ADDRESS
*                                        OF NEXT SUBTASK)
         BZ    DET02050                NO MORE SUBTASKS, RETURN
         CR    R7,R2DETTCB             IS THIS THE DETACH TCB
         BNE   DET02020                NO, CONTINUE
*                                      YES, UNCHAIN IT
         L     R7,TCBNTC-TCB(,R2DETTCB)  ADDRESS OF NEXT SUBTASK, OR 0
         ST    R7,0(,R11)                  INTO PREVIOUS CHAIN FIELD
         SPACE
*/* DET02050: R () RETURN                                            */
         SPACE
DET02050 EQU   *                       *
         BR    R14                     RETURN
         SPACE
*/* DEQUEUE: END FLOWCHART                                           */
         TITLE 'IEAVEED0 - DETACH BRANCH ENTRY - IGC062R1'
*/* IGC062R1: CHART                                                  */
*/* FOOTING
*/* BRANCH ENTRY FOR ABEND AND EOT                                   */
***********************************************************************
*                                                                     *
* IGC062R1 IS A BRANCH ENTRY POINT FOR USE BY ABEND AND END-OF-TASK.  *
* IT PROVIDES ABEND WITH A DIRECTED DETACH FUNCTION, FOR WHICH THE    *
* DETACH TCB NEED NOT BE A SUBTASK OF THE CURRENT TCB. FOR END-OF-    *
* TASK IT IS A RESOURCE MANAGER, AND HANDLES SCHEDULING OF ETXR,      *
* POSTING ATTACH ECB, AND FREEING TCB RELATED RESOURCES.              *
*                                                                     *
* SUBROUTINES CALLED: FRRON, FRROFF, SUBRTN, FREETCB, POSTRTN         *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: STAGE II EXIT EFFECTOR      *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE: R0       - AN ENTRY CODE:                           *
*                                      0 - EOT PROCESSING             *
*                                      1 - ABEND PROCESSING           *
*                 R1       - ADDRESS OF TCB TO BE DETACHED            *
*                 R13      - ADDRESS OF A 72 BYTE REGISTER SAVE AREA  *
*                 R14      - RETURN ADDRESS                           *
*                 R15      - ENTRY POINT ADDRESS                      *
*                                                                     *
* NOTE: LOCAL LOCK IS HELD UPON ENTRY                                 *
*                                                                     *
***********************************************************************
         SPACE
*/* E ENTER IGC062R1                                                 */
         SPACE
IGC062R1 DS    0H                      ENTRY POINT
         STM   R14,R12,WKR14RET        SAVE REGISTERS
         SR    R2,R2                   CLEAR
         STC   R2,WKFLAGS              CLEAR FLAGS
         ST    R2,WKECB                CLEAR ECB
         LR    R2DETTCB,R1             DETACH TCB ADDRESS
         USING IGC062R1,R15
         L     R6BASE,DET062EP         ESTABLISH ADDRESSABILITY
         DROP  R15
         SPACE
*/* P GET MOTHER TCB ADDRESS                                         */
         SPACE
         L     R4OTCB,TCBOTC-TCB(,R2DETTCB) SET MOTHER TCB ADDRESS
         SPACE
*/* S FRRON: ESTABLISH FRR                                           */
         SPACE
         BAL   R14,FRRON               ADD ELEMENT TO STACK
         SPACE
*/* P INDICATE CONDITIONAL FREEMAINS TO BE PERFORMED, BRANCH ENTRY   */
         SPACE
         OI    WKFLAGS,WKCONDL+WKBRNTY ABEND NOT PERMISSIBLE THIS ENTRY
*                                      DETACH WAS BRANCH ENTERED
         SPACE
*/* D (0,DET04000,1,) CHECK ENTRY CODE                               */
         SPACE
         CLI   WKR0+C3,C0              IS ENTRY CODE 0
         BE    DET04000                YES, GO PERFORM EOT PROCESSING
         SPACE
*/* P CLEAR TCBECB IN DETACH TCB                                     */
         SPACE
         SR    R15,R15                 ZERO
         ST    R15,TCBECB-TCB(,R2DETTCB)  NO POST FOR THIS ENTRY
         SPACE
*/* S (,DET04010) SUBRTN: PERFORM DETACH                             */
         SPACE
         BAL   R14,SUBRTN              DETACH INPUT TCB, WITH STAI=NO,
*                                        AND WITH ABTERM ALLOWED
         B     DET04010                GO TO EXIT
         SPACE 2
***********************************************************************
*                                                                     *
*                       PERFORM EOT PROCESSING                        *
*                                                                     *
***********************************************************************
         SPACE
*/* DET04000: P SET END OF TASK INDICATOR FOR FRR                    */
         SPACE
DET04000 EQU   *                       *
         OI    DETFRRF1,DETEOT         INDICATE EOT ENTRY       @Y02753
         SPACE
*/* D (NO,DET04020,YES,) IS THERE AN ATTACH ECB                      */
         SPACE
         ICM   R11,B'1111',TCBECB-TCB(R2DETTCB)  ECB ADDRESS
         BZ    DET04020                IF ADDRESS 0, BYPASS POST
         SPACE
*/* S POSTRTN: VALIDITY CHECK AND POST ATTACH ECB                    */
         SPACE
         BAL   R14,POSTRTN             INVOKE POST SUBROUTINE
         OI    WKFLAGS,WKHOLD          TCB NOT TO BE FREED
         SPACE
*/* DET04020: D (NO,DET04030,YES,) IS THERE AN ETXR                  */
         SPACE
DET04020 EQU   *                       *
         TM    TCBFLGS2-TCB(R2DETTCB),TCBFETXR  DOES ATTACH ETXR EXIST
         BZ    DET04030                NO, BYPASS SCHEDULING
         SPACE
*/* L STAGE II EXIT EFFECTOR: SCHEDULE ETXR                          */
         SPACE
         L     R1,TCBIQE-TCB(,R2DETTCB)  IQE ADDRESS
         LCR   R1,R1                   COMPLEMENT OF IQE ADDR IS INPUT
         L     R15,CVTPTR              ADDRESS OF CVT
         L     R15,CVT0EF00-CVTMAP(,R15)  ADDR OF STAGE II EXIT EFFECT
         BALR  R14,R15                 SCHEDULE ETXR
         OI    WKFLAGS,WKHOLD          TCB NOT TO BE FREED
         SPACE
*/* DET04030: P SET TCBACTIV = 0                                     */
         SPACE
DET04030 EQU   *                       *
         NI    TCBFBYT1-TCB(R2DETTCB),FF-TCBACTIV  ACTIVE SWITCH OFF
         OI    DETFRRF1,DETCOMPL       INDICATE ECB,ETXR PROCESSING
*                                      COMPLETED                @Y02753
         SPACE
*/* P UNCHAIN TCB FROM DISPATCHING QUEUE                             */
         SPACE
         L     R14,PSAAOLD-PSA(R0)     ADDRESS OF CURRENT ASCB
         L     R14,ASCBASXB-ASCB(,R14) ADDRESS OF CURRENT ASXB
         SR    R10,R10                 INITIAL PREVIOUS TCB PTR
         L     R11,ASXBFTCB-ASXB(,R14) INITIAL COMPARE TCB PTR, ADDR
*                                        OF FIRST TCB ON READY QUEUE
         L     R12,TCBTCB-TCB(,R11)    INITIAL NEXT TCB PTR
         B     DET04050                GO CHECK COMPARE TCB
         SPACE
DET04040 EQU   *                       SEARCH LOOP
         LR    R10,R11                 COMPARE TCB BECOMES PREVIOUS
         LR    R11,R12                 NEXT BECOMES COMPARE
         L     R12,TCBTCB-TCB(,R12)    UPDATE PTR TO NEXT TCB
DET04050 EQU   *                       SEARCH LOOP ENTRY POINT
         CR    R11,R2DETTCB            IS COMPARE TCB THE DETACH TCB
         BNE   DET04040                NO, TRY NEXT
*                                      YES, UNCHAIN IT
         LTR   R10,R10                 IS FIRST ELEMENT BEING UNCHAINED
         BZ    DET04060                YES, GO UPDATE TOP OF QUEUE PTR
         ST    R12,TCBTCB-TCB(,R10)    NO, CHAIN NEXT TO PREVIOUS BY
*                                        FORWARD PTR
         B     DET04070                GO PROCESS BACK CHAIN
DET04060 EQU   *                       *
         ST    R12,ASXBFTCB-ASXB(,R14) NEXT BECOMES FIRST ON QUEUE
DET04070 EQU   *                       *
         LTR   R12,R12                 IS LAST ELEMENT BEING UNCHAINED
         BZ    DET04080                YES, GO UPDATE END OF QUEUE PTR
         ST    R10,TCBBACK-TCB(,R12)   NO, CHAIN PREVIOUS TO NEXT BY
*                                        BACKWARD PTR
         B     DET04090                UNCHAINING IS COMPLETE
DET04080 EQU   *                       *
         ST    R10,ASXBLTCB-ASXB(,R14) PREVIOUS BECOMES LAST ON QUEUE
         SPACE
*/* DET04090: P CLEAR PSATOLD, INDICATE TASK HAS COMPLETED           */
         SPACE
DET04090 EQU   *                       *
         SR    R10,R10                 CLEAR
         ST    R10,PSATOLD-PSA(R0)     ZERO CURRENT TCB POINTER
         OI    TCBFLGS5-TCB(R2DETTCB),TCBFC  TASK IS COMPLETE
         SPACE
*/* P DECREMENT COUNT OF TCB'S ON DISPATCH QUEUE                     */
         SPACE
         LH    R10,ASXBTCBS-ASXB(,R14) NUMBER OF TCB'S ON DISPATCHING
         BCTR  R10,R0                  QUEUE LESS ONE
         STH   R10,ASXBTCBS-ASXB(,R14) SAVE NEW COUNT (FIELD IS
*                                        SERIALIZED BY LOCAL LOCK)
         SPACE
*/* D (YES,DET04100,NO,) WAS THERE AN ECB OR ETXR                    */
         SPACE
         TM    WKFLAGS,WKHOLD          SHOULD TCB BE FREED
         BO    DET04100                NO, BYPASS FREEMAIN
         SPACE
*/* S (,DET04010) FREETCB: FREE TCB RESOURCES                        */
         SPACE
         BAL   R14,FREETCB             CLEAN UP TCB
         B     DET04010                GO EXIT
         SPACE
*/* DET04100: P SET TCBIQE = 0, TCBECB = 0, TCBFETXR = 0             */
         SPACE
DET04100 EQU   *                       *
         NI    TCBFLGS2-TCB(R2DETTCB),FF-TCBFETXR  ETXR OFF
         SR    R0,R0                   CLEAR
         ST    R0,TCBIQE-TCB(,R2DETTCB)  NO IQE PTR
         ST    R0,TCBECB-TCB(,R2DETTCB)  NO ECB PTR
         SPACE
*/* DET04010: S FRROFF: CANCEL FRR                                   */
         SPACE
DET04010 EQU   *                       *
         BAL   R14,FRROFF              REMOVE STACK ELEMENT
         SPACE
*/* R RETURN TO CALLER                                               */
         SPACE
         LM    R14,R12,WKR14RET        RESTORE REGISTERS
         BR    R14                     RETURN
         SPACE
*/* IGC062R1: END FLOWCHART                                          */
         TITLE 'IEAVEED0 - DETACH FRR - IGC062R2'
*/* IGC062R2: CHART                                                  */
*/* FOOTING
*/* FRR                                                              */
         SPACE
***********************************************************************
*                                                                     *
* IGC062R2 IS THE FUNCTIONAL RECOVERY ROUTINE (FRR) FOR DETACH. IT    *
* PROVIDES FOR PARAMETER VALIDITY CHECKING, VALIDATION OF THE TCB     *
* DISPATCHING AND FAMILY QUEUES, AND FOR BRANCH ENTRY, RETRY TO       *
* RETURN TO THE CALLER.                                               *
*                                                                     *
* SUBROUTINES CALLED: DEQUEUE                                         *
*                                                                     *
* SYSTEM ROUTINES CALLED/MACROS ISSUED:                               *
* IGC044R2 - TCB QUEUE VALIDATION ROUTINE, IN CHAP MODULE IEAVECH0    *
*                                                                     *
* RETURN CODES SET: 0, 4                                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*        R0    - ADDRESS OF 200 BYTE WORKAREA                         *
*        R1    - ADDRESS OF THE SDWA                                  *
*        R9    - RETURN ADDRESS SAVE REGISTER                         *
*        R14   - RETURN ADDRESS                                       *
*        R15   - ENTRY POINT ADDRESS                                  *
*                                                                     *
***********************************************************************
         SPACE 2
*/* E ENTER IGC062R2                                                 */
         SPACE
IGC062R2 EQU   *                       ENTRY POINT              @Y02753
         USING IGC062R2,R15                                     @Y02753
         L     R6BASE,DET062EP         SVC ENTRY POINT ADDRESS  @Y02753
         DROP  R15                                              @Y02753
         L     R5FRR,SDWAPARM-SDWA(,R1) ADDRESS OF FRR WORKAREA @Y02753
         LR    R9,R14                  SAVE RETURN ADDRESS      @Y02753
         SPACE
*/* D (NO,DET80000,YES,) DID ERROR OCCUR IN CURRENT ADDRESS SPACE    */
         SPACE
         OC    SDWAFMID-SDWA(C2,R1),SDWAFMID-SDWA(R1) ANY ASID  @Y02753
         BNZ   DET80000                YES, GO PERCOLATE ERROR  @Y02753
         SPACE
*/* D (NO,DET80060,YES,) WAS DETACH BRANCH ENTERED                   */
         SPACE
         L     R13WKPTR,DETWKPTR       ADDRESS OF WORKAREA      @Y02753
         TM    WKFLAGS,WKBRNTY         WAS ENTRY AT IGC062R1    @Y02753
         BZ    DET80060                NO, CHECK ENTRY TYPE     @Y02753
         SPACE
*/* P INDICATE TASK HAS COMPLETED                                    */
         SPACE
         L     R2DETTCB,WKR1TCB        ADDRESS OF DETACH TCB    @Y02753
         OI    TCBFLGS5-TCB(R2DETTCB),TCBFC SET COMPLETE FLAG SO THAT
* IGC044R2 WILL DEQUEUE TCB FROM THE DISPATCHING QUEUE          @Y02753
         SPACE
*/* DET80060: D (NO,DET80020,YES,) ENTRY DUE TO VALIDITY CHECK       */
         SPACE
DET80060 EQU   *                       *
         IC    R10,SDWAMWP1-SDWA(,R1)  ERROR-TIME PSW KEY-CMWP  @Y02753
         LA    R11,KEYMASK             MASK OUT ALL BUT KEY     @Y02753
         NR    R10,R11                 CLEAR ALL BUT KEY        @Y02753
         BZ    DET80020                KEY ZERO, ERROR ENTRY    @Y02753
         SPACE
         TM    SDWAERRA-SDWA(R1),SDWAPCHK DID A PGM CHECK OCCUR @Y02753
         BZ    DET80020                NO, VALIDATE QUEUES      @Y02753
         SPACE
*/* P REQUEST DUMP, NO RECORDING                                     */
         SPACE
         SETRP RECORD=NO,DUMP=YES      NO RECORDING, USER ERROR @Y02753
         SPACE
*/* D (NO,DET80010,YES,) WAS DETACH ENTERED BY END OF TASK           */
         SPACE
         TM    DETFRRF1,DETEOT         CHECK FOR END OF TASK    @Y02753
         BZ    DET80010                NO, SET COMPLETION CODE  @Y02753
         SPACE
*/* P INDICATE INVALID ECB AT END OF TASK                            */
         SPACE
         OI    DETFRRF1,DETEOT2        SET INDICATOR            @Y02753
         SR    R2,R2                   INDICATE NO SVC DUMP     @Y02753
*                                      TO IGC044R2
         B     DET80070                GO VALIDATE QUEUES       @Y02753
         SPACE
*/* DET80020: L IGC044R2: VALIDATE TCB QUEUES                        */
         SPACE
DET80020 EQU   *                       *
         SETRP RECORD=YES,RECPARM=DETFRRID INITIALIZE RECORDING @Y02753
         LA    R2,DETIDLNG             ADDR OF SVC DUMP HEADER  @Y02753
DET80070 EQU   *                       *
         L     R15,DET044R2            QUEUE VALIDATION RTN     @Y02753
         BALR  R14,R15                 INVOKE IGC044R2          @Y02753
* ALL REGISTERS, EXCEPT 0, 1, 9, 14, MAY BE CHANGED.
         SPACE
         USING DET80080,R14            ADDRESSABILITY           @Y02753
DET80080 EQU   *                       RETURN POINT             @Y02753
         L     R6BASE,DET062EP         SVC ENTRY POINT ADDRESS  @Y02753
         DROP  R14                                              @Y02753
         L     R5FRR,SDWAPARM-SDWA(,R1) FRR WORKAREA ADDRESS    @Y02753
         L     R13WKPTR,DETWKPTR       ADDRESS OF WORKAREA      @Y02753
         L     R2DETTCB,WKR1TCB        ADDRESS OF DETACH TCB    @Y02753
         L     R4OTCB,DETOTC           ADDRESS OF MOTHER TCB    @Y02753
         SPACE
*/* D (NO,DET80000,YES,) ARE QUEUES USABLE                           */
         SPACE
         LTR   R15,R15                 VALIDATION SUCCESSFUL    @Y02753
         BNZ   DET80000                NO, GO EXIT NO RETRY     @Y02753
         SPACE
*/* D (NO,DET80000,YES,) WAS DETACH BRANCH ENTERED                   */
         SPACE
         TM    WKFLAGS,WKBRNTY         ENTERED AT IGC062R1      @Y02753
         BZ    DET80000                NO, GO EXIT NO RETRY     @Y02753
         SPACE
*/* S DEQUEUE: REMOVE TCB FROM FAMILY QUEUE                          */
         SPACE
         BAL   R14,DEQUEUE             UNCHAIN OFF FAMILY QUEUE @Y02753
         SPACE
*/* D (NO,DET80030,YES,) WAS ENTRY FROM END OF TASK                  */
         SPACE
         TM    DETFRRF1,DETEOT         EOT RESOURCE MGR         @Y02753
         BZ    DET80030                NO, RETRY NO ABTERM      @Y02753
         SPACE
*/* D (NO,DET80090,YES,) WAS ENTRY CAUSED BY ECB CHECK               */
         SPACE
         TM    DETFRRF1,DETEOT2        VAL CHK AT EOT IS ECB    @Y02753
         BZ    DET80090                NO, CHECK FOR 53E ABEND  @Y02753
         SPACE
*/* P (,DET80040) INDICATE ABTERM CODE 43E                           */
         SPACE
         LA    R0,ABEND43E             YES, ABTERM CODE 43E     @Y02753
         B     DET80040                GO EXIT, RETRY           @Y02753
         SPACE
*/* DET80090: D (YES,DET80030,NO,) WAS ECB AND ETXR PROCESSING DONE  */
         SPACE
DET80090 EQU   *                       *                        @Y02753
         TM    DETFRRF1,DETCOMPL       WAS ECB/ETXR CHECKING/PROCESSING
*                                      PERFORMED                @Y02753
         BO    DET80030                YES, RETRY, NO ABTERM    @Y02753
         SPACE
*/* P (,DET80040) INDICATE ABTERM, CODE 53E                          */
         SPACE
         LA    R0,ABEND53E             CODE, MOTHER TASK ABTERM @Y02753
         B     DET80040                GO EXIT, RETRY           @Y02753
         SPACE
*/* DET80010: D (YES,DET80100,NO,) INVALID ECB                       */
         SPACE
DET80010 EQU   *                       *
         TM    DETFRRF1,DETECB         ATTACH ECB BEING CHECKED @Y02753
         BO    DET80100                YES, SET COMP CODE = 43E @Y02753
         SPACE
*/* P (,DET80000) RESET COMPLETION CODE TO 23E                       */
         SPACE
         MVC   SDWACMPC-SDWA(C3,R1),DETSY23E INVALID PARM WORD  @Y02753
         B     DET80000                GO EXIT, NO RETRY        @Y02753
         SPACE
*/* DET80100: P RESET COMPLETION CODE TO 43E                         */
         SPACE
DET80100 EQU   *                       *                        @Y02753
         MVC   SDWACMPC-SDWA(C3,R1),DETSY43E CODE, INVALID ECB  @Y02753
         SPACE
*/* DET80000: R () PERCOLATE ERROR (RC=0)                            */
         SPACE
DET80000 EQU   *                       *                        @Y02753
         SETRP FRELOCK=(LOCAL),RC=0    NO RETRY                 @Y02753
         LR    R14,R9                  RESTORE                  @Y02753
         BR    R14                     RETURN TO RTM            @Y02753
         SPACE 2
*/* DET80030: P INDICATE NO ABTERM TO RETRY ROUTINE                  */
         SPACE
DET80030 EQU   *                       *                        @Y02753
         SR    R0,R0                   NO ABTERM COMP CODE      @Y02753
         SPACE
*/* DET80040: R () RETRY (RC = 4)                                    */
         SPACE
DET80040 EQU   *                       *
         LA    R15,IGC062R3            ADDRESS OF RETRY ROUTINE @Y02753
         STM   R0,R15,SDWASR00-SDWA(R1) REGISTERS FOR RETRY RTN @Y02753
         SETRP RETADDR=(15),RETREGS=YES,RC=4 EXIT CODE, RETRY   @Y02753
         LR    R14,R9                  RESTORE                  @Y02753
         BR    R14                     RETURN TO RTM            @Y02753
         SPACE
*/* IGC062R2: END FLOWCHART                                          */
         TITLE 'IEAVEED0 - DETACH RECOVERY RETRY - IGC062R3'
*/* IGC062R3: CHART                                                  */
*/* FOOTING
*/* RECOVERY RETRY ROUTINE                                           */
         SPACE 2
***********************************************************************
*                                                                     *
* IGC062R3 IS A RETRY ROUTINE SCHEDULED (VIA SETRP) IN THE DETACH FRR *
* WHENEVER RECOVERY IS BEING PERFORMED FOR BRANCH ENTRY TO DETACH.    *
* THIS ROUTINE ABTERMS THE MOTHER TASK OF THE CURRENT TASK UPON       *
* REQUEST. IN THIS CASE, THE MOTHER TCB ADDRESS AND THE COMPLETION    *
* CODE TO BE USED ARE PASSED BY THE FRR. HOWEVER, THE PRIMARY PURPOSE *
* OF THIS ROUTINE IS TO RETURN CONTROL TO THE CALLER, SINCE FAILURE   *
* TO COMPLETE PROCESSING IS A MUCH LESS DRASTIC ERROR THAN PERCOLA-   *
* TION, FOR THE CIRCUMSTANCES UNDER WHICH IGC062R1 IS CALLED.         *
*                                                                     *
* SUBROUTINES CALLED: FRROFF,ABTERMR                                  *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: NONE                        *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*        R0    - INPUT, ABTERM COMPLETION CODE, OR 0                  *
*        R4    - ADDRESS OF MOTHER TCB OF CURRENT TASK                *
*        R5FRR - ADDRESS OF SIX-WORD WORKAREA FROM SETFRR             *
*        R6BASE - BASE REGISTER                                       *
*        R13WKPTR - ADDRESS OF DETACH WORKAREA                        *
*        R15   - ENTRY POINT ADDRESS                                  *
*                                                                     *
***********************************************************************
         SPACE 3
*/* E ENTER IGC062R3                                                 */
         SPACE
*/* D (NO,DET70010,YES,) IS ABTERM REQUESTED                         */
         SPACE
IGC062R3 EQU   *                       *                        @Y02753
         LTR   R0,R0                   ANY COMPLETION CODE      @Y02753
         BZ    DET70010                NO, BYPASS ABTERM        @Y02753
         SPACE
*/* S ABTERMR: ABTERM THE MOTHER TASK                                */
         SPACE
         LR    R12,R4                  ADDRESS OF MOTHER TCB    @Y02753
         LR    R1,R0                   COMPLETION CODE          @Y02753
         BAL   R14,ABTERMR             INVOKE ABTERM SUBROUTINE @Y02753
         SPACE
*/* DET70010: S FRROFF: CANCEL FRR STACK ELEMENT                     */
         SPACE
DET70010 EQU   *                       *                        @Y02753
         BAL   R14,FRROFF              REMOVE FRR STACK ELEMENT @Y02753
         SPACE
*/* P RESTORE REGISTERS                                              */
         SPACE
         LM    R14,R12,WKR14RET        RESTORE                  @Y02753
         SPACE
*/* R () RETURN TO CALLER OF IGC062R1                                */
         SPACE
         BR    R14                     RETURN TO EOT OR ABEND   @Y02753
         SPACE 2
*/* IGC062R3: END FLOWCHART                                          */
         TITLE 'IEAVEED0 - DETACH SVC - ENTRY POINT IGC062'
*/* FRRON: CHART                                                     */
*/* FOOTING
*/* SUBROUTINE ESTABLISHES FRR                                       */
         SPACE 2
***********************************************************************
*                                                                     *
* SUBROUTINE FRRON ESTABLISHES DETACH'S FRR VIA SETFRR                *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: SETFRR                      *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*        R11 - DESTROYED                                              *
*        R12 - DESTROYED                                              *
*        R7  - DESTROYED                                              *
*        R4OTC - ADDRESS OF MOTHER TCB                                *
*        R13WKPTR - ADDRESS OF WKAREA                                 *
*        R14 - RETURN ADDRESS                                         *
*        R5FRR - OUTPUT, ADDRESS OF FRR WORKAREA                      *
*                                                                     *
***********************************************************************
         SPACE 2
*/* E ENTER FRRON                                                    */
         SPACE
*/* L SETFRR: ESTABLISH FRR                                          */
         SPACE
FRRON    EQU   *                       ENTRY POINT
         LA    R11,IGC062R2            ADDRESS OF FRR           @Y02753
         SETFRR A,FRRAD=(R11),PARMAD=(R5FRR),WRKREGS=(R12,R7)   @Y02753
         SPACE
*/* P JOURMAL MOTHER TCB ADDRESS, WORKAREA ADDRESS                   */
         SPACE
         ST    R4OTCB,DETOTC           ADDRESS OF MOTHER TCB    @Y02753
         ST    R13WKPTR,DETWKPTR       ADDRESS OF WKAREA        @Y02753
         SPACE
*/* R RETURN TO CALLING POINT                                        */
         SPACE
         BR    R14                     RETURN                   @Y02753
         SPACE 2
*/* FRRON: END FLOWCHART                                             */
         EJECT
*/* FRROFF: CHART                                                    */
*/* FOOTING
*/* SUBROUTINE CANCELS FRR                                           */
         SPACE 2
***********************************************************************
*                                                                     *
* SUBROUTINE FRROFF CANCELS DETACH'S FRR VIA SETFRR.                  *
*                                                                     *
* SYSTEM ROUTINES CALLED / MACROS ISSUED: SETFRR                      *
*                                                                     *
* RETURN CODES SET: NONE                                              *
*                                                                     *
* REGISTER USAGE:                                                     *
*        R11 - DESTROYED                                              *
*        R12 - DESTROYED                                              *
*        R14 - RETURN ADDRESS                                         *
*                                                                     *
***********************************************************************
         SPACE 2
*/* E ENTER FRROFF                                                   */
         SPACE
*/* L SETFRR: CANCEL FRR                                             */
         SPACE
FRROFF   EQU   *                       ENTRY POINT
         SETFRR D,WRKREGS=(R11,R12)                             @Y02753
         SPACE
*/* R RETURN TO CALLING POINT                                        */
         SPACE
         BR    R14                     RETURN                   @Y02753
         SPACE 2
*/* FRROFF: END FLOWCHART                                            */
         EJECT
***********************************************************************
*                                                                     *
*                              CONSTANTS                              *
*                                                                     *
***********************************************************************
         SPACE 2
DET062EP DC    A(IGC062)               SVC ENTRY ADDRESS
DET044R2 DC    V(IGC044R2)             ADDRESS OF QUEUE VERIFYING      *
                                       ROUTINE IN MODULE IEAVECH0
DETSY23E DC    X'23E000'               SYSTEM COMPLETION CODE
DETSY43E DC    X'43E000'               SYSTEM COMPLETION CODE
DETIDLNG DC    FL1'24'                 LENGTH SVC DUMP HEADER
DETFRRID DS    0CL24                   RECORD PARAMETER LIST
         DC    CL8'IEAVEEDO'           MODULE NAME
         DC    CL8'IGC062'             CSECT NAME
         DC    CL8'IGC062R2'           FRR ID
         EJECT
         CVT   DSECT=YES
         EJECT
         IHASCVT
         EJECT
         IHAIQE
         EJECT
         IHAPSA
         EJECT
         IHAFRRS
         EJECT
         IHASDWA
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         EJECT
         IKJTCB LIST=YES
         EJECT
         IKJRB
         EJECT
***********************************************************************
*                                                                     *
*                          DETACH WORKAREA                            *
*                                                                     *
***********************************************************************
         SPACE
WKAREA   DSECT                         DETACH WORKAREA
WKFLAGS  DS    C                       SWITCHES
WKSTAE   EQU   X'80'                   1 - STAE=YES SPECIFIED, 0 - NO
WKTCBFA  EQU   X'40'                   1 - DETACH TCBFA=1, NO ABTERM
*                                      0 - DETACH TCBFA=0, ABTERM TASK
WKHOLD   EQU   X'20'                   1 - ECB OR ETXR, DO NOT FREE
*                                          TCB IN EOT PROCESSING
*                                      0 - FREE TCB IN EOT PROCESSING
WKCONDL  EQU   X'10'                   1 - CONDITIONAL FREEMAINS
*                                      0 - UNCONDITIONAL FREEMAINS
WKECBNV  EQU   X'08'                   1 - TCBECBNV=1 BEFORE RESET
*                                      0 - TCBECBNV=0 BEFORE RESET
WKBRNTY  EQU   X'04'                   1 - DETACH WAS BRANCH ENTERED
*                                      0 - DETACH ENTERED VIA SVC
WKRESRV  DS    CL3                     RESERVED
WKPREVSA DS    A                       PREVIOUS SAVE AREA PTR
WKSUBRET EQU   WKPREVSA                RETURN ADDRESS SAVE WORD
WKNEXTSA DS    A                       NEXT SAVE AREA PTR
WKECB    EQU   WKNEXTSA                ECB FOR ABTERM OF INCOMPLETE TCB
WKR14RET DS    A                       REGISTER 14 SAVE WORD
WKR15EP  DS    A                       REGISTER 15
WKR0     DS    A                       REGISTER 0
WKR1TCB  DS    A                       REGISTER 1, DETACH TCB ADDRESS
WKLENTH  EQU   *-WKAREA                LENGTH OF WORKAREA
         SPACE 3
***********************************************************************
*                                                                     *
* MAPPING OF SIX WORD WORKAREA PROVIDED BY SETFRR, USED TO COMMUNI-   *
* CATE WITH FRR (ENTRY POINT IGC062R2)                                *
*                                                                     *
***********************************************************************
         SPACE
DETFRRWA DSECT
DETFRRW1 DS    0F                      WORD 1
DETFRRF1 DS    C                       FLAGS
DETECB   EQU   X'80'                   1 - ECB VALIDITY CHECK ATTEMPT
DETEOT   EQU   X'40'                   1 - END OF TASK BRANCH ENTRY
DETCOMPL EQU   X'20'                   1 - ECB, ETXR PROCESS COMPLETED
DETEOT2  EQU   X'10'                   1 - INVALID ECB AT EOT TIME
*                                      BITS 4-7 RESERVED
         DS    AL3                     RESERVED
DETFRRW2 DS    0F                      WORD 2
DETOTC   DS    A                       ADDRESS OF MOTHER TCB, EOT ENTRY
DETFRRW3 DS    0F                      WORD 3
DETWKPTR DS    A                       DETACH WORKAREA ADDRESS
DETFRRW4 DS    F                       WORD 4
DETFRRW5 DS    F                       WORD 5
DETFRRW6 DS    F                       WORD 6
         SPACE 2
         END
