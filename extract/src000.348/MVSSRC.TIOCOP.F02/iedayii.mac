         TITLE 'IEDAYII - QTIP CODE FOR TSINPUT'
IEDAYII  CSECT
         SPACE 1
         DC    CL7'IEDAYII'             IDENTIFIER
         DC    X'7203'                  DATE - 07/22/77         ZA25074
         DS    0H                       FILLER
         SPACE 1
***********************************************************************
*
*A064400,138118,138980                                          ZA25074
*C138110                                                        ZA25074
*D138124-138126,645200-6456000                                  ZA25074
*          VS2  3.7  PTF
*                                                              @ZA12528
*                                                              @ZA12528
*                                                              @ZA12528
*                                                              @ZA12528
*                                                              @ZA12528
*                                                              @ZA12528
*  A 237230-241230,264430-266230,268430-274030,275930,276930    ZA12528
*  C 210806,211630-213230,215630-218030                         ZA12528
*  C 242030-245230,256430-262030,280290                         ZA12528
*  D 235630,237230-239630,249230,250030,264430-266030           ZA12528
*  D 268430-274430,275930                                       ZA12528
*                                                                     *
*        VS2 3.0 SU
*0000137840                                                    @ZA11600
*0000137030,137658                                             @ZA10588
*0000617000                                                    @ZA08015
*0000008100,337630                                             @ZA07609
*0000617000                                                    @ZA05465
*0000750674                                                    @ZA03667
*0000530680-530700                                             @ZA02244
*
*
*                                                                M2688
*                                                                TS1628
*                                                                M0030
*                                                                 M3660
*                                                                 M6361
*          RELEASE 21 DELETIONS                                       *
*1332137210,311000,335000,339600,412320,453000-453200,455100,    S22028
*1332455400,455600,456600,530080,530380,684000,747000            S22028
*1332                                                            A45625
*1332139370-139400                                               A43888
*1332535000-542000,548500-600000,663080-663920                   S21008
*                                                                 M2673
*                                                               SA59536
*          VS2-3.0 CHANGES
*D003000,682000,751727,751883                                   ZA01370
*C008100,751922,677500                                          ZA01370
*A677100-677484                                                 ZA01370
*A279612                                                        ZA02167
*C279640                                                        ZA02167
*                                                                     *
**************************************************************  ZA25074
* MODULE NAME = IEDAYII   (QTIP,TSO)                            ZA25074
*                                                               ZA25074
* DESCRIPTIVE NAME = TSINPUT ROUTINE IN QTIP SVC                ZA25074
*                                                               ZA25074
* COPYRIGHT = NONE                                              ZA25074
*                                                               ZA25074
* STATUS = TCAM VERSION 10.0                                    ZA25074
*                                                                     *
* FUNCTION -                                                          *
*    THIS ROUTINE PROVIDES AN INTERFACE FOR TSINPUT (IEDAYI) BETWEEN  *
*    THE TCAM AND TSO REGIONS.                                        *
*                                                                     *
* ENTRY POINTS -                                                      *
*    QTIP0050,QTIP0060,QTIP0070,QTIP0080,QTIP0090, AND QTIP0280.      *
*                                                                     *
* INPUT -                                                             *
*    REFER TO THE PREFACE OF THE APPLICABLE ENTRY POINT.              *
*                                                                     *
* OUTPUT -                                                            *
*    FOR QTIP ENTRY CODE 9, REGISTER 15 WILL CONTAIN A RETURN CODE IN *
*    THE HI ORDER BYTE INDICATING WEITHER OR NOT SUFFICIENT TS        *
*    BUFFERS WERE AVAILABLE TO PROCESS THE TS MESSAGE.  THE LOW ORDER *
*    3 BYTES WILL CONTAIN THE ADDRESS OF THE LAST TS HEADER BUFFER ON *
*    THE INPUT HEADER QUEUE.  THE RETURN CODES ARE AS FOLLOWS.        *
*        00 - SUFFICIENT TS BUFFERS WERE AVAILABLE.                   *
*        04 - NO TS BUFFERS WERE AVAILABLE.                           *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    THIS ROUTINE CALLS THE TIME SHARING INTERFACE PROGRAM (TSIP)     *
*    WITH AN ENTRY CODE OF 4, VIA A BRANCH AND LINK, TO BRING THE     *
*    USER INTO CORE FOLLOWING THE REMOVAL OF AN IWAIT CONDITION.      *
*                                                                     *
* EXITS, NORMAL -                                                     *
*    RETURN IS ALWAYS TO TSINPUT (IEDAYI) VIA A BRANCH ON REGISTER 14.*
*                                                                     *
* EXITS, ERROR -                                                      *
*    NONE                                                             *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    NONE                                                             *
*                                                                     *
* ATTRIBUTES -                                                        *
*    SERIALLY-REUSABLE,REFRESHABLE,DISABLED                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY -                                         *
*    THIS ROUTINE IS DEPENDENT ON THE FOLLOWING EBCDIC CHARACTERS.    *
*        X'0D' - EBCDIC CARRIAGE RETURN CHARACTER.  EQUATED TO        *
*        'CARRTRN' WITHIN THIS ROUTINE.                               *
*                                                                     *
*        X'15' - EBCDIC NEW LINE CHARACTER.  EQUATED TO 'NEWLINE'     *
*        WITHIN THIS ROUTINE.                                         *
*                                                                     *
* NOTES -                                                             *
*    EACH ENTRY POINT INTO THIS ROUTINE IS PREFACED WITH DESCRIPTION  *
*    WHICH DEFINES THE FUNCTION AND INPUT PARAMETERS OF THE ASSOCI-   *
*    ATED ENTRY.                                                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
********                                                       ********
******** ENTRY POINTS                                          ********
********                                                       ********
***********************************************************************
         SPACE 1
         ENTRY QTIP0050,QTIP0060,QTIP0070,QTIP0080,QTIP0090
         ENTRY QTIP0280
         SPACE 3
***********************************************************************
********                                                       ********
******** REGISTER EQUATES                                      ********
********                                                       ********
***********************************************************************
         SPACE 1
R0       EQU   0                        INDEX REGISTER
RMVSZ1   EQU   R0                       SIZE OF DATA IN THE BASIC UNIT
RMVSZ2   EQU   1                        UNFILLED SPACE SIZE IN TS BFR
RWRK1    EQU   RMVSZ2                   WORK/PARAMETER REGISTER
RWK1     EQU   1                        WORK REG               @ZA03667
RSCANF   EQU   2                        POINTER TO BEGIN OF DATA SCANED
RWRK2    EQU   RSCANF                   WORK/PARAMETER REGISTER
RSCANL   EQU   3                        POINTER TO END OF DATA SCANNED
RWRK3    EQU   RSCANL                   WORK/PARAMETER REGISTER
RWRK4    EQU   4                        WORK/PARAMETER REGISTER
RLCB     EQU   RWRK4                    LCB ADDRESS
RTSBFR   EQU   5                        TIME SHARING BUFFER ADDRESS
RTCBFR   EQU   6                        TCAM BUFFER ADDRESS
RQCB     EQU   7                        DESTINATION QCB ADDRESS
RFILL    EQU   RQCB                     ADDR OF BEGIN FILL IN TS BFR
RWRK7    EQU   RFILL                    WORK/PARAMETER REGISTER
RDSZE    EQU   8                        SIZE OF DATA IN BUFFER
RWRK8    EQU   RDSZE                    WORK/PARAMETER REGISTER
RTSB     EQU   9                        TSB ADDRESS
RTIOC    EQU   10                       TIOCRPT ADDRESS
RWK11    EQU   11                       WORK/PARAMETER REGISTER
RBASE    EQU   12                       BASE REGISTER
RAVT     EQU   13                       ADDRESS OF AVTSAVE2
RETRN    EQU   14                       RETURN ADDRESS
RNTRY    EQU   15                       ENTRY POINT
RTRNCD   EQU   RNTRY                    RETURN CODE TO TSINPUT
RWK15    EQU   RTRNCD                   WORK/PARAMETER REGISTER
         EJECT
***********************************************************************
********                                                       ********
******** MASKS AND DISPLACEMENTS                               ********
********                                                       ********
***********************************************************************
         SPACE 1
K0       EQU   0                        NULL DISPLACEMENT
K1       EQU   1                        CONSTANT 1
CC3270ND EQU   1                        3270 AID CONTROL CHAR    S22028
*                                       LENGTH                   S22028
K2       EQU   2                        LENGTH FIELD
K3       EQU   3                        LENGTH FIELD
CC3270R  EQU   3                        LENGTH OF EXTRA CONTROL  S22028
*                                       CONCHARACTERS FOR 3270 REMOTE
CC3270D3 EQU   3                        CONTROL CHAR LNG FOR     S22028
*                                       3270                     S22028
K4       EQU   4                        LENGTH FIELD
CC3270D6 EQU   6                        MAXIMUM NO. OF CONTROL   S22028
*                                       CHARACTERS FOR 3270
ADDR     EQU   7                        ADDRESS MASK            ZA25074
ZEROS    EQU   8                        MASK FOR A CONDITION CODE OF 8
K8       EQU   8                        LENGTH FIELD
K12      EQU   12                       LENGTH FIELD
K16      EQU   16                       LENGTH FIELD
K44      EQU   44                       OFFSET OF 4-WORD SAVE   YS02019
*                                       AREA IN AVTSAVE2
K60      EQU   60                       LENGTH FIELD            YS02019
K64      EQU   64                       LENGTH FIELD            YS02019
LCBDELAY EQU   X'02'                    LCB IS ON THE DELAY QUEUE
CARRRTRN EQU   X'0D'                    CARRIAGE RETURN CHARACTER
SBA      EQU   X'11'                    SBA CHARACTER            S22028
WAITQBFR EQU   X'10'                    USED TO INDICATE TCAM BFR HAS
*                                       BEEN ON TCAM BFR WAIT QUEUE
NEWLINE  EQU   X'15'                    NEW LINE CHARACTER
NOTMOVED EQU   X'20'                    IND NOT ALL OF SCANNED DATA IN
*                                       TCAM BFR WAS MOVED TO TS BFR(S)
TIMEOUT  EQU   X'40'                    TIME OUT OCCURED IN THIS BFR
WRITEBRK EQU   X'80'                    WRITE BREAK IN PROGRESS
CC32706  EQU   X'08'                    MORE THAN 1 3270 CONTROL S22028
*                                       CHARACTER IN BUFFER
OFF      EQU   X'FF'                    USED TO TURN OFF BITS
CLRSCREN EQU   X'FF'                    USED TO IND DISPLAY SCREEN MUST
*                                       BE CLEARED BEFORE CONTINUING
         EJECT
***********************************************************************
********                                                       ********
******** THE FOLLOWING SECTION OF CODE IS USED BY TSINPUT TO   ********
******** TERMINATE TCLEARQ PROCESSING.  THE ENTRY POINT INTO   ********
******** THIS CODE IS QTIP0050.                                ********
********                                                       ********
******** INPUT REGISTERS -                                     ********
********                                                       ********
********       REG 9 - ADDRESS OF THE CURRENT TSB.             ********
********                                                       ********
***********************************************************************
QTIP0050 EQU   *
         USING *,RBASE                  ESTABLISH ADDRESSABILITY
         USING TSB,RTSB                 USE RTSB AS TSB BASE REGISTER
         NI    TSBFLG1,OFF-TSBIFLSH     TERMINATE TCLEARQ PROCESSING
         NI    TSBFLG2,OFF-TSBBIPI      TERMINATE BREAK-IN PROCESSING
         NI    TSBFLG3,OFF-TSBSPIT      PROMPTING OK NOW         YM2814
         BR    RETRN                    RETURN TO CALLER
         DROP  RTSB                     DROP CONTROL BLOCK BASE REGS
         EJECT
***********************************************************************
********                                                       ********
******** THE FOLLOWING SECTION OF CODE IS USED BY TSINPUT TO   ********
******** REMOVE THE SYSTEM FROM AN LWAIT CONDITION AND CHECK   ********
******** THE LINE STATUS OF EACH TERMINAL WHOSE KEYBOARD WAS   ********
******** LOCKED TO INPUT DUE TO THE SYSTEM LWAIT CONDITION.    ********
******** IF IT IS NECESSARY TO ACTIVATE THE TERMINAL, THE LINE ********
******** WILL BE TPOSTED TO ITSELF.  THE ENTRY POINT INTO THIS ********
******** CODE IS QTIP0060.                                     ********
********                                                       ********
******** INPUT REGISTERS -                                     ********
********                                                       ********
********       REG 10 - ADDRESS OF THE TIOCRPT.                ********
********       REG 13 - ADDRESS OF AVTSAVE2.                   ********
********                                                       ********
***********************************************************************
QTIP0060 EQU   *
         USING TIOCRPT,RTIOC            USE RTIOC AS TIOCRPT BASE REG
         USING AVTSAVE2,RAVT            USE RAVT AS AVT BASE REGISTER
         ST    RETRN,AVTSAVE2+K60       SAVE RETURN ADDRESS     YS02019
         NI    TIOCFLG,OFF-TIOCSYLW     REMOVE SYSTEM FROM LWAIT
         LH    RWK11,TIOCNTSB           GET CURRENT NO. OF TS  @ZA10588
*                                       USERS                   YS02019
         USING TSB,RTSB                 USE RTSB AS TSB BASE REGISTER
         L     RTSB,TIOCTSB-K1          GET ADDR OF FIRST TSB IN TABLE
         SR    RWRK8,RWRK8              CLEAR REGISTER
         IC    RWRK8,TIOCTSBS           GET SIZE OF A TSB
         SPACE 2
********
******** CHECK EVERY TSB IN USE TO DETERMINE IF THE ASSOCIATED TERMINAL
******** KEYBOARD WAS LOCKED TO INPUT DUE TO THE SYSTEM LWAIT
******** CONDITION.  IF THE ASSOCIATED TERMINAL IS NOT ALSO IN A USER
******** LWAIT CONDITION, UNLOCK THE TERMINAL KEYBOARD TO ALLOW ANOTHER
******** READ TO BE ISSUED.  OTHERWISE, LEAVE THE KEYBOARD LOCKED.
********
TSIN6000 EQU   *
         LTR   RWK11,RWK11              ARE ANY USERS LEFT       A43888
         BNZ   TSIN6010                 YES, CONTINUE CHECKING  YS02019
         L     RETRN,AVTSAVE2+K60       GET RETURN ADDRESS      YS02019
         BR    RETRN                    RETURN TO CALLER        YS02019
         SPACE 1
TSIN6010 EQU   *                                                YS02019
         BCTR  RWK11,R0                 DECR COUNT OF TSBS     @ZA10588
*                                       LEFT TO SCAN           @ZA10588
         TM    TSBSTAT,TSBINUSE         IS THIS TSB IN USE
         BZ    TSIN6070                 BRANCH IF NOT TO GET NEXT TSB
         TM    TSBSTAT,TSBLWAIT         IS THE TERMINAL IN A USER LWAIT
         BO    TSIN6070                 BRANCH IF YES TO GET NEXT TSB
         USING IEDQQCB,RQCB             USE RQCB AS QCB BASE REGISTER
         LH    RWRK1,TSBASRCE           GET INDEX TO TNT        YS02019
         LTR   RWRK1,RWRK1              IS TNT INDEX ZERO?     @ZA11600
         BZ    TSIN6070                 YES,GO GET NEXT TSB    @ZA11600
         L     RNTRY,AVTRNMPT           GET TNT CODE ENTRY ADDR YS02019
         BALR  RETRN,RNTRY              GO TO TNT CODE          YS02019
         USING IEDQTRM,RWRK1            TRM ADDRESSABILITY      YS02019
         L     RQCB,TRMDESTQ-K1         GET QCB ADDRESS         YS02019
         DROP  RWRK1                    TRM NOT ADDRESSABLE     YS02019
         TM    QCBFLAG,QCBTSSES         IS A TSO SESSION IN PROGRESS
         BZ    TSIN6070                 BRANCH IF NOT TO GET NEXT TSB
         NI    QCBTSOF1,OFF-QCBNOBUF    UNLOCK THE TERMINAL KEYBOARD
         SPACE 2
********
******** POST THE LINE, IF NECESSARY, TO ACTIVATE THE TERMINAL.
********
         USING IHADCB,RWRK3             USE RWRK3 AS DCB BASE REGISTER
         ICM   RWRK3,ADDR,QCBDCBAD      GET DCB ADDRESS         ZA25074
         LA    RWRK2,IEDQQCB-IEDNQCB    BACK UP TO QCB PREFIX    Y06327
         SR    RQCB,RWRK2               ADJUST POINTER           Y06327
         DROP  RQCB                     ADJUST FUTURE REFERENCES Y06327
         USING IEDNQCB,RQCB             COND ASSEMBLY WILL ADJS  Y06327
         TM    DCBDSORG,TRMLGB          IS THIS 3705             Y06327
         BNO   TSIN6011                 BRANCH IF NO             Y06327
         TM    QCBSTAT1,QCBPLCBN        IS A PLCB ASSIGNED      ZA25074
         BO    TSIN6070                 YES, DON'T POST QCB     ZA25074
         TM    QCBTSOF1,QCBDELAY        IS QCB ON THE TIME      ZA25074
*                                       DELAY QUEUE             ZA25074
         BO    TSIN6070                 YES, DON'T POST QCB     ZA25074
         TM    QCBTSOF2,QCBPOSTO        HAS QCB ALREADY BEEN    ZA25074
*                                       POSTED                  ZA25074
         BO    TSIN6070                 YES, DON'T POST QCB     ZA25074
         B     TSIN6030                 GO SEE IF POST REQ'D    ZA25074
         L     RLCB,QCBPLCBA-K1         FOR 3705, USE PLCB       Y06327
         B     TSIN6020                 CONTINUE PROCESS         Y06327
         SPACE 1
TSIN6011 EQU   *                                                 Y06327
         L     RLCB,DCBIOBAD            GET IOB ADDRESS
         LA    RWRK2,LCBFLAG1-IEDQLCB   GET OFFSET OF IOB FROM LCB
         SR    RLCB,RWRK2               POINT TO BEGINNING OF FIRST LCB
         SR    RWRK2,RWRK2              CLEAR REGISTER
         IC    RWRK2,DCBEIOBX           GET SIZE OF AN LCB ENTRY
         DROP  RWRK3                    DROP RWRK3 AS DCB BASE REGISTER
         SR    RWRK3,RWRK3              CLEAR REGISTER
         IC    RWRK3,QCBRELLN           RELATIVE POSITION OF LCB IN TBL
         MR    RWRK2,RWRK2              CALC OFFSET OF LCB IN TABLE
         AR    RLCB,RWRK3               ADDRESS OF THE DESIRED LCB
         ICM   RWRK3,ADDR,QCBDCBAD      GET DCB ADDRESS         ZA25074
         USING IHADCB,RWRK3             DCB ADDRESSABILITY      ZA25074
         USING IEDQLCB,RLCB             USE RLCB AS LCB BASE REGISTER
         SPACE 1
TSIN6020 EQU   *                                                 Y06327
         TM    LCBINSRC+K2,LCBDELAY     IS LCB ON THE DELAY QUEUE
         BO    TSIN6070                 BRANCH IF YES TO GET NEXT TSB
         CLI   LCBSTAT1,LCBFREEN        IS THIS LINE FREE
         BE    TSIN6030                 BRANCH IF YES
         NI    LCBTSOB,OFF-LCBSOPL      REMOVE LCB FROM POLLING LIST
         B     TSIN6070                 BRANCH TO GET NEXT TSB
         SPACE 1
TSIN6030 EQU   *
         TM    QCBTSOF1,QCBPARTO        ANY OUTPUT IN PROGRESS
         BO    TSIN6070                 BRANCH IF YES TO GET NEXT TSB
         TM    QCBFLAG,QCBNOBRK         DOES TERM HAVE REVERSE BREAK
         BZ    TSIN6050                 BRANCH IF YES
         TM    QCBFLAG,QCBREAD          DOES READ HAVE PRIORITY
         BO    TSIN6050                 BRANCH IF YES
         TM    QCBTSOF1,QCBTGET         HAS TGET BEEN REQUESTED
         BZ    TSIN6070                 BRANCH IF NOT TO GET NEXT TSB
         SPACE 1
TSIN6050 EQU   *
         TM    DCBDSORG,TRMLGB          TERM ATTACHED VIA NCP   ZA25074
         BZ    TSIN6051                 NO, GO POST PLCB        ZA25074
**************************************************************  ZA25074
*        FOR NCP ATTACHED TERMINALS,QCB IS POSTED TO ITSELF TO  ZA25074
*        REMOVE LOCK.                                           ZA25074
**************************************************************  ZA25074
         LA    RQCB,QCBPRFSZ(RQCB)      POINT TO QCB            ZA25074
         DROP  RQCB                                             ZA25074
         USING IEDQQCB,RQCB             QCB ADDRESSABILITY      ZA25074
         STCM  RQCB,ADDR,QCBELCHN       QCB TO POSTED           ZA25074
         MVC   QCBLINK,AVTDOUBL+K1      CHAIN ELEMENTS TO BE    ZA25074
*                                       POSTED                  ZA25074
         ST    RQCB,AVTDOUBL            PUT QCB ON CHAIN        ZA25074
         MVI   QCBPRI,PRILNFRE          SET POST PRIORITY       ZA25074
         B     TSIN6070                 PROCESS NEXT TSB        ZA25074
         DROP RWRK3                                             ZA25074
TSIN6051 EQU   *                                                ZA25074
         MVI   LCBSTAT1,LCBSENDN        INDICATE LINE IS SENDING
         ST    RLCB,LCBQCBA-K1          TPOST THE LINE TO ITSELF
         MVC   LCBLINK,AVTDOUBL+K1      CHAIN LCB TO FIRST ELEMENT ON
*                                       THE RETURN QUEUE
         ST    RLCB,AVTDOUBL            PLACE THIS LCB ON RETURN QUEUE
         MVI   LCBPRI,PRILNFRE          PRIORITY TO FREE A LINE
         SPACE 2
********
******** IF THERE ARE ANY MORE TSB'S WHICH ARE IN USE CONTINUE
******** SCANNING, OTHERWISE RETURN TO TSINPUT.
********
TSIN6070 EQU   *
         AR    RTSB,RWRK8               POINT TO NEXT TSB IN THE TABLE
         B     TSIN6000                 BRANCH TO CONTINUE SCAN
         DROP  RLCB,RQCB,RTSB,RTIOC,RAVT  DROP CONTROL BLOCK BASE REGS
         EJECT
***********************************************************************
********                                                       ********
******** THE FOLLOWING SECTION OF CODE IS USED BY TSINPUT TO   ********
******** PUT THE SYSTEM IN AN LWAIT CONDITION.  THE ENTRY      ********
******** POINT INTO THIS CODE IS QTIP0070.                     ********
********                                                       ********
******** INPUT REGISTERS -                                     ********
********                                                       ********
********       REG 10 - ADDRESS OF THE TIOCRPT.                ********
********                                                       ********
***********************************************************************
QTIP0070 EQU   *
         USING TIOCRPT,RTIOC            USE RTIOC AS TIOCRPT BASE REG
         OI    TIOCFLG,TIOCSYLW         PLACE THE SYSTEM IN LWAIT
         BR    RETRN                    RETURN TO TSINPUT
         DROP  RTIOC                    DROP CONTROL BLOCK BASE REGS
         EJECT
***********************************************************************
********                                                       ********
******** THE FOLLOWING SECTION OF CODE IS USED BY CHARACTER    ********
******** LINE DELETE AND CANCEL MESSAGE ROUTINES WITHIN        ********
******** TSINPUT TO REMOVE TIME SHARING BUFFERS FROM THE INPUT ********
******** QUEUE AND RETURN THEM TO THE FREE QUEUE.  THE ENTRY   ********
******** POINT INTO THIS CODE IS QTIP0080.                     ********
********                                                       ********
******** INPUT REGISTERS -                                     ********
********                                                       ********
********       REG 6 -  ADDR OF TCAM BFR CURRENTLY PROCESSING. ********
********       REG 9 -  ADDR OF THE CURRENT TSB.               ********
********       REG 10 - ADDRESS OF THE TIOCRPT.                ********
********       REG 13 - ADDRESS OF AVTSAVE2.                   ********
********                                                       ********
***********************************************************************
QTIP0080 EQU   *
         USING IEDQPRF,RTCBFR           USE RTCBFR AS TCAM BFR BASE REG
         USING TSB,RTSB                 USE RTSB AS TSB BASE REG
         USING AVTSAVE2,RAVT            USE RAVT AS AVT BASE REG
         USING TIOCRPT,RTIOC            USE RTIOC AS TIOCRPT BASE REG
         USING TIOCBUF,RTSBFR           USE RTSBFR AS TS BFR BASE REG
         SPACE 2
********
******** IF CANCEL MESSAGE IS IN PROGRESS, SEARCH FOR THE BEGINNING OF
******** THE FRAGMENT MESSAGE ON THE INPUT QUEUE.  IF CHARACTER LINE
******** DELETE HAS OCCURED, SEARCH FOR THE LAST BUFFER (WHICH WILL BE
******** A PARTIAL LINE) ON THE INPUT QUEUE.
********
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0800                 BRANCH IF NONE
         L     RTSBFR,TSBIBFP-K1        GET FIRST TS BFR ON INPUT QUEUE
         LR    RWRK4,RTSBFR             SAVE ADDR OF CURRENT HDR BFR
         SPACE 1
TSIN0620 EQU   *
         TM    BUFFFL2,BUFFFRAG         IS THIS TS BFR PART OF FRAG MSG
         BZ    TSIN0640                 BRANCH IF NOT
         TM    PRFSTAT1,PRFCNCLN        IS CANCEL MESSAGE IN PROGRESS
         BO    TSIN0660                 BRANCH IF YES
         SPACE 1
TSIN0640 EQU   *
         CLC   BUFFHEAD,AVTFZERO        MORE HDR BFRS ON INPUT QUEUE
         BE    TSIN0650                 BRANCH IF NO MORE
         LR    RWRK4,RTSBFR             SAVE ADDR OF CURRENT HDR BFR
         L     RTSBFR,BUFFHEAD-K1       GET ADDR OF NEXT HDR BFR ON Q
         B     TSIN0620                 CONTINUE SEARCH
         SPACE 1
TSIN0650 EQU   *
         TM    BUFFFL1,BUFFNLCR         IS LAST TS MSG COMPLETE
         BO    TSIN0800                 BRANCH IF YES
         NI    BUFFFL1,BUFFHDR+BUFFIHOT RESET FLAG BYTE         ZA12528
         NI    BUFFFL2,BUFFFRAG         RESET SECOND FLAG BYTE
         XC    BUFFLNTH,BUFFLNTH        RESET AMOUNT OF DATA TO ZERO
         XC    BUFFWORK,BUFFWORK        RESET CHAR COUNT TO ZERO
         L     RWRK2,BUFFTRLR-K1 GET NEXT TRAILER               ZA12528
         LA    RWRK2,K0(,RWRK2)  CLEAR HI BYTE                  ZA12528
         LTR   RWRK2,RWRK2       ANY MORE TRAILERS?             ZA12528
         BZ    TSIN0800                 BRANCH IF NONE
         XC    BUFFTRLR,BUFFTRLR        CLEAR TRAILER BUFFER POINTER
         DROP  RTSBFR          DROP TS BFR BASE                 ZA12528
TSIN0655 EQU   *                                               @ZA12528
         USING TIOCBUF,RWRK2   NEW TS BFR BASE                  ZA12528
         L     RTSBFR,BUFFTRLR-K1 GET NEXT TRAILER              ZA12528
         LA    RTSBFR,K0(,RTSBFR) CLEAR HI BYTE                 ZA12528
         BAL   RWRK4,TSIN0760     GO FREE BFR                   ZA12528
         LTR   RWRK2,RTSBFR       GET NEXT BFR                  ZA12528
         BZ    TSIN0800           IF NO BFR, DONE               ZA12528
         B     TSIN0655           HANDLE NEXT BFR               ZA12528
         SPACE 1
TSIN0660 EQU   *
         USING TIOCBUF,RWRK4            USE RWRK4 AS TS BFR BASE REG
         CR    RTSBFR,RWRK4             IS FIRST BFR TO BE DROPPED ALSO
*                                       FIRST ON INPUT QUEUE
         BNE   TSIN0670                 BRANCH IF NO
         XC    TSBIBFP,TSBIBFP          CLEAR INPUT QUEUE POINTER
         B     TSIN0680                 BRANCH TO RETURN BUFFERS
         SPACE 1
TSIN0670 EQU   *
         XC    BUFFHEAD,BUFFHEAD        ZERO LINK FIELD OF PREVIOUS HDR
         DROP  RWRK4                    DROP RWRK4 AS TS BFR BASE REG
         SPACE 2
********
******** DETERMINE HOW MANY TS BUFFERS ARE TO BE RETURNED AND LINK THEM
******** TOGETHER FOR PLACEMENT ON THE FREE QUEUE.  IF AUTOMATIC LINE
******** NUMBERING IS IN PROGRESS, DECREMENT THE LINE COUNT FOR EACH
******** TS HEADER BUFFER RETURNED.
********
TSIN0680 EQU   *
         LR    RWK11,RTSBFR             INITIALIZE NEXT HDR BFR POINTER
         SPACE 1
TSIN0700 EQU   *
         LA    RWRK2,K0(,RWK11)   GET HEADER BFR TO FREE        ZA12528
         LTR   RWRK2,RWRK2        IS THERE A HEADER BFR?        ZA12528
         BZ    TSIN0800           NO, DONE                      ZA12528
         L     RTSBFR,BUFFTRLR-K1 SAVE NEXT TRAILER PTR         ZA12528
         LA    RTSBFR,K0(,RTSBFR) CLEAR HI BYTE                 ZA12528
         SPACE 1
TSIN0720 EQU   *
         TM    TSBFLG2,TSBAUTON+TSBAULST  IS AUTO LINE NO. IN PROGRESS
         BNO   TSIN0740                 BRANCH IF NO
         TM    BUFFFL1,BUFFNLCR         IS THE LAST TS MSG COMPLETE
         BZ    TSIN0740                 BRANCH IF NOT
         L     RWK15,TSBAUTOS           GET CURRENT VALUE OF LINE NO.
         S     RWK15,TSBAUTOI           DECR LINE NO. BY INCR VALUE
         ST    RWK15,TSBAUTOS           UPDATE LINE NUMBER
         SPACE 1
TSIN0740 EQU   *
         L     RWK11,BUFFHEAD-K1  GET NEXT HEADER               ZA12528
TSIN0750 EQU   *                                               @ZA12528
         BAL   RWRK4,TSIN0760     GO FREE BFR THATS IN RWRK2    ZA12528
         LTR   RWRK2,RTSBFR       ANY MORE BUFFERS?             ZA12528
         BZ    TSIN0700           NO, CHECK NEXT HEADER         ZA12528
         L     RTSBFR,BUFFTRLR-K1 GET NEXT TRAILER              ZA12528
         LA    RTSBFR,K0(,RTSBFR) CLEAR HI BYTE                 ZA12528
         B     TSIN0750           LOOP BACK TO FREE NEXT        ZA12528
         SPACE 2
********
******           BUFFER FREE ROUTINE                            ZA12528
******  ALWAYS BAL OR BRANCH WITH RETURN ADDRESS IN RWRK4       ZA12528
******  AND BUFFER TO BE FREED IN RWRK2.                        ZA12528
******                                                          ZA12528
********
TSIN0760 EQU   *
         SR    RWK15,RWK15      CLEAR REG                       ZA12528
         IC    RWK15,TSBNIBF    GET INPUT BFR COUNT             ZA12528
         BCTR  RWK15,K0         DECREMINT COUNT                 ZA12528
         STC   RWK15,TSBNIBF    STORE UPDATED COUNT             ZA12528
         TM    BUFFFL1,BUFFIHOT BUFFER ON BOTH QUEUES?          ZA12528
         BZ    TSIN0770         NO, RETURN BFR TO FREE Q        ZA12528
         NI    BUFFFL1,OFF-BUFFIHOT YES, TURN OF FLAG           ZA12528
         BR    RWRK4            RETURN, BFR FREED LATER         ZA12528
TSIN0770 EQU   *                                                ZA12528
         L     RNTRY,QBRADDR            GET BFR RETURN RTN EPA  YS02019
         BALR  R0,RNTRY                 GO TO BFR RETURN RTN    YS02019
         BR    RWRK4           RETURN                           ZA12528
         DROP  RWRK2                                            ZA12528
         SPACE 2
********
******** IF ENTRY INTO THIS ROUTINE WAS TO CANCEL A TCAM MESSAGE,
******** RETURN TO THE CALLER AT THIS TIME.
********
TSIN0800 EQU   *
         TM    PRFSTAT1,PRFCNCLN        IS CANCEL MESSAGE IN PROGRESS
         BZ    TSIN0900                 BRANCH IF NOT
         NI    TSBFLG2,OFF-TSBBIPI-TSBBRKIN  TERM BREAKIN PROCESSING
         BR    RETRN                    RETURN TO TSINPUT
         SPACE 2
********
******** IF THIS IS THE LAST TCAM BUFFER OF THE MESSAGE AND NO DATA
******** REMAINS TO BE SCANNED, OR IF THE NEXT CHARACTER IN THE TCAM
******** BUFFER IS A NEW LINE OR CARRIAGE RETURN CHARACTER, BRANCH TO
******** COMPLETE THE TCAM AND/OR TS MESSAGE.  OTHERWISE, RETURN TO
******** TSINPUT.
********
TSIN0900 EQU   *
         L     RSCANF,AVTSAVE2          GET @ OF TCAM DATA      ZA02167
         CLR   RSCANL,RSCANF            CR OR NL CHAR NEXT IN   ZA02167
*                                       TCAM BFR ?              ZA02167
         BNE   TSIN0170                 BRANCH IF YES
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST TCAM BFR OF MSG
         BCR   ZEROS,RETRN              RETURN TO TSINPUT IF NOT
         LTR   RDSZE,RDSZE              ANY DATA LEFT TO SCAN
         BZ    TSIN0170                 BR IF NONE TO EOM PROCESSING
         BR    RETRN                    RETURN TO TSINPUT
         DROP  RTCBFR,RTSB,RTIOC,RAVT                           ZA12528
         EJECT
***********************************************************************
********                                                       ********
******** THE FOLLOWING SECTION OF CODE IS USED BY TSINPUT TO   ********
******** ALLOCATE TS BUFFERS AND MOVE THE SCANED DATA IN THE   ********
******** TCAM BUFFER INTO TS BUFFER(S), AND/OR PERFORM END OF  ********
******** TRANSMISSION PROCESSING WHENEVER APPLICABLE.  THE     ********
******** ENTRY POINT INTO THIS CODE IS QTIP0090.               ********
********                                                       ********
******** INPUT REGISTERS -                                     ********
********                                                       ********
********       REG 2 -  POINTER TO BEGINNING OF DATA SCANNED.  ********
********       REG 3 -  POINTER TO END OF DATA SCANNED.        ********
********       REG 6 -  ADDR OF TCAM BFR CURRENTLY PROCESSING. ********
********       REG 9 -  ADDRESS OF THE CURRENT TSB.            ********
********       REG 10 - ADDRESS OF THE TIOCRPT.                ********
********       REG 13 - ADDRESS OF AVTSAVE2.                   ********
********                                                       ********
***********************************************************************
QTIP0090 EQU   *
         USING AVTSAVE2,RAVT            USE RAVT AS AVT BASE REGISTER
         USING TIOCRPT,RTIOC            USE RTIOC AS TIOCRPT BASE REG
         USING TSB,RTSB                 USE RTSB AS TSB BASE REGISTER
         USING IEDQPRF,RTCBFR           TCAM BFR ADDRESSABLE    YS02019
         SPACE 3                                                 A45625
********
******** CHECK FOR TCLEARQ INPUT ISSUED, IF SO, RETURN TO TSINPUT
********
         TM    TSBFLG1,TSBIFLSH         IS INPUT FLUSH IN        A45625
*                                       PROGRESS                 A45625
         BZ    TSIN0150                 NO, CHECK SIZE OF DATA   A45625
         NI    TSBFLG1,OFF-TSBIFLSH     TURN OFF INPUT FLUSH     A45625
*                                       FLAG                     A45625
         NI    TSBFLG2,OFF-(TSBBIPI+TSBBRKIN) TURN OFF BREAKIN-  A45625
*                                       FLASHBACK FLAGS
         XC    PRFSIZE,PRFSIZE          SET DATA SIZE TO ZERO   YS02019
         SR    RTRNCD,RTRNCD            ZERO RETURN CODE        YS02019
         BR    RETRN                    RETURN TO TSINPUT        A45625
         SPACE 2
********
******** GET SIZE OF DATA IN THE TCAM BUFFER.
********
TSIN0150 EQU   *                                                 A45625
         USING IEDQPRF,RTCBFR           USE RTCBFR AS TCAM BFR BASE REG
         LH    RDSZE,PRFSIZE            GET SIZE OF DATA IN TCAM BFR
         SPACE 2
********
******** DETERMINE IF A PARTIALLY FILLED TS BUFFER EXISTS ON THE INPUT
******** QUEUE.  IF SO, CONTINUE MOVING DATA INTO THIS TS BUFFER BEGIN-
******** ING AT THE POINT WHERE THE LAST MOVE LEFT OFF.
********
TSIN0170 EQU   *
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0242                 BRANCH IF NONE
         USING TIOCBUF,RTSBFR           USE RTSBFR AS TS BFR BASE REG
         L     RTSBFR,TSBIBFP-K1        GET FIRST TS BFR ON INPUT QUEUE
         SPACE 1
TSIN0190 EQU   *
         CLC   BUFFHEAD,AVTFZERO        MORE HDR BFRS ON INPUT QUEUE
         BE    TSIN0210                 BRANCH IF NO MORE
         L     RTSBFR,BUFFHEAD-K1       GET NEXT HDR BFR ON INPUT QUEUE
         B     TSIN0190                 CONT SEARCH FOR LAST HDR BFR
         SPACE 1
TSIN0210 EQU   *
         LR    RWK11,RTSBFR             SAVE POINTER TO LAST HDR BFR
         TM    BUFFFL1,BUFFNLCR         IS HDR MARKED AS COMPL TS MSG
         BZ    TSIN0230                 BRANCH IF NO
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BFR TO MOVE
         BNZ   TSIN0242                 BRANCH IF YES
         TM    BUFFFL2,BUFFFRAG         IS LAST TCAM MSG COMPLETE
         BZ    TSIN0242                 BRANCH IF YES
         SPACE 1
TSIN0230 EQU   *
         CLC   BUFFTRLR,AVTFZERO        ANY TRLR BFRS LINKED TO LST BFR
         BE    TSIN0240                 BRANCH IF NO
         L     RTSBFR,BUFFTRLR-K1       GET ADDR OF NEXT TRAILER BFR
         B     TSIN0230                 CONT SEARCH FOR LAST BFR IN Q
         SPACE 1
TSIN0240 EQU   *
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BFR TO MOVE
         BZ    TSIN0352                 BRANCH IF NONE
         TM    BUFFFL1,BUFFFULL         IS THE LAST BFR IN QUEUE FULL
         BZ    TSIN0249                 BRANCH IF NO             S22028
         SPACE 1
TSIN0242 EQU   *
         LR    R0,RWRK7                 SAVE CURRENT CHARACTER COUNT
         BAL   RWK15,TSIN0500           BR TO BFR ALLOCATION ROUTINE
         SPACE 2                                                 S22028
********
******** FOR 3270, IF THIS IS BEGINNING OF A TCAM MSG, MOVE CONTROL
******** CHARACTERS INTO TS BUFFERS
********
         TM    TSBSTAT,TSB3270          TEST FOR 3270 TERMINAL   S22028
         BZ    TSIN0248                 BR AROUND IF NOT         S22028
         TM    PRFSTAT1,PRFNHDRN        IS THIS FIRST TCAM BFR   S22028
*                                       OF MSG                   S22028
         BO    TSIN0248                 BR IF NO                 S22028
         TM    BUFFFL1,BUFFHDR          IS THIS A TS HDR BFR     S22028
         BZ    TSIN0248                 BR IF NO                 S22028
         SR    RWRK7,RWRK7              ZERO R7                 OZ07609
         USING IEDQLCB,RLCB                                     OZ07609
         L     RLCB,PRFLCB-K1           LCB ADDRESSABILITY      OZ07609
         IC    RWRK7,LCBISZE            GET RESERVE NUMBER      OZ07609
         LA    RWRK7,PRFSHDR(RWRK7)     POINT AT FIRST CHAR.    OZ07609
         DROP  RLCB                                             OZ07609
*                                       POINTS AT FIRST CHAR IN BFR
         SPACE 1                                                 S22028
TSIN0244 EQU   *                                                 S22028
         CLI   K0(RWRK7),AVTEZERO       CHECK FOR ZEROS          S22028
         BNE   TSIN0245                 BRANCH IF NO             S22028
         LA    RWRK7,K1(R0,RWRK7)       POINT PASS ZERO          S22028
         B     TSIN0244                 CHECK NEXT BYTE          S22028
         SPACE 1                                                 S22028
TSIN0245 EQU   *                                                 S22028
         LA    RMVSZ2,CC3270ND          ASSUME MSG HAS NO DATA   S22028
*                                       (ONLY 1 AID CHAR)
         TM    PRFTIC,CC32706           DOES MSG HAVE MORE THAN  S22028
*                                       1 CONTROL CHARS
         BZ    TSIN0246                 NO, BRANCH AROUND        S22028
         LA    RMVSZ2,CC3270D3          ASSUME 3 CONTROL CHARS   S22028
         CLI   CC3270D3(RWRK7),SBA      CHECK FOR SBA CHAR       S22028
         BNE   TSIN0246                 BRANCH IF NO             S22028
         LA    RMVSZ2,CC3270D6          THERE ARE 6 CONTROL      S22028
*                                       CHARS                    S22028
         SPACE 1                                                 S22028
TSIN0246 EQU   *                                                 S22028
         STC   RMVSZ2,BUFFLNTH          UPDATE DATA LENGTH IN    S22028
*                                       BFR                      S22028
         BCTR  RMVSZ2,R0                DECREMENT FOR EX         S22028
*                                       INSTRUCTION              S22028
         SPACE 1                                                 S22028
TSIN0247 EQU   *                                                 S22028
         EX    RMVSZ2,TSIN0345          MOVE 3270 CONTROL CHARS  S22028
*                                       INTO TS BUFFER
         OI    BUFFFL2,BUFF3270         TELL TGET THIS BFR HAS   S22028
*                                       3270                     S22028
*                                       CONTROL CHARS
         SPACE 1                                                 S22028
TSIN0248 EQU   *                                                 S22028
         LTR   RDSZE,RDSZE              ANY DATA IN TCAM BFR TO MOVE
         BZ    TSIN0352                 BRANCH IF NONE
         LR    RWRK7,R0                 RESTORE CURRENT CHARACTER COUNT
         SPACE 2
********
******** IF THERE IS ANY DATA IN THIS TCAM BUFFER WHICH IS REMAINING
******** FROM A PREVIOUS INCOMPLETE MOVE, THE CURRENT CHARACTER COUNT
******** IN THE LAST TS HEADER BUFFER REFLECTS THE ACTUAL NUMBER OF
******** CHARACTERS NOT DELETED.  IF THIS IS THE FIRST ATTEMPT TO MOVE
******** THE SCANNED DATA, PLACE THE CURRENT CHARACTER COUNT INTO THE
******** LAST TS HEADER BUFFER ON THE INPUT QUEUE.
********
TSIN0249 EQU   *                                                 S22028
         TM    PRFTIC,NOTMOVED          ANY UNMOVED DATA IN TCAM BUFFER
*                                       FROM A PREVIOUS SCAN
         BO    TSIN0250                 BRANCH IF YES
         STH   RWRK7,BUFFWORK-TIOCBUF(R0,RWK11) STORE CHARACTER COUNT
         SPACE 2
********
******** DETERMINE IN WHICH BASIC UNIT OF THE TCAM BUFFER THE DATA TO
******** BE MOVED BEGINS.
********
TSIN0250 EQU   *
         DROP  RTCBFR                   DROP RTCBFR AS TCAM BFR BASE
         USING IEDQPRF,RWRK4            USE RWRK4 AS TCAM BFR BASE REG
         LR    RWRK4,RTCBFR             GET ADDR OF FIRST BASIC UNIT
         SPACE 1
TSIN0260 EQU   *
         LH    RWK15,AVTKEYLE           GET BASIC UNIT SIZE
         SPACE 1
TSIN0270 EQU   *
         LA    RMVSZ1,K12(RWK15,RWRK4)  POINT TO END OF THIS BASIC UNIT
         LA    RWRK4,K0(R0,RWRK4)       CLEAR HI ORDER BYTE OF REGISTER
         CLR   RSCANF,RWRK4             COULD DATA BEGIN IN THIS B.U.
         BL    TSIN0280                 BRANCH IF NO TO CONT SEARCH
         CLR   RSCANF,RMVSZ1            DOES DATA BEGIN IN THIS B.U.
         BE    TSIN0290                 NO, IT BEGINS IN THE NEXT B.U.
         BNH   TSIN0300                 BRANCH IF YES
         SPACE 1
TSIN0280 EQU   *
         L     RWRK4,PRFTIC             GET ADDR OF NEXT BASIC UNIT
         B     TSIN0270                 CONT SEARCH FOR BEGIN OF MOVE
         SPACE 1
TSIN0290 EQU   *
         L     RWRK4,PRFTIC             GET ADDR OF NEXT BASIC UNIT
         LA    RSCANF,K12(R0,RWRK4)     RESET BEGIN DATA PTR TO THIS BU
         LA    RMVSZ1,K12(RWK15,RWRK4)  POINT OT END OF THIS BASIC UNIT
         SPACE 2
********
******** DETERMINE HOW MUCH DATA IS TO BE MOVED AT THIS TIME.  THIS
******** AMOUNT WILL BE THE SMALLER OF EITHER THE NUMBER OF UNFILLED
******** BYTES IN THE CURRENT TS BUFFER, OR THE AMOUNT OF UNMOVED DATA
******** IN THE CURRENT BASIC UNIT.
********
TSIN0300 EQU   *
         CLR   RSCANL,RMVSZ1            COULD END OF DATA BE IN THIS BU
         BH    TSIN0310                 BRANCH IF NO
         CLR   RSCANL,RSCANF            IS END OF DATA IN THIS B.U.
         BNH   TSIN0310                 BRANCH IF NO
         LR    RMVSZ1,RSCANL            END OF DATA IS IN THIS B.U.
         SPACE 1
TSIN0310 EQU   *
         SR    RMVSZ1,RSCANF            CALC AMOUNT OF DATA IN THIS BU
         LR    RFILL,RTSBFR             INIT TS BFR BEGIN DATA MOVE PT
         SR    RWK15,RWK15              CLEAR REGISTER
         IC    RWK15,BUFFOFST           GET HDR OR TRLR OFFSET
         AR    RFILL,RWK15              ADD OFFSET TO TS BFR ADDRESS
         IC    RWK15,BUFFLNTH           GET LENGTH OF DATA IN TS BFR
         AR    RFILL,RWK15              CALC BEGIN ADDR OF NEXT MOVE
         LH    RMVSZ2,TIOCBFSZ          GET TS BUFFER SIZE
         AR    RMVSZ2,RTSBFR            POINT TO END OF THIS TS BUFFER
         SR    RMVSZ2,RFILL             CALC UNFILLED SPACE IN TS BFR
         CLR   RMVSZ2,RMVSZ1            IS UNFILLED SPACE LESS OR EQUAL
*                                       TO AMOUNT OF DATA IN TCAM B.U.
         BNH   TSIN0320                 BRANCH IF YES
         LR    RMVSZ2,RMVSZ1            MOVE AMOUNT OF DATA IN B.U.
         B     TSIN0330                 BRANCH TO CONTINUE MOVE
         SPACE 1
TSIN0320 EQU   *
         OI    BUFFFL1,BUFFFULL         MARK TS BUFFER AS FULL
         SPACE 2
********
******** MOVE DATA FROM THE TCAM BASIC UNIT INTO THE TS BUFFER AND
******** CALCULATE THE AMOUNT OF UNMOVED DATA LEFT IN THE TCAM BUFFER.
********
TSIN0330 EQU   *
         SR    RDSZE,RMVSZ2             DECR AMOUNT OF DATA IN TCAM BFR
         AR    RWK15,RMVSZ2             INCR AMOUNT OF DATA IN TS BFR
         STC   RWK15,BUFFLNTH           STORE UPDATED TS BFR DATA COUNT
         DROP  RWRK4                    DROP RWRK4 AS TCAM BFR BASE REG
         USING IEDQPRF,RTCBFR           USE RTCBFR AS TCAM BFR BASE REG
         LH    RWK15,PRFSRCE            GET OLD DATA OFFSET
         AR    RWK15,RMVSZ2             UPDATE DATA OFFSET
         STH   RWK15,PRFSRCE            STORE UPDATED OFFSET
         BCTR  RMVSZ2,R0                DECR MOVE AMOUNT FOR EXECUTE
         EX    RMVSZ2,TSIN0340          MOVE DATA INTO TS BUFFER
         LA    RSCANF,K1(RMVSZ2,RSCANF) INCR TCAM BFR BEGIN DATA PTR
         SPACE 2
********
******** DETERMINE IF ALL THE DATA HAS BEEN MOVED FROM THE TCAM BUFFER
******** INTO TS BUFFER(S).  IF NOT, DETERMINE IF ANOTHER TS BUFFER IS
******** NEEDED TO PERFORM THE NEXT MOVE.
********
         CLR   RSCANF,RSCANL            ALL OF SCANED DATA MOVED
         BE    TSIN0350                 BRANCH IF YES
         TM    BUFFFL1,BUFFFULL         IS THE LAST TS BUFFER FULL
         BZ    TSIN0260                 BRANCH IF NO
         OI    PRFTIC,NOTMOVED          IND NOT ALL OF SCANNED DATA
*                                       MOVED FROM TCAM BUFFER
         LA    RWK15,TSIN0260           RETURN PT FROM BFR ALLOCATION
         B     TSIN0500                 BR TO BFR ALLOCATION ROUTINE
         SPACE 1
TSIN0340 EQU   *
         MVC   K0(RMVSZ2,RFILL),K0(RSCANF)  MOVE DATA FR TCAM TO TS BFR
         SPACE 1                                                 S22028
TSIN0345 EQU   *                                                 S22028
         MVC   BUFFHDLN(RMVSZ2,RTSBFR),K0(RWRK7) MOVE 3270       S22028
*                                       CONTROL CHA              S22028
         SPACE 2
********
******** IF A COMPLETE LINE (ENDS IN CARRIAGE RETURN AND/OR EOT) HAS
******** BEEN MOVED INTO THE TS BUFFER, MARK THE BUFFER AS FULL AND
******** INCREMENT THE LINE COUNT IF AUTOMATIC LINE NUMBERING IS IN
******** PROGRESS.  IF EOT OCCURED, TURN OFF THE FRAGMENT INDICATORS
******** IN ALL THE HEADER BUFFERS WHICH ARE IN THIS TSBS INPUT QUEUE.
********
TSIN0350 EQU   *
         NI    PRFTIC,OFF-NOTMOVED      IND ALL OF SCANNED DATA MOVED
         BCTR  RSCANL,R0                BACK UP TO LAST CHAR SCANED
         LTR   RDSZE,RDSZE              ANY UNMOVED DATA IN TCAM BUFFER
         BNZ   TSIN0362                 BRANCH IF YES
         SPACE 1
TSIN0352 EQU   *
         USING IEDQQCB,RQCB             USE RQCB AS QCB BASE REGISTER
         L     RQCB,AVTSAVE2+K64        GET QCB ADDRESS (SAVED  YS02019
*                                       BY IEDAYI)              YS02019
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST TCAM BFR OF MSG
         BO    TSIN0360                 BRANCH IF NO
         TM    PRFTIC,WRITEBRK          DID WR BREAK OCCUR IN THIS BFR
         BO    TSIN0420                 BRANCH IF YES
         TM    PRFTIC,TIMEOUT           DID TIMEOUT OCCUR IN THIS BFR
         BZ    TSIN0370                 BRANCH IF NO
         TM    PRFTIC,WAITQBFR          WAS THIS BFR ON THE WAIT QUEUE
         BO    TSIN0420                 BRANCH IF YES
         OI    QCBFLAG,QCBREAD          IND READ STILL HAS PRIORITY
         SPACE 1
TSIN0360 EQU   *
         CLC   PRFSIZE,AVTFZERO         ANY DATA MOVED FROM TCAM BFR
         BE    TSIN0490                 BRANCH IF NONE
         TM    PRFSTAT1,PRFEOFN         WAS SET EOF EXECUTED
         BO    TSIN0370                 YES, TREAT AS END OF MESSAGE
         SPACE 1
TSIN0362 EQU   *
         CLI   K0(RSCANL),NEWLINE       WAS LAST CHAR SCANNED NEW LINE
         BE    TSIN0364                 BRANCH IF YES
         CLI   K0(RSCANL),CARRRTRN      WAS LAST CHAR SCANED CARR RETRN
         BNE   TSIN0490                 RETURN TO TSINPUT IF NOT
         SPACE 2
********
******** IF THIS TS MESSAGE IS A NULL LINE (NO DATA OR THE ONLY
******** CHARACTER IN THE TS BUFFER IS NEW LINE OR CARRIAGE RETURN),
******** TERMINATE AUTOMATIC PROMPTING.
********
TSIN0364 EQU   *
         DROP  RTSBFR                   DROP RTSBFR AS TS BFR BASE REG
         BAL   RWK15,TSIN9010           CALCULATE ACTUAL DATA    S22028
*                                       SIZE                     S22028
         CH    R0,ONE                   IS ONLY CHAR NL OR CR    S22028
         BH    TSIN0390                 BRANCH IF NO
         NI    TSBFLG2,OFF-TSBAUTON     TERMINATE AUTO PROMPTING
         B     TSIN0390                 CONTINUE
         SPACE 1
TSIN0370 EQU   *
         BAL   RWK15,TSIN9010           CALCULATE ACTUAL DATA    S22028
*                                       SIZE                     S22028
         CH    R0,ONE                   IS DATA LENGTH IN TS BFR S22028
*                                       1                        S22028
         BH    TSIN0374                 BR IF MORE THAN ONE CHAR IN BFR
         BL    TSIN0372                 BR IF NO DATA IN TS BFR
         LA    RWRK1,BUFFHDLN(RWRK1,RWK11) POINTS AT ONLY DATA   S22028
*                                       CHAR                     S22028
         CLI   K0(RWRK1),NEWLINE        IS THE ONLY CHAR IN TS   S22028
*                                       BFR NL                   S22028
         BE    TSIN0372                 BRANCH IF YES
         CLI   K0(RWRK1),CARRRTRN       IS THE ONLY CHAR IN TS   S22028
*                                       BFR CR                   S22028
         BNE   TSIN0374                 BRANCH IF NO
         SPACE 1
TSIN0372 EQU   *
         NI    TSBFLG2,OFF-TSBAUTON     TERMINATE AUTO PROMPTING
         SPACE 2
********
******** INDICATE THIS TCAM MESSAGE IS COMPLETE.
********
TSIN0374 EQU   *
         USING TIOCBUF,RWRK4            USE RWRK4 AS TS BFR BASE REG
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0392                 BRANCH IF NONE
         L     RWRK4,TSBIBFP-K1         GET FIRST TS HDR ON INPUT QUEUE
         SPACE 1
TSIN0380 EQU   *
         NI    BUFFFL2,OFF-BUFFFRAG     TURN OFF MSG FRAG INDR IN BFR
         L     RWRK4,BUFFHEAD-K1        GET NEXT HDR BFR ON INPUT QUEUE
         LA    RWRK4,K0(R0,RWRK4)       CLEAR HI-ORDER BYTE OF REG
         LTR   RWRK4,RWRK4              IS THIS END OF INPUT BFR QUEUE
         BNZ   TSIN0380                 BRANCH IF NO
         TM    K0(RWK11),BUFFNLCR       IS LAST TS MESSAGE COMPLETE
         BO    TSIN0393                 BRANCH IF YES
         SPACE 2
********
******** INDICATE THIS TS MESSAGE IS COMPLETE.
********
TSIN0390 EQU   *
         DROP  RWRK4                    DROP RWRK4 AS TS BFR BASE REG
         USING TIOCBUF,RTSBFR           USE RTSBFR AS TS BFR BASE REG
         OI    BUFFFL1,BUFFFULL         MARK LAST TS BFR AS FULL
         DROP  RTSBFR                   DROP RTSBFR AS TS BFR BASE REG
         USING TIOCBUF,RWK11            USE RWK11 AS TS BFR BASE REG
         OI    BUFFFL1,BUFFNLCR         MARK LAST TS MSG AS COMPLETE
         NI    BUFFFL2,OFF-BUFFPART     TURN OFF PART LINE INDR IF ON
         NI    TSBFLG2,OFF-TSBBRKIN-TSBBIPI  IND PARTIAL LINE COMPLETE
         SPACE 2
********
******** INCREMENT AUTOMATIC LINE NUMBER
********
         TM    TSBFLG2,TSBAUTON+TSBAULST  IS AUTO LINE NO. IN PROGRESS
         BNO   TSIN0392                 BRANCH IF NO
         L     RWK15,TSBAUTOS           GET CURRENT AUTO LINE NUMBER
         A     RWK15,TSBAUTOI           ADD INCR VALUE TO AUTO LINE NO.
         ST    RWK15,TSBAUTOS           STORE UPDATED AUTO LINE NUMBER
         SPACE 2
********
******** WHEN END OF MESSAGE IS DETECTED AND THERE IS NO MORE DATA LEFT
******** IN THE TCAM BUFFER TO BE MOVED INTO TS BUFFERS, PERFORM THE
******** FOLLOWING FUNCTIONS.
********
TSIN0392 EQU   *
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST TCAM BFR OF MSG
         BO    TSIN0490                 BRANCH IF NO
         LTR   RDSZE,RDSZE              ANY UNMOVED DATA IN TCAM BFR
         BNZ   TSIN0490                 BRANCH IF YES
         SPACE 1
TSIN0393 EQU   *
         NI    TSBFLG2,OFF-TSBBIPI-TSBBRKIN  IND PARTIAL LINE COMPLETE
         NI    QCBTSOF1,OFF-QCBTGET     IND READ NO LONGER HAS PRIORITY
         SPACE 2
********
******** IF THE USER HAS EXCEEDED THE MAXIMUM NUMBER OF TIME SHARING
******** BUFFERS ALLOWED HIS TERMINAL FOR INPUT, PLACE HIM IN LWAIT.
******** IF THE AMOUNT OF TIME SHARING BUFFERS ON THE FREE QUEUE HAS
******** FALLEN BELOW THE RESERVE MINIMUM, PLACE THE SYSTEM IN LWAIT.
******** IN EITHER CASE, LOCK THE USERS KEYBOARD TO FURTHER INPUT.
********
         CLC   TSBNIBF,TIOCAIMX+K1      MAX NO. OF INPUT BFRS EXCEEDED
         BL    TSIN0394                 BRANCH IF NO
         OI    TSBSTAT,TSBLWAIT         PLACE USER IN LWAIT
         OI    QCBTSOF1,QCBNOBUF        LOCK USERS KEYBOARD TO INPUT
         SPACE 1
TSIN0394 EQU   *
         CLC   TIOCNFBF,AVTFZERO        ANY TS BFRS ON FREE QUEUE
         BE    TSIN0395                 BRANCH IF NONE
         CLC   TIOCNFBF,TIOCUSLW        NO. FREE BFRS BELOW MINIMUM
         BNL   TSIN0396                 BRANCH IF NO
         SPACE 1
TSIN0395 EQU   *
         OI    TIOCFLG,TIOCSYLW         PLACE THE SYSTEM IN LWAIT
         OI    QCBTSOF1,QCBNOBUF        LOCK USERS KEYBOARD TO INPUT
         SPACE 1
TSIN0396 EQU   *
         CLI   TSBNIBF,AVTEZERO         ANY TS BFRS ON THE INPUT QUEUE
         BE    TSIN0410                 BRANCH IF NONE
         TM    TSBSTAT,TSBDSPLY         IS THIS A DISPLAY SCREEN
         BZ    TSIN0398                 BRANCH IF NO
         SR    R0,R0                    CLEAR REGISTER
         SR    RWRK1,RWRK1              CLEAR REGISTER
         IC    R0,QCBSATCT              GET NO. OF LINES ENTERED
         IC    RWRK1,TSBLNNO            GET NO. OF LINES ON SCREEN (N)
         BCTR  RWRK1,R0                 DECR BY 1 NO. OF SCREEN LINES
         CLR   R0,RWRK1                 IS NO. OF LINES ENTERED LESS
*                                       THAN (N-1)
         BL    TSIN0398                 BRANCH IF YES
         MVI   QCBSATCT,AVTEZERO        RESET NO. LINES ENTERED TO ZERO
         BH    TSIN0397                 BR IF LINES ENTERED IS GT (N-1)
         MVI   QCBSATCT,CLRSCREN        INDICATE SCREEN MUST BE CLEARED
         SPACE 1
TSIN0397 EQU   *
         BAL   RWK15,TSIN9010           CALCULATE ACTUAL DATA    S22028
*                                       SIZE                     S22028
         CH    R0,ONE                   IS DATA LENGTH IN TS BFR S22028
*                                       1                        S22028
         BH    FLASHBAK                 BR IF MORE THAT ONE CHAR IN BFR
         BL    TSIN0398                 IF NO DATA, DON'T FLASH BACK
         LA    RWRK1,BUFFHDLN(RWRK1,RWK11) POINTS AT ONLY DATA   S22028
*                                       CHAR                     S22028
         CLI   K0(RWRK1),NEWLINE        IS ONLY CHAR IN BFR NEW  S22028
*                                       LINE                     S22028
         BE    TSIN0398                 IF CHAR IS NL, DON'T FLASH BACK
         SPACE 1
FLASHBAK EQU   *
*  TEST IF LINE SHOULD BE FLASHED BACK                         @ZA02244
         TM    TSBFLG3,TSBNFLOP         FLAG ON                @ZA02244
         BO    TSIN0398                 YES                    @ZA02244
         OI    BUFFFL2,BUFFPART         MARK TS BFR FOR FLASH BACK
         OI    TSBFLG2,TSBBRKIN         TELL TSOUTPUT TO FLASH BACK
         B     TSIN0440                 GO TO CHK IF ANY OUTPUT IN PROG
         SPACE 2
********
******** IF THE USER IS IN IWAIT, CALL THE IKJGGQIO ROUTINE
******** IN IEDAYOO TO REMOVE IWAIT.
********
TSIN0398 EQU   *
         TM    TSBFLG4,TSBIWAIT         IS USER IN IWAIT        YS02019
         BZ    TSIN0410                 BRANCH IF NO
         STM   RTSBFR,RETRN,TIOCSAVE    SAVE REG.S 5-14 ACROSS   S21008
*                                       CALL                     S21008
         LA    RWRK8,AVTEZERO(,RTSB)    LD TSB ADDR & CLEAR BYTE S21008
*                                       0                        S21008
         IC    RWK11,TSBFLG2            SAVE TSBBIPI SETTING     S21008
         OI    TSBFLG2,TSBBIPI          REQUEST IWAIT REMOVAL    S21008
         L     RNTRY,QIOEPA             GET REMOVAL RTN'S EPA    S21008
         L     RBASE,QIOBASE            GET REMOVAL RTN'S BASE   S21008
*                                       ADDR                     S21008
         BALR  RWRK4,RNTRY              GO REMOVE IWAIT          S21008
         STC   RWK11,TSBFLG2            RESTORE TSBBIPI SETTING  S21008
         LM    RTSBFR,RETRN,TIOCSAVE    RESTORE REGISTERS        S21008
         SPACE 2
********
******** IF AUTOMATIC PROMPTING IS IN PROGRESS, TELL TCAM OR TSOUTPUT
******** TO PROMPT THE USER WITH THE PROMPT CHARACTER OR THE NEXT LINE
******** NUMBER.
********
TSIN0410 EQU   *
         TM    TSBFLG2,TSBAUTON         IS AUTO PROMPTING IN PROGRESS
         BNO   TSIN0490                 BRANCH IF NO
         TM    PRFSRCE,WAITQBFR         WAS THIS BFR ON WAIT QUEUE
         BZ    TSIN0412                 BRANCH IF NO
         OI    TSBFLG2,TSBSTAUT         TELL TSOUTPUT TO PROMPT USER
         B     TSIN0440                 BRANCH TO POST TSOUTPUT
         SPACE 1
TSIN0412 EQU   *
         USING IEDQLCB,RWRK2            USE RWRK2 AS LCB BASE REG
         L     RWRK2,PRFLCB-K1          GET LCB ADDRESS
         L     RWRK2,LCBSCBA-K1         GET SCB ADDRESS
         DROP  RWRK2                    DROP RWRK2 AS LCB BASE REG
         USING IEDQSCB,RWRK2            USE RWRK2 AS SCB BASE REG
         OI    SCBERR2,SCBALN           TELL TCAM TO PROMPT THE USER
         B     TSIN0490                 BRANCH TO RETURN TO TSINPUT
         DROP  RWRK2                    DROP RWRK2 AS SCB BASE REG
         SPACE 2
********
******** IF A PARTIAL LINE CAUSED BY BREAK-IN EXISTS, MARK THE LAST TS
******** HEADER BUFFER ON THE INPUT QUEUE AS A PARTIAL LINE.  ALSO
******** DETERMINE IF THE PARTIAL LINE CAN BE PROCESSED BY TSOUTPUT AT
******** THIS TIME.
********
TSIN0420 EQU   *
         CLC   PRFSIZE,AVTFZERO         ANY DATA MOVED FROM TCAM BFR
         BNE   TSIN0430                 BRANCH IF YES
         TM    BUFFFL1,BUFFNLCR         WAS LAST CHAR MOVED NL OR CR
         BO    TSIN0370                 BRANCH IF YES - NO PARTIAL LINE
         B     TSIN0434                 BR TO INDICATE A PARTIAL LINE
         SPACE 1
TSIN0430 EQU   *
         CLI   K0(RSCANL),NEWLINE       WAS LAST CHAR SCANNED NEW LINE
         BE    TSIN0370                 BRANCH IF YES - NO PARTIAL LINE
         CLI   K0(RSCANL),CARRRTRN      WAS LAST CHAR SCANED CARR RETRN
         BE    TSIN0370                 BRANCH IF YES - NO PARTIAL LINE
         SPACE 1
TSIN0434 EQU   *
         OI    TSBFLG2,TSBBRKIN         IND PARTL LINE DUE TO BREAK-IN
         OI    BUFFFL2,BUFFPART          IND PART LINE IN BUFF @ZA08015
         NI    QCBTSOF1,OFF-QCBNOBUF    TURN OFF TCAM NO BFRS INDICATOR
         DROP  RWK11                    DROP RWK11 AS TS BFR BASE REG
         SPACE 1
TSIN0440 EQU   *
         TM    QCBTSOF1,QCBTPUT+QCBPARTO  ANY OUTPUT IN PROGRESS
         BNZ   TSIN0490                 BRANCH IF YES
         OI    QCBTSOF1,QCBTPUT         REQUEST A TPUT OPERATION
         TM    QCBTSOF1,QCBDELAY        IS THIS QCB ON THE DELAY QUEUE
         BZ    TSIN0450                 BRANCH IF NO
         SPACE 2
********
******** QPOST THE DELAY QUEUE QCB TO ITSELF TO REMOVE THE TERMINAL
******** DESTINATION QCB FROM THE DELAY QUEUE.
********
         DROP  RQCB                     DROP RQCB AS QCB BASE REGISTER
         L     RQCB,AVTTSOPT            GET ADDR OF TSINPUT'S QCB
         USING IEDQTSI,RQCB             USE RQCB AS TSINPUT'S QCB BASE
         TM    TSIDYQFG,TSIDYPOS        HAS DELAY QUEUE QCB BEEN POSTED
         BO    TSIN0490                 BR IF YES, NOTHING MORE TO DO
         OI    TSIDYQFG,TSIDYPOS        IND DELAY QUEUE QCB IS POSTED
         LA    RQCB,TSIDYQFG            PT TO DELAY QUEUE QCB
         B     TSIN0470                 BR TO POST DELAY QUEUE QCB
         DROP  RQCB                     DROP RQCB AS TSINPUT'S QCB BASE
         SPACE 2
********
******** QPOST THE TERMINAL QCB TO ITSELF TO ACTIVATE A SEND
******** OPERATION FOR THIS TERMINAL.
********
TSIN0450 EQU   *
         USING IEDQQCB,RQCB             USE RQCB AS QCB BASE REGISTER
         TM    QCBTSOF2,QCBPOSTO        IS QCB POSTED TO ITSELF
         BO    TSIN0490                 BRANCH IF YES
         OI    QCBTSOF2,QCBPOSTO        IND QCB IS POSTED TO ITSELF
         MVI   QCBPRI,PRIDESTQ          SET QCB PRIORITY
         SPACE 2
********
******** THIS IS A COMMON ROUTINE USED TO QPOST A QCB TO ITSELF AND
******** ADD THAT QCB TO THE QUEUE OF ELEMENTS BEING PASSED TO THE TCAM
******** DISPATCHER FOR POSTING.
********
TSIN0470 EQU   *
         IC    RWRK2,QCBELCHN-K1        SAVE FLAG BYTE
         ST    RQCB,QCBELCHN-K1         QPOST QCB TO ITSELF
         STC   RWRK2,QCBELCHN-K1        RESTORE FLAG BYTE
         MVC   QCBLINK,AVTDOUBL+K1      CHAIN FIRST ELEMENT ALREADY IN
*                                       QUEUE TO THIS QCB
         ST    RQCB,AVTDOUBL            CHAIN QCB TO RETURN QUEUE
         SPACE 2
********
******** STORE UPDATED DATA SIZE IN TCAM BUFFER AND RETURN TO TSINPUT
********
TSIN0490 EQU   *
         SR    RTIOC,RTIOC              SET RETURN CODE EQUAL TO ZERO
         SPACE 1
TSIN0492 EQU   *
         SLL   RWK11,K8                 LEFT ADJ LAST TS HDR BFR ADDR
         SRDL  RTIOC,K8                 ADJ RETURN CODE AND BUFFER ADDR
         LR    RTRNCD,RWK11             RETRN CODE AND LAST TS HDR ADDR
         STH   RDSZE,PRFSIZE            STORE UPDATED COUNT IN TCAM BFR
         BR    RETRN                    RETURN TO TSINPUT
         SPACE 2
         SPACE 2
********
******** THE FOLLOWING SUBROUTINE OBTAINS A FREE TS BUFFER, IF ANY ARE
******** AVAILABLE, AND BUILDS A HEADER OR TRAILER BUFFER DEPENDING ON
******** WHICH IS REQUIRED.  THE BUFFER IS THEN CHAINED TO THE LAST
******** HEADER OR TRAILER AS REQUIRED.
********
TSIN0500 EQU   *
         NC    TIOCNFBF,TIOCNFBF        ANY FREE TS BUFFERS
         BNZ   TSIN0510                 BRANCH IF YES
         LA    RTIOC,K4                 RETURN CODE FOR NO FREE TS BFRS
         B     TSIN0492                 BRANCH TO RETURN TO TSINPUT
         SPACE 1
TSIN0510 EQU   *
         SR    RWRK7,RWRK7              CLEAR REGISTER          ZA01370
         IC    RWRK7,TSBNIBF            # OF INPT BFRS ON QUEUE ZA01370
         CH    RWRK7,TIOCAIMX           MAX ALREADY ASSIGNED?   ZA01370
         BL    ALLOC                    NO, CONTINUE TO GET BFR ZA01370
         USING TIOCBUF,RWRK7            USE RWRK7 AS BFR BASE   ZA01370
         L     RWRK7,TSBIBFP-K1         GET @ OF 1ST INPUT BFR  ZA01370
         TM    BUFFFL2,BUFFFRAG         DO WE ONLY HAVE FRAGS?  ZA01370
         BNO   ALLOC                    NO, LET USER HAVE BFR   ZA01370
         OI    PRFSTAT1,PRFCNCLN        CANCEL THIS MESSAGE     ZA01370
         B     TSIN0490                 RETURN TO TCAM          ZA01370
ALLOC    STM   RWK15,RWRK2,AVTSAVE2+K44 SAVE REGISTERS          ZA01370
         L     RNTRY,QBAADDR            GET BFR ALLOCATION RTN  YS02019
*                                       ENTRY ADDRESS           YS02019
         BALR  R0,RNTRY                 GO TO OBTAIN A BFR      YS02019
         LR    RWRK7,RWRK2              BFR ADDR RETURNED IN    YS02019
         LM    RWK15,RWRK2,AVTSAVE2+K44 RESTORE REG.S           YS02019
         XC    BUFFFL1(BUFFHDLN),BUFFFL1  CLEAR PREFIX OF NEW BUFFER
         CLC   TSBIBFP,AVTFZERO         ANY TS BFRS ON INPUT HDR QUEUE
         BE    TSIN0530                 BRANCH IF NONE
         DROP  RWRK7                    DROP RWRK7 AS TS BFR BASE REG
         USING TIOCBUF,RTSBFR           TS BFR ADDRESSABILITY   YS02019
         TM    BUFFFL1,BUFFHDR          IS LAST BFR POINTED TO A HDR
         BZ    TSIN0520                 BR IF NO TO BUILD A TRAILER BFR
         TM    BUFFFL1,BUFFNLCR         DOES HDR CONTAIN CARRIAGE RETRN
         BO    TSIN0540                 BR IF YES TO BUILD A HDR BFR
         SPACE 2
********
******** BUILD A TRAILER BUFFER AND CHAIN IT TO THE LAST BUFFER ON THE
******** INPUT QUEUE
********
TSIN0520 EQU   *
         O     RWRK7,BUFFFL1            RESTORE FLAGS TO BFR ADDR
         ST    RWRK7,BUFFFL1            CHAIN NEW TRLR BFR TO LAST BFR
         DROP  RTSBFR                   DROP RTSBFR AS TS BFR BASE REG
         USING TIOCBUF,RWRK7            USE RWRK7 AS TS BFR BASE REG
         MVI   BUFFOFST,BUFFTRLN        OFFSET TO BEGIN DATA IN TRLR
         B     TSIN0560                 BR TO UPDATE INPUT BFR COUNT
         SPACE 2
********
******** BUILD A HEADER BUFFER AND CHAIN IT TO THE LAST HEADER BUFFER
******** IN THE INPUT QUEUE OR TO THE QUEUE ITSELF IF THE QUEUE IS
******** EMPTY
********
TSIN0530 EQU   *
         O     RWRK7,TSBNIBF            RESTORE NO. BFRS TO BFR ADDR
         ST    RWRK7,TSBNIBF            CHAIN NEW HDR BFR TO QUEUE
         B     TSIN0550                 BR TO BUILD A HDR BFR
         SPACE 1
TSIN0540 EQU   *
         DROP  RWRK7                    DROP RWRK7 AS TS BFR BASE REG
         USING TIOCBUF,RTSBFR           USE RTSBFR AS TS BFR BASE REG
         O     RWRK7,BUFFFL2            RESTORE FLAGS TO BFR ADDR
         ST    RWRK7,BUFFFL2            CHAIN NEW HDR BFR TO LAST HDR
         DROP  RTSBFR                   DROP RTSBFR AS TS BFR BASE REG
         USING TIOCBUF,RWRK7            USE RWRK7 AS TS BFR BASE REG
         SPACE 1
TSIN0550 EQU   *
         OI    BUFFFL1,BUFFHDR          IND THIS IS A HEADER BFR
         OI    BUFFFL2,BUFFFRAG         IND THIS BFR CONTAINS FRAG MSG
         MVI   BUFFOFST,BUFFHDLN        OFFSET TO BEGIN DATA IN HDR BFR
         LR    RWK11,RWRK7              UPDATE LAST HEADER POINTER
         DROP  RWRK7                    DROP RWRK7 AS TS BFR BASE REG
         SPACE 2
********
******** UPDATE INPUT QUEUE BUFFER COUNT AND RETURN TO CALLER
********
TSIN0560 EQU   *
         SR    RWRK1,RWRK1              CLEAR REGISTER
         IC    RWRK1,TSBNIBF            GET NO. OF BFRS ON INPUT QUEUE
         LA    RWRK1,K1(R0,RWRK1)       INCR NO. OF BFRS ON INPUT QUEUE
         STC   RWRK1,TSBNIBF            ST UPDATED BFR COUNT
         LR    RTSBFR,RWRK7             POINT TO NEXT BFR TO BE FILLED
         BR    RWK15                    RETURN TO CALLING ROUTINE
         DROP  RAVT,RTCBFR,RTIOC        DROP CONTROL BLOCK BASE  S22028
*                                       REGS                     S22028
         SPACE 3                                                 S22028
********
******** FOR 3270 THERE WILL BE CONTROL CHARACTERS RANGING FROM 1 TO
******** 6 BYTES IN LENGTH. SUBTRACT THIS LENGTH FROM DATA SIZE TO
******** GET THE ACTUAL DATA LENGTH.
********
TSIN9010 EQU   *                                                 S22028
         USING TIOCBUF,RWK11            USE RWK11 AS TS BFR BASE S22028
*                                       REG                      S22028
         SR    R0,R0                    CLEAR LENGTH REGISTER   SA59536
         SR    RWRK1,RWRK1              CLEAR OFFSET REGISTER   SA59536
         IC    R0,BUFFLNTH              GET DATA LENGTH          S22028
         TM    TSBSTAT,TSB3270          TEST FOR 3270            S22028
         BZ    TSIN9050                 BRANCH IF NOT            S22028
         CH    R0,CC3270L               IS DATA LENGTH LESS THAN S22028
*                                       3                        S22028
         BNL   TSIN9020                 BRANCH IF NO             S22028
         BCTR  R0,R0                    SUBTRACT 1 FROM DATA     S22028
*                                       SIZE                     S22028
         LA    RWRK1,K1                 REMEMBER OFFSET          S22028
         B     TSIN9050                 GO BACK                  S22028
         SPACE 1                                                 S22028
TSIN9020 EQU   *                                                 S22028
         SH    R0,CC3270L               SUBTRACT 3 FROM DATA     S22028
*                                       SIZE                     S22028
         LA    RWRK1,K3                 REMEMBER OFFSET          S22028
         CLI   BUFFHDLN+K3(RWK11),SBA   IS FOURTH CHAR SBA       S22028
         BNE   TSIN9050                 BRANCH IF NOT            S22028
         SH    R0,CC3270L               SUBTRACT 3 MORE FROM     S22028
*                                       DATA SIZE                S22028
         LA    RWRK1,K3(R0,RWRK1)       REMEMBER OFFSET          S22028
         SPACE 1                                                 S22028
TSIN9050 EQU   *                                                 S22028
         BR    RWK15                    RETURN TO CHECK DATA     S22028
*                                       LENGTH                   S22028
         DROP  RTSB,RWK11               DROP BASE REGS           S22028
         EJECT
***********************************************************************
********                                                       ********
******** THE FOLLOWING SECTION CODE IS USED BY THE LOGOFF AND  ********
******** HANGUP ROUTINES (IEDAYOO AND IEDAYHH) TO REMOVE THE   ********
******** USERS TERMINAL FROM THE SYSTEM LWAIT CONDITION AND    ********
******** RETURN ANY TCAM BUFFERS WHICH ARE ASSOCIATED WITH     ********
******** THIS TERMINAL AND ARE ON THE TCAM BUFFER WAIT QUEUE.  ********
******** THE ENTRY POINT INTO THIS CODE IS QTIP0280.           ********
********                                                       ********
******** INPUT REGISTERS -                                     ********
********                                                       ********
********       REG 7 -  ADDR OF THE TERMINAL DESTINATION QCB.  ********
********       REG 9 -  ADDRESS OF THE CURRENT TSB.            ********
********       REG 13 - ADDRESS OF AVTSAVE2.                   ********
********                                                       ********
***********************************************************************
QTIP0280 EQU   *
         USING IEDQQCB,RQCB             USE RQCB AS TERM QCB BASE REG
         USING TSB,RTSB                 USE RTSB AS TSB BASE REGISTER
         USING AVTSAVE2,RAVT            USE RAVT AS AVT BASE REGISTER
         TM    QCBTSOF2,QCBBUFQ         HOLDING TCAM BFRS FOR THIS TERM
         BCR   ZEROS,RETRN              RETURN TO CALLER IF NOT
         L     RWK15,CVTPTR             GET CVT ADDRESS
         L     RWK15,CVTAQAVT-CVT(R0,RWK15)    GET TCX ADDR     YS02019
         L     RWK15,TCXRPT-IEDQTCX(,RWK15)    GET TIOCRPT ADDR YS02019
         USING TIOCRPT,RWK15            USE RWK15 AS TIOCRPT BASE REG
         STM   RWRK1,RWRK3,TIOCSAVE     SAVE CALLER'S REGISTERS 1-3
         STM   RTCBFR,RETRN,TIOCSAVE+K12  SAVE CALLER'S REGISTERS 6-14
         LA    RTSB,K0(R0,RTSB)         CLEAR HI-ORDER BYTE OF REG
         USING IEDQTSI,RWRK8            USE RWRK8 AS TSINPUT'S QCB BASE
         L     RWRK8,AVTTSOPT           GET ADDR OF TSINPUT'S QCB
         LA    RWRK8,TSIBUFQ            GET ADDR OF TCAM BFR WAIT QUEUE
         DROP  RWRK8                    DROP RWRK8 AS TSINPUT QCB BASE
         SPACE 2
********
******** REMOVE ALL TCAM BUFFERS FROM THE BUFFER WAIT QUEUE WHICH ARE
******** ASSOCIATED WITH THIS TERMINAL AND RETURN THEM TO TCAM.
********
TSIN7000 EQU   *
         USING IEDQPRF,RTCBFR           USE RTCBFR AS TCAM BFR BASE REG
         L     RTCBFR,K0(R0,RWRK8)      GET NEXT TCAM BFR ON WAIT QUEUE
         LA    RTCBFR,K0(R0,RTCBFR)     CLEAR HI-ORDER BYTE OF REGISTER
         LTR   RTCBFR,RTCBFR            ANY MORE TCAM BFR ON WAIT QUEUE
         BZ    TSIN7050                 RETURN TO CALLER IF NOT
         L     RWRK2,PRFQCBA-K1         GET TSB ASSOCIATED WITH BFR
         LA    RWRK2,K0(R0,RWRK2)       CLEAR HI-ORDER BYTE OF REGISTER
         CR    RTSB,RWRK2               DOES BFR BELONG TO CURRENT TSB
         BE    TSIN7030                 BRANCH IF YES TO RETURN BUFFER
         LA    RWRK8,PRFLINK-K1         PT TO ADDR OF NEXT BFR ON QUEUE
         B     TSIN7000                 BR TO CONT SCAN OF WAIT QUEUE
         SPACE 2
********
******** TPOST TCAM BUFFER TO THE BUFFER RETURN QCB VIA THE TCAM
******** DISPATCHER.
********
TSIN7030 EQU   *
         MVC   K1(K3,RWRK8),PRFLINK     REMOVE BFR FROM WAIT QUEUE
         XC    PRFLINK,PRFLINK          CLEAR LINK FIELD OF BFR
         LA    RWRK3,AVTBFRTB           GET ADDR OF BFR RETURN QCB
         ST    RWRK3,PRFQCBA-K1         TPOST BFR TO BFR RETURN QCB
         MVI   PRFPRI,PRIBFRTB          GIVE PRIORITY
         USING IEDQDISP,RWK11           RWK11 AS TCAM DISP BASE
         L     RWK11,AVTEA              ADDR OF TCAM DISPATCHER
         LR    RWK1,RTCBFR              TCAM BFR TO BE RETU    @ZA03667
         BAL   RETRN,DSPPOSTR           RETURN BFR VIA TCAM
         B     TSIN7000                 BR TO CONT SCAN OF WAIT QUEUE
         SPACE 2
********
******** INDICATE ALL TCAM BUFFERS HAVE BEEN REMOVED FROM THE BUFFER
******** WAIT QUEUE WHICH ARE ASSOCIATED WITH THE CURRENT TSB, AND
******** RETURN TO THE CALLER.
********
TSIN7050 EQU   *
         NI    QCBTSOF2,OFF-QCBBUFQ     NO MORE BFRS IN Q FOR THIS TSB
         LM    RWRK1,RWRK3,TIOCSAVE     RESTORE CALLER'S REGISTERS 1-3
         LM    RTCBFR,RETRN,TIOCSAVE+K12  RESTORE CALLER'S REGS 6-14
         BR    RETRN                    RETURN TO CALLER
         DROP  RTCBFR,RQCB,RTSB,RAVT,RWK15  DROP CONTROL BLK BASE REGS
         SPACE 2                                                 S21008
**********************************************************************
********
******** CONSTANTS
********
**********************************************************************
QIOEPA   DC    V(IEDAYQIO)              IWAIT REMOVAL RTN'S EPA YS02019
QIOBASE  DC    V(QTIP0110)              IWAIT REMOVAL RTN'S BASE S21008
ONE      DC    H'1'                     USED TO DETERMINE DATA   S22028
*                                       SIZE                     S22028
CC3270L  DC    H'3'                     USED TO SKIP 3270        S22028
*                                       CONTROL CHAR             S22028
QBAADDR  DC    V(IEDAYQBA)              BFR ALLOCATION RTN EPA  YS02019
QBRADDR  DC    V(IEDAYQBR)              ADDR OF BFR RETURN RTN  YS02019
TPPRI    DC    AL1(PRIBFRTB)            TPOST PRIORITY
PATCH    DC    10F'0'                   PATCH AREA FOR IEDAYII  ZA01370
         SPACE 1
         EJECT
***********************************************************************
********                                                       ********
******** DSECTS                                                ********
********                                                       ********
***********************************************************************
         SPACE 1
********
******** AVT - ADDRESS VECTOR TABLE
********
         SPACE 1
         TAVTD
         EJECT
********
******** TIOCBUF - TIOC BUFFER FORMAT
********
         SPACE 1
         IKJTIOCB
         EJECT
********
******** CVT - COMMUNICATIONS VECTOR TABLE
********
         SPACE 1
CVT      DSECT
         CVT
         EJECT
********
******** DCB - DATA CONTROL BLOCK
********
         SPACE 1
         DCBD  DSORG=TX
         EJECT
********
******** TCAM DISPATCHER
********
         SPACE 1
         TDISPD
         EJECT
********
******** LCB - LINE CONTROL BLOCK
********
         SPACE 1
         TLCBD
         EJECT
********
******** TCAM BUFFER PREFIX
********
         SPACE 1
         TPRFD
         EJECT
********
******** TCAM BUFFER PRIORITIES
********
         SPACE 1
         TPRIOR
         EJECT
********
******** QCB - DESTINATION QUEUE ELEMENT CONTROL BLOCK
********
         SPACE 1
         TQCBD
         EJECT
********
******** SCB - STATION CONTROL BLOCK
********
         SPACE 1
         TSCBD
         EJECT
********
******** TCB - TASK CONTROL BLOCK
********
         SPACE 1
         IKJTCB
         EJECT
         TTCXD                                                  YS02019
         EJECT
********
******** TIOCRPT - TIOC REFERENCE POINTER TABLE
********
         SPACE 1
         IKJTIOCP
         EJECT
********
******** TERMINAL ENTRY TABLE
********
         SPACE 1
         TTRMD
         EJECT
********
******** TSB - TERMINAL STATUS BLOCK
********
         SPACE 1
         IKJTSB
         EJECT
********
******** DESTINATION QCB FOR TSINPUT
********
         SPACE 1
         TTSID
         END
