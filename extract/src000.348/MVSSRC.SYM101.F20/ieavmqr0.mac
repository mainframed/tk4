         TITLE 'IEAVMQR0 - PROCESS MSG TO INACTIVE TERMINAL            *
                        '
IEAVMQR0 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(19)                                             0001
         DC    C'IEAVMQR0R0300076163'                              0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @10,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@10                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @09,@01                                             0001
         USING @DATD,@09                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @09,8(,@13)                                         0001
         LR    @13,@09                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                      SAVED BY RESTART FLIH MDC078  */
*   QR0PPTR=ADDR(QR0INPUT);         /* ESTABLISH BASE FOR INPUT PARM
*                                      LIST                          */
*                                                                  0087
         L     QR0PPTR,@PC00001                                    0087
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTAE RECOVERY CODE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0088
*   RCVPARM=RCVPARM&&RCVPARM;       /* CLEAR ESTAE PARM LIST         */
         XC    RCVPARM(24),RCVPARM                                 0088
*   RESPECIFY                                                      0089
*    (REG2) RESTRICTED;                                            0089
*   REG2=UCMFRRAD;                  /* SET ADDRESS OF COMTASK      0090
*                                      RECOVERY ROUTINE.             */
*                                                                  0090
         L     @12,UCMBASPT(,QR0PPTR)                              0090
         L     REG2,UCMFRRAD(,@12)                                 0090
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE EXECUTE FORM OF ESTAE - SEE ABOVE FOR MF=L ESTAE        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0091
*   ESTAEPRM=ESTAELST;              /* COPY ESTAE LIST TO AUTO     0091
*                                      STORAGE                       */
         MVC   ESTAEPRM(16),ESTAELST                               0091
*   GEN(ESTAE (REG2),CT,PARAM=RCVPARM,RECORD=YES,MF=(E,ESTAEPRM)); 0092
         ESTAE (REG2),CT,PARAM=RCVPARM,RECORD=YES,MF=(E,ESTAEPRM)
*   PARMPTR=ADDR(RCVPARM);          /* BASE FOR ESTAE PARM'S         */
         LA    PARMPTR,RCVPARM                                     0093
*   PARMID=MQR0;                    /* IDENTIFY MODULE TO FRR        */
         MVC   PARMID(4,PARMPTR),@CC00160                          0094
*   PARMRGAD=ADDR(RCVRSAVE);        /* RECOVERY REG SAVE AREA        */
         LA    @12,RCVRSAVE                                        0095
         ST    @12,PARMRGAD(,PARMPTR)                              0095
*   PARMRTAD=ADDR(ESTRETRY);        /* RETRY ADDRESS IN IEAVMQR0     */
         LA    @12,ESTRETRY                                        0096
         ST    @12,PARMRTAD(,PARMPTR)                              0096
*   RCVRGMAP=ALLREGS;               /* RESTORE ALL REGS AT RETRY     */
         MVC   RCVRGMAP(2),@CB00162                                0097
*   GENERATE SETS(RCVREGS);                                        0098
         STM  REG0,REG15,RCVREGS       SAVE REGS FOR RETRY
*   RESPECIFY                                                      0099
*    (REG2) UNRESTRICTED;                                          0099
*                                                                  0099
*   /*****************************************************************/
*   /*                                                               */
*   /* START MODULE INITIALIZATION AND MAINLINE PROCESSING           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0100
*   MSGECB=ZEROES;                  /* CLEAR WTOR ECB                */
         SLR   @12,@12                                             0100
         ST    @12,MSGECB                                          0100
*   WPL=WPL&&WPL;                   /* CLEAR WTOR PARAMETER LIST     */
         XC    WPL(84),WPL                                         0101
*   QR0FLAGS=QR0FLAGS&&QR0FLAGS;    /* CLEAR WORK FLAGS              */
         XC    QR0FLAGS(1),QR0FLAGS                                0102
*   CALL OBTLOCKS;                  /* GET LOCAL AND CMS LOCKS       */
         BAL   @14,OBTLOCKS                                        0103
*   CALL VERIFY;                    /* VERIFY CONSOLE - WQE    STATUS*/
         BAL   @14,VERIFY                                          0104
*   IF QR0VERFY=ZERO THEN           /* IS WTO STILL PENDING          */
         TM    QR0VERFY,B'10000000'                                0105
         BNZ   @RF00105                                            0105
*     DO;                           /* YES                           */
*       IF WQEPURGE=ONE×(WQEDOM=ONE&UCMDISPC=ONE) THEN             0107
         L     @12,WQEPTR(,QR0PPTR)                                0107
         TM    WQEPURGE(@12),B'10000000'                           0107
         BO    @RT00107                                            0107
         TM    WQEDOM(@12),B'00000100'                             0107
         BNO   @RF00107                                            0107
         L     @12,UCMDVEPT(,QR0PPTR)                              0107
         TM    UCMDISPC(@12),B'00100000'                           0107
         BNO   @RF00107                                            0107
@RT00107 DS    0H                                                  0108
*         DO;                       /* HAS MSG ISSUER TERMINATED OR
*                                      DOM'D THE MESSAGE TO A      0108
*                                      GRAPHICS DEVICE ?             */
*           CALL DELEPROC;          /* YES- DELETE CQE ENTRY         */
         BAL   @14,DELEPROC                                        0109
*         END;                                                     0110
*       ELSE                        /* NO- CHECK TYPE OF CQE,        */
*         DO;                       /* I.E., MAJ, OR NORMAL          */
         B     @RC00107                                            0111
@RF00107 DS    0H                                                  0112
*           IF CQEMAJOR=ZERO THEN   /* IS THIS NORMAL CQE            */
         TM    CQEMAJOR(CQEPTR),B'00000100'                        0112
         BNZ   @RF00112                                            0112
*             QR0MAJOR=ZERO;        /* YES- INDICATE WTOR MSG IEA962A
*                                      SHOULD INCLUDE THE 'SEND,   0113
*                                      DELETE OR OK' OPTION          */
         NI    QR0MAJOR,B'10111111'                                0113
*           ELSE                    /* NO- THIS IS ML MSG            */
*             QR0MAJOR=ONE;         /* INDICATE WTOR WITHOUT SEND  0114
*                                      SHOULD BE ISSUED              */
         B     @RC00112                                            0114
@RF00112 OI    QR0MAJOR,B'01000000'                                0114
*           DO WHILE QR0RETRY=ZERO; /* LOOP TILL MSG SUCCESSFL       */
@RC00112 B     @DE00115                                            0115
@DL00115 DS    0H                                                  0116
*             QR0RETRY=ONE;         /* IF NO ERRORS SHOULD BE ONE  0116
*                                      PASS                          */
         OI    QR0RETRY,B'00100000'                                0116
*             CALL FRLOCKS;         /* FREE CMS AND LOCAL LOCKS      */
         BAL   @14,FRLOCKS                                         0117
*             CALL WTORPROC;        /* ISSUE MSG IEA962A (QR0ERMSG 0118
*                                      =0) OR IEA963A (QR0ERMSG=1) TO
*                                      MASTER CONSOLE AND WAIT FOR 0118
*                                      REPLY                         */
         BAL   @14,WTORPROC                                        0118
*             CALL OBTLOCKS;        /* GET LOCAL AND CMS LOCKS       */
         BAL   @14,OBTLOCKS                                        0119
*             CALL VERIFY;          /* VERIFY CONSOLE-WQE STATUS     */
         BAL   @14,VERIFY                                          0120
*             IF QR0VERFY=ZERO THEN /* WTO STILL PENDING TO INACTIVE
*                                      TERMINAL?                     */
         TM    QR0VERFY,B'10000000'                                0121
         BNZ   @RF00121                                            0121
*               DO;                 /* YES- HAS MSG ISSUER           */
*                 IF WQEPURGE=ONE×  /* TERMINATED OR                 */
*                     (WQEDOM=ONE&UCMDISPC=ONE) THEN               0123
         L     @12,WQEPTR(,QR0PPTR)                                0123
         TM    WQEPURGE(@12),B'10000000'                           0123
         BO    @RT00123                                            0123
         TM    WQEDOM(@12),B'00000100'                             0123
         BNO   @RF00123                                            0123
         L     @12,UCMDVEPT(,QR0PPTR)                              0123
         TM    UCMDISPC(@12),B'00100000'                           0123
         BNO   @RF00123                                            0123
@RT00123 DS    0H                                                  0124
*                   DO;             /* DOM'D THE MSG -YES            */
*                     CALL DELEPROC;/* DELETE CQE ENTRY              */
         BAL   @14,DELEPROC                                        0125
*                   END;                                           0126
*                 ELSE              /* NO- DETERMINE IF NORMAL       */
*                   DO;             /* CQE AND REPLY WAS 'SEND'      */
         B     @RC00123                                            0127
@RF00123 DS    0H                                                  0128
*                     IF CQEMAJOR=ZERO&REPLYBUF=SEND THEN          0128
         TM    CQEMAJOR(CQEPTR),B'00000100'                        0128
         BNZ   @RF00128                                            0128
         CLC   REPLYBUF(6),SEND                                    0128
         BNE   @RF00128                                            0128
*                       DO;         /* YES- SEND MSG TO MSTR CNSLE   */
*/********************************************************************/
*/*                                                                  */
*/* SENDPROC SEGMENT                                                 */
*/*                                                                  */
*/* FUNCTION: CALL ROUTINES TO CHAIN WQE TO MASTER CONSOLE.          */
*/*                                                                  */
*/* INPUT:    POINTER TO UCM PREFIX, AND UCME.                       */
*/*                                                                  */
*/* OUTPUT:   WQEQDFHC - QUEUE FOR HC                                */
*/*                                                                  */
*/********************************************************************/
*                                                                  0130
*                         IF UCMMCENT->UCMDISPB=ONE THEN/* IS MASTER
*                                      CONSLE ALSO HC                */
         L     @12,UCMBASPT(,QR0PPTR)                              0130
         AL    @12,@CF01235                                        0130
         L     @12,UCMMCSPT(,@12)                                  0130
         L     @12,UCMMCENT(,@12)                                  0130
         TM    UCMDISPB(@12),B'01000000'                           0130
         BNO   @RF00130                                            0130
*                           WQEQDFHC=ONE;/* YES- INDICATE QUEUE FOR
*                                      HC                            */
         L     @12,WQEPTR(,QR0PPTR)                                0131
         OI    WQEQDFHC(@12),B'00010000'                           0131
*                         ELSE                                     0132
*                           ;       /* NO                            */
@RF00130 DS    0H                                                  0133
*                         CALL ENQWQE;/* ENQUEUE WQE TO MASTER CNSLE */
         BAL   @14,ENQWQE                                          0133
*                         CALL DELEPROC;/* DELTE CQE FRM INACTVE   0134
*                                      CNSLE                         */
         BAL   @14,DELEPROC                                        0134
*                       END;                                       0135
*                     ELSE                                         0136
*                       IF REPLYBUF=DELETE THEN/* REPLY = DELETE     */
         B     @RC00128                                            0136
@RF00128 CLC   REPLYBUF(6),DELETE                                  0136
         BNE   @RF00136                                            0136
*                         CALL DELEPROC;/* YES- DELETE CQE ENTRY     */
         BAL   @14,DELEPROC                                        0137
*                       ELSE        /* NO - OK REPLY                 */
*                         IF REPLYBUF^=OK THEN/* IF REPLY WAS NOT  0138
*                                      SEND-DELETE-OK THEN WAS     0138
*                                      INCORRECT                     */
         B     @RC00136                                            0138
@RF00136 CLC   REPLYBUF(6),OK                                      0138
         BE    @RF00138                                            0138
*                           DO;     /* REPLY ERROR                   */
*                             QR0ERMSG=ONE;/* INDICATE ERR MSG     0140
*                                      REQUEST                       */
*                             QR0RETRY=ZERO;/* LOOP ONCE MORE        */
         OI    QR0ERMSG,B'00010000'                                0141
         NI    QR0RETRY,B'11011111'                                0141
*                           END;                                   0142
*                         ELSE                                     0143
*                           ;       /* REPLY =OK. LEAVE AS IS        */
@RF00138 DS    0H                                                  0144
*                   END;            /* END OF NOT 'DELETE' PROCESS   */
@RC00136 DS    0H                                                  0144
@RC00128 DS    0H                                                  0145
*               END;                /* END VERFY=ZERO DO             */
@RC00123 DS    0H                                                  0146
*           END;                    /* END OF RETRY=ZERO DO          */
@RF00121 DS    0H                                                  0146
@DE00115 TM    QR0RETRY,B'00100000'                                0146
         BZ    @DL00115                                            0146
*         END;                      /* END ELSE CHECK TYPE CQE       */
*     END;                          /* END FIRST VERFY=ZERO DO       */
*                                                                  0148
@RC00107 DS    0H                                                  0149
*   /*****************************************************************/
*   /*                                                               */
*   /* BRANCH ENTER HERE FOR FRR RETRY                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*FRRRETRY:                                                         0149
*   CALL FRLOCKS;                   /* FREE CMS-LOCAL LOCKS          */
*                                                                  0149
@RF00105 DS    0H                                                  0149
FRRRETRY BAL   @14,FRLOCKS                                         0149
*   /*****************************************************************/
*   /*                                                               */
*   /* BRANCH ENTER HERE FOR ESTAE RETRY                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*ESTRETRY:                                                         0150
*   RESPECIFY                                                      0150
*    (REG0,                                                        0150
*     REG1) RESTRICTED;                                            0150
ESTRETRY DS    0H                                                  0151
*   REG0=QR0SPLEN;                  /* SET SP AND LENGTH FOR FRMN    */
         L     REG0,QR0SPLEN                                       0151
*   REG1=QR0PPTR-FOUR;              /* SET ADDRESS TO BE FREED 4   0152
*                                      BYTES PRECEDING QR0PARMS IS 0152
*                                      QR0PARMS INPUT POINTER        */
*                                                                  0152
         LR    REG1,QR0PPTR                                        0152
         SL    REG1,@CF00059                                       0152
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAIN INPUT PARMLIST (QR0PARMS) AND POINTER                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0153
*   GENERATE REFS(REG0,REG1) SETS(REG1);                           0153
           FREEMAIN R,LV=(0),A=(REG1)
*   RESPECIFY                                                      0154
*    (REG0,                                                        0154
*     REG1) UNRESTRICTED;                                          0154
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 L     @13,4(,@13)                                         0155
@EF00001 L     @00,@SIZDATD                                        0155
         LR    @01,@09                                             0155
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0155
         BR    @14                                                 0155
*/********************************************************************/
*/*                                                                  */
*/* OBTLOCKS SEGMENT                                                 */
*/*                                                                  */
*/* FUNCTION: THIS SEGMENT WILL OBTAIN THE LOCAL AND CMS LOCKS.      */
*/*           THE SETLOCK ROUTINE DESTROYS REGISTERS 11 TO 14. REG 13*/
*/*           WILL BE SAVED AND RESTORED. REGS 11 AND 12 SHOULD NOT  */
*/*           BE USED AS GLOBAL POINTERS.                            */
*/*           OBTLOCKS WILL ALSO SET AN FRR AND INITIALIZE THE       */
*/*           USER PARAMETER LIST.                                   */
*/*                                                                  */
*/* INPUT:    NONE                                                   */
*/*                                                                  */
*/* OUTPUT:   NONE                                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0156
*OBTLOCKS:                                                         0156
*   PROC OPTIONS(NOSAVEAREA);                                      0156
OBTLOCKS STM   @14,@12,12(@13)                                     0156
*   RFY                                                            0157
*    (REG13) RSTD;                                                 0157
*   SAVER13=REG13;                  /* SAVE PTR TO SAVE AREA         */
         LR    SAVER13,REG13                                       0158
*   GENERATE REFS(PSALITA,FLC) SETS(REG11,REG12,REG13,REG14);      0159
           SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                      X
               RELATED=(CQE,IEAVMQR0(FRLOCKS))
           SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                        X
               RELATED=(CQE,IEAVMQR0(FRLOCKS))
*   REG13=SAVER13;                  /* RESTORE SAVEAREA PTR          */
         LR    REG13,SAVER13                                       0160
*   GEN(   LM REG14,REG12,12(REG13));/* RESTORE REG'S                */
*                                                                  0161
            LM REG14,REG12,12(REG13)
*   /*****************************************************************/
*   /*                                                               */
*   /* SETTUP FOR FRR                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0162
*   RESPECIFY                                                      0162
*    (REG1) RESTRICTED;                                            0162
*   REG1=UCMFRRAD;                  /* COMTASK RECOVERY ADDRESS      */
*                                                                  0163
         L     @12,UCMBASPT(,QR0PPTR)                              0163
         L     REG1,UCMFRRAD(,@12)                                 0163
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE SETFRR                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0164
*   GEN REFS(PSACSTK,FRRSCURR,FRRSLAST,PSALSFCC,FRRSENTR,FRRSELEN, 0164
*       FRRSFRRA,FRRSPARM) SETS(REG11,REG12);                      0164
           SETFRR A,FRRAD=(REG1),PARMAD=PARMFRR,WRKREGS=(REG11,REG12)
*   PARMFRR->PARMRGAD=ADDR(RCVRSAVE);/* ADDR OF REG SAVEAREA         */
         LA    @12,RCVRSAVE                                        0165
         L     @11,PARMFRR                                         0165
         ST    @12,PARMRGAD(,@11)                                  0165
*   PARMFRR->PARMID=MQR0;           /* IDENTIFY MODULE TO FRR        */
         L     @12,PARMFRR                                         0166
         MVC   PARMID(4,@12),@CC00160                              0166
*   PARMFRR->PARMRTAD=ADDR(FRRRETRY);/* RETRY ADDR IN IEAVMQR0       */
         LA    @12,FRRRETRY                                        0167
         L     @11,PARMFRR                                         0167
         ST    @12,PARMRTAD(,@11)                                  0167
*   PARMFRID=ONE;                   /* INDICATE BOTH ESTAE AND FRR 0168
*                                      PROTECTION IN ESTAE USER    0168
*                                      PARMLIST.                     */
         OI    PARMFRID(PARMPTR),B'00010000'                       0168
*   RFY                                                            0169
*    (REG13,                                                       0169
*     REG1) UNRESTRICTED;                                          0169
*   END OBTLOCKS;                                                  0170
*                                                                  0170
@EL00002 DS    0H                                                  0170
@EF00002 DS    0H                                                  0170
@ER00002 LM    @14,@12,12(@13)                                     0170
         BR    @14                                                 0170
*/********************************************************************/
*/*                                                                  */
*/* VERIFY SEGMENT                                                   */
*/*                                                                  */
*/* FUNCTION: VERIFY 'INACTIVE' CONSOLE STATUS, I.E., DETERMINE IF   */
*/*          ITS STILL INACTIVE, OR IF THERE IS AN OUTPUT QUEUE OR   */
*/*          INPUT WQE NOT IN CQE.                                   */
*/*                                                                  */
*/* INPUT:   PTR TO UCME OF INACTIVE CONSOLE.                        */
*/*                                                                  */
*/* OUTPUT:  QR0VERFY=0  SUCCESSFUL VERIFY                           */
*/*          QR0VERFY=1  UNSUCCESSFUL VERIFY                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0171
*VERIFY:                                                           0171
*   PROC OPTIONS(NOSAVEAREA);                                      0171
VERIFY   STM   @14,@01,12(@13)                                     0171
         STM   @04,@12,36(@13)                                     0171
*   QR0VERFY=ONE;                   /* INDICATES CONSOLE ACTIVATED OR
*                                      NO OUTPUT Q OR INPUT WQE NOT
*                                      IN CQE                        */
         OI    QR0VERFY,B'10000000'                                0172
*   IF UCMUF=ONE×UCMOUTQ=ZEROES THEN/* IF CONSOLE HAS BEEN ACTIVATED
*                                      OR NO OUTPUT QUEUE THEN SET 0173
*                                      INDICATOR.                    */
         L     @12,UCMDVEPT(,QR0PPTR)                              0173
         TM    UCMUF(@12),B'00010000'                              0173
         BO    @RT00173                                            0173
         L     @12,UCMOUTQ(,@12)                                   0173
         LTR   @12,@12                                             0173
         BNZ   @RF00173                                            0173
@RT00173 DS    0H                                                  0174
*     QR0END=ONE;                   /* BYPASS LOOP AND RETURN        */
         OI    QR0END,B'00001000'                                  0174
*   ELSE                                                           0175
*     ;                             /* VERIFY ENTRY                  */
@RF00173 DS    0H                                                  0176
*   CQEPTR=UCMOUTQ;                 /* EST. POINTER TO CQE           */
         L     @12,UCMDVEPT(,QR0PPTR)                              0176
         L     CQEPTR,UCMOUTQ(,@12)                                0176
*   DO WHILE QR0END=ZERO;           /* LOOP THRU CQE CHAIN           */
         B     @DE00177                                            0177
@DL00177 DS    0H                                                  0178
*     IF CQEWQEA=QR0WQEA&CQEENTR=ONE THEN/* DOES VALID               */
         CLC   CQEWQEA(3,CQEPTR),QR0WQEA(QR0PPTR)                  0178
         BNE   @RF00178                                            0178
         TM    CQEENTR(CQEPTR),B'00000001'                         0178
         BNO   @RF00178                                            0178
*       DO;                         /* CQE ENTRY = PARMLIST WQE      */
*         QR0END=ONE;               /* TERM DO LOOP                  */
*         QR0VERFY=ZERO;            /* ENTRY STILL VALID             */
         OI    QR0END,B'00001000'                                  0181
         NI    QR0VERFY,B'01111111'                                0181
*       END;                                                       0182
*     ELSE                          /* NO                            */
*       IF CQEEOB=ONEZERO THEN      /* IS THIS LAST CQE ENTRY        */
         B     @RC00178                                            0183
@RF00178 TM    CQEEOB(CQEPTR),B'10000000'                          0183
         BNO   @RF00183                                            0183
         TM    CQEEOB(CQEPTR),B'01000000'                          0183
         BNZ   @RF00183                                            0183
*         QR0END=ONE;               /* YES- TERM SEARCH              */
         OI    QR0END,B'00001000'                                  0184
*       ELSE                        /* GET NEXT ENTRY                */
*         DO;                                                      0185
         B     @RC00183                                            0185
@RF00183 DS    0H                                                  0186
*           CQEPTR=CQEPTR+LENGTH(CQEWQE);/* NXT CQE ENTRY            */
         AL    CQEPTR,@CF00059                                     0186
*           IF CQEEOB=ONES THEN     /* LAST ENTRY IN CQE             */
         TM    CQEEOB(CQEPTR),B'11000000'                          0187
         BNO   @RF00187                                            0187
*             CQEPTR=CQEWQEA;       /* YES - GET NEXT CQE ADDR       */
         L     @12,CQEWQEA-1(,CQEPTR)                              0188
         LA    @12,0(,@12)                                         0188
         LR    CQEPTR,@12                                          0188
*           ELSE                                                   0189
*             ;                     /* NO - CONTINUE                 */
@RF00187 DS    0H                                                  0190
*         END;                      /* END NXT ENTRY PROCESSING      */
*   END;                            /* END CQE SEARCH LOOP           */
@RC00183 DS    0H                                                  0191
@RC00178 DS    0H                                                  0191
@DE00177 TM    QR0END,B'00001000'                                  0191
         BZ    @DL00177                                            0191
*   QR0END=ZERO;                    /* RESET VERIFY LOOP CONTROL     */
         NI    QR0END,B'11110111'                                  0192
*   CQEPTRSV=CQEPTR;                /* SAVE CQEPTR                   */
         LR    CQEPTRSV,CQEPTR                                     0193
*   END VERIFY;                     /* END OF SUBROUTINE             */
@EL00003 DS    0H                                                  0194
@EF00003 DS    0H                                                  0194
@ER00003 LM    @14,@01,12(@13)                                     0194
         LM    @04,@12,36(@13)                                     0194
         BR    @14                                                 0194
*/********************************************************************/
*/*                                                                  */
*/* DELEPROC SEGMENT                                                 */
*/*                                                                  */
*/* FUNCTION: MARK WQE FOR HC AND DELETION. MARK CQE FOR REUSE.      */
*/*                                                                  */
*/* INPUT: POINTERS TO WQE,CQE(CQEPTRSV) AND UCM.                    */
*/*                                                                  */
*/* OUTPUT: WQE,CQE AND UCM FIELDS SET                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0195
*DELEPROC:                                                         0195
*   PROC;                                                          0195
DELEPROC STM   @14,@12,12(@13)                                     0195
*   WQEQFHC=ONE;                    /* QUEUE FOR HC                  */
         L     @12,WQEPTR(,QR0PPTR)                                0196
         OI    WQEQFHC(@12),B'01000000'                            0196
*   WQEBUFC=ONE;                    /* READY FOR HC                  */
         OI    WQEBUFC(@12),B'00100000'                            0197
*   CQEPTRSV->CQEENTR=ZERO;         /* INDICATE NO ENTRY EXISTS      */
*   CQEPTRSV->CQEAVAIL=ONE;         /* THIS ENTRY NO LONGER NEEDED   */
         OI    CQEAVAIL(CQEPTRSV),B'00000010'                      0199
         NI    CQEENTR(CQEPTRSV),B'11111110'                       0199
*   UCMTB=ONE;                      /* CQE ENTRY SHOULD BE DEQUED    */
         L     @12,UCMDVEPT(,QR0PPTR)                              0200
         OI    UCMTB(@12),B'00000100'                              0200
*   UCMSYSJ=ONE;                    /* HC OUTPUT TO BE WRITTEN       */
         L     @12,UCMBASPT(,QR0PPTR)                              0201
         AL    @12,@CF01235                                        0201
         L     @12,UCMMCSPT(,@12)                                  0201
         OI    UCMSYSJ(@12),B'01000000'                            0201
*   END DELEPROC;                   /* END SUBROUTINE                */
@EL00004 DS    0H                                                  0202
@EF00004 DS    0H                                                  0202
@ER00004 LM    @14,@12,12(@13)                                     0202
         BR    @14                                                 0202
*/********************************************************************/
*/*                                                                  */
*/* FRLOCKS SEGMENT                                                  */
*/*                                                                  */
*/* FUNCTION: THIS SEGMENT WILL FREE THE CMS AND LOCAL LOCKS AND FREE*/
*/*           THE FRR FROM THE STACK.                                */
*/*                                                                  */
*/* INPUT:    NONE                                                   */
*/*                                                                  */
*/* OUTPUT:   NONE                                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0203
*FRLOCKS:                                                          0203
*   PROC OPTIONS(NOSAVEAREA);                                      0203
*                                                                  0203
FRLOCKS  STM   @14,@12,12(@13)                                     0203
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE THE FRR                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0204
*   GENERATE REFS(FRRSEMP);                                        0204
         SETFRR D,WRKREGS=(REG11,REG12)
*   PARMFRID=ZERO;                  /* INDICATE MODULE IS ONLY ESTAE
*                                      PROTECTED.                    */
         NI    PARMFRID(PARMPTR),B'11101111'                       0205
*   RFY                                                            0206
*    (REG13) RSTD;                                                 0206
*   SAVER13=REG13;                  /* SAVE REG 13 OVER CALL         */
         LR    SAVER13,REG13                                       0207
*   GENERATE REFS(PSALITA,FLC) SETS(REG11,REG12,REG13,REG14);      0208
         SETLOCK RELEASE,TYPE=CMS,RELATED=(CQE,IEAVMQR0(OBTLOCKS))
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(CQE,IEAVMQR0(OBTLOCK))
*   REG13=SAVER13;                  /* RESTORE SAVEAREA PTR          */
         LR    REG13,SAVER13                                       0209
*   RFY                                                            0210
*    (REG13) UNRESTRICTED;                                         0210
*   END FRLOCKS;                    /* END SUBROUTINE                */
@EL00005 DS    0H                                                  0211
@EF00005 DS    0H                                                  0211
@ER00005 LM    @14,@12,12(@13)                                     0211
         BR    @14                                                 0211
*WTORPROC:                                                         0212
*                                                                  0212
*/********************************************************************/
*/*                                                                  */
*/* wtorproc SEGMENT                                                 */
*/*                                                                  */
*/* FUNCTION: issue msg's iea962a and iea963a for inactive terminal  */
*/*                                                                  */
*/* INPUT: qr0 flag bytes, qr0ermsg qr0major                         */
*/*                                                                  */
*/* OUTPUT: replybuf contains wtor reply to msg iea962a or iea963a   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0212
*   PROC;                                                          0212
WTORPROC STM   @14,@12,12(@13)                                     0212
*   REPLYBUF='';                    /* BLANK OUT REPLY BUFFER        */
*                                                                  0213
         MVI   REPLYBUF,C' '                                       0213
         MVC   REPLYBUF+1(5),REPLYBUF                              0213
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE WTOR PARAMETER LIST                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0214
*   WPLRLN=LENGTH(REPLYBUF);        /* SET MAXIMUM LENGTH OF REPLY   */
         MVI   WPLRLN,X'06'                                        0214
*   WPLRPTRA=ADDR(REPLYBUF);        /* SET POINTER TO REPLY BUFFER   */
         LA    @12,REPLYBUF                                        0215
         STCM  @12,7,WPLRPTRA                                      0215
*   WPLRECB=ADDR(MSGECB);           /* SET POINTER TO ECB            */
         LA    @12,MSGECB                                          0216
         ST    @12,WPLRECB                                         0216
*   WPLLGH=LENGTH(MIEA962A)+FOUR;   /* SET MSG LENGTH + 4            */
         MVC   WPLLGH(2),@CH00341                                  0217
*   WPLMCSF1=ROUTDESC;              /* ROUTE & DESC CODES EXIST-80   */
         MVC   WPLMCSF1(1),ROUTDESC                                0218
*   IF QR0ERMSG=ZERO THEN           /* IS THIS NON-ERROR PATH        */
         TM    QR0ERMSG,B'00010000'                                0219
         BNZ   @RF00219                                            0219
*     DO;                           /* YES ISSUE NORMAL MSG          */
*       WPLMSG1=MSGTXT;             /* FIRST TXT OF IEA962A          */
         MVC   WPLMSG1(48),MSGTXT                                  0221
*       WORKID1=UCMID;              /* SET UCMID TO FIXED AREA       */
         L     @12,UCMDVEPT(,QR0PPTR)                              0222
         SLR   WORKID1,WORKID1                                     0222
         IC    WORKID1,UCMID(,@12)                                 0222
*       CVD(WORKID1,WORKID2);       /* CONVERT TO DEC FOR UNPK       */
         CVD   WORKID1,@TS00001                                    0223
         MVC   WORKID2(2),@TS00001+6                               0223
*       UNPK(WPLID,WORKID2);        /* UNPK TERM ID TO MSG           */
         UNPK  WPLID(2),WORKID2(2)                                 0224
*       MVZ(WPLID2,WPLID1);         /* CHANGE SIGN TO 'F'            */
         MVZ   WPLID2(1),WPLID1                                    0225
*       IF QR0MAJOR=ZERO THEN       /* NORMAL WQE ?                  */
         TM    QR0MAJOR,B'01000000'                                0226
         BNZ   @RF00226                                            0226
*         WPLMSG2=RPLYSDOK;         /* REPLY SEND,DELETE OR OK       */
         MVC   WPLMSG2(20),RPLYSDOK                                0227
*       ELSE                                                       0228
*         WPLMSG2=RPLYDOK;          /* REPLY DELETE OR OK            */
         B     @RC00226                                            0228
@RF00226 MVI   WPLMSG2+14,C' '                                     0228
         MVC   WPLMSG2+15(5),WPLMSG2+14                            0228
         MVC   WPLMSG2(14),RPLYDOK                                 0228
*     END;                                                         0229
*   ELSE                            /* ERROR PASS                    */
*     WPLMSG1=MIEA963A;             /* SET ERROR MESSAGE TXT         */
         B     @RC00219                                            0230
@RF00219 MVC   WPLMSG1(48),MIEA963A                                0230
*   DO;                             /* WTORP MF(E,WPL)               */
@RC00219 DS    0H                                                  0232
*     RFY                                                          0232
*       GPR01P RSTD;                /* RESTRICT REG 1                */
*     GPR01P=ADDR(WPL);             /* ADDRESS CONTROL PROGRAM LIST  */
         LA    GPR01P,WPL                                          0233
*     SVC(35);                      /* ISSUE WTOR SVC                */
         SVC   35                                                  0234
*     RFY                                                          0235
*       GPR01P UNRSTD;              /* RELEASE REG 1                 */
*   END;                            /* WTORP MF(E,WPL) ISSUE WTOR    */
*   DO;                             /* WAIT ECB(MSGECB)              */
*     RESPECIFY                                                    0238
*      (GPR00P,                                                    0238
*       GPR01P) RESTRICTED;                                        0238
*     GPR00P=1;                     /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                            0239
*     GPR01P=ADDR(MSGECB);          /* ADDRESS OF ECB                */
         LA    GPR01P,MSGECB                                       0240
*     SVC(1);                       /* WAIT SVC                      */
         SVC   1                                                   0241
*     RESPECIFY                                                    0242
*      (GPR00P,                                                    0242
*       GPR01P) UNRESTRICTED;                                      0242
*   END;                            /* WAIT ECB(MSGECB) WAIT FOR   0243
*                                      REPLY                         */
*   MSGECB=ZEROES;                  /* ZERO WTOR ECB                 */
         SLR   @12,@12                                             0244
         ST    @12,MSGECB                                          0244
*   END WTORPROC;                   /* END OF SUBROUTINE             */
@EL00006 DS    0H                                                  0245
@EF00006 DS    0H                                                  0245
@ER00006 LM    @14,@12,12(@13)                                     0245
         BR    @14                                                 0245
*/********************************************************************/
*/*                                                                  */
*/* ENQWQE SEGMENT                                                   */
*/*                                                                  */
*/* FUNCTION: CALL IEECMQCN TO ENQUEUE WQE TO MASTER CONSOLE         */
*/*                                                                  */
*/* INPUT: QR0 PARMLIST                                              */
*/*                                                                  */
*/* OUTPUT: WQE ENQUEUE TO MASTER CONSOLE                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0246
*ENQWQE:                                                           0246
*   PROC OPTIONS(NOSAVEAREA);                                      0246
*                                                                  0246
ENQWQE   STM   @14,@12,12(@13)                                     0246
*   /*****************************************************************/
*   /*                                                               */
*   /* SETTUP PARAMETERS FOR IEECMQCN                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0247
*   RESPECIFY                                                      0247
*    (REG1,                                                        0247
*     REG2,                                                        0247
*     REG4,                                                        0247
*     REG6,                                                        0247
*     REG11) RESTRICTED;                                           0247
*   REG1=QR0CMQCN;                  /* LOAD ENTRY ADDR IEECMQCN      */
         L     REG1,QR0CMQCN(,QR0PPTR)                             0248
*   REG2=QR0UCM;                    /* LOAD UCM ADDRESS              */
         L     REG2,QR0UCM(,QR0PPTR)                               0249
*   REG4=UCMMCSPT;                  /* BASE FOR UCM PREFIX           */
         L     @12,UCMBASPT(,QR0PPTR)                              0250
         AL    @12,@CF01235                                        0250
         L     @12,UCMMCSPT(,@12)                                  0250
         LR    REG4,@12                                            0250
*   REG6=QR0WQE;                    /* LOAD WQE ADDRESS              */
         L     REG6,QR0WQE(,QR0PPTR)                               0251
*   REG11=UCMMCENT;                 /* LOAD UCME ADDRESS OF MASTER 0252
*                                      CONSOLE                       */
         L     REG11,UCMMCENT(,@12)                                0252
*   GENERATE;                                                      0253
         BALR  REG9,REG1                BRANCH TO IEECMQCN
*   RESPECIFY                                                      0254
*    (REG1,                                                        0254
*     REG2,                                                        0254
*     REG4,                                                        0254
*     REG6,                                                        0254
*     REG11) UNRESTRICTED;                                         0254
*   END ENQWQE;                     /* END SUBROUTINE                */
@EL00007 DS    0H                                                  0255
@EF00007 DS    0H                                                  0255
@ER00007 LM    @14,@12,12(@13)                                     0255
         BR    @14                                                 0255
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0256
*     GPR01P PTR(31) REG(1);                                       0256
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0257
*     I031F FIXED(31) BASED,                                       0257
*     I031P PTR(31) BASED,                                         0257
*     I015F FIXED(15) BASED,                                       0257
*     I015P PTR(15) BASED,                                         0257
*     I008P PTR(8) BASED,                                          0257
*     I001C CHAR(1) BASED;                                         0257
*   END IEAVMQR0                    /* END OF ROUTINE                */
*                                                                  0258
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAWQE  )                                       */
*/*%INCLUDE SYSLIB  (IHACTM  )                                       */
*/*%INCLUDE SYSLIB  (IEECUCM )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSUT5  (SENDPROC)                                       */
*/*%INCLUDE SYSUT5  (OBTLOCKS)                                       */
*/*%INCLUDE SYSUT5  (VERIFY  )                                       */
*/*%INCLUDE SYSUT5  (DELEPROC)                                       */
*/*%INCLUDE SYSUT5  (FRLOCKS )                                       */
*/*%INCLUDE SYSUT5  (WTORPROC)                                       */
*/*%INCLUDE SYSUT5  (ENQWQE  )                                       */
*                                                                  0258
*       ;                                                          0258
@DATA    DS    0H
@CH00341 DC    H'72'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
IEAVMQR0 CSECT
         DS    0F
@CF00059 DC    F'4'
@CF01235 DC    F'-4'
@DATD    DSECT
         DS    0D
MSGECB   DS    F
PARMFRR  DS    A
FRREPTR  DS    A
FRRSPTR  DS    A
WMJPTR   DS    A
WMNPTR   DS    A
         DS    0D
@TS00001 DS    CL8
REPLYBUF DS    CL6
WORKID2  DS    CL2
QR0FLAGS DS    BL1
         ORG   QR0FLAGS
QR0VERFY DS    BL1
QR0MAJOR EQU   QR0FLAGS+0
QR0RETRY EQU   QR0FLAGS+0
QR0ERMSG EQU   QR0FLAGS+0
QR0END   EQU   QR0FLAGS+0
@NM00001 EQU   QR0FLAGS+0
         ORG   QR0FLAGS+1
         DS    CL3
WPL      DS    CL84
         ORG   WPL
WPLRLN   DS    BL1
WPLRPTRA DS    AL3
WPLRECB  DS    AL4
WPLLGH   DS    FL2
WPLMCSF  DS    CL2
         ORG   WPLMCSF
WPLMCSF1 DS    BL1
WPLMCSF2 DS    BL1
         ORG   WPL+12
WPLTXT   DS    CL68
         ORG   WPLTXT
WPLMSG1  DS    CL48
         ORG   WPLMSG1
WPLMSG1A DS    CL37
WPLID    DS    CL2
         ORG   WPLID
WPLID1   DS    CL1
WPLID2   DS    CL1
         ORG   WPLMSG1+39
@NM00002 DS    CL9
         ORG   WPLTXT+48
WPLMSG2  DS    CL20
         ORG   WPL+80
WPLDESC  DS    CL2
WPLROUT  DS    CL2
         ORG   WPLROUT
WPLROUT1 DS    BL1
WPLROUT2 DS    BL1
         ORG   WPL+84
RCVPARM  DS    CL24
         DS    CL2
RCVRSAVE DS    CL66
         ORG   RCVRSAVE
RCVRGMAP DS    CL2
RCVREGS  DS    CL64
         ORG   RCVRSAVE+66
ESTAEPRM DS    CL16
IEAVMQR0 CSECT
         DS    0F
@SIZDATD DC    AL1(250)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
QR0SPLEN DC    XL4'FA000014'
@CC00160 DC    C'MQR0'
@CB00162 DC    X'FFFF'
BLANK    DC    X'40'
ROUTDESC DC    X'80'
SEND     DC    CL6'SEND'
DELETE   DC    CL6'DELETE'
OK       DC    CL6'OK'
MIEA962A DS    CL68
         ORG   MIEA962A
MSGTXT   DC    CL48'IEA962A MESSAGE FOR INACTIVE CONSOLE   .  REPLY '
RPLYSDOK DS    CL20
         ORG   RPLYSDOK
SENDMSG  DC    CL6'SEND, '
RPLYDOK  DC    CL14'DELETE, OR OK.'
         ORG   MIEA962A+68
MIEA963A DC    CL48'IEA963A INVALID REPLY TO MESSAGE IEA962A. REPLY '
IEAVMQR0 CSECT
*                                                         /* @ZA09240*/
ESTAELST ESTAE ,CT,MF=L                SETTUP ESTAE PARMLIST
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVMQR0 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PARMPTR  EQU   @04
WORKID1  EQU   @02
SAVER13  EQU   @02
CQEPTR   EQU   @02
CQEPTRSV EQU   @03
QR0PPTR  EQU   @05
REG9     EQU   @09
REG10    EQU   @10
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG4     EQU   @04
REG6     EQU   @06
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
GPR01P   EQU   @01
GPR00P   EQU   @00
REG15    EQU   @15
REG3     EQU   @03
REG5     EQU   @05
REG7     EQU   @07
REG8     EQU   @08
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTPTR   EQU   16
UCMPRFXP EQU   0
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
WQE      EQU   0
WQELKP   EQU   WQE
WQETS    EQU   WQE+13
WQETXT   EQU   WQE+31
WQEXA    EQU   WQE+160
WQEPURGE EQU   WQEXA
WQEQFHC  EQU   WQEXA
WQEQDFHC EQU   WQEXA
WQEDOM   EQU   WQEXA
WQEAVAIL EQU   WQE+163
WQEBUFC  EQU   WQEAVAIL
WQEMCSF  EQU   WQE+172
WQEMCSF1 EQU   WQEMCSF
WQEMCSF2 EQU   WQEMCSF+1
WQEMSGTP EQU   WQE+174
WQEMSGT1 EQU   WQEMSGTP
WQEROUT  EQU   WQE+176
WQEROUT1 EQU   WQEROUT
WQEROUT2 EQU   WQEROUT+1
WQEDESCD EQU   WQE+184
WQEDC1   EQU   WQEDESCD
WQEDC2   EQU   WQEDESCD+1
WMJM     EQU   0
WMJMEXT  EQU   WMJM
WMJMEXTA EQU   WMJMEXT+1
WMJMMLW  EQU   WMJM+4
WMJMTS   EQU   WMJM+13
WMJMSER  EQU   WMJM+122
WMJMSER1 EQU   WMJMSER
WMJMLTYP EQU   WMJM+134
WMJMLTY1 EQU   WMJMLTYP
WMJMECBF EQU   WMJM+148
WMJMDSP  EQU   WMJM+160
WMJMBUF  EQU   WMJM+163
WMJMCS   EQU   WMJM+172
WMJMCS1  EQU   WMJMCS
WMJMCS2  EQU   WMJMCS+1
WMJMMT   EQU   WMJM+174
WMJMMT1  EQU   WMJMMT
WMJMRTC  EQU   WMJM+176
WMJMRCT1 EQU   WMJMRTC
WMJMRCT2 EQU   WMJMRTC+1
WMJMDEC  EQU   WMJM+184
WMJMDEC1 EQU   WMJMDEC
WMJMDEC2 EQU   WMJMDEC+1
WMNM     EQU   0
WMNMEXT  EQU   WMNM
WMNMML1  EQU   WMNM+4
WMNMLT1  EQU   WMNM+5
WMNMST1  EQU   WMNM+84
WMNMML2  EQU   WMNM+100
WMNMLT2  EQU   WMNM+101
WMNMST2  EQU   WMNM+180
CQE      EQU   0
CQEWQE   EQU   CQE
CQEFLAG  EQU   CQEWQE
CQEEOB   EQU   CQEFLAG
CQEMAJOR EQU   CQEFLAG
CQEAVAIL EQU   CQEFLAG
CQEENTR  EQU   CQEFLAG
CQEWQEA  EQU   CQEWQE+1
QR0PARMS EQU   0
QR0WQE   EQU   QR0PARMS
QR0WQEA  EQU   QR0WQE+1
QR0UCME  EQU   QR0PARMS+4
QR0UCM   EQU   QR0PARMS+8
QR0CMQCN EQU   QR0PARMS+12
PARMLIST EQU   0
PARMSTAT EQU   PARMLIST
PARMFLAG EQU   PARMSTAT+1
PARMFRID EQU   PARMFLAG
PARMRTAD EQU   PARMLIST+12
PARMRGAD EQU   PARMLIST+16
PARMID   EQU   PARMLIST+20
UCM2PTR  EQU   0
UCM2EXT  EQU   0
UCM2STA  EQU   UCM2EXT+8
UCM2SFLG EQU   UCM2STA
UCMPRFX  EQU   0
UCMMCENT EQU   UCMPRFX
UCMSAVE0 EQU   UCMPRFX+4
UCMSFLGS EQU   UCMPRFX+84
UCMSFLG1 EQU   UCMSFLGS
UCMSFLG2 EQU   UCMSFLGS+1
UCMSYSJ  EQU   UCMSFLG2
UCMUEXIT EQU   UCMPRFX+97
UCMXSA   EQU   UCMPRFX+104
UCMSDS1  EQU   UCMPRFX+156
UCM      EQU   0
UCMDECB  EQU   UCM+12
UCMLSTP  EQU   UCM+20
UCMRPYI  EQU   UCM+32
UCMPXB   EQU   UCM+68
UCMMODE  EQU   UCMPXB
UCMVDATA EQU   UCM+72
UCMFRRAD EQU   UCM+288
UCMRSV42 EQU   UCM+300
UCMRSV51 EQU   UCM+301
UCMEIL   EQU   0
UCMRECBA EQU   UCMEIL+24
UCMEXIT  EQU   0
UCMLIST  EQU   0
UCMSTS   EQU   UCMLIST+24
UCMTB    EQU   UCMSTS
UCMATR   EQU   UCMLIST+25
UCMUF    EQU   UCMATR
UCMXA    EQU   UCMLIST+26
UCMID    EQU   UCMXA
UCMOUTQ  EQU   UCMLIST+36
UCMAUTH  EQU   UCMLIST+40
UCMAUTHA EQU   UCMAUTH
UCMDISP  EQU   UCMLIST+42
UCMDISP1 EQU   UCMDISP
UCMDISPB EQU   UCMDISP1
UCMDISPC EQU   UCMDISP1
UCMDISP2 EQU   UCMDISP+1
UCMMSG   EQU   UCMLIST+60
UCMMSG1  EQU   UCMMSG
UCMDEVC  EQU   UCMLIST+63
UCMRCT   EQU   UCMLIST+68
UCMSDS5  EQU   UCMRCT
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
QR0INPUT EQU   0
UCMBASPT EQU   QR0UCM
UCMMCSPT EQU   UCMPRFXP
UCMDVEPT EQU   QR0UCME
WQEPTR   EQU   QR0WQE
UCMEXTPT EQU   UCM2PTR
UCMEILPT EQU   UCMLSTP
UCMUEWPT EQU   UCMUEXIT
UCMIECBA EQU   UCMRECBA+4
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
UCMIECBP EQU   UCMIECBA+1
UCMIECBF EQU   UCMIECBA
UCMRCTA  EQU   UCMRCT+1
UCMRSV31 EQU   UCMSDS5
UCMSDS5G EQU   UCMSDS5
UCMSDS5F EQU   UCMSDS5
UCMRSV30 EQU   UCMSDS5
UCMRSV29 EQU   UCMSDS5
UCMSDS5C EQU   UCMSDS5
UCMSDS5B EQU   UCMSDS5
UCMSDS5A EQU   UCMSDS5
UCMMLAST EQU   UCMLIST+64
UCMVHRSN EQU   UCMDEVC
UCMDEVG  EQU   UCMDEVC
UCMDEVF  EQU   UCMDEVC
UCMDEVE  EQU   UCMDEVC
UCMDEVD  EQU   UCMDEVC
UCMDEVCC EQU   UCMDEVC
UCMDEVB  EQU   UCMDEVC
UCMDEVA  EQU   UCMDEVC
UCMXOR   EQU   UCMLIST+62
UCMMSG2  EQU   UCMMSG+1
UCMRSV27 EQU   UCMMSG1
UCMRSV26 EQU   UCMMSG1
UCMMSGF  EQU   UCMMSG1
UCMMSGE  EQU   UCMMSG1
UCMMSGD  EQU   UCMMSG1
UCMMSGC  EQU   UCMMSG1
UCMMSGB  EQU   UCMMSG1
UCMMSGA  EQU   UCMMSG1
UCMCOMPC EQU   UCMLIST+56
UCMWLAST EQU   UCMLIST+52
UCMOAOEN EQU   UCMLIST+48
UCMALTEN EQU   UCMLIST+44
UCMRV007 EQU   UCMDISP2
UCMRV006 EQU   UCMDISP2
UCMRV005 EQU   UCMDISP2
UCMRV004 EQU   UCMDISP2
UCMRV003 EQU   UCMDISP2
UCMDISPK EQU   UCMDISP2
UCMDISPJ EQU   UCMDISP2
UCMDISPI EQU   UCMDISP2
UCMDISPH EQU   UCMDISP1
UCMDISPG EQU   UCMDISP1
UCMDISPF EQU   UCMDISP1
UCMDISPE EQU   UCMDISP1
UCMDISPD EQU   UCMDISP1
UCMDISPA EQU   UCMDISP1
UCMAUTHB EQU   UCMAUTH+1
UCMRSV23 EQU   UCMAUTHA
UCMRSV22 EQU   UCMAUTHA
UCMRSV21 EQU   UCMAUTHA
UCMRSV20 EQU   UCMAUTHA
UCMRSV19 EQU   UCMAUTHA
UCMAUTH3 EQU   UCMAUTHA
UCMAUTH2 EQU   UCMAUTHA
UCMAUTH1 EQU   UCMAUTHA
UCMRSV18 EQU   UCMLIST+34
UCMRTCD  EQU   UCMLIST+32
UCMXB    EQU   UCMLIST+28
@NM00014 EQU   UCMXA+1
UCMRSV17 EQU   UCMATR
UCMRSV16 EQU   UCMATR
UCMAT04  EQU   UCMATR
UCMLF    EQU   UCMATR
UCMXF    EQU   UCMATR
UCMIF    EQU   UCMATR
UCMOF    EQU   UCMATR
UCMTC    EQU   UCMSTS
UCMTD    EQU   UCMSTS
UCMTA    EQU   UCMSTS
UCMCF    EQU   UCMSTS
UCMBF    EQU   UCMSTS
UCMPF    EQU   UCMSTS
UCMAF    EQU   UCMSTS
UCMNAME  EQU   UCMLIST+16
UCMUCB   EQU   UCMLIST+12
UCMDCB   EQU   UCMLIST+8
UCMSBR   EQU   UCMLIST+4
UCMECB   EQU   UCMLIST
UCMTPSAV EQU   UCMEXIT+208
UCMXTSAV EQU   UCMEXIT+136
UCMDESCD EQU   UCMEXIT+132
UCMROUTC EQU   UCMEXIT+128
UCMMSTXT EQU   UCMEXIT
UCMDECBA EQU   UCMEIL+20
UCMOECBA EQU   UCMEIL+16
UCMAECBA EQU   UCMEIL+12
UCMXECBA EQU   UCMEIL+8
UCMNIPTR EQU   UCMEIL+4
UCMRSV15 EQU   UCMEIL+3
UCMRTCT  EQU   UCMEIL+2
UCMRPYL  EQU   UCMEIL+1
@NM00013 EQU   UCMEIL
UCMRSV60 EQU   UCM+302
UCMRSV59 EQU   UCMRSV51
UCMRSV58 EQU   UCMRSV51
UCMRSV57 EQU   UCMRSV51
UCMRSV56 EQU   UCMRSV51
UCMRSV55 EQU   UCMRSV51
UCMRSV54 EQU   UCMRSV51
UCMRSV53 EQU   UCMRSV51
UCMRSV52 EQU   UCMRSV51
UCMRSV50 EQU   UCMRSV42
UCMRSV49 EQU   UCMRSV42
UCMRSV48 EQU   UCMRSV42
UCMRSV47 EQU   UCMRSV42
UCMRSV46 EQU   UCMRSV42
UCMRSV45 EQU   UCMRSV42
UCMRSV44 EQU   UCMRSV42
UCMRSV43 EQU   UCMRSV42
UCMJES3T EQU   UCM+296
UCMWAKUP EQU   UCM+292
UCMSWCH  EQU   UCM+284
UCMASCB  EQU   UCM+280
UCMWQECP EQU   UCM+276
UCMORECP EQU   UCM+272
UCMOECBT EQU   UCM+268
UCMOECBH EQU   UCM+264
UCMWECBT EQU   UCM+260
UCMWECBH EQU   UCM+256
UCMMBEND EQU   UCM+252
UCMCTID  EQU   UCM+250
UCMRSV61 EQU   UCM+248
UCMRP2AD EQU   UCM+244
UCMCRAAD EQU   UCM+240
UCMWQLM1 EQU   UCM+238
UCMRV001 EQU   UCM+237
UCMRQLM1 EQU   UCM+236
UCMMBPTR EQU   UCM+232
UCMMQNXT EQU   UCM+228
UCMMQEND EQU   UCM+224
UCMMQPTR EQU   UCM+220
UCMTRECB EQU   UCM+216
UCMMNECB EQU   UCM+212
UCMMNTR  EQU   UCM+208
UCMR9SV  EQU   UCM+204
UCMSAVE4 EQU   UCM+140
UCMSAVE3 EQU   UCM+84
UCMVEL   EQU   UCMVDATA+8
UCMVEZ   EQU   UCMVDATA+4
UCMVEA   EQU   UCMVDATA
UCMINCR  EQU   UCM+71
UCMMODEL EQU   UCM+70
UCMCORE  EQU   UCM+69
UCMFIX   EQU   UCMMODE
UCMMCS   EQU   UCMMODE
UCMOGCE  EQU   UCMMODE
UCMAMFA  EQU   UCMMODE
UCMRSV14 EQU   UCMMODE
UCMTPUTA EQU   UCMMODE
UCMNOCON EQU   UCMMODE
UCMRSV11 EQU   UCMMODE
UCMPXA   EQU   UCM+64
UCMWQEND EQU   UCM+60
UCMWQNR  EQU   UCM+58
UCMRQNR  EQU   UCM+56
UCMWQECB EQU   UCM+52
UCMRQECB EQU   UCM+48
UCMWQLM  EQU   UCM+46
UCMRQLM  EQU   UCM+45
@NM00012 EQU   UCMRPYI
UCMRPYQ  EQU   UCM+28
UCMWTOQ  EQU   UCM+24
UCMARECB EQU   UCM+16
UCMLECB  EQU   UCMDECB
UCMOECB  EQU   UCM+8
UCMAECB  EQU   UCM+4
UCMXECB  EQU   UCM
UCMGMCNT EQU   UCMPRFX+158
UCMSDS2  EQU   UCMPRFX+157
UCMRSV09 EQU   UCMSDS1
UCMRSV08 EQU   UCMSDS1
UCMRSV07 EQU   UCMSDS1
UCMRSV06 EQU   UCMSDS1
UCMRSV05 EQU   UCMSDS1
UCMRSV04 EQU   UCMSDS1
UCMSDS1B EQU   UCMSDS1
UCMSDS1A EQU   UCMSDS1
UCMDTINT EQU   UCMPRFX+152
UCMLOGAD EQU   UCMPRFX+148
UCMNPECB EQU   UCMPRFX+144
UCMTPPTR EQU   UCMPRFX+140
UCMDOMRT EQU   UCMPRFX+136
UCMRUTCK EQU   UCMPRFX+132
UCMQRTN  EQU   UCMPRFX+128
UCM6WD   EQU   UCMXSA+20
UCM5WD   EQU   UCMXSA+16
UCM4WD   EQU   UCMXSA+12
UCM3WD   EQU   UCMXSA+8
UCM2WD   EQU   UCMXSA+4
UCM1WD   EQU   UCMXSA
UCMRSV03 EQU   UCMPRFX+102
UCMHRDRT EQU   UCMPRFX+100
UCMXCT   EQU   UCMPRFX+96
UCMHCUCM EQU   UCMPRFX+92
UCMCMID  EQU   UCMPRFX+88
UCMOWTOR EQU   UCMPRFX+86
UCMRSV02 EQU   UCMSFLG2
UCMSYSO  EQU   UCMSFLG2
UCMSYSN  EQU   UCMSFLG2
UCMSYSM  EQU   UCMSFLG2
UCMSYSL  EQU   UCMSFLG2
UCMSYSK  EQU   UCMSFLG2
UCMSYSI  EQU   UCMSFLG2
UCMRSV35 EQU   UCMSFLG1
UCMSYSG  EQU   UCMSFLG1
UCMSYSF  EQU   UCMSFLG1
UCMSYSE  EQU   UCMSFLG1
UCMSYSD  EQU   UCMSFLG1
UCMSYSC  EQU   UCMSFLG1
UCMSYSB  EQU   UCMSFLG1
UCMRSV01 EQU   UCMSFLG1
UCMWTOX  EQU   UCMPRFX+80
UCMDOME  EQU   UCMPRFX+76
UCMSVR0  EQU   UCMSAVE0+68
UCMSVQ0  EQU   UCMSAVE0+64
UCMSVP0  EQU   UCMSAVE0+60
UCMSVO0  EQU   UCMSAVE0+56
UCMSVN0  EQU   UCMSAVE0+52
UCMSVM0  EQU   UCMSAVE0+48
UCMSVL0  EQU   UCMSAVE0+44
UCMSVK0  EQU   UCMSAVE0+40
UCMSVJ0  EQU   UCMSAVE0+36
UCMSVI0  EQU   UCMSAVE0+32
UCMSVH0  EQU   UCMSAVE0+28
UCMSVG0  EQU   UCMSAVE0+24
UCMSVF0  EQU   UCMSAVE0+20
UCMSVE0  EQU   UCMSAVE0+16
UCMSVD0  EQU   UCMSAVE0+12
UCMSVC0  EQU   UCMSAVE0+8
UCMSVB0  EQU   UCMSAVE0+4
UCMSVA0  EQU   UCMSAVE0
UCM2PAD  EQU   UCM2EXT+12
UCM2STAA EQU   UCM2STA+1
UCMRV008 EQU   UCM2SFLG
UCMRSV34 EQU   UCM2SFLG
UCMRSV33 EQU   UCM2SFLG
UCMRSV32 EQU   UCM2SFLG
UCM2DSTR EQU   UCM2SFLG
UCM2DTAK EQU   UCM2SFLG
UCM2SENT EQU   UCM2SFLG
UCM2SDWA EQU   UCM2SFLG
UCM2PST  EQU   UCM2EXT+4
UCM2RID  EQU   UCM2EXT+2
UCM2WID  EQU   UCM2EXT
PARMCLAD EQU   PARMLIST+8
PARMSYAD EQU   PARMLIST+4
PARMCTBK EQU   PARMSTAT+3
PARMSYSR EQU   PARMSTAT+2
@NM00011 EQU   PARMFLAG
@NM00010 EQU   PARMFLAG
@NM00009 EQU   PARMFLAG
PARMWARG EQU   PARMFLAG
PARMRECU EQU   PARMFLAG
PARMCWT  EQU   PARMFLAG
PARMSDWA EQU   PARMFLAG
PARMFTPT EQU   PARMSTAT
QR0WQEB  EQU   QR0WQE
CQEENDA  EQU   CQE+21
CQEEND   EQU   CQE+20
@NM00008 EQU   CQE+4
CQEMLQHC EQU   CQEFLAG
CQEATTOP EQU   CQEFLAG
@NM00007 EQU   CQEFLAG
@NM00006 EQU   CQEEOB
CQEEOQ   EQU   CQEEOB
WQERSVC7 EQU   WMNM+184
WQERSVC6 EQU   WMNM+181
WQERSVC5 EQU   WMNMST2
WQERSVC4 EQU   WMNMST2
WQERSVC3 EQU   WMNMST2
WQERSVC2 EQU   WMNMST2
WQERSVC1 EQU   WMNMST2
WQERSVB9 EQU   WMNMST2
WQERSVB8 EQU   WMNMST2
WMNMTPD2 EQU   WMNMST2
WMNMTXT2 EQU   WMNM+108
WMNMHCT2 EQU   WMNM+104
WMNMTL2  EQU   WMNM+103
WQERSV74 EQU   WMNM+102
WQERSV73 EQU   WMNMLT2
WQERSV72 EQU   WMNMLT2
WQERSV71 EQU   WMNMLT2
WQERSV70 EQU   WMNMLT2
WMNMLT2D EQU   WMNMLT2
WMNMLT2C EQU   WMNMLT2
WMNMLT2B EQU   WMNMLT2
WMNMLT2A EQU   WMNMLT2
WMNMML2H EQU   WMNMML2
WMNMML2G EQU   WMNMML2
WQERSV69 EQU   WMNMML2
WMNMML2E EQU   WMNMML2
WMNMML2D EQU   WMNMML2
WMNMML2C EQU   WMNMML2
WMNMML2B EQU   WMNMML2
WQERSV68 EQU   WMNMML2
WMNMNX2  EQU   WMNM+97
WMNMUC2  EQU   WMNM+96
WQERSVB7 EQU   WMNM+88
WQERSVB6 EQU   WMNM+85
WQERSVB5 EQU   WMNMST1
WQERSVB4 EQU   WMNMST1
WQERSVB3 EQU   WMNMST1
WQERSVB2 EQU   WMNMST1
WQERSVB1 EQU   WMNMST1
WQERSVA9 EQU   WMNMST1
WQERSVA8 EQU   WMNMST1
WMNMTPD1 EQU   WMNMST1
WMNMTXT1 EQU   WMNM+12
WMNMHCT1 EQU   WMNM+8
WMNMTL1  EQU   WMNM+7
WQERSV67 EQU   WMNM+6
WQERSV66 EQU   WMNMLT1
WQERSV65 EQU   WMNMLT1
WQERSV64 EQU   WMNMLT1
WQERSV63 EQU   WMNMLT1
WMNMLT1D EQU   WMNMLT1
WMNMLT1C EQU   WMNMLT1
WMNMLT1B EQU   WMNMLT1
WMNMLT1A EQU   WMNMLT1
WMNMML1H EQU   WMNMML1
WMNMML1G EQU   WMNMML1
WMNMML1F EQU   WMNMML1
WMNMML1E EQU   WMNMML1
WMNMML1D EQU   WMNMML1
WMNMML1C EQU   WMNMML1
WMNMML1B EQU   WMNMML1
WQERSV62 EQU   WMNMML1
WMNMNX1  EQU   WMNMEXT+1
WMNMUC1  EQU   WMNMEXT
WMJMJTCB EQU   WMJM+188
WMJMDEC4 EQU   WMJMDEC+3
WMJMDEC3 EQU   WMJMDEC+2
WQERSV61 EQU   WMJMDEC2
WQERSV60 EQU   WMJMDEC2
WQERSV59 EQU   WMJMDEC2
WQERSV58 EQU   WMJMDEC2
WQERSV57 EQU   WMJMDEC2
WQERSV56 EQU   WMJMDEC2
WMJMDECJ EQU   WMJMDEC2
WMJMDECI EQU   WMJMDEC2
WMJMDECH EQU   WMJMDEC1
WMJMDECG EQU   WMJMDEC1
WMJMDECF EQU   WMJMDEC1
WMJMDECE EQU   WMJMDEC1
WMJMDECD EQU   WMJMDEC1
WMJMDECC EQU   WMJMDEC1
WMJMDECB EQU   WMJMDEC1
WMJMDECA EQU   WMJMDEC1
WQERSV54 EQU   WMJM+181
WMJMUID  EQU   WMJM+180
WMJMRCT4 EQU   WMJMRTC+3
WMJMRCT3 EQU   WMJMRTC+2
WQERSV53 EQU   WMJMRCT2
WMJMRCTO EQU   WMJMRCT2
WMJMRCTN EQU   WMJMRCT2
WMJMRCTM EQU   WMJMRCT2
WMJMRCTL EQU   WMJMRCT2
WMJMRCTK EQU   WMJMRCT2
WMJMRCTJ EQU   WMJMRCT2
WMJMRCTI EQU   WMJMRCT2
WMJMRCTH EQU   WMJMRCT1
WMJMRCTG EQU   WMJMRCT1
WMJMRCTF EQU   WMJMRCT1
WMJMRCTE EQU   WMJMRCT1
WMJMRCTD EQU   WMJMRCT1
WMJMRCTC EQU   WMJMRCT1
WMJMRCTB EQU   WMJMRCT1
WMJMRCTA EQU   WMJMRCT1
WMJMMT2  EQU   WMJMMT+1
WQERSV52 EQU   WMJMMT1
WQERSV51 EQU   WMJMMT1
WMJMMT1F EQU   WMJMMT1
WQERSV50 EQU   WMJMMT1
WMJMMT1D EQU   WMJMMT1
WQERSVA6 EQU   WMJMMT1
WMJMMT1B EQU   WMJMMT1
WMJMMT1A EQU   WMJMMT1
WQERSV11 EQU   WMJMCS2
WQERSV49 EQU   WMJMCS2
WMJMCS2F EQU   WMJMCS2
WQERSV48 EQU   WMJMCS2
WQERSV47 EQU   WMJMCS2
WQERSV46 EQU   WMJMCS2
WMJMCS2B EQU   WMJMCS2
WMJMCS2A EQU   WMJMCS2
WMJMCS1H EQU   WMJMCS1
WMJMCS1G EQU   WMJMCS1
WMJMCS1F EQU   WMJMCS1
WMJMCS1E EQU   WMJMCS1
WMJMCS1D EQU   WMJMCS1
WMJMCS1C EQU   WMJMCS1
WMJMCS1B EQU   WMJMCS1
WMJMCS1A EQU   WMJMCS1
WMJMSEQ  EQU   WMJM+169
WMJMRTCT EQU   WMJM+168
WMJMTCB  EQU   WMJM+164
WQERSV45 EQU   WMJMBUF
WMJMBUFG EQU   WMJMBUF
WMJMBUFF EQU   WMJMBUF
WMJMBUFE EQU   WMJMBUF
WMJMBUFD EQU   WMJMBUF
WMJMBUFC EQU   WMJMBUF
WMJMBUFB EQU   WMJMBUF
WMJMBUFA EQU   WMJMBUF
WMJMASID EQU   WMJM+161
WMJMDSPH EQU   WMJMDSP
WMJMDSPG EQU   WMJMDSP
WMJMDSPF EQU   WMJMDSP
WMJMDSPE EQU   WMJMDSP
WMJMDSPD EQU   WMJMDSP
WMJMDSPC EQU   WMJMDSP
WMJMDSPB EQU   WMJMDSP
WMJMDSPA EQU   WMJMDSP
WQERSVA5 EQU   WMJM+156
WQERSVA4 EQU   WMJM+152
WQERSVD8 EQU   WMJM+149
WQERSVD7 EQU   WMJMECBF
WQERSVD6 EQU   WMJMECBF
WQERSVD5 EQU   WMJMECBF
WQERSVD4 EQU   WMJMECBF
WQERSVD3 EQU   WMJMECBF
WQERSVD2 EQU   WMJMECBF
WMJMMAJD EQU   WMJMECBF
WMJMWAIT EQU   WMJMECBF
WMJMMSGN EQU   WMJM+144
WMJMAECB EQU   WMJM+140
WMJMMIN  EQU   WMJM+136
WMJMLTY2 EQU   WMJMLTYP+1
WQERSV38 EQU   WMJMLTY1
WQERSV37 EQU   WMJMLTY1
WQERSV36 EQU   WMJMLTY1
WQERSV35 EQU   WMJMLTY1
WMJMLTYD EQU   WMJMLTY1
WMJMLTYC EQU   WMJMLTY1
WMJMLTYB EQU   WMJMLTY1
WMJMLTYA EQU   WMJMLTY1
WQERSV34 EQU   WMJM+132
WMJMCONS EQU   WMJM+124
WMJMSER2 EQU   WMJMSER+1
WQERSV33 EQU   WMJMSER1
WQERSV32 EQU   WMJMSER1
WQERSV31 EQU   WMJMSER1
WMJMSERE EQU   WMJMSER1
WMJMSERD EQU   WMJMSER1
WMJMSERC EQU   WMJMSER1
WMJMSERB EQU   WMJMSER1
WMJMSERA EQU   WMJMSER1
WQERSV30 EQU   WMJM+120
WQERSV29 EQU   WMJM+116
WMJMRESA EQU   WMJM+108
WNJNPAD3 EQU   WMJM+107
WMJMHCID EQU   WMJM+103
WMJMTXT  EQU   WMJM+31
WMJMPAD2 EQU   WMJM+30
WMJMJBNM EQU   WMJM+22
WMJMPAD1 EQU   WMJM+21
WMJMTSSS EQU   WMJMTS+6
WMJMTSP2 EQU   WMJMTS+5
WMJMTSMM EQU   WMJMTS+3
WMJMTSP1 EQU   WMJMTS+2
WMJMTSHH EQU   WMJMTS
WMJMPAD  EQU   WMJM+12
WMJMRR   EQU   WMJM+8
WMJMTXTL EQU   WMJM+6
WMJMAREA EQU   WMJM+5
WMJMMLWH EQU   WMJMMLW
WMJMMLWG EQU   WMJMMLW
WMJMMLWF EQU   WMJMMLW
WMJMMLWE EQU   WMJMMLW
WMJMMLWD EQU   WMJMMLW
WMJMMLWC EQU   WMJMMLW
WMJMMLWB EQU   WMJMMLW
WMJMMLWA EQU   WMJMMLW
WMJMNXT  EQU   WMJMEXTA
WMJMUC   EQU   WMJMEXT
WQEJSTCB EQU   WQE+188
WQERSV26 EQU   WQE+186
WQERSV25 EQU   WQEDC2
WQERSV24 EQU   WQEDC2
WQERSV23 EQU   WQEDC2
WQERSV22 EQU   WQEDC2
WQERSV21 EQU   WQEDC2
WQERSV20 EQU   WQEDC2
WQEDCJ   EQU   WQEDC2
WQEDCI   EQU   WQEDC2
WQEDCH   EQU   WQEDC1
WQEDCG   EQU   WQEDC1
WQEDCF   EQU   WQEDC1
WQEDCE   EQU   WQEDC1
WQEDCD   EQU   WQEDC1
WQEDCC   EQU   WQEDC1
WQEDCB   EQU   WQEDC1
WQEDCA   EQU   WQEDC1
WQERPYID EQU   WQE+182
WQERSV18 EQU   WQE+181
WQEUCMID EQU   WQE+180
WQERSV17 EQU   WQE+178
WQERSV16 EQU   WQEROUT2
WQEROUTO EQU   WQEROUT2
WQEROUTN EQU   WQEROUT2
WQEROUTM EQU   WQEROUT2
WQEROUTL EQU   WQEROUT2
WQEROUTK EQU   WQEROUT2
WQEROUTJ EQU   WQEROUT2
WQEROUTI EQU   WQEROUT2
WQEROUTH EQU   WQEROUT1
WQEROUTG EQU   WQEROUT1
WQEROUTF EQU   WQEROUT1
WQEROUTE EQU   WQEROUT1
WQEROUTD EQU   WQEROUT1
WQEROUTC EQU   WQEROUT1
WQEROUTB EQU   WQEROUT1
WQEROUTA EQU   WQEROUT1
WQERSV15 EQU   WQEMSGT1
WQERSV14 EQU   WQEMSGT1
WQEMSGTF EQU   WQEMSGT1
WQERSV13 EQU   WQEMSGT1
WQEMSGTD EQU   WQEMSGT1
WQEMSGTC EQU   WQEMSGT1
WQEMSGTB EQU   WQEMSGT1
WQEMSGTA EQU   WQEMSGT1
WQEMCSP  EQU   WQEMCSF2
WQEMCSO  EQU   WQEMCSF2
WQEMCSN  EQU   WQEMCSF2
WQERSV10 EQU   WQEMCSF2
WQERSV09 EQU   WQEMCSF2
WQERSV08 EQU   WQEMCSF2
WQEMCSJ  EQU   WQEMCSF2
WQEMCSI  EQU   WQEMCSF2
WQEMCSH  EQU   WQEMCSF1
WQEMCSG  EQU   WQEMCSF1
WQEMCSFF EQU   WQEMCSF1
WQEMCSE  EQU   WQEMCSF1
WQEMCSD  EQU   WQEMCSF1
WQEMCSC  EQU   WQEMCSF1
WQEMCSB  EQU   WQEMCSF1
WQEMCSA  EQU   WQEMCSF1
WQESEQN  EQU   WQE+169
WQERTCT  EQU   WQE+168
WQETCB   EQU   WQE+164
WQERSV07 EQU   WQEAVAIL
WQERSV06 EQU   WQEAVAIL
WQEBUFF  EQU   WQEAVAIL
WQEBUFE  EQU   WQEAVAIL
WQEBUFD  EQU   WQEAVAIL
WQEBUFB  EQU   WQEAVAIL
WQEBUFA  EQU   WQEAVAIL
WQEASID  EQU   WQE+161
WQEAUTH  EQU   WQEXA
WQESUSP  EQU   WQEXA
WQEWTOR  EQU   WQEXA
WQEORE   EQU   WQEXA
WQEPAD3  EQU   WQE+159
WQETXTL  EQU   WQETXT+127
@NM00005 EQU   WQETXT
WQEPAD2  EQU   WQE+30
WQEJOBNM EQU   WQE+22
WQEPAD1  EQU   WQE+21
WQETSSS  EQU   WQETS+6
WQEPER2  EQU   WQETS+5
WQETSMM  EQU   WQETS+3
WQEPER1  EQU   WQETS+2
WQETSHH  EQU   WQETS
WQEPAD   EQU   WQE+12
WQERR    EQU   WQE+8
WQENBR   EQU   WQE+4
WQELKPA  EQU   WQELKP+1
WQEUSE   EQU   WQELKP
@NM00004 EQU   FRRSFLGS+1
@NM00003 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
@NM00038 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00037 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00036 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00035 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00034 EQU   FLCFSA
@NM00033 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00032 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00031 EQU   FLCIOA
@NM00030 EQU   FLCMCLA+15
@NM00029 EQU   FLCMCLA+14
@NM00028 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00027 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00026 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00025 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00024 EQU   FLCPER
@NM00023 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00022 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00021 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00020 EQU   FLCPIILC
@NM00019 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00018 EQU   FLCSVILC
@NM00017 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00016 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00015 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00226 EQU   @RC00219
@ENDDATA EQU   *
         END   IEAVMQR0,(C'PLS2224',0701,76163)
