         TITLE 'IEAVXDOM - DOM SERVICE ROUTINE                         *
                        '
IEAVXDOM CSECT
         USING *,REG6
         MODID BR=YES
         USING RBBASIC,REG5
* SAVE THE CONTENTS OF REGS 0, 1 AND 14 SO THE CONTENTS ARENT
* LOST BY THE PL/S SET UP PROCESS.
         ST    REG0,XSREG0        SAVE 0 IN EXTENDED SAVE AREA
         ST    REG1,XSREG1        SAVE 1 ALSO
         ST    REG14,XSREG14      SAVE 14 ALSO
         DROP  REG5               DROP 5 AND 6 SO ADDRESSING IS SET
         DROP  REG6               UP BY PL/S CORRECTLY.
IEAVXDOM CSECT ,                                                01S0002
@PROLOG  BALR  @10,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@10                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         GETMAIN  R,LV=(0)
         LR    @09,@01                                          01S0002
         USING @DATD,@09                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LR    @13,@09                                          01S0002
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 200
*                                      ALLOCATION ISSUE CALL IEFAB4F5
*                                                            @Z40FPPJ*/
*                                                               01S0092
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE DUMMY DOMCB TO ALL ZEROS                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0092
*   DUMDOMCB=DUMDOMCB&&DUMDOMCB;    /* CLEAR THE 252 BYTE CHAR STRING*/
         XC    DUMDOMCB(252),DUMDOMCB                           01S0092
*   XSERRCD=ZERO;                   /* ZERO OUT ERROR CODE FIELD AND
*                                      USE AS AN ERROR INDICATOR     */
         MVI   XSERRCD(RBSECPTR),X'00'                          01S0093
*   XSCBSIZE=ZERO;                  /* ZERO SIZE OF DOMCB NEEDED     */
         SLR   @12,@12                                          01S0094
         STH   @12,XSCBSIZE(,RBSECPTR)                          01S0094
*   XSIDPTR=ADDR(DUMDOMCB);         /* INIT POINTER TO START OF DUMMY
*                                      DOMCB                         */
         LA    @11,DUMDOMCB                                     01S0095
         ST    @11,XSIDPTR(,RBSECPTR)                           01S0095
*                                                               02S0096
*/********************************************************************/
*/*                                                                  */
*/*  SETLIST SEGMENT                                                 */
*/*                                                                  */
*/*  FUNCTION - THIS SEGMENT CHECKS THAT A VALID VALUE WAS PASSED IN */
*/*  REGISTER 0 TO XDOM. IT THEN SETS UP XSREG1 AND XSPLPTR SO THAT  */
*/*  THE SINGLE ENTRY LIST AND MULTIPLE ENTRY LIST CAN BE PROCESSED  */
*/*  WITH THE SAME CODE.                                             */
*/*                                                                  */
*/*  INPUT - XSREG0 = VALUE PASSED BY THE USER IN REGISTER 0.        */
*/*          XSREG1 = VALUE PASSED BY THE USER IN REGISTER 1.        */
*/*          XSERRCD= ZERO.                                          */
*/*                                                                  */
*/*  OUTPUT- XSPLPTR = ADDR OF A LIST OF MESSAGE IDS WHOSE LAST      */
*/*                    ID HAS THE HIGH ORDER BIT ON.                 */
*/*          XSERRCD = REG0ERR IF THE VALUE IN REGISTER 0 WAS WRONG. */
*/*          XSDOMR  = YES (SET ON) IF DOM WITH REPLY IS SPECIFIED   */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0096
*   IF XSREG0=ZERO×                 /* SINGLE ID/PLAIN DOM           */
*       XSREG0=FOUR THEN            /* SINGLE ID/DOM WITH REPLY      */
         L     @11,XSREG0(,RBSECPTR)                            02S0096
         CR    @11,@12                                          02S0096
         BE    @RT00096                                         02S0096
         C     @11,@CF00058                                     02S0096
         BNE   @RF00096                                         02S0096
@RT00096 DS    0H                                               02S0097
*     DO;                           /* YES. SET UP SINGLE ID TO LOOK
*                                      LIKE A LIST OF ONE ELEMENT    */
*       XSPLPTR=ADDR(XSREG1);       /* PT AT SINGLE MESSAGE ID       */
         LA    @12,XSREG1(,RBSECPTR)                            02S0098
         ST    @12,XSPLPTR(,RBSECPTR)                           02S0098
*       XSPLPTR->DOMPEND=YES;       /* TURN ON HIGH ORDER BIT IN
*                                      XSREG1 WHICH IS NOW      02S0099
*                                      ADDRESSABLE AS DOMPL          */
         OI    DOMPEND(@12),B'10000000'                         02S0099
*     END;                                                      02S0100
*                                                               02S0100
*   /*****************************************************************/
*   /*                                                               */
*   /* SINGLE MESSAGE ID WASNT SPECIFIED CHECK FOR MESSAGE ID LIST   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0101
*   ELSE                                                        02S0101
*     IF XSREG0=TWELVE×             /* MESSAGE ID LIST/DOM WITH REPLY*/
*         XSREG0<ZERO THEN          /* MESSAGE ID LIST OF WTOS       */
         B     @RC00096                                         02S0101
@RF00096 L     @12,XSREG0(,RBSECPTR)                            02S0101
         C     @12,@CF00067                                     02S0101
         BE    @RT00101                                         02S0101
         LTR   @12,@12                                          02S0101
         BNM   @RF00101                                         02S0101
@RT00101 DS    0H                                               02S0102
*       XSPLPTR=XSREG1;             /* PT AT LIST OF IDS             */
         L     @12,XSREG1(,RBSECPTR)                            02S0102
         ST    @12,XSPLPTR(,RBSECPTR)                           02S0102
*     ELSE                          /* VALUE IN REGISTER 0 IS INVALID*/
*       XSERRCD=REG0ERR;            /* SET ERROR INDICATOR TO TYPE OF
*                                      ERROR                         */
*                                                               02S0103
         B     @RC00101                                         02S0103
@RF00101 MVI   XSERRCD(RBSECPTR),X'04'                          02S0103
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR DOM WITH REPLY SPECIFICATION                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0104
*   IF XSREG0=FOUR×XSREG0=TWELVE THEN                           02S0104
@RC00101 DS    0H                                               02S0104
@RC00096 L     @12,XSREG0(,RBSECPTR)                            02S0104
         C     @12,@CF00058                                     02S0104
         BE    @RT00104                                         02S0104
         C     @12,@CF00067                                     02S0104
         BNE   @RF00104                                         02S0104
@RT00104 DS    0H                                               02S0105
*     XSDOMR=YES;                   /* INDICATE DOM WITH REPLY       */
         OI    XSDOMR(RBSECPTR),B'10000000'                     02S0105
*   ELSE                                                        02S0106
*     XSDOMR=NO;                    /* DOM FOR WTORS WASNT SPECIFIED */
         B     @RC00104                                         02S0106
@RF00104 NI    XSDOMR(RBSECPTR),B'01111111'                     02S0106
*                                                               01S0107
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR AN ERROR IN PARM LIST. IF NO ERROR FOUND, PROCCESS  */
*   /* THE PARM LIST                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0107
*   IF XSERRCD=ZERO THEN            /* WAS NO ERROR FOUND IN PARM
*                                      LIST                          */
@RC00104 CLI   XSERRCD(RBSECPTR),0                              01S0107
         BNE   @RF00107                                         01S0107
*     DO;                           /* YES, CONTINUE PROCESSING      */
*                                                               02S0109
*/********************************************************************/
*/*                                                                  */
*/*   AUTHCHK SEGMENT                                                */
*/*                                                                  */
*/*   FUNCTION - THIS SEGMENT CHECKS THE AUTHORIZATION OF THE CALLER.*/
*/*   IF THE CALLER IS IN SUPERVISOR MODE OR PROTECT KEY 0-7 OR IS   */
*/*   APF AUTHORIZED THEN THE AUTHORIZED BIT GETS SET (XSAUTH).      */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0109
*       RFY                                                     02S0109
*         REG15 RSTD;                                           02S0109
*       GEN(TESTAUTH STATE=YES,KEY=YES,FCTN=1)                  02S0110
*       SETS(REG15);                /* CHECK IF USER IS AUTHORIZED   */
*                                                               02S0110
         TESTAUTH STATE=YES,KEY=YES,FCTN=1
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK RETURN CODE FROM TESTAUTH                           */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0111
*       IF REG15=ZERO THEN          /* IS USER AUTHORIZED            */
         LTR   REG15,REG15                                      02S0111
         BNZ   @RF00111                                         02S0111
*         XSAUTH=YES;               /* YES USER IS AUTHORIZED        */
         OI    XSAUTH(RBSECPTR),B'01000000'                     02S0112
*       ELSE                                                    02S0113
*         XSAUTH=NO;                /* NO USER ISNT                  */
         B     @RC00111                                         02S0113
@RF00111 NI    XSAUTH(RBSECPTR),B'10111111'                     02S0113
*       RFY                                                     02S0114
*         REG15 UNRSTD;                                         02S0114
@RC00111 DS    0H                                               02S0115
*       CALL SETLCKS;               /* SET THE LOCAL AND CMS LOCKS   */
         BAL   @14,SETLCKS                                      01S0115
*       STM(REG0,REG15,RECREGS);    /* SAVE THE REGS FOR A RETRY     */
         STM   REG0,REG15,RECREGS                               01S0116
*       RFY                                                     01S0117
*         REG1 RSTD;                /* DOMPLPTR IS IN REG1           */
*       DO DOMPLPTR=XSPLPTR         /* XSPLPTR WAS SET BY SETLIST    */
*             BY LENGTH(DOMPL)      /* INCREMENT PTR TO NEXT ENTRY   */
*             TO XSPLPTR+LENGTH(DOMPL)*SIXTY/* LIMIT OF SIXTY IDS    */
*             WHILE(XSERRCD=ZERO&XSENDLST=NO);/* DO           YM03618*/
*                                                               01S0118
         L     DOMPLPTR,XSPLPTR(,RBSECPTR)                      01S0118
         B     @DE00118                                         01S0118
@DL00118 CLI   XSERRCD(RBSECPTR),0                              01S0118
         BNE   @DC00118                                         01S0118
         TM    XSENDLST(RBSECPTR),B'00100000'                   01S0118
         BNZ   @DC00118                                         01S0118
*         /***********************************************************/
*         /*                                                         */
*         /* UNTIL ERROR INDICATOR IS SET OR END-OF-LIST IS REACHED  */
*         /*                                                  YM03618*/
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0119
*                                                               02S0119
*/********************************************************************/
*/*                                                                  */
*/*  SCANIDS SEGMENT                                                 */
*/*                                                                  */
*/*  FUNCTION - THIS SEGMENT COMPARES THE IDS IN THE DOM PARM LIST   */
*/*  WITH THE WQES IN THE SYSTEM. THE ID IS ACCEPTED IF THE ID IS FOR*/
*/*  A WTO AND THE WTO ISN'T IN THE SUSPENDED STATE. THE SUSPENDED   */
*/*  STATE MEANS THAT THE WQE IS ON THE QUEUE BUT SVC 35 ISNT        */
*/*  FINISHED PROCESSING IT. THE ID IS ACCEPTED IF THE WQE ISNT ON   */
*/*  THE QUEUE. THE REASON FOR THIS IS THAT THE WQE MAY BE GONE BUT  */
*/*  THE MESSAGE MAY STILL BE ON THE GRAPHICS DEVICE.                */
*/*                                                                  */
*/*  THE ID FOR A WTOR IS ACCEPTED ONLY IF THE DOM REQUEST WAS FOR   */
*/*  DOM WITH REPLY AND THE CALLER MAY DELETE THE WTOR.              */
*/*                                                                  */
*/*  INPUT - XSPLPTR = ADDR OF LIST OF MESSAGE IDS.                  */
*/*          XSERRCD = ZERO                                          */
*/*          REG 1 = ADDR OF ID TO BE CHECKED IN THIS LOOP           */
*/*          XSIDPTR = LOCATION OF LAST ID ADDED TO DUMDOMCB         */
*/*                                                                  */
*/*  OUTPUT- XSERRCD ='ENDLIST' IF THE END OF THE ID LIST WAS FOUND, */
*/*                   'LISTERR' IF AN ERROR WAS FOUND IN THE LIST.   */
*/*          XSIDPTR = ADDR OF DUMDOMCB IF NO IDS WERE ACCEPTED.     */
*/*                    EQUAL TO THE ADDRESS OF THE LAST ID ADDED     */
*/*                    TO THE LIST IF ONE OR MORE VALID IDS ARE FOUND*/
*/*          DUMDOMCB= DOMCB TO BE MOVED INTO THE REAL DOMCB.        */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0119
*         DO WQEPTR=UCMWTOQ BY ZERO WHILE(WQEPTR>ZERO&XSERRCD=ZERO);
*                                                               02S0119
         L     @12,UCMBASPT(,REG3)                              02S0119
         L     WQEPTR,UCMWTOQ(,@12)                             02S0119
         B     @DE00119                                         02S0119
@DL00119 DS    0H                                               02S0120
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR A MATCH OF IDS                              */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0120
*           IF DOMPID=WQESEQN THEN  /* DO IDS MATCH                  */
*                                                               02S0120
         CLC   DOMPID(3,DOMPLPTR),WQESEQN(WQEPTR)               02S0120
         BNE   @RF00120                                         02S0120
*             /*******************************************************/
*             /*                                                     */
*             /* YES THEY DO. CHECK IF WQE IS IN SUSPENDED STATE     */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0121
*             IF WQESUSP=NO THEN    /* IS WQE ACTIVE. PROCESS IT     */
*                                                               02S0121
         TM    WQESUSP(WQEPTR),B'00000010'                      02S0121
         BNZ   @RF00121                                         02S0121
*               /*****************************************************/
*               /*                                                   */
*               /* YES, CHECK IF THIS IS A WTOR                      */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0122
*               IF WQEORE=YES THEN  /* DOES AN ORE EXIST             */
*                                                               02S0122
         TM    WQEORE(WQEPTR),B'00100000'                       02S0122
         BNO   @RF00122                                         02S0122
*                 /***************************************************/
*                 /*                                                 */
*                 /* YES, CHECK IF THIS IS A DOM FOR WTORS           */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0123
*                 IF XSDOMR=YES THEN                            02S0123
*                                                               02S0123
         TM    XSDOMR(RBSECPTR),B'10000000'                     02S0123
         BNO   @RF00123                                         02S0123
*                   /*************************************************/
*                   /*                                               */
*                   /* YES. PROCESS THE DOMR REQUEST. SCAN THE ORES  */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0124
*                   DO;                                         02S0124
*                     DO OREPTR=UCMRPYQ BY ZERO WHILE(OREPTR^=ZERO);
*                                                               02S0125
         L     @12,UCMBASPT(,REG3)                              02S0125
         L     OREPTR,UCMRPYQ(,@12)                             02S0125
         B     @DE00125                                         02S0125
@DL00125 DS    0H                                               02S0126
*                       /*********************************************/
*                       /*                                           */
*                       /* NOW CHECK IF THE ORE IS FOR THE WQE       */
*                       /*                                           */
*                       /*********************************************/
*                                                               02S0126
*                       IF OREID=WQERPYID/* DO IDS MATCH AND IS ORE  */
*                           &OREBUFC=NO THEN/* NOT DELETED ALREADY   */
*                                                               02S0126
         CLC   OREID(2,OREPTR),WQERPYID(WQEPTR)                 02S0126
         BNE   @RF00126                                         02S0126
         TM    OREBUFC(OREPTR),B'00100000'                      02S0126
         BNZ   @RF00126                                         02S0126
*                         /*******************************************/
*                         /*                                         */
*                         /* IF THE ORE WAS DELETED (OREBUFC SET ON) */
*                         /* BY ANOTHER DOM, WE DONT GO THRU THE SAME*/
*                         /* PROCESSING OVER AGAIN. NOW CHECK IF THE */
*                         /* CALLER COULD DELETE THE WTOR            */
*                         /*                                         */
*                         /*******************************************/
*                                                               02S0127
*                         IF XSAUTH=YES×/* IS CALLER AUTHORIZED OR   */
*                             ASCBASID=OREASID/* IS CALLER IN THE
*                                      SAME                          */
*                             &TCBJSTCB=WQEJSTCB/* MEMORY AND JOB
*                                      STEP                          */
*                           THEN                                02S0127
         TM    XSAUTH(RBSECPTR),B'01000000'                     02S0127
         BO    @RT00127                                         02S0127
         LH    @12,ASCBASID(,REG7)                              02S0127
         N     @12,@CF02774                                     02S0127
         CH    @12,OREASID(,OREPTR)                             02S0127
         BNE   @RF00127                                         02S0127
         CLC   TCBJSTCB(4,REG4),WQEJSTCB(WQEPTR)                02S0127
         BNE   @RF00127                                         02S0127
@RT00127 DS    0H                                               02S0128
*                           DO;     /* YES, MOVE ID INTO DUMMY CB    */
*                                                               02S0128
*                             /***************************************/
*                             /*                                     */
*                             /* INCR XSIDPTR TO NEXT AVAILABLE SLOT */
*                             /*                                     */
*                             /***************************************/
*                                                               02S0129
*                             XSIDPTR=XSIDPTR+LENGTH(DDID);     02S0129
         LA    @12,4                                            02S0129
         AL    @12,XSIDPTR(,RBSECPTR)                           02S0129
         ST    @12,XSIDPTR(,RBSECPTR)                           02S0129
*                             DDIDID=DOMPID;/* MOVE IN THE MESSAGE ID*/
         MVC   DDIDID(3,@12),DOMPID(DOMPLPTR)                   02S0130
*                             OREBUFC=YES;/* MARK ORE AS DELETED     */
         OI    OREBUFC(OREPTR),B'00100000'                      02S0131
*                             OREPTR=ZERO;/* GET OUT OF THE LOOP     */
         SLR   OREPTR,OREPTR                                    02S0132
*                           END;                                02S0133
*                         ELSE      /* USER COULDNT DELETE WTOR      */
*                           DO;                                 02S0134
         B     @RC00127                                         02S0134
@RF00127 DS    0H                                               02S0135
*                             OREPTR=ZERO;/* GET OUT OF THE LOOP     */
         SLR   OREPTR,OREPTR                                    02S0135
*                             XSERRCD=IDERROR;/* SET ABEND CONDITION
*                                      CODE                          */
         MVI   XSERRCD(RBSECPTR),X'08'                          02S0136
*                           END;                                02S0137
*                       ELSE        /* IDS DONT MATCH OR ORE DELETED.
*                                      SKIP THE ORE                  */
*                         OREPTR=ORELKP;/* POINT AT NEXT ORE ON CHAIN*/
         B     @RC00126                                         02S0138
@RF00126 L     OREPTR,ORELKP(,OREPTR)                           02S0138
*                     END;          /* OF LOOP THRU ORES             */
*                                                               02S0139
@RC00126 DS    0H                                               02S0139
@DE00125 LTR   OREPTR,OREPTR                                    02S0139
         BNZ   @DL00125                                         02S0139
*                     /***********************************************/
*                     /*                                             */
*                     /* WE REACHED THE END OF THE ORE LOOP. MAKE    */
*                     /* SURE WE GET OUT OF THE WQE LOOP. SET END OF */
*                     /* LOOP INDICATOR SUCH THAT THIS MESSAGE ID    */
*                     /* WILL NOT GET MOVED INTO THE DUMMY DOMCB     */
*                     /*                                             */
*                     /***********************************************/
*                                                               02S0140
*                     WQEPTR=-ONE;  /* SET EXIT WQE LOOP CONDITION   */
         SLR   WQEPTR,WQEPTR                                    02S0140
         BCTR  WQEPTR,0                                         02S0140
*                   END;                                        02S0141
*                 ELSE              /* WTOR BUT NOT A DOM WITH REPLY */
*                   WQEPTR=-ONE;    /* IGNORE THE MESSAGE ID. EXIT
*                                      LOOP                          */
         B     @RC00123                                         02S0142
@RF00123 SLR   WQEPTR,WQEPTR                                    02S0142
         BCTR  WQEPTR,0                                         02S0142
*               ELSE                /* THE WQE IS NOT FOR A WTOR     */
*                                                               02S0143
*                 /***************************************************/
*                 /*                                                 */
*                 /* MOVE ID INTO DUMMY DOMCB                        */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0143
*                 DO;               /* YES, CALLER CAN DELETE MSG    */
         B     @RC00122                                         02S0143
@RF00122 DS    0H                                               02S0144
*                   WQEPTR=-ONE;    /* GET OUT OF WQE LOOP           */
         SLR   WQEPTR,WQEPTR                                    02S0144
         BCTR  WQEPTR,0                                         02S0144
*                   XSIDPTR=XSIDPTR+LENGTH(DDID);/* INCR TO NEXT ID
*                                      SLOT                          */
         LA    @12,4                                            02S0145
         AL    @12,XSIDPTR(,RBSECPTR)                           02S0145
         ST    @12,XSIDPTR(,RBSECPTR)                           02S0145
*                   DDIDID=DOMPID;  /* MOVE IN THE MESSAGE ID        */
         MVC   DDIDID(3,@12),DOMPID(DOMPLPTR)                   02S0146
*                 END;                                          02S0147
*             ELSE                  /* THE WQE IS SUSPENDED          */
*               WQEPTR=-ONE;        /* GET OUT OF THE LOOP           */
         B     @RC00121                                         02S0148
@RF00121 SLR   WQEPTR,WQEPTR                                    02S0148
         BCTR  WQEPTR,0                                         02S0148
*           ELSE                    /* THE IDS DONT MATCH            */
*             WQEPTR=WQELKPA;       /* POINT TO NEXT WQE             */
         B     @RC00120                                         02S0149
@RF00120 L     @12,WQELKPA-1(,WQEPTR)                           02S0149
         LA    @12,0(,@12)                                      02S0149
         LR    WQEPTR,@12                                       02S0149
*         END;                      /* OF WQE LOOP                   */
*                                                               02S0150
@RC00120 DS    0H                                               02S0150
@DE00119 LTR   WQEPTR,WQEPTR                                    02S0150
         BNP   @DC00119                                         02S0150
         CLI   XSERRCD(RBSECPTR),0                              02S0150
         BE    @DL00119                                         02S0150
@DC00119 DS    0H                                               02S0151
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK IF WE GOT OUT OF THE LOOP WITH WQEPTR SET TO ZERO,*/
*         /* IF SO THEN WE DIDNT FIND A MATCH AND NEED TO TAKE THE ID*/
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0151
*         IF WQEPTR=ZERO THEN                                   02S0151
         LTR   WQEPTR,WQEPTR                                    02S0151
         BNZ   @RF00151                                         02S0151
*           DO;                     /* NO MATCH WAS FOUND            */
*             XSIDPTR=XSIDPTR+LENGTH(DDID);/* INCR PTR TO NEXT ID
*                                      SLOT                          */
         LA    @12,4                                            02S0153
         AL    @12,XSIDPTR(,RBSECPTR)                           02S0153
         ST    @12,XSIDPTR(,RBSECPTR)                           02S0153
*             DDIDID=DOMPID;        /* MOVE IN THE MESSAGE ID        */
         MVC   DDIDID(3,@12),DOMPID(DOMPLPTR)                   02S0154
*           END;                                                02S0155
*                                                               02S0155
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK IF THIS IS THE LAST MESSAGE ID IN THE DOM         */
*         /* PARAMETER LIST. IF SO GET OUT OF SCAN ID LOOP           */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0156
*         IF DOMPEND=YES THEN       /* IF END BIT IS ON              */
@RF00151 TM    DOMPEND(DOMPLPTR),B'10000000'                    02S0156
         BNO   @RF00156                                         02S0156
*           XSENDLST=YES;           /* INDICATE END OF LIST WAS FOUND*/
         OI    XSENDLST(RBSECPTR),B'00100000'                   02S0157
*                                                               01S0158
*         /***********************************************************/
*         /*                                                         */
*         /* PUT IN FOOTPRINTS FOR INCREMENTING THRU USERS ID LIST   */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0158
*         PARMFTPT=FTIDSCAN;        /* SHOW WE WERE SCANNING IDS AT
*                                      ERROR                         */
@RF00156 L     @12,PARMPTR                                      01S0158
         MVI   PARMFTPT(@12),X'02'                              01S0158
*         PARMRTAD=ADDR(XDOMLAB1);  /* RETRY BY SETTING ERROR CODE   */
         LA    @11,XDOMLAB1                                     01S0159
         ST    @11,PARMRTAD(,@12)                               01S0159
*       END;                        /* OF LOOP THRU IDS              */
         AL    DOMPLPTR,@CF00058                                01S0160
@DE00118 LA    @12,240                                          01S0160
         AL    @12,XSPLPTR(,RBSECPTR)                           01S0160
         CR    DOMPLPTR,@12                                     01S0160
         BNH   @DL00118                                         01S0160
@DC00118 DS    0H                                               01S0161
*       RFY                                                     01S0161
*         REG1 UNRSTD;              /* DOMPLPTR NO LONGER NEEDED. THE
*                                      LIST OF IDS HAS BEEN SCANED.  */
*                                                               01S0161
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK IF EXIT FROM LOOP WAS DUE TO ERROR OR END OF LIST   */
*       /* BEING FOUND                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0162
*XDOMLAB2:                                                      01S0162
*       PARMRTAD=ZERO;              /* CLEAR RETRY ADDR              */
XDOMLAB2 L     @12,PARMPTR                                      01S0162
         SLR   @11,@11                                          01S0162
         ST    @11,PARMRTAD(,@12)                               01S0162
*       IF XSENDLST=YES             /* DID WE FIND THE END OF PARM
*                                      LIST                          */
*           ×XSERRCD=ZERO THEN      /* OR NO ERROR WAS FOUND IN THE
*                                      ID LIST OF SIXTY IDS.         */
         TM    XSENDLST(RBSECPTR),B'00100000'                   01S0163
         BO    @RT00163                                         01S0163
         CLI   XSERRCD(RBSECPTR),0                              01S0163
         BNE   @RF00163                                         01S0163
@RT00163 DS    0H                                               01S0164
*         DO;                       /* YES. CONTINUE BUILDING THE
*                                      DOMCB                         */
*                                                               01S0164
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK IF WE HAVE ANY IDS TO HANDLE                    */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0165
*           IF XSIDPTR^=ADDR(DUMDOMCB) THEN/* DID WE PUT IN ANY IDS  */
         L     @12,XSIDPTR(,RBSECPTR)                           01S0165
         LA    @11,DUMDOMCB                                     01S0165
         CR    @12,@11                                          01S0165
         BE    @RF00165                                         01S0165
*             DO;                   /* YES. GET REAL DOMCB           */
*               RFY                                             01S0167
*                 REG1 RSTD;        /* REG1 WILL POINT AT THE DOMCB  */
*                                                               02S0168
*/********************************************************************/
*/*                                                                  */
*/*   GETDOMCB SEGMENT                                               */
*/*                                                                  */
*/*   FUNCTION - THIS SETMENT GETS THE CORE FOR THE DOM CONTROL      */
*/*   BLOCK FROM SUBPOOL 231. COMPUTE SIZE OF DOMCB.                 */
*/*                                                                  */
*/*   INPUT - XSIDPTR IS THE ADDRESS OF THE LAST ID USED IN THE      */
*/*           DUMMY DOMCB                                            */
*/*                                                                  */
*/*   OUTPUT - REG1 CONTAINS THE ADDRESS OF THE DOMCB                */
*/*            XSCBSIZE IS THE SIZE OBTAINED BY GETMAIN              */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0168
*               XSCBSIZE=XSIDPTR    /* LOCATION OF LAST USED ID      */
*                   -ADDR(DUMDOMCB) /* NUMBER OF BYTES IN DUMMY DOMCB
*                                      UP TO LAST USED ID FIELD      */
*                   +LENGTH(DDIDPART);/* ADD NUMBER OF BYTES FOR LAST
*                                      ID, ASID, SIZE AND JSTCB 02S0168
*                                      FIELDS                        */
*                                                               02S0168
         SLR   @12,@11                                          02S0168
         AL    @12,@CF00067                                     02S0168
         STH   @12,XSCBSIZE(,RBSECPTR)                          02S0168
*               /*****************************************************/
*               /*                                                   */
*               /* GET THE DOMCB                                     */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0169
*               DO;                 /* GETMAIN (R)              02S0169
*                                      LV(XSCBSIZE)SP(SUBPL231) 02S0169
*                                      BRANCH                        */
*                 RESPECIFY                                     02S0170
*                  (GPR01F,                                     02S0170
*                   GPR00F) RESTRICTED;                         02S0170
*                 GPR00F=XSCBSIZE;  /* LENGTH REQUESTED              */
         LR    GPR00F,@12                                       02S0171
*                 GPR01F=SUBPL231;  /* SP IN REG 1                   */
         LA    GPR01F,231                                       02S0172
*                 GEN(SLL   GPR01F,24)                          02S0173
*                 NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;  02S0173
         SLL   GPR01F,24
*                 GPR00F=GPR00F×GPR01F;/* SP IN HIGH BYTE            */
         OR    GPR00F,GPR01F                                    02S0174
*                 GPR01F=-1;        /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                    02S0175
         BCTR  GPR01F,0                                         02S0175
*                 CALL CVTRMBR;     /* BRANCH ENTRY POINT            */
         L     @15,CVTRMBR(,REG3)                               02S0176
         BALR  @14,@15                                          02S0176
*                 RESPECIFY                                     02S0177
*                  (GPR01F,                                     02S0177
*                   GPR00F) UNRESTRICTED;                       02S0177
*               END;                /* GETMAIN (R)              02S0178
*                                      LV(XSCBSIZE)SP(SUBPL231) 02S0178
*                                      BRANCH                        */
*                                                               02S0179
*/********************************************************************/
*/*                                                                  */
*/*   FILLDOM - SEGMENT                                              */
*/*                                                                  */
*/*   FUNCTION - THIS SEGMENT WILL FINISH FILLING IN THE DUMMY DOMCB */
*/*   AND THEN WILL MOVE THE DUMMY DOMCB INTO THE DOMCB. THE         */
*/*   DOMCB IS THEN PUT ON THE DOM CHAIN.                            */
*/*   INPUT - XSCBSIZE = SIZE OF DOMCB                               */
*/*           REG1 = ADDR OF DOMCB                                   */
*/*           XSIDPTR = ADDR OF LAST ID IN DUMMY DOMCB               */
*/*           UCMDOME = PTR TO DOMCB CHAIN                           */
*/*   OUTPUT - A COMPLETED DOMCB IS ADDED TO THE CHAIN               */
*/********************************************************************/
*                                                               02S0179
*               DDIDEND=YES;        /* INDICATE LAST ID IN DOMCB     */
         L     @12,XSIDPTR(,RBSECPTR)                           02S0179
         OI    DDIDEND(@12),B'10000000'                         02S0179
*               DDIDASID=ASCBASID;  /* MOVE CALLER'S ASID            */
         MVC   DDIDASID(2,@12),ASCBASID(REG7)                   02S0180
*               DDIDSIZE=XSCBSIZE;  /* MOVE IN SIZE OF CONTROL BLOCK */
         LH    @11,XSCBSIZE(,RBSECPTR)                          02S0181
         STC   @11,DDIDSIZE(,@12)                               02S0181
*               DDIDJTCB=TCBJSTCB;  /* MOVE IN JOB STEP'S TCB ADDR   */
*                                                               02S0182
         MVC   DDIDJTCB(4,@12),TCBJSTCB(REG4)                   02S0182
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK IF THIS IS A DOM WITH REPLY REQUEST         */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0183
*               IF XSDOMR=YES THEN  /* DOMR SPECIFIED                */
         TM    XSDOMR(RBSECPTR),B'10000000'                     02S0183
         BNO   @RF00183                                         02S0183
*                 DDWR=YES;         /* YES. SET DOMR BIT IN DOMCB    */
*                                                               02S0184
         OI    DDWR,B'00000100'                                 02S0184
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR AN AUTHORIZED USER. IF SO SET AUTHORIZED*/
*               /* USER BIT IN THE DUMMY DOMCB                       */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0185
*               IF XSAUTH=YES THEN  /* WAS USER FOUND TO BE     02S0185
*                                      AUTHORIZED                    */
@RF00183 TM    XSAUTH(RBSECPTR),B'01000000'                     02S0185
         BNO   @RF00185                                         02S0185
*                 DDATHR=YES;       /* YES. SET AUTHORIZED BIT ON.
*                                      BIT IS SET OFF BY        02S0186
*                                      INITIALIZATION OF THE DUMMY
*                                      DOMCB.                        */
*                                                               02S0186
         OI    DDATHR,B'00010000'                               02S0186
*               /*****************************************************/
*               /*                                                   */
*               /* DUMMY DOMCB IS FILLED IN. MOVE IT TO DOMCB        */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0187
*               REG1->MOVEDOMC(1:XSCBSIZE)=ADDR(DUMDOMCB)->MOVEDOMC(1:
*                   XSCBSIZE);                                  02S0187
*                                                               02S0187
@RF00185 LH    @12,XSCBSIZE(,RBSECPTR)                          02S0187
         BCTR  @12,0                                            02S0187
         LA    @11,DUMDOMCB                                     02S0187
         EX    @12,@SM02778                                     02S0187
*               /*****************************************************/
*               /*                                                   */
*               /* NOW PUT THE DOMCB ON THE CHAIN                    */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0188
*               REG1->DOMCLNKA=UCMDOME;/* PT NEW DOMCB AT FIRST DOMCB
*                                      ON THE CHAIN                  */
         L     @12,UCMBASPT(,REG3)                              02S0188
         AL    @12,@CF02780                                     02S0188
         L     @12,UCMMCSPT(,@12)                               02S0188
         MVC   DOMCLNKA(3,REG1),UCMDOME+1(@12)                  02S0188
*               UCMDOME=REG1;       /* PT HEAD OF CHAIN AT NEW DOMCB */
         ST    REG1,UCMDOME(,@12)                               02S0189
*               RFY                                             01S0190
*                 REG1 UNRSTD;                                  01S0190
*             END;                                              01S0191
*         END;                      /* OF END OF ID LIST FOUND TEST  */
@RF00165 DS    0H                                               01S0193
*       CALL FRELCKS;               /* FREE THE CMS AND LOCAL LOCKS  */
@RF00163 BAL   @14,FRELCKS                                      01S0193
*     END;                          /* NO ERROR FOUND IN PARM LIST   */
*                                                               01S0194
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF A DOMCB WAS BUILT. IF SO POST COMM TASK AND PASS THE */
*   /* DUMMY DOMCB TO THE SUBSYSTEM                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0195
*   IF XSCBSIZE^=ZERO THEN          /* THE SIZE WAS NON ZERO SO A
*                                      DOMCB WAS BUILT               */
@RF00107 LH    @12,XSCBSIZE(,RBSECPTR)                          01S0195
         LTR   @12,@12                                          01S0195
         BZ    @RF00195                                         01S0195
*     DO;                                                       01S0196
*       REG12=REG13;                /* SAVE REG13 AROUND POST   01S0197
*                                                            @ZA03242*/
         LR    REG12,REG13                                      01S0197
*       CALL POSTDECB;              /* ISSUE XMPOST FOR UCMDECB 01S0198
*                                                            @ZA03242*/
         BAL   @14,POSTDECB                                     01S0198
*       REG13=REG12;                /* RESTORE REG13 CONTENTS   01S0199
*                                                            @ZA03242*/
         LR    REG13,REG12                                      01S0199
*                                                               02S0200
*/********************************************************************/
*/*                                                                  */
*/*   SUBEXIT SEGMENT                                                */
*/*                                                                  */
*/*   FUNCTION - THIS SEGMENT WILL BUILD THE SUBSYSTEM INTERFACE     */
*/*   CONTROL BLOCKS AND WILL PASS THE SUBSYSTEM A COPY OF           */
*/*   THE DOMCB JUST BUILT.                                          */
*/*                                                                  */
*/*   INPUT - DUMDOMCB IS THE COPY OF THE DOMCB PUT INTO THE SYSTEM. */
*/*                                                                  */
*/*   OUTPUT - THE SUBSYSTEM EXIT IS CALLED.                         */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0200
*       /*************************************************************/
*       /*                                                           */
*       /* FILL IN THE SSOB                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0200
*       SSOBID=NAMESSOB;            /* PUT IN SSOB IDENTIFIER  Y02757*/
         MVC   SSOBID(4,RBSECPTR),@CC00059                      02S0200
*       SSOBLEN=LENGTH(SSOB);       /* FILL IN LENGTH FIELD    Y02757*/
         MVC   SSOBLEN(2,RBSECPTR),@CH01158                     02S0201
*       SSOBFUNC=SSOBDOM;           /* INDICATE DELETE OPER MSG EXIT
*                                                              Y02757*/
         MVC   SSOBFUNC(2,RBSECPTR),@CH00752                    02S0202
*       SSOBSSIB=ZERO;              /* NO SSIB                 Y02757*/
         SLR   @12,@12                                          02S0203
         ST    @12,SSOBSSIB(,RBSECPTR)                          02S0203
*       SSOBINDV=ADDR(SSDM);        /* POINT AT DOM PART       Y02757*/
*                                                               02S0204
         LA    @12,SSDM(,RBSECPTR)                              02S0204
         ST    @12,SSOBINDV(,RBSECPTR)                          02S0204
*       /*************************************************************/
*       /*                                                           */
*       /* FILL IN THE SSDM                                    Y02757*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0205
*       SSDMLEN=LENGTH(SSDM);       /* FILL IN LENGTH OF SSDM  Y02757*/
         MVC   SSDMLEN(2,RBSECPTR),@CH00065                     02S0205
*       SSDMDMCB=ADDR(DUMDOMCB);    /* PT AT THE DOMCB FOR THE  02S0206
*                                      SUBSYSTEM EXIT          Y02757*/
*                                                               02S0206
         LA    @12,DUMDOMCB                                     02S0206
         ST    @12,SSDMDMCB(,RBSECPTR)                          02S0206
*       /*************************************************************/
*       /*                                                           */
*       /* ? IEFSSREQ (SSOB);                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0207
*/*                                                                  */
*/*  PASS CONTROL TO JOB ENTRY SUBSYSTEM TO                          */
*/*  PROCESS REQUEST -                                               */
*/*                                                                  */
*/*    INPUT - REGISTER 1 POINTS TO A ONE-                           */
*/*            WORD PARAMETER LIST WHICH                             */
*/*            POINTS TO THE SSOB                                    */
*/*                                                                  */
*                                                               02S0207
*       CALL SSREQ(SSOB);           /* CALL THE SUBSYSTEM Y02757     */
         LA    @12,SSOB(,RBSECPTR)                              02S0207
         ST    @12,@AL00001                                     02S0207
         MVI   @AL00001,X'80'                                   02S0207
         L     @12,CVTJESCT(,REG3)                              02S0207
         L     @15,JESSSREQ(,@12)                               02S0207
         LA    @01,@AL00001                                     02S0207
         BALR  @14,@15                                          02S0207
*     END;                                                      01S0208
*                                                               01S0208
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR AN ABEND ERROR SITUATION                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0209
*   IF XSERRCD^=ZERO THEN           /* IS ERROR CODE SET             */
@RF00195 CLI   XSERRCD(RBSECPTR),0                              01S0209
         BE    @RF00209                                         01S0209
*     DO;                           /* ABEND THE USER                */
*       RFY                                                     01S0211
*        (REG1,                                                 01S0211
*         REG15) RSTD;              /* USED FOR REASON AND ABEND CODE*/
*       REG15=XSERRCD;              /* FILL IN THE REASON CODE       */
         SLR   REG15,REG15                                      01S0212
         IC    REG15,XSERRCD(,RBSECPTR)                         01S0212
*       REG1=ABENDCOD;              /* PICK UP ABEND CODE OF 157     */
         LA    REG1,343                                         01S0213
*       GEN(ABEND (1),DUMP,,SYSTEM);/* ABEND USER WITH CODE 157      */
         ABEND (1),DUMP,,SYSTEM
*       RFY                                                     01S0215
*        (REG1,                                                 01S0215
*         REG15) UNRSTD;            /* RELEASE REG 1 AND 15          */
*     END;                                                      01S0216
*   RETURN TO RETURNPT;             /* RETURNPT IS BASED ON ADDR THE
*                                      CALLER SUPPLIED IN REG 14     */
@RF00209 L     @12,XSREG14(,RBSECPTR)                           01S0217
         L     @13,4(,@13)                                      01S0217
         L     @00,@SIZDATD                                     01S0217
         LR    @01,@09                                          01S0217
         FREEMAIN R,LV=(0),A=(1)
         LR    @14,@12                                          01S0217
         BR    @14                                              01S0217
*/********************************************************************/
*/* POSTDECB - THIS ROUTINE SETS UP THE INTERFACE NECESSARY  @ZA03242*/
*/*            TO BRANCH ENTER XMPOST WITH AN INDICATOR SET  @ZA03242*/
*/*            TO RUN THE ERRET ROUTINE IN THE MASTER        @ZA03242*/
*/*            SCHEDULER ADDRESS SPACE.                      @ZA03242*/
*/********************************************************************/
*                                                               01S0218
*POSTDECB:                                                      01S0218
*   PROC OPTIONS(SAVE);             /* XMPOST PROC           @ZA03242*/
POSTDECB STM   @14,@12,@SA00002                                 01S0218
*   RFY                                                         01S0219
*    (REG9,                                                     01S0219
*     REG11,                                                    01S0219
*     REG12,                                                    01S0219
*     REG13,                                                    01S0219
*     REG15) RSTD;                  /*                       @ZA03242*/
*   REG15=CVT0PT01;                 /* GET ENTRY POINT ADDRESS FOR
*                                      BRANCH ENTRY TO XMPOST   01S0220
*                                                            @ZA03242*/
         L     REG15,CVT0PT01(,REG3)                            01S0220
*   REG11=ADDR(UCMDECB);            /* POST THE DOM ECB      @ZA03242*/
         L     @14,UCMBASPT(,REG3)                              01S0221
         LA    REG11,UCMDECB(,@14)                              01S0221
*   REG11=REG11×'80000000'X;        /* END OF ECBLIST        @ZA03242*/
         L     @02,@CF02754                                     01S0222
         OR    REG11,@02                                        01S0222
*   REG12=UCMWAKUP;                 /* ERROR ROUTINE ADDRESS TO GET
*                                      CONTROL IF XMPOST FAILS  01S0223
*                                                            @ZA03242*/
         L     REG12,UCMWAKUP(,@14)                             01S0223
*   REG12=REG12×'80000000'X;        /* SHOW ERRET IS TO RUN IN MASTER
*                                      SCHEDULER ADDRESS SPACE  01S0224
*                                                            @ZA03242*/
         OR    REG12,@02                                        01S0224
*   REG13=UCMASCB;                  /* ASCB ADDR FOR XMPOST  @ZA03242*/
         L     REG13,UCMASCB(,@14)                              01S0225
*   REG10=0;                        /* COMPLETION CODE USED TO POST
*                                      THE ECB               @ZA03242*/
         SLR   REG10,REG10                                      01S0226
*   GEN(BALR REG14,REG15);          /* BRANCH ENTER XMPOST   @ZA03242*/
         BALR REG14,REG15
*   RFY                                                         01S0228
*    (REG9,                                                     01S0228
*     REG11,                                                    01S0228
*     REG12,                                                    01S0228
*     REG13) UNRSTD;                /*                       @ZA03242*/
*   RETURN;                         /* RETURN TO MAINLINE    @ZA03242*/
@EL00002 DS    0H                                               01S0229
@EF00002 DS    0H                                               01S0229
@ER00002 LM    @14,@12,@SA00002                                 01S0229
         BR    @14                                              01S0229
*   END POSTDECB;                                               01S0230
*                                                               01S0230
*   /*****************************************************************/
*   /*                                                               */
*   /* THE NEXT CODE WILL GET CONTROL ASYNCRONOUSLY IF AN ERROR WAS  */
*   /* ENCOUNTERED WHILE ACCESSING THE USERS ID LIST                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0231
*XDOMLAB1:                          /* RETRY ADDR IF ERROR IN ID LIST*/
*   XSERRCD=IDERROR;                /* SHOW ID LIST CAUSED ERROR     */
XDOMLAB1 MVI   XSERRCD(RBSECPTR),X'08'                          01S0231
*   GO TO XDOMLAB2;                 /* GO BACK AND ABEND USER        */
         B     XDOMLAB2                                         01S0232
*                                                               02S0233
*/********************************************************************/
*/*                                                                  */
*/*  SETLCKS SEGMENT                                                 */
*/*                                                                  */
*/*  FUNCTION: THIS SEGMENT WILL OBTAIN THE LOCAL AND CMS LOCKS.     */
*/*  THE SETLOCK ROUTINE DESTROYS REGISTERS 11 TO 14. REG 13 WILL BE */
*/*  SAVED AND RESTORED. REGISTERS 11 AND 12 SHOULD NOT BE USED AS   */
*/*  GLOBAL PTRS.                                                    */
*/*                                                                  */
*/*  INPUT - NONE                                                    */
*/*                                                                  */
*/*  OUTPUT- NONE                                                    */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0233
*SETLCKS:                                                       02S0233
*   PROC OPTIONS(NOSAVEAREA);                                   02S0233
SETLCKS  STM   @14,@12,12(@13)                                  02S0233
*   RFY                                                         02S0234
*     REG0 RSTD;                    /* REG0 WILL HOLD REG13    Y02751*/
*   REG0=REG13;                     /* SAVE PTR TO SAVEAREA    Y02751*/
         LR    REG0,REG13                                       02S0235
*   GENERATE REFS(PSALITA,FLC) SETS(REG11,REG12,REG13,REG14);   02S0236
*                                                          /*  Y02751*/
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X
               RELATED=(UCM,IEAVXDOM(FRELCKS))
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          X
               RELATED=(UCM,IEAVXDOM(FRELCKS))
*   REG13=REG0;                     /* RESTORE SAVEAREA PTR    Y02751*/
         LR    REG13,REG0                                       02S0237
*   GEN( LM REG14,REG12,12(REG13)); /* RESET REGS FROM STORAGE  02S0238
*                                      LOCATION USED BY PROC PROLOG. */
*                                                               02S0238
          LM REG14,REG12,12(REG13)
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW SET UP THE FRR PROTECTION FOR THIS MODULE                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0239
*   RFY                                                         02S0239
*     REG1 RSTD;                                                02S0239
*   REG1=UCMFRRAD;                  /* ADDR OF FRR ROUTINE           */
         L     @14,UCMBASPT(,REG3)                              02S0240
         L     REG1,UCMFRRAD(,@14)                              02S0240
*   GEN REFS(PSACSTK,FRRSCURR,FRRSLAST,PSALSFCC,FRRSENTR,FRRSELEN,
*       FRRSFRRA,FRRSPARM);                                     02S0241
        SETFRR A,FRRAD=(REG1),PARMAD=PARMPTR,WRKREGS=(REG11,REG12)
*   PARMRGAD=ADDR(RECSAVE);         /* LOAD ADDR OF REGISTER SAVE
*                                      AREA                          */
         L     @14,PARMPTR                                      02S0242
         LA    @12,RECSAVE                                      02S0242
         ST    @12,PARMRGAD(,@14)                               02S0242
*   RECRGMAP=ALLREGS;               /* SET REGISTER INDICATOR        */
         MVC   RECRGMAP(2),@CB00182                             02S0243
*   PARMID=MODULEID;                /* IDENTIFY THE MODULE           */
         MVC   PARMID(4,@14),@CC00187                           02S0244
*   RFY                                                         02S0245
*    (REG0,                                                     02S0245
*     REG1) UNRSTD;                 /*                         Y02751*/
*   END;                                                        02S0246
@EL00003 DS    0H                                               02S0246
@EF00003 DS    0H                                               02S0246
@ER00003 LM    @14,@12,12(@13)                                  02S0246
         BR    @14                                              02S0246
*                                                               02S0247
*/********************************************************************/
*/*                                                                  */
*/*  FRELCKS SEGMENT                                                 */
*/*                                                                  */
*/*  FUNCTION: THIS SEGMENT WILL FREE THE CMS AND LOCAL LOCKS, THE   */
*/*  SETLOCK ROUTINE WILL DESTROY REGISTERS 11 THRU 14 SO REG13 IS   */
*/*  SAVED ACROSS THE SETLOCK                                        */
*/*                                                                  */
*/*  INPUT - NONE                                                    */
*/*                                                                  */
*/*  OUTPUT - NONE                                                   */
*/*                                                                  */
*/********************************************************************/
*                                                               02S0247
*FRELCKS:                                                       02S0247
*   PROC OPTIONS(NOSAVEAREA);                                   02S0247
FRELCKS  STM   @14,@12,12(@13)                                  02S0247
*   RFY                                                         02S0248
*     REG0 RSTD;                    /* REG0 WILL BE USED TO HOLD
*                                      SAVEAREA PTR            Y02751*/
*   REG0=REG13;                     /* SAVEAREA PTR GOES IN REG0
*                                                              Y02751*/
         LR    REG0,REG13                                       02S0249
*   GEN( SETFRR D,WRKREGS=(REG11,REG12))                        02S0250
*   REFS(FRRSEMP);                  /* FREE THE FRR. USE 11-12 AS
*                                      WRKREGS                       */
          SETFRR D,WRKREGS=(REG11,REG12)
*   GENERATE REFS(PSALITA,FLC) SETS(REG11,REG12,REG13,REG14);   02S0251
*                                                           /* Y02751*/
         SETLOCK  RELEASE,TYPE=CMS,RELATED=(UCM,IEAVXDOM(SETLCKS))
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=(UCM,IEAVXDOM(SETLCKS))
*   REG13=REG0;                     /* RESTORE SAVEAREA PTR    Y02751*/
         LR    REG13,REG0                                       02S0252
*   RFY                                                         02S0253
*     REG0 UNRSTD;                  /*                         Y02751*/
*   END;                                                        02S0254
@EL00004 DS    0H                                               02S0254
@EF00004 DS    0H                                               02S0254
@ER00004 LM    @14,@12,12(@13)                                  02S0254
         BR    @14                                              02S0254
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0255
*     GPR01F FIXED(31) REG(1);                                  01S0255
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0256
*     I031F FIXED(31) BASED,                                    01S0256
*     I031P PTR(31) BASED,                                      01S0256
*     I015F FIXED(15) BASED,                                    01S0256
*     I015P PTR(15) BASED,                                      01S0256
*     I008P PTR(8) BASED,                                       01S0256
*     I001C CHAR(1) BASED;                                      01S0256
*   END IEAVXDOM                                                01S0257
*                                                               01S0257
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSLIB  (IHACTM  )                                       */
*/*%INCLUDE SYSLIB  (IHADOMC )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAWQE  )                                       */
*/*%INCLUDE SYSLIB  (IHAORE  )                                       */
*/*%INCLUDE SYSLIB  (IEECUCM )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */
*/*%INCLUDE SYSUT5  (SETLIST )                                       */
*/*%INCLUDE SYSUT5  (AUTHCHK )                                       */
*/*%INCLUDE SYSUT5  (SCANIDS )                                       */
*/*%INCLUDE SYSUT5  (GETDOMCB)                                       */
*/*%INCLUDE SYSUT5  (FILLDOM )                                       */
*/*%INCLUDE SYSUT5  (SUBEXIT )                                       */
*/*%INCLUDE SYSUT5  (SETLCKS )                                       */
*/*%INCLUDE SYSUT5  (FRELCKS )                                       */
*                                                               01S0257
*       ;                                                       01S0257
@DATA    DS    0H
@CH00065 DC    H'8'
@CH00752 DC    H'14'
@CH01158 DC    H'20'
@SM02778 MVC   MOVEDOMC(0,REG1),MOVEDOMC(@11)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@AL00001 DS    1A
IEAVXDOM CSECT
         DS    0F
@CF00058 DC    F'4'
@CF00067 DC    F'12'
@CF02780 DC    F'-4'
@CF02754 DC    XL4'80000000'
@CF02774 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PARMPTR  DS    A
UCMFXPTR DS    A
UCMPXPTR DS    A
         DS    CL4
DUMDOMCB DS    CL252
         ORG   DUMDOMCB
DDLINK   DS    CL4
         ORG   DDLINK
DDCNTRL  DS    BL1
         ORG   DDCNTRL
@NM00001 DS    BL1
DDATHR   EQU   DDCNTRL+0
DDDBAJ   EQU   DDCNTRL+0
DDWR     EQU   DDCNTRL+0
         ORG   DDLINK+1
DDLNKA   DS    AL3
         ORG   DUMDOMCB+4
DDID     DS    CL4
         ORG   DUMDOMCB+252
         DS    CL2
RECSAVE  DS    CL66
         ORG   RECSAVE
RECRGMAP DS    CL2
RECREGS  DS    CL64
         ORG   RECSAVE+66
IEAVXDOM CSECT
         DS    0F
@SIZDATD DC    AL1(229)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00059 DC    C'SSOB'
@CC00187 DC    C'XDOM'
@CB00182 DC    X'FFFF'
IEAVXDOM CSECT
         DS   0H
PATCHLOC DC (50)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVXDOM CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
REG10    EQU   @10
REG9     EQU   @09
REG0     EQU   @00
REG1     EQU   @01
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
DOMPLPTR EQU   @01
WQEPTR   EQU   @06
OREPTR   EQU   @08
RBSECPTR EQU   @05
GPR01F   EQU   @01
GPR00F   EQU   @00
REG2     EQU   @02
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTPTR   EQU   16
RETURNPT EQU   0
DDIDPART EQU   0
DDIDFLAG EQU   DDIDPART
DDIDEND  EQU   DDIDFLAG
DDIDID   EQU   DDIDPART+1
DDIDASID EQU   DDIDPART+4
DDIDSIZE EQU   DDIDPART+6
DDIDJTCB EQU   DDIDPART+8
MOVEDOMC EQU   0
DOMPL    EQU   0
DOMPFLAG EQU   DOMPL
DOMPEND  EQU   DOMPFLAG
DOMPID   EQU   DOMPL+1
PARMLIST EQU   0
PARMSTAT EQU   PARMLIST
PARMFTPT EQU   PARMSTAT
PARMFLAG EQU   PARMSTAT+1
PARMRTAD EQU   PARMLIST+12
PARMRGAD EQU   PARMLIST+16
PARMID   EQU   PARMLIST+20
DOMC     EQU   0
DOMCLNK  EQU   DOMC
DOMCNTRL EQU   DOMCLNK
DOMCLNKA EQU   DOMCLNK+1
FRRSPTR  EQU   0
FRREPTR  EQU   0
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
WQE      EQU   0
WQELKP   EQU   WQE
WQELKPA  EQU   WQELKP+1
WQETS    EQU   WQE+13
WQETXT   EQU   WQE+31
WQEXA    EQU   WQE+160
WQEORE   EQU   WQEXA
WQESUSP  EQU   WQEXA
WQEAVAIL EQU   WQE+163
WQESEQN  EQU   WQE+169
WQEMCSF  EQU   WQE+172
WQEMCSF1 EQU   WQEMCSF
WQEMCSF2 EQU   WQEMCSF+1
WQEMSGTP EQU   WQE+174
WQEMSGT1 EQU   WQEMSGTP
WQEROUT  EQU   WQE+176
WQEROUT1 EQU   WQEROUT
WQEROUT2 EQU   WQEROUT+1
WQERPYID EQU   WQE+182
WQEDESCD EQU   WQE+184
WQEDC1   EQU   WQEDESCD
WQEDC2   EQU   WQEDESCD+1
WQEJSTCB EQU   WQE+188
WMJM     EQU   0
WMJMEXT  EQU   WMJM
WMJMEXTA EQU   WMJMEXT+1
WMJMMLW  EQU   WMJM+4
WMJMTS   EQU   WMJM+13
WMJMSER  EQU   WMJM+122
WMJMSER1 EQU   WMJMSER
WMJMLTYP EQU   WMJM+134
WMJMLTY1 EQU   WMJMLTYP
WMJMECBF EQU   WMJM+148
WMJMDSP  EQU   WMJM+160
WMJMBUF  EQU   WMJM+163
WMJMCS   EQU   WMJM+172
WMJMCS1  EQU   WMJMCS
WMJMCS2  EQU   WMJMCS+1
WMJMMT   EQU   WMJM+174
WMJMMT1  EQU   WMJMMT
WMJMRTC  EQU   WMJM+176
WMJMRCT1 EQU   WMJMRTC
WMJMRCT2 EQU   WMJMRTC+1
WMJMDEC  EQU   WMJM+184
WMJMDEC1 EQU   WMJMDEC
WMJMDEC2 EQU   WMJMDEC+1
WMNM     EQU   0
WMNMEXT  EQU   WMNM
WMNMML1  EQU   WMNM+4
WMNMLT1  EQU   WMNM+5
WMNMST1  EQU   WMNM+84
WMNMML2  EQU   WMNM+100
WMNMLT2  EQU   WMNM+101
WMNMST2  EQU   WMNM+180
OREF     EQU   0
ORELKP   EQU   OREF
OREID    EQU   OREF+4
OREXA    EQU   OREF+6
OREXC    EQU   OREF+7
OREBUFC  EQU   OREXC
ORETCB   EQU   OREF+8
ORERPY   EQU   OREF+16
OREECB   EQU   OREF+20
OREASID  EQU   OREF+24
UCMPRFXP EQU   0
UCM2PTR  EQU   0
UCM2EXT  EQU   0
UCM2STA  EQU   UCM2EXT+8
UCM2SFLG EQU   UCM2STA
UCMPRFX  EQU   0
UCMSAVE0 EQU   UCMPRFX+4
UCMDOME  EQU   UCMPRFX+76
UCMWTOX  EQU   UCMPRFX+80
UCMSFLGS EQU   UCMPRFX+84
UCMSFLG1 EQU   UCMSFLGS
UCMSFLG2 EQU   UCMSFLGS+1
UCMXSA   EQU   UCMPRFX+104
UCMSDS1  EQU   UCMPRFX+156
UCM      EQU   0
UCMDECB  EQU   UCM+12
UCMLSTP  EQU   UCM+20
UCMWTOQ  EQU   UCM+24
UCMRPYQ  EQU   UCM+28
UCMRPYI  EQU   UCM+32
UCMPXB   EQU   UCM+68
UCMMODE  EQU   UCMPXB
UCMVDATA EQU   UCM+72
UCMVEA   EQU   UCMVDATA
UCMASCB  EQU   UCM+280
UCMFRRAD EQU   UCM+288
UCMWAKUP EQU   UCM+292
UCMRSV42 EQU   UCM+300
UCMRSV51 EQU   UCM+301
UCMEIL   EQU   0
UCMRECBA EQU   UCMEIL+24
UCMEXIT  EQU   0
UCMLIST  EQU   0
UCMSTS   EQU   UCMLIST+24
UCMATR   EQU   UCMLIST+25
UCMXA    EQU   UCMLIST+26
UCMAUTH  EQU   UCMLIST+40
UCMAUTHA EQU   UCMAUTH
UCMDISP  EQU   UCMLIST+42
UCMDISP1 EQU   UCMDISP
UCMDISP2 EQU   UCMDISP+1
UCMMSG   EQU   UCMLIST+60
UCMMSG1  EQU   UCMMSG
UCMDEVC  EQU   UCMLIST+63
UCMRCT   EQU   UCMLIST+68
UCMSDS5  EQU   UCMRCT
UCMFEXTA EQU   0
UCMFMGFS EQU   UCMFEXTA+8
UCMFFLG1 EQU   UCMFMGFS
UCMPEXTA EQU   0
UCMPDM1  EQU   UCMPEXTA+4
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBEXSAVE EQU   XRBESA
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00024 EQU   RBSECT+10
@NM00025 EQU   @NM00024
RBTRSVRB EQU   @NM00025
@NM00027 EQU   @NM00024+1
RBETXR   EQU   @NM00027
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00034 EQU   RBSECT+28
IRBEND   EQU   RBSECT+96
@NM00038 EQU   RBSECT+96
RBRSV138 EQU   @NM00038+7
RBRSV150 EQU   RBSECT+167
ASCB     EQU   0
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTCUCB  EQU   CVTMAP+100
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SCVTSECT EQU   0
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SSREQ    EQU   0
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
POSTRECY EQU   0
SWAMGR   EQU   0
XSDOM    EQU   RBEXSAVE
XSREG0   EQU   XSDOM
XSREG1   EQU   XSDOM+4
XSREG14  EQU   XSDOM+8
@NM00003 EQU   XSDOM+12
XSERRCD  EQU   @NM00003
XSFLAGS  EQU   @NM00003+1
XSDOMR   EQU   XSFLAGS
XSAUTH   EQU   XSFLAGS
XSENDLST EQU   XSFLAGS
XSCBSIZE EQU   @NM00003+2
XSAL     EQU   XSDOM+16
XSPLPTR  EQU   XSAL+12
XSIDPTR  EQU   XSAL+16
XSDMAREA EQU   XSDOM+36
DOMCID   EQU   DOMCLNK+4
DOMCFLAG EQU   DOMCID
DOMCTJID EQU   DOMCID+4
UCMBASPT EQU   CVTCUCB
UCMMCSPT EQU   UCMPRFXP
UCMEILPT EQU   UCMLSTP
UCMUEWPT EQU   UCMWTOX
UCMDVEPT EQU   UCMVEA
UCMEXTPT EQU   UCM2PTR
UCMIECBA EQU   UCMRECBA+4
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
SCVTSPTR EQU   CVTABEND
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTRMBR  EQU   CVTS01+492
CVTGSDA  EQU   CVTS01+600
SSOB     EQU   XSAL
SSOBID   EQU   SSOB
SSOBLEN  EQU   SSOB+4
SSOBFUNC EQU   SSOB+6
SSOBSSIB EQU   SSOB+8
SSOBINDV EQU   SSOB+16
SSDM     EQU   XSDMAREA
SSDMLEN  EQU   SSDM
SSDMDMCB EQU   SSDM+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00097 EQU   SSDM+2
SSOBRETN EQU   SSOB+12
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00039 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBCDSAVE EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
UCMIECBP EQU   UCMIECBA+1
UCMIECBF EQU   UCMIECBA
DOMCJTCB EQU   DOMCID+8
DOMCLSQA EQU   DOMCID+7
DOMCSIZE EQU   DOMCID+6
DOMCASID EQU   DOMCTJID
DOMCIDA  EQU   DOMCID+1
DOMCRS13 EQU   DOMCFLAG
DOMCRS12 EQU   DOMCFLAG
DOMCRS11 EQU   DOMCFLAG
DOMCRS10 EQU   DOMCFLAG
DOMCRS09 EQU   DOMCFLAG
DOMCRS08 EQU   DOMCFLAG
DOMCSEXT EQU   DOMCFLAG
DOMCEND  EQU   DOMCFLAG
XSAL03   EQU   XSAL+8
XSAL02   EQU   XSAL+4
XSAL01   EQU   XSAL
JESSASTA EQU   JESCT+48
JESNUCBS EQU   JESCT+44
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00098 EQU   JESCT
@NM00096 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00095 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00094 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00093 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00092 EQU   SCVTSECT+180
@NM00091 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00090 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00089 EQU   SCVTSECT+160
@NM00088 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
SCVTSTAT EQU   SCVTSECT+148
@NM00087 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00086 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00085 EQU   SCVTSECT+128
@NM00084 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00083 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00082 EQU   SCVTSECT+108
@NM00081 EQU   SCVTSECT+104
@NM00080 EQU   SCVTSECT+100
@NM00079 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00078 EQU   SCVTSECT+88
@NM00077 EQU   SCVTSECT+84
@NM00076 EQU   SCVTSECT+80
@NM00075 EQU   SCVTSECT+76
@NM00074 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00073 EQU   SCVTSECT+56
@NM00072 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00071 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00070 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00069 EQU   SCVTSECT+24
@NM00068 EQU   SCVTSECT+20
@NM00067 EQU   SCVTSECT+16
@NM00066 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00065 EQU   CVTFIX+248
@NM00064 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
SIRBEND  EQU   RBSECT+168
SVRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBSCBB   EQU   RBSECT+144
TIRBEND  EQU   @NM00038+8
PRBEND   EQU   @NM00038+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00038+6
RBRSV136 EQU   @NM00038+4
RBRSV135 EQU   @NM00038
@NM00037 EQU   RBSECT+32
@NM00036 EQU   @NM00034+1
@NM00035 EQU   @NM00034
RBPGMQ1  EQU   RBPGMQ+1
@NM00033 EQU   RBPGMQ
@NM00032 EQU   RBSECT+16
@NM00031 EQU   @NM00027
@NM00030 EQU   @NM00027
RBIQETP  EQU   @NM00027
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00027
@NM00029 EQU   @NM00027
@NM00028 EQU   @NM00027
RBPMSVRB EQU   @NM00025
RBATNXIT EQU   @NM00025
@NM00026 EQU   @NM00025
RBWAITP  EQU   @NM00025
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00025
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00023 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00022 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00021 EQU   RBOPSWB2
@NM00020 EQU   XRBPSW
@NM00019 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00018 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00017 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00016 EQU   XSTAB1
@NM00015 EQU   RBBASIC+8
@NM00014 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00013 EQU   RBPRFX
UCMPRSV2 EQU   UCMPEXTA+20
UCMPRSV1 EQU   UCMPDM1+8
UCMPNMCC EQU   UCMPDM1+4
UCMPWQE  EQU   UCMPDM1
UCMPUCMP EQU   UCMPEXTA
UCMFRSV3 EQU   UCMFEXTA+20
UCMF80WQ EQU   UCMFEXTA+18
UCMF60WQ EQU   UCMFEXTA+16
UCMFRSV2 EQU   UCMFMGFS+4
UCMFRSV1 EQU   UCMFMGFS+2
UCMFFLG2 EQU   UCMFMGFS+1
UCMFBR07 EQU   UCMFFLG1
UCMFBR06 EQU   UCMFFLG1
UCMFBR05 EQU   UCMFFLG1
UCMFBR04 EQU   UCMFFLG1
UCMFBR03 EQU   UCMFFLG1
UCMFMSGN EQU   UCMFFLG1
UCMFMSGA EQU   UCMFFLG1
UCMFMSGE EQU   UCMFFLG1
UCMFPPTR EQU   UCMFEXTA+4
UCMFUCMF EQU   UCMFEXTA
UCMRCTA  EQU   UCMRCT+1
UCMRSV31 EQU   UCMSDS5
UCMSDS5G EQU   UCMSDS5
UCMSDS5F EQU   UCMSDS5
UCMRSV30 EQU   UCMSDS5
UCMRSV29 EQU   UCMSDS5
UCMSDS5C EQU   UCMSDS5
UCMSDS5B EQU   UCMSDS5
UCMSDS5A EQU   UCMSDS5
UCMMLAST EQU   UCMLIST+64
UCMVHRSN EQU   UCMDEVC
UCMDEVG  EQU   UCMDEVC
UCMDEVF  EQU   UCMDEVC
UCMDEVE  EQU   UCMDEVC
UCMDEVD  EQU   UCMDEVC
UCMDEVCC EQU   UCMDEVC
UCMDEVB  EQU   UCMDEVC
UCMDEVA  EQU   UCMDEVC
UCMXOR   EQU   UCMLIST+62
UCMMSG2  EQU   UCMMSG+1
UCMRSV27 EQU   UCMMSG1
UCMRSV26 EQU   UCMMSG1
UCMMSGF  EQU   UCMMSG1
UCMMSGE  EQU   UCMMSG1
UCMMSGD  EQU   UCMMSG1
UCMMSGC  EQU   UCMMSG1
UCMMSGB  EQU   UCMMSG1
UCMMSGA  EQU   UCMMSG1
UCMCOMPC EQU   UCMLIST+56
UCMWLAST EQU   UCMLIST+52
UCMOAOEN EQU   UCMLIST+48
UCMALTEN EQU   UCMLIST+44
UCMRV007 EQU   UCMDISP2
UCMRV006 EQU   UCMDISP2
UCMRV005 EQU   UCMDISP2
UCMRV004 EQU   UCMDISP2
UCMRV003 EQU   UCMDISP2
UCMDISPK EQU   UCMDISP2
UCMDISPJ EQU   UCMDISP2
UCMDISPI EQU   UCMDISP2
UCMDISPH EQU   UCMDISP1
UCMDISPG EQU   UCMDISP1
UCMDISPF EQU   UCMDISP1
UCMDISPE EQU   UCMDISP1
UCMDISPD EQU   UCMDISP1
UCMDISPC EQU   UCMDISP1
UCMDISPB EQU   UCMDISP1
UCMDISPA EQU   UCMDISP1
UCMAUTHB EQU   UCMAUTH+1
UCMRSV23 EQU   UCMAUTHA
UCMRSV22 EQU   UCMAUTHA
UCMRSV21 EQU   UCMAUTHA
UCMRSV20 EQU   UCMAUTHA
UCMRSV19 EQU   UCMAUTHA
UCMAUTH3 EQU   UCMAUTHA
UCMAUTH2 EQU   UCMAUTHA
UCMAUTH1 EQU   UCMAUTHA
UCMOUTQ  EQU   UCMLIST+36
UCMRSV18 EQU   UCMLIST+34
UCMRTCD  EQU   UCMLIST+32
UCMXB    EQU   UCMLIST+28
@NM00012 EQU   UCMXA+1
UCMID    EQU   UCMXA
UCMRSV17 EQU   UCMATR
UCMRSV16 EQU   UCMATR
UCMAT04  EQU   UCMATR
UCMLF    EQU   UCMATR
UCMUF    EQU   UCMATR
UCMXF    EQU   UCMATR
UCMIF    EQU   UCMATR
UCMOF    EQU   UCMATR
UCMTC    EQU   UCMSTS
UCMTD    EQU   UCMSTS
UCMTB    EQU   UCMSTS
UCMTA    EQU   UCMSTS
UCMCF    EQU   UCMSTS
UCMBF    EQU   UCMSTS
UCMPF    EQU   UCMSTS
UCMAF    EQU   UCMSTS
UCMNAME  EQU   UCMLIST+16
UCMUCB   EQU   UCMLIST+12
UCMDCB   EQU   UCMLIST+8
UCMSBR   EQU   UCMLIST+4
UCMECB   EQU   UCMLIST
UCMTPSAV EQU   UCMEXIT+208
UCMXTSAV EQU   UCMEXIT+136
UCMDESCD EQU   UCMEXIT+132
UCMROUTC EQU   UCMEXIT+128
UCMMSTXT EQU   UCMEXIT
UCMDECBA EQU   UCMEIL+20
UCMOECBA EQU   UCMEIL+16
UCMAECBA EQU   UCMEIL+12
UCMXECBA EQU   UCMEIL+8
UCMNIPTR EQU   UCMEIL+4
UCMRSV15 EQU   UCMEIL+3
UCMRTCT  EQU   UCMEIL+2
UCMRPYL  EQU   UCMEIL+1
@NM00011 EQU   UCMEIL
UCMRSV60 EQU   UCM+302
UCMRSV59 EQU   UCMRSV51
UCMRSV58 EQU   UCMRSV51
UCMRSV57 EQU   UCMRSV51
UCMRSV56 EQU   UCMRSV51
UCMRSV55 EQU   UCMRSV51
UCMRSV54 EQU   UCMRSV51
UCMRSV53 EQU   UCMRSV51
UCMRSV52 EQU   UCMRSV51
UCMRSV50 EQU   UCMRSV42
UCMRSV49 EQU   UCMRSV42
UCMRSV48 EQU   UCMRSV42
UCMRSV47 EQU   UCMRSV42
UCMRSV46 EQU   UCMRSV42
UCMRSV45 EQU   UCMRSV42
UCMRSV44 EQU   UCMRSV42
UCMRSV43 EQU   UCMRSV42
UCMJES3T EQU   UCM+296
UCMSWCH  EQU   UCM+284
UCMWQECP EQU   UCM+276
UCMORECP EQU   UCM+272
UCMOECBT EQU   UCM+268
UCMOECBH EQU   UCM+264
UCMWECBT EQU   UCM+260
UCMWECBH EQU   UCM+256
UCMMBEND EQU   UCM+252
UCMCTID  EQU   UCM+250
UCMRSV61 EQU   UCM+248
UCMRP2AD EQU   UCM+244
UCMCRAAD EQU   UCM+240
UCMWQLM1 EQU   UCM+238
UCMRV001 EQU   UCM+237
UCMRQLM1 EQU   UCM+236
UCMMBPTR EQU   UCM+232
UCMMQNXT EQU   UCM+228
UCMMQEND EQU   UCM+224
UCMMQPTR EQU   UCM+220
UCMTRECB EQU   UCM+216
UCMMNECB EQU   UCM+212
UCMMNTR  EQU   UCM+208
UCMR9SV  EQU   UCM+204
UCMSAVE4 EQU   UCM+140
UCMSAVE3 EQU   UCM+84
UCMVEL   EQU   UCMVDATA+8
UCMVEZ   EQU   UCMVDATA+4
UCMINCR  EQU   UCM+71
UCMMODEL EQU   UCM+70
UCMCORE  EQU   UCM+69
UCMFIX   EQU   UCMMODE
UCMMCS   EQU   UCMMODE
UCMOGCE  EQU   UCMMODE
UCMAMFA  EQU   UCMMODE
UCMRSV14 EQU   UCMMODE
UCMTPUTA EQU   UCMMODE
UCMNOCON EQU   UCMMODE
UCMRSV11 EQU   UCMMODE
UCMPXA   EQU   UCM+64
UCMWQEND EQU   UCM+60
UCMWQNR  EQU   UCM+58
UCMRQNR  EQU   UCM+56
UCMWQECB EQU   UCM+52
UCMRQECB EQU   UCM+48
UCMWQLM  EQU   UCM+46
UCMRQLM  EQU   UCM+45
@NM00010 EQU   UCMRPYI
UCMARECB EQU   UCM+16
UCMLECB  EQU   UCMDECB
UCMOECB  EQU   UCM+8
UCMAECB  EQU   UCM+4
UCMXECB  EQU   UCM
UCMGMCNT EQU   UCMPRFX+158
UCMSDS2  EQU   UCMPRFX+157
UCMRSV09 EQU   UCMSDS1
UCMRSV08 EQU   UCMSDS1
UCMRSV07 EQU   UCMSDS1
UCMRSV06 EQU   UCMSDS1
UCMRSV05 EQU   UCMSDS1
UCMRSV04 EQU   UCMSDS1
UCMSDS1B EQU   UCMSDS1
UCMSDS1A EQU   UCMSDS1
UCMDTINT EQU   UCMPRFX+152
UCMLOGAD EQU   UCMPRFX+148
UCMNPECB EQU   UCMPRFX+144
UCMTPPTR EQU   UCMPRFX+140
UCMDOMRT EQU   UCMPRFX+136
UCMRUTCK EQU   UCMPRFX+132
UCMQRTN  EQU   UCMPRFX+128
UCM6WD   EQU   UCMXSA+20
UCM5WD   EQU   UCMXSA+16
UCM4WD   EQU   UCMXSA+12
UCM3WD   EQU   UCMXSA+8
UCM2WD   EQU   UCMXSA+4
UCM1WD   EQU   UCMXSA
UCMRSV03 EQU   UCMPRFX+102
UCMHRDRT EQU   UCMPRFX+100
UCMUEXIT EQU   UCMPRFX+97
UCMXCT   EQU   UCMPRFX+96
UCMHCUCM EQU   UCMPRFX+92
UCMCMID  EQU   UCMPRFX+88
UCMOWTOR EQU   UCMPRFX+86
UCMRSV02 EQU   UCMSFLG2
UCMSYSO  EQU   UCMSFLG2
UCMSYSN  EQU   UCMSFLG2
UCMSYSM  EQU   UCMSFLG2
UCMSYSL  EQU   UCMSFLG2
UCMSYSK  EQU   UCMSFLG2
UCMSYSJ  EQU   UCMSFLG2
UCMSYSI  EQU   UCMSFLG2
UCMRSV35 EQU   UCMSFLG1
UCMSYSG  EQU   UCMSFLG1
UCMSYSF  EQU   UCMSFLG1
UCMSYSE  EQU   UCMSFLG1
UCMSYSD  EQU   UCMSFLG1
UCMSYSC  EQU   UCMSFLG1
UCMSYSB  EQU   UCMSFLG1
UCMRSV01 EQU   UCMSFLG1
UCMSVR0  EQU   UCMSAVE0+68
UCMSVQ0  EQU   UCMSAVE0+64
UCMSVP0  EQU   UCMSAVE0+60
UCMSVO0  EQU   UCMSAVE0+56
UCMSVN0  EQU   UCMSAVE0+52
UCMSVM0  EQU   UCMSAVE0+48
UCMSVL0  EQU   UCMSAVE0+44
UCMSVK0  EQU   UCMSAVE0+40
UCMSVJ0  EQU   UCMSAVE0+36
UCMSVI0  EQU   UCMSAVE0+32
UCMSVH0  EQU   UCMSAVE0+28
UCMSVG0  EQU   UCMSAVE0+24
UCMSVF0  EQU   UCMSAVE0+20
UCMSVE0  EQU   UCMSAVE0+16
UCMSVD0  EQU   UCMSAVE0+12
UCMSVC0  EQU   UCMSAVE0+8
UCMSVB0  EQU   UCMSAVE0+4
UCMSVA0  EQU   UCMSAVE0
UCMMCENT EQU   UCMPRFX
UCM2FEXT EQU   UCM2EXT+12
UCM2STAA EQU   UCM2STA+1
UCMRV008 EQU   UCM2SFLG
UCMRSV34 EQU   UCM2SFLG
UCMRSV33 EQU   UCM2SFLG
UCM2WTOI EQU   UCM2SFLG
UCM2DSTR EQU   UCM2SFLG
UCM2DTAK EQU   UCM2SFLG
UCM2SENT EQU   UCM2SFLG
UCM2SDWA EQU   UCM2SFLG
UCM2PST  EQU   UCM2EXT+4
UCM2RID  EQU   UCM2EXT+2
UCM2WID  EQU   UCM2EXT
OREOPBUF EQU   OREF+28
ORERSV11 EQU   OREF+26
OREM     EQU   OREF+24
OREECBA  EQU   OREECB+1
ORETJID2 EQU   OREECB
ORERPYA  EQU   ORERPY+1
ORELNTH  EQU   ORERPY
OREWQE   EQU   OREF+12
ORETCBA  EQU   ORETCB+1
ORETJID1 EQU   ORETCB
ORERSV10 EQU   OREXC
ORERSV09 EQU   OREXC
ORERSV08 EQU   OREXC
OREBUFE  EQU   OREXC
OREBUFD  EQU   OREXC
OREBUFB  EQU   OREXC
OREBUFA  EQU   OREXC
ORERSV06 EQU   OREXA
ORERSV05 EQU   OREXA
ORERSV04 EQU   OREXA
ORERSV03 EQU   OREXA
ORESUSP  EQU   OREXA
ORESWAP  EQU   OREXA
OREKEY0  EQU   OREXA
ORERSV01 EQU   OREXA
WQERSVC7 EQU   WMNM+184
WQERSVC6 EQU   WMNM+181
WQERSVC5 EQU   WMNMST2
WQERSVC4 EQU   WMNMST2
WQERSVC3 EQU   WMNMST2
WQERSVC2 EQU   WMNMST2
WQERSVC1 EQU   WMNMST2
WQERSVB9 EQU   WMNMST2
WQERSVB8 EQU   WMNMST2
WMNMTPD2 EQU   WMNMST2
WMNMTXT2 EQU   WMNM+108
WMNMHCT2 EQU   WMNM+104
WMNMTL2  EQU   WMNM+103
WQERSV74 EQU   WMNM+102
WQERSV73 EQU   WMNMLT2
WQERSV72 EQU   WMNMLT2
WQERSV71 EQU   WMNMLT2
WQERSV70 EQU   WMNMLT2
WMNMLT2D EQU   WMNMLT2
WMNMLT2C EQU   WMNMLT2
WMNMLT2B EQU   WMNMLT2
WMNMLT2A EQU   WMNMLT2
WMNMML2H EQU   WMNMML2
WMNMML2G EQU   WMNMML2
WQERSV69 EQU   WMNMML2
WMNMML2E EQU   WMNMML2
WMNMML2D EQU   WMNMML2
WMNMML2C EQU   WMNMML2
WMNMML2B EQU   WMNMML2
WQERSV68 EQU   WMNMML2
WMNMNX2  EQU   WMNM+97
WMNMUC2  EQU   WMNM+96
WQERSVB7 EQU   WMNM+88
WQERSVB6 EQU   WMNM+85
WQERSVB5 EQU   WMNMST1
WQERSVB4 EQU   WMNMST1
WQERSVB3 EQU   WMNMST1
WQERSVB2 EQU   WMNMST1
WQERSVB1 EQU   WMNMST1
WQERSVA9 EQU   WMNMST1
WQERSVA8 EQU   WMNMST1
WMNMTPD1 EQU   WMNMST1
WMNMTXT1 EQU   WMNM+12
WMNMHCT1 EQU   WMNM+8
WMNMTL1  EQU   WMNM+7
WQERSV67 EQU   WMNM+6
WQERSV66 EQU   WMNMLT1
WQERSV65 EQU   WMNMLT1
WQERSV64 EQU   WMNMLT1
WQERSV63 EQU   WMNMLT1
WMNMLT1D EQU   WMNMLT1
WMNMLT1C EQU   WMNMLT1
WMNMLT1B EQU   WMNMLT1
WMNMLT1A EQU   WMNMLT1
WMNMML1H EQU   WMNMML1
WMNMML1G EQU   WMNMML1
WMNMML1F EQU   WMNMML1
WMNMML1E EQU   WMNMML1
WMNMML1D EQU   WMNMML1
WMNMML1C EQU   WMNMML1
WMNMML1B EQU   WMNMML1
WQERSV62 EQU   WMNMML1
WMNMNX1  EQU   WMNMEXT+1
WMNMUC1  EQU   WMNMEXT
WMJMJTCB EQU   WMJM+188
WMJMDEC4 EQU   WMJMDEC+3
WMJMDEC3 EQU   WMJMDEC+2
WQERSV61 EQU   WMJMDEC2
WQERSV60 EQU   WMJMDEC2
WQERSV59 EQU   WMJMDEC2
WQERSV58 EQU   WMJMDEC2
WQERSV57 EQU   WMJMDEC2
WQERSV56 EQU   WMJMDEC2
WMJMDECJ EQU   WMJMDEC2
WMJMDECI EQU   WMJMDEC2
WMJMDECH EQU   WMJMDEC1
WMJMDECG EQU   WMJMDEC1
WMJMDECF EQU   WMJMDEC1
WMJMDECE EQU   WMJMDEC1
WMJMDECD EQU   WMJMDEC1
WMJMDECC EQU   WMJMDEC1
WMJMDECB EQU   WMJMDEC1
WMJMDECA EQU   WMJMDEC1
WQERSV54 EQU   WMJM+181
WMJMUID  EQU   WMJM+180
WMJMRCT4 EQU   WMJMRTC+3
WMJMRCT3 EQU   WMJMRTC+2
WQERSV53 EQU   WMJMRCT2
WMJMRCTO EQU   WMJMRCT2
WMJMRCTN EQU   WMJMRCT2
WMJMRCTM EQU   WMJMRCT2
WMJMRCTL EQU   WMJMRCT2
WMJMRCTK EQU   WMJMRCT2
WMJMRCTJ EQU   WMJMRCT2
WMJMRCTI EQU   WMJMRCT2
WMJMRCTH EQU   WMJMRCT1
WMJMRCTG EQU   WMJMRCT1
WMJMRCTF EQU   WMJMRCT1
WMJMRCTE EQU   WMJMRCT1
WMJMRCTD EQU   WMJMRCT1
WMJMRCTC EQU   WMJMRCT1
WMJMRCTB EQU   WMJMRCT1
WMJMRCTA EQU   WMJMRCT1
WMJMMT2  EQU   WMJMMT+1
WQERSV52 EQU   WMJMMT1
WQERSV51 EQU   WMJMMT1
WMJMMT1F EQU   WMJMMT1
WQERSV50 EQU   WMJMMT1
WMJMMT1D EQU   WMJMMT1
WQERSVA6 EQU   WMJMMT1
WMJMMT1B EQU   WMJMMT1
WMJMMT1A EQU   WMJMMT1
WQERSV11 EQU   WMJMCS2
WQERSV49 EQU   WMJMCS2
WMJMCS2F EQU   WMJMCS2
WQERSV48 EQU   WMJMCS2
WQERSV47 EQU   WMJMCS2
WMJMCS2C EQU   WMJMCS2
WMJMCS2B EQU   WMJMCS2
WMJMCS2A EQU   WMJMCS2
WMJMCS1H EQU   WMJMCS1
WMJMCS1G EQU   WMJMCS1
WMJMCS1F EQU   WMJMCS1
WMJMCS1E EQU   WMJMCS1
WMJMCS1D EQU   WMJMCS1
WMJMCS1C EQU   WMJMCS1
WMJMCS1B EQU   WMJMCS1
WMJMCS1A EQU   WMJMCS1
WMJMSEQ  EQU   WMJM+169
WMJMRTCT EQU   WMJM+168
WMJMTCB  EQU   WMJM+164
WQERSV45 EQU   WMJMBUF
WMJMBUFG EQU   WMJMBUF
WMJMBUFF EQU   WMJMBUF
WMJMBUFE EQU   WMJMBUF
WMJMBUFD EQU   WMJMBUF
WMJMBUFC EQU   WMJMBUF
WMJMBUFB EQU   WMJMBUF
WMJMBUFA EQU   WMJMBUF
WMJMASID EQU   WMJM+161
WMJMDSPH EQU   WMJMDSP
WMJMDSPG EQU   WMJMDSP
WMJMDSPF EQU   WMJMDSP
WMJMDSPE EQU   WMJMDSP
WMJMDSPD EQU   WMJMDSP
WMJMDSPC EQU   WMJMDSP
WMJMDSPB EQU   WMJMDSP
WMJMDSPA EQU   WMJMDSP
WQERSVA5 EQU   WMJM+156
WQERSVA4 EQU   WMJM+152
WQERSVD8 EQU   WMJM+149
WQERSVD7 EQU   WMJMECBF
WQERSVD6 EQU   WMJMECBF
WQERSVD5 EQU   WMJMECBF
WQERSVD4 EQU   WMJMECBF
WQERSVD3 EQU   WMJMECBF
WQERSVD2 EQU   WMJMECBF
WMJMMAJD EQU   WMJMECBF
WMJMWAIT EQU   WMJMECBF
WMJMMSGN EQU   WMJM+144
WMJMAECB EQU   WMJM+140
WMJMMIN  EQU   WMJM+136
WMJMLTY2 EQU   WMJMLTYP+1
WQERSV38 EQU   WMJMLTY1
WQERSV37 EQU   WMJMLTY1
WQERSV36 EQU   WMJMLTY1
WQERSV35 EQU   WMJMLTY1
WMJMLTYD EQU   WMJMLTY1
WMJMLTYC EQU   WMJMLTY1
WMJMLTYB EQU   WMJMLTY1
WMJMLTYA EQU   WMJMLTY1
WQERSV34 EQU   WMJM+132
WMJMCONS EQU   WMJM+124
WMJMSER2 EQU   WMJMSER+1
WQERSV33 EQU   WMJMSER1
WQERSV32 EQU   WMJMSER1
WQERSV31 EQU   WMJMSER1
WMJMSERE EQU   WMJMSER1
WMJMSERD EQU   WMJMSER1
WMJMSERC EQU   WMJMSER1
WMJMSERB EQU   WMJMSER1
WMJMSERA EQU   WMJMSER1
WQERSV30 EQU   WMJM+120
WQERSV29 EQU   WMJM+116
WMJMRESA EQU   WMJM+108
WNJNPAD3 EQU   WMJM+107
WMJMHCID EQU   WMJM+103
WMJMTXT  EQU   WMJM+31
WMJMPAD2 EQU   WMJM+30
WMJMJBNM EQU   WMJM+22
WMJMPAD1 EQU   WMJM+21
WMJMTSSS EQU   WMJMTS+6
WMJMTSP2 EQU   WMJMTS+5
WMJMTSMM EQU   WMJMTS+3
WMJMTSP1 EQU   WMJMTS+2
WMJMTSHH EQU   WMJMTS
WMJMPAD  EQU   WMJM+12
WMJMRR   EQU   WMJM+8
WMJMTXTL EQU   WMJM+6
WMJMAREA EQU   WMJM+5
WMJMMLWH EQU   WMJMMLW
WMJMMLWG EQU   WMJMMLW
WMJMMLWF EQU   WMJMMLW
WMJMMLWE EQU   WMJMMLW
WMJMMLWD EQU   WMJMMLW
WMJMMLWC EQU   WMJMMLW
WMJMMLWB EQU   WMJMMLW
WMJMMLWA EQU   WMJMMLW
WMJMNXT  EQU   WMJMEXTA
WMJMUC   EQU   WMJMEXT
WQERSV26 EQU   WQE+186
WQERSV25 EQU   WQEDC2
WQERSV24 EQU   WQEDC2
WQERSV23 EQU   WQEDC2
WQERSV22 EQU   WQEDC2
WQERSV21 EQU   WQEDC2
WQERSV20 EQU   WQEDC2
WQEDCJ   EQU   WQEDC2
WQEDCI   EQU   WQEDC2
WQEDCH   EQU   WQEDC1
WQEDCG   EQU   WQEDC1
WQEDCF   EQU   WQEDC1
WQEDCE   EQU   WQEDC1
WQEDCD   EQU   WQEDC1
WQEDCC   EQU   WQEDC1
WQEDCB   EQU   WQEDC1
WQEDCA   EQU   WQEDC1
WQERSV18 EQU   WQE+181
WQEUCMID EQU   WQE+180
WQERSV17 EQU   WQE+178
WQERSV16 EQU   WQEROUT2
WQEROUTO EQU   WQEROUT2
WQEROUTN EQU   WQEROUT2
WQEROUTM EQU   WQEROUT2
WQEROUTL EQU   WQEROUT2
WQEROUTK EQU   WQEROUT2
WQEROUTJ EQU   WQEROUT2
WQEROUTI EQU   WQEROUT2
WQEROUTH EQU   WQEROUT1
WQEROUTG EQU   WQEROUT1
WQEROUTF EQU   WQEROUT1
WQEROUTE EQU   WQEROUT1
WQEROUTD EQU   WQEROUT1
WQEROUTC EQU   WQEROUT1
WQEROUTB EQU   WQEROUT1
WQEROUTA EQU   WQEROUT1
WQERSV15 EQU   WQEMSGT1
WQERSV14 EQU   WQEMSGT1
WQEMSGTF EQU   WQEMSGT1
WQERSV13 EQU   WQEMSGT1
WQEMSGTD EQU   WQEMSGT1
WQEMSGTC EQU   WQEMSGT1
WQEMSGTB EQU   WQEMSGT1
WQEMSGTA EQU   WQEMSGT1
WQEMCSP  EQU   WQEMCSF2
WQEMCSO  EQU   WQEMCSF2
WQEMCSN  EQU   WQEMCSF2
WQERSV10 EQU   WQEMCSF2
WQERSV09 EQU   WQEMCSF2
WQEMCSK  EQU   WQEMCSF2
WQEMCSJ  EQU   WQEMCSF2
WQEMCSI  EQU   WQEMCSF2
WQEMCSH  EQU   WQEMCSF1
WQEMCSG  EQU   WQEMCSF1
WQEMCSFF EQU   WQEMCSF1
WQEMCSE  EQU   WQEMCSF1
WQEMCSD  EQU   WQEMCSF1
WQEMCSC  EQU   WQEMCSF1
WQEMCSB  EQU   WQEMCSF1
WQEMCSA  EQU   WQEMCSF1
WQERTCT  EQU   WQE+168
WQETCB   EQU   WQE+164
WQERSV07 EQU   WQEAVAIL
WQERSV06 EQU   WQEAVAIL
WQEBUFF  EQU   WQEAVAIL
WQEBUFE  EQU   WQEAVAIL
WQEBUFD  EQU   WQEAVAIL
WQEBUFC  EQU   WQEAVAIL
WQEBUFB  EQU   WQEAVAIL
WQEBUFA  EQU   WQEAVAIL
WQEASID  EQU   WQE+161
WQEAUTH  EQU   WQEXA
WQEDOM   EQU   WQEXA
WQEWTOR  EQU   WQEXA
WQEQDFHC EQU   WQEXA
WQEQFHC  EQU   WQEXA
WQEPURGE EQU   WQEXA
WQEPAD3  EQU   WQE+159
WQETXTL  EQU   WQETXT+127
@NM00009 EQU   WQETXT
WQEPAD2  EQU   WQE+30
WQEJOBNM EQU   WQE+22
WQEPAD1  EQU   WQE+21
WQETSSS  EQU   WQETS+6
WQEPER2  EQU   WQETS+5
WQETSMM  EQU   WQETS+3
WQEPER1  EQU   WQETS+2
WQETSHH  EQU   WQETS
WQEPAD   EQU   WQE+12
WQERR    EQU   WQE+8
WQENBR   EQU   WQE+4
WQEUSE   EQU   WQELKP
@NM00008 EQU   FRRSFLGS+1
@NM00007 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
DOMCPROC EQU   DOMCNTRL
DOMCDBL  EQU   DOMCNTRL
DOMCWR   EQU   DOMCNTRL
DOMCDBAJ EQU   DOMCNTRL
DOMCAUTH EQU   DOMCNTRL
DOMCRS03 EQU   DOMCNTRL
DOMCRS02 EQU   DOMCNTRL
DOMCRS01 EQU   DOMCNTRL
PARMCLAD EQU   PARMLIST+8
PARMSYAD EQU   PARMLIST+4
PARMCTBK EQU   PARMSTAT+3
PARMSYSR EQU   PARMSTAT+2
@NM00006 EQU   PARMFLAG
@NM00005 EQU   PARMFLAG
@NM00004 EQU   PARMFLAG
PARMWARG EQU   PARMFLAG
PARMFRID EQU   PARMFLAG
PARMRECU EQU   PARMFLAG
PARMCWT  EQU   PARMFLAG
PARMSDWA EQU   PARMFLAG
@NM00002 EQU   DDIDPART+7
@NM00063 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00062 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00061 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00060 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00059 EQU   FLCFSA
@NM00058 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00057 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00056 EQU   FLCIOA
@NM00055 EQU   FLCMCLA+15
@NM00054 EQU   FLCMCLA+14
@NM00053 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00052 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00051 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00050 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00049 EQU   FLCPER
@NM00048 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00047 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00046 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00045 EQU   FLCPIILC
@NM00044 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00043 EQU   FLCSVILC
@NM00042 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00041 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00040 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00127 EQU   @RC00126
@RC00121 EQU   @RC00120
@RC00122 EQU   @RC00121
@RC00123 EQU   @RC00122
@ENDDATA EQU   *
         END   IEAVXDOM,(C'PLS0850',0701,78061)
