         TITLE 'IEAV1443 - AOS/2 COMM TASK DEVICE SUPPORT PROCESSOR'
* PMBFA(A),PMBFAB(A),PJCLNSTA(C),PJCLNCON(A),EXCPDOZ(A)        @ZA05367
* EXCPDOWY(C),PJCLOSE(D),PJCLNSTA(D),CCWNOP(A),EQUATES(A)      @ZA05367
IEAV1443 CSECT
* A 190024-190105                                              @ZA00873
* C 187766                                                     @ZM33331
* PMBF (C),PMBFA(A),PJOPNSTA(C),EXCPDOW(A)                     @ZA03882
* IOBCOR (C) - APPROX 303820                                   @ZA10145
* PMBFAB (C) APPROX 082577, 083650, PJECBINT (A) APPROX 194200 @ZA11907
* PJCLNCON (C) APPROX. 220500, PJCONTIN (C) APPROX. 235500     @ZA11907
* PMBF (C,A,D) APPROX. 082500-INVALID CLOSE PROC.              @ZA18112
***********************************************************************
* STATUS                                                       @ZA18112
*   OS/VS2 REL3.7
*
* FUNCTION
*   THIS ROUTINE IS THE DEVICE SUPPORT PROCESSOR (DSP) FOR PRINTERS
*   (EXCLUDING ANR DEVICES) USED AS THE OUTPUT PORTION OF A COMPOSITE
*   CONSOLE OR AS AN OUTPUT-ONLY CONSOLE.  WHEN A PRINTER IS TO
*   BECOME AN OPERATOR CONSOLE THIS ROUTINE WILL RECEIVE CONTROL.
*   FOR THE FIRST ENTRY, THE OPEN/CLOSE SUBROUTINE WILL GETMAIN,
*   FORMAT, AND OPEN (TYPE=J) A DCB FOR OUTPUT.  SUCCESSIVE
*   ENTRIES OF THIS ROUTINE FOR OUTPUT WILL USE THIS DCB.
*   FOR OPEN/CLOSE PROCESSING, THIS MODULE ISSUES A NOP EXCP TO@ZA05367
*   TEST THE STATUS OF THE CONSOLE DEVICE BEFORE THE OPEN OR   @ZA05367
*   CLOSE MACROS ARE ISSUED. THIS IS DONE TO PREVENT THE OPEN  @ZA05367
*   OR CLOSE PROCESSORS FROM PUTTING THE COMMUNICATIONS TASK   @ZA05367
*   IN A WAIT STATE. IF THE CONSOLE DEVICE IS NOT READY AT     @ZA05367
*   OPEN OR CLOSE TIME, AN INTERVENTION REQUIRED MESSAGE AND   @ZA05367
*   A WAIT IS ISSUED UNTIL THE REQUIRED OPERATION IS STISFIED. @ZA05367
*
*   OUTPUT FOR THIS DEVICE IS QUEUED FROM THE UCM ENTRY CREATED
*   AT SYSGEN FOR THIS DEVICE.  USING BSAM WRITE AND CHECK
*   FACILITIES THE TEXT AREAS IN WQES QUEUED IN THE CONSOLE QUEUE
*   WILL BE OUTPUTTED.  THE ROUTINE SELECTS WQE'S FROM ITS
*   CONSOLE QUEUE AND ISSUES A WRITE OF THE TEXT AREA.  THEN THE
*   ROUTINE EXITS.  WHEN THE I/O OPERATION IS COMPLETE, THIS
*   ROUTINE REGAINS CONTROL AND ISSUES A CHECK MACRO INSTRUCTION
*   TO TEST THE STATUS OF THE I/O OPERATION.  IF THE I/O ECB
*   INDICATES THE OPERATION HAS FAILED, AN AUTOMATIC CONSOLE SWITCH IS
*   STARTED TO CAUSE THE CONSOLE FUNCTION OF THIS DEVICE TO BE
*   TRANSFERRED TO ITS ALTERNATE.
*
*   WHEN THE DEVICE IS TO BE REMOVED FROM CONSOLE STATUS, THIS
*   ROUTINE IS AGAIN ENTERED.  ANY OUTSTANDING OUTPUT IS ALLOWED
*   TO COMPLETE.  THEN THE DCB IS CLOSED AND FREEMAINED.  THE UCB
*   IS MARKED TO INDICATE THIS DEVICE IS NO LONGER A CONSOLE AND
*   THE ROUTINE EXITS.
*
* ENTRY POINTS
*         IEAV1443 - FROM THE MINI-ROUTER WHEN A 1443 OR SIMILAR TYPE
*                    PRINTER USED AS A CONSOLE NEEDS TO BE SERVICED.
*
* INPUT
*    PSW - KEY ZERO, SUPERVISOR MODE
*    REGS 0, 2-13, 15 IRRELEVANT
*    REG 1 - ADDRESS OF CXSA
*    REG 14 - RETURN ADDRESS
*    REG 15 - ENTRY POINT ADDRESS OF THIS MODULE
*    IN THE CXSA:
*                  CSANPTR - ADDRESS OF CSANAME
*                  CSADCBP - ZERO
*                  CSANAME - IGC0107B
*                  CSAUCMA - ADDRESS OF THE UCM ENTRY
*                  CSACTLM - ADDRESS OF THE UCM
*
* OUTPUT
*    SEE BELOW UNDER EXITS,NORMAL
*
* EXTERNAL REFERENCES
*         GETMAIN - FOR A DCB, 18 WORD SAVE AREA, TIOT, JFCB, AND DECB
*         FREEMAIN - DCB, SAVE AREA, TIOT, JFCB, AND DECB
*         CHECK    - TO TEST THE STATUS OF A WRITE OPERATION
*         WRITE    - TO OUTPUT AN OPERATOR MESSAGE
*         OPEN     - TO CONNECT TO THE CONSOLE DCB
*         CLOSE    - TO DISCONNECT FROM THE CONSOLE DCB
*         EXCP     - TO TEST STATUS OF DEVICE BEFORE OPEN      @ZA03882
*
* EXITS,NORMAL
*    (1)  TO ISSUER OF SVC 72 VIA 'BR  14' WHEN WORK IS COMPLETE.
*         OUTPUT - PSW - ENABLED, KEY ZERO, SUPERVISOR MODE
*                - REGS 0-13, 15 - UNPREDICTABLE
*                - REG 14        - RETURN ADDRESS
*                - CXSA          - UNPREDICTABLE
*
* EXITS,ERROR
*         TO IEAVSWCH VIA BR 14 TO DO AN AUTOMATIC CONSOLE SWITCH
*         FROM THIS CONSOLE TO ITS ALTERNATE WHEN THIS CONSOLE
*         HAS A PERMANENT I/O ERROR OR IS UNABLE TO OPEN.
*         OUTPUT - PSW - ENABLED, KEY ZERO, SUPERVISOR MODE
*                - REGS 0, 2-13  - UNPREDICTABLE
*                - REGS 1        - ADDRESS OF CXSA
*                - REG 14        - RETURN ADDRESS
*                - REG 15        - ADDRESS OF CONSOLE SWITCH     Y02752
*
* TABLES/WORK AREAS
*    CVT, TCB, UCM, UCME, UCB, DCB, EIL, CXSA, TIOT, JFCB, DMX, CQE,
*    IOB, DEB                                                  @ZA03882
*
* ATTRIBUTES
*    RE-ENTRANT, KEY ZERO, SUPERVISOR MODE, ENABLED/DISABLED
*    FOR AOS/2; TO RESIDE IN THE SYSTEM LPA, IN SYS1.LPALIB
*    THIS MODULE IS TO HAVE THE NAME IGC0107B.
*    THE CONSOLE SWITCH ROUTINE IEAVSWCH IS TO HAVE THE NAME IGC0407B.
*
* CHARACTER CODE DEPENDENCY
*    THE LOCAL AND CMS LOCKS ARE OBTAINED TO SERIALIZE           Y02751
*
* NOTES
*    INCORPORATED SRBS: 438, 488
*
* CHANGE-ACTIVITY = ZA00873,ZA03882,ZA05367,ZA10145,ZA11907,ZA18112
*
***********************************************************************
         EJECT
***********************************************************************
*   PREPARATORY ACTIVITY - SET UP ADDRESSABILITY FOR THIS MODULE,
*   THE CXSA, UCM ENTRY, DCB, GETMAIN SAVE AREA, OBTAIN LOCKS
***********************************************************************
         SPACE 1                                                 Y02752
IGC0107B EQU   *                   MODULE ENTRY POINT            Y02752
         ENTRY IGC0107B            ENTRY NAME FOR LINK EDITOR    Y02752
         SPACE
         LR    XC,XF               ESTABLISH ADDRESSABILITY      Y02752
         USING IEAV1443,XC         ESTABLISH ADDRESSABILITY      Y02752
         SPACE 1                                                 Y02893
         MODID                                                   Y02893
         SPACE 1                                                 Y02893
         LR    XB,X1               SAVE BASE SVRB XSA
         USING CXSA,XB             CXSA ADDRESSABILITY
         ST    XE,CSAXA            SAVE RETURN ADDR IN CSA       Y02893
         L     XA,CSAUCM           GET POINTER TO UCM ENTRY
         USING UCMLIST,XA          UCM ENTRY ADDRESSABILITY
         L     X9,UCMDCB           GET POINTER TO DCB
         USING IHADCB,X9           DCB ADDRESSABILITY
         SPACE 1                                                 Y02893
         GETMAIN R,SP=SVSP,LV=SVLN GET 18 WORD REG SAVE AREA     Y02893
         SPACE 1                                                 Y02893
         LR    XD,X1               POINT REG 13 TO SAVE AREA
         ST    XD,CSAXF            SAVE PTR TO REGSAVE AREA      Y02751
         L     X7,CSANPTR          GET PTR TO RECOVERY AREA      Y02753
         USING PARMLIST,X7         BASE THE RECOVERY PARMLIST    Y02753
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PMNESTAE            IF NOT, SKIP SETUP            Y02753
         MVC   CSAXB(EIGHT),PARMRTAD   SAVE ORIGINAL RETRY ADDR  Y02753
         LA    XF,P1443RTY         GET ADDR OF 1443S RETRY       Y02753
         ST    XF,PARMRTAD         MAKE ESTAE RETRY 1443S        Y02753
         SPACE 1                                                 Y02751
PMNESTAE DS    0H                                                Y02753
         BAL   XE,PGETLOCK         GO OBTAIN LOCAL AND CMS LOCKS Y02751
         EJECT
*   DETERMINE WHY THIS MODULE WAS ENTERED.
         SPACE
PMCF     TM    UCMSTS,UCMCF        IS THIS A CLOSE REQUEST?
         BZ    PMBF                NO, CHECK STATUS OF DEVICE
         TM    UCMSTS,UCMPF+UCMBF  IS ANY OUTPUT PENDING?
*                                  OR IS THE DEVICE BUSY?
         BNZ   PMBF                YES, GO QUIESCE THE OUTPUT
         TM    UCMSDS5,UCMSDS5A    IS AN MLWTO BEING WAITED ON   Y02752
         BNZ   PMRETURN            IF YES, RETURN, DO NOT CLOSE  Y02752
         SPACE 1                                                 Y02752
*  A CLOSE IS PENDING AND ALL WORK IS CLEANED UP, GO CLOSE.      Y02752
         SPACE 1                                                 Y02752
         MVI   CSACODE,CSACLOSE    INDICATE CLOSE TO DO          Y02752
         B     PJSTART             GO TO OPEN/CLOSE ROUTINE.     Y02752
PMRETURN DS    0H                                                Y02752
         BAL   XE,PFRELOCK         GO FREE LOCAL AND CMS LOCKS   Y02751
         SPACE 1                                                 Y02751
PMRETRN1 DS    0H                  RETURN POINT WHEN UNLOCKED.   Y02751
         LR    X1,XD               REG 1 POINTS TO SAVE AREA     Y02751
         SPACE 1                                                 Y02751
         FREEMAIN R,SP=SVSP,LV=SVLN,A=(1)  FREE REG SAVE AREA    Y02893
         SPACE 1                                                 Y02752
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BNZ   PMRETRN2            IF NOT, SKIP RESTORATION      Y02753
         MVC   PARMRTAD(EIGHT),CSAXB   RESTORE ORIGINAL RETRY    Y02753
PMRETRN2 DS    0H                                                Y02753
         L     XE,CSAXA            RESTORE RETURN REGISTER       Y02752
         BR    XE                  RETURN TO CALLER              Y02752
         EJECT
*    REGISTER USAGE FOR FOLLOWING CODE.....
*
*   X2 - PTR TO TEXT AREA FOR THE WRITE.
*   X3 - PTR TO MAJOR WQE FROM CQE ENTRY FIELD CQEWQEA.
*   X5 - PTR TO LAST CQE ENTRY SERVICED, FIELD UCMWLAST
*   X8 - PTR TO NEXT MINOR TEXT LINE TO BE WRITTEN, UCMMLAST.
*
         USING CQE,X5
         SPACE
PMBF     TM    UCMSTS,UCMBF        IS THE DEVICE BUSY?
         BZ    PMAPF               NO, CHECK STATUS OF OPEN
         TM    UCMDEVC,UCMDEVE     IS I/O COMPLETE?
         BZ    PMRETURN            NO, FREEMAIN & EXIT
         NI    UCMDEVC,K255-UCMDEVE  TURN OFF I/O COMPLETE FLAG  Y02893
         TM    UCMSTS,UCMTA        OPEN PENDING SET ?          @ZA18112
         BO    PMBTSIO             YES, TEST STATUS OF I/O     @ZA18112
         TM    UCMSTS,UCMCF        CLOSE PENDING SET ?         @ZA18112
         BNO   PMBFF               NO, CONTINUE NORMAL I/O TEST@ZA18112
         L     X1,DCBSAVE          GET STORED ORIGINAL DCB ADDR@ZA18112
         LTR   X1,X1               DCB ADDR ZERO               @ZA18112
         BZ    PMBFF               YES, CHECK NORMAL I/O STATUS@ZA18112
* IF THE DCBSAVE FIELD IS NON-ZERO, THEN WE ARE PROCESSING     @ZA18112
* A NOP-EXCP CONDITION. THE SAVED DCB ADDRESS IN THIS CASE     @ZA18112
* IS THE ADDRESS OF THE ORIGINAL DCB UPON ENTRY TO THIS MODULE.@ZA18112
PMBTSIO  TM    DMDECB,IOBCD        WAS I/O SUCCESSFUL?         @ZA18112
         BO    PMBFAB              YES, CONTINUE NORMALLY      @ZA05367
         NI    UCMSTS,K255-UCMTA-UCMCF TURN OFF OPEN/CLOSE PEND@ZA03882
         NI    UCMSTS,K255-UCMBF   TURN OFF CONSOLE BUSY FLAG  @ZA05367
         XC    DMDECB,DMDECB       CLEAR I/O ECB               @ZA03882
         NI    UCMATR,K255-UCMAT04 TURN OFF DEVICE STATUS BITS @ZA03882
         OI    UCMATR,UCMUF        MARK UCME AS ACTIVE         @ZA03882
         BAL   XE,PFRELOCK         FREE LOCKS BEFORE CHECK     @ZA03882
         B     PMERRCK             CONSOLE SWITCH              @ZA03882
PMBFAB   BAL   XE,PFRELOCK         FREE LOCKS BEFORE CHECK     @ZA03882
         L     X1,DCBIOBAD         GET ADDR OF IOB             @ZA03882
         LA    X0,TEN              POINT TO                    @ZA03882
         SR    X1,X0               IOB PREFIX                  @ZA03882
         FREEMAIN R,SP=DMSP,LV=IOBCOR,A=(1) FREE IOB           @ZA03882
         L     X1,DCBDEBAD         GET ADDR OF DEB             @ZA03882
         LA    X0,TWN4             POINT TO                    @ZA03882
         SR    X1,X0               DEB PREFIX                  @ZA03882
         FREEMAIN R,SP=DMSP,LV=DEBCOR,A=(1) FREE DEB CORE      @ZA03882
         NI    UCMSTS,K255-UCMBF   TURN OFF DEVICE BUSY        @ZA03882
         TM    UCMSTS,UCMCF        CLOSE PENDING               @ZA05367
         BZ    PMBFABC             NO, CONTINUE OPEN           @ZA05367
         LR    X1,X9               SAVE EXCP DCB PTR           @ZA05367
         L     X9,DCBSAVE          GET ORIGINAL DCB PTR        @ZA05367
         ST    X9,UCMDCB           RESET ORIGINAL DCB PTR      @ZA05367
         FREEMAIN R,SP=DMSP,LV=DMCORE,A=(1) FREE EXCP DCB      @ZA05367
         B     PJECBINT            INIT ECB PTR,CONTINUE CLOSE @ZA11907
PMBFABC  SR    WORKR,WORKR         CLEAR WORK REGISTER         @ZA05367
         ST    WORKR,DCBIOBAD      ZERO IOB PTR IN DCB         @ZA03882
         ST    WORKR,DCBDEBAD      ZERO DEB PTR IN DCB         @ZA03882
         B     PJECBINT            INIT ECB PTR,CONT OPEN      @ZA11907
PMBFF    BAL   XE,PFRELOCK         FREE LOCKS BEFORE CHECK     @ZA03882
         LA    X1,DMDECB           GET POINTER TO I/O ECB
         LTR   X7,X7               IF THERE A RECOVERY AREA      Y02753
         BZ    PMBF1               IF NOT, SKIP FOOTPRINTING     Y02753
         OI    PARMFTPT,PCHECK     INDICATE CKECK FOR RECOVERY   Y02753
PMBF1    DS    0H                                                Y02753
         SPACE 1                                                 Y02893
         CHECK (1)                 CHECK PREVIOUS I/O OPERATION
         SPACE 1                                                 Y02893
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PMBF2               IF NOT, SKIP CLEARING FLAG    Y02753
         NI    PARMFTPT,K255-PCHECK    CLEAR CHECK FOOTPRINT     Y02753
PMBF2    DS    0H                                                Y02753
         BAL   XE,PGETLOCK         OBTAIN LOCKS BEFORE GOING ON  Y02751
         XC    DMDECB,DMDECB       CLEAR I/O ECB
         NI    UCMSTS,K255-UCMBF   TURN OFF CONSOLE BUSY FLAG
         EJECT
PMFWQE   L     X5,UCMWLAST         GET PTR TO LAST CQE ENTRY SERVICED
         LTR   X5,X5               HAS A K, C, D, ID COMMAND
*                                  CANCELLED THE STATUS DISPLAY?
         BZ    PMFWQEND            YES, RESTORE FOR WTO
         TM    CQEFLAG,CQEMAJOR    IS THIS A MAJOR WQE FOR MLWTO?
         BZ    PMFWQEN1            NO, CQE ENTRY NO LONGER NEEDED
         TM    UCMSTS,UCMTC        IS CONSOLE STILL WORKING ON
*                                  AN INLINE MLWTO?
         BZ    PMF1                NO, REDUCE USE COUNT
         SR    X3,X3               CLEAR TOP BYTE FOR ICM
         ICM   X3,MASK7,CQEWQEA    BUFFER POINTED TO BY X3 IS MAJOR
         USING WQE,X3              WHICH MAY/NOT HAVE BEEN WRITTEN
         SPACE
*  UCMMLAST POINTS TO THE MINOR HALF CONTAINING THE LINE JUST
*  WRITTEN, IF THE ADDRESS EXISTS.
         SPACE
         NC    UCMMLAST(FOUR),UCMMLAST   WAS MINOR JUST WRITTEN?
         BNZ   PMF1                YES, GET NEXT TEXT LINE
         SPACE 1                                                 Y02893
*   THE MAJOR WQE HAS BEEN OUTPUTTED AND THE FIRST MINOR LINE
*   WILL BE SET FOR OUTPUT.
         SPACE
PMF0     TM    WMJMLTYP,WMJMLTYD   IS THERE AN END LINE IN MAJOR?
         BO    PMFWQEND            YES, PURGE - DONT USE MINOR
         TM    WMJMMLW,WMJMMLWH    ANY TEXT LINES IN MINOR?
         BO    PMRET               NO, RETURN
         SPACE 1                                                 Y02756
*    IF THE FIRST LINE OUT OF THE MAJOR IS CURRENTLY THE ONLY    Y02756
*    MINOR ON THE CHAIN AT THIS TIME, A TEST MUST BE MADE TO     Y02756
*    SEE IF PROCESSING IS SUSPENDED (FLAG WMJMDSPG), FOR IN      Y02756
*    CASE IT WOULD APPLY TO THIS MINOR.                          Y02756
         SPACE 1                                                 Y02756
         L     X8,WMJMMIN          GET PTR TO FIRST MINOR        Y02756
         NC    WMNMNX1-WMNM(L3,X8),WMNMNX1-WMNM(X8) IS THERE A   Y02756
*                                          NEXT MINOR AFTER THIS Y02756
         BNZ   PMF05               IF YES, BRANCH, THIS MINOR IS Y02756
*                                  NOT SUSPENDED.                Y02756
         TM    WMJMDSP,WMJMDSPG    IS PROCESSING SUSPENDED       Y02756
         BO    PMRET               IF SUSPENDED, RETURN          Y02756
         SPACE 1                                                 Y02756
PMF05    DS    0H                                                Y02756
         NI    CQEFLAG,K255-CQEATTOP     TURN OFF FLAG THAT MEANS:
*                                        'START AT TOP OF CHAIN'
         MVC   UCMMLAST(FOUR),WMJMMIN    NEXT MINOR TO BE WRITTEN
         B     PMLW3               GO WRITE THE LINE
         DROP X3
         EJECT
         USING WQE,X8
PMF1     L     X8,UCMMLAST         POINT TO NEXT TEXT LINE
         SR    X4,X4               SET UP REG FOR DECREMENT AND LTR
         IC    X4,WMNMUC1          GET USE COUNT IN THE MINOR
         BCTR  X4,ZERO             DECREMENT THE USE COUNT BY ONE
         STC   X4,WMNMUC1          STORE NEW USE COUNT
         DROP  X8                  TEMPORARILY DROP LINE BASE
         USING WQE,X3
         TM    UCMSTS,UCMTC        IS THE CONSOLE STILL WORKING
*                                  ON AN IN-LINE MLWTO?
         BZ    PMFWQEND            NO, SO PURGE THE MLWTO
         LTR   X4,X4               IS THE MINOR'S USE COUNT ZERO?
         BNZ   PMF2                NO, ENABLE FOR INTERRUPTS
         SR    X3,X3               CLEAR TOP BYTE FOR ICM
         ICM   X3,MASK7,CQEWQEA    POINT TO MAJOR WQE
         OI    WMJMMLW,WMJMMLWG    THIS CHAIN NEEDS DEQUEUE CLEAN UP
         OI    UCMSTS,UCMTB        TELL DEQUEUE TO CHECK MY QUEUE
         DROP  X3                  FINISHED WITH MAJOR WQE
         USING WQE,X8              RE-ESTABLISH MINOR LINE BASE
PMF2     DS    0H                                                Y02751
         TM    WMNMLT1,WMNMLT1D    IS THIS AN 'END' LINE?
         BO    PMFWQEND            YES, PURGE THE MLWTO
PMF3     NC    WMNMNX1(THREE),WMNMNX1    DOES NEXT MINOR LINE EXIST?
         BZ    PMRET               NO, RETURN
         SPACE 1                                                 Y02756
*    IF THIS IS THE CURRENTLY THE LAST MINOR ON THE CHAIN, A     Y02756
*    TEST MUST BE MADE TO SEE IF PROCESSING IS SUSPENDED (FLAG   Y02756
*    WMJMDSPG), FOR IN THIS CASE IT WOULD APPLY TO THIS MINOR.   Y02756
         SPACE 1                                                 Y02756
         ICM   X8,MASK7,WMNMNX1    PICK UP PTR TO NEW MINOR      Y02756
         NC    WMNMNX1,WMNMNX1     IS THERE A MINOR AFTER THIS   Y02756
         BNZ   PMLW3               IF YES, BRANCH, THIS MINOR IS Y02756
*                                  NOT SUSPENDED.                Y02756
         L     X3,CQEWQE           PICK UP PTR TO MAJOR          Y02756
         TM    WMJMDSP-WMJM(X3),WMJMDSPG IS PROCESSING SUSPENDED Y02756
         BO    PMRET               IF IT IS, RETURN              Y02756
         B     PMLW3               GO WRITE THAT NEXT MINOR LINE
PMF4     NC    UCMMLAST(FOUR),UCMMLAST   IS THERE A MINOR LINE?
         BZ    PMF5                NO, LAST LINE DONE WAS MAJOR
         L     X8,UCMMLAST         SET BASE FOR MINOR
         B     PMF3                GET NEXT LINE POINTER
PMF5     L     X5,UCMWLAST         LOAD TEXT LINE POINTER
PMF6     ICM   X3,MASK7,CQEWQEA    GET MAJOR WQE POINTER
         B     PMF0                WORK WITH MAJOR WQE
         EJECT
PMRET    OI    UCMSDS5,UCMSDS5A    CONSOLE IS WAITING FOR MORE LINES
         NI    UCMSTS,K255-UCMPF   TURN OFF 'OUTPUT PENDING' FLAG
         B     PMRETURN            THIS MODULE HAS FINISHED ITS WORK
PMCOMEBK NI    UCMSDS5,K255-UCMSDS5A     NO LONGER WAITING
         L     X5,UCMWLAST         POINT TO CQE ENTRY
         TM    CQEFLAG,CQEATTOP    IS CHAIN SEARCH TO START AT TOP?
         BZ    PMF4                NO, PROCEED NORMALLY
         NI    CQEFLAG,K255-CQEATTOP    TURN OFF 'START AT TOP' FLAG
         B     PMF6                START CHAIN SEARCH AT TOP
         SPACE 2                                                 Y02756
*    THE WQE HAS BEEN MARKED FOR PURGING, DETERMINE IF IT IS     Y02756
*    A NORMAL OR A MLWTO MAJOR.                                  Y02756
         SPACE 1                                                 Y02756
PMWQEPRG DS    0H                                                Y02756
         TM    CQEFLAG,CQEMAJOR    IS WQE A MAJOR                Y02756
         BNO   PMFWQE              IF NOT A MAJOR, BRANCH        Y20756
         SPACE 1                                                 Y02756
PMFWQEND MVC   DCBBLKSI(TWO),H128  RESET DCB BLOCK SIZE TO 128
         NI    UCMSTS,K255-UCMTC   NO LONGER 'WORKING ON MLWTO'
         LTR   X5,X5               HAS K C,D,ID ALLOWED PURGE
*                                  TO TAKE PLACE?
         BZ    PMAPF               YES, SEE WHAT ELSE TO DO
PMFWQEN1 OI    CQEFLAG,CQEAVAIL    THIS CQE ENTRY NO LONGER NEEDED
         OI    UCMSTS,UCMTB        CONSOLE Q NEEDS TO BE CONSOLIDATED
         NI    CQEFLAG,K255-CQEENTR    WQE ADDR IS NO LONGER AVAILABLE
         EJECT
PMAPF    TM    UCMSTS,UCMPF+UCMTA  IS THERE OUTPUT OR AN OPEN PENDING?
         BZ    PMRETURN            NO, EXIT FROM THE MODULE
         TM    UCMSTS,UCMTA        YES, IS IT AN OPEN PENDING?
         BZ    PMAFA               NO, GO SEE IF OPEN WAS SUCCESSFUL
         MVI   CSACODE,CSAOPEN     YES, SET OPEN PENDING CODE
         B     PJSTART             GO TO OPEN/CLOSE RETURN       Y02711
         SPACE 1                                                 Y02711
PMAFA    DS    0H                                                Y02893
         TM    UCMSTS,UCMTC        IS MLWTO IN PROCESS
         BO    PMCOMEBK            YES, GET NEXT OUTPUT LINE
         L     X5,UCMWLAST         POINT TO CQE ENTRY
         LTR   X5,X5               IS THERE ANY?
         BNZ   PMTESTLT            YES, GO TEST IT
         L     X5,UCMOUTQ          NO, TRY THE OUTPUT QUEUE POINTER
         LTR   X5,X5               ANY OUTPUT TO DO?
         BZ    PMENDOFQ            NO, REACHED END OF QUEUE
PMTESTLT TM    CQEFLAG,CQEENTR     IS THIS A VALID ENTRY?
         BO    PMFOUND             YES, PERHAPS WE WILL PRINT IT
         TM    CQEFLAG,CQEEOB      IS THIS THE END OF BLOCK?
         BO    PMLINK              YES, GO GET NEXT CQE
         TM    CQEFLAG,CQEEOQ      IS THIS END OF CONSOLE QUEUE?
         BO    PMENDOFQ            YES, TURN OFF OUTPUT PENDING FLAG
         LA    X5,FOUR(X5)         UPDATE PTR TO LOOK AT NEXT ENTRY
         B     PMTESTLT            GO SEE IF IT IS LAST ONE
PMENDOFQ NI    UCMSTS,K255-UCMPF   TURN OFF OUTPUT PENDING FLAG
         B     PMAPF               RETURN AND CHECK FOR MORE
PMLINK   ICM   X5,MASK7,CQEWQEA    GET POINTER TO NEXT CQE BLOCK
         B     PMTESTLT            TEST NEXT WQE POINTER
         EJECT
PMFOUND  DS    0H                                                Y02752
         LA    X5,ZERO(X5)         CLEAR HIGH ORDER BYTE         Y02752
         ST    X5,UCMWLAST         UPDATE LAST CQE ENTRY POINTER
         ICM   X3,MASK7,CQEWQEA    NO, GET WQE POINTER
         DROP  X8
         USING WQE,X3              SET UP WQE BASE
         TM    WQEXA,WQEPURGE      IS THIS WQE PURGED?
         BNO   PMNOPURG            IF NOT, SKIP FOLLOWING TESTS  Y02756
         SPACE 2                                                 Y02756
**************************************************************** Y02756
*    IF THE WQE PURGE FLAG IS ON, THE FOLLOWING ADDITIONAL TESTS Y02756
*    MUST BE MADE TO DETERMINE HOW TO HANDLE THIS WQE.           Y02756
*        1.    IF CQEMLQHC IS ON, THEN THE WQE WAS QUEUED TO BE  Y02756
*              OUTPUT IN HARDCOPY FORMAT AND TESTS 2 AND 3 MUST  Y02756
*              ALSO BE APPLIED, OTHERWISE GO AHEAD AND PURGE IT. Y02756
*        2.    THIS MESSAGE MAY NEVER HAVE BEEN A CANDIDATE FOR  Y02752
*              HARDCOPY (WQEQFHC IS ZERO (0)) IN WHICH CASE,     Y02756
*              IT CAN BE PURGED. IF IT WAS A CANDIDATE FOR H.C., Y02756
*              THEN TEST 3 MUST BE APPLIED.                      Y02756
*        3.    ONLY 'HARDCOPY ONLY' MESSAGES OR MESSAGES THAT    Y02756
*              HAVE BEEN WRITTEN TO AT LEAST ONE CONSOLE SHOULD  Y02756
*              BE HARDCOPIED, THEREFORE WQEBUFC IS TESTED TO SEE Y02756
*              IF THE MESSAGE IS READY FOR HARDCOPY.             Y02756
**************************************************************** Y02756
         SPACE 1                                                 Y02756
         TM    CQEFLAG,CQEMLQHC    IS H.C. FORMAT REQUESTED      Y02756
         BNO   PMWQEPRG            IF NOT, GO SKIP THIS WQE      Y02756
         TM    WQEXA,WQEQFHC       IS WQE A H.C. CANDIDATE       Y02756
         BNO   PMWQEPRG            IF NOT, GO SKIP THIS WQE      Y02756
         TM    WQEAVAIL,WQEBUFC    IS WQE READY FOR H.C.         Y02756
         BNO   PMWQEPRG            IF NOT, GO SKIP THIS WQE      Y02756
         SPACE 1                                                 Y02756
PMNOPURG DS    0H                                                Y02756
         TM    CQEFLAG,CQEMAJOR    IS THIS AN MLWTO ENTRY?
         BO    PMLW                YES, PREPARE TO PRINT IT
         OI    WQEAVAIL,WQEBUFC    INDICATE WQE READY FOR H.C.   Y02756
         SPACE 1                                                 Y02756
*    IF THIS CONSOLE IS THE HARDCOPY DEVICE, ALL MESSAGES PUT    Y02756
*    OUT ON IT MUST BE IN HARDCOPY FORMAT (I.E. MESSAGES BEGIN   Y02756
*    AT WQETS INSTEAD OF AT WQETXT).                             Y02756
         SPACE 1                                                 Y02756
         LA    X2,WQETXT           POINT TO TEXT AREA IN THE WQE Y02893
         TM    CQEFLAG,CQEMLQHC    IS MESSAGE QUEUED FOR H.C.    Y02756
         BNO   PMHDRI              IF NOT H.C., CHECK FOR HDR    Y02756
         LA    X2,WQERR            SET UP PTR TO H.C. HEADER     Y02756
         B     PMFOUND1            GO OUTPUT HARDCOPY FORMAT     Y02756
         SPACE 1                                                 Y02756
*  TEST WHETHER THE TIME STAMP AND JOBID ARE TO BE INCLUDED      Y02756
*  WITH THE MESSAGE TEXT.                                        Y02756
         SPACE 1                                                 Y02756
PMHDRI   DS    0H                                                Y02756
         TM    UCMDISP2,UCMDISPI   TEST FOR TIME STAMP AND JOBID Y02756
         BNO   PMHDRJ              IF NOT, GO CHECK JOBID ONLY   Y02756
         LA    X2,WQETS            START MSG AT TIME STAMP       Y02756
         B     PMFOUND1            GO ISSUE MESSAGE              Y02756
         SPACE 1                                                 Y02756
*  TEST WHETHER THE JOBID HEADER IS TO BE INCLUDED WITH THE TEXT Y02756
         SPACE 1                                                 Y02756
PMHDRJ   DS    0H                                                Y02756
         TM    UCMDISP2,UCMDISPJ   TEST FOR JOBID HEADER NEEDED  Y02756
         BNO   PMFOUND1            IF NOT JOBID, USE JUST TEXT   Y02756
         LA    X2,WQEJOBNM         START MSG WITH JOBID HEADER   Y02756
         EJECT
**************************************************************** Y02893
*                                                                Y02893
*    COMMON OUTPUT ROUTINE, ISSUES WRITE MACRO FOR BOTH NORMAL   Y02893
*    AND MLWTO'S.  AT ENTRY THE REGS ARE SET AS FOLLOWS;         Y02893
*        X2    CONTAINS A POINTER TO THE TEXT TO BE WRITTEN      Y02893
*        X3    CONTAINS THE ADDRESS OF THE WQE OR MINOR          Y02893
*        X9    CONTAINS A POINTER TO THE DCB.                    Y02893
*                                                                Y02893
*    FIELD DCBBLKSZ CONTAINS THE LENGTH TO BE WRITTEN            Y02893
*                                                                Y02893
**************************************************************** Y02893
         SPACE 1                                                 Y02893
PMFOUND1 ST    X3,DMX              SAVE THIS POINTER
         MVI   DMX,DMXW            INSERT CODE OF 4
         OI    UCMSTS,UCMBF        FLAG THE CONSOLE UCM ENTRY BUSY
         BAL   XE,PFRELOCK         GO FREE LOCAL AND CMS LOCKS   Y02752
         SPACE 1                                                 Y02752
         LA    X1,DMDECB           POINT TO THE ECB
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PMEXCP              IF NOT, SKIP FOOTPRINTING     Y02753
         OI    PARMFTPT,PWRITE     INDICATE WRITE FOR RECOVERY   Y02753
PMEXCP   DS    0H                                                Y02753
         WRITE (1),SF,(9),(2),'S',MF=E
         SPACE 1                                                 Y02752
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PMRETRN1            IF NOT, SKIP CLEANUP          Y02753
         NI    PARMFTPT,K255-PWRITE    CLEAR WRITE FLAG          Y02753
         B     PMRETRN1            GO RETURN TO SVC 72 ISSUER    Y02752
         EJECT
*    ENTER HERE FOR MAJOR WRITE - THE MAJOR WQE TEXT AREA WILL BE
*    USED FOR OUTPUT. REG X3 CONTAINS ADDR OF WQE AT ENTRY       Y02893
         SPACE
PMLW     DS    0H                                                Y02756
         OI    UCMSTS,UCMTC        INDICATE WORKING ON MLWTO NOW Y02893
         OI    WMJMBUF,WMJMBUFC    SHOW MAJOR READY FOR H.C.     Y02756
         XC    UCMMLAST(FOUR),UCMMLAST     ZERO MINOR PTR
         SR    X6,X6               CLEAR LENGTH REG
         LH    X6,WMJMTXTL         GET TEXT LENGTH
         LTR   X6,X6               IS THE LENGTH ZERO (NULL LINE)?
         BZ    PMFWQE              YES, HANDLE THE WQE AS I/O COMPLETE
*                                  FOR THE TEXT LINE HAS BEEN RECEIVED
         LA    X2,WMJMTXT          POINT TO MAJOR WQE TEXT AREA
         TM    CQEFLAG,CQEMLQHC    IS THE WQE FOR HARDCOPY?
         BNO   PMLW2               NO, TEST FOR TIME STAMP       Y02756
         LA    X6,WMJMTXT-WMJMRR(X6)   ADD LENGTH OF H.C. HEADER Y02756
         LA    X2,WMJMRR           POINT TO MAJOR WQE H.C. HDR   Y02756
         B     PMLW1               GO PRINT LINE
         SPACE 1                                                 Y02756
*  TEST WHETHER TIME STAMP AND JOBID HEADER ARE TO BE USED       Y02756
         SPACE 1                                                 Y02756
PMLW2    DS    0H                                                Y02756
         TM    UCMDISP2,UCMDISPI   TEST FOR TIME STAMP AND JOBID Y02756
         BNO   PMLW2A              IF NOT, CHECK FOR JOBID ONLY  Y02756
         LA    X6,WMJMTXT-WMJMTS(X6) ADD LENGTH OF HEADER        Y02756
         LA    X2,WMJMTS           START MSG WITH TIME STAMP HDR Y02756
         B     PMLW1               GO STORE BLKSIZE              Y02756
         SPACE 1                                                 Y02756
*  TEST WHETHER THE JOBID HEADER IS TO BE USED.                  Y02756
         SPACE 1                                                 Y02756
PMLW2A   DS    0H                                                Y02756
         TM    UCMDISP2,UCMDISPJ   TEST FOR JOBID HEADER ONLY    Y20756
         BNO   PMLW1               IF NOT, USE MSG TEXT          Y02756
         LA    X6,WMJMTXT-WMJMJBNM(X6) ADD LENGTH OF HEADER      Y02756
         LA    X2,WMJMJBNM         START MSG WITH JOBID HEADER   Y02756
PMLW1    STH   X6,DCBBLKSI         STORE TEXT LENGTH IN DCB
         B     PMFOUND1            GO PRINT LINE
         SPACE 1                                                 Y02756
*  IF THE NEXT LINE TO BE OUTPUTTED IS A MINOR THIS ROUTINE      Y02756
*     WILL SET IT UP.                                            Y02756
         SPACE 1                                                 Y02756
PMLW3    DS    0H                                                Y02756
         ST    X8,UCMMLAST         UPDATE THE PTR TO THE MINOR   Y02756
*                                  BEING PROCESSED.              Y02756
         DROP  X3
         USING WQE,X8
         SR    X6,X6               CLEAR LENGTH REG
         IC    X6,WMNMTL1          GET MESSAGE TEXT LENGTH
         LTR   X6,X6               IS THE LENGTH ZERO (NULL LINE)?
         BZ    PMFWQE              YES, CAUSE TEXT LINE TO BE IGNORED
         TM    CQEFLAG,CQEMLQHC    IS MLWTO QUEUED FOR HARDCOPY?
         BO    PMLW4               YES, INCREASE TEXT LENGTH
         LA    X2,WMNMTXT1         POINT TO MINOR WQE TEXT AREA
         B     PMLW1               GO PRINT LINE
PMLW4    LA    X6,FOUR(X6)         BUMP TO INCLUDE HARDCOPY TEXT ID
         LA    X2,WMNMHCT1         POINT MINOR WQE HARDCOPY TEXT AREA
         B     PMLW1               GO PRINT LINE
         EJECT
**************************************************************** Y02753
*                                                                Y02753
*    COMMON ERROR ROUTINE, ENTERED IF 'CHECK' FINDS AN I/O ERROR Y02753
*    OR THE 'OPEN' SUBROUTINE IS UNABLE TO OPEN THE CONSOLE.     Y02753
*    AT ENTRY, NO LOCKS ARE HELD.  THIS ROUTINE WILL SET UP THE  Y02753
*    REGISTERS, FREE THE REG SAVE AREA, AND CALL THE CONSOLE     Y02753
*    SWITCH ROUTINE.                                             Y02753
*                                                                Y02753
**************************************************************** Y02753
PMERRCK  MVI   CSACODE,CSASWTCH    INDICATE CONSOLE SWITCH - ZERO CODE
         LR    X1,XD               PRT TO SAVE AREA TO BE FREED  Y02753
         SPACE 1                                                 Y02753
         FREEMAIN R,SP=SVSP,LV=SVLN,A=(1)  FREE THE SAVE AREA    Y02753
         SPACE 1                                                 Y02753
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PMERRNS             IF NOT, SKIP RESTORE OF RETRY Y02753
         MVC   PARMRTAD(EIGHT),CSAXB   RESTORE ORIGINAL RETRY    Y02753
PMERRNS  DS    0H                                                Y02753
         LR    X1,XB               REG 1 PTS TO CSA FOR SWITCH   Y02753
         L     XE,CSAXA            RESTORE RETURN ADDRESS        Y02893
         SPACE 1                                                 Y02752
         L     XF,CSACTLM          GET PTR TO UCM BASE           Y02752
         USING UCM,XF              TEMPORARY BASE FOR UCM        Y02752
         L     XF,UCMSWCH          GET PTR TO SWITCH MODULE      Y02752
         DROP  XF                  DROP TEMPORARY UCM BASE       Y02752
         MVC   CSANAME(EIGHT),IGC0407B      NAME OF SWITCH ROUTINE
         BR    XF                  BRANCH TO CONSOLE SWITCH      Y02752
         SPACE 2
         DROP  X5
         DROP  X8
         EJECT
**************************************************************** Y02751
*                                                                Y02751
*                       COMMON SETLOCK OBTAIN ROUTINE            Y02751
*                                                                Y02751
*  THIS ROUTINE WILL OBTAIN THE LOCAL AND CMS LOCKS, AND THEN    Y02751
*  ISSUE THE SETFRR.THE ADDRESS OF THE FRR WORK AREA WILL BE     Y02751
*  SAVED IN THE SVRB EXTENDED SAVE AREA.                         Y02751
*                                                                Y02751
*  ENTRY POINT:    PGETLOCK, VIA 'BAL   14,PGETLOCK'             Y02751
*                                                                Y02751
*  CALLED FROM:    1.  INITIAL MODULE ENTRY ROUTINE (PROLOGUE).  Y02751
*                  2.  AFTER RETURN FROM CHECK                   Y02751
*                  3.  DEVICE CLOSE ROUTINE                      Y02751
*                  4.  DEVICE OPEN ROUTINE                       Y02751
*                                                                Y02751
**************************************************************** Y02751
         SPACE 1                                                 Y02751
PGETLOCK DS    0H                                                Y02751
         ST    XE,CSAXE            SAVE RETURN REG               Y02751
         LR    XA,XB               USE THIS AS A TEMP CXSA BASE  Y02751
         LR    XF,XC               USE THIS AS A TEMP MOD BASE   Y02751
         DROP  XA,XB,XC                                          Y02751
         USING CXSA,XA             TEMPORARY CXSA BASE           Y02751
         USING IEAV1443,XF         TEMPORARY MODULE BASE         Y02751
         SPACE 3                                                 Y02751
*  GET THE LOCAL LOCK.                                           Y02751
         SPACE 1                                                 Y02751
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02751*
               RELATED=(UCM,IEAV1443(PFRELOCK))                  Y02751
         SPACE 3                                                 Y02751
*  GET THE CMS GLOBAL LOCK.  (UNCONDITIONAL REQUEST)             Y02751
         SPACE 1                                                 Y02751
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                    Y02751*
               RELATED=(UCM,IEAV1443(PFRELOCK))                  Y02751
         SPACE 2                                                 Y02751
*  SET FUNCTIONAL RECOVERY ROUTINE IN PLACE.                     Y02753
         SPACE 1                                                 Y02753
         L     XB,CSACTLM          GET PTR TO UCM BASE           Y02753
         L     XB,UCMFRRAD-UCM(XB) GET PTR TO COMMON FRR RTN     Y02753
         USING PSA,X0              BASE THE PSA (ADDR IS 0)      Y02753
         SETFRR A,FRRAD=(11),PARMAD=(13),WRKREGS=(12,13),        Y02753C
               RELATED=(CMS-LOCK,IEAV1052(PFRELOCK))             Y02753
         DROP  X0                                                Y02753
         SPACE 2                                                 Y02753
         ST    XD,CSADCBP          SAVE FRR WORKAREA ADDR        Y02753
         MVC   PARMID-PARMLIST(FOUR,XD),SVC72ID  MOVE IN
*                                  RECOVERY ID                 @ZM33331
         DROP  XA,XF               RELEASE TEMP BASE REGS        Y02751
         LR    XB,XA               RESTORE CXSA BASE             Y02751
         LR    XC,XF               RESTORE MODULES BASE          Y02751
         USING CXSA,XB                                           Y20751
         USING IEAV1443,XC                                       Y02751
         L     XA,CSAUCM           RESTORE UCME BASE REG         Y02751
         USING UCMLIST,XA                                        Y02751
         L     XD,CSAXF            REFRESH PTR TO REG SAVE AREA  Y02751
         L     XE,CSAXE            RESTORE RETURN REG            Y02751
         BR    XE                  RETURN TO SUBROUTINE CALLER   Y02751
         EJECT
**************************************************************** Y02751
*                                                                Y02751
*                       COMMON SETLOCK RELEASE ROUTINE           Y02751
*                                                                Y02751
*  THIS ROUTINE WILL REMOVE THE CURRENT FRR FROM THE STACK AND   Y02751
*  THEN FREE THE CMS AND LOCAL LOCKS (IN THE ORDER NAMED).       Y02751
*                                                                Y02751
*  ENTRY POINT:    PFRELOCK, VIA 'BAL  14,PFRELOCK'              Y02751
*                                                                Y02751
*  CALLED FROM:                                                  Y02751
*              1.  PMRETURN BEFORE RETURNING TO CALLER           Y02751
*              2.  PMBF BEFORE ISSUING CHECK                     Y02751
*              3.  PMFOUND1 BEFORE ISSUING WRITE MACRO           Y02751
*              4.  PJCLOSE TO ISSUE CLOSE MACRO                  Y02751
*              5.  PJOPEN TO ISSUE OPEN MACRO                    Y02751
*              6.  PJOPEN ON OPEN FAIL, BEFORE GOING TO PMERRCK  Y02751
*                                                                Y02751
**************************************************************** Y02751
         SPACE 1                                                 Y02751
PFRELOCK DS    0H                                                Y02751
         ST    XE,CSAXE            SAVE RETURN REG               Y02751
         LR    XA,XB               USE THIS AS A TEMP CXSA BASE  Y02751
         LR    XF,XC               USE THIS AS A TEMP MOD BASE   Y02751
         DROP  XA,XB,XC                                          Y02751
         USING CXSA,XA             TEMPORARY CXSA BASE           Y02751
         USING IEAV1443,XF         TEMPORARY MODULE BASE         Y02751
         SPACE 3                                                 Y02751
*  REMOVE THIS MODULES FRR FROM THE STACK.                       Y02751
         SPACE 1                                                 Y02751
         USING PSA,X0              BASE THE PSA (ADDR IS 0)      Y02753
         SETFRR D,WRKREGS=(12,13),                               Y20753C
               RELATED=(CMS-LOCK,IEAV1443(PGETLOCK))             Y02753
         DROP  X0                                                Y02753
         SR    XC,XC               CLEAR A REGISTER              Y02753
         ST    XC,CSADCBP          ZERO PTR TO FRR PARM ADDR     Y02753
         SPACE 2                                                 Y02751
*  ISSUE SETLOCK RELEASE TO RELEASE THE CMS LOCK                 Y02751
         SPACE 1                                                 Y02751
         SETLOCK RELEASE,TYPE=CMS,                               Y02751*
               RELATED=(UCM,IEAV1443(PGETLOCK))                  Y02751
         SPACE 2                                                 Y02751
*  ISSUE SETLOCK RELEASE TO RELEASE THE LOCAL LOCK               Y02751
         SPACE 1                                                 Y02751
         SETLOCK RELEASE,TYPE=LOCAL,                             Y02751*
               RELATED=(UCM,IEAV1443(PGETLOCK))                  Y02751
         SPACE 2                                                 Y02751
*  LOCKS HAVE NOW BEEN FREED, RESTORE REGS AND                   Y02751
*  RETURN TO THE SUBROUTINE CALLER.                              Y02751
         SPACE 1                                                 Y02751
         LR    XB,XA               RESTORE CXSA BASE             Y02751
         LR    XC,XF               RESTORE MODULES BASE          Y02751
         DROP  XA,XF               RELEASE TEMP BASE REGS        Y02751
         USING CXSA,XB                                           Y02751
         USING IEAV1443,XC                                       Y02751
         L     XA,CSAUCM           RESTORE UCME BASE REG         Y02751
         USING UCMLIST,XA                                        Y02751
         L     XD,CSAXF            REFRESH PTR TO REG SAVE AREA  Y02751
         L     XE,CSAXE            RESTORE RETURN REG            Y02751
         BR    XE                  RETURN TO SUBROUTINE CALLER   Y02751
         EJECT
**************************************************************** Y02753
*                                                                Y02753
*  IEAV1443 ESTAE RETRY ROUTINE, SOFTWARE RECOVERY               Y02753
*                                                                Y02753
**************************************************************** Y02753
         SPACE 1                                                 Y02753
P1443RTY DS    0H                                                Y02753
         BALR  XF,0                MAKE A TEMPORARY BASE REG     Y02753
         USING *,XF                                              Y02753
         L     XC,ADCON            GET PERMANENT MODULE BASE     Y02753
         DROP  XF                  TEMPORARY MODULE BASE         Y02753
         USING PSA,X0              BASE PSA                      Y02753
         L     XF,PSATOLD          GET PTR TO CURRENT TCB        Y02753
         DROP  X0                                                Y02753
         L     X5,TCBRBP-TCB(XF)   GET PTR TO MY SVRB            Y02753
         LA    XB,RBEXSAVE-RBSECT(X5)  RESTORE BASE FOR CXSA     Y02753
         L     XD,CSAXF            RESTORE PTR TO REGSAVE AREA   Y02753
         L     XA,CSAUCM           RESTORE BASE FOR UCME         Y02753
         L     X9,UCMDCB           RESTORE BASE FOR DCB          Y02753
         L     X7,CSANPTR          GET PTR TO RECOVERY PARMLIST  Y02753
         TM    PARMFTPT,PWRITE     WAS WRITE IN PROCESS          Y02753
         LA    XF,PMERRCK          GET PTR TO SWITCH SETUP       Y02753
         BO    RETRYFND            IF WRITE IN PROCESS, BRANCH   Y02753
         TM    PARMFTPT,PCHECK     WAS CHECK BEING PROCESSED     Y02753
         LA    XF,PMERRCK          USE CONSOLE SWITCH AS RECOVRY Y02753
         BO    RETRYFND            IF CHECK IN PROGRESS, BRANCH  Y02753
         TM    PARMFTPT,POPEN      WAS OPEN IN PROGRESS          Y02753
         LA    XF,PJOPRCVR         GET PTR TO OPEN RECOVERY      Y02753
         BO    RETRYOPN            IF OPEN IN PROGRESS BRANCH    Y02753
         TM    PARMFTPT,PCLOSE     WAS CLOSE IN PROGRESS         Y02753
         LA    XF,PJCLRCVR         GET PTR TO CLOSE RECOVERY     Y02753
         BO    RETRYPJS            IF CLOSE IN PROGRESS, BRANCH  Y02753
************************************************************** @ZA00873
*                                                              @ZA00873
*  AFTER ALL KNOWN RECOVERY FOOTPRINTS HAVE BEEN CHECKED, THE  @ZA00873
*  FOLLOWING BRANCH WILL BE TAKEN TO GIVE CONTROL TO THE       @ZA00873
*  CONSOLE SWITCH ROUTINE (IEAVSWCH). A CONSOLE SWITCH IS      @ZA00873
*  GENERATED TO PREVENT THE POSSIBILITY OF THE PROBLEM         @ZA00873
*  RECURRING OR CAUSE OTHER PROBLEMS TO OCCUR.                 @ZA00873
*                                                              @ZA00873
************************************************************** @ZA00873
         B     PMERRCK             PREPARE TO CONSOLE SWITCH   @ZA00873
         SPACE 1                                                 Y02753
*  NONE OF THE SPECIAL RECOVERY PROCESSES APPLY, RETURN TO VCTR  Y02753
         SPACE 1                                                 Y02753
RETRYPJS DS    0H                                                Y02753
         L     X2,CSACTLM          GET PTR TO UCM BASE           Y02753
         USING UCM,X2                                            Y02753
         SR    X4,X4               CLEAR REG FOR DIVIDE          Y02753
         LA    X5,UCMLIST          PTR TO UCME (CLEAR HIGH BYTE) Y02753
         S     X5,UCMVEA           GET OFFSET FROM 1ST UCME      Y02753
         D     X4,UCMVEZ           DIVIDE BY UCME SIZE           Y02753
         SLL   X5,TWO              MULTIPLY BY 4 FOR EIL INDEX   Y02753
         L     X4,UCMLSTP          GET PTR TO EIL BASE           Y02753
         USING UCMEIL,X4                                         Y02753
         LA    X5,UCMIECBA(X5)     GET EIL ENTRY FOR THIS UCME   Y02753
         DROP  X2,X4                                             Y02753
         SPACE 1                                                 Y02753
RETRYFND DS    0H                                                Y02753
         MVI   PARMFTPT,ZEROBYTE   CLEAR FOOTPRINT AREA          Y02753
         BR    XF                  GO TO RETRY ROUTINE           Y02753
         SPACE 2                                                 Y02753
RETRYOPN DS    0H                                                Y02753
         L     X9,CSAXD            GET PTR TO DCB AREA (OR ZERO) Y02753
         LTR   X9,X9               WAS A DCB AREA GOTTEN YET     Y02753
         BNZ   RETRYPJS            IF YES, GO TO STANDARD RETRY  Y02753
         LA    XF,PMERRCK          OTHERWISE, GO TO SWITCH SETUP Y02753
         B     RETRYFND            TO CONSOLE SWITCH SETUP       Y02753
***********************************************************************
*                                                                     *
*  PJECBINT - SUBROUTINE TO REINITIALIZE THE ECB POINTER TO    @ZA11907
*             THE EIL FOR OPEN AND CLOSE PROCESSING AFTER      @ZA11907
*             REENTRY FROM NOP EXCP PROCESSING IN SUBROUTINE   @ZA11907
*             PJCOMMON. REG5 IS SET TO POINT TO THE EIL ECB.   @ZA11907
*                                                                     *
***********************************************************************
PJECBINT EQU   *                                               @ZA11907
         L     XF,CSACTLM          GET UCM POINTER             @ZA11907
         USING UCM,XF              REG15 IS UCM BASE           @ZA11907
*                                                              @ZA11907
*  COMPUTE INDEX TO THE CORRECT I/O ECB WITHIN THE EIL         @ZA11907
*                                                              @ZA11907
         SR    X4,X4               ZERO OUT EVEN REG           @ZA11907
         LA    X5,UCMLIST          GET PTR TO UCME             @ZA11907
         S     X5,UCMVEA           SUBT. 1ST ENTRY FOR OFFSET  @ZA11907
         D     X4,UCMVEZ           DIVIDE BY ENTRY SIZE TO GET @ZA11907
*                                  INDEX                       @ZA11907
         SLL   X5,TWO              MULTIPLY BY 4               @ZA11907
         L     X4,UCMLSTP          POINT TO THE EIL            @ZA11907
         USING UCMEIL,X4           ESTABLISH BASE OF EIL       @ZA11907
         LA    X5,UCMRECBA+FOUR(X5) PT DIRECTLY TO THE ECB     @ZA11907
         DROP  X4                  FINISHED WITH EIL           @ZA11907
         TM    UCMSTS,UCMCF        CLOSE PROCESSING            @ZA11907
         BO    PJCLNCON            YES, CONTINUE CLOSE         @ZA11907
         B     PJOPNCT             NO, CONTINUE OPEN           @ZA11907
         EJECT
**************************************************************** Y02893
*                                                                Y02893
*   PJSTART -- IEAV1443 OPEN/CLOSE SUBROUTINE                    Y02893
*
*    THIS SUBROUTINE WILL GETMAIN, FORMAT AND OPEN TYPE=J A BSAM
*    DCB FOR A PRINTER BEING ALLOCATED AS A CONSOLE, OR CLOSE AND
*    FREEMAIN THE DCB WHEN THE PRINTER IS BEING REMOVED FROM
*    CONSOLE STATUS.
*
* OPERATION    INITIALLY FIELD CSACODE IN THE SVRB EXTENSION     Y02752
*              PARAMETER LIST MAPPED BY CXSA CONTAINS A CODE     Y02752
*              INDICATING WHETHER OPEN OR CLOSE IS REQUESTED.    Y02752
*              IF OPEN REQUEST, DYNAMIC CORE IS OBTAINED FOR A   Y02752
*              DCB/WORKAREA. TEMPORARY STORAGE IS GOTTEN FOR A   Y02752
*              JFCB. THE DDNAME IS BUILT. OPEN,TYPE=J, IS        Y02752
*              ISSUED. THE JFCB CORE IS THEN FREED. A SCAN OF    Y02752
*              THE EIL IS PERFORMED FOR THE ECB PTR FOR THIS     Y02752
*              CONSOLE, AND THE EIL PTR UPDATED TO POINT TO THE  Y02752
*              CURRENT ECB ADDRESS, IN THE WRITE MACRO L-FORM.   Y02752
*              IF CLOSE REQUEST, THE DCB IS CLOSED AND THE DCB   Y02752
*              STORAGE IS FREED AND THE ECB PTR IN THE EIL IS    Y02752
*              RESET TO POINT AT THE ECB IN THE UCME.            Y02752
*                                                                Y02893
**************************************************************** Y02893
         SPACE 3                                                 Y02893
PJSTART  EQU   *                   OPEN/CLOSE SUBROUTINE
         L     XF,CSACTLM          GET UCM POINTER
         USING UCM,XF              REG 15 IS BASE OF UCM
*
*   COMPUTE INDEX TO THE CORRECT I/O ECB WITHIN THE EIL
*
         SR    X4,X4               ZERO OUT EVEN REGISTER
         LA    X5,UCMLIST          GET PTR TO UCME               Y02752
         S     X5,UCMVEA           SUBTRACT FIRST ENTRY TO GET OFFSET
         D     X4,UCMVEZ           DIVIDE BY ENTRY SIZE TO GET INDEX
         SLL   X5,TWO              MULTIPLY BY 4
         L     X4,UCMLSTP          POINT TO THE EIL
         USING UCMEIL,X4           ESTABLISH BASE OF EIL
         LA    X5,UCMRECBA+FOUR(X5)  POINT DIRECTLY TO THE ECB
         DROP  X4,XF               FINISHED WITH EILAND UCM      Y02753
         SR    X4,X4               CLEAR FOR FOLLOWING IC AND LTR
         IC    X4,CSACODE          OBTAIN ENTRY CODE
         LTR   X4,X4               IS IT ZERO FOR OPEN?
         BZ    PJOPEN              YES, GO OPEN DCB
         MVI   CSACODE,ZERO        ZERO OUT CODE AND CLOSE
         EJECT
*    REMOVE THE PRINTER FROM CONSOLE STATUS
         SPACE
PJCLOSE  DS    0H                                                Y02893
         LTR   X9,X9               DOES THE DCB EXIST?
         BZ    PJSTATUS            NO, SO IGNORE MOST CLOSE PROCESSING
         SPACE 1                                                 Y02751
         SPACE 1                                                 Y02751
         BAL   XE,PFRELOCK         FREE LOCKS                  @ZA05367
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PJCLNSTA            IF NOT, SKIP FOOTPRINTING     Y02753
         OI    PARMFTPT,PCLOSE     INDICATE CLOSE PROCESS        Y02753
PJCLNSTA DS    0H                                                Y02753
         B     PJCOMMON            DO NOP EXCP                 @ZA05367
PJCLNCON EQU   *                   NOW CHECK FOR OPEN CONSOLE  @ZA11907
         LTR   X9,X9               DOES DCB EXIST FOR CONSOLE  @ZA11907
         BZ    PJSTATUS            NO, SKIP MOST CLOSE PROCESS @ZA11907
         MVI   DMXA,DMXCLOSE       CLOSE TERMINAL FLAG BYTE    @ZA11907
         LA    X1,DMXA
         CLOSE ((X9)),MF=(E,(1))   X9 POINTS TO DCB
         SPACE 1                                                 Y02711
         LR    X1,X9               GET ADDR OF DCB STORAGE       Y02711
         SPACE 1                                                 Y02711
         FREEMAIN R,SP=DMSP,LV=DMCORE,A=(1) FREE THE DCB STORAGE Y02711
         SPACE 1                                                 Y02711
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PJCLRCVR            IF NOT, SKIP RESETTING FLAG   Y02753
         NI    PARMFTPT,K255-PCLOSE    CLOSE PROCESS DONE        Y02753
PJCLRCVR DS    0H                                                Y02753
         SPACE 1                                                 Y02753
         BAL   XE,PGETLOCK         GO OBTAIN LOCAL AND CMS LOCKS Y02751
         EJECT
PJSTATUS DS    0H                                                Y02753
         L     X4,UCMUCB           GET PTR TO THIS CONSOLES UCB  Y02753
         USING UCB,X4              BASE THE UCB                  Y02753
         TM    UCBSTAT,UCBCHGS     IS DEVICE CHANGING TO OFFLINE?
         BZ    PJDEVSTA            NO, LEAVE ONLINE BIT ALONE
         SPACE 1                                                 Y02751
**************************************************************** Y02751
*  IF THE DEVICE IS GOING OFFLINE, TURN OFF THE FOLLOWING UCB    Y02751
*  FLAGS--- ONLINE, CHANGING, ALLOCATED, SYSTEM CONSOLE, AND     Y02751
*  'CONSOLE STATUS SWITCH'.                                      Y02751
**************************************************************** Y02751
         SPACE 1                                                 Y02751
         NIL   UCBSTAT,K255-UCBONLI-UCBCHGS-UCBALOC-UCBSYSR-UCBDADI,   *
               REF=UCBOB                                         Y02751
         SPACE 1                                                 Y02751
         B     PJCONTIN            CONTINUE PROCESSING
*                                  SHOW DEVICE IS ONLINE, NOT A CONSOLE
         EJECT
**************************************************************** Y02751
*  IF A DEVICE IS GOING OUT OF CONSOLE STATUS, BUT TO REMAIN     Y02751
*  ONLINE, TURN OFF THE FOLLOWING UCB FLAGS---                   Y02751
*  ALLOCATED, SYSTEM CONSOLE, AND 'CONSOLE STATUS SWITCH'.       Y02751
**************************************************************** Y02751
         SPACE 1                                                 Y02751
PJDEVSTA DS    0H                                                Y02751
         NIL   UCBSTAT,K255-UCBALOC-UCBSYSR-UCBDADI,             Y02751C
               REF=UCBOB                                         Y02751
         DROP  X4                  FINISHED WITH UCB
PJCONTIN NI    UCMATR,K255-UCMAT04-UCMUF  INDICATE THAT DEVICE STATUS
*                                  IS NOT TO CHANGE AND CONSOLE IS
*                                  NOT ACTIVE
         LA    X4,UCMECB           GET ADDR OF ECB
         STCM  X4,MASK7,ONE(X5)    PUT THIS ADDRESS INTO I/O ECB
         XC    UCMECB,UCMECB       CLEAR ECB
         XC    UCMDCB,UCMDCB       CLEAR DCB PTR
         NI    UCMSTS,K255-UCMBF-UCMCF-UCMTA NOT BUSY, CLOSED, @ZA11907
*                                           AND TURN OFF OPEN  @ZA11907
         B     PMRETURN            GO RETURN TO SVC 72 ISSUER    Y02893
         EJECT
PJOPEN   L     X4,UCMUCB           GET PRINTER'S UCB ADDRESS
         USING UCB,X4              UCB ADDRESSABILITY
         TM    UCBSTAT,UCBSYSR     IS DEVICE A CONSOLE           Y02752
         BNO   PMRETURN            NO, IT CAN'T BECOME A CONSOLE Y02893
         BAL   XE,PFRELOCK         GO FREE LOCAL AND CMS LOCKS   Y02751
         SPACE 1                                                 Y02753
         LTR   X7,X7                                             Y02753
         BZ    PJOPNSTA            IF NOT, SKIP RECOVERY SETUP   Y02753
         OI    PARMFTPT,POPEN      INDICATE OPEN PROCESS         Y02753
         ST    X9,CSAXD            INDICATE NO DCB STORAGE YET   Y02753
PJOPNSTA DS    0H                                                Y02753
*
*   GETMAIN CORE FOR A DCB, IOB AND DEB                        @ZA03882
*
PJCOMMON GETMAIN R,SP=DMSP,LV=DMCORE  ACQUIRE A DCB            @ZA05367
         SPACE 1                                                 Y02893
         LR    X0,X9               SAVE CONTENTS OF REG9       @ZA05367
         LR    X9,X1               MOVE DCB ADDR TO ITS BASE REG Y02711
         XC    IHADCB(DMCORE),IHADCB        CLEAR DCB          @ZA05367
         ST    X0,DCBSAVE(X0)      SAVE ORIGINAL DCB PTR       @ZA05367
         GETMAIN R,SP=DMSP,LV=IOBCOR  GET IOB AND DEB          @ZA03882
         LR    IOBREG,X1           GET ADDR OF IOB CORE        @ZA03882
         USING IOB,IOBREG          ADDRESSABILITY FOR IOB      @ZA03882
         XC    IOB(IOBCOR),IOB     CLEAR IOB                   @ZA03882
         LA    IOBREG,IOBSTDRD     POINT TO STANDARD SECTION   @ZA03882
         DROP  IOBREG              DROP OTHER USING            @ZA03882
         USING IOBSTDRD,IOBREG     ADDRESSABILITY FOR IOB      @ZA03882
         GETMAIN R,SP=DMSP,LV=DEBCOR  GET DEB                  @ZA03882
         DROP  X4                  FINISH WITH UCB             @ZA03882
         LR    DEBREG,X1           SAVE ADDRESS OF DEB         @ZA03882
         USING DEB,DEBREG          ADDRESSABILITY FOR DEB      @ZA03882
         XC    DEB(DEBCOR),DEB     CLEAR DEB                   @ZA03882
         LA    WORKR,DEBAVT        ADDR. OF APPENDAGE VECT. TB @ZA03882
         ST    WORKR,DEBAPPAD      POINT DEB TO APP. TABLE     @ZA03882
         LA    WORKR,APPENDGE      SET TABLE TO NOP            @ZA03882
         ST    WORKR,DEBEOEA       END-OF-EXTENT APP. ROUTINE  @ZA03882
         ST    WORKR,DEBSIOA       START I/O APP. ROUTINE      @ZA03882
         ST    WORKR,DEBPCIA       PCI APP. ROUTINE            @ZA03882
         ST    WORKR,DEBCEA        CHANNEL-END APP. ROUTINE    @ZA03882
         ST    WORKR,DEBXCEA       ABNORMAL-END APP.           @ZA03882
         LA    DEBREG,DEBBASIC     POINT TO BASIC SECTION      @ZA03882
         DROP  DEBREG              DROP OTHER USING            @ZA03882
         USING DEBBASIC,DEBREG     ADDRESSABILITY FOR DEB      @ZA03882
         ST    DEBREG,DCBDEBAD     STORE DEB ADDR IN DCB       @ZA03882
         ST    IOBREG,DCBIOBAD     STORE IOB ADDR IN DCB       @ZA03882
         STCM  X9,MASK7,DEBDCBB    STORE DCB ADDR IN DEB       @ZA03882
         L     WORKR,UCMUCB        GET ADDR OF UCB             @ZA03882
         STCM  WORKR,MASK7,DEBSUCBB STORE UCB ADDR IN DEB      @ZA03882
         STCM  X9,MASK7,IOBDCBPB   STORE DCB ADDR IN IOB       @ZA03882
         LA    WORKR,CCWNOP        GET ADDR OF NOP CCW         @ZA03882
         ST    WORKR,IOBSTART      STORE CCW ADDR IN IOB       @ZA03882
         MVI   IOBECBCC,IOBCD      SET COMPLETION CODE IN IOB  @ZA03882
         OI    IOBFLAG1,IOBUNREL   SET UNRELATED FLAG IN IOB   @ZA03882
         BAL   XE,PGETLOCK         GET THE LOCAL AND CMS LOCKS @ZA03882
         LA    XF,DMDECB           GET ECB ADDRESS             @ZA03882
         STCM  XF,MASK7,ONE(X5)    STORE ECB ADDR IN EIL       @ZA03882
         STCM  XF,MASK7,IOBECBPB   STORE ECB IN IOB            @ZA03882
         OI    UCMSTS,UCMBF        INDICATE DEVICE BUSY        @ZA03882
         ST    X9,UCMDCB           DCB ADDR IN UCME            @ZA03882
         XC    DMDECB,DMDECB       CLEAR I/O ECB               @ZA03882
         BAL   XE,PFRELOCK         FREE LOCKS                  @ZA03882
         LTR   X7,X7               IS THERE A RECOVERY AREA ?  @ZA03882
         BZ    EXCPDOW             IF NOT,SKIP FOOTPRINT INIT. @ZA03882
         OI    PARMFTPT,NOPEXCP    IND. NOP EXCP ISSUED        @ZA03882
EXCPDOW  LR    X1,IOBREG           ADDRESS OF IOB IN REG 1     @ZA03882
         EXCP  (1)                 ISSUE EXCP                  @ZA03882
         LTR   X7,X7               IS THERE A RECOVERY AREA ?  @ZA03882
         BZ    EXCPDOWA            IF NOT,SKIP FOOTPRINT INIT. @ZA03882
         OI    PARMFTPT,NOPEXCPD   IND. NOP EXCP DONE          @ZA03882
EXCPDOWA B     PMRETRN1            RETURN TO CALLER            @ZA03882
PJOPNCT  ST    X9,CSAXD            INDICATE DCB STORAGE GOTTEN @ZA03882
         L     X4,UCMUCB           ADDR OF UCB                 @ZA03882
         USING UCB,X4              UCB ADDRESSABLLITY          @ZA03882
         MVC   ZERO(DMCORE,X9),DMDCB   MOVE IN DCB MODEL         Y02711
         SPACE 1                                                 Y02893
         GETMAIN R,SP=OPNSP,LV=PNCORE  ACQUIRE JFCB, WORKAREA    Y02893
         SPACE 1                                                 Y02893
         LR    X8,X1               SET UP BASE OF GOTTEN BLOCKS
         USING PNOPEN,X8           CAN USE AS DSECT
         XC    PNOPEN(PNCORE),PNOPEN   CLEAR STORAGE             Y02711
         EJECT
**************************************************************** Y02711
*                                                                Y02711
*  FORM THE DDNAME FOR THIS CONSOLE BY CONVERTING THE CONSOLE    Y02711
*  ID TO EBCDIC (TO 3 DIGITS) AND CONCATENATING IT TO 'IEAVM'.   Y02711
*                                                                Y02711
**************************************************************** Y02711
         SPACE 1                                                 Y02711
         SR    X1,X1               CLEAR FOR INSERT CHAR INSTR   Y02711
         IC    X1,UCMID            PICK UP BINARY CONSOLE ID     Y02711
         CVD   X1,PNWORKD          CONVERT ID TO PACKED DECIMAL  Y02711
         UNPK  PNWORKD(L5),PNWORKH4(L3)  UNPACK ID TO EBCDIC     Y02711
         MVC   DCBDDNAM,BASENAM    MOVE 'IEAVM' TO DDNAME IN DCB Y02711
         MVC   DCBDDNAM+D5(L3),PNWORKD   CONCATENATE CONSOLE ID  Y02711
         SPACE 2                                                 Y02711
*  SET UP THE JFCB, AND DCB AND OPEN EXIT LIST.                  Y02711
         SPACE 1                                                 Y02711
         MVC   JFCBDSNM,PNDSN      MOVE IN DSNAME + 1 BLANK      Y02711
         MVC   JFCBDSNM+D8(L36),JFCBDSNM+D7  SET REMAINDER OF    Y02711
*                                            DSNAME FIELD IN     Y02711
*                                            JFCB TO BLANKS.     Y02711
         SPACE 1                                                 Y02711
*  SET FIELDS IN THE JFCB TO PREVENT WRITE BACK OF THE JFCB.     Y02711
         OI    JFCBTSDM,JFCTTR+JFCNWRIT+JFCNDSCB+JFCNDCB+JFCPAT  Y02711
         SPACE 1                                                 Y02711
         OI    PNXLST,LASTNTRY+EXITJFCB  SHOW LAST JFCB ENTRY    Y02711
         LA    X1,JFCB             GET JFCB PTR.                 Y02711
         STCM  X1,MASK7,PNXLST+ONE PUT INTO OPENJ EXLST
         LA    X1,PNXLST           GET EXIT LIST POINTER
         STCM  X1,MASK7,DCBEXLST+ONE  PUT INTO DCBEXLST
         OI    PNJEF,LASTNTRY         SET LAST IND.IN PARM      YM06163
         EJECT
**************************************************************** Y02711
*                                                                Y02711
*  NOW ISSUE OPEN, THEN FREEMAIN THE JFCB AND WORKAREA STORAGE.  Y02711
*                                                                Y02711
**************************************************************** Y02711
         SPACE 2                                                 Y02711
         OPEN  ((X9),OUTPUT),TYPE=J,MF=(E,PNJEF)    OPEN THE DCB Y02711
         SPACE 1                                                 Y02711
         XC    DCBEXLST+ONE(THREE),DCBEXLST+ONE    ZERO EXLST PTR
         LR    X1,X8               SET UP TO FREEMAIN JFCB, WORK Y02893
         DROP  X8                  FINISHED WITH JFCB, WORKAREA  Y02893
         SPACE 2                                                 Y02893
         FREEMAIN R,SP=OPNSP,LV=PNCORE,A=(1)  FREE JFCB, WORKA   Y02893
         SPACE 1                                                 Y02893
         LTR   X7,X7               IS THERE A RECOVERY AREA      Y02753
         BZ    PJOPRCVR            IF NOT, SKIP RESETTING FLAGS  Y02753
         NI    PARMFTPT,K255-POPEN TURN OFF OPEN PROCESS         Y02753
         EJECT
PJOPRCVR DS    0H                                                Y02753
         BAL   XE,PGETLOCK         GO OBTAIN LOCAL AND CMS LOCKS Y02751
         ST    X9,UCMDCB           PTR TO THIS CONSOLES DCB INTO Y02711
*                                  UCME FOR THIS CONSOLE.        Y02711
         NI    UCMATR,K255-UCMAT04 TURN OFF DEVICE STATUS BIT.   Y02711
         OI    UCMATR,UCMUF        MARK THIS CONSOLE ACTIVE      Y02711
         NI    UCMSTS,K255-UCMTA   TURN OFF OPEN PENDING         Y02711
         SPACE 1                                                 Y02711
**************************************************************** Y02893
*  UPDATE EVENT INDICATION LIST (EIL) SO THAT THE I/O COMPLETE
*  ECB PTR IN IT WILL POINT TO THE ECB IN THE DECB.
**************************************************************** Y02893
         SPACE
         LA    XF,DMDECB           GET ECB PTR.                  Y02753
         STCM  XF,MASK7,ONE(X5)    UPDATE EIL                    Y20753
         SPACE 2                                                 Y02893
**************************************************************** Y02753
*    OPEN SUBROUTINE IS NOW COMPLETE, TEST WHETHER OPEN WAS      Y02753
*    SUCCESSFUL.                                                 Y02753
**************************************************************** Y02753
         SPACE 1                                                 Y02753
         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL           Y02753
         BO    PMCF                IF YES, START PROCESSING      Y02753
         BAL   XE,PFRELOCK         IF OPEN FAILED, FREE LOCKS    Y02753
         B     PMERRCK             THEN GO TO CONSOLE SWITCH     Y02753
         EJECT
         DS    0D
ADCON    DC    A(IEAV1443)         START ADDR TO RESTORE BASE    Y02753
IGC0407B DC    CL8'IGC0407B'       NAME OF CONSOLE SWITCH ROUTINE
APPENDGE DC    X'07FE'             NOP APPENDAGE ROUTINE       @ZA03882
H128     DC    H'128'              RESTORE BLOCKSIZE
         SPACE 1                                                 Y02893
BASENAM  DC    C'IEAVM'            BASE FOR CONSOLE DDNAME       Y02711
PNDSN    DC    C'CONSOLE '         DSNAME USED TO OPEN CONSOLES  Y02711
SVC72ID  DC    C'VCTR'             IDENTIFIER FOR RECOVERY RTN   Y02753
CCW      DS    0D                  BOUNDARY INITIALIZATION     @ZA03882
CCWNOP   CCW   NOPCODE,DATAD,SLIB,COUNT  NOP CCW               @ZA05367
         SPACE 1                                                 Y02752
*  MODULE PATCH AREA.                                            Y02752
         DS    0D                                                Y02752
PATCH    DC    XL50'00'            50 BYTE PATCH AREA            Y02752
         EJECT
**************************************************************** Y02711
*                                                                Y02711
*  THE FOLLOWING SEGMENT CONTAINS THE FORM FOR THE DCB, AND THE  Y02711
*  EXECUTABLE MACRO LIST FORMS.  THE SEGMENT IS MOVED INTO       Y02711
*  DYNAMIC STORAGE AT CONSOLE OPEN TIME TO MAKE THE MODULE       Y02711
*  REENTRANT.                                                    Y02711
*                                                                Y02711
**************************************************************** Y02711
         SPACE 1                                                 Y02711
DMDCB    DCB   DDNAME=IEAVMXXX,                                  Y02711C
               MACRF=(W),                                        Y02711C
               SYNAD=PMERRCK,                                    Y02711C
               DSORG=PS,                                         Y02711C
               DEVD=PR,PRTSP=1,NCP=1,                            Y02711C
               RECFM=FS,                                         Y02711C
               BUFNO=0,                                          Y02711C
               BLKSIZE=128                                       Y02711
         SPACE 1                                                 Y02711
DMXX     DC    D'0'                FORM FOR MODULE I/O WORKAREA  Y02711
DMWRITEX WRITE DMDECBX,SF,0,0,'S',MF=L   LIST FORM OF WRITE      Y02711
         SPACE 1                                                 Y02711
DCBSAVEX DC    A(0)                SPACE TO SAVE ORIGINAL DCB  @ZA05367
DMCORE   EQU   *-DMDCB             LENGTH FOR GETMAIN            Y02711
         EJECT
X0       EQU   0                   REG 0 EQUATE                  Y02752
X1       EQU   1                   *
X2       EQU   2                   *
X3       EQU   3                   *
X4       EQU   4                   *
X5       EQU   5                   *
X6       EQU   6                   *
X7       EQU   7                   ESTAE PARMLIST BASE           Y02753
X8       EQU   8                   *
X9       EQU   9                   PTR TO DCB                    Y02893
XA       EQU   10                  UCME BASE, THIS CONSOLE       Y02893
XB       EQU   11                  CXSA BASE (RBEXSAVE)          Y02893
XC       EQU   12                  PROGRAM BASE REG              Y02893
XD       EQU   13                  STANDARD REG SAVE AREA        Y02893
XE       EQU   14                  *
XF       EQU   15                  *
D5       EQU   5                   DISPLACEMENT OF 5             Y02752
D7       EQU   7                   DISPLACEMENT OF 7             Y02752
D8       EQU   8                   DISPLACEMENT OF 8             Y02752
K255     EQU   255                 MASK FOR TURNING OFF FLAGS    Y02893
L3       EQU   3                   LENGTH OF 3 BYTES             Y02752
L5       EQU   5                   LENGTH OF 5 BYTES             Y02752
L36      EQU   36                  LENGTH OF 36 BYTES            Y02752
ZERO     EQU   0                   ZERO                          Y02893
ONE      EQU   1                   ONE                           Y02893
TWO      EQU   2                   TWO                           Y02893
THREE    EQU   3                   THREE                         Y02893
FOUR     EQU   4                   FOUR                          Y02893
EIGHT    EQU   8                   EIGHT                         Y02893
TEN      EQU   X'10'               IOB PREFIX                  @ZA03882
TWN4     EQU   X'24'               DEB PREFIX                  @ZA03882
MASK7    EQU   7                   MASK FOR THE ICM INSTRUCTION  Y02893
WORKR    EQU   1                   WORK REGISTER               @ZA03882
IOBREG   EQU   8                   IOB REGISTER                @ZA03882
DEBREG   EQU   4                   DEBREG REGISTER             @ZA03882
ZEROBYTE EQU   X'00'               FOR CLEARING FLAG BYTES       Y02753
LASTNTRY EQU   X'80'               SYMBOLIC FOR END OF LIST FLAG Y02752
EXITJFCB EQU   X'07'               JFCB EXIT LIST FLAG           Y02752
SVSP     EQU   255                 SUBPOOL NO. FOR REG SAVE AREA Y02893
SVLN     EQU   72                  LENGTH OF REG SAVE AREA       Y02893
DMSP     EQU   255                 SUBPOOL NO. FOR DCB STORAGE   Y02893
OPNSP    EQU   255                 SUBPOOL NO. FOR OPEN WORKAREA Y02893
POPEN    EQU   X'08'               FOOTPRINT FOR OPEN PROCESS    Y02753
PWRITE   EQU   X'20'               FOOTPRINT FOR WRITE MACRO     Y02753
PCHECK   EQU   X'02'               FOOTPRINT FOR CHECK MACRO     Y02753
PCLOSE   EQU   X'10'               FOOTPRINT FOR CLOSE MACRO     Y02753
NOPEXCP  EQU   X'01'               NOP EXCP ISSUED             @ZA03882
NOPEXCPD EQU   X'03'               NOP EXCP COMPLETED          @ZA03882
IOBCD    EQU   X'7F'               SUCCESSFUL I/O TEST         @ZA03882
IOBCOR   EQU   48                  LENGTH OF IOB               @ZA10145
DEBCOR   EQU   96                  LENGTH OF DEB               @ZA03882
*******  THE FOLLOWING TWO EQUATES ARE FOR THE IOB AND DEB.    @ZA05367
         EJECT
*******  IF EITHER OF THESE CONTROL BLOCKS CHANGE IN SIZE, THE @ZA05367
*******  EQUATES MUST BE CHANGED.                              @ZA05367
NOPCODE  EQU   3                   NOP COMMAND CODE            @ZA05367
DATAD    EQU   0                   NO DATA ADDR                @ZA05367
SLIB     EQU   X'20'               SLI BIT                     @ZA05367
COUNT    EQU   1                    COUNT FIELD                @ZA05367
*  NOTE:  THE DSECT MAPPED BY IHADCB INCLUDES THE LIST FORM OF   Y02711
*         THE WRITE MACRO, AND A DOUBLE WORD OF WORK AREA USED   Y02711
*         IN CONNECTION WITH THE I/O OPERATIONS OF THIS MODULE.  Y02711
         SPACE 3                                                 Y02711
DMDCB    IHADCB DSORG=BS,DEVD=PR   DCB MAPPING MACRO             Y02711
         SPACE 2                                                 Y02711
DMX      DC    D'0'                I/O WORK AREA                 Y02711
DMXA     EQU   DMX+4               SECOND WORD OF WORK AREA      Y02711
DMXCLOSE EQU   128                 CLOSE TERMINAL FLAG          YM05450
DMXW     EQU   4                                                 Y02711
         SPACE 1                                                 Y02711
DMWRITE  WRITE DMDECB,SF,DMX,DMX,'S',MF=L  WRITE MACRO           Y02711
DCBSAVE  DC    A(0)                SPACE TO SAVE ORIGINAL DCB  @ZA05367
         EJECT
PNOPEN   DSECT                                                   Y02711
JFCB     DS    0D                                                Y02711
         IEFJFCBN ,                                              Y02711
         SPACE 2                                                 Y02711
*  OPEN EXIT LIST FOR TYPE=J (SET UP BY THE OPEN MACRO)          Y02711
         SPACE 1                                                 Y02711
PNJEF    DC    X'80'               INDICATE END OF LIST          Y02711
         DC    AL3(0)              SPACE FOR ADDRESS             Y02711
         SPACE 2                                                 Y02711
PNXLST   DC    X'87'               END OF LIST AND JFCB EXIT     Y02711
         DC    AL3(0)              ADDRESS OF JFCB               Y02711
         SPACE 2                                                 Y02711
*  TEMPORARY WORK AREA USED DURING PREPARATION FOR OPEN          Y02711
         SPACE 1                                                 Y02711
PNWORKD  DC    D'0'                DOUBLE WORD FOR CVD INSTR     Y02711
         ORG   PNWORKD+6           BACK UP TO LAST HALF WORD     Y02711
PNWORKH4 DC    H'0'                LAST HALF WORD OF PNWORKD     Y02711
PNWORKX  DC    X'00'               EXTRA BYTE USED DURING UNPK   Y02711
         SPACE 1                                                 Y02711
PNCORE   EQU   *-PNOPEN            SYMBOLIC FOR LENGTH OF DSCET  Y02711
         EJECT
         CVT DSECT=YES
         EJECT
         EJECT
         IEZIOB DSECT=YES                                      @ZA03882
DEBC     DSECT                                                 @ZA03882
         EJECT
         IEZDEB LIST=YES                                       @ZA03882
         IHAFRRS                   USED BY SETFRR MACRO          Y02751
         EJECT
         IHAPSA                    USED BY THE SETFRR MACRO      Y02751
         EJECT
         IHARB DSECT=YES           RB MAPPING USED IN RECOVERY   Y02753
         EJECT
         IKJTCB
         EJECT
UCB      DSECT
         IEFUCBOB
         EJECT
         IEECUCM FORMAT=NEW
         EJECT
         IHACTM CXSA
         EJECT
         IHACTM FTPT               RECOVERY WORKAREA MAPPING     Y02753
         EJECT
         IHAWQE
         EJECT
         IHACTM CQE
         END
