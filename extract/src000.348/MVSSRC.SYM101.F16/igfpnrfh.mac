         TITLE ' IGFPNRFH - NUCLEUS PAGE PAGEIN                        *
                        '
IGFPNRFH CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGFPNRFH  77.252'                                 0001
         DROP  @15
@PROLOG  BALR  @09,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@09                                         0001
*                                      AREA.                         */
*                                                                  0063
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF MAINLINE CODE                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0063
*   R5=R14;                         /* SAVE RETURN REGISTER          */
         LR    R5,R14                                              0063
*   IF R1>=CVTNUCB THEN                                            0064
         L     @14,CVTPTR                                          0064
         C     R1,CVTNUCB(,@14)                                    0064
         BNL   @RT00064                                            0064
*     GOTO EXIT;                    /* NOT NUCLEUS ADDRESS, EXIT     */
*   R6=R1;                          /* R1 ON INPUT=LRBMFSA IN SRB    */
*                                                                  0066
         LR    R6,R1                                               0066
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH RECOVERY ENVIRONMENT FOR MAINLINE                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0067
*   R2=ADDR(ABNORMER);              /* ESTABLISH FRR ENTRY POINT   0067
*                                      ADDRESS                       */
         LA    R2,ABNORMER                                         0067
*   GENERATE REFS(PSA,PSALSFCC,FRRSENTR,FRRSLAST,FRRSFRRA,FRRSPARM,
*       PSACSTK,FRRSCURR,FRRSEMP,FRRSELEN);                        0068
 SETFRR A,FRRAD=(R2),WRKREGS=(FRRSPTR,FRREPTR),PARMAD=(PARMFRR)
*   RTNREG=R5;                      /* SAVE RETURN REGISTER 14 IN  0069
*                                      TRACKING AREA                 */
         ST    R5,RTNREG(,PARMFRR)                                 0069
*   BASEREG=R9;                     /* SAVE BASE REGISTER 9 IN     0070
*                                      TRACKING AREA                 */
*                                                                  0070
         ST    R9,BASEREG(,PARMFRR)                                0070
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE LOCAL AND SALLOC LOCKS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0071
*   GENERATE REFS(PSALITA,PSAMPSW);                                0071
*                                                                  0071
 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,RELATED=(LOCKFR,'FREE')
 SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED=(LOCKFR,'FRE')
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN STORAGE FOR MODULE'S DATA AREA. GLOBAL BRANCH ENTRY IS*/
*   /* USED SO THAT THERE IS NO NEED FOR TCB, ASCB.                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0072
*   R3=LENGTH(DATAAREA);            /* ESTABLISH GETMAIN LENGTH OF 0072
*                                      THE DATA AREA                 */
         LA    R3,151                                              0072
*   GENERATE REFS(CVTCRMN,CVTGMBR,CVTCBBR,CVTSPSA,CVTGLMN,WSAG,WSAGGMFM
*       );                                                         0073
 GETMAIN RC,LV=(R3),SP=245,BRANCH=(YES,GLOBAL)
*   IF RETCODE^=0 THEN                                             0074
         LTR   RETCODE,RETCODE                                     0074
         BNZ   @RT00074                                            0074
*     GOTO LOCKFR;                  /* GETMAIN FAIL, FREE LOCK AND 0075
*                                      EXIT                          */
*   DATAPTR=R1;                     /* GETMAIN OKAY. ESTABLISH DATA
*                                      ADDRESS POINTER               */
         LR    DATAPTR,R1                                          0076
*   DATAAREA=DATAAREA&&DATAAREA;    /* ZERO OUT DATA AREA            */
         XC    DATAAREA(151,DATAPTR),DATAAREA(DATAPTR)             0077
*   ERRADDR=R6;                     /* RESTORE INPUT=LRBMFSA FROM SRB*/
         ST    R6,ERRADDR(,DATAPTR)                                0078
*   BASE9=R9;                       /* SAVE BASEREG FOR CPU        0079
*                                      SERIALIZATION LOOP            */
         ST    R9,BASE9(,DATAPTR)                                  0079
*   R13=ADDR(SAVEAREA);             /* ESTABLISH SAVEARE - NOT     0080
*                                      PRESENTLY USED                */
         LA    R13,SAVEAREA(,DATAPTR)                              0080
*   DATASAV=DATAPTR;                /* SAVE DATA POINTER IN FRR    0081
*                                      TRACKING AREA                 */
*                                                                  0081
         ST    DATAPTR,DATASAV(,PARMFRR)                           0081
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE ERROR PAGE'S XPTE POINTER                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0082
*   PVTPTR=CVTPVTP;                 /* GET PVT ADDRESS               */
         L     @14,CVTPTR                                          0082
         L     @14,CVTPVTP(,@14)                                   0082
         ST    @14,PVTPTR(,DATAPTR)                                0082
*   R1=ERRADDR;                     /* GET STORAGE ERROR ADDR AS   0083
*                                      INPUT FOR FIND PAGE           */
         L     @12,ERRADDR(,DATAPTR)                               0083
         LR    R1,@12                                              0083
*   CALL IEAVFP;                    /* GO AND LOCATE THE NUCLEUS   0084
*                                      PAGE'S XPTE                   */
         L     @15,PVTPFP(,@14)                                    0084
         BALR  @14,@15                                             0084
*   IF RETCODE^=0 THEN                                             0085
         LTR   RETCODE,RETCODE                                     0085
         BNZ   @RT00085                                            0085
*     GOTO FREEDA;                  /* XPTE NOT FOUND, FREE LOCK,  0086
*                                      EXIT                  @ZM45605*/
*   NUCXPTR=R1;                     /* XPTE FOUND. SAVE XPTE POINTER
*                                      OF NUCLEUS                    */
         ST    R1,NUCXPTR(,DATAPTR)                                0087
*   XPTEPTR=R1;                     /* ESTABLISH XPTE POINTER        */
*                                                                  0088
         ST    R1,XPTEPTR(,DATAPTR)                                0088
*   /*****************************************************************/
*   /*                                                               */
*   /* IF EXTERNAL STORAGE FOR PAGE IS NOT VALID, EXIT               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0089
*   IF XPTLSID='00'X×XPTLSID='FFFFFFFF'X THEN                      0089
         L     @14,XPTEPTR(,DATAPTR)                               0089
         L     @14,XPTLSID(,@14)                                   0089
         LTR   @14,@14                                             0089
         BZ    @RT00089                                            0089
         CL    @14,@CF02449                                        0089
         BE    @RT00089                                            0089
*     GOTO FREEDA;                  /*                       @ZM45605*/
*                                                                  0090
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN CSA PAGE FOR NUCLEUS PAGE PAGEIN                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0091
*   NUCXPTE=NUCXPTR->XPTE;          /* SAVE THE NUCLEUS PAGE'S XPTE  */
         L     @14,NUCXPTR(,DATAPTR)                               0091
         MVC   NUCXPTE(12,DATAPTR),XPTE(@14)                       0091
*   NUCXPTR->XPTE=NUCXPTR->XPTE&&NUCXPTR->XPTE;/* ZERO NUCLEUS XPTE
*                                      AS A SAFEGUARD.               */
         XC    XPTE(12,@14),XPTE(@14)                              0092
*   GEN( GETMAIN RC,LV=4096,SP=231,BNDRY=PAGE,BRANCH=(YES,GLOBAL));
          GETMAIN RC,LV=4096,SP=231,BNDRY=PAGE,BRANCH=(YES,GLOBAL)
*   IF RETCODE^=0 THEN                                             0094
         LTR   RETCODE,RETCODE                                     0094
         BNZ   @RT00094                                            0094
*     GOTO FREEDA;                  /* GETMAIN FAIL, FREE LOCK, EXIT
*                                                            @ZM45605*/
*                                                                  0095
*   /*****************************************************************/
*   /*                                                               */
*   /* REGISTER 1 HAS ADDR THAT IS INPUT TO IEAVFP                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0096
*   CSAADR=R1;                      /* SAVE CSA PAGE ADDRESS IN FRR
*                                      TRACKING AREA                 */
         ST    R1,CSAADR(,PARMFRR)                                 0096
*   CALL IEAVFP;                    /* LOCATE CSA PAGE XPTE          */
         L     @12,PVTPTR(,DATAPTR)                                0097
         L     @15,PVTPFP(,@12)                                    0097
         BALR  @14,@15                                             0097
*   IF RETCODE^=0 THEN                                             0098
         LTR   RETCODE,RETCODE                                     0098
         BNZ   @RT00098                                            0098
*     GOTO FREE;                    /* XPTE NOT FOUND, FREE LOCK,  0099
*                                      EXIT                          */
*   CSAXPTR=R1;                     /* GET CSA XPTE ADDRESS - XPTE 0100
*                                      FOUND                         */
         ST    R1,CSAXPTR(,DATAPTR)                                0100
*   CSAXPTE=CSAXPTR->XPTE;          /* SAVE THE CSA PAGE XPTE        */
         L     @14,CSAXPTR(,DATAPTR)                               0101
         MVC   CSAXPTE(12,DATAPTR),XPTE(@14)                       0101
*   CSAXPTR->XPTE=NUCXPTE;          /* SET CSA XPTE TO NUCLEUS PAGE
*                                      XPTE                          */
*                                                                  0102
         MVC   XPTE(12,@14),NUCXPTE(DATAPTR)                       0102
*   /*****************************************************************/
*   /*                                                               */
*   /* TO CAUSE PAGEIN MUST RELEASE SALLOC FIRST                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0103
*   GENERATE;                                                      0103
*                                                                  0103
 SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=(NONE,'FIRST OBTAIN')
*   /*****************************************************************/
*   /*                                                               */
*   /* PAGEFAULT INTO CSA STORAGE NUCLEUS PAGE COPY                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0104
*   FAULT=CSAADR->PGFAULT;          /* CAUSES NUCLEUS PAGE PAGED INTO
*                                      CSA STORAGE                   */
*                                                                  0104
         L     @14,CSAADR(,PARMFRR)                                0104
         MVC   FAULT(4,DATAPTR),PGFAULT(@14)                       0104
*   /*****************************************************************/
*   /*                                                               */
*   /* GET SALLOC LOCK BACK FOR FREEMAIN'S USE.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0105
*   GENERATE;                                                      0105
 SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED=(LOCKFR,'FRE')
*   R1=ERRADDR×4095&&4095;          /* ROUND STORAGE ERROR ADDR DOWN
*                                      TO PAGE BNDY                  */
         LA    @14,4095                                            0106
         L     @12,ERRADDR(,DATAPTR)                               0106
         LR    R1,@12                                              0106
         OR    R1,@14                                              0106
         XR    R1,@14                                              0106
*   IF ERRADDR<R1+2048 THEN                                        0107
         LA    @14,2048                                            0107
         ALR   @14,R1                                              0107
         CR    @12,@14                                             0107
         BNL   @RF00107                                            0107
*     DO;                           /* ERROR IN 1ST PART OF PAGE?  0108
*                                      CHANGED?                      */
*       GENERATE;                                                  0109
*             /* IF CHANGED , EXIT */
    RRB 0(R1)
    BC 5,FREE
*     END;                          /* END 1ST PART OF PAGE CHANGED
*                                      TEST                          */
*   ELSE                                                           0111
*     DO;                           /* MUST BE IN 2ND PART OF PAGE.
*                                      CHANGED?                      */
         B     @RC00107                                            0111
@RF00107 DS    0H                                                  0112
*       GENERATE;                                                  0112
*              /* IF CHANGED , EXIT */
     RRB 2048(R1)
     BC 5,FREE
*     END;                          /* END 2ND PART OF PAGE CHANGED
*                                      TEST                          */
*                                                                  0113
*   /*****************************************************************/
*   /*                                                               */
*   /* SERIALIZE MULTI-PROCESSOR(S) TO AVOID POSSIBLE CHANGE TO      */
*   /* STORAGE IN ERROR AFTER LAST TEST FOR PAGE CHANGE STATUS       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0114
*   IF CSDCPUOL>1 THEN                                             0114
@RC00107 LA    @14,1                                               0114
         L     @12,CVTPTR                                          0114
         L     @12,CVTCSD(,@12)                                    0114
         CH    @14,CSDCPUOL(,@12)                                  0114
         BNL   @RF00114                                            0114
*     DO;                           /* SERIALIZE MULTI-PROCESSOR(S)  */
*       LOOPBIT='0'B;               /* CPU SERIALIZATION BIT = 0   0116
*                                      CAUSES OTHER CPUS TO LOOP     */
         NI    LOOPBIT(DATAPTR),B'01111111'                        0116
*       DO LOOPCNT=1 TO 16;         /* LOOP THROUGH MAX CPUS       0117
*                                      SUPPORTED                     */
         ST    @14,LOOPCNT(,DATAPTR)                               0117
@DL00117 DS    0H                                                  0118
*         TEMPMASK=CSDMASK(LOOPCNT);/* GET CPU ID MASK FROM CSD      */
         L     @14,LOOPCNT(,DATAPTR)                               0118
         LR    @12,@14                                             0118
         ALR   @12,@12                                             0118
         L     @11,CVTPTR                                          0118
         L     @07,CVTCSD(,@11)                                    0118
         ALR   @12,@07                                             0118
         MVC   TEMPMASK(2,DATAPTR),CSDMASK-2(@12)                  0118
*         IF(CSDCPUAL&TEMPMASK)=0×  /* CPU NOT ALIVE OR              */
*             PCCAT00P(LOOPCNT)=0×  /* CPU'S PCCA DOES NOT EXIST     */
*             PCCAT00P(LOOPCNT)=PSAPCCAV THEN                      0119
         SLR   @12,@12                                             0119
         SLR   @04,@04                                             0119
         ICM   @04,3,TEMPMASK(DATAPTR)                             0119
         SLR   @03,@03                                             0119
         ICM   @03,3,CSDCPUAL(@07)                                 0119
         NR    @04,@03                                             0119
         CR    @04,@12                                             0119
         BE    @RT00119                                            0119
         SLA   @14,2                                               0119
         L     @11,CVTPCCAT(,@11)                                  0119
         AL    @11,@CF02486                                        0119
         L     @14,PCCAT00P(@14,@11)                               0119
         CR    @14,@12                                             0119
         BE    @RT00119                                            0119
         C     @14,PSAPCCAV                                        0119
         BE    @RT00119                                            0119
*           GOTO LOOPCTL1;          /* OR THIS CPU , CONTINUE SEARCH */
*         R12=ADDR(CPULOOP);        /* FOUND A CPU NEEDED TO BE    0121
*                                      SERIALIZED                    */
         LA    R12,CPULOOP                                         0121
*         R11=DATAPTR;              /* ESTABLISH ROUT. ADDR (ABOVE)
*                                      AND ITS INPUT                 */
         LR    R11,DATAPTR                                         0122
*         R1=PCCAT00P(LOOPCNT);     /* ESTABLISH THE CPU'S PCCA    0123
*                                      ADDRESS                       */
         LR    R1,@14                                              0123
*         GENERATE REFS(CVT,CVTIPCRI);                             0124
*                                SIGNAL THAT CPU FOR SERIALIZATION */
    RISGNL PARALLEL,CPU=(1),EP=(12),PARM=(11)
*         IF RETCODE^=0&RETCODE^=20 THEN                           0125
         LTR   RETCODE,RETCODE                                     0125
         BZ    @RF00125                                            0125
         CH    RETCODE,@CH02456                                    0125
         BNE   @RT00125                                            0125
*           GOTO CPUFREE;           /* SIGNAL FAILED?                */
*LOOPCTL1:                                                         0127
*         ;                         /* SIGNAL DID NOT FAIL OR      0127
*                                      CONTINUE PCCA VECTOR LOOP     */
@RF00125 DS    0H                                                  0127
LOOPCTL1 DS    0H                                                  0128
*       END;                        /* END SEARCH OF CPUS THAT NEED
*                                      TO BE SERIALIZED              */
         LA    @14,1                                               0128
         AL    @14,LOOPCNT(,DATAPTR)                               0128
         ST    @14,LOOPCNT(,DATAPTR)                               0128
         CH    @14,@CH00823                                        0128
         BNH   @DL00117                                            0128
*     END;                          /* END TEST FOR                0129
*                                      MULTI-PROCESSOR(S)            */
*   R1=ERRADDR×4095&&4095;          /* ROUND STORAGE ERROR ADDR DOWN
*                                      TO PAGE BNDY                  */
@RF00114 LA    @14,4095                                            0130
         L     @12,ERRADDR(,DATAPTR)                               0130
         LR    R1,@12                                              0130
         OR    R1,@14                                              0130
         XR    R1,@14                                              0130
*   IF ERRADDR<R1+2048 THEN                                        0131
         LA    @14,2048                                            0131
         ALR   @14,R1                                              0131
         CR    @12,@14                                             0131
         BNL   @RF00131                                            0131
*     DO;                           /* ERROR IN 1ST PART OF PAGE?  0132
*                                      CHANGED?                      */
*       GENERATE;                                                  0133
*             /* IF CHANGED , CLEANUP AND EXIT */
    RRB 0(R1)
    BC 5,CPUFREE
*     END;                          /* END 1ST PART OF PAGE CHANGED
*                                      TEST                          */
*   ELSE                                                           0135
*     DO;                           /* MUST BE IN SECOND PART OF   0135
*                                      PAGE. CHANGED?                */
         B     @RC00131                                            0135
@RF00131 DS    0H                                                  0136
*       GENERATE;                                                  0136
*              /* IF CHANGED, CLEANUP AND EXIT */
     RRB 2048(R1)
     BC 5,CPUFREE
*     END;                          /* END 2ND PART OF PAGE CHANGED
*                                      TEST                          */
*   R1=ERRADDR×15&&15;              /* ROUND ERROR ADDR DOWN TO QUAD
*                                      WORD                          */
@RC00131 LA    @14,15                                              0138
         L     R1,ERRADDR(,DATAPTR)                                0138
         OR    R1,@14                                              0138
         XR    R1,@14                                              0138
*   R2=R1&'00000FFF'X;              /* GET ACTUAL DISPLACEMENT OF  0139
*                                      ERROR IN PAGE                 */
         LR    R2,R1                                               0139
         N     R2,@CF02459                                         0139
*   R2=R2+CSAADR;                   /* ADD DISPL TO CSA ADDRESS TO 0140
*                                      LOCATE REFRESH DATA           */
*                                                                  0140
         AL    R2,CSAADR(,PARMFRR)                                 0140
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW REFRESH 16 BYTES OF NUCLEUS PAGE THAT TOOK ERROR  @ZM45605*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*   GENERATE;                                                      0141
 MVC 0(16,R1),0(R2)
*   SREFRESH='1'B;                  /* SET STORAGE IN ERROR HAS BEEN
*                                      REFRESHED.                    */
         OI    SREFRESH(PARMFRR),B'10000000'                       0142
*   RESPECIFY                                                      0143
*     TSTMHCK BASED(ERRADDR×15&&15);                               0143
*   LM(R1,R4,TSTMHCK);              /* REFERENCE VALIDATED STORAGE TO
*                                      SEE IF MACHINE CHECK WILL   0144
*                                      OCCUR. IF IT DOES THE FRR WILL
*                                      GET CONTROL.                  */
*                                                                  0144
         L     @14,ERRADDR(,DATAPTR)                               0144
         O     @14,@CF00114                                        0144
         X     @14,@CF00114                                        0144
         LM    R1,R4,TSTMHCK(@14)                                  0144
*   /*****************************************************************/
*   /*                                                               */
*   /* SET PAGE BACK TO UNCHANGE IF EXECUTION CONTINUES HERE.        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*   R2=0;                           /* SET STORAGE KEY TO ZERO.      */
         SLR   R2,R2                                               0145
*   R1=ERRADDR×4095&&4095;          /* ROUND DOWN TO PAGE BOUNDARY.  */
         LA    @14,4095                                            0146
         L     @12,ERRADDR(,DATAPTR)                               0146
         LR    R1,@12                                              0146
         OR    R1,@14                                              0146
         XR    R1,@14                                              0146
*   IF ERRADDR<R1+2048 THEN         /* FIRST PART OF PAGE?           */
         LA    @14,2048                                            0147
         ALR   @14,R1                                              0147
         CR    @12,@14                                             0147
         BNL   @RF00147                                            0147
*     GEN( SSK R2,R1);              /* SET KEY IN FIRST PART OF PAGE.*/
          SSK R2,R1
*   ELSE                                                           0149
*     DO;                           /* IN SECOND PART OF PAGE        */
         B     @RC00147                                            0149
@RF00147 DS    0H                                                  0150
*       R1=R1+2048;                 /* GET TO SECOND PART OF PAGE.   */
         AH    R1,@CH02452                                         0150
*       GEN( SSK R2,R1);            /* SET KEY IN SECOND PART OF   0151
*                                      PAGE.                         */
          SSK R2,R1
*     END;                          /* END SSK OF SECOND PART OF   0152
*                                      PAGE.                         */
*                                                                  0152
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF NORMAL CLEANUP.                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0153
*CPUFREE:                                                          0153
*   LOOPBIT='1'B;                   /* RELEASE POSSIBLE LOOPING CPUS */
@RC00147 DS    0H                                                  0153
CPUFREE  OI    LOOPBIT(DATAPTR),B'10000000'                        0153
*FREE:                                                             0154
*   ;                               /* START OF FREEING OF GETMAIN 0154
*                                      AREAS                         */
FREE     DS    0H                                                  0155
*   CSAXPTR->XPTE=CSAXPTE;          /* RESTORE THE CSA PAGE'S XPTE   */
         L     @14,CSAXPTR(,DATAPTR)                               0155
         MVC   XPTE(12,@14),CSAXPTE(DATAPTR)                       0155
*   R2=CSAADR;                      /* ADDRESS TO FREE               */
         L     R2,CSAADR(,PARMFRR)                                 0156
*   GEN( FREEMAIN RU,LV=4096,A=(R2),SP=231,BRANCH=(YES,GLOBAL));   0157
          FREEMAIN RU,LV=4096,A=(R2),SP=231,BRANCH=(YES,GLOBAL)
*   CSAADR=0;                       /* RESET CSA PAGE ADDRESS FOR FRR*/
         SLR   @14,@14                                             0158
         ST    @14,CSAADR(,PARMFRR)                                0158
*FREEDA:                                                           0159
*   ;                               /* FREE DATA AREA                */
FREEDA   DS    0H                                                  0160
*   IF NUCXPTR^=0&                  /* RESTORE NUCLEUS XPTE?         */
*       ADDR(NUCXPTE)->XPTLSID^='00'X THEN                         0160
         L     @14,NUCXPTR(,DATAPTR)                               0160
         LTR   @14,@14                                             0160
         BZ    @RF00160                                            0160
         ICM   @12,15,XPTLSID+64(DATAPTR)                          0160
         BZ    @RF00160                                            0160
*     NUCXPTR->XPTE=NUCXPTE;        /* YES.                          */
         MVC   XPTE(12,@14),NUCXPTE(DATAPTR)                       0161
*   R2=LENGTH(DATAAREA);            /* GET LENGTH OF DATA AREA TO  0162
*                                      FREE NEXT                     */
@RF00160 LA    R2,151                                              0162
*   GEN( FREEMAIN RU,LV=(R2),A=(R10),SP=245,BRANCH=(YES,GLOBAL));  0163
          FREEMAIN RU,LV=(R2),A=(R10),SP=245,BRANCH=(YES,GLOBAL)
*   DATASAV=0;                      /* RESET DATA AREA POINTER     0164
*                                      ADDRESS FOR FRR               */
         SLR   @14,@14                                             0164
         ST    @14,DATASAV(,PARMFRR)                               0164
*LOCKFR:                                                           0165
*   ;                               /* FREEING OF LOCK FOR EXIT START
*                                      HERE                          */
*                                                                  0165
LOCKFR   DS    0H                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* RETRY FROM FRR IS HERE.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*RETRY:                                                            0166
*   ;                               /* RETRY FROM FRR IS HERE        */
RETRY    DS    0H                                                  0167
*   R2=PSAPCCAV;                    /* PICK UP PCCA ADDRESS          */
         L     R2,PSAPCCAV                                         0167
*   R2=R2->PCCAPWAV;                /* TO GET THE PWA ADDRESS        */
         L     R2,PCCAPWAV(,R2)                                    0168
*   IF R2^=0 THEN                                                  0169
         LTR   R2,R2                                               0169
         BZ    @RF00169                                            0169
*     R2->PWANRHED='0'B;            /* SO THAT MOD. CAN BE SCHED.  0170
*                                      AGAIN                         */
         NI    PWANRHED(R2),B'11011111'                            0170
*   GENERATE;                                                      0171
@RF00169 DS    0H                                                  0171
*          /* RELEASE THE LOCAL LOCK  AND DELETE THE FRR */
  SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,RELATED=(NONE,'ONLY OBTAIN')
  SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=(NONE,'SECOND OBTAIN')
 SETFRR D,WRKREGS=(FRRSPTR,FRREPTR)
*   R14=R5;                         /* RESTORE THE RETURN ADDRESS    */
         LR    R14,R5                                              0172
*EXIT:                                                             0173
*   RETURN;                         /* END OF PROCESSING. RETURN TO
*                                      CALLER                        */
@EL00001 DS    0H                                                  0173
@EF00001 DS    0H                                                  0173
@ER00001 BR    @14                                                 0173
*                                                                  0174
*   /*****************************************************************/
*   /*                                                               */
*   /* SERIALIZATION CPU LOOP CODE STARTS HERE - ENTERED DISABLED    */
*   /* FROM EXTERNAL SLIH , NO PROGRAM CHECKS ALLOWED, INCLUDING PAGE*/
*   /* FAULTS.                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0174
*CPULOOP:                                                          0174
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                        0174
         B     @EL00001                                            0174
CPULOOP  DS    0H                                                  0175
*   GENERATE;                                                      0175
 USING *,R15            ESTABLISH BASE AS ENTRY REGISTER
 LR DATAPTR,R1          GET PARAMETER PASSED         @ZM45605
 DROP R15                DROP ENTRY POINT AS THE BASE
 USING @PSTART,R9        RE-ESTABLISH THE MODULE'S NORMAL BASE
 L R9,BASE9(DATAPTR)     SET THE MODULE'S BASE REGISTER
*LOOP:                                                             0176
*   IF LOOPBIT^='1'B THEN                                          0176
LOOP     TM    LOOPBIT(DATAPTR),B'10000000'                        0176
         BNO   @RT00176                                            0176
*     GOTO LOOP;                    /* LOOP UNTIL SET FREE           */
*   END CPULOOP;                    /* END CPU SERIALIZATION LOOP    */
@EL00002 DS    0H                                                  0178
@EF00002 DS    0H                                                  0178
@ER00002 BR    @14                                                 0178
*                                                                  0179
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF FUNCTIONAL RECOVERY ROUTINE.                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0179
*ABNORMER:                                                         0179
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0179
ABNORMER DS    0H                                                  0180
*   R6=R14;                         /* SAVE RETURN REGISTER          */
         LR    R6,R14                                              0180
*   SDWAPTR=R1;                     /* SAVE THE SDWA POINTER         */
         LR    SDWAPTR,R1                                          0181
*   PARMFRR=SDWAPARM;               /* GET TRACKING DATA ADDRESS     */
         L     PARMFRR,SDWAPARM(,SDWAPTR)                          0182
*   SDWAMODN='IGFPNRFH';            /* FRR MODULE NAME               */
         MVC   SDWAMODN(8,SDWAPTR),@CC02479                        0183
*   SDWACSCT='IGFPNRFH';            /* FRR CSECT NAME                */
         MVC   SDWACSCT(8,SDWAPTR),@CC02479                        0184
*   SDWAREXN='ABNORMER';            /* FRR ROUTINE NAME              */
         MVC   SDWAREXN(8,SDWAPTR),@CC02480                        0185
*   R5=RTNREG;                      /* ESTABLISH MAINLINE'S RETURN 0186
*                                      ADDRESS SAVE                  */
         L     R5,RTNREG(,PARMFRR)                                 0186
*   R9=BASEREG;                     /* ESTABLISH MODULE'S BASE     0187
*                                      REGISTER                      */
         L     R9,BASEREG(,PARMFRR)                                0187
*   IF RECUR='1'B×                  /* RECURSIVE ERROR OR REGS NOT 0188
*                                      SAVED YET THEN                */
*       R5=0×R9=0 THEN                                             0188
         TM    RECUR(PARMFRR),B'00100000'                          0188
         BO    @RT00188                                            0188
         SLR   @14,@14                                             0188
         CR    R5,@14                                              0188
         BE    @RT00188                                            0188
         CR    R9,@14                                              0188
         BE    @RT00188                                            0188
*     GOTO TERM;                    /* CANNOT RETRY IF TRUE.         */
*   RECUR='1'B;                     /* SET IN CASE OF RECURSIVE    0190
*                                      RETRY.                        */
         OI    RECUR(PARMFRR),B'00100000'                          0190
*   IF DATASAV^=0 THEN                                             0191
         L     @12,DATASAV(,PARMFRR)                               0191
         CR    @12,@14                                             0191
         BE    @RF00191                                            0191
*     DO;                           /* MUST OTHER CPU(S) BE FREED  0192
*                                      FROM LOOP?                    */
*       DATAPTR=DATASAV;            /* ESTABLISH DATA AREA POINTER   */
         LR    DATAPTR,@12                                         0193
*       LOOPBIT='1'B;               /* TERMINATE POSSIBLE LOOPING OF
*                                      OTHER CPUS                    */
         OI    LOOPBIT(DATAPTR),B'10000000'                        0194
*     END;                          /* END FREEING OTHER CPU(S).     */
*                                                                  0195
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF SALLOC MUST BE OBTAINED TO DO FREEMAINS       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*   GEN( SETLOCK TEST,TYPE=SALLOC,RELATED=(NONE,'NONE'));          0196
@RF00191 DS    0H                                                  0196
          SETLOCK TEST,TYPE=SALLOC,RELATED=(NONE,'NONE')
*   IF R15^=0 THEN                                                 0197
         LTR   R15,R15                                             0197
         BZ    @RF00197                                            0197
*     DO;                           /* SALLOC NOT HELD, GET IT.      */
*       GENERATE;                                                  0199
 SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,REGS=USE,RELATED=(FRR,'FREE')
*       FREESALL='1'B;              /* SET SALLOC GOTTEN HERE AND  0200
*                                      MUST BE FREED.                */
         OI    FREESALL(PARMFRR),B'00010000'                       0200
*     END;                          /* END NEED TO GET SALLOC        */
*   IF SDWAMCKA='1'B&               /* ENTERED ON MACHINE CHECK      */
*       SDWASCK='1'B&               /* UNCORRECTED STORAGE ERROR     */
*       SDWASRVL='1'B&              /* STORAGE ADDR IN SDWA VALID    */
*       SDWANUCL='1'B&              /* ERROR ON NUCLEUS PAGE         */
*       DATASAV^=0                  /* MODULE'S DATA AREA ADDRESSABLE*/
*     THEN                                                         0202
@RF00197 TM    SDWAMCKA(SDWAPTR),B'00000100'                       0202
         BNO   @RF00202                                            0202
         TM    SDWASCK(SDWAPTR),B'00010000'                        0202
         BNO   @RF00202                                            0202
         TM    SDWASRVL(SDWAPTR),B'10000000'                       0202
         BNO   @RF00202                                            0202
         TM    SDWANUCL(SDWAPTR),B'00010000'                       0202
         BNO   @RF00202                                            0202
         ICM   @14,15,DATASAV(PARMFRR)                             0202
         BZ    @RF00202                                            0202
*     DO;                                                          0203
*                                                                  0203
*       /*************************************************************/
*       /*                                                           */
*       /* IS ERROR ON SAME STORAGE TRYING TO ( OR DID) REFRESH      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0204
*       IF ERRADDR>=SDWASCKB&ERRADDR<=SDWASCKE THEN                0204
         L     @14,ERRADDR(,DATAPTR)                               0204
         C     @14,SDWASCKB(,SDWAPTR)                              0204
         BL    @RF00204                                            0204
         C     @14,SDWASCKE(,SDWAPTR)                              0204
         BH    @RF00204                                            0204
*         REFMHCK='1'B;             /* SET REFRESH MACHINE CHECK. IF
*                                      SREFRESH IS ON , THEN THIS  0205
*                                      MODULE'S REFERENCE CAUSED   0205
*                                      MACHINE CHECK.                */
         OI    REFMHCK(PARMFRR),B'01000000'                        0205
*     END;                          /* END TEST FOR MACHINE CHECK.   */
@RF00204 DS    0H                                                  0207
*   IF CSAADR^=0&DATASAV^=0 THEN                                   0207
@RF00202 SLR   @14,@14                                             0207
         L     @12,CSAADR(,PARMFRR)                                0207
         CR    @12,@14                                             0207
         BE    @RF00207                                            0207
         C     @14,DATASAV(,PARMFRR)                               0207
         BE    @RF00207                                            0207
*     DO;                           /* CSA PAGE FREED?               */
*       CSAXPTR->XPTE=CSAXPTE;      /* SWITCH BACK TO REAL CSA XPTE
*                                                            @ZM45605*/
         L     @14,CSAXPTR(,DATAPTR)                               0209
         MVC   XPTE(12,@14),CSAXPTE(DATAPTR)                       0209
*       R2=CSAADR;                  /* ADDRESS OF AREA TO FREE       */
         LR    R2,@12                                              0210
*       GEN( FREEMAIN RU,LV=4096,A=(R2),SP=231,BRANCH=(YES,GLOBAL));
          FREEMAIN RU,LV=4096,A=(R2),SP=231,BRANCH=(YES,GLOBAL)
*       CSAADR=0;                   /* INDICATE CSA PAGE FREED       */
         SLR   @14,@14                                             0212
         ST    @14,CSAADR(,PARMFRR)                                0212
*     END;                          /* END OF TEST TO SEE IF CSA PAGE
*                                      FREED                         */
*   IF DATASAV^=0 THEN                                             0214
@RF00207 SLR   @14,@14                                             0214
         C     @14,DATASAV(,PARMFRR)                               0214
         BE    @RF00214                                            0214
*     DO;                           /* MODULE'S DATA AREA FREED      */
*       IF NUCXPTR^=0&              /* RESTORE NUC XPTE?             */
*           ADDR(NUCXPTE)->XPTLSID^='00'X THEN                     0216
         L     @12,NUCXPTR(,DATAPTR)                               0216
         CR    @12,@14                                             0216
         BE    @RF00216                                            0216
         ICM   @14,15,XPTLSID+64(DATAPTR)                          0216
         BZ    @RF00216                                            0216
*         NUCXPTR->XPTE=NUCXPTE;    /* YES.                          */
         MVC   XPTE(12,@12),NUCXPTE(DATAPTR)                       0217
*       R2=LENGTH(DATAAREA);        /* LENGTH OF AREA TO BE FREED    */
*                                                                  0218
@RF00216 LA    R2,151                                              0218
*       /*************************************************************/
*       /*                                                           */
*       /* R10=DATAPTR, ADDRESS OF AREA TO BE FREED                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0219
*       GEN( FREEMAIN RU,LV=(R2),A=(R10),SP=245,BRANCH=(YES,GLOBAL));
          FREEMAIN RU,LV=(R2),A=(R10),SP=245,BRANCH=(YES,GLOBAL)
*       DATASAV=0;                  /* INDICATE DATA AREA FREED      */
         SLR   @14,@14                                             0220
         ST    @14,DATASAV(,PARMFRR)                               0220
*     END;                          /* END DATA AREA FREED           */
*   SDWASR09=R9;                    /* UPDATE BASE REGISTER FOR RETRY*/
@RF00214 ST    R9,SDWASR09(,SDWAPTR)                               0222
*   SDWASR05=R5;                    /* UPDATE MAINLINE RETURN      0223
*                                      REGISTER SAVE FOR RETRY       */
         ST    R5,SDWASR05(,SDWAPTR)                               0223
*   R1=SDWAPTR;                     /* ESTABLISH REGISTER 1 FOR SETRP
*                                      MACRO                         */
         LR    R1,SDWAPTR                                          0224
*   DO;                             /* SETRP RETADDR(RETRY)RC(4)RETRE
*                                      GS(YES)FRESDWA(YES)DUMP(NO)   */
*     RESPECIFY                                                    0226
*      (GPR00P,                                                    0226
*       GPR01P,                                                    0226
*       GPR14P,                                                    0226
*       GPR15P) RSTD;                                              0226
*     GPR01P->SDWARCDE=4;           /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0227
*     GPR01P->SDWARTYA=ADDR(RETRY); /* SAVE RETRY ADDRESS            */
         LA    @12,RETRY                                           0228
         ST    @12,SDWARTYA(,GPR01P)                               0228
*     GPR01P->SDWAFREE='1'B;        /* SET FLAG TO FREE SDWA         */
         OI    SDWAFREE(GPR01P),B'00000100'                        0229
*     GPR01P->SDWAREQ='0'B;         /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0230
*     GPR01P->SDWAUPRG='1'B;        /* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0231
*     RESPECIFY                                                    0232
*      (GPR00P,                                                    0232
*       GPR01P,                                                    0232
*       GPR14P,                                                    0232
*       GPR15P) UNRSTD;                                            0232
*   END;                                                           0233
*TERM:                                                             0234
*   ;                                                              0234
TERM     DS    0H                                                  0235
*   IF SDWAVRAL>=LENGTH(DATAFRR) THEN                              0235
         CLC   SDWAVRAL(2,SDWAPTR),@CH02484                        0235
         BL    @RF00235                                            0235
*     DO;                                                          0236
*       SDWAVRA(1:LENGTH(DATAFRR))=DATAFRR;/* PUT THE COMPLETE FRR 0237
*                                      WORK-                         */
         MVC   SDWAVRA(17,SDWAPTR),DATAFRR(PARMFRR)                0237
*       SDWAURAL=LENGTH(DATAFRR);   /* AREA INTO THE SDWA            */
         MVI   SDWAURAL(SDWAPTR),X'11'                             0238
*     END;                                                         0239
*   ELSE                                                           0240
*     DO;                                                          0240
         B     @RC00235                                            0240
@RF00235 DS    0H                                                  0241
*       SDWAVRA(1:LENGTH(SDWAVRA))=DATAFRR;/* OR AS MUCH OF FRR      */
         MVI   SDWAVRA+17(SDWAPTR),C' '                            0241
         MVC   SDWAVRA+18(90,SDWAPTR),SDWAVRA+17(SDWAPTR)          0241
         MVC   SDWAVRA(17,SDWAPTR),DATAFRR(PARMFRR)                0241
*       SDWAURAL=LENGTH(SDWAVRA);   /* WORKAREA AS IT IS POSSIBLE.   */
         MVI   SDWAURAL(SDWAPTR),X'6C'                             0242
*     END;                                                         0243
*   SDWAHEX='1'B;                   /* FRR WORKAREA DATA IN HEX      */
@RC00235 OI    SDWAHEX(SDWAPTR),B'10000000'                        0244
*   IF FREESALL='1'B THEN                                          0245
         TM    FREESALL(PARMFRR),B'00010000'                       0245
         BNO   @RF00245                                            0245
*     DO;                           /* WAS SALLOC GOTTEN HERE?       */
*       GENERATE;                                                  0247
  SETLOCK RELEASE,TYPE=SALLOC,REGS=USE,RELATED=(GOTHERE,'OBTAIN')
*     END;                          /* END FREEING SALLOC IF GOTTEN
*                                      HERE.                         */
*   R2=PSAPCCAV;                    /* PICK UP PCCA ADDRESS          */
@RF00245 L     R2,PSAPCCAV                                         0249
*   R2=R2->PCCAPWAV;                /* TO GET THE PWA ADDRESS        */
         L     R2,PCCAPWAV(,R2)                                    0250
*   IF R2^=0 THEN                                                  0251
         LTR   R2,R2                                               0251
         BZ    @RF00251                                            0251
*     R2->PWANRHED='0'B;            /* SO THAT MOD. CAN BE SCHED.  0252
*                                      AGAIN                         */
         NI    PWANRHED(R2),B'11011111'                            0252
*   R14=R6;                         /* RESTORE FRR'S RETURN ADDRESS  */
@RF00251 LR    R14,R6                                              0253
*   END ABNORMER;                   /* AND EXIT                      */
@EL00003 DS    0H                                                  0254
@EF00003 DS    0H                                                  0254
@ER00003 BR    @14                                                 0254
*   END IGFPNRFH                                                   0255
*                                                                  0255
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAXPTE )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCAT)                                       */
*/*%INCLUDE SYSLIB  (IHACSD  )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCA )                                       */
*/*%INCLUDE SYSLIB  (IGFPWA  )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*                                                                  0255
*       ;                                                          0255
@DATA    DS    0H
@CH00823 DC    H'16'
@CH02484 DC    H'17'
@CH02456 DC    H'20'
@CH02452 DC    H'2048'
@DATD    DSECT
         DS    0F
IGFPNRFH CSECT
         DS    0F
@CF00114 DC    F'15'
@CF02486 DC    F'-4'
@CF02449 DC    XL4'FFFFFFFF'
@CF02459 DC    XL4'00000FFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
IGFPNRFH CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC02479 DC    C'IGFPNRFH'
@CC02480 DC    C'ABNORMER'
PATCH    DC    X'00'
         DC    XL59'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SDWAPTR  EQU   @11
FRRSPTR  EQU   @04
FRREPTR  EQU   @07
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R8       EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RETCODE  EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
DATAPTR  EQU   @10
PARMFRR  EQU   @08
R7       EQU   @07
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCCHNID EQU   FLCMCLA
FLCCHTM  EQU   FLCCHNID
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
PSAMEDC  EQU   FLCMCLA+76
FLCFSA   EQU   FLCMCLA+80
PSAPCCAV EQU   PSA+520
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSAMPSW  EQU   PSA+592
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTNUCB  EQU   CVTMAP+128
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
XPTE     EQU   0
XPTFLAGS EQU   XPTE+2
XPTFLAG2 EQU   XPTE+3
XPTLPID  EQU   XPTE+4
XPTLGN   EQU   XPTLPID
XPTLSID  EQU   XPTLGN
XPTLPN   EQU   XPTLPID+4
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAMCKA EQU   SDWAMWPA
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR05 EQU   SDWASRSV+20
SDWASR09 EQU   SDWASRSV+36
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWASCKB EQU   SDWASTCK
SDWASCKE EQU   SDWASTCK+4
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWASRVL EQU   SDWAMCHS
SDWAMCHD EQU   SDWAMCHI+1
SDWASCK  EQU   SDWAMCHD
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWANUCL EQU   SDWARSR2
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWAVRAL EQU   SDWARA
SDWADPVA EQU   SDWARA+2
SDWAHEX  EQU   SDWADPVA
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
PCCAVT   EQU   0
PCCAT00P EQU   PCCAVT
CSD      EQU   0
CSDCPUAL EQU   CSD+8
CSDCPUOL EQU   CSD+10
CSDSCWRD EQU   CSD+12
CSDSCFL1 EQU   CSDSCWRD
CSDSCFL2 EQU   CSDSCWRD+1
CSDSCFL3 EQU   CSDSCWRD+2
CSDSCFL4 EQU   CSDSCWRD+3
CSDFLAGS EQU   CSD+23
CSDMASK  EQU   CSD+128
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFLAG2 EQU   PVT+1
PVTPFP   EQU   PVT+112
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
PCCA     EQU   0
PCCATMST EQU   PCCA+128
PCCATMFL EQU   PCCATMST
PCCATODE EQU   PCCATMST+1
PCCACCE  EQU   PCCATMST+2
PCCAINTE EQU   PCCATMST+3
PCCAEMSB EQU   PCCA+136
PCCAEMSI EQU   PCCAEMSB
PCCARISP EQU   PCCAEMSI
PCCAEMS2 EQU   PCCAEMSI+1
PCCAEMS3 EQU   PCCAEMSI+2
PCCARMSB EQU   PCCAEMSI+3
PCCAPWAV EQU   PCCA+152
PCCACHAN EQU   PCCA+224
PCCAWERP EQU   PCCA+280
PCCACHPF EQU   PCCAWERP+4
PCCACHBL EQU   PCCAWERP+5
PCCACHVA EQU   PCCAWERP+6
PCCACHTS EQU   PCCAWERP+7
PCCACHS1 EQU   PCCA+288
PCCACHS2 EQU   PCCA+289
PCCACHRB EQU   PCCA+290
PCCACHF1 EQU   PCCA+308
PCCACHF2 EQU   PCCA+309
PCCACHF3 EQU   PCCA+310
PCCACHF4 EQU   PCCA+311
PCCAATTR EQU   PCCA+376
PWA      EQU   0
PWAFRR   EQU   PWA+384
PWAFLAGS EQU   PWA+778
PWANRHED EQU   PWAFLAGS
WSAL     EQU   0
WSAG     EQU   0
WSAGGMFM EQU   WSAG+4
WSAC     EQU   0
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
IEAVFP   EQU   0
DATAAREA EQU   0
ERRADDR  EQU   DATAAREA
BASE9    EQU   DATAAREA+4
LOOPCNT  EQU   DATAAREA+8
PVTPTR   EQU   DATAAREA+12
XPTEPTR  EQU   DATAAREA+16
NUCXPTR  EQU   DATAAREA+20
CSAXPTR  EQU   DATAAREA+24
PCCAPTR  EQU   DATAAREA+28
PWAPTR   EQU   DATAAREA+32
LCCAPTR  EQU   DATAAREA+36
ASXBPTR  EQU   DATAAREA+40
ASCBPTR  EQU   DATAAREA+44
FAULT    EQU   DATAAREA+48
CSAXPTE  EQU   DATAAREA+52
NUCXPTE  EQU   DATAAREA+64
SAVEAREA EQU   DATAAREA+76
TEMPMASK EQU   DATAAREA+148
@NM00086 EQU   DATAAREA+150
LOOPBIT  EQU   @NM00086
PGFAULT  EQU   0
DATAFRR  EQU   0
RTNREG   EQU   DATAFRR
BASEREG  EQU   DATAFRR+4
DATASAV  EQU   DATAFRR+8
CSAADR   EQU   DATAFRR+12
FLAG1    EQU   DATAFRR+16
SREFRESH EQU   FLAG1
REFMHCK  EQU   FLAG1
RECUR    EQU   FLAG1
FREESALL EQU   FLAG1
TSTMHCK  EQU   0
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCRMN  EQU   CVTS01+156
CVTCSD   EQU   CVTS01+312
CVTGLMN  EQU   CVTS01+332
CVTSPSA  EQU   CVTS01+336
CVTIPCRI EQU   CVTS01+408
CVTPCCAT EQU   CVTS01+416
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGMBR  EQU   CVTS01+500
CVTGSDA  EQU   CVTS01+600
CVTCBBR  EQU   CVTS01+624
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTIPCRP EQU   CVTS01+412
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00088 EQU   FLAG1
@NM00087 EQU   @NM00086
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALSDMP EQU   WSAL+12
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
PWACCTHB EQU   PWA+992
PWAPTTHB EQU   PWA+976
PWATCTHB EQU   PWA+960
PWAIVTHB EQU   PWA+944
PWASDTHB EQU   PWA+928
PWAPDTHB EQU   PWA+912
PWANRSRB EQU   PWA+868
PWACCSRB EQU   PWA+824
PWAWRK   EQU   PWA+792
PWATEST  EQU   PWA+784
PWACPUAD EQU   PWA+782
@NM00085 EQU   PWA+781
PWACNTR  EQU   PWA+780
PWAEDSRB EQU   PWA+779
@NM00084 EQU   PWAFLAGS
PWAENABL EQU   PWAFLAGS
PWACCHED EQU   PWAFLAGS
PWAREST  EQU   PWAFLAGS
PWAINIT  EQU   PWA+777
PWAMFAFL EQU   PWA+776
PWARPSW  EQU   PWA+768
PWARGPR  EQU   PWA+704
PWACR15  EQU   PWA+700
PWACR14  EQU   PWA+696
PWASFLC  EQU   PWA+464
PWAINTC  EQU   PWA+456
PWASOSW  EQU   PWA+448
PWAFRR00 EQU   PWAFRR+12
PWAFRR15 EQU   PWAFRR+8
PWAFRR13 EQU   PWAFRR+4
PWAFRR12 EQU   PWAFRR
PWAFRRCT EQU   PWA+380
PWAFRRCD EQU   PWA+376
PWADGTHB EQU   PWA+368
PWASRTHB EQU   PWA+360
PWAESA   EQU   PWA+288
PWASA4   EQU   PWA+216
PWASA3   EQU   PWA+144
PWASA2   EQU   PWA+72
PWASA1   EQU   PWA
@NM00083 EQU   PCCA+512
PCCACAT  EQU   PCCA+384
PCCARV36 EQU   PCCA+380
PCCARV35 EQU   PCCA+378
PCCARV01 EQU   PCCA+377
PCCAR105 EQU   PCCAATTR
PCCAR104 EQU   PCCAATTR
PCCAR103 EQU   PCCAATTR
PCCAR102 EQU   PCCAATTR
PCCAR101 EQU   PCCAATTR
PCCAR100 EQU   PCCAATTR
PCCAIO   EQU   PCCAATTR
PCCACPUM EQU   PCCAATTR
PCCARV63 EQU   PCCA+372
PCCARV62 EQU   PCCA+368
PCCARV61 EQU   PCCA+364
PCCARV60 EQU   PCCA+360
PCCARV59 EQU   PCCA+356
PCCARV58 EQU   PCCA+352
PCCARV57 EQU   PCCA+348
PCCARV56 EQU   PCCA+344
PCCARV55 EQU   PCCA+340
PCCARV54 EQU   PCCA+336
PCCALOGA EQU   PCCA+332
PCCACHID EQU   PCCA+324
PCCACHSV EQU   PCCA+312
PCCARV79 EQU   PCCACHF4
PCCARV78 EQU   PCCACHF4
PCCARV77 EQU   PCCACHF4
PCCARV76 EQU   PCCACHF4
PCCARV75 EQU   PCCACHF4
PCCARV74 EQU   PCCACHF4
PCCARV73 EQU   PCCACHF4
PCCARV72 EQU   PCCACHF4
PCCARV71 EQU   PCCACHF3
PCCARV70 EQU   PCCACHF3
PCCARV69 EQU   PCCACHF3
PCCARV68 EQU   PCCACHF3
PCCARV67 EQU   PCCACHF3
PCCARV66 EQU   PCCACHF3
PCCASLCK EQU   PCCACHF3
PCCAISRB EQU   PCCACHF3
PCCACF28 EQU   PCCACHF2
PCCACF27 EQU   PCCACHF2
PCCACF26 EQU   PCCACHF2
PCCACF25 EQU   PCCACHF2
PCCACF24 EQU   PCCACHF2
PCCACF23 EQU   PCCACHF2
PCCACF22 EQU   PCCACHF2
PCCACF21 EQU   PCCACHF2
PCCACF18 EQU   PCCACHF1
PCCACF17 EQU   PCCACHF1
PCCACF16 EQU   PCCACHF1
PCCACF15 EQU   PCCACHF1
PCCACF14 EQU   PCCACHF1
PCCACF13 EQU   PCCACHF1
PCCACF12 EQU   PCCACHF1
PCCACF11 EQU   PCCACHF1
PCCARV05 EQU   PCCA+307
PCCACHPB EQU   PCCA+306
PCCALGP2 EQU   PCCA+305
PCCALGP1 EQU   PCCA+304
PCCACELL EQU   PCCA+302
PCCALOGL EQU   PCCA+300
PCCACHW2 EQU   PCCA+296
PCCACHW1 EQU   PCCA+292
PCCAIOSI EQU   PCCA+291
PCCACNRB EQU   PCCACHRB
PCCACCVB EQU   PCCACHRB
PCCACSNB EQU   PCCACHRB
PCCARV52 EQU   PCCACHRB
PCCACHIB EQU   PCCACHRB
PCCACTIB EQU   PCCACHRB
PCCACINB EQU   PCCACHRB
PCCACSIB EQU   PCCACHRB
PCCARV51 EQU   PCCACHS2
PCCARV50 EQU   PCCACHS2
PCCACCRA EQU   PCCACHS2
PCCACURC EQU   PCCACHS2
PCCACNLG EQU   PCCACHS2
PCCACMOD EQU   PCCACHS2
PCCACALT EQU   PCCACHS2
PCCACIOR EQU   PCCACHS2
PCCARV47 EQU   PCCACHS1
PCCACUCB EQU   PCCACHS1
PCCACIBC EQU   PCCACHS1
PCCACAND EQU   PCCACHS1
PCCACNLS EQU   PCCACHS1
PCCACFRR EQU   PCCACHS1
PCCACNRE EQU   PCCACHS1
PCCACCMP EQU   PCCACHS1
PCCACSEQ EQU   PCCACHTS
PCCACDIN EQU   PCCACHTS
PCCARV44 EQU   PCCACHTS
PCCARV43 EQU   PCCACHTS
PCCACTEC EQU   PCCACHTS
PCCACDAV EQU   PCCACHVA
PCCACCHV EQU   PCCACHVA
PCCACCMD EQU   PCCACHVA
PCCACUNS EQU   PCCACHVA
PCCACSQV EQU   PCCACHVA
PCCARV42 EQU   PCCACHVA
PCCARV41 EQU   PCCACHVA
PCCACITF EQU   PCCACHVA
PCCARV40 EQU   PCCACHBL
PCCARV39 EQU   PCCACHBL
PCCARV38 EQU   PCCACHBL
PCCACCUE EQU   PCCACHBL
PCCACSTG EQU   PCCACHBL
PCCACSCU EQU   PCCACHBL
PCCACCHA EQU   PCCACHBL
PCCACCPU EQU   PCCACHBL
PCCACNOR EQU   PCCACHPF
PCCACCNT EQU   PCCACHPF
PCCACSNS EQU   PCCACHPF
PCCARV37 EQU   PCCACHPF
PCCACHIO EQU   PCCACHPF
PCCACTIO EQU   PCCACHPF
PCCACINT EQU   PCCACHPF
PCCACSIO EQU   PCCACHPF
PCCACHUB EQU   PCCAWERP
PCCAR106 EQU   PCCA+228
PCCAR113 EQU   PCCA+226
PCCASRBL EQU   PCCA+225
PCCAR112 EQU   PCCACHAN
PCCAR111 EQU   PCCACHAN
PCCAR110 EQU   PCCACHAN
PCCAR109 EQU   PCCACHAN
PCCAR108 EQU   PCCACHAN
PCCAR107 EQU   PCCACHAN
PCCAEXDM EQU   PCCACHAN
PCCAIRST EQU   PCCACHAN
PCCASRB  EQU   PCCA+180
PCCACCHM EQU   PCCA+176
PCCAELBA EQU   PCCA+172
PCCAELAD EQU   PCCA+168
PCCALRBR EQU   PCCA+164
PCCALRBV EQU   PCCA+160
PCCAPWAR EQU   PCCA+156
PCCAEMSA EQU   PCCAEMSB+12
PCCAEMSE EQU   PCCAEMSB+8
PCCAEMSP EQU   PCCAEMSB+4
PCCARMS  EQU   PCCARMSB
PCCARV34 EQU   PCCARMSB
PCCARV33 EQU   PCCARMSB
PCCARV32 EQU   PCCARMSB
PCCARV31 EQU   PCCARMSB
PCCARV30 EQU   PCCARMSB
PCCARV29 EQU   PCCARMSB
PCCARV28 EQU   PCCARMSB
PCCARV27 EQU   PCCAEMS3
PCCARV26 EQU   PCCAEMS3
PCCARV25 EQU   PCCAEMS3
PCCARV24 EQU   PCCAEMS3
PCCARV23 EQU   PCCAEMS3
PCCARV22 EQU   PCCAEMS3
PCCARV21 EQU   PCCAEMS3
PCCARV20 EQU   PCCAEMS3
PCCARV19 EQU   PCCAEMS2
PCCARV18 EQU   PCCAEMS2
PCCARV17 EQU   PCCAEMS2
PCCARV16 EQU   PCCAEMS2
PCCARV15 EQU   PCCAEMS2
PCCARV14 EQU   PCCAEMS2
PCCARV13 EQU   PCCAEMS2
PCCARV12 EQU   PCCAEMS2
PCCARV11 EQU   PCCARISP
PCCARV10 EQU   PCCARISP
PCCARV09 EQU   PCCARISP
PCCARV08 EQU   PCCARISP
PCCARV07 EQU   PCCARISP
PCCARV06 EQU   PCCARISP
PCCASERL EQU   PCCARISP
PCCAPARL EQU   PCCARISP
PCCARPB  EQU   PCCA+132
PCCACTIN EQU   PCCAINTE
PCCANFIN EQU   PCCAINTE
PCCANUIN EQU   PCCAINTE
PCCACTCC EQU   PCCACCE
PCCANFCC EQU   PCCACCE
PCCANUCC EQU   PCCACCE
PCCACTTD EQU   PCCATODE
PCCANFTD EQU   PCCATODE
PCCANUTD EQU   PCCATODE
PCCARV04 EQU   PCCATMFL
PCCARV03 EQU   PCCATMFL
PCCARV02 EQU   PCCATMFL
PCCAMINT EQU   PCCATMFL
PCCAMCC  EQU   PCCATMFL
PCCAVKIL EQU   PCCATMFL
PCCASYNC EQU   PCCATMFL
PCCAINIT EQU   PCCATMFL
PCCARV9E EQU   PCCA+124
PCCARV9D EQU   PCCA+120
PCCARV9C EQU   PCCA+116
PCCARV9B EQU   PCCA+112
PCCARV9A EQU   PCCA+108
PCCARV99 EQU   PCCA+104
PCCARV98 EQU   PCCA+100
PCCARV97 EQU   PCCA+96
PCCARV96 EQU   PCCA+92
PCCARV95 EQU   PCCA+88
PCCARV94 EQU   PCCA+84
PCCARV93 EQU   PCCA+80
PCCARV92 EQU   PCCA+76
PCCARV91 EQU   PCCA+72
PCCARV90 EQU   PCCA+68
PCCARV89 EQU   PCCA+64
PCCARV88 EQU   PCCA+60
PCCARV87 EQU   PCCA+56
PCCARV86 EQU   PCCA+52
PCCARV85 EQU   PCCA+48
PCCARV84 EQU   PCCA+44
PCCARV83 EQU   PCCA+40
PCCARV82 EQU   PCCA+36
PCCARV81 EQU   PCCA+32
PCCAPSAR EQU   PCCA+28
PCCAPSAV EQU   PCCA+24
PCCATQEP EQU   PCCA+20
PCCACAFM EQU   PCCA+18
PCCACPUA EQU   PCCA+16
PCCACPID EQU   PCCA+4
PCCAPCCA EQU   PCCA
PVTEND   EQU   PVT+1848
PVTTASID EQU   PVT+1846
PVTXXXXX EQU   PVT+1844
PVTMVCLC EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTSQNPC EQU   PVT+47
PVTSQVRC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
@NM00082 EQU   PVTFLAG2
PVTRSMGM EQU   PVTFLAG2
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTAPREF EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
@NM00081 EQU   CSD+160
CSDUCNT  EQU   CSD+124
CSDTCNT  EQU   CSD+120
CSDGDTOD EQU   CSD+116
CSDGDINT EQU   CSD+112
CSDGDCC  EQU   CSD+108
CSDDDRCT EQU   CSD+106
CSDRV044 EQU   CSD+104
CSDMAFF  EQU   CSD+24
CSDRV038 EQU   CSDFLAGS
CSDRV037 EQU   CSDFLAGS
CSDRV036 EQU   CSDFLAGS
CSDRV035 EQU   CSDFLAGS
CSDRV034 EQU   CSDFLAGS
CSDRV033 EQU   CSDFLAGS
CSDRV032 EQU   CSDFLAGS
CSDMP    EQU   CSDFLAGS
CSDACR   EQU   CSD+22
CSDMF1CP EQU   CSD+20
CSDRV043 EQU   CSD+16
CSDRV030 EQU   CSDSCFL4
CSDRV029 EQU   CSDSCFL4
CSDRV028 EQU   CSDSCFL4
CSDRV027 EQU   CSDSCFL4
CSDRV026 EQU   CSDSCFL4
CSDRV025 EQU   CSDSCFL4
CSDRV024 EQU   CSDSCFL4
CSDRV023 EQU   CSDSCFL4
CSDRV022 EQU   CSDSCFL3
CSDRV021 EQU   CSDSCFL3
CSDRV020 EQU   CSDSCFL3
CSDRV019 EQU   CSDSCFL3
CSDRV018 EQU   CSDSCFL3
CSDRV017 EQU   CSDSCFL3
CSDRV016 EQU   CSDSCFL3
CSDRV015 EQU   CSDSCFL3
CSDRV014 EQU   CSDSCFL2
CSDRV013 EQU   CSDSCFL2
CSDRV012 EQU   CSDSCFL2
CSDRV011 EQU   CSDSCFL2
CSDRV010 EQU   CSDSCFL2
CSDRV009 EQU   CSDSCFL2
CSDRV008 EQU   CSDSCFL2
CSDRV007 EQU   CSDSCFL2
CSDRV006 EQU   CSDSCFL1
CSDRV005 EQU   CSDSCFL1
CSDRV004 EQU   CSDSCFL1
CSDRV003 EQU   CSDSCFL1
CSDRV002 EQU   CSDSCFL1
CSDRV001 EQU   CSDSCFL1
CSDSYSND EQU   CSDSCFL1
CSDRV042 EQU   CSDSCFL1
CSDSAFF  EQU   CSDCPUAL
CSDCHAD  EQU   CSD+6
CSDCPUJS EQU   CSD+4
CSDCSD   EQU   CSD
@NM00080 EQU   FRRSFLGS+1
@NM00079 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
@NM00052 EQU   SDWA+512
@NM00051 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
@NM00050 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00049 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00048 EQU   SDWADDAT+3
@NM00047 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00046 EQU   SDWADDAT+1
@NM00045 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00044 EQU   SDWADUMP+2
@NM00043 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00042 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
@NM00041 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00040 EQU   SDWAACF3
@NM00039 EQU   SDWAACF2
@NM00038 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00037 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00036 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00035 EQU   SDWA+239
@NM00034 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00033 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00032 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00031 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00030 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00029 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00028 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00027 EQU   SDWAINC2
@NM00026 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00025 EQU   SDWAILC2
@NM00024 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00023 EQU   SDWANXT2
@NM00022 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00021 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00020 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00019 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00018 EQU   SDWAINC1
@NM00017 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00016 EQU   SDWAILC1
@NM00015 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00014 EQU   SDWANXT1
@NM00013 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00012 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00011 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00010 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00009 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00008 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
@NM00007 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00006 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00005 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
XPTLSID2 EQU   XPTLPN
@NM00004 EQU   XPTFLAG2
XPTIOERR EQU   XPTFLAG2
XPTPOINP EQU   XPTFLAG2
XPTRES1  EQU   XPTFLAG2
XPTVALID EQU   XPTFLAG2
XPTRSV4  EQU   XPTFLAGS
XPTDEFER EQU   XPTFLAGS
XPTRES2  EQU   XPTFLAGS
XPTVIO   EQU   XPTFLAGS
@NM00003 EQU   XPTFLAGS
XPTCKF   EQU   XPTFLAGS
XPTXAV   EQU   XPTFLAGS
XPTVIOLP EQU   XPTFLAGS
XPTRSV1  EQU   XPTE+1
XPTPROT  EQU   XPTE
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
@NM00078 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00077 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSAACTCD EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00076 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00075 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00074 EQU   FLCFSA
@NM00073 EQU   FLCMCLA+77
PSAMDISC EQU   PSAMEDC
PSAMINTR EQU   PSAMEDC
PSAMINST EQU   PSAMEDC
PSAMCCF  EQU   PSAMEDC
PSAMCNOP EQU   PSAMEDC
PSAMEXSR EQU   PSAMEDC
PSAMCOPR EQU   PSAMEDC
@NM00072 EQU   PSAMEDC
@NM00071 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00070 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00069 EQU   FLCIOA
@NM00068 EQU   FLCMCLA+15
@NM00067 EQU   FLCMCLA+14
@NM00066 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00065 EQU   FLCIOEL
FLCCHIL  EQU   FLCCHNID+2
FLCCHMOD EQU   FLCCHTM
FLCCHTYP EQU   FLCCHTM
@NM00064 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00063 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00062 EQU   FLCPER
@NM00061 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00060 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00059 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00058 EQU   FLCPIILC
@NM00057 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00056 EQU   FLCSVILC
@NM00055 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00054 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00053 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00074 EQU   LOCKFR
@RT00085 EQU   FREEDA
@RT00089 EQU   FREEDA
@RT00094 EQU   FREEDA
@RT00098 EQU   FREE
@RT00119 EQU   LOOPCTL1
@RT00125 EQU   CPUFREE
EXIT     EQU   @EL00001
@RT00176 EQU   LOOP
@RT00188 EQU   TERM
@RT00064 EQU   EXIT
@ENDDATA EQU   *
         END   IGFPNRFH,(C'PLS2145',0701,77252)
