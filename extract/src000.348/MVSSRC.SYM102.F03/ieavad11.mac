         TITLE 'IEAVAD11 - SNAP OUTPUT, OUTPUT5 AND PRINT ROUTINES'
* /* START OF SPECIFICATIONS ****
*
*01*  MODULE-NAME = IEAVAD11 ( VS2 ) WITH SU33               G33SPHW
*
*01*  DESCRIPTIVE-NAME = SNAP OUTPUT ROUTINES
*
*01*  COPYRIGHT = NONE
*
*01*  STATUS = VERSION 1
*
*02*  LOAD MODULE = IGC0005A
*
*02*  SYSGEN MACRO = SGEIA401
*
*02*  SYSTEM LIBRARY = SYS1.LPALIB
*
*01*  FUNCTION = WRITE LINES OF THE DUMP ON OUTPUT DEVICE
*
*01*  OPERATION = THIS MODULE RECEIVES CONTROL FROM OTHER SNAP
*     MODULES TO WRITE THE DUMP LINES.  THE RECORD THAT WAS
*     BUILT IN THE CALLING MODULE IS MOVED INTO THE NEXT
*     AVAILABLE SLOT IN THE OUTPUT BUFFER.  WHEN THE BUFFER
*     IS FULL, A SYNCH IS ISSUED TO THE WRITE ROUTINE
*     (IEAVAD12 IN THIS MODULE) TO WRITE THE BUFFERED RECORDS
*     TO OUTPUT.  THIS MODULE DETERMINES WHEN THE PAGE IS FULL
*     AND CREATES A HEADER RECORD WITH A PAGE NUMBER TO BE THE
*     FIRST RECORD WRITTEN FOR THE NEXT PAGE.  ALL OF THE
*     REQUIRED INFORMATION IS CONTAINED IN ABDAREA.
*     RECORDS ARE WRITTEN VIA BSAM WRITE AND CHECK MACROS
*     THIS MODULE IS USED BY SDUMP WHEN PROCESSING A SYSMDUMP
*     REQUEST. SDUMP SYNCHES TO IEAVAD12 TO WRITE A BLOCK OF
*     STORAGE.                                               G33SPHW
*
*01*  NOTES
*
*02*    CHARACTER-CODE-DEPENDENCIES = THIS MODULE IS EBCDIC CHARACTER
*       CODE DEPENDENT.
*
*02*    DEPENDENCIES = NONE
*
*02*    PERFORMANCE = IEAVAD11 PRINTS LINE ABDLINEA FOR THE MODULES OF
*       ABDUMP. ADDITIONAL CODE IS PROVIDED TO OUTPUT A PARTIAL PRINT
*       BUFFER WHEN THE DUMP IS COMPLETE, AND ALSO TO INTERFACE WITH
*       MODULES USING THE ABDUMP STANDARD COMPONENT INTERFACE.
*
*02*    RESTRICTIONS = MUST NOT CROSS PAGE BOUNDARY
*
*02*    REGISTER-CONVENTIONS = THE REGISTER CONVENTIONS ARE DESCRIBED
*       UNDER REGISTER EQUATES.
*
*02*    PATCH-LABEL = NONE
*
*01*  MODULE-TYPE = MODULE
*
*02*    PROCESSOR = ASSEMBLER-370R
*
*02*    MODULE-SIZE = X'200' BYTES APPROX.
*
*02*    ATTRIBUTES = REENTERABLE,KEY0,SUPVERVISOR STATE,PLPA
*
*01*  ENTRY = IEAVAD11
*
*02*    PURPOSE = OUTPUT A LINE OF THE DUMP
*
*02*    LINKAGE = BALR
*
*02*    INPUT = REGISTER 1 CONTAINS ADDRESS OF SNAP WORK AREA
*
*02*    OUTPUT = A LINE OF THE DUMP IS WRITTEN AND THE IMAGE LINE IS
*       BLANKED
*
*02*    EXIT-NORMAL = BACK TO CALLER
*
*02*    EXIT-ERROR = NONE
*
*01*  ENTRY = IEAVAD21
*
*02*    PURPOSE = OUTPUT PARTIAL BLOCK IF ANY AFTER DUMP IS COMPLETE
*
*02*    LINKAGE = BALR
*
*02*    INPUT = REGISTER 1 CONTAINS ADDRESS OF SNAP WORK AREA
*
*02*    OUTPUT = ANY PARTIAL BLOCK IS WRITTEN TO OUTPUT DEVICE
*
*02*    EXIT-NORMAL = BACK TO CALLER
*
*02*    EXIT-ERROR = NONE
*
*01*  ENTRY = IEAVAD81
*
*02*    PURPOSE = OUTPUT A LINE OF THE DUMP WRITTEN BY A STANDARD
*       INTERFACE ROUTINE
*
*02*    LINKAGE = BALR
*
*02*    INPUT = NONE  BUT ABDLINEA MUST CONTAIN DATA TO BE WRITTEN
*
*02*    OUTPUT = SAME AS FOR IEAVAD11
*
*02*    EXIT-NORMAL = BACK TO CALLER
*
*02*    EXIT-ERROR = NONE
*
*01*  ENTRY = IEAVAD12 (OLD NAME WRITCHEK)               G33SPHW
*
*02*    PURPOSE = WRITE A BLOCK OF OUTPUT
*
*02*    LINKAGE = SYNCH
*
*02*    INPUT = REGISTER 1 CONTAINS ADDRESS OF DECB
*
*02*    OUTPUT = BLOCK OF STORAGE
*
*02*    EXIT-NORMAL = BACK TO CALLER
*
*02*    EXIT-ERROR = NONE
*
*01*  EXTERNAL-REFERENCES
*
*02*    ROUTINES = SYNCH,BSAM WRITE ROUTINES
*
*02*    DATA-SETS = DUMP DATA SET
*
*02*    DATA-AREA = ABDAREA,CVT,TCB.RB,DECB
*
*01*  TABLES = NONE
*
*01*  MACROS = IHAABDA,CVT,IKJTCB,IKJRB,WRITE,CHECK
*
*01*  CHANGE-ACTIVITY =  YM2513,Z40MPX, SU33- WRITCHEK TO IEAVAD12
*                        USED BY SNAP AND SDUMP.            G33SPHW
*                        ZA16374 1/28/77
*
*
**** END OF SPECIFICATIONS ***/
IEAVAD11 CSECT
         ENTRY IEAVAD21,IEAVAD81,IEAVAD12                  G33SPHW
* REGISTER EQUATES
PARM     EQU   1                       INPUT PARAMETER LIST
DECB     EQU   1                       ADDR OF DECB
NEXTEND  EQU   1                       END ADDR NEXT RCD IN BUFFER
WORK     EQU   2                       GENERAL WORK REGISTER
CVTADDR  EQU   2                       ADDRESS OF THE CVT
NEWOLD   EQU   2                       ADDRESS OF NEW/OLD TCB POINTERS
TCBADR   EQU   2                       ADDRESS OF CURRENT TASKS TCB
SVRBAD   EQU   2                       ADDRESS OF SNAP SVRB
* BECAUSE OF THE USAGE OF REGISTERS START, NEXT AND END, THEY MUST
* REMAIN DESIGNATED BY REGISTERS N, N+1, AND N+2 IN THE ORDER SPECIFIED
START    EQU   3                       FIRST AVAILABLE SLOT IN BUFFER
NEXT     EQU   4                       NEXT BUFFER SLOT
END      EQU   5                       ONE BEYOND LAST BUFFER SLOT
LINCTR   EQU   6                       NUMBER OF LINES ON PAGE
ABDARPTR EQU   7                       POINTER TO ABDAREA
PAGCNT   EQU   8                       PAGE NUMBER
* CARE SHOULD BE EXERCISED IN USING REGISTERS 9 OR 10 IN THIS ROUTINE
* SINCE THEIR CONTENTS WILL BE VOLATILE OVER IEAVAD12
DECBSAVE EQU   9                       SAVE ADDR OF DECB IN IEAVAD12
EXITSAVE EQU   10                      SAVE ADDR OF DECB IN IEAVAD12
PCAPREG  EQU   11                      SAVE PAGE CAPACITY       Z40MPXG
BASE     EQU   12                      BASE REGISTER FOR ROUTINE
SAVEAREA EQU   13                      SAVE AREA POINTER
RETREG   EQU   14                      RETURN ADDR REGISTER
BASEIN   EQU   15                      BASE REGISTER FOR ID
RETCODE  EQU   15                      RETURN CODE REGISTER
INADDR   EQU   15                      ADDR OF ROUTINE TO BE SYNCHED
* MISCELLANEOUS EQUATES
ZERO     EQU   0                       CONSTANT
ONE      EQU   1                       CONSTANT
TWO      EQU   2                       CONSTANT
THREE    EQU   3                       CONSTANT
FOUR     EQU   4                       CONSTANT
FIVE     EQU   5                       CONSTANT
SIX      EQU   6                       CONSTANT
SEVEN    EQU   7                       CONSTANT
EIGHT    EQU   8                       CONSTANT
NINE     EQU   9                       CONSTANT
FORWPTR  EQU   8                       OFFSET TO FORWARD CHAINING FIELD
BACKPTR  EQU   4                       OFFSET TO BACK CHAINING FIELD
R14SLOT  EQU   12                      OFFSET TO FIRST REGISTER SLOT
OLDTCB   EQU   4                       OFFSET TO OLD TCB IN NEW/OLD
RECLNG   EQU   125                     LOGICAL RECORD LENGTH
HEADDISP EQU   108                     DISPLACEMENT TO HEADING
PAGNODSP EQU   113                     DISPLACEMENT TO PAGE NUMBER
K204     EQU   204                     LONG LINE LENGTH         Z40MPXG
RECLNG2  EQU   209                     REC LNGH FOR LONG LINE   Z40MPXG
HD2DISP  EQU   192                     OFFSET TO PAGE HEADER    Z40MPXG
PG2NODSP EQU   197                     OFFSET TO PAGE NUMBER    Z40MPXG
SGN2DISP EQU   200                     OFFSET TO FIX SIGN ON PG Z40MPXG
*                                      IN HEADING
SIGNDISP EQU   116                     DISPLACEMENT TO BYTE WITH
*                                      SIGN FIELD AFTER UNPACK
CLEARSGN EQU   C'0'                    IMMEDIATE BYTE FOR CLEARING SIGN
SINGLE   EQU   X'40'                   SINGLE SPACE CARRIAGE CTRL CHAR
DOUBLE   EQU   C'0'                    DOUBLE SPACE CARRIAGE CTRL CHAR
TRIPLE   EQU   X'60'                   TRIPLE SPACE CARRIAGE CTRL CHAR
HEADON   EQU   X'04'                   HEADER ON CONSTANT       G33SPHW
HEADOFF  EQU   X'FB'                   HEADER RESET CONSTANT    G33SPHW
EJECT    EQU   C'1'                    EJECT CARRIAGE CTRL CHAR
BLANK    EQU   C' '                    BLANK CHARACTER
LNGDECB  EQU   20                      LENGTH OF DECB
SYNCH    EQU   12                      SVC NUMBER
         USING *,BASEIN
         MODID BR=YES                  BRANCH AROUND CONSTANT
         DROP  BASEIN
         STM   RETREG,BASE,R14SLOT(SAVEAREA)    SAVE CALLERS REGS
         BALR  BASE,ZERO               ESTABLISH ADDRESSIBLILITY
         USING *,BASE
BASE1    EQU   *
         LR    ABDARPTR,PARM           SET ADDR OF ABDAREA
         USING ABDAREA,ABDARPTR        DSECT ADDRESSIBILITY
COMMCODE L     WORK,ABDSAVE1           ADDRESS MY SAVE AREA   ZA16374
         ST    SAVEAREA,BACKPTR(WORK)  BACK CHAIN SAVE AREAS
         ST    WORK,FORWPTR(SAVEAREA)  FORWARD CHAIN SAVE AREAS
         L     WORK,ABDSAVE1           GET PROTECTED SAVEAREA ZA16374
         ST    WORK,FORWPTR(SAVEAREA)  SAVE CALLERS SAVEAREA  ZA16374
         LR    SAVEAREA,WORK           ADDRESS MY SAVE IN R13
RECLOOP  LM    START,END,ABDPTRS       GET ABDPTRS TO OUTPUT BUFFER
         CLI   ABDLLNGH,K204           CHECK FOR LONG LINE      Z40MPXG
         BNE   SHORTREC                NO, BACK TO NORMAL CODE  Z40MPXG
         MVC   ZERO(RECLNG2,NEXT),ABDLOG MOVE RECORD TO BUFFER  Z40MPXG
         LA    NEXT,RECLNG2(NEXT)      UPDATE TO NEXT SLOT      Z40MPXG
         LA    NEXTEND,RECLNG2(NEXT)   FIND END OF SLOT         Z40MPXG
         B     AFTERREC                CONTINUE WITH NORMAL     Z40MPXG
SHORTREC MVC   ZERO(RECLNG,NEXT),ABDLOG MOVE RECORD TO BUFFER   Z40MPXG
         LA    NEXT,RECLNG(NEXT)       BUMP TO NEXT AVAILABLE SLOT
         LA    NEXTEND,RECLNG(NEXT)    GET END ADDR OF NEXT RECORD
AFTERREC CR    NEXTEND,END             WILL NEXT RECORD FIT IN BUFFER
         BNL   BUFFULL                 NO, BRANCH
         ST    NEXT,ABDPTRS2           SAVE ADDR OF NEXT SLOT
BUMPLINE LH    LINCTR,ABDLCTR          GET LINE COUNTER
         CLI   ABDCC,SINGLE            SINGLE SPACING REQUESTED
         BE    ONEONLY                 YES, BRANCH
         CLI   ABDCC,DOUBLE            DOUBLE SPACING REQUESTED
         BE    TWOSKIP                 YES, BRANCH
         LA    LINCTR,ONE(LINCTR)      ADD ONE TO LINE COUNT
TWOSKIP  LA    LINCTR,ONE(LINCTR)      ADD ONE TO LINE COUNT
ONEONLY  LA    LINCTR,ONE(LINCTR)      ADD ONE TO LINE COUNT
         MVI   ABDCC,BLANK             SET ABDCC TO BLANK
         MVC   ABDLINE(L'ABDLINE),ABDCC BLANK ABDLINE
         TM    ABDRES1,HEADON          PAGE HEADING PRINTED     G33SPHW
         BNO   AROUND                  NO SKIP BLANK LINE       G33SPHW
         NI    ABDRES1,HEADOFF         RESET HEADER PRINTED     G33SPHW
         B     RECLOOP                 PRINT BLANK LINE         G33SPHW
AROUND   SR    PCAPREG,PCAPREG         CLEAR PAGE CAPACITY REG  Z40MPXG
         IC    PCAPREG,ABDPCAP         GET PAGE CAPACITY        Z40MPXG
         CR    LINCTR,PCAPREG          ARE MAX LINES ON PAGE    Z40MPXG
         BNL   PAGEFULL                YES, BRANCH
         STH   LINCTR,ABDLCTR          SAVE UPDATED LINE COUNT
EXIT     L     SAVEAREA,ABDSAVE1       GET PROTECTED SAVEAREA ADDRESS
*                                                               ZA16374
         L     SAVEAREA,BACKPTR(SAVEAREA) GET ADDR OF CALLERS SAVE AREA
         LM    RETREG,BASE,R14SLOT(SAVEAREA) RESTORE CALLERS REGS
         LA    RETCODE,ZERO            SET RETURN CODE TO ZERO
         BR    RETREG                  RETURN TO CALLER
BUFFULL  SR    NEXT,START              DIFFERENCE IS PHYS RECORD SIZE
         STH   NEXT,ABDPHY             STORE SIZE IN BUFFER DESCRIPTOR
         MVC   ZERO(FOUR,START),ABDPHY MOVE BDW TO OUTPUT RECORD
         LA    NEXT,FOUR(START)        SET NEXT AVAILABLE BYTE TO
         ST    NEXT,ABDPTRS2           FIRST AVAILABLE IN BUFFER
         L     DECB,ABDDECB            GET ADDR OF UNPROTECTED DECB
         MVC   ZERO(LNGDECB,DECB),ABDECB REFRESH DECB IN USER CORE
         LA    INADDR,IEAVAD12         PUT ADDR OF ROUTINE IN REG 15
         L     13,ABDSAVE1             GET SAVEAREA ADDRESS     ZA16374
         STM   RETREG,BASE,R14SLOT(SAVEAREA) SAVE REGISTERS     ZA16374
         L     SAVEAREA,ABDSAVE        POINT R13 AT WRITE SAVEAREA
*                                                               ZA16374
         SVC   SYNCH                   SYNC ENTRY IN USERS KEY
         L     CVTADDR,CVTPTR          GET ADDR OF CVT          ZA16374
         USING CVT,CVTADDR                                      ZA16374
         L     NEWOLD,CVTTCBP          GET ADDR OF NEW/OLD TCB  ZA16374
         DROP  CVTADDR                                          ZA16374
         L     TCBADR,OLDTCB(NEWOLD)   GET ADDR OF CURRENT TCB  ZA16374
         USING TCB,TCBADR                                       ZA16374
         L     SVRBAD,TCBRBP           GET ADDR OF ABDUMP SVRB  ZA16374
         DROP  TCBADR                                           ZA16374
         USING RBSECT,SVRBAD
         L     ABDARPTR,RBEXSAVE+FOUR  ADDR OF ABDAREA IS FOUND
*                                      IN SECOND WORD OF EXTENDED SAVE
*                                      AREA                     ZA16374
         DROP  SVRBAD                                           ZA16374
         L     SAVEAREA,ABDSAVE1       GET SAVEAREA ADDRESS FROM
*                                      WORKAREA                 ZA16374
         LM    RETREG,BASE,R14SLOT(SAVEAREA) RESTORE REGISTERS  ZA16374
         L     SAVEAREA,ABDSAVE        RESTORE SAVEAREA ADDRESS ZA16374
         B     BUMPLINE                AFTER WRITING OUTPUT
PAGEFULL LH    PAGCNT,ABDPCTR          GET PAGE COUNT
         LA    PAGCNT,ONE(PAGCNT)      ADD ONE
         STH   PAGCNT,ABDPCTR          SAVE UPDATED COUNT
         MVI   ABDCC,EJECT             SET CC TO EJECT PAGE
         CLI   ABDLLNGH,K204           CHECK FOR LONG LINE      Z40MPXG
         BNE   OLDHEAD                 NO, RESUME NORMAL CODE   Z40MPXG
         MVC   ABDLINE(80),ABDSAVHD    MOVE HEADER TO PAGE TOP  G33SPHW
         MVC   ABDLINE+HD2DISP(FOUR),PAGE MOVE IN HEADER        Z40MPXG
         CVD   PAGCNT,ABDWORK1         CONVERT PAGE NUMBER      Z40MPXG
         UNPK  ABDLINE+PG2NODSP(FOUR),ABDWORK1+FOUR(FOUR)       Z40MPXG
         OI    ABDLINE+SGN2DISP,CLEARSGN FIX ZONE ON LAST DIGIT Z40MPXG
         MVC   ABDLCTR(TWO),MINUSONE  RESET LINE COUNT          Z40MPXG
         OI    ABDRES1,HEADON         SET HEADER PRINTED ON     G33SPHW
         B     RECLOOP                GO PROCESS NEW RECORD     Z40MPXG
OLDHEAD  MVC   ABDLINE+HEADDISP(FOUR),PAGE MOVE HEADING TO LINE
         MVC   ABDLINE(80),ABDSAVHD    MOVE HEADER TO PAGE TOP  G33SPHW
         CVD   PAGCNT,ABDWORK1         CONVERT PAGE NUMBER TO DECIMAL
         UNPK  ABDLINE+PAGNODSP(FOUR),ABDWORK1+FOUR(FOUR)
*                                      UNPACK RESULT INTO OUTPUT LINE
         OI    ABDLINE+SIGNDISP,CLEARSGN CLEAR SIGN BYTE
         MVC   ABDLCTR(TWO),MINUSONE   RESET LINE COUNT
         OI    ABDRES1,HEADON         SET HEADER PRINTED ON     G33SPHW
         B     RECLOOP                 WRITE THE PAGE HEADING
* THIS PORTION OF THE ROUTINE IS ENTERED VIA SYNCH IN ORDER TO PREVENT
* THE USER FROM GETTING CONTROL IN KEY 0 STATE. THE SYNCH INSURES THAT
* REGARDLESS OF WHAT IS SPECIFIED IN THE DCB, THE ROUTINE WILL BE
* ENTERED WITH THE USERS KEY.
IEAVAD12 LR    DECBSAVE,DECB           SAVE DECB ADDRESS
         LR    EXITSAVE,RETREG         SAVE EXIT ADDR OVER WRITE
*                                      AND CHECK
         WRITE (1),SF,MF=E             ISSUE WRITE REQUEST
         LR    DECB,DECBSAVE           RESTORE DECB ADDRESS
         CHECK (1)                     CHECK THE WRITE OPERATION
         BR    EXITSAVE                RETURN TO CALLER
* IEAVAD21 IS ENTERED BY MAINLINE TO FORCE THE OUTPUTTING OF ANY
* RECORDS REMAINING IN THE BUFFER
IEAVAD21 STM   RETREG,BASE,R14SLOT(SAVEAREA) SAVE REGISTERS
         BALR  BASE,ZERO               ESTABLISH ADDRESSIBILITY
         USING *,BASE
BASE2    EQU   *
         LA    WORK,BASE2-BASE1        GET DIFFERENCE
         SR    BASE,WORK               CALC ORIGINAL BASE
         USING BASE1,BASE              ADDRESSIBILITY AS IEAVAD11
         LR    ABDARPTR,PARM           SET ADDR OF ABDAREA
         L     WORK,ABDSAVE            ADDR MY SAVE AREA
         ST    SAVEAREA,BACKPTR(WORK)  BACK CHAIN AREAS
         ST    WORK,FORWPTR(SAVEAREA)  FORWARD CHAIN AREAS
         LR    SAVEAREA,WORK           SET ADDR MY SAVE IN REG 13
         LM    START,END,ABDPTRS       GET BUFFER POINTERS
         LA    WORK,FOUR(START)        CALC INIT ADDR IN BUFFER
         CR    WORK,NEXT               IF AT BEGINNING OF BUFFER
*                                      NOTHING TO WRITE
         BE    EXIT                    RETURN
         MVC   ABDLCTR(TWO),MINUSONE   INSURE THAT NEW PAGE HEADING
*                                      WILL NOT BE WRITTEN
         B     BUFFULL                 GO WRITE REMAINING DATA
*
* IEAVAD81 IS AN ENTRY POINT USED BY SUBSYSTEM MODULES TO PRINT
* A LINE OF DATA. THE ROUTINE ESTABLISHES THE TYPE OF INTERFACE
* REQUIRED BY IEAVAD11 AND BRANCHES TO THAT PORTION OF THE CODE.
*
IEAVAD81 STM   RETREG,BASE,R14SLOT(SAVEAREA) SAVE CALLERS REGISTERS
         BALR  BASE,ZERO               ESTABLISH ADDRESSIBILITY
         USING *,BASE
BASE3    EQU   *
         LA    WORK,BASE3-BASE1        GET DIFFERENCE IN BASE VALUES
*                                      VAD81 AND VAD11
         SR    BASE,WORK               SET BASE REG TO VAD11 VALUE
         USING BASE1,BASE
         L     CVTADDR,CVTPTR          GET ADDR OF CVT
         USING CVT,CVTADDR
         L     NEWOLD,CVTTCBP          GET ADDR OF NEW/OLD TCB POINTERS
         DROP  CVTADDR
         L     TCBADR,OLDTCB(NEWOLD)   GET ADDR OF CURRENT TCB
         USING TCB,TCBADR
         L     SVRBAD,TCBRBP           GET ADDR OF ABDUMP SVRB
         DROP  TCBADR
         USING RBSECT,SVRBAD
         L     ABDARPTR,RBEXSAVE+FOUR  ADDR OF ABDAREA IS FOUND
*                                      IN SECOND WORD OF EXTENDED SAVE
*                                      AREA
         DROP  SVRBAD
         XC    ABDUPRXT(FOUR),ABDUPRXT  ZERO UPR EXIT ROUTINE ADDR TO
*                                      PREVENT TROUBLE DUE TO CARELESS
*                                      USE OF FIELD BY SUBSYSTEM
         B     COMMCODE                ENTER VAD11 CODE
* CONSTANTS
MINUSONE DC    H'-1'                   VALUE TO RESET LINE COUNT
PAGE     DC    C'PAGE'                 HEADING FOR NEW PAGE
* DSECT MAP OF ABDAREA
         IHAABDA
* DSECT MAP OF THE CVT
         CVT  DSECT=YES
* DSECT MAP OF THE TCB
         IKJTCB
* DSECT MAP OF THE RB
         IKJRB
*/*IEAVAD11: CHART */
*/* HEADER
*/* PAGE AND HEADER FORMATTING ROUTINE, LINE WRITER
*/* FEBRUARY 14, 1975      C. KEN WRIGHT     PAGE# */
*/* E IEAVAD11 MAINLINE */
*/* P SAVE CALLERS REGISTERS */
*/* P ESTABLISH ADDRESSABILITY - REG 12 */
*/* P GET ADDRESS OF ABDAREA */
*/*%L11: P CHAIN SAVEAREA AND SAVE REG 13 */
*/*%L8: P GET POINTER TO OUTPUT BUFFER */
*/* D (YES,,NO,SHORTREC) 204 CHARACTER LINE ? */
*/* P MOVE RECORD TO BUFFER */
*/* P BUMP TO NEXT SLOT IN BUFFER */
*/* P (,AFTERREC) GET ADDRESS OF NEXT RECORD SLOT */
*/*SHORTREC: P MOVE RECORD TO BUFFER */
*/* P BUMP TO NEXT SLOT IN BUFFER */
*/* P GET ADDRESS OF NEXT RECORD SLOT */
*/*AFTERREC: D (YES,,NO,BUFFULL) WILL RECORD FIT IN BUFFER ? */
*/* P SAVE POINTER TO NEXT SLOT */
*/*%L5: P GET THE LINE COUNTER */
*/* D (YES,%L2,NO,) SINGLE SPACING ? */
*/* D (YES,%L3,NO,) DOUBLE SPACING ? */
*/* P ADD ONE TO LINE COUNT */
*/*%L3: P ADD ONE TO LINE COUNTER */
*/*%L2: P ADD ONE TO LINE COUNTER */
*/* P BLANK OUT ABDCC */
*/* P BLANK OUTPUT LINE - ABDLINE */
*/* P CLEAR OUT PAGE CAPACITY REGISTER */
*/* P PICK UP PAGE CAPACITY - ABDPCAP */
*/* D (YES,PAGEFULL,NO,) MAXIMUM LINES ON PAGE ? */
*/* P SAVE THE LINE COUNTER */
*/*EXIT: P RESTORE REGISTERS */
*/* P SET RETURN CODE OF ZERO */
*/* R RETURN TO CALLER */
*/*BUFFULL: P GET DIFFERENCE IN RECORD SIZE */
*/* P STORE IN BUFFER DESCRIPTOR */
*/* P MOVE 4-BYTE HEADER TO BEGINNING OF BUFFER */
*/* P POINT TO NEXT CHARACTER POSITION */
*/* P SAVE CURRENT POINTER */
*/* P GET DECB ADDRESS */
*/* P COPY ABDECB TO USER DECB */
*/* P SET ADDR OF WRITECHK IN REG 15 */
*/* L (,WRITECHK) SYNCH TO WRITE ROUTINE */
*/*PAGEFULL: P GET PAGE COUNT */
*/* P INCREMENT BY ONE */
*/* P SAVE PAGE COUNT */
*/* P SET ABDCC TO EJECT */
*/* D (YES,,NO,OLDHEAD) 204 CHARACTER LINE ? */
*/* P MOVE PAGE HEADER INTO ABDLINE */
*/* P CONVERT PAGE NUMBER TO PACKED DECIMAL */
*/* P UNPACK IT INTO ABDLINE */
*/* P FIX SIGN BIT ON PAGE NUMBER FROM UNPACK */
*/* P (,%L8) RESET THE LINE COUNT */
*/*OLDHEAD: P MOVE HEADER INTO LINE */
*/* P CONVERT PAGE NUMBER AND PUT INTO LINE */
*/* P (,%L8) RESET LINE COUNT */
*/*WRITECHK: P SAVE DECB ADDRESS */
*/* P SAVE REG 14 OVER WRITE OPERATION */
*/* I WRITE BUFFER - BSAM */
*/* L CHECK - FOR THE WRITE */
*/* R RETURN TO CALLER */
*/*IEAVAD21: E IEAVAD21 MAINLINE */
*/* P SAVE REGISTERS */
*/* P SET ADDRESSABILITY TO BEGINNING OF MODULE */
*/* P GET POINTER TO ABDAREA */
*/* P CALCULATE BEGINNING ADDRESS OF BUFFER */
*/* D (YES,EXIT,NO,) NOTHING TO WRITE ? */
*/* P (,BUFFULL) INSURE NO NEW PAGE HEADER WILL BE WRITTEN */
*/*IEAVAD81: E IEAVAD81 MAINLINE */
*/* P SAVE CALLERS REGISTERS */
*/* P ESTABLISH ADDRESSABILITY TO BEGINNING OF MODULE */
*/* P GET CVT POINTER */
*/* P GET POINTER TO NEW/OLD TCB POINTERS */
*/* P GET CURRENT TCB ADDRESS */
*/* P GET ADDR OF ABDUMP SVRB FROM CURRENT TCB */
*/* P GET ABDAREA POINTER FROM EXTENDED SAVEAREA */
*/* P (,%L11) CLEAR UPR FLAGS JUST IN CASE */
          END IEAVAD11
