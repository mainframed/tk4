         TITLE 'IEAVAD0A - SQA,LSQA DISPLAY                            *
                        '
IEAVAD0A CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVAD0A  77.077'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @06,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@06                                         0001
*                                                                  0068
*/*                    END OF TCB                                    */
*                                                                  0069
*                                                                  0069
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION ON ENTRY FIRST THE ADDRESSING REGISTERS ARE    */
*   /* INITIALIZED, THEN A SAVE AREA FOR THE REGISTER SAVE AREA AND  */
*   /* AUTOMATIC DATA AREA IS OBTAINED FROM LSQA. THE ADDRESS OF THE */
*   /* AREA IS RETURNED IN ABDGMA, AND THE ADDRESS OF THE GETMAIN    */
*   /* PARAMETER LIST IS PASSED IN REGISTER 1. NEXT THE SAVE AREAS   */
*   /* ARE CHAINED, AND THE TEMPORARY WORK AREA ZTEMPS IS CLEARED TO */
*   /* ZEROS SO THAT THE BOUNDARY ADJUSTMENT MOVES CAN BE DONE       */
*   /* PROPERLY.                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0069
*   ABDARPTR=PARMPTR;               /* THE ABDAREA SAVE AREA IS    0069
*                                      INITIALIZED FROM THE VALUE IN
*                                      REGISTER 1                    */
         LR    ABDARPTR,PARMPTR                                    0069
*   PARMPTR=ADDR(ABDASIZE);         /* REGISTER 1 IS SET TO POINT TO
*                                      THE GETMAIN PARAMETER LIST    */
         LA    PARMPTR,ABDASIZE(,ABDARPTR)                         0070
*   GENERATE;                                                      0071
         GETMAIN EC,LV=@ENDDATD-@DATD+72+3208,                         *
               SP=253,                                                 *
               A=ABDGMA(ABDARPTR),                                     *
               MF=(E,(1))
*   IF RETCODE^=0 THEN              /* GETMAIN SUCCESSFUL            */
         LTR   RETCODE,RETCODE                                     0072
         BZ    @RF00072                                            0072
*     SAVERET=8;                    /* NO, SET RETURN CODE           */
         LA    SAVERET,8                                           0073
*   ELSE                                                           0074
*     DO;                                                          0074
         B     @RC00072                                            0074
@RF00072 DS    0H                                                  0075
*       PARMPTR=ABDAAREA;           /* USE PARMPTR AS TEMPORARY    0075
*                                      POINTER TO SAVE AREA          */
         L     PARMPTR,ABDAAREA(,ABDARPTR)                         0075
*       NEXSAPTR=PARMPTR;           /* INITIALIZE NEXT SAVE AREA   0076
*                                      POINTER IN OLD SAVE AREA      */
         ST    PARMPTR,NEXSAPTR(,SAVEPTR)                          0076
*       PRESAPTR=SAVEPTR;           /* INITIALIZE PREVIOUS SAVE AREA
*                                      POINTER IN NEW AREA           */
         ST    SAVEPTR,PRESAPTR(,PARMPTR)                          0077
*       SAVEPTR=PARMPTR;            /* SET SAVE REGISTER TO NEW SAVE
*                                      AREA ADDRESS                  */
         LR    SAVEPTR,PARMPTR                                     0078
*       RFY                                                        0079
*         R5 RSTD;                                                 0079
*       R5=SAVEPTR+72;              /* TABLE STARTS AT END OF      0080
*                                      SAVEAREA STORAGE      @G33SPHW*/
         LA    R5,72                                               0080
         ALR   R5,SAVEPTR                                          0080
*       AUTOPTR=R5+TABSZ;           /* DATA AREA BEGINS AT END OF  0081
*                                      STORAGE TABLE         @G33SPHW*/
         LA    AUTOPTR,3208                                        0081
         ALR   AUTOPTR,R5                                          0081
*       GENERATE;                                                  0082
         USING @DATD,AUTOPTR       ESTABLISH ADDRESSABILITY
         XC 0(@ENDDATD-@DATD,AUTOPTR),0(AUTOPTR) ZERO STORAGE
*       FRSTTABL=R5;                /* INITIALIZE TABLE ANCHOR     0083
*                                                            @G33SPHW*/
         ST    R5,FRSTTABL                                         0083
*       STORPTR=FRSTTABL;           /* INITIALIZE TABLE POINTER    0084
*                                                            @G33SPHW*/
         L     @08,FRSTTABL                                        0084
         ST    @08,STORPTR                                         0084
*       FWDPTR=0;                   /* INITIALIZE FORWARD POINTER TO
*                                      ZERO                  @G33SPHW*/
         SLR   @07,@07                                             0085
         ST    @07,FWDPTR(,@08)                                    0085
*       BWDPTR=0;                   /* INITIALIZE BACKWARD POINTER TO
*                                      ZERO                  @G33SPHW*/
         ST    @07,BWDPTR(,@08)                                    0086
*       RFY                                                        0087
*         R5 UNRSTD;                /*                       @G33SPHW*/
*       ASCBPTR=PSAAOLD;            /* GET PTR TO CURRENT ASCB     0088
*                                                            @G33SPHW*/
         MVC   ASCBPTR(4),PSAAOLD                                  0088
*       PARMPTR=ABDARPTR;           /* INITIALIZE PARAMETER REG      */
         LR    PARMPTR,ABDARPTR                                    0089
*       SAVERET=0;                  /* INIT RETURN CODE              */
         SLR   SAVERET,SAVERET                                     0090
*       ENTLIMIT=0;                 /* INITIALIZE TOTAL ENTRY      0091
*                                      COUNTER.              @G33SPHW*/
         STH   @07,ENTLIMIT                                        0091
*       CTR=0;                      /* INITIALIZE CURRENT ENTRY    0092
*                                      COUNTER.              @G33SPHW*/
         STH   @07,CTR                                             0092
*       IF TCBPTR=ABDTCB THEN       /* DUMP OF CURRENT TASK          */
         C     TCBPTR,ABDTCB(,ABDARPTR)                            0093
         BNE   @RF00093                                            0093
*         DO;                       /* YES                           */
*           IF TCBLTC^=0&           /* DOES TASK HAVE DAUGHTER       */
*               TCBLTC->TCBJSTCB=TCBLTC/* WHICH IS A JOB STEP TASK   */
*             THEN                                                 0095
         L     @08,TCBLTC(,TCBPTR)                                 0095
         CR    @08,@07                                             0095
         BE    @RF00095                                            0095
         C     @08,TCBJSTCB(,@08)                                  0095
         BE    @RT00095                                            0095
*             ;                     /* YES, DO NOT SET TASK ND       */
*           ELSE                                                   0097
*             DO;                                                  0097
@RF00095 DS    0H                                                  0098
*               TCBADMP='1'B;       /* INDICATE TASK REQUESTING    0098
*                                                              STATUS*/
         OI    TCBADMP(TCBPTR),B'00000010'                         0098
*               ABDSTAT='1'B;       /* IND STATUS ISSUED     @YM06195*/
         OI    ABDSTAT(ABDARPTR),B'00000010'                       0099
*               GENERATE;                                          0100
          STATUS SET,ND,STEP,(1)   SET JOB NON-DISPATCHABLE
*             END;                                                 0101
*         END;                                                     0102
@RT00095 DS    0H                                                  0103
*       IF ABDOLSQA='1'B THEN       /* LSQA REQUESTED        @G33SPHW*/
@RF00093 TM    ABDOLSQA(ABDARPTR),B'00100000'                      0103
         BNO   @RF00103                                            0103
*         DO;                       /* YES                   @G33SPHW*/
*                                                                  0104
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION OF CODE DISPLAYES LSQA                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0105
*           PARMPTR=ABDARPTR;       /* SET R1 TO ABDA ADDRESS      0105
*                                                            @G33SPHW*/
         LR    PARMPTR,ABDARPTR                                    0105
*           LDAPTR=ASCBLDA;         /* GET PTR TO LDA                */
         L     @08,ASCBPTR                                         0106
         L     @08,ASCBLDA(,@08)                                   0106
         ST    @08,LDAPTR                                          0106
*           IF LSQAPTR^=0 THEN      /* DOES SPQE EXIST FOR LSQA      */
         ICM   @07,15,LSQAPTR(@08)                                 0107
         BZ    @RF00107                                            0107
*             DO;                   /* YES                           */
*               ABDLINEA(1:15)=LSQAMSG;/* SET UP LSQA HEADING        */
         MVC   ABDLINEA(15,ABDARPTR),LSQAMSG                       0109
*               CALL IEAVAD11;      /* PUT OUT HEADING               */
         L     @15,@CV00059                                        0110
         BALR  @14,@15                                             0110
*               SPQESPTR=LSQAPTR;   /* GET SPQE PTR FOR LSQA         */
         L     @08,LDAPTR                                          0111
         MVC   SPQESPTR(4),LSQAPTR(@08)                            0111
*               CALL D0ADSPLY;      /* BUILD STORAGE TABLE           */
         BAL   @14,D0ADSPLY                                        0112
*               CALL D0ASORT;       /* SORT STORAGE TABLE    @G33SPHW*/
         BAL   @14,D0ASORT                                         0113
*               CALL D0APRNT;       /* DISPLAY STORAGE       @G33SPHW*/
         BAL   @14,D0APRNT                                         0114
*             END;                                                 0115
*         END;                                                     0116
@RF00107 DS    0H                                                  0117
*       IF ABDSQA='1'B THEN         /* SQA REQUESTED                 */
@RF00103 TM    ABDSQA(ABDARPTR),B'00010000'                        0117
         BNO   @RF00117                                            0117
*         DO;                                                      0118
*                                                                  0118
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION OF CODE DISPLAYS SQA                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0119
*           PARMPTR=ABDARPTR;       /* SET R1 TO ABDA ADDRESS      0119
*                                                            @G33SPHW*/
         LR    PARMPTR,ABDARPTR                                    0119
*           GDAPTR=CVTGDA;          /* GET ADDR OF GDA               */
         L     @08,CVTPTR                                          0120
         L     @08,CVTGDA(,@08)                                    0120
         ST    @08,GDAPTR                                          0120
*           IF SQASPQEP^=0 THEN     /* DOES SPQE EXIST FOR SQA       */
         ICM   @07,15,SQASPQEP(@08)                                0121
         BZ    @RF00121                                            0121
*             DO;                   /* YES                           */
*               ABDSQSDM='1'B;      /* INDICATE SQA BEING DUMPED     */
         OI    ABDSQSDM(ABDARPTR),B'00001000'                      0123
*               ABDLINEA(1:15)=LSQAMSG;/* SET SQA HEADING            */
         MVC   ABDLINEA(15,ABDARPTR),LSQAMSG                       0124
*               ABDLINEA(12)=' ';   /* CHANGE L TO BLANK             */
         MVI   ABDLINEA+11(ABDARPTR),C' '                          0125
*               CALL IEAVAD11;      /* PUT OUT HEADING               */
         L     @15,@CV00059                                        0126
         BALR  @14,@15                                             0126
*               SPQESPTR=SQASPQEP;  /* GET SPQE PTR FOR SQA          */
         L     @08,GDAPTR                                          0127
         MVC   SPQESPTR(4),SQASPQEP(@08)                           0127
*               CALL D0ADSPLY;      /* BUILD STORAGE TABLE   @G33SPHW*/
         BAL   @14,D0ADSPLY                                        0128
*               CALL D0ASORT;       /* SORT STORAGE LIST     @G33SPHW*/
         BAL   @14,D0ASORT                                         0129
*               CALL D0APRNT;       /* PRINT STORAGE         @G33SPHW*/
         BAL   @14,D0APRNT                                         0130
*             END;                                                 0131
*         END;                                                     0132
@RF00121 DS    0H                                                  0133
*       IF TCBPTR=ABDTCB THEN       /* WAS DUMP OF CURRENT TCB       */
@RF00117 C     TCBPTR,ABDTCB(,ABDARPTR)                            0133
         BNE   @RF00133                                            0133
*         DO;                       /* YES                           */
*           IF TCBLTC^=0&           /* DOES TASK HAVE DAUGHTER       */
*               TCBLTC->TCBJSTCB=TCBLTC/* WHICH IS A JOB STEP TASK   */
*             THEN                                                 0135
         L     @08,TCBLTC(,TCBPTR)                                 0135
         LTR   @08,@08                                             0135
         BZ    @RF00135                                            0135
         C     @08,TCBJSTCB(,@08)                                  0135
         BE    @RT00135                                            0135
*             ;                     /* YES, DO NOT SET TASK ND       */
*           ELSE                                                   0137
*             DO;                                                  0137
@RF00135 DS    0H                                                  0138
*               ABDSTAT='0'B;       /* IND STATUS RESET      @YM06195*/
         NI    ABDSTAT(ABDARPTR),B'11111101'                       0138
*               GENERATE;                                          0139
         STATUS RESET,ND,STEP,(1) RESET JOB STEP DISPATCHABLE
*               TCBADMP='0'B;       /* TURN OFF STATUS REQUESTOR   0140
*                                      INDICATOR                     */
         NI    TCBADMP(TCBPTR),B'11111101'                         0140
*             END;                                                 0141
*         END;                                                     0142
@RT00135 DS    0H                                                  0143
*                                                                  0143
*       /*************************************************************/
*       /*                                                           */
*       /* FREE THE STORAGE USED TO HOLD STORAGE ADDRESSES. THE FIRST*/
*       /* TABLE POINTED TO BY FRSTTABL, IS FREED BY EXIT CLEAN UP.  */
*       /* IF MORE THAN ONE TABLE WAS AQCQUIRED THEY WILL FREED BY   */
*       /* THIS ROUTINE.                                     @G33SPHW*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0143
*       STORPTR=FRSTTABL;           /* GET FIRST TABLE ADDRESS     0143
*                                                            @G33SPHW*/
@RF00133 L     @08,FRSTTABL                                        0143
         ST    @08,STORPTR                                         0143
*       IF FWDPTR^=0 THEN           /* MORE THAN ONE TABLE   @G33SPHW*/
         ICM   @07,15,FWDPTR(@08)                                  0144
         BZ    @RF00144                                            0144
*         DO;                       /* YES.. FREE ALL        @G33SPHW*/
*           DO WHILE FWDPTR^=0;     /* FIND END OF CHAIN     @G33SPHW*/
         B     @DE00146                                            0146
@DL00146 DS    0H                                                  0147
*             STORPTR=FWDPTR;       /* NEXT TABLE ADDRESS    @G33SPHW*/
         L     @08,STORPTR                                         0147
         L     @08,FWDPTR(,@08)                                    0147
         ST    @08,STORPTR                                         0147
*           END;                    /* END ..DO WHILE LAST TBL     0148
*                                                            @G33SPHW*/
@DE00146 L     @08,STORPTR                                         0148
         ICM   @07,15,FWDPTR(@08)                                  0148
         BNZ   @DL00146                                            0148
*           DO WHILE BWDPTR^=0;     /* PROCESS TBL FROM BACK @G33SPHW*/
         B     @DE00149                                            0149
@DL00149 DS    0H                                                  0150
*             R0=TABSZ;             /* PUT SIZE OF TABLE IN R0     0150
*                                                            @G33SPHW*/
         LA    R0,3208                                             0150
*             R1=STORPTR;           /* PUT ADDRESS OF TBL IN R1    0151
*                                                            @G33SPHW*/
         L     @08,STORPTR                                         0151
         LR    R1,@08                                              0151
*             STORPTR=BWDPTR;       /* SAVE PREVIOUS TABLE ADDR    0152
*                                                            @G33SPHW*/
         L     @08,BWDPTR(,@08)                                    0152
         ST    @08,STORPTR                                         0152
*             FREEAREA=R1;          /* GET AREA TO BE FREED  @G33SPHW*/
         ST    R1,FREEAREA                                         0153
*             DO;                   /* FREEMAIN(RC)                0154
*                                      LV(R0)A(FREEAREA->I256C)    0154
*                                      SP(253)                       */
*               RESPECIFY                                          0155
*                (GPR01F,                                          0155
*                 GPR15F,                                          0155
*                 GPR00F) RESTRICTED;                              0155
*               GPR01F=0;           /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                       0156
*               GPR15F=1;           /* SET TYPE                      */
         LA    GPR15F,1                                            0157
*               GPR00F=R0;          /* LENGTH REQUESTED              */
*               GPR01F=ADDR(FREEAREA->I256C);/* SET REGISTER ONE     */
         L     @08,FREEAREA                                        0159
         LR    GPR01F,@08                                          0159
*               GPR15F=GPR15F+((253)*256);/* SUBPOOL VALUE           */
         AL    GPR15F,@CF02135                                     0160
*               SVC(120);           /* RC/RU-FORM OF GETMAIN         */
         SVC   120                                                 0161
*               RESPECIFY                                          0162
*                (GPR01F,                                          0162
*                 GPR15F,                                          0162
*                 GPR00F) UNRESTRICTED;                            0162
*             END;                  /* FREEMAIN(RC)                0163
*                                      LV(R0)A(FREEAREA->I256C)    0163
*                                      SP(253)                       */
*           END;                    /* END.. DO WHILE FREEMAIN     0164
*                                                            @G33SPHW*/
@DE00149 L     @08,STORPTR                                         0164
         ICM   @07,15,BWDPTR(@08)                                  0164
         BNZ   @DL00149                                            0164
*         END;                      /* END... MULTI TABLES   @G33SPHW*/
*       PARMPTR=ADDR(ABDASIZE);     /* SET UP FREEMAIN LIST REG      */
@RF00144 LA    PARMPTR,ABDASIZE(,ABDARPTR)                         0166
*       ABDAAREA=SAVEPTR;           /* SET UP ADDRESS TO FREE        */
         ST    SAVEPTR,ABDAAREA(,ABDARPTR)                         0167
*       SAVEPTR=SAVEPTR->PRESAPTR;  /* SET UP PREVIOUS SAVE AREA     */
         L     SAVEPTR,PRESAPTR(,SAVEPTR)                          0168
*       NEXSAPTR=0;                 /* CLEAR POINTER TO AREA TO BE 0169
*                                      FREED                         */
         SLR   @08,@08                                             0169
         ST    @08,NEXSAPTR(,SAVEPTR)                              0169
*       GENERATE;                                                  0170
         FREEMAIN E,LV=@ENDDATD-@DATD+72+3208,                         *
               SP=253,                                                 *
               A=ABDGMA(ABDARPTR),                                     *
               MF=(E,(1))
*     END;                                                         0171
*   RETCODE=SAVERET;                /* SET UP RETURN CODE            */
@RC00072 LR    RETCODE,SAVERET                                     0172
*   RETURN;                                                        0173
@EL00001 DS    0H                                                  0173
@EF00001 DS    0H                                                  0173
@ER00001 L     @14,12(,@13)                                        0173
         LM    @00,@12,20(@13)                                     0173
         BR    @14                                                 0173
*D0ADSPLY:                                                         0174
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0174
D0ADSPLY DS    0H                                                  0175
*   SAVE14=RETERN;                  /* SAVE RETURN ADDR              */
*                                                                  0175
         ST    RETERN,SAVE14                                       0175
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN LOCAL LOCK WHILE BUILDING THE STORAGE TABLE    @G33SPHW*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0176
*   GEN REFS(CVTPTR,CVTMAP,CVTCRMN,ABDWORK,PSALITA) SETS(R11,R14); 0176
     STM  R11,R14,ABDWORK(ABDARPTR) SAVE REGS OVER SETLOCK      G33SPHW
     SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=('IEAVAD0A')
     LM   R11,R14,ABDWORK(ABDARPTR)  RESTORE REGS AFTER SETLOCK G33SPHW
*   DQELNSVE=0;                     /* INIT LENGTH SAVE FIELD TO ZERO*/
         SLR   @08,@08                                             0177
         ST    @08,DQELNSVE                                        0177
*   DQESEPTR=SPDQEPTR;              /* GET FIRST DQE PTR             */
         L     @07,SPQESPTR                                        0178
         L     @07,SPDQEPTR(,@07)                                  0178
         ST    @07,DQESEPTR                                        0178
*   DQEBLKSV=DQEBLKAD;              /* GET ADDR OF AREA DESCRIBED BY
*                                      DQE                           */
         MVC   DQEBLKSV(4),DQEBLKAD(@07)                           0179
*   CTR=0;                          /* RESET CURRENT ENTRY COUNTER 0180
*                                                            @G33SPHW*/
         STH   @08,CTR                                             0180
*   DO WHILE(DQESEPTR^=0);          /* LOOP UNTIL ALL DQES ARE     0181
*                                      PROCESSED                     */
         B     @DE00181                                            0181
@DL00181 DS    0H                                                  0182
*     ABDBLOCK=DQEBLKSV;            /* GET ADDR OF AREA              */
         MVC   ABDBLOCK(4,ABDARPTR),DQEBLKSV                       0182
*     ABDLENTH=FOURK;               /* GET LENGTH OF AREA TO BE    0183
*                                      DISPLAYED                     */
         MVC   ABDLENTH(4,ABDARPTR),@CF00066                       0183
*     IF CTR=LIMIT THEN             /* STORAGE TABLE FULL    @G33SPHW*/
         LH    @08,CTR                                             0184
         CH    @08,@CH00078                                        0184
         BNE   @RF00184                                            0184
*       DO;                         /* YES.. OBTAIN NEW TABLE      0185
*                                                            @G33SPHW*/
*         ENTLIMIT=ENTLIMIT+CTR;    /* UPDATE TOTAL ENTRY COUNTER  0186
*                                                            @G33SPHW*/
         AH    @08,ENTLIMIT                                        0186
         STH   @08,ENTLIMIT                                        0186
*         CALL D0ATABLE;            /* OBTAIN NEW TABLE      @G33SPHW*/
         BAL   @14,D0ATABLE                                        0187
*         IF RETCODE^=0 THEN        /* ERROR GETMAIN FAILED  @G33SPHW*/
         SLR   @08,@08                                             0188
         CR    RETCODE,@08                                         0188
         BE    @RF00188                                            0188
*           DO;                     /* YES GET OUT OF LOOP   @G33SPHW*/
*             CTR=0;                /* RESET COUNTER         @G33SPHW*/
         STH   @08,CTR                                             0190
*             DQESEPTR=0;           /* ZERO LOOP CONTROL     @G33SPHW*/
         ST    @08,DQESEPTR                                        0191
*             GO TO SKIPREST;       /* SKIP REST OF STORAGE  @G33SPHW*/
         B     SKIPREST                                            0192
*           END;                    /* END NO MORE TABLES    @G33SPHW*/
*         CTR=1;                    /* START COUNTER AT ONE  @G33SPHW*/
@RF00188 MVC   CTR(2),@CH00085                                     0194
*       END;                        /* END... END OF TABLE   @G33SPHW*/
*     ELSE                          /* NOT END OF TABLE      @G33SPHW*/
*       CTR=CTR+1;                  /* INCREMENT CURRENT ENTRY     0196
*                                      COUNTER               @G33SPHW*/
         B     @RC00184                                            0196
@RF00184 LH    @08,CTR                                             0196
         LA    @08,1(,@08)                                         0196
         STH   @08,CTR                                             0196
*     STORADDR(CTR)=ABDBLOCK;       /* PUT STORAGE ADDRESS IN TABLE
*                                                            @G33SPHW*/
@RC00184 L     @08,STORPTR                                         0197
         LH    @07,CTR                                             0197
         SLA   @07,3                                               0197
         L     @05,ABDBLOCK(,ABDARPTR)                             0197
         ST    @05,STORADDR-8(@07,@08)                             0197
*     STORLEN(CTR)=ABDLENTH;        /* PUT LENGTH OF STORAGE IN TABLE
*                                                            @G33SPHW*/
         L     @05,ABDLENTH(,ABDARPTR)                             0198
         STH   @05,STORLEN-8(@07,@08)                              0198
*     DQELNSVE=DQELNSVE+FOURK;      /* INCREMENT LENGTH BY ONE PAGE  */
         LH    @08,@CH00066                                        0199
         L     @07,DQELNSVE                                        0199
         ALR   @07,@08                                             0199
         ST    @07,DQELNSVE                                        0199
*     IF DQELNSVE<DQELNTH THEN      /* END OF DQE            @ZM40330*/
         L     @05,DQESEPTR                                        0200
         C     @07,DQELNTH(,@05)                                   0200
         BNL   @RF00200                                            0200
*       DQEBLKSV=DQEBLKSV+FOURK;    /* NO, GET ADDR OF NEXT PAGE     */
         AL    @08,DQEBLKSV                                        0201
         ST    @08,DQEBLKSV                                        0201
*     ELSE                                                         0202
*       DO;                                                        0202
         B     @RC00200                                            0202
@RF00200 DS    0H                                                  0203
*         DQESEPTR=DQEPTR;          /* GET NEXT DQE PTR              */
         L     @08,DQESEPTR                                        0203
         L     @08,DQEPTR(,@08)                                    0203
         ST    @08,DQESEPTR                                        0203
*         DQELNSVE=0;               /* INIT LENGTH SAVE FIELD TO ZERO*/
         SLR   @07,@07                                             0204
         ST    @07,DQELNSVE                                        0204
*         IF DQESEPTR^=0 THEN       /* IS THERE ANOTHER DQE          */
         CR    @08,@07                                             0205
         BE    @RF00205                                            0205
*           DQEBLKSV=DQEBLKAD;      /* YES, GET NEXT BLOCK ADDR      */
         MVC   DQEBLKSV(4),DQEBLKAD(@08)                           0206
*       END;                                                       0207
@RF00205 DS    0H                                                  0208
*SKIPREST:                                                         0208
*   END;                                                           0208
@RC00200 DS    0H                                                  0208
SKIPREST DS    0H                                                  0208
@DE00181 ICM   @08,15,DQESEPTR                                     0208
         BNZ   @DL00181                                            0208
*   ENTLIMIT=ENTLIMIT+CTR;          /* SAVE TOTAL ENTRY COUNT      0209
*                                                            @G33SPHW*/
*                                                                  0209
         LH    @08,ENTLIMIT                                        0209
         AH    @08,CTR                                             0209
         STH   @08,ENTLIMIT                                        0209
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE LOCAL LOCK AFTER BUILDING THE STORAGE TABLE   @G33SPHW*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0210
*   GEN REFS(CVTPTR,CVTMAP,CVTCRMN,ABDARPTR,PSALITA) SETS(R11,R14);
     STM  R11,R14,ABDWORK(ABDARPTR) SAVE REGS OVER SETLOCK      G33SPHW
     SETLOCK RELEASE,TYPE=LOCAL,RELATED=('IEAVAD0A')
     LM   R11,R14,ABDWORK(ABDARPTR)  RESTORE REGS AFTER SETLOCK G33SPHW
*   RETERN=SAVE14;                  /* RESTORE RETURN ADDR           */
         L     RETERN,SAVE14                                       0211
*   RETURN;                                                        0212
@EL00002 DS    0H                                                  0212
@EF00002 DS    0H                                                  0212
@ER00002 BR    @14                                                 0212
*   END D0ADSPLY;                                                  0213
*D0APRNT:                                                          0214
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0214
*                                                                  0214
D0APRNT  DS    0H                                                  0215
*   /*****************************************************************/
*   /*                                                               */
*   /* PRINT EACH STORAGE AREA IN STORAGE TABLE              @G33SPHW*/
*   /* INPUT - FRSTTABL POINTING AT FIRST TABLE              @G33SPHW*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0215
*   PRNTR14=RETERN;                 /* SAVE RETURN ADDRESS   @G33SPHW*/
         ST    RETERN,PRNTR14                                      0215
*   CTR=1;                          /* INITIALIZE COUNTER    @G33SPHW*/
         LA    @08,1                                               0216
         STH   @08,CTR                                             0216
*   CTR2=1;                         /* INITIALIZE TABLE COUNTER    0217
*                                                            @G33SPHW*/
         STH   @08,CTR2                                            0217
*   STORPTR=FRSTTABL;               /* GET FIRST TABLE       @G33SPHW*/
         MVC   STORPTR(4),FRSTTABL                                 0218
*   ABDUPRSL='1'B;                  /* SKIP LINE BEGIN AT NEXT PAGE
*                                                            @G33SPHW*/
         OI    ABDUPRSL(ABDARPTR),B'01000000'                      0219
*   DO WHILE CTR<=ENTLIMIT;         /* DISPLAY ALL STORAGE   @G33SPHW*/
         B     @DE00220                                            0220
@DL00220 DS    0H                                                  0221
*     UPRFMET='1'B;                 /* IF UPR SKIP PAGE AND CONTINUE
*                                                            @G33SPHW*/
         OI    UPRFMET(ABDARPTR),B'01000000'                       0221
*     ABDBLOCK=STORADDR(CTR2);      /* PUT ADDRESS IN BUFFER @G33SPHW*/
         L     @08,STORPTR                                         0222
         LH    @07,CTR2                                            0222
         SLA   @07,3                                               0222
         L     @05,STORADDR-8(@07,@08)                             0222
         ST    @05,ABDBLOCK(,ABDARPTR)                             0222
*     ABDLENTH=STORLEN(CTR2);       /* PUT LENGTH IN BUFFER  @G33SPHW*/
         LH    @08,STORLEN-8(@07,@08)                              0223
         ST    @08,ABDLENTH(,ABDARPTR)                             0223
*     RFY                                                          0224
*       R7 RSTD;                                                   0224
*     GENERATE SETS(R7);                                           0225
          L      R7,ABDBLOCK(ABDARPTR) ADDR OF AREA TO BE DISPLAYED
          LRA    R7,0(0,R7)           IS ADDR VALID
          BNZ    NXTBLK               ADDR INVALID
*     RFY                                                          0226
*       R7 UNRSTD;                                                 0226
*     PARMPTR=ABDARPTR;             /* PASS WORKAREA POINTER @G33SPHW*/
         LR    PARMPTR,ABDARPTR                                    0227
*     CALL IEAVAD71;                /* PRINT STORAGE         @G33SPHW*/
         L     @15,@CV00060                                        0228
         BALR  @14,@15                                             0228
*     ABDUPRSL='0'B;                /* RESET SKIP LINE BIT   @G33SPHW*/
         NI    ABDUPRSL(ABDARPTR),B'10111111'                      0229
*NXTBLK:                                                           0230
*     IF CTR2=LIMIT THEN            /* END OF TABLE          @G33SPHW*/
NXTBLK   CLC   CTR2(2),@CH00078                                    0230
         BNE   @RF00230                                            0230
*       DO;                         /* YES ....GET NEXT TABLE      0231
*                                                            @G33SPHW*/
*         STORPTR=FWDPTR;           /* NEXT TABLE            @G33SPHW*/
         L     @08,STORPTR                                         0232
         L     @08,FWDPTR(,@08)                                    0232
         ST    @08,STORPTR                                         0232
*         CTR2=1;                   /* RE-INITIALIZE COUNTER @G33SPHW*/
         MVC   CTR2(2),@CH00085                                    0233
*       END;                        /* END... NEW TABLE      @G33SPHW*/
*     ELSE                          /* NOT END OF TABLE      @G33SPHW*/
*       CTR2=CTR2+1;                /* BUMP ENTRY COUNTER    @G33SPHW*/
         B     @RC00230                                            0235
@RF00230 LH    @08,CTR2                                            0235
         LA    @08,1(,@08)                                         0235
         STH   @08,CTR2                                            0235
*     CTR=CTR+1;                    /* BUMP COUNTER          @G33SPHW*/
@RC00230 LH    @08,CTR                                             0236
         LA    @08,1(,@08)                                         0236
         STH   @08,CTR                                             0236
*   END;                            /* END DO WHILE          @G33SPHW*/
@DE00220 LH    @08,CTR                                             0237
         CH    @08,ENTLIMIT                                        0237
         BNH   @DL00220                                            0237
*   RETERN=PRNTR14;                 /* RESTORE RETURN ADDRESS      0238
*                                                            @G33SPHW*/
         L     RETERN,PRNTR14                                      0238
*   END D0APRNT;                    /* RETURN                @G33SPHW*/
@EL00003 DS    0H                                                  0239
@EF00003 DS    0H                                                  0239
@ER00003 BR    @14                                                 0239
*D0ASORT:                                                          0240
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0240
*                                                                  0240
D0ASORT  DS    0H                                                  0241
*   /*****************************************************************/
*   /*                                                               */
*   /* SORT THE STORAGE TABLE FROM LOW TO HIGH STORAGE ADDRESS       */
*   /*                                                       @G33SPHW*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0241
*   STORPTR=FRSTTABL;               /* GET FIRST TABLE POINTER     0241
*                                                            @G33SPHW*/
         MVC   STORPTR(4),FRSTTABL                                 0241
*   SWAP=ONE;                       /* INITIALIZE SWAP SWITCH      0242
*                                                            @G33SPHW*/
         MVI   SWAP,X'01'                                          0242
*   DO WHILE SWAP^=ZERO;            /* SORT TABLE UNTIL NOCHANGES  0243
*                                                            @G33SPHW*/
         B     @DE00243                                            0243
@DL00243 DS    0H                                                  0244
*     STORPTR=FRSTTABL;             /* START AT FIRST TABLE  @G33SPHW*/
         L     @08,FRSTTABL                                        0244
         ST    @08,STORPTR                                         0244
*     CURPTR=ADDR(STORENT(1));      /* FIRST ENTRY IN TABLE  @G33SPHW*/
         LA    @08,STORENT(,@08)                                   0245
         ST    @08,CURPTR                                          0245
*     NXTPTR=CURPTR+LENGTH(TABLENT);/* NEXT ENTRY IN NXTPTR  @G33SPHW*/
         AH    @08,@CH00081                                        0246
         ST    @08,NXTPTR                                          0246
*     SWAP=ZERO;                    /* SET SWITCH TO NO CHANGE     0247
*                                                            @G33SPHW*/
         MVI   SWAP,X'00'                                          0247
*     CTR=2;                        /* INITIALIZE LOOP CONTROL     0248
*                                                            @G33SPHW*/
         LA    @08,2                                               0248
         STH   @08,CTR                                             0248
*     CTR2=2;                       /* INITIALIZE ENTRY COUNTER    0249
*                                                            @G33SPHW*/
*                                                                  0249
         STH   @08,CTR2                                            0249
*     /***************************************************************/
*     /*                                                             */
*     /* LOOP THRU ALL ENTRIES                               @G33SPHW*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0250
*     DO WHILE CTR<=ENTLIMIT;       /* LOOP UNTIL END OF ENTRY     0250
*                                                            @G33SPHW*/
         B     @DE00250                                            0250
@DL00250 DS    0H                                                  0251
*       IF NXTPTR->AREADDR<         /* NEXT ENTRY GT CURRENT @G33SPHW*/
*           CURPTR->AREADDR THEN    /* ENTRY STORAGE ADDRESS @G33SPHW*/
         L     @08,NXTPTR                                          0251
         L     @07,CURPTR                                          0251
         CLC   AREADDR(4,@08),AREADDR(@07)                         0251
         BNL   @RF00251                                            0251
*         DO;                       /* YES SWAP ENTRIES      @G33SPHW*/
*           CURPTR->TABLENT=CURPTR->TABLENT&&NXTPTR->TABLENT;      0253
         XC    TABLENT(8,@07),TABLENT(@08)                         0253
*           NXTPTR->TABLENT=NXTPTR->TABLENT&&CURPTR->TABLENT;      0254
         XC    TABLENT(8,@08),TABLENT(@07)                         0254
*           CURPTR->TABLENT=CURPTR->TABLENT&&NXTPTR->TABLENT;      0255
         XC    TABLENT(8,@07),TABLENT(@08)                         0255
*           SWAP=ONE;               /* INDICATE SWAP MADE    @G33SPHW*/
         MVI   SWAP,X'01'                                          0256
*         END;                      /* END.... SWAP CODE     @G33SPHW*/
*       ELSE                        /* NOT LESS THAN CURRENT @G33SPHW*/
*         CURPTR=NXTPTR;            /* SET CURRENT TO NEXT   @G33SPHW*/
         B     @RC00251                                            0258
@RF00251 MVC   CURPTR(4),NXTPTR                                    0258
*       IF CTR2=LIMIT THEN          /* END OF TABLE          @G33SPHW*/
@RC00251 CLC   CTR2(2),@CH00078                                    0259
         BNE   @RF00259                                            0259
*         DO;                       /* YES.. GET NEW TABLE ADDR    0260
*                                                            @G33SPHW*/
*           STORPTR=FWDPTR;         /* GET NEW TABLE ADDRESS @G33SPHW*/
         L     @08,STORPTR                                         0261
         L     @08,FWDPTR(,@08)                                    0261
         ST    @08,STORPTR                                         0261
*           NXTPTR=ADDR(STORENT(1));/* 1ST ENTRY IN TABLE    @G33SPHW*/
         LA    @08,STORENT(,@08)                                   0262
         ST    @08,NXTPTR                                          0262
*           CTR2=0;                 /* RESET COUNTER         @VS45203*/
         SLR   @08,@08                                             0263
         STH   @08,CTR2                                            0263
*         END;                      /* END... NEXT TABLE     @G33SPHW*/
*       ELSE                        /* NOT END OF TABLE      @G33SPHW*/
*         NXTPTR=CURPTR+LENGTH(TABLENT);/* BUMP TO NEXT ENTRY IN   0265
*                                      TABLE                 @G33SPHW*/
         B     @RC00259                                            0265
@RF00259 LA    @08,8                                               0265
         AL    @08,CURPTR                                          0265
         ST    @08,NXTPTR                                          0265
*       CTR=CTR+1;                  /* BUMP LOOP COUNTER     @G33SPHW*/
@RC00259 LA    @08,1                                               0266
         LH    @07,CTR                                             0266
         ALR   @07,@08                                             0266
         STH   @07,CTR                                             0266
*       CTR2=CTR2+1;                /* BUMP ENTRY COUNTER    @G33SPHW*/
         AH    @08,CTR2                                            0267
         STH   @08,CTR2                                            0267
*     END;                          /* END .. DO WHILE END OF TABLE
*                                      NOT FOUND.            @G33SPHW*/
@DE00250 LH    @08,CTR                                             0268
         CH    @08,ENTLIMIT                                        0268
         BNH   @DL00250                                            0268
*   END;                            /* END.... DO WHILE SWAP MADE  0269
*                                                            @G33SPHW*/
@DE00243 CLI   SWAP,0                                              0269
         BNE   @DL00243                                            0269
*   END D0ASORT;                    /* RETURN                @G33SPHW*/
@EL00004 DS    0H                                                  0270
@EF00004 DS    0H                                                  0270
@ER00004 BR    @14                                                 0270
*D0ATABLE:                                                         0271
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0271
*                                                                  0271
D0ATABLE DS    0H                                                  0272
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN STORAGE FOR NEW STORAGE TABLE                  @G33SPHW*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   TABR14=RETERN;                  /* SAVE RETURN ADDRESS   @G33SPHW*/
         ST    RETERN,TABR14                                       0272
*   RFY                                                            0273
*     R7 RSTD;                                                     0273
*   R7=ASCBPTR;                     /* ASCB ADDRESS IN REG 7 FOR   0274
*                                      GETMAIN               @G33SPHW*/
         L     R7,ASCBPTR                                          0274
*   GEN(GETMAIN RC,LV=3208,SP=253,BRANCH=YES);/*             @G33SPHW*/
         GETMAIN RC,LV=3208,SP=253,BRANCH=YES
*   IF RETCODE=0 THEN               /* GETMAIN OK            @G33SPHW*/
         SLR   @08,@08                                             0276
         CR    RETCODE,@08                                         0276
         BNE   @RF00276                                            0276
*     DO;                           /* YES....               @G33SPHW*/
*       SAVESTOR=R1;                /* SAVE ADDRESS OF TABLE @G33SPHW*/
         ST    R1,SAVESTOR                                         0278
*       FWDPTR=SAVESTOR;            /* FILL IN CHAIN POINTER @G33SPHW*/
         L     @05,SAVESTOR                                        0279
         L     @03,STORPTR                                         0279
         ST    @05,FWDPTR(,@03)                                    0279
*       SAVESTOR->BWDPTR=STORPTR;   /* FILL IN BACKWARD POINTER    0280
*                                                            @G33SPHW*/
         ST    @03,BWDPTR(,@05)                                    0280
*       STORPTR=SAVESTOR;           /* GET NEW TABLE ADDRESS @G33SPHW*/
         ST    @05,STORPTR                                         0281
*       FWDPTR=0;                   /* INITIALIZE FORWARD POINTER  0282
*                                                            @G33SPHW*/
         ST    @08,FWDPTR(,@05)                                    0282
*     END;                          /* END GETMAIN OK        @G33SPHW*/
*   ELSE                            /* GETMAIN FAILED        @G33SPHW*/
*     RETCODE=8;                    /* GETMAIN RETCODE       @G33SPHW*/
         B     @RC00276                                            0284
@RF00276 LA    RETCODE,8                                           0284
*   RETERN=TABR14;                  /* RESTORE RETURN ADDRESS      0285
*                                                            @G33SPHW*/
@RC00276 L     RETERN,TABR14                                       0285
*   END D0ATABLE;                                                  0286
@EL00005 DS    0H                                                  0286
@EF00005 DS    0H                                                  0286
@ER00005 BR    @14                                                 0286
*   DCL                                                            0287
*     PATCHLOC FIXED(31) STATIC;                                   0287
*   GEN DATA DEFS(PATCHLOC);                                       0288
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0289
*     GPR01F FIXED(31) REG(1),                                     0289
*     GPR15F FIXED(31) REG(15);                                    0289
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0290
*     I031F FIXED(31) BASED,                                       0290
*     I031P PTR(31) BASED,                                         0290
*     I015F FIXED(15) BASED,                                       0290
*     I015P PTR(15) BASED,                                         0290
*     I008P PTR(8) BASED,                                          0290
*     I001C CHAR(1) BASED;          /*                        @Y02705*/
*   END IEAVAD0A                                                   0291
*                                                                  0291
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (D0ASPEC )                                       */
*/*%INCLUDE SYSLIB  (D0ADCL  )                                       */
*/*%INCLUDE SYSLIB  (IHAABDA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHADQE  )                                       */
*/*%INCLUDE SYSLIB  (IHAGDA  )                                       */
*/*%INCLUDE SYSLIB  (IHALDA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCA )                                       */
*/*%INCLUDE SYSLIB  (IHASPQE )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (D0ALSQA )                                       */
*/*%INCLUDE SYSLIB  (D0ASQA  )                                       */
*/*%INCLUDE SYSLIB  (D0AFREE )                                       */
*/*%INCLUDE SYSLIB  (D0ADSPLY)                                       */
*/*%INCLUDE SYSLIB  (D0APRNT )                                       */
*/*%INCLUDE SYSLIB  (D0ASORT )                                       */
*/*%INCLUDE SYSLIB  (D0ATABLE)                                       */
*                                                                  0291
*       ;                                                          0291
         B     @EL00001                                            0291
@DATA    DS    0H
@CH00085 DC    H'1'
@CH00081 DC    H'8'
@CH00078 DC    H'400'
@DATD    DSECT
         DS    0F
IEAVAD0A CSECT
         DS    0F
@CF00066 DC    F'4096'
@CH00066 EQU   @CF00066+2
@CF02135 DC    F'64768'
@DATD    DSECT
         DS    0D
LDAPTR   DS    A
GDAPTR   DS    A
ASCBPTR  DS    A
SPQESPTR DS    A
TABR14   DS    A
DQESEPTR DS    A
DQEBLKSV DS    A
DQELNSVE DS    F
SAVE14   DS    A
PRNTR14  DS    A
STORPTR  DS    A
FRSTTABL DS    A
SAVESTOR DS    A
CURPTR   DS    A
NXTPTR   DS    A
FREEAREA DS    A
CTR      DS    H
CTR2     DS    H
ENTLIMIT DS    H
SWAP     DS    FL1
IEAVAD0A CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00059 DC    V(IEAVAD11)
@CV00060 DC    V(IEAVAD71)
         DS    0D
LSQAMSG  DC    CL15'-ALLOCATED LSQA'
IEAVAD0A CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVAD0A CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
PARMPTR  EQU   @01
ABDARPTR EQU   @02
TCBPTR   EQU   @04
R5       EQU   @05
R7       EQU   @07
SAVERET  EQU   @09
R11      EQU   @11
AUTOPTR  EQU   @12
SAVEPTR  EQU   @13
R14      EQU   @14
RETERN   EQU   @14
RETCODE  EQU   @15
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
NEXSAPTR EQU   8
PRESAPTR EQU   4
STORHD   EQU   0
FWDPTR   EQU   STORHD
BWDPTR   EQU   STORHD+4
STORENT  EQU   STORHD+8
STORADDR EQU   STORENT
STORLEN  EQU   STORENT+4
TABLENT  EQU   0
AREADDR  EQU   TABLENT
AREAFLAG EQU   TABLENT+6
ABDAREA  EQU   0
ABDTCB   EQU   ABDAREA
ABDPARMS EQU   ABDAREA+12
ABDFLAG  EQU   ABDPARMS+1
APFSDATA EQU   ABDPARMS+4
APFSDAT1 EQU   ABDPARMS+5
APFPDATA EQU   ABDPARMS+6
ABDPTRS  EQU   ABDAREA+84
ABDFLAG1 EQU   ABDAREA+136
ABDSQSDM EQU   ABDFLAG1
ABDFLAG2 EQU   ABDAREA+137
ABDSTAT  EQU   ABDFLAG2
ABDRES1  EQU   ABDAREA+139
ABDOLSQA EQU   ABDRES1
ABDSQA   EQU   ABDRES1
ABDWORK  EQU   ABDAREA+140
ABDUPRF  EQU   ABDAREA+265
UPRFMET  EQU   ABDUPRF
ABDUPRFN EQU   ABDAREA+266
ABDUPRSL EQU   ABDUPRFN
ABDBLNKS EQU   ABDAREA+267
ABDBLOCK EQU   ABDAREA+272
ABDLENTH EQU   ABDAREA+276
ABDBUFFS EQU   ABDAREA+308
ABDGMA   EQU   ABDAREA+316
ABDAAREA EQU   ABDGMA
ABDASIZE EQU   ABDGMA+4
ESPARM   EQU   ABDAREA+340
ESTAEFLG EQU   ESPARM+28
ABDLINEA EQU   ABDAREA+384
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBLDA  EQU   ASCB+48
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
DQESECT  EQU   0
DQEPTR   EQU   DQESECT+4
DQEBLKAD EQU   DQESECT+8
DQELNTH  EQU   DQESECT+12
GDA      EQU   0
GVSMFLAG EQU   GDA
GDAFLAGS EQU   GVSMFLAG
SQASPQEP EQU   GDA+24
VRPOSTQ  EQU   GDA+32
VRWAITQ  EQU   GDA+40
LDA      EQU   0
LVSMFLAG EQU   LDA
LSQAPTR  EQU   LDA+1464
PCCA     EQU   0
PCCATMST EQU   PCCA+128
PCCATMFL EQU   PCCATMST
PCCATODE EQU   PCCATMST+1
PCCACCE  EQU   PCCATMST+2
PCCAINTE EQU   PCCATMST+3
PCCAEMSB EQU   PCCA+136
PCCAEMSI EQU   PCCAEMSB
PCCARISP EQU   PCCAEMSI
PCCAEMS2 EQU   PCCAEMSI+1
PCCAEMS3 EQU   PCCAEMSI+2
PCCARMSB EQU   PCCAEMSI+3
PCCAWERP EQU   PCCA+280
PCCACHPF EQU   PCCAWERP+4
PCCACHBL EQU   PCCAWERP+5
PCCACHVA EQU   PCCAWERP+6
PCCACHTS EQU   PCCAWERP+7
PCCACHS1 EQU   PCCA+288
PCCACHS2 EQU   PCCA+289
PCCACHRB EQU   PCCA+290
PCCACHF1 EQU   PCCA+308
PCCACHF2 EQU   PCCA+309
PCCACHF3 EQU   PCCA+310
PCCACHF4 EQU   PCCA+311
SPQESECT EQU   0
SPQEAD   EQU   SPQESECT
SPDQEPTR EQU   SPQESECT+4
SPQEFLGS EQU   SPQESECT+8
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBLTC   EQU   TCB+136
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBADMP  EQU   TCBFLGS7
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
I256C    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
STORTABL EQU   0
PSARSVTE EQU   PSARSVT
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCRMN  EQU   CVTS01+156
CVTGDA   EQU   CVTS01+212
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PCCAPTR  EQU   PSATOLD
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
@NM00061 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00060 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00059 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00058 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
SPQERES2 EQU   SPQESECT+12
SPQEKEY  EQU   SPQESECT+11
SPQEID   EQU   SPQESECT+10
SPQERES1 EQU   SPQESECT+9
SPQEOWN  EQU   SPQEFLGS
LASTSPQE EQU   SPQEFLGS
SPSHARE  EQU   SPQEFLGS
SPDQEAD  EQU   SPDQEPTR
SPQEPTR  EQU   SPQEAD
@NM00057 EQU   PCCA+512
PCCACAT  EQU   PCCA+384
PCCARV36 EQU   PCCA+380
PCCARV35 EQU   PCCA+378
PCCARV01 EQU   PCCA+377
PCCACPUM EQU   PCCA+376
PCCARV63 EQU   PCCA+372
PCCARV62 EQU   PCCA+368
PCCARV61 EQU   PCCA+364
PCCARV60 EQU   PCCA+360
PCCARV59 EQU   PCCA+356
PCCARV58 EQU   PCCA+352
PCCARV57 EQU   PCCA+348
PCCARV56 EQU   PCCA+344
PCCARV55 EQU   PCCA+340
PCCARV54 EQU   PCCA+336
PCCALOGA EQU   PCCA+332
PCCACHID EQU   PCCA+324
PCCACHSV EQU   PCCA+312
PCCARV79 EQU   PCCACHF4
PCCARV78 EQU   PCCACHF4
PCCARV77 EQU   PCCACHF4
PCCARV76 EQU   PCCACHF4
PCCARV75 EQU   PCCACHF4
PCCARV74 EQU   PCCACHF4
PCCARV73 EQU   PCCACHF4
PCCARV72 EQU   PCCACHF4
PCCARV71 EQU   PCCACHF3
PCCARV70 EQU   PCCACHF3
PCCARV69 EQU   PCCACHF3
PCCARV68 EQU   PCCACHF3
PCCARV67 EQU   PCCACHF3
PCCARV66 EQU   PCCACHF3
PCCARV65 EQU   PCCACHF3
PCCARV64 EQU   PCCACHF3
PCCACF28 EQU   PCCACHF2
PCCACF27 EQU   PCCACHF2
PCCACF26 EQU   PCCACHF2
PCCACF25 EQU   PCCACHF2
PCCACF24 EQU   PCCACHF2
PCCACF23 EQU   PCCACHF2
PCCACF22 EQU   PCCACHF2
PCCACF21 EQU   PCCACHF2
PCCACF18 EQU   PCCACHF1
PCCACF17 EQU   PCCACHF1
PCCACF16 EQU   PCCACHF1
PCCACF15 EQU   PCCACHF1
PCCACF14 EQU   PCCACHF1
PCCACF13 EQU   PCCACHF1
PCCACF12 EQU   PCCACHF1
PCCACF11 EQU   PCCACHF1
PCCARV05 EQU   PCCA+306
PCCACHPB EQU   PCCA+305
PCCALGP2 EQU   PCCA+304
PCCALGP1 EQU   PCCA+303
PCCALOGL EQU   PCCA+302
PCCARV80 EQU   PCCA+300
PCCACHW2 EQU   PCCA+296
PCCACHW1 EQU   PCCA+292
PCCAIOSI EQU   PCCA+291
PCCACNRB EQU   PCCACHRB
PCCACCVB EQU   PCCACHRB
PCCACSNB EQU   PCCACHRB
PCCARV52 EQU   PCCACHRB
PCCACHIB EQU   PCCACHRB
PCCACTIB EQU   PCCACHRB
PCCACINB EQU   PCCACHRB
PCCACSIB EQU   PCCACHRB
PCCARV51 EQU   PCCACHS2
PCCARV50 EQU   PCCACHS2
PCCACCRA EQU   PCCACHS2
PCCACURC EQU   PCCACHS2
PCCACNLG EQU   PCCACHS2
PCCACMOD EQU   PCCACHS2
PCCACALT EQU   PCCACHS2
PCCACIOR EQU   PCCACHS2
PCCARV47 EQU   PCCACHS1
PCCACUCB EQU   PCCACHS1
PCCACIBC EQU   PCCACHS1
PCCACAND EQU   PCCACHS1
PCCACNLS EQU   PCCACHS1
PCCACFRR EQU   PCCACHS1
PCCACNRE EQU   PCCACHS1
PCCACCMP EQU   PCCACHS1
PCCACSEQ EQU   PCCACHTS
PCCACDIN EQU   PCCACHTS
PCCARV44 EQU   PCCACHTS
PCCARV43 EQU   PCCACHTS
PCCACTEC EQU   PCCACHTS
PCCACDAV EQU   PCCACHVA
PCCACCHV EQU   PCCACHVA
PCCACCMD EQU   PCCACHVA
PCCACUNS EQU   PCCACHVA
PCCACSQV EQU   PCCACHVA
PCCARV42 EQU   PCCACHVA
PCCARV41 EQU   PCCACHVA
PCCACITF EQU   PCCACHVA
PCCARV40 EQU   PCCACHBL
PCCARV39 EQU   PCCACHBL
PCCARV38 EQU   PCCACHBL
PCCACCUE EQU   PCCACHBL
PCCACSTG EQU   PCCACHBL
PCCACSCU EQU   PCCACHBL
PCCACCHA EQU   PCCACHBL
PCCACCPU EQU   PCCACHBL
PCCACNOR EQU   PCCACHPF
PCCACCNT EQU   PCCACHPF
PCCACSNS EQU   PCCACHPF
PCCARV37 EQU   PCCACHPF
PCCACHIO EQU   PCCACHPF
PCCACTIO EQU   PCCACHPF
PCCACINT EQU   PCCACHPF
PCCACSIO EQU   PCCACHPF
PCCACHUB EQU   PCCAWERP
PCCACHEL EQU   PCCA+168
PCCALRBR EQU   PCCA+164
PCCALRBV EQU   PCCA+160
PCCAPWAR EQU   PCCA+156
PCCAPWAV EQU   PCCA+152
PCCAEMSA EQU   PCCAEMSB+12
PCCAEMSE EQU   PCCAEMSB+8
PCCAEMSP EQU   PCCAEMSB+4
PCCARMS  EQU   PCCARMSB
PCCARV34 EQU   PCCARMSB
PCCARV33 EQU   PCCARMSB
PCCARV32 EQU   PCCARMSB
PCCARV31 EQU   PCCARMSB
PCCARV30 EQU   PCCARMSB
PCCARV29 EQU   PCCARMSB
PCCARV28 EQU   PCCARMSB
PCCARV27 EQU   PCCAEMS3
PCCARV26 EQU   PCCAEMS3
PCCARV25 EQU   PCCAEMS3
PCCARV24 EQU   PCCAEMS3
PCCARV23 EQU   PCCAEMS3
PCCARV22 EQU   PCCAEMS3
PCCARV21 EQU   PCCAEMS3
PCCARV20 EQU   PCCAEMS3
PCCARV19 EQU   PCCAEMS2
PCCARV18 EQU   PCCAEMS2
PCCARV17 EQU   PCCAEMS2
PCCARV16 EQU   PCCAEMS2
PCCARV15 EQU   PCCAEMS2
PCCARV14 EQU   PCCAEMS2
PCCARV13 EQU   PCCAEMS2
PCCARV12 EQU   PCCAEMS2
PCCARV11 EQU   PCCARISP
PCCARV10 EQU   PCCARISP
PCCARV09 EQU   PCCARISP
PCCARV08 EQU   PCCARISP
PCCARV07 EQU   PCCARISP
PCCARV06 EQU   PCCARISP
PCCASERL EQU   PCCARISP
PCCAPARL EQU   PCCARISP
PCCARPB  EQU   PCCA+132
PCCACTIN EQU   PCCAINTE
PCCANFIN EQU   PCCAINTE
PCCANUIN EQU   PCCAINTE
PCCACTCC EQU   PCCACCE
PCCANFCC EQU   PCCACCE
PCCANUCC EQU   PCCACCE
PCCACTTD EQU   PCCATODE
PCCANFTD EQU   PCCATODE
PCCANUTD EQU   PCCATODE
PCCARV04 EQU   PCCATMFL
PCCARV03 EQU   PCCATMFL
PCCARV02 EQU   PCCATMFL
PCCAMINT EQU   PCCATMFL
PCCAMCC  EQU   PCCATMFL
PCCAVKIL EQU   PCCATMFL
PCCASYNC EQU   PCCATMFL
PCCAINIT EQU   PCCATMFL
PCCARV9E EQU   PCCA+124
PCCARV9D EQU   PCCA+120
PCCARV9C EQU   PCCA+116
PCCARV9B EQU   PCCA+112
PCCARV9A EQU   PCCA+108
PCCARV99 EQU   PCCA+104
PCCARV98 EQU   PCCA+100
PCCARV97 EQU   PCCA+96
PCCARV96 EQU   PCCA+92
PCCARV95 EQU   PCCA+88
PCCARV94 EQU   PCCA+84
PCCARV93 EQU   PCCA+80
PCCARV92 EQU   PCCA+76
PCCARV91 EQU   PCCA+72
PCCARV90 EQU   PCCA+68
PCCARV89 EQU   PCCA+64
PCCARV88 EQU   PCCA+60
PCCARV87 EQU   PCCA+56
PCCARV86 EQU   PCCA+52
PCCARV85 EQU   PCCA+48
PCCARV84 EQU   PCCA+44
PCCARV83 EQU   PCCA+40
PCCARV82 EQU   PCCA+36
PCCARV81 EQU   PCCA+32
PCCAPSAR EQU   PCCA+28
PCCAPSAV EQU   PCCA+24
PCCATQEP EQU   PCCA+20
PCCACAFM EQU   PCCA+18
PCCACPUA EQU   PCCA+16
PCCACPID EQU   PCCA+4
PCCAPCCA EQU   PCCA
LDAEND   EQU   LDA+1496
LCLCELCT EQU   LDA+1492
LCLCELL  EQU   LDA+1488
LDALIMIT EQU   LDA+1484
LDARSVPT EQU   LDA+1480
LDASRPQE EQU   LDA+1476
CURRGNTP EQU   LDA+1472
VVREGSZ  EQU   LDA+1468
CFAPWKAR EQU   LDA+1164
CSAVE    EQU   LDA+1100
OBFRSAVE EQU   LDA+1036
GFRESAVE EQU   LDA+972
GMREPSAV EQU   LDA+908
FBQSAVE  EQU   LDA+844
G4KSAVE  EQU   LDA+780
FSAVE    EQU   LDA+716
BSAVE    EQU   LDA+652
SAVEREG2 EQU   LDA+588
BRANCHSV EQU   LDA+524
GMFMWKAR EQU   LDA+24
LDARES2  EQU   LDA+21
LDACBSP  EQU   LDA+20
LDARQSTA EQU   LDA+16
LDATCB   EQU   LDA+12
ASDPQE   EQU   LDA+8
PASCBSV  EQU   LDA+4
@NM00056 EQU   LVSMFLAG+1
LDABRSW  EQU   LVSMFLAG
LDAFPFM  EQU   LVSMFLAG
LDAFLAGS EQU   LVSMFLAG
LDASTART EQU   LDA
GBLCELCT EQU   GDA+60
GLBLCELL EQU   GDA+56
CSASPQEP EQU   GDA+52
PFSTCPAB EQU   GDA+48
VRWLEL   EQU   VRWAITQ+4
VRWFEL   EQU   VRWAITQ
VRPLEL   EQU   VRPOSTQ+4
VRPFEL   EQU   VRPOSTQ
SQASPLFT EQU   GDA+28
PASIZE   EQU   GDA+20
PASTRT   EQU   GDA+16
VRPQEP   EQU   GDA+12
CSAPQEP  EQU   GDA+8
VRDREG   EQU   GDA+4
RESV     EQU   GVSMFLAG+1
@NM00055 EQU   GDAFLAGS
WAITQUE  EQU   GDAFLAGS
SQATHRS2 EQU   GDAFLAGS
SQATHRS1 EQU   GDAFLAGS
GDAFLAG2 EQU   GDAFLAGS
NIPFOURK EQU   GDAFLAGS
GDAFLAG1 EQU   GDAFLAGS
DQEHRID  EQU   DQEBLKAD
DQFQEPTR EQU   DQESECT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00054 EQU   CVTFIX+248
@NM00053 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
ABDSAVE1 EQU   ABDAREA+672
ABDSAVHD EQU   ABDAREA+592
ABDPADC  EQU   ABDAREA+589
ABDLINE  EQU   ABDLINEA+1
ABDCC    EQU   ABDLINEA
ABDSRC2  EQU   ABDAREA+382
ABDLOG   EQU   ABDAREA+380
ABDSRC1  EQU   ABDAREA+378
ABDPHY   EQU   ABDAREA+376
ABDLCNT  EQU   ABDAREA+372
@NM00028 EQU   ESPARM+29
@NM00027 EQU   ESTAEFLG
EDCB     EQU   ESTAEFLG
ETCB     EQU   ESTAEFLG
ESUBSYT  EQU   ESTAEFLG
ERESTART EQU   ESPARM+24
EMODNAME EQU   ESPARM+16
EABDAREA EQU   ESPARM+12
ESAUTOP  EQU   ESPARM+8
ESBSREG2 EQU   ESPARM+4
ESBSREG  EQU   ESPARM
ABDRTRN  EQU   ABDAREA+336
ABDSVCB  EQU   ABDAREA+332
@NM00026 EQU   ABDGMA+14
ABDCDID  EQU   ABDGMA+12
ABDPAREA EQU   ABDGMA+8
ABDBUFSZ EQU   ABDBUFFS+4
ABDBUFAD EQU   ABDBUFFS
ABSLCTSV EQU   ABDAREA+304
ABDSTADS EQU   ABDAREA+300
ABDUPRID EQU   ABDAREA+296
ABDPCAP  EQU   ABDAREA+295
ABDLLNGH EQU   ABDAREA+294
ABDINCPL EQU   ABDAREA+292
ABDFWORK EQU   ABDAREA+288
ABDIDENT EQU   ABDAREA+286
ABDIND   EQU   ABDAREA+284
ABDSIZE  EQU   ABDAREA+280
ABDSTAD  EQU   ABDAREA+268
@NM00025 EQU   ABDBLNKS
@NM00024 EQU   ABDBLNKS
@NM00023 EQU   ABDBLNKS
@NM00022 EQU   ABDBLNKS
@NM00021 EQU   ABDBLNKS
@NM00020 EQU   ABDBLNKS
@NM00019 EQU   ABDBLNKS
ABDBLKN3 EQU   ABDBLNKS
@NM00018 EQU   ABDUPRFN
@NM00017 EQU   ABDUPRFN
@NM00016 EQU   ABDUPRFN
@NM00015 EQU   ABDUPRFN
@NM00014 EQU   ABDUPRFN
@NM00013 EQU   ABDUPRFN
ABDUPRPM EQU   ABDUPRFN
@NM00012 EQU   ABDUPRF
@NM00011 EQU   ABDUPRF
@NM00010 EQU   ABDUPRF
@NM00009 EQU   ABDUPRF
@NM00008 EQU   ABDUPRF
UPRFMT20 EQU   ABDUPRF
UPRFMAT  EQU   ABDUPRF
ABDFMTWK EQU   ABDAREA+256
ABDLPTR  EQU   ABDAREA+252
ABDLLINE EQU   ABDAREA+248
ABDBPTR  EQU   ABDAREA+244
ABDSSPAR EQU   ABDAREA+188
@NM00007 EQU   ABDRES1
ABDTRSV  EQU   ABDRES1
ABDPGHD  EQU   ABDRES1
ABDFMTLD EQU   ABDRES1
ABDREGS  EQU   ABDRES1
ABDPSW   EQU   ABDRES1
ABDKEY   EQU   ABDAREA+138
ABDLSQA  EQU   ABDFLAG2
ABDSWAP  EQU   ABDFLAG2
ABDGTFCL EQU   ABDFLAG2
ABDTRNAV EQU   ABDFLAG2
ABDTRBIT EQU   ABDFLAG2
ABDGTF   EQU   ABDFLAG2
ABDSUPER EQU   ABDFLAG2
ABDIDX   EQU   ABDFLAG1
ABDSPHD  EQU   ABDFLAG1
ABDSVCHD EQU   ABDFLAG1
ABDLSTHD EQU   ABDFLAG1
ABDQCBMN EQU   ABDFLAG1
ABDQCBMJ EQU   ABDFLAG1
ABDQCBHD EQU   ABDFLAG1
ABDPGWK  EQU   ABDAREA+128
ABDWORK1 EQU   ABDAREA+120
ABDRESV3 EQU   ABDAREA+116
ABDUPRXT EQU   ABDAREA+112
ABDCP1   EQU   ABDAREA+108
ABDLP    EQU   ABDAREA+104
ABDFP    EQU   ABDAREA+100
ABDCP    EQU   ABDAREA+96
ABDPTRS3 EQU   ABDPTRS+8
ABDPTRS2 EQU   ABDPTRS+4
ABDPTRS1 EQU   ABDPTRS
ABDPCTR  EQU   ABDAREA+82
ABDLCTR  EQU   ABDAREA+80
ABDIOBP  EQU   ABDAREA+76
ABDPTR   EQU   ABDAREA+72
ABDDCB   EQU   ABDAREA+68
ABDLEN   EQU   ABDAREA+66
ABDTYPE  EQU   ABDAREA+64
ABDECB   EQU   ABDAREA+60
ABDSAVE  EQU   ABDAREA+56
ABDDECB  EQU   ABDAREA+52
ABDPARA  EQU   ABDAREA+48
ABDTABPT EQU   ABDAREA+44
ABDINXPT EQU   ABDAREA+40
ABDCTR   EQU   ABDAREA+38
ABDTRLN  EQU   ABDAREA+36
ABDHDRAD EQU   ABDPARMS+20
ABDSNAPP EQU   ABDPARMS+16
ABDPTCBP EQU   ABDPARMS+12
ABDPDCBP EQU   ABDPARMS+8
@NM00006 EQU   ABDPARMS+7
@NM00005 EQU   APFPDATA
APFSPALL EQU   APFPDATA
APFPSW   EQU   APFPDATA
APFJPA   EQU   APFPDATA
APFLPA   EQU   APFPDATA
APFREGS  EQU   APFPDATA
APFSAVE2 EQU   APFPDATA
APFSAVE  EQU   APFPDATA
@NM00004 EQU   APFSDAT1
APFERR   EQU   APFSDAT1
APFIO    EQU   APFSDAT1
APFDM    EQU   APFSDATA
APFQCB   EQU   APFSDATA
APFSUPDA EQU   APFSDATA
APFTRACE EQU   APFSDATA
APFSWA   EQU   APFSDATA
APFLSQA  EQU   APFSDATA
APFSQA   EQU   APFSDATA
APFNUC   EQU   APFSDATA
@NM00003 EQU   ABDPARMS+2
APFHDR   EQU   ABDFLAG
APFSNAPP EQU   ABDFLAG
APFTCB   EQU   ABDFLAG
APFID    EQU   ABDFLAG
APFABEND EQU   ABDFLAG
APFENVS2 EQU   ABDFLAG
APFVS2   EQU   ABDFLAG
APFSNAP  EQU   ABDFLAG
ABDPID   EQU   ABDPARMS
ABDCRB   EQU   ABDAREA+8
ABDCTCB  EQU   ABDAREA+4
@NM00002 EQU   TABLENT+7
@NM00001 EQU   AREAFLAG
TABEND   EQU   AREAFLAG
TBLEND   EQU   AREAFLAG
AREALEN  EQU   TABLENT+4
STORFLAG EQU   STORENT+6
@NM00052 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00051 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00050 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00049 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00048 EQU   FLCFSA
@NM00047 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00046 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00045 EQU   FLCIOA
@NM00044 EQU   FLCMCLA+15
@NM00043 EQU   FLCMCLA+14
@NM00042 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00041 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00040 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00039 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00038 EQU   FLCPER
@NM00037 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00036 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00035 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00034 EQU   FLCPIILC
@NM00033 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00032 EQU   FLCSVILC
@NM00031 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00030 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00029 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEAVAD0A,(C'PLS2314',0701,77077)
