         TITLE 'IEAVAD00 - SVC 51 ENTRY POINT AND SVC DUMP PROCESSOR'
IEAVAD00 CSECT ,                                                   0001
@MAINENT BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT-2)
         DC    AL1(16)                                             0001
         DC    C'IEAVAD00  78.208'                                 0001
SDFRRRTN BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00580-SDFRRRTN-2)
         ENTRY SDFRRRTN
SDESTAEX BALR  @15,0                                               0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00834-SDESTAEX-2)
         ENTRY SDESTAEX
         DROP  @15
@PROLOG  BALR  @09,0                                               0001
@PSTART  LA    @06,4095(,@09)                                      0001
         USING @PSTART,@09                                         0001
         USING @PSTART+4095,@06                                    0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*                                                                  0177
*/********************************************************************/
*/*  THIS SECTION PERFORMS INITIALIZATION.  CHECKS ARE MADE TO       */
*/*  INSURE THE VALIDITY OF THE CALLERS PARAMETER LIST.  IF THE      */
*/*  PARAMETER LIST IS FOUND TO BE INVALID, THE CALLER IS ABENDED    */
*/*  WITH COMPLETION CODE 233. A REASON CODE IS STORED IN REG 15     */
*/********************************************************************/
*                                                                  0177
*   IF R1=NULL×                     /* IF PTR TO PARM LIST IS 0 OR   */
*       R1->R1SDFLAG='1'B THEN      /* PARM LIST IS OSVS2 R1 SDUMP   */
         LTR   R1,R1                                               0177
         BZ    @RT00177                                            0177
         TM    R1SDFLAG(R1),B'10000000'                            0177
         BNO   @RF00177                                            0177
@RT00177 DS    0H                                                  0178
*     DO;                           /* ABEND CALLER W/233    @G33VPHD*/
*       RFY                                                        0179
*         R15 RSTD;                 /*                       @G33VPHD*/
*       R15=RSN04;                  /* PUT REASON CODE IN REG      0180
*                                                            @G33VPHD*/
         LA    R15,4                                               0180
*       GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER WITH INVALID
*                                      PARMS COMPLETION CODE         */
         ABEND X'233',DUMP,,SYSTEM
*       RFY                                                        0182
*         R15 UNRSTD;               /*                       @G33VPHD*/
*     END;                          /* END OF ABEND CALLER WITH 233
*                                                            @G33VPHD*/
*/********************************************************************/
*/* THIS SECTION PROCESSES SNAP DUMP REQUESTS. NOTE THAT SNAP WILL   */
*/* SAVE AND RESTORE THE BASE REGISTER - REG 9 ON ENTRY AND EXIT     */
*/********************************************************************/
*                                                                  0184
*   IF R1->SNPFLAG=NULLCHAR×        /* IF OSVS2 R1 SNAP PARM LST OR  */
*       (R1->SNPVS2='1'B&           /* OSVS2 RELEASE 2               */
*       R1->SNPSNAP='0'B) THEN      /* SNAP PARAMETER LIST           */
@RF00177 CLI   SNPFLAG(R1),X'00'                                   0184
         BE    @RT00184                                            0184
         TM    SNPVS2(R1),B'01000000'                              0184
         BNO   @RF00184                                            0184
         TM    SNPSNAP(R1),B'10000000'                             0184
         BNZ   @RF00184                                            0184
@RT00184 DS    0H                                                  0185
*     DO;                                                          0185
*       CALL IEAVAD01;              /* GIVE CONTROL TO SNAP          */
         L     @15,@CV04542                                        0186
         BALR  @14,@15                                             0186
*       RFY                                                        0187
*         R15 RSTD;                 /* SAVE RET CODE FOR CALLER      */
*     END;                                                         0188
*   ELSE                                                           0189
*                                                                  0189
*/********************************************************************/
*/*  THIS SECTION PROCESSES SVC DUMP OR SYSMDUMP REQUESTS            */
*/********************************************************************/
*                                                                  0189
*     DO;                                                          0189
         B     @RC00184                                            0189
@RF00184 DS    0H                                                  0190
*       IF R1->DUMPTYPE='1'B THEN   /* IF SDUMP PARM LIST,CHECK      */
         TM    DUMPTYPE(R1),B'10000000'                            0190
         BNO   @RF00190                                            0190
*         DO;                       /* AUTHORIZATION OF CALLER       */
*           RFY                                                    0192
*            (R10,                                                 0192
*             R11) RSTD;                                           0192
*           R10=R1;                 /* SAVE ADDRESS OF PARM LIST     */
         LR    R10,R1                                              0193
*           R11=R3;                 /* SAVE ADDRESS OF CVT           */
         LR    R11,R3                                              0194
*           GEN(TESTAUTH  FCTN=1,STATE=NO,KEY=YES,BRANCH=YES)      0195
*           REFS(CVT,CVTAPF);       /* VALIDATE AUTHORITY OF CALLER  */
         TESTAUTH  FCTN=1,STATE=NO,KEY=YES,BRANCH=YES
*           R1=R10;                 /* RESTORE ADDRESS OF PARM LIST  */
         LR    R1,R10                                              0196
*           R3=R11;                 /* RESTORE ADDRESS OF CVT        */
         LR    R3,R11                                              0197
*           RFY                                                    0198
*            (R10,                                                 0198
*             R11) UNRSTD;                                         0198
*           IF R15^=NULL THEN       /* IF CALLER NOT AUTHORIZED      */
         LTR   R15,R15                                             0199
         BZ    @RF00199                                            0199
*             DO;                                                  0200
*               GEN(ABEND X'133',DUMP,,SYSTEM);/* ABEND CALLER WITH
*                                      WITH UNAUTHORIZIED COMPLETION
*                                      CODE                          */
         ABEND X'133',DUMP,,SYSTEM
*             END;                                                 0202
*           ELSE                    /* CALLER IS AUTHORIZED          */
*/********************************************************************/
*/*  THIS SECTION PROCESSES A SCHEDULED SVC DUMP REQUEST. ASID OR    */
*/*  ASIDLST WAS SPECIFIED IN THE SVC DUMP PARAMETER LIST    @G33VPHD*/
*/********************************************************************/
*                                                                  0203
*             DO;                                                  0203
         B     @RC00199                                            0203
@RF00199 DS    0H                                                  0204
*               IF R1->SDUASID='1'B×/* IF ASID OR            @G33VPHD*/
*                   (R1->SDUNEW='1'B&/* NEW SDUMP &          @G33VPHD*/
*                   R1->SDUASLST='1'B) THEN/* ASIDLST        @G33VPHD*/
         TM    SDUASID(R1),B'00000100'                             0204
         BO    @RT00204                                            0204
         TM    SDUNEW(R1),B'00110000'                              0204
         BNO   @RF00204                                            0204
@RT00204 DS    0H                                                  0205
*                 DO;               /* CALL SCHEDULE DUMP IEAVTSDX 0205
*                                                            @G33VPHD*/
*                   R13=WSALSDMP;   /* SDUMP LOCAL WORK/SAVE         */
         L     @14,ASCBPTR                                         0206
         L     @14,ASXBPTR(,@14)                                   0206
         L     @14,ASXBSPSA(,@14)                                  0206
         L     R13,WSALSDMP(,@14)                                  0206
*                   CALL IEAVTSDX;  /* CALL SCHEDULE DUMP    @G33VPHD*/
         L     @12,CVTPTR                                          0207
         L     @15,CVTSDMP(,@12)                                   0207
         BALR  @14,@15                                             0207
*                 END;                                             0208
*                                                                  0209
*/********************************************************************/
*/*  THIS SECTION PROCESSES A SYNCRONOUS SVC DUMP REQUEST. SVC 51    */
*/*  WAS ISSUED AND ASID AND ASIDLST WERE NOT SPECIFIED      @G33VPHD*/
*/********************************************************************/
*                                                                  0209
*               ELSE                                               0209
*                 DO;               /* SYNCHRONOUS DUMP REQUEST    0209
*                                                            @G33VPHD*/
         B     @RC00204                                            0209
@RF00204 DS    0H                                                  0210
*                   RFY                                            0210
*                    (R15) UNRSTD;                                 0210
*                                                                  0211
*/*  START OF SPECIFICATIONS ******************************************
*                                                                  0211
* SEGMENT NAME = SDTOP                                             0211
*                                                                  0211
* MODULE NAME = IEAVAD00                                           0211
*                                                                  0211
* DESCRIPTIVE NAME = SVC DUMP                                      0211
*                                                                  0211
* LOAD MODULE NAME = IGC0005A                                      0211
* LOAD LIBRARY = SYS1.LPALIB                                       0211
* SYSGEN MACRO = SGIEA401                                          0211
*                                                                  0211
* COPYRIGHT = NONE                                                 0211
*                                                                  0211
* STATUS = OS/VS2 RELEASE 3.7 SU 33                            @G33VPHD
*                                                                  0211
* FUNCTION = SVC DUMP PROVIDES AN UNFORMATTED DUMP OF AN ADDRESS SPACE
*            TO A SYS1.DUMP DATASET OR A USER SUPPLIED DATASET.  SVC
*            DUMP IS CALLED BY SVC 51 WHEN THE SDUMP MACRO, WITH   0211
*            LINKAGE VIA SVC HAS BEEN ISSUED.  THE REQUEST IS      0211
*            FOR A SYNCHRONOUS DUMP OF THE CALLER'S ADDRESS SPACE. 0211
*                                                                  0211
* OPERATION= THE FOLLOWING VIRTUAL STORAGE AREAS MAY BE DUMPED: PSA'S,
*            NUCLEUS, SQA, RGN(PRIVATE AREA OF ADDRESS SPACE), LSQA,
*            SWA, ACTIVE LPA MODULES AND SVC'S FOR THE ADDRESS SPACE,
*            CSA, AND TRT(EITHER SUPERVISOR TRACE TABLE OR GTF INCORE
*            TRACE BUFFERS).                                       0211
*            A 4K SQA BUFFER IS AVAILABLE TO THE CALLER            0211
*            FOR THE SAVING OF VOLATILE DATA. THE 4K SQA BUFFER    0211
*            IS RESERVED AND INITIALIZED PRIOR TO CALLING SVC DUMP AND
*            IS REQUESTED TO BE DUMPED BY AN OPTION ON THE SDUMP MACRO.
*            STORAGE RANGES OF VIRTUAL STORAGE MAY ALSO BE REQUESTED.
*                                                                  0211
*            IF VOLATILE, GLOBAL VIRTUAL STORAGE (SQA, CSA) IS     0211
*            REQUESTED BY THE CALLER, THE SYSTEM IS SET NON-DISPATCH-
*            ABLE.  THE ADDRESS SPACE TCB'S, EXCEPT THE TOP TASK, ARE
*            ALWAYS SET NON-DISPATCHABLE.                          0211
*                                                                  0211
*            ONLY ONE SVC DUMP IS DONE AT A TIME.  SVC DUMP SERIALIZES
*            ITS PROCESSING WITH A WORD IN THE RTMCT. (RTCTSDPL)   0211
*                                                                  0211
*            THE DUMP CAN BE WRITTEN TO TAPE (2400 COMPATIBLE) OR TO
*            CERTAIN DASD (2314, 2319, 3330-A, 3330-C, 2305-1, 2305-2,
*            3350,                                           @Z40RSTA
*            3340).  THE DUMP DATASET WILL CONSIST OF UNFORMATTED 4104
*            BYTE RECORDS WHICH MUST BE PRINTED BY THE PRINT DUMP  0211
*            SERVICE AID, AMDPRDMP.  THE RECORDS ARE IDENTIFIED BY 0211
*            VIRTUAL ADDRESS AND ARE IN RANDOM ORDER IN THE DATASET.
*            THE FIRST RECORD IN THE DATASET IS THE CONTENTS OF THE
*            4K SQA BUFFER, IF REQUESTED.  THE NEXT RECORD IS THE  0211
*            HEADER RECORD FOLLOWED VOLATILE, GLOBAL STORAGE AREA  0211
*            RECORDS (PSA,CSA,SQA).  THE NEXT GROUP OF RECORDS CONTAIN
*            DATA FROM THE PRIVATE AREA OF THE ADDRESS SPACE (RGN, SWA,
*            LSQA) FOLLOWED BY THE REST OF THE REQUESTED AREAS (LPA
*            TRT, NUCLEUS).                                        0211
*                                                                  0211
*            THE FOLLOWING CONTROL BLOCKS ARE ALWAYS INCLUDED IN THE
*            DUMP: CVT, ASVT, ASCB, UCB.  THEY ARE REQUIRED BY AMDPRDMP
*                                                                  0211
*            THE BASIC LOGIC OF SVC DUMP IS TO CONVERT ALL THE     0211
*            REQUESTED AREAS INTO ADDRESS RANGES, STARTING AND ENDING
*            ON A 4K BOUNDARY.  THE STARTING ADDRESS IS ROUNDED DOWN TO
*            A 4K BOUNDARY AND THE ENDING ADDRESS IS ROUNDED UP TO A
*            4K BOUNDARY.  THESE ADDRESSES ARE USED AS LOCATIONS FROM
*            WHICH TO MOVE DATA INTO THE OUTPUT BUFFER.            0211
*                                                                  0211
*            THE 4K SQA BUFFER, IF REQUESTED, IS WRITTEN OUT FIRST.
*            THE HEADER RECORD IS BUILT IN THE OUTPUT BUFFER AND   0211
*            WRITTEN OUT.  ALL THE REQUESTED AREAS ARE CONVERTED TO
*            ADDRESS RANGES AND STORED IN THE ADDRESS RANGE TABLE  0211
*            LOCATED IN THE VACATED 4K SQA BUFFER.  THE ADDRESSES ARE
*            SORTED TO REMOVE DUPLICATE ADDRESSES.  THE DATA IS MOVED
*            TO THE OUTPUT BUFFER FROM WHICH IT IS WRITTEN OUT.    0211
*            UNALLOCATED STORAGE IN AN ADDRESS RANGE IS IGNORED.   0211
*            SVC DUMP CALLS A SERIES OF EXTERNAL ROUTINES TO PERFORM
*            THIS SYNCRONOUS DUMP PROCESSING.                      0211
* NOTES = NONE                                                     0211
*                                                                  0211
*   DEPENDENCIES = THIS MODULE IS ECBDIC CHARACTER CODE DEPENDENT. 0211
*                                                                  0211
*   RESTRICTIONS = NONE                                            0211
*                                                                  0211
*   REGISTER CONVENTIONS = SEE REGISTER DECLARES.                  0211
*                                                                  0211
*   PATCH LABEL = SDUPATCH                                         0211
*                                                                  0211
* MODULE TYPE = MODULE                                             0211
*                                                                  0211
*   PROCESSOR = PLS2                                               0211
*                                                                  0211
*   MODULE SIZE = X'ECC'                                           0211
*                                                                  0211
*   ATTRIBUTES = PAGED LPA, ZERO PSW PROTECT KEY, SUPERVISOR MODE, 0211
*                RENTRANT, REFRESHABLE                             0211
*                                                                  0211
* ENTRY POINT = SDTOP                                              0211
*                                                                  0211
*   PURPOSE = TO TAKE A DUMP OF THE CURRENT ADDRESS SPACE          0211
*                                                                  0211
*                                                                  0211
*                                                                  0211
*   LINKAGE = PLS2 INCLUDE                                         0211
*                                                                  0211
*   INPUT DATA = REG 1 - ADDRESS OF SVC DUMP PARAMETER LIST        0211
*                REG 3 - ADDRESS OF CVT                            0211
*                REG 4 - ADDRESS OF SVC DUMP TCB                   0211
*                REG 5 - ADDRESS OF SVC DUMP SURB                  0211
*                REG 7 - ADDRESS OF CURRENT ASCB                   0211
*                REG 14 - RETURN ADDRESS                           0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LOCK CONDITIONS = LOCAL LOCK HELD ON ENTRY.                    0211
*                                                                  0211
*   RETISTERS SAVED = NONE                                         0211
*                                                                  0211
*   STATIC REGISTERS = NONE                                        0211
*                                                                  0211
*   REGISTERS RESTORED = NONE                                      0211
*                                                                  0211
*                                                                  0211
*                                                                  0211
*                                                                  0211
*                                                                  0211
* ENTRY POINT = SDFRRRTN                                           0211
*                                                                  0211
*   PURPOSE = RECOVER OR TERMINATE AN SVC DUMP WHILE A LOCK IS HELD.
*             THIS ENTRY POINT IS ENTERED WHEN SVC DUMP OWNS A LOCK
*             AND AN ERROR HAS OCCURRED OR THERE HAS BEEN A REQUEST TO
*             TERMINATE.                                           0211
*                                                                  0211
*   LINKAGE = LOAD PSW FROM RTM1                                   0211
*                                                                  0211
*   INPUT DATA = REG  1 - ADDRESS OF WORK AREA (SDWA)              0211
*                REG 14 - RETURN ADDRESS                           0211
*                REG 15 - ENTRY POINT                              0211
*                                                                  0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LOCK CONDITIONS = LOCAL, CMS, DISPATCHER, OR SALLOC IS HELD.   0211
*                                                                  0211
*   REGISTERS SAVED = NONE                                         0211
*                                                                  0211
*   STATIC REGISTERS = NONE                                        0211
*                                                                  0211
*   REGISTERS  RESTORED = NONE                                     0211
*                                                                  0211
* ENTRY POINT = SDESTAEX                                           0211
*                                                                  0211
*   PURPOSE = RECOVER OR TERMINATE AN SVC DUMP.  THIS ENTRY POINT CAN
*             BE ENTERED WHEN SVC DUMPS FRR PERCOLATES, OR WHEN AN 0211
*             ERROR OR A REQUEST TO TERMINATE OCCURS.              0211
*                                                                  0211
*                                                                  0211
*   LINKAGE = SYNCHED TO FROM RTM2                                 0211
*                                                                  0211
*   INPUT DATA = REG  1 - ADDRESS OF WORK AREA (SDWA)              0211
*                REG 13 - ADDRESS OF A SAVE AREA                   0211
*                REG 14 - RETURN ADDRESS                           0211
*                REG 15 - ENTRY POINT                              0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LOCK CONDITIONS = NONE                                         0211
*                                                                  0211
*   REGISTERS SAVED = NONE                                         0211
*                                                                  0211
*   STATIC REGISTERS = NONE                                        0211
*                                                                  0211
*   REGISTERS RESTORED = NONE                                      0211
*                                                                  0211
*                                                                  0211
* EXIT-NORMAL = RETURN TO CALLER                                   0211
*                                                                  0211
*   CONDITIONS = SVC DUMP HAS COMPLETED                            0211
*                                                                  0211
*   OUTPUT DATA = UNFORMATTED VIRTUAL DUMP OF AN ADDRESS SPACE IN A
*                 SYS1.DUMP DATASET OR A USER SUPPLIED DATASET.    0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LOCK CONDITIONS = NONE HELD                                    0211
*                                                                  0211
*   RETURN CODES = 0 - SUCCESSFULLY COMPLETED                      0211
*                  4 - DUMP DATASET CONTAINS A PARTIAL DUMP        0211
*                  8 - UNABLE TO DUMP                              0211
*                                                                  0211
*                                                                  0211
* EXIT-NORMAL = RETURN TO RTM1 FROM FRR                            0211
*                                                                  0211
*   CONDITIONS = RETRY OR PERCOLATE                                0211
*                                                                  0211
*   OUTPUT DATA = SOFTWARE ERROR RECORD                            0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LOCK CONDITIONS = LOCAL, CMS, SALLOC, OR DISPATCHER            0211
*                                                                  0211
*   RETURN CODES = NONE                                            0211
*                                                                  0211
* EXIT-NORMAL = RETURN TO RTM2 FROM ESTAE EXIT                     0211
*                                                                  0211
*   CONDITIONS = RETRY OR PERCOLATE                                0211
*                                                                  0211
*   OUTPUT DATA = SOFTWARE ERROR RECORD                            0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LOCK CONDITIONS = NONE                                         0211
*                                                                  0211
*   RETURN CODES = NONE                                            0211
*                                                                  0211
* EXIT-ERROR = ABEND CALLER                                        0211
*                                                                  0211
*   CONDITIONS = INVALID PARAMETERS - COMPLETION CODE X'233'       0211
*                                                                  0211
*   OUTPUT DATA = NONE                                             0211
*                                                                  0211
*   ENQ CONDITIONS = NONE                                          0211
*                                                                  0211
*   LCOK CONDITIONS = NONE                                         0211
*                                                                  0211
*   RETURN CODES = NONE                                            0211
*                                                                  0211
*   REASON CODES = SEE SVC 51 PROLOGUE FOR DETAILS                 0211
*                                                                  0211
* EXTERNAL REFERENCES = NONE                                       0211
*                                                                  0211
*   ROUTINES = SVC 60 - ESTABLISH AND REMOVE ESTAE EXIT, BRANCH ENTRY
*                       AND SVC LINKAGE.                           0211
*                                                                  0211
*              STATUS - SET/RESET SYSTEM AND TCB'S IN CURRENT ADDRESS
*                       SPACE NON-DISPATCHABLE, BRANCH ENTRY AND SVC
*                       LINKAGE.                                   0211
*                                                                  0211
*              IEAVTSDH - SELECT AND INITIALIZE THE DUMP DATA  @G33VPHD
*                         SET                                  @G33VPHD
*                                                                  0211
*              IEAVTSDG - BUILD THE ADDRESS RANGES FOR THE     @G33VPHD
*                         GLOBAL STORAGE AREA.  OUTPUT THE     @G33VPHD
*                         GLOBAL STORAGE DATA BY CALLING       @G33VPHD
*                         MODULE IEAVTSDO                      @G33VPHD
*                                                                  0211
*              IEAVTSDF - BUILD THE ADDRESS RANGES FOR THE     @G33VPHD
*                         GTF RECORDS                          @G33VPHD
*                                                                  0211
*              IEAVTSDL - BUILD THE ADDRESS RANGES FOR THE     @G33VPHD
*                         LOCAL STORAGE AREAS.  OUTPUT THE     @G33VPHD
*                         LOCAL STORAGE DATA BY CALLING        @G33VPHD
*                         MODULE IEAVTSDO                      @G33VPHD
*                                                                  0211
*              IEAVTSDC - CLEAN-UP SVC DUMP RESOURCES AND      @G33VPHD
*                         NOTIFY OPERATOR                      @G33VPHD
*                                                              @G33VPHD
*              IEAVTSDE - CLEAN UP SVC DUMP RESOURCES FROM     @G33VPHD
*                         RECOVERY ROUTINES                    @G33VPHD
*                                                                  0211
*              IEAVTSSE - PERFORM REQUESTED ENABLED SUMMARY        0211
*                         DUMP                                 @ZM45052
*                                                                  0211
*              LOCK MGR - OBTAIN AND RELEASE LOCAL LOCK OR SALLOC LOCK,
*                         BRANCH ENTRY                             0211
*                                                                  0211
*                                                                  0211
*      SYSTEM RESOURCE MANAGER - INFORM SYS RES MGR SVC DUMP IS RUNNING
*                            DONT SWAP THIS ADDRESS SPACE, BRANCH ENTRY
*                                                                  0211
*                                                                  0211
*              ABEND - INFORM CALLER OF INVALID PARAMTERS          0211
*                                                                  0211
*                                                                  0211
*   DATA SETS = NONE                                               0211
*                                                                  0211
*   DATA AREAS = CVT, PSA                                      @G33VPHD
*                                                                  0211
*   CONTROL BLOCKS = KEY: C-CREATE, U-USED, M-MODIFIED, D-DELETE   0211
*                    TCB     - M,U                                 0211
*                    ASCB    - U                                   0211
*                    ASXB    - U                                   0211
*                    RTCT    - U,M                                 0211
*                    SDWA    - U,M                                 0211
*                    FRRS    - U,M                                 0211
*                    ESTA    - U                                   0211
*                    SCVT    - U                                   0211
*                                                                  0211
*                                                                  0211
*   TABLES = NONE                                                  0211
*                                                                  0211
*   MACROS =                                                       0211
*                                                                  0211
*                                                                  0211
* MAPPING MACROS USED = IHAPSA,CVT,IKJTCB,IHASCVT,IHAASCB,      @G33VPH
*                       IHARTCT,IHASDWA,IHAUCBOB,IHADCBDF,      @G33VPH
*                       IHADCB,IHAWSAVT,IEZDEB,IHASDUMP,IHAFRRS,@G33VPH
*                       IHAASXB,IHAESTA,IHASDWRK                @G33VPH
*                                                                  0211
* MESSAGES = NONE                                                  0211
*                                                                  0211
*                                                                  0211
**************************** END OF SPECIFICATIONS *******************/
*                                                                  0211
*                   RFY                                            0211
*                    (R3,                                          0211
*                     R4,                                          0211
*                     R5,                                          0211
*                     R7) UNRSTD;                                  0211
*                   RFY                                            0212
*                    (R10,                                         0212
*                     R11,                                         0212
*                     R3) RSTD;                                    0212
*                   GEN                                            0213
*(SETFRR A,FRRAD=ADDRFRR,PARMAD=(R3),WRKREGS=(R10,R11))            0213
*                   REFS(ADDRFRR,PSA,PSACSTK,FRRS,FRRSCURR,FRRSLAST,
*                       PSALSFCC,FRRSFRRA,FRRSENTR,FRRSPARM);/*    0213
*                                      ESTABLISH RECOVERY    @G33VPHD*/
         SETFRR A,FRRAD=ADDRFRR,PARMAD=(R3),WRKREGS=(R10,R11)
*                   RFY                                            0214
*                    (R10,                                         0214
*                     R11) UNRSTD;                                 0214
*                   ERRFRR='1'B;    /* FRR PROTECTION ACTIVE         */
         OI    ERRFRR(R3),B'10000000'                              0215
*                   ERRBASE1=R9;    /* SAVE FIRST BASE REGISTER      */
         ST    R9,ERRBASE1(,R3)                                    0216
*                   ERRBASE2=R6;    /* SAVE SECOND BASE REGISTER   0217
*                                                            @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0217
*                   ERRRETRY=ADDR(RTYEND80);/* RETRY ADDRESS FOR ERR
*                                      EXITS                 @ZM45047*/
         LA    @12,RTYEND80                                        0218
         ST    @12,ERRRETRY(,R3)                                   0218
*                   RFY                                            0219
*                     SDUMP BASED(R1);/* PARAMETER LIST MAPPED     0219
*                                                            @G33VPHD*/
*                   RFY                                            0220
*                     R7 RSTD;                                     0220
*                   RFY                                            0221
*                     SDWORK BASED(R7);/* GET WORK AREA ADDRESS    0221
*                                                            @G33SPHD*/
*/* ******************************************************************/
*/*  FOR SYSMDUMP REQUESTS THE WORK AREA ADDRESS IS PASSED AS A      */
*/*  PARAMETER IN THE PARAMETER LIST.  THIS ALLOWS SVC DUMP AND      */
*/*  SYSMDUMP TO PROCESS CONCURRENTLY.                               */
*/* ******************************************************************/
*                                                                  0222
*                   IF SDUABEND='1'B THEN/* IF THIS IS A SYSMDUMP  0222
*                                      REQUEST               @ZM45047*/
         TM    SDUABEND(R1),B'01000000'                            0222
         BNO   @RF00222                                            0222
*                     R7=SDUSYSMC;  /* GET WORK AREA ADDR FROM     0223
*                                      PARAMETER LIST FOR SYSMDUMP 0223
*                                                            @ZM45047*/
         L     R7,SDUSYSMC(,R1)                                    0223
*                   ELSE                                           0224
*                     R7=RTCTSDWK;  /* IF THIS IS NOT A SYSMDUMP   0224
*                                      REQUEST GET WORK AREA FROM  0224
*                                      RTCT                  @ZM45047*/
         B     @RC00222                                            0224
@RF00222 L     @12,CVTPTR                                          0224
         L     @12,CVTRTMCT(,@12)                                  0224
         L     R7,RTCTSDWK(,@12)                                   0224
*                   ERRWKADR=R7;    /* SAVE ADRRESS OF WORK AREA   0225
*                                                            @ZM45047*/
@RC00222 ST    R7,ERRWKADR(,R3)                                    0225
*                   IF SDUABEND='0'B THEN/* IF THIS NOT A SYSMDUMP 0226
*                                      REQUEST               @G33SPHD*/
         TM    SDUABEND(R1),B'01000000'                            0226
         BNZ   @RF00226                                            0226
*                     DO;           /* NOT A SYSMDUMP REQUEST      0227
*                                                            @G33VPHD*/
*/********************************************************************/
*/*   THIS SEGMENT DETERMINES WHETHER OR NOT A DUMP CAN BE TAKEN.    */
*/*   THE INSTALLATION CAN CHOOSE TO IGNORE DUMP REQUESTS BY         */
*/*   ISSUING THE CHNGDUMP OPERATOR COMMAND.  IF THE CALLER DOES     */
*/*   NOT SUPPLY A DATASET FOR THE DUMP (VIA DCB OPERAND ON SDUMP    */
*/*   MACRO) AND NO SYS1.DUMP DATASETS WERE DEFINED AT IPL, A DUMP   */
*/*   CANNOT BE TAKEN.  ONLY ONE SVC DUMP CAN BE TAKEN AT ONE        */
*/*   TIME.  IF A DUMP IS ALREADY IN PROGRESS, ANOTHER ONE CAN NOT   */
*/*   BE TAKEN.                                                      */
*/*                                                                  */
*/*   INPUT: SDUMP PARAMETER LIST                                    */
*/*          CHNGDUMP OPERATOR COMMAND OUTPUT                        */
*/*          FLAGS IN THE RTCT                                       */
*/*          4K SQA BUFFER LOCK IN CVT                               */
*/*          DUMP DATA SET DEFINITIONS IN RTCT                       */
*/*                                                                  */
*/*   OUTPUT: ERRENDMP='1'B - SVC DUMP CANNOT BE TAKEN               */
*/*           ERRENDMP='0'B - SVC DUMP CAN BE TAKEN                  */
*/*           SVC DUMP IN PROGRESS FLAGS - RTCT                      */
*/*                                                                  */
*/*   INCLUDED BY: SDTOP                                             */
*/********************************************************************/
*                                                                  0228
*                       RFY                                        0228
*                        (R10,                                     0228
*                         R11,                                     0228
*                         R15) RSTD;                               0228
*                       R10=CVTSDBF&HIGHBIT0;/* 4K SQA BUFFER LOCK 0229
*                                      WORD, LOCK BIT INDICATES    0229
*                                      UNLOCKED                      */
         L     @14,CVTPTR                                          0229
         L     @14,CVTSDBF(,@14)                                   0229
         LR    R10,@14                                             0229
         N     R10,@CF04436                                        0229
*                       R11=CVTSDBF×HIGHBIT1;/* 4K SQA BUFFER LOCK 0230
*                                      WORD, LOCK BIT INDICATES    0230
*                                      LOCKED                        */
         O     @14,@CF04438                                        0230
         LR    R11,@14                                             0230
*                       R15=R11;    /* CONSTANT-LOCKED VALUE OF BUF  */
         LR    R15,R11                                             0231
*                       CS(R10,R11,CVTSDBF);/* IF UNLOCKED, LOCK 4K
*                                      SQA BUF                       */
         L     @14,CVTPTR                                          0232
         CS    R10,@11,CVTSDBF(@14)                                0232
*                       IF R10=R15 THEN/* IF BUFFER WAS LOCKED, DID
*                                      CALLER LOCK IT                */
         CR    R10,R15                                             0233
         BNE   @RF00233                                            0233
*                         DO;                                      0234
*                           R15=NULL;/* SVCDUMP UNLOCKED VALUE       */
         SLR   R15,R15                                             0235
*                           IF SDUBUF='1'B THEN/* IF CALLER REQUESTED
*                                      BUFFER TO BE DUMP, IS A DUMP
*                                      ALREADY IN PROGRESS           */
         TM    SDUBUF(R1),B'01000000'                              0236
         BNO   @RF00236                                            0236
*                             DO;                                  0237
*                               R1=R1×HIGHBIT1;/* SVC DUMP IN      0238
*                                      PROGRESS SW                   */
         O     R1,@CF04438                                         0238
*                               CS(R15,R1,RTCTSDPL);/* IS A DUMP IN
*                                      PROGRESS                      */
         L     @14,CVTPTR                                          0239
         L     @14,CVTRTMCT(,@14)                                  0239
         CS    R15,@01,RTCTSDPL(@14)                               0239
*                               BC(CSCC0,SWAPPED1);/* NO-GO IND THIS
*                                      CURR DMP                      */
         BC    8,SWAPPED1                                          0240
*                               R15=RSN38;/* PUT REASON CODE IN REG
*                                                            @G33VPHD*/
         LA    R15,56                                              0241
*                               GEN(ABEND X'233',DUMP,,SYSTEM);/*  0242
*                                      YES, BUFFER= BAD PARM         */
         ABEND X'233',DUMP,,SYSTEM
*SWAPPED1:                                                         0243
*                               ;                                  0243
SWAPPED1 DS    0H                                                  0244
*                               ERRSDBIT='1'B;/* SVC DUMP LOCK BIT 0244
*                                      TURNED ON                     */
*                               ERRBFBIT='1'B;/* BUFFER LOCK BIT   0245
*                                      TURNED ON                     */
         OI    ERRSDBIT(R3),B'00110000'                            0245
*                               RTCTSDID=ASCBASID;/* SVC DUMP ACTIVE
*                                      IN THIS ADDR SPACE-FOR      0246
*                                      IEAVTSDR                      */
         L     @14,CVTPTR                                          0246
         L     @14,CVTRTMCT(,@14)                                  0246
         L     @12,ASCBPTR                                         0246
         LH    @12,ASCBASID(,@12)                                  0246
         N     @12,@CF04671                                        0246
         STH   @12,RTCTSDID(,@14)                                  0246
*                             END;                                 0247
*                           ELSE                                   0248
*                             DO;                                  0248
         B     @RC00236                                            0248
@RF00236 DS    0H                                                  0249
*                               ERRENDMP='1'B;/* IF CALLER DID NOT 0249
*                                      REQUEST BUFFER BUT BUFFER IS
*                                      LOCKED, A DUMP IS ALREADY IN
*                                      PROGRES                       */
         OI    ERRENDMP(R3),B'01000000'                            0249
*                             END;                                 0250
*                         END;                                     0251
*                       ELSE        /* BUFFER WAS UNLOCKED           */
*                         DO;                                      0252
         B     @RC00233                                            0252
@RF00233 DS    0H                                                  0253
*                           R15=NULL;/* SVCDUMP UNLOCKED VALUE       */
         SLR   R15,R15                                             0253
*                           R1=R1×HIGHBIT1;/* SVC DUMP IN PROGRESS 0254
*                                      SWITCH                        */
         O     R1,@CF04438                                         0254
*                           CS(R15,R1,RTCTSDPL);/* IS A DUMP ALREADY
*                                      IN PROGRES                    */
         L     @14,CVTPTR                                          0255
         L     @14,CVTRTMCT(,@14)                                  0255
         CS    R15,@01,RTCTSDPL(@14)                               0255
*                           BC(CSCC0,SWAPPED2);/* NO, GO IND THIS IS
*                                      CURR DUMP                     */
         BC    8,SWAPPED2                                          0256
*                           R15=RSN18;/* PUT REASON CODE IN REG 15 0257
*                                                            @G33VPHD*/
         LA    R15,24                                              0257
*                           GEN(ABEND X'233',DUMP,,SYSTEM);/* YES-BUT
*                                      BUF UNLOCKED-ERROR            */
         ABEND X'233',DUMP,,SYSTEM
*SWAPPED2:                                                         0259
*                           ;                                      0259
SWAPPED2 DS    0H                                                  0260
*                           ERRSDBIT='1'B;/* SVC DUMP LOCK BIT TURNED
*                                      ON                            */
*                           ERRBFBIT='1'B;/* BUFFER LOCK BIT TURNED
*                                      ON                            */
         OI    ERRSDBIT(R3),B'00110000'                            0261
*                           RTCTSDID=ASCBASID;/* SVC DUMP ACTIVE IN
*                                      THIS ADDR SPACE - FOR IEAVTSDR*/
         L     @14,CVTPTR                                          0262
         L     @14,CVTRTMCT(,@14)                                  0262
         L     @12,ASCBPTR                                         0262
         LH    @12,ASCBASID(,@12)                                  0262
         N     @12,@CF04671                                        0262
         STH   @12,RTCTSDID(,@14)                                  0262
*                           IF SDUBUF='1'B THEN/* IF BUFFER REQUESTED
*                                      BY CALLER BUT NOT LOCKED BY 0263
*                                      HIM ABEND CALLER              */
         TM    SDUBUF(R1),B'01000000'                              0263
         BNO   @RF00263                                            0263
*                             DO;   /* ABEND CALLER WITH 233 @G33VPHD*/
*                               RFY                                0265
*                                 R15 RSTD;/*                @G33VPHD*/
*                               R15=RSN18;/* PUT REASON CODE IN REG
*                                      15                    @G33VPHD*/
         LA    R15,24                                              0266
*                               GEN(ABEND X'233',DUMP,,SYSTEM);    0267
         ABEND X'233',DUMP,,SYSTEM
*                               RFY                                0268
*                                 R15 UNRSTD;/*              @G33VPHD*/
*                             END;  /* END OF ABEND CALLER   @G33VPHD*/
*                           ELSE                                   0270
*                             ;                                    0270
@RF00263 DS    0H                                                  0271
*                         END;                                     0271
*                       IF ERRENDMP='0'B THEN/* IF A DUMP IS NOT   0272
*                                      ALREADY IN PROGRESS, SEE IF 0272
*                                      THE CHNGDUMP OPERATOR COMMAND
*                                      FOR DUMPS IS IN EFFECT AND SEE
*                                      IF A DUMP DATASET IS DEFINED  */
@RC00233 TM    ERRENDMP(R3),B'01000000'                            0272
         BNZ   @RF00272                                            0272
*                         DO;                                      0273
*                           IF RTCTISVC='1'B×/* IF CHNGDUMP-NO SVC 0274
*                                      DUMPS OR                      */
*                               (SDUDCB='0'B&/* NO CALLER SUPPLIED 0274
*                                      DATASET                       */
*                               RTCTSDNO='1'B)/* AND NO SYS1.DUMP  0274
*                                      DATASETS DEFINED AT IPL       */
*                               ×   /* OR                    @G33NPHE*/
*                               (PSATOLD^=0/* IF THERE IS A CURRENT
*                                      TCB                   @G33NPHE*/
*                               &PSATOLD->TCBRTM2='1'B/* AND IT SHOWS
*                                      RTM2 ENTERED          @G33NPHE*/
*                               &PSATOLD->TCBRTWA^=0/* AND THERE IS
*                                      AN RTM2WA             @G33NPHE*/
*                               &PSATOLD->TCBRTWA->RTM2NODP='1'B)/*
*                                      AND SLIP REQUESTED THAT ALL 0274
*                                      DUMP REQUESTS FOR THIS CALL TO
*                                      RTM BE IGNORED.       @G33NPHE*/
*                             THEN  /*                       @G33NPHE*/
         L     @12,CVTPTR                                          0274
         L     @12,CVTRTMCT(,@12)                                  0274
         TM    RTCTISVC+236(@12),B'00000001'                       0274
         BO    @RT00274                                            0274
         TM    SDUDCB(R1),B'10000000'                              0274
         BNZ   @GL00004                                            0274
         TM    RTCTSDNO(@12),B'10000000'                           0274
         BO    @RT00274                                            0274
@GL00004 L     @12,PSATOLD                                         0274
         SLR   @08,@08                                             0274
         CR    @12,@08                                             0274
         BE    @RF00274                                            0274
         TM    TCBRTM2(@12),B'00001000'                            0274
         BNO   @RF00274                                            0274
         L     @12,TCBRTWA(,@12)                                   0274
         CR    @12,@08                                             0274
         BE    @RF00274                                            0274
         TM    RTM2NODP(@12),B'00010000'                           0274
         BNO   @RF00274                                            0274
@RT00274 DS    0H                                                  0275
*                             ERRENDMP='1'B;/* TERMINATE THE DUMP    */
         OI    ERRENDMP(R3),B'01000000'                            0275
*                           ELSE                                   0276
*                             ;                                    0276
@RF00274 DS    0H                                                  0277
*                         END;                                     0277
*                       ELSE                                       0278
*                         ;                                        0278
@RF00272 DS    0H                                                  0279
*                       RFY                                        0279
*                        (R10,                                     0279
*                         R11,                                     0279
*                         R15) UNRSTD;                             0279
*                     END;          /* END OF NOT A SYSMDUMP REQUEST
*                                                            @G33VPHD*/
*/* ******************************************************************/
*/*  THIS SECTION WILL PERFORM THE DUMP REQUEST IF IT HAS BEEN       */
*/*  DETERMINED THAT A DUMP IS POSSIBLE                      @G33VPHD*/
*/* ******************************************************************/
*                                                                  0281
*                   IF ERRENDMP='0'B THEN/* IF DUMP CAN BE TAKEN, DO
*                                      DUMP                          */
@RF00226 TM    ERRENDMP(R3),B'01000000'                            0281
         BNZ   @RF00281                                            0281
*                     DO;                                          0282
*                       IF SDUABEND='1'B THEN/* IF A SYSMDUMP REQUEST
*                                                            @G33SPHD*/
         TM    SDUABEND(R1),B'01000000'                            0283
         BNO   @RF00283                                            0283
*                         SDWSDPL=R1;/* SAVE PARMLIST ADDRESS      0284
*                                                            @G33SPHD*/
         ST    R1,SDWSDPL(,R7)                                     0284
*                       ELSE                                       0285
*                         SDWSDPL=RTCTSDPL;/* IF NOT A SYSMDUMP    0285
*                                      REQUEST GET PARM LIST ADDRESS
*                                      FROM RTCT             @G33SPHD*/
         B     @RC00283                                            0285
@RF00283 L     @12,CVTPTR                                          0285
         L     @12,CVTRTMCT(,@12)                                  0285
         L     @12,RTCTSDPL(,@12)                                  0285
         ST    @12,SDWSDPL(,R7)                                    0285
*                       ERRWKADR=R7;/* SAVE ADRRESS OF WORK AREA     */
@RC00283 ST    R7,ERRWKADR(,R3)                                    0286
*                       SVCDMPNM=CSECTNAM;/* SAVE CSECT NAME FOR   0287
*                                      RECOVERY              @G33VPHD*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0287
*                       RFY                                        0288
*                        (SDUMP) BASED(SDWSDPL);/* PARMLST ADDR IN 0288
*                                      SDWORK                @G33SPHD*/
*                       RFY                                        0289
*                         R1 UNRSTD;                               0289
*                       SDRETCOD=NULL;/* PRE-SET SUCCESSFULL RET CODE*/
         SLR   @12,@12                                             0290
         ST    @12,SDRETCOD(,R7)                                   0290
*                       FLAGSONE=NULLCHAR;/* CLEAR FLAG BYTE IN    0291
*                                      WORKAREA                      */
         MVI   FLAGSONE(R7),X'00'                                  0291
*                       FLAGSTWO=NULLCHAR;/* CLEAR FLAG BYTE IN    0292
*                                      WORKAREA                      */
         MVI   FLAGSTWO(R7),X'00'                                  0292
*                       ERRCUDMP='1'B;/* INDICATE THAT A DUMP CAN BE
*                                      TAKEN                         */
         OI    ERRCUDMP(R3),B'00000100'                            0293
*                                                                  0294
*/*  *****************************************************************/
*/*   THIS SECTION VALIDATES THE PARAMETER LIST AND SETS THE SVC     */
*/*   DUMP ENVIRONMENT ONLY FOR NON-SYSMDUMP REQUESTS        @G33VPHD*/
*/*  *****************************************************************/
*                                                                  0294
*                       IF SDUABEND='0'B THEN/* IF NOT A SYSMDUMP  0294
*                                                            @G33SPHD*/
         L     @12,SDWSDPL(,R7)                                    0294
         TM    SDUABEND(@12),B'01000000'                           0294
         BNZ   @RF00294                                            0294
*                         DO;       /* VALIDATE AND SET DUMP       0295
*                                      ENVIRONMENT           @G33SPHD*/
*                           RTCTSDEN(1)='1'B;/* INDICATE SVC DUMP  0296
*                                      ENTERED               @G33VPHD*/
         L     @08,CVTPTR                                          0296
         L     @02,CVTRTMCT(,@08)                                  0296
         OI    RTCTSDEN(@02),B'00000010'                           0296
*                           RTCTSDNA=ONE;/* SET NUMBER OF ADDRESS  0297
*                                      SPACES TO DUMP TO ONE @G33VPHD*/
         MVI   RTCTSDNA(@02),X'01'                                 0297
*                           RTCTSDAS(1)=ASCBASID;/* SAVE ASID OF   0298
*                                      ADDRESS SPACE TO DUMP @G33VPHD*/
         L     @15,ASCBPTR                                         0298
         MVC   RTCTSDAS(2,@02),ASCBASID(@15)                       0298
*                           RTCTSDID=ASCBASID;/* SAVE ASID OF CURRENT
*                                      ADDRESS SPACE         @ZM45045*/
         LH    @15,ASCBASID(,@15)                                  0299
         N     @15,@CF04671                                        0299
         STH   @15,RTCTSDID(,@02)                                  0299
*                           RFY                                    0300
*                             TCB BASED(PSATOLD);/* ADDRESS OF CURR
*                                      TCB IN PSA                    */
*                           TCBEXSVC='1'B;/* SVC DUMP ACTIVE FOR THIS
*                                      TCB                           */
         L     @02,PSATOLD                                         0301
         OI    TCBEXSVC(@02),B'00000001'                           0301
*                           RFY                                    0302
*                             TCB BASED;                           0302
*                                                                  0302
*/********************************************************************/
*/*   THIS SEGMENT VALIDATES THE INFORMATION IN THE SDUMP PARAM      */
*/*   LIST.  THE PARAM LIST AND WHAT IT POINTS TO CANNOT BE IN       */
*/*   THE 4K SQA BUFFER.  IF THE CALLER PASSED A DCB ADDRESS, THE    */
*/*   DCB MUST BE OPEN AND THE DATASET MUST RESIDE ON A SUPPORTED    */
*/*   DEVICE.                                                        */
*/*                                                                  */
*/*   INPUT: SVC DUMP PARAMETER LIST                                 */
*/*                                                                  */
*/*   OUTPUT: ABAEND CALLER WITH X'233' COMPLETION CODE IF           */
*/*           ANY INFORMATION IN THE SDUMP PARAM LIST IS INVALID     */
*/*                                                                  */
*/*   INCLUDED BY: SDTOP                                             */
*/********************************************************************/
*                                                                  0303
*                           RFY                                    0303
*                            (R10,                                 0303
*                             R11) RSTD;                           0303
*                           R10=CVTSDBF&HIGHBIT0;/* ADDRESS OF     0304
*                                      BEGINNING OF 4K SQA BUFFER  0304
*                                      WITH HIGH ORDER BIT ZERO      */
         L     @02,@CF04436                                        0304
         L     R10,CVTSDBF(,@08)                                   0304
         NR    R10,@02                                             0304
*                           R11=R10+FOURK;/* ADDRESS OF END OF BUFFER*/
         LR    R11,R10                                             0305
         AL    R11,@CF04432                                        0305
*                           IF(R10<=(ADDR(SDUMP)&HIGHBIT0))&/* IF  0306
*                                      PARM LIST IN          @G33VPHD*/
*                               ((ADDR(SDUMP)&HIGHBIT0)<R11) THEN/*
*                                      SDUMP 4K BUFFER       @G33VPHD*/
         NR    @12,@02                                             0306
         CR    R10,@12                                             0306
         BH    @RF00306                                            0306
         CR    @12,R11                                             0306
         BNL   @RF00306                                            0306
*                             DO;   /* ABEND CALLER W/233    @G33VPHD*/
*                               RFY                                0308
*                                 R15 RSTD;/*                @G33VPHD*/
*                               R15=RSN1C;/* SET REASON CODE REG   0309
*                                                            @G33VPHD*/
         LA    R15,28                                              0309
*                               GEN(ABEND X'233',DUMP,,SYSTEM);/*  0310
*                                      ABEND CALLER                  */
         ABEND X'233',DUMP,,SYSTEM
*                               RFY                                0311
*                                 R15 UNRSTD;/*              @G33VPHD*/
*                             END;  /* END ABEND CALLER      @G33VPHD*/
*                           IF SDUDCB='1'B THEN/* IF DCB SUPPLIED, 0313
*                                      VALIDATE                      */
@RF00306 L     @12,SDWSDPL(,R7)                                    0313
         TM    SDUDCB(@12),B'10000000'                             0313
         BNO   @RF00313                                            0313
*                             DO;                                  0314
*                               RFY                                0315
*                                 IHADCB BASED(SDUDCBAD);/* ADDRESS
*                                      OF DCB IN PARM LIST           */
*                               RFY                                0316
*                                 DEBBASIC BASED(DCBDEBAD);/* ADDRESS
*                                      OF DEB IN DCB                 */
*                               RFY                                0317
*                                 UCBOB BASED(DEBSUCBA);/* ADDRESS OF
*                                      UCB IN DEB                    */
*                               IF(R10<=SDUDCBAD&/* IF DCB IN 4K SQA
*                                      BUFFER OR                     */
*                                   SDUDCBAD<R11)×(DCBOFOPN^='1'B)×/*
*                                      DCB NOT OPENED OR             */
*                                   (UCB3TAPE='0'B&/* DATASET NOT ON
*                                      TAPE AND                      */
*                                   UCB3DACC='0'B) THEN/* DATASET NOT
*                                      ON DASD THEN                  */
         L     @12,SDUDCBAD(,@12)                                  0318
         CR    R10,@12                                             0318
         BH    @GL00012                                            0318
         CR    @12,R11                                             0318
         BL    @RT00318                                            0318
@GL00012 L     @12,SDWSDPL(,R7)                                    0318
         LA    @08,40                                              0318
         AL    @08,SDUDCBAD(,@12)                                  0318
         TM    DCBOFOPN(@08),B'00010000'                           0318
         BNO   @RT00318                                            0318
         L     @12,DCBDEBAD(,@08)                                  0318
         L     @12,DEBSUCBA(,@12)                                  0318
         TM    UCB3TAPE(@12),B'10100000'                           0318
         BNZ   @RF00318                                            0318
@RT00318 DS    0H                                                  0319
*                                 DO;/* ABEND CALLER W/233   @G33VPHD*/
*                                   RFY                            0320
*                                     R15 RSTD;/*            @G33VPHD*/
*                                   R15=RSN20;/* SET REASON CODE REG
*                                                            @G33VPHD*/
         LA    R15,32                                              0321
*                                   GEN(ABEND X'233',DUMP,,SYSTEM);/*
*                                      ABEND CALLER                  */
         ABEND X'233',DUMP,,SYSTEM
*                                   RFY                            0323
*                                     R15 UNRSTD;/*          @G33VPHD*/
*                                 END;/* END ABEND CALLER    @G33VPHD*/
*                               ELSE                               0325
*                                 ;                                0325
@RF00318 DS    0H                                                  0326
*                               IF UCB3TAPE='1'B&/* IF DATASET ON  0326
*                                      TAPE BUT TAPE                 */
*                                   (UCBTBYT4^='03'X&/* IS NOT 2400
*                                      SERIES                        */
*                                   UCBTBYT4^='01'X) THEN/*        0326
*                                      COMPATIBLE THEN               */
         L     @12,SDWSDPL(,R7)                                    0326
         L     @12,SDUDCBAD(,@12)                                  0326
         L     @12,DCBDEBAD+40(,@12)                               0326
         L     @12,DEBSUCBA(,@12)                                  0326
         TM    UCB3TAPE(@12),B'10000000'                           0326
         BNO   @RF00326                                            0326
         CLI   UCBTBYT4(@12),X'03'                                 0326
         BE    @RF00326                                            0326
         CLI   UCBTBYT4(@12),X'01'                                 0326
         BE    @RF00326                                            0326
*                                 DO;/* ABEND CALLER W/233   @G33VPHD*/
*                                   RFY                            0328
*                                     R15 RSTD;/*            @G33VPHD*/
*                                   R15=RSN0C;/* SET REASON CODE REG
*                                                            @G33VPHD*/
         LA    R15,12                                              0329
*                                   GEN(ABEND X'233',DUMP,,SYSTEM);/*
*                                      ABEND CALLER                  */
         ABEND X'233',DUMP,,SYSTEM
*                                   RFY                            0331
*                                     R15 UNRSTD;/*          @G33VPHD*/
*                                 END;/* END ABEND CALLER    @G33VPHD*/
*                               ELSE                               0333
*                                 ;                                0333
@RF00326 DS    0H                                                  0334
*                               IF UCB3DACC='1'B&/* IF DATASET ON  0334
*                                      DASD BUT DASD IS NOT SUPPORTED
*                                      BY SVC DUMP                   */
*                                   (UCBTBYT4^=DA23051)&/* 2305 MODEL
*                                      1 IS SUPPORTED                */
*                                   (UCBTBYT4^=DA23052)&/* 2305 MODEL
*                                      2 IS SUPPORTED                */
*                                   (UCBTBYT4^=DA2314)&/* 2314/2319
*                                      IS SUPPORTED                  */
*                                   (UCBTBYT4^=DA3330A)&/* 3330 TYPE
*                                      A IS SUPPORTED                */
*                                   (UCBTBYT4^=DA3330C)&/* 3330 TYPE
*                                      C IS SUPPORTED                */
*                                   (UCBTBYT4^=DA3350)&/* 3350     0334
*                                      SUPPORTED             @Z40RSTA*/
*                                   (UCBTBYT4^=DA3340) THEN/* 3340 IS
*                                      SUPPORTED                     */
         L     @12,SDWSDPL(,R7)                                    0334
         L     @12,SDUDCBAD(,@12)                                  0334
         L     @12,DCBDEBAD+40(,@12)                               0334
         L     @12,DEBSUCBA(,@12)                                  0334
         TM    UCB3DACC(@12),B'00100000'                           0334
         BNO   @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'06'                                 0334
         BE    @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'07'                                 0334
         BE    @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'08'                                 0334
         BE    @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'09'                                 0334
         BE    @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'0D'                                 0334
         BE    @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'0B'                                 0334
         BE    @RF00334                                            0334
         CLI   UCBTBYT4(@12),X'0A'                                 0334
         BE    @RF00334                                            0334
*                                 DO;/* ABEND CALLER W/233   @G33VPHD*/
*                                   RFY                            0336
*                                     R15 RSTD;/*            @G33VPHD*/
*                                   R15=RSN0C;/* SET REASON CODE REG
*                                                            @G33VPHD*/
         LA    R15,12                                              0337
*                                   GEN(ABEND X'233',DUMP,,SYSTEM);/*
*                                      ABEND CALLER                  */
         ABEND X'233',DUMP,,SYSTEM
*                                   RFY                            0339
*                                     R15 UNRSTD;/*          @G33VPHD*/
*                                 END;/* END ABEND CALLER    @G33VPHD*/
*                               ELSE                               0341
*                                 ;                                0341
@RF00334 DS    0H                                                  0342
*                               RFY                                0342
*                                (IHADCB,                          0342
*                                 DEBBASIC,                        0342
*                                 UCBOB) BASED;                    0342
*                             END;                                 0343
*                           ELSE                                   0344
*                             ;                                    0344
@RF00313 DS    0H                                                  0345
*                           IF SDUHDR='1'B&/* IF USER DATA SUPPLIED
*                                      BUT IS                        */
*                               ((R10<=SDUHDRAD&/* IN THE 4K SQA   0345
*                                      BUFFER OR                     */
*                               SDUHDRAD<R11)×(SDUHDRLN>MAXHDRLN)) THEN
         L     @12,SDWSDPL(,R7)                                    0345
         TM    SDUHDR(@12),B'00010000'                             0345
         BNO   @RF00345                                            0345
         L     @12,SDUHDRAD(,@12)                                  0345
         CR    R10,@12                                             0345
         BH    @GL00024                                            0345
         CR    @12,R11                                             0345
         BL    @RT00345                                            0345
@GL00024 L     @12,SDWSDPL(,R7)                                    0345
         L     @12,SDUHDRAD(,@12)                                  0345
         CLI   SDUHDRLN(@12),100                                   0345
         BNH   @RF00345                                            0345
@RT00345 DS    0H                                                  0346
*                                   /* IS TOO LONG                   */
*                             DO;   /* ABEND CALLER W/233    @G33VPHD*/
*                               RFY                                0347
*                                 R15 RSTD;/*                @G33VPHD*/
*                               R15=RSN14;/* SET REASON CODE REG   0348
*                                                            @G33VPHD*/
         LA    R15,20                                              0348
*                               GEN(ABEND X'233',DUMP,,SYSTEM);/*  0349
*                                      ABEND CALLER                  */
         ABEND X'233',DUMP,,SYSTEM
*                               RFY                                0350
*                                 R15 UNRSTD;/*              @G33VPHD*/
*                             END;  /* END ABEND CALLER      @G33VPHD*/
*                           IF SDUSTOR='1'B THEN/* IF STORAGE      0352
*                                      RANGE(S) SUPPLIED             */
@RF00345 L     @12,SDWSDPL(,R7)                                    0352
         TM    SDUSTOR(@12),B'00100000'                            0352
         BNO   @RF00352                                            0352
*                             DO;   /* VALIDATE                      */
*                               IF(R10<=SDUSTORA&/* IF RANGE(S) IN 4K
*                                      SQA BUFFER                    */
*                                   SDUSTORA<R11) THEN             0354
         L     @12,SDUSTORA(,@12)                                  0354
         CR    R10,@12                                             0354
         BH    @RF00354                                            0354
         CR    @12,R11                                             0354
         BNL   @RF00354                                            0354
*                                 DO;/* ABEND CALLER W/233   @G33VPHD*/
*                                   RFY                            0356
*                                     R15 RSTD;/*            @G33VPHD*/
*                                   R15=RSN1C;/* SET REASON CODE REG
*                                                            @G33VPHD*/
         LA    R15,28                                              0357
*                                   GEN(ABEND X'233',DUMP,,SYSTEM);/*
*                                      ABEND CALLER                  */
         ABEND X'233',DUMP,,SYSTEM
*                                   RFY                            0359
*                                     R15 UNRSTD;/*          @G33VPHD*/
*                                 END;/* END ABEND CALLER    @G33VPHD*/
*                               ELSE                               0361
*                                 DO;                              0361
         B     @RC00354                                            0361
@RF00354 DS    0H                                                  0362
*                                   RFY                            0362
*                                     STORANGE BASED(R10);         0362
*                                   R10=SDUSTORA;/* ADDR OF FIRST  0363
*                                      RANGE                         */
         L     @12,SDWSDPL(,R7)                                    0363
         L     R10,SDUSTORA(,@12)                                  0363
*                                   DO WHILE(R10^=NULL);/* CHECK EACH
*                                      RANGE                         */
         B     @DE00364                                            0364
@DL00364 DS    0H                                                  0365
*                                    IF STARTADR>=/* IF FIRST ADDRESS
*                                      GREATER THAN OR EQUAL TO    0365
*                                      SECOND                        */
*                                        (ENDADDR&HIGHBIT0) THEN   0365
         L     @12,ENDADDR(,R10)                                   0365
         N     @12,@CF04436                                        0365
         C     @12,STARTADR(,R10)                                  0365
         BH    @RF00365                                            0365
*                                     DO;/* ABEND CALLER W/233     0366
*                                                            @G33VPHD*/
*                                      RFY                         0367
*                                        R15 RSTD;/*         @G33VPHD*/
*                                      R15=RSN10;/* SET REASON CODE
*                                      REG                   @G33VPHD*/
         LA    R15,16                                              0368
*                                      GEN(ABEND X'233',DUMP,,SYSTEM);
         ABEND X'233',DUMP,,SYSTEM
*                                      /* ABEND CALLER               */
*                                      RFY                         0370
*                                        R15 UNRSTD;/*       @G33VPHD*/
*                                     END;/* END ABEND CALLER      0371
*                                                            @G33VPHD*/
*                                    ELSE                          0372
*                                     IF LASTRNGE='1'B THEN/* END  0372
*                                      CHECK IF LAST                 */
         B     @RC00365                                            0372
@RF00365 TM    LASTRNGE(R10),B'10000000'                           0372
         BNO   @RF00372                                            0372
*                                      R10=NULL;/* RANGE             */
         SLR   R10,R10                                             0373
*                                     ELSE                         0374
*                                      R10=R10+LEN1ADRN;/* ADDR OF 0374
*                                      NEXT RANGE                    */
         B     @RC00372                                            0374
@RF00372 AL    R10,@CF00060                                        0374
*                                   END;                           0375
@RC00372 DS    0H                                                  0375
@RC00365 DS    0H                                                  0375
@DE00364 LTR   R10,R10                                             0375
         BNZ   @DL00364                                            0375
*                                   RFY                            0376
*                                     STORANGE BASED;              0376
*                                 END;                             0377
*                             END;                                 0378
*                           ELSE                                   0379
*                             ;                                    0379
@RF00352 DS    0H                                                  0380
*                           RFY                                    0380
*                            (R10,                                 0380
*                             R11) UNRSTD;                         0380
@RC00352 DS    0H                                                  0381
*                                                                  0381
*/* ******************************************************************/
*/*    THIS SEGMENT WILL SET THE ENVIRONMENT SO A DUMP CAN BE        */
*/*    TAKEN.  IF THE CALLER OR THE INSTALLATION(VIA THE CHNGDUMP    */
*/*    OPERATOR COMMAND), REQUESTED THE QUIESCE FUNCTION, THE        */
*/*    SYS RES MGR WILL BE NOTIFIED (VIA A SYSEVENT) AND THE SYSTEM  */
*/*    WILL BE SET NON-DISPATCHABLE.  IF TRT WAS REQUESTED AND THE   */
*/*    SUPERVISOR TRACE TABLE IS ACTIVE, IT WILL BE STOPPED.  IF     */
*/*    GTF IS ACTIVE, IT WILL BE NOTIFIED TO HOLD TRACE BUFFERS      */
*/*    FOR THE DUMP.  INPUT: SDUMP PARM LIST BASED ON RTCTSDPL.      */
*/*                                                                  */
*/*    INPUT: SDUMP PARAMETER LIST BASED ON SDWSDPL. TRACE           */
*/*           INDICATORS IN CVT AND CHNGDUMP FLAGS IN THE RTMCT.     */
*/*                                                                  */
*/*    OUTPUT: ENVIRONMENT SET FOR DUMP AND INDICATORS IN THE CVT,   */
*/*            RTMCT AND ERRWORK AREA REFLECTING WHAT SVC DUMP DID.  */
*/*                                                                  */
*/*    INCLUDED BY: SDTOP                                            */
*/* ******************************************************************/
*                                                                  0381
*                           SVCDOPTS=SVCDOPTS&&SVCDOPTS;/* CLEAR DUMP
*                                      OPTIONS TO ZERO               */
         XC    SVCDOPTS(2,R7),SVCDOPTS(R7)                         0381
*/*  *****************************************************************/
*/*   THIS SECTION CALCULATES THE EFFECTIVE DUMP OPTIONS USING THE   */
*/*   THE CALLERS PARAMETER LIST AND THE RTCT SDUMP OPTION BITS.     */
*/*   IF NO CHNGDUMP COMMANDS HAVE BEEN ISSUED, THE RTCT BITS WILL   */
*/*   BE ZERO AND WILL HAVE NO EFFECT WHEN ORED WITH THE PARAMETER   */
*/*   LIST BITS                                              @G33VPHD*/
*/*  *****************************************************************/
*                                                                  0382
*                           IF RTCTSDMG='0'B THEN/* IF THESE OPTIONS
*                                      ADD MOD               @G33VPHD*/
         LA    @12,236                                             0382
         L     @08,CVTPTR                                          0382
         AL    @12,CVTRTMCT(,@08)                                  0382
         TM    RTCTSDMG(@12),B'00000010'                           0382
         BNZ   @RF00382                                            0382
*                             DO;   /* ADD RTCT OPTS TO PARMS      0383
*                                                            @G33VPHD*/
*                               SVCDOPT1=SDUSDAT1×RTCTSDO1;/* ADD 1ST
*                                      BYTE OPTIONS          @G33VPHD*/
         L     @08,SDWSDPL(,R7)                                    0384
         MVC   SVCDOPT1(1,R7),SDUSDAT1(@08)                        0384
         OC    SVCDOPT1(1,R7),RTCTSDO1(@12)                        0384
*                               SVCDOPT2=SDUSDAT2×RTCTSDO2;/* ADD 2ND
*                                      BYTE OPTIONS          @G33VPHD*/
         MVC   SVCDOPT2(1,R7),SDUSDAT2(@08)                        0385
         OC    SVCDOPT2(1,R7),RTCTSDO2(@12)                        0385
*                             END;  /* END ADD RTCT OPTIONS  @G33VPHD*/
*                           ELSE                                   0387
*                             DO;   /* PROCESS OVERRIDE OPTIONS    0387
*                                                            @G33VPHD*/
         B     @RC00382                                            0387
@RF00382 DS    0H                                                  0388
*                               SVCDOPT1=RTCTSDO1;/* OVERRIDE 1ST  0388
*                                      OPTION BYTE           @G33VPHD*/
         LA    @12,236                                             0388
         L     @08,CVTPTR                                          0388
         AL    @12,CVTRTMCT(,@08)                                  0388
         MVC   SVCDOPT1(1,R7),RTCTSDO1(@12)                        0388
*                               SVCDOPT2=RTCTSDO2;/* OVERRIDE 2ND  0389
*                                      OPTION BYTE           @G33VPHD*/
         MVC   SVCDOPT2(1,R7),RTCTSDO2(@12)                        0389
*                             END;  /* END RTCT OVERRIDE MODE      0390
*                                                            @G33VPHD*/
*                           RTCTASO=SVCDOPTS;/* COPY EFFECTIVE     0391
*                                      OPTIONS TO RTCT       @ZA19201*/
@RC00382 L     @12,CVTPTR                                          0391
         L     @12,CVTRTMCT(,@12)                                  0391
         MVC   RTCTASO(2,@12),SVCDOPTS(R7)                         0391
*                           ERRRETRY=ADDR(RTYENV10);/* NEXT RETRY  0392
*                                      LOCATION ADDRESS              */
         LA    @08,RTYENV10                                        0392
         ST    @08,ERRRETRY(,R3)                                   0392
*/*  *****************************************************************/
*/*   IF QUIESCE = NO WAS NOT SPECIFIED ON A CHNGDUMP COMMAND        */
*/*   THIS SECTION WILL DECIDE IF THE SYSTEM SHOULD BE SET           */
*/*   NON-DISPATCHABLE                                       @G33VPHD*/
*/*  *****************************************************************/
*                                                                  0393
*                           IF RTCTSDPH='0'B THEN/* IF QUIESCE=NO WAS
*                                      NOT                   @ZA30190
*                                      SPECIFIED ON A CHNGDUMP     0393
*                                      OPERATOR COMMAND, SEE IF    0393
*                                      SYSTEM SHOULD BE SET        0393
*                                      NON-DISPATCHABLE              */
         TM    RTCTSDPH+236(@12),B'01000000'                       0393
         BNZ   @RF00393                                            0393
*                             DO;                                  0394
*                               IF(SVCDNSQA='0'B×/* IF NOSQA NOT   0395
*                                      SPECIFIED             @G33VPHD*/
*                                   SVCDCSA='1'B)&/* OR CSA WAS    0395
*                                      SPECIFIED             @G33VPHD*/
*                                   (RTCTSDPG='1'B×/* AND QUIESCE=YES
*                                      REQRD                 @ZA30190*/
*                                   SDUQUIET='1'B) THEN/* RTCT OR  0395
*                                      PARAM LIST            @G33VPHD*/
         TM    SVCDCSA(R7),B'10000000'                             0395
         BNZ   @GL00027                                            0395
         TM    SVCDNSQA(R7),B'00000100'                            0395
         BO    @RF00395                                            0395
@GL00027 L     @12,CVTPTR                                          0395
         L     @12,CVTRTMCT(,@12)                                  0395
         TM    RTCTSDPG+236(@12),B'10000000'                       0395
         BO    @RT00395                                            0395
         L     @12,SDWSDPL(,R7)                                    0395
         TM    SDUQUIET(@12),B'00000010'                           0395
         BNO   @RF00395                                            0395
@RT00395 DS    0H                                                  0396
*                                 DO;/* SET THE SYSTEM NON-DISP    0396
*                                                            @G33VPHD*/
*                                   R13=WSALSDMP;/* SAVE AREA FOR SYS
*                                      RES MGR                       */
*                                                                  0397
         L     @08,ASCBPTR                                         0397
         L     @08,ASXBPTR(,@08)                                   0397
         L     @08,ASXBSPSA(,@08)                                  0397
         L     R13,WSALSDMP(,@08)                                  0397
*                                   /*********************************/
*                                   /*                               */
*                                   /* TELL SYSTEM RESOURCES MANAGER */
*                                   /* NOT TO SWAP OUT THIS ADDRESS  */
*                                   /* SPACE WHILE THE SYSTEM IS SET */
*                                   /* NON-DISPATCHABLE      @G33VPHD*/
*                                   /*                               */
*                                   /*********************************/
*                                                                  0398
*                                   GEN REFS(CVT,CVTOPTE)          0398
*(SYSEVENT DONTSWAP,ENTRY=BRANCH);                                 0398
         SYSEVENT DONTSWAP,ENTRY=BRANCH
*                                   RFY                            0399
*                                    (R0,                          0399
*                                     R1) RSTD;                    0399
*                                   RTCTSDND='1'B;/* INDICATE SVC  0400
*                                      DUMP SET SYSTEM             0400
*                                      NON-DISPATCHABLE IN RTMCT   0400
*                                                            @ZA04148*/
         L     @12,CVTPTR                                          0400
         L     @12,CVTRTMCT(,@12)                                  0400
         OI    RTCTSDND(@12),B'01000000'                           0400
*                                   R0=SYSDISP;/* SET SYSTEM       0401
*                                      NON-DISP. CODE                */
         LA    R0,9                                                0401
*                                   R1=NULL;/* NO TCB ADDRESS, SET 0402
*                                      FUNCTION                      */
         SLR   R1,R1                                               0402
*                                   R13=SDISPFLG;/* SVC DUMP       0403
*                                      DISPATCHABILITY FLG           */
         L     R13,@CF04457                                        0403
*                                   IF PSATOLD->TCBFX='0'B THEN/*  0404
*                                      DISALLOW ASYNC-       @ZA15224*/
         L     @08,PSATOLD                                         0404
         TM    TCBFX(@08),B'00000001'                              0404
         BNZ   @RF00404                                            0404
*                                    DO;/* RONOUS INTERRUPTS @ZA15224*/
*                                     PSATOLD->TCBFX='1'B;/* WHILE 0406
*                                      THE SYSTEM            @ZA15224*/
         OI    TCBFX(@08),B'00000001'                              0406
*                                     RTCTSDFX='1'B;/* IS          0407
*                                      NONDISPATCH-          @ZA15224*/
         OI    RTCTSDFX(@12),B'00000001'                           0407
*                                    END;/* ABLE.            @ZA15224*/
*                                   ELSE                           0409
*                                    ;/*                     @ZA15224*/
@RF00404 DS    0H                                                  0410
*                                   CALL STATUS;/* SET SYSTEM      0410
*                                      NON-DISPATCHABLE              */
         L     @12,CVTPTR                                          0410
         L     @12,SCVTSPTR(,@12)                                  0410
         L     @15,SCVTSTAT(,@12)                                  0410
         BALR  @14,@15                                             0410
*                                   RFY                            0411
*                                    (R0,                          0411
*                                     R1) UNRSTD;                  0411
*                                 END;                             0412
*                               ELSE                               0413
*                                 ;                                0413
@RF00395 DS    0H                                                  0414
*                             END;                                 0414
*                           ELSE                                   0415
*                             ;                                    0415
*                                                                  0415
@RF00393 DS    0H                                                  0416
*                           /*****************************************/
*                           /*                                       */
*                           /* THE TCBS IN THE CURRENT ADDRESS SPACE */
*                           /* (ONE TO BE DUMPED) ARE ALWAYS SET     */
*                           /* NON-DISPATCHABLE. EXCEPT FOR THE      */
*                           /* MASTER ADDRESS SPACE ALL TCBS, EXCEPT */
*                           /* THE TOP TCB (RCT OR ASM) AND THE      */
*                           /* CURRENT, ARE SET NON-DISPATCHABLE. IN */
*                           /* THE CASE OF THE MASTER ADDRESS SPACE, */
*                           /* THE DSS TCB AND THE COMMUNICATIONS TCB*/
*                           /* (COMM TASK) ARE NOT SET               */
*                           /* NON-DISPATCHABLE. NOTE: CURRENT TASK  */
*                           /* IS DUMP TASK OR TASK THAT ISSUED SVC  */
*                           /* 51                                    */
*                           /*                                       */
*                           /*****************************************/
*                                                                  0416
*RTYENV10:                                                         0416
*                           ERRRETRY=ADDR(RTYENV20);/* NEXT RETRY  0416
*                                      LOCATION ADDRESS              */
RTYENV10 LA    @12,RTYENV20                                        0416
         ST    @12,ERRRETRY(,R3)                                   0416
*                           RFY                                    0417
*                            (R0,                                  0417
*                             R1) RSTD;/*                    @G33VPHD*/
*                           R0=TCBSDISP;/* SET TCBS NON-DISP. CODE   */
         LA    R0,10                                               0418
*                           R1=ASXBFTCB;/* TOP TCB IN ADDRESS SPACE  */
         L     @12,ASCBPTR                                         0419
         L     @12,ASXBPTR(,@12)                                   0419
         L     R1,ASXBFTCB(,@12)                                   0419
*                           R1=R1->TCBLTC&HIGHBIT0;/* LAST ATTACHED
*                                      DAUGHTER, SET FUNCTION        */
         L     @12,TCBLTC(,R1)                                     0420
         N     @12,@CF04436                                        0420
         LR    R1,@12                                              0420
*                           R13=SDISPFLG;/* SVC DUMP DISP FLAG     0421
*                                                            @G33VPHD*/
         L     R13,@CF04457                                        0421
*                           ERRTCBND='1'B;/* TCBS IN ADDR SPACE    0422
*                                      NON-DISP.                     */
         OI    ERRTCBND(R3),B'00001000'                            0422
*                           RTCTSDAN(1)='1'B;/* INDICATE TASKS OF THE
*                                      ADDRESS SPACE SET           0423
*                                      NONDISPATCHABLE       @ZM45045*/
         L     @12,CVTPTR                                          0423
         L     @12,CVTRTMCT(,@12)                                  0423
         OI    RTCTSDAN(@12),B'00100000'                           0423
*                           DO WHILE(R1^=NULL);/* SET ALL DAUGHTERS
*                                      OF TOP TCB IN ADDRESS SPACE 0424
*                                      NON-DISP              @ZA12446*/
         B     @DE00424                                            0424
@DL00424 DS    0H                                                  0425
*                             IF R1->TCBTID^='FD'X&R1->TCBTID^='F9'X
*                               THEN/* IF NOT COMMTASK AND NOT DSS 0425
*                                      TCB                   @ZA12446*/
         CLI   TCBTID(R1),X'FD'                                    0425
         BE    @RF00425                                            0425
         CLI   TCBTID(R1),X'F9'                                    0425
         BE    @RF00425                                            0425
*                               CALL STATUS;/* SET THIS TCB NON-DISP
*                                                            @ZA12446*/
         L     @12,CVTPTR                                          0426
         L     @12,SCVTSPTR(,@12)                                  0426
         L     @15,SCVTSTAT(,@12)                                  0426
         BALR  @14,@15                                             0426
*                             ELSE                                 0427
*                               ;   /* SKIP COMMTASK AND DSS TCB   0427
*                                                            @ZA12446*/
@RF00425 DS    0H                                                  0428
*                             R1=R1->TCBNTC&HIGHBIT0;/* GO TO NEXT 0428
*                                      ATTACHED DAUGHTER TCB @ZA12446*/
         L     @12,TCBNTC(,R1)                                     0428
         N     @12,@CF04436                                        0428
         LR    R1,@12                                              0428
*                           END;    /* END SET ALL DAUGHTERS NON-DISP
*                                                            @ZA12446*/
@DE00424 LTR   R1,R1                                               0429
         BNZ   @DL00424                                            0429
*                           RFY                                    0430
*                            (R0,                                  0430
*                             R1) UNRSTD;/*                  @G33VPHD*/
*RTYENV20:                                                         0431
*                           ERRRETRY=ADDR(RTYTOP10);/* NEXT RETRY  0431
*                                      LOCATION ADDRESS              */
RTYENV20 LA    @12,RTYTOP10                                        0431
         ST    @12,ERRRETRY(,R3)                                   0431
*                           IF SVCDTRT='1'B×/* IF TRACE REQUESTED OR
*                                                            @ZA19201*/
*                               (SDUBRANH='0'B&SVCDNSMD='0'B) THEN/*
*                                      ENABLED SUMMARY DUMP  @ZA19201*/
         TM    SVCDTRT(R7),B'00000001'                             0432
         BO    @RT00432                                            0432
         L     @12,SDWSDPL(,R7)                                    0432
         TM    SDUBRANH(@12),B'00000001'                           0432
         BNZ   @RF00432                                            0432
         TM    SVCDNSMD(R7),B'00010000'                            0432
         BNZ   @RF00432                                            0432
@RT00432 DS    0H                                                  0433
*                             DO;   /* REQUESTED CHECK FOR SUPERVISOR
*                                      TRT OR GTF ACTIVE     @ZA19201*/
*                               IF CVTTRACE(2)='FA'X THEN/* IF     0434
*                                      SUPERVISOR TRT ACTIVE,      0434
*                                                            @ZA08114*/
         L     @12,CVTPTR                                          0434
         CLI   CVTTRACE+1(@12),X'FA'                               0434
         BNE   @RF00434                                            0434
*                                 DO;/* STOP IT                      */
*                                   RFY                            0436
*                                    (R10,                         0436
*                                     R11) RSTD;                   0436
*                                   CVTSDTRC='1'B;/* INDICATE SVC  0437
*                                      DUMP STOPPED SUPERVISOR TRACE
*                                      TABLE                         */
         OI    CVTSDTRC(@12),B'00000001'                           0437
*                                   R10=TRTACTVE;                  0438
         L     R10,@CF04461                                        0438
*                                   R11=TRTSTOP;                   0439
         L     R11,@CF04463                                        0439
*                                   CS(R10,R11,TRTCVTWD);/* IF TRACE
*                                      TAB ACTIVE, STOP IT           */
         L     @12,CVTPTR                                          0440
         CS    R10,@11,TRTCVTWD(@12)                               0440
*                                   RFY                            0441
*                                    (R10,                         0441
*                                     R11) UNRSTD;                 0441
*                                   CURRSTOP='1'B;/* INDICATE ON   0442
*                                      WHICH ENTRY THE TRT WAS     0442
*                                      STOPPED                       */
         L     @12,FLCTRACE                                        0442
         L     @12,TRTCURR(,@12)                                   0442
         OI    CURRSTOP(@12),B'10000000'                           0442
*                                 END;                             0443
*                               ELSE                               0444
*                                 ;                                0444
@RF00434 DS    0H                                                  0445
*                               IF CVTGTFAV='1'B&/* IF GTF ACTIVE, 0445
*                                      AND                   @ZA19201*/
*                                   SVCDTRT='1'B THEN/* TRACE      0445
*                                      REQUESTED RESERVE     @ZA19201*/
         L     @12,CVTPTR                                          0445
         TM    CVTGTFAV(@12),B'10000000'                           0445
         BNO   @RF00445                                            0445
         TM    SVCDTRT(R7),B'00000001'                             0445
         BNO   @RF00445                                            0445
*                                 DO;/* BUFFERS FOR DUMP             */
*                                   GEN(HOOK  EID=IEASVCD);        0447
         HOOK  EID=IEASVCD
*                                   ERRGTFGO='1'B;/* INDICATE WE WENT
*                                      TO GTF                        */
         OI    ERRGTFGO(R3),B'00000100'                            0448
*                                 END;                             0449
*                               ELSE                               0450
*                                 ;                                0450
@RF00445 DS    0H                                                  0451
*                             END;                                 0451
*                           ELSE                                   0452
*                             ;                                    0452
@RF00432 DS    0H                                                  0453
*                         END;      /* END VALIDATE AND SET DUMP   0453
*                                      ENVIRONMENT           @G33SPHD*/
*                       ELSE        /* IF SYSMDUMP GET OPTIONS     0454
*                                                            @G33SPHD*/
*                         DO;       /*                       @G33SPHD*/
         B     @RC00294                                            0454
@RF00294 DS    0H                                                  0455
*                           SVCDOPT1=SDUSDAT1;/* SDATA FLAGS FROM  0455
*                                      PARM LIST             @G33SPHD*/
         L     @12,SDWSDPL(,R7)                                    0455
         MVC   SVCDOPT1(1,R7),SDUSDAT1(@12)                        0455
*                           SVCDOPT2=SDUSDAT2;/* SDATA FLAGS FROM  0456
*                                      PARM LIST             @G33SPHD*/
         MVC   SVCDOPT2(1,R7),SDUSDAT2(@12)                        0456
*                         END;      /*                       @G33SPHD*/
*RTYTOP10:                                                         0458
*                       ERRRETRY=ADDR(RTYENDMP);/* RETRY LOCATION  0458
*                                      ADDRESS                       */
@RC00294 DS    0H                                                  0458
RTYTOP10 LA    @12,RTYENDMP                                        0458
         ST    @12,ERRRETRY(,R3)                                   0458
*                       LSTESTAE=ESTAELST;/* LIST FORM OF ESTAE TO 0459
*                                      WKAREA                        */
         MVC   LSTESTAE(16,R7),ESTAELST                            0459
*                       ERRORWK=ERRWORK;/* STATUS FOR ESTAE ERROR  0460
*                                      EXIT                          */
         MVC   ERRORWK(24,R7),ERRWORK(R3)                          0460
*                       RFY                                        0461
*                        (R1,                                      0461
*                         R10,                                     0461
*                         R11,                                     0461
*                         R4) RSTD; /*                       @G33VPHD*/
*                       R10=ADDR(ERRORWK);/* ADDRESS OF ESTAE ERR  0462
*                                      WKAREA                        */
         LA    R10,ERRORWK(,R7)                                    0462
*                       R11=ADDR(SDWRGSV1);/* ADDR OF SVC DUMP SAVE
*                                      AREA                  @G33VPHD*/
         LA    R11,SDWRGSV1(,R7)                                   0463
*                       R1=ADDR(LSTESTAE);/* ADDR OF LIST FORM OF  0464
*                                      MACRO                         */
         LA    R1,LSTESTAE(,R7)                                    0464
*                       R4=ADDRESTA;/* GET ADDRESS OF ESTAE ROUTINE
*                                                            @G33VPHD*/
         L     R4,ADDRESTA                                         0465
*                       GEN REFS(CVTMAP,CVTSV60);                  0466
         ESTAE (R4),TERM=YES,RECORD=YES,BRANCH=YES,                    ,
               PARAM=(R10),SVEAREA=(R11),MF=(E,(R1))
*                       R3=ADDR(ERRORWK);/* ADDR ESTAE ERROR WORK  0467
*                                      AREA                          */
         LA    R3,ERRORWK(,R7)                                     0467
*                       IF PSATOLD->TCBETERM='1'B THEN/* ESTAE EXIT
*                                      IS NOT TERM TYPE BECAUSE    0468
*                                      ALREADY IN TERM PROCESSING  0468
*                                                            @ZA04148*/
         L     @12,PSATOLD                                         0468
         TM    TCBETERM(@12),B'10000000'                           0468
         BNO   @RF00468                                            0468
*                         ERRNOTRM='1'B;/* INDICATE THAT EXIT IS NOT
*                                      TERM TO PREVENT RETRY, EXIT 0469
*                                      WILL NOT GET CONTROL AGAIN IF
*                                      RETRY FAILS, AND IT IS TOO  0469
*                                      DANGEROUS TO TRY      @ZA04148*/
         OI    ERRNOTRM(R3),B'10000000'                            0469
*                       ERRESTAE='1'B;/* ESTAE PROTECTION ACTIVE     */
@RF00468 OI    ERRESTAE(R3),B'01000000'                            0470
*                       GEN(SETFRR D,WRKREGS=(R10,R11))            0471
*                       REFS(PSACSTK,FRRSCURR,FRRS,FRRSEMP,FRRSELEN,
*                           FRRSCURR);/* RELEASE FRR         @G33VPHD*/
         SETFRR D,WRKREGS=(R10,R11)
*                       RFY                                        0472
*                        (R1,                                      0472
*                         R10,                                     0472
*                         R11,                                     0472
*                         R4) UNRSTD;/*                      @G33VPHD*/
*                       ERRFRR='0'B;/* FRR PROTECTION RELEASED       */
         NI    ERRFRR(R3),B'01111111'                              0473
*                       GEN                                        0474
*(SETLOCK RELEASE,TYPE=LOCAL,RELATED=(SVCDUMP,SLIH(SLIH)))         0474
*                       REFS(PSALITA);                             0474
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(SVCDUMP,SLIH(SLIH))
*                                                                  0475
*                       /*********************************************/
*                       /*                                           */
*                       /* THIS SEGMENT DOES THE ACTUAL DUMP. A      */
*                       /* SYS1.DUMP DATASET IS SELECTED IF THE      */
*                       /* CALLER DID NOT SUPPLY HIS OWN DATASET VIA */
*                       /* THE SDUMP MACRO DCB= OPERAND. IF THE      */
*                       /* CALLER REQUESTED THE 4K SQA BUFFER TO BE  */
*                       /* INCLUDED IN THE DUMP IT IS WRITTEN TO THE */
*                       /* DUMP DATASET. IF REQUESTED, THE CONTENTS  */
*                       /* OF THE 4K SQA BUFFER, COMPRISE THE DATA   */
*                       /* AREA OF THE FIRST RECORD IN THE DUMP      */
*                       /* DATASET. THE HEADER RECORD IS BUILT IN THE*/
*                       /* OUTPUT BUFFER AND WRITTEN OUT. THE ADDRESS*/
*                       /* RANGE TABLE IS BUILT IN THE 4K SQA BUFFER.*/
*                       /* ANY GLOBAL AREAS (PSA,SQA,CSA) ARE THEN   */
*                       /* DUMPED. IF THE SYSTEM WAS SET             */
*                       /* NON-DISPATCHABLE, IT IS SET DISPATCHABLE. */
*                       /* THE REMAINING REQUESTED AREAS ARE THEN    */
*                       /* DUMPED. IF TRT WAS REQUESTED AND GTF IS   */
*                       /* ACTIVE, TRACE RECORDS ARE OBTAINED FROM   */
*                       /* GTF AND WRITTEN OUT                       */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0475
*                       R13=ADDR(SDWRGSV1);/* GET ADDR OF REG SAVE 0475
*                                      AREA                  @G33VPHD*/
         LA    R13,SDWRGSV1(,R7)                                   0475
*                       IF ERRENDMP='0'B THEN/* IF NO ERRORS SO FAR
*                                                            @G33VPHD*/
         TM    ERRENDMP(R3),B'01000000'                            0476
         BNZ   @RF00476                                            0476
*                         DO;       /* INITIALIZE DUMP DATA SET    0477
*                                                            @G33VPHD*/
*                           CALL IEAVTSDH;/* CHOOSE AND INITIALIZE 0478
*                                      DUMP DATA SET         @G33VPHD*/
         L     @15,@CV04552                                        0478
         BALR  @14,@15                                             0478
*                           ERRBASE1=R9;/* RESTORE BASE REGISTER   0479
*                                      VALUE                 @G33VPHD*/
         ST    R9,ERRBASE1(,R3)                                    0479
*                           ERRBASE2=R6;/* RESTORE BASE REGISTER FOR
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0480
*                           SVCDMPNM=CSECTNAM;/* RESTORE PROPER CSECT
*                                      NAME                  @G33VPHD*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0481
*                         END;      /* END INITIALIZE DUMP DATA SET
*                                                            @G33VPHD*/
*                       ERRRETRY=ADDR(RTYDMP35);/* NEXT RETRY      0483
*                                      LOCATION ADDRESS      @G33VPHD*/
@RF00476 LA    @12,RTYDMP35                                        0483
         ST    @12,ERRRETRY(,R3)                                   0483
*                       IF ERRENDMP='0'B&/* IF NO ERRORS SO FAR AND
*                                                            @ZM45052*/
*                           SVCDNSMD='0'B THEN/* SUMDUMP IS NOT    0484
*                                      RESTRICTED            @ZM45052*/
         TM    ERRENDMP(R3),B'01000000'                            0484
         BNZ   @RF00484                                            0484
         TM    SVCDNSMD(R7),B'00010000'                            0484
         BNZ   @RF00484                                            0484
*                         DO;       /* TAKE AN ENABLED SUMMARY DUMP
*                                      OF THIS ADDRESS SPACE @ZM45052*/
*                           SMWKPSSE=NULL;/* ZERO POINTER FIELD FOR
*                                      SUMDUMP               @ZA19201*/
         L     @12,CVTPTR                                          0486
         L     @12,CVTRTMCT(,@12)                                  0486
         L     @12,RTCTSDSW(,@12)                                  0486
         SLR   @08,@08                                             0486
         ST    @08,SMWKPSSE(,@12)                                  0486
*                           CALL IEAVTSSE;/* INVOKE ENABLED SUMMARY
*                                      DUMP PROCESSOR        @ZM45052*/
         L     @15,@CV04555                                        0487
         BALR  @14,@15                                             0487
*                           ERRBASE1=R9;/* RESTORE BASE REGISTER   0488
*                                      VALUE                 @ZM45052*/
         ST    R9,ERRBASE1(,R3)                                    0488
*                           ERRBASE2=R6;/* RESTORE BASE REGISTER FOR
*                                      RECOVERY              @ZM45052*/
         ST    R6,ERRBASE2(,R3)                                    0489
*                           SVCDMPNM=CSECTNAM;/* RESTORE PROPER CSECT
*                                      NAME                  @ZM45052*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0490
*                         END;      /* END DUMP ENABLED SUMMARY DUMP
*                                                            @ZM45052*/
*RTYDMP35:                                                         0492
*                       ERRRETRY=ADDR(RTYDMP40);/* NEXT RETRY ADDRESS
*                                                            @G33VPHD*/
@RF00484 DS    0H                                                  0492
RTYDMP35 LA    @12,RTYDMP40                                        0492
         ST    @12,ERRRETRY(,R3)                                   0492
*                       IF ERRENDMP='0'B THEN/* IF NO ERRORS SO FAR
*                                                            @G33VPHD*/
         TM    ERRENDMP(R3),B'01000000'                            0493
         BNZ   @RF00493                                            0493
*                         DO;       /* DUMP GLOBAL AREAS     @G33VPHD*/
*                           CALL IEAVTSDG;/* DUMP GLOBAL STORAGE   0495
*                                      AREAS                 @G33VPHD*/
         L     @15,@CV04551                                        0495
         BALR  @14,@15                                             0495
*                           ERRBASE1=R9;/* RESTORE BASE REGISTER   0496
*                                      VALUE                 @G33VPHD*/
         ST    R9,ERRBASE1(,R3)                                    0496
*                           ERRBASE2=R6;/* RESTORE BASE REGISTER FOR
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0497
*                           SVCDMPNM=CSECTNAM;/* RESTORE PROPER CSECT
*                                      NAME                  @G33VPHD*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0498
*                         END;      /* END DUMP GLOBAL AREA  @G33VPHD*/
*RTYDMP40:                                                         0500
*                       ERRRETRY=ADDR(RTYDMP70);/* NEXT RETRY      0500
*                                      LOCATION ADDRESS      @G33VPHD*/
@RF00493 DS    0H                                                  0500
RTYDMP40 LA    @12,RTYDMP70                                        0500
         ST    @12,ERRRETRY(,R3)                                   0500
*                       IF ERRENDMP='0'B THEN/* IF NO ERRORS SO FAR
*                                                            @G33VPHD*/
         TM    ERRENDMP(R3),B'01000000'                            0501
         BNZ   @RF00501                                            0501
*                         DO;       /* DUMP LOCAL STORAGE AREAS    0502
*                                                            @G33VPHD*/
*                           CALL IEAVTSDL;/* DUMP LOCAL STORAGE    0503
*                                                            @G33VPHD*/
         L     @15,@CV04553                                        0503
         BALR  @14,@15                                             0503
*                           ERRBASE1=R9;/* RESTORE BASE REGISTER   0504
*                                      VALUE                 @G33VPHD*/
         ST    R9,ERRBASE1(,R3)                                    0504
*                           ERRBASE2=R6;/* RESTORE BASE REGISTER FOR
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0505
*                           SVCDMPNM=CSECTNAM;/* RESTORE PROPER CSECT
*                                      NAME                  @G33VPHD*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0506
*                         END;      /* END DUMP LOCAL STORAGE AREAS
*                                                            @G33VPHD*/
*                                                                  0508
*/* ******************************************************************/
*/* THIS SECTION DUMPS THE GTF RECORDS ON THE DUMP DATA SET IF TRACE */
*/* IS REQUESTED, GTF IS ACTIVE, THE HOOK MACRO IS ISSUED AND THIS   */
*/* IS NOT A SYSMDUMP REQUEST.  NOTE:A RESTRICTION CURRENTLY EXISTS  */
*/* WHICH KEEPS GTF RECORDS FROM BEING INCLUDED IN SYSMDUMPS @G33VPHD*/
*/* ******************************************************************/
*                                                                  0508
*RTYDMP70:                                                         0508
*                       ERRRETRY=ADDR(RTYENDMP);/* NEXT RETRY      0508
*                                      LOCATION ADDRESS              */
@RF00501 DS    0H                                                  0508
RTYDMP70 LA    @12,RTYENDMP                                        0508
         ST    @12,ERRRETRY(,R3)                                   0508
*                       IF ERRENDMP='0'B&/* IF DUMP CAN CONTINUE AND */
*                           SVCDTRT='1'B&/* TRT WAS REQUESTED AND    */
*                           CVTGTFAV='1'B&/* GTF IS ACTIVE AND       */
*                           SDUABEND='0'B&/* AND NOT A SYSMDUMP    0509
*                                                            @G33VPHD*/
*                           ERRGTFGO='1'B THEN/* HOOK MACRO WAS    0509
*                                      ISSUED                        */
         TM    ERRENDMP(R3),B'01000000'                            0509
         BNZ   @RF00509                                            0509
         TM    SVCDTRT(R7),B'00000001'                             0509
         BNO   @RF00509                                            0509
         L     @12,CVTPTR                                          0509
         TM    CVTGTFAV(@12),B'10000000'                           0509
         BNO   @RF00509                                            0509
         L     @12,SDWSDPL(,R7)                                    0509
         TM    SDUABEND(@12),B'01000000'                           0509
         BNZ   @RF00509                                            0509
         TM    ERRGTFGO(R3),B'00000100'                            0509
         BNO   @RF00509                                            0509
*                         DO;                                      0510
*                           CALL IEAVTSDF;/* INCLUDE GTF TRACE     0511
*                                      RECORDS               @G33VPHD*/
         L     @15,@CV04550                                        0511
         BALR  @14,@15                                             0511
*                           ERRBASE1=R9;/* RESTORE BASE REGISTER   0512
*                                      VALUE                 @G33VPHD*/
         ST    R9,ERRBASE1(,R3)                                    0512
*                           ERRBASE2=R6;/* RESTORE BASE REGISTER FOR
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0513
*                           SVCDMPNM=CSECTNAM;/* RESTORE CSECT NAME
*                                      VALUE                 @G33VPHD*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0514
*                         END;                                     0515
*RTYENDMP:                                                         0516
*                       ERRRETRY=ADDR(RTYEND80);/* NEXT RETRY      0516
*                                      LOCATION ADDRESS              */
@RF00509 DS    0H                                                  0516
RTYENDMP LA    @12,RTYEND80                                        0516
         ST    @12,ERRRETRY(,R3)                                   0516
*                       CALL IEAVTSDC;/* CLEAN UP AND REMOVE DUMP  0517
*                                      ENVIRONMENT           @G33VPHD*/
         L     @15,@CV04549                                        0517
         BALR  @14,@15                                             0517
*                       ERRBASE1=R9;/* RESTORE PROPER BASE REGISTER
*                                      VALUE                 @G33VPHD*/
         ST    R9,ERRBASE1(,R3)                                    0518
*                       ERRBASE2=R6;/* RESTORE BASE REGISTER FOR   0519
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0519
*                       SVCDMPNM=CSECTNAM;/* RESTORE PROPER CSECT  0520
*                                      NAME                  @G33VPHD*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0520
*RTYEND80:                                                         0521
*                       ERRRETRY=NULL;/* NO RETRY ADDRESS PERC     0521
*                                                            @G33VPHD*/
RTYEND80 SLR   @12,@12                                             0521
         ST    @12,ERRRETRY(,R3)                                   0521
*/* ******************************************************************/
*/*  THIS SECTION OF CODE ALWAYS RUNS HOLDING THE LOCAL LOCK. FRR    */
*/*  PROTECTION IS NECESSARY AND IT IS POSSIBLE THAT NO  FRR WILL    */
*/*  EXIST IF A PREVIOUS ERROR HAS OCCURRED.                 @G33VPHD*/
*/* ******************************************************************/
*                                                                  0522
*                       IF ERRFRR='0'B THEN/* IF NO FRR, CREATE ONE
*                                                            @G33VPHD*/
         TM    ERRFRR(R3),B'10000000'                              0522
         BNZ   @RF00522                                            0522
*                         DO;       /*                       @G33VPHD*/
*                           ERRFRR='1'B;/* INDICATE FRR EXISTS     0524
*                                                            @G33VPHD*/
         OI    ERRFRR(R3),B'10000000'                              0524
*                           GEN REFS(ADDRFRR,PSA,PSACSTK,FRRS,FRRSCURR,
*                               FRRSLAST,PSALSFCC,FRRSFRRA,FRRSENTR,
*                               FRRSPARM);                         0525
*                                             /* GET FRR     @G33VPHD*/
      SETFRR  A,FRRAD=ADDRFRR,PARMAD=(R3),WRKREGS=(R10,R11)
*                           ERRWORK=ERRORWK;/* SAVE CURRENT STATUS 0526
*                                                            @G33VPHD*/
         MVC   ERRWORK(24,R3),ERRORWK(R7)                          0526
*                         END;      /* END OF CREATE AN FRR EXIT   0527
*                                                            @G33VPHD*/
*                       IF ERRESTAE='1'B THEN/* IF ESTAE ERROR EXIT
*                                      ACTIVE                @G33VPHD*/
@RF00522 TM    ERRESTAE(R3),B'01000000'                            0528
         BNO   @RF00528                                            0528
*                         DO;       /* DELETE IT             @G33VPHD*/
*                           R13=ADDR(SDWRGSV1);/* ADDR OF SVC DUMP 0530
*                                      WSAVE                 @G33VPHD*/
         LA    R13,SDWRGSV1(,R7)                                   0530
*                           GEN(ESTAE 0,BRANCH=YES,SVEAREA=(R13))  0531
*                           REFS(CVTMAP,CVTSV60);/* DELETE ESTA EXIT
*                                                            @G33VPHD*/
         ESTAE 0,BRANCH=YES,SVEAREA=(R13)
*                           ERRESTAE='0'B;/* INDICATE ESTAE EXIT   0532
*                                      DELETED               @G33VPHD*/
         NI    ERRESTAE(R3),B'10111111'                            0532
*                         END;      /* END OF ESTAE EXIT ACTIVE    0533
*                                                            @G33VPHD*/
*                       RFY                                        0534
*                         R15 RSTD;                                0534
@RF00528 DS    0H                                                  0535
*                       R15=SDRETCOD;/* SAVE RETURN CODE FOR CALLER
*                                                            @ZM45047*/
         L     R15,SDRETCOD(,R7)                                   0535
*                     END;          /* END OF A DUMP CAN BE TAKEN  0536
*                                                            @G33VPHD*/
*                   ELSE                                           0537
*                     R15=NODUMP;   /* INDICATE NO DUMP CAN BE TAKEN
*                                                            @ZM45047*/
         B     @RC00281                                            0537
@RF00281 LA    R15,8                                               0537
*                                                                  0538
*/********************************************************************/
*/*   THIS SEGMENT WILL REMOVE SVC DUMP SERIALIZATION IF SVC DUMP    */
*/*   WAS SERIALIZED BY IEAVAD00(DUMP WAS NOT SCHEDULED).  THE       */
*/*   SVC DUMP LOCK (RTCTSDPL) AND THE 4K SQA BUFFER LOCK(CVTSDBF)   */
*/*   WILL BE FREED.                                                 */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA                                            */
*/*                                                                  */
*/*   OUTPUT: SVC DUMP IS UNLOCKED                                   */
*/*                                                                  */
*/*   INCLUDED BY: SDFRR,SDESTAE                                     */
*/********************************************************************/
*                                                                  0538
*                   IF ERRBFBIT='1'B&/* IF DUMP SERIALIZED AND     0538
*                                                            @ZM44940*/
*                       SDUABEND='0'B THEN/* THIS IS NOT A SYSMDUMP
*                                      REQUEST               @ZM44940*/
@RC00281 TM    ERRBFBIT(R3),B'00010000'                            0538
         BNO   @RF00538                                            0538
         L     @14,SDWSDPL(,R7)                                    0538
         TM    SDUABEND(@14),B'01000000'                           0538
         BNZ   @RF00538                                            0538
*                     DO;           /* RELEASE SVC DUMP LOCK FLAGS   */
*                       RTCTSDI=RTCTSDI&&RTCTSDI;/* CLEAR RTCT FLAGS
*                                                            @ZM44940*/
         L     @14,CVTPTR                                          0540
         L     @14,CVTRTMCT(,@14)                                  0540
         XC    RTCTSDI(3,@14),RTCTSDI(@14)                         0540
*                       RTCTSDF=RTCTSDF&&RTCTSDF;/* CLEAR RTCT FLAGS
*                                                            @ZM44940*/
         XC    RTCTSDF(4,@14),RTCTSDF(@14)                         0541
*                       DO RTCTINDX=ONE TO MAXENTRY;/* CLEAR WHOLE 0542
*                                      ARRAY                 @ZM44940*/
         LA    @14,1                                               0542
         L     @12,CVTPTR                                          0542
         L     @12,CVTRTMCT(,@12)                                  0542
         STC   @14,RTCTINDX(,@12)                                  0542
@DL00542 DS    0H                                                  0543
*                         RTCTSDF3(RTCTINDX)=NULL;/* CLEAR ARRAY   0543
*                                      FLAGS                 @ZM44940*/
         L     @14,CVTPTR                                          0543
         L     @14,CVTRTMCT(,@14)                                  0543
         SLR   @12,@12                                             0543
         IC    @12,RTCTINDX(,@14)                                  0543
         SLA   @12,2                                               0543
         SLR   @08,@08                                             0543
         ALR   @14,@12                                             0543
         STCM  @08,15,RTCTSDF3-4(@14)                              0543
*                       END;        /* END OF CLEAR WHOLE ARRAY    0544
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0544
         L     @12,CVTRTMCT(,@12)                                  0544
         LA    @14,1                                               0544
         SLR   @08,@08                                             0544
         IC    @08,RTCTINDX(,@12)                                  0544
         ALR   @14,@08                                             0544
         L     @12,CVTPTR                                          0544
         L     @12,CVTRTMCT(,@12)                                  0544
         STC   @14,RTCTINDX(,@12)                                  0544
         C     @14,@CF01016                                        0544
         BNH   @DL00542                                            0544
*                       RTCTSDID=NULL;/* SVC DUMP NOT ACTIVE IN ANY
*                                      ADDRESS SPACE                 */
         SLR   @14,@14                                             0545
         L     @12,CVTPTR                                          0545
         L     @08,CVTRTMCT(,@12)                                  0545
         STH   @14,RTCTSDID(,@08)                                  0545
*                       SDWSDPL=NULL;/* ZERO PARM LIST ADDRESS     0546
*                                                            @G33VPHD*/
         ST    @14,SDWSDPL(,R7)                                    0546
*                       RTCTSDPL=NULL;/* UNLOCK SVC DUMP             */
         ST    @14,RTCTSDPL(,@08)                                  0547
*                       CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA  0548
*                                      BUFFER                        */
         L     @14,CVTSDBF(,@12)                                   0548
         N     @14,@CF04436                                        0548
         ST    @14,CVTSDBF(,@12)                                   0548
*                     END;                                         0549
*                   ELSE                                           0550
*                     ;                                            0550
@RF00538 DS    0H                                                  0551
*                   GEN(SETFRR D,WRKREGS=(R10,R11))                0551
*                   REFS(PSACSTK,FRRSCURR,FRRS,FRRSEMP,FRRSELEN);/*
*                                      DELETE THE FRR        @G33VPHD*/
         SETFRR D,WRKREGS=(R10,R11)
*                 END;                                             0552
*             END;                                                 0553
*         END;                                                     0554
*       ELSE                        /* PARAM LIST IS INVALID         */
*         DO;                                                      0555
         B     @RC00190                                            0555
@RF00190 DS    0H                                                  0556
*           R15=RSN08;              /* PUT REASON CODE IN REG      0556
*                                                            @G33VPHD*/
         LA    R15,8                                               0556
*           GEN(ABEND X'233',DUMP,,SYSTEM);/* INVALID PARMS COMP CODE*/
         ABEND X'233',DUMP,,SYSTEM
*         END;                                                     0558
*     END;                                                         0559
@RC00190 DS    0H                                                  0560
*   RFY                                                            0560
*     R14 RSTD;                                                    0560
@RC00184 DS    0H                                                  0561
*   R14=CVTEXPRO;                   /* SET EXIT ADDRESS (R14) TO   0561
*                                      ADDRESS OF EXIT PROLOGUE FOR
*                                      PLS END STATEMENT. THE EXIT 0561
*                                      PROLOGUE WILL FREE THE LOCAL
*                                      LOCK IF IT IS STILL HELD      */
         L     @12,CVTPTR                                          0561
         L     R14,CVTEXPRO(,@12)                                  0561
*   RETURN CODE(R15);               /* PASS PERMANENT RETURN CODE  0562
*                                      BACK TO CALLER        @G33VPHD*/
@EL00001 DS    0H                                                  0562
@EF00001 DS    0H                                                  0562
@ER00001 BR    @14                                                 0562
*                                                                  0563
*/********************************************************************/
*/*  INTERNAL PROCEDURE - SDXMPOST                                   */
*/*                                                                  */
*/*  FUNCTION - THIS INTERNAL PROCEDURE IS USED BY THE FRR AND       */
*/*             ESTAE RECOVERY ROUTINES TO POST THE CALLERS ECB,     */
*/*             IF ONE WAS SUPPLIED.  AN ECB WILL ONLY BE SUPPLIED   */
*/*             FOR SCHEDULED DUMP REQUESTS.                         */
*/*                                                                  */
*/*  INPUT - SVC DUMP PARAMETER LIST, CALLER SPECIFED ECB            */
*/*                                                                  */
*/*  CALLERS - SDFRRRTN, SDESTAEX                                    */
*/*                                                                  */
*/********************************************************************/
*                                                                  0563
*SDXMPOST:                                                         0563
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0563
SDXMPOST DS    0H                                                  0564
*   RFY                                                            0564
*    (R15,                                                         0564
*     R14) RSTD;                                                   0564
*   SDUECB='0'B;                    /* INSURE ECB POSTED ONCE      0565
*                                                            @G33VPHD*/
         L     @12,SDWSDPL(,R7)                                    0565
         NI    SDUECB(@12),B'11110111'                             0565
*   RFY                                                            0566
*    (R10,                                                         0566
*     R11,                                                         0566
*     R4,                                                          0566
*     R5,                                                          0566
*     R1) RSTD;                     /*                       @G33VPHD*/
*   IF ASVTAVAL(SDUCASID)='0'B&     /* IF CALLERS ASID       @G33VPHD*/
*       SDUECBAD^=NULL THEN         /* AND ECB ARE VALID     @G33VPHD*/
         LH    @08,SDUCASID(,@12)                                  0567
         N     @08,@CF04671                                        0567
         SLA   @08,2                                               0567
         L     @02,CVTPTR                                          0567
         L     @00,ASVTPTR(,@02)                                   0567
         LR    @12,@00                                             0567
         ALR   @12,@08                                             0567
         TM    ASVTAVAL-4(@12),B'10000000'                         0567
         BNZ   @RF00567                                            0567
         L     @12,SDWSDPL(,R7)                                    0567
         L     @12,SDUECBAD(,@12)                                  0567
         LTR   @12,@12                                             0567
         BZ    @RF00567                                            0567
*     DO;                           /* POST THE CALLERS ECB  @G33VPHD*/
*       R10=ASVTENTY(SDUCASID);     /* OBTAIN ASCB ADDR      @G33VPHD*/
         LR    @02,@00                                             0569
         L     R10,ASVTENTY-4(@08,@02)                             0569
*       SVCDLPST=POSTLIST;          /* MOVE LIST FORM OF POST      0570
*                                                            @G33VPHD*/
         MVC   SVCDLPST(12,R7),POSTLIST                            0570
*       R11=SDRETCOD;               /* OBTAIN PERMANENT RETURN CODE
*                                                            @G33VPHD*/
         L     R11,SDRETCOD(,R7)                                   0571
*       R4=SDUECBAD;                /* OBTAIN CALLERS ECB ADDR     0572
*                                                            @G33VPHD*/
         LR    R4,@12                                              0572
*       R5=ADDR(CVTBRET);           /* ADDR BR14 POST ERROR  @G33VPHD*/
         L     @12,CVTPTR                                          0573
         LA    R5,CVTBRET(,@12)                                    0573
*       R1=ADDR(SVCDLPST);          /* GET ADDR POST LIST FORM     0574
*                                                            @G33VPHD*/
         LA    R1,SVCDLPST(,R7)                                    0574
*       GEN;                                                       0575
*                                 /*POST USERS ECB           @G33VPHD*/
         POST  (R4),(R11),ASCB=(R10),ERRET=(R5),MF=(E,(1))
*       RTCTSDEP='1'B;              /* INDICATE CALLER ECB HAS BEEN
*                                      POSTED                @G33VPHD*/
         L     @12,CVTPTR                                          0576
         L     @12,CVTRTMCT(,@12)                                  0576
         OI    RTCTSDEP(@12),B'00001000'                           0576
*     END;                          /* END POST CALLERS ECB  @G33VPHD*/
*   RFY                                                            0578
*    (R10,                                                         0578
*     R11,                                                         0578
*     R4,                                                          0578
*     R5,                                                          0578
*     R1) UNRSTD;                   /*                       @G33VPHD*/
*   END SDXMPOST;                                                  0579
@EL00002 DS    0H                                                  0579
@EF00002 DS    0H                                                  0579
@ER00002 BR    @14                                                 0579
*                                                                  0580
*/********************************************************************/
*/*   THIS SEGMENT CONTAINS THE FRR FOR SVC DUMP.  THE FRR IS        */
*/*   ACTIVE WHILE SVC DUMP OWNS A LOCK AND WISHES TO RETRY IN       */
*/*   THE LOCKED STATE.  THE FRR WILL RETRY WHEN IT CAN, ELSE IT     */
*/*   WILL CLEANUP AND PERCOLATE.  RECORDING WILL BE REQUESTED       */
*/*   UNLESS TURNED OFF BY MAINLINE SVCDUMP(ERRNORCD=1).  THIS FRR   */
*/*   IS USED FOR BOTH SCHEDULED AND SVC ENTRY SVC DUMPS AS WELL     */
*/*   AS FOR SYSMDUMP PROCESSING.                                    */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA, SDWA                                      */
*/*                                                                  */
*/*   OUTPUT: RETRY OR PERCOLATION                                   */
*/********************************************************************/
*                                                                  0580
*SDFRRRTN:                                                         0580
*   ENTRY;                                                         0580
@EP00580 DS    0H                                                  0581
*   RFY                                                            0581
*     R1 RSTD;                                                     0581
*   RFY                                                            0582
*     SDWA BASED(R1);               /* ADDRESS OF SDWA IN PARMLPTR   */
*   R3=SDWAPARM;                    /* RESTORE ADDR OF FRR 6 WORDS   */
         L     R3,SDWAPARM(,R1)                                    0583
*   R7=ERRWKADR;                    /* RESTORE WORK AREA ADDRESS     */
         L     R7,ERRWKADR(,R3)                                    0584
*   SDWAMODN=SVC51NAM;              /* ID FRR, LOAD MODULE NAME      */
         MVC   SDWAMODN(8,R1),@CC04468                             0585
*   SDWACSCT=SVCDMPNM;              /* ID FRR, CSECT NAME            */
         MVC   SDWACSCT(8,R1),SVCDMPNM(R7)                         0586
*   SDWAREXN=SDFRRNAM;              /* ID FRR, FRR NAME              */
         MVC   SDWAREXN(8,R1),@CC04472                             0587
*   SDWAHEX='1'B;                   /* VAR RECORD AREA IN HEX        */
         OI    SDWAHEX(R1),B'10000000'                             0588
*   SDWAURAL=LENGTH(ERRWORK);       /* LEN OF VAR DATA TO RECORD     */
         MVI   SDWAURAL(R1),X'18'                                  0589
*   SDWAVRA=ERRWORK;                /* RECORD FRR 6 WORD WORK AREA   */
         MVI   SDWAVRA+24(R1),C' '                                 0590
         MVC   SDWAVRA+25(83,R1),SDWAVRA+24(R1)                    0590
         MVC   SDWAVRA(24,R1),ERRWORK(R3)                          0590
*   IF SDWACLUP='0'B&               /* IF RETRY IS ALLOWED AND       */
*       SDWACMPC^=BADPARMS&         /* BAD PARMS NOT PASSED AND      */
*       ERRRETRY^=NULL&             /* A VALID RETRY ADDR    @ZA01943*/
*       ERRRETRY^=R3 THEN           /* AND NOT RETRY ERROR   @ZA01943*/
         TM    SDWACLUP(R1),B'10000000'                            0591
         BNZ   @RF00591                                            0591
         CLC   SDWACMPC(3,R1),@CB04476                             0591
         BE    @RF00591                                            0591
         L     @12,ERRRETRY(,R3)                                   0591
         LTR   @12,@12                                             0591
         BZ    @RF00591                                            0591
         CR    @12,R3                                              0591
         BE    @RF00591                                            0591
*     DO;                                                          0592
*       IF ERRCUDMP='1'B&           /* IF A DUMP WAS TAKEN   @G33VPHD*/
*           ERRENDMP='0'B THEN      /* AND IF THIS DUMP IS NOT     0593
*                                      TERMINATED            @G33VPHD*/
         TM    ERRCUDMP(R3),B'00000100'                            0593
         BNO   @RF00593                                            0593
         TM    ERRENDMP(R3),B'01000000'                            0593
         BNZ   @RF00593                                            0593
*         DO;                       /* CHECK FOR MODIFICATIONS       */
*           IF ERRRETRY=ADDR(RTYENDMP)×/* IF DUMP WILL END   @ZM44940*/
*               ERRRETRY=ADDR(RTYEND80)×/* OR DUMP IS COMPLETE     0595
*                                                            @ZM44940*/
*               ERRINIO='1'B×       /* OR ERROR OCURRED DURING I/O 0595
*                                                            @ZM45195*/
*               ERRSRBSD='1'B×      /* OR SCHEDULING SRBS    @ZM45208*/
*               ERRCDOUT='0'B THEN  /* OR NO RECORDS WRITTEN @ZM45195*/
         LA    @08,RTYENDMP                                        0595
         CR    @12,@08                                             0595
         BE    @RT00595                                            0595
         LA    @08,RTYEND80                                        0595
         CR    @12,@08                                             0595
         BE    @RT00595                                            0595
         TM    ERRINIO(R3),B'10000000'                             0595
         BO    @RT00595                                            0595
         TM    ERRSRBSD(R3),B'00000010'                            0595
         BO    @RT00595                                            0595
         TM    ERRCDOUT(R3),B'00000001'                            0595
         BNZ   @RF00595                                            0595
@RT00595 DS    0H                                                  0596
*             DO;                   /* MODIFY RETURN CODE            */
*               IF ERRCDOUT='0'B THEN/* IF NO RCDS IN D.S.           */
         TM    ERRCDOUT(R3),B'00000001'                            0597
         BNZ   @RF00597                                            0597
*                 DO;               /* INDICATE NODUMP AND END DUMP
*                                                            @ZM45195*/
*                   ERRENDMP='1'B;  /* INDICATE END THIS DUMP      0599
*                                                            @ZM45195*/
         OI    ERRENDMP(R3),B'01000000'                            0599
*                   SDRETCOD=NODUMP;/* IND NO DUMP TAKEN             */
         MVC   SDRETCOD(4,R7),@CF00060                             0600
*                 END;              /* INDICATE END DUMP AND NODUMP
*                                                            @ZM45195*/
*               ELSE                                               0602
*                 SDRETCOD=PARTDUMP;/* PARTIAL DUMP TAKEN            */
         B     @RC00597                                            0602
@RF00597 MVC   SDRETCOD(4,R7),@CF00054                             0602
*               IF ERRINIO='1'B THEN/* IF ERROR DURING I/O   @ZM44940*/
@RC00597 TM    ERRINIO(R3),B'10000000'                             0603
         BNO   @RF00603                                            0603
*                 ERRENDMP='1'B;    /* TERMINATE THE DUMP    @ZM44940*/
         OI    ERRENDMP(R3),B'01000000'                            0604
*             END;                                                 0605
*           ELSE                                                   0606
*             ;                                                    0606
@RF00595 DS    0H                                                  0607
*         END;                                                     0607
*       ELSE                                                       0608
*         ;                                                        0608
@RF00593 DS    0H                                                  0609
*       RFY                                                        0609
*        (R10,                                                     0609
*         R11) RSTD;                                               0609
@RC00593 DS    0H                                                  0610
*       R10=R14;                    /* SAVE RET ADDR, SETRP DESTRYS  */
         LR    R10,R14                                             0610
*       R11=ERRRETRY;               /* ADDRESS OF RETRY LOCATION     */
         L     R11,ERRRETRY(,R3)                                   0611
*       RFY                                                        0612
*         RTYADDR BASED(R11);       /* RETRY ADDRESS IN WORKB        */
*       ERRRUBSW=REGFLGS;           /* BUILD RUB FOR SETRP           */
         MVC   ERRRUBSW(2,R3),@CB04480                             0613
*       ERRADDR=R3;                 /* HAVE SETRP PRIME ERR WK ADDR  */
         ST    R3,ERRADDR(,R3)                                     0614
*       DO;                         /* SETRP RETADDR(RTYADDR)RETREGS(
*                                      YES)RUB(ERRRUBSW)RC(4)        */
*         RESPECIFY                                                0616
*          (GPR00P,                                                0616
*           GPR01P,                                                0616
*           GPR14P,                                                0616
*           GPR15P) RSTD;                                          0616
*         GPR01P->SDWARCDE=4;       /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0617
*         GPR01P->SDWARTYA=ADDR(RTYADDR);/* SAVE RETRY ADDRESS       */
         ST    R11,SDWARTYA(,GPR01P)                               0618
*         GPR01P->SDWAUPRG='1'B;    /* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0619
*         GPR15P=ADDR(ERRRUBSW);    /* GET PTR TO REG UPDATE BLOCK   */
         LA    GPR15P,ERRRUBSW(,R3)                                0620
*         GPR00P=GPR15P->I015F;     /* ACCESS REGISTER BIT PATTERN   */
         LH    GPR00P,I015F(,GPR15P)                               0621
*         GPR15P=GPR15P+2;          /* CREATE PTR TO USER REG VALUES */
         AL    GPR15P,@CF00074                                     0622
*         GPR14P=ADDR(GPR01P->SDWASRSV);/* CREATE PTR TO SDWA SAVE 0623
*                                      AREA                          */
         LA    GPR14P,SDWASRSV(,GPR01P)                            0623
*         GEN(SLL   0,16);          /* SHIFT BIT PATTERN TO HIGH   0624
*                                      ORDER                         */
         SLL   0,16
*R0002:                                                            0625
*         GEN FLOWS(I0002);                                        0625
R0002    DS    0H                                                  0625
         ALR   0,0                    SHIFT BIT TO SIGN POSITION
         BC    12,I0002               BRANCH IF BIT NOT ON
         MVC   0(4,14),0(15)          MODIFY REGISTER IN SDWA
         LA    15,4(15)               UPDATE POINTER
*I0002:                                                            0626
*         GENERATE FLOWS(R0002);                                   0626
I0002    DS    0H                                                  0626
         LA    14,4(14)               UPDATE PTR IN SDWA
         BC    5,R0002                TEST ALR CONDITION CODE TO TEST
*                                     IF ALL BITS EXHAUSTED
*         RESPECIFY                                                0627
*          (GPR00P,                                                0627
*           GPR01P,                                                0627
*           GPR14P,                                                0627
*           GPR15P) UNRSTD;                                        0627
*       END;                                                       0628
*       SDWASR06=ERRBASE2;          /* RESTORE SECOND BASE REG.    0629
*                                                            @ZA29445*/
         L     @12,ERRBASE2(,R3)                                   0629
         ST    @12,SDWASR06(,R1)                                   0629
*       RFY                                                        0630
*         RTYADDR BASED;                                           0630
*       IF ERRNORCD='1'B THEN       /* IF RECORDING NOT NEEDED       */
         TM    ERRNORCD(R3),B'00000010'                            0631
         BNO   @RF00631                                            0631
*         DO;                                                      0632
*           SDWARCRD='0'B;          /* PROHBIT RECORDING             */
         NI    SDWARCRD(R1),B'01111111'                            0633
*           ERRNORCD='0'B;          /* RECORD NEXT TIME              */
         NI    ERRNORCD(R3),B'11111101'                            0634
*         END;                                                     0635
*       ELSE                                                       0636
*         SDWARCRD='1'B;            /* ELSE REQUEST RECORDING        */
         B     @RC00631                                            0636
@RF00631 OI    SDWARCRD(R1),B'10000000'                            0636
*       R14=R10;                    /* RESTORE RETURN ADDRESS        */
@RC00631 LR    R14,R10                                             0637
*       RFY                                                        0638
*         R11 UNRSTD;                                              0638
*     END;                                                         0639
*                                                                  0640
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION HANDLES THE CASES WHERE THE FRR FINDS THAT IT    */
*   /* MUST PERCOLATE TO THE NEXT LEVEL OF RECOVERY THE SUMMARY DUMP */
*   /* BUFFER IS FREED BY A CALL TO RSM IF FRAMES ARE CURRENTLY      */
*   /* ALLOCATED TO SUMMARY DUMP. A DEQ IS PERFORMED FROM THE SDUMP  */
*   /* RESOURCE AND ALL ADDRESS SPACE DUMPS OF A MULTIPLE ADDRESS    */
*   /* SPACE DUMP ARE MARKED COMPLETE. IF GLOBAL LOCKS ARE HELD THEY */
*   /* ARE FREED BY RTM. IF AN ESTAE EXISTS AND GLOBAL LOCKS ARE     */
*   /* HELD, THE ESTAE (SDESTAEX) IS PERCOLATED TO.          @ZM44940*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0640
*   ELSE                            /* SETUP FOR PERCOLATION         */
*     DO;                                                          0640
         B     @RC00591                                            0640
@RF00591 DS    0H                                                  0641
*       R10=R14;                    /* SAVE RETURN ADDRESS   @ZA27227*/
         LR    R10,R14                                             0641
*       DO;                         /* SETRP DUMP(YES)RECORD(YES)RC(0
*                                      )FRELOCK(SALLOC,CMS,DISP,LOCAL
*                                      )                             */
*         RESPECIFY                                                0643
*          (GPR00P,                                                0643
*           GPR01P,                                                0643
*           GPR14P,                                                0643
*           GPR15P) RSTD;                                          0643
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0644
*         GPR01P->SDWARCRD='1'B;    /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0645
*         GPR01P->SDWAREQ='1'B;     /* TURN ON DUMP INDICATOR        */
         OI    SDWAREQ(GPR01P),B'10000000'                         0646
*         GPR01P->SDWAACF3=GPR01P->SDWAACF3×'00010100'B;/* INITIALIZE
*                                      LOCK FLAGS                    */
         OI    SDWAACF3(GPR01P),B'00010100'                        0647
*         GPR01P->SDWAACF4=GPR01P->SDWAACF4×'00000011'B;/* INITIALIZE
*                                      LOCK FLAGS                    */
         OI    SDWAACF4(GPR01P),B'00000011'                        0648
*         RESPECIFY                                                0649
*          (GPR00P,                                                0649
*           GPR01P,                                                0649
*           GPR14P,                                                0649
*           GPR15P) UNRSTD;                                        0649
*       END;                                                       0650
*       IF ERRCDOUT='0'B THEN       /* IF NO RCDS IN D.S.    @ZA27227*/
         TM    ERRCDOUT(R3),B'00000001'                            0651
         BNZ   @RF00651                                            0651
*         DO;                       /* INDICATE NODUMP AND END DUMP
*                                                            @ZA27227*/
*           ERRENDMP='1'B;          /* INDICATE END THIS DUMP      0653
*                                                            @ZA27227*/
         OI    ERRENDMP(R3),B'01000000'                            0653
*           SDRETCOD=NODUMP;        /* IND NO DUMP TAKEN     @ZA27227*/
         MVC   SDRETCOD(4,R7),@CF00060                             0654
*         END;                      /* INDICATE END DUMP AND NODUMP
*                                                            @ZA27227*/
*       ELSE                                                       0656
*         SDRETCOD=PARTDUMP;        /* PARTIAL DUMP TAKEN    @ZA27227*/
         B     @RC00651                                            0656
@RF00651 MVC   SDRETCOD(4,R7),@CF00054                             0656
*       IF ERRINIO='1'B THEN        /* IF ERROR DURING I/O   @ZA27227*/
@RC00651 TM    ERRINIO(R3),B'10000000'                             0657
         BNO   @RF00657                                            0657
*         ERRENDMP='1'B;            /* TERMINATE THE DUMP    @ZA27227*/
         OI    ERRENDMP(R3),B'01000000'                            0658
*       IF ERRSLOCK='0'B&           /* IF SALLOC NOT HELD    @YM02688*/
*           ERRCMSLK='0'B&          /* AND CMS NOT HELD      @YM02688*/
*           ERRDLOCK='0'B&          /* AND DISPATCHER NOT HELD     0659
*                                                            @ZM45059*/
*           ERRCUDMP='1'B THEN      /* AND DUMP BEING TAKEN  @G33VPHD*/
@RF00657 TM    ERRSLOCK(R3),B'00000001'                            0659
         BNZ   @RF00659                                            0659
         TM    ERRCMSLK(R3),B'00001000'                            0659
         BNZ   @RF00659                                            0659
         TM    ERRDLOCK(R3),B'00000100'                            0659
         BNZ   @RF00659                                            0659
         TM    ERRCUDMP(R3),B'00000100'                            0659
         BNO   @RF00659                                            0659
*         DO;                       /*                       @YM02688*/
*           IF SDUABEND='0'B&       /* IF THIS IS NOT A SYSMDUMP   0661
*                                                            @ZM44940*/
*               RTCTSDSH='1'B THEN  /* AND IT IS A SCHEDULED DUMP  0661
*                                                            @ZM44940*/
         L     @12,SDWSDPL(,R7)                                    0661
         TM    SDUABEND(@12),B'01000000'                           0661
         BNZ   @RF00661                                            0661
         L     @12,CVTPTR                                          0661
         L     @12,CVTRTMCT(,@12)                                  0661
         TM    RTCTSDSH(@12),B'00100000'                           0661
         BNO   @RF00661                                            0661
*             DO;                   /* HANDLE PERCOLATIONS FOR     0662
*                                      SCHEDULED DUMPS       @ZM44940*/
*               RFY                                                0663
*                 SMWKRSCB BASED(ADDR(SMWKRSM));/* MAP THE RSM PART
*                                      OF THE SUMMARY DUMP WORK AREA
*                                                            @ZM44940*/
*               IF SMWKFRHD>ZEROH THEN/* IF REAL STORAGE FRAMES HELD
*                                                            @ZM44940*/
         L     @12,RTCTSDSW(,@12)                                  0664
         CLC   SMWKFRHD+196(2,@12),@CH00037                        0664
         BNH   @RF00664                                            0664
*                 DO;               /* FREE HELD REAL STORAGE FRAMES
*                                                            @ZM44940*/
*                   GEN REFS(PSALITA);                             0666
*                                       /*OBTAIN SALLOC LOCK @ZM44940*/
GETLOCKU SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,                      X
               RELATED=(SVCDUMP,IEAVAD00(FRELOCKU))
*                   ERRSLOCK='1'B;  /* INDICATE SALLOC HELD  @ZM44940*/
         OI    ERRSLOCK(R3),B'00000001'                            0667
*                   SMWKRBUF='0'B;  /* INDICATE FRAMES FREED @ZM44940*/
         L     @12,CVTPTR                                          0668
         L     @12,CVTRTMCT(,@12)                                  0668
         L     @12,RTCTSDSW(,@12)                                  0668
         NI    SMWKRBUF(@12),B'10111111'                           0668
*                   SMWKNFAV=ZEROH; /* ZERO AVAILABLE COUNT  @ZM44940*/
         SLR   @11,@11                                             0669
         STH   @11,SMWKNFAV(,@12)                                  0669
*                   SMWKFRHD=ZEROH; /* ZERO FRAME HELD COUNT @ZM44940*/
         LA    @08,196                                             0670
         ALR   @08,@12                                             0670
         STH   @11,SMWKFRHD(,@08)                                  0670
*                   SMWKFRUS=ZEROH; /* ZERO FRAME USE COUNT  @ZM44940*/
         STH   @11,SMWKFRUS(,@12)                                  0671
*                   SMWKRSIX=ZEROH; /* ZERO FRAME TABLE INDX @ZM44940*/
         STH   @11,SMWKRSIX(,@12)                                  0672
*                   RFY                                            0673
*                     R11 RSTD;     /* SAVE WORK REGISTER    @ZA27227*/
*                   R11=R1;         /* SAVE SDWA ADDRESS     @ZA27227*/
         LR    R11,R1                                              0674
*                   R1=ADDR(SMWKRSM);/* ADDR SMWK AREA FOR RSM     0675
*                                                            @ZM44940*/
         LA    R1,SMWKRSM(,@12)                                    0675
*                   R13=ADDR(SMWKSAV1);/* ADDR SAVE AREA FOR RSM   0676
*                                                            @ZM44940*/
         LA    R13,SMWKSAV1(,@12)                                  0676
*                   SMWKEVRY='1'B;  /* TELL RSM FREE ALL HELD FRAMES
*                                                            @ZM44940*/
         OI    SMWKEVRY(@08),B'10000000'                           0677
*                   SMWKFRPT=NULL;  /* ZERO FRAME ADDR POINTER FOR 0678
*                                      RSM                   @ZM44940*/
         SLR   @12,@12                                             0678
         ST    @12,SMWKFRPT(,@08)                                  0678
*                   CALL IEAVPRSR;  /* RETURN ALL HELD FRAMES TO RSM
*                                                            @ZM44940*/
         L     @15,SMWKPRSR(,@08)                                  0679
         BALR  @14,@15                                             0679
*                   R1=R11;         /* RESTORE SDWA ADDRESS  @ZA27227*/
         LR    R1,R11                                              0680
*                   RFY                                            0681
*                     R11 UNRSTD;   /*                       @ZA27227*/
*                   GEN REFS(PSALITA);                             0682
*                                        /*FREE SALLOC LOCK  @ZM44940*/
FRELOCKU SETLOCK   RELEASE,TYPE=SALLOC,                                X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKU))
*                   ERRSLOCK='0'B;  /* INDICATE SALLOC FREED @ZM44940*/
         NI    ERRSLOCK(R3),B'11111110'                            0683
*                 END;              /* END OF FREE REAL STORAGE    0684
*                                      FRAMES                @ZM44940*/
*                                                                  0684
*               /*****************************************************/
*               /*                                                   */
*               /* THIS SECTION WILL MAKE SURE THE SUMMARY DUMP DIE  */
*               /* TQE IS NOT LEFT HANGING ON THE TIMER SUPERVISORS  */
*               /* QUEUES                                    @ZM45208*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0685
*               IF RTCTSDTQ='1'B THEN/* IF SUMDUMP TQE ON TIMER QUEUE
*                                                            @ZM45208*/
@RF00664 L     @12,CVTPTR                                          0685
         L     @12,CVTRTMCT(,@12)                                  0685
         TM    RTCTSDTQ(@12),B'01000000'                           0685
         BNO   @RF00685                                            0685
*                 DO;               /* REMOVE TQE FROM TIMER QUEUE 0686
*                                                            @ZM45208*/
*                   GEN REFS(PSALITA);                             0687
*                                   /*OBTAIN DISPATCHER LOCK @ZM45208*/
GETLOCKM SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,                         X
               RELATED=(SVCDUMP(IEAVAD00,FRELOCKM))            @ZM45208
*                   ERRDLOCK='1'B;  /* INDICATE DISPATCHER LOCK    0688
*                                                            @ZM45208*/
         OI    ERRDLOCK(R3),B'00000100'                            0688
*                   R13=R1;         /* SAVE SDWA ADDRESS     @ZM45208*/
         LR    R13,R1                                              0689
*                   RFY                                            0690
*                     R2 RSTD;      /* SAVE RETURN ADDR REG  @ZM45208*/
*                   R2=ADDR(VADRTURN);/* GET RETURN ADDR     @ZM45208*/
         LA    R2,VADRTURN                                         0691
*                   R1=SMWKTQEA;    /* GET TQE ADDRESS       @ZM45208*/
         L     @12,CVTPTR                                          0692
         L     @11,CVTRTMCT(,@12)                                  0692
         L     @11,RTCTSDSW(,@11)                                  0692
         L     R1,SMWKTQEA(,@11)                                   0692
*                   CALL TQEDEQ;    /* TAKE SUMDUMP TQE OFF TIMER  0693
*                                      QUEUE                 @ZM45208*/
         L     @15,CVTQTD00(,@12)                                  0693
         BALR  @14,@15                                             0693
*VADRTURN:                                                         0694
*                   RTCTSDTQ='0'B;  /* INDICATE TQE NOT ON QUEUE   0694
*                                                            @ZM45208*/
VADRTURN L     @12,CVTPTR                                          0694
         L     @12,CVTRTMCT(,@12)                                  0694
         NI    RTCTSDTQ(@12),B'10111111'                           0694
*                   RFY                                            0695
*                     R2 UNRSTD;    /*                       @ZM45208*/
*                   R1=R13;         /* RESTORE SAVED SDWA ADDRESS  0696
*                                                            @ZM45208*/
         LR    R1,R13                                              0696
*                   GEN REFS(PSALITA);                             0697
*                                     /*FREE DISPATCHER LOCK @ZM45208*/
FRELOCKM SETLOCK RELEASE,TYPE=DISP,                                    X
               RELATED=(SVCDUMP(IEAVAD00,GETLOCKM))            @ZM45208
*                   ERRDLOCK='0'B;  /* INDICATE DISPATCHER LOCK FREED
*                                                            @ZM45208*/
         NI    ERRDLOCK(R3),B'11111011'                            0698
*                 END;              /* END TAKE TQE OFF OF QUEUE   0699
*                                                            @ZM45208*/
*               ERRENDMP='1'B;      /* INDICATE DUMP SHOULD TERMINATE
*                                                            @ZM44940*/
@RF00685 OI    ERRENDMP(R3),B'01000000'                            0700
*               IF SDWACMPC^=TABLEBAD THEN/* IF TABLE IS ASSUMED OK
*                                                            @ZM44940*/
         CLC   SDWACMPC(3,R1),@CB04478                             0701
         BE    @RF00701                                            0701
*                 DO;               /* MARK DUMP COMPLETE THIS ASID
*                                      AND SEE IF LAST       @ZM44940*/
*                   RTCTINDX=ERRSAVE;/* OBTAIN CURRENT TABLE INDEX 0703
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0703
         L     @12,CVTRTMCT(,@12)                                  0703
         MVC   RTCTINDX(1,@12),ERRSAVE(R3)                         0703
*                   RTCTSDDO(RTCTINDX)='1'B;/* MARK DUMP COMPLETE  0704
*                                                            @ZM44940*/
*                                                                  0704
         SLR   @11,@11                                             0704
         IC    @11,RTCTINDX(,@12)                                  0704
         SLA   @11,2                                               0704
         ALR   @12,@11                                             0704
         OI    RTCTSDDO-4(@12),B'00000001'                         0704
*                   /*************************************************/
*                   /*                                               */
*                   /* THIS LOOP SEES IF THIS ASID IS THE LAST ACTIVE*/
*                   /* FOR THIS SCHEDULE DUMP REQUEST        @ZM44940*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0705
*                   DO RTCTINDX=ONE TO RTCTSDNA WHILE(RTCTSDDO(RTCTINDX
*                         )='1'B);  /*                       @ZM44940*/
         LA    @12,1                                               0705
         B     @DE00705                                            0705
@DL00705 L     @12,CVTPTR                                          0705
         L     @12,CVTRTMCT(,@12)                                  0705
         SLR   @11,@11                                             0705
         IC    @11,RTCTINDX(,@12)                                  0705
         SLA   @11,2                                               0705
         ALR   @12,@11                                             0705
         TM    RTCTSDDO-4(@12),B'00000001'                         0705
         BNO   @DC00705                                            0705
*                   END;            /* END OF SEARCH LOOP    @ZM44940*/
         L     @11,CVTPTR                                          0706
         L     @11,CVTRTMCT(,@11)                                  0706
         LA    @12,1                                               0706
         SLR   @08,@08                                             0706
         IC    @08,RTCTINDX(,@11)                                  0706
         ALR   @12,@08                                             0706
@DE00705 L     @11,CVTPTR                                          0706
         L     @11,CVTRTMCT(,@11)                                  0706
         STC   @12,RTCTINDX(,@11)                                  0706
         L     @11,CVTPTR                                          0706
         L     @11,CVTRTMCT(,@11)                                  0706
         SLR   @08,@08                                             0706
         IC    @08,RTCTSDNA(,@11)                                  0706
         CR    @12,@08                                             0706
         BNH   @DL00705                                            0706
@DC00705 DS    0H                                                  0707
*                 END;              /* END MARK DUMP COMPLETE THIS 0707
*                                      ASID                  @ZM44940*/
*                                                                  0708
*               /*****************************************************/
*               /*                                                   */
*               /* THIS SECTION HANDLES SCHEDULED DUMP WHERE THE RTCT*/
*               /* TABLE IS THOUGHT TO BE MESSED UP. IT NO LONGER    */
*               /* RELIES ON THE TABLE. A DEQ AND ENQ ARE PERFORMED  */
*               /* ON THE SDUMP RESOURCE TO TRY TO BECOME THE LAST   */
*               /* DUMP TASK RUNNING FOR THIS DUMP REQUEST   @ZM44940*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0708
*               ELSE                                               0708
*                 DO;               /* TRY TO END DUMP WITHOUT TABLE
*                                                            @ZM44940*/
         B     @RC00701                                            0708
@RF00701 DS    0H                                                  0709
*                   ERRTRMNT='1'B;  /* INDICATE ALL OTHER DUMP TASKS
*                                      SHOULD JUST DEQ AND QUIT    0709
*                                                            @ZM44940*/
         OI    ERRTRMNT(R3),B'00001000'                            0709
*                   ERRORWK=ERRWORK;/* COPY ERROR WORK AREA FOR OTHER
*                                      DUMP TASKS            @ZM44940*/
         MVC   ERRORWK(24,R7),ERRWORK(R3)                          0710
*                   R1=ADDR(DEQLIST);/* GET DEQ LFORM        @ZM44940*/
         LA    R1,DEQLIST                                          0711
*                   GEN;                                           0712
*                         /*DEQ FROM RESOURCE WAIT 1 SECOND  @ZM44940*/
DEQ4     DEQ   MF=(E,(R1))  DEQ FROM SDUMP RESOURCE    @ZM44940
         STIMER REAL,BINTVL=STIMVALU  WAIT FOR 1/2 SECOND    @ZM44940
*                   R1=ADDR(ENQLIST);/* GET ENQ LFORM        @ZM44940*/
         LA    R1,ENQLIST                                          0713
*                   GEN;                                           0714
*                         /*ENQ ON THE SDUMP RESOURCE AGAIN  @ZM44940*/
ENQ2     ENQ   MF=(E,(R1))  ENQ ON THE SDUMP RESOURCE  @ZM44940
*                   RTCTSDNA=0;     /* INDICATE NO ASIDS TO DUMP   0715
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0715
         L     @12,CVTRTMCT(,@12)                                  0715
         MVI   RTCTSDNA(@12),X'00'                                 0715
*                   RTCTINDX=1;     /* INDICATE FINISHED DUMPING   0716
*                                                            @ZM44940*/
         MVI   RTCTINDX(@12),X'01'                                 0716
*                 END;              /* END OF TRY TO END DUMP WITHOUT
*                                      TABLE                 @ZM44940*/
*               IF RTCTINDX>RTCTSDNA THEN/* IF ALL ASIDS DONE      0718
*                                                            @ZM44940*/
@RC00701 L     @12,CVTPTR                                          0718
         L     @12,CVTRTMCT(,@12)                                  0718
         CLC   RTCTINDX(1,@12),RTCTSDNA(@12)                       0718
         BNH   @RF00718                                            0718
*                 DO;               /* PERFORM TOTAL SCHEDULE DUMP 0719
*                                      CLEANUP               @ZM44940*/
*                   CALL IEAVTSDC;  /* CLEAN UP AND NOTIFY OPERATOR
*                                                            @ZM44940*/
         L     @15,@CV04549                                        0720
         BALR  @14,@15                                             0720
*                   ERRBASE1=R9;    /* RESTORE BASE REG FOR RECOVERY
*                                                            @ZM44940*/
         ST    R9,ERRBASE1(,R3)                                    0721
*                   ERRBASE2=R6;    /* RESTORE BASE REGISTER FOR   0722
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0722
*                   SVCDMPNM=CSECTNAM;/* RESTORE CSECT NAME FOR    0723
*                                      RECOVERY              @ZM44940*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0723
*                   IF ERRLLOCK='1'B THEN/* IF LOCAL LOCK IS HELD  0724
*                                                            @ZM44940*/
         TM    ERRLLOCK(R3),B'00000010'                            0724
         BNO   @RF00724                                            0724
*                     DO;           /* RELEASE THE LOCAL LOCK      0725
*                                                            @ZM44940*/
*                       GEN REFS(PSALITA);                         0726
*                                     /*RELEASE LOCAL LOCK   @ZM44940*/
FRELOCKG SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKG))
*                       ERRLLOCK='0'B;/* INDICATE LOCAL LOCK FREED 0727
*                                                            @ZM44940*/
         NI    ERRLLOCK(R3),B'11111101'                            0727
*                     END;          /* END OF RELEASE THE LOCAL LOCK
*                                                            @ZM44940*/
*                   IF SDUECB='1'B THEN/* IF CALLER SUPPLIED ECB   0729
*                                                            @ZM44940*/
@RF00724 L     @12,SDWSDPL(,R7)                                    0729
         TM    SDUECB(@12),B'00001000'                             0729
         BNO   @RF00729                                            0729
*                     DO;           /* POST CALLER SUPPLIED ECB    0730
*                                                            @ZM44940*/
*                       CALL SDXMPOST;/* POST CALLERS ECB    @ZM44940*/
         BAL   @14,SDXMPOST                                        0731
*                     END;          /* END POST CALLER ECB   @ZM44940*/
*/********************************************************************/
*/*   THIS SEGMENT WILL REMOVE SVC DUMP SERIALIZATION IF SVC DUMP    */
*/*   WAS SERIALIZED BY IEAVAD00(DUMP WAS NOT SCHEDULED).  THE       */
*/*   SVC DUMP LOCK (RTCTSDPL) AND THE 4K SQA BUFFER LOCK(CVTSDBF)   */
*/*   WILL BE FREED.                                                 */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA                                            */
*/*                                                                  */
*/*   OUTPUT: SVC DUMP IS UNLOCKED                                   */
*/*                                                                  */
*/*   INCLUDED BY: SDFRR,SDESTAE                                     */
*/********************************************************************/
*                                                                  0733
*                   IF ERRBFBIT='1'B&/* IF DUMP SERIALIZED AND     0733
*                                                            @ZM44940*/
*                       SDUABEND='0'B THEN/* THIS IS NOT A SYSMDUMP
*                                      REQUEST               @ZM44940*/
@RF00729 TM    ERRBFBIT(R3),B'00010000'                            0733
         BNO   @RF00733                                            0733
         L     @12,SDWSDPL(,R7)                                    0733
         TM    SDUABEND(@12),B'01000000'                           0733
         BNZ   @RF00733                                            0733
*                     DO;           /* RELEASE SVC DUMP LOCK FLAGS   */
*                       RTCTSDI=RTCTSDI&&RTCTSDI;/* CLEAR RTCT FLAGS
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0735
         L     @12,CVTRTMCT(,@12)                                  0735
         XC    RTCTSDI(3,@12),RTCTSDI(@12)                         0735
*                       RTCTSDF=RTCTSDF&&RTCTSDF;/* CLEAR RTCT FLAGS
*                                                            @ZM44940*/
         XC    RTCTSDF(4,@12),RTCTSDF(@12)                         0736
*                       DO RTCTINDX=ONE TO MAXENTRY;/* CLEAR WHOLE 0737
*                                      ARRAY                 @ZM44940*/
         LA    @12,1                                               0737
         L     @11,CVTPTR                                          0737
         L     @11,CVTRTMCT(,@11)                                  0737
         STC   @12,RTCTINDX(,@11)                                  0737
@DL00737 DS    0H                                                  0738
*                         RTCTSDF3(RTCTINDX)=NULL;/* CLEAR ARRAY   0738
*                                      FLAGS                 @ZM44940*/
         L     @12,CVTPTR                                          0738
         L     @12,CVTRTMCT(,@12)                                  0738
         SLR   @11,@11                                             0738
         IC    @11,RTCTINDX(,@12)                                  0738
         SLA   @11,2                                               0738
         SLR   @08,@08                                             0738
         ALR   @12,@11                                             0738
         STCM  @08,15,RTCTSDF3-4(@12)                              0738
*                       END;        /* END OF CLEAR WHOLE ARRAY    0739
*                                                            @ZM44940*/
         L     @11,CVTPTR                                          0739
         L     @11,CVTRTMCT(,@11)                                  0739
         LA    @12,1                                               0739
         SLR   @08,@08                                             0739
         IC    @08,RTCTINDX(,@11)                                  0739
         ALR   @12,@08                                             0739
         L     @11,CVTPTR                                          0739
         L     @11,CVTRTMCT(,@11)                                  0739
         STC   @12,RTCTINDX(,@11)                                  0739
         C     @12,@CF01016                                        0739
         BNH   @DL00737                                            0739
*                       RTCTSDID=NULL;/* SVC DUMP NOT ACTIVE IN ANY
*                                      ADDRESS SPACE                 */
         SLR   @12,@12                                             0740
         L     @11,CVTPTR                                          0740
         L     @08,CVTRTMCT(,@11)                                  0740
         STH   @12,RTCTSDID(,@08)                                  0740
*                       SDWSDPL=NULL;/* ZERO PARM LIST ADDRESS     0741
*                                                            @G33VPHD*/
         ST    @12,SDWSDPL(,R7)                                    0741
*                       RTCTSDPL=NULL;/* UNLOCK SVC DUMP             */
         ST    @12,RTCTSDPL(,@08)                                  0742
*                       CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA  0743
*                                      BUFFER                        */
         L     @12,CVTSDBF(,@11)                                   0743
         N     @12,@CF04436                                        0743
         ST    @12,CVTSDBF(,@11)                                   0743
*                     END;                                         0744
*                   ELSE                                           0745
*                     ;                                            0745
@RF00733 DS    0H                                                  0746
*                 END;              /* END OF PERFORM TOTAL CLEAN UP
*                                                            @ZM44940*/
*                                                                  0746
*               /*****************************************************/
*               /*                                                   */
*               /* THIS SECTION PERFORMS A PARTIAL SVC DUMP CLEANUP  */
*               /* SINCE IT WAS FOUND THAT OTHER ADDRESS SPACES WERE */
*               /* STILL ACTIVE PERFORMING THE SCHEDULED DUMP        */
*               /*                                           @ZM44940*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0747
*               ELSE                                               0747
*                 DO;               /* PERFORM PARTIAL SVC DUMP CLEAN
*                                      UP                    @ZM44940*/
         B     @RC00718                                            0747
@RF00718 DS    0H                                                  0748
*                   IF ERRLLOCK='0'B THEN/* IF LOCAL LOCK NOT HELD 0748
*                                                            @ZM44940*/
         TM    ERRLLOCK(R3),B'00000010'                            0748
         BNZ   @RF00748                                            0748
*                     DO;           /* OBTAIN THE LOCAL LOCK @ZM44940*/
*                       GEN REFS(PSALITA);                         0750
*                                     /*OBTAIN THE LOCAL LOCK @ZM44940*
GETLOCKG SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X
               RELATED=(SVCDUMP,IEAVAD00(FRELOCKG))
*                       ERRLLOCK='1'B;/* INDICATE LOCAL LOCK OBTAINED
*                                                            @ZM44940*/
         OI    ERRLLOCK(R3),B'00000010'                            0751
*                     END;          /* END OF OBTAIN THE LOCAL LOCK
*                                                            @ZM44940*/
*                   R13=ADDR(SDWRGSV1);/* GET SAVE AREA ADDR @ZM44940*/
@RF00748 LA    R13,SDWRGSV1(,R7)                                   0753
*                   CALL IEAVTSDE;  /* FREE ANY RESOURCES    @G33VPHD*/
         L     @15,@CV04554                                        0754
         BALR  @14,@15                                             0754
*                   ERRBASE1=R9;    /* RESTORE BASE REGISTER FOR   0755
*                                      RECOVERY              @ZM44940*/
         ST    R9,ERRBASE1(,R3)                                    0755
*                   ERRBASE2=R6;    /* RESTORE BASE REGISTER FOR   0756
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0756
*                   SVCDMPNM=CSECTNAM;/* RESTORE CSECT NAME FOR    0757
*                                      RECOVERY              @ZM44940*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0757
*                   ERRSLOCK='0'B;  /* INDICATE SALLOC LOCK FREED  0758
*                                                            @ZM44940*/
*                   ERRLLOCK='0'B;  /* INDICATE LOCAL LOCK FREED   0759
*                                                            @ZM44940*/
         NI    ERRSLOCK(R3),B'11111100'                            0759
*                   ERRCMSLK='0'B;  /* INDICATE CMS LOCK FREED     0760
*                                                            @ZM44940*/
         NI    ERRCMSLK(R3),B'11110111'                            0760
*                   ERRDLOCK='0'B;  /* INDICATE DISP LOCK FREED    0761
*                                                            @ZM45059*/
         NI    ERRDLOCK(R3),B'11111011'                            0761
*                   ERRORWK=ERRWORK;/* COPY ERROR WORK AREA FOR OTHER
*                                      DUMP TASKS            @ZM44940*/
         MVC   ERRORWK(24,R7),ERRWORK(R3)                          0762
*                 END;              /* END PERFORM PARTIAL CLEAN UP
*                                                            @ZM44940*/
*               R1=ADDR(DEQLIST);   /* GET DEQ LIST FORM     @ZM44940*/
@RC00718 LA    R1,DEQLIST                                          0764
*               GEN;                                               0765
*                 /*DEQ FROM SDUMP RESOURCE                  @ZM44940*/
DEQ2     DEQ   MF=(E,(R1))  DEQ FROM SDUMP RESOURCE    @ZM44940
*             END;                  /* END THIS WAS A SCHEDULE DUMP
*                                      REQUEST               @ZM44940*/
*                                                                  0767
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION HANDLES NON SCHEDULED SVC DUMP REQUESTS  */
*           /* OR SYSMDUMP REQUESTS. IN BOTH CASES NO GLOBAL LOCKS   */
*           /* WERE HELD ON ENTRY AND THE DUMP WAS ATTEMPTED.        */
*           /*                                               @ZM44940*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0767
*           ELSE                                                   0767
*             DO;                   /* NOT A SCHEDULED DUMP REQUEST
*                                                            @ZM44940*/
         B     @RC00661                                            0767
@RF00661 DS    0H                                                  0768
*               R13=ADDR(SDWRGSV1); /* GET SAVE AREA ADDR    @ZM44940*/
         LA    R13,SDWRGSV1(,R7)                                   0768
*               CALL IEAVTSDC;      /* FREE ANY RESOURCES    @ZA27227*/
         L     @15,@CV04549                                        0769
         BALR  @14,@15                                             0769
*               ERRBASE1=R9;        /* RESTORE BASE REGISTER FOR   0770
*                                      RECOVERY              @ZM44940*/
         ST    R9,ERRBASE1(,R3)                                    0770
*               ERRBASE2=R6;        /* RESTORE BASE REGISTER FOR   0771
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0771
*               SVCDMPNM=CSECTNAM;  /* RESTORE CSECT NAME FOR      0772
*                                      RECOVERY              @ZM44940*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0772
*               IF ERRLLOCK='1'B THEN/* IF LOCAL LOCK IS HELD      0773
*                                                            @ZA27227*/
         TM    ERRLLOCK(R3),B'00000010'                            0773
         BNO   @RF00773                                            0773
*                 DO;               /* RELEASE THE LOCAL LOCK      0774
*                                                            @ZA27227*/
*                   GEN REFS(PSALITA);                             0775
*                                     /*RELEASE LOCAL LOCK   @ZA27227*/
FRELOCKX SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKG))
*                   ERRLLOCK='0'B;  /* INDICATE LOCAL LOCK FREED   0776
*                                                            @ZA27227*/
         NI    ERRLLOCK(R3),B'11111101'                            0776
*                 END;              /* END OF RELEASE THE LOCAL LOCK
*                                                            @ZA27227*/
*/********************************************************************/
*/*   THIS SEGMENT WILL REMOVE SVC DUMP SERIALIZATION IF SVC DUMP    */
*/*   WAS SERIALIZED BY IEAVAD00(DUMP WAS NOT SCHEDULED).  THE       */
*/*   SVC DUMP LOCK (RTCTSDPL) AND THE 4K SQA BUFFER LOCK(CVTSDBF)   */
*/*   WILL BE FREED.                                                 */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA                                            */
*/*                                                                  */
*/*   OUTPUT: SVC DUMP IS UNLOCKED                                   */
*/*                                                                  */
*/*   INCLUDED BY: SDFRR,SDESTAE                                     */
*/********************************************************************/
*                                                                  0778
*               IF ERRBFBIT='1'B&   /* IF DUMP SERIALIZED AND      0778
*                                                            @ZM44940*/
*                   SDUABEND='0'B THEN/* THIS IS NOT A SYSMDUMP    0778
*                                      REQUEST               @ZM44940*/
@RF00773 TM    ERRBFBIT(R3),B'00010000'                            0778
         BNO   @RF00778                                            0778
         L     @12,SDWSDPL(,R7)                                    0778
         TM    SDUABEND(@12),B'01000000'                           0778
         BNZ   @RF00778                                            0778
*                 DO;               /* RELEASE SVC DUMP LOCK FLAGS   */
*                   RTCTSDI=RTCTSDI&&RTCTSDI;/* CLEAR RTCT FLAGS   0780
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0780
         L     @12,CVTRTMCT(,@12)                                  0780
         XC    RTCTSDI(3,@12),RTCTSDI(@12)                         0780
*                   RTCTSDF=RTCTSDF&&RTCTSDF;/* CLEAR RTCT FLAGS   0781
*                                                            @ZM44940*/
         XC    RTCTSDF(4,@12),RTCTSDF(@12)                         0781
*                   DO RTCTINDX=ONE TO MAXENTRY;/* CLEAR WHOLE ARRAY
*                                                            @ZM44940*/
         LA    @12,1                                               0782
         L     @11,CVTPTR                                          0782
         L     @11,CVTRTMCT(,@11)                                  0782
         STC   @12,RTCTINDX(,@11)                                  0782
@DL00782 DS    0H                                                  0783
*                     RTCTSDF3(RTCTINDX)=NULL;/* CLEAR ARRAY FLAGS 0783
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0783
         L     @12,CVTRTMCT(,@12)                                  0783
         SLR   @11,@11                                             0783
         IC    @11,RTCTINDX(,@12)                                  0783
         SLA   @11,2                                               0783
         SLR   @08,@08                                             0783
         ALR   @12,@11                                             0783
         STCM  @08,15,RTCTSDF3-4(@12)                              0783
*                   END;            /* END OF CLEAR WHOLE ARRAY    0784
*                                                            @ZM44940*/
         L     @11,CVTPTR                                          0784
         L     @11,CVTRTMCT(,@11)                                  0784
         LA    @12,1                                               0784
         SLR   @08,@08                                             0784
         IC    @08,RTCTINDX(,@11)                                  0784
         ALR   @12,@08                                             0784
         L     @11,CVTPTR                                          0784
         L     @11,CVTRTMCT(,@11)                                  0784
         STC   @12,RTCTINDX(,@11)                                  0784
         C     @12,@CF01016                                        0784
         BNH   @DL00782                                            0784
*                   RTCTSDID=NULL;  /* SVC DUMP NOT ACTIVE IN ANY  0785
*                                      ADDRESS SPACE                 */
         SLR   @12,@12                                             0785
         L     @11,CVTPTR                                          0785
         L     @08,CVTRTMCT(,@11)                                  0785
         STH   @12,RTCTSDID(,@08)                                  0785
*                   SDWSDPL=NULL;   /* ZERO PARM LIST ADDRESS      0786
*                                                            @G33VPHD*/
         ST    @12,SDWSDPL(,R7)                                    0786
*                   RTCTSDPL=NULL;  /* UNLOCK SVC DUMP               */
         ST    @12,RTCTSDPL(,@08)                                  0787
*                   CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA BUFFER */
         L     @12,CVTSDBF(,@11)                                   0788
         N     @12,@CF04436                                        0788
         ST    @12,CVTSDBF(,@11)                                   0788
*                 END;                                             0789
*               ELSE                                               0790
*                 ;                                                0790
@RF00778 DS    0H                                                  0791
*             END;                  /* END A SYSMDUMP OR NOT       0791
*                                      SCHEDULED DUMP REQUEST      0791
*                                                            @ZM44940*/
*           IF ERRESTAE='1'B THEN   /* IF ESTAE EXIT EXISTS  @ZM44940*/
@RC00661 TM    ERRESTAE(R3),B'01000000'                            0792
         BNO   @RF00792                                            0792
*             DO;                   /* DELETE IT             @YM02688*/
*               R13=ADDR(SDWRGSV1); /* SDUMP SAVE AREA       @G33VPHD*/
         LA    R13,SDWRGSV1(,R7)                                   0794
*               GEN(ESTAE 0,BRANCH=YES,SVEAREA=(R13))/*      @YM02688*/
*               REFS(CVTMAP,CVTSV60);/*                      @G33VPHD*/
         ESTAE 0,BRANCH=YES,SVEAREA=(R13)
*               ERRESTAE='0'B;      /* INDICATE ESTAE DELETED      0796
*                                                            @YM02688*/
         NI    ERRESTAE(R3),B'10111111'                            0796
*             END;                  /*                       @YM02688*/
*         END;                      /* END OF NO LOCKS HELD AND DUMP
*                                      ATTEMPTED             @ZM44940*/
*                                                                  0799
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION HANDLES CASES WHERE GLOBAL LOCKS ARE HELD OR */
*       /* THE DUMP WAS NOT EVEN ATTEMPED                    @ZM44940*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0799
*       ELSE                                                       0799
*         DO;                       /* GLOBAL LOCKS HELD OR DUMP NOT
*                                      ATTEMPTED             @ZM44940*/
         B     @RC00659                                            0799
@RF00659 DS    0H                                                  0800
*           IF(ERRSLOCK='1'B×       /* IF THE SALLOC LOCK IS HELD  0800
*                                                            @ZM44940*/
*               ERRCMSLK='1'B×      /* OR IF THE CMS LOCK IS HELD  0800
*                                                            @ZM44940*/
*               ERRDLOCK='1'B)&     /* OR IF THE DISP LOCK HELD    0800
*                                                            @ZM45059*/
*               ERRESTAE='1'B THEN  /* AND THE ESTAE IS ACTIVE     0800
*                                                            @ZM44940*/
         TM    ERRSLOCK(R3),B'00000001'                            0800
         BO    @GL00053                                            0800
         TM    ERRCMSLK(R3),B'00001000'                            0800
         BO    @GL00053                                            0800
         TM    ERRDLOCK(R3),B'00000100'                            0800
         BNO   @RF00800                                            0800
@GL00053 TM    ERRESTAE(R3),B'01000000'                            0800
         BNO   @RF00800                                            0800
*             DO;                   /* PERCOLATE TO IT       @YM02688*/
*               ERRSLOCK='0'B;      /* LOCK FREED ON PERC    @YM02688*/
*               ERRLLOCK='0'B;      /* LOCK FREED ON PERC    @YM02688*/
         NI    ERRSLOCK(R3),B'11111100'                            0803
*               ERRCMSLK='0'B;      /* LOCK FREED ON PERC    @YM02688*/
         NI    ERRCMSLK(R3),B'11110111'                            0804
*               ERRDLOCK='0'B;      /* LOCK FREED ON PERC    @ZM45059*/
         NI    ERRDLOCK(R3),B'11111011'                            0805
*               ERRORWK=ERRWORK;    /* 6 WDS FOR ESTAE       @YM02688*/
         MVC   ERRORWK(24,R7),ERRWORK(R3)                          0806
*             END;                  /*                       @YM02688*/
*           ELSE                    /* NO RESOURCES TO FRE   @YM02688*/
*             DO;                   /*                       @YM02688*/
         B     @RC00800                                            0808
@RF00800 DS    0H                                                  0809
*               IF SDUECB='1'B THEN /* IF THE CALLER SUPPLIED      0809
*                                                            @G33VPHD*/
         L     @12,SDWSDPL(,R7)                                    0809
         TM    SDUECB(@12),B'00001000'                             0809
         BNO   @RF00809                                            0809
*                 DO;               /* AN ECB POST IT        @G33VPHD*/
*                   CALL SDXMPOST;  /* POST CALLER SUPPLIED ECB    0811
*                                                            @G33VPHD*/
         BAL   @14,SDXMPOST                                        0811
*                 END;              /* END IF ECB POST IT    @G33VPHD*/
*/********************************************************************/
*/*   THIS SEGMENT WILL REMOVE SVC DUMP SERIALIZATION IF SVC DUMP    */
*/*   WAS SERIALIZED BY IEAVAD00(DUMP WAS NOT SCHEDULED).  THE       */
*/*   SVC DUMP LOCK (RTCTSDPL) AND THE 4K SQA BUFFER LOCK(CVTSDBF)   */
*/*   WILL BE FREED.                                                 */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA                                            */
*/*                                                                  */
*/*   OUTPUT: SVC DUMP IS UNLOCKED                                   */
*/*                                                                  */
*/*   INCLUDED BY: SDFRR,SDESTAE                                     */
*/********************************************************************/
*                                                                  0813
*               IF ERRBFBIT='1'B&   /* IF DUMP SERIALIZED AND      0813
*                                                            @ZM44940*/
*                   SDUABEND='0'B THEN/* THIS IS NOT A SYSMDUMP    0813
*                                      REQUEST               @ZM44940*/
@RF00809 TM    ERRBFBIT(R3),B'00010000'                            0813
         BNO   @RF00813                                            0813
         L     @12,SDWSDPL(,R7)                                    0813
         TM    SDUABEND(@12),B'01000000'                           0813
         BNZ   @RF00813                                            0813
*                 DO;               /* RELEASE SVC DUMP LOCK FLAGS   */
*                   RTCTSDI=RTCTSDI&&RTCTSDI;/* CLEAR RTCT FLAGS   0815
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0815
         L     @12,CVTRTMCT(,@12)                                  0815
         XC    RTCTSDI(3,@12),RTCTSDI(@12)                         0815
*                   RTCTSDF=RTCTSDF&&RTCTSDF;/* CLEAR RTCT FLAGS   0816
*                                                            @ZM44940*/
         XC    RTCTSDF(4,@12),RTCTSDF(@12)                         0816
*                   DO RTCTINDX=ONE TO MAXENTRY;/* CLEAR WHOLE ARRAY
*                                                            @ZM44940*/
         LA    @12,1                                               0817
         L     @11,CVTPTR                                          0817
         L     @11,CVTRTMCT(,@11)                                  0817
         STC   @12,RTCTINDX(,@11)                                  0817
@DL00817 DS    0H                                                  0818
*                     RTCTSDF3(RTCTINDX)=NULL;/* CLEAR ARRAY FLAGS 0818
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0818
         L     @12,CVTRTMCT(,@12)                                  0818
         SLR   @11,@11                                             0818
         IC    @11,RTCTINDX(,@12)                                  0818
         SLA   @11,2                                               0818
         SLR   @08,@08                                             0818
         ALR   @12,@11                                             0818
         STCM  @08,15,RTCTSDF3-4(@12)                              0818
*                   END;            /* END OF CLEAR WHOLE ARRAY    0819
*                                                            @ZM44940*/
         L     @11,CVTPTR                                          0819
         L     @11,CVTRTMCT(,@11)                                  0819
         LA    @12,1                                               0819
         SLR   @08,@08                                             0819
         IC    @08,RTCTINDX(,@11)                                  0819
         ALR   @12,@08                                             0819
         L     @11,CVTPTR                                          0819
         L     @11,CVTRTMCT(,@11)                                  0819
         STC   @12,RTCTINDX(,@11)                                  0819
         C     @12,@CF01016                                        0819
         BNH   @DL00817                                            0819
*                   RTCTSDID=NULL;  /* SVC DUMP NOT ACTIVE IN ANY  0820
*                                      ADDRESS SPACE                 */
         SLR   @12,@12                                             0820
         L     @11,CVTPTR                                          0820
         L     @08,CVTRTMCT(,@11)                                  0820
         STH   @12,RTCTSDID(,@08)                                  0820
*                   SDWSDPL=NULL;   /* ZERO PARM LIST ADDRESS      0821
*                                                            @G33VPHD*/
         ST    @12,SDWSDPL(,R7)                                    0821
*                   RTCTSDPL=NULL;  /* UNLOCK SVC DUMP               */
         ST    @12,RTCTSDPL(,@08)                                  0822
*                   CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA BUFFER */
         L     @12,CVTSDBF(,@11)                                   0823
         N     @12,@CF04436                                        0823
         ST    @12,CVTSDBF(,@11)                                   0823
*                 END;                                             0824
*               ELSE                                               0825
*                 ;                                                0825
@RF00813 DS    0H                                                  0826
*             END;                  /*                       @YM02688*/
*         END;                      /* END OF GLOBAL LOCKS HELD OR 0827
*                                      DUMP NOT TAKEN        @ZM44940*/
@RC00800 DS    0H                                                  0828
*       R14=R10;                    /* RESTORE RETURN ADDRESS      0828
*                                                            @ZA27227*/
@RC00659 LR    R14,R10                                             0828
*       GEN(SETFRR D,WRKREGS=(R10,R11))                            0829
*       REFS(PSA,PSACSTK,FRRS,FRRSCURR,FRRSEMP,FRRSELEN);/* DELETE 0829
*                                      THIS FRR              @G33VPHD*/
         SETFRR D,WRKREGS=(R10,R11)
*     END;                          /* END OF SET UP TO PERCOLATE TO
*                                      NEXT RECOVERY         @ZM44940*/
*   RFY                                                            0831
*     SDWA BASED;                                                  0831
*   RFY                                                            0832
*    (R1,                                                          0832
*     R10) UNRSTD;                  /*                       @ZA27227*/
*   RETURN;                         /* RETURN TO RTM FOR PERC OR   0833
*                                      RETRY                 @G33VPHD*/
         B     @EL00001                                            0833
*                                                                  0834
*/********************************************************************/
*/*   THIS SEGMENT CONTAINS THE ESTAE EXIT FOR SVCDUMP.  THIS        */
*/*   EXIT IS ESTABLISHED AFTER SVCDUMP SERIALIES ITS PROCCESSING,   */
*/*   VALIDATES PARAMETERS AND ESTABLISHES THE DUMP ENVIRONMENT.     */
*/*   THIS EXIT IS ACTIVE UNTIL THE DUMP IS COMPLETE. IT IS          */
*/*   DELETED IN SDFRRRTN OR SDENDUP.  IT WILL RECEIVE CONTROL       */
*/*   WHENEVER THE FRR IS NOT ACTIVE OR WHEN THE FRR FAILS.  IT      */
*/*   WILL RETRY IF POSSIBLE, ELSE CLEANUP AND PERCOLATE.            */
*/*                                                                  */
*/*   INPUT: ERRORWK(ERRWORK), SDWA, SVC DUMP WORKAREA-SDWORK        */
*/*                                                                  */
*/*   OUTPUT: RETRY OR PERCOLATE                                     */
*/********************************************************************/
*                                                                  0834
*SDESTAEX:                                                         0834
*   ENTRY;                                                         0834
@EP00834 DS    0H                                                  0835
*   RFY                                                            0835
*    (R1,                                                          0835
*     R10,                                                         0835
*     R11) RSTD;                                                   0835
*                                                                  0835
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE REGISTERS FROM ERRORWK, WORKA WILL CONTAIN FIRST WORD,*/
*   /* WORKB WILL CONTAIN SECOND WORD (RETRY ADDRESS), ETC. DETERMINE*/
*   /* IF SDWA EXISTS, IF NOT, CLEANUP AND PERCOLATE                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0836
*   DO;                             /* ENTESTAE (R10,R11,R7)ERREXIT(E
*                                      STAPERC)PARMREG(R3)           */
*                                                                  0836
*     /***************************************************************/
*     /*                                                             */
*     /* ENTRY CODE FOR ESTAE ROUTINE. IF RTCA ALLOCATED THEN RESTORE*/
*     /* CODE AND DATA REGS FROM START OF USERS PARM LIST, AND       */
*     /* ESTABLISH ADDR TO ESTAE SAVE AREA IF REQUIRED. IF NO RTCA   */
*     /* AVAILABLE THEN BRANCH TO ERROR CODE AFTER ESTABLISHING      */
*     /* ADDRESSABILITY                                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0837
*     GEN(USING *,GPR15P);                                         0837
         USING *,GPR15P
*     GEN(CH    GPR00F,*+26);       /* CHECK IF RTCA ALLOC FAILED    */
         CH    GPR00F,*+26
*     GEN(BNE   *+24);              /* NO,SAVE RTM REGS              */
         BNE   *+24
*     GEN(DROP  GPR15P);            /* DROP LOCAL ADDR               */
         DROP  GPR15P
*     GEN(LR    R3,GPR02P);         /* PTR TO USER PARM LIST         */
         LR    R3,GPR02P
*     GEN(L     R10,00(R3));                                       0842
         L     R10,00(R3)
*     GEN(L     R11,04(R3));                                       0843
         L     R11,04(R3)
*     GEN(L     R7,08(R3));                                        0844
         L     R7,08(R3)
*     GEN(B     ESTAPERC);          /* BRANCH TO ERROR EXIT          */
         B     ESTAPERC
*     GEN(DC    H'12');             /* NO RTCA AVAIL RC              */
         DC    H'12'
*     GEN(STM   GPR14P,GPR12F,12(GPR13P));/* GOOD R13, SAVE RTM'S  0847
*                                      REGS                          */
         STM   GPR14P,GPR12F,12(GPR13P)
*     GEN(L     R3,0(GPR01P));      /* PTR TO USER PARM LIST         */
         L     R3,0(GPR01P)
*     GEN(L     R10,00(R3));                                       0849
         L     R10,00(R3)
*     GEN(L     R11,04(R3));                                       0850
         L     R11,04(R3)
*     GEN(L     R7,08(R3));                                        0851
         L     R7,08(R3)
*   END;                            /* ENTESTAE (R10,R11,R7)ERREXIT(E
*                                      STAPERC)PARMREG(R3)           */
*   RFY                                                            0853
*     SDWA BASED(R1);               /* ADDR OF SDWA IN PARMLPTR      */
*   RFY                                                            0854
*     RTYADDR BASED(R11);           /* RETRY ADDRESS IN WORKB        */
*   SDWAMODN=SVC51NAM;              /* ESTAE ID, LOAD MODULE NAME    */
         MVC   SDWAMODN(8,R1),@CC04468                             0855
*   SDWACSCT=SVCDMPNM;              /* ESTAE ID, CSECT NAME          */
         MVC   SDWACSCT(8,R1),SVCDMPNM(R7)                         0856
*   SDWAREXN=SDESTANM;              /* ESTAE ID, ESTAE NAME          */
         MVC   SDWAREXN(8,R1),@CC04474                             0857
*   SDWAHEX='1'B;                   /* VAR RECORD AREA IN HEX        */
         OI    SDWAHEX(R1),B'10000000'                             0858
*   SDWAURAL=LENGTH(ERRWORK);       /* LEN OF VAR DATA TO RECORD     */
         MVI   SDWAURAL(R1),X'18'                                  0859
*   SDWAVRA=ERRWORK;                /* RECORD ESTAE 6 WRD WORK AREA  */
         MVI   SDWAVRA+24(R1),C' '                                 0860
         MVC   SDWAVRA+25(83,R1),SDWAVRA+24(R1)                    0860
         MVC   SDWAVRA(24,R1),ERRWORK(R3)                          0860
*   IF SDWACLUP='0'B&               /* IF RETRY IS ALLOWED AND A     */
*       ERRRETRY^=NULL&             /* VALID RETRY ADDR EXISTS AND   */
*       ERRRETRY^=R3&               /* AND NOT RETRY ERROR   @ZA01943*/
*       ERRNOTRM='0'B&              /* TERM EXIT SET UP      @ZA04148*/
*       ERRFRR='0'B THEN            /* THE FRR DID NOT FAIL          */
         TM    SDWACLUP(R1),B'10000000'                            0861
         BNZ   @RF00861                                            0861
         L     @12,ERRRETRY(,R3)                                   0861
         LTR   @12,@12                                             0861
         BZ    @RF00861                                            0861
         CR    @12,R3                                              0861
         BE    @RF00861                                            0861
         TM    ERRNOTRM(R3),B'10000000'                            0861
         BNZ   @RF00861                                            0861
         TM    ERRFRR(R3),B'10000000'                              0861
         BNZ   @RF00861                                            0861
*     DO;                           /* SETUP FOR RETRY               */
*       IF ERRENDMP='0'B THEN       /* IF DUMP NOT YET TERMINATED    */
         TM    ERRENDMP(R3),B'01000000'                            0863
         BNZ   @RF00863                                            0863
*         DO;                       /* CHECK FOR MODIFICATIONS       */
*           IF ERRRETRY=ADDR(RTYENDMP)×/* IF RETRY ADDR->ENDUP       */
*               ERRRETRY=ADDR(RTYEND80)×/* IF DUMP IS DONE   @ZM44940*/
*               ERRINIO='1'B×       /* OR ERROR IN SDIO OR   @ZM45195*/
*               ERRSRBSD='1'B×      /* OR SRBS ARE BEING SCHEDULED 0865
*                                                            @ZM45208*/
*               ERRCDOUT='0'B THEN  /* ERROR BEFORE 1ST RECORD     0865
*                                      WRITTEN               @ZM45195*/
         LA    @08,RTYENDMP                                        0865
         CR    @12,@08                                             0865
         BE    @RT00865                                            0865
         LA    @08,RTYEND80                                        0865
         CR    @12,@08                                             0865
         BE    @RT00865                                            0865
         TM    ERRINIO(R3),B'10000000'                             0865
         BO    @RT00865                                            0865
         TM    ERRSRBSD(R3),B'00000010'                            0865
         BO    @RT00865                                            0865
         TM    ERRCDOUT(R3),B'00000001'                            0865
         BNZ   @RF00865                                            0865
@RT00865 DS    0H                                                  0866
*             DO;                   /* MODIFY RETURN CODE            */
*               IF ERRCDOUT='0'B THEN/* IF NO RCDS WRITTEN           */
         TM    ERRCDOUT(R3),B'00000001'                            0867
         BNZ   @RF00867                                            0867
*                 DO;               /* INDICATE NODUMP AND END DUMP
*                                                            @ZM45195*/
*                   ERRENDMP='1'B;  /* INDICATE END THIS DUMP      0869
*                                                            @ZM45195*/
         OI    ERRENDMP(R3),B'01000000'                            0869
*                   SDRETCOD=NODUMP;/* RETCODE IND NODUMP            */
         MVC   SDRETCOD(4,R7),@CF00060                             0870
*                 END;              /* END INDICATE NODUMP AND END 0871
*                                      DUMP                  @ZM45195*/
*               ELSE                                               0872
*                 SDRETCOD=PARTDUMP;/* ELSE IND PARTIAL DMP          */
         B     @RC00867                                            0872
@RF00867 MVC   SDRETCOD(4,R7),@CF00054                             0872
*               IF ERRINIO='1'B THEN/* IF ERROR IN SDIO              */
@RC00867 TM    ERRINIO(R3),B'10000000'                             0873
         BNO   @RF00873                                            0873
*                 ERRENDMP='1'B;    /* TERMINATE DUMP                */
         OI    ERRENDMP(R3),B'01000000'                            0874
*               ELSE                                               0875
*                 ;                                                0875
@RF00873 DS    0H                                                  0876
*             END;                                                 0876
*           ELSE                                                   0877
*             ;                                                    0877
@RF00865 DS    0H                                                  0878
*         END;                                                     0878
*       ELSE                                                       0879
*         ;                                                        0879
@RF00863 DS    0H                                                  0880
*       R10=R14;                    /* SAVE RET ADDR, SETRP DESTROYS
*                                      WORKB CONTAINS RETRY ADDRESS  */
         LR    R10,R14                                             0880
*       ERRRUBSW=REGFLGS;           /* BUILD RUB FOR SETRP           */
         MVC   ERRRUBSW(2,R3),@CB04480                             0881
*       ERRADDR=R3;                 /* HAVE SETRP PRIME ERR WK ADDR  */
         ST    R3,ERRADDR(,R3)                                     0882
*       DO;                         /* SETRP RETADDR(RTYADDR)RETREGS(
*                                      YES)RUB(ERRRUBSW)RC(4)FRESDWA(
*                                      YES)DUMP(NO)                  */
*         RESPECIFY                                                0884
*          (GPR00P,                                                0884
*           GPR01P,                                                0884
*           GPR14P,                                                0884
*           GPR15P) RSTD;                                          0884
*         GPR01P->SDWARCDE=4;       /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0885
*         GPR01P->SDWARTYA=ADDR(RTYADDR);/* SAVE RETRY ADDRESS       */
         ST    R11,SDWARTYA(,GPR01P)                               0886
*         GPR01P->SDWAFREE='1'B;    /* SET FLAG TO FREE SDWA         */
         OI    SDWAFREE(GPR01P),B'00000100'                        0887
*         GPR01P->SDWAREQ='0'B;     /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0888
*         GPR01P->SDWAUPRG='1'B;    /* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0889
*         GPR15P=ADDR(ERRRUBSW);    /* GET PTR TO REG UPDATE BLOCK   */
         LA    GPR15P,ERRRUBSW(,R3)                                0890
*         GPR00P=GPR15P->I015F;     /* ACCESS REGISTER BIT PATTERN   */
         LH    GPR00P,I015F(,GPR15P)                               0891
*         GPR15P=GPR15P+2;          /* CREATE PTR TO USER REG VALUES */
         AL    GPR15P,@CF00074                                     0892
*         GPR14P=ADDR(GPR01P->SDWASRSV);/* CREATE PTR TO SDWA SAVE 0893
*                                      AREA                          */
         LA    GPR14P,SDWASRSV(,GPR01P)                            0893
*         GEN(SLL   0,16);          /* SHIFT BIT PATTERN TO HIGH   0894
*                                      ORDER                         */
         SLL   0,16
*R0007:                                                            0895
*         GEN FLOWS(I0007);                                        0895
R0007    DS    0H                                                  0895
         ALR   0,0                    SHIFT BIT TO SIGN POSITION
         BC    12,I0007               BRANCH IF BIT NOT ON
         MVC   0(4,14),0(15)          MODIFY REGISTER IN SDWA
         LA    15,4(15)               UPDATE POINTER
*I0007:                                                            0896
*         GENERATE FLOWS(R0007);                                   0896
I0007    DS    0H                                                  0896
         LA    14,4(14)               UPDATE PTR IN SDWA
         BC    5,R0007                TEST ALR CONDITION CODE TO TEST
*                                     IF ALL BITS EXHAUSTED
*         RESPECIFY                                                0897
*          (GPR00P,                                                0897
*           GPR01P,                                                0897
*           GPR14P,                                                0897
*           GPR15P) UNRSTD;                                        0897
*       END;                        /*                       @ZA05331*/
*       RFY                                                        0899
*         RTYADDR BASED;                                           0899
*       SDWASR06=ERRBASE2;          /* RESTORE SECOND BASE REG.    0900
*                                                            @ZA29445*/
         L     @12,ERRBASE2(,R3)                                   0900
         ST    @12,SDWASR06(,R1)                                   0900
*       IF ERRNORCD='1'B THEN       /* IF RECORDING NOT NEEDED       */
         TM    ERRNORCD(R3),B'00000010'                            0901
         BNO   @RF00901                                            0901
*         DO;                                                      0902
*           SDWARCRD='0'B;          /* PROHBIT RECORDING             */
         NI    SDWARCRD(R1),B'01111111'                            0903
*           ERRNORCD='0'B;          /* RECORD NEXT TIME              */
         NI    ERRNORCD(R3),B'11111101'                            0904
*         END;                                                     0905
*       ELSE                                                       0906
*         SDWARCRD='1'B;            /* ELSE REQUEST RECORDING        */
         B     @RC00901                                            0906
@RF00901 OI    SDWARCRD(R1),B'10000000'                            0906
*       R14=R10;                    /* RESTORE RETURN ADDRESS        */
@RC00901 LR    R14,R10                                             0907
*     END;                                                         0908
*                                                                  0909
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SECTION HANDLES THE CASES WHERE THE ESTAE FINDS THAT IT  */
*   /* MUST PERCOLATE TO THE NEXT LEVEL OF RECOVERY. THE SUMMARY DUMP*/
*   /* BUFFER IS FREED BY A CALL TO RSM IF FRAMES ARE CURRENTLY      */
*   /* ALLOCATED TO SUMMARY DUMP. A DEQ IS PERFORMED FROM THE SDUMP  */
*   /* RESOURCE AND ALL ADDRESS SPACE DUMPS OF A MULTIPLE ADDRESS    */
*   /* SPACE DUMP ARE MARKED COMPLETE. SVC DUMP IS UNLOCKED  @ZM44940*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0909
*   ELSE                                                           0909
*     DO;                           /* PERCOLATE TO NEXT LEVEL OF  0909
*                                      RECOVERY              @ZM44940*/
         B     @RC00861                                            0909
@RF00861 DS    0H                                                  0910
*       R10=R14;                    /* SAVE RET ADDR, SETRP DESTRYS  */
         LR    R10,R14                                             0910
*       DO;                         /* SETRP                       0911
*                                      DUMP(YES)RECORD(YES)RC(0)     */
*         RESPECIFY                                                0912
*          (GPR00P,                                                0912
*           GPR01P,                                                0912
*           GPR14P,                                                0912
*           GPR15P) RSTD;                                          0912
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0913
*         GPR01P->SDWARCRD='1'B;    /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0914
*         GPR01P->SDWAREQ='1'B;     /* TURN ON DUMP INDICATOR        */
         OI    SDWAREQ(GPR01P),B'10000000'                         0915
*         RESPECIFY                                                0916
*          (GPR00P,                                                0916
*           GPR01P,                                                0916
*           GPR14P,                                                0916
*           GPR15P) UNRSTD;                                        0916
*       END;                                                       0917
*       R14=R10;                    /* RESTORE RETURN ADDRESS        */
         LR    R14,R10                                             0918
*ESTAPERC:                                                         0919
*       ;                           /* ENTRY POINT-NO SDWA EXISTS    */
ESTAPERC DS    0H                                                  0920
*       R10=R14;                    /* SAVE RETURN ADDRESS   @ZA27227*/
         LR    R10,R14                                             0920
*       RFY                                                        0921
*         SMWKRSCB BASED(ADDR(SMWKRSM));/* MAP RSM PART OF THE     0921
*                                      SUMMARY DUMP WORK AREA      0921
*                                                            @ZM44940*/
*       IF ERRCDOUT='0'B THEN       /* IF NO RCDS WRITTEN    @ZA27227*/
         TM    ERRCDOUT(R3),B'00000001'                            0922
         BNZ   @RF00922                                            0922
*         DO;                       /* INDICATE NODUMP AND END DUMP
*                                                            @ZA27227*/
*           ERRENDMP='1'B;          /* INDICATE END THIS DUMP      0924
*                                                            @ZA27227*/
         OI    ERRENDMP(R3),B'01000000'                            0924
*           SDRETCOD=NODUMP;        /* RETCODE IND NODUMP    @ZA27227*/
         MVC   SDRETCOD(4,R7),@CF00060                             0925
*         END;                      /* END INDICATE NODUMP AND END 0926
*                                      DUMP                  @ZA27227*/
*       ELSE                                                       0927
*         SDRETCOD=PARTDUMP;        /* ELSE IND PARTIAL DMP  @ZA27227*/
         B     @RC00922                                            0927
@RF00922 MVC   SDRETCOD(4,R7),@CF00054                             0927
*       IF ERRINIO='1'B THEN        /* IF ERROR IN SDIO      @ZA27227*/
@RC00922 TM    ERRINIO(R3),B'10000000'                             0928
         BNO   @RF00928                                            0928
*         ERRENDMP='1'B;            /* TERMINATE DUMP        @ZA27227*/
         OI    ERRENDMP(R3),B'01000000'                            0929
*       ELSE                                                       0930
*         ;                         /*                       @ZA27227*/
@RF00928 DS    0H                                                  0931
*       IF SDUABEND='0'B&           /* IF THIS IS NOT A SYSMDUMP AND
*                                                            @ZM44940*/
*           RTCTSDSH='1'B THEN      /* IT IS A SCHEDULED DUMP      0931
*                                                            @ZM44940*/
         L     @12,SDWSDPL(,R7)                                    0931
         TM    SDUABEND(@12),B'01000000'                           0931
         BNZ   @RF00931                                            0931
         L     @12,CVTPTR                                          0931
         L     @12,CVTRTMCT(,@12)                                  0931
         TM    RTCTSDSH(@12),B'00100000'                           0931
         BNO   @RF00931                                            0931
*         DO;                       /* HANDLE PERCOLATIONS FOR     0932
*                                      SCHEDULED DUMPS       @ZM44940*/
*           IF SMWKFRHD>ZEROH THEN  /* IF REAL STORAGE FRAMES HELD 0933
*                                                            @ZM44940*/
         L     @12,RTCTSDSW(,@12)                                  0933
         CLC   SMWKFRHD+196(2,@12),@CH00037                        0933
         BNH   @RF00933                                            0933
*             DO;                   /* FREE HELD REAL STORAGE FRAMES
*                                      VIA RSM               @ZM44940*/
*               GEN REFS(PSALITA);                                 0935
*                                  /*OBTAIN SALLOC LOCK      @ZM44940*/
GETLOCKX SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,                      X
               RELATED=(SVCDUMP,IEAVAD00(FRELOCKR))
*               ERRSLOCK='1'B;      /* INDICATE SALLOC HELD  @ZM44940*/
         OI    ERRSLOCK(R3),B'00000001'                            0936
*               SMWKRBUF='0'B;      /* INDICATE FRAMES FREED @ZM44940*/
         L     @12,CVTPTR                                          0937
         L     @12,CVTRTMCT(,@12)                                  0937
         L     @12,RTCTSDSW(,@12)                                  0937
         NI    SMWKRBUF(@12),B'10111111'                           0937
*               SMWKNFAV=ZEROH;     /* ZERO AVAILABLE COUNT  @ZM44940*/
         SLR   @08,@08                                             0938
         STH   @08,SMWKNFAV(,@12)                                  0938
*               SMWKFRHD=ZEROH;     /* ZERO FRAME HELD COUNT @ZM44940*/
         LA    @02,196                                             0939
         ALR   @02,@12                                             0939
         STH   @08,SMWKFRHD(,@02)                                  0939
*               SMWKFRUS=ZEROH;     /* ZERO FRAME USE COUNT  @ZM44940*/
         STH   @08,SMWKFRUS(,@12)                                  0940
*               SMWKRSIX=ZEROH;     /* ZERO FRAME TABLE INDX @ZM44940*/
         STH   @08,SMWKRSIX(,@12)                                  0941
*               RFY                                                0942
*                 R11 RSTD;         /* SAVE WORK REGISTER    @ZA27227*/
*               R11=R1;             /* SAVE SDWA ADDRESS     @ZA27227*/
         LR    R11,R1                                              0943
*               R1=ADDR(SMWKRSM);   /* ADDR SMWK AREA FOR RSM      0944
*                                                            @ZM44940*/
         LA    R1,SMWKRSM(,@12)                                    0944
*               R13=ADDR(SMWKSAV1); /* ADDR SAVE AREA FOR RSM      0945
*                                                            @ZM44940*/
         LA    R13,SMWKSAV1(,@12)                                  0945
*               SMWKEVRY='1'B;      /* TELL RSM FREE ALL HELD FRAMES
*                                                            @ZM44940*/
         OI    SMWKEVRY(@02),B'10000000'                           0946
*               SMWKFRPT=NULL;      /* ZERO FRAME ADDR POINTER FOR 0947
*                                      RSM                   @ZM44940*/
         ST    @08,SMWKFRPT(,@02)                                  0947
*               CALL IEAVPRSR;      /* RETURN ALL HELD FRAMES TO RSM
*                                                            @ZM44940*/
         L     @15,SMWKPRSR(,@02)                                  0948
         BALR  @14,@15                                             0948
*               R1=R11;             /* RESTORE SDWA ADDRESS  @ZA27227*/
         LR    R1,R11                                              0949
*               RFY                                                0950
*                 R11 UNRSTD;       /*                       @ZA27227*/
*               GEN REFS(PSALITA);                                 0951
*                                   /*FREE SALLOC LOCK  @ZM44940*/
FRELOCKR SETLOCK   RELEASE,TYPE=SALLOC,                                X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKR))
*               ERRSLOCK='0'B;      /* INDICATE SALLOC FREED @ZM44940*/
         NI    ERRSLOCK(R3),B'11111110'                            0952
*             END;                  /* END OF FREE REAL STORAGE    0953
*                                      FRAMES                @ZM44940*/
*                                                                  0953
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION WILL MAKE SURE THE SUMMARY DUMP DIE TQE  */
*           /* IS NOT LEFT HANGING ON THE TIMER SUPERVISORS QUEUES   */
*           /*                                               @ZM45208*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0954
*           IF RTCTSDTQ='1'B THEN   /* IF SUMDUMP TQE ON TIMER QUEUE
*                                                            @ZM45208*/
@RF00933 L     @12,CVTPTR                                          0954
         L     @12,CVTRTMCT(,@12)                                  0954
         TM    RTCTSDTQ(@12),B'01000000'                           0954
         BNO   @RF00954                                            0954
*             DO;                   /* REMOVE TQE FROM TIMER QUEUE 0955
*                                                            @ZM45208*/
*               GEN REFS(PSALITA);                                 0956
*                                   /*OBTAIN DISPATCHER LOCK @ZM45208*/
GETLOCKN SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,                         X
               RELATED=(SVCDUMP(IEAVAD00,FRELOCKN))            @ZM45208
*               ERRDLOCK='1'B;      /* INDICATE DISPATCHER LOCK    0957
*                                                            @ZM45208*/
         OI    ERRDLOCK(R3),B'00000100'                            0957
*               R13=R1;             /* SAVE SDWA ADDRESS     @ZM45208*/
         LR    R13,R1                                              0958
*               RFY                                                0959
*                 R2 RSTD;          /* SAVE RETURN ADDR REG  @ZM45208*/
*               R2=ADDR(VAD0RTRN);  /* GET RETURN ADDR       @ZM45208*/
         LA    R2,VAD0RTRN                                         0960
*               R1=SMWKTQEA;        /* GET TQE ADDRESS       @ZM45208*/
         L     @12,CVTPTR                                          0961
         L     @11,CVTRTMCT(,@12)                                  0961
         L     @11,RTCTSDSW(,@11)                                  0961
         L     R1,SMWKTQEA(,@11)                                   0961
*               CALL TQEDEQ;        /* TAKE SUMDUMP TQE OFF TIMER  0962
*                                      QUEUE                 @ZM45208*/
         L     @15,CVTQTD00(,@12)                                  0962
         BALR  @14,@15                                             0962
*VAD0RTRN:                                                         0963
*               RTCTSDTQ='0'B;      /* INDICATE TQE NOT ON QUEUE   0963
*                                                            @ZM45208*/
VAD0RTRN L     @12,CVTPTR                                          0963
         L     @12,CVTRTMCT(,@12)                                  0963
         NI    RTCTSDTQ(@12),B'10111111'                           0963
*               RFY                                                0964
*                 R2 UNRSTD;        /*                       @ZM45208*/
*               R1=R13;             /* RESTORE SAVED SDWA ADDRESS  0965
*                                                            @ZM45208*/
         LR    R1,R13                                              0965
*               GEN REFS(PSALITA);                                 0966
*                                     /*FREE DISPATCHER LOCK @ZM45208*/
FRELOCKN SETLOCK RELEASE,TYPE=DISP,                                    X
               RELATED=(SVCDUMP(IEAVAD00,GETLOCKN))            @ZM45208
*               ERRDLOCK='0'B;      /* INDICATE DISPATCHER LOCK FREED
*                                                            @ZM45208*/
         NI    ERRDLOCK(R3),B'11111011'                            0967
*             END;                  /* END TAKE TQE OFF OF QUEUE   0968
*                                                            @ZM45208*/
*           IF SDWACMPC^=TABLEBAD THEN/* IF TABLE IS ASSUMED OK    0969
*                                                            @ZM44940*/
@RF00954 CLC   SDWACMPC(3,R1),@CB04478                             0969
         BE    @RF00969                                            0969
*             DO;                   /* MARK DUMP COMPLETE THIS ASID
*                                      AND SEE IF LAST       @ZM44940*/
*               RTCTINDX=ERRSAVE;   /* OBTAIN CURRENT TABLE INDEX  0971
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0971
         L     @12,CVTRTMCT(,@12)                                  0971
         MVC   RTCTINDX(1,@12),ERRSAVE(R3)                         0971
*               RTCTSDDO(RTCTINDX)='1'B;/* MARK DUMP COMPLETE      0972
*                                                            @ZM44940*/
*                                                                  0972
         SLR   @11,@11                                             0972
         IC    @11,RTCTINDX(,@12)                                  0972
         SLA   @11,2                                               0972
         ALR   @12,@11                                             0972
         OI    RTCTSDDO-4(@12),B'00000001'                         0972
*               /*****************************************************/
*               /*                                                   */
*               /* THIS LOOP SEES IF THIS ASID IS THE LAST ACTIVE FOR*/
*               /* THIS SCHEDULE DUMP REQUEST                @ZM44940*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0973
*               DO RTCTINDX=ONE TO RTCTSDNA WHILE(RTCTSDDO(RTCTINDX)=
*                     '1'B);        /*                       @ZM44940*/
         LA    @12,1                                               0973
         B     @DE00973                                            0973
@DL00973 L     @12,CVTPTR                                          0973
         L     @12,CVTRTMCT(,@12)                                  0973
         SLR   @11,@11                                             0973
         IC    @11,RTCTINDX(,@12)                                  0973
         SLA   @11,2                                               0973
         ALR   @12,@11                                             0973
         TM    RTCTSDDO-4(@12),B'00000001'                         0973
         BNO   @DC00973                                            0973
*               END;                /* END OF SEARCH LOOP    @ZM44940*/
         L     @11,CVTPTR                                          0974
         L     @11,CVTRTMCT(,@11)                                  0974
         LA    @12,1                                               0974
         SLR   @08,@08                                             0974
         IC    @08,RTCTINDX(,@11)                                  0974
         ALR   @12,@08                                             0974
@DE00973 L     @11,CVTPTR                                          0974
         L     @11,CVTRTMCT(,@11)                                  0974
         STC   @12,RTCTINDX(,@11)                                  0974
         L     @11,CVTPTR                                          0974
         L     @11,CVTRTMCT(,@11)                                  0974
         SLR   @08,@08                                             0974
         IC    @08,RTCTSDNA(,@11)                                  0974
         CR    @12,@08                                             0974
         BNH   @DL00973                                            0974
@DC00973 DS    0H                                                  0975
*             END;                  /* END MARK DUMP COMPLETE THIS 0975
*                                      ASID                  @ZM44940*/
*                                                                  0976
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION HANDLES SCHEDULED DUMP WHERE THE RTCT    */
*           /* TABLE IS THOUGHT TO BE MESSED UP. IT NO LONGER RELIES */
*           /* ON THE TABLE. A DEQ AND ENQ ARE PERFORMED ON THE SDUMP*/
*           /* RESOURCE TO TRY TO BECOME THE LAST DUMP TASK RUNNING  */
*           /* FOR THIS DUMP REQUEST                         @ZM44940*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0976
*           ELSE                                                   0976
*             DO;                   /* TRY TO END DUMP WITHOUT TABLE
*                                                            @ZM44940*/
         B     @RC00969                                            0976
@RF00969 DS    0H                                                  0977
*               ERRTRMNT='1'B;      /* INDICATE ALL DUMP TASKS SHOULD
*                                      DEQ FROM THE SDUMP RESOURCE 0977
*                                      AND QUIT              @ZM44940*/
         OI    ERRTRMNT(R3),B'00001000'                            0977
*               R1=ADDR(DEQLIST);   /* GET DEQ LFORM         @ZM44940*/
         LA    R1,DEQLIST                                          0978
*               GEN REFS(STIMVALU);                                0979
*                                   /*DEQ AND WAIT .5 SECOND @ZM44940*/
DEQ1     DEQ   MF=(E,(R1))  DEQ FROM SDUMP RESOURCE    @ZM44940
         STIMER REAL,BINTVL=STIMVALU  WAIT FOR 1/2 SECOND    @ZM44940
*               R1=ADDR(ENQLIST);   /* GET ENQ LFORM         @ZM44940*/
         LA    R1,ENQLIST                                          0980
*               GEN;                                               0981
*                         /*ENQ ON THE SDUMP RESOURCE AGAIN  @ZM44940*/
ENQ1     ENQ   MF=(E,(R1))  ENQ ON THE SDUMP RESOURCE  @ZM44940
*               RTCTSDNA=0;         /* INDICATE NO ASIDS TO DUMP   0982
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          0982
         L     @12,CVTRTMCT(,@12)                                  0982
         MVI   RTCTSDNA(@12),X'00'                                 0982
*               RTCTINDX=1;         /* INDICATE FINISHED DUMPING   0983
*                                                            @ZM44940*/
         MVI   RTCTINDX(@12),X'01'                                 0983
*             END;                  /* END OF TRY TO END DUMP WITHOUT
*                                      TABLE                 @ZM44940*/
*           IF RTCTINDX>RTCTSDNA THEN/* IF ALL ASIDS DONE    @ZM44940*/
@RC00969 L     @12,CVTPTR                                          0985
         L     @12,CVTRTMCT(,@12)                                  0985
         CLC   RTCTINDX(1,@12),RTCTSDNA(@12)                       0985
         BNH   @RF00985                                            0985
*             DO;                   /* PERFORM TOTAL SCHEDULE DUMP 0986
*                                      CLEANUP               @ZM44940*/
*               CALL IEAVTSDC;      /* CLEAN UP AND NOTIFY OPERATOR
*                                                            @ZM44940*/
         L     @15,@CV04549                                        0987
         BALR  @14,@15                                             0987
*               ERRENDMP='1'B;      /* INDICATE DUMP SHOULD TERM   0988
*                                                            @ZA27227*/
         OI    ERRENDMP(R3),B'01000000'                            0988
*               ERRBASE1=R9;        /* RESTORE BASE REG FOR RECOVERY
*                                                            @ZM44940*/
         ST    R9,ERRBASE1(,R3)                                    0989
*               ERRBASE2=R6;        /* RESTORE BASE REGISTER FOR   0990
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    0990
*               SVCDMPNM=CSECTNAM;  /* RESTORE CSECT NAME FOR      0991
*                                      RECOVERY              @ZM44940*/
         MVC   SVCDMPNM(8,R7),@CC04470                             0991
*               IF ERRLLOCK='1'B THEN/* IF LOCAL LOCK IS HELD      0992
*                                                            @ZM44940*/
         TM    ERRLLOCK(R3),B'00000010'                            0992
         BNO   @RF00992                                            0992
*                 DO;               /* RELEASE THE LOCAL LOCK      0993
*                                                            @ZM44940*/
*                   GEN REFS(PSALITA);                             0994
*                                     /*RELEASE LOCAL LOCK   @ZM44940*/
FRELOCKE SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKR))
*                   ERRLLOCK='0'B;  /* INDICATE LOCAL LOCK FREED   0995
*                                                            @ZM44940*/
         NI    ERRLLOCK(R3),B'11111101'                            0995
*                 END;              /* END OF RELEASE THE LOCAL LOCK
*                                                            @ZM44940*/
*               IF SDUECB='1'B THEN /* IF CALLER SUPPLIED ECB      0997
*                                                            @ZM44940*/
@RF00992 L     @12,SDWSDPL(,R7)                                    0997
         TM    SDUECB(@12),B'00001000'                             0997
         BNO   @RF00997                                            0997
*                 DO;               /* POST CALLER SUPPLIED ECB    0998
*                                                            @ZM44940*/
*                   CALL SDXMPOST;  /* POST CALLERS ECB      @ZM44940*/
         BAL   @14,SDXMPOST                                        0999
*                 END;              /* END POST CALLER ECB   @ZM44940*/
*/********************************************************************/
*/*   THIS SEGMENT WILL REMOVE SVC DUMP SERIALIZATION IF SVC DUMP    */
*/*   WAS SERIALIZED BY IEAVAD00(DUMP WAS NOT SCHEDULED).  THE       */
*/*   SVC DUMP LOCK (RTCTSDPL) AND THE 4K SQA BUFFER LOCK(CVTSDBF)   */
*/*   WILL BE FREED.                                                 */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA                                            */
*/*                                                                  */
*/*   OUTPUT: SVC DUMP IS UNLOCKED                                   */
*/*                                                                  */
*/*   INCLUDED BY: SDFRR,SDESTAE                                     */
*/********************************************************************/
*                                                                  1001
*               IF ERRBFBIT='1'B&   /* IF DUMP SERIALIZED AND      1001
*                                                            @ZM44940*/
*                   SDUABEND='0'B THEN/* THIS IS NOT A SYSMDUMP    1001
*                                      REQUEST               @ZM44940*/
@RF00997 TM    ERRBFBIT(R3),B'00010000'                            1001
         BNO   @RF01001                                            1001
         L     @12,SDWSDPL(,R7)                                    1001
         TM    SDUABEND(@12),B'01000000'                           1001
         BNZ   @RF01001                                            1001
*                 DO;               /* RELEASE SVC DUMP LOCK FLAGS   */
*                   RTCTSDI=RTCTSDI&&RTCTSDI;/* CLEAR RTCT FLAGS   1003
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          1003
         L     @12,CVTRTMCT(,@12)                                  1003
         XC    RTCTSDI(3,@12),RTCTSDI(@12)                         1003
*                   RTCTSDF=RTCTSDF&&RTCTSDF;/* CLEAR RTCT FLAGS   1004
*                                                            @ZM44940*/
         XC    RTCTSDF(4,@12),RTCTSDF(@12)                         1004
*                   DO RTCTINDX=ONE TO MAXENTRY;/* CLEAR WHOLE ARRAY
*                                                            @ZM44940*/
         LA    @12,1                                               1005
         L     @11,CVTPTR                                          1005
         L     @11,CVTRTMCT(,@11)                                  1005
         STC   @12,RTCTINDX(,@11)                                  1005
@DL01005 DS    0H                                                  1006
*                     RTCTSDF3(RTCTINDX)=NULL;/* CLEAR ARRAY FLAGS 1006
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          1006
         L     @12,CVTRTMCT(,@12)                                  1006
         SLR   @11,@11                                             1006
         IC    @11,RTCTINDX(,@12)                                  1006
         SLA   @11,2                                               1006
         SLR   @08,@08                                             1006
         ALR   @12,@11                                             1006
         STCM  @08,15,RTCTSDF3-4(@12)                              1006
*                   END;            /* END OF CLEAR WHOLE ARRAY    1007
*                                                            @ZM44940*/
         L     @11,CVTPTR                                          1007
         L     @11,CVTRTMCT(,@11)                                  1007
         LA    @12,1                                               1007
         SLR   @08,@08                                             1007
         IC    @08,RTCTINDX(,@11)                                  1007
         ALR   @12,@08                                             1007
         L     @11,CVTPTR                                          1007
         L     @11,CVTRTMCT(,@11)                                  1007
         STC   @12,RTCTINDX(,@11)                                  1007
         C     @12,@CF01016                                        1007
         BNH   @DL01005                                            1007
*                   RTCTSDID=NULL;  /* SVC DUMP NOT ACTIVE IN ANY  1008
*                                      ADDRESS SPACE                 */
         SLR   @12,@12                                             1008
         L     @11,CVTPTR                                          1008
         L     @08,CVTRTMCT(,@11)                                  1008
         STH   @12,RTCTSDID(,@08)                                  1008
*                   SDWSDPL=NULL;   /* ZERO PARM LIST ADDRESS      1009
*                                                            @G33VPHD*/
         ST    @12,SDWSDPL(,R7)                                    1009
*                   RTCTSDPL=NULL;  /* UNLOCK SVC DUMP               */
         ST    @12,RTCTSDPL(,@08)                                  1010
*                   CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA BUFFER */
         L     @12,CVTSDBF(,@11)                                   1011
         N     @12,@CF04436                                        1011
         ST    @12,CVTSDBF(,@11)                                   1011
*                 END;                                             1012
*               ELSE                                               1013
*                 ;                                                1013
@RF01001 DS    0H                                                  1014
*             END;                  /* END OF PERFORM TOTAL CLEAN UP
*                                                            @ZM44940*/
*                                                                  1014
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION HANDLES THE CASE WHERE THERE ARE OTHER   */
*           /* ADDRESS SPACES ACTIVE PERFORMING THE SCHEDULED DUMP   */
*           /* ONLY A PARTIAL CLEAN UP IS NECESSARY SINCE THE LAST   */
*           /* ACTIVE ADDRESS SPACE WILL DO THE TOTAL CLEAN UP       */
*           /*                                               @ZM44940*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  1015
*           ELSE                                                   1015
*             DO;                   /* PERFORM PARTIAL SVC DUMP CLEAN
*                                      UP                    @ZM44940*/
         B     @RC00985                                            1015
@RF00985 DS    0H                                                  1016
*               IF ERRLLOCK='0'B THEN/* IF LOCAL LOCK NOT HELD     1016
*                                                            @ZM44940*/
         TM    ERRLLOCK(R3),B'00000010'                            1016
         BNZ   @RF01016                                            1016
*                 DO;               /* OBTAIN THE LOCAL LOCK @ZM44940*/
*                   GEN REFS(PSALITA);                             1018
*                                     /*OBTAIN LOCAL LOCK    @ZM44940*/
GETLOCKP SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X
               RELATED=(SVCDUMP,IEAVAD00(FRELOCKP))
*                   ERRLLOCK='1'B;  /* INDICATE LOCAL LOCK OBTAINED
*                                                            @ZM44940*/
         OI    ERRLLOCK(R3),B'00000010'                            1019
*                 END;              /* END OF RELEASE THE LOCAL LOCK
*                                                            @ZM44940*/
*               R13=ADDR(SDWRGSV1); /* GET SAVE AREA ADDR    @ZM44940*/
@RF01016 LA    R13,SDWRGSV1(,R7)                                   1021
*               CALL IEAVTSDE;      /* FREE ANY RESOURCES    @G33VPHD*/
         L     @15,@CV04554                                        1022
         BALR  @14,@15                                             1022
*               ERRBASE1=R9;        /* RESTORE BASE REGISTER FOR   1023
*                                      RECOVERY              @ZM44940*/
         ST    R9,ERRBASE1(,R3)                                    1023
*               ERRBASE2=R6;        /* RESTORE BASE REGISTER FOR   1024
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    1024
*               SVCDMPNM=CSECTNAM;  /* RESTORE CSECT NAME FOR      1025
*                                      RECOVERY              @ZM44940*/
         MVC   SVCDMPNM(8,R7),@CC04470                             1025
*               GEN REFS(PSALITA);                                 1026
*                                 /*RELEASE THE LOCAL LOCK    @ZM44940*
FRELOCKP SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKP))
*               ERRLLOCK='0'B;      /* INDICATE LOCAL LOCK FREED   1027
*                                                            @ZM44940*/
         NI    ERRLLOCK(R3),B'11111101'                            1027
*             END;                  /* END PERFORM PARTIAL CLEAN UP
*                                                            @ZM44940*/
*           R1=ADDR(DEQLIST);       /* GET DEQ LIST FORM     @ZM44940*/
@RC00985 LA    R1,DEQLIST                                          1029
*           GEN;                                                   1030
*                 /*DEQ FROM SDUMP RESOURCE                  @ZM44940*/
DEQ3     DEQ   MF=(E,(R1))  DEQ FROM SDUMP RESOURCE    @ZM44940
*         END;                      /* END THIS WAS A SCHEDULE DUMP
*                                      REQUEST               @ZM44940*/
*                                                                  1032
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION HANDLES NON-SCHEDULED SVC DUMPS AND  @ZM44940*/
*       /* SYSMDUMP REQUESTS.                                @ZM44940*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1032
*       ELSE                                                       1032
*         DO;                                                      1032
         B     @RC00931                                            1032
@RF00931 DS    0H                                                  1033
*           R13=ADDR(SDWRGSV1);     /* GET SAVE AREA ADDRESS @G33VPHD*/
         LA    R13,SDWRGSV1(,R7)                                   1033
*           CALL IEAVTSDC;          /* FREE ACQUIRED RESOURCES     1034
*                                                            @ZA27227*/
         L     @15,@CV04549                                        1034
         BALR  @14,@15                                             1034
*           ERRBASE1=R9;            /* RESTORE BASE REGISTER FOR   1035
*                                      RECOVERY              @ZM44940*/
         ST    R9,ERRBASE1(,R3)                                    1035
*           ERRBASE2=R6;            /* RESTORE BASE REGISTER FOR   1036
*                                      RECOVERY              @ZM44940*/
         ST    R6,ERRBASE2(,R3)                                    1036
*           SVCDMPNM=CSECTNAM;      /* RESTORE CSECT NAME FOR      1037
*                                      RECOVERY              @ZM44940*/
         MVC   SVCDMPNM(8,R7),@CC04470                             1037
*           IF ERRLLOCK='1'B THEN   /*                       @ZA27227*/
         TM    ERRLLOCK(R3),B'00000010'                            1038
         BNO   @RF01038                                            1038
*             DO;                   /*                       @ZA27227*/
*               GEN REFS(PSALITA);                                 1040
*                                      /*RELEASE LOCAL LOCK          */
FRELOCKT SETLOCK   RELEASE,TYPE=LOCAL,                                 X
               RELATED=(SVCDUMP,IEAVAD00(GETLOCKT))
*               ERRLLOCK='0'B;      /* INDICATE LOCAL LOCK FREED   1041
*                                                            @ZM44940*/
         NI    ERRLLOCK(R3),B'11111101'                            1041
*             END;                  /*                       @ZA27227*/
*           IF SDUECB='1'B THEN     /* IF THE CALLER SUPPLIED      1043
*                                                            @G33VPHD*/
@RF01038 L     @12,SDWSDPL(,R7)                                    1043
         TM    SDUECB(@12),B'00001000'                             1043
         BNO   @RF01043                                            1043
*             DO;                   /* AN ECB POST IT        @G33VPHD*/
*               CALL SDXMPOST;      /* POST CALLER SUPPLIED ECB    1045
*                                                            @ZM44940*/
         BAL   @14,SDXMPOST                                        1045
*             END;                  /* END IF ECB POST IT    @G33VPHD*/
*/********************************************************************/
*/*   THIS SEGMENT WILL REMOVE SVC DUMP SERIALIZATION IF SVC DUMP    */
*/*   WAS SERIALIZED BY IEAVAD00(DUMP WAS NOT SCHEDULED).  THE       */
*/*   SVC DUMP LOCK (RTCTSDPL) AND THE 4K SQA BUFFER LOCK(CVTSDBF)   */
*/*   WILL BE FREED.                                                 */
*/*                                                                  */
*/*   INPUT: ERRWORK AREA                                            */
*/*                                                                  */
*/*   OUTPUT: SVC DUMP IS UNLOCKED                                   */
*/*                                                                  */
*/*   INCLUDED BY: SDFRR,SDESTAE                                     */
*/********************************************************************/
*                                                                  1047
*           IF ERRBFBIT='1'B&       /* IF DUMP SERIALIZED AND      1047
*                                                            @ZM44940*/
*               SDUABEND='0'B THEN  /* THIS IS NOT A SYSMDUMP REQUEST
*                                                            @ZM44940*/
@RF01043 TM    ERRBFBIT(R3),B'00010000'                            1047
         BNO   @RF01047                                            1047
         L     @12,SDWSDPL(,R7)                                    1047
         TM    SDUABEND(@12),B'01000000'                           1047
         BNZ   @RF01047                                            1047
*             DO;                   /* RELEASE SVC DUMP LOCK FLAGS   */
*               RTCTSDI=RTCTSDI&&RTCTSDI;/* CLEAR RTCT FLAGS @ZM44940*/
         L     @12,CVTPTR                                          1049
         L     @12,CVTRTMCT(,@12)                                  1049
         XC    RTCTSDI(3,@12),RTCTSDI(@12)                         1049
*               RTCTSDF=RTCTSDF&&RTCTSDF;/* CLEAR RTCT FLAGS @ZM44940*/
         XC    RTCTSDF(4,@12),RTCTSDF(@12)                         1050
*               DO RTCTINDX=ONE TO MAXENTRY;/* CLEAR WHOLE ARRAY   1051
*                                                            @ZM44940*/
         LA    @12,1                                               1051
         L     @11,CVTPTR                                          1051
         L     @11,CVTRTMCT(,@11)                                  1051
         STC   @12,RTCTINDX(,@11)                                  1051
@DL01051 DS    0H                                                  1052
*                 RTCTSDF3(RTCTINDX)=NULL;/* CLEAR ARRAY FLAGS     1052
*                                                            @ZM44940*/
         L     @12,CVTPTR                                          1052
         L     @12,CVTRTMCT(,@12)                                  1052
         SLR   @11,@11                                             1052
         IC    @11,RTCTINDX(,@12)                                  1052
         SLA   @11,2                                               1052
         SLR   @08,@08                                             1052
         ALR   @12,@11                                             1052
         STCM  @08,15,RTCTSDF3-4(@12)                              1052
*               END;                /* END OF CLEAR WHOLE ARRAY    1053
*                                                            @ZM44940*/
         L     @11,CVTPTR                                          1053
         L     @11,CVTRTMCT(,@11)                                  1053
         LA    @12,1                                               1053
         SLR   @08,@08                                             1053
         IC    @08,RTCTINDX(,@11)                                  1053
         ALR   @12,@08                                             1053
         L     @11,CVTPTR                                          1053
         L     @11,CVTRTMCT(,@11)                                  1053
         STC   @12,RTCTINDX(,@11)                                  1053
         C     @12,@CF01016                                        1053
         BNH   @DL01051                                            1053
*               RTCTSDID=NULL;      /* SVC DUMP NOT ACTIVE IN ANY  1054
*                                      ADDRESS SPACE                 */
         SLR   @12,@12                                             1054
         L     @11,CVTPTR                                          1054
         L     @08,CVTRTMCT(,@11)                                  1054
         STH   @12,RTCTSDID(,@08)                                  1054
*               SDWSDPL=NULL;       /* ZERO PARM LIST ADDRESS      1055
*                                                            @G33VPHD*/
         ST    @12,SDWSDPL(,R7)                                    1055
*               RTCTSDPL=NULL;      /* UNLOCK SVC DUMP               */
         ST    @12,RTCTSDPL(,@08)                                  1056
*               CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA BUFFER     */
         L     @12,CVTSDBF(,@11)                                   1057
         N     @12,@CF04436                                        1057
         ST    @12,CVTSDBF(,@11)                                   1057
*             END;                                                 1058
*           ELSE                                                   1059
*             ;                     /* RELEASE SVC DUMP LOCK FLAGS   */
@RF01047 DS    0H                                                  1060
*         END;                      /* END OF NOT A SCHEDULED DUMP 1060
*                                      REQUEST               @G33VPHD*/
*       R14=R10;                    /* RESTORE RETURN ADDRESS      1061
*                                                            @ZA27227*/
@RC00931 LR    R14,R10                                             1061
*       ERRORWK=''B;                /* ZERO SDUMP WORK AREA ERROR  1062
*                                      AREA                  @ZA27227*/
         XC    ERRORWK(24,R7),ERRORWK(R7)                          1062
*       RFY                                                        1063
*         R15 RSTD;                                                1063
*       R15=NULL;                   /* IND PERCOLATION IF NO SDWA    */
         SLR   R15,R15                                             1064
*       RFY                                                        1065
*         R15 UNRSTD;                                              1065
*     END;                          /* END OF PERCOLATION PROCESSING
*                                                            @ZM44940*/
*   RETURN;                         /* RETURN TO RTM FOR PERC OR   1067
*                                      RETRY                 @G33VPHD*/
         B     @EL00001                                            1067
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     1068
*     GPR12F FIXED(31) REG(12),                                    1068
*     GPR00P PTR(31) REG(0),                                       1068
*     GPR01P PTR(31) REG(1),                                       1068
*     GPR02P PTR(31) REG(2),                                       1068
*     GPR13P PTR(31) REG(13),                                      1068
*     GPR14P PTR(31) REG(14),                                      1068
*     GPR15P PTR(31) REG(15);                                      1068
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       1069
*     I031F FIXED(31) BASED,                                       1069
*     I031P PTR(31) BASED,                                         1069
*     I015F FIXED(15) BASED,                                       1069
*     I015P PTR(15) BASED,                                         1069
*     I008P PTR(8) BASED,                                          1069
*     I001C CHAR(1) BASED;                                         1069
*   END IEAVAD00                                                   1070
*                                                                  1070
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (S51SPEC )                                       */
*/*%INCLUDE SYSLIB  (D00DCL  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IHARTM2A)                                       */
*/*%INCLUDE SYSLIB  (IHASNP  )                                       */
*/*%INCLUDE SYSLIB  (IHARMPL )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHALCCAT)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IHASDUMP)                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHAESTA )                                       */
*/*%INCLUDE SYSLIB  (IHASMDLR)                                       */
*/*%INCLUDE SYSLIB  (IHASDRSB)                                       */
*/*%INCLUDE SYSLIB  (IHASMWK )                                       */
*/*%INCLUDE SYSLIB  (IHASDWRK)                                       */
*/*%INCLUDE SYSLIB  (IHASDERR)                                       */
*/*%INCLUDE SYSLIB  (SDTOP   )                                       */
*/*%INCLUDE SYSLIB  (SDPROLOG)                                       */
*/*%INCLUDE SYSLIB  (POSSIBLE)                                       */
*/*%INCLUDE SYSLIB  (SDVALID )                                       */
*/*%INCLUDE SYSLIB  (SDENVIR )                                       */
*/*%INCLUDE SYSLIB  (SDSETRCE)                                       */
*/*%INCLUDE SYSLIB  (SDUMP   )                                       */
*/*%INCLUDE SYSLIB  (FREEFLGS)                                       */
*/*%INCLUDE SYSLIB  (FREEFLGS)                                       */
*/*%INCLUDE SYSLIB  (FREEFLGS)                                       */
*/*%INCLUDE SYSLIB  (FREEFLGS)                                       */
*/*%INCLUDE SYSLIB  (FREEFLGS)                                       */
*/*%INCLUDE SYSLIB  (FREEFLGS)                                       */
*/*%INCLUDE SYSLIB  (SDXMPOST)                                       */
*/*%INCLUDE SYSLIB  (SDFRR   )                                       */
*/*%INCLUDE SYSLIB  (SDESTAE )                                       */
*                                                                  1070
*       ;                                                          1070
         B     @EL00001                                            1070
@DATA    DS    0H
@CH00037 DC    H'0'
@DATD    DSECT
         DS    0F
IEAVAD00 CSECT
         DS    0F
@CF00074 DC    F'2'
@CF00054 DC    F'4'
@CF00060 DC    F'8'
@CF01016 DC    F'16'
@CF04432 DC    F'4096'
@CF04436 DC    XL4'7FFFFFFF'
@CF04438 DC    XL4'80000000'
@CF04457 DC    XL4'00002000'
@CF04461 DC    XL4'07FA07FB'
@CF04463 DC    XL4'070A07FB'
@CF04671 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IEAVAD00 CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV04542 DC    V(IEAVAD01)
@CV04549 DC    V(IEAVTSDC)
@CV04550 DC    V(IEAVTSDF)
@CV04551 DC    V(IEAVTSDG)
@CV04552 DC    V(IEAVTSDH)
@CV04553 DC    V(IEAVTSDL)
@CV04554 DC    V(IEAVTSDE)
@CV04555 DC    V(IEAVTSSE)
         DS    0D
SMWKLEN  DC    AL4(980)
ADDRFRR  DC    AL4(SDFRRRTN)
ADDRESTA DC    AL4(SDESTAEX)
@CC04468 DC    C'IGC0005A'
@CC04470 DC    C'IEAVAD00'
@CC04472 DC    C'SDFRRRTN'
@CC04474 DC    C'SDESTAEX'
@CB04476 DC    X'233000'
@CB04478 DC    X'C0D000'
@CB04480 DC    X'1140'
STIMVALU DC    X'00000032'
QNAMEA   DC    CL8'SDUMPQNM'
RNAMEA   DC    CL8'SDUMPRNM'
SMDWSAG  DC    AL2(6)
         DC    AL2(7)
         DC    AL2(8)
         DC    AL2(9)
         DC    AL2(10)
         DC    AL2(11)
         DC    AL2(12)
         DC    AL2(13)
         DC    AL2(14)
         DC    AL2(15)
         DC    AL2(16)
SMDWSAC  DC    AL2(17)
         DC    AL2(18)
         DC    AL2(19)
         DC    AL2(20)
         DC    AL2(21)
         DC    AL2(22)
         DC    AL2(23)
         DC    AL2(24)
         DC    AL2(25)
         DC    AL2(26)
         DC    AL2(27)
         DC    AL2(28)
         DC    AL2(29)
         DC    AL2(30)
         DC    AL2(54)
         DC    AL2(55)
SMDWSAL  DC    AL2(31)
         DC    AL2(32)
         DC    AL2(33)
         DC    AL2(34)
         DC    AL2(35)
         DC    AL2(36)
         DC    AL2(37)
         DC    AL2(38)
         DC    AL2(39)
         DC    AL2(40)
         DC    AL2(41)
         DC    AL2(42)
         DC    AL2(43)
         DC    AL2(44)
         DC    AL2(45)
IEAVAD00 CSECT
*                                                      /*  @ZM44940 */
ESTAELST ESTAE ESTAEXIT,MF=L
POSTLIST POST      ,MF=L                 LIST FORM OF POST   @G33VPHD
ENQLIST  ENQ   (QNAMEA,RNAMEA,E,8,SYSTEM),RELATED=(DEQ1,IEAVAD00),MF=L
DEQLIST  DEQ   (QNAMEA,RNAMEA,8,SYSTEM),RELATED=(ENQ1,IEAVAD00),MF=L
SDUPATCH DC    400X'00'                  SVC DUMP PATCH AREA
ENDSVCD  EQU   *                         LABEL AT END OF IEAVAD00
@DATD    DSECT
@ENDDATD EQU   *
IEAVAD00 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R3       EQU   @03
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR02P   EQU   @02
GPR12F   EQU   @12
GPR13P   EQU   @13
R12      EQU   @12
R8       EQU   @08
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
FLCTRACE EQU   PSA+84
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTQTD00 EQU   CVTMAP+108
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTGTFAV EQU   CVTGTFS
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCBPTR   EQU   0
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFX    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBNTC   EQU   TCB+128
TCBLTC   EQU   TCB+136
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXSVC EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBRTWA  EQU   TCB+224
TCBTID   EQU   TCB+238
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBETERM EQU   TCBESTRM
TCBFBYT1 EQU   TCB+276
TCBRTM2  EQU   TCBFBYT1
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
SCVTSECT EQU   0
SCVTSTAT EQU   SCVTSECT+148
ASVT     EQU   0
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
RTCT     EQU   0
RTCTPLIB EQU   RTCT+4
RTCTSAP  EQU   RTCTPLIB
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSAP3 EQU   RTCTSAP+2
RTCTSUP  EQU   RTCTPLIB+4
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSUP3 EQU   RTCTSUP+2
RTCTSYD  EQU   RTCTPLIB+8
RTCTSY01 EQU   RTCTSYD
RTCTSDID EQU   RTCT+18
RTCTSDDS EQU   RTCT+36
RTCTFLG  EQU   RTCTSDDS+3
RTCTSDPL EQU   RTCT+156
RTCTRFLG EQU   RTCT+176
RTCTSDSW EQU   RTCT+180
RTCTSDWK EQU   RTCT+220
RTCTERID EQU   RTCT+224
RTCTOPT  EQU   RTCT+236
RTCTASO  EQU   RTCT+252
RTCTASO1 EQU   RTCTASO
RTCTASO2 EQU   RTCTASO+1
RTCTSDI  EQU   RTCT+254
RTCTSDNA EQU   RTCTSDI
RTCTINDX EQU   RTCTSDI+1
RTCTSDF  EQU   RTCT+264
RTCTSDF1 EQU   RTCTSDF
RTCTSDNO EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDSH EQU   RTCTSDF1
RTCTSDEP EQU   RTCTSDF1
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDTQ EQU   RTCTSDF2
RTCTSDFX EQU   RTCTSDF2
RTCTR2D2 EQU   RTCTSDF+2
RTCTC3PO EQU   RTCTSDF+3
RTCTSDF3 EQU   RTCT+268
RTCTSDAS EQU   RTCTSDF3
RTCTSDF4 EQU   RTCTSDF3+2
RTCTSDAN EQU   RTCTSDF4
RTCTSDEN EQU   RTCTSDF4
RTCTSDDO EQU   RTCTSDF4
RTCTMOPT EQU   0
RTCTMSAO EQU   RTCTMOPT
RTCTSASD EQU   RTCTMSAO
RTCTSAO1 EQU   RTCTSASD
RTCTSAO2 EQU   RTCTSASD+1
RTCTSAPD EQU   RTCTMSAO+2
RTCTSAO3 EQU   RTCTSAPD
RTCTSAO4 EQU   RTCTSAPD+1
RTCTSAMG EQU   RTCTSAO4
RTCTMSUO EQU   RTCTMOPT+4
RTCTSUSD EQU   RTCTMSUO
RTCTSUO1 EQU   RTCTSUSD
RTCTSUO2 EQU   RTCTSUSD+1
RTCTSUPD EQU   RTCTMSUO+2
RTCTSUO3 EQU   RTCTSUPD
RTCTSUO4 EQU   RTCTSUPD+1
RTCTSUMG EQU   RTCTSUO4
RTCTMSYO EQU   RTCTMOPT+8
RTCTSD01 EQU   RTCTMSYO
RTCTSD04 EQU   RTCTMSYO+3
RTCTSMMG EQU   RTCTSD04
RTCTMSDO EQU   RTCTMOPT+12
RTCTSDOD EQU   RTCTMSDO
RTCTSDO1 EQU   RTCTSDOD
RTCTSDO2 EQU   RTCTSDOD+1
RTCTSDO3 EQU   RTCTMSDO+2
RTCTSDPG EQU   RTCTSDO3
RTCTSDPH EQU   RTCTSDO3
RTCTSDO4 EQU   RTCTMSDO+3
RTCTSDMG EQU   RTCTSDO4
RTCTISVC EQU   RTCTSDO4
RTM2PTR  EQU   0
SNPPARMS EQU   0
SNPFLAG  EQU   SNPPARMS+1
SNPSNAP  EQU   SNPFLAG
SNPVS2   EQU   SNPFLAG
SNPSDATA EQU   SNPPARMS+4
SNPSDAT0 EQU   SNPSDATA
SNPSDAT1 EQU   SNPSDATA+1
SNPPDATA EQU   SNPPARMS+6
SNPDCB   EQU   SNPPARMS+8
RMPL     EQU   0
RMPLFLG1 EQU   RMPL
RTM2WA   EQU   0
RTM2DESC EQU   RTM2WA
RTM2RT2D EQU   RTM2DESC+8
RTM2CODE EQU   RTM2WA+28
RTM2CCF  EQU   RTM2CODE
RTM2PGCY EQU   RTM2WA+60
RTM2TRRY EQU   RTM2PGCY
RTM2EEDR EQU   RTM2TRRY
RTM2EREG EQU   RTM2EEDR
RTM2APSW EQU   RTM2EEDR+64
RTM2EPSW EQU   RTM2APSW
RTM2EMK1 EQU   RTM2EPSW
RTM2MWP1 EQU   RTM2EPSW+1
RTM2INT1 EQU   RTM2EPSW+2
RTM2NXT1 EQU   RTM2EPSW+4
RTM2AEC1 EQU   RTM2APSW+8
RTM2ILC1 EQU   RTM2AEC1+1
RTM2INC1 EQU   RTM2AEC1+2
RTM2ICD1 EQU   RTM2INC1+1
RTM2EEDH EQU   RTM2TRRY+92
RTM2STCK EQU   RTM2EEDH
RTM2MCHI EQU   RTM2EEDH+8
RTM2MCHS EQU   RTM2MCHI
RTM2MCHD EQU   RTM2MCHI+1
RTM2RSR1 EQU   RTM2EEDH+12
RTM2RSR2 EQU   RTM2EEDH+13
RTM2FLGS EQU   RTM2TRRY+120
RTM2ERRA EQU   RTM2FLGS
RTM2ERRB EQU   RTM2FLGS+1
RTM2ERRC EQU   RTM2FLGS+2
RTM2ERRD EQU   RTM2FLGS+3
RTM2CVER EQU   RTM2WA+186
RTM2TRRC EQU   RTM2CVER
RTM2IOFS EQU   RTM2TRRC
RTM2IOBP EQU   RTM2TRRC+2
RTM2SCBS EQU   RTM2TRRC+14
RTM2RTCD EQU   RTM2TRRC+26
RTM2SPLL EQU   RTM2RTCD+4
RTM2PARQ EQU   RTM2TRRC+46
RTM2CTL1 EQU   RTM2CVER+50
RTM2CMKA EQU   RTM2CTL1
RTM2MWPA EQU   RTM2CTL1+1
RTM2PMKA EQU   RTM2CTL1+4
RTM2CTL2 EQU   RTM2CVER+58
RTM2CMKP EQU   RTM2CTL2
RTM2MWPP EQU   RTM2CTL2+1
RTM2PMKP EQU   RTM2CTL2+4
RTM2SNAP EQU   RTM2CVER+66
RTM2SPRM EQU   RTM2SNAP+4
RTM2DPSL EQU   RTM2SNAP+24
RTM2FRM1 EQU   RTM2DPSL
RTM2TO1  EQU   RTM2DPSL+4
RTM2FRM2 EQU   RTM2DPSL+8
RTM2TO2  EQU   RTM2DPSL+12
RTM2FRM3 EQU   RTM2DPSL+16
RTM2TO3  EQU   RTM2DPSL+20
RTM2FRM4 EQU   RTM2DPSL+24
RTM2TO4  EQU   RTM2DPSL+28
RTM2SECB EQU   RTM2CVER+138
RTM2ECBA EQU   RTM2SECB
RTM2SFRG EQU   RTM2CVER+186
RTM2SCTL EQU   RTM2CVER+259
RTM2CCTL EQU   RTM2SCTL
RTM2NODP EQU   RTM2CCTL+1
RTM2ABDR EQU   RTM2SCTL+4
RTM2ABID EQU   RTM2ABDR
RTM2ABND EQU   RTM2ABDR+1
RTM2RCTL EQU   RTM2SCTL+6
RTM2INTF EQU   RTM2CVER+266
RTM2CTLR EQU   RTM2INTF
RTM2TSKT EQU   RTM2INTF+2
RTM2ABDP EQU   RTM2INTF+4
RTM2ASIR EQU   RTM2INTF+5
RTM2FLX  EQU   RTM2INTF+6
RTM2FLX1 EQU   RTM2FLX
RTM2FLX2 EQU   RTM2FLX+1
RTM2RECL EQU   RTM2CVER+274
RTM2DCTL EQU   RTM2RECL+12
RTM2ECTL EQU   RTM2RECL+13
RTM2TRYR EQU   RTM2RECL+16
RTM2TRF1 EQU   RTM2TRYR
RTM2TRF2 EQU   RTM2TRYR+2
RTM2RECH EQU   RTM2CVER+294
RTM2RRG  EQU   RTM2CVER+314
RTM2CRG  EQU   RTM2CVER+378
RTM2RMIN EQU   RTM2WA+708
RTM2RMPL EQU   RTM2RMIN+4
RTM2RMWA EQU   RTM2RMIN+28
RTM2ERID EQU   RTM2WA+872
RTM2ENSN EQU   RTM2WA+884
RTM2SNLN EQU   RTM2ENSN
RTM2RYRG EQU   RTM2WA+904
STORAGE  EQU   0
STORFRM  EQU   STORAGE
STORTO   EQU   STORAGE+4
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR06 EQU   SDWASRSV+24
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWACLUP EQU   SDWAERRD
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWASDA0 EQU   SDWASDAT
SDWASDA1 EQU   SDWASDAT+1
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SDWAHEX  EQU   SDWADPVA
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
SDWAPTR  EQU   0
UCB      EQU   0
UCBPTR   EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3TAPE EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00135 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMIHTI EQU   UCBCMEXT+16
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
LCCAVT   EQU   0
IHADCB   EQU   0
DCBPTR   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS28 EQU   0
DCBOPTCD EQU   IHADCS28
DCBOPTZ  EQU   DCBOPTCD
WSAL     EQU   0
WSALSDMP EQU   WSAL+12
WSAG     EQU   0
WSAC     EQU   0
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBPTR   EQU   0
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBDAPTR EQU   0
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBEXPTR EQU   0
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEBSBPTR EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
SDUMP    EQU   0
SDUFLAG0 EQU   SDUMP
SDUDCB   EQU   SDUFLAG0
SDUBUF   EQU   SDUFLAG0
SDUSTOR  EQU   SDUFLAG0
SDUHDR   EQU   SDUFLAG0
SDUECB   EQU   SDUFLAG0
SDUASID  EQU   SDUFLAG0
SDUQUIET EQU   SDUFLAG0
SDUBRANH EQU   SDUFLAG0
SDUFLAG1 EQU   SDUMP+1
DUMPTYPE EQU   SDUFLAG1
SDUABEND EQU   SDUFLAG1
SDUNEW   EQU   SDUFLAG1
SDUASLST EQU   SDUFLAG1
SDUSDAT1 EQU   SDUMP+2
SDUSDAT2 EQU   SDUMP+3
SDUDCBAD EQU   SDUMP+4
SDUSTORA EQU   SDUMP+8
SDUHDRAD EQU   SDUMP+12
SDUECBAD EQU   SDUMP+16
SDUMASID EQU   SDUMP+20
SDUCASID EQU   SDUMASID
SDUSYSMC EQU   SDUMP+36
SDUMPPTR EQU   0
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSPTR  EQU   0
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
FRREPTR  EQU   0
ASXB     EQU   0
ASXBFTCB EQU   ASXB+4
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
ESTA     EQU   0
ESTAEXT  EQU   ESTA
ESTAFLG1 EQU   ESTAEXT
ESTAIO   EQU   ESTAFLG1
ESTAEXIT EQU   ESTAEXT+1
ESTAFGRS EQU   ESTA+12
ESTAFLG2 EQU   ESTAFGRS
ESTAPTR  EQU   0
SMDLR    EQU   0
SMDLRHDR EQU   SMDLR
SMWKRSCB EQU   0
SMWKFLGA EQU   SMWKRSCB
SMWKEVRY EQU   SMWKFLGA
SMWKFRHD EQU   SMWKRSCB+2
SMWKFRPT EQU   SMWKRSCB+4
SMWKPRSR EQU   SMWKRSCB+12
SMWKRSFM EQU   SMWKRSCB+16
SMWK     EQU   0
SMWKFLGS EQU   SMWK+4
SMWKFLG1 EQU   SMWKFLGS
SMWKRBUF EQU   SMWKFLG1
SMWKSAV1 EQU   SMWK+80
SMWKPSW  EQU   SMWK+168
SMWKRSM  EQU   SMWK+196
SMWKNFAV EQU   SMWK+616
SMWKRSIX EQU   SMWK+618
SMWKFRUS EQU   SMWK+620
SMWKREGS EQU   SMWK+676
SMWKTQEA EQU   SMWK+824
SMWKPSSE EQU   SMWK+960
SDWORK   EQU   0
SDCNTRL  EQU   SDWORK
LSTESTAE EQU   SDCNTRL+44
DACHARAD EQU   SDCNTRL+60
SDWSDPL  EQU   SDCNTRL+96
SVCDOPTS EQU   SDCNTRL+100
SVCDOPT1 EQU   SVCDOPTS
SVCDTRT  EQU   SVCDOPT1
SVCDOPT2 EQU   SVCDOPTS+1
SVCDCSA  EQU   SVCDOPT2
SVCDNSMD EQU   SVCDOPT2
SVCDNSQA EQU   SVCDOPT2
FLAGSONE EQU   SDCNTRL+102
FLAGSTWO EQU   SDCNTRL+103
ERRORWK  EQU   SDCNTRL+104
SVCDMPNM EQU   SDCNTRL+128
SVCDLPST EQU   SDCNTRL+136
SDRETCOD EQU   SDCNTRL+212
SDWRGSV1 EQU   SDCNTRL+216
CVRT11   EQU   SDCNTRL+368
CVRT1    EQU   CVRT11+4
CVRT2    EQU   SDCNTRL+376
SDCVRT4  EQU   CVRT2+2
SVCNAME  EQU   SDCNTRL+392
SVCNM1T5 EQU   SVCNAME
SVCNM6T8 EQU   SVCNAME+5
SVCNM7T8 EQU   SVCNM6T8+1
CCWCHAIN EQU   SDCNTRL+400
CCW1     EQU   CCWCHAIN
FLAGS1   EQU   CCW1+4
CCW2     EQU   CCWCHAIN+8
FLAGS2   EQU   CCW2+4
CCW3     EQU   CCWCHAIN+16
FLAGS3   EQU   CCW3+4
SDOUTBUF EQU   SDWORK+432
RCDCCHH  EQU   SDOUTBUF
ERRWORK  EQU   0
ERRFLGS1 EQU   ERRWORK
ERRFRR   EQU   ERRFLGS1
ERRESTAE EQU   ERRFLGS1
ERRSDBIT EQU   ERRFLGS1
ERRBFBIT EQU   ERRFLGS1
ERRTCBND EQU   ERRFLGS1
ERRGTFGO EQU   ERRFLGS1
ERRLLOCK EQU   ERRFLGS1
ERRSLOCK EQU   ERRFLGS1
ERRFLGS2 EQU   ERRWORK+1
ERRINIO  EQU   ERRFLGS2
ERRENDMP EQU   ERRFLGS2
ERRCMSLK EQU   ERRFLGS2
ERRCUDMP EQU   ERRFLGS2
ERRNORCD EQU   ERRFLGS2
ERRCDOUT EQU   ERRFLGS2
ERRRUBSW EQU   ERRWORK+2
ERRADDR  EQU   ERRWORK+4
ERRRETRY EQU   ERRADDR
ERRWKADR EQU   ERRWORK+8
ERRBASE1 EQU   ERRWORK+12
ERRFLAG3 EQU   ERRWORK+16
ERRNOTRM EQU   ERRFLAG3
ERRTRMNT EQU   ERRFLAG3
ERRDLOCK EQU   ERRFLAG3
ERRSRBSD EQU   ERRFLAG3
ERRSAVE  EQU   ERRWORK+17
ERRBASE2 EQU   ERRWORK+20
RTYADDR  EQU   0
DEVTYPE  EQU   0
STORANGE EQU   0
STARTADR EQU   STORANGE
ENDADDR  EQU   STORANGE+4
LASTRNGE EQU   ENDADDR
TRTPTRS  EQU   0
TRTCURR  EQU   TRTPTRS
TRTENTY  EQU   0
@NM00209 EQU   TRTENTY+20
CURRSTOP EQU   @NM00209
IEAVTSDX EQU   0
STATUS   EQU   0
IEAVPRSR EQU   0
TQEDEQ   EQU   0
USERDATA EQU   0
SDUHDRLN EQU   USERDATA
I015F    EQU   0
I001C    EQU   0
I008P    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
SNAPPTR  EQU   0
UCBBGN   EQU   0
UCBDCPTR EQU   0
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSDTRC EQU   CVTCTLFG
CVTTRACE EQU   CVTS01+52
CVTOPTE  EQU   CVTS01+188
CVTASVT  EQU   CVTS01+208
CVTRTMCT EQU   CVTS01+224
CVTSV60  EQU   CVTS01+228
CVTSDMP  EQU   CVTS01+232
CVTSDBF  EQU   CVTS01+240
CVTEXPRO EQU   CVTS01+260
CVTSPSA  EQU   CVTS01+336
CVTLCCAT EQU   CVTS01+420
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
SCVTSPTR EQU   CVTABEND
ASVTPTR  EQU   CVTASVT
ASCBPTR  EQU   PSAAOLD
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00134 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
LCCAPTR  EQU   PSALCCAV
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
ASXBPTR  EQU   ASCBASXB
TRTCVTWD EQU   CVTTRACE
DCBDADDR EQU   DCBFDAD
R1SDFLAG EQU   SNPDCB
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DCBRCDNO EQU   DCBDADDR+7
@NM00210 EQU   DCBDADDR
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00134
UCBSKPFG EQU   @NM00134
UCBRIPND EQU   @NM00134
UCBRTIAC EQU   @NM00134
UCBRSV79 EQU   @NM00134
UCBRSV78 EQU   @NM00134
UCBRSV77 EQU   @NM00134
UCBOLTEP EQU   @NM00134
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00133 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSCBP  EQU   CVTS01+236
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTAPG   EQU   CVTS01+51
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
SDUSERDA EQU   USERDATA+1
@NM00208 EQU   TRTENTY
TRTEND   EQU   TRTPTRS+8
TRTBEG   EQU   TRTPTRS+4
MAXTPERC EQU   DEVTYPE+1
MAXRPERT EQU   DEVTYPE
@NM00207 EQU   ERRWORK+18
@NM00206 EQU   ERRFLAG3
ERRCSDT  EQU   ERRFLAG3
ERRSDENQ EQU   ERRFLAG3
ERRENDSW EQU   ERRFLAG3
ERRWKFIX EQU   ERRFLGS2
ERRSDFIX EQU   ERRFLGS2
SDBUFFER EQU   SDWORK+440
DATALEN  EQU   SDOUTBUF+6
KEYLEN   EQU   SDOUTBUF+5
RECORDNO EQU   SDOUTBUF+4
RCDHH    EQU   RCDCCHH+2
RCDCC    EQU   RCDCCHH
SDSMDECB EQU   SDCNTRL+428
SDSMBUFF EQU   SDCNTRL+424
BYTECNT3 EQU   CCW3+6
@NM00205 EQU   CCW3+5
PCI3     EQU   FLAGS3
SKIP3    EQU   FLAGS3
SLI3     EQU   FLAGS3
CC3      EQU   FLAGS3
CD3      EQU   FLAGS3
DATAADR3 EQU   CCW3+1
CMDCODE3 EQU   CCW3
BYTECNT2 EQU   CCW2+6
@NM00204 EQU   CCW2+5
PCI2     EQU   FLAGS2
SKIP2    EQU   FLAGS2
SLI2     EQU   FLAGS2
CC2      EQU   FLAGS2
CD2      EQU   FLAGS2
DATAADR2 EQU   CCW2+1
CMDCODE2 EQU   CCW2
BYTECNT1 EQU   CCW1+6
@NM00203 EQU   CCW1+5
PCI1     EQU   FLAGS1
SKIP1    EQU   FLAGS1
SLI1     EQU   FLAGS1
CMDC1    EQU   FLAGS1
CD1      EQU   FLAGS1
DATAADR1 EQU   CCW1+1
CMDCODE1 EQU   CCW1
SVCNM8   EQU   SVCNM7T8+1
SVCNM7   EQU   SVCNM7T8
SVCNM6   EQU   SVCNM6T8
SVCNM1T4 EQU   SVCNM1T5
@NM00202 EQU   SDCNTRL+388
SVC994ID EQU   SDCNTRL+384
CVRT2SGN EQU   SDCVRT4+5
@NM00201 EQU   SDCVRT4
@NM00200 EQU   CVRT2
SDCVRT1  EQU   CVRT1+2
@NM00199 EQU   CVRT1
@NM00198 EQU   CVRT11
CHCNT    EQU   SDCNTRL+366
TIMCNT   EQU   SDCNTRL+364
DSTINDEX EQU   SDCNTRL+360
SDWRGSV2 EQU   SDCNTRL+288
ADDADRWD EQU   SDCNTRL+208
ADDADRWC EQU   SDCNTRL+204
ADDADRWB EQU   SDCNTRL+200
ADDADRWA EQU   SDCNTRL+196
USEEND   EQU   SDCNTRL+192
USESTART EQU   SDCNTRL+188
SPQEADDR EQU   SDCNTRL+184
USERRETA EQU   SDCNTRL+180
PGFRRETA EQU   SDCNTRL+176
SPQERETA EQU   SDCNTRL+172
@NM00197 EQU   SDCNTRL+171
SDWKEY   EQU   SDCNTRL+170
AFFNSAV  EQU   SDCNTRL+168
FREERETA EQU   SDCNTRL+164
LPDERETA EQU   SDCNTRL+160
CDERETA  EQU   SDCNTRL+156
DISPRETA EQU   SDCNTRL+152
SDIORETA EQU   SDCNTRL+148
SDWPAGOT EQU   FLAGSONE
FLGFLAST EQU   FLAGSONE
FLGTAPEE EQU   FLAGSONE
FLGRTFUL EQU   FLAGSONE
SVCDNAPA EQU   SVCDOPT2
SVCDSMDP EQU   SVCDOPT2
SVCDSWA  EQU   SVCDOPT2
SVCDLPA  EQU   SVCDOPT1
SVCDRGN  EQU   SVCDOPT1
SVCDLSQA EQU   SVCDOPT1
SVCDSQA  EQU   SVCDOPT1
SVCDNUC  EQU   SVCDOPT1
SVCDPSA  EQU   SVCDOPT1
SVCDAPSA EQU   SVCDOPT1
SDSRBBAS EQU   SDCNTRL+92
SDSRBADR EQU   SDCNTRL+88
SVCDSRBA EQU   SDCNTRL+84
ENDADRNT EQU   SDCNTRL+80
RANGEPTR EQU   SDCNTRL+76
GLOBADDR EQU   SDCNTRL+72
LOCALADR EQU   SDCNTRL+68
NUCADDR  EQU   SDCNTRL+64
SDIOB    EQU   SDCNTRL+4
SDECB    EQU   SDCNTRL
@NM00196 EQU   SMWK+978
SMWKNSTB EQU   SMWK+976
SMWKNFFD EQU   SMWK+974
SMWKNTDQ EQU   SMWK+972
SMWKNTDI EQU   SMWK+970
SMWKNFUS EQU   SMWK+968
SMWKNFAQ EQU   SMWK+966
SMWKNFRQ EQU   SMWK+964
SMWKTQE  EQU   SMWK+832
@NM00195 EQU   SMWK+828
SMWKSVLN EQU   SMWK+820
SMWKNDIE EQU   SMWK+818
SMWKNFRE EQU   SMWK+816
SMWKNFRI EQU   SMWK+814
SMWKALEN EQU   SMWK+812
SMWKSCBF EQU   SMWK+810
SMWKREGN EQU   SMWK+808
SMWKIDX2 EQU   SMWK+806
SMWKIDX1 EQU   SMWK+804
SMWKSREG EQU   SMWKREGS
SMWKHEAD EQU   SMWK+656
SMWKSMVL EQU   SMWK+652
SMWKSMMV EQU   SMWK+648
SMWKSMBF EQU   SMWK+644
SMWKSMLS EQU   SMWK+640
SMWKSMRG EQU   SMWK+636
SMWKSMDT EQU   SMWK+632
SMWKSDMP EQU   SMWK+628
SMWKSMLK EQU   SMWK+624
@NM00194 EQU   SMWK+622
SMWKRFAD EQU   SMWK+612
SMWKCPUS EQU   SMWK+192
SMWKPEND EQU   SMWK+188
SMWKSAVA EQU   SMWK+184
SMWKENDA EQU   SMWK+180
SMWKVADR EQU   SMWK+176
SMWKPSWA EQU   SMWKPSW+4
@NM00193 EQU   SMWKPSW+2
SMWKPSWK EQU   SMWKPSW+1
SMWKPSWS EQU   SMWKPSW
SMWKPFXE EQU   SMWK+164
SMWKPFXB EQU   SMWK+160
SMWKSSDE EQU   SMWK+156
SMWKENTY EQU   SMWK+152
SMWKSAVE EQU   SMWK+8
SMWKFLG4 EQU   SMWKFLGS+3
SMWKFLG3 EQU   SMWKFLGS+2
SMWKFLG2 EQU   SMWKFLGS+1
@NM00192 EQU   SMWKFLG1
@NM00191 EQU   SMWKFLG1
SMWKSTBK EQU   SMWKFLG1
SMWKSLCL EQU   SMWKFLG1
SMWKRSNM EQU   SMWKFLG1
SMWKRBFL EQU   SMWKFLG1
SMWKSLCK EQU   SMWKFLG1
SMWKNAME EQU   SMWK
SMWKFRMA EQU   SMWKRSFM
SMWKTSDS EQU   SMWKRSCB+8
SMWKFLGB EQU   SMWKRSCB+1
@NM00190 EQU   SMWKFLGA
SMDLRDAT EQU   SMDLR+20
@NM00189 EQU   SMDLRHDR+17
SMDLRMSG EQU   SMDLRHDR+16
SMDLRPL  EQU   SMDLRHDR+12
SMDLRADR EQU   SMDLRHDR+8
SMDLRLEN EQU   SMDLRHDR+4
@NM00188 EQU   SMDLRHDR+2
SMDLRID  EQU   SMDLRHDR
ESTARSVI EQU   ESTAFGRS+1
@NM00187 EQU   ESTAFLG2
ESTABRNT EQU   ESTAFLG2
@NM00186 EQU   ESTAFLG2
ESTAEREC EQU   ESTAFLG2
ESTATERM EQU   ESTAFLG2
@NM00185 EQU   ESTAFLG2
ESTAOWNR EQU   ESTA+8
ESTAPARM EQU   ESTA+4
ESTAHALT EQU   ESTAIO
ESTANOIO EQU   ESTAIO
ESTASYNC EQU   ESTAFLG1
@NM00184 EQU   ESTAFLG1
ESTAESTA EQU   ESTAFLG1
@NM00183 EQU   ESTAFLG1
ESTASTAR EQU   ESTAFLG1
ESTASTAI EQU   ESTAFLG1
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
@NM00182 EQU   FRRSFLGS+1
@NM00181 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
SDUSYSMS EQU   SDUMP+32
SDUSUMLP EQU   SDUMP+28
SDUASIDP EQU   SDUMP+24
SDUTASID EQU   SDUMASID+2
@NM00156 EQU   SDUSDAT2
SDUNASQA EQU   SDUSDAT2
SDUNAPSA EQU   SDUSDAT2
SDUNSMDP EQU   SDUSDAT2
SDUSMDMP EQU   SDUSDAT2
SDUSWA   EQU   SDUSDAT2
SDUCSA   EQU   SDUSDAT2
SDUTRT   EQU   SDUSDAT1
SDULPA   EQU   SDUSDAT1
SDURGN   EQU   SDUSDAT1
SDULSQA  EQU   SDUSDAT1
SDUSQA   EQU   SDUSDAT1
SDUNUC   EQU   SDUSDAT1
SDUPSA   EQU   SDUSDAT1
SDUALPSA EQU   SDUSDAT1
@NM00155 EQU   SDUFLAG1
SDUSLIP  EQU   SDUFLAG1
SDUSULST EQU   SDUFLAG1
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00154 EQU   DEBACS08+12
@NM00153 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00152 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00151 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
@NM00150 EQU   IHADCS28+1
@NM00149 EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
@NM00148 EQU   DCBOPTCD
DCBDEBA  EQU   DCBDEBAD+1
@NM00147 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00146 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00145 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00144 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00143 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00142 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00141 EQU   DCBDSRG1
@NM00140 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00139 EQU   IHADCS01+5
@NM00138 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00137 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00136 EQU   IHADCB
LCCAT00P EQU   LCCAVT
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBMIHET EQU   UCBMIHTI
UCBMIHT2 EQU   UCBMIHTI
UCBMIHT1 EQU   UCBMIHTI
UCBMIHPB EQU   UCBMIHTI
UCBMIHSF EQU   UCBMIHTI
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBSWAPF EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00135
UCBHALI  EQU   @NM00135
UCBRSV09 EQU   @NM00135
UCBRSV08 EQU   @NM00135
UCBRSV07 EQU   @NM00135
UCBRSV06 EQU   @NM00135
UCBRSV05 EQU   @NM00135
UCBRSV04 EQU   @NM00135
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00132 EQU   UCB
@NM00131 EQU   SDWA+512
@NM00130 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
SDWAERTM EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00129 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00128 EQU   SDWADDAT+3
@NM00127 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00126 EQU   SDWASDA1
SDWAERR  EQU   SDWASDA1
SDWAIO   EQU   SDWASDA1
SDWADM   EQU   SDWASDA0
SDWAQQS  EQU   SDWASDA0
SDWACBS  EQU   SDWASDA0
SDWAGTF  EQU   SDWASDA0
SDWASWA  EQU   SDWASDA0
SDWALSQA EQU   SDWASDA0
SDWASQA  EQU   SDWASDA0
SDWANUC  EQU   SDWASDA0
@NM00125 EQU   SDWADUMP+2
@NM00124 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00123 EQU   SDWADPFS
SDWAENSN EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWASEQ# EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00122 EQU   SDWAACF3
@NM00121 EQU   SDWAACF2
@NM00120 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00119 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00118 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWACPUI EQU   SDWA+239
@NM00117 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
SDWAERFL EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
@NM00116 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00115 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00114 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00113 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00112 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00111 EQU   SDWAINC2
@NM00110 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00109 EQU   SDWAILC2
@NM00108 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00107 EQU   SDWANXT2
@NM00106 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00105 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00104 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00103 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00102 EQU   SDWAINC1
@NM00101 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00100 EQU   SDWAILC1
@NM00099 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00098 EQU   SDWANXT1
@NM00097 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00096 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00095 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00094 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00093 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00092 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00091 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00090 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00089 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
STORBTO  EQU   STORTO
STORB    EQU   STORFRM
RTM2TECB EQU   RTM2RYRG+64
RTM2RYRS EQU   RTM2RYRG
RTM2TRLS EQU   RTM2ENSN+16
RTM2TRFS EQU   RTM2ENSN+12
RTM2TRCU EQU   RTM2ENSN+8
RTM2TRTB EQU   RTM2ENSN+4
RTM2TRLN EQU   RTM2SNLN
@NM00088 EQU   RTM2WA+882
RTM2ERTM EQU   RTM2ERID+6
RTM2ERAS EQU   RTM2ERID+4
RTM2CPUI EQU   RTM2ERID+2
RTM2SEQ# EQU   RTM2ERID
RTM2RMSA EQU   RTM2RMIN+92
RTM2RMWS EQU   RTM2RMWA
RTM2RMPS EQU   RTM2RMIN
RTM2TRSA EQU   RTM2CVER+450
RTM2CREG EQU   RTM2CRG
RTM2RREG EQU   RTM2RRG
RTM2RBRG EQU   RTM2CVER+313
RTM2WARG EQU   RTM2CVER+312
@NM00087 EQU   RTM2CVER+310
RTM2CTRA EQU   RTM2RECH+12
RTM2STRA EQU   RTM2RECH+8
RTM2SKRA EQU   RTM2RECH+4
RTM2TRRA EQU   RTM2RECH
@NM00086 EQU   RTM2TRYR+3
@NM00085 EQU   RTM2TRF2
RTM2GMR  EQU   RTM2TRF2
RTM2PPR  EQU   RTM2TRF2
RTM2IOR  EQU   RTM2TRF2
RTM2AS3R EQU   RTM2TRF1+1
RTM2AS2R EQU   RTM2TRF1+1
RTM2AS1R EQU   RTM2TRF1+1
RTM2XFLG EQU   RTM2TRF1+1
RTM2XABD EQU   RTM2TRF1+1
RTM2XIP  EQU   RTM2TRF1+1
RTM2RTYS EQU   RTM2TRF1+1
RTM2RCD  EQU   RTM2TRF1+1
RTM2FMS  EQU   RTM2TRF1
RTM2VLDY EQU   RTM2TRF1
RTM2HOOK EQU   RTM2TRF1
RTM2PPS  EQU   RTM2TRF1
RTM2GMS  EQU   RTM2TRF1
RTM2IORS EQU   RTM2TRF1
RTM2IOHS EQU   RTM2TRF1
RTM2IOQS EQU   RTM2TRF1
RTM2TMER EQU   RTM2RECL+14
RTM2EQMN EQU   RTM2ECTL
RTM2EDEQ EQU   RTM2ECTL
RTM2EFRM EQU   RTM2ECTL
RTM2ECLS EQU   RTM2ECTL
RTM2ESNP EQU   RTM2ECTL
RTM2EOPN EQU   RTM2ECTL
RTM2EGET EQU   RTM2ECTL
RTM2EENQ EQU   RTM2ECTL
RTM2DFTK EQU   RTM2DCTL
RTM2DDEQ EQU   RTM2DCTL
RTM2DFRM EQU   RTM2DCTL
RTM2DCLS EQU   RTM2DCTL
RTM2DSNP EQU   RTM2DCTL
RTM2DOPN EQU   RTM2DCTL
RTM2DGET EQU   RTM2DCTL
RTM2DENQ EQU   RTM2DCTL
RTM2SCTX EQU   RTM2RECL+8
RTM2SCTR EQU   RTM2RECL+4
RTM2SCTC EQU   RTM2RECL
@NM00084 EQU   RTM2FLX2
RTM2CERX EQU   RTM2FLX2
RTM2RCRX EQU   RTM2FLX2
RTM2RTRX EQU   RTM2FLX1
RTM2LTX  EQU   RTM2FLX1
RTM2PRX  EQU   RTM2FLX1
RTM2CVX  EQU   RTM2FLX1
RTM2DWX  EQU   RTM2FLX1
RTM2ABX  EQU   RTM2FLX1
RTM2EOTX EQU   RTM2FLX1
RTM2MTX  EQU   RTM2FLX1
@NM00083 EQU   RTM2ASIR
RTM2UPRG EQU   RTM2ASIR
RTM2TRME EQU   RTM2ASIR
@NM00082 EQU   RTM2ABDP
RTM2SMDP EQU   RTM2ABDP
RTM2DMP1 EQU   RTM2ABDP
RTM2MEMT EQU   RTM2INTF+3
@NM00081 EQU   RTM2TSKT
RTM2PURG EQU   RTM2TSKT
@NM00080 EQU   RTM2INTF+1
@NM00079 EQU   RTM2CTLR
RTM2WRAP EQU   RTM2CTLR
RTM2TMEM EQU   RTM2CTLR
RTM2RETR EQU   RTM2CTLR
RTM2RECR EQU   RTM2CTLR
@NM00078 EQU   RTM2RCTL
RTM2JPAQ EQU   RTM2RCTL
RTM2LPAQ EQU   RTM2RCTL
RTM2BFTL EQU   RTM2RCTL
RTM2TRSW EQU   RTM2RCTL
RTM2WANA EQU   RTM2RCTL
RTM2WAIN EQU   RTM2RCTL
RTM2STA2 EQU   RTM2RCTL
RTM2STAT EQU   RTM2ABND
RTM2NDMP EQU   RTM2ABND
@NM00077 EQU   RTM2ABID
RTM2OERR EQU   RTM2ABID
RTM2SAV2 EQU   RTM2ABID
RTM2SAVE EQU   RTM2ABID
RTM2REG  EQU   RTM2ABID
RTM2PSW  EQU   RTM2ABID
RTM2ENQ  EQU   RTM2ABID
RTM2CB   EQU   RTM2ABID
RTM2MCTL EQU   RTM2SCTL+3
RTM2TCTL EQU   RTM2SCTL+2
@NM00076 EQU   RTM2CCTL+1
RTM2PPIO EQU   RTM2CCTL+1
RTM2INPG EQU   RTM2CCTL+1
RTM2RGEB EQU   RTM2CCTL+1
RTM2DEND EQU   RTM2CCTL+1
RTM2RSCN EQU   RTM2CCTL+1
RTM2CONT EQU   RTM2CCTL
RTM2SLIP EQU   RTM2CCTL
RTM2HEED EQU   RTM2CCTL
RTM2REED EQU   RTM2CCTL
RTM2ISPC EQU   RTM2CCTL
RTM2SQS  EQU   RTM2CCTL
RTM2CNCL EQU   RTM2CCTL
RTM2STPT EQU   RTM2CCTL
RTM2PKEY EQU   RTM2CVER+258
RTM2SFSA EQU   RTM2SFRG
RTM2PRWA EQU   RTM2CVER+182
RTM2PREV EQU   RTM2CVER+178
RTM2SPWA EQU   RTM2CVER+174
RTM2DCBA EQU   RTM2CVER+170
RTM2ECBS EQU   RTM2SECB+16
RTM2LECB EQU   RTM2ECBA
RTM2DTCB EQU   RTM2SNAP+68
RTM2SNCC EQU   RTM2SNAP+64
RTM2DD   EQU   RTM2SNAP+56
RTM2LTO4 EQU   RTM2TO4
RTM2LFR4 EQU   RTM2FRM4
RTM2LTO3 EQU   RTM2TO3
RTM2LFR3 EQU   RTM2FRM3
RTM2LTO2 EQU   RTM2TO2
RTM2LFR2 EQU   RTM2FRM2
RTM2LTO1 EQU   RTM2TO1
RTM2LFR1 EQU   RTM2FRM1
RTM2DPLA EQU   RTM2SNAP
RTM2NXTP EQU   RTM2CTL2+5
RTM2SGP  EQU   RTM2PMKP
RTM2EUP  EQU   RTM2PMKP
RTM2DOP  EQU   RTM2PMKP
RTM2FPP  EQU   RTM2PMKP
RTM2CCP  EQU   RTM2PMKP
RTM2ILP  EQU   RTM2PMKP
RTM2INTP EQU   RTM2CTL2+2
RTM2SPVP EQU   RTM2MWPP
RTM2WATP EQU   RTM2MWPP
RTM2MCKP EQU   RTM2MWPP
@NM00075 EQU   RTM2MWPP
RTM2KEYP EQU   RTM2MWPP
RTM2EXTP EQU   RTM2CMKP
RTM2IOP  EQU   RTM2CMKP
RTM2NXTA EQU   RTM2CTL1+5
RTM2SGA  EQU   RTM2PMKA
RTM2EUA  EQU   RTM2PMKA
RTM2DOA  EQU   RTM2PMKA
RTM2FPA  EQU   RTM2PMKA
RTM2CCA  EQU   RTM2PMKA
RTM2ILA  EQU   RTM2PMKA
RTM2INTA EQU   RTM2CTL1+2
RTM2SPVA EQU   RTM2MWPA
RTM2WATA EQU   RTM2MWPA
RTM2MCKA EQU   RTM2MWPA
@NM00074 EQU   RTM2MWPA
RTM2KEYA EQU   RTM2MWPA
RTM2EXTA EQU   RTM2CMKA
RTM2IOA  EQU   RTM2CMKA
@NM00073 EQU   RTM2PARQ+1
RTM2RCDE EQU   RTM2PARQ
RTM2RYRB EQU   RTM2TRRC+42
RTM2RTYA EQU   RTM2TRRC+38
RTM2COMP EQU   RTM2TRRC+34
RTM2SIZE EQU   RTM2SPLL+1
RTM2SUBP EQU   RTM2SPLL
RTM2RTCA EQU   RTM2RTCD
RTM2SCBO EQU   RTM2SCBS+8
RTM2SCBN EQU   RTM2SCBS+4
RTM2SCBC EQU   RTM2SCBS
RTM2STAR EQU   RTM2TRRC+10
RTM2RBST EQU   RTM2TRRC+6
RTM2FIOB EQU   RTM2IOBP+1
@NM00072 EQU   RTM2IOBP
@NM00071 EQU   RTM2TRRC+1
@NM00070 EQU   RTM2IOFS
RTM2NIOP EQU   RTM2IOFS
RTM2NOIO EQU   RTM2IOFS
RTM2IOHT EQU   RTM2IOFS
RTM2IOQR EQU   RTM2IOFS
RTM2FMID EQU   RTM2TRRY+124
RTM2ERFL EQU   RTM2ERRD
RTM2MCIV EQU   RTM2ERRD
RTM2RPIV EQU   RTM2ERRD
RTM2MABD EQU   RTM2ERRD
RTM2CTS  EQU   RTM2ERRD
RTM2STAE EQU   RTM2ERRD
RTM2NRBE EQU   RTM2ERRD
RTM2CLUP EQU   RTM2ERRD
@NM00069 EQU   RTM2ERRC
RTM2EAS  EQU   RTM2ERRC
RTM2PERC EQU   RTM2ERRC
RTM2IRB  EQU   RTM2ERRC
RTM2STAI EQU   RTM2ERRC
RTM2STAF EQU   RTM2ERRC
RTM2SRBM EQU   RTM2ERRB
RTM2LDIS EQU   RTM2ERRB
RTM2ENRB EQU   RTM2ERRB
RTM2TYP1 EQU   RTM2ERRB
@NM00068 EQU   RTM2ERRB
RTM2PGIO EQU   RTM2ERRA
RTM2TEXC EQU   RTM2ERRA
RTM2SVCE EQU   RTM2ERRA
RTM2ABTM EQU   RTM2ERRA
RTM2SVCD EQU   RTM2ERRA
RTM2RKEY EQU   RTM2ERRA
RTM2PCHK EQU   RTM2ERRA
RTM2MCHK EQU   RTM2ERRA
RTM2TIME EQU   RTM2EEDH+20
RTM2RFSA EQU   RTM2EEDH+16
@NM00067 EQU   RTM2EEDH+14
RTM2VEQR EQU   RTM2RSR2
RTM2PGFX EQU   RTM2RSR2
RTM2FLSQ EQU   RTM2RSR2
RTM2FSQA EQU   RTM2RSR2
RTM2NUCL EQU   RTM2RSR2
RTM2SPER EQU   RTM2RSR2
RTM2INTC EQU   RTM2RSR2
RTM2OFLN EQU   RTM2RSR2
RTM2CHNG EQU   RTM2RSR1
RTM2MSER EQU   RTM2RSR1
@NM00066 EQU   RTM2RSR1
RTM2CPID EQU   RTM2EEDH+10
RTM2TERR EQU   RTM2MCHD
RTM2SOFT EQU   RTM2MCHD
RTM2INSF EQU   RTM2MCHD
RTM2ACR  EQU   RTM2MCHD
RTM2SCK  EQU   RTM2MCHD
RTM2PSWU EQU   RTM2MCHD
RTM2REGU EQU   RTM2MCHD
RTM2SKYF EQU   RTM2MCHD
@NM00065 EQU   RTM2MCHS
RTM2RSRF EQU   RTM2MCHS
RTM2RSRC EQU   RTM2MCHS
RTM2INVP EQU   RTM2MCHS
RTM2TSVL EQU   RTM2MCHS
RTM2RCDF EQU   RTM2MCHS
RTM2SRVL EQU   RTM2MCHS
RTM2SCKE EQU   RTM2STCK+4
RTM2SCKB EQU   RTM2STCK
RTM2ABEP EQU   RTM2TRRY+88
RTM2ABNM EQU   RTM2TRRY+80
RTM2TRAN EQU   RTM2AEC1+4
RTM2IPC1 EQU   RTM2ICD1
RTM2IMC1 EQU   RTM2ICD1
RTM2IPR1 EQU   RTM2ICD1
@NM00064 EQU   RTM2INC1
@NM00063 EQU   RTM2ILC1
RTM2IL1  EQU   RTM2ILC1
@NM00062 EQU   RTM2ILC1
@NM00061 EQU   RTM2AEC1
RTM2ADD1 EQU   RTM2NXT1+1
@NM00060 EQU   RTM2NXT1
@NM00059 EQU   RTM2EPSW+3
RTM2SGN1 EQU   RTM2INT1
RTM2EXP1 EQU   RTM2INT1
RTM2DEC1 EQU   RTM2INT1
RTM2FPO1 EQU   RTM2INT1
RTM2CC1  EQU   RTM2INT1
@NM00058 EQU   RTM2INT1
RTM2PGM1 EQU   RTM2MWP1
RTM2WAT1 EQU   RTM2MWP1
RTM2MCK1 EQU   RTM2MWP1
RTM2ECT1 EQU   RTM2MWP1
RTM2KEY1 EQU   RTM2MWP1
RTM2EXT1 EQU   RTM2EMK1
RTM2AIO1 EQU   RTM2EMK1
RTM2TRM1 EQU   RTM2EMK1
RTM2EAM1 EQU   RTM2EMK1
@NM00057 EQU   RTM2EMK1
RTM2PER1 EQU   RTM2EMK1
@NM00056 EQU   RTM2EMK1
RTM2ER15 EQU   RTM2EREG+60
RTM2ER14 EQU   RTM2EREG+56
RTM2ER13 EQU   RTM2EREG+52
RTM2ER12 EQU   RTM2EREG+48
RTM2ER11 EQU   RTM2EREG+44
RTM2ER10 EQU   RTM2EREG+40
RTM2ER9  EQU   RTM2EREG+36
RTM2ER8  EQU   RTM2EREG+32
RTM2ER7  EQU   RTM2EREG+28
RTM2ER6  EQU   RTM2EREG+24
RTM2ER5  EQU   RTM2EREG+20
RTM2ER4  EQU   RTM2EREG+16
RTM2ER3  EQU   RTM2EREG+12
RTM2ER2  EQU   RTM2EREG+8
RTM2ER1  EQU   RTM2EREG+4
RTM2ER0  EQU   RTM2EREG
RTM2CT   EQU   RTM2WA+56
RTM2VRBT EQU   RTM2WA+52
RTM2TCBT EQU   RTM2WA+48
RTM2SFWA EQU   RTM2WA+32
RTM2CC   EQU   RTM2CODE+1
@NM00055 EQU   RTM2CCF
RTM2EOT  EQU   RTM2CCF
RTM2EOM  EQU   RTM2CCF
RTM2R0DP EQU   RTM2CCF
RTM2STEP EQU   RTM2CCF
RTM2DREQ EQU   RTM2CCF
RTM2ASC  EQU   RTM2WA+24
RTM2VRBC EQU   RTM2WA+20
RTM2TCBC EQU   RTM2WA+16
RTM2CVT  EQU   RTM2WA+12
RTM2LGTH EQU   RTM2RT2D+1
RTM2SPID EQU   RTM2RT2D
RTM2ADDR EQU   RTM2DESC+4
RTM2ID   EQU   RTM2DESC
RMPLDCBL EQU   RMPL+20
RMPLRMWA EQU   RMPL+16
RMPLRBPA EQU   RMPL+12
RMPLTCBA EQU   RMPL+8
RMPLASCB EQU   RMPL+4
RMPLASID EQU   RMPL+2
RMPLFLG2 EQU   RMPL+1
@NM00054 EQU   RMPLFLG1
RMPLWT1M EQU   RMPLFLG1
RMPLJST  EQU   RMPLFLG1
RMPLRCOV EQU   RMPLFLG1
RMPLIPUF EQU   RMPLFLG1
RMPLRBPP EQU   RMPLFLG1
RMPLTERM EQU   RMPLFLG1
RMPLTYPE EQU   RMPLFLG1
SNPHDRA  EQU   SNPPARMS+20
SNPSTOR  EQU   SNPPARMS+16
SNPTCBA  EQU   SNPPARMS+12
@NM00053 EQU   SNPPARMS+7
@NM00052 EQU   SNPPDATA
SNPSPLS  EQU   SNPPDATA
SNPPSW   EQU   SNPPDATA
SNPJPA   EQU   SNPPDATA
SNPLPA   EQU   SNPPDATA
SNPREGS  EQU   SNPPDATA
SNPSAVE2 EQU   SNPPDATA
SNPSAVE  EQU   SNPPDATA
@NM00051 EQU   SNPSDAT1
SNPERR   EQU   SNPSDAT1
SNPIO    EQU   SNPSDAT1
SNPDM    EQU   SNPSDAT0
SNPQCB   EQU   SNPSDAT0
SNPCB    EQU   SNPSDAT0
SNPTRT   EQU   SNPSDAT0
SNPSWA   EQU   SNPSDAT0
SNPLSQA  EQU   SNPSDAT0
SNPSQA   EQU   SNPSDAT0
SNPNUC   EQU   SNPSDAT0
@NM00050 EQU   SNPPARMS+2
SNPHDR   EQU   SNPFLAG
SNPSLIST EQU   SNPFLAG
SNPTCB   EQU   SNPFLAG
SNPID    EQU   SNPFLAG
SNPABEND EQU   SNPFLAG
SNPVS2EN EQU   SNPFLAG
SNPIDENT EQU   SNPPARMS
RTCTSDOV EQU   RTCTSDMG
@NM00049 EQU   RTCTSDO4
@NM00048 EQU   RTCTSDO3
@NM00047 EQU   RTCTSDO2
RTCTSDPD EQU   RTCTSDO2
RTCTSDPC EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTISYM EQU   RTCTSD04
RTCTSMOV EQU   RTCTSMMG
@NM00046 EQU   RTCTSD04
RTCTSD03 EQU   RTCTMSYO+2
RTCTSD02 EQU   RTCTMSYO+1
RTCTSDS7 EQU   RTCTSD01
RTCTSDS6 EQU   RTCTSD01
RTCTSDS5 EQU   RTCTSD01
RTCTSDS4 EQU   RTCTSD01
RTCTSDS3 EQU   RTCTSD01
RTCTSDS2 EQU   RTCTSD01
RTCTSDS1 EQU   RTCTSD01
RTCTSDS0 EQU   RTCTSD01
RTCTISYU EQU   RTCTSUO4
RTCTSUOV EQU   RTCTSUMG
@NM00045 EQU   RTCTSUO4
RTCTSYDF EQU   RTCTSUO3
RTCTSYDE EQU   RTCTSUO3
RTCTSYDD EQU   RTCTSUO3
RTCTSYDC EQU   RTCTSUO3
RTCTSYDB EQU   RTCTSUO3
RTCTSYDA EQU   RTCTSUO3
RTCTSYD9 EQU   RTCTSUO3
RTCTSYD8 EQU   RTCTSUO3
@NM00044 EQU   RTCTSUO2
RTCTSYDH EQU   RTCTSUO2
RTCTSYDG EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTISAB EQU   RTCTSAO4
RTCTSAOV EQU   RTCTSAMG
@NM00043 EQU   RTCTSAO4
RTCTSADF EQU   RTCTSAO3
RTCTSADE EQU   RTCTSAO3
RTCTSADD EQU   RTCTSAO3
RTCTSADC EQU   RTCTSAO3
RTCTSADB EQU   RTCTSAO3
RTCTSADA EQU   RTCTSAO3
RTCTSAD9 EQU   RTCTSAO3
RTCTSAD8 EQU   RTCTSAO3
@NM00042 EQU   RTCTSAO2
RTCTSADH EQU   RTCTSAO2
RTCTSADG EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTZZZ5 EQU   RTCT+340
RTCTZZZ4 EQU   RTCT+336
RTCTMRMQ EQU   RTCT+332
RTCTSDF5 EQU   RTCTSDF3+3
RTCTSDEQ EQU   RTCTSDF4
RTCTSDTR EQU   RTCTSDF4
RTCTSDRM EQU   RTCTSDF4
RTCTSDNC EQU   RTCTSDF4
RTCTSDSS EQU   RTCTSDF4
@NM00041 EQU   RTCTC3PO
@NM00040 EQU   RTCTR2D2
RTCTSDRW EQU   RTCTSDF2
RTCTSDSL EQU   RTCTSDF2
RTCTSDWF EQU   RTCTSDF2
RTCTSDLA EQU   RTCTSDF2
RTCTSDDI EQU   RTCTSDF2
RTCTSDMR EQU   RTCTSDF2
RTCTSDSC EQU   RTCTSDF1
RTCTSDRS EQU   RTCTSDF1
RTCTSDSD EQU   RTCTSDF1
RTCTSDMA EQU   RTCTSDF1
RTCTZZZ2 EQU   RTCT+257
RTCTSDPR EQU   RTCTSDI+2
@NM00039 EQU   RTCTASO2
RTCTASNQ EQU   RTCTASO2
RTCTASNA EQU   RTCTASO2
RTCTASNS EQU   RTCTASO2
RTCTASSU EQU   RTCTASO2
RTCTASSW EQU   RTCTASO2
RTCTASCS EQU   RTCTASO2
RTCTASTR EQU   RTCTASO1
RTCTASLP EQU   RTCTASO1
RTCTASRG EQU   RTCTASO1
RTCTASLS EQU   RTCTASO1
RTCTASSQ EQU   RTCTASO1
RTCTASNU EQU   RTCTASO1
RTCTASPS EQU   RTCTASO1
RTCTASAL EQU   RTCTASO1
RTCTSDO  EQU   RTCTOPT+12
RTCTSYO  EQU   RTCTOPT+8
RTCTSUO  EQU   RTCTOPT+4
RTCTSAO  EQU   RTCTOPT
RTCTXXX2 EQU   RTCT+234
RTCTETIM EQU   RTCTERID+6
RTCTEASD EQU   RTCTERID+4
RTCTECPU EQU   RTCTERID+2
RTCTESEQ EQU   RTCTERID
RTCTTDCB EQU   RTCT+184
RTCTSEQ# EQU   RTCT+178
RTCTXXX1 EQU   RTCT+177
@NM00038 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDIP EQU   RTCTSDPL
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00037 EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTDSNM EQU   RTCTSDDS
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTYYY1 EQU   RTCT+16
RTCTSY04 EQU   RTCTSYD+3
RTCTSY03 EQU   RTCTSYD+2
RTCTSY02 EQU   RTCTSYD+1
RTCTSYM7 EQU   RTCTSY01
RTCTSYM6 EQU   RTCTSY01
RTCTSYM5 EQU   RTCTSY01
RTCTSYM4 EQU   RTCTSY01
RTCTSYM3 EQU   RTCTSY01
RTCTSYM2 EQU   RTCTSY01
RTCTSYM1 EQU   RTCTSY01
RTCTSYM0 EQU   RTCTSY01
RTCTSUP4 EQU   RTCTSUP+3
RTCTSUDF EQU   RTCTSUP3
RTCTSUDE EQU   RTCTSUP3
RTCTSUDD EQU   RTCTSUP3
RTCTSUDC EQU   RTCTSUP3
RTCTSUDB EQU   RTCTSUP3
RTCTSUDA EQU   RTCTSUP3
RTCTSUD9 EQU   RTCTSUP3
RTCTSUD8 EQU   RTCTSUP3
@NM00036 EQU   RTCTSUP2
RTCTSUDH EQU   RTCTSUP2
RTCTSUDG EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSAP4 EQU   RTCTSAP+3
RTCTSABF EQU   RTCTSAP3
RTCTSABE EQU   RTCTSAP3
RTCTSABD EQU   RTCTSAP3
RTCTSABC EQU   RTCTSAP3
RTCTSABB EQU   RTCTSAP3
RTCTSABA EQU   RTCTSAP3
RTCTSAB9 EQU   RTCTSAP3
RTCTSAB8 EQU   RTCTSAP3
@NM00035 EQU   RTCTSAP2
RTCTSABH EQU   RTCTSAP2
RTCTSABG EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
ASVTEND  EQU   ASVT+528
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTMAXU EQU   ASVT+516
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00034 EQU   ASVT
@NM00033 EQU   SCVTSECT+180
@NM00032 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00031 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00030 EQU   SCVTSECT+160
@NM00029 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
@NM00028 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00027 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00026 EQU   SCVTSECT+128
@NM00025 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00024 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00023 EQU   SCVTSECT+108
@NM00022 EQU   SCVTSECT+104
@NM00021 EQU   SCVTSECT+100
@NM00020 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00019 EQU   SCVTSECT+88
@NM00018 EQU   SCVTSECT+84
@NM00017 EQU   SCVTSECT+80
@NM00016 EQU   SCVTSECT+76
@NM00015 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00014 EQU   SCVTSECT+56
@NM00013 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00012 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00011 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00010 EQU   SCVTSECT+24
@NM00009 EQU   SCVTSECT+20
@NM00008 EQU   SCVTSECT+16
@NM00007 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
@NM00006 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00005 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00004 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBOTC   EQU   TCB+132
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00003 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
@NM00180 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00179 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00178 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00177 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00176 EQU   FLCFSA
@NM00175 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00174 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00173 EQU   FLCIOA
@NM00172 EQU   FLCMCLA+15
@NM00171 EQU   FLCMCLA+14
@NM00170 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00169 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00168 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00167 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00166 EQU   FLCPER
@NM00165 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00164 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00163 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00162 EQU   FLCPIILC
@NM00161 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00160 EQU   FLCSVILC
@NM00159 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00158 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00157 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00236 EQU   @RC00233
@RC00354 EQU   @RC00352
@RC00199 EQU   @RC00190
@RC00204 EQU   @RC00190
@RF00567 EQU   @EL00002
@RC00595 EQU   @RC00593
@RF00792 EQU   @RC00659
@RC00591 EQU   @EL00001
@RC00861 EQU   @EL00001
@RF00603 EQU   @RC00595
@ENDDATA EQU   *
         END   IEAVAD00,(C'PLS1153',0800,78208)
