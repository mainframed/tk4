         TITLE 'IEAVAD03 - CONTROL BLOCKS I FOR RTMS SNAP/ABEND DUMPS  *
                        '
IEAVAD03 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVAD03  77.049'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*                                                            @G33CPHE*/
*/********************************************************************/
*/*                                                                  */
*/*                                                                  */
*/*                       INITIALIZATION ON ENTRY                    */
*/* FIRST THE ADDRESSING REGISTERS ARE INITIALIZED, THEN A SAVE AREA */
*/* FOR THE REGISTER SAVE AREA AND AUTOMATIC DATA AREA IS OBTAINED   */
*/* FROM LSQA.  THE ADDRESS OF THE AREA IS RETURNED IN ABDGMA, AND   */
*/*THE ADDRESS OF THE GETMAIN PARAMETER LIST IS PASSED IN REGISTER 1.*/
*/* NEXT THE SAVE AREAS ARE CHAINED, AND THE TEMPORARY WORK AREA     */
*/* @ZTEMPS IS CLEARED TO ZEROS SO THAT THE BOUNDARY ADJUSTMENT MOVES*/
*/* CAN BE DONE PROPERLY.                                            */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0121
*   ABDARPTR=PARMPTR;               /* THE ABDAREA POINTER IS      0121
*                                      INITIALIZED FROM THE VALUE IN
*                                      REGISTER 1                    */
         LR    ABDARPTR,PARMPTR                                    0121
*   PARMPTR=ADDR(ABDASIZE);         /* REGISTER 1 POINTS     @@Y02705
*                                      TO THE GETMAIN PARAMETER LIST */
         LA    PARMPTR,ABDASIZE(,ABDARPTR)                         0122
*   GENERATE;                                                      0123
         GETMAIN EC,LV=@ENDDATD-@DATD+72,                              *
               SP=253,                                                 *
               A=ABDGMA(ABDARPTR),                                     *
               MF=(E,(1))
*   IF RETCODE^=0                   /* IF GETMAIN IS UNSUCCESSFUL    */
*     THEN                          /* RETURN IMMEDIATELY.           */
         LTR   RETCODE,RETCODE                                     0124
         BZ    @RF00124                                            0124
*     DO;                           /*                        @Y02705*/
*       RETCODE=8;                  /* GETMAIN UNSUCESSFUL    @Y02705*/
         LA    RETCODE,8                                           0126
*       RETURN;                     /* OTHERWISE CONTINUE            */
@EL00001 DS    0H                                                  0127
@EF00001 DS    0H                                                  0127
@ER00001 L     @14,12(,@13)                                        0127
         LM    @00,@12,20(@13)                                     0127
         BR    @14                                                 0127
*     END;                          /*                        @Y02705*/
*   ELSE                            /*                        @Y02705*/
*     DO;                           /*                        @Y02705*/
@RF00124 DS    0H                                                  0130
*       PARMPTR=ABDAAREA;           /* USE PARMPTR AS TEMPORARY    0130
*                                      POINTER TO SAVE AREA          */
         L     PARMPTR,ABDAAREA(,ABDARPTR)                         0130
*       NEXSAPTR=PARMPTR;           /* INITIALIZE NEXT SAVE AREA   0131
*                                      POINTER IN OLD SAVE AREA      */
         ST    PARMPTR,NEXSAPTR(,SAVEPTR)                          0131
*       PRESAPTR=SAVEPTR;           /* INITIALIZE PREVIOUS SAVE AREA
*                                      POINTER IN NEW AREA           */
         ST    SAVEPTR,PRESAPTR(,PARMPTR)                          0132
*       SAVEPTR=PARMPTR;            /* SET SAVE REGISTER TO NEW SAVE
*                                      AREA ADDRESS                  */
         LR    SAVEPTR,PARMPTR                                     0133
*       AUTOPTR=SAVEPTR+72;         /* SET UP AUTOMATIC DATA       0134
*                                      ADDRESSABILITY BEYOND SAVE  0134
*                                      AREA                          */
         LA    AUTOPTR,72                                          0134
         ALR   AUTOPTR,SAVEPTR                                     0134
*       GENERATE;                                                  0135
         USING @DATD,AUTOPTR           ESTABLISH ADDRESSABILITY
         XC    0(@ENDDATD-@DATD,AUTOPTR),0(AUTOPTR)   ZERO TEMP SPACE
*                                                                  0136
*/* THE FIRST SECTION OF CODE FORMATS AND DISPLAYS THE ASCB.  @Y02705*/
*/* THE ADDRESS OF THE CURRENT ASCB IS OBTAINED FROM THE PSA. @Y02705*/
*                                                                  0136
*       PARMPTR=ABDARPTR;           /* GET WORK AREA PTR@Y02705      */
         LR    PARMPTR,ABDARPTR                                    0136
*       ABDCC='0';                  /* DOUBLE SPACE LINE ONE  @Y02705*/
         MVI   ABDCC(ABDARPTR),C'0'                                0137
*       ABDWORKA=PSAAOLD;           /* GET ASCB ADDR          @Y02705*/
         MVC   ABDWORKA(4,ABDARPTR),PSAAOLD                        0138
*       ABDBPTR=ADDR(ABDWORKA);     /* SET UP PTR TO ADDR     @Y02705*/
         LA    @10,ABDWORKA(,ABDARPTR)                             0139
         ST    @10,ABDBPTR(,ABDARPTR)                              0139
*       ABDLLINE=ADDR(ASCBLINE);    /* POINT TO ASCB LAYOUT LINE   0140
*                                                             @Y02705*/
         LA    @10,ASCBLINE                                        0140
         ST    @10,ABDLLINE(,ABDARPTR)                             0140
*       CALL IEAVAD31;              /* FORMAT ASCB ADDRESS           */
         L     @15,@CV00082                                        0141
         BALR  @14,@15                                             0141
*       IF RETCODE^=0 THEN          /* DID ERROR OCCUR               */
         LTR   RETCODE,RETCODE                                     0142
         BNZ   @RT00142                                            0142
*         GOTO FREERET;             /* YES, RETURN                   */
*       CALL IEAVAD11;              /* PRINT ASCB ADDRESS LINE       */
         L     @15,@CV00081                                        0144
         BALR  @14,@15                                             0144
*       ABDBPTR=PSAAOLD;            /* GET PTR TO ASCB        @Y02705*/
         MVC   ABDBPTR(4,ABDARPTR),PSAAOLD                         0145
*       ABDLLINE=ADDR(ASCBLNE);                                    0146
         LA    @10,ASCBLNE                                         0146
         ST    @10,ABDLLINE(,ABDARPTR)                             0146
*       FMCOUNT=9;                  /* FORMAT & OUTPUT 9 LINES     0147
*                                                             @Y02705*/
         LA    FMCOUNT,9                                           0147
*       DO FMCOUNT=FMCOUNT TO 1 BY-1;/* LOOP 9 TIMES          @Y02705*/
         B     @DE00148                                            0148
@DL00148 DS    0H                                                  0149
*         CALL IEAVAD31;            /* FORMAT ASCB LINE       @Y02705*/
         L     @15,@CV00082                                        0149
         BALR  @14,@15                                             0149
*         IF RETCODE^=0 THEN        /* DID ERROR OCCUR?       @Y02705*/
         LTR   RETCODE,RETCODE                                     0150
         BNZ   @RT00150                                            0150
*           GOTO FREERET;           /* YES RETURN             @Y02705*/
*         CALL IEAVAD11;            /* PRINT ASCB LINE        @Y02705*/
         L     @15,@CV00081                                        0152
         BALR  @14,@15                                             0152
*         CVTPTR=FLCCVT;            /* GET CVT ADDRESS               */
         L     CVTPTR,FLCCVT                                       0153
*         RESPECIFY                                                0154
*           CVTPTR RESTRICTED;                                     0154
*       END;                        /*                        @Y02705*/
         BCTR  FMCOUNT,0                                           0155
@DE00148 LTR   FMCOUNT,FMCOUNT                                     0155
         BP    @DL00148                                            0155
*                                                                  0156
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION OF CODE FORMATS AND DISPLAYS THE TCB OF THE  */
*       /* TASK BEING DUMPED. THE REGISTER SAVEAREA IN THE TCB IS    */
*       /* ONLY FORMATTED IF THE CURRENT TASK IN CONTROL IS BEING    */
*       /* DUMPED.                                           @G33SPHW*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0156
*TCBOUT:                                                           0156
*       PARMPTR=ABDARPTR;           /* SET UP SUBROUTINE PARM REG    */
TCBOUT   LR    PARMPTR,ABDARPTR                                    0156
*       TCBPTR=ABDTCB;              /* GET THE TCB ADDRESS BEING   0157
*                                      DUMPED                        */
         L     TCBPTR,ABDTCB(,ABDARPTR)                            0157
*       ABDCC='0';                  /* DOUBLE SPACE FIRST LINE       */
         MVI   ABDCC(ABDARPTR),C'0'                                0158
*       ABDWORKA=TCBPTR;            /* SET UP TCBADDRESS TO FMAT     */
         ST    TCBPTR,ABDWORKA(,ABDARPTR)                          0159
*       ABDBPTR=ADDR(ABDWORKB);     /* POINT TO ADDRESS              */
         LA    @10,ABDWORKB(,ABDARPTR)                             0160
         ST    @10,ABDBPTR(,ABDARPTR)                              0160
*       ABDLLINE=ADDR(TCBLN1);      /* POINT TO TCB LAYOUT LINE      */
         LA    @10,TCBLN1                                          0161
         ST    @10,ABDLLINE(,ABDARPTR)                             0161
*       CALL IEAVAD31;              /* FORMAT HEADER FOR TCB         */
         L     @15,@CV00082                                        0162
         BALR  @14,@15                                             0162
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0163
         BNZ   @RT00163                                            0163
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD11;              /* OUTPUT TCB HEADER     @G33SPHW*/
         L     @15,@CV00081                                        0165
         BALR  @14,@15                                             0165
*       IF RETCODE^=0               /* IF ERRED              @G33SPHW*/
*         THEN                      /* LEAVE WITH            @G33SPHW*/
         LTR   RETCODE,RETCODE                                     0166
         BNZ   @RT00166                                            0166
*         GOTO FREERET;             /* BAD CODE              @G33SPHW*/
*       ABDBPTR=TCBPTR;             /* SET UP POINTER TO TCB         */
         ST    TCBPTR,ABDBPTR(,ABDARPTR)                           0168
*       CALL IEAVAD31;              /* FINISH FORMATTING LINE 1      */
         L     @15,@CV00082                                        0169
         BALR  @14,@15                                             0169
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0170
         BNZ   @RT00170                                            0170
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD11;              /* OUTPUT LINE 1 OF TCB          */
         L     @15,@CV00081                                        0172
         BALR  @14,@15                                             0172
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0173
         BNZ   @RT00173                                            0173
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD31;              /* FORMAT LINE 2                 */
         L     @15,@CV00082                                        0175
         BALR  @14,@15                                             0175
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0176
         BNZ   @RT00176                                            0176
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD11;              /* OUTPUT LINE 2 OF TCB          */
         L     @15,@CV00081                                        0178
         BALR  @14,@15                                             0178
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0179
         BNZ   @RT00179                                            0179
*         GOTO FREERET;             /* BAD CODE                      */
*       IF TCBPTR^=ABDCTCB          /* IF CURRENT TASK BEING DUMPD   */
*         THEN                      /* DO NOT DO THE REG SAVE AREA   */
         C     TCBPTR,ABDCTCB(,ABDARPTR)                           0181
         BE    @RF00181                                            0181
*         DO;                       /* FORMAT REG LINES BFORE LINE 3
*                                      OF THE TCB                    */
*           ABDLLINE=ADDR(REGS1);   /* SET UP TO DO REGS             */
         LA    @10,REGS1                                           0183
         ST    @10,ABDLLINE(,ABDARPTR)                             0183
*           ABDBPTR=ADDR(TCBGRS);   /* POINT TO REGS                 */
         LA    @10,TCBGRS(,TCBPTR)                                 0184
         ST    @10,ABDBPTR(,ABDARPTR)                              0184
*           CALL IEAVAD31;          /* FORMAT REGS 0-7               */
         L     @15,@CV00082                                        0185
         BALR  @14,@15                                             0185
*           IF RETCODE^=0           /* IF ERRED                      */
*             THEN                  /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0186
         BNZ   @RT00186                                            0186
*             GOTO FREERET;         /* BAD CODE                      */
*           CALL IEAVAD11;          /* OUPUT REGS 0-7                */
         L     @15,@CV00081                                        0188
         BALR  @14,@15                                             0188
*           IF RETCODE^=0           /* IF ERRED                      */
*             THEN                  /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0189
         BNZ   @RT00189                                            0189
*             GOTO FREERET;         /* BAD CODE                      */
*           CALL IEAVAD31;          /* FORMAT REGS 8-15              */
         L     @15,@CV00082                                        0191
         BALR  @14,@15                                             0191
*           IF RETCODE^=0           /* IF ERRED                      */
*             THEN                  /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0192
         BNZ   @RT00192                                            0192
*             GOTO FREERET;         /* BAD CODE                      */
*           CALL IEAVAD11;          /* OUPUT REGS 8-15               */
         L     @15,@CV00081                                        0194
         BALR  @14,@15                                             0194
*           IF RETCODE^=0           /* IF ERRED                      */
*             THEN                  /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0195
         BNZ   @RT00195                                            0195
*             GOTO FREERET;         /* BAD CODE                      */
*         END;                      /* END OF REGS PROCESS           */
*       ABDBPTR=ADDR(TCBFSA);       /* POINT TO NEXT FIELD TO FMAT   */
@RF00181 LA    @10,TCBFSA(,TCBPTR)                                 0198
         ST    @10,ABDBPTR(,ABDARPTR)                              0198
*       ABDLLINE=ADDR(TCBLN3);      /* POINT TO LINE 3 LAYOUT        */
*                                                                  0199
         LA    @10,TCBLN3                                          0199
         ST    @10,ABDLLINE(,ABDARPTR)                             0199
*       /*************************************************************/
*       /*                                                           */
*       /* YM4126                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0200
*       FMCOUNT=8;                  /* FORMAT AND OUTPUT 9 LINES     */
         LA    FMCOUNT,8                                           0200
*       DO FMCOUNT=FMCOUNT TO 1 BY-1;/* LOOP THROUTH 9 TIMES         */
         B     @DE00201                                            0201
@DL00201 DS    0H                                                  0202
*         CALL IEAVAD31;            /* FORMAT LINES 3-10      @Y02705*/
         L     @15,@CV00082                                        0202
         BALR  @14,@15                                             0202
*         IF RETCODE^=0             /* IF ERRED                      */
*           THEN                    /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0203
         BNZ   @RT00203                                            0203
*           GOTO FREERET;           /* BAD CODE                      */
*         CALL IEAVAD11;            /* OUTPUT LINE OF TCB            */
         L     @15,@CV00081                                        0205
         BALR  @14,@15                                             0205
*         IF RETCODE^=0             /* IF ERRED                      */
*           THEN                    /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0206
         BNZ   @RT00206                                            0206
*           GOTO FREERET;           /* BAD CODE                      */
*       END;                        /* END OF LINE 3-10 PROCESS      */
         BCTR  FMCOUNT,0                                           0208
@DE00201 LTR   FMCOUNT,FMCOUNT                                     0208
         BP    @DL00201                                            0208
*       ABDBPTR=TCBEXT2;            /* POINT TO ADDRESS      @ZM44945*/
         MVC   ABDBPTR(4,ABDARPTR),TCBEXT2(TCBPTR)                 0209
*       ABDLLINE=ADDR(TCBEXLN1);    /* POINT TO TCB EXTENSION LAYOUT
*                                      LINE                  @ZM44945*/
         LA    @10,TCBEXLN1                                        0210
         ST    @10,ABDLLINE(,ABDARPTR)                             0210
*       CALL IEAVAD31;              /* FORMAT TCB EXTENSION  @ZM44945*/
         L     @15,@CV00082                                        0211
         BALR  @14,@15                                             0211
*       IF RETCODE^=0               /* IF ERRED              @ZM44945*/
*         THEN                      /* LEAVE WITH            @ZM44945*/
         LTR   RETCODE,RETCODE                                     0212
         BNZ   @RT00212                                            0212
*         GOTO FREERET;             /* BAD CODE              @ZM44945*/
*       CALL IEAVAD11;              /* OUTPUT TCB HEADER     @ZM44945*/
         L     @15,@CV00081                                        0214
         BALR  @14,@15                                             0214
*       IF RETCODE^=0               /* IF ERRED              @ZM44945*/
*         THEN                      /* LEAVE WITH            @ZM44945*/
         LTR   RETCODE,RETCODE                                     0215
         BNZ   @RT00215                                            0215
*         GOTO FREERET;             /* BAD CODE              @ZM44945*/
*                                                                  0217
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* IF THE TASK HAS COMPLETED, ONLY THE LLES ARE FORMATTED AND       */
*/* DISPLAYED. OTHERWISE THE RBS, LLES, CDES, AND EXTENT LISTS ARE   */
*/* FORMATTED AND DISPLAYED.  THE RBS, IF FORMATTED, ARE PRINTED  BY */
*/* STARTING WITH THE FARTHEST RB FROM THE TCB, THAT IS THE OLDEST   */
*/* ONE FIRST, AND ENDING WITH THE RB THAT THE TCB POINTS TO, THAT IS*/
*/* THE YOUNGEST. THIS ORDER IS DETERMINED BY THE FINDRB SUBROUTINE. */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0217
*       IF TCBFC='1'B               /* IF THE TASK HAS COMPLETED     */
*         THEN                                                     0217
         TM    TCBFC(TCBPTR),B'10000000'                           0217
         BO    @RT00217                                            0217
*         GOTO LLEOUT;              /* SKIP THE RB PROCESSING, THERE
*                                      ARE NO RBS.                   */
*RBOUT:                                                            0219
*       ABDBLNKS='82'X;             /* TWO BLANKS BETWEEN FILEDS   0219
*                                                            @YA00054*/
RBOUT    MVI   ABDBLNKS(ABDARPTR),X'82'                            0219
*       RBSECPTR=TCBPTR;            /* INITIALIZE FOR RB SEARCH      */
         LR    RBSECPTR,TCBPTR                                     0220
*       ABDLINEA(1:11)=RBTTL;       /* SET UP RB HEADER TEXT         */
         MVC   ABDLINEA(11,ABDARPTR),RBTTL                         0221
*       CALL IEAVAD11;              /* PRINT THE HEADER              */
         L     @15,@CV00081                                        0222
         BALR  @14,@15                                             0222
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0223
         BNZ   @RT00223                                            0223
*         GOTO FREERET;             /* BAD CODE                      */
*RBNEXT:                            /* GET NEXT RB ON QUEUE          */
*       CALL FINDRB;                /* IN LIFO ORDER                 */
RBNEXT   BAL   @14,FINDRB                                          0225
*       IF RETCODE^=0               /* IF AT END OF QUEUE            */
*         THEN                      /* GO TO LLE PROCESS             */
         LTR   RETCODE,RETCODE                                     0226
         BNZ   @RT00226                                            0226
*         GO TO LLEOUT;             /* NEXT THING TO DO              */
*       ABDCC='0';                  /* SET TO DBL SPACE RB LINE 1    */
         MVI   ABDCC(ABDARPTR),C'0'                                0228
*       ABDWORKA=RBSECPTR;          /* SET UP ADDRESS OF RB DONE     */
         ST    RBSECPTR,ABDWORKA(,ABDARPTR)                        0229
*       ABDBPTR=ADDR(ABDWORKB);     /* POINT TO ADDRESS              */
         LA    @10,ABDWORKB(,ABDARPTR)                             0230
         ST    @10,ABDBPTR(,ABDARPTR)                              0230
*       ABDLLINE=ADDR(RBLLINE1);    /* GET LAYOUT LINE POINTER       */
         LA    @10,RBLLINE1                                        0231
         ST    @10,ABDLLINE(,ABDARPTR)                             0231
*       CALL IEAVAD31;              /* FORMAT THE ADDRESS            */
         L     @15,@CV00082                                        0232
         BALR  @14,@15                                             0232
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0233
         BNZ   @RT00233                                            0233
*         GOTO FREERET;             /* BAD CODE                      */
*       ABDBPTR=RBSECPTR-32;        /* GET PREFIX ADDRESS    @YA00054*/
         LR    @10,RBSECPTR                                        0235
         SH    @10,@CH01089                                        0235
         ST    @10,ABDBPTR(,ABDARPTR)                              0235
*       CALL IEAVAD31;              /* FORMAT THE FIRST RB LINE      */
         L     @15,@CV00082                                        0236
         BALR  @14,@15                                             0236
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0237
         BNZ   @RT00237                                            0237
*         GOTO FREERET;             /* BAD CODE                      */
*       IF RBFTP='010'B             /* IF IRB USE IRB PROCEDURE      */
*         THEN                      /* SET UP IRB LABELS             */
         TM    RBFTP(RBSECPTR),B'01000000'                         0239
         BNO   @RF00239                                            0239
         TM    RBFTP(RBSECPTR),B'10100000'                         0239
         BNZ   @RF00239                                            0239
*         DO;                       /* AND PROCESS AS EXTENDED RB    */
*           ABDLINEA(2:5)=IRBMSG;   /* SET UP IRB LABEL              */
         MVC   ABDLINEA+1(4,ABDARPTR),IRBMSG                       0241
*           GOTO BIGRB;             /* REST IF IRB AS EXTENDED RB    */
         B     BIGRB                                               0242
*         END;                      /* END OF IRB LABEL PROCESS      */
*       IF RBFTP='110'B             /* IF SVRB                       */
*         THEN                      /* SET UP SVRB LABEL             */
@RF00239 TM    RBFTP(RBSECPTR),B'11000000'                         0244
         BNO   @RF00244                                            0244
         TM    RBFTP(RBSECPTR),B'00100000'                         0244
         BNZ   @RF00244                                            0244
*         DO;                       /* AND USE EXTENDED RB ROUTINE   */
*           ABDLINEA(2:5)=SVRBMSG;  /* SET UP SVRB LABEL             */
         MVC   ABDLINEA+1(4,ABDARPTR),SVRBMSG                      0246
*           GOTO BIGRB;             /* USE EXTENDED ROUTINE          */
         B     BIGRB                                               0247
*         END;                      /* END OF SVRB LABEL PROCESS     */
*BIGRB:                             /* ROUTINE FOR ALL RBS LARGER  0249
*                                      THAN 40 BYTES                 */
*       CALL IEAVAD11;              /* PRINT MODIFIED FIRST LINE     */
@RF00244 DS    0H                                                  0249
BIGRB    L     @15,@CV00081                                        0249
         BALR  @14,@15                                             0249
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0250
         BNZ   @RT00250                                            0250
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD31;              /* FORMAT RB LINE 2      @YA00054*/
         L     @15,@CV00082                                        0252
         BALR  @14,@15                                             0252
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0253
         BNZ   @RT00253                                            0253
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD11;              /* OUTPUT LINE 2         @YA00054*/
         L     @15,@CV00081                                        0255
         BALR  @14,@15                                             0255
*       IF RETCODE^=0               /* IF OUTPUT ERRED       @YA00054*/
*         THEN                      /* LEAVE WITH            @YA00054*/
         LTR   RETCODE,RETCODE                                     0256
         BNZ   @RT00256                                            0256
*         GOTO FREERET;             /* BAD CODE              @YA00054*/
*       CALL IEAVAD31;              /* FORMAT RB LINE 3A     @YA00054*/
         L     @15,@CV00082                                        0258
         BALR  @14,@15                                             0258
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0259
         BNZ   @RT00259                                            0259
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD31;              /* FORMAT LINE 3B        @YA00054*/
         L     @15,@CV00082                                        0261
         BALR  @14,@15                                             0261
*       IF RETCODE^=0               /* IF FORMAT ERRED       @YA00054*/
*         THEN                      /* LEAVE WITH            @YA00054*/
         LTR   RETCODE,RETCODE                                     0262
         BNZ   @RT00262                                            0262
*         GOTO FREERET;             /* BAD CODE              @YA00054*/
*       IF RBFTP='010'B             /* IF IRB BEING FORMATTED USE  0264
*                                                            @YA00054*/
*         THEN                      /* IRB LABELS            @YA00054*/
         TM    RBFTP(RBSECPTR),B'01000000'                         0264
         BNO   @RF00264                                            0264
         TM    RBFTP(RBSECPTR),B'10100000'                         0264
         BNZ   @RF00264                                            0264
*         DO;                       /*                       @YA00054*/
*           ABDLINEA(15:18)=FLPSA;  /* CHANGE FIELD ID       @ZA05835*/
         MVC   ABDLINEA+14(4,ABDARPTR),FLPSA                       0266
*           ABDLINEA(72:77)=EPAMSG; /* CHANGE FIELD ID       @Z40FPXH*/
         MVC   ABDLINEA+71(6,ABDARPTR),EPAMSG                      0267
*         END;                      /*                       @YA00054*/
*       CALL IEAVAD11;              /* OUTPUT LINE 3         @YA00054*/
@RF00264 L     @15,@CV00081                                        0269
         BALR  @14,@15                                             0269
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0270
         BNZ   @RT00270                                            0270
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD31;              /* FORMAT RB LINE 4      @YA00054*/
         L     @15,@CV00082                                        0272
         BALR  @14,@15                                             0272
*       IF RETCODE^=0               /* IF FORMAT ERRED       @YA00054*/
*         THEN                      /* LEAVE WITH            @YA00054*/
         LTR   RETCODE,RETCODE                                     0273
         BNZ   @RT00273                                            0273
*         GOTO FREERET;             /* BAD CODE              @YA00054*/
*       CALL IEAVAD11;              /* OUTPUT LINE 4         @YA00054*/
         L     @15,@CV00081                                        0275
         BALR  @14,@15                                             0275
*       IF RETCODE^=0               /* IF OUTPUT ERRED       @YA00054*/
*         THEN                      /* LEAVE WITH            @YA00054*/
         LTR   RETCODE,RETCODE                                     0276
         BNZ   @RT00276                                            0276
*         GOTO FREERET;             /* BAD CODE              @YA00054*/
*       ABDBLNKS='00'X;             /* CANCL BLNKS OVRIDE    @ZA05835*/
         MVI   ABDBLNKS(ABDARPTR),X'00'                            0278
*       ABDBPTR=ADDR(RBGRSAVE);     /* POINT TO REGS TO FORMAT       */
         LA    @10,RBGRSAVE(,RBSECPTR)                             0279
         ST    @10,ABDBPTR(,ABDARPTR)                              0279
*       ABDLLINE=ADDR(REGS1);       /* SET UP TO DO REGS IN RB       */
         LA    @10,REGS1                                           0280
         ST    @10,ABDLLINE(,ABDARPTR)                             0280
*       CALL IEAVAD31;              /* PUT REGS ON LINE 3            */
         L     @15,@CV00082                                        0281
         BALR  @14,@15                                             0281
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0282
         BNZ   @RT00282                                            0282
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD11;              /* OUTPUT REGS 0-7               */
         L     @15,@CV00081                                        0284
         BALR  @14,@15                                             0284
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0285
         BNZ   @RT00285                                            0285
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD31;              /* FORMAT REGS 8-15 ON LINE 4    */
         L     @15,@CV00082                                        0287
         BALR  @14,@15                                             0287
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0288
         BNZ   @RT00288                                            0288
*         GOTO FREERET;             /* BAD CODE                      */
*       CALL IEAVAD11;              /* OUTPUT REGS 8-15              */
         L     @15,@CV00081                                        0290
         BALR  @14,@15                                             0290
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0291
         BNZ   @RT00291                                            0291
*         GOTO FREERET;             /* BAD CODE                      */
*       IF RBSIZE>16                /* IF SAVE AREA EXISTS   @YA00054*/
*         THEN                      /* PRINT IT ALSO                 */
         LA    @10,16                                              0293
         LH    @15,RBSIZE(,RBSECPTR)                               0293
         CR    @15,@10                                             0293
         BNH   @RF00293                                            0293
*         DO;                       /* ALSO CHECK FOR IRB WORKAREA   */
*           IF RBFTP='010'B         /* IF IRB DO SPECIAL LOOP        */
*             THEN                  /* FOR EXTENDED WORK AREA        */
         TM    RBFTP(RBSECPTR),B'01000000'                         0295
         BNO   @RF00295                                            0295
         TM    RBFTP(RBSECPTR),B'10100000'                         0295
         BNZ   @RF00295                                            0295
*             DO;                   /* IN THE IRB                    */
*               ABDLINEA(15:21)=WORKLABL;/* SET UP IRB LABEL         */
         MVC   ABDLINEA+14(7,ABDARPTR),WORKLABL                    0297
*               IRBCOUNT=RBSIZE-16; /* CALCULATE REMAINING RB SIZE 0298
*                                                            @YA00054*/
         SLR   @15,@10                                             0298
         LR    IRBCOUNT,@15                                        0298
*               ABDBPTR=ADDR(RBEXSAVE);/* SET UP RB ADDRESS          */
         LA    @10,RBEXSAVE(,RBSECPTR)                             0299
         ST    @10,ABDBPTR(,ABDARPTR)                              0299
*NEWLINE:                           /* NEW IRB LINE LOOP             */
*               IRBLINER=4;         /* 4 DOUBLE WORDS ON A LINE      */
NEWLINE  LA    IRBLINER,4                                          0300
*               ABDLLINE=ADDR(IRBXLINE);/* SET UP LAYOUT LINE        */
         LA    @10,IRBXLINE                                        0301
         ST    @10,ABDLLINE(,ABDARPTR)                             0301
*NXTDWORD:                          /* FORMAT NEXT DOUBLE WORD       */
*               DO IRBLINER=IRBLINER TO 1 BY-1;/* FORMAT 4 DW        */
NXTDWORD B     @DE00302                                            0302
@DL00302 DS    0H                                                  0303
*                 CALL IEAVAD61;    /* FORMAT IRB DOUBLE WORD        */
         L     @15,@CV00083                                        0303
         BALR  @14,@15                                             0303
*                 IF RETCODE^=0     /* IF ERRED                      */
*                   THEN            /* LEAVE WITH                    */
         SLR   @14,@14                                             0304
         CR    RETCODE,@14                                         0304
         BNE   @RT00304                                            0304
*                   GOTO FREERET;   /* BAD CODE                      */
*                 IRBCOUNT=IRBCOUNT-1;/* DECREMENT DW COUNTER        */
         BCTR  IRBCOUNT,0                                          0306
*                 IF IRBCOUNT=0     /* IF NO MORE DWS                */
*                   THEN            /* PRINT LAST LINE AND LOOP      */
         CR    IRBCOUNT,@14                                        0307
         BE    @RT00307                                            0307
*                   GOTO LAST;      /* TO NEXT RB                    */
*               END;                /* END OF DO LOOP                */
         BCTR  IRBLINER,0                                          0309
@DE00302 LTR   IRBLINER,IRBLINER                                   0309
         BP    @DL00302                                            0309
*               CALL IEAVAD11;      /* OUTPUT A FULL LINE            */
         L     @15,@CV00081                                        0310
         BALR  @14,@15                                             0310
*               IF RETCODE^=0       /* IF ERRED                      */
*                 THEN              /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0311
         BNZ   @RT00311                                            0311
*                 GOTO FREERET;     /* BAD CODE                      */
*               GOTO NEWLINE;       /* CONTINUE WITH NEW LINE        */
         B     NEWLINE                                             0313
*LAST:                              /* LAST IRB LINE PROCESS         */
*               CALL IEAVAD11;      /* OUTPUT LAST LINE              */
LAST     L     @15,@CV00081                                        0314
         BALR  @14,@15                                             0314
*               IF RETCODE^=0       /* IF ERRED                      */
*                 THEN              /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0315
         BNZ   @RT00315                                            0315
*                 GOTO FREERET;     /* BAD CODE                      */
*               GOTO RBNEXT;        /* CONTINUE WITH NEXT RB         */
         B     RBNEXT                                              0317
*             END;                  /* END OF IRB SPECIAL PROCESS    */
*           IF RBFTP='110'B         /* IS THIS AN SVRB               */
*             THEN                  /* YES FORMAT EXTENDED WRKAREA   */
@RF00295 TM    RBFTP(RBSECPTR),B'11000000'                         0319
         BNO   @RF00319                                            0319
         TM    RBFTP(RBSECPTR),B'00100000'                         0319
         BNZ   @RF00319                                            0319
*             DO;                                                  0320
*               ABDLLINE=ADDR(EXTSA1);/* SET UP FOR EXTENDED SAVEAREA*/
         LA    @10,EXTSA1                                          0321
         ST    @10,ABDLLINE(,ABDARPTR)                             0321
*               CALL IEAVAD31;      /* FORMAT LINE 5                 */
         L     @15,@CV00082                                        0322
         BALR  @14,@15                                             0322
*               IF RETCODE^=0       /* IF FORMAT ERRED               */
*                 THEN              /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0323
         BNZ   @RT00323                                            0323
*                 GOTO FREERET;     /* BAD CODE                      */
*               CALL IEAVAD11;      /* OUTPUT LINE 5                 */
         L     @15,@CV00081                                        0325
         BALR  @14,@15                                             0325
*               IF RETCODE^=0       /* IF OUTPUT ERRED               */
*                 THEN              /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0326
         BNZ   @RT00326                                            0326
*                 GOTO FREERET;     /* BAD CODE                      */
*               CALL IEAVAD31;      /* FORMAT LINE 6                 */
         L     @15,@CV00082                                        0328
         BALR  @14,@15                                             0328
*               IF RETCODE^=0       /* IF FORMAT ERRED               */
*                 THEN              /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0329
         BNZ   @RT00329                                            0329
*                 GOTO FREERET;     /* BAD CODE                      */
*               CALL IEAVAD11;      /* OUTPUT LINE 6                 */
         L     @15,@CV00081                                        0331
         BALR  @14,@15                                             0331
*               IF RETCODE^=0       /* IF OUTPUT ERRED               */
*                 THEN              /* LEAVE WITH                    */
         LTR   RETCODE,RETCODE                                     0332
         BNZ   @RT00332                                            0332
*                 GOTO FREERET;     /* BAD CODE                      */
*               IF RBFTP='110'B     /* IF SVRB, OUTPUT        @Y02705
*                                      SCB                    @Y02705*/
*                 THEN              /*                        @Y02705*/
         TM    RBFTP(RBSECPTR),B'11000000'                         0334
         BNO   @RF00334                                            0334
         TM    RBFTP(RBSECPTR),B'00100000'                         0334
         BNZ   @RF00334                                            0334
*                 DO;               /*                        @Y02705*/
*                   ABDLLINE=ADDR(SCBLINE);/* SET UP SCB LINE @Y02705*/
         LA    @10,SCBLINE                                         0336
         ST    @10,ABDLLINE(,ABDARPTR)                             0336
*                   CALL IEAVAD31;  /* FORMAT LINE 7          @Y02705*/
         L     @15,@CV00082                                        0337
         BALR  @14,@15                                             0337
*                   IF RETCODE^=0   /* IF ERROR               @Y02705*/
*                     THEN          /*                        @Y02705*/
         LTR   RETCODE,RETCODE                                     0338
         BNZ   @RT00338                                            0338
*                     GOTO FREERET; /* RETURN TO CALLER       @Y02705*/
*                   CALL IEAVAD11;  /* OUTPUT LINE 7          @Y02705*/
         L     @15,@CV00081                                        0340
         BALR  @14,@15                                             0340
*                   ABDLLINE=ADDR(FEPLINE);/* SET UP FEPARM LINE   0341
*                                                            @Z40FPXH*/
         LA    @10,FEPLINE                                         0341
         ST    @10,ABDLLINE(,ABDARPTR)                             0341
*                   CALL IEAVAD31;  /* FORMAT LINE           @Z40FPXH*/
         L     @15,@CV00082                                        0342
         BALR  @14,@15                                             0342
*                   IF RETCODE^=0 THEN/* IF ERROR            @Z40FPXH*/
         LTR   RETCODE,RETCODE                                     0343
         BNZ   @RT00343                                            0343
*                     GO TO FREERET;/* RETURN                @Z40FPXH*/
*                   CALL IEAVAD11;  /* PRINT LINE            @Z40FPXH*/
         L     @15,@CV00081                                        0345
         BALR  @14,@15                                             0345
*                 END;              /*                        @Y02705*/
*             END;                                                 0347
*         END;                      /* END OF EXTENDED RB PROCESS    */
*       GOTO RBNEXT;                /* CONTINUE WITH NEXT RB         */
         B     RBNEXT                                              0349
*                                                                  0350
*/*                                                                  */
*/*                                                                  */
*/* THE LLES ARE NEXT FORMATTED AND PRINTED TW0 TO A LINE, IN THE    */
*/* ORDER THAT THEY OCCUR ON THE TCB QUEUE.                          */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0350
*LLEOUT:                                                           0350
*       LLEPTR=TCBLLS;              /* PICK UP FIRST LLE ADDRESS     */
LLEOUT   L     LLEPTR,TCBLLS(,TCBPTR)                              0350
*       IF LLEPTR=0                 /* IF NO LLES TO DO              */
*         THEN                      /* GO TO CDE PROCESS             */
         LTR   LLEPTR,LLEPTR                                       0351
         BZ    @RT00351                                            0351
*         GOTO CDEOUT;              /* DONT PRINT LLE HEADER         */
*       ABDLINEA(1:10)=LLTTL;       /* SET UP LLE HEADER             */
         MVC   ABDLINEA(10,ABDARPTR),LLTTL                         0353
*       CALL IEAVAD11;              /* PRINT THE HEADER              */
         L     @15,@CV00081                                        0354
         BALR  @14,@15                                             0354
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH BAD CODE           */
         LTR   RETCODE,RETCODE                                     0355
         BNZ   @RT00355                                            0355
*         GOTO FREERET;             /* FREE SAVE AREAS, RETURN       */
*       ABDCC='0';                  /* DOUBLE SPACE FIRST LINE       */
         MVI   ABDCC(ABDARPTR),C'0'                                0357
*MORELLE:                           /* LLE LINE LOOP                 */
*       ABDLLINE=ADDR(LLIST);       /* POINT TO LAYOUT LINE          */
MORELLE  LA    @10,LLIST                                           0358
         ST    @10,ABDLLINE(,ABDARPTR)                             0358
*       LECOUNT=2;                  /* TWO LLES TO A LINE     @Y02705*/
         LA    LECOUNT,2                                           0359
*       DO LECOUNT=LECOUNT TO 1 BY-1;/* FORMAT LLES 2 TO A LINE      */
         B     @DE00360                                            0360
@DL00360 DS    0H                                                  0361
*         ABDBPTR=LLEPTR;           /* POINT TO THE LLE              */
         ST    LLEPTR,ABDBPTR(,ABDARPTR)                           0361
*         CALL IEAVAD31;            /* FORMAT THE LLE                */
         L     @15,@CV00082                                        0362
         BALR  @14,@15                                             0362
*         IF RETCODE^=0             /* IF FORMAT ERRED               */
*           THEN                    /* LEAVE WITH BAD CODE           */
         SLR   @14,@14                                             0363
         CR    RETCODE,@14                                         0363
         BNE   @RT00363                                            0363
*           GOTO FREERET;           /* IN R15                        */
*         LLEPTR=LLECHN;            /* GET NEXT LLE                  */
         L     LLEPTR,LLECHN(,LLEPTR)                              0365
*         IF LLEPTR=0               /* IF THERE ARE NO MORE LLES     */
*           THEN                    /* PRINT LAST LINE AND LEAVE     */
         CR    LLEPTR,@14                                          0366
         BE    @RT00366                                            0366
*           GOTO LEAVELLE;          /* LLE PROCESSING                */
*       END;                        /* END OF LINE LOOP              */
         BCTR  LECOUNT,0                                           0368
@DE00360 LTR   LECOUNT,LECOUNT                                     0368
         BP    @DL00360                                            0368
*       CALL IEAVAD11;              /* PRINT THE FULL LINE           */
         L     @15,@CV00081                                        0369
         BALR  @14,@15                                             0369
*       IF RETCODE^=0               /* IF OUTPUT FAILED              */
*         THEN                      /* LEAVE WITH BAD CODE           */
         LTR   RETCODE,RETCODE                                     0370
         BNZ   @RT00370                                            0370
*         GOTO FREERET;             /* IN R15                        */
*       GOTO MORELLE;               /* CHECK IF MORE LLES TO PRINT   */
         B     MORELLE                                             0372
*LEAVELLE:                          /* PRINT THE LAST LLE LINE       */
*       CALL IEAVAD11;              /* PRINT THE LINE                */
LEAVELLE L     @15,@CV00081                                        0373
         BALR  @14,@15                                             0373
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH BAD CODE           */
         LTR   RETCODE,RETCODE                                     0374
         BNZ   @RT00374                                            0374
*         GOTO FREERET;             /* IN R15                        */
*                                                                  0376
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* IF THE TASK HAS COMPLETED, THE CDE AND EXTENT LIST PROCESSING IS */
*/* BYPASSED. IF THE CDES ARE PRINTED, THEY ARE PRINTED IN THE ORDER */
*/* THAT THE RBS THAT POINT TO THEM WERE PRINTED, SO FINDRB IS AGAIN */
*/* USED.  NEXT ANY CDES WHICH ARE POINTED TO BY LLES ARE PRINTED,   */
*/* IF THEY WERE NOT PRINTED IN THE RB ORDER.                        */
*/* THEN THE EXTENT LISTS POINTED TO BY THE CDES ARE PRINTED, IN THE */
*/* ORDER THAT THE CDES WERE PRINTED. THIS COORDINATES THE LISTING   */
*/* OF THE RBS, LLES,CDES AND EXTENT LISTS.                          */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0376
*CDEOUT:                                                           0376
*       IF TCBFC='1'B               /* IF THE TASK HAS COMPLETED,    */
*         THEN                                                     0376
CDEOUT   TM    TCBFC(TCBPTR),B'10000000'                           0376
         BO    @RT00376                                            0376
*         GOTO TIOTOUT;             /* THERE ARE NO CDES OR EXTENT 0377
*                                      LISTS TO PRINT                */
*       TYPE='1'B;                  /* INDICATE CDE PASS PRINT       */
         OI    TYPE,B'01000000'                                    0378
*       ABDLINEA(1:4)=CDTITLE;      /* SET UP CDE HEADER LINE        */
         MVC   ABDLINEA(4,ABDARPTR),CDTITLE                        0379
*       CALL IEAVAD11;              /* PRINT THE HEADER LINE         */
         L     @15,@CV00081                                        0380
         BALR  @14,@15                                             0380
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH RETURN CODE=4      */
         LTR   RETCODE,RETCODE                                     0381
         BNZ   @RT00381                                            0381
*         GO TO FREERET;                                           0382
*XLOOP:                                                            0383
*       RBSECPTR=TCBPTR;            /* FIND OLDEST RB FIRST          */
XLOOP    LR    RBSECPTR,TCBPTR                                     0383
*       MAJOR='0'B;                 /* PRINT MAJORS AND EXLISTS      */
         NI    MAJOR,B'01111111'                                   0384
*       ABDCC='0';                  /* DOUBLE SPACE FIRST ENTRY      */
         MVI   ABDCC(ABDARPTR),C'0'                                0385
*GETRB:                                                            0386
*       CALL FINDRB;                /* GET NEXT YOUNGER RB ADDRESS 0386
*                                      RETURNED IN RBSECPTR RETCODE=0
*                                      FOUND RB =4 NO MORE RBS       */
GETRB    BAL   @14,FINDRB                                          0386
*       IF RETCODE=0                /* IF FOUND AN RB                */
*         THEN                      /* CHECK IF CDE TO PRINT         */
         SLR   @14,@14                                             0387
         CR    RETCODE,@14                                         0387
         BNE   @RF00387                                            0387
*         DO;                                                      0388
*           IF RBFTP^='000'B        /* IF NOT PRB GET NEXT RB        */
*             THEN                                                 0389
         TM    RBFTP(RBSECPTR),B'11100000'                         0389
         BNZ   @RT00389                                            0389
*             GO TO GETRB;          /* GET NEXT YOUNGER RB           */
*           CDENTPTR=RBCDE1;        /* GET CDE ADDR FROM RB          */
         SLR   CDENTPTR,CDENTPTR                                   0391
         ICM   CDENTPTR,7,RBCDE1(RBSECPTR)                         0391
*           IF CDENTPTR^=0          /* IF CDE EXISTS                 */
*             THEN                                                 0392
         CR    CDENTPTR,@14                                        0392
         BE    @RF00392                                            0392
*             CALL CDXLPT;          /* PRINT THE CDE OR EXTENT LIST
*                                      (LOOPED TWICE)                */
         BAL   @14,CDXLPT                                          0393
*           GO TO GETRB;            /* CONTINUE WITH NEXT YOUNGER RB
*                                      UNTIL DONE                    */
         B     GETRB                                               0394
*         END;                                                     0395
*       LLEPTR=ADDR(TCBLLS);        /* INITIALIZE FOR LLE SEARCH     */
@RF00387 LA    LLEPTR,TCBLLS(,TCBPTR)                              0396
*LLECDE:                                                           0397
*       LLEPTR=LLECHN;              /* GET NEXT LLE                  */
LLECDE   L     LLEPTR,LLECHN(,LLEPTR)                              0397
*       MAJOR='0'B;                 /* PRINT IF POSSIBLE THE MAJOR 0398
*                                      AND XLIST                     */
         NI    MAJOR,B'01111111'                                   0398
*       IF LLEPTR^=0                /* IF THERE IS A LLE             */
*         THEN                                                     0399
         LTR   LLEPTR,LLEPTR                                       0399
         BZ    @RF00399                                            0399
*         DO;                                                      0400
*           CDENTPTR=LLECDPT;       /* GET CDE ADDRESS TO CHECK      */
         L     CDENTPTR,LLECDPT(,LLEPTR)                           0401
*           RBSECPTR=TCBRBP;        /* SET TO FIRST RB               */
         L     RBSECPTR,TCBRBP(,TCBPTR)                            0402
*           GOTO RBCHK;             /* START IN LOOP INITIALLY       */
         B     RBCHK                                               0403
*RBCHKLP:                                                          0404
*           RBSECPTR=RBLINKB;       /* GET NEXT RB TO CHECK          */
RBCHKLP  SLR   @10,@10                                             0404
         ICM   @10,7,RBLINKB(RBSECPTR)                             0404
         LR    RBSECPTR,@10                                        0404
*RBCHK:                                                            0405
*           IF RBSECPTR=TCBPTR      /* IF THE LAST RB WAS DONE       */
*             THEN                  /* THE CDE WAS NOT DONE YET      */
RBCHK    CR    RBSECPTR,TCBPTR                                     0405
         BNE   @RF00405                                            0405
*             DO;                                                  0406
*               CALL CDXLPT;        /* PRINT THE CDE OR XLIST        */
         BAL   @14,CDXLPT                                          0407
*               GO TO LLECDE;       /* CONTINUE WITH NEXT LLE        */
         B     LLECDE                                              0408
*             END;                                                 0409
*           IF RBFTP^='000'B        /* IF NOT A PRB                  */
*             THEN                  /* GET NEXT RB TO CHECK          */
@RF00405 TM    RBFTP(RBSECPTR),B'11100000'                         0410
         BNZ   @RT00410                                            0410
*             GO TO RBCHKLP;                                       0411
*           RBCDPTR=RBCDE1;         /* PICK UP THIS RBS CDE          */
         SLR   RBCDPTR,RBCDPTR                                     0412
         ICM   RBCDPTR,7,RBCDE1(RBSECPTR)                          0412
*           IF RBCDPTR=0            /* IF THERE IS NO CDE TO CHECK   */
*             THEN                  /* GET NEXT RB TO CHECK          */
         LTR   RBCDPTR,RBCDPTR                                     0413
         BZ    @RT00413                                            0413
*             GOTO RBCHKLP;                                        0414
*           IF RBCDPTR=CDENTPTR     /* IF EQUAL THIS CDE HAS BEEN    */
*             THEN                  /* PRINTED, SO BYPASS IT         */
         CR    RBCDPTR,CDENTPTR                                    0415
         BE    @RT00415                                            0415
*             GOTO LLECDE;          /* GET NEXT LLE AND CONTINUE     */
*           IF CDENTPTR=RBCDPTR->CDXLMJP/* IF LLECDE EQUAL MAJOR CDE */
*             THEN                  /* DONT PRINT IT                 */
         C     CDENTPTR,CDXLMJP(,RBCDPTR)                          0417
         BE    @RT00417                                            0417
*             GOTO LLECDE;          /* GET NEXT LLE TO CHECK         */
*           IF RBCDPTR=CDXLMJP      /* IF MAJOR DONE ALREADY         */
*             THEN                  /* DONT DO IT AGAIN              */
         C     RBCDPTR,CDXLMJP(,CDENTPTR)                          0419
         BNE   @RF00419                                            0419
*             MAJOR='1'B;           /* FLAG NOT MAJOR PRINT          */
         OI    MAJOR,B'10000000'                                   0420
*           IF RBCDPTR->CDXLMJP=CDXLMJP/* IF MAJORS EQUAL DONT       */
*             THEN                  /* PRINT IT AGAIN                */
@RF00419 CLC   CDXLMJP(4,RBCDPTR),CDXLMJP(CDENTPTR)                0421
         BNE   @RF00421                                            0421
*             MAJOR='1'B;           /* INDICATE NOT MAJOR PRINT      */
         OI    MAJOR,B'10000000'                                   0422
*           GO TO RBCHKLP;          /* OTHERWISE CONTINUE RB SEARCH
*                                      FOR EQUAL CDE. IF NO RB IS  0423
*                                      FOUND WITH THE SAME CDE AS THE
*                                      LLE, THE CDE/XLIST IS PRINTED */
         B     RBCHKLP                                             0423
*         END;                                                     0424
*       IF TYPE='1'B                /* IF XTLISTS NOT PRINTED YET    */
*         THEN                      /* SET UP FOR EXTENT LIST        */
@RF00399 TM    TYPE,B'01000000'                                    0425
         BNO   @RF00425                                            0425
*         DO;                                                      0426
*           TYPE='0'B;              /* SET UP SECOND PASS IND.       */
         NI    TYPE,B'10111111'                                    0427
*           ABDLINEA(1:3)=XLTITLE;  /* SET UP EXTENT LIST HEADER     */
         MVC   ABDLINEA(3,ABDARPTR),XLTITLE                        0428
*           ABDLINEA(51:65)=LNADRHD;/* SET UP LENGTH ADDRESS MSG     */
         MVC   ABDLINEA+50(15,ABDARPTR),LNADRHD                    0429
*           ABDLINEA(75:89)=LNADRHD;/* AS HEADER FOR ENTRIES IN      */
         MVC   ABDLINEA+74(15,ABDARPTR),LNADRHD                    0430
*           ABDLINEA(99:113)=LNADRHD;/* 3 GROUPS TO A LINE           */
         MVC   ABDLINEA+98(15,ABDARPTR),LNADRHD                    0431
*           CALL IEAVAD11;          /* OUTPUT THE EXTENT HEADER      */
         L     @15,@CV00081                                        0432
         BALR  @14,@15                                             0432
*           IF RETCODE^=0           /* IF OUTPUT ERRED               */
*             THEN                  /* THEN LEAVE WITH BAD RETCODE   */
         LTR   RETCODE,RETCODE                                     0433
         BNZ   @RT00433                                            0433
*             GOTO FREERET;                                        0434
*           GOTO XLOOP;             /* LOOP BACK TO DO XLISTS        */
         B     XLOOP                                               0435
*         END;                                                     0436
*                                                                  0437
*/*                                                                  */
*/*                                                                  */
*/* NEXT THE TASK INPUT OUTPUT TABLE IS FORMATTED AND PRINTED. IT IS */
*/* FOUND FROM A POINTER IN THE TCB.                                 */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0437
*TIOTOUT:                                                          0437
*       TIOTPTR=TCBTIO;             /* INITIALIZE TIOT BASE REG      */
@RF00425 DS    0H                                                  0437
TIOTOUT  L     TIOTPTR,TCBTIO(,TCBPTR)                             0437
*       ABDCC='0';                  /* DOUBLE SPACE LINE     @G33SPHW*/
         MVI   ABDCC(ABDARPTR),C'0'                                0438
*       ABDWORKA=TIOTPTR;           /* GET TIOT ADDRESS      @G33SPHW*/
         ST    TIOTPTR,ABDWORKA(,ABDARPTR)                         0439
*       ABDBPTR=ADDR(ABDWORKB);     /* GET ADDR OF TIOT      @G33SPHW*/
         LA    @10,ABDWORKB(,ABDARPTR)                             0440
         ST    @10,ABDBPTR(,ABDARPTR)                              0440
*       ABDLLINE=ADDR(TIOHEAD);     /* TIOT HEADER LAYOUT    @G33SPHW*/
         LA    @10,TIOHEAD                                         0441
         ST    @10,ABDLLINE(,ABDARPTR)                             0441
*       PARMPTR=ABDARPTR;           /* POINT R1 TO PARMLIST  @G33SPHW*/
         LR    PARMPTR,ABDARPTR                                    0442
*       CALL IEAVAD31;              /* CALL FORMATTER        @G33SPHW*/
         L     @15,@CV00082                                        0443
         BALR  @14,@15                                             0443
*       IF RETCODE^=0               /* IF ERRED              @G33SPHW*/
*         THEN                                                     0444
         LTR   RETCODE,RETCODE                                     0444
         BNZ   @RT00444                                            0444
*         GOTO FREERET;             /* LEAVE WITH RC=4       @G33SPHW*/
*       ABDLINEA(20:24)=TIOJOB;     /* SET UP HEADER MESSAGE         */
         MVC   ABDLINEA+19(5,ABDARPTR),TIOJOB                      0446
*       ABDLINEA(26:33)=TIOCNJOB;   /* MOVE IN JOB NAME FROM TIOT    */
         MVC   ABDLINEA+25(8,ABDARPTR),TIOCNJOB(TIOTPTR)           0447
*       ABDLINEA(37:40)=STPMSG;     /* SET UP STEP LABEL TEXT        */
         MVC   ABDLINEA+36(4,ABDARPTR),STPMSG                      0448
*       ABDLINEA(44:51)=TIOCSTEP;   /* MOVE IN STEP NAME             */
         MVC   ABDLINEA+43(8,ABDARPTR),TIOCSTEP(TIOTPTR)           0449
*       IF TIOPROC(1)^=' '          /* IF THERE IS A PROC NAME       */
*         THEN                      /* PRINT IT ALSO                 */
         LA    @10,TIOCSTEP(,TIOTPTR)                              0450
         AH    @10,@CH00064                                        0450
         CLI   TIOPROC(@10),C' '                                   0450
         BE    @RF00450                                            0450
*         DO;                                                      0451
*           ABDLINEA(59:62)=PROCMSG;/* SET UP PROC LABEL TEXT        */
         MVC   ABDLINEA+58(4,ABDARPTR),PROCMSG                     0452
*           ABDLINEA(65:72)=TIOPROC;/* SET UP PROC NAME FROM TIOT    */
         MVC   ABDLINEA+64(8,ABDARPTR),TIOPROC(@10)                0453
*         END;                                                     0454
*       CALL IEAVAD11;              /* PRINT THE FIRST TIOT LINE     */
@RF00450 L     @15,@CV00081                                        0455
         BALR  @14,@15                                             0455
*       IF RETCODE^=0               /* IF ERRED                      */
*         THEN                                                     0456
         LTR   RETCODE,RETCODE                                     0456
         BNZ   @RT00456                                            0456
*         GOTO FREERET;             /* LEAVE WITH RECODE=4           */
*       ABDLINEA(11:16)=OFFMSG;     /* PUT OFFSET IN HEADER LINE   0458
*                                                            @G33SPHW*/
         MVC   ABDLINEA+10(6,ABDARPTR),OFFMSG                      0458
*       ABDLINEA(21:26)=LNMSG;      /* PUT LN-STA IN HEADER LINE   0459
*                                                            @G33SPHW*/
         MVC   ABDLINEA+20(6,ABDARPTR),LNMSG                       0459
*       ABDLINEA(33:38)=DDMSG;      /* PUT DDNAME IN HEADER LINE   0460
*                                                            @G33SPHW*/
         MVC   ABDLINEA+32(6,ABDARPTR),DDMSG                       0460
*       ABDLINEA(45:51)=TTRMSG;     /* PUT TTR-STC IN HEADER LINE  0461
*                                                            @G33SPHW*/
         MVI   ABDLINEA+50(ABDARPTR),C' '                          0461
         MVC   ABDLINEA+44(6,ABDARPTR),TTRMSG                      0461
*       ABDLINEA(57:63)=STBMSG;     /* PUT STB-UCB IN HEADER LINE  0462
*                                                            @G33SPHW*/
         MVI   ABDLINEA+62(ABDARPTR),C' '                          0462
         MVC   ABDLINEA+56(6,ABDARPTR),STBMSG                      0462
*       CALL IEAVAD11;              /* PRINT THE HEADER LINE @G33SPHW*/
         L     @15,@CV00081                                        0463
         BALR  @14,@15                                             0463
*       IF RETCODE^=0               /* IF ERRED              @G33SPHW*/
*         THEN                                                     0464
         LTR   RETCODE,RETCODE                                     0464
         BNZ   @RT00464                                            0464
*         GOTO FREERET;             /* LEAVE WITH RECODE=4           */
*       OFFSET=STARTTIO;            /* START OF TIOT ENTRIES @G33SPHW*/
         MVC   OFFSET(2),@CH00038                                  0466
*LINE2ON:                                                          0467
*       DDSIZE=TIOELNGH;            /* GET LENGTH OF ENTRY           */
LINE2ON  SLR   DDSIZE,DDSIZE                                       0467
         IC    DDSIZE,TIOELNGH(,TIOTPTR)                           0467
*       IF DDSIZE^=0                /* IF THERE IS AN ENTRY TO DO    */
*         THEN                      /* DO IT                         */
         LTR   DDSIZE,DDSIZE                                       0468
         BZ    @RF00468                                            0468
*         DO;                                                      0469
*           ABDLINEA(11)=PLUS;      /* PUT OFFSET PLUS ON OUTPUT LINE
*                                                            @G33SPHW*/
         MVC   ABDLINEA+10(1,ABDARPTR),PLUS                        0470
*           ABDBPTR=ADDR(OFFSET);   /* ADDRESS OF OFFSET     @G33SPHW*/
         LA    @10,OFFSET                                          0471
         ST    @10,ABDBPTR(,ABDARPTR)                              0471
*           ABDLLINE=ADDR(TIOLLOFF);/* ADDRESS OF OFFSET LAYOUT    0472
*                                                            @G33SPHW*/
         LA    @10,TIOLLOFF                                        0472
         ST    @10,ABDLLINE(,ABDARPTR)                             0472
*           CALL IEAVAD61;          /* FORMAT OFFSET         @G33SPHW*/
         L     @15,@CV00083                                        0473
         BALR  @14,@15                                             0473
*           IF RETCODE^=0           /* IF ERRED              @G33SPHW*/
*             THEN                                                 0474
         SLR   @14,@14                                             0474
         CR    RETCODE,@14                                         0474
         BNE   @RT00474                                            0474
*             GOTO FREERET;         /* LEAVE WITH RC=4       @G33SPHW*/
*           OFFSET=OFFSET+DDSIZE;   /* UPDATE OFFSET COUNTER @G33SPHW*/
         LR    @10,DDSIZE                                          0476
         AH    @10,OFFSET                                          0476
         STH   @10,OFFSET                                          0476
*           IF TIOEDDNM(1:4)=0 THEN /* UNALLOCATED TIOT ENTRY      0477
*                                                            @G33SPHW*/
         CL    @14,TIOEDDNM(,TIOTPTR)                              0477
         BNE   @RF00477                                            0477
*             DO;                   /* YES... DONT PRINT ENTRY     0478
*                                                            @G33SPHW*/
*               ABDLINEA(24:44)=UNALCMSG;/* PRINT UNALLOCATED LINE 0479
*                                                            @G33SPHW*/
         MVC   ABDLINEA+23(21,ABDARPTR),UNALCMSG                   0479
*               PARMPTR=ABDARPTR;   /* POINT R1 TO PARMLIST  @G33SPHW*/
         LR    PARMPTR,ABDARPTR                                    0480
*               CALL IEAVAD11;      /* PRINT LINE            @G33SPHW*/
         L     @15,@CV00081                                        0481
         BALR  @14,@15                                             0481
*               IF RETCODE^=0       /* IF ERRED              @G33SPHW*/
*                 THEN                                             0482
         LTR   RETCODE,RETCODE                                     0482
         BNZ   @RT00482                                            0482
*                 GOTO FREERET;     /* LEAVE WITH BAD CODE   @G33SPHW*/
*               GO TO NEXTTIOT;     /* GET NEXT TIOT ENTRY   @G33SPHW*/
         B     NEXTTIOT                                            0484
*             END;                  /* END... UNALLOCATED TIOT     0485
*                                                            @G33SPHW*/
*           ABDBPTR=ADDR(TIOELNGH); /* POINT TO START OF ENTRY       */
@RF00477 LA    @10,TIOELNGH(,TIOTPTR)                              0486
         ST    @10,ABDBPTR(,ABDARPTR)                              0486
*           ABDLLINE=ADDR(TIOLLIN1);/* POINT TO FIRST TIOT LAYOUT    */
         LA    @10,TIOLLIN1                                        0487
         ST    @10,ABDLLINE(,ABDARPTR)                             0487
*           CALL IEAVAD61;          /* FORMAT FIRST WORD OF DD       */
         L     @15,@CV00083                                        0488
         BALR  @14,@15                                             0488
*           IF RETCODE^=0           /* IF ERRED                      */
*             THEN                                                 0489
         SLR   @14,@14                                             0489
         CR    RETCODE,@14                                         0489
         BNE   @RT00489                                            0489
*             GOTO FREERET;         /* LEAVE WITH BAD CODE           */
*           ABDLINEA(33:40)=TIOEDDNM;/* MOVE IN DD NAME TO OUTLINE   */
         MVC   ABDLINEA+32(8,ABDARPTR),TIOEDDNM(TIOTPTR)           0491
*           FMCOUNT=2;              /* INDICATE 2 LINE SPACES DONE   */
         LA    FMCOUNT,2                                           0492
*           ABDLLINE=ADDR(TIOLLIN2);/* POINT TO 3RD SLOT FORMATTER   */
         LA    @10,TIOLLIN2                                        0493
         ST    @10,ABDLLINE(,ABDARPTR)                             0493
*           ABDBPTR=ADDR(TIOEJFCB); /* POINT TO NEXT WORD TO DO      */
         LA    @10,TIOEJFCB(,TIOTPTR)                              0494
         ST    @10,ABDBPTR(,ABDARPTR)                              0494
*           COUNT=DDSIZE/4;         /* CALCULATE NUMBER OF WORDS IN
*                                      DD ENTRY                      */
         LR    COUNT,DDSIZE                                        0495
         SRL   COUNT,2                                             0495
*           COUNT=COUNT-3;          /* SUBTRACT FOR WORDS DONE       */
         SH    COUNT,@CH00092                                      0496
*           IF COUNT=0              /* THERE IS NOTHING LEFT         */
*             THEN                  /* SO PRINT LINE                 */
         CR    COUNT,@14                                           0497
         BE    @RT00497                                            0497
*             GOTO GOODOUT;         /* AND LEAVE                     */
*           DO COUNT=COUNT TO 1 BY-1;/* FORMAT WORDS INTO SLOTS      */
         B     @DE00499                                            0499
@DL00499 DS    0H                                                  0500
*             CALL IEAVAD61;        /* FORMAT NEXT WORD              */
         L     @15,@CV00083                                        0500
         BALR  @14,@15                                             0500
*             IF RETCODE^=0         /* IF ERRED                      */
*               THEN                                               0501
         LTR   RETCODE,RETCODE                                     0501
         BNZ   @RT00501                                            0501
*               GOTO FREERET;       /* LEAVE WITH BAD CODE           */
*             FMCOUNT=FMCOUNT+1;    /* INCR NUMBER OF SLOTS          */
         LA    FMCOUNT,1(,FMCOUNT)                                 0503
*             IF FMCOUNT=8          /* IF LINE IS FULL               */
*               THEN                /* PRINT THE LINE,CONTINUE       */
         CH    FMCOUNT,@CH00064                                    0504
         BNE   @RF00504                                            0504
*               DO;                                                0505
*                 CALL IEAVAD11;    /* PRINT THE LINE                */
         L     @15,@CV00081                                        0506
         BALR  @14,@15                                             0506
*                 IF RETCODE^=0     /* IF ERRED                      */
*                   THEN                                           0507
         LTR   RETCODE,RETCODE                                     0507
         BNZ   @RT00507                                            0507
*                   GOTO FREERET;   /* LEAVE WITH BAD CODE           */
*                 FMCOUNT=0;        /* RESET TO BEGINNING OF LINE    */
         SLR   FMCOUNT,FMCOUNT                                     0509
*                 ABDLLINE=ADDR(TIOLLIN1);/* POINT TO FIRST SLOT     */
         LA    @10,TIOLLIN1                                        0510
         ST    @10,ABDLLINE(,ABDARPTR)                             0510
*               END;                /* LOOP UNTIL DONE               */
*           END;                                                   0512
@RF00504 BCTR  COUNT,0                                             0512
@DE00499 LTR   COUNT,COUNT                                         0512
         BP    @DL00499                                            0512
*           IF FMCOUNT^=0           /* IF INCOMPLETE LINE            */
*             THEN                  /* PRINT IT NOW                  */
         LTR   FMCOUNT,FMCOUNT                                     0513
         BZ    @RF00513                                            0513
*             DO;                                                  0514
*               CALL IEAVAD11;      /* PRINT THE LINE                */
         L     @15,@CV00081                                        0515
         BALR  @14,@15                                             0515
*               IF RETCODE^=0       /* IF ERRED                      */
*                 THEN                                             0516
         LTR   RETCODE,RETCODE                                     0516
         BNZ   @RT00516                                            0516
*                 GOTO FREERET;     /* LEAVE WITH BAD CODE           */
*             END;                                                 0518
*NEXTTIOT:                                                         0519
*           TIOTPTR=TIOTPTR+DDSIZE; /* INCREMENT TO NEXT DD          */
@RF00513 DS    0H                                                  0519
NEXTTIOT ALR   TIOTPTR,DDSIZE                                      0519
*           GOTO LINE2ON;           /* FORMAT THE NEXT DD ENTRY      */
         B     LINE2ON                                             0520
*GOODOUT:                                                          0521
*           CALL IEAVAD11;          /* PRINT THE LAST LINE           */
GOODOUT  L     @15,@CV00081                                        0521
         BALR  @14,@15                                             0521
*           GOTO FREERET;           /* PASS CODE TO MAINLINE         */
         B     FREERET                                             0522
*         END;                                                     0523
*       RETCODE=0;                  /* INDICATE GOOD RETURN VALUE    */
@RF00468 SLR   RETCODE,RETCODE                                     0524
*                                                                  0525
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* FINAL PROCESSING CONSISTS OF UNCHAINING THE SAVE AREA, FREEING IT*/
*/* ,SETTING THE RETURN CODE TO THE VALUE SAVED, AND RETURNING TO THE*/
*/* MAINLINE OF ABDUMP, AFTER THE REGISTERS ARE RESTORED.            */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0525
*                                   /* SET UP FREEMAIN LIST REG      */
*FREERET:                                                          0525
*       PARMPTR=ADDR(ABDASIZE);                                    0525
FREERET  LA    PARMPTR,ABDASIZE(,ABDARPTR)                         0525
*       SAVERET=RETCODE;            /* SAVE RETURN CODE OVER FREE    */
         LR    SAVERET,RETCODE                                     0526
*       ABDAAREA=SAVEPTR;           /* SET UP ADDRESS TO FREE        */
         ST    SAVEPTR,ABDAAREA(,ABDARPTR)                         0527
*       SAVEPTR=SAVEPTR->PRESAPTR;  /* SET UP PREVIOUS SAVE AREA     */
         L     SAVEPTR,PRESAPTR(,SAVEPTR)                          0528
*       NEXSAPTR=0;                 /* CLEAR POINTER TO AREA TO BE 0529
*                                      FREED                         */
         SLR   @10,@10                                             0529
         ST    @10,NEXSAPTR(,SAVEPTR)                              0529
*       GENERATE;                                                  0530
         FREEMAIN E,LV=@ENDDATD-@DATD+72,                              *
               SP=253,                                                 *
               A=ABDGMA(ABDARPTR),                                     *
               MF=(E,(1))
*       RETCODE=SAVERET;            /* PASS RETURN CODE TO MAIN      */
         LR    RETCODE,SAVERET                                     0531
*     END;                          /*                        @Y02705*/
*                                                                  0533
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* FINDRB LOCATES THE RB WHICH POINTS TO THE RB PASSED IN RBSECPTR  */
*/* AND PASSES ITS @ BACK IN RBSECPTR. TO FIND THE LAST RB ON THE    */
*/* QUEUE, THE TCB ADDRESS IS PASSED TO FINDRB IN RBSECPTR.  IF THE  */
*/* TCB POINTS TO THE RB ADDRESS PASSED IN RBSECPTR, A RETURN CODE OF*/
*/* FOUR IS GIVEN TO INDICATE THE END OF THE QUEUE. OTHERWISE, AN  RB*/
*/* ADDRESS IS RETURNED, AND THE CODE PASSED BACK IS ZERO. RBSAVE IS */
*/* USED TO SAVE THE PASSED RB ADDRESS AS A COMPARE VALUE TO FIND    */
*/* THE RB WHICH POINTS TO IT.                                       */
*/* ONLY REGISTERS RBSECPTR AND RETCODE ARE MODIFIED BY FINDRB.      */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0533
*FINDRB:                                                           0533
*   PROC OPTIONS(DONTSAVE,NOSAVEAREA);                             0533
         B     @PB00002                                            0533
FINDRB   DS    0H                                                  0534
*   IF RBSECPTR=TCBRBP              /* IF THE INPUT RB IS YOUNGEST   */
*     THEN                                                         0534
         C     RBSECPTR,TCBRBP(,TCBPTR)                            0534
         BNE   @RF00534                                            0534
*     DO;                                                          0535
*       RETCODE=4;                  /* SET RETURN CODE AND LEAVE     */
         LA    RETCODE,4                                           0536
*     END;                                                         0537
*   ELSE                            /* FIND THE NEXT YOUNGER RB      */
*     DO;                                                          0538
         B     @RC00534                                            0538
@RF00534 DS    0H                                                  0539
*       RBSAVE=RBSECPTR;            /* SAVE OLD RB VALUE FOR SRCH    */
         ST    RBSECPTR,RBSAVE                                     0539
*       RBSECPTR=TCBRBP;            /* INITIALIZE TO YOUNGEST        */
         L     RBSECPTR,TCBRBP(,TCBPTR)                            0540
*NEXTRB:                                                           0541
*       IF RBSAVE=RBLINKB           /* IF THIS IS NEXT YOUNGER RB    */
*         THEN                      /* LEAVE WITH CC=0               */
NEXTRB   L     @10,RBSAVE                                          0541
         SLR   @00,@00                                             0541
         ICM   @00,7,RBLINKB(RBSECPTR)                             0541
         CR    @10,@00                                             0541
         BNE   @RF00541                                            0541
*         DO;                                                      0542
*           RETCODE=0;                                             0543
         SLR   RETCODE,RETCODE                                     0543
*         END;                                                     0544
*       ELSE                        /* GET NEXT RB, CONTINUE         */
*         DO;                                                      0545
         B     @RC00541                                            0545
@RF00541 DS    0H                                                  0546
*           RBSECPTR=RBLINKB;       /* SEARCH                        */
         SLR   @10,@10                                             0546
         ICM   @10,7,RBLINKB(RBSECPTR)                             0546
         LR    RBSECPTR,@10                                        0546
*           GOTO NEXTRB;            /* CHECK NEXT LINK               */
         B     NEXTRB                                              0547
*         END;                                                     0548
*     END;                                                         0549
*   END FINDRB;                                                    0550
@EL00002 DS    0H                                                  0550
@EF00002 DS    0H                                                  0550
@ER00002 BR    @14                                                 0550
*                                                                  0551
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*/* CDXLPT IS USED TO PRINT THE CDES OR EXTENT LISTS THAT ARE FOUND  */
*/* DURING THE RB AND LLE LOOP SEARCHES. THE INPUT TO THE ROUTINE IS */
*/* THE CDENTPTR OF THE CDE FOUND FROM THE RB OR LLE, AND A BIT TO   */
*/* INDICATE IF THIS IS THE CDE OR EXTENT LIST PASS. ALL REGISTERS   */
*/* EXCEPT CDENTPTR AND XTLSTPTR REMAIN INTACT OVER THE ROUTINE,WHICH*/
*/* DOES NOT SAVE OR RESTORE ANY REGISTERS.                          */
*/*                                                                  */
*/*                                                                  */
*/*                                                                  */
*                                                                  0551
*CDXLPT:                                                           0551
*   PROC OPTIONS(SAVE(3,5,6,8,14));                                0551
CDXLPT   ST    @14,@SA00003                                        0551
         ST    @03,@SA00003+4                                      0551
         STM   @05,@06,@SA00003+8                                  0551
         ST    @08,@SA00003+16                                     0551
*   IF TYPE='1'B                    /* IF CDES ARE BEING DONE        */
*     THEN                          /* FORMAT AND OUTPUT THE CDE     */
         TM    TYPE,B'01000000'                                    0552
         BNO   @RF00552                                            0552
*     DO;                                                          0553
*FMCDE:                             /* PASSED AS INPUT IN CDENTPTR   */
*       ABDWORKA=CDENTPTR;          /* SET UP ADDRESS OF CDE FOR     */
FMCDE    ST    CDENTPTR,ABDWORKA(,ABDARPTR)                        0554
*       ABDBPTR=ADDR(ABDWORKB);     /* FORMATTING ON FIRST LINE      */
         LA    @10,ABDWORKB(,ABDARPTR)                             0555
         ST    @10,ABDBPTR(,ABDARPTR)                              0555
*       ABDLLINE=ADDR(CDELINE);     /* SET UP LAYOUT LINE POINTER    */
         LA    @10,CDELINE                                         0556
         ST    @10,ABDLLINE(,ABDARPTR)                             0556
*       CALL IEAVAD31;              /* FORMAT THE ADDRESS            */
         L     @15,@CV00082                                        0557
         BALR  @14,@15                                             0557
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH BAD CODE           */
         LTR   RETCODE,RETCODE                                     0558
         BNZ   @RT00558                                            0558
*         GOTO BADDRET;                                            0559
*       ABDBPTR=CDENTPTR;           /* SET UP CDE START ADDRESS TO   */
         ST    CDENTPTR,ABDBPTR(,ABDARPTR)                         0560
*       CALL IEAVAD31;              /* FORMAT UP TO NAME FIELD       */
         L     @15,@CV00082                                        0561
         BALR  @14,@15                                             0561
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH BAD CODE           */
         LTR   RETCODE,RETCODE                                     0562
         BNZ   @RT00562                                            0562
*         GOTO BADDRET;                                            0563
*       ABDLINEA(49:50)=NMLAB;      /* SET EP NAME FIELD LABEL       */
         MVC   ABDLINEA+48(2,ABDARPTR),NMLAB                       0564
*       ABDLINEA(52:59)=CDNAME;     /* MOVE ALREADY UNPACKED NAME    */
         MVC   ABDLINEA+51(8,ABDARPTR),CDNAME(CDENTPTR)            0565
*       ABDBPTR=ADDR(CDENTPT);      /* SET UP NEXT FIELD TO FORMAT   */
         LA    @10,CDENTPT(,CDENTPTR)                              0566
         ST    @10,ABDBPTR(,ABDARPTR)                              0566
*       CALL IEAVAD31;              /* FORMAT THE REST OF THE CDE    */
         L     @15,@CV00082                                        0567
         BALR  @14,@15                                             0567
*       IF RETCODE^=0               /* IF FORMAT ERRED               */
*         THEN                      /* LEAVE WITH BAD RETCODE        */
         LTR   RETCODE,RETCODE                                     0568
         BNZ   @RT00568                                            0568
*         GOTO BADDRET;                                            0569
*       CALL IEAVAD11;              /* OUTPUT THE CDE ON ONE LINE    */
         L     @15,@CV00081                                        0570
         BALR  @14,@15                                             0570
*       IF RETCODE^=0               /* IF OUTPUT ERRED               */
*         THEN                      /* LEAVE WITH BAD RETCODE        */
         LTR   RETCODE,RETCODE                                     0571
         BNZ   @RT00571                                            0571
*         GOTO BADDRET;                                            0572
*       IF MAJOR='0'B               /* IF MAJOR TO BE PRINTED TOO    */
*         THEN                      /* LOOP BACK THROUGH             */
         TM    MAJOR,B'10000000'                                   0573
         BNZ   @RF00573                                            0573
*         DO;                                                      0574
*           IF CDMIN='1'B           /* IF THE CDE WAS MINOR ALSO     */
*             THEN                  /* PRINT THE MAJOR CDE           */
         TM    CDMIN(CDENTPTR),B'00000100'                         0575
         BNO   @RF00575                                            0575
*             DO;                                                  0576
*               CDENTPTR=CDXLMJP;   /* GET MAJOR ADDRESS             */
         L     CDENTPTR,CDXLMJP(,CDENTPTR)                         0577
*               GOTO FMCDE;         /* LOOP BACK TO DO MAJOR CDE     */
         B     FMCDE                                               0578
*             END;                                                 0579
*         END;                                                     0580
*     END;                                                         0581
*   ELSE                                                           0582
*     DO;                                                          0582
         B     @RC00552                                            0582
@RF00552 DS    0H                                                  0583
*       IF MAJOR='1'B               /* IF MAJOR TO BE BYPASSED       */
*         THEN                      /* DONT PRINT EXTENT LIST        */
         TM    MAJOR,B'10000000'                                   0583
         BO    @RT00583                                            0583
*         RETURN;                   /* LEAVE IMMEDIATELY             */
*       IF CDMIN='1'B               /* IF MINOR, GET MAJOR TO GET  0585
*                                      EXTENT LIST ADDRESS           */
*         THEN                                                     0585
         TM    CDMIN(CDENTPTR),B'00000100'                         0585
         BNO   @RF00585                                            0585
*         CDENTPTR=CDXLMJP;         /* PICK UP MAJOR CDE ADDRESS     */
         L     CDENTPTR,CDXLMJP(,CDENTPTR)                         0586
*       IF CDNIC='0'B&              /* IF THE PROGRAM IS IN CORE     */
*           CDXLE='1'B              /* AND THE EXTENT LIST HAS BEEN  */
*         THEN                      /* BUILT, FORMAT IT              */
@RF00585 TM    CDNIC(CDENTPTR),B'01000000'                         0587
         BNZ   @RF00587                                            0587
         TM    CDXLE(CDENTPTR),B'00100000'                         0587
         BNO   @RF00587                                            0587
*         DO;                                                      0588
*           XTLSTPTR=CDXLMJP;       /* INITIALIZE POINTER TO XLIST   */
         L     XTLSTPTR,CDXLMJP(,CDENTPTR)                         0589
*           ABDWORKA=XTLSTPTR;      /* SET UP ADDRESS OF XLIST FOR 0590
*                                      FORMATTING INTO LINE          */
         ST    XTLSTPTR,ABDWORKA(,ABDARPTR)                        0590
*           ABDBPTR=ADDR(ABDWORKB); /* SET UP ADDRESS OF FORMAT    0591
*                                      LAYOUT LINES FOR THE XLIST    */
         LA    @10,ABDWORKB(,ABDARPTR)                             0591
         ST    @10,ABDBPTR(,ABDARPTR)                              0591
*           ABDLLINE=ADDR(XLLINE1);                                0592
         LA    @10,XLLINE1                                         0592
         ST    @10,ABDLLINE(,ABDARPTR)                             0592
*           CALL IEAVAD31;          /* FORMAT THE EXTENT LIST ADDR   */
         L     @15,@CV00082                                        0593
         BALR  @14,@15                                             0593
*           IF RETCODE^=0           /* IF FORMAT ERRED               */
*             THEN                  /* LEAVE                         */
         LTR   RETCODE,RETCODE                                     0594
         BNZ   @RT00594                                            0594
*             GOTO BADDRET;         /* WITH CODE=4                   */
*           ABDBPTR=XTLSTPTR;       /* POINT TO XLIST                */
         ST    XTLSTPTR,ABDBPTR(,ABDARPTR)                         0596
*           CALL IEAVAD31;          /* FORMAT FIRST 2 WORDS OF XL    */
         L     @15,@CV00082                                        0597
         BALR  @14,@15                                             0597
*           IF RETCODE^=0           /* IF FORMAT ERRED               */
*             THEN                  /* LEAVE                         */
         LTR   RETCODE,RETCODE                                     0598
         BNZ   @RT00598                                            0598
*             GOTO BADDRET;         /* WITH CODE=4 ABDBPTR         0599
*                                      NOW=ADDR(ABDLLINE2)           */
*           FULLSIZE=XSIZE;         /* GET SIZE OF ENTIRE XLIST      */
         L     FULLSIZE,XSIZE(,XTLSTPTR)                           0600
*           COUNT=XCOUNT;           /* GET NUMBER OF EXTENTS         */
         L     COUNT,XCOUNT(,XTLSTPTR)                             0601
*           LTHPTR=LTHPTR+8;        /* GET ADDRESS OF LIST OF LTHS   */
         LA    @10,8                                               0602
         ALR   LTHPTR,@10                                          0602
*           LENSIZE=COUNT;          /* CALCULATE SIZE OF LIST OF   0603
*                                      LENGTHS                       */
         LR    LENSIZE,COUNT                                       0603
*           LENSIZE=LENSIZE*4;      /* SIZE OF LTHS NOW KNOWN        */
         SLL   LENSIZE,2                                           0604
*           ADDRPTR=LTHPTR+LENSIZE; /* GET ADRESS OF LIST OF ADRESSES*/
         LR    ADDRPTR,LTHPTR                                      0605
         ALR   ADDRPTR,LENSIZE                                     0605
*           XLSIZE=8+XLSIZE+XLSIZE; /* SIZE OF XLIST LESS THE SIZE OF
*                                      THE WORK AREA                 */
         ALR   @10,XLSIZE                                          0606
         ALR   XLSIZE,@10                                          0606
*           WORKSIZE=WORKSIZE-XLSIZE;/* SIZE OF WORK AREA            */
         SLR   WORKSIZE,XLSIZE                                     0607
*           FMCOUNT=0;              /* SET COUNT OF FORMATTED WORDS
*                                      TO ZERO                       */
         SLR   FMCOUNT,FMCOUNT                                     0608
*           DO COUNT=COUNT TO 1 BY-1;/* FORMAT THE LTH AND ADDR LISTS
*                                      INTO LINES                    */
         B     @DE00609                                            0609
@DL00609 DS    0H                                                  0610
*             ABDBPTR=LTHPTR;       /* SET TO DO LENGTH ENTRY        */
         ST    LTHPTR,ABDBPTR(,ABDARPTR)                           0610
*             CALL IEAVAD61;        /* FORMAT THE ENTRY              */
         L     @15,@CV00083                                        0611
         BALR  @14,@15                                             0611
*             IF RETCODE^=0         /* IF IEAVAD61 ERRED             */
*               THEN                /* LEAVE                         */
         LTR   RETCODE,RETCODE                                     0612
         BNZ   @RT00612                                            0612
*               GOTO BADDRET;       /* WITH CODE=4                   */
*             LTHPTR=ABDBPTR;       /* SAVE THE NEXT LENTH           */
         L     LTHPTR,ABDBPTR(,ABDARPTR)                           0614
*             ABDBPTR=ADDRPTR;      /* POINT TO ADDR TO FORMAT       */
         ST    ADDRPTR,ABDBPTR(,ABDARPTR)                          0615
*             CALL IEAVAD61;        /* FORMAT IT                     */
         L     @15,@CV00083                                        0616
         BALR  @14,@15                                             0616
*             IF RETCODE^=0         /* IF IEAVAD61 ERRED             */
*               THEN                /* LEAVE                         */
         LTR   RETCODE,RETCODE                                     0617
         BNZ   @RT00617                                            0617
*               GOTO BADDRET;       /* WITH CODE=4                   */
*             ADDRPTR=ABDBPTR;      /* SAVE THE NEXT ADDR            */
         L     ADDRPTR,ABDBPTR(,ABDARPTR)                          0619
*             FMCOUNT=FMCOUNT+2;    /* INDICATE 2 WORDS DONE         */
         LA    FMCOUNT,2(,FMCOUNT)                                 0620
*             IF FMCOUNT=6          /* IF LINE IS FULL PRINT IT      */
*               THEN                /* OUTPUT LINE AND RESET COUNT   */
         CH    FMCOUNT,@CH00109                                    0621
         BNE   @RF00621                                            0621
*               DO;                                                0622
*                 CALL IEAVAD11;    /* OUTPUT THE LINE               */
         L     @15,@CV00081                                        0623
         BALR  @14,@15                                             0623
*                 IF RETCODE^=0     /* IF OUTPUT ERRED               */
*                   THEN            /* CODE=4, LEAVE                 */
         LTR   RETCODE,RETCODE                                     0624
         BNZ   @RT00624                                            0624
*                   GOTO BADDRET;                                  0625
*                 FMCOUNT=0;        /* RESET THE LINE COUNTER        */
         SLR   FMCOUNT,FMCOUNT                                     0626
*                 ABDLLINE=ADDR(XLLINE2);/* RESET LAYOUT LINE POINTER*/
         LA    @10,XLLINE2                                         0627
         ST    @10,ABDLLINE(,ABDARPTR)                             0627
*               END;                /* END OF OUTPUT DO              */
*           END;                    /* END OF COUNT LNTHS DO         */
@RF00621 BCTR  COUNT,0                                             0629
@DE00609 LTR   COUNT,COUNT                                         0629
         BP    @DL00609                                            0629
*           IF WORKSIZE>0           /* IF THERE IS A WORK AREA       */
*             THEN                  /* FORMAT AND OUTPUT IT ALSO     */
         LTR   WORKSIZE,WORKSIZE                                   0630
         BNP   @RF00630                                            0630
*             DO;                   /* EVEN IF THERE ARE NO EXTENTS  */
*               WORKSIZE=WORKSIZE/4;/* CALCULATE NUMBER OF WORDS TO
*                                      FORMAT                        */
         SRL   WORKSIZE,2                                          0632
*               ABDBPTR=ADDRPTR;    /* ADDRESS OF WORK AREA          */
         ST    ADDRPTR,ABDBPTR(,ABDARPTR)                          0633
*               DO WORKSIZE=WORKSIZE TO 1 BY-1;                    0634
         B     @DE00634                                            0634
@DL00634 DS    0H                                                  0635
*                 CALL IEAVAD61;    /* FORMAT WORD INTO LINE         */
         L     @15,@CV00083                                        0635
         BALR  @14,@15                                             0635
*                 IF RETCODE^=0     /* IF ERRED                      */
*                   THEN                                           0636
         LTR   RETCODE,RETCODE                                     0636
         BNZ   @RT00636                                            0636
*                   GOTO BADDRET;                                  0637
*                 FMCOUNT=FMCOUNT+1;/* INDICATE 1 WORD FMTD          */
         LA    FMCOUNT,1(,FMCOUNT)                                 0638
*                 IF FMCOUNT=6      /* IF END OF LINE                */
*                   THEN                                           0639
         CH    FMCOUNT,@CH00109                                    0639
         BNE   @RF00639                                            0639
*                   DO;                                            0640
*                     CALL IEAVAD11;/* OUTPUT THE LINE               */
         L     @15,@CV00081                                        0641
         BALR  @14,@15                                             0641
*                     IF RETCODE^=0 /* IF ERRED                      */
*                       THEN                                       0642
         LTR   RETCODE,RETCODE                                     0642
         BNZ   @RT00642                                            0642
*                       GOTO BADDRET;                              0643
*                     ABDLLINE=ADDR(XLLINE2);                      0644
         LA    @10,XLLINE2                                         0644
         ST    @10,ABDLLINE(,ABDARPTR)                             0644
*                     FMCOUNT=0;                                   0645
         SLR   FMCOUNT,FMCOUNT                                     0645
*                   END;            /* OUTPUT LINE DO                */
*               END;                /* WORK LOOP DO                  */
@RF00639 BCTR  WORKSIZE,0                                          0647
@DE00634 LTR   WORKSIZE,WORKSIZE                                   0647
         BP    @DL00634                                            0647
*             END;                  /* WORKSIZE EXISTS DO            */
*           IF FMCOUNT^=0 THEN                                     0649
@RF00630 LTR   FMCOUNT,FMCOUNT                                     0649
         BZ    @RF00649                                            0649
*             DO;                                                  0650
*               CALL IEAVAD11;                                     0651
         L     @15,@CV00081                                        0651
         BALR  @14,@15                                             0651
*               IF RETCODE^=0 THEN                                 0652
         LTR   RETCODE,RETCODE                                     0652
         BNZ   @RT00652                                            0652
*                 GOTO BADDRET;                                    0653
*             END;                  /* OUTPUT DO                     */
*         END;                      /* ELIST EXISTS DO               */
*     END;                          /* ELIST TO BE DONE DO           */
*   RETURN;                         /* RETURN WITH CODE=0            */
@EL00003 DS    0H                                                  0657
@EF00003 DS    0H                                                  0657
@ER00003 L     @14,@SA00003                                        0657
         L     @03,@SA00003+4                                      0657
         LM    @05,@06,@SA00003+8                                  0657
         L     @08,@SA00003+16                                     0657
         BR    @14                                                 0657
*BADDRET:                           /* RETURN WITH BAD CODE TO       */
*   RETURN TO FREERET;              /* EXIT ROUTINE OF MAIN CODE     */
BADDRET  LA    @14,FREERET                                         0658
         L     @03,@SA00003+4                                      0658
         LM    @05,@06,@SA00003+8                                  0658
         L     @08,@SA00003+16                                     0658
         BR    @14                                                 0658
*   END CDXLPT;                                                    0659
         B     @EL00003                                            0659
@PB00003 DS    0H                                                  0660
*   DCL                                                            0660
*     PATCHLOC FIXED(31) STATIC;                                   0660
*   GEN DATA DEFS(PATCHLOC);                                       0661
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0662
*     I031F FIXED(31) BASED,                                       0662
*     I031P PTR(31) BASED,                                         0662
*     I015F FIXED(15) BASED,                                       0662
*     I015P PTR(15) BASED,                                         0662
*     I008P PTR(8) BASED,                                          0662
*     I001C CHAR(1) BASED;                                         0662
*   END IEAVAD03                                                   0663
*                                                                  0663
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAABDA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHACDE  )                                       */
*/*%INCLUDE SYSLIB  (IHALLE  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*                                                                  0663
*       ;                                                          0663
         B     @EL00001                                            0663
@DATA    DS    0H
@CH00092 DC    H'3'
@CH00109 DC    H'6'
@CH00064 DC    H'8'
@CH00038 DC    H'24'
@CH01089 DC    H'32'
@DATD    DSECT
         DS    0F
@SA00003 DS    0F
         DS    5F
IEAVAD03 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
RBSAVE   DS    F
ASCBPTR  DS    A
OFFSET   DS    H
BYTEBIT  DS    CL1
         ORG   BYTEBIT
MAJOR    DS    BL1
TYPE     EQU   BYTEBIT+0
         ORG   BYTEBIT+1
IEAVAD03 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00081 DC    V(IEAVAD11)
@CV00082 DC    V(IEAVAD31)
@CV00083 DC    V(IEAVAD61)
         DS    0D
UNALCMSG DC    CL21'***FREE TIOT SPACE***'
CDTITLE  DC    CL4'-CDE'
XLTITLE  DC    CL3'-XL'
LNADRHD  DC    CL15'LN          ADR'
NMLAB    DC    CL2'NM'
TIOJOB   DC    CL5' JOB '
STPMSG   DC    CL4'STEP'
PROCMSG  DC    CL4'PROC'
PLUS     DC    CL1'+'
OFFMSG   DC    CL6'OFFSET'
LNMSG    DC    CL6'LN-STA'
DDMSG    DC    CL6'DDNAME'
TTRMSG   DC    CL6'TTR-ST'
STBMSG   DC    CL6'STB-UC'
LLTTL    DC    CL10'-LOAD LIST'
WORKLABL DC    CL7'NX/WORK'
IRBMSG   DC    CL4'IRB '
SVRBMSG  DC    CL4'SVRB'
RBTTL    DC    CL11'-ACTIVE RBS'
RESVMSG  DC    CL6'RESV  '
FLPSA    DC    CL4'PSAV'
EPAMSG   DC    CL6'EPA   '
ASCBLINE DS    CL8
         ORG   ASCBLINE
@NM00001 DC    X'003301'
@NM00002 DC    CL4'ASCB'
@NM00003 DC    X'FF'
         ORG   ASCBLINE+8
ASCBLNE  DS    CL44
         ORG   ASCBLNE
@NM00004 DC    X'079303'
@NM00005 DC    CL10'+0    ASCB'
@NM00006 DC    X'3343'
@NM00007 DC    CL4'FWDP'
@NM00008 DC    X'3343'
@NM00009 DC    CL4'BWDP'
@NM00010 DC    X'3343'
@NM00011 DC    CL4'CMSF'
@NM00012 DC    X'3343'
@NM00013 DC    CL4'SVRB'
@NM00014 DC    X'3343'
@NM00015 DC    CL4'SYNC'
@NM00016 DC    X'FF'
@NM00017 DS    CL44
         ORG   @NM00017
@NM00018 DC    X'079343'
@NM00019 DC    CL10'+18   IOSP'
@NM00020 DC    X'3343'
@NM00021 DC    CL4'SPL '
@NM00022 DC    X'3343'
@NM00023 DC    CL4'CPUS'
@NM00024 DC    X'3343'
@NM00025 DC    CL4'IDSQ'
@NM00026 DC    X'3343'
@NM00027 DC    CL4'IODP'
@NM00028 DC    X'3343'
@NM00029 DC    CL4'STOR'
@NM00030 DC    X'FF'
         ORG   ASCBLNE+88
@NM00031 DS    CL44
         ORG   @NM00031
@NM00032 DC    X'079343'
@NM00033 DC    CL10'+30   LDA '
@NM00034 DC    X'3343'
@NM00035 DC    CL4'RSM '
@NM00036 DC    X'3343'
@NM00037 DC    CL4'CSCB'
@NM00038 DC    X'3343'
@NM00039 DC    CL4'TSB '
@NM00040 DC    X'3343'
@NM00041 DC    CL4'EJST'
@NM00042 DC    X'3343'
@NM00043 DC    CL4'XJST'
@NM00044 DC    X'FF'
         ORG   ASCBLNE+132
@NM00045 DS    CL44
         ORG   @NM00045
@NM00046 DC    X'079343'
@NM00047 DC    CL10'+48   EWST'
@NM00048 DC    X'3343'
@NM00049 DC    CL4'XWST'
@NM00050 DC    X'3343'
@NM00051 DC    CL4'JSTL'
@NM00052 DC    X'3343'
@NM00053 DC    CL4'ECB '
@NM00054 DC    X'3343'
@NM00055 DC    CL4'UBET'
@NM00056 DC    X'3343'
@NM00057 DC    CL4'RESV'
@NM00058 DC    X'FF'
         ORG   ASCBLNE+176
@NM00059 DS    CL44
         ORG   @NM00059
@NM00060 DC    X'079343'
@NM00061 DC    CL10'+60   DUMP'
@NM00062 DC    X'3343'
@NM00063 DC    CL4'FW1 '
@NM00064 DC    X'3343'
@NM00065 DC    CL4'TMCH'
@NM00066 DC    X'3343'
@NM00067 DC    CL4'ASXB'
@NM00068 DC    X'3343'
@NM00069 DC    CL4'SWCT'
@NM00070 DC    X'3343'
@NM00071 DC    CL4'SSRB'
@NM00072 DC    X'FF'
         ORG   ASCBLNE+220
@NM00073 DS    CL44
         ORG   @NM00073
@NM00074 DC    X'079343'
@NM00075 DC    CL10'+78   VSC '
@NM00076 DC    X'3343'
@NM00077 DC    CL4'TCBS'
@NM00078 DC    X'3343'
@NM00079 DC    CL4'LOCK'
@NM00080 DC    X'3343'
@NM00081 DC    CL4'LSQH'
@NM00082 DC    X'3343'
@NM00083 DC    CL4'QECB'
@NM00084 DC    X'3343'
@NM00085 DC    CL4'MECB'
@NM00086 DC    X'FF'
         ORG   ASCBLNE+264
@NM00087 DS    CL44
         ORG   @NM00087
@NM00088 DC    X'079343'
@NM00089 DC    CL10'+90   OUCB'
@NM00090 DC    X'3343'
@NM00091 DC    CL4'OUXB'
@NM00092 DC    X'3343'
@NM00093 DC    CL4'FMCT'
@NM00094 DC    X'3343'
@NM00095 DC    CL4'XMPQ'
@NM00096 DC    X'3343'
@NM00097 DC    CL4'IQEA'
@NM00098 DC    X'3343'
@NM00099 DC    CL4'RTWA'
@NM00100 DC    X'FF'
         ORG   ASCBLNE+308
@NM00101 DS    CL44
         ORG   @NM00101
@NM00102 DC    X'079343'
@NM00103 DC    CL10'+A8   MCC '
@NM00104 DC    X'3343'
@NM00105 DC    CL4'JBNI'
@NM00106 DC    X'3343'
@NM00107 DC    CL4'JBNS'
@NM00108 DC    X'3343'
@NM00109 DC    CL4'SRQ '
@NM00110 DC    X'3343'
@NM00111 DC    CL4'VGTT'
@NM00112 DC    X'3343'
@NM00113 DC    CL4'PCTT'
@NM00114 DC    X'FF'
         ORG   ASCBLNE+352
@NM00115 DS    CL38
         ORG   @NM00115
@NM00116 DC    X'079343'
@NM00117 DC    CL10'+C0   SMCT'
@NM00118 DC    X'3343'
@NM00119 DC    CL4'SWTL'
@NM00120 DC    X'3343'
@NM00121 DC    CL4'SRBT'
@NM00122 DC    X'3343'
@NM00123 DC    CL4'ATME'
@NM00124 DC    X'FF'
         ORG   ASCBLNE+390
CDELINE  DS    CL43
         ORG   CDELINE
@NM00125 DC    X'040200'
@NM00126 DC    CL1' '
@NM00127 DC    X'FF'
@NM00128 DC    X'123301'
@NM00129 DC    CL4'NCDE'
@NM00130 DC    X'2341'
@NM00131 DC    CL3'RBP'
@NM00132 DC    X'FF'
@NM00133 DC    X'3D2301'
@NM00134 DC    CL3'EPA'
@NM00135 DC    X'4341'
@NM00136 DC    CL5'XL/MJ'
@NM00137 DC    X'2341'
@NM00138 DC    CL3'USE'
@NM00139 DC    X'3341'
@NM00140 DC    CL4'ATTR'
@NM00141 DC    X'FF'
         ORG   CDELINE+43
XLLINE1  DS    CL33
         ORG   XLLINE1
@NM00142 DC    X'040200'
@NM00143 DC    CL1' '
@NM00144 DC    X'FF'
@NM00145 DC    X'0E1301'
@NM00146 DC    CL2'SZ'
@NM00147 DC    X'1341'
@NM00148 DC    CL2'NO'
@NM00149 DC    X'FF'
XLLINE2  DS    CL18
         ORG   XLLINE2
@NM00150 DC    X'2E03FF'
@NM00151 DC    X'3A03FF'
@NM00152 DC    X'4603FF'
@NM00153 DC    X'5203FF'
@NM00154 DC    X'5E03FF'
@NM00155 DC    X'6A03FF'
         ORG   XLLINE1+33
TIOHEAD  DS    CL8
         ORG   TIOHEAD
@NM00156 DC    X'003202'
@NM00157 DC    CL4'TIOT'
@NM00158 DC    X'FF'
         ORG   TIOHEAD+8
TIOLLIN1 DS    CL27
         ORG   TIOLLIN1
@NM00159 DC    X'1303FF'
@NM00160 DC    X'1F03FF'
TIOLLOFF DS    CL3
         ORG   TIOLLOFF
@NM00161 DC    X'0B01FF'
         ORG   TIOLLIN1+9
TIOLLIN2 DS    CL18
         ORG   TIOLLIN2
@NM00162 DC    X'2B03FF'
@NM00163 DC    X'3703FF'
@NM00164 DC    X'4303FF'
@NM00165 DC    X'4F03FF'
@NM00166 DC    X'5B03FF'
@NM00167 DC    X'6703FF'
         ORG   TIOLLIN1+27
LLIST    DS    CL40
         ORG   LLIST
@NM00168 DC    X'081301'
@NM00169 DC    CL2'NE'
@NM00170 DC    X'6341'
@NM00171 DC    CL7'RSP-CDE'
@NM00172 DC    X'2341'
@NM00173 DC    CL3'CNT'
@NM00174 DC    X'FF401301'
@NM00175 DC    CL2'NE'
@NM00176 DC    X'6341'
@NM00177 DC    CL7'RSP-CDE'
@NM00178 DC    X'2341'
@NM00179 DC    CL3'CNT'
@NM00180 DC    X'FF'
         ORG   LLIST+40
RBLLINE1 DS    CL119
         ORG   RBLLINE1
@NM00181 DC    X'003201'
@NM00182 DC    CL4'PRB '
@NM00183 DC    X'FF'
@NM00184 DS    CL36
         ORG   @NM00184
@NM00185 DC    X'0D3302'
@NM00186 DC    CL4'RESV'
@NM00187 DC    X'3341'
@NM00188 DC    CL4'RESV'
@NM00189 DC    X'5341'
@NM00190 DC    CL6'RTPSW1'
@NM00191 DC    X'0340'
@NM00192 DC    CL1' '
@NM00193 DC    X'5341'
@NM00194 DC    CL6'RTPSW2'
@NM00195 DC    X'0340'
@NM00196 DC    CL1' '
@NM00197 DC    X'FF'
         ORG   RBLLINE1+44
@NM00198 DS    CL17
         ORG   @NM00198
@NM00199 DC    X'0D3342'
@NM00200 DC    CL4'FLG1'
@NM00201 DC    X'6341'
@NM00202 DC    CL7'WC-L-IC'
@NM00203 DC    X'FF'
         ORG   RBLLINE1+61
@NM00204 DS    CL23
         ORG   @NM00204
@NM00205 DC    X'0D3342'
@NM00206 DC    CL4'RESV'
@NM00207 DC    X'3344'
@NM00208 DC    CL4'APSW'
@NM00209 DC    X'6341'
@NM00210 DC    CL7'SZ-STAB'
@NM00211 DC    X'FF'
         ORG   RBLLINE1+84
@NM00212 DS    CL18
         ORG   @NM00212
@NM00213 DC    X'465341'
@NM00214 DC    CL6'FL-CDE'
@NM00215 DC    X'2341'
@NM00216 DC    CL3'PSW'
@NM00217 DC    X'0340'
@NM00218 DC    CL1' '
@NM00219 DC    X'FF'
         ORG   RBLLINE1+102
@NM00220 DS    CL17
         ORG   @NM00220
@NM00221 DC    X'0D4341'
@NM00222 DC    CL5'Q/TTR'
@NM00223 DC    X'5342'
@NM00224 DC    CL6'WT-LNK'
@NM00225 DC    X'FF'
         ORG   RBLLINE1+119
IRBXLINE DS    CL20
         ORG   IRBXLINE
@NM00226 DC    X'16032203FF'
@NM00227 DC    X'2E033A03FF'
@NM00228 DC    X'46035203FF'
@NM00229 DC    X'5E036A03FF'
         ORG   IRBXLINE+20
REGS1    DS    CL63
         ORG   REGS1
@NM00230 DC    X'0D5303'
@NM00231 DC    CL6'RG 0-7'
@NM00232 DC    X'0340'
@NM00233 DC    CL1' '
@NM00234 DC    X'0340'
@NM00235 DC    CL1' '
@NM00236 DC    X'0340'
@NM00237 DC    CL1' '
@NM00238 DC    X'0340'
@NM00239 DC    CL1' '
@NM00240 DC    X'0340'
@NM00241 DC    CL1' '
@NM00242 DC    X'0340'
@NM00243 DC    CL1' '
@NM00244 DC    X'0340'
@NM00245 DC    CL1' '
@NM00246 DC    X'FF'
@NM00247 DC    X'0D6342'
@NM00248 DC    CL7'RG 8-15'
@NM00249 DC    X'0340'
@NM00250 DC    CL1' '
@NM00251 DC    X'0340'
@NM00252 DC    CL1' '
@NM00253 DC    X'0340'
@NM00254 DC    CL1' '
@NM00255 DC    X'0340'
@NM00256 DC    CL1' '
@NM00257 DC    X'0340'
@NM00258 DC    CL1' '
@NM00259 DC    X'0340'
@NM00260 DC    CL1' '
@NM00261 DC    X'0340'
@NM00262 DC    CL1' '
@NM00263 DC    X'FF'
         ORG   REGS1+63
EXTSA1   DS    CL44
         ORG   EXTSA1
@NM00264 DC    X'0D4344'
@NM00265 DC    CL5'EXTSA'
@NM00266 DC    X'0340'
@NM00267 DC    CL1' '
@NM00268 DC    X'0340'
@NM00269 DC    CL1' '
@NM00270 DC    X'0340'
@NM00271 DC    CL1' '
@NM00272 DC    X'0340'
@NM00273 DC    CL1' '
@NM00274 DC    X'0340'
@NM00275 DC    CL1' '
@NM00276 DC    X'0340'
@NM00277 DC    CL1' '
@NM00278 DC    X'0340'
@NM00279 DC    CL1' '
@NM00280 DC    X'FF'
@NM00281 DC    X'150340'
@NM00282 DC    CL1' '
@NM00283 DC    X'0340'
@NM00284 DC    CL1' '
@NM00285 DC    X'0340'
@NM00286 DC    CL1' '
@NM00287 DC    X'0340'
@NM00288 DC    CL1' '
@NM00289 DC    X'FF'
         ORG   EXTSA1+44
SCBLINE  DS    CL25
         ORG   SCBLINE
@NM00290 DC    X'0D2346'
@NM00291 DC    CL3'SCB'
@NM00292 DC    X'0340'
@NM00293 DC    CL1' '
@NM00294 DC    X'0340'
@NM00295 DC    CL1' '
@NM00296 DC    X'0340'
@NM00297 DC    CL1' '
@NM00298 DC    X'0340'
@NM00299 DC    CL1' '
@NM00300 DC    X'3344'
@NM00301 DC    CL4'RESV'
@NM00302 DC    X'FF'
         ORG   SCBLINE+25
FEPLINE  DS    CL25
         ORG   FEPLINE
@NM00303 DC    X'0D5343'
@NM00304 DC    CL6'FEPARM'
@NM00305 DC    X'0340'
@NM00306 DC    CL1' '
@NM00307 DC    X'0340'
@NM00308 DC    CL1' '
@NM00309 DC    X'0340'
@NM00310 DC    CL1' '
@NM00311 DC    X'0340'
@NM00312 DC    CL1' '
@NM00313 DC    X'0340'
@NM00314 DC    CL1' '
@NM00315 DC    X'FF'
         ORG   FEPLINE+25
TCBLN1   DS    CL86
         ORG   TCBLN1
@NM00316 DC    X'002202'
@NM00317 DC    CL3'TCB'
@NM00318 DC    X'FF'
@NM00319 DC    X'078303'
@NM00320 DC    CL9'+0    RBP'
@NM00321 DC    X'2344'
@NM00322 DC    CL3'PIE'
@NM00323 DC    X'2342'
@NM00324 DC    CL3'DEB'
@NM00325 DC    X'2341'
@NM00326 DC    CL3'TIO'
@NM00327 DC    X'2343'
@NM00328 DC    CL3'CMP'
@NM00329 DC    X'2342'
@NM00330 DC    CL3'TRN'
@NM00331 DC    X'FF'
@NM00332 DS    CL41
         ORG   @NM00332
@NM00333 DC    X'078343'
@NM00334 DC    CL9'+18   MSS'
@NM00335 DC    X'5341'
@NM00336 DC    CL6'PK-FLG'
@NM00337 DC    X'2342'
@NM00338 DC    CL3'FLG'
@NM00339 DC    X'2341'
@NM00340 DC    CL3'LLS'
@NM00341 DC    X'2343'
@NM00342 DC    CL3'JLB'
@NM00343 DC    X'2342'
@NM00344 DC    CL3'JPQ'
@NM00345 DC    X'FF'
         ORG   TCBLN1+86
TCBLN3   DS    CL372
         ORG   TCBLN3
@NM00346 DS    CL38
         ORG   @NM00346
@NM00347 DC    X'078303'
@NM00348 DC    CL9'+70   FSA'
@NM00349 DC    X'2344'
@NM00350 DC    CL3'TCB'
@NM00351 DC    X'2342'
@NM00352 DC    CL3'TME'
@NM00353 DC    X'2341'
@NM00354 DC    CL3'JST'
@NM00355 DC    X'2343'
@NM00356 DC    CL3'NTC'
@NM00357 DC    X'2342'
@NM00358 DC    CL3'OTC'
@NM00359 DC    X'FF'
         ORG   TCBLN3+38
@NM00360 DS    CL40
         ORG   @NM00360
@NM00361 DC    X'078343'
@NM00362 DC    CL9'+88   LTC'
@NM00363 DC    X'2344'
@NM00364 DC    CL3'IQE'
@NM00365 DC    X'2342'
@NM00366 DC    CL3'ECB'
@NM00367 DC    X'2341'
@NM00368 DC    CL3'TSF'
@NM00369 DC    X'4341'
@NM00370 DC    CL5'D-PQE'
@NM00371 DC    X'2342'
@NM00372 DC    CL3'AQE'
@NM00373 DC    X'FF'
         ORG   TCBLN3+78
@NM00374 DS    CL42
         ORG   @NM00374
@NM00375 DC    X'079342'
@NM00376 DC    CL10'+A0   STAB'
@NM00377 DC    X'2344'
@NM00378 DC    CL3'TCT'
@NM00379 DC    X'3341'
@NM00380 DC    CL4'USER'
@NM00381 DC    X'2341'
@NM00382 DC    CL3'SDF'
@NM00383 DC    X'3342'
@NM00384 DC    CL4'MDID'
@NM00385 DC    X'3341'
@NM00386 DC    CL4'JSCB'
@NM00387 DC    X'FF'
         ORG   TCBLN3+120
@NM00388 DS    CL43
         ORG   @NM00388
@NM00389 DC    X'079342'
@NM00390 DC    CL10'+B8   RESV'
@NM00391 DC    X'4342'
@NM00392 DC    CL5'IOBRC'
@NM00393 DC    X'3341'
@NM00394 DC    CL4'XCPD'
@NM00395 DC    X'2341'
@NM00396 DC    CL3'EXT'
@NM00397 DC    X'3342'
@NM00398 DC    CL4'BITS'
@NM00399 DC    X'2342'
@NM00400 DC    CL3'DAR'
@NM00401 DC    X'FF'
         ORG   TCBLN3+163
@NM00402 DS    CL45
         ORG   @NM00402
@NM00403 DC    X'07A341'
@NM00404 DC    CL11'+D0   EXT2 '
@NM00405 DC    X'3343'
@NM00406 DC    CL4'AECB'
@NM00407 DC    X'3341'
@NM00408 DC    CL4'TIRB'
@NM00409 DC    X'2341'
@NM00410 DC    CL3'BAK'
@NM00411 DC    X'4341'
@NM00412 DC    CL5'RTMWA'
@NM00413 DC    X'3341'
@NM00414 DC    CL4'IOTM'
@NM00415 DC    X'FF'
         ORG   TCBLN3+208
@NM00416 DS    CL43
         ORG   @NM00416
@NM00417 DC    X'07A341'
@NM00418 DC    CL11'+E8   TMSAV'
@NM00419 DC    X'3343'
@NM00420 DC    CL4'ABCR'
@NM00421 DC    X'3341'
@NM00422 DC    CL4'XSCT'
@NM00423 DC    X'2341'
@NM00424 DC    CL3'FOE'
@NM00425 DC    X'2343'
@NM00426 DC    CL3'SWA'
@NM00427 DC    X'3341'
@NM00428 DC    CL4'STAW'
@NM00429 DC    X'FF'
         ORG   TCBLN3+251
@NM00430 DS    CL42
         ORG   @NM00430
@NM00431 DC    X'078343'
@NM00432 DC    CL9'+100  BID'
@NM00433 DC    X'3343'
@NM00434 DC    CL4'RTM1'
@NM00435 DC    X'3341'
@NM00436 DC    CL4'ESTA'
@NM00437 DC    X'2341'
@NM00438 DC    CL3'UKY'
@NM00439 DC    X'3342'
@NM00440 DC    CL4'CPVI'
@NM00441 DC    X'3341'
@NM00442 DC    CL4'BYT1'
@NM00443 DC    X'FF'
         ORG   TCBLN3+293
@NM00444 DS    CL43
         ORG   @NM00444
@NM00445 DC    X'079342'
@NM00446 DC    CL10'+118  RPT '
@NM00447 DC    X'3343'
@NM00448 DC    CL4'DBTB'
@NM00449 DC    X'3341'
@NM00450 DC    CL4'SWAS'
@NM00451 DC    X'2341'
@NM00452 DC    CL3'SCB'
@NM00453 DC    X'3342'
@NM00454 DC    CL4'RESV'
@NM00455 DC    X'3341'
@NM00456 DC    CL4'RESV'
@NM00457 DC    X'FF'
         ORG   TCBLN3+372
TCBEXLN1 DS    CL44
         ORG   TCBEXLN1
@NM00458 DC    X'07A301'
@NM00459 DC    CL11'EXT2  GTF  '
@NM00460 DC    X'3343'
@NM00461 DC    CL4'SVAB'
@NM00462 DC    X'3341'
@NM00463 DC    CL4'EVNT'
@NM00464 DC    X'2341'
@NM00465 DC    CL3'RES'
@NM00466 DC    X'3342'
@NM00467 DC    CL4'RESV'
@NM00468 DC    X'3341'
@NM00469 DC    CL4'RESV'
@NM00470 DC    X'FF'
         ORG   TCBEXLN1+44
IEAVAD03 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEAVAD03 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PARMPTR  EQU   @01
ABDARPTR EQU   @02
LLEPTR   EQU   @03
DDSIZE   EQU   @03
IRBCOUNT EQU   @03
ADDRPTR  EQU   @03
TIOTPTR  EQU   @04
CDENTPTR EQU   @04
LECOUNT  EQU   @04
NOTESIZE EQU   @05
COUNT    EQU   @05
TCBPTR   EQU   @05
RBSECPTR EQU   @06
FMCOUNT  EQU   @06
XLSIZE   EQU   @06
LENSIZE  EQU   @06
XTLSTPTR EQU   @07
IRBLINER EQU   @07
LTHPTR   EQU   @07
SAVERET  EQU   @07
RBCDPTR  EQU   @07
WORKSIZE EQU   @08
FULLSIZE EQU   @08
CVTPTR   EQU   @09
AUTOPTR  EQU   @12
SAVEPTR  EQU   @13
RETCODE  EQU   @15
RETERN   EQU   @14
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
XTLST    EQU   0
XSIZE    EQU   XTLST
XCOUNT   EQU   XTLST+4
NEXSAPTR EQU   8
PRESAPTR EQU   4
ABDAREA  EQU   0
ABDTCB   EQU   ABDAREA
ABDCTCB  EQU   ABDAREA+4
ABDPARMS EQU   ABDAREA+12
ABDFLAG  EQU   ABDPARMS+1
APFSDATA EQU   ABDPARMS+4
APFSDAT1 EQU   ABDPARMS+5
APFPDATA EQU   ABDPARMS+6
ABDPTRS  EQU   ABDAREA+84
ABDFLAG1 EQU   ABDAREA+136
ABDFLAG2 EQU   ABDAREA+137
ABDRES1  EQU   ABDAREA+139
ABDWORK  EQU   ABDAREA+140
ABDBPTR  EQU   ABDAREA+244
ABDLLINE EQU   ABDAREA+248
ABDUPRF  EQU   ABDAREA+265
ABDUPRFN EQU   ABDAREA+266
ABDBLNKS EQU   ABDAREA+267
ABDBUFFS EQU   ABDAREA+308
ABDGMA   EQU   ABDAREA+316
ABDAAREA EQU   ABDGMA
ABDASIZE EQU   ABDGMA+4
ESPARM   EQU   ABDAREA+340
ESTAEFLG EQU   ESPARM+28
ABDLINEA EQU   ABDAREA+384
ABDCC    EQU   ABDLINEA
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
CDENTRY  EQU   0
CDNAME   EQU   CDENTRY+8
CDENTPT  EQU   CDENTRY+16
CDXLMJP  EQU   CDENTRY+20
CDATTR   EQU   CDENTRY+28
CDNIC    EQU   CDATTR
CDMIN    EQU   CDATTR
CDATTR2  EQU   CDENTRY+29
CDXLE    EQU   CDATTR2
LLE      EQU   0
LLECHN   EQU   LLE
LLECDPT  EQU   LLE+4
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBFC    EQU   TCBFLGS5
TCBABWF  EQU   TCBFLGS5
TCBLLS   EQU   TCB+36
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
TIOT1    EQU   0
TIOCNJOB EQU   TIOT1
TIOCSTEP EQU   TIOT1+8
TIOPROC  EQU   0
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBEXSAVE EQU   XRBESA
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
RBSIZE   EQU   RBSECT+8
@NM00518 EQU   RBSECT+10
@NM00519 EQU   @NM00518
RBFTP    EQU   @NM00519
RBTRSVRB EQU   @NM00519
@NM00521 EQU   @NM00518+1
RBETXR   EQU   @NM00521
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00528 EQU   RBSECT+28
@NM00529 EQU   @NM00528
IRBEND   EQU   RBSECT+96
@NM00532 EQU   RBSECT+96
RBRSV138 EQU   @NM00532+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
RTCT     EQU   0
RTCTPLIB EQU   RTCT+4
RTCTSAP  EQU   RTCTPLIB
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSAP3 EQU   RTCTSAP+2
RTCTSUP  EQU   RTCTPLIB+4
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSUP3 EQU   RTCTSUP+2
RTCTSYD  EQU   RTCTPLIB+8
RTCTSY01 EQU   RTCTSYD
RTCTSDDS EQU   RTCT+36
RTCTFLG  EQU   RTCTSDDS+3
RTCTSDPL EQU   RTCT+156
RTCTRFLG EQU   RTCT+176
RTCTERID EQU   RTCT+224
RTCTOPT  EQU   RTCT+236
RTCTASO  EQU   RTCT+252
RTCTASO1 EQU   RTCTASO
RTCTASO2 EQU   RTCTASO+1
RTCTSDI  EQU   RTCT+254
RTCTSDF  EQU   RTCT+264
RTCTSDF1 EQU   RTCTSDF
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDF3 EQU   RTCT+268
RTCTSDF4 EQU   RTCTSDF3+2
RTCTMOPT EQU   0
RTCTMSAO EQU   RTCTMOPT
RTCTSASD EQU   RTCTMSAO
RTCTSAO1 EQU   RTCTSASD
RTCTSAO2 EQU   RTCTSASD+1
RTCTSAPD EQU   RTCTMSAO+2
RTCTSAO3 EQU   RTCTSAPD
RTCTSAO4 EQU   RTCTSAPD+1
RTCTSAMG EQU   RTCTSAO4
RTCTMSUO EQU   RTCTMOPT+4
RTCTSUSD EQU   RTCTMSUO
RTCTSUO1 EQU   RTCTSUSD
RTCTSUO2 EQU   RTCTSUSD+1
RTCTSUPD EQU   RTCTMSUO+2
RTCTSUO3 EQU   RTCTSUPD
RTCTSUO4 EQU   RTCTSUPD+1
RTCTSUMG EQU   RTCTSUO4
RTCTMSYO EQU   RTCTMOPT+8
RTCTSD01 EQU   RTCTMSYO
RTCTSD04 EQU   RTCTMSYO+3
RTCTSMMG EQU   RTCTSD04
RTCTMSDO EQU   RTCTMOPT+12
RTCTSDOD EQU   RTCTMSDO
RTCTSDO1 EQU   RTCTSDOD
RTCTSDO2 EQU   RTCTSDOD+1
RTCTSDO3 EQU   RTCTMSDO+2
RTCTSDO4 EQU   RTCTMSDO+3
RTCTSDMG EQU   RTCTSDO4
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
ABDWORKA EQU   ABDWORK
ABDWORKB EQU   ABDWORK+1
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRTMCT EQU   CVTS01+224
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
TIOENTRY EQU   TIOT1+24
TIOELNGH EQU   TIOENTRY
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOEJFCB EQU   TIOENTRY+12
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBCDE1   EQU   RBCDE+1
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
PSARSVTE EQU   PSARSVT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00533 EQU   RBSQE
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00506 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00505 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
RTCTISVC EQU   RTCTSDO4
RTCTSDOV EQU   RTCTSDMG
@NM00571 EQU   RTCTSDO4
@NM00570 EQU   RTCTSDO3
RTCTSDPH EQU   RTCTSDO3
RTCTSDPG EQU   RTCTSDO3
@NM00569 EQU   RTCTSDO2
RTCTSDPD EQU   RTCTSDO2
RTCTSDPC EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTISYM EQU   RTCTSD04
RTCTSMOV EQU   RTCTSMMG
@NM00568 EQU   RTCTSD04
RTCTSD03 EQU   RTCTMSYO+2
RTCTSD02 EQU   RTCTMSYO+1
RTCTSDS7 EQU   RTCTSD01
RTCTSDS6 EQU   RTCTSD01
RTCTSDS5 EQU   RTCTSD01
RTCTSDS4 EQU   RTCTSD01
RTCTSDS3 EQU   RTCTSD01
RTCTSDS2 EQU   RTCTSD01
RTCTSDS1 EQU   RTCTSD01
RTCTSDS0 EQU   RTCTSD01
RTCTISYU EQU   RTCTSUO4
RTCTSUOV EQU   RTCTSUMG
@NM00567 EQU   RTCTSUO4
RTCTSYDF EQU   RTCTSUO3
RTCTSYDE EQU   RTCTSUO3
RTCTSYDD EQU   RTCTSUO3
RTCTSYDC EQU   RTCTSUO3
RTCTSYDB EQU   RTCTSUO3
RTCTSYDA EQU   RTCTSUO3
RTCTSYD9 EQU   RTCTSUO3
RTCTSYD8 EQU   RTCTSUO3
@NM00566 EQU   RTCTSUO2
RTCTSYDH EQU   RTCTSUO2
RTCTSYDG EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTISAB EQU   RTCTSAO4
RTCTSAOV EQU   RTCTSAMG
@NM00565 EQU   RTCTSAO4
RTCTSADF EQU   RTCTSAO3
RTCTSADE EQU   RTCTSAO3
RTCTSADD EQU   RTCTSAO3
RTCTSADC EQU   RTCTSAO3
RTCTSADB EQU   RTCTSAO3
RTCTSADA EQU   RTCTSAO3
RTCTSAD9 EQU   RTCTSAO3
RTCTSAD8 EQU   RTCTSAO3
@NM00564 EQU   RTCTSAO2
RTCTSADH EQU   RTCTSAO2
RTCTSADG EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTZZZ5 EQU   RTCT+340
RTCTZZZ4 EQU   RTCT+336
RTCTMRMQ EQU   RTCT+332
RTCTSDF5 EQU   RTCTSDF3+3
RTCTSDDO EQU   RTCTSDF4
RTCTSDEN EQU   RTCTSDF4
RTCTSDEQ EQU   RTCTSDF4
RTCTSDTR EQU   RTCTSDF4
RTCTSDRM EQU   RTCTSDF4
RTCTSDAN EQU   RTCTSDF4
RTCTSDNC EQU   RTCTSDF4
RTCTSDSS EQU   RTCTSDF4
RTCTSDAS EQU   RTCTSDF3
RTCTZZZ3 EQU   RTCT+266
@NM00563 EQU   RTCTSDF2
RTCTSDRW EQU   RTCTSDF2
RTCTSDSL EQU   RTCTSDF2
RTCTSDWF EQU   RTCTSDF2
RTCTSDLA EQU   RTCTSDF2
RTCTSDDI EQU   RTCTSDF2
RTCTSDTQ EQU   RTCTSDF2
RTCTSDMR EQU   RTCTSDF2
RTCTSDSC EQU   RTCTSDF1
RTCTSDRS EQU   RTCTSDF1
RTCTSDSD EQU   RTCTSDF1
RTCTSDEP EQU   RTCTSDF1
RTCTSDMA EQU   RTCTSDF1
RTCTSDSH EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDNO EQU   RTCTSDF1
RTCTZZZ2 EQU   RTCT+257
RTCTSDPR EQU   RTCTSDI+2
RTCTINDX EQU   RTCTSDI+1
RTCTSDNA EQU   RTCTSDI
@NM00562 EQU   RTCTASO2
RTCTASNQ EQU   RTCTASO2
RTCTASNA EQU   RTCTASO2
RTCTASNS EQU   RTCTASO2
RTCTASSU EQU   RTCTASO2
RTCTASSW EQU   RTCTASO2
RTCTASCS EQU   RTCTASO2
RTCTASTR EQU   RTCTASO1
RTCTASLP EQU   RTCTASO1
RTCTASRG EQU   RTCTASO1
RTCTASLS EQU   RTCTASO1
RTCTASSQ EQU   RTCTASO1
RTCTASNU EQU   RTCTASO1
RTCTASPS EQU   RTCTASO1
RTCTASAL EQU   RTCTASO1
RTCTSDO  EQU   RTCTOPT+12
RTCTSYO  EQU   RTCTOPT+8
RTCTSUO  EQU   RTCTOPT+4
RTCTSAO  EQU   RTCTOPT
RTCTXXX2 EQU   RTCT+234
RTCTETIM EQU   RTCTERID+6
RTCTEASD EQU   RTCTERID+4
RTCTECPU EQU   RTCTERID+2
RTCTESEQ EQU   RTCTERID
RTCTSDWK EQU   RTCT+220
RTCTTDCB EQU   RTCT+184
RTCTSDSW EQU   RTCT+180
RTCTSEQ# EQU   RTCT+178
RTCTXXX1 EQU   RTCT+177
@NM00561 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDIP EQU   RTCTSDPL
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00560 EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTDSNM EQU   RTCTSDDS
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTSDID EQU   RTCT+18
RTCTYYY1 EQU   RTCT+16
RTCTSY04 EQU   RTCTSYD+3
RTCTSY03 EQU   RTCTSYD+2
RTCTSY02 EQU   RTCTSYD+1
RTCTSYM7 EQU   RTCTSY01
RTCTSYM6 EQU   RTCTSY01
RTCTSYM5 EQU   RTCTSY01
RTCTSYM4 EQU   RTCTSY01
RTCTSYM3 EQU   RTCTSY01
RTCTSYM2 EQU   RTCTSY01
RTCTSYM1 EQU   RTCTSY01
RTCTSYM0 EQU   RTCTSY01
RTCTSUP4 EQU   RTCTSUP+3
RTCTSUDF EQU   RTCTSUP3
RTCTSUDE EQU   RTCTSUP3
RTCTSUDD EQU   RTCTSUP3
RTCTSUDC EQU   RTCTSUP3
RTCTSUDB EQU   RTCTSUP3
RTCTSUDA EQU   RTCTSUP3
RTCTSUD9 EQU   RTCTSUP3
RTCTSUD8 EQU   RTCTSUP3
@NM00559 EQU   RTCTSUP2
RTCTSUDH EQU   RTCTSUP2
RTCTSUDG EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSAP4 EQU   RTCTSAP+3
RTCTSABF EQU   RTCTSAP3
RTCTSABE EQU   RTCTSAP3
RTCTSABD EQU   RTCTSAP3
RTCTSABC EQU   RTCTSAP3
RTCTSABB EQU   RTCTSAP3
RTCTSABA EQU   RTCTSAP3
RTCTSAB9 EQU   RTCTSAP3
RTCTSAB8 EQU   RTCTSAP3
@NM00558 EQU   RTCTSAP2
RTCTSABH EQU   RTCTSAP2
RTCTSABG EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00532+8
PRBEND   EQU   @NM00532+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00532+6
RBRSV136 EQU   @NM00532+4
RBRSV135 EQU   @NM00532
@NM00531 EQU   RBSECT+32
@NM00530 EQU   @NM00528+1
RBSCF    EQU   @NM00529
RBPGMQ1  EQU   RBPGMQ+1
@NM00527 EQU   RBPGMQ
@NM00526 EQU   RBSECT+16
@NM00525 EQU   @NM00521
@NM00524 EQU   @NM00521
RBIQETP  EQU   @NM00521
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00521
@NM00523 EQU   @NM00521
@NM00522 EQU   @NM00521
RBPMSVRB EQU   @NM00519
RBATNXIT EQU   @NM00519
@NM00520 EQU   @NM00519
RBWAITP  EQU   @NM00519
RBFNSVRB EQU   RBTRSVRB
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00517 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00516 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00515 EQU   RBOPSWB2
@NM00514 EQU   XRBPSW
@NM00513 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00512 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00511 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00510 EQU   XSTAB1
@NM00509 EQU   RBBASIC+8
@NM00508 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00507 EQU   RBPRFX
@NM00504 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00503 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00502 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00501 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00500 EQU   CVTFIX+248
@NM00499 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
LLESYSCT EQU   LLE+10
LLECOUNT EQU   LLE+8
CDATTR3  EQU   CDENTRY+30
CDAUTH   EQU   CDATTR2
CDSYSLIB EQU   CDATTR2
CDOLY    EQU   CDATTR2
@NM00498 EQU   CDATTR2
CDRLC    EQU   CDATTR2
CDREL    EQU   CDATTR2
CDSPZ    EQU   CDATTR2
CDNLR    EQU   CDATTR
CDJPA    EQU   CDATTR
CDNFN    EQU   CDATTR
CDSER    EQU   CDATTR
CDREN    EQU   CDATTR
CDNIP    EQU   CDATTR
@NM00497 EQU   CDENTRY+26
CDUSE    EQU   CDENTRY+24
CDRRBP   EQU   CDENTRY+4
CDCHAIN  EQU   CDENTRY
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
ABDSAVE1 EQU   ABDAREA+672
ABDSAVHD EQU   ABDAREA+592
ABDPADC  EQU   ABDAREA+589
ABDLINE  EQU   ABDLINEA+1
ABDSRC2  EQU   ABDAREA+382
ABDLOG   EQU   ABDAREA+380
ABDSRC1  EQU   ABDAREA+378
ABDPHY   EQU   ABDAREA+376
ABDLCNT  EQU   ABDAREA+372
@NM00496 EQU   ESPARM+29
@NM00495 EQU   ESTAEFLG
EDCB     EQU   ESTAEFLG
ETCB     EQU   ESTAEFLG
ESUBSYT  EQU   ESTAEFLG
ERESTART EQU   ESPARM+24
EMODNAME EQU   ESPARM+16
EABDAREA EQU   ESPARM+12
ESAUTOP  EQU   ESPARM+8
ESBSREG2 EQU   ESPARM+4
ESBSREG  EQU   ESPARM
ABDRTRN  EQU   ABDAREA+336
ABDSVCB  EQU   ABDAREA+332
@NM00494 EQU   ABDGMA+14
ABDCDID  EQU   ABDGMA+12
ABDPAREA EQU   ABDGMA+8
ABDBUFSZ EQU   ABDBUFFS+4
ABDBUFAD EQU   ABDBUFFS
ABSLCTSV EQU   ABDAREA+304
ABDSTADS EQU   ABDAREA+300
ABDUPRID EQU   ABDAREA+296
ABDPCAP  EQU   ABDAREA+295
ABDLLNGH EQU   ABDAREA+294
ABDINCPL EQU   ABDAREA+292
ABDFWORK EQU   ABDAREA+288
ABDIDENT EQU   ABDAREA+286
ABDIND   EQU   ABDAREA+284
ABDSIZE  EQU   ABDAREA+280
ABDLENTH EQU   ABDAREA+276
ABDBLOCK EQU   ABDAREA+272
ABDSTAD  EQU   ABDAREA+268
@NM00493 EQU   ABDBLNKS
@NM00492 EQU   ABDBLNKS
@NM00491 EQU   ABDBLNKS
@NM00490 EQU   ABDBLNKS
@NM00489 EQU   ABDBLNKS
@NM00488 EQU   ABDBLNKS
@NM00487 EQU   ABDBLNKS
ABDBLKN3 EQU   ABDBLNKS
@NM00486 EQU   ABDUPRFN
@NM00485 EQU   ABDUPRFN
@NM00484 EQU   ABDUPRFN
@NM00483 EQU   ABDUPRFN
@NM00482 EQU   ABDUPRFN
@NM00481 EQU   ABDUPRFN
ABDUPRSL EQU   ABDUPRFN
ABDUPRPM EQU   ABDUPRFN
@NM00480 EQU   ABDUPRF
@NM00479 EQU   ABDUPRF
@NM00478 EQU   ABDUPRF
@NM00477 EQU   ABDUPRF
@NM00476 EQU   ABDUPRF
UPRFMT20 EQU   ABDUPRF
UPRFMET  EQU   ABDUPRF
UPRFMAT  EQU   ABDUPRF
ABDFMTWK EQU   ABDAREA+256
ABDLPTR  EQU   ABDAREA+252
ABDSSPAR EQU   ABDAREA+188
@NM00475 EQU   ABDRES1
ABDPGHD  EQU   ABDRES1
ABDFMTLD EQU   ABDRES1
ABDSQA   EQU   ABDRES1
ABDOLSQA EQU   ABDRES1
ABDREGS  EQU   ABDRES1
ABDPSW   EQU   ABDRES1
ABDKEY   EQU   ABDAREA+138
ABDLSQA  EQU   ABDFLAG2
ABDSTAT  EQU   ABDFLAG2
ABDSWAP  EQU   ABDFLAG2
ABDGTFCL EQU   ABDFLAG2
ABDTRNAV EQU   ABDFLAG2
ABDTRBIT EQU   ABDFLAG2
ABDGTF   EQU   ABDFLAG2
ABDSUPER EQU   ABDFLAG2
ABDIDX   EQU   ABDFLAG1
ABDSPHD  EQU   ABDFLAG1
ABDSVCHD EQU   ABDFLAG1
ABDSQSDM EQU   ABDFLAG1
ABDLSTHD EQU   ABDFLAG1
ABDQCBMN EQU   ABDFLAG1
ABDQCBMJ EQU   ABDFLAG1
ABDQCBHD EQU   ABDFLAG1
ABDPGWK  EQU   ABDAREA+128
ABDWORK1 EQU   ABDAREA+120
ABDRESV3 EQU   ABDAREA+116
ABDUPRXT EQU   ABDAREA+112
ABDCP1   EQU   ABDAREA+108
ABDLP    EQU   ABDAREA+104
ABDFP    EQU   ABDAREA+100
ABDCP    EQU   ABDAREA+96
ABDPTRS3 EQU   ABDPTRS+8
ABDPTRS2 EQU   ABDPTRS+4
ABDPTRS1 EQU   ABDPTRS
ABDPCTR  EQU   ABDAREA+82
ABDLCTR  EQU   ABDAREA+80
ABDIOBP  EQU   ABDAREA+76
ABDPTR   EQU   ABDAREA+72
ABDDCB   EQU   ABDAREA+68
ABDLEN   EQU   ABDAREA+66
ABDTYPE  EQU   ABDAREA+64
ABDECB   EQU   ABDAREA+60
ABDSAVE  EQU   ABDAREA+56
ABDDECB  EQU   ABDAREA+52
ABDPARA  EQU   ABDAREA+48
ABDTABPT EQU   ABDAREA+44
ABDINXPT EQU   ABDAREA+40
ABDCTR   EQU   ABDAREA+38
ABDTRLN  EQU   ABDAREA+36
ABDHDRAD EQU   ABDPARMS+20
ABDSNAPP EQU   ABDPARMS+16
ABDPTCBP EQU   ABDPARMS+12
ABDPDCBP EQU   ABDPARMS+8
@NM00474 EQU   ABDPARMS+7
@NM00473 EQU   APFPDATA
APFSPALL EQU   APFPDATA
APFPSW   EQU   APFPDATA
APFJPA   EQU   APFPDATA
APFLPA   EQU   APFPDATA
APFREGS  EQU   APFPDATA
APFSAVE2 EQU   APFPDATA
APFSAVE  EQU   APFPDATA
@NM00472 EQU   APFSDAT1
APFERR   EQU   APFSDAT1
APFIO    EQU   APFSDAT1
APFDM    EQU   APFSDATA
APFQCB   EQU   APFSDATA
APFSUPDA EQU   APFSDATA
APFTRACE EQU   APFSDATA
APFSWA   EQU   APFSDATA
APFLSQA  EQU   APFSDATA
APFSQA   EQU   APFSDATA
APFNUC   EQU   APFSDATA
@NM00471 EQU   ABDPARMS+2
APFHDR   EQU   ABDFLAG
APFSNAPP EQU   ABDFLAG
APFTCB   EQU   ABDFLAG
APFID    EQU   ABDFLAG
APFABEND EQU   ABDFLAG
APFENVS2 EQU   ABDFLAG
APFVS2   EQU   ABDFLAG
APFSNAP  EQU   ABDFLAG
ABDPID   EQU   ABDPARMS
ABDCRB   EQU   ABDAREA+8
@NM00557 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00556 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00555 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00554 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00553 EQU   FLCFSA
@NM00552 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00551 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00550 EQU   FLCIOA
@NM00549 EQU   FLCMCLA+15
@NM00548 EQU   FLCMCLA+14
@NM00547 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00546 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00545 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00544 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00543 EQU   FLCPER
@NM00542 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00541 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00540 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00539 EQU   FLCPIILC
@NM00538 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00537 EQU   FLCSVILC
@NM00536 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00535 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00534 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00142 EQU   FREERET
@RT00150 EQU   FREERET
@RT00163 EQU   FREERET
@RT00166 EQU   FREERET
@RT00170 EQU   FREERET
@RT00173 EQU   FREERET
@RT00176 EQU   FREERET
@RT00179 EQU   FREERET
@RT00186 EQU   FREERET
@RT00189 EQU   FREERET
@RT00192 EQU   FREERET
@RT00195 EQU   FREERET
@RT00203 EQU   FREERET
@RT00206 EQU   FREERET
@RT00212 EQU   FREERET
@RT00215 EQU   FREERET
@RT00217 EQU   LLEOUT
@RT00223 EQU   FREERET
@RT00226 EQU   LLEOUT
@RT00233 EQU   FREERET
@RT00237 EQU   FREERET
@RT00250 EQU   FREERET
@RT00253 EQU   FREERET
@RT00256 EQU   FREERET
@RT00259 EQU   FREERET
@RT00262 EQU   FREERET
@RT00270 EQU   FREERET
@RT00273 EQU   FREERET
@RT00276 EQU   FREERET
@RT00282 EQU   FREERET
@RT00285 EQU   FREERET
@RT00288 EQU   FREERET
@RT00291 EQU   FREERET
@RT00304 EQU   FREERET
@RT00307 EQU   LAST
@RT00311 EQU   FREERET
@RT00315 EQU   FREERET
@RT00323 EQU   FREERET
@RT00326 EQU   FREERET
@RT00329 EQU   FREERET
@RT00332 EQU   FREERET
@RT00338 EQU   FREERET
@RT00343 EQU   FREERET
@RF00293 EQU   RBNEXT
@RF00319 EQU   RBNEXT
@RF00334 EQU   RBNEXT
@RT00351 EQU   CDEOUT
@RT00355 EQU   FREERET
@RT00363 EQU   FREERET
@RT00366 EQU   LEAVELLE
@RT00370 EQU   FREERET
@RT00374 EQU   FREERET
@RT00376 EQU   TIOTOUT
@RT00381 EQU   FREERET
@RT00389 EQU   GETRB
@RF00392 EQU   GETRB
@RT00410 EQU   RBCHKLP
@RT00413 EQU   RBCHKLP
@RT00415 EQU   LLECDE
@RT00417 EQU   LLECDE
@RF00421 EQU   RBCHKLP
@RT00433 EQU   FREERET
@RT00444 EQU   FREERET
@RT00456 EQU   FREERET
@RT00464 EQU   FREERET
@RT00474 EQU   FREERET
@RT00482 EQU   FREERET
@RT00489 EQU   FREERET
@RT00497 EQU   GOODOUT
@RT00501 EQU   FREERET
@RT00507 EQU   FREERET
@RT00516 EQU   FREERET
@RC00534 EQU   @EL00002
@RC00541 EQU   @EL00002
@PB00002 EQU   @PB00003
@RT00558 EQU   BADDRET
@RT00562 EQU   BADDRET
@RT00568 EQU   BADDRET
@RT00571 EQU   BADDRET
@RT00583 EQU   @EL00003
@RT00594 EQU   BADDRET
@RT00598 EQU   BADDRET
@RT00612 EQU   BADDRET
@RT00617 EQU   BADDRET
@RT00624 EQU   BADDRET
@RT00636 EQU   BADDRET
@RT00642 EQU   BADDRET
@RT00652 EQU   BADDRET
@RC00552 EQU   @EL00003
@RF00587 EQU   @EL00003
@RF00649 EQU   @EL00003
@RF00573 EQU   @RC00552
@RF00575 EQU   @RC00552
@ENDDATA EQU   *
         END   IEAVAD03,(C'PLS1847',0701,77049)
