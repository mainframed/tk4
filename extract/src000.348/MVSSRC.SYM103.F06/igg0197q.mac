         TITLE 'IGG0197Q LOAD DPI IMAGE,LOAD ID OF EOB,CNTRL IN DCB'
         START
IGG0197Q CSECT
***********************************************************************
* D 324500,333000,690400-690900,691100,799000,81600-822000     @YM05576
* A 324500                                                     @YM05576
* A 463920,464500,562300                                       @YM06152
* D 690100-690300,691400-691500,691900,448600,464600,562600    @YM06152
* D 691200,572600                                              @YM06152
* D 465000,6900000-691800,694000-700000
*
* MODULE NAME=          IGG0197Q
*
* DESCRIPTIVE NAME= IGG0197Q - 3505/3525 OPEN ROUTINE
*
* STATUS CHANGE LEVEL - OS/VS REL 2
*
* MODULE TYPE= PROCESSOR - ASSEM
*             ATTRIBUTES - REENTRANT, REUSABLE
*
* NOTES= PATCH-LABEL=ZAPSZAPS
*
* FUNCTION=          THIS ROUTINE IS ENTERED FOR SAM USERS DURING
*                    OPEN WHEN:
*                             DEVICE ASSOCIATED DATA SETS(DADS) HAVE
*                             BEEN SPECIFIED.
*                             OPTICAL MARK READ(OMR) OR READ COLUMN
*                             ELIMINATE(RCE)  HAVE BEEN SPECIFIED.
*                             DATA PROTECTION IMAGE(DPI) HAS BEEN
*                             SPECIFIED.
*        OPERATION= IT LOADS THE DPI IMAGE FROM IMAGELIB. IT
*                    DETERMINES WHAT EOB,CNTRL MACRO AND/OR NOTE
*                    POINT ROUTINES ARE NEEDED FOR PROPER EXECUTION
*                    AND SETS UP A CODE IN THE DCBCNTRL FIELD OF
*                    THE DCB.
*
* ENTRY POINT--       ENTERED FROM IGG0197P BY USE OF THE XCTL MACRO.
*     INPUT--         SEE DESCRIPTION OF REGISTERS
*
* EXITS NORMAL--      XCTL TO IGG01910
*     OUTPUT=  THE DATA PROTECTION IMAGE IS STORED IN AN AREA
*              THAT IMMEDIATELY FOLLOWS THE IOB AND CCW'S
*
* EXITS-ERROR--       004 ABEND - DATA PROTECTION IMAGE NOT FOUND.
*                    REG 15 WILL CONTAIN A RETURN CODE OF 6 TO
*                    INDICATE THIS CONDITION.
*
* TABLES=            WHERE-TO-GO TABLE
*                    BYTES  0- 7   NAME
*                    BYTES  8-10   RELATIVE DISK ADDRESS(TTR) OF
*                                  FIRST RECORD
*                    BYTE     11   CONCATENATION NUMBER
*                    BYTE     12   ZEROES
*                    BYTE     13   ALIAS INDICATOR AND USER DATA
*                                  FIELD DESCRIPTOR:
*                                      -ALIAS INDICATOR-- 1 BIT
*                                      -NUMBER OF TTRS IN USERS
*                                      DATA FIELD-- 2 BITS
*                    BYTES 14-16   TTR OF FIRST TEXT RECORD
*                    BYTE     17   ZEROES
*                    BYTES 18-19   TTR OF NOTE LIST OR SCATTER LIST
*                    BYTE     20   TRANSLATION TABLE
*                    BYTE     21   ZEROES OR NUMBER OF ENTRIES IN
*                                  THE NOTE LIST
*                    BYTES 22-23   ATTRIBUTES
*                    BYTES 24-26   TOTAL CONTIGUOUS MAIN STORAGE
*                                  REQUIRED FOR MODULE
*                    BYTES 27-28   LENGTH OF FIRST TEXT RECORD
*                    BYTE     29   LENGTH OF WTG TABLE(IN DOUBLE
*                                  WORDS)
*                    BYTES 30-31   PATH THROUGH LOADS OF ROUTINES
*                    BYTES 32-34   IDTTR OF EXECUTOR FOR FIRST DCB
*                    BYTE     35   ADDRESS OF STORAGE FOR DCB
*                    BYTES 36-39   TABLE OF IDTTR'S
*                    BYTE  32+N(8)--
*                            IDTTR OF EXECUTOR FOR NTH DCB (3 BYTES)
*                            ADDRESS OF STORAGE FOR DCB    (1 BYTE )
*                            IDTTR OF LAST ROUTINE LOAD    (3 BYTES)
*                            NOT USED                      (1 BYTE )
*
* EXTERNAL REFERENCES=
*     ROUTINES= SVC 69(IMAGELIB ADDR), SVC 13(ABEND)
*     DATA AREAS= IECDSECS(O/C/E WORK AREA)
*     CONTROL BLOCKS= DCB-M,DEB-U
*
* MACRO= BLDL,XCTL,DELETE,LOAD,WTO
*
* CHANGE ACTIVITY= YM05576,YM06152
*
* MESSAGES= IEC953I  004-6 DATA PROTECTION IMAGE NOT FOUND
***********************************************************************
***********************************************************************
*
*        REGISTER CONVENTIONS
*
***********************************************************************
*
RDCB     EQU   2                       DCB REGISTER
RBASE    EQU   3                       BASE REGISTER
RCORE    EQU   4                       WORK AREA REGISTER
RPAR     EQU   5                       TOP OF PARAMETER LIST
RWTG     EQU   6                       TOP OF WTG TABLE
RPARC    EQU   7                       CURRENT PARAMETER
RWTGC    EQU   8                       CURRENT TRANS LOAD
RTCB     EQU   9                       ADDRESS OF CURRENT TCB    Y02898
RUCB     EQU   10                      USED HERE AS WORK REGISTER
RDEB     EQU   11                      DEB ADDRESS
RB       EQU   12                      WORK REG1
RC       EQU   13                      WORK REG2
RD       EQU   14                      WORK REG3
RJ       EQU   15                      WORK REG4
RE       EQU   0                       WORK REG5
RF       EQU   1                       WORK REG6
*
*
DPI      EQU   X'08'
FOUR     EQU   X'04'
THREE    EQU   X'03'
TWO      EQU   X'02'
ONE      EQU   X'01'
ZERO     EQU   X'00'
ATE      EQU   X'08'
PRTONLY  EQU   X'10'
INTRPRET EQU   X'80'
RDPUNCH  EQU   X'60'
CNTRLB   EQU   X'02'
ASCII    EQU   X'04'
UTF      EQU   X'02'
RDPRT    EQU   X'50'
PHPRT    EQU   X'30'
RPW      EQU   X'70'
RDONLY   EQU   X'40'
PHONLY   EQU   X'20'
PRTOMSK  EQU   X'E9'
EOBDPI   EQU   X'15'
EOBPRT1  EQU   X'16'
EOBPRT2  EQU   X'17'
NCNTRL   EQU   X'18'
OUTP     EQU   X'0F'
CE       EQU   X'03'
CF       EQU   X'04'
CC       EQU   X'02'
CA       EQU   X'07'
IPDZ     EQU   X'A9'
IRDZ     EQU   X'C9'
PRINTX   EQU   X'04'
GETRD    EQU   X'60'
PUTWRT   EQU   X'60'
*
INPUT    EQU   X'0F'                   DEB INPUT MASK
GETMOVE  EQU   X'50'                   GET AND MOVE MASK
RW       EQU   X'50'
RP       EQU   X'60'
SW       EQU   X'10'
**
SVC105   EQU   X'69'
SIXTY    EQU   60
SVC35    EQU   X'23'
SIX      EQU   6
FIFTY6   EQU   56
EIGHTY   EQU   80
FIVE     EQU   5
FOUR10   EQU   14
***
****
***
**
         BALR  RBASE,RE                LOAD BASE ADDRESS IN BASE REG
         USING *,RBASE                 SET UP BASE FOR PGM     @YM05576
         USING WTG,RWTG                SET UP BASE FOR WTG     @YM05576
         USING IHADCB,RDCB             SET UP BASE FOR DCB DSECT
         USING FORCORE,RCORE           SET UP BASE FOR FORCORE DSECT
         USING DEBBASIC,RDEB           SET UP BASE FOR DEB DSECT
         USING TCB,RTCB                BASE REGISTER FOR TCB     Y02898
*
         MODID BR=YES                                          @YM05576
*
DPI100   EQU   *
*
         SR    RE,RE                   INITIALIZE
         L     RDCB,0(RPARC)           GET DCB ADDRESS
         LA    RDCB,0(RDCB)            CLEAR HI BYTE
         L     RCORE,FOUR(RWTGC)       GET WORK AREA ADDRESS
         L     RDEB,DCBDEBAD           GET DEB @ FROM DCB
         L     RTCB,DEBTCBAD           GET CURRENT TCB ADDRESS   Y02898
         TM    DCBFUNC,DPI             DPI SPECIFIED
         BNO   DPI140                  NO, BRANCH FOR MORE TESTS
DPI110   EQU   *
         SR    RF,RF                   ZERO OUT REGISTER 1
*
         SVC   SVC105                  ISSUE SVC FOR IMAGELIB DCB ADDR
         LTR   RF,RF                   CK IF DCB ADDRESS IN REG 1
         BE    ABEN                    IF NOT GO ABEND
*
         LR    RD,RF                   SAVE IMAGELIB DCB ADDR.
         MVC   DXCCW1(FOUR),BLDLCNST   MOVE BLDL LENGTH INTO BLDL LIST
         MVC   DXCCW1+FOUR(FOUR),FORMCNST   INSERT NAME FOR BLDL
         MVC   DXCCW1+ATE(FOUR),JFCFCBID    GET IMAGE NAME FROM JFCB
         OC    DXCCW1+ATE(FOUR),ORCNST  BLANK OUT NON-CHAR. COLUMNS
         LA    RE,DXCCW1               GET ADDRESS OF BLDL LIST
***********************************************************************
*  THE ADDRESS OF THE IMAGELIB DCB WILL BE RETURNED IN REGISTER 1
***********************************************************************
         BLDL  (1),(0)                 BUILD THE IMAGE INTO CORE
***********************************************************************
*   TEST RETURN CODE IN REG. 15 (RJ) AND CHECK FOR THE FOLLOWING:
*                            X'00'--- IMAGE FOUND
*                            X'04'--- IMAGE NOT FOUND
*                            X'08'--- PERMANENT I/O ERROR
***********************************************************************
*
         LA    RB,FOUR                 SET UP TO TEST RETURN CODE
         CLR   RB,RJ                   TEST RETURN CODE
         BE    DPI120                  RETURN CODE = IMAGE NOT FOUND
         BH    DPI130                  IMAGE FOUND, CONTINUE NORMAL WRK
***************************  PERMANENT ERROR **************************
***********************************************************************
         B     ABEN                    BRANCH TO ISSUE ABEND
DPI120   EQU   *
         MVC   MESSAGEA(SIXTY),IECF04I MOVE IN ERROR MESSAGE
         LA    RF,MESSAGEA              GET ADDRESS OF ERROR MESSAGE
         SVC   SVC35                   ISSUE ERROR MESSAGE
         LA    RJ,SIX                  INDICATE 'DPI IMAGE NOT FOUND'
*              ERROR CODE TO BE PASSED TO USER VIA REG. 15
***********************************************************************
         B     ABEN                    BRANCH TO ISSUE ABEND
*
DPI130   EQU   *
*
*  IMAGE WAS FOUND AND NO ERRORS WERE ENCOUNTERED
*
         LR    RF,RD                   GET SYS1.IMAGELIB DCB ADDRESS
         LA    RE,DXCCW1+FOUR          GET ADDRESS OF BLDL NAME
*
         LOAD  DE=(0),DCB=(1)          GET IMAGE FROM IMAGELIB
*
*   THE IMAGE ADDRESS IS STORED IN REGISTER 0 BY THE 'LOAD' MACRO
*
         LR    RB,RE                   SAVE IMAGE ADDR. FOR LATER OPS
         L     RC,DCBIOBA              GET IOB PREFIX ADDRESS
         LA    RC,FIFTY6(RC)           POINT PASS IOB AND CCW'S
*                                                              @YM06152
*   THE DPI IMAGE OBTAINED VIA THE LOAD IS PUT INTO USER KEY.  @YM06152
*   THE KEY IS CURRENTLY OBTAINED FROM THE TCB WHICH IS THE    @YM06152
*   USER'S KEY. THEREFORE, THE LOAD MAY BE ISSUED IN DM KEY    @YM06152
*   BUT THE MOVE MUST BE IN USER KEY.                          @YM06152
*                                                              @YM06152
         MODESET KEYADDR=DXUKEY,WORKREG=15  GET IN USER KEY    @YM06152
         MVC   ZERO(EIGHTY,RC),ZERO(RB) PUT DPI IMAGE BEHIND IOB & CCW
*
         MODESET EXTKEY=DATAMGT       GET IN DATA MGT KEY      @YM06152
*
DPI140   EQU   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        THIS ROUTINE WILL SET A FIRST TIME SWITCH WHICH WILL BE USED
*        AND RESET BY THE "GET" MODULE IGG019AC
*
         TM    DEBOPATB,INPUT          INPUT DATA SET
         BO    DPI145                  NO, BRANCH
         BM    DPI145                  NO, BRANCH
         TM    DCBMACRF,GETMOVE         IS QSAM IN MOVE MODE BEING USED
         BNO   DPI145                  NO, BRANCH
         TM    DCBFUNC,RW              READ/PRINT DATA SET
         BO    DPI143                  YES, BRANCH
         TM    DCBFUNC,RP              READ/PUNCH DATA SET
         BNO   DPI145                  NO, BRANCH
DPI143   EQU   *
         OI    DCBQSWS,SW              SET FIRST TIME SWITCH
DPI145   EQU   *
*
         TM    DCBFUNC,PRTOMSK         PRINT ONLY ASSOCIATED DATA SET
         BM    DPI160                  NO, BRANCH
         TM    DCBFUNC,PRTONLY         PRINT ONLY DATA SET
         BNO   DPI160                  NO, BR FOR OTHER POSSIBILITIES
*
DPI150   EQU   *
*
         MVI   DCBCNTRL+THREE,EOBPRT1  MOVE ID OF DDD2 INTO DCB
DPI155   EQU   *
         TM    DCBMACRF+ONE,CNTRLB     IS  CNTRL   SPECIFIED FOR OUTPUT
         BNO   DPI280                  NO, BRANCH TO EXIT
         MVI   DCBCNTRL,NCNTRL         YES, MOVE CNT4 ID INTO DCB
         B     DPI280                  BRANCH TO TRANSFER CONTROL
*
DPI160   EQU   *
*
         CLI   DCBFUNC,INTRPRET        INTERPRET ASSOC. DATA SET
         BNE   DPI170                  NO, BRANCH FOR OTHER TESTS
         MVI   DCBCNTRL+THREE,EOBPRT2  YES, MOVE DDE2 ID INTO DCB
         B     DPI280                  BRANCH TO LOAD ID OF EXEC
*
DPI170   EQU   *
*
         TM    DCBFUNC,RPW             RD/PUNCH/PRT ASSOC. DATA SET
         BO    DPI260                  YES, BRANCH
         TM    DCBFUNC,RDPUNCH         RD/PH ASSOCIATED DATA SET
         BNO   DPI230                  NO, BRANCH
         TM    DEBOPATB,OUTP           DCB FOR OUTPUT
         BNO   DPI210                  NO, BRANCH
DPI180   TM    DCBFUNC,DPI             DPI SPECIFIED
         BNO   DPI190                  NO, BRANCH              @YM06152
         LR    RF,RD                   RESTORE IMAGELIB DCB ADDR IN R.1
         SVC   SVC105                  ISSUE SVC FOR IMAGELIB DCB ADDR
         LR    RE,RB                   YES, RELOAD IMAGE ADDR. IN REG 0
         DELETE EPLOC=(0)              DELETE DPI DESCRIPTOR IMAGE
*                                      KEY                       Y02898
         MVI   DCBCNTRL+THREE,EOBDPI   MOVE DDC2 ID INTO DCB
         B     DPI280                  BRANCH TO LOAD ID OF EXEC
DPI190   EQU   *
         TM    DCBRECFM,ASCII          ASCII CONTROL CHAR. SPECIFIED
         BNO   DPI200                  NO, BRANCH TO LOAD ANOTHER ID
         MVI   DCBCNTRL+THREE,CF       LOAD DDB2 ID INTO DCB
         B     DPI280                  BRANCH TO LOAD ID OF EXEC
DPI200   MVI   DCBCNTRL+THREE,CE       LOAD DDA2 ID INTO DCB
         B     DPI155                  BRANCH TO CHECK FOR CNTRL
DPI210   EQU   *
         MVI   DCBCNTRL+THREE,CC       LOAD EGP2 ID INTO DCB
         B     DPI280                  BRANCH TO LOAD ID OF EXEC
*
DPI230   EQU   *
*
         TM    DCBFUNC,IPDZ            RD/PRT  ASSOCIATED DATA SET
         BM    DPI250                  NO, BRANCH
         TM    DCBFUNC,RDPRT           RD/PRT ASSOCIATED DATA SET
         BNO   DPI250                  NO, BRANCH
         TM    DEBOPATB,OUTP           OUTPUT DATA SET
         BO    DPI150                  YES, BRANCH
DPI240   EQU   *
         TM    DCBMACRF,CNTRLB         CNTRL SPECIFIED FOR INPUT
         BNO   DPI210                  NO, BRANCH
         MVI   DCBCNTRL,CA             YES, MOVE CNT1 ID INTO DCB
         B     DPI210                  BRANCH TO LOAD EOB ID IN DCB
*
DPI250   EQU   *
*
         TM    DCBFUNC,IRDZ            ANY FILE EXCEPT PNCH/PRT
         BM    DPI270                  YES, BRANCH
         TM    DCBFUNC,PHPRT           PUNCH/PRT ASSOCIATED DATA SET
         BNO   DPI270                  NO, BRANCH
         TM    DCBFUNC,PRINTX          OUTPUT FOR PRINT
         BO    DPI150                  YES, BRANCH
         B     DPI190                  OUTPUT FOR PUNCH
*
DPI260   EQU   *
*
         TM    DEBOPATB,OUTP           OUTPUT FILE
         BNO   DPI210                  NO, BRANCH
         TM    DCBFUNC,PRINTX          PRINT OUTPUT FILE
         BO    DPI150                  YES, BRANCH
         B     DPI180                  OUTPUT FOR PUNCH
*
DPI270   EQU   *
*
         CLI   DCBFUNC,RDONLY          READ ONLY DATA SET
         BE    DPI240                  YES, BRANCH
         CLI   DCBFUNC,PHONLY          PUNCH ONLY DATA SET
         BE    DPI190                  YES, BRANCH
         TM    DCBMACRF,GETRD          GET OR READ SPEC. IN DCB
         BM    DPI240                  YES, BRANCH
         TM    DCBMACRF+ONE,PUTWRT     PUT OR WRITE SPECIFIED IN DCB
         BM    DPI190                  YES, BRANCH
         B     ABEN                    BRANCH TO ISSUE ABEND
*
DPI280   EQU   *
         MVC   ZERO(FIVE,RWTGC),SOPSLDFT XCTL TO LOAD IGG01910
*
RELOOP   EQU   *
         LA    RWTGC,WGOFF(ZERO,RWTGC) INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(ZERO,RPARC) INCR CURRENT DCB ENTRY POINTER
         CLC   ZERO(TWO,RWTGC),AMIDCNST THIS ROUTINE NEEDED AGAIN
         BCR   RWTGC,RBASE             BACK TO OPEN CONTROL ROUTINE
*
         CLC   ZERO(TWO,RWTGC),OPIDCNST END OF TABLE
         BC    7,RELOOP                NO, CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(ZERO,RWTG)  REINITIALIZE WTG LIST POINTER
ZCHEK    CLI   0(RWTGC),ZERO           ENTRY COMPLETE
         BC    7,TCTLRTN               IF NOT, TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(ZERO,RWTGC) GET NEXT ENTRY
         LA    RPARC,PLOFF(ZERO,RPARC) INCR CURRENT DCB ENTRY PTR
         B     ZCHEK                   ZERO CHECK
*
TCTLRTN  EQU   *
         MVC   SIX(TWO,RWTG),ZERO(RWTGC) STORE ID IN WTG TABLE
         MVC   FOUR10(THREE,RWTG),TWO(RWTGC) MOVE TTR INTO TABLE
*
         LA    RJ,DXCCW12              SET UP FOR XCTL
**
         XCTL  DE=(RWTG),SF=(E,(15))
*
**
***
***********************************************************************
*
ABEN     EQU   *
*
         L     RF,ABEND4               GET ABEND CODE
         SLL   RF,12
         ABEND (1),DUMP
*
***********************************************************************
*
WAOFF    EQU   32
PLOFF    EQU   4                       OFFSET OF DCB ENTRIES
WGOFF    EQU   8                       OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'                   ID
AMIDCNST DC    C'7Q'                   THIS MODULE'S ID
         DS    0F                      ALIGN ON A FULLWORD BOUNDARY
ABEND4   DC    X'00000004'             ABEND CODE OF 4
BLDLCNST DC    X'00010050'             INFO REQUIRED FOR BLDL LIST
FORMCNST DC    C'FORM'                 FIRST 4 CHAR OF IMAGE NAME
ORCNST   DC    X'40404040'             BLANKS FOR IMAGE NAME
IECF04I  WTO   'IEC953I 004-6 DATA PROTECTION IMAGE NOT FOUND',ROUTCDE=*
               (11),DESC=4,MF=L
*
***********************************************************************
*
         DS    0F                      FULLWORD BOUNDARY       @YM06152
ZAPSZAPS DC    8C'ZAPSZAPS'            WORK AREA USED BY OPEN    Y02898
SOPSLDFT DC    C'10'               ID                          @YM05576
***********************************************************************
*************************       DSECTS       **************************
***********************************************************************
*
*
         DCBD  DSORG=PS
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @YM05576
         CVT   DSECT=YES,LIST=YES                              @YM05576
         IHARB                                                   Y02898
         IKJTCB                                                  Y02898
         IEZDEB
         END
