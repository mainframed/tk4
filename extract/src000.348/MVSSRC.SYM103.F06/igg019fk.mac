         TITLE 'IGG019FK-EOB RTN FOR 3525 DATA PROTECTION IMAGE (DPI)'
         START
***********************************************************************
* AOS1 AND AOS2 ADDITIONS/CHANGES/DELETIONS                      Y01898
*A717000                                                          M1866
*
*NAME--              IGG019FK
*
*TITLE--             'IGG019FK' - EOB RTN FOR 3525 DATA PROTECTION
*
*STATUS CHANGE LEVEL 000
*                    THIS MODULE WAS PUT INTO 'OS' RELEASE 21.0 AS A
*                    NEW MODULE
*
*MODULE TYPE--       END OF BLOCK
*
*
*FUNCTION/OPERATION--SAM END OF BLOCK ROUTINE FOR 3525 RD/PCH (RPD)
*                    OR RD/PCH/PRT (RPWD) WITH DATA PROTECTION (DPI)
*                    AND MACHINE C CHARACTERS, ASCII C CHARACTERS
*                    OR NO C CHARACTERS SPECIFIED. IT WILL BLANK OUT
*                    BYTES IN BUFFER AREA THAT CORRESPOND TO BLANK
*                    BYTES IN DPI IMAGE. SETS UP COMMAND BYTE
*                    (WR,FD,SS) IN THE CCW. THE BUFFER ADDRESS AND
*                    RECORD LENGTH ARE PASSED FROM PUT OR WRITE
*                    ROUTINE IN THE CCW. THE CHANNEL PROGRAM IS
*                    SCHEDULED WITH AN EXCP MACRO.
*
*ENTRY POINTS--      IGG019FK FROM PUT OR WRITE ROUTINES.
*                    LA    2,DCB
*                    LA    3,IOB
*                    L     15,76(DCB)       FOR BSAM
*                    (OR)
*                    L     15,92(DCB)       FOR QSAM
*                    BALR  14,15
*
*INPUT--             IOB+40            BUFFER ADDRESS
*                    IOB+46            BLOCK SIZE
*                    DCBRECFM          TEST FOR MACHINE C CHAR.
*                                      TEST FOR ASCII C CHAR.
*
*OUTPUT--            IOB+40            WRITE CCW SET WITH C CHAR,
*                                      BUFFER ADDRESS AND LENGTH.
*                    IOB+24            LOADED WITH START ADDRESS
*                                      OF CHANNEL PROGRAM.
*
*EXTERNAL ROUTINES-- NONE
*
*EXITS-NORMAL--      RETURN TO PUT OR WRITE ROUTINE ON REG. 14
*
*EXITS-ERROR--       003 - ABEND-- ASSOCIATED DATA SET I/O SEQUENCE
*                    ERROR. RETURN CODE OF 2 IN REG. 15
*
*TABLES/WORKAREA--   NONE
*
*ATTRIBUTES--        REENTRANT,REUSABLE.
*
***********************************************************************
WRKR0    EQU   0
WRKR1    EQU   1                       TABLE INCREMENT AMOUNT (2)
COUNTER  EQU   1                       COUNTER REGISTER
LRECLR   EQU   1                       LENGTH OF RECORD REGISTER
DCBR     EQU   2                       DCB ADDRESS UPON ENTRY
IOBR     EQU   3                       IOB ADDRESS UPON ENTRY
WRKR2    EQU   4                       TABLE END ADDRESS
DPIR     EQU   4                       ADDRESS OF DPI IMAGE
WRKR3    EQU   5                       TABLE START ADDRESS
DEBR     EQU   6                       REG. USED FOR DEB DSECT
BUFR     EQU   6                       BUFFER ADDRESS
OPR      EQU   7                       OP CODE REGISTER
RETR     EQU   14                      CALLING ROUTINE RETURN ADDRESS
BASR     EQU   15                      BASE REGISTER
*
MCHAR    EQU   X'02'                   MACHINE CONTROL CHARACTER MASK
ASCII    EQU   X'04'                   ASCII CONTROL CHARACTER MASK
USED     EQU   X'7F'                   DCB USED INDICATOR
SEQFLAG  EQU   X'08'
SEQFLGOF EQU   X'F7'
SSCLEAR  EQU   X'BF'
BLANK    EQU   X'40'
THRE     EQU   X'03'
EIGHTY   EQU   X'50'                   LENGTH MASK FOR COUNTER DECREMNT
RPW      EQU   X'70'
SLI      EQU   X'20'
SIX      EQU   6
ONE      EQU   1
N2       EQU   2
Z0       EQU   0
*
IGG019FK CSECT
*
*
*
         USING DEBBASIC,DEBR
         USING IGG019FK,BASR
         USING IHADCB,DCBR
         USING IOB,IOBR
*
* ENTRY POINT
*
         L     DEBR,DCBDEBAD           GET DEB ADDRESS
READSEQ  EQU   *
*
*  THIS ROUTINE WILL CHECK THE ASSOCIATIVE DATA SET DCB'S TO INSURE
*  THAT THEY HAVE BEEN OPENED,AND THAT EACH DCB IS BEING PROCESSED IN
*  THE CORRECT ORDER
*
         CLC   DEBRDCBA(THRE),ZEROES   IS READ DCB OPEN
         BE    WRTOPROG                NO, WRITE ERROR MSG. TO PROGMR.
         L     DCBR,DEBRDCB            YES, GET READ DCB ADDRESS
         TM    DCBQSWS,SEQFLAG         IS READ SEQUENCE FLAG ON
         BZ    WRTOPROG                NO, WRT ERROR MSG TO PROGRAMMER
         NI    DCBQSWS,SEQFLGOF        YES,TURN OFF READ SEQ. FLAG
         TM    DCBFUNC,RPW             RD/PCH/PRT ASSOC. D. S.
         BNO   DPI00                   NO, BRANCH
         CLC   DEBWDCBA(THRE),ZEROES   PRINT DCB OPEN
         BE    DPI00                   NO BRANCH
         L     DCBR,DEBWDCB            GET PRINT DCB ADDR.
         NI    DCBQSWS,SEQFLGOF        TURN OFF PRINT SEQ. FLAG
         MVI   DCBLNP,Z0               RESET LINE CTR TO ZERO   YA00439
*
DPI00    EQU   *
*
         L     DCBR,DEBDCBAD           GET CURRENT DCB ADDRESS AGAIN
         TM    DCBQSWS,SEQFLAG         IS PUNCH SEQUENCE FLAG ON
         BO    WRTOPROG                YES, ERROR INVOLVED. BRANCH
         OI    DCBQSWS,SEQFLAG         TURN ON PUNCH SEQ. FLAG
DPI10    EQU   *
         LA    COUNTER,EIGHTY          LOAD COUNT OF 80
         L     BUFR,CCW1AD             GET BUFFER ADDRESS
         TM    DCBRECFM,SIX            ASCII OR MACHINE CONTROL CHARS.
         BZ    DPI30                   NO, BRANCH FOR DPI TRANSLATION
DPI20    EQU   *
         LA    BUFR,ONE(BUFR)          INCREMENT ADDRESS BY ONE
*
*  THIS ROUTINE WILL BLANK OUT ALL BYTES IN THE BUFFER THAT DOES NOT
*  CORRESPOND WITH THE 80 BYTE DPI IMAGE LOADED FROM SYS1.IMAGELIB WHEN
*  DCB WAS OPENED
*
DPI30    LA    DPIR,IOBDPI             GET DPI IMAGE ADDRESS
DPI40    CLI   0(DPIR),BLANK           IS DPI BYTE BLANK
         BNE   DPI50                   NO, BRANCH
         MVI   0(BUFR),BLANK           BLANK OUT COINCIDING USER BYTE
DPI50    EQU   *
         LA    DPIR,ONE(DPIR)          POINT TO NEXT DPI BYTE
         LA    BUFR,ONE(BUFR)          POINT TO NEXT USER BUFFER BYTE
         BCT   COUNTER,DPI40           CK ALL DPI BYTES, THEN CONTINUE
         TM    DCBRECFM,ASCII          ASCII USED
         BZ    DDA2                    NO, GO CK FOR MACHINE CNTL CHAR
DDB2     EQU   *
         L     BUFR,CCW1AD             GET BUFFER ADDRESS
         LA    WRKR3,TABLE             LOAD TABLE START ADDRESS
         LA    WRKR2,TABLY             TABLE END PLUS TWO
         LA    WRKR1,N2(Z0)            LOAD TABLE INCREMENT AMT
DDB3     CLC   Z0(ONE,BUFR),Z0(WRKR3)  COMPARE ASCII CHAR TO TABLE
         BE    DDB4                    BR IF ASCII CHAR IS FOUND
         BXLE  WRKR3,WRKR1,DDB3        INCR AND REPEAT IF NOT END
*
*  THIS ROUTINE WILL BUILD CCW'S AND ISSUE EXCP TO EXECUTE CCW'S BUILT
*
*
DDB4     EQU   *
         LA    BUFR,ONE(BUFR)          PT TO FIRST CHAR FOR OUTPUT PROC
         IC    WRKR2,CCW2OP            STORE COMMAND BYTE OF WRT CCW
         ST    BUFR,CCW2OP             STORE DATA ADDR IN WRITE CCW
         STC   WRKR2,CCW2OP            RESTORE WRITE COMMAND
         LH    LRECLR,CCW1LN           LOAD BLOCK LENGTH
         BCTR  LRECLR,WRKR0            SUBTRACT ONE FROM BLOCK LENGTH
         STH   LRECLR,CCW2LN           STORE LENGTH IN WRITE CCW
         NI    CCW2OP,SSCLEAR          CLEAR STACKER SELECT OPTION
         OC    CCW2OP(ONE),ONE(WRKR3)  OR IN STACKER SELECT/OPTION
         LA    WRKR3,CCW2OP            START ADDRESS
         ST    WRKR3,IOBSTAD           PUNCH START ADDRESS
         MVI   CCW2FL,SLI              TURN ON SILI BIT IN 2ND CCW
LABEL    EQU   *
         LA    WRKR1,IOBIOS            LOAD IOS IOB ADDR FOR EXCP
         EXCP  (1)                     SCHEDULE I/O
         NI    DCBCIND1,USED           INDICATE DCB HAS BEEN USED
         BCR   15,RETR                 RETURN TO WRITE/PUT ROUTINE
DDA2     EQU   *
         IC    OPR,CCW2AD              SAVE OP CODE
         L     BUFR,CCW1AD             LOAD BUFFER ADDR FROM CCW
         LH    LRECLR,CCW1LN           LOAD RECORD LENGTH
         TM    DCBRECFM,MCHAR          MACHINE CONTROL CHARACTERS USED
         BZ    DDA3                    NO, BRANCH
         BCTR  LRECLR,Z0               SUBTRACT ONE
         IC    OPR,0(BUFR)             INSERT CONTROL CHARACTER
         LA    BUFR,ONE(BUFR)          ADD ONE TO BUFFER ADDRESS
DDA3     EQU   *
         ST    BUFR,CCW2AD             STORE RECORD ADDR IN WRITE CCW
         STH   LRECLR,CCW2LN           STORE LENGTH IN WRITE CCW
         STC   OPR,CCW2OP              STORE CMND BYTE IN WRITE CCW
         LA    LRECLR,CCW2OP           LOAD ADDR OF WRITE CCW
         ST    LRECLR,IOBSTAD          STORE START ADDRESS FOR IOS
         MVI   CCW2FL,SLI              TURN ON SILI BIT IN 2ND CCW
         B     LABEL                   BR TO SCHEDULE I/O
LEVELID  DC    C'01'                   MODULE LEVEL CONTROL
WRTOPROG EQU   *
*
*  WRITE TO PROGRAMMER (WTP) AND ABEND ROUTINE
*
         LR    BUFR,BASR               SAVE BASE ADDR
         DROP  BASR                    DROP OLD BASE REG
         USING IGG019FK,BUFR           SET UP NEW BASE
         WTO   'IEC950I 003-2 3525 ASSOCIATED DATA SET I/O SEQUENCE ERR*
               OR',ROUTCDE=(11),DESC=4
         LR    BASR,BUFR               SAVE BASE ADDR.
         DROP  BUFR                    DROP OLD BASE REG.
         USING IGG019FK,BASR           SET UP NEW BASE
         B     ABEN                    BRANCH TO ISSUE ABNED
*
         DS    0F                      ALIGN ON A FULLWORD BOUNDARY
ABEND3   DC    X'00000003'             ABEND CODE OF 3
ZEROES   DC    X'00000000'             WORK DC
TABLE    DC    C'V'                    ASCII C CHAR FOR NEXT OP CODE
         DC    X'01'                   OP CODE-SELECT PUNCH STACKER 1
         DC    C'W'                    ASCII C CHAR FOR NEXT OP CODE
         DC    X'41'                   OP CODE-SELECT PUNCH STACKER 2
TABLY    EQU   TABLE+2                 POINTER
*
ABEN     EQU   *
         LA    BASR,N2                 INDICATE ASSOCIATED DATA
*                                      SET PUNCH SEQUENCE ERROR
*                                      CODE TO BE PASSED TO USER
*                                      VIA REGISTER 15
         L     WRKR1,ABEND3            GET SAM ABEND ERROR CODE
         SLL   WRKR1,12                SET UP REGISTER ONE FOR ABEND
         ABEND (1),DUMP                ISSUE ABEND INSTRUCTION
         DC    12CL4'ZAPS'              MAINTENANCE AREA          M1866
*              THE FOLLOWING CNOP MUST REMAIN ON A HALF-WORD BOUNDARY *
*
         CNOP  0,8                     PAD MODULE TO DOUBLE-WD MULTIPLE
*
*  DSECTS  ************************************************************
*
IOB      DSECT
IOBLINK  EQU   IOB
         DS    2F                      ECB AREA & ADDR OF NEXT IOB
IOBIOS   DS    1F                      IOBFLAGS AND SENSE INFO
         DS    3F                      ECB ADDR & CSW INFO
IOBSTAD  DS    1F                      CHANNEL PROG ADDRESS
         DS    3F                      DCB ADDR & OTHER INFO
CCW1OP   DS    1F                      OP CODE
CCW1AD   EQU   CCW1OP                  CCW OP CODE
CCW1FL   DS    1H                      FLAGS
CCW1LN   DS    1H                      LENGTH
CCW2OP   DS    1F                      OP CODE
CCW2AD   EQU   CCW2OP                  CCW OP CODE
CCW2FL   DS    1H                      FLAGS
CCW2LN   DS    1H                      LENGTH
IOBDPI   DS    CL80                    DPI IMAGE FORMAT
         DCBD  DSORG=PS
         IEZDEB
         END
