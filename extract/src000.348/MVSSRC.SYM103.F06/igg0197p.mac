         TITLE 'IGG0197P-BUILDS IOBS AND CCWS FOR 3505 AND 3525'
         START
IGG0197P CSECT
***********************************************************************
* D189000,A188500-189000,A410100-410400                        @ZA01875
* D 177600,405000,574000-577000                                @YM05576
* C 175000                                                     @YM05576
* A 405700                                                     @YM05576
* D 236300,263300,392300,553000-558000,566000                  @YM06153
* C 242000,242300,244000,246000,248000,236500                  @YM06153
* A 458500,459500,410500,240500,235500,402600,490500           @YM06152
* C 498000                                                     @YM06152
*
* MODULE NAME=    IGG0197P
*
* DESCRIPTIVE NAME= IGG0197P-OPEN FOR 3505/3525 FEATURES
*
* STATUS CHANGE LEVEL - OS/VS2 REL 2
*
* MODULE TYPE=  PROCESSOR-ASSEM
*               ATTRIBUTES-REENTRANT,REUSABLE
*
* FUNCTION/OPERATION--THIS ROUTINE WILL GET CORE (GETMAIN) TO SET UP
*                    THE NECESSARY IOB'S FOR THE 3505 CARD READER
*                    AND 3525 CARD PUNCH.  IT WILL CLEAR THE CORE
*                    AND LINK THE IOB'S TOGETHER.  IT WILL CONNECT
*                    THE DCB AND IOB.  IT WILL SET UP CCW'S FOR THE
*                    3505 AND 3525.  IT WILL SET UP ANY CONTROL
*                    COMMANDS NEEDED.
*
*                    A BIT IS SET IN THE AUDIT TRAIL TRAIL
*                    INDICATING THE IOB HAS BEEN OBTAINED AND
*                    SHOULD BE FREED IF AN ABEND OCCURS DURING
*                    OPEN PROCESSING
* ENTRY POINTS--      ENTERED FROM IGG0197N BY USE OF THE XCTL MACRO.
*     INPUT=      SEE DESCRIPTION OF REGISTERS.
*
* EXITS-NORMAL--      XCTL TO IGG0197Q TO LOAD EOB, CNTRL AND NOTE
*                    POINT ID'S IN DCB.
*     OUTPUT=        IOB ADDRESS STORED INTO DCB
*
* EXTERNAL REFERENCES=
*     DATA AREAS-IECDSECS(O/C/E WORK AREA)
*                IHAFCAUD(FORCE CLOSE WORK AREA)
*     CONTROL BLOCKS=IOB-C,DCB-U,DEB,U
*
* TABLES=           WHERE-TO-GO TABLE
*                    BYTES  0- 7   NAME
*                    BYTES  8-10   RELATIVE DISK ADDRESS(TTR) OF
*                                  FIRST RECORD
*                    BYTE     11   CONCATENATION NUMBER
*                    BYTE     12   ZEROES
*                    BYTE     13   ALIAS INDICATOR AND USER DATA
*                                  FIELD DESCRIPTOR:
*                                      -ALIAS INDICATOR-- 1 BIT
*                                      -NUMBER OF TTRS IN USERS
*                                      DATA FIELD-- 2 BITS
*                    BYTES 14-16   TTR OF FIRST TEXT RECORD
*                    BYTE     17   ZEROES
*                    BYTES 18-19   TTR OF NOTE LIST OR SCATTER LIST
*                    BYTE     20   TRANSLATION TABLE
*                    BYTE     21   ZEROES OR NUMBER OF ENTRIES IN
*                                  THE NOTE LIST
*                    BYTES 22-23   ATTRIBUTES
*                    BYTES 24-26   TOTAL CONTIGUOUS MAIN STORAGE
*                                  REQUIRED FOR MODULE
*                    BYTES 27-28   LENGTH OF FIRST TEXT RECORD
*                    BYTE     29   LENGTH OF WTG TABLE(IN DOUBLE
*                                  WORDS)
*                    BYTES 30-31   PATH THROUGH LOADS OF ROUTINES
*                    BYTES 32-34   IDTTR OF EXECUTOR FOR FIRST DCB
*                    BYTE     35   ADDRESS OF STORAGE FOR DCB
*                    BYTES 36-39   TABLE OF IDTTR'S
*                    BYTE  32+N(8)--
*                            IDTTR OF EXECUTOR FOR NTH DCB (3 BYTES)
*                            ADDRESS OF STORAGE FOR DCB    (1 BYTE )
*                            IDTTR OF LAST ROUTINE LOAD    (3 BYTES)
*                            NOT USED                      (1 BYTE )
*
* MACROS= GETMAIN,MODESET,XCTL
*
* CHANGE ACTIVITY= YM05576,YM06152,YM06153
***********************************************************************
*
*
*  REGISTER CONVENTIONS USED THROUGHOUT ALL OPEN PASSES
*
*
***********************************************************************
RDCB     EQU   2                       DCB REGISTER
RBASE    EQU   3                       BASE REGISTER
RCORE    EQU   4                       WORK AREA REGISTER
RPAR     EQU   5                       TOP OF PARAMETER LIST
RWTG     EQU   6                       TOP OF WTG TABLE
RPARC    EQU   7                       CURRENT PARAMETER
RWTGC    EQU   8                       CURRENT TRANS. LOAD
RTCB     EQU   9                       ADDRESS OF CURRENT TCB    Y02898
RUCB     EQU   10                      UCB REGISTER
RDEB     EQU   11                      DEB ADDRESS
RB       EQU   12                      WORK REGISTER 1
RC       EQU   13                      WORK REGISTER 2
RD       EQU   14                      WORK REGISTER 3
RJ       EQU   15                      WORK REGISTER 4
RE       EQU   0                       WORK REGISTER 5
RF       EQU   1                       WORK REGISTER 6
*
**                 MASKS
*
QSAM     EQU   X'01'
SUCCFUL  EQU   X'7F'
UNDFIND  EQU   X'C0'
FIXED    EQU   X'80'
BLKBITOF EQU   X'EF'
PRTONLY  EQU   X'E9'
NOTRDPCH EQU   X'97'
INTORPCH EQU   X'A9'
FIRSTIOB EQU   X'01'
CNTRLB   EQU   X'02'
READONLY EQU   X'C2'
CCOFF    EQU   X'BF'
PRT      EQU   X'05'
READPRT  EQU   X'50'
PHPRT    EQU   X'30'
RDFDSS   EQU   X'02'
OMR      EQU   X'20'
RCE      EQU   X'10'
OMRCEFLG EQU   X'08'
RPW      EQU   X'70'
DISPSN   EQU   X'00'
OUTP     EQU   X'07'
ONE      EQU   X'01'
TWO      EQU   X'02'
THREE    EQU   3
ASCII    EQU   X'04'
QFOUR    EQU   X'04'
QTHREE   EQU   X'03'
CC       EQU   X'40'
FDSS     EQU   X'23'
SLI      EQU   X'20'
MODE2    EQU   X'20'
NOP      EQU   X'03'
SLICC    EQU   X'60'
WRFDSS   EQU   X'01'
STACK2   EQU   X'40'
PRINTX   EQU   X'04'                   PRINTER BIT MASK
PRINTW   EQU   X'10'                   PRINT BIT MASK
DPI      EQU   X'08'                   DPI BIT MASK
INTRPRET EQU   X'80'                   INTERPRET DATA SET MASK
READ     EQU   X'40'                   READ DATA SET MASK
Z0       EQU   X'00'
D07      EQU   7
D10      EQU   10
D255     EQU   X'FF'
D12      EQU   12
D20      EQU   20
D16      EQU   16
D14      EQU   14
SIX      EQU   6
FIVE     EQU   5
D13      EQU   13
D08      EQU   8
X28      EQU   X'28'
D24      EQU   24
D37      EQU   37
XC9      EQU   X'C9'
DATA2    EQU   X'80'                   DATA MODE 2 MASK
POCKET2  EQU   X'02'                   STACKER 2 MASK
RCEMASK  EQU   X'10'                   RCE MASK
OMRRCE   EQU   X'08'                   OMR OR RCE OP CODE FLAG
PRINTBUF EQU   64                      INTERPRET PRINT BUFFER SIZE
NOFUNC   EQU   X'00'
FORTYATE EQU   X'30'
*
**
***
**
*
         BALR  RBASE,RE                SET BASE
         USING *,RBASE                                         @YM05576
         USING IHADCB,RDCB
         USING FORCORE,RCORE
         USING DEBBASIC,RDEB            SET UP BASE FOR DEB      Y02898
*
         MODID BR=YES
**
NOPN21   EQU   *
**
         SR    RE,RE
         L     RDCB,Z0(RPARC)          GET DCB ADDR FROM PARM LIST
         L     RCORE,QFOUR(RWTGC)      GET DCB WORK AREA ADDRESS
         LA    RDCB,Z0(RDCB)           ZERO OUT HIGH ORDER BYTE
         L     RDEB,DCBDEBAD           GET ASSOCIATED DEB ADDRESSY02898
         L     RTCB,DEBTCBAD           GET CURRENT TCB ADDRESS   Y02898
         LA    RF,D07                  GET DBLWD LENGTH OF IOB & CCWS
         CLI   DCBFUNC,INTRPRET        IS THIS AN INTERPRET FILE
         BNE   NOPN22                  NO, BRANCH
         SR    RUCB,RUCB               CLEAR RUCB              @ZA01875
         LH    RUCB,DCBBUFL            LOAD BUFFER LENGTH      @ZA01875
         CH    RUCB,DCBBLKSI           IS BUFL > OR = BLKSIZE  @ZA01875
         BNL   NOPN211                 YES - USE BUFL          @ZA01875
         LH    RUCB,DCBBLKSI           ELSE USE BLKSIZE        @ZA01875
NOPN211  EQU  *                                                @ZA01875
         LA    RUCB,D07(RUCB)          ROUND BUF LNG TO NEXT   @ZA01875
         SRL   RUCB,THREE              HIGHEST NUMBER DBL WDS  @ZA01875
         AR    RF,RUCB                 CALCULATE TOTAL JOB     @ZA01875
*                                      LENGTH                  @ZA01875
         B     NOPN24                  BRANCH
NOPN22   EQU   *
         TM    DCBFUNC,DPI             DPI BIT ON IN DCB
         BZ    NOPN24                  NO, BR
         LA    RF,D10(RF)              ADD 80 BYTES TO LENGTH
NOPN24   EQU   *
         STC   RF,DCBIOBL              STORE IOB LENGTH IN DCB
         TM    DCBCIND2,QSAM           QSAM BEING USED
         BZ    BSAM                    NO, BR FOR BSAM
         IC    RE,DCBBUFNO             GET NO. OF BUFFERS REQUIRED
         B     NOPN26                  BRANCH
BSAM     EQU   *
         IC    RE,DCBNCP               GET NUMBER OF CHANNEL PROGRAMS
         LTR   RE,RE                   HAS NUMBER BEEN SPECIFIED
         BNZ   NOPN26                  YES, BRANCH
         LA    RE,ONE                  SUPPLY ONE IOB
         STC   RE,DCBNCP               SAVE NO. OF BUFFERS SUPPLIED
NOPN26   EQU   *
         TM    DCBFUNC,PRINTW          PRINT BIT ON
         BZ    NOPN27                  NO, BR
         TM    DCBFUNC,PRINTX          3525 PRINTER BIT ON
         BO    NOPN30                  YES, BR
         B     NOPN28                  BRANCH
NOPN27   EQU   *
         CLI   DCBFUNC,INTRPRET        INTERPRET FILE
         BE    NOPN30                  YES, BRANCH
         B     NOPN29                  OTHERWISE, CK FOR OTHER CASES
NOPN28   EQU   *
         CLI   DCBFUNC,PRINTW          PRINT ONLY FILE
         BE    NOPN30                  YES, BR
NOPN29   EQU   *
         TM    DCBCIND2,QSAM           QSAM DATA SET
         BZ    BSAM1                   NO, BRANCH FOR BSAM
         LA    RE,ONE                  SUPPLY ONE IOB
         STC   RE,DCBBUFNO             STORE BUFNO IN DCB
         B     NOPN30                  BRANCH
BSAM1    EQU   *
         LA    RE,ONE                  SUPPLY ONE IOB
         STC   RE,DCBNCP               STORE IN DCB NO. CHAN. PROGS.
NOPN30   EQU   *
         SLL   RF,3                    CHANGE FROM DBLWD TO BYTES
         LR    RUCB,RE                 SAVE NO. AS COUNTER
         MR    RE,RE                   COMPUTE SPACE REQUIRED
         LR    RB,RF                   SAVE FOR FUTURE USED
*  THE FOLLOWING SAVES THE AMOUNT OF CORE GETMAINED FOR THE    @YM06153
*  IOBS, IN THE FORCE CLOSE AUDIT TRAIL FOR THE FORCE CLOSE    @YM06153
*  EXECUTOR.                                                   @YM06153
**                                                                   **
         ST    RF,DXATEXC2             SAVE IOB LENGTH         @YM06153
*                                                                Y02898
         MODESET KEYADDR=DXUKEY,WORKREG=15  USER KEY           @YM05576
*                                                                Y02898
         GETMAIN R,LV=(RF),SP=250      GET CORE FOR IOB'S      @YM06153
**                                                                   **
*                                                                     *
         LR    RJ,RB                   RESTORE LENGTH TO CLEAR
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         ST    RF,DCBIOBA              SAVE FIRST IOB ADDRESS
         OI    FCAOPEN,FCAOIOB         INDIC IOBS CAN BE FREED @YM06153
         BCTR  RJ,RE                   REDUCE AMOUNT BY ONE
         LA    RC,D255                 GET MAX AMT BE CLEARED  @YM06153
         MODESET KEYADDR=DXUKEY,WORKREG=12 USER KEY            @YM06153
COMPARE  EQU   *
         CR    RJ,RC                   IS AMT TO CLEAR GT 255  @YM06153
         BC    12,ONECLEAR             NO,
         EX    RC,CLEAR1               CLEAR 256 BYTES         @YM06153
*
         SR    RJ,RC                   AMT CLEARED - 255       @YM06153
         BCTR  RJ,RE                   SUBTRACT ONE MORE BYTE
         LA    RF,256(RF)              UPDATE AREA ADDRESS
         B     COMPARE                 TRYN AGAIN
*
CLEAR1   XC    Z0(ONE,RF),Z0(RF)       CLEAR INSTRUCTION
*
ONECLEAR EQU   *
         EX    RJ,CLEAR1               CLEARS LESS THAN 256
*
***********************************************************************
*
         L     RB,DCBIOBA              GET IOB ADDRESS
         LR    RC,RB                   SET UP WORK REGISTERS
         LR    RD,RB
NOPN31   EQU   *
         LTR   RUCB,RUCB               HAVE ALL IOB'S BEEN GENERATED
         BNZ   NOPN33                  NO. BRANCH
*
         L     RB,DCBIOBA              GET FIRST IOB ADDRESS
         ST    RB,0(RD)                LINK FIRST IOB TO LAST IOB
         OI    0(RB),FIRSTIOB          SET INDICATOR
         B     NOPN61                  BRANCH
*
NOPN33   EQU   *
***********************************************************************
*
**             LINK  IOB'S  TOGETHER
*
***********************************************************************
*
         ST    RB,0(RD)                LINK THIS IOB TO LAST IOB
         LR    RD,RB                   UPDATE WORK REGISTER
         LA    RB,QFOUR(RB)            POINT TO ECB
         OI    0(RB),SUCCFUL           SET ECB COMPLETE WITHOUT ERROR
         ST    RB,D12(RD)              STORE ECB IN POINTER
         LA    RC,D20(RB)              PT TO CHAN PROG START ADDR
*
         LA    RB,D16(RC)              POINT TO CHANNEL PROGRAM
         ST    RB,Z0(RC)               PUT CHAN PROG ADDR IN IOB
         MVC   QFOUR(QFOUR,RC),DXUDCBAD PUT DCB ADDRESS IN IOB   Y02898
*                                                                Y02898
         MVI   D13(RC),ONE             STORE INCREMENT AMOUNT
         LR    RC,RB                   UPDATE WORK REGISTER
*
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         TM    DCBCIND2,QSAM           IS THIS A QSAM DCB
         BZ    NOPN37                  NO, BRANCH
         TM    DCBRECFM,UNDFIND        UNDEFINED FORMAT
         BNO   NOPN36                  NO, BRANCH
         TM    DCBRECFM,FIXED           FIXED FORMAT
         BZ    NOPN36                  NO, BRANCH
         MVC   DCBBLKSI(TWO),DCBLRECL  REDUCE BLK SIZE TO LOG SIZE
NOPN36   EQU   *
         NI    DCBRECFM,BLKBITOF       TURN OFF BOLCKED BIT IF ON
NOPN37   EQU   *
         TM    DCBRECFM,ASCII          ASCII CONTROL CHAR. USED
         BZ    NOTASA                  NO,BRANCH
         MVI   DCBCNTRL+THREE,QFOUR    MOVE ID
         B     AROUND                  BRANCH
NOTASA   EQU   *
         MVI   DCBCNTRL+THREE,QTHREE   MOVE ID
AROUND   EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=15                     @YM05576
         OI    D08(RD),CC              SET CC FLAG ON IN IOB
*
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         MVI   DCBWCPO,X28             SET WRITE CHAN PROG OFFSET
         MVC   DCBWCPL(THREE),DCBWCPO  SET WRITE CHAR PROG LGTH
***********************************************************************
*
**             BUILD CCW'S FOR IOB
*
***********************************************************************
         CLI   DCBFUNC,READ            READ ONLY FILE
         BE    NOPN52                  YES, BR
         CLI   DCBFUNC,NOFUNC          IS THERE ANY DCB FUNC= PARAMETER
         BE    NOPN52                  NO, BRANCH
         TM    DCBFUNC,PRTONLY         PRINT ONLY DATA SET
         BM    NOPN40                  NO, BR
***********************************************************************
*
**             BUILD CCW'S FOR PRINT ONLY FILE
*
***********************************************************************
         MODESET KEYADDR=DXUKEY,WORKREG=15    USER KEY         @YM05576
         MVI   Z0(RB),FDSS             SET FEED, SS AND IN CCW OP CODE
         OI    QFOUR(RB),SLICC         SET SLI AND CMD CHAIN FLAGS ON
         ST    RB,D24(RD)              STORE CCW PTR IN IOB
         B     NOPN49                  BRANCH
NOPN40   EQU   *
         CLI   DCBFUNC,INTRPRET        IS THIS AN INTERPRET FILE
         BNE   NOPN40A                 BRANCH IF NOT INTERPRET FILE
***********************************************************************
*
**             BUILD CCW'S FOR INTERPRET FILE
*
***********************************************************************
         MODESET KEYADDR=DXUKEY,WORKREG=15     USER KEY        @YM05576
         MVI   Z0(RB),NOP              SET NOP CMD. IN CCW
         OI    QFOUR(RB),CC            SET CMD CHAIN FLAG IN CCW
         MVI   D07(RB),ONE             SET BYTE COUNT OF ONE
         ST    RB,D24(RD)              STORE CCW PTS IN IOB
         LA    RB,D08(RB)              INCREMENT CCW PTR BY 8
         MVI   Z0(RB),WRFDSS           SET WR,FD,SS CMDS IN CCW OP
         OI    QFOUR(RB),SLICC         SET SLI AND CMD CHAIN FLAGS ON
         B     NOPN49                  BRANCH
NOPN40A  EQU   *
         TM    DCBFUNC,NOTRDPCH        IS ANYTHING SPEC OTHER THAN RP
         BM    NOPN51                  YES, BRANCH
         TM    DISPSN(RPARC),OUTP
         BNO   NOPN43                  NO, BR
OUTPUT   EQU   *
***********************************************************************
*
**             BUILD CCW'S FOR OUTPUT PORTION OF ASSOCIATED DATA SET
*
***********************************************************************
         MODESET KEYADDR=DXUKEY,WORKREG=15    USER KEY         @YM05576
         MVI   Z0(RB),NOP              SET NOP CMD IN CCW
         OI    QFOUR(RB),CC            SET CMD CHAIN FLAG IN CCW
         MVI   D07(RB),ONE             SET BYTE COUNT OF ONE
         LA    RB,D08(RB)              POINT TO NEXT CCW
         TM    DCBMODE,DATA2           IS DATA MODE 2 SPECIFIED
         BNO   NOPN42                  NO, BRANCH
         OI    0(RB),MODE2             NO, SET MODE 2 MODIFIER IN CCW
NOPN42   EQU   *
         OI    0(RB),WRFDSS            SET WR,FD,SS CMD IN CCW
         OI    QFOUR(RB),SLI           SET SLI FLAG ON IN CCW
         TM    DCBSTACK,POCKET2        IS STACKER 2 SPECIFIED
         BNO   NOPN45                  NO, BRANCH
         OI    Z0(RB),STACK2           TURN ON SS 2 INDICATOR
         B     NOPN45                  BRANCH
*
NOPN43   EQU   *
***********************************************************************
*
**             SET UP INPUT PORTION OF CCW FOR ASSOCIATED DATA SET
*
***********************************************************************
         MODESET KEYADDR=DXUKEY,WORKREG=15      USER KEY       @YM05576
         TM    DCBMODE,RCEMASK         IS RCE SPECIFIED
         BNO   NOPN43A                 NO, BRANCH
         OI    0(RB),OMRRCE            TURN ON OMR OR RCE FLAG
NOPN43A  EQU   *
*
         TM    DCBMODE,DATA2           IS DATA MODE 2 SPECIFIED
         BNO   NOPN44                  NO, BRANCH
         OI    0(RB),MODE2
NOPN44   EQU   *
         OI    0(RB),READONLY          SET READ ONLY CMD IN CCW
         OI    QFOUR(RB),SLI           TURN ON SLI FLAG
NOPN45   EQU   *
         NI    D08(RD),CCOFF           TURN CMD CHAIN FLAG OFF IN IOB
*
*
*
         TM    DCBCIND2,QSAM           IS THIS A QSAM DCB
         BO    NOPN48                  YES, BRANCH
*
         LA    RB,D08(RB)              UPDATE CHANNEL PROG. BY 1 CCW
*
NOPN48   EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM05576
NOPN480  EQU   *                                               @YM06152
         LA    RB,D08(RB)              UPDATE CHANNEL PROG BY 1 CCW
         MVI   D37(RD),Z0              CLEAR INCREMENT AMOUNT
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         MVI   DCBWCPL,TWO             CHAN PROG IN DOUBLEWRDS @YM05576
         CLI   DCBFUNC,INTRPRET        INTERPRET FILE
         BNE   NOPN48A                 NO, BRANCH
         MVI   DCBWCPL,THREE           CHAN PROG IN DOUBLEWORDS
NOPN48A  EQU   *
         BCTR  RUCB,RE                 DECREMENT COUNTER
         SR    RC,RC                   CLEAR RC                @ZA01875
         IC    RC,DCBIOBL              IOB DBL WD LENGTH       @ZA01875
         SLL   RC,THREE                IOB BYTE LENGTH         @ZA01875
         LA    RB,Z0(RC,RD)            INCREMENT TO NEXT JOB   @ZA01875
         MODESET KEYADDR=DXUKEY,WORKREG=15  USER KEY   @YM06152
         B     NOPN31                  GO BACK
*
NOPN49   EQU   *
*
         TM    DCBSTACK,POCKET2        IS STACKER 2 SPECIFIED
         BNO   NOPN50                  NO, BRANCH
         OI    0(RB),STACK2            TURN ON STACKER 2 BIT
NOPN50   EQU   *
         LA    RB,D08(RB)              INCRE CCW PTR BY 8
         MVI   Z0(RB),PRT              STORE PRINT CMD BYTE
         OI    QFOUR(RB),SLICC         SET SLI AND CMD CHAIN FLAGS ON
         TM    DCBFUNC,PRTONLY         IS THIS A PRINT ONLY DATA SET
         BM    NOPN50A                 NO, BRANCH
         NI    QFOUR(RB),CCOFF         TURN OFF CC FLAG IN CCW, IF ON
NOPN50A  EQU   *
         CLI   DCBFUNC,INTRPRET        IS THIS AN INTERPRET FILE
         BNE   NOPN48                  NO, BRANCH
         LA    RB,D08(RB)              POINT TO NEXT CCW
         MVI   Z0(RB),PRT              SET PRINT CMD IN CCW
         OI    QFOUR(RB),SLI           TURN ON SLI FLAG
         LA    RB,PRINTBUF(RB)         POINT TO NEXT IOB PAST PRINT BUF
         B     NOPN48                  BRNACH
*
NOPN51   EQU   *
*
         TM    DCBFUNC,INTORPCH        INTRP OR PH FILE OF ANY KIND
         BM    NOPN58                  YES, BRANCH
         TM    DCBFUNC,READPRT         IS THIS A RD/PRT ASSOC. DATA SET
         BNO   NOPN58                  NO, BRANCH
*
NOPN52   EQU   *
*
         MODESET KEYADDR=DXUKEY,WORKREG=15    USER KEY         @YM05576
         TM    DISPSN(RPARC),OUTP      OUTPUT FILE
         BO    NOPN57                  YES, BRANCH
***********************************************************************
*
**             BUILD CCW'S FOR READ FILES WITH CNTRL
*
***********************************************************************
         TM    DCBMACRF,CNTRLB         CNTRL SPECIFIED FOR INPUT
         BNO   NOPN53                  NO, BRANCH
         MVI   Z0(RB),NOP              SET NOP CMD IN CCW
         OI    QFOUR(RB),CC            SET CMD CHAIN FLAG ON IN CCW
         MVI   D07(RB),ONE             SET BYTE COUNT OF 1
         LA    RB,D08(RB)              POINT TO NEXT CCW
         MVI   Z0(RB),READONLY         SET A READ ONLY CMD
         OI    QFOUR(RB),SLI           TURN ON SLI FLAG IN CCW
         ST    RB,D24(RD)              STORE CHAN PROG START ADDR
         MODESET EXTKEY=DATAMGT    DATA MGMT KEY               @YM06152
         MVI   DCBOFFSR,FORTYATE       SET RD CCW OFFSET ACCORDINGLY
         MODESET KEYADDR=DXUKEY,WORKREG=15  USER KEY           @YM06152
         B     NOPN54                  BRANCH
*
NOPN53   EQU   *
***********************************************************************
*
**             BUILD CCW'S FOR READ FILES WITHOUT CNTRL
*
***********************************************************************
*
         MVI   0(RB),RDFDSS            SET RD,FD,SS CMD IN CCW
         OI    QFOUR(RB),SLI           TURN ON SLI FLAG
         NI    D08(RD),CCOFF           TURN OFF CMD CHAIN FLAG, IF ON
         ST    RB,D24(RD)              STORE CHAN PROG  START ADDR
NOPN54   EQU   *
*
         TM    DCBMODE,DATA2           IS DATA MODE 2 SPECIFIED
         BNO   NOPN55                  NO, BRANCH
         OI    0(RB),MODE2             SET MODE 2 BIT ON IN CCW OP CODE
NOPN55   EQU   *
         TM    DCBSTACK,POCKET2        IS STACKER 2 SPECIFIED
         BNO   NOPN55A                 NO, BRANCH
         OI    0(RB),STACK2            TURN ON STACKER 2 BIT IN OP CIDE
NOPN55A  EQU   *
         TM    DCBMODE,OMR             IS OMR SPECIFIED FOR THIS DCB
         BO    NOPN56                  YES, BRANCH
         TM    DCBMODE,RCE             IS RCE SPECIFIED
         BNO   NOPN48                  NO, BRANCH
NOPN56   EQU   *
         OI    0(RB),OMRCEFLG          TURN OMR/RCE FLAG ON IN CCW OP
         B     NOPN48                  BRANCH
NOPN57   EQU   *
         MODESET KEYADDR=DXUKEY,WORKREG=15  SET USER KEY       @YM06152
         MVI   0(RB),NOP               SET NOP CMD. IN CCW
         OI    QFOUR(RB),CC            SET CMD CHAIN IN CCW
         MVI   D07(RB),ONE             SET BYTE COUNT OF ONE
         LA    RB,D08(RB)              POINT TO NEXT CCW
         NI    D08(RD),CCOFF           TURN OFF CC FLAG IF ON
         MVI   Z0(RB),PRT              SET PRT CMD IN CCW OP CODE
         OI    QFOUR(RB),SLI           TURN ON SLI FLAG IN CCW
         B     NOPN480                 BRANCH                  @YM06152
*
NOPN58   EQU   *
         TM    DCBFUNC,XC9             IS THIS A PRT FILE OF ANY KIND
         BM    NOPN59                  NO, BR ANCH
         TM    DCBFUNC,PHPRT           PH/PRT ASSOCIATED DATA SET
         BNO   NOPN59                  NO, BRANCH
         B     NOPN60                  BRANCH
*
NOPN59   EQU   *
*
*        RD/PCH/PRT ASSOCIATED DATA SET ASSUMED
*
         TM    DISPSN(RPARC),OUTP      IS THIS AN OUTPUT FILE
         BNO   NOPN43                  NO,BRANCH
NOPN60   EQU   *
         TM    DCBFUNC,PRINTX          PRINTER DEVICE SPECIFIED
         BO    NOPN57                  YES, BRANCH
         B     OUTPUT                  BRANCH TO OUTPUT
*
NOPN61   EQU   *
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         MVC   Z0(FIVE,RWTGC),IGG0197Q SET ID OF NEXT EXECUTOR
*                                                                     *
**                                                                   **
***********************************************************************
**                                                                   **
*                                                                     *
RELOOP   EQU   *
         LA    RWTGC,WGOFF(Z0,RWTGC)   INCRE CURR WTG ENTRY
         LA    RPARC,PLOFF(Z0,RPARC)   INCRE CURR DCB ENTRY PTR
         CLC   Z0(TWO,RWTGC),AMIDCNST  IS THIS ROUTINE NEEDED AGAIN
         BCR   RWTGC,RBASE             BAKC TO OPEN CONTROL ROUTINE
*
         CLC   Z0(TWO,RWTGC),OPIDCNST  END OF TABLE
         BC    7,RELOOP                NO, CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(Z0,RWTG)    REINITIALIZE WTG LIST PTR
ZCHEK    CLI   0(RWTGC),X'00'          IS ENTRY COMPLETE
         BC    7,TCTLRTN               NO, TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(Z0,RWTGC)   GET NEXT ENTRY
         LA    RPARC,PLOFF(Z0,RPARC)   GET NEXT ENTRY
         B     ZCHEK                   ZERO CHECK
*
TCTLRTN  EQU   *
         MVC   SIX(TWO,RWTG),Z0(RWTGC) STORE ID IN WTG TABLE
         MVC   D14(THREE,RWTG),TWO(RWTGC) MOVE TTR INTO TABLE
*
         LA    RJ,DXCCW12              SET UP FOR XCTL
**
         XCTL  DE=(RWTG),SF=(E,(15))
**
*
***********************************************************************
*
WAOFF    EQU   32
PLOFF    EQU   4                       OFFSET OF DCB ENTRIES
WGOFF    EQU   8                       OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'                   ID
AMIDCNST DC    C'7P'                   ID
         DS    0F                      ALIGN ON A FULLWORD BOUNDARY
*
***********************************************************************
*
*
*
ZAPSZAPS DC    8C'ZAPSZAPS'            WORK AREA USED BY OPEN    Y02898
IGG0197Q DC    C'7Q    '               IDTTRL
*
*
         DCBD  DSORG=PS
         IEZDEB
         IECDSECS MAIN,EXPAND=YES                                Y02898
         IKJTCB                                                  Y02898
         IHARB                                                   Y02898
FORCORE  DSECT                                                 @YM06153
         IHAFCAUD  ORG=YES                                     @YM06153
         END
