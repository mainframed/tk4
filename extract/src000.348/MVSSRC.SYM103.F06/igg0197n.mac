         START
         TITLE 'IGGO197N FUNC= PARM VERIF AND DEB LOOK AND HOOK UP'
IGG0197N CSECT
***********************************************************************
*         VS2037 CHANGES
*
* D634000-635600,644000,684100-685700                          @YM06152
* D012000-016000,321000,330000-360000,396000,404000-410000,    @YM05576
* D428000-432000,440000-444000,635200,684400-685100,917000,    @YM05576
* D928000-934000                                               @YM05576
* C026000,030000,314000,418600,434000,446000,484600,504600,    @YM05576
* C524600,635600,684800,685100,924000,930000,942000            @YM05576
* A 380300,381300,476500,477300                                @YM05576
* C 38400000                                                   @ZA10075
* A 38400002                                                   @ZA10075
*C195500,199500,201000                                         @ZA00000
* MODULE NAME = IGG0197N
*
* DESCRIPTIVE NAME= IGG0197N-OPEN FOR 3505/3525
*
*STATUS CHANGE LEVEL-020
*
*FUNCTION  THIS EXECUTOR IS ENTERED FOR SAM BSAM AND QSAM USERS OF THE
*          3505 OR 3525 DURING OPEN-STAGE2 FOR VERIFICATION OF FUNC=
*          AND RELATED DCB PARAMETERS. ALSO DEB'S FOR 3525 ASSOCIATED
*          DATA SETS ARE HOOKED VIA AN ADDRESS FIELD TO IT'S
*          ASSOCIATED DCB'S.
*
*  THERE ARE NOW TWO COPIES OF EACH DCB. ONE IS THE REAL, OR   @YM05576
*  USER DCB, AND ONE IS THE COPY, OR DATA MANAGEMENT DCB. THE  @YM05576
*  DCB ADDRESS THAT IS PLACED IN THE DEB MUST BE THE USER DCB  @YM05576
*  ADDRESS.                                                    @YM05576
*                                                              @YM05576
*     OPERATION=
*          THE FUNC= PARAMETER IS CHECKED FOR A VALID FILE TYPE OR
*          A VALID COMBINATION. THIS PARAMETER IS ALSO CHECKED IN
*          REFERENCE TO THE DCB MACRF PARAMETER TO INSURE COMPATIBLE
*          ACCESS METHODS FOR ASSOCIATE DATA SETS AND TO INSURE STACKER
*          SELECTION VIA CNTRL IS NOT BEING ATTEMPTED FOR AN INPUT
*          FILE OF AN ASSOCIATED DATA SET.
*
* NOTES= PATCH-LABEL = ZAPSZAPS
*
* MODULE TYPE= PROCESSOR-ASSEM
*              ATTRIBUTES-REENTRANT
*
* ENTRY POINT - IGG0197N
*              ENTERED FROM IGG0193I VIA XCTL
*
* INPUT     DCB ADDRESS
*          WORK AREA ADDRESS
*          WHERE TO GO TABLE
*          PARAMETER LIST
*          CURRENT ENTRY IN WHERE TO GO TABLE
*          CURRENT PARAMETER (DCB)
*
*          THE REFERENCED DEB FIELDS ARE AS FOLLOWS
* * * * DEB -- UNIT RECORD AND MAGNETIC TAPE SECTION
*
*   +36 DEBRDCB    FULLWORD CONTAINING DEBRDCBA POINTER
*   +37 DEBRDCBA   ADDRESS OF DCB FOR THE READ ASSOCIATED DATA SET
*   +40 DEBPDCB    FULLWORD CONTAINING DEBPDCBA POINTER
*   +41 DEBPDCBA   ADDRESS OF DCB FOR THE PUNCH ASSOCIATED DATA SET
*   +44 DEBWDCB    FULLWORD CONTAINING DEBWDCBA POINTER
*   +45 DEBWDCBA   ADDRESS OF DCB FOR THE PRINT ASSOCIATED DATA SET
*
*
*EXITS --- NORMAL
*          1 IF NO DEVICE ASSOCIATED DATA SET AND NO FEATURES (OMR,RCE
*            OR PRINT) SPECIFIED FOR THE 3505 OR 3525 EXIT WILL BE
*            TO IGG0191G
*
*          2.IF A FEATURE OR ASSOCIATED DATA SETS ARE SPECIFIED, AS
*            STATED ABOVE,EXIT WILL BE TO IGG0197P.
*     OUTPUT=
*          THE ADDRESS OF ANY OPENED ASSOCIATED DATA IS PLACED IN THE
*          CURRENT DCB'S DEB ALSO THE ADDRESS OF THE CURRENT DCB IS
*          PLACED IN THE DEB OR DEB'S OF ANY OTHER ASSOCIATED DATA SET
*          WHICH HAS BEEN OPENED
*
* EXIT - ERROR=        004 ABEND,REG 15 WILL HAVE A RETURN CODE OF
*                      1,2,3 OR 4 WITH THE FOLLOWING MEANINGS.
*
*                      1 INDICATES INVALID DCBFUNC PARAMETERS
*                      2 INDICATES INVALID FUNC/CNTRL COMBINATION
*                      3 INDICATES CONFLICTING ASSOCIATED DATA SET
*                        ACCESS METHODS
*                      4 INDICATES INVALID DCB FOR A 3505 OR 3525
*
* EXTERNAL REFERENCES=
*       DATA AREA- IECDSECS(O/C/E WORK AREA)
*       CONTROL BLOCKS= DCB-U,DEB-M
*
*TABLES=  WHERE TO GO TABLE
*
* MACROS=MODESET,SETLOCK,XCTL,WTO
*     SERIALIZATION= DEB(LOCAL LOCK)
*
* CHANGE ACTIVITY= YM06152,YM05576
*
* MESSAGE= IEC952I  004-0 CONFLICTING/INVALID DCB FUNC OR
*                   RELATED PARAMETERS
*
***********************************************************************
*                             REGISTER  CONVENTIONS                   *
***********************************************************************
RDCB     EQU   2                       DCB REGISTER
RBASE    EQU   3                       BASE REGISTER
RCORE    EQU   4                       WORK AREA REGISTER
RPAR     EQU   5                       TOP OF PARAMTER LIST
RWTG     EQU   6                       TOP OF WTG TABLE
RPARC    EQU   7                       CURRENT PARAMETER
RWTGC    EQU   8                       CURRENT TRANS LOAD
RTCB     EQU   9                       ADDRESS OF CURRENT TCB    Y02898
RUCB     EQU   10                      USED HERE AS WORK REGISTER
RDEB     EQU   11                      DEB ADDRESS
RB       EQU   12                      WORK REG1
RC       EQU   13                      WORK REG2
RD       EQU   14                      WORK REG3
RJ       EQU   15                      WORK REG4
RE       EQU   0                       WORK REG5
RF       EQU   1                       WORK REG6
*
*
ZERO     EQU   X'00'
ONE      EQU   X'01'
TWO      EQU   X'02'
THRE     EQU   X'03'
FOUR     EQU   X'04'
FIVE     EQU   X'05'                                           @YM05576
D40      EQU   40
D74      EQU   74
SVC35    EQU   35
D5       EQU   5
D6       EQU   6
D14      EQU   14
D8       EQU   8                                               @YM05576
D32      EQU   32                                              @YM05576
ENDTAB   EQU   X'80'                                           @YM05576
CNTRLOPT EQU   X'02'
GETBIT   EQU   X'40'
PUTBIT   EQU   X'40'
GETRD    EQU   X'60'
PUTWRT   EQU   X'60'
R3505    EQU   X'46'
RCE      EQU   X'10'
OMR      EQU   X'20'
INPUT    EQU   X'00'
OUTPUT   EQU   X'07'                    MASK FOR OUTPUT OR OUTIN
FRTY8    EQU   X'30'
TWENTY   EQU   X'14'
INTRPRET EQU   X'80'
READ     EQU   X'40'
READWX   EQU   X'54'
READWXT  EQU   X'56'
READWT   EQU   X'52'
READW    EQU   X'50'
PUNCH    EQU   X'20'
PUNCHW   EQU   X'30'
PUNCHWX  EQU   X'34'
PUNCHWXT EQU   X'36'
PRINTX   EQU   X'04'
PRINTW   EQU   X'10'
PRINTWX  EQU   X'14'
PRINTWT  EQU   X'12'
PRINTWXT EQU   X'16'
RDPUNCH  EQU   X'60'
RDPHDPI  EQU   X'68'
RDPHW    EQU   X'70'
RDPHWX   EQU   X'74'
RDPHWXT  EQU   X'76'
RDPHWDPI EQU   X'78'
*
SUFIXCOD EQU   26                       WTO SUFFIX ERROR CODE OFFSET
COMP1    EQU   X'F1'
COMP2    EQU   X'F2'
COMP3    EQU   X'F3'
COMP4    EQU   X'F4'
**
***
**
*
         BALR  RBASE,RE                PUT BASE ADDR IN BASE REG
         USING *,RBASE                                         @YM05576
         USING FORCORE,RCORE
         USING IHADCB,RDCB
         USING DEBBASIC,RDEB
         USING WTG,RWTG                                        @YM05576
*
         MODID BR=YES                                          @YM05576
*
FUNC1000 EQU   *
         L     RDCB,ZERO(RPARC)        GET DCB ADDRESS
         L     RCORE,FOUR(RWTGC)       GET DCB WORK AREA ADDRESS
         L     RDEB,DCBDEBAD           GET ASSOCIATED DEB ADDRESSY02898
         CLI   DCBFUNC,ZERO            FUNC PARAMETER OF DCB USED
         BE    FUNC4000                NO, BRANCH
         CLI   DCBDEVT,R3505           IS THIS A 3505 CARD READER
         BNE   FUNC1100                NO, BRANCH
         CLI   DCBFUNC,READ            IS FUNC= READ ONLY FILE
         BNE   FUNC3600                NO,BRANCH
         TM    DCBMODE,OMR             OPTICAL MARK READ SPECIFIED
         BO    FUNC3800                YES, BRANCH
         TM    DCBMODE,RCE             READ COLUMN ELIMINATE SPECIFIED
         BO    FUNC3800                YES,BRANCH
FUNC1100 EQU   *
         CLI   DCBFUNC,INTRPRET        IS THIS AN INTERPRET FILE
         BE    FUNC3800                 YES, BRANCH TO LOAD ID OF '7P'
         B     FUNC3300                OTHERWISE, CK FOR OTHER FUNCTION
FUNC1200 EQU   *
*
*    VERIFY VALID USE OF CNTRL ON INPUT FILE OF AN ASSOCIATED DATA SET
*
         TM    DEBOPATB,OUTPUT          IS THIS AN INPUT DATA SET
         BO    FUNC1300                 NO, BRANCH
         TM    DCBMACRF,CNTRLOPT       CHECK FOR INVALID CNTRL
         BO    FUNC3900                YES, BRANCH TO PRINT ERROR MSG.
*
FUNC1300 EQU   *
         STM   RDEB,RD,DXREGB          SAVE REGISTERS 11_14      Y02898
         MODESET EXTKEY=ZERO           SET KEY 0               @YM05576
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02898X
               RELATED=(DEB,IGG0197N(FUNC1800)) LOCK CPU'S       Y02898
*                                      CHAIN SO THAT A CHECK FOR Y02898
*                                      ASSOCIATED DATA SET CAN   Y02898
*                                      BE MADE                   Y02898
         MODESET EXTKEY=DATAMGT        SET DATA MANAGEMENT KEY @YM05576
         LM    RDEB,RD,DXREGB          RESTORE REGISTERS 11_14   Y02898
         XC    DXCCW2(32),DXCCW2       CLEAR 32 OF 48 BYTES    @ZA10075
         XC    DXCCW6+1(15),DXCCW6+1   CLEAR LAST 15 BYTES     @ZA10075
         SR    RB,RB                   CLEAR WORK REGISTERS
         SR    RC,RC
         SR    RD,RD
         L     RUCB,DEBSUCBA           GET DEB "IDENTIFIER"    @YM06152
         L     RDCB,DXUDCBAD           GET ACTUAL ADDRESS OF DCB Y02898
*                                      TO BE OPENED              Y02898
         LA    RDCB,ZERO(RDCB)         CLEAR HIGH ORDER BYTE   @YM05576
         LA    RUCB,0(RUCB)                 * * *              @YM06152
         MVC   DXCCW8+ONE(THRE),DXUDCBAD+ONE MOVE IN USER DCB  @YM06152
         ST    RDCB,DXCCW2              SAVE CURRENT DM DCB    @YM06152
FUNC1400 EQU   *
         TM    DEBOPATB,OUTPUT         IS THIS AN INPUT DCB
         BO    FUNC1500                NO,BRANCH
         MVC   DXCCW4+ONE(THRE),DXCCW8+ONE  GET READ DCB ADDR  @YM05576
         ST    RDEB,DXCCW4+FOUR        SAVE CORRESPONDING DEB  @YM06152
         B     FUNC1700                BR TO GET POINTER TO NEXT DEB
FUNC1500 EQU   *
         TM    DEBOPATB,OUTPUT         IS THIS AN OUTPUT DCB
         BNO   FUNC1700                NO, BRANCH
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM05576
*                                      KEY                       Y02898
         TM    DCBFUNC,PUNCH           PUNCH DCB
         BNO   FUNC1600                NO, PRINT ASSUMED...,BRANCH
         TM    DCBFUNC,PRINTX          PRINTER BIT ON IN DCB FUNC PARM
         BO    FUNC1600                YES, BRANCH
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         MVC   DXCCW5+ONE(THRE),DXCCW8+ONE SAVE PUNCH DCB PTR  @YM06152
         ST    RDEB,DXCCW5+FOUR        SAVE CORRESPONDING DEB  @YM06152
         B     FUNC1700                BRANCH
FUNC1600 EQU   *
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         MVC   DXCCW6+ONE(THRE),DXCCW8+ONE SAVE PRINT DCB PTR  @YM06152
         ST    RDEB,DXCCW6+FOUR        SAVE CORRESPONDING DEB  @YM06152
FUNC1700 EQU   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*        CHANGE THE DEB AND DCB ADDRESSES SO THAT THE NEXT DEB IN THE
*        DEB QUEUE IS BEING POINTED TO AND ITS RELATED DCB IS
*        BEING POINTED TO.  THESE TWO ADDRESSES WILL BE CHANGED
*        CONTINUOUSLY UNTIL ALL OF THE DEB'S IN THE DEB QUEUE HAVE
*        BEEN INTERROGATED.
*
         CLC   DEBDEBB(THRE),DXCCW3    ANOTHER DEB IN DEB QUEUE
         BE    FUNC1800                NO, BRANCH
         L     RDEB,DEBDEBAD           YES, GET ADDRESS OF NEXT DEB
         L     RDCB,DEBDCBAD           GET THIS DCB ADDRESS
         MVC   DXCCW7+ONE(THRE),DEBSUCBA+ONE  SAVE UCB ADDR.   @YM05576
         CL    RUCB,DXCCW7             DO UCB PTRS MATCH       @YM05576
         BNE   FUNC1700                NO, BRANCH              @YM05576
         LA    RDCB,ZERO(RDCB)         CLEAR HIGH ORDER BYTE   @YM05576
         LR    RB,RPAR                 GET DCB PARM LIST PTR   @YM05576
         LR    RC,RWTG                 GET WTG TABLE PTR       @YM05576
         LA    RC,D32(RC)              INDEX PAST WTG HEADER   @YM05576
FUNC1725 EQU   *                                               @YM05576
         L     RD,ZERO(RB)             GET DCB PTR FROM PLIST  @YM05576
         LA    RD,ZERO(RD)             ZERO HIGH ORDER BYTE    @YM05576
         CLR   RD,RDCB                 DOES PARM LIST DCB PTR  @YM05576
*                                      EQUAL DEB DCB PTR       @YM05576
         BE    FUNC1775                YES. MUST BE DATA       @YM05576
*                                      MANAGEMENT'S DCB        @YM05576
         TM    ZERO(RB),ENDTAB         IS IT END OF PARM LIST  @YM05576
         BO    FUNC1750                YES. MUST BE USER DCB   @YM05576
         LA    RB,FOUR(RB)             NO. GET NEXT DCB PTR    @YM05576
         LA    RC,D8(RC)               GET NEXT WTG TAB ENTRY  @YM05576
         B     FUNC1725                GO COMPARE NEXT DCB     @YM05576
FUNC1750 EQU   *                                               @YM05576
         ST    RDCB,DXCCW8             SAVE DEB DCB PTR (USER) @YM05576
         B     FUNC1400                BRANCH
FUNC1775 EQU   *                                               @YM05576
         L     RC,FOUR(RC)             GET FORECORE ADDR       @YM05576
         USING FORCORE,RC              ESTAB ADDRESSABILITY    @YM05576
         L     RD,DXUDCBAD             GET USER DCB PTR        @YM05576
         DROP  RC                      REESTAB RCORE AS BASE   @YM05576
         ST    RD,DXCCW8               SAVE USER DCB ADDR.     @YM05576
         B     FUNC1400                GO PROCESS ASSOC. D.S.  @YM05576
FUNC1800 EQU   *
         SR    RB,RB                   ZERO WORK REG           @YM05576
         SR    RC,RC                   ZERO WORK REG           @YM05576
         SR    RD,RD                   ZERO WORK REG           @YM05576
         STM   RDEB,RD,DXREGB          SAVE REGISTERS 11_14      Y02898
         MODESET EXTKEY=ZERO           SET KEY 0               @YM05576
         SETLOCK RELEASE,TYPE=LOCAL,                             Y02898X
               RELATED=(DEB,IGG0197N(FUNC1300)) UNLOCK CPU'S     Y02898
         MODESET EXTKEY=DATAMGT        SET DATA MANAGEMENT KEY @YM05576
         LM    RDEB,RD,DXREGB          RESTORE REGISTERS 11_14   Y02898
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
FUNC1850 CLC   DXCCW4(FOUR),DXCCW3     WAS A READ DCB FOUND
         BE    FUNC2000                NO,BRANCH
         L     RDCB,DXCCW4             GET READ DCB ADDR FOR DSECT USE
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM05576
*                                      KEY                       Y02898
         TM    DCBMACRF,GETBIT         GET BIT ON IN DCB
         BNO   FUNC1900                NO, BRANCH
         LA    RB,D40                  SET QSAM SWITCH ON
         B     FUNC2000                BRANCH
FUNC1900 EQU   *
         LA    RB,TWENTY               SET BSAM SWITCH ON
FUNC2000 EQU   *
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
FUNC2050 CLC   DXCCW5(FOUR),DXCCW3     WAS A PUNCH DCB ADDR RETAINED
         BE    FUNC2200                NO, BRANCH
         L     RDCB,DXCCW5             GET PUNCH DCB ADDRESS
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM05576
*                                      KEY                       Y02898
         TM    DCBMACRF+ONE,PUTBIT     PUT BIT ON IN DCB
         BNO   FUNC2100                NO, BRANCH
         LA    RC,D40                  SET QSAM SWITCH ON
         B     FUNC2200                BRANCH
FUNC2100 EQU   *
         LA    RC,TWENTY               SET BSAM SWITCH ON
FUNC2200 EQU   *
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         CLC   DXCCW6+1(3),DXCCW3      WAS A PRINT DCB ADDR
*                                      RETAINED                @ZA14966
         BE    FUNC2400                NO, BRANCH
         L     RDCB,DXCCW6             GET PRINT DCB ADDRESS
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM05576
*                                      KEY                       Y02898
         TM    DCBMACRF+ONE,PUTBIT     PUT BIT ON IN DCB
         BNO   FUNC2300                NO, BRANCH
         LA    RD,D40                  SET QSAM SWITCH ON
         B     FUNC2400                BRANCH
FUNC2300 EQU   *
         LA    RD,TWENTY               TURN ON BSAM SWITCH
FUNC2400 EQU   *
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO OPEN PROTECTY02898
*                                      KEY                       Y02898
         LTR   RB,RB                   WORK REG EQUAL ZERO
         BC    8,FUNC2700              YES, BRANCH
         LTR   RC,RC                   THIS SWITCH EQUAL TO ZERO
         BC    8,FUNC2600              YES, BRANCH
         CLR   RB,RC                   SAME ACC. MTHD USED FOR RD & PCH
         BE    FUNC2600                YES, BRANCH
         LA    RCORE,THRE              CONFLICTING ACCESS METHODS.
         L     RDCB,DXCCW2             GET ACTUAL ADDRESS OF DCB Y02898
*                                      TO BE OPENED              Y02898
FUNC2500 EQU   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*     COMPLETION CODE 004-1 IS FOR INVALID DCBFUNC PARAMETERS
*     COMPLETION CODE 004-2 IS FOR INVALID FUNC/CNTRL COMBINATION
*     COMPLETION CODE 004-3 IS FOR CONFLICTING ASSOCIATED DATA SET
*                           ACCESS METHODS
*     COMPLETION CODE 004-4 IS FOR AN INVALID DCB FOR A 3505 OR 3525
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LR    RD,RCORE                SAVE RETURN CODE
         L     RCORE,FOUR(RWTGC)       GET DCB WORKAREA ADDRESS
         LA    RF,MESSAGEA              GET ADDRESS OF WTO MESSAGEA
         MVC   MESSAGEA(D74),IECF03I   MOVE IN ERROR MESSAGE
         O     RD,SUFIXCOD(RF)         OR IN COMP CODE SUFFIX
         SVC   SVC35                   ISSUE WTO SVC
         LR    RJ,RD                   LOAD IN RETURN CODE
         B     ABEN                    GO TO ISSUE ABEND
FUNC2600 EQU   *
         LTR   RD,RD                   THIS SWITCH EQUAL TO ZERO
         BC    8,FUNC2900              YES, BRANCH
         CLR   RB,RD                   SAME ACC. MTHD FOR RD AND PRT
         BE    FUNC2900                YES, BRANCH
         B     FUNC2500                 NO PRINT IECF03I 004-3 @ZA00000
FUNC2700 EQU   *
         LTR   RC,RC                   THIS SWITCH ON
         BC    8,FUNC2800              NO, BRANCH
         LTR   RD,RD                    THIS SWITCH ON
         BC    8,FUNC2900              NO, BRANCH
         CLR   RC,RD                   SAME ACC. MTHD BEING USED
         BE    FUNC2900                YES, BRANCH
         B     FUNC2500                 NO PRINT IECF03I 004-3 @ZA00000
FUNC2800 EQU   *
         LTR   RD,RD                   THIS SWITCH EQUAL TO ZERO
         BE    FUNC2500                YES PRINT IECF03I 004-3 @ZA00000
FUNC2900 EQU   *
         CLC   DXCCW4(FOUR),DXCCW3     WAS A READ DCB FOUND    @YM06152
         BE    FUNC3100                NO, BRANCH
         L     RDCB,DXCCW4             PUT RD DCB ADDR IN DCB REGISTER
         L     RDEB,DXCCW4+FOUR        GET READ DCB DEB ADDR   @YM06152
FUNC3000 EQU   *
         MVC   DEBRDCBA(THRE),DXCCW4+ONE  PUT RD DCB ADDR IN DEB EXT.
         MVC   DEBPDCBA(THRE),DXCCW5+ONE  PUT PCH DCB ADDR IN DEB EXT.
         MVC   DEBWDCBA(THRE),DXCCW6+ONE  PUT PRT DCB ADDR IN DEB EXT.
FUNC3100 EQU   *
         CLC  DXCCW5(FOUR),DXCCW3      WAS A PCH DCB FOUND     @YM06152
         BE    FUNC3200                NO, BRANCH
         L     RDCB,DXCCW5             PUT PCH DCB ADDR IN DCB REG.
         L     RDEB,DXCCW5+FOUR        GET PCH DCB DEB ADDR    @YM06152
         LTR   RC,RC                   PUNCH DEB HOOK COMPLETE
         BNP   FUNC3200                YES, BRANCH
         SR    RC,RC                   ZERO OUT WORK REGISTER
         B     FUNC3000                BRANCH TO GET DCB ADDR
FUNC3200 EQU   *
         CLC   DXCCW6+1(3),DXCCW3      PRINT DCB FOUND         @ZA14966
         BE    FUNC4300                NO, BRANCH
         L     RDCB,DXCCW6             PUT PRT DCB ADDR IN DCB REG.
         L     RDEB,DXCCW6+FOUR        GET PRINT DCB DEB ADDR  @YM06152
         LTR   RD,RD                   PRINT DEB HOOK COMPLETE
         BNP   FUNC4300                YES, BRANCH
         SR    RD,RD                   ZERO OUT WORK REGISTER
         B     FUNC3000                BRANCH TO GET DCB ADDR
FUNC3300 EQU   *
         CLI   DCBFUNC,READ            IS FUNC PARM EQUAL TO READ ONLY
         BNE   FUNC3500                NO, BRANCH
         TM    DCBMODE,RCE             READ COLUMN ELIMINATE SPECIFIED
         BO    FUNC3800                YES, BRANCH
FUNC3400 EQU   *
         LA    RF,SOP5                 GET ID OF EXEC. IGG0191G
         B     XCTLGOGO                BRANCH TO XCT SUBROUTINE
*
** CHECK FOR TYPE OF DATA SET SPECIFIED
*
FUNC3500 EQU   *
         CLI   DCBFUNC,PUNCH           PUNCH ONLY DATA SET
         BE    FUNC3400                YES, BRANCH
         CLI   DCBFUNC,PRINTW          PRINT ONLY DATA SET
         BE    FUNC3800                YES, BRANCH
         CLI   DCBFUNC,PRINTWT         PRT W/ 2-LINE PRINT DATA SET
         BE    FUNC3800                YES, BRANCH
         CLI   DCBFUNC,PRINTWXT        PRINT W/ 2-LINE PRINT DATA SET
         BE    FUNC3800                YES, BRANCH
         CLI   DCBFUNC,PRINTWX         PRINT ONLY DATA SET
         BE    FUNC3800                YES, BRANCH
         CLI   DCBFUNC,RDPUNCH         RD/PUNCH ASSOCIATED DATA SET
         BE    FUNC1200                YES, BRANCH
         CLI   DCBFUNC,RDPHDPI         RD/PCH W/ DATA PROTECT IMAGE
         BE    FUNC1200                YES, BRANCH
         CLI   DCBFUNC,READW           RD/PRINT ASSOCIATED DATA SET
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,READWX          PRT PORTION OF RD/PRT ASSOC D.S.
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,READWXT         RD/PRT W/ 2-LINE PRT ASSOC D.S.
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,READWT          RD/PRT W/ 2-LINE PRT ASSOC D.S.
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,PUNCHW          PCH/PRT ASSOCIATED DATA SET
         BE    FUNC1200                YES, BRANCH
         CLI   DCBFUNC,PUNCHWX         PRT PORTION OF PCH/PRT ASSOC. DS
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,PUNCHWXT        PCH/PRT FILE W/ 2-LINE PRINT
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,RDPHW           RD/PCH/PRT ASSOCIATED DATA SET
         BE    FUNC1200                YES, BRANCH
         CLI   DCBFUNC,RDPHWX          PRT PART OF RD/PCH/PRT ASSOC. DS
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,RDPHWXT         RD/PCH/PRT FILE W/ 2-LINE PRINT
         BE    FUNC1300                YES, BRANCH
         CLI   DCBFUNC,RDPHWDPI        RD/PCH/PRT FILE W/ DPI
         BE    FUNC1200                YES, BRANCH
FUNC3600 EQU   *
         LA    RCORE,ONE               INDICATE INVALID DCBFUNC PARAM
         B     FUNC2500                BRANCH TO WTO ROUTINE
FUNC3800 EQU   *
         LA    RF,IGG0197P             GET ID OF NEXT EXECUTOR
         B     XCTLGOGO                BRANCH TO XCTL SUBROUTINE
FUNC3900 EQU   *
         LA    RCORE,TWO               INDICATE INVALID FUNC/CNTRL COMB
         B     FUNC2500                BRANCH TO WTO ROUTINE
FUNC4000 EQU   *
         TM    DCBDEVT,R3505           3505 CARD READER DEVICE USED
         BNO   FUNC4200                NO, BRANCH
         TM    DCBMODE,OMR             OPTICAL MARK READ SPECIFIED
         BO    FUNC3800                YES, BRANCH
FUNC4100 EQU   *
         TM    DCBMODE,RCE             READ COL. ELIM. SPECIFIED
         BO    FUNC3800                YES, BRANCH
         B     FUNC3400                BR TO LOAD NEXT EXECUTOR ID
FUNC4200 EQU   *
         TM    DCBMACRF,GETRD          GET OR READ USED
         BM    FUNC4100                YES, BRANCH
         TM    DCBMACRF+ONE,PUTWRT     PUT OR WRITE USED
         BM    FUNC3400                YES, BRANCH
         LA    RCORE,FOUR              INVALID DCB FOR A 3505 OR 3525
         B     FUNC2500                BRANCH TO WTO ROUTINE
FUNC4300 EQU   *
         L     RDCB,DXCCW2             RELOAD CURRENT DCB ADDRESS
         LA    RF,IGG0197P             LOAD ID OF NEXT EXECUTOR
XCTLGOGO EQU   *
*                                      SET SYSTEM TO OPEN PROTECTY02898
         MODESET EXTKEY=DATAMGT        KEY                       Y02898
         MVC   ZERO(D5,RWTGC),ZERO(RF) SAVE ID OF NEXT MODULE
RELOOP   EQU   *
         LA    RWTGC,WGOFF(ZERO,RWTGC) INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(ZERO,RPARC) INCR CURRENT DCB ENTRY POINTER
         CLC   ZERO(TWO,RWTGC),AMIDCNST THIS ROUTINE NEEDED AGAIN
         BCR   8,RBASE                 BACK TO OPEN CONTROL ROUTINDM0I
*
         CLC   ZERO(TWO,RWTGC),OPIDCNST END OF TABLE
         BC    7,RELOOP                NO, CHECK NEXT ENTRY
*
         LR    RPARC,RPAR
         LA    RWTGC,WAOFF(ZERO,RWTG)  REINITIALIZE WTG LIST POINTER
ZCHEK    CLI   0(RWTGC),X'00'          ENTRY COMPLETE
         BC    7,TCTLRTN               IF NOT, TRANSFER CONTROL
*
         LA    RWTGC,WGOFF(ZERO,RWTGC) GET NEXT ENTRY
         LA    RPARC,PLOFF(ZERO,RPARC) GET NEXT ENTRY
         BC    15,ZCHEK                ZERO CHECK
*
TCTLRTN  EQU   *
         MVC   D6(TWO,RWTG),ZERO(RWTGC)   STORE ID IN WTG TABLE
         MVC   D14(THRE,RWTG),TWO(RWTGC) MOVE TTR INTO TABLE
*
         LA    RJ,DXCCW12              SET UP FOR XCTL
**
         XCTL  DE=(RWTG),SF=(E,(15))
**
*
***********************************************************************
*
**
ABEN     EQU   *
         L     RF,ABEND4               GET SAM ABEND ERROR CODE
         SLL   RF,12                   SET UP REGISTER 1 FOR ABEND
         ABEND (1),DUMP
*
***********************************************************************
WAOFF    EQU   32
PLOFF    EQU   4                       OFFSET OF DCB ENTRIES
WGOFF    EQU   8                       OFFSET OF WTG ENTRIES
OPIDCNST DC    C'0S'                   ID
AMIDCNST DC    C'7N'                   THIS MODULE'S ID
         DS    0F                      ALIGN ON A FULLWORD BOUNDARY
ABEND4   DC    X'00000004'             ABEND CODE OF 4
*
IECF03I  WTO   'IEC952I 004-0 CONFLICTING/INVALID DCB FUNC OR RELATED P*
               ARAMETERS ',MF=L,ROUTCDE=(11),DESC=4
         DS    0F                      FULLWORD BOUNDARY       @YM06152
ZAPSZAPS DC    8C'ZAPSZAPS'            WORK AREA USED BY OPEN    Y02898
IGG0197P DC    C'7P'                   MODULE ID               @YM05576
SOP5     DC    C'1G'                   MODULE ID               @YM05576
*
*
         DCBD  DSORG=PS
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @YM05576
         CVT   DSECT=YES,LIST=YES                              @YM05576
         IKJTCB                                                  Y02898
         IHARB                                                   Y02898
         IHAPSA                                                  Y02898
         IEZDEB
         END
