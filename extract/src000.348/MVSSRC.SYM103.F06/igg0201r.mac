         TITLE 'IGG0201R-CLOSE EXEC FOR 3525,AND 3505 WITH OMR OR RCE'
         START
IGG0201R CSECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* MODULE NAME= IGG0201R
*
* DESCRIPTIVE NAME= CLOSE EXEC FOR 3525 ASSOCIATED DATA SETS OR
*                   3505 WITH OMR/RCE
*
* STATUS = OS/VS2 REL 2
*
* FUNCTION= THIS IS THE LAST HALF OF THE CLOSE ROUTINE USED WHEN
*              OMR OR RCE IS SPECIFIED FOR THE 3505 AND WHEN CLOSING
*              ANY TYPE OF 3525 DATA SET.
*
*   OPERATION= THE FOLLOWING OPERATIONS WILL BE PERFORMED BY
*              THIS CLOSE EXECUTOR:
*                1. FREE BUFFER SPACE FROM BUFFER POOL
*                2. FREE IOB/ICB SPACE
*                3. CLEAR BSAM/QSAM VECTORS IN DCB
*                4. FOR FORCED CLOSE, INDICATE IN THE AUDIT
*                   TRAIL THAT IOBS AND BUFFER POOL HAVE BEEN
*                   FREED AND SET RETURN CODE OF 0
*
* NOTES
*   PATCH-LABEL= ZAPSZAPS
*
* MODULE TYPE
*   PROCESSOR= ASSEM
*   ATTRIBUTES= REENTRANT
*
* ENTRY POINT- XCTL FROM IGG0201P
*   PURPOSE= TO COMPLETE CLOSING AND CLEAN-UP FOR 3505 WITH OMR/RCE
*            AND 3525 ASSOCIATED DATA SETS
*   INPUT= SEE DESCRIPTION OF REGISTERS
*
* EXIT NORMAL- XCTL TO IGG0200B OR IGG0200G(COMMON CLOSE)      @YM05576
*
* EXIT ERROR=  WHEN ENTERED FOR FORCED CLOSE, RETURNS TO
*              FORCED CLOSE EXECUTORS
*
* EXTERNAL REFERENCES
*   DATA AREAS= O/C/E WORK AREA (IECDSECT)
*               FORCE CLOSE WORK AREA (IHAFCAUD)
*   CONTROL BLOCKS= DCB-M,DEB-U,IOB-D,ICB-D
*
* TABLES/WORK AREAS- WHERE TO GO TABLE (WTG)
*
* MACROS= GETMAIN,FREEMAIN,MODESET,XCTL
*
* CHANGE ACTIVITY= Y02898,YM05576,YM06153,YM03519,YA00437
*
* D 502000                                                     @ZA01875
* A 501500-502900                                              @ZA01875
* D 207000,386000,460000,783000-795000,873000-882000           @YM05576
* A 444500,502500,771500-771940,895500                         @YM05576
* C 387000                                                     @YM05576
* D 771100-771700                                              @YM06153
* A 479400,681500,683000,481400                                @YM06153
* C 394000,480700,682500,682000,683500                         @YM06153
* C159500                                                      @ZA29895
* A046100-046200,078500-078740                                 @ZA29895
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*        REGISTER USAGE
*
RE       EQU   0                       WORK/PARAMETER REGISTER
RF       EQU   1                       WORK/PARAMETER REGISTER
RDCB     EQU   2                       ADDRESS OF USER'S DCB
RBASE    EQU   3                       BASE REGISTER
RCORE    EQU   4                       ADDRESS OF CLOSE WORK AREA
RPAR     EQU   5                       PARAMETER LIST
RWTG     EQU   6                       START OF WTG
RPARC    EQU   7                       CURRENT ENTRY IN PARAMETER LIST
RWTGC    EQU   8                       CURRENT ENTRY IN WTG TABLE
RTIOT    EQU   9                       TIOT ADDRESS
RTCB     EQU   10                      ADDRESS OF CURRENT TCB    Y02898
RDEB     EQU   11                      DEB ADDRESS
RB       EQU   12                      WORK REGISTER
RC       EQU   13                      WORK REGISTER
RD       EQU   14                      WORK/PARAMETER REGISTER
RJ       EQU   15                      WORK/PARAMETER REGISTER
*
*
*
CLOSEB   EQU   X'20'
PCIB     EQU   X'40'
COMPLETE EQU   X'7F'
QSAMB    EQU   X'01'
EXCH     EQU   X'01'
FIRSTIOB EQU   X'01'
*
BLANK    EQU   X'40'
BYTO     EQU   0                       DISPLACEMENT=0
FORCEOFF EQU   X'18'                   OFFSET TO FORCE CLOSE RET ADDR
*                                                             @ZA29895
CCWADR   EQU   24                      OFFSET TO CHANNEL PROG IN IOB
CCW2     EQU   48                      OFFSET TO 2ND CCW
ECBOS    EQU   4                       OFFSET TO ECB
ECBADOS  EQU   12                      OFFSET TO ECB ADDRESS
IOSIOB   EQU   8                       OFFSET TO IOB STANDARD FIELD
OUTPUT   EQU   X'0F'                   TEST FOR OUTPUT
SILIBIT  EQU   X'20'                   SUPPRESS INCORRECT LENGTH IND
TMFLAG   EQU   X'04'                   TM FLAG FOR CLOSE ROUTINE
UNUSED   EQU   X'80'                   DCB OPENED-NOT YET USED
ZERO     EQU   0                       DISPLACEMENT
ONE      EQU   1
TWO      EQU   2
THREE    EQU   3
FOUR     EQU   4
SIX      EQU   6
SEVEN    EQU   7
EIGHT    EQU   8
D14      EQU   14
FIVE     EQU   5
WORK12   EQU   12                      DCB WORK AREA SIZE
OPTIONS  EQU   X'B0'                   QUIESCE OPTIONS
OFFSET16 EQU   16
OFFSET8  EQU   8
OFFSET4  EQU   4
R3505    EQU   X'46'                   3505 DCB DEVICE TYPE MASK
P3525    EQU   X'47'                   3525 DCB DEVICE TYPE MASK
RPMASK   EQU   X'60'
RWMASK   EQU   X'50'
PWMASK   EQU   X'30'
ERMASK   EQU   X'3F'
CCHMASK  EQU   X'40'
CCWFLAGS EQU   4                       OFFSET IN A CCW TO FLAG BYTE
SLIFLAG  EQU   X'20'
FEEDSS   EQU   X'23'                   FEED AND STACKER SELECT
SSFLAGS  EQU   X'C0'                   STACKER SELECT FLAGS
WMASK    EQU   X'10'
WXMASK   EQU   X'14'
INMASK   EQU   X'0F'
CNTRL    EQU   X'02'
SEQMASK  EQU   X'06'
SEQFDISP EQU   60
DEBOFFST EQU   45
DEBRPTR  EQU   36
DEBPPTR  EQU   40
DEBWPTR  EQU   44
XMASK    EQU   X'03'
LOCMASK  EQU   X'14'
BUFMASK  EQU   X'08'
NOT      EQU   X'FF'
WAOFF    EQU   32
WGOFF    EQU   8
PLOFF    EQU   4
UE       EQU   X'01'                   UNIT EXCEPTION MASK
OMRRCE   EQU   X'30'                   OMR OR RCE MASK
OUTMASK  EQU   X'0F'                   OUTPUT MASK
MIOBCNST EQU   48
CONCAT   EQU   X'20'                                            YM03519
         USING IHADCB,RDCB
         USING DEBBASIC,RDEB
         USING FORCORE,RCORE
         USING WTG,RWTG                                        @YM06153
         BALR  RBASE,RE                PUT BASE ADDR IN BASE REG
         USING *,RBASE                                         @YM05576
CSTART   EQU   *
         B     START                                           @ZA29895
         DC    CL8'IGG0201R'           MODULE NAME             @ZA29895
         DC    CL8'@ZA29895'           LATEST APAR NUMBER      @ZA29895
         DC    CL8'&SYSDATE'           DATE OF LATEST FIX      @ZA29895
START    EQU   *
         L     RDCB,ZERO(RPARC)        GET DCB BEING CLOSED
         L     RDEB,DCBDEBAD           GET DCB'S DEB ADDRESS
         L     RCORE,FOUR(RWTGC)       GET DCB'S WORK AREA
         L     RDCB,DXUDCBAD           GET USER DCB ADDRESS      Y02898
*                                      SET SYSTEM TO USER PROTECTY02898
         MODESET KEYADDR=DXUKEY,WORKREG=15 KEY                 @YM05576
         L     RB,DCBIOBA              GET CURRENT IOB ADDRESS
         LA    RB,ZERO(RB)             CLEAR HIGH ORDER BYTE
*
*
AMCL2000 EQU   *
         TM    DCBCIND2,QSAMB          DCB USING QSAM
         BNO   AMCL3000                NO BRANCH
         TM    DCBCIND1,EXCH           EXCHANGE BUFFERING USED  YA00437
         BO    AMCL3000                YES BRANCH
*
         SR    RJ,RJ
         IC    RJ,DCBBUFNO             GET NUMBER OF BUFFERS TO FREE
         L     RD,DCBBUFCB             GET BUFF POOL CNTRL BLK @YM05576
*
         TM    DCBOFLGS,CONCAT         CONCATENATION OF UNLIKE  YM03519
*                                      ATTRIBUTES               YM03519
         BZ    AMCL2030                NO,DON'T FREE BUFFER     YM03519
*
         TM    DCBCIND2,BUFMASK        DID OPEN ACQUIRE BUFFER POOL
         BZ    AMCL2030                NO BRANCH TO FREE BUFFERS
*
         LA    RTIOT,0(RD)             SAVE CNTRL BLOCK ADDRESS  Y02898
         LH    RD,SIX(RD)              GET BUFFER SIZE
         MR    RD,RD                   TOTAL AMT REQUIRED FOR BUFFERS
         LA    RJ,EIGHT(RJ)            ADD EIGHT FOR CNTRL BLOCK
*
*                                                                Y02898
         LR    RC,RJ                   SAVE BUFFER AREA SIZE     Y02898
*                                                                Y02898
         FREEMAIN R,LV=(RC),A=(RTIOT),SP=250 FREE BUFFER POOL    Y02898
*                                                                Y02898
         MODESET EXTKEY=DATAMGT         AUDIT TRAIL IN KEY 5   @YM06153
*
         OI   FCACLOS1,FCACBUFC        INDIC BUFFERS FREED     @YM06153
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM06153
*                                                              @YM06153
         XC    DCBBUFCA,DCBBUFCA  CLEAR ADDR IN DCB            @YM05576
         OI    DCBBUFCA+TWO,ONE      SET INVALID ADDRESS       @YM05576
         B     AMCL3000                BRANCH
*
AMCL2030 EQU   *
*
* THIS SECTION OF CODE REFORMATS THE BUFFER CONTROL BLOCK      @ZA01875
* BY LOOPING THROUGH THE CHAINED IOB'S TO GET THE BUFFER       @ZA01875
* ADDRESSES. THE BUFFERS ARE CHAINED BY OVERLAYING THE FIRST   @ZA01875
* WORD OF THE BUFFER WITH A CHAIN POINTER. THE CHAIN IS        @ZA01875
* HOOKED TO THE FIRST WORD OF THE BCB. THERE IS ONE UNIQUE     @ZA01875
* BUFFER POINTER PER IOB.                                      @ZA01875
*
         SR    RTIOT,RTIOT             ZERO OUT REG            @YM05576
         IC    RTIOT,DCBOFFSW          GET WRITE CCW OFFSET
         TM    DEBOPATB,OUTMASK        TEST TYPE OF I/O
         BO    AMCL2040                BRANCH IF OUTPUT          Y02898
*
         IC    RTIOT,DCBOFFSR          GET READ CCW OFFSET
*
AMCL2040 EQU   *
*
         LA    RC,0(RTIOT,RB)          GET TO RD/WRT CCW ADDRESS
         L     RC,0(RC)                GET BUFFER ADDRESS
         LA    RC,0(RC)                CLEAR HI ORDER BYTE
AMCL2070 EQU   *
         MVC   ONE(THREE,RC),ONE(RD)   UPDATE LAST BUFF WITH NEW ONE
         ST    RC,0(RD)                UPDATE BUFFER POOL CNTRL BLOCK
         L     RB,0(RB)                GET NEXT IOB IN CHAIN
         BCT   RJ,AMCL2040             IF MORE IOB'S FREE BUFFER
*                   RJ HAS THE DCBBUFNO IN IT
*
*     PREPARE TO FREE SPACE REQUIRED FOR IOB/ICB'S
*
AMCL3000 EQU   *
         SR    RD,RD
         SR    RE,RE
         SR    RF,RF
         IC    RE,DCBIOBL              GET LEN OF IOB/ICB (DBL WORDS)
         SLL   RE,THREE                GET LEN IN BYTES
         IC    RF,DCBNCP               GET NUMBER OF BSAM CP.S
         TM    DCBCIND2,QSAMB          IS QSAM BEING USED
         BZ    AMCL3010                NO BRANCH
*
         IC    RF,DCBBUFNO             GET NUMBER OF QSAM CP.S
*
AMCL3010 EQU   *
*
         TM    DCBCIND2,PCIB           WAS DCB USING PCI SCHEDULING
         BO    AMCL3050                YES BRANCH
*
AMCL3020 EQU   *
*
         TM    0(RB),FIRSTIOB          THIS THE FIRST IOB IN CHAIN
         BO    AMCL3060                YES BRANCH
         L     RB,0(RB)                GET NEXT IOB
         B     AMCL3020                CONTINUE TO LOOP
*
AMCL3050 EQU   *
         L     RB,DCBIOBAD             GET MAIN IOB ADDRESS
         LA    RB,0(RB)                CLEAR HI ORDER BYTE
         LA    RD,MIOBCNST             CNST OF 48 FOR MIOB
*
AMCL3060 EQU   *
         LTR   RF,RF                   WERE NO. CP.S SPECIFIED
         BP    AMCL3065                YES BRANCH
         LA    RF,ONE                  NO, PROVIDE ONE
*
AMCL3065 EQU   *
         MR    RE,RE                    NUMBER OF CP X IOB/ICB SIZE
*
*                                                                Y02898
         LA    RTIOT,0(RF,RD)          ADD ANY PCI CNST REQUIRED Y02898
*                                                                Y02898
         FREEMAIN R,LV=(RTIOT),A=(RB),SP=250 FREE IOB/ICB SPACE  Y02898
*                                                                Y02898
         MODESET EXTKEY=DATAMGT        AUDIT TRAIL IN KEY 5    @YM06153
*                                                              @YM06153
         OI   FCACLOS1,FCACIOB         INDIC IOBS FREED        @YM06153
         MODESET KEYADDR=DXUKEY,WORKREG=15   USER KEY          @YM06153
*                                                              @YM06153
*
*      THIS SECTION OF CODE CLEARS BSAM/QSAM VECTORS IN THE DCB
*
AMCL5000 EQU   *
         SR    RJ,RJ
         ST    RJ,DCBWCPO              CLEAR OFFSET FIELDS
         ST    RJ,DCBIOBA              IOB VECTOR CLEARED
         MVC   DCBCNTRL+ONE(THREE),DCBWCPO  CLEAR CNTRL RT ADDRESS
         MVC   DCBEOBR+ONE(SEVEN),DCBWCPO   EOB VECTORS CLEARED
         MVC   DCBREAD+ONE(THREE),DCBWCPO   CLEAR RD/WRT/GET/PUT VECTOR
*
         MVC   DCBPERR+ONE(THREE),DCBWCPO   CLEAR ERROR RT VECTOR
*
         MVI   DCBLNP,ZERO             CLEAR 3525 LINE POSITION
*                                      COUNTER/INDICATOR
         OI    DCBPERR+THREE,ONE       SET PERR VECTOR TO ONE
         OI    DCBEOBW+THREE,ONE       SET EOBW VECTOR TO ONE
*
AMCL5005 EQU   *
         TM    DCBCIND2,QSAMB          WAS QSAM USED
         BZ    AMCL5009                NO, BRANCH
*
         ST    RJ,DCBEOB               CLEAR VECTOR
*
AMCL5009 EQU   *
*
         STH   RJ,DCBCIND1             CLEAR SAM INDICATORS
         OI    DCBREAD+THREE,ONE       SET READ VECTOR TO ONE
         OI    DCBCNTRL+THREE,ONE      SET CNTRL VECTOR TO ONE
*
         MODESET EXTKEY=DATAMGT        SET SYSTEM TO CLOSE PROTECY02898
*                                      KEY                       Y02898
         STC   RJ,ZERO(ZERO,RWTGC)     ZERO CURR ENTRY IN WTG TABLE
         TM   FCACLOS1,FCACFORC        FORCE CLOSE IN CONTROL  @YM06153
         BNO  RELOOP                   NO. NORMAL EXIT         @YM06153
         SR   RJ,RJ                    RET CODE FOR FORCE      @YM06153
*                                      CLOSE TO PASS TO CLOSES @YM06153
*                                      TRR                     @YM06153
         L    RD,FORCEOFF(RPAR)        GET ADDR FOR FORCE CLOSE@ZA29895
         BR   RD                       RET TO FORCE CLOSE EXEC @YM06153
*
RELOOP   EQU   *
         LA    RWTGC,WGOFF(ZERO,RWTGC) STEP TO NEXT ENTRY
         LA    RPARC,PLOFF(ZERO,RPARC) STEP TO NEXT ENTRY
         CLC   0(TWO,RWTGC),AMIDCNST
         BCR   EIGHT,RBASE             RECRUSE THRU MODULE
*
         CLC   0(TWO,RWTGC),CLLDB       END OF TABLE           @YM05576
         BL    RELOOP                   NO BRANCH              @YM05576
         CLC   0(TWO,RWTGC),CLLDG       END OF TABLE           @YM05576
         BH    RELOOP                   NO BRANCH              @YM05576
         LR    RPARC,RPAR              INITILIZATION
         LA    RWTGC,WAOFF(ZERO,RWTG)  REINITIALIZE WTG LIST POINTER
*
AMCL5011 EQU   *
         CLI   0(RWTGC),ZERO           IS THIS ENTRY ZERO
         BNE   AMCL5019                NO BRANCH
         LA    RWTGC,WGOFF(ZERO,RWTGC) STEP TO NEXT ENTRY
         LA    RPARC,PLOFF(ZERO,RPARC) STEP TO NEXT ENTRY
         B     AMCL5011                BRANCH
*
AMCL5019 EQU   *
         MVC   SIX(TWO,RWTG),ZERO(RWTGC) SET UP ROUTINE ID FOR XCTL
         MVC   D14(THREE,RWTG),TWO(RWTGC) MOVE TTR INTO TABLE
***
         XCTL  DE=(RWTG),SF=(E,DXCCW12)
AMIDCNST DC    C'1R'                   THIS IS THE ID OF THIS MODULE
*
ZAPSZAPS DC    8C'ZAPSZAPS'            WORK AREA USED BY CLOSE   Y02898
CLLDB    DC    C'0B'                    ID FOR 200B            @YM05576
CLLDG    DC    C'0G'                    ID FOR IGG0200G        @YM05576
         DCBD  DSORG=PS
         IEZDEB
         IECDSECS MAIN,WTG,PREFX,EXPAND=YES                    @YM06153
         ORG  WTG+8                                            @YM06153
WRKRETRN DS   F                        FORCE CLOSE RETURN ADDR @YM06153
FORCORE  DSECT                                                 @YM06153
         IHAFCAUD ORG=YES                                      @YM06153
         IKJTCB                                                  Y02898
         IHARB                                                   Y02898
         IEFUCBOB                                              @YM05576
         END
