*30740007*************************************************************
006A     TITLE 'IGC0006A - TEST SVC'
         COPY  IKJEGSIO
         EJECT
IGC0006A CSECT
*C229080,229092,264547,264603                                  @YM02260
*A229068,264546                                                @YM02260
*A264544-264545,264672-264684                                  @YM02404
*A159720-159740,159804                                         @YM03486
*C265071-265156                                                @YM04131
*A104008,252040,265151                                         @YM05036
*A098876,278314                                                @YM04978
*A152452,152480-152571,278338                                  @YM07115
*C158821                                                       @YM06810
*D127000                                                       @YM07131
*A216500                                                       @ZA01570
* A 153220,158510,278334                     @ZA07138,@ZA09259,@ZA10462
* A 015060,265673-265678,265682                                @ZA11389
* C 265679                                                     @ZA11389
***********************************************************************
*                                                                     *
* STATUS   --                                                         *
*    VERSION NO. 01, OS/VS2 RELEASE NO. 2 08/01/73                    *
*                                                                     *
* FUNCTION/OPERATION --                                               *
*    THE TEST SVC (SVC 61-IGC0006A) SAVES INFORMATION ABOUT           *
*    LOAD MODULES FOR USE BY THE TSO TEST SYMBOL PROCESSOR,           *
*    MODULE IKJEGSYM AND INFORMS THE AT COMMAND OF THE NAME           *
*    OF THE MODULE BEING FETCHED SO DEFERRED BREAKPOINTS              *
*    CAN BE ESTABLISHED.                                              *
*    SVC 061 IS ISSUED BY FETCH WHEN BRINGING A LOAD MODULE           *
*    INTO CORE THAT HAS THE TEST ATTRIBUTE IN THE DIRECTORY ENTRY     *
*    FOR THE MEMBER OR WHEN A LOAD MODULE IS BROUGHT INTO CORE BY     *
*    TSO TEST.  THIS SVC OPERATES IF THE MODULE IS RUNNING UNDER      *
*    A TSO TASK                                                       *
*    IGC0006A BUILDS A INFO BLK REFLECTING THE LOAD MODULE            *
*    NAME, LOADED ADDRESS, ATTRIBUTES AND, IF AVAILABLE, A DDNAME     *
*    WHICH IKJEGSYM CAN OPEN A DCB TO READ THE ASSEMBLER'S SYMBOL     *
*    TABLES AND LINKAGE EDITORS CESD RECORDS.                         *
*    IF TEST IS RUNNING, THESE INFO BLOCKS ARE CHAINED FROM           *
*    A WORD IN TCOMTAB.  IF NOT, THEY ARE CHAINED FROM THE TCB        *
*    TRN FIELD.                                                       *
*    ALSO, IF TEST IS RUNNING, THE ECB POINTED TO FROM THE            *
*    ECBTST FIELD IN TCOMTAB IS POSTED WITH A X'44'.                  *
*    SVC 61 IS ALSO ISSUED BY THE OVERLAY SUPERVISOR IF               *
*    TEST IS RUNNING AND A NEW SEGMENT OF AN OVERLAY STRUCTURE        *
*    IS BROUGHT INTO CORE.  IN THIS CASE, SVC 61 WILL PASS THE        *
*    NAME OF THE LOAD MODULE TO THE AT COMMAND VIA POST-WAIT.         *
*                                                                     *
*    NOTE                                                             *
*    TESTRAN IS NO LONGER SUPPORTED, IE SVC 61 IS ONLY A TSO TEST SVC.*
*                                                                     *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IGC0006A   ONLY ENTRY TO SVC 61                             *
*                                                                     *
* INPUT --                                                            *
*    REGISTERS POINT TO SYSTEM INFORMATION                            *
*    -FROM CONTENTS SUPERVISOR                                        *
*    1 - NEGATIVE ADDRESS OF DCB USED TO FETCH THE MEMBER             *
*    3 - ADDRESS OF CVT                                               *
*    4 - ADDRESS OF TCB                                               *
*    5 - ADDRESS OF MY SVRB                                           *
*    WKNAME(IHAFETWK) -  ADDR OF BLDL ENTRY FOR MEMBER                *
*    WKCDADDR(IHAFETWK) -  ADDR OF EXTENT LIST FOR MEMBER             *
*    -FROM OVERLAY SUPERVISOR                                         *
*    1 - ZERO                                                         *
*    80(5) - ADDRESS OF SEGTAB                                        *
*                                                                     *
* OUTPUT --                                                           *
*    SVCINFO BLOCK   FOR TEST SYMBOL PROCESSOR, IKJEGSYM              *
*    IF TEST IS RUNNING, PASS LOADNAME TO AT COMMAND VIA GENERAL      *
*    WORK AREA                                                        *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         XCTL         TO SECOND LOAD, IF TESTRAN REQUESTED           *
*         GETMAIN      OBTAIN CORE FOR A SYMINFO BLOCK OR AN ECB      *
*         POST         MAINLINE SO AT CMD CAN PROCESS                 *
*         WAIT         FOR AT CMD TO FINISH PROCESSING                *
*                      OR IF MULTI-TASKING, FOR MAINLINE TO FINISH    *
*        SYNCH         TO PASS CONTROL TO IKJEGIO OR IKJEGSTA         *
*                                                                     *
* EXITS, NORMAL --                                                    *
*         ISSUE A BRANCH REGISTER ON REGISTER 14                      *
*                                                                     *
* EXITS, ERROR --                                                     *
*        N/A                                                          *
*                                                                     *
* TABLES/WORKAREAS --                                                 *
*    TCOMTAB   IF TEST IS RUNNING                                     *
*    TCB       TTRN FIELD, TIOT ADDRESS                               *
*    MY SVRB   WORK AREAS, POINTERS                                   *
*    BLDL      ENTRY FOR FETCH MEMBER                                 *
*    XL        FOR FETCHED MEMBER                                     *
*    DCB       USED TO FETCH MEMBER                                   *
*    TIOT      IF AVAILABLE, GET DDNAME ALLOCATING PDS                *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REENTRANT AND REFRESHABLE                                        *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    RE-ASSEMBLY IS REQUIRED FOR CHANGE OF CODE                       *
*                                                                     *
* NOTES --                                                            *
*    THE SVC INFO BLOCKS ARE FREED BY MAINLINE AT THE END             *
*    OF A TEST SESSION.                                               *
*
* CHANGE-ACTIVITY -
*                 APAR OZ07138 - CHANGES TO PRIVIDE MNL WITH A POINTER
*                 TO THE POSTING SVRB. ECBPP+1 IN TCOMTAB IS THE
*                 POINTER. IT IS SERIALIZED AT THE TASK LEVEL VIA ENQ.
*                 ANY PRIOR POINTER IS SAVED IN THE SVRB WORKAREA AT
*                 WRKSVRBS AND RESTORED BEFORE DEQ AND RETURN.
*                 APAR OZ09259 - SAME AS ABOVE.
*                 APAR OZ10462 - SAME AS ABOVE.
*                 APAR OZ11389 - CHANGE ESTAE/RETRY LINKAGES TO
*                 CONFORM TO REGISTER CONVENTIONS
*
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*        EQUATES                                                      *
*                                                                     *
***********************************************************************
*
*        REGISTER EQUATES
*
PARMREG0 EQU   0              REGISTER 0
R0       EQU   0              REGISTER 0
PARMREG1 EQU   1              REGISTER 1
R1       EQU   1              REGISTER 1
R2       EQU   2              REGISTER 2
DCBPTR   EQU   2              ADDRESS OF DCB
ADDRCVT  EQU   3              ADDRESS OF CVT
R3       EQU   3              WORK REG                         @ZA04126
TCBPTR   EQU   4              ADDRESS OF TCB
SVRBPTR  EQU   5              ADDRESS OF MY SVRB
TSVCBASE EQU   6              BASE REGISTER FOR IGC0006A
R7       EQU   7              WORK REG 7
WORKA    EQU   7              REGISTER 7
WORKB    EQU   8              REGISTER 8
TCOMTABB EQU   9              WHEN TEST IS RUNNING, ADDRESS OF TCOMTAB
SVCINFOB EQU   10             ADDR OF ANSWER BLOCK, BASE FOR
*                             DESCRIPTIVE SEC
R10      EQU   10             REG 10
WKPARTB  EQU   11             ADDR OF EXTENDED AREA IN SVRB,
*                             USE AS WORKAREA
SEGTABAD EQU   12             IF ISSUER IS OVLY SUPRVSR,
*                             ADDRESS OF SEGTAB
SOMESAVE EQU   13             REGISTER 13
R13      EQU   13             REGISTER 13
RETURN   EQU   14             REGISTER 14
REG15    EQU   15             REGISTER 15
*
*        NUMBER EQUATES
*
N1       EQU   1             DECIMAL 1
N2       EQU   2             DECIMAL 2
N0       EQU   0             DECIMAL 0
N4       EQU   4             DECIMAL 4
N8       EQU   8             DECIMAL 8
N12      EQU   12            DECIMAL 12
*
*        LENGTH EQUATES
*
L2       EQU   2             LENGTH OF 2
L4       EQU   4             LENGTH OF 4
L8       EQU   8             LENGTH OF 8
*
*        CONDITION CODE EQUATES FOR BCR INSTRUCTIONS
*
EQUAL    EQU   8             BRANCH IF EQUAL
ONES     EQU   1             BRANCH IF ONES
*
*        DISPLACMENT EQUATES
*
D0       EQU   0             ZERO DISPLACMENT
D3       EQU   3             DISPLACMENT OF 3
D4       EQU   4             DISPLACMENT OF 4
D8       EQU   8             DISPLACMENT 0F 8
D24      EQU   24            DISPLACMENT OF 24
D32      EQU   32            DISPLACMENT OF 32
D76      EQU   76            DISPLACMENT 0F 76
D80      EQU   80            DISPLACMENT 0F 80
D96      EQU   96            DISPLACMENT OF 96
TIOTDD   EQU   4             OFFSET INTO TIOT ENTRY OF DDNAME
*
*        OTHER EQUATES
*
EXIT     EQU   3             THREE
SP250    EQU   250           SUBPOOL 250, GET CORE IN SUBPOOL 0
*
*        IMMEDIATE OPERANDS
*
N00      EQU   X'00'         HEX 00
N01      EQU   X'01'         HEX 01
X80      EQU   X'80'         HEX 80
X74      EQU   X'74'         HEX 74
X40      EQU   X'40'         HEX 40
XFF      EQU   X'FF'         HEX FF
TCBCHAIN EQU   X'80'         SW IN FLAGS, FIRST TIME - CHAIN FROM TCB
OVLYBLK  EQU   X'40'         SW IN FLAGS, OVLYED A DUPLICATE LOADNAME
OVLYBIT  EQU   X'20'         OVLY ATTRIBUTE BIT IN BLDL ATTRIBUTE FIELD
FF       EQU   X'FF'         MASK BYTE
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE ENTRY INITILIZATION ROUTINE                      *
*                                                                     *
***********************************************************************
S6A01010 EQU   *
         BALR  TSVCBASE,D0    ADDRESSABILITY
         BCTR  TSVCBASE,D0    MAKE BASE EQUAL
         BCTR  TSVCBASE,D0    TO ENTRY POINT
         USING IGC0006A,TSVCBASE
         USING RBSECT,SVRBPTR ADDRESSABILITY TO THIS SVRB.
         USING TCB,TCBPTR     ADDRESSABILITY TO TCB.
         USING CVT,ADDRCVT    ADDRESSABILITY TO CVT.
         USING PSA,PARMREG0   ADDRESSABILITY TO PSA.
         LPR   DCBPTR,PARMREG1 POSITIVE ADDRESS OF DCB
***********************************************************************
* ISSUE A GETMAIN FOR A WORKAREA AND REG SAVE AREA.
***********************************************************************
         LR    TCOMTABB,RETURN SAVE THE RETURN ADDRESS
         LA    PARMREG0,WRKLEN R0= LENGTH OF THE GOTTEN AREA.
         L     WORKA,PSAAOLD  R7= ADDR OF THE NEW (CURRENT) ASCB
         GETMAIN RU,LV=(0),BRANCH=YES ISSUE GETMAIN FOR WORKAREA
         LR    WKPARTB,PARMREG1 R11= ADDR OF THE GOTTEN AREA
         USING WORKPART,WKPARTB ESTABLISH ADDR'ABILITY TO WORKAREA
         XC    WRKSTART(WRKLEN),WRKSTART  CLEAR THE WORKAREA
         MVC   S6ASPL(S6ASPLEN),S6ASPLST  INIT ESTAE PLIST     @ZA11389
         ST    TCOMTABB,WRKREGRT SAVE THE RETURN ADDRESS
         L     ADDRCVT,FLCCVT  R3= ADDR OF THE CVT DESTROYED BY GETMAIN
         SPACE
**********************************************************************
*        ISSUE AN ESTAE HERE
**********************************************************************
         SPACE
         ESTAE S6AESTAE,CT,PARAM=S6ASPL,XCTL=NO,BRANCH=YES,            *
               SVEAREA=WRKREGSV,MF=(E,WRKESTAE)
         SPACE
S6A01030 EQU   *
         MVI   S6AFLAGS,N00   CLEAR SVC STATUS FLAGS
         LA    TCBPTR,D0(,TCBPTR) ADDR OF LOADNAME'S TCB
         XC    S6ATCBPT(S6ALEN),S6ATCBPT CLEAR TCB ADDR FOR MNL
         SPACE
****     NOW WE CAN SEE IF THE ESTAE WAS OK.....
         LTR   REG15,REG15    WAS THE ESTAE OK
         BNZ   ESTAFAIL       NO HANDLE THE ESTAE ERROR
         SPACE
         MVC   WRKFLGSV(N1),TCBTSFLG  SAVE THE TCB FLAG STATUS @YM04978
         OI    TCBTSFLG,TCBATT  DISABLE FOR ATTN THROUGTHOUT SVC61.
         TM    TCBABF,TCBTCP  IS TEST RUNNING
         BZ    S6A07010       NO, GO SAVE FOR LATER USE
         L     TCOMTABB,TCBTRN GET ADDR OF TCOMTAB
         USING TCOMTAB,TCOMTABB ADDRESSABILITY TO TCOMTAB
         L     WORKA,WORKAREA ADDR OF AREA TO BE CHANGED
         LR    WORKB,TCBPTR   SAVE MY TCB ADDR.
         L     TCBPTR,TSTTCB    GET THE ADDR OF THE TEST TCB.
         BAL   RETURN,CHKSTKEY GO CHECK STORAGE KEY
         LR    WORKA,TCOMTABB ADDR OF AREA TO BE CHANGED
         BAL   RETURN,CHKSTKEY GO CHECK STORAGE KEY
         L     WORKA,ECBTST   ADDR OF AREA TO BE CHANGED
         BAL   RETURN,CHKSTKEY GO CHECK STORAGE KEY
         LR    TCBPTR,WORKB  RESTORE THE ADDR OF MY TCB.
         BAL   RETURN,CHKPPRB CHECK OUT THE P. P. FOR VALIDITY
         LTR   DCBPTR,DCBPTR  IS ISSUER OVLY SUPERVISOR
         BZ    S6A06010       YES, GO SEARCH SVCINFO BLKS
         SPACE
         BAL   RETURN,GETPARMS  GET THE PARAMETERS             @YM05036
         SPACE
         L     R10,PSAAOLD           ADDR OF THE NEW ASCB      @ZA06226
         L     R10,ASCBASXB-ASCB(R10) ADDR OF THE ASXB         @ZA06226
         L     R10,ASXBLWA-ASXB(R10)  ADDR OF THE LWA          @ZA06226
         L     R10,LWATEST-LWA(R10)   ADDR OF SVCINFO BLOCK    @ZA06226
         ST    SVCINFOB,TSTTRN HEAD OF SVCINFO BLK CHAIN       @ZA06226
         USING IKJEGSVQ,SVCINFOB
         LTR   SVCINFOB,SVCINFOB IS THEIR A CHAIN
         BZ    S6A02030       NO, GO SET UP TO HAVE MAIN
*                             LINE CREATE A TCB CNTRL
*                             CHAIN BLK FOR THIS TCB
S6A01050 EQU   *
         C     TCBPTR,SVQTCBPT IS CNTRL BLK FOR THIS TCB
         BNE   S6A02010       NO, GO CHECK NEXT CNTRL BLK
*
*        A TCB CONTROL BLOCK AND THE ASSOCIATED SVCINFO BLOCK CHAIN
*        EXISTS FOR THE TCB THE SVC IS OPERATING UNDER.  CHECK IF THIS
*        IS A NEW TCB WHOSE ADDR IS THE SAME AS ONE THAT WAS DETACHED
*
         L     WORKA,RBLINK   ADDR OF CALLERS PRB
         TM    RBSTAB2-RBSECT(WORKA),RBTCBNXT IS HE ONLY RB ON TCB
         BZ    S6A02050       NO, TCB NOT NEW, GO
         TM    RBCDFLGS-RBSECT(WORKA),RBCDLOAD HAS LOAD BEEN ISSUED
         BO    S6A02050       YES, TCB NOT NEW, GO
         L     WORKA,TCBLLS   ADDR OF LOAD LIST
         LTR   WORKA,WORKA    IS THEIR A LOAD LIST
         BNZ   S6A02050       YES, TCB NOT NEW, GO
*
*        THE TCB IS NEW OR THE ONLY RB HAS XCTLED.  START A NEW SVCINFO
*        BLOCK CHAIN USING THE OLD TCB CONTROL BLOCK
*
         LA    WORKA,SVQBLKPT ADDR OF SVC CHAIN SLOT IN
*                             TCB CONTROL BLOCK
         ST    WORKA,S6ASIBCH SAVE FOR CHAINNING
         B     S6A03010       GO GET A SVCINFO BLOCK
S6A02010 EQU   *
         L     SVCINFOB,SVQLNKPT NO, ADDR OF NEXT CNTRL BLK
         LTR   SVCINFOB,SVCINFOB IS THEIR ANY MORE
         BNZ   S6A01050       YES, GO SEE IF FOR THIS TCB
S6A02030 EQU   *
         ST    TCBPTR,S6ATCBPT ADDR OF TCB FOR MAINLINE
         B     S6A03010       GO GET AN SVCINFO BLOCK
S6A02050 EQU   *
         L     SVCINFOB,SVQBLKPT ADDR OF CHAIN FOR CURR TCB
         DROP  SVCINFOB
         USING IKJEGSVB,SVCINFOB
         BAL   RETURN,S6A21010 GO SEARCH FOR END OF CHAIN
*                             OR DUPLICATE ON CHAIN
         LR    WORKA,SVCINFOB ADDR OF AREA TO BE CHANGED
         TM    S6AFLAGS,S6AFOVLY WAS A DUPLICATE FOUND
         BO    S6A03030       YES, GO CHECK MULTI-TASK SW
         LA    WORKA,SVBLNKPT END OF CHAIN, 0 NEXTBLK PTR
         ST    WORKA,S6ASIBCH SAVE FOR CHAINNING
S6A03010 EQU   *
         BAL   RETURN,S6A11010 GO GET A NEW SVCINFO BLOCK
         ST    SVCINFOB,S6ASIBPT ADDR OF SVC BLK FOR MAINLNE
S6A03030 EQU   *
         LTR   DCBPTR,DCBPTR  IS ISSUER OVLY SUPERVISOR
         BZ    S6A04010       YES, GO PROCESS FOR OVLY
         BAL   RETURN,S6A31010 GO FILL IN SVCINFO BLOCK
         L     WORKA,S6ATCBPT CHAIN STATUS INDICATOR
         LTR   WORKA,WORKA    DOES CHAIN EXIST FOR TCB
         BNZ   GETCHAIN       NO, GO LET MAINLINE CHAIN        @ZA06226
         BAL   RETURN,S6A41010 GO CHAIN BLOCK
         EJECT
***********************************************************************
*                                                                     *
*        IF TEST IS RUNNING, POST THE ECB                             *
*                                                                     *
***********************************************************************
         SPACE 2
S6A04010 EQU   *
         L     WORKB,WORKAREA BASE FOR TSTCWORK FROM
         USING TSTCWORK,WORKB TCOMTAB
         MVC   CWORKCMD(L'SVBLDNAM),SVBLDNAM LOADNAME TO GENERAL WORK
*                             AREA FOR AT COMMAND
         MVC   CWORKCMD+L'SVBLDNAM(L'SVBATTR1+L'SVBATTR2),SVBATTR1
*                             ATTRIBUTES FOR AT CMD
         DROP  WORKB
         SPACE
***********************************************************************
*        DO THE FOLLOWING;
*        1) FREE THE LOCAL LOCK, 2)ENQUE ON THE TEST ECB 'TSTSVCNQ'
*        3) ENABLE FOR ATTN'S, 4) WAIT ON MNL
***********************************************************************
         DROP  WKPARTB        RELEASE ADDR'ABILITY TO WORKAREA.
         USING WORKPART,WORKB   REESTABLISH WITH REG 8.
         LR    WORKB,WKPARTB  REG 8 = WORKAREA ADDR.
S6ALOCKB EQU   *
         STM   TCOMTABB,WORKA,WRKREGSV  SAVE THE REGS ACROSS THE LOCK.
         SPACE
S6ALOCK1 SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0006A(S6ALOCK1))
         LM    TCOMTABB,WORKA,WRKREGSV  RESTORE THE REGS.
         TM    TSTFLGS2,TSTLDF IS A LOAD IN PROCESS
         BO    S6A04020       YES THEREFORE DO NOT ENQ
         OC    DEFERTAB(L'DEFERTAB),DEFERTAB ANY DEFERED BKPTS @ZA06226
         BZ    S6A05015       NO, DON'T BOTHER MAINLINE        @ZA06226
         MVC   WRKENQ(L'SVCNQ),SVCNQ MOVE ENQ WORD TO WORKAREA
         LA    WORKA,WRKENQ   R7= ADDR OF THE ENQ ELEMENT
         L     R2,CVTPTR      GET CVT ADDRESS               @ZA07137
         L     R2,CVTTCBP-CVT(R2) GET ADDR OF TCB WORDS     @ZA07137
         L     R2,N0(R2)      GET ADDRESS OF CURRENT TCB    @ZA07137
         L     R2,TCBJSCB-TCB(R2) GET JSCB ADDRESS          @ZA07137
         L     R2,JSCBPSCB-IEZJSCB(R2)     GET PSCB ADDRESS @ZA07137
         USING PSCB,R2        SET ADDRESSABILITY TO PSCB    @ZA07137
         MVC   WRKNQRNM(7),PSCBUSER   USE USERID AS RNAME   @ZA07137
         MVI   WRKNQRNM+7,C' '    BLANK OUT LAST RNAME BYTE @ZA07137
         DROP  R2             DONE WITH PSCB                @ZA07137
         LA    R2,WRKNQRNM    POINT TO RNAME                @ZA07137
         MVC   WRKENQWK(LISTENQE),LISTENQF  SET UP FOR ENQ.
         LA    SVRBPTR,D0(,SVRBPTR) CLEAR HIGH ORDER BYTE
         ST    SVRBPTR,WRKECB  PLACE SVRB ADDR IN ECB          @YM07115
         ENQ   ((7),(2),E,8),ECB=WRKECB,MF=(E,WRKENQWK) ISSUE ENQ
         LTR   REG15,REG15    IS THE RETURN CODE ZERO          @YM07115
         BZ    S6A04020       YES THEREFORE CONTINUE           @YM07115
         SR    PARMREG1,PARMREG1  CLEAR REG 1                  @YM07115
         IC    PARMREG1,D3(REG15)  PICK UP RETURN CODE         @YM07115
         LA    WORKA,D4       R7= 4 (FOR COMPARE)              @YM07115
         CR    PARMREG1,WORKA  WAS THE RETURN CODE A 4         @YM07115
         BNE   S6A04020       NO THEREFORE CONTINUE            @YM07115
         NI    TCBTSFLG,FF-TCBATT  DO NOT DEFER ATTNS          @YM07115
         LA    PARMREG1,WRKECB  R1= ADDR OF THE ECB            @YM07115
         WAIT  ECB=(1)        WAIT FOR RESOURCE                @YM07115
S6A04020 DS    0H             CONTINUE BY POSTING MNL
         NI    TCBTSFLG,FF-TCBATT  DO NOT DEFER ATTNS ANY LONGER.
         MVC   WRKSVRBS(3),ECBPP+1 SAVE PRIOR SVRB POINTER     @ZA07138
*                                                              @ZA09259
*                                                              @ZA10462
         ST    SVRBPTR,ECBPP   PTR TO MY SVRB FOR MAINLINE
         L     PARMREG1,ECBTST ADDR OF ECB TO POST
         LA    PARMREG1,D0(,PARMREG1)       ZERO HIGH ORDER BYTE
         L     PARMREG0,POSTCODE COMPLETION CODE
         POST  (1),(0)                      POST TEST ECB
         WAIT  N1,ECB=ECBPP                 WAIT FOR MAINLINE
         SPACE
         SR    REG15,REG15    CLEAR RETURN CODE
         EJECT
***********************************************************************
*                                                                     *
*        RETURN TO ISSUER OF SVC 061                                  *
*        1) ISSUE THE FREEMAIN, 2)DEQUE THE TSTSVCNQ ELEMENT, 3)RETURN*
*                                                                     *
***********************************************************************
         DROP  WORKB          RELEASE ADDR'ABILITY TO WORKAREA
         USING WORKPART,WKPARTB  REESTABLISH WITH R11.
         SPACE 2
S6A05010 EQU   *
         MVC   ECBPP+1(3),WRKSVRBS RESTORE PRIOR SVRB POINT    @ZA07138
*                                                              @ZA09259
*                                                              @ZA10462
         TM    TSTFLGS2,TSTLDF IS A LOAD IN PROCESS
         BO    S6A05015       YES THEREFORE DO NOT DEQ
         LA    WORKA,WRKENQ   SETUP THE DEQUE
         LA    R2,WRKNQRNM    POINT TO RNAME FOR DEQ       @ZA07137
         MVC   WRKENQWK(LISTDEQE),LISTDEQF  SET UP FOR DEQ.
         DEQ   ((7),(2),8),RET=HAVE,MF=(E,WRKENQWK) DEQ ON ECBTST WORD
         XC    WRKENQ(L'WRKENQ),WRKENQ  CLEAR TEH ENQ ELEMENT
S6A05015 EQU   *
*-*-*    SETUP REG 14 FOR THE RETURN
         MVC   TCBTSFLG(N1),WRKFLGSV  RESTORE  TCB FLAG STATUS @YM06810
         LR    DCBPTR,REG15   SAVE THE RETURN CODE
         L     WORKA,WRKREGRT  R7= THE RETRUN ADDRESS
         LA    PARMREG0,WRKLEN    R0= LENGTH OF THE FREEMAIN
         FREEMAIN R,LV=(0),A=(11) ISSUE FREEMAIN OF WORKAREA   @YM04131
         SPACE
         ESTAE 0              REMOVE THE ESTAE
         TM    TCBABF,TCBTCP  IS TEST RUNNING                  @YM02404
         BZ    S6A05020       CONTINUE WITH EXIT.              @YM02404
         NI    TSTFLGS4,FF-TSTRERTN  TURN OFF THE RERTY SW
S6A05020 EQU   *              EXIT FROM SCV 61.                @YM02404
         LR    RETURN,WORKA   R14= ADDR OF RETURN
         LR    REG15,DCBPTR   RESTORE THE RETURN CODE
         LM    PARMREG0,SOMESAVE,RBGRSAVE RESTORE REGS FROM MY SVRB
         BR    RETURN         RETURN TO ISSUER OF SVC 61
         EJECT
***********************************************************************
*                                                                     *
*        SUB ROUTINES FOR MAINSTREAM                                  *
*                                                                     *
***********************************************************************
         SPACE 2
*
*        GET A SVCINFO BLOCK
*
S6A11010 EQU   *
         USING IKJEGSVB,SVCINFOB
         L     PARMREG0,S6ASVBLV GETMAIN, 36 BYTES IN SP255
         STM   SEGTABAD,TCOMTABB,WRKREGSV SAVE TEH REGS.
         L     WORKA,PSAAOLD  R7= ADDR OF THE OLD ASCB.
         GETMAIN RU,BRANCH=YES,LV=(0),SP=255    GET AN SVCINFO BLOCK
         LA    SVCINFOB,D0(,PARMREG1) ADDRESS OF GOTTEN CORE
         LM    SEGTABAD,TCOMTABB,WRKREGSV RESTORE TEH REGS.
         XC    SVBLDNAM(SVBLNKPT-SVBLDNAM+L'SVBLNKPT),SVBLDNAM LAST
*                             NEXT BLK ADDR IS ZERO
         BR    RETURN         RETURN TO CALLER
         DROP  SVCINFOB
         EJECT
*
*        SEARCH SVCINFO BLOCK CHAIN FOR THE END OF THE CHAIN OR A
*        DUPLICATE LOADNAME ON THE CHAIN.  IF THE LOADNAME DOES NOT
*        EXIST ON THE CHAIN OR THE DUPLICATE IS HUNG OFF OF A
*        DIFFERENT TCB, SET UP TO ADD ANOTHER SVCINFO BLOCK TO THE
*        CHAIN.  IF A DUPLICATE EXISTS ON THE SAME TCB, SET UP TO
*        OVERLAY THE OLD SVCINFO BLOCK.
*
         USING IKJEGSVB,SVCINFOB
S6A21010 EQU   *
         L     WORKA,WRKBLDE  ADDR OF LOADNAME-BLDL ENTRY
         SR    PARMREG1,PARMREG1 CLEAR REGISTER
S6A21030 EQU   *
         CLC   SVBLDNAM(L'SVBLDNAM),D0(WORKA) IS LOADNAME ON CHAIN
         BE    S6A21050       YES, GO INDICATE OVLY BLK
         C     PARMREG1,SVBLNKPT IS IT END OF CHAIN
         BCR   EQUAL,RETURN   YES, GO RETURN TO CALLER
         L     SVCINFOB,SVBLNKPT NO, POINT TO NEXT BLK
         B     S6A21030       GO SEARCH NEXT BLOCK
S6A21050 EQU   *
         OI    S6AFLAGS,S6AFOVLY YES, INDICATE OVLY-NO CHAIN
         BR    RETURN         RETURN TO CALLER
         DROP  SVCINFOB
         EJECT
*
*        FILL  IN SVCINFO BLOCK
*
S6A31010 EQU   *
         USING IKJEGSVB,SVCINFOB
         L     WORKA,WRKBLDE  ADDR OF BLDL ENTRY
         USING BLDLENTY,WORKA BASE FOR DESCRIPTIVE DSECT
         MVC   SVBLDNAM(L'SVBLDNAM),MNAME LOAD MODULE NAME
         ST    TCBPTR,SVBTCBPT ADDRESS OF LOADNAME'S TCB
         MVC   SVBTTR(L'SVBTTR),MBEGTTR TTR OF BEGINNING OF MEMBER
         MVC   SVBATTR1(L'SVBATTR1+L'SVBATTR2),MATTRIB ATTRIBUTES
*                             OF MEMBER
         MVC   SVBCNCAT(L'SVBCNCAT),MCONCAT CONCATENATION NO. OF PDS
         MVC   SVBDDNAM(L'SVBDDNAM),BLANKS BLANK DDNAME FIELD
         DROP  WORKA
         USING IHADCB,DCBPTR
         C     DCBPTR,CVTLINK IS DCB USED, SYSTEM DCB
         BE    S6A31070       YES, GO CHECK FOR LINKLIB
         OI    SVBFLGS1,SVBDDNME INDICATE DDNAME AVAILABLE
         L     WORKA,TCBTIO   ADDRESS OF TIOT FROM TCB
         USING TIOENTRY,WORKA
         LA    WORKA,D0(,WORKA) CLEAR HIGH ORDER BYTE
         AH    WORKA,DCBTIOT  ADDRESS OF DCB DDNAME ENTRY
         MVC   SVBDDNAM(L'SVBDDNAM),TIOEDDNM DDNAME FROM TIOT ENTRY
         CLC   SVBDDNAM(L'SVBDDNAM),BLANKS IS DATASET CONCATENATED
         BNE   S6A31090       NO, DDNAME OK, GET LOAD ADR
         L     WORKB,TCBTIO   ADDRESS OF TIOT FROM TCB
         DROP  WORKA
         USING IEFTIOT1,WORKB ADDRESSABILITY TO TIOT
         LA    WORKB,TIOENTRY ADDRESS OF FIRST ENTRY
         DROP  WORKB          RELEASE ADDR'ABILITY TO TIOT
         USING TIOENTRY,WORKB ESTABLISH ADDR'ABILITY TO DD ENTRY
S6A31030 EQU   *
         CR    WORKA,WORKB    IS THIS ENTRY DCB DD ENTRY
         BE    S6A31090       YES, GOT DDNAME, GO GET LA
         CLC   BLANKS(L8),TIOEDDNM IS TIOT ENTRY DDNAME BLANK
         BE    S6A31050       YES, GO POINT TO NEXT ENTRY
         MVC   SVBDDNAM(L'SVBDDNAM),TIOEDDNM NO, GET DDNAME FROM TIOT
S6A31050 EQU   *
         SR    PARMREG1,PARMREG1 CLEAR REGISTER TO ZEROES
         IC    PARMREG1,TIOELNGH LENGTH OF THIS TIOT ENTRY
         AR    WORKB,PARMREG1 ADDRESS OF NEXT DD ENTRY
         B     S6A31030       GO CHECK FOR END OF LOOP
S6A31070 EQU   *
         XC    SVBDDNAM(L'SVBDDNAM),SVBDDNAM CLEAR DDNAME TO ZEROES
         CLI   SVBCNCAT,N00   IS DATASET LINKLIB
         BNE   S6A31090       NO, CAN DO NOTHING, GO ON
         OI    SVBFLGS1,SVBLNKLB INDICATE DATASET IS LINKLIB
S6A31090 EQU   *
         L     WORKA,WRKEXTL  ADDR OF EXTENT LIST
         USING XTLST,WORKA    ADDR'ABILITY TO EXTLIST
         L     WORKB,XTLNRFAC NUMBER OF SCATTERED BLOCKS
         SLL   WORKB,N2       TIMES NO. BYTES IN A WORD
         L     WORKA,XTLMSBLA(WORKB)  PTR TO ADDR OF FIRST BLOCK
         DROP  WORKA
         ST    WORKA,SVBEP    LOADED ADDR TO SVCINFO BLK
         BR    RETURN         RETURN TO CALLER
         DROP  WORKB,SVCINFOB,DCBPTR
         EJECT
*
*        IF NOT OVERLAYING A SVCINFO BLOCK, ADD NEW ONE TO CHAIN OR
*        START THE CHAIN
*
S6A41010 EQU   *
         TM    S6AFLAGS,S6AFOVLY DID WE OVLY A BLOCK
         BCR   ONES,RETURN    YES, RETURN TO CALLER
         TM    S6AFLAGS,S6ATCBCH START CHAIN FROM TCB
         BZ    S6A41030       NO, GO ADD TO EXISTNG CHAIN
         SR    PARMREG1,PARMREG1 CLEAR REGISTER
         ICM   PARMREG1,8,TCBABF FLAG BYTE FROM TCBTRN FIELD   @ZA01570
         OR    PARMREG1,SVCINFOB FLAGS PLUS HEAD OF CHAIN
         ST    PARMREG1,TCBTRN INTO TRN FIELD IN TCB
         BR    RETURN         RETURN TO CALLER
S6A41030 EQU   *
         L     WORKB,S6ASIBCH ADDR OF 0 NEXTBLK FOR CHAIN
         ST    SVCINFOB,D0(,WORKB) ADD NEW BLOCK TO CHAIN
         BR    RETURN         RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        COMPARE STORAGE KEY IN TCB TO STORAGE KEY OF ADDRESS PASSED  *
*        IN WORKA                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
CHKSTKEY EQU   *
         SPACE
         STM   PARMREG1,RETURN,WRKREGSV  SAVE REGS 1-14
         LR    PARMREG1,WORKA  REG1 = ADDR TO BE CHECKED
         SR    DCBPTR,DCBPTR   CLEAR REG 2 (SECOND ADDR OF RANGE)
         L     REG15,CVT0VL00   REG 15= ADDR OF VALIDITY CHECK ROUTINE
         BALR  RETURN,REG15     BRANCH TO VALIDITY CHECK ROUTINE
         LM    PARMREG1,RETURN,WRKREGSV  RESTORE REGS 1-14
         BNZ   S6ALOCKA         ERROR THEREFORE RETURN.
         BR    RETURN           RETURN BACK TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        RELEASE THE LOCAL LOCK
*                                                                     *
***********************************************************************
         SPACE
S6ALOCKA EQU   *
         LA    WORKB,WRKREGSV R8= ADDR OF REG SAVE AREA        @YM02260
         STM   TCOMTABB,WORKA,D0(WORKB)  SAVE REGS ACROSS LOCK @YM02260
         SPACE
S6ALOCK2 SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0006A(S6ALOCK2))
         LM    TCOMTABB,WORKA,D0(WORKB)  RESTORE THE REGS.     @YM02260
         B     S6A05015       RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PASS THE LOADNAME OF A LOAD MODULE LINK    *
*        EDITTED IN OVERLAY TO THE AT COMMAND WHEN THE OVERLAY        *
*        SUPERVISOR BRINGS A NEW SEGMENT INTO CORE                    *
*                                                                     *
***********************************************************************
         SPACE 2
         USING IKJEGSVQ,SVCINFOB
         SR    REG15,REG15    CLEAR RETURN CODE
S6A06010 EQU   *
         L     SEGTABAD,RBGRS12 ADDRESS OF SEGMENT TABLE
         LA    SEGTABAD,D0(,SEGTABAD) ADDRESS OF SEGMENT TABLE
         L     R10,PSAAOLD           ADDR OF THE NEW ASCB      @ZA06226
         L     R10,ASCBASXB-ASCB(R10) ADDR OF THE ASXB         @ZA06226
         L     R10,ASXBLWA-ASXB(R10)  ADDR OF THE LWA          @ZA06226
         L     R10,LWATEST-LWA(R10)   ADDR OF SVCINFO BLOCK    @ZA06226
         ST    SVCINFOB,TSTTRN HEAD OF SVCINFO BLOCK CHAIN     @ZA06226
S6A06030 EQU   *
         LTR   SVCINFOB,SVCINFOB IS THEIR A CHAIN
         BZ    S6ALOCKA       NO, GO SET UP RETURN
         C     TCBPTR,SVQTCBPT THIS CHAIN FOR CURRENT TCB
         BE    S6A06050       YES, GO SEARCH CHAIN
         L     SVCINFOB,SVQLNKPT ADDR OF NEXT TCB CNTRL BLK
         B     S6A06030       GO CHECK FOR A CHAIN
S6A06050 EQU   *
         L     SVCINFOB,SVQBLKPT PTR TO FIRST BLK ON CHAIN
         DROP  SVCINFOB
         USING IKJEGSVB,SVCINFOB
S6A06070 EQU   *
         C     SEGTABAD,SVBEP IS SEGTAB FOR THIS SVC BLK
         BE    S6A06110       YES, GO CHECK FOR OVLY
S6A06090 EQU   *
         C     DCBPTR,SVBLNKPT IS THIS THE LAST BLOCK
         BE    S6ALOCKA       YES, GO SET UP RETURN
         L     SVCINFOB,SVBLNKPT POINT TO NEXT SVCINFO BLK
         B     S6A06070       GO CHECK NEXT SVCINFO BLK
S6A06110 EQU   *
         TM    SVBATTR1,SVBOVLY IS LOAD MODULE IN OVERLAY
         BZ    S6A06090       NO, GO BACK-CONTINUE SEARCH
         B     S6A03030       YES, GO PASS LOADNAME TO
*                             AT COMMAND
         DROP  SVCINFOB
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL SAVE THE SVC INFO IF TEST IS NOT RUNNING   *
*                                                                     *
***********************************************************************
         SPACE 2
         USING IKJEGSVQ,SVCINFOB
S6A07010 EQU   *
         SPACE
         BAL   RETURN,GETPARMS  OBTAIN PARMS FROM CONTENT SUPR @YM05036
         SPACE
         BAL   RETURN,CHKPPRB CHECK OUT THE PP TYPE.
         L     SVCINFOB,TCBTRN TRN FIELD OF TCB CAN BE
*                             HEAD OF SVCINFO BLK CHAIN
*                             ZERO
         LA    SVCINFOB,D0(,SVCINFOB) CLEAR TRN FLAGS FIELD
         LTR   SVCINFOB,SVCINFOB IS IT FIRST TIME
         BNZ   S6A07070       NO, GO SET UP TO SEARCH
         OI    S6AFLAGS,S6ATCBCH INDICATE CHAIN FROM TCB
S6A07030 EQU   *
         BAL   RETURN,S6A11010 GO GET AN SVCINFO BLOCK
S6A07050 EQU   *
         BAL   RETURN,S6A31010 GO FILL IN GOTTEN SVC BLK
         BAL   RETURN,S6A41010 GO START CHAIN FROM TCBTRN
         SR    REG15,REG15    CLEAR RETURN CODE
         B     S6ALOCKA       GO SET UP RETURN TO ISSUER
         DROP  SVCINFOB
         USING IKJEGSVB,SVCINFOB
S6A07070 EQU   *
         BAL   RETURN,S6A21010 GO SEARCH FOR DUP OR END
         LR    WORKA,SVCINFOB ADDRESS OF AREA TO CHANGE
         BAL   RETURN,CHKSTKEY GO CHECK STORAGE KEY
         TM    S6AFLAGS,S6AFOVLY ARE WE GOING TO OVLY A BLK
         BO    S6A07050       YES, GO SET UP TO OVLY BLK
         LA    WORKA,SVBLNKPT LAST 0 NEXTBLK ADDRESS
         ST    WORKA,S6ASIBCH SAVE FOR CHAINNING
         B     S6A07030       GO SET UP TO GET A SVC BLK
         EJECT
***********************************************************************
*        THE SVC MUST VARIFY THAT THE PROGRAM IT IS SERVICING IS NOT  *
*        PRIVILDGED. (P.P. KEY NOT SUPERVISOR STATE, AND NOT AN SVRB) *
***********************************************************************
         SPACE
CHKPPRB  EQU   *
         LR    WORKB,SVRBPTR  SAVE MY RB ADDR.
         LTR   DCBPTR,DCBPTR  IS IT OVERLAY SUPR?
         BZ    CHKTCB         YES IT IS OVERLAY SUPR.
         L     SVRBPTR,RBLINK  GET THE ADDR OF PP RB.
         TM    RBCDFLGS,RBCDATCH CREATED BY ATTACH?
         BO    CHKTCB         YES,GO VERIFY TCB KEY
         L     SVRBPTR,RBLINK  GET THE ADDR OF PP RB.
         TM    RBSTAB1,RBFTP-RBFTIRB  WHAT KIND OF RB IS IT(PRB OR IRB)
         BNZ   PPRBFAIL       IT IS NOT A PRB OR IRB.
         TM    RBOPSW+N1,PSWBIT  DETERMINE IF IN PP MODE
         BZ    PPRBFAIL       NOT IN PP MODE.
         TM    RBOPSW+N1,PSWPKEYF  IS THE PROTECT KEY ZWRO.
         BZ    PPRBFAIL       NO IT IS KEY 0-7
         LR    SVRBPTR,WORKB  RESTORE MY RB POINTER
         BR    RETURN         ALL IS OK THEREFORE EXIT.
         SPACE
PPRBFAIL EQU   *              IF TEST IS RUNNING INDICATE ERROR
*                             ELSE JUST RETURN DOING NOTHING.
         LR    SVRBPTR,WORKB  RESTORE MY RB POINTER
         TM    TCBABF,TCBTCP  IS TEST RUNNING.                 @YM02404
         BZ    S6ALOCKA       EXIT WITHOUT ERROR MSG.          @YM02404
         LA    WORKB,WRKREGSV R8= ADDR OF REG SAVE AREA        @YM02260
         STM   TCOMTABB,WORKA,D0(WORKB)  SAVE REGS ACROSS LOCK @YM02260
         SPACE
S6ALOCK3 SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0006A(S6ALOCK3))
         LM    TCOMTABB,WORKA,D0(WORKB)  RESTORE THE REGS.     @YM02260
         L     REG15,IOVCON   R15= ADDR OF IO FOR MSG          @ZA04126
         MVC   TSTIOPRM(IOPRMLN),IOPRM  PLACE IO PARM LIST IN WORKAREA
         MVI   TSTIOPRM,MSGINDC PLACE MSG INDICATOR IN LIST
         LA    PARMREG1,TSTIOPRM    R1= ADDR OF THE IO PARM LIST
         L     SOMESAVE,REGSAVE6  R13= ADDR OF WORKAREA FOR IO @YM07131
         BALR  14,REG15       GO TO IO.                        @ZA04126
         B     S6A05015       EXIT IT AS ERROR WAS HANDLED.
CHKTCB   TM    TCBPKF,PSWPKEYF IS THIS SUPERVISOR KEY?         @YM02404
         BZ    PPRBFAIL       YES,ERROR EXIT                   @YM02404
         TM    TCBFLGS3,TCBFSM  IS IT IN SUPR STATE            @YM02404
         BO    PPRBFAIL       YES THEREFORE HANDLE ERROR.      @YM02404
         LR    SVRBPTR,WORKB  RESTORE MY RB POINTER            @YM02404
         BR    RETURN         ALL IS OK THEREFORE EXIT.        @YM02404
         EJECT
********
*    GET 12 BYTES  OF SP255 STORAGE AND CHAIN THE SVCINFO BLOCKS
*        FILLING IN THE TCB ADDR AND BLOCK PTR
********
         SPACE 5
GETCHAIN EQU   *
         L    R7,PSAAOLD           GET ASCB ADDR               @ZA06226
         L    R0,CHAINLEN          12 BYTES SP=255             @ZA06226
         GETMAIN RU,LV=(0),BRANCH=YES,SP=255  GET THE STORAGE @ZA06226
         XC   N0(N12,R1),N0(R1)     ZERO THE STORAGE           @ZA06226
         OC   N4(N8,R1),S6ATCBPT   FILL IN TCB AND BLOCK PTR   @ZA06226
         L    R7,PSAAOLD           GET ASCB ADDR               @ZA06226
         L    R7,ASCBASXB-ASCB(R7) GET ASXB ADDR               @ZA06226
         L    R7,ASXBLWA-ASXB(R7) GET LWA ADDR                 @ZA06226
         MVC  N0(4,R1),LWATEST-LWA(R7) PUSH DOWN THE CHAIN   @ZA06226
         ST   R1,LWATEST-LWA(R7) DITTO                         @ZA06226
         ST   R1,TSTTRN          PTR ALSO IN TCOMTAB           @ZA06226
         XC   S6ATCBPT(L'S6ATCBPT),S6ATCBPT ZERO THIS FIELD    @ZA06226
*                                TO PREVENT MNL FROM CHAINING  @ZA06226
         B    S6A04010           GO TO MNL IF REQUIRED         @ZA06226
        EJECT
***********************************************************************
*        GET THE BLDL ENTRY AND EXTENT LIST FROM THE CALLERS SVRB
***********************************************************************
         SPACE
GETPARMS EQU   *              GET PARMS FROM CONTENT SUPR SVRB.
         SPACE
         L     WORKA,RBLINK      GET THE ADDR OF CALLERS RB
         L     WORKA,X74(WORKA)  R7= CALLERS WORK AREA
         USING WKAREA,WORKA     ESTABLISH ADDR'ABILITY TO CALLERS AREA
         LA    PARMREG1,WKNAME  ADDR OF THE BLDL NAME
         ST    PARMREG1,WRKBLDE PLACE THE ADDR INTO TEMP WORKAREA
         L     WORKA,WKCDADDR  R7= ADDR OF THE CDE
         DROP  WORKA          RELEASE ADDR'ABILITY TO CALLER AREA
         USING CDENTRY,WORKA  ADDR'ABILITY TO CDE
CDESERCH EQU   *              CDE SEARCH LOOP
         TM    CDATTR,CDMIN   IS THE CDE A MINOR
         L     WORKA,CDXLMJP  ADDR OF THE EXT LIST (OR MAJOR)
         BO    CDESERCH       LOOP BACK FINDING MAJOR
         ST    WORKA,WRKEXTL  SAVE ADDR OF THE EXTLIST..
         BR    RETURN         EXIT TO CALLER                   @YM05036
         SPACE
         DROP  WORKA
         EJECT
***********************************************************************
*                                                                     *
*        WE HAVE TO DETERMINE WHAT TO DO WITH THE ESTAE FAILURE.      *
*              1) IF TEST IS RUNNING END THE SESSION.                 *
*              2) IF TEST IS NOT RUNNING RETURN WITH 4.               *
*                                                                     *
***********************************************************************
         SPACE
ESTAFAIL DS    0H             ESTAE FAILED.
         SPACE
         TM    TCBABF,TCBTCP  IS TEST RUNNING
         BZ    S6A08010       NO, RETURN TO CALLER WITH 4.
         L     TCOMTABB,TCBTRN GET ADDR OF TCOMTAB
         USING TCOMTAB,TCOMTABB ADDRESSABILITY TO TCOMTAB
         OI    TSTFLGS4,TSTSVCAB  INDICATE TO MNL TO TERMINATE
         B     S6ALOCKB       POST MNL TO END TEST SESSION..
S6A08010 DS    0H             RETURN WITH 4.
         LA    REG15,D4       REGISTER 15 = 4..
         B     S6ALOCKA       RETURN.
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS USED TO SYNCH TO IKJEGSTA FOR HANDLING ABENDS
*                                                                     *
***********************************************************************
         SPACE
         SPACE
S6AESTAE DS    0F             START OF DUMMY STA
         USING S6AESTAE,REG15  RE-ESTABLISH ADDR'ABILITY       @YM04131
         L     TCBPTR,FLCCVT R4= ADDR OF CVT                   @YM04131
         USING CVT,TCBPTR    ADDR'ABILITY TO CVT               @YM04131
         L     TCBPTR,CVTTCBP  R4= ADDR OF TCB                 @YM04131
         L     TCBPTR,D4(,TCBPTR)  R1= ADDR OF THE TCB         @YM04131
         USING TCB,TCBPTR     ADDRABILITY TO TCB               @YM04131
         L     TCOMTABB,TCBTRN  R9= ADDR OF TCOMTAB
         TM    TCBABF,TCBTCP  IS TEST RUNNING.
         BZ    ESTAERR        NO TEST IS NOT IN CONTROL
         USING TCOMTAB,TCOMTABB  ADDR'ABILITY TO TCOMTAB
         L     REG15,STAEVCON    R15= ADDR OF IKJEGSTA         @ZA04126
         LR    R13,RETURN         SAVE R14 AROUND BALR         @ZA04126
*                        R13 IS NOT USED BY IKJEGSTA           @ZA04126
         BALR  RETURN,REG15   TRANSFER CONTROL TO IKJEGSTA     @ZA04126
         LTR   R1,R1          IS A WORK AREA AVAIL ??          @ZA04126
         BZR   R13            NO, JUST RETURN                  @ZA04126
         USING SDWA,R1        YES-SET UP FOR RETRY             @ZA11389
         L     R3,SDWAPARM    GET W/A ADDRESS FOR RETRY        @ZA11389
         ST    R3,SDWASR03    SAVE FOR RETRY RTN.              @ZA11389
         ST    TCOMTABB,SDWASR09   SAVE PTR TO TCOMTAB         @ZA11389
         L     TSVCBASE,N8(,R3)    GET BASE REG=RTSVCBASE      @ZA11389
         ST    TSVCBASE,SDWASR06    SAVE FOR RETRY ROUTINE     @ZA11389
         SETRP RETADDR=(PARMREG0),RECORD=YES,FRESDWA=YES,RC=4,         X
               RETREGS=YES                                     @ZA11389
         BR    R13            RETURN TO CALL                   @ZA04126
         DROP  REG15          RELAESE TEMP BASE.
         SPACE
ESTAERR  DS    0H             SOMETHING IS A MESS PERCOLATE..
         SR    REG15,REG15    CLEAR REG 15..
         BR    RETURN         EXIT TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE IS THE RETRY ROUTINE OF IGC0006A                *
*        ON ENTRY ALL MY REGISTERS ARE VALID DUE TO SETRP.    @ZA11389*
*                                                                     *
***********************************************************************
         SPACE
S6ARETRY DS    0F             THE START OF THE RETRY ROUTINE
         SR    REG15,REG15    CLEAR RETURN CODE
         CLC   SVCNQ(L'SVCNQ),WRKENQ IS THE DEQ IN EFFECT.
         BE    S6A05010       NO THEREFORE EXIT TO CALLER
         B     S6A05015       EXIT TO THE CALLER.
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
***********************************************************************
         SPACE 2
         DS    0F
IOVCON   DC    V(IKJEGIO)     ADDR OF MSG ISSUER FOR BALR      @ZA04126
STAEVCON DC    V(IKJEGSTA)    ADDR OF ESTAE PROCESSOR          @ZA04126
SVCNQ    DC    CL8'IKJTMPNM'  THIS IS THE SVC (61, 97) ENQ LOCK@ZA07137
POSTCODE DC    X'04000000'    COMPLETION CODE FOR ECB
ADDRMASK DC    X'00FFF800'    AND FIELD FOR AREA ADDRESS
KEYMASK  DC    X'000000F0'    AND FIELD FOR AREA KEY
S6ASVBLV DC    AL1(0)       GETMAIN PARMS FOR SVC BLK        @ZA06226
         DC    AL3(36)        GET 36 BYTES IN SP 255
CHAINLEN DC   AL1(0)        SUBPOOL NUMBER                   @ZA06226
        DC   AL3(12)         12 BYTES                          @ZA06226
BLANKS   DC    8C' '                        BLANKS FOR CLEARING WKAREAS
ENABLE   DC    X'FF'                        ENABLED SYSTEM MASK
MSGINDC  EQU   X'02'          MSG INDICATOR FOR LIST FORM.
PSWBIT   EQU   X'01'          PSW PP MODE BIT.
PSWPKEYF EQU   X'80'          PSW PP MODE KEYS.
SUPERZAP DC    50C'Z'         SUPERZAP PATCH AREA
         SPACE
S6ASPLST IKJEGSPL RTRY=S6ARETRY,ABNTB=STAETAB,MODNM=IGC0006A,  @ZA11389*
               TNM=TEST-SVC                                    @ZA11389
S6ASPLEN EQU   *-S6ASPLST                                      @ZA11389
         SPACE
STAETAB  DS    0F             ABEND TABLE FOR IKJEGSTA
         DC    X'FF'          NO ENTRIES IN TABLE
         SPACE 3
*        ISSUE THE LIST FORM OF THE ENQ..............
         SPACE
LISTENQF ENQ   (LISTENQF,LISTENQF,E,8),ECB=LISTENQF,MF=L
LISTENQE EQU   *-LISTENQF     LENGTH OF LIST FORM OF ENQ
         SPACE 3
*        ISSUE THE LIST FORM OF THE DEQ..............
         SPACE
LISTDEQF DEQ   (LISTDEQF,LISTDEQF,8),RET=HAVE,MF=L
LISTDEQE EQU   *-LISTDEQF     LENGTH OF LIST FORM OF DEQ
         SPACE
IOPRM    IKJEGSIO  MSG,FIRST=M0053,SECOND=M0217,ID=S6A01,MF=(L)
IOPRMLN  EQU   *-IOPRM        GET THE LENGTH OF PARM LIST
         EJECT
***********************************************************************
*                                                                     *
*        DSECTS                                                       *
*                                                                     *
***********************************************************************
         SPACE 2
WORKPART DSECT     ,    THIS DSECT DESCRIBES THE GENERAL SAVE AREA
*                       GETMAIN USED AS A WORK AREA
*
WRKSTART DS    0F             START OF WORK AREA
*        ***************************************************** @ZA11389
*        *  UNDER NO CIRCUMSTANCES MAY S6ASPL BE MOVED.      * @ZA11389
*        *  IT'S POSITION MAKES IT POSSIBLE TO RE-INIT       * @ZA11389
*        *  REGISTERS NEEDED BY ESTAE/RETRY ROUTINES         * @ZA11389
*        ***************************************************** @ZA11389
S6ASPL   DS    XL(S6ASPLEN)   ESTAE PARAMETER LIST             @ZA11389
WRKREGSV DS    18F            REGISTER SAVE AREA FOR BRANCH ENTRIES
WRKESTAE DS    4F             ESTAE WORK AREA
WRKENQ   DS    CL8            STORAGE AREA FOR THE ENQ CHARACTER STRING
WRKREGRT DS    1F             SAVE RETURN ADDRESS
WRKEXTL  DS    1F             ADDR OF THE EXTLIST
WRKBLDE  DS    1F             ADDR OF THE BLD ENTRY
WRKFLGSV DS    1X             FLAG SAVE AREA                   @YM04978
WRKSVRBS DS    3X             SAVE AREA FOR PRIOR SVRB ADDRESS @ZA07138
*                             FROM ECBPP              @ZA09259,@ZA10462
WRKECB   DS    1F             WAIT ECB FOR ENQ RESOURCE        @YM07115
         ORG   WRKREGSV       REESTABLISH TO TOP
WRKENQPR DS    1F             PREFIX FOR ECB ADDRESS           @YM07115
WRKENQWK DS    0F             ENQ WORKAREA
WRKENQFG DS    X              FLAG FOR END OF LIST
WRKENQTP DS    2X             TPYE INDICATOR
WRKENQRC DS    X              RETURN CODE FROM ENQ
         ORG
WRKNQRNM DS    CL8            RNAME FOR ENQ/DEQ                @ZA07137
WRKLEN   EQU   *-WRKSTART     LENGTH OF GENERAL WORKAREA       @ZA11389
         EJECT
         IHASCVT
         EJECT
         IHAFETWK
         EJECT
         IHACDE
         EJECT
         IHAXTLST
         EJECT
         IHAPSA
         EJECT
         IKJRB
*                       IN MY SVRB AS USED AS A WORK AREA
*
         ORG   RBEXSAVE
S6ATCBPT DS    A              TCB ADDRESS FOR MAINLINE
S6ASIBPT DS    A              SVC BLK ADDR FOR MAINLINE
S6ASIBCH DS    A              ADDR OF 0 NEXTBLK IN CHAIN
S6ARETRN DS    A              RETURN ADDRESS
S6ADUMMY DS    H              HALF WORD OF SPACE
AREAKEY  DS    X              STORAGE KEY OF AREA
S6AFLAGS DS    X              FLAGS FOR SVC PROCESSING
S6ATCBCH EQU   B'10000000'    CHAIN SVB FROM TCB.
S6AFOVLY EQU   B'01000000'    DUPLICATE SVB FOUND.
*              B'00XXXXXX'    RESERVED BITS.
S6ALEN   EQU   *-S6ATCBPT     LENGTH OF SVRB WORKAREA
         EJECT
         IKJEGSVB
         EJECT
         IKJEGSVQ
         EJECT
BLDLENTY DSECT     ,    THIS DSECT DESCRIBES THE STANDARD PART OF THE
*                       DIRECTORY ENTRY AS SUPPLIED BY BLDL
*
MNAME    DS    D                            MEMBER NAME
MBEGTTR  DS    3X                           TTR OF BEG OF MEMBER
MCONCAT  DS    X                            CONCATENATION NO. OF PDS
MLIBRARY DS    X                            TYPE LIBRARY INDICATOR
*                                                X'01' FOUND IN LINKLIB
MFILLER  DS    9X                           OTHER INFO NOT PERTINET
MATTRIB  DS    2X                           MEMBER ATTRIBUTES
         EJECT
         TCOMTAB
         EJECT
         TSTCWORK
         EJECT
         CVT   DSECT=YES
         EJECT
         IKJTCB LIST=YES
         IEZJSCB
         IKJPSCB
         EJECT
         IHASDWA
         EJECT
IHADCB   DCBD  DEVD=DA,DSORG=PO
         EJECT
IEFTIOT1 DSECT
         IEFTIOT1
         EJECT
         IKJEFLWA
         EJECT
         IHAASCB
         EJECT
         IHAASXB
         END   IGC0006A
