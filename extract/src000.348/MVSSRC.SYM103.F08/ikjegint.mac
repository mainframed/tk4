GINT     TITLE 'IKJEGINT - TSO TEST INITIALIZATION - MAIN LINE CODE'
         COPY  IKJEGSIO
         EJECT
*D638400                                                       @YM07110
*A347600-347800                                                @ZA00859
IKJEGINT CSECT
***********************************************************************
*                                                                     *
* STATUS --                                                           *
*    VERSION NO. 01, OS/VS2 RELEASE NO. 02, 06/06/73                  *
*                                                                     *
* FUNCTION --                                                         *
*    THIS MODULE RECEIVES CONTROL FROM THE TMP AS THE RESULT OF       *
*    A LINK.IT IS THE PRIMARY INITIALIZATION ROUTINE OF THE TEST      *
*    CONVERSATIONAL DEBUGGING PACKAGE FOR TSO.THIS ROUTINE ACQUIRES   *
*    STORAGE NEEDED BY TEST,LOCATES SUB-COMMANDS VIA BLDL,INITIAL-    *
*    IZES THE COMMUNICATION TABLE AND SETS UP INITIAL QUALIFICATION   *
*    FOR ANY SUB-TASK WHICH EXISTS.IF NONE EXISTS,THE TEST LOADER     *
*    IS ATTACHED TO BRING IN THE REQUESTED PROGRAM AS A SUB-TASK      *
*    OF THE TEST TASK.                                                *
*                                                                     *
* ENTRY POINTS --                                                     *
*    IKJEGINT                                                         *
*                                                                     *
* INPUT --                                                            *
*    TEST PARAMETER LIST (TPL) POINTED TO BY REGISTER 1.              *
*                                                                     *
* OUTPUT --                                                           *
*    TCOMTAB IS INITIALIZED FOR TEST'S MAINLINE ROUTINE               *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IKJPARS  LINKED - TO PARSE TEST COMMAND.                    *
*         IKJEGLDR ATTACHED - TO BRING IN REQUESTED PROGRAM.          *
*         IKJEGIO BRANCHED - TO WRITE DIAGNOSTIC MESSAGES.            *
*         IKJDAIR LINKED - TO ALLOCATE AND UNALLOCATED DATA SETS      *
*         IKJEFF18 LINKED - TO TO HANDLE DAIR ERROR MESSAGES          *
*         IKJDFLT LINKED - TO DEFAULT THE USER SUPPLIED DS.           *
*                                                                     *
* EXITS, NORMAL --                                                    *
*         BRANCH TO IKJEGMNL                                          *
*                                                                     *
* EXITS, ERROR --                                                     *
*         RETURN TO TMP.                                              *
*                                                                     *
* TABLES/WORKAREAS --                                                 *
*    TCOMTAB IS THE TEST COMMUNICATION TABLE BUILT BY INITIALIZATION  *
*    WORKAREAS HUNG FROM THIS TABLE ARE GOTTEN BY THIS MODULE         *
*    OUTBUF, ATTNBUF, CONAREA, BLDLIST, SCPPAD, REGSAVE1-5, SCPP4K    *
*                                                                     *
* ATTRIBUTES --                                                       *
*    RE-ENTRANT.                                                      *
*    REFRESHABLE.                                                     *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    NONE                                                             *
*                                                                     *
* NOTES --                                                            *
*    REGISTER CONVENTION FOR INITIALIZATION ARE AS FOLLOWS            *
*    REG 9 IS TCOMTAB POINTER                                         *
*    REG 10 IS THE TPL(TEST PARAMETER LIST) POINTER                   *
*    REG 11 ONLY USED FOR LINK REGISTER                               *
*    REG 12 IS THE BASE REGISTER                                      *
*    REGISTER 0,1,14,15 ARE USED BY MOST SUBROUTINE'S BAL-ED TO.      *
*                                                                     *
* CHANGE ACTIVITY --                                                  *
*    @ZA15329 - NEAR LABEL SPECIAL INSTRUCTION ST R2,PPEXIT DELETED   *
*    @ZA18794 - PUESDO POST ECBTERM IF ABEND OCCURES IN INITALIZATION *
*               AFTER LOADING PROBLEM PROGRAM TO BE TESTED.           *
*    @ZA25752 - MSGIKJ57370I ISSUED WITH IKJ57336I TEXT - REGS 3 AND  *
*                   4 SET UP INCORRECTLY,MSG IKJ57002I WILL BE ISSUED *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*
* GENERAL REGISTER EQUATES
*
***********************************************************************
         SPACE 2
R0       EQU   0              GENERAL REGISTER 0
R1       EQU   1              GENERAL REGISTER 1
R2       EQU   2              GENERAL REGISTER 2
R3       EQU   3              GENERAL REGISTER 3
R4       EQU   4              GENERAL REGISTER 4
R5       EQU   5              GENERAL REGISTER 5
R6       EQU   6              GENERAL REGISTER 6
R7       EQU   7              GENERAL REGISTER 7
R8       EQU   8              GENERAL REGISTER 8
R9       EQU   9              GENERAL REGISTER 9
R10      EQU   10             GENERAL REGISTER 10
R11      EQU   11             GENERAL REGISTER 11
R12      EQU   12             GENERAL REGISTER 12
R13      EQU   13             GENERAL REGISTER 13
R14      EQU   14             GENERAL REGISTER 14
R15      EQU   15             GENERAL REGISTER 15
         SPACE
***********************************************************************
*        MESSAGE EQUATES, NUMBERS OF MESSAGE IN MESSAGE CSECT
***********************************************************************
TESTFAIL EQU   0100           TEST FAILED MSG
SVCFAIL  EQU   0273           BREAKPOINT SVC ERROR MESSAGE (2 ND)
DAIRNO   EQU   0041           NUMBER OF 'DAIR' IN STATIC INSERT TABLE
DEFLTNO  EQU   0046           NUMBER OF 'IKJDFLT' STATIC INSERT TABLE
EFF18NO  EQU   0042           NUMBER OF 'IKJEFF18' STATIC INSERT TABLE
PARSENO  EQU   0040           NUMBER OF 'IKJPARS' STATIC INSERT TABLE
BADMEMNO EQU   0002           BAD MEMBER MESSAGE NUMBER
NOSTROG  EQU   0260           LACK OF STORAGE MESSAGE NUMBER  (2 ND)
MGNOTRY  EQU   0001           NO PROGRAM LEFT TO TEST
ATTCHFL  EQU   0104           XXX FAILED COMMAND SYS ERROR MSG NO.
NOTCONT  EQU   0258           UNABLE TO CONTINUE TEST MSG NO.. (2 ND)
ATTCHNO  EQU   0027           ATTACH FIX INSERT NO.
N1       EQU   1              DECIMAL ONE                      @ZA05807
         EJECT
***********************************************************************
*                                                                     *
*        PERFORM INITIAL PROCESSING FOR THE TEST COMMAND              *
*        PROCESSOR --                                                 *
*                                                                     *
*        1 --  SAVE ENTRY REGISTERS.                                  *
*                                                                     *
*        2 --  ACQUIRE MAIN STORAGE FOR TEST COMMUNICATION TABLE,     *
*              REGISTER SAVE AREAS, OUTPUT BUFFER, AND SUBCOMMAND     *
*              WORK AREAS.                                            *
*                                                                     *
*        3 --  SET MAIN STORAGE AREAS TO ZERO.                        *
*                                                                     *
*        4 --  ISSUE THE STAE MACRO INSTRUCTION TO ESTABLISH AN       *
*              ABNORMAL END EXIT FOR THIS LOAD OF THE TEST CP.        *
*                                                                     *
*        R9 -- ADDRESS OF TCOMTAB.                                    *
*        R10 - ADDRESS OF TPL.                                        *
*        R12 - BASE REGISTER.                                         *
*                                                                     *
***********************************************************************
         SPACE 2
         SAVE  (14,12),,*     SAVE CALLER'S REGS.
         LR    R12,R15        ESTABLISH ADDRESSABILITY FOR THIS
         USING IKJEGINT,R12   CSECT.
INT01010 EQU   *
         LR    R10,R1         ESTABLISH ADDRESSABILITY TO THE
         USING TPL,R10        TPL.
         SPACE 2
         L     R0,TCOMTABL    SIZE OF TCOMTAB FOR GETMAIN.
         GETMAIN RU,LV=(0),SP=1  GET STORAGE FOR TCOMTAB, WORK AREAS.
         SPACE 2
         LR    R9,R1          ESTABLISH ADDRESSABILITY TO
         USING TCOMTAB,R9     THE TCOMTAB.
         SPACE 2
         LR    R2,R9          BEGINNING ADDRESS OF GOTTEN CORE
         LR    R4,R9          TO BE SET TO ZERO,
         SR    R5,R5          SHOW ENTIRE FIELD TO BE SET TO
         L     R3,TCOMTABL    ZERO WITH X'00' AS PADDING CHAR
         MVCL  R2,R4          SET TCOMTAB TO ZERO.
         EJECT
***********************************************************************
*                                                                     *
*        INITIALIZE FIELDS IN THE TEST COMMUNICATION TABLE --         *
*                                                                     *
*        1 --  SET-UP ADDRESS OF TEST'S TCB.                          *
*                                                                     *
*        2 --  PLACE ENTRY POINTS OF THE I/O SERVICE ROUTINES IN      *
*              TCOMTAB.  NOTE THAT VCONS IN THIS MODULE MUST HAVE     *
*              SAME ORDER AS ENTRY POINT LABELS IN TCOMTAB.           *
*                                                                     *
*        3 --  ESTABLISH THE PSEUDO BREAKPOINT IN TCOMTAB.            *
*                                                                     *
*        4 --  MOVE ADDRESSES OF ECBS, UPT, AND ECT FROM THE TPL      *
*              TO TCOMTAB.                                            *
*                                                                     *
*        5 --  COMPUTE ADDRESSES OF VARIOUS TEST WORKAREAS AND        *
*              REGISTER SAVE AREAS AND PLACE IN TCOMTAB.              *
*                                                                     *
*        6 --  INVOKE SVC 97 TO PLACE TCOMTAB ADDRESS IN TEST'S       *
*              TCB.                                                   *
*                                                                     *
*        7 --  OBTAIN TERMINAL LINE SIZE AND SAVE IN TCOMTAB FOR      *
*              USE OF I/O ROUTINES.                                   *
*                                                                     *
*        R8 -- ADDRESS OF INITIALIZATION'S WORK AREA.                 *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R4,CVTPTR       CVT ADDR.
         USING CVT,R4          ADDRESSABILITY TO CVT.
         L     R4,CVTTCBP      NEW-CURRENT ADDR.
         DROP  R4
         MVC   TSTTCB(L'TSTTCB),X4(R4) TSTTCB=TEST'S TCB.
         SPACE 2
         MVC   TSTIO(L'TSTIO),IOADDR  PLACE ADDR OF  IO INTO TCOMTAB
         MVC   TSTCONVT(N12),CVTBDSTA  ADDR OF CVT, BLD, STA IN TCOMTAB
         MVC   TSTSRHRT(X4),SRHRTVCN   PLACE ADDR OF SRH INTO TCOMTAB
         SPACE 2
         MVC   OPCODTAB(X8),OPCODV  INSERT THE OP CODE TABLE ADDR
         MVC   TSTSVC(L'TSTSVC),SVC  PSEUDO BREAKPOINT SVC.
         SPACE 2
         L     R2,TPLCECB     ATTACHED CP ECB ADDRESS.
         L     R3,TPLIECB     STAI ECB ADDRESS.
         L     R4,TPLAECB     ATTN ECB ADDRESS.
         L     R5,TPLMECB     STOP/MODIFY ECB.
         STM   R2,R5,ECBTERM  SAVE.
         L     R2,TPLUPT      ADDRESS OF UPT FOR PARMLIST
         L     R3,TPLECT      ADDRESS OF ECT FOR PARMLIST
         STM   R2,R4,PARMLIST UPT ADDR, ECT ADDR, ATTN ECB ADDR
         SPACE 2
         LA    R1,TCOMLEN(,R9) ADDR OF OUTPUT BUFFER
         ST    R1,OUTBUF      INITIALIZE POINTER TO BUFFER.      ******
         LA    R2,OUTBUFRL(,R1) ADDR OF CONVERT WORK AREA
         ST    R2,CONAREA     INITIALIZE POINTER TO CVT WORKAREA.******
         LA    R3,CONAREAL(,R2) ADDR OF GENERAL WORK AREA
         LA    R4,CWORKLEN(,R3) ADDR OF REGISTER SAVE AREA 1
         LA    R5,N72(,R4)    ADDR OF REGISTER SAVE AREA 2
         LA    R6,N72(,R5)    ADDR OF REGISTER SAVE AREA 3
         LA    R7,N72(,R6)    ADDR OF REGISTER SAVE AREA 4
         LA    R8,N72(,R7)    ADDR OF REGISTER SAVE AREA 5
         STM   R3,R8,WORKAREA PLACE ADDRESSES IN TCOMTAB         ******
         LA    R1,N72(,R8)    ADDR OF REGISTER SAVE AREA 6
         ST    R1,REGSAVE6    PLACE ADDRESS IN TCOMTAB
         SPACE
         ST    R13,X4(,R4)    SAVE BACKWARD POINTER.
         ST    R4,X8(,R13)    SAVE FORWARD POINTER.
         LR    R13,R4         R13=NEW REGSAVE ADDR.
         SPACE 2
         SR    R8,R8          ZERO R8
         LA    R0,INTWLEN     SIZE OF INT WORKAREA FOR GETMAIN.
         GETMAIN RC,SP=1,LV=(0)    GET STORAGE FOR INT WORK AREAS.
         LTR   R15,R15        WAS THE GETMAIN OK
         BNZ   GETERROR       NO THEREFORE PUTOUT ERROR MSG
         SPACE 2
         LR    R8,R1          R8= ADDR OF THE WORK AREA FOR INT
         ST    R8,N0(,R13)    SAVE WORKAREA ADDRESS FOR ABEND.
         USING INTWKARA,R8    ESTABLISH ADDRESSABILITY TO WORK
*                             AREA.
         SPACE 2
***********************************************************************
*        ISSUE AN ESTAE
***********************************************************************
         STM   R14,R12,N12(R13) SAVE THE REGS FOR RETRY
         XC    INTWKARA(INTWLEN),INTWKARA CLEAR WORK AREA
         L     R2,TSTSTAE     R2=ADDR OF IKJEGSTA
         ESTAE (R2),CT,PARAM=INTSPL,RECORD=YES,MF=(E,INTWKARA)
         LTR   R15,R15        IS R15 NON ZERO
         BNZ   ESTAERR        YES IT IS NON ZERO ERROR CONDITION
         SPACE 2
INT01030 EQU   *              CONTINUE AS ESTAE WAS OK
         L     R2,TSTTCB      ADDRESS OF TMP/TEST TCB.
         IKJEGS9G TRN,TCBADDR=(R2),VALUE=(R9),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NONZERO THEN ERROR
         LA    R2,TSTDSECB    TEST ECB ADDR IN TCOMTAB.
         ST    R2,ECBTST      SAVE TEST ECB ADDRESS.
         SPACE 2
         GTSIZE
         LR    R11,R1         PUT THE TERMINAL LENGTH IN R11.
         SLL   R11,N16(R0)    SHIFT FOR STORE.
         STM   R10,R11,TPLPTR SAVE TPL ADDRESS AND TERMINAL LINE
*                             LENGTH IN TCOMTAB
         EJECT
***********************************************************************
*                                                                     *
* DETERMINE IF TEST WAS INVOKED BY THE TMP DUE TO AN ATTENTION        *
* INTERRUPT OR DUE TO THE PREVIOUS COMMAND PROCESSOR COMPLETING       *
* ABNORMALLY.                                                         *
*                                                                     *
***********************************************************************
         SPACE 2
         OC    PPTCB(L'TPLNTCB),TPLNTCB MOVE AND TEST ABENDING TCB PTR
         BNZ   INT03010       YES,ABEND,SKIP NEXT TEST.
         OC    PPTCB(L'TPLCTCB),TPLCTCB MOVE AND TEST ATTACHED TCB PTR
         BZ    INT07010       IF NO SUBTASKS, PARSE TEST COMMAND.
         B     INT03030       BRANCH TO TURN ON TEST BIT(S)
         SPACE 2
INT03010 EQU   *
         OI    TSTFLGS3,TSTSTAI TURN ON STAI INDICATOR FOR SVC97
         XC    TPLNTCB(L'TPLNTCB),TPLNTCB ZERO ABENDED TCB POINTER.
         EJECT
***********************************************************************
*                                                                     *
* SUBTASK WAS INTERCEPTED THROUGH AN ATTENTION INTERRUPT OR BY AN     *
* ABNORMAL END (STAI).  CHECK ALL SUBTASKS OF THE TEST (TMP) TCB      *
* FOR DATA SAVED BY THE SVC 061 ROUTINE (TCBTRN .NE. 0).  WHEN DATA   *
* WAS SAVED BY SVC 061, CHAIN DATA FROM TSTTRN (IN TCOMTAB) AND       *
* RESET THE TCBTRN AND TCBABF FIELDS IN THE TCB.                      *
*                                                                     *
***********************************************************************
         SPACE 2
INT03030 EQU   *
         L     R4,TSTTCB      TEST'S TCB.
         USING TCB,R4         ADDRESSABILITY TO TCB.
         OI    TSTFLGS4,TSTA  INDICATE NEED FOR A TERMINAL ELEMENT.
         LA    R2,N0(,R4)     CLEAR HIGH BYTE AND SAVE.
INT04010 EQU   *
         L     R5,TCBLTC      OBTAIN DAUGHTER.
         LTR   R5,R5          IS THERE A DAUGHTER.
         BNZ   INT04050       YES.PROCESS.
INT04030 EQU   *
         L     R5,TCBNTC      OBTAIN SISTER IF ONE.
         LTR   R5,R5          IS THERE ONE.
         BNZ   INT04050       YES.GO PROCESS.
         L     R4,TCBOTC      LOAD MOTHER TASK.
         LA    R4,N0(,R4)     CLEAR HIGH BYTE.
         CR    R4,R2          DOES MOTHER = TEST TASK.
         BNE   INT04030       NO. CHECK SISTER TCB.
         B     INT06010       YES. DONE....
INT04050 EQU   *
         LA    R5,N0(,R5)     CLEAR HIGH BYTE.
         BAL   R11,INT05010   CHECK THE TCBTRN FIELD
         LR    R4,R5          FIND NEXT TCB UNDER TEST.
         B     INT04010       LOOP UNTIL DONE.
         DROP  R4
         EJECT
***********************************************************************
*                                                                     *
* USING THE TCB ADDRESS PASSED IN REGISTER (R5), CHECK THE TCBTRN     *
* FIELD TO DETERMINE IF A POINTER IS PRESENT TO DATA SAVED BY SVC     *
* 061.  WHEN TCBTRN .NE. 0, ISSUE A GETMAIN FOR 12 BYTES OF SUBPOOL   *
* 1 CORE WHICH WILL BE USED TO ENQUEUE DATA FROM TSTTRN (IN TCOMTAB). *
* IN ALL CASES, SVC 097 WILL BE INVOKED TO SET THE TCBTCP (IN         *
* TCBABF) FLAG TO 1 AND TCBTRN TO POINT TO TCOMTAB.                   *
*                                                                     *
*        R5 -  ADDRESS OF TCB TO BE CHECKED.                          *
*                                                                     *
***********************************************************************
         SPACE 2
INT05010 EQU   *
         USING TCB,R5         ADDRESSABILITY TO TCB.
         L     R6,TCBTRN      TCBTRN MAY CONTAIN A QUEUE.
         LA    R6,N0(,R6)     CLEAR HIGH BYTE
         LTR   R6,R6          Q. HAS SVC61 BEEN HERE..
         BZ    INT05030       NO. TURN ON BIT AND SET FIELD.
         L     R0,INTSVIBL    LENGTH OF CONTROL BLOCK FOR GETMAIN
         GETMAIN  RC,SP=1,LV=(0)   GET SVC INFO BLOCK CONTROL WORDS.
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVED
         BNZ   GETERROR       PROCESS THE SVC ERROR
INT05020 EQU   *              ALL IS OK WITH THE GETMAIN.
         USING IKJEGSVQ,R1    ADDRESSABILITY TO SVQ
         MVC   SVQLNKPT(L'SVQLNKPT),TSTTRN LINK FIELD TO PUSH
*                             DOWN QUEUE.
         STM   R5,R6,SVQTCBPT TCB ADDR,SVC INFO BLOCK PTR.
         ST    R1,TSTTRN      HANG CONTROL WORDS TO TSTTRN WORD.
         DROP  R1
         SPACE 2
INT05030 EQU   *
         IKJEGS9G TCPON,TCBADDR=(R5),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
         IKJEGS9G TRN,TCBADDR=(R5),VALUE=(R9),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
         BR    R11            CHECK THE NEXT TCB UNDER TEST.
         DROP  R5
         EJECT
***********************************************************************
*                                                                     *
*        LOCATE PRB FOR PROGRAM BEING TESTED.  SET A PSEUDO-          *
*        BREAKPOINT AT THE RESUME ADDRESS CONTAINED IN THE            *
*        RBOPSW.                                                      *
*                                                                     *
***********************************************************************
         SPACE 2
INT06010 EQU   *
         L     R6,TPLCTCB     MOTHER TASK.
         USING TCB,R6         ADDRESSABILITY TO TCB.
         L     R6,TCBFSA      INITIAL SAVE AREA.
         DROP  R6
         LA    R4,PPEXIT1     'NORMAL TERMINATION' EXIT.
         ST    R4,N12(,R6)    *
         L     R7,PPTCB       THE ABEND TASK OR THE HIGHEST TASK (ATTN)
         USING TCB,R7         ADDRESSABILITY TO TCB.
         L     R2,TCBRBP      1ST RB.
         DROP  R7
         TM    TSTFLGS3,TSTSTAI  TEST FOR STAI OR ATTENTION.
         BO    STAI1          IT'S AN ABEND. PROCESS RETRY.
         LR    R4,R2          SET REGISTER FOR ATTN.
         USING RBSECT,R4      ADDRESSABILITY TO RB.
         SPACE 2
LOOP     EQU   *
         TM    RBSTAB1,RBFTSIRB TEST FOR PRB(IRB)
         BZ    FOUND          FOUND A PRB(IRB)
         L     R4,RBLINK      GET THE NEXT R.B.
         B     LOOP           LOOP UNTIL PRB(IRB) IS FOUND.
         DROP  R4
         EJECT
***********************************************************************
*                                                                     *
*        ALL RBS ARE PURGED UP TO THE MOST CURRENT STAE/STAI EXIT PRB.*
*        IF THERE ARE NONE OF THESE, THEN PURGE BACK TO THE MOST      *
*        CURRENT PRB AFTER THE LAST SVRB.                             *
*                                                                     *
*        IF THERE ARE NO PRBS TO RETRY, AND THERE IS ONLY ONE TASK    *
*        UNDER TEST THEN PRINT 'NOTHING LEFT TO TEST' AND QUIT.       *
*        IF THE ABENDED TASK IS NOT THE HIGHEST TASK, SET A PSEUDO    *
*        BREAKPOINT IN ITS MOTHER AND LET THE DAUGHTER ABEND.         *
*                                                                     *
***********************************************************************
         SPACE 2
STAI1    EQU   *
LOOP7    EQU   *
         L     R6,TCBRBP-TCB(,R7) ADDRESS OF MOST RECENT RB,
*                             ASSUME PRB FOR STAI EXIT.
         TM    RBSTAB1-RBSECT(R6),RBFTP DETERMINE IF A PRB.
         BNZ   QRETRY         IF FIRST RB IS NOT A PRB, ERROR.
*                             BRANCH TO CHECK FOR MULTITASKING.
         TM    RBSTAB2-RBSECT(R6),RBTCBNXT CHECK IF LAST RB.
         BO    QRETRY         IF ONLY RB ON QUEUE, ERROR.
         L     R5,RBLINK-RBSECT(,R6) ADDRESS OF NEXT MOST RECENT
*                             RB, ASSUME SVRB FOR ABEND.
         TM    RBSTAB1-RBSECT(R5),RBFTSVRB DETERMINE IF A SVRB.
         BNO   QRETRY         IF NOT A SVRB, ERROR.
         TM    RBSTAB2-RBSECT(R5),RBTCBNXT CHECK IF LAST RB.
         BO    QRETRY         IF LAST RB ON QUEUE, ERROR.
         L     R4,RBLINK-RBSECT(,R5) ADDRESS OF NEXT MOST RECENT
*                             RB, ASSUME ABENDING PRB OR IRB.
         TM    RBSTAB1-RBSECT(R4),RBFTP-RBFTIRB DETERMINE IF A
*                             PRB OR AN IRB.
         BNZ   ABNDSVRB       IF NOT A PRB OR AN IRB, BRANCH TO
*                             CHECK FOR A SVRB.
         LR    R2,R5          R2= ADDR OF PREVIOUS RB
         B     AOK            BRANCH TO SET PSEUDO BREAKPOINT.
         SPACE 2
ABNDSVRB EQU   *
         TM    RBSTAB2-RBSECT(R4),RBTCBNXT CHECK IF LAST RB.
         BO    QRETRY         IF LAST RB ON QUEUE, ERROR.
         TM    RBSTAB1-RBSECT(R4),RBFTSVRB DETERMINE IF SVRB.
         BNO   QRETRY         IF NOT A SVRB, ERROR.
         LA    R5,RBSECT-RBPREFIX(,R0) LENGTH OF RB PREFIX.
         SR    R4,R5          SET RB POINTER TO PREFIX.
         CLC   RBINTCOD-RBPREFIX(L'RBINTCOD,R4),ABEND DETERMINE
*                             IF THIS RB ABENDED.
         BNE   QRETRY         IF RB DID NOT ABEND, ERROR.
         AR    R4,R5          RESTORE RB POINTER TO BASIC SECTION
         SPACE 2
PRBLOOK  EQU   *
         LR    R2,R4          SAVE ADDR OF PREVIOUS RB
         L     R4,RBLINK-RBSECT(,R4) NEXT RB ON QUEUE.
         TM    RBSTAB1-RBSECT(R4),RBFTP-RBFTIRB DETERMINE IF PRB
*                             OR IRB NEXT ON QUEUE.
         BZ    AOK            IF A PRB OR IRB, BRANCH TO SET
*                             PSEUDO BREAKPOINT.
         TM    RBSTAB2-RBSECT(R4),RBTCBNXT CHECK IF LAST RB.
         BZ    PRBLOOK        IF NOT THE END OF THE RB QUEUE,
*                             CONTINUE SEARCH UNTIL A PRB (OR
*                             IRB) OR END OF QUEUE OCCURS.
         SPACE 2
QRETRY   EQU   *
         NI    TSTFLGS3,XFF-TSTSTAI  TURN OFF ABEND BIT.
*        BIT TURNED OFF SO PP'S REGS WONT GET MESSED UP.
         L     R5,TCBOTC-TCB(,R7) GET THE MOTHER TCB.
         LA    R5,N0(,R5)     CLEAR THE HIGH BYTE.
         C     R5,TSTTCB      Q. IS THE MOTHER OF TPLNTCB TEST TCB.
         BNE   SOMTHING       SKIP THE NOTHING CODE.
         LA    R3,MGNOTRY     'NO ACTIVE PROGRAM LEFT TO TEST'
         LA    R4,N0          NOSECOND LEVEL MSG
         B     PUTRTURN       PRINT MSG AND EXIT.
SOMTHING EQU   *
         ST    R5,PPTCB       SAVE THE MOTHER AND SET A PSEUDO BRKPT.
         L     R6,TCBRBP-TCB(,R5) GET THE FIRST RB .
LOOP7C   EQU   *
         TM    RBSTAB1-RBSECT(R6),RBFTSIRB Q.IS THIS A PRB(IRB)
         BZ    SETPSEUD       YES SET A PSEUDO BRKPT.
         L     R6,RBLINK-RBSECT(,R6) GET THE NEXT RB.
         B     LOOP7C         LOOP UNTIL A PRB(IRB) IS FOUND.
SETPSEUD EQU   *
         MVC   TSTGOPSW(L'TSTGOPSW),RBOPSW-RBSECT+X4(R6) SAVE THE I.C.
         MVC   TSTGOWCF(L'TSTGOWCF),RBWCF-RBSECT(R6) SAVE THE
*                             WAIT COUNT.
         IKJEGS9G WCF,TCBADDR=(R6),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
         LA    R2,TSTSVC      ADDRESS OF PSEUDO BREAKPT.
         IKJEGS9G OPSW,TCBADDR=(R6),VALUE=(R2),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
         STATUS START,TCB=(R7) START THE ABENDED TCB.
         LA    R0,PPEXIT2     RETRY AT SVC 3
         B     STAIPOST       LET THE ABEND CONTINUE.
AOK      EQU   *
         L     R3,REGSAVE2    SAVE AREA FOR ABENDING REGS.
         MVC   N0(N64,R3),RBGRSAVE-RBSECT(R2) SAVE THE REGISTERS.
         OC    TSTGOPSW(L'TSTGOPSW),RBABOPSW-RBSECT(R4) SAVE
*                             ADDRESS OF ABEND.
         BNZ   SKIP5          SKIP THE NEXT BIT OF CODE.
FOUND    EQU   *
         MVC   TSTGOPSW(L'TSTGOPSW),RBOPSW-RBSECT+X4(R4) SET UP
*                             RESUME ADDRESS.
SKIP5    EQU   *
         MVC   TSTGOWCF(L'TSTGOWCF),RBWCF-RBSECT(R4) SAVE THE
*                             WAIT COUNT.
         SPACE 2
         IKJEGS9G WCF,TCBADDR=(R4),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
         LA    R2,TSTSVC      PSEUDO BREAKPOINT ADDRESS.
         IKJEGS9G OPSW,TCBADDR=(R4),VALUE=(R2),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
         LA    R0,TSTSVC      RETRY ADDRESS.
STAIPOST EQU   *              POST IKJEFT04(TEST/TMP STAI EXIT)
         L     R1,TPLECT      GET ECT ADDRESS                  @ZA07137
         OI    ECTSWS2-ECT(R1),ECTTABND       TELL TMP STAI  @ZA07137
*                                               NOT TO DEQ     @ZA07137
         L     R1,TPLNECB     POST ECB FOR TMP STAI EXIT RTN.
         O     R0,POST7F      POST STAI ECB WITH A '7F'
         POST  (1),(0)        POST
         STATUS  START        MAKE ALL SUBTASKS DISPATCHABLE.
         B     WAIT           ALLOW RECOVERY,BY WAITING FOR PSEUDO
*                             BREAK TO OCCUR.
         EJECT
***********************************************************************
*                                                                     *
*        TRANSFER CONTROL TO IKJEGMNL                                 *
*                                                                     *
***********************************************************************
         SPACE 2
MODEGO   EQU   *
         LA    R0,INTWLEN     R0=LENGTH OF THE FREEMAIN
         MVC   PPEXIT(X4),SVC PLACE THE SVC97 AND 03 IN TCOMTAB
         FREEMAIN RC,LV=(0),SP=1,A=(8) FREEMAIN ADDR
         LTR   R15,R15        WAS THE FREEMAIN OK
         BZ    GOTOMNL        YES THEREFORE GO TO MNL
         BAL   R11,FREERROR   NO THEREFORE OUTPUT ERROR
         SPACE
****     ISSUE ESTAE 0 TO REMOVE ESTAE
GOTOMNL  EQU   *              TRANFER CONTROL TO MNL
         ESTAE 0              REMOVE THE CURRENT ESTAE
         SPACE
         LR    R1,R9          PASS MNL THE ADDR OF TCOMTAB
         L     R13,X4(R13)    RESTORE TMPS SAVE AREA ADDRESS
         L     R15,MNLADDR    R15= ENTRY POINT OF MNL
         L     R14,N12(R13)   RESTORE R14 OF TMP
         LM    R2,R12,N28(R13)   RESTORE TMP'S REGISTERS
         BR    R15            TRANSFER CONTROL TO MNL
BLOW3    EQU   *
         EJECT
***********************************************************************
*                                                                     *
*        WHEN TEST WAS ENTERED AS THE RESULT OF THE USER ENTERING     *
*        A TEST COMMAND, BUT NOT IN RESPONSE TO AN ATTENTION          *
*        INTERRUPT, INVOKE THE PARSE SERVICE ROUTINE TO SYNTAX        *
*        CHECK OPERANDS ENTERED ON THE TEST COMMAND.                  *
*                                                                     *
*        R2 -- ADDRESS OF PARSE PARAMETER CONTROL LIST.               *
*        R3 -- ADDRESS OF PARSE ANSWER PLACE.                         *
*        R4 -- ADDRESS OF COMMAND BUFFER.                             *
*                                                                     *
***********************************************************************
         SPACE 2
INT07010 EQU   *
         L     R2,PCLADDR     R2=PCL ADDR.
         MVC   INTPARSL(L'TSTUPT+L'TSTECT+L'TSTCPECB),PARMLIST MOVE
*                                    IN SERVICE ROUTINE PARMLIST.
         LA    R3,TSTANSPL    R3=ANSWER PLACE ADDR.
         L     R4,TPLTBUF     R4=TEST COMMAND BUFFER.
         LINK  EP=IKJPARS,PARAM=(,,,(R2),(R3),(R4)),ERRET=LINKPARS,    X
               MF=(E,INTPARSL)  PARSE THE COMMAND.
BLOW5    EQU   *
         LTR   R15,R15        CHECK RETURN CODE FROM PARSE.
         BZ    INT08010       RETURN CODE = 0, CONTINUE NORMALLY
         CH    R15,INTRC004   CHECK FOR RETURN CODE = 4.
         BE    TMPRTURN       USER SPECIFIED NO PROMPT, RETURN.
         CH    R15,INTRC008   CHECK FOR RETURN CODE = 8.
         BE    TMPRTURN       USER CAUSED AN ATTENTION INTERRUPT,
*                             RETURN.
         CH    R15,INTRC016   CHECK FOR RETURN CODE = 16.
         BE    NOCORE         PARSE UNABLE TO GET CORE, RETURN.
*
*        FOR ALL OTHER RETURN CODES, ISSUE COMMAND SYSTEM ERROR
*        MESSAGE.
*
         B     TMPRTURN       RETURN TO TMP.
         SPACE
****     ISSUE THE MESSAGE TEST FAILED NO CORE
         SPACE
NOCORE   EQU   *              ISSUE THE MESSAGE
         LA    R3,TESTFAIL    R3= TEST FAILED MESSAGE NUMBER
         LA    R4,NOSTROG     R4= SECOND LEVEL NO STORAGE AVAILABLE
         B     PUTRTURN       OUTPUT THE MESSAGE AND EXIT
         EJECT
***********************************************************************
*                                                                     *
*        UPON SUCCESSFUL RETURN FROM THE PARSE SERVICE ROUTINE,       *
*        DETERMINE IF THE USER ENTERED A FULLY QUALIFIED OR A         *
*        PARTIALLY QUALIFIED DATA SET NAME.                           *
*                                                                     *
*        WHEN A FULLY QUALIFIED DATA SET NAME WAS ENTERED, BRANCH     *
*        IMMEDIATELY TO INVOKE THE DAIR SERVICE ROUTINE TO            *
*        ALLOCATE THE DATA SET.                                       *
*                                                                     *
*        WHEN A PARTIALLY QUALIFIED DATA SET NAME WAS ENTERED,        *
*        INSPECT THE RIGHTMOST QUALIFIER FOR THE DATA SET TYPE        *
*        ('LOAD' AND/OR 'OBJ').  IF EITHER TYPE WAS SPECIFIED AND     *
*        IS THE SAME AS THE KEYWORD OPERAND ENTERED ON THE TEST       *
*        COMMAND, STRIP OFF THE QUALIFIER SO THAT IT IS NOT ADDED     *
*        BY THE DEFAULT SERVICE ROUTINE.  EXAMPLE --                  *
*                                                                     *
*        IF THE USER ENTERS --                                        *
*                                                                     *
*              TEST XXX.LOAD LOAD --OR-- TEST XXX.OBJ OBJ             *
*                                                                     *
*        THE RIGHTMOST QUALIFIER IS REMOVED.                          *
*                                                                     *
*        FOR ALL PARTIALLY QUALIFIED DATA SET NAMES, THE DEFAULT      *
*        SERVICE ROUTINE IS INVOKED TO BUILD A FULLY QUALIFIED        *
*        DATA SET NAME BY PREFIXING THE USERID AND APPENDING THE      *
*        TYPE OPERAND SPECIFIED ON THE TEST COMMAND.  AFTER           *
*        DEFAULT HAS SUCCESSFULLY BUILT A FULLY QUALIFIED DATA        *
*        SET NAME, DAIR IS INVOKED TO ALLOCATE THE DATA SET.          *
*                                                                     *
*        R7 -- ADDRESS OF PARSE PDL.                                  *
*                                                                     *
***********************************************************************
         SPACE 2
INT08010 EQU   *
         L     R7,TSTANSPL    R8=ADDR OF PARSE-PRODUCED PDL.
         USING IKJPARMD,R7    PDL ADDRESSABILITY.
         SPACE 2
         MVC   INDFLTPL(DFPLDFPB-DFPLUPT+L'DFPLDFPB),PARMLIST
*                             MOVE STANDARD POINTERS TO LIST
         MVI   INTSTDSN,BLANK BLANK OUT DATA SET NAME AREA
         MVC   INTSTDSN+X1(L'INTSTDSN-X1),INTSTDSN
         L     R2,DSNAME      R2=ADDR OF DSNAME FROM DSNAME PDE.
         LH    R3,DSNAME+X4   R3 = DSNAME LENGTH.
         STH   R3,INDSNLEN    DSNAME LENGTH SAVED FOR DEFAULT
         LTR    R3,R3         IS DSNAME LENGTH ZERO?     @ZA00859
          BZ    NODSNAM              YES, SKIP MOVE       @ZA00859
         BCTR  R3,R0          REDUCE LENGTH FOR EXECUTE.
         EX    R3,DSNMVC      MOVE DSNAME TO DSNAME AREA.
NODSNAM  TM    DSNAME+X6,FULLQUAL Q.IS DSNAME FULLY QUALIFIED.
         BO    DAIR           IF B'01000000',YES,ALLOCATE.
         CLI   LOADOBJ+X1,LOADON Q.IS LOAD SPECIFIED.
         LA    R2,LOAD        YES,USE 'LOAD' QUALIFIER.
         BE    NEXT1          *
         LA    R2,OBJECT      NO,USE 'OBJECT' QUALIFIER.
NEXT1    EQU   *
         LA    R3,X1(,R3)     RESTORE DSNAME LENGTH.
         LA    R4,X2(,R0)     CONSTANT FOR COMPARES
         SR    R3,R4          IF USER NAME IS 2 CHARS OR LESS,
         BNH   DSN01030       BRANCH TO INDICATE SIMPLE NAME
         LA    R5,INTSTDSN(R3) ADDRESS NEXT-TO-LAST CHARACTER
DSN01010 EQU   *
         CLI   N0(R5),INDSNPER IS CHARACTER A PERIOD
         BE    DSN01020       IF SO, QUALIFIER CHECK REQUIRED
         BCTR  R5,R0          ADDRESS NEXT CHARACTER TO LEFT
         BCT   R3,DSN01010    DECREMENT LENGTH AND REPEAT AS
*                             LONG AS LENGTH .GT. 0
         B     DSN01030       BRANCH TO INVOKE DEFAULT
DSN01020 EQU   *
         SH    R3,INDSNLEN    SUBTRACT FULL LENGTH FROM LENGTH
         LCR   R3,R3          COMPLEMENT TO GET QUALIFIER LENGTH
         BCTR  R3,R0          REDUCE LENGTH FOR EXECUTE
         EX    R3,QUALCHK     DETERMINE IF QUALIFIER IS EITHER
*                             OBJ OR LOAD
         BNE   DSN01030       IF NEITHER OF THE ABOVE, BRANCH TO
*                             INVOKE DEFAULT
         LA    R3,X1(,R3)     RESTORE QUALIFIER LENGTH
         LH    R4,INDSNLEN    GET DSNAME LENGTH
         SR    R4,R3          SUBTRACT QUALIFIER LENGTH
         STH   R4,INDSNLEN    UPDATE DSNAME LENGTH TO LOGICALLY
*                             REMOVE RIGHTMOST QUALIFIER
DSN01030 EQU   *
         LA    R4,INDSNLEN    R4 = DSNAME ADDRESS
         MVC   INDFLTPB+DFPBPSCB-DFPB(L'DFPBPSCB),TPLPSCB
*                             PUT ADDRESS OF PSCB IN PARMLIST
         MVI   INDFLTPB+DFPBCNTL-DFPB,DFPBUID SET CONTROL BYTE
         LA    R6,INDFLTPB    ADDRESS OF DEFAULT PARM BLOCK
         LINK  EP=IKJDFLT,PARAM=(,,,(R6),(R4),,(R2)),ERRET=LINKDEFL,   X
               MF=(E,INDFLTPL) LINK TO DEFAULT SERVICE ROUTINE
         CH    R15,INTRC024   CHECK FOR RETURN CODE = 24.
         BE    TMPRTURN       USER CAUSED AN ATTENTION INTERRUPT,
*                             RETURN.
         EJECT
***********************************************************************
*                                                                     *
*        ALLOCATE THE DATA SET SPECIFIED ON THE TEST COMMAND.         *
*                                                                     *
*        FOR THE INITIAL ALLOCATION REQUEST, A MEMBER NAME IS         *
*        IGNORED WHETHER IT WAS ENTERED ON THE TEST COMMAND OR        *
*        NOT.  AFTER A SUCCESSFUL INVOCATION OF THE DAIR SERVICE      *
*        ROUTINE, THE ALLOCATED DATA SET IS CHECKED TO DETERMINE      *
*        IF IT HAS SEQUENTIAL OR PARTITIONED ORGANIZATION.  IF        *
*        THE DSORG IS 'PS', TYPE 'OBJ' IS ASSUMED, THE TERMINAL       *
*        IS ALLOCATED TO DDNAME 'SYSTERM', AND IKJEGLDR IS            *
*        ATTACHED TO PROCESS THE OBJECT DATA SET.                     *
*                                                                     *
*        FOR BOTH 'LOAD' AND 'OBJ', A BLDL IS PERFORMED ON THE        *
*        MEMBER NAME (OR 'TEMPNAME' IF A MEMBER NAME WAS NOT          *
*        ENTERED) TO DETERMINE IF THE MEMBER EXISTS.  IF THE          *
*        MEMBER IS NOT FOUND IN THE DATA SET, TEST RETURNS TO THE     *
*        TMP.  IF TYPE 'LOAD' WAS SPECIFIED ON THE TEST COMMAND       *
*        AND DSORG IS 'PO', IKJEGLDR IS ATTACHED TO PROCESS THE       *
*        LOAD MODULE SPECIFIED.                                       *
*                                                                     *
*        WHEN TYPE 'OBJ' WAS SPECIFIED AND DSORG IS 'PO', THE         *
*        DATA SET IS UNALLOCATED AND ALLOCATED A SECOND TIME          *
*        SPECIFYING DSNAME(MEMBER).  AFTER SUCCESSFUL ALLOCATION,     *
*        THE TERMINAL IS ALLOCATED AND IKJEGLDR IS ATTACHED.          *
*                                                                     *
***********************************************************************
         SPACE 2
DAIR     EQU   *
         NI    INTFLGS1,X'FF'-INTDSMEM FIRST TIME SWITCH FOR
*                             OBJECT(PDS)
DAIROBJ  EQU   *              ENTRY FOR OBJECT(PDS) ALLOCATION.
         MVC   INTDAIRB(LEN08),DAIR08 MOVE BASIC PARM BLOCK
         LA    R3,INDSNLEN    GET ADDRESS OF DSNAME AND PLACE IN
         ST    R3,INTDAIRB+(DA08PDSN-DAPB08) DAIR PARAMETER BLOCK.
         CLI   LOADOBJ+X1,LOADON Q.IS 'LOAD' SPECIFIED.
         BE    NOMEMBER       LOAD SPECIFIED,FORGET MEMBER.
         TM    INTFLGS1,INTDSMEM CHECK FOR OBJECT (PDS)
         BZ    NOMEMBER       DO NOT ALLOCATE TO MEMBER
         LH    R3,DSNAME+N12  R3=MEMBER NAME LENGTH.
         L     R4,DSNAME+X8   R4=ADDR OF MEMBER NAME.
         BCTR  R3,R0          REDUCE LENGTH FOR EXECUTE.
         EX    R3,MEMMOVE     MOVE MEMBER NAME TO DAIR PARM BLOCK.
NOMEMBER EQU   *
         TM    PASSWORD+X6,PRESENT  IS PASSWORD PRESENT
         BZ    NOPASSWD       NO -- BRANCH
         LH    R3,PASSWORD+X4 GET PASSWORD LENGTH
         L     R4,PASSWORD    POINT TO THE PASSWORD
         BCTR  R3,R0          DECREMENT FOR THE EXECUTE
         EX    R3,MOVEPASS    MOVE PASSWORD TO DAIR LIST
NOPASSWD EQU   *
         BAL   R11,DAIR1      ALLOCATE THE DATA SET
         SPACE 2
         TM    INTFLGS1,INTDSMEM TEST FOR PREVIOUS ALLOCATION
         LA    R1,INTDAIRB    GET PARM ADDR.
         MVC   INTSTDDN,DA08DDN-DAPB08(R1) SAVE DDNAME FOR IKJEGLDR.
         BNZ   ALLOCTER       ALLOCATE FOR PSUEDO SYSTERM DD
         SPACE 2
         TM    DA08DSO-DAPB08(R1),PS   IS THIS A SEQUENTIAL DATA SET
         BO    SEQOBJ         SET TO OBJECT
         SPACE 2
         NC    DSNAME+X8(X4),DSNAME+X8 Q.IS MEMBER SPECIFIED
         BNZ   ATTACH1        YES,O.K. TO ATTACH
         SPACE 2
         MVC   DSNAME+X8(X4),TEMPNAME MOVE POINTER TO 'TEMPNAME'
         MVC   DSNAME+N12(X2),INTRC008 MOVE LENGTH OF TEMPNAME.
         SPACE 2
ATTACH1  EQU   *
         LA    R0,N100        SIZE OF INT WORKAREA FOR GETMAIN.
         GETMAIN RC,SP=1,LV=(0)    GET STORAGE FOR INT WORK AREAS.
         LTR   R15,R15        WAS THE GETMAIN OK
         BNZ   GETERROR       NO THEREFORE PUTOUT ERROR MSG
         ST    R1,TSTDCB      SAVE THE DCB CORE ADDRESS.
         XC    N0(N100,R1),N0(R1) ZERO THE LINK FIELD.
         LA    R4,N4(R1)      GET THE DCB ADDRESS.
         USING IHADCB,R4      ESTABLISH ADDRESSABILITY TO THE DCB
         MVC   IHADCB(ADDCBLEN),ADDCB CONSTRUCT DCB.
         MVC   DCBDDNAM(L'INTSTDDN),INTSTDDN  MOVE IN DDNAME
         MVC   INTOPENL,LFORM MOVE IN OPEN L-FORM
         MVC   INTCLOSL,CLFORM MOVE IN CLOSE L-FORM.
         OPEN  ((R4)),MF=(E,INTOPENL) OPEN THE DATA SET.
         SPACE 2
         TM    DCBOFLGS,DCBOFOPN DID DCB OPEN.
         DROP  R4             RELEASE ADDR'ABILITY TO DCB
         BO    ATTACH1A       IF OPEN, BRANCH TO PROCESS.
*
*        GENERATE ERROR MESSAGE FOR OPEN FAILURE.
*
         B     TMPRTURN       RETURN TO TMP.
         SPACE 2
ATTACH1A EQU   *
         LH    R3,DSNAME+N12  R5=MEMBER NAME LENGTH.
         L     R6,DSNAME+X8   R6=MEMBER NAME ADDR.
         L     R5,BLDLAREA    GET THE ADDRESS FOR THE BLDL ENTRY
         MVC   N0(INTBLDLL,R5),INTBLDLD INITIALIZE LIST DESCRIPTION.
         BCTR  R3,R0          DECREMENT LENGTH FOR EXECUTE.
         EX    R3,MEMMVC      MOVE IN MEMBER NAME.
         BLDL  (R4),(R5)      OBTAIN DIRECTORY ENTRY.
         LTR   R15,R15        DETERMINE IF BLDL WAS SUCCESSFUL.
         BNZ   BADMEM         IF NOT, BRANCH TO ISSUE MESSAGE.
         SPACE 2
         LA    R5,X4(,R5)     INCREMENT BEYOND LIST DESCRIPTION.
         USING PDS2,R5        ESTABLISH ADDRESSABILITY TO PDS
*                             DIRECTORY ENTRY.
         TM    PDS2ATR1,PDS2OVLY TEST FOR OVERLAY STRUCTURE.
         BZ    SKIP3          SKIP AROUND.
         MVI   TSTDCB,X80     TURN ON HIGH BIT TO INDICATE OVLY.
         SPACE 2
SKIP3    EQU   *
         CLI   LOADOBJ+X1,LOADON  Q.LOAD OR OBJECT.
         BE    ATTACH         A.LOAD (PDS)
         BAL   R11,CLOSE      OBJECT (PDS).
         MVC   INTDAIRB(LEN2C),DAIR2C UNALLOC BY DDNAME.
         MVC   INTDAIRB+(DA2CDDN-DAPB2C)(L'INTSTDDN),INTSTDDN
*                             MOVE IN THE DDNAME.
         MVI   INTDAIRB+(DA2CFLG-DAPB2C+X1),X1 CODE TO UNALLOCATE BY
*                             DDNAME.
         BAL   R11,DAIR1      UNALLOCATE BY DDNAME
         OI    INTFLGS1,INTDSMEM INDICATE MEMBER TO BE ALLOCATED
         B     DAIROBJ        REALLOCATE TO DSN(MEMBER)
         SPACE 2
SEQOBJ   EQU   *
         MVI   LOADOBJ+X1,OBJON  SET TO OBJECT , IF NOT SUPPLIED
ALLOCTER EQU   *
         MVC   INTDAIRB(LEN1C),DAIR1C ALLOCATE THE TERMINAL
         BAL   R11,DAIR1      SETUP AND LINK TO DAIR
         MVC   TERMDD,INTDAIRB+(DA1CDDN-DAPB1C) SAVE TERMINAL
*                             DDNAME FOR OS LOADER.
         EJECT
***********************************************************************
*                                                                     *
*        WHEN THE DATA SET SPECIFIED ON THE TEST COMMAND HAS BEEN     *
*        SUCCESSFULLY ALLOCATED AND THE MEMBER (OR TEMPNAME)          *
*        FOUND IN THE DATA SET, THE TEST LOADER (IKJEGLDR) IS         *
*        ATTACHED AS A SUBTASK OF TEST.  FOLLOWING A SUCCESSFUL       *
*        ATTACH, THE NEW SUBTASK TCB ADDRESS IS SAVED IN THE TPL      *
*        SO THAT TMP MAY DETACH ONCE TEST HAS RETURNED.               *
*                                                                     *
*        DATA PASSED TO IKJEGLDR POINTED TO OUT OF TCOMTAB IS --      *
*                                                                     *
*        1 --  PDL FOR TEST COMMAND (POINTED TO BY TSTANSPL)          *
*        2 --  BLDL ENTRY FOR LOADMODULE (POINTED TO BY BLDLAREA)     *
*                                                                     *
***********************************************************************
         SPACE 2
ATTACH   EQU   *
         OI    DEFERTAB,X40       INIT DEFER'D BRKPT QUEUE   @ZA06226
*                                  FOR SVC 61                 @ZA06226
         MVC   INTATCHL(ATTCHLLN),ATTCHLFM SET UP PARAMETER LIST.
         L     R3,TPLSTAI     R3=STAI EXIT ADDRESS.
         L     R2,ECBTERM     R2=PP TERMINATION ECB ADDR.
         XC    N0(X4,R2),N0(R2) ZERO TERMINATION ECB.
         L     R4,TPLSPLS     R4=ADDR OF PARMS FOR STAI EXIT.
         L     R1,TPLECT      OBTAIN ECT POINTER
         MVC   ECTPCMD-ECT(L'ECTPCMD,R1),TEST  MOVE TEST NAME INTO ECT
         ATTACH EP=IKJEGLDR,ECB=(R2),MF=(E,(R9)),SF=(E,INTATCHL),      X
               SHSPV=78,ESTAI=((R3),(R4)),SZERO=NO ATTACH LOADER.
         SPACE 2
BLOW6    EQU   *
         LTR   R15,R15        CHECK FOR SUCCESSFUL COMPLETION.
         BZ    SETTCBPT       IF RETURN CODE = 0, CONTINUE.
*
*        GENERATE ERROR MESSAGE FOR ATTACH FAILURE.
*
         LA    R3,ATTCHFL     R3= ATTACH FAILLED MESSAGE MSG NUMBER
         LA    R4,NOTCONT     R4= UNEABLE TO CONT. MSG NUMBER
         LA    R2,ATTCHNO     R2= STATIC INSERT NO FOR ATTACH
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR THE IO PARM AREA
         IKJEGSIO MSG,FIRST=(R3),SECOND=(R4),INST11=(NUM,(R2)),        *
               ID=INT15,MF=(E,TSTIOPRM)    INVOKE IO FOR ERROR
         B     TMPRTURN       RETURN TO TMP.
         SPACE 2
SETTCBPT EQU   *
         LA    R1,N0(,R1)     CLEAR HIGH BYTE.
         ST    R1,TPLCTCB     SET ATTACHED TCB ADDRESS FOR TMP.
         EJECT
***********************************************************************
*                                                                     *
*        FOLLOWING A SUCCESSFUL ATTACH, WAIT ON A LIST OF ECBS.       *
*        ANY ONE OF THE FOLLOWING EVENTS WILL CAUSE TEST TO COME      *
*        OUT OF THE WAIT STATE --                                     *
*                                                                     *
*        1 --  USER PROGRAM WAIT STATE.                               *
*        2 --  USER PROGRAM TERMINATION.                              *
*        3 --  USER PROGRAM ABEND.                                    *
*        4 --  ATTENTION.                                             *
*        5 --  OPERATOR STOP TS OR MODIFY TS.                         *
*                                                                     *
***********************************************************************
         SPACE 2
WAIT     EQU   *
         MVI   ECBLOG,X80     INDICATE END OF ECBLIST.
         WAIT  ECBLIST=ECBTST ISSUE THE WAIT.
         EJECT
***********************************************************************
*                                                                     *
*        AN EVENT OCCURRED TO TAKE TEST OUT OF THE WAIT STATE.        *
*        DETERMINE IF SVC 061 POSTED IKJEGINT SIGNALING THAT THE      *
*        PROGRAM TO BE TESTED WAS LOADED.  IF NOT, CONTINUE           *
*        TESTING FOR WHICH EVENT OCCURRED.                            *
*                                                                     *
*        WHEN SVC 061 HAS POSTED IKJEGINT --                          *
*                                                                     *
*        1 --  DETERMINE IF IKJEGLDR IS XCTLING.  IF NOT (TSTGOSW     *
*              IS ZERO), IGNORE EVENT AND POST SVC 061 COMPLETE.      *
*                                                                     *
*        2 --  WHEN IKJEGLDR IS XCTLING, OBTAIN TCB ADDRESS AND       *
*              SVC INFORMATION BLOCK POINTER FROM SVC 061'S           *
*              EXTENDED SAVE AREA.  IF SVC INFORMATION BLOCK          *
*              PRESENT, ISSUE GETMAIN FOR QUEUE CONTROL BLOCK         *
*              AND INITIALIZE.                                        *
*                                                                     *
*        3 --  IF A VALID XCTL, SAVE FIRST TWO BYTES OF USER          *
*              PROGRAM AND ESTABLISH A PSEUDO BREAKPOINT.             *
*                                                                     *
*        4 --  POST SVC 061 COMPLETE AND BRANCH TO WAIT ON SVC        *
*              097 TO COMPLETE.                                       *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R5,ECBTST      TEST ECB ADDRESS.
         TM    N0(R5),X44     X'44' IS A POST FROM SVC 61.
         BNO   SETTSIP        BRANCH TO ISSUE TSIP SVC.
         SPACE 2
         XC    N0(X4,R5),N0(R5) CLEAR TEST'S ECB.
         TM    TSTFLGS4,TSTSVCAB  DID THE SVC ABEND?
         BO    TSTRTURN       OUTPUT TEST FAILS AND EXIT
         L     R2,ECBPP       OBTAIN SVC61'S SVRB ADDRESS.
         TM    TSTFLGS3,TSTGOSW  TEST IF LOADER IS XCTLING.
         BZ    POST6A         NO POST. BRANCH.
         SPACE 2
         LM    R3,R4,RBEXSAVE-RBSECT(R2) GET THE TCB ADR AND SVC INFO
*                             BLOCK POINTER.
         LTR   R3,R3          IF TCB SLOT IS ZERO , IGNORE.
         BZ    NOGET          TCB ADDR=0 , DONT GET CORE.
         SPACE 2
         L     R0,INTSVIBL    IKJEGSVQ LENGTH.
         GETMAIN  RC,SP=1,LV=(0)   GET CORE FOR CONTROL WORDS.
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVAED
         BNZ   GETERROR       PROCESS THE SVC ERROR
SVQGETOK EQU   *              ALL IS OK WITH GETMAIN
         USING IKJEGSVQ,R1    ADDRESSABILITY TO SVQ.
         MVC   SVQLNKPT(L'SVQLNKPT),TSTTRN PUSH DOWN QUEUE.
         STM   R3,R4,SVQTCBPT TCB ADDR, SVC BLOCK PTR TO WORDS.
         ST    R1,TSTTRN      ADD CONTROL WORDS TO QUEUE.
         DROP  R1
         SPACE 2
NOGET    EQU   *
         L     R1,RBLINK-RBSECT(,R2) GET PRB(IRB) ADDRESS
         TM    RBCDFLGS-RBSECT(R1),RBCDXCTL TEST XCTL BIT, FL-CDE FIELD
         L     R1,RBCDE-RBSECT(,R1) XCTLEE CDE.
         USING CDENTRY,R1     ADDRESSABILITY TO CDE DSECT.
         BZ    POST6A         BRANCH IF NOT XCTL.
         SPACE 2
         OI    INITFLG,X'10'  TURN ON INIT FLAG               @ZA18794
         L     R6,CDENTPT     XCTLEE  E.P. ADDRESS.
         MVC   TSTGO(L'SVC),N0(R6) SAVE 2 BYTES OF INSTR.
         MVC   N0(L'SVC,R6),SVC PLANT SVC
         MVI   DEFERTAB,X'00'   RESET DEFER BRKPT Q FOR SVC61 @ZA06226
         XC    INITFLG,INITFLG RESET INIT FLG                 @ZA18794
         SPACE 2
POST6A   EQU   *
         POST  ECBPP          MAKE SVC 61 DISPATCHABLE.
         B     WAIT           WAIT AGAIN.
         EJECT
***********************************************************************
*                                                                     *
*        DETERMINE IF IKJEGINT WAS POSTED BY SVC 097.  IF NOT,        *
*        BRANCH TO CHECK FOR USER PROGRAM ABEND.                      *
*                                                                     *
*        WHEN SVC 097 HAS POSTED IKJEGINT --                          *
*                                                                     *
*        1 --  CLEAN-UP FOLLOWING IKJEGLDR EXECUTION.                 *
*                                                                     *
*        2 --  RESET PRB RESUME PSW AND RESTORE INSTRUCTION, IF       *
*              NECESSARY.                                             *
*                                                                     *
*        3 --  BRANCH TO BRANCH TO IKJEGMNL.                          *
*                                                                     *
***********************************************************************
         SPACE 2
SETTSIP  EQU   *
         SPACE 2
         BAL   R11,FROMLDR    CLOSE THE DCB, AND FREE CORE
         TM    N0(R5),X44     X'40' IS NORMAL LOAD.
         MVI   N0(R5),N0      ZERO ECB.
         BZ    STAICHK        CHECK STAI ECB.
         SPACE 1
*        SVC 97 POSTED INT.
         SPACE 1
         TM    TSTFLGS4,TSTSVCAB  DID THE SVC ABEND?
         BO    TSTRTURN       OUTPUT TEST FAILS AND EXIT
         NI    TSTFLGS3,XFF-TSTSTAI INSURE THAT STAI BIT IS OFF.
         L     R4,PPTCB       R4=PP TCB ADDR.
         L     R5,TCBRBP-TCB(,R4) R5=ACTIVE RB ADDR.
         L     R5,RBLINK-RBSECT(,R5) R5=PRB ADDR FOR PP.
         TM    TSTFLGS3,TSTGOSW IS IT SPECIAL BREAKPOINT.
         BO    SPECIAL        YES IT IS.
         L     R2,TSTGO       ADDRESS OF CLOBBERED INSTRUCTION.
         SPACE 2
         IKJEGS9G OPSW,TCBADDR=(R4),VALUE=(R2),MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         B     CONTINUE       CONTINUE PROCESSING.
         SPACE 2
SPECIAL  EQU   *
         L     R1,RBOPSW-RBSECT+X4(,R5) OBTAIN I.C.
         MVC   N0(X2,R1),TSTGO  RESTORE 2 BYTES OF INSTRUCTION.
         NI    TSTFLGS3,XFF-TSTGOSW TURN OFF THE PSEUDO SPECIAL SW.
         LA    R2,PPEXIT      CHANGE REGISTER FOURTEEN.
         L     R4,PPTCB       PPS TCB POINTER.
         IKJEGS9G GPR,TCBADDR=(R4),VALUE=(R2),REGNO=R14,               *
               MF=(E,INTSVCPL)
         LTR   R15,R15        CHECK RETURN CODE.
         BNZ   SVC97ERR       IF NOT ZERO, BRANCH TO EXIT.
         SPACE 2
CONTINUE EQU   *
         XC    TSTGO(X6),TSTGO  ZERO PSEUDO BREAK FIELD IN TCOMTAB.
         B     MODEGO         ISSUE MODE MESSAGE AND GO TO MAINLINE.
         EJECT
***********************************************************************
*                                                                     *
*        THE LAST SIGNIFICANT EVENT TO BE CHECKED IS TO DETERMINE     *
*        IF THE USER PROGRAM ABENDED.  ONLY IF AN ABEND IS            *
*        INDICATED AND A MESSAGE ROUTINE ADDRESS GIVEN IN THE ECB     *
*        WILL A MESSAGE BE PRODUCED.  IN ALL CASES, CONTROL WILL      *
*        RETURN TO THE TMP.                                           *
*                                                                     *
***********************************************************************
         SPACE 2
STAICHK  EQU   *
         L     R5,ECBTMPS     GET STAI ECB.
         TM    N0(R5),X40     Q. HAS IT BEEN POSTED BY IKJEFT04.
         BZ    LDRFAIL        NO. MUST BE SOMETHING ELSE.
         MVI   N0(R5),N0      CLEAR THE ECB.
         L     R5,N0(,R5)     GET THE ECB PARM LIST ADDRESS.
         LTR   R1,R5          IS THERE AN ADDRESS.
         BZ    TMPRTURN       NO. RETURN TO THE TMP.
         L     R15,N0(,R5)    GET BRANCH TO ADDRESS.(IKJEFT04)
         CALL  (15)           CALL IKJEFT04 TO PUT OUT MESSAGE.
         SPACE 2
*        WAS IT A IKJEGLDR FAILURE IF SO WHAT WAS IT.
         SPACE
LDRFAIL  EQU   *
         L     R5,ECBTERM     R5= ADDR OF ECBTERM ECB
         TM    N0(R5),X40     WAS IT POSTED BY LDR?
         BNZ   LDRDONE        EXIT WITH TEST FAILED MSG       @ZA06995
         L     R5,ECBTMPA     NOT POSTED BY LDR,SEE IF ATTN   @ZA06995
         TM    N0(R5),X'40'   WAS ATTN ECB POSTED?            @ZA06995
         BNO   TSTRTURN       NO-EXIT WITH TEST FAILED MSG    @ZA06995
         L     R5,TPLPTR      ATTN ECB POSTED                 @ZA06995
         L     R5,TPLECT-TPL(R5)   GET ECT PTR FROM TPL       @ZA06995
         OI    ECTSWS-ECT(R5),ECTATRM  SET ECT FLAG FOR ESTAI @ZA06995
LDRDONE  EQU   *                                              @ZA06995
         LA    R5,N0(R5)      CLEAR THE HIGH BYTE.
         LA    R4,N4          R4= FOUR (R. C. CHECK)
         CR    R4,R5          IS THE RETURN CODE 4
         BE    TMPRTURN       YES THEREFORE EXIT (ATTN)
         LA    R4,N24         R4= TWENTY FOUR (ESTAE FAILED)
         CR    R4,R5          IS RC 24                         @ZA25752
         BE    ESTERROR       YES,ESTAE FAILED                 @ZA25752
         LR    R3,MGNOTRY     MSG'NO ACTIVE PROG LEFT TO TEST' @ZA25752
         LA    R4,N0          NO SECOND LEVEL MSG              @ZA25752
         B     PUTRTURN       GO OUTPUT MSG                    @ZA25752
ESTERROR EQU   *              ESTAE ERROR FROM SUBTASK.
         SR    R15,R15        ZERO R15
         IC    R15,TSTESTRC   R15= ESTAE RETURN CODE FROM LDR.
         B     ESTAERR        HANDLE AS ESTAE ERROR.
         EJECT
***********************************************************************
*                                                                     *
*        TEST INITIALIZATION EXIT.                                    *
*                                                                     *
*        WHEN SOME CONDITION EXISTS SUCH THAT THE TEST SESSION        *
*        CAN NOT CONTINUE, THIS SECTION OF CODE WILL CLEAN-UP         *
*        AND RETURN TO THE TMP.                                       *
*                                                                     *
***********************************************************************
         SPACE 2
TMPRTURN EQU   *
         L     R1,TPLPTR      GET TPL ADDRESS            @ZA07137
         L     R1,TPLECT-TPL(R1)  GET ECT ADDRESS        @ZA07137
         NI    ECTSWS2-ECT(R1),XFF-ECTTABND RESET NO DEQ FLAG@ZA07137
         MVI   TSTDCB,N0      INDICATE DCB MAY BE FREED.
         BAL   R11,FROMLDR    CLOSE AND FREE THE DCB.
         SPACE
         L     R1,INBUF       R1=ADDR OF BUFFER
         LTR   R1,R1          IS INBUF ALREADY ZERO
         BZ    RET1           YES.RETURN.
         LH    R0,N0(,R1)     R0=LENGTH OF BUFFER FOR FREEMAIN.
         FREEMAIN RC,LV=(0),SP=1,A=(1) FREE THE BUFFER.
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVED
         BZ    FREDCBOK       OK CONTINUE
         BAL   R11,FREERROR   PROCESS THE SVC ERROR
         SPACE 2
FREDCBOK EQU   *              FREEMAIN WAS OK CONTINUE
         XC    INBUF(L'INBUF),INBUF CLEAR INBUF.
         SPACE 2
RET1     EQU   *
         IKJRLSA TSTANSPL     RELEASE THE NEW PDL
         XC    TSTANSPL(X4),TSTANSPL  ZERO TEST ANSWER PLACE
         SPACE 2
BLOW2LOC EQU   *
         L     R2,TSTTCB      TCB ADDRESS FOR DAIR LIST
         MVC   INTDAIRB(LEN2C),DAIR2C UNALLOC TCB.
         ST    R2,INTDAIRB+(DA2CTCB-DAPB2C) TCB TO LIST.
         BAL   R11,DAIR1      BRANCH TO UNALLOCATE.
         SPACE 2
         TCLEARQ  INPUT
         SPACE 2
         MVC   INSTCKPL(L'TSTUPT+L'TSTECT+L'TSTCPECB),PARMLIST
*                             MOVE IN STANDARD PARM LIST.
         MVC   INSTCKPB(STACKLEN),STACKLST MOVE LIST FORM OF STACK.
         STACK PARM=INSTCKPB,DELETE=ALL,MF=(E,INSTCKPL)                X
                              FLUSH THE STACK.
         SPACE 2
         L     R2,TSTTCB      CHANGE TEST'S TCBTRN FIELD TO '0'
         SR    R3,R3          ZERO.
         IKJEGS9G TRN,TCBADDR=(R2),VALUE=(R3),MF=(E,INTSVCPL)
*****
*****    RETURN CODE CHECK IGNORED.
*****
         SPACE 2
BLOW1LOC EQU   *
         C     R3,TPLCTCB          WAS A SUBTASK ATTACHED ?
         BE    NODETACH            NO, SKIP ABEND COMPLETION PROCESSING
         L     R1,ECBTMPA          DID TMP SEE ATTN?           @ZA06995
         TM    N0(R1),X'40'        EXAMINE ECB TO FIND OUT     @ZA06995
         BO    NODETACH            YES-SKIP ESTAI POSTING      @ZA06995
*                                                              @ZA02373
         L     R1,ECBTERM          GET ADDR OF PROB PGM ECB    @ZA02373
         TM    INITFLG,X'10'       IN INIT?                    @ZA18794
         BZ    NOTINIT             NO,GO TO NOT INIT.          @ZA18794
         OI    0(R1),X'40'         PSEUDO POST PROB PGM ECB    @ZA18794
         XC    INITFLG,INITFLG     RESET INIT FLAG             @ZA18794
NOTINIT  TM    0(R1),X40           HAS IT BEEN POSTED COMPLETE @ZA02373
*                                                              @ZA18794
         BO    NODETACH            YES, DON'T POST AGAIN       @ZA02373
         SR    R0,R0               NO PARMLIST FOR POST        @ZA02373
         L     R1,TPLNECB          ABEND ECB                   @ZA02373
         POST  (R1)                WAKE UP TMP ESTAI (IKJEFT04)@ZA02373
*
*              AFTER WAKEING UP THE TMP ESTAI START ALL SUBTASKS
*                   TO ALLOW CONTINUATION OF THE ABEND AND AVOID
*                   A 13E ABEND
*              GO BACK TO MAIN WAIT AND WAIT FOR THE SUBTASK ECB
*                 (ECBTERM) TO BE POSTED INDICATING TASK COMPLETE
*
         STATUS START              START ALL SUBTASKS          @ZA02373
         B     WAIT                WAIT FOR COMPLETION         @ZA02373
         SPACE 2
NODETACH EQU *
AARGHH   EQU   *
         SPACE 2
         LR    R1,R9          R1=TCOMTAB ADDR.
         L     R0,TCOMTABL    R0=TCOMTAB LENGTH.
         L     R6,X4(,R13)    RESTORE TMP'S SAVE AREA ADDRESS.
         FREEMAIN RC,SP=1,LV=(0),A=(1) FREE IT.
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVED
         BZ    FRET1          OK CONTINUE
         BAL   R11,FREERROR   PROCESS THE SVC ERROR
         SPACE 2
FRET1    EQU   *              CONTINUE
         LTR   R8,R8          IS R8 = 0 (NO WORKAREA TO FREE)
         BZ    FRETCMOK       YES THEREFORE AVOID THE FREEMAIN
         LA    R0,INTWLEN     R0=LENGTH OF THE FREEMAIN
         FREEMAIN RC,LV=(0),SP=1,A=(8) FREEMAIN ERROR
         LTR   R15,R15        WAS THE FREEMAIN OK
         BZ    FRETCMOK       OK CONTINUE
         BAL   R11,FREERROR   OUPUT ERROR MSG
         SPACE 2
FRETCMOK EQU   *              FREEMAIN WAS OK CONTINUE
         SPACE
         LR    R13,R6         RESTORE TMP'S SAVE AREA ADDR
         RETURN (14,12),RC=4  RETURN TO TMP WITH RETURN CODE=4.
         EJECT
***********************************************************************
*                                                                     *
*        SUBROUTINE USED TO CLEAN-UP RESOURCES AFTER IKJEGLDR         *
*        PROCESSING.                                                  *
*                                                                     *
*        THIS SUBROUTINE IS USED TO CLEAN-UP ALL RESOURCES            *
*        ALLOCATED DURING IKJEGLDR PROCESSING.                        *
*                                                                     *
*        1.    IF THE TERMINAL WAS ALLOCATED FOR THE OS LOADER        *
*              PROCESSING, SYSTERM IS UNALLOCATED.                    *
*                                                                     *
*        2.    IF A DCB WAS OPENED PRIOR TO ATTACHING IKJEGLDR,       *
*              IT IS CLOSED AND THE POINTER TO IT IS ZEROED.          *
*                                                                     *
***********************************************************************
         SPACE 2
FROMLDR  EQU   *
         TM    TERMDD,XFF     Q. DOES TERM DD GET UNALLOCATED.
         BZ    SKIP4          NO. NEVER ALLOCATED.
         MVC   INTDAIRB(LEN2C),DAIR2C UNALLOC BY DDNAME.
         MVC   INTDAIRB+DA2CDDN-DAPB2C(L'TERMDD),TERMDD MOVE IN
*                             THE DDNAME.
         MVI   INTDAIRB+DA2CFLG-DAPB2C+X1,X1 CODE TO UNALLOC BY
*                             DDNAME.
         LR    R2,R11         SAVE LINK REGISTER.
         BAL   R11,DAIR1      BRANCH TO UNALLOCATE.
         LR    R11,R2         RESTORE THE LINK REGISTER.
CLOSE    EQU   *
SKIP4    EQU   *
         L     R4,TSTDCB      GET THE DCB ADDRESS - 4
         LTR   R4,R4          DID WE GO THRU THE 'ATTACH1' CODE
         BCR   NEG+Z,R11      RETURN UNLESS POSITIVE AND NON-ZERO
         LA    R4,N4(R4)      GET THE DCB ADDRESS.
         USING IHADCB,R4      ESTABLISH ADDRESSABILITY TO DCB.
         TM    DCBOFLGS,DCBOFOPN HAS THE DCB BEEN OPENED
         BZ    NOCLOSE        THE DCB IS NOT OPEN
         CLOSE ((R4)),MF=(E,INTCLOSL) CLOSE DCB
         DROP  R4
         SPACE 2
NOCLOSE  EQU   *              *
         BR    R11            RETURN TO CALLER.
         EJECT
***********************************************************************
*                                                                     *
*        THIS CODE OUTPUTS THE MESSAGE 'MEMBER XXX NOT IN DATA        *
*        SET YYY'.  IKJEGIO IS CALLED TO PUT  THE MESSAGE. CONTROL    *
*        IKJEGIO IS CALLED TO PUT THE MESSAGE.  CONTROL IS THEN       *
*        IS THEN RETURNED TO THE TMP.                                 *
***********************************************************************
         SPACE 2
BADMEM   EQU   *              BAD MEMBER MSG
         L     R6,OUTBUF      R6=ADDR OF OUTPIT BUFFER
         LA    R2,X5(R6)      R2= WHERE INSERT 2 GOES
         MVI   N0(R6),BLANK   SET UP TO BLANK OUTPUT BUFFER    @ZA05807
         MVC   N1(OUTBUFRL-1,R6),N0(R6) BLANK ENTIRE BUFFER    @ZA05807
         SR    R4,R4          CLEAR
         IC    R4,DSNAME+N13  GET THE LENGTH OF MEMBER NAME
         L     R3,DSNAME+X8   POINTER TO ACTUAL DSNAME
         LA    R1,X5(R4)      R1= TOTAL LENGTH FOR IKJEGIO
         XC    N0(4,R6),N0(R6)    ZERO INSERT LENGTH FIELD     @ZA05807
         STH   R1,N0(R6)      PLACE LENGTH INTO OUTPUT BUFFER
         AR    R2,R4          R2= LOCATION IN OUTBUF OF SECOND INSERT
         BCTR  R4,R0          DECREMENT FOR EXECUTE
         EX    R4,MOVEMEMB    MOVE MEMBER NAME TO MESSAGE.
         LA    R3,INTSTDSN    ACTUAL DATA SET NAME.
         L     R4,TPLUPT      ADDRESSABILITY TO UPT .          @ZA05807
         SR    R5,R5          ZERO FOR INSERT CHAR.
         IC    R5,UPTPREFL-UPT(,R4)  GET THE LENGTH OF USERID. @ZA05807
         BCTR  R5,R0          MINUS ONE.
         EX    R5,CLCID       COMPARE FOR USERID PREFIX.
         BNE   MOVEDSN        MOVE IN THE DATA SET NAME.
         LA    R3,X2(R5,R3)   UP POINTER PAST USERID.          @ZA05807
MOVEDSN  MVC   X4(N35,R2),N0(R3) MOVE MOST OF THE DATA SET NAME.
         LA    R1,N40         R1= LENGTH OF INSERT
         XC    N0(4,R2),N0(R2) ZERO SECOND INSERT LENGTH FIELD @ZA05807
         STH   R1,N0(R2)      PLACE LENGTH INTO BUFFER
         LA    R3,BADMEMNO    R3= BAD MEMBER MESSAGE NUMBER
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM ZERO IO PARAMETER LIST
         IKJEGSIO MSG,FIRST=(R3),INST11=(ADDR,(R6)),                   X
               INST12=(ADDR,(2)),ID=INT15,MF=(E,TSTIOPRM)
         B     TMPRTURN       EXIT TO TMP
         EJECT
***********************************************************************
*                                                                     *
*        DAIR SUBROUTINE.                                             *
*                                                                     *
*        THIS SUBROUTINE PROVIDES A COMMON INTERFACE TO THE DAIR      *
*        SERVICE ROUTINE.  THE SUBROUTINE ASSUMES THAT THE CALLER     *
*        HAS CONSTRUCTED THE APPROPRIATE DAIR PARAMETER BLOCK.        *
*        UPON RETURN FROM DAIR, THE RETURN CODE IS TESTED FOR         *
*        ZERO.  IF A NON-ZERO RETURN CODE IS RETURNED, THE DAIR       *
*        DIAGNOSTIC ROUTINE, IKJEGDDN, IS INVOKED TO BUILD THE        *
*        ERROR MESSAGE.                                               *
*                                                                     *
***********************************************************************
         SPACE 2
DAIR1    EQU   *
         MVC   INTDAIRL(L'TSTUPT+L'TSTECT+L'TSTCPECB),PARMLIST MOVE
*                             IN SERVICE ROUTINE PARAMETER LIST.
         LA    R1,INTDAIRB    ADDRESS OF DAIR PARAMETER BLOCK.
         L     R0,TPLPSCB     PSCB TO SECOND PORTION.
         STM   R0,R1,INTDAIRL+(DAPLPSCB-DAPL) PSCB,DAIR PARMS TO LIST.
         LINK  EP=IKJDAIR,ERRET=LINKDAIR,MF=(E,INTDAIRL) LINK TO DAIR.
         SPACE 2
         LTR   R15,R15        TEST FOR SUCCESSFUL COMPLETION.
         BCR   8,R11          IF SUCCESSFUL, RETURN.
         ST    R15,INTREGSV   SAVE RETURN CODE
         LA    R1,INTDAIRL    R1= ADDR OF THE DAIR PARM LIST
         LA    R2,INTREGSV    R2= ADDR OF THE RETURN CODE
         LA    R3,ZEROS       R3= ADDR OF WORD OF ZEROS
         LA    R4,HONES       R4= ADDR OF HALF WORD OF A ONE
         STM   R1,R4,EFF18PRM SETUP THE IKJEFF18 PARM LIST
         LINK  EP=IKJEFF18,ERRET=LINKEFF1,MF=(E,EFF18PRM) LINK TO EFF18
         LA    R3,TESTFAIL    R3= ADDR OF TEST FAILED
         SR    R4,R4          ZERO R4 NO SECOND LEVEL
         B     PUTRTURN       PRINT MESSAGE AND QUIT
         EJECT
***********************************************************************
*                                                                     *
*        STAE RETRY ROUTINE.                                          *
*                                                                     *
*        DETERMINE IF THE ABEND WAS PREDICTED.  IF SO, DETACH ANY     *
*        SUB-TASK WHICH MAY EXIST AND WRITE THE PROPER DIAGNOSTIC.    *
*        OTHERWISE, WRITE AN 'UNPREDICTABLE ERROR' DIAGNOSTIC 2ND     *
*        LEVEL MESSAGE AND RETURN TO THE TMP.                         *
*                                                                     *
***********************************************************************
         SPACE 2
HOMEBASE EQU   *
         USING *,R15          RETRY ROUTINE.
         SPACE
SETREGS  EQU   *              SET UP BASIC PROCESSING REGISTERS
         L     R2,CVTPTR      CVT POINTER
         USING CVT,R2         ADDRESSABILITY TO CVT.
         L     R3,CVTTCBP     NEW/CURRENT WORDS.
         L     R4,X4(,R3)     CURRENT TCB.
         USING TCB,R4         ADDRESSABILITY TO TCB.
         L     R7,TCBNSTAE    SCB ADDRESS.
         LM    R7,R10,N0(R7)  LINK , EXIT EP , TCOMTAB , PRB
         SPACE
         DROP  R2,R4
         L     R12,BASEAD     SETUP THE BASE REGISTER.
         DROP  R15            RESET ORIGINAL ADDRESSABILITY
         USING IKJEGINT,R12   *
         L     R9,TCBTRN-TCB(,R4) ADDRESS OF TCOMTAB.
         L     R13,REGSAVE1   RELOAD SAVE AREA ADDRESS.
         L     R8,N0(,R13)    GET IKJEGINT WORKAREA ADDRESS.
         L     R10,TPLPTR     SETUP ADDRESSABILITY TO TPL
         B     TSTRTURN       OUT MSG AND EXIT TO TMP
         EJECT
**********************************************************************
*        ERROR HANDLER ROUTINES, FOR LINK FAILED, GETMAIN FAILED,
*        AND FREEMAIN FAILED.
**********************************************************************
         SPACE
LINKPARS EQU   *              LINK TO PARSE FAILED
         LA    R2,PARSENO     R2= NUMBER FOR PARSE IN STATIC TABLE
         B     LINKFAIL       OUTPUT THE ERROR MESSAGE
         SPACE
LINKEFF1 EQU   *              LINK TO IKJEFF18 FAILED
         LA    R2,EFF18NO     R2= NUMBER FOR IKJEFF18 IN STATIC TABLE
         B     LINKFAIL       OUTPUT THE ERROR MESSAGE
         SPACE
LINKDEFL EQU   *              LINK TO IKJDFLT FAILED
         LA    R2,DEFLTNO     R2= NUMBER FOR DEFAULT IN STATIC TABLE
         B     LINKFAIL       OUTPUT THE ERROR MESSAGE
         SPACE
LINKDAIR EQU   *              LINK TO DAIR FAILED
         LA    R2,DAIRNO      R2= NUMBER FOR DAIR IN STATIC TABLE
         SPACE
**********************************************************************
*        THIS IS THE LINK FAILED VERSION OF THE IKJEGSIO MACRO
**********************************************************************
         SPACE
LINKFAIL EQU   *              LINKFAILED CALL TO IKJEGIO
         LR    R3,R15         R3= ADDRESS OF THE RETURN CODE
         LR    R4,R1          R4= ADDRESS OF THE ABEND CODE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM ZERO IO PARM LIST
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(R4),RC=(R3),INST11=(NUM,(R2)), X
               ID=INT15,MF=(E,TSTIOPRM)  ISSUE MACRO TO CALL IKJEGIO
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVED
         BNZ   TMPRTURN       YES THEREFORE EXIT TO TMP
         B     TSTRTURN       OUTPUT THE ERROR AND EXIT TO TMP
         SPACE
****
****     GETMAIN FAILED ERROR HANDLER PORTION OF IKJEGINT
****
         SPACE
GETERROR EQU   *              A GETMAIN FAILED
         LR    R3,R15         R3= THE RETURN CODE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM ZERO IO PARM LIST
         IKJEGSIO SVCERR,SVC=10,RC=(R3),ID=INT15,MF=(E,TSTIOPRM)
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVED
         BNZ   TMPRTURN       YES THEREFORE EXIT TO TMP
         B     TSTRTURN       OUTPUT THE ERROR AND EXIT TO TMP
****
****     FREEMAIN FAILED ERROR HANDLER PORTION OF IKJEGINT
****
         SPACE
FREERROR EQU   *              A FREEMAIN FAILED
         LR    R3,R15         R3= THE RETURN CODE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM ZERO IO PARM LIST
         IKJEGSIO SVCERR,SVC=10,RC=(R3),ID=INT15,MF=(E,TSTIOPRM)
         B     FREETABL(R15)  BRANCH ON RETURN CODE
FREETABL EQU   *              TABLE FOR IO RETURN CODES
         B     RETCALL        RC=0 RETURN TO WHERE FREEMAIN ISSUED
         B     RETCALL        RC=4 RETURN TO WHERE FREEMAIN ISSUED
         B     TSTRTURN       RC=8 THEREFORE EXIT TO TMP
         B     RETCALL        RC=12 RETURN TO WHERE FREEMAIN ISSUED
         B     TMPRTURN       RC=16 THEREFORE EXIT TO TMP
         B     TSTRTURN       RC=20 THEREFORE EXIT TO TMP
         B     TMPRTURN       RC=24 THEREFORE EXIT TO TMP
TSTRTURN EQU   *              TEST FAILED MESSAGE AND EXIT
         LA    R3,TESTFAIL    R3= NUMBER OF TEST FAILED
         LA    R4,N0          R4= ZERO NO SECOND LEVEL
         B     PUTRTURN       GO OUTPUT MESSAGE
RETCALL  EQU   *              RETURN TO CALLER
         BR    R11            RETURN TO WHERE THE FREEMAIN WAS ISSUED
****
****     ESTAE FAILED ERROR HANDLER PORTION OF IKJEGINT
****
         SPACE
ESTAERR  EQU   *              A ESTAE FAILED
         LR    R3,R15         R3= THE RETURN CODE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM ZERO IO PARM LIST
         IKJEGSIO SVCERR,SVC=60,RC=(R3),ID=INT15,MF=(E,TSTIOPRM)
         LTR   R15,R15        WAS A NON ZERO RETURN CODE RECEIVED
         BNZ   TMPRTURN       YES THEREFORE EXIT TO TMP
         LA    R3,TESTFAIL    R3= NUMBER OF TEST FAILED
         LA    R4,N0          R4= ZERO NO SECOND LEVEL
         B     PUTRTURN       OUTPUT THE ERROR AND EXIT TO TMP
****
****     SVC 97 FAILED OUTPUT BREAKPOINT ERROR MSG
***
SVC97ERR EQU   *              SVC 97 NONZERO RETURN CODE
         LA    R2,N24         R2= 24 (ESTAE MACRO FAILURE RETURN CODE
         CR    R2,R15         IS THAT THE RETURN CODE FROM SVC 97
*                                                              @ZA05803
         BE    ESTAERR        YES THEREFORE HANDLE ERROR       @ZA05803
         LA    R3,TESTFAIL    R3= TEST FAILED MESSAGE
         LA    R4,SVCFAIL     R4= SECOND LEVEL SVC ERROR
         EJECT
**********************************************************************
*        THIS ROUTINE OUTPUT A MESSAGE AS INDICATED IN R3, AND R4
*        THAT IS FIRST AND SECOND LEVEL... (NO INSERTS).........
**********************************************************************
         SPACE
PUTRTURN EQU   *              ISSUE MSG FROM OF IO
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM ZERO IO PARM LIST
         IKJEGSIO MSG,FIRST=(R3),SECOND=(R4),ID=INT15,MF=(E,TSTIOPRM)
         SPACE
****
****     WE ALWAYS EXIT THEREFORE RETURN CODES ARE IGNORED
****
         B     TMPRTURN
         EJECT
ADDCB    DCB   DSORG=PO,MACRF=(R) DEFINE A DCB.
ADDCBLEN EQU   *-ADDCB        DCB LENGTH.
         SPACE 5
LFORM    OPEN  (,(INPUT)),MF=L OPEN LIST FORM.
         SPACE 5
CLFORM   CLOSE (CLFORM),MF=L  CLOSE LIST FORM.
         SPACE 5
         DS    0F             ALIGN ON WORD BOUNDARY.
INTBLDLD DC    H'1'           NUMBER OF ENTRIES IN LIST.
         DC    H'58'          LENGTH OF DIRECTORY ENTRY.
         DC    CL8' '         MEMBER NAME.
INTBLDLL EQU   *-INTBLDLD     LENGTH OF CONSTANT.
ABENDCOD DC    CL16'SYSTEM CODE XXX '  FOR 2ND LEVEL MESSAGE.
         SPACE 5
         DS    0F
TCOMTABL DC    AL1(0)         SUBPOOL IDENTIFIER.
         DC    AL3(TCOMLEN+OUTBUFRL+CONAREAL+CWORKLEN+REGSAVEL)
*                             LENGTH OF TCOMTAB, OUTPUT BUFFER,
*                             CONVERT WORKAREA, GENERAL PURPOSE
*                             WORKAREA, REGISTER SAVEAREAS FOR
*                             GETMAIN, AND GENERAL WORKAREA.
INTSVIBL DC    AL1(0)         SUBPOOL IDENTIFIER.
         DC    AL3(12)        LENGTH OF CONTROL BLOCK FOR -
*                             +0 LINK FIELD
*                             +4 TCB POINTER
*                             +8 SVC INFORMATION BLOCK POINTER
LOAD     DC    C'LOAD    '    'LOAD' DEFAULT QUALIFIER.
OBJECT   DC    C'OBJ     '    'OBJECT' DEFAULT QUALIFIER.
MNLADDR  DC    V(IKJEGMNL)    ADDRESS OF IKJEGMNL
IOADDR   DC    V(IKJEGIO)     ADDRESS OF THE IO MODULE
CVTBDSTA DC    V(IKJEGCVT)    ADDR OF IKJEGCVT
         DC    V(IKJEGBLD)    ADDR OF IKJEGBLD
         DC    V(IKJEGSTA)    ADDRESS OF IKJEGSTA FOR TCOMTAB
SRHRTVCN DC    V(IKJEGSRH)    ADDRESS OF IKJEGSRH
OPCODV   DC    V(IKJEGCOP)    ADDR OF THE 360 OP CODE TABLE (1 BYTE)
         DC    V(IKJEGCD2)    ADDR OF 370 OP CODE TABLE (2 BYTE)
HIGHBIT  DC    X'80000000'    'OR' IN HIGH BIT.
POST7F   DC    X'3F000000'    POST STAI EXIT WITH A '7F'
ZEROS    DC    X'00000000'    WORD OF ZEROS
BASEAD   DC    A(IKJEGINT)    BASE ADDRESS FOR THIS MODULE.
CORE104  DC    AL1(0),AL3(104)  104 BYTE STAE W.A.
INTRC004 DC    H'4'           RETURN CODE = 4.
INTRC008 DC    H'8'           RETURN CODE = 8.
INTRC016 DC    H'16'          RETURN CODE = 16.
INTRC024 DC    H'24'          RETURN CODE = 24.
HONES    DC    H'1'           HALF WORD OF A ONE
PCLADDR  DC    V(IKJEGYNT)    *
SP1      DC    X'01000000'    SUB-POOL ONE INDICATOR.
SVC      SVC   TESTSVC        TEST SVC
         SVC   EXITSVC        EXIT SVC
         EJECT
         IKJDAP08
DA08LEN  EQU   *              DSECT LENGTH
IKJEGINT CSECT
DAIR08   DC    (DA08LEN-DAPB08)X'0'  INITIALIZE BEFORE ORGS
         ORG   DA08CD-DAPB08+DAIR08    *
         DC    XL2'0008'      CODE
         ORG   DA08DDN-DAPB08+DAIR08   *
         DC    CL8' '         DDNAME
         ORG   DA08UNIT-DAPB08+DAIR08  *
         DC    CL8' '         UNITNAME
         ORG   DA08SER-DAPB08+DAIR08   *
         DC    CL8' '         VOLUME SERIAL NUMBER
         ORG   DA08MNM-DAPB08+DAIR08   *
         DC    CL8' '         MEMBER NAME
         ORG   DA08PSWD-DAPB08+DAIR08  *
         DC    CL8' '         PASSWORD
         ORG   DA08DSP1-DAPB08+DAIR08  *
         DC    AL1(DA08SHR)   DISP=SHR
         ORG   DA08LEN-DAPB08+DAIR08   *
LEN08    EQU   *-DAIR08       *
         EJECT
         IKJDAP1C
DA1CLEN  EQU   *              DSECT LENGTH
IKJEGINT CSECT
DAIR1C   DC    (DA1CLEN-DAPB1C)X'0'  INITIALIZE BEFORE ORGS
         ORG   DA1CCD-DAPB1C+DAIR1C    *
         DC    XL2'001C'      CODE
         ORG   DA1CDDN-DAPB1C+DAIR1C   *
         DC    CL8' '         DDNAME
         ORG   DA1CLEN-DAPB1C+DAIR1C   *
LEN1C    EQU   *-DAIR1C       *
         EJECT
         IKJDAP2C
DA2CLEN  EQU   *              DSECT LENGTH
IKJEGINT CSECT
DAIR2C   DC    (DA2CLEN-DAPB2C)X'0'  INITIALIZE BEFORE ORGS
         ORG   DA2CCD-DAPB2C+DAIR2C    *
         DC    XL2'002C'      CODE
         ORG   DA2CLEN-DAPB2C+DAIR2C   *
LEN2C    EQU   *-DAIR2C       *
         EJECT
ABENDLST DS    0F
         DC    AL1(99)        ABEND KEY
         DC    AL3(BLOW5)     LINK TO PARSE FAILURE.
         SPACE 1
         DC    AL1(95)        ABEND KEY
         DC    AL3(BLOW6)     ATTACH IKJEGLDR FAILURE.
         SPACE 1
         DC    XL1'FF'        END-OF-LIST FLAG.
         SPACE 2
INTSPL   IKJEGSPL RTRY=HOMEBASE,ABNTB=ABENDLST,MODNM=IKJEGINT,         *
               TNM=INITIALIZATION
         SPACE 2
TRTABLE  DC    C'0123456789'  HEX-CHARACTER CONVERSION TABLE.
         DC    C'ABCDEF'      *
TEMPNAME DC    A(*+4),C'TEMPNAME' THIS IS THE MEMBER NAME IF NONE .
TEST     DC    CL8'TEST'      TEST CONSTANT
ABEND    DC    X'000D'        ABEND CONSTANT
         SPACE 2
MEMMVC   MVC   X4(*-*,R5),N0(R6)  *
DSNMVC   MVC   INTSTDSN(*-*),N0(R2)  *
MEMMOVE  MVC   INTDAIRB+(DA08MNM-DAPB08)(*-*),N0(R4)  *
MOVEPASS MVC   INTDAIRB+(DA08PSWD-DAPB08)(*-*),N0(R4) MOVE THE PASSWORD
QUALCHK  CLC   X1(*-*,R5),N0(R2) CHECK FOR EQUAL QUALIFIERS      A43321
CLCID    CLC   N0(*-*,R3),UPTPREFX-UPT(R4) COMPARE PREFIXES    @ZA05807
MOVEMEMB MVC   X4(*-*,R6),N0(R3)  MOVE MEMBER NAME TO MESSAGE
         SPACE 5
STACKLST STACK DELETE=ALL,MF=L       LIST FORM.
STACKLEN EQU   *-STACKLST     LENGTH OF STACK LIST.
         SPACE 5
ATTCHLFM ATTACH EP=IKJEGLDR,SF=L
ATTCHLLN EQU   *-ATTCHLFM
         EJECT
IKJEGYNT IKJPARM
DSNAME   IKJPOSIT DSNAME,PROMPT='DSNAME'
STRING   IKJPOSIT QSTRING
LOADOBJ  IKJKEYWD DEFAULT='LOAD'
         IKJNAME 'LOAD'
         IKJNAME 'OBJECT'
CPNOCP   IKJKEYWD DEFAULT='NOCP'
         IKJNAME 'CP'
         IKJNAME 'NOCP'
         IKJENDP
         EJECT
*              GENERAL EQUATES.
N0       EQU   0              DECIMAL 0
X0       EQU   0              HEXIDECIMAL 0
X1       EQU   1              HEXIDECIMAL 1
X2       EQU   2              HEXIDECIMAL 2
X4       EQU   4              HEXIDECIMAL 4
X5       EQU   5              HEXIDECIMAL 5
X6       EQU   6              HEXIDECIMAL 6
X8       EQU   8              HEXIDECIMAL 8
N4       EQU   4              DECIMAL FOUR
N12      EQU   12             TWELVE
N13      EQU   13             THIRTEEN.
N16      EQU   16             SIXTEEN.
N20      EQU   20             TWENTY
N24      EQU   24             TWENTY FOUR
N28      EQU   28             TWENTY EIGHT
N35      EQU   35             THIRTY FIVE.
N39      EQU   39             THIRTY NINE
N40      EQU   40             FOURTY
N64      EQU   64             SIXTY FOUR.
N72      EQU   72             SEVENTY TWO.
N100     EQU   100            ONE HUNDRED (DCB GETMAIN LENGTH)
X40      EQU   X'40'          HEXIDECIMAL 40
X80      EQU   X'80'          HEXIDECIMAL 80
XFF      EQU   X'FF'          HEXIDECIMAL FF
* --- * --- * --- * --- * --- * --- * --- * --- * --- * --- *
TESTSVC  EQU   97             TEST'S SVC
EXITSVC  EQU   3              EXIT SVC NUMBER
* --- * --- * --- * --- * --- * --- * --- * --- * --- * --- *
PASSWORD EQU   DSNAME+16      POINTER,LEN,FLGS,RES
INDSNPER EQU   C'.'           CHARACTER PERIOD.                  A43321
BLANK    EQU   C' '           THIS IS A BLANK (X'40').
LOADON   EQU   1
PRESENT  EQU   X'80'          PRESENT -- NOT ABSENT
PS       EQU   X'40'          PHYSICAL SEQUENTIAL
OBJON    EQU   2              INDICATES OBJECT
Z        EQU   8              ZERO CONDITION CODE
NEG      EQU   4              NEGATIVE CONDITION.
X44      EQU   X'44'          HEXIDECIMAL 44.
FULLQUAL EQU   B'01000000'    BIT TO INDICATE 'FULLY-QUALIFIED'.
         EJECT
         TCOMTAB
         EJECT
         IKJDFPL
         EJECT
         IKJDFPB                                                 A43321
         EJECT
         TSTCWORK
         EJECT
         DCBD  DSORG=PO,DEVD=DA
         EJECT
INTWKARA DSECT
INTPARSL DS    6F             PARSE SERVICE ROUTINE PARAMETER
*                             LIST.
INTRSVD1 DS    2F             RESERVED SPACE.
         ORG   INTPARSL       ORIGIN TO BEGINNING OF WORK AREA.
INDFLTPL DS    4F             DEFAULT SERVICE ROUTINE PARAMETER
*                             LIST.
INDFLTPB DS    3F             DEFAULT SERVICE ROUTINE PARAMETER
*                             BLOCK.
         ORG   INTPARSL       ORIGIN TO BEGINNING OF WORK AREA.
INSTCKPL DS    4F             STACK SERVICE ROUTINE PARAMETER LIST
INSTCKPB DS    2F             STACK SERVICE ROUTINE PARAMETER BLOCK
         ORG   ,              ORIGIN TO RESTART WORK AREA.
INTRSVD2 DS    H              RESERVED SPACE.
INDSNLEN DS    H              LENGTH OF DATA SET NAME.
INTSTDSN DS    CL44           DATA SET NAME FROM TEST COMMAND.
INTFLGS1 DS    X              INITIALIZATION FLAGS.
INTDSMEM EQU   X'80'          ALLOCATE TO MEMBER SPECIFIED ON
*                             THE TEST COMMAND.
         ORG   INTPARSL       ORIGIN TO BEGINNING OF WORK AREA.
INTDAIRL DS    1F             DAIR SERVICE ROUTINE PARAMETER LIST
INTDAIR2 DS    1F             SECOND WORD OF DAIR LIST
INTDAIR3 DS    3F             THIRD WORD OF DAIR LIST
         ORG   ,              ORIGIN TO RESTART WORK AREA.
         DS    0F             ALIGN ON WORD BOUNDARY.
INTDAIRB DS    (DA08LEN-DAPB08)X DAIR SERVICE ROUTINE PARAMETER
*                             BLOCK.
INTOPENL DS    F              OPEN PARAMETER LIST.
INTCLOSL DS    F              CLOSE PARAMETER LIST.
EFF18PRM DS    0F             ALSO  IKJEFF18 PARM LIST
INTSVCPL DS    3F             SVC 97 PARAMETER LIST.
INTATCHL DS    XL(ATTCHLLN)   ATTACH PARAMETER LIST FOR ATTACH.
INTREGSV DS    1F             SAVE AREA FOR RETURN CODES
INITFLG  DS    1F             INIT. FLAGS                   @ZA18794
INTWLEN  EQU   *-INTWKARA     LENGTH OF WORKAREA.
         EJECT
         IKJTPL
         EJECT
         IKJPSCB
         EJECT
         IKJTCB
         EJECT
         IKJECT
         EJECT
*        PARSE
         IKJPPL
         EJECT
*        DAIR
         IKJDAPL
         EJECT
         CVT   DSECT=YES
         EJECT
         IKJRB
         EJECT
         IHAPDS
         EJECT
         IKJUPT
         EJECT
         IHACDE
         EJECT
         IKJEGSVQ
         EJECT
IKJEGINT CSECT
PATCHSP  DC    50C'Z'         PATCH AREA.
         END   IKJEGINT
