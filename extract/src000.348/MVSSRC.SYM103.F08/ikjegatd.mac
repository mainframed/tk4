ATD      TITLE 'IKJEGATD - THE SECOND LOAD MODULE OF THE AT SUBCOMMAND'
         COPY  IKJEGSIO
IKJEGATD CSECT
         EJECT
*****************************  PROLOGUE  ******************************
*                                                                     *
* STATUS                                                              *
*    CHANGE LEVEL 00, VERSION NUMBER 02, VS2     03/02/73             *
*                                                                     *
* FUNCTION/OPERATION                                                  *
*    THIS MODULE CONSTRUCTS A DEFER QUEUE FOR SAVING REQUESTS FOR     *
*    ESTABLISHING BREAKPOINTS UNTIL THE CONCERNED MODULE IS BROUGHT   *
*    INTO CORE.                                                       *
*                                                                     *
* ENTRY POINTS                                                        *
*    IKJEGATD - ENTERED FROM IKJEGAT, THE FIRST LOAD MODULE OF        *
*    THE AT SUBCOMMAND.  IT FIRST CHECKS TO MAKE CERTAIN ALL          *
*    ADDRESSES FOR THE DEFER REQUEST ARE FULLY QUALIFIED              *
*    AND SPECIFY THE SAME LOADNAME. IT THEN BUILDS THE                *
*    DEFERRED BREAK ELEMENT AND PUTS IT ON THE DEFERRED QUEUE.        *
*                                                                     *
* INPUT                                                               *
*    REGISTER 1 CONTAINS THE ADDRESS OF TCOMTAB. THE FIELD WORKAREA   *
*    IN TCOMTAB CONTAINS THE ADDRESS OF TSTCWORK. ATD'S WORK AREA     *
*    IS PART OF TSTCWORK. THE FIELD PDEADDR IN ATD'S WORK AREA        *
*    CONTAINS THE ADDRESS OF THE FIRST ADDRESS PDE RETURNED BY        *
*    PARSE. THE FIELD TSTANSPL IN TCOMTAB POINTS TO THE PDL           *
*    WHICH WAS BUILT BY PARSE.                                        *
*                                                                     *
* OUTPUT                                                              *
*    OUTPUT CONSISTS OF THE FOLLOWING                                 *
*    1.  DIAGNOSTIC MESSAGES                                          *
*    2.  A DEFER QUEUE POINTED TO BY DEFERTAB IN TCOMTAB IN THE       *
*    FORMAT DESCRIBED UNDER THE SYMBOL NEWQ.                          *
*    3.  RETURN CODES AS LISTED BELOW-                                *
*                                                                     *
*    0 - MAINLINE MAY REISSUE THE TEST MODE MESSAGE AND GET ANOTHER   *
*    SUBCOMMAND. IF AN ERROR OCCURRED, TSTFLUSH IN TCOMTAB IS ON.     *
*    16 - ATTENTION HAS BEEN SCHEDULED                                *
*    20 - INDICATES RETURN FROM THE RETRY ROUTINE                     *
*    24 - INDICATES AN ESTAE MACRO FAILURE                            *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*    IKJEGIO OUTPUTS ERROR MESSAGES VIA IKJEGSIO MACRO                *
*                                                                     *
* EXITS, NORMAL                                                       *
*    RETURN VIA REGISTER 14 TO THE CALLER                             *
*                                                                     *
* EXITS, ERROR                                                        *
*    RETURN VIA REGISTER 14 TO THE CALLER                             *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    THIS MODULE USES TWO WORK AREAS                                  *
*    1.  SUBCOMMAND WORK AREA DESCRIBED BY TSTCWORK AND WORKSP DSECTS *
*    2.  TEST COMMUNICATION WORK AREA DESCRIBED BY TCOMTAB DSECT      *
*                                                                     *
* ATTRIBUTES                                                          *
*    REENTRANT, REFRESHABLE                                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRESEN-  *
*    TATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO THE  *
*    ONE USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED SO THAT *
*    REDEFINITION OF 'CHARACTER' CONSTANTS, BY REASSEMBLY, WILL RESULT*
*    IN A CORRECT MODULE FOR THE NEW DEFINITIONS.                     *
*                                                                     *
* NOTES                                                               *
*    NONE.                                                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*               EQUATES                                               *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0                        REGISTER 0 - USED ONLY FOR
*                                       INTERFACING WITH OS
R1       EQU   1                        REGISTER 1 - PARAMETER AND WORK
*                                       REGISTER
R2       EQU   2                        REGISTER 2 - WORKREG - ALSO
*                                       USED AS BASE FOR DME
R3       EQU   3                        REGISTER 3 - RESERVED FOR
*                                       MAINTENANCE
R4       EQU   4                        REGISTER 4 - WORKREG
R5       EQU   5                        REGISTER 5 - WORKREG
R6       EQU   6                        REGISTER 6 - WORKREG
R7       EQU   7                        REGISTER 7 - SWITCH FOR
*                                       SETTING UP LOAD NAME, AND BASE
*                                       FOR DBE
R8       EQU   8                        REGISTER 8 - WORKREG FOR STAE
R9       EQU   9                        REGISTER 9 - BASE FOR TCOMTAB
R10      EQU   10                       REGISTER 10 - BASE FOR TSTCWORK
R11      EQU   11                       REGISTER 11 - BASE FOR ADDRESS
*                                       PDES
R12      EQU   12                       REGISTER 12 - PROGRAM BASE
*                                       REGISTER
R13      EQU   13                       REGISTER 13 - SAVE AREA POINTER
R14      EQU   14                       REGISTER 14 - RETURN ADDRESS
R15      EQU   15                       REGISTER 15 - RETURN CODES,
*                                       ENTRY ADDRESSES
         SPACE
BLANK    EQU   C' '                     BLANK
HEXFF    EQU   X'FF'                    BYTE WITH ALL BITS ON
         SPACE
ZERO     EQU   0                        NUMBER 0
ONE      EQU   1                        NUMBER 1
TWELVE   EQU   12                       NUMBER 12
SIXTEEN  EQU   16                       NUMBER 16
TWENTY   EQU   20                       NUMBER 20
TWENTY8  EQU   28                       NUMBER 28
         SPACE
L0       EQU   0                        LENGTH OF 0
L3       EQU   3                        LENGTH OF 3
L7       EQU   7                        LENGTH OF 7
         SPACE
D0       EQU   0                        DISPLACEMENT OF 0
D1       EQU   1                        DISPLACEMENT OF 1
D4       EQU   4                        DISPLACEMENT OF 4
         SPACE
CVTADDR  EQU   X'10'                    ADDRESS OF CVT
RC24     EQU   24            RETURN CODE 24
         SPACE
         EJECT
***********************************************************************
*                                                                     *
*              ATD PROCESSING STARTS HERE                             *
*                                                                     *
***********************************************************************
         SAVE  (14,12),,IKJEGATD        SAVE CALLER'S REGISTERS
         LR    R12,R15                  ESTABLISH ADDRESSABILITY FOR
         USING IKJEGATD,R12             THIS CSECT
         LR    R9,R1                    PUT ADDRESS OF TCOMTAB IN R9
         USING TCOMTAB,R9               ESTABLISH ADDRESSABILITY TO
*                                       COMMUNICATION WORK AREA
         L     R5,REGSAVE2              R5=ADDR OF AT'S SAVE AREA
         ST    R5,SAVENEXT-SAVEAREA(R13)  SAVE FORWARD POINTER
         ST    R13,SAVELAST-SAVEAREA(R5)  SAVE BACK POINTER
         LR    R13,R5                   R13=ADDR OF AT'S SAVE AREA
         SPACE
***********************************************************************
*        TURN OFF XCTL SWITCH IN TCOMTAB. GET ADDRESSABILITY TO       *
*        WORKAREA, AND ISSUE ESTAE TO INTERCEPT ABENDS.               *
***********************************************************************
         NI    TSTFLGS2,HEXFF-TSTXCTL   TURN OFF XCTL SWITCH
         STM   R14,R12,RETURNPT-SAVEAREA(R13)  SAVE AT'S REGISTERS
*                                       IN CASE OF AN ABEND
         L     R10,WORKAREA             R10=ADDRESS OF COMMON WORK AREA
         USING TSTCWORK,R10             ESTABLISH ADDRESSABILITY TO IT
         XC    STAEL,STAEL   CLEAR ESTAE PARM LIST
         L     R15,TSTSTAE   R15=ADDR OF ESTAE EXIT ROUTINE
         ESTAE (R15),CT,PARAM=ATDSPL,XCTL=NO,RECORD=YES,               *
               MF=(E,STAEL)  ESTABLISH ESTAE EXIT
         LTR   R15,R15       WAS ESTAE SUCCESSFUL?
         BZ    ATD1          YES,CONTINUE
         STC   R15,TSTESTRC  SAVE ESTAE RETURN CODE
         LA    R15,RC24      SET RETURN CODE TO 24
         B     RETMAIN       RETURN TO IKJEGMNL
         SPACE
***********************************************************************
*        GET ADDRESS OF FIRST ADDRESS PDE AND SET UP FOR PROCESSING.  *
***********************************************************************
ATD1     EQU   *
         L     R11,PDEADDR              R11=POINTER TO FIRST ADDRESS
*                                       PDE
         USING IKJPARMA,R11             ESTABLISH ADDRESSABILITY TO PDE
         XR    R7,R7                    R7=0 INDICATES FIRST VALID
*                                       PDE YET TO BE ENCOUNTERED
         SPACE
***********************************************************************
*        CHECK FOR FULLY QUALIFIED ADDRESS. IF A RANGE IS GIVEN,      *
*        BE SURE BOTH ADDRESSES ARE IN THE SAME LOAD.                 *
***********************************************************************
ISITCONV DS    0H                       CHECK FOR CONVERTED PDE
         TM    PDEUSER,PDECONVD         HAS PDE BEEN CONVERTED - IF IT
*                                       HAS NOT, THEN ADDRESS IS
*                                       FULLY QUALIFIED
         BO    DEFERMSG                 PUT OUT MESSAGE FOR DEFER MUST
*                                       BE USED WITH FULLY QUALIFIED
*                                       ADDRESS
         TM    PDE2FLG1,LDNAMFLG        WAS A RANGE GIVEN
         BZ    ASKFIRST                 NO, TEST FOR FIRST UNRESOLVED
*                                       PDE
         CLC   PDELEN1,PDE2LEN1         DO LOADNAMES HAVE THE SAME
*                                       NUMBER OF CHARACTERS
         BNE   BADLDNM                  NO, PUT OUT ERROR MSG
         L     R2,PDELDNAM              R2=ADDRESS OF FIRST LOADNAME
         L     R6,PDE2LDNA              R6=ADDRESS OF SECOND LOADNAME
         LH    R4,PDELEN1               R4=LENGTH OF LOADNAMES
         BCTR  R4,ZERO                  DECREMENT FOR EXECUTE INSTR.
         EX    R4,COMPARE               DO LOADNAMES MATCH
         BNE   BADLDNM                  LOADNAMES DON'T MATCH - PUT OUT
*                                       ERROR MESSAGE
         SPACE
***********************************************************************
*        IF THIS IS THE FIRST UNCONVERTED PDE, MOVE THE LOAD          *
*        NAME TO WORK AREA FOR COMPARISON WITH LATER PDE LOAD         *
*        NAMES. OTHERWISE, CHECK THAT LOAD NAME IS THE SAME           *
*        AS THAT OF PRECEEDING PDES.                                  *
***********************************************************************
ASKFIRST DS    0H                       IS THIS FIRST UNRESOLVED PDE
         LTR   R7,R7                    IS THE SWITCH ZERO
         BZ    MOVELOAD                 YES, MOVE LOADNAME TO WORKAREA
         LH    R4,PDELEN1               R4=LENGTH OF NEW LOADNAME
         CLR   R5,R4                    IS LENGTH EQUAL TO LENGTH OF
*                                       FIRST
         BNE   BADLDNM                  NO, PUT OUT MESSAGE - LOADNAMES
*                                       FOR A DEFER REQUEST MUST
*                                       BE THE SAME
         LA    R6,LOADNAME              R6=POINTER TO LOADNAME IN
*                                       WORKAREA
         L     R2,PDELDNAM              R2=POINTER TO NEW LOADNAME
         BCTR  R4,ZERO                  DECREMENT FOR EXECUTE INSTR
         EX    R4,COMPARE               COMPARE LOADNAMES
         BNE   BADLDNM                  LOADNAMES DON'T MATCH - PUT OUT
*                                       ERROR MESSAGE
         SPACE
***********************************************************************
*        GET CHAIN POINTER TO NEXT PDE. IF NONE, GO INSERT ELEMENT    *
*        IN DEFERRED QUEUE FOR THIS REQUEST. IF MORE PDES, GO         *
*        CHECK THEM.                                                  *
***********************************************************************
NAMESOK  DS    0H                       THE LOADNAMES MATCH
         L     R11,PDE2CHAI             R11=PDE CHAIN
         LA    R11,D0(R11)              CLEAR HIGH ORDER BYTE
         LTR   R11,R11                  IS CHAIN EMPTY
         BZ    SEARCHQ                  YES, CHECK FOR DEFER QUEUE
         B     ISITCONV                 CHECK FOR PDE CONVERTED
         SPACE
***********************************************************************
*        INSTRUCTION TO BE EXECUTED FOR COMPARISON OF LOAD            *
*        NAMES FOR PDES.                                              *
***********************************************************************
COMPARE  CLC   D0(L0,R6),D0(R2)         COMPARE INSTRUCTION
         SPACE
***********************************************************************
*        A FULLY QUALIFIED ADDRESS WAS NOT GIVEN. SEND AN ERROR       *
*        MESSAGE TO THE TERMINAL, AND RETURN.                         *
***********************************************************************
DEFERMSG DS    0H                       PREPARE TO OUTPUT MESSAGE FOR
*                                       FULLY QUALIFIED ADDRESS MUST
*                                       BE GIVEN WITH DEFER
         LA    R1,MSG2       R1=ADDR OF MESSAGE NUMBERS
         B     PUTMSG                   PUT OUT MESSAGE AND RETURN
         SPACE
***********************************************************************
*        ALL LOADNAMES WERE NOT THE SAME. SEND AN ERROR MESSAGE TO    *
*        THE TERMINAL AND RETURN.                                     *
***********************************************************************
BADLDNM  DS    0H                       PREPARE TO OUTPUT MESSAGE FOR
*                                       ALL LOADNAMES ON A DEFER
*                                       REQUEST MUST BE SAME
         LA    R1,MSG3       R1=ADDR OF MESSAGE NUMBERS
         B     PUTMSG                   PUT OUT MESSAGE AND RETURN
         SPACE
***********************************************************************
*        WHEN THE FIRST UNCONVERTED PDE IS FOUND, AND IS VALID,       *
*        THIS CODE IS EXECUTED TO MOVE THE LOADNAME FROM THE PDE      *
*        TO ATD'S WORKAREA FOR COMPARISON WITH LATER PDES.            *
***********************************************************************
MOVELOAD DS    0H                       FIRST UNRESOLVED PDE FOUND
         LA    R7,D1(R7)                SET SWITCH FOR FIRST UNRESOLVED
*                                       PDE
         MVI   LOADNAME,BLANK           BLANK OUT LOADNAME FIELD IN
         MVC   LOADNAME+D1(L7),LOADNAME WORKAREA
         L     R6,PDELDNAM              R6=ADDRESS OF LOADNAME
         LA    R4,LOADNAME              R4=ADDRESS FOR LOADNAME IN
*                                       WORKAREA
         LH    R5,PDELEN1               R5=LENGTH OF LOADNAME STRING
         BCTR  R5,ZERO                  DECREMENT FOR MOVE INST
         EX    R5,LOADMVC               MOVE LOADNAME TO WORKAREA
         LA    R5,D1(R5)                R5=LENGTH OF LOADNAME
         B     NAMESOK                  CHECK FOR MORE PDE'S
         SPACE
***********************************************************************
*        THIS INSTRUCTION IS EXECUTED TO MOVE THE LOADNAME FROM       *
*        THE PDE TO ATD'S WORKAREA.                                   *
***********************************************************************
LOADMVC  MVC   D0(L0,R4),D0(R6)         MOVE LOADNAME TO WORKAREA
         SPACE
***********************************************************************
*        ALL PDES HAVE BEEN CHECKED AS MUCH AS POSSIBLE AND ARE       *
*        OK. IF THE DEFERRED QUEUE IS EMPTY, GO BUILD A DEFERRED      *
*        QUEUE. IF QUEUE IS NOT EMPTY, GET ADDRESS OF FIRST DME ON    *
*        DEFERRED QUEUE.                                              *
***********************************************************************
SEARCHQ  DS    0H                       ARE ANY DME'S ON THE DEFER
*                                       QUEUE
         OC    DEFERTAB,DEFERTAB        IS THE DEFER QUEUE EMPTY ?
         BZ    NEWQ                     YES, ESTABLISH THE QUEUE
         L     R2,DEFERTAB              R2=ADDRESS OF FIRST DME ON THE
*                                       QUEUE
         USING DME,R2                   R2 IS USED FOR DME
*                                       ADDRESSABILITY
         SPACE
***********************************************************************
*        CHECK THE LOADNAME IN THE DME. IF IT IS NOT THE SAME AS      *
*        THE LOADNAME IN THE PDES, GO TRY THE NEXT DME. IF IT         *
*        IS THE SAME, GO TO END OF ASSOCIATED DBE CHAIN, AND BUILD    *
*        A NEW DBE FOR THIS REQUEST.                                  *
***********************************************************************
TESTNAME DS    0H                       COMPARE LOADNAMES
         CLC   LOADNAME,DMELOAD         IS NEW LOADNAME EQUAL TO ONE
*                                       IN DME
         BNE   NEXTDME                  NO, ARE THERE MORE DME'S
         L     R7,DMEDBE                R7=POINTER TO FIRST DBE
         USING DBE,R7                   R7 IS USED FOR DBE
*                                       ADDRESSABILITY
         SPACE
TRYDBE   DS    0H                       IS THIS LAST DBE FOR DME
         OC    DBEDBE,DBEDBE            IS DBE LINK FIELD ZERO
         BZ    GETDBE                   YES, GET CORE FOR NEXT DBE
         L     R7,DBEDBE                R7=POINTER TO NEXT DBE
         B     TRYDBE                   IS THIS LAST DBE FROM DME
         SPACE
***********************************************************************
*        LOADNAME IN DME DID NOT AGREE WITH LOADNAME IN PDES.         *
*        IF THERE ARE MORE DMES, GET THE ADDRESS OF THE NEXT ONE, AND *
*        GO CHECK IT. IF NO MORE, GO BUILD ONE FOR THIS REQUEST.      *
***********************************************************************
NEXTDME  DS    0H                       ARE MORE DME'S ON THE QUEUE
         OC    DMEDME,DMEDME            IS LINK FIELD EMPTY
         BZ    NEWDME                   YES, GET CORE FOR ANOTHER DME
         L     R2,DMEDME                R2=POINTER TO NEXT DME
         B     TESTNAME                 BRANCH TO COMPARE LOADNAMES
         SPACE
***********************************************************************
*        THE DEFERRED QUEUE WAS EMPTY. BUILD A DME AND DBE FOR        *
*        THIS REQUEST AND CHAIN THEM TO THE TCOMTAB.                  *
***********************************************************************
NEWQ     DS    0H
         SPACE
         MVC   GETCORE(GETLEN),GETL     MOVE LIST FORM OF GETMAIN TO
*                                          WORKAREA
         LA    R1,GETCORE               R1=ADDRESS OF LIST FORM
         GETMAIN EC,LV=TWENTY8,A=ADDRCORE,SP=ONE,MF=(E,(R1)) GET CORE
*                                          FOR FIRST DME AND DBE
         LTR   R15,R15                  WAS CORE GOTTEN
SMTGET01 BNZ   NOCORE                   NO. PRINT'INSUFFICIENT CORE'
         L     R2,ADDRCORE              R2=ADDRESS OF GOTTEN CORE
         ST    R2,DEFERTAB              SET POINTER IN TCOMTAB
         SPACE
BLDELEMS DS    0H                       ACTUAL BUILDING OF ELEMENTS IS
*                                       DONE HERE
         MVC   DMELOAD,LOADNAME         PUT LOADNAME IN DME
         LA    R7,DME+DMELNH            R7=ADDRESS OF FIRST DBE FROM
*                                       DME
         ST    R7,DMEDBE                PUT ADDRESS OF FIRST DBE INTO
*                                       DME
         XC    DMEDME,DMEDME            ZERO DME LINK FIELD
BLDDBE   DS    0H
         MVC   DBEPDL,TSTANSPL          SAVE ADDRESS OF PDL IN DBE
         XC    TSTANSPL,TSTANSPL        CLEAR POINTER TO PDL
         MVC   DBEINBUF,INBUF           SAVE INBUF PTR IN DBE
         XC    INBUF,INBUF              CLEAR INBUF IN TCOMTAB
         XC    DBEDBE,DBEDBE            ZERO DBE LINK FIELD
         B     CODE0                    RETURN TO MAINLINE WITH DEFER
*                                       QUEUE SUCCESSFULLY BUILT
         SPACE
***********************************************************************
*        NO DME EXISTS FOR LOADNAME. BUILD A DME AND DBE AND          *
*        CHAIN THEM TO EXISTING QUEUE.                                *
***********************************************************************
NEWDME   DS    0H                       A NEW DME MUST BE ESTABLISHED
         MVC   GETCORE(GETLEN),GETL     MOVE LIST FORM OF GETMAIN TO
*                                       WORKAREA
         LA    R1,GETCORE               R1=ADDRESS OF LIST FORM
         GETMAIN EC,LV=TWENTY8,A=ADDRCORE,SP=ONE,MF=(E,(R1)) GET CORE
*                                       FOR NEW DME
         LTR   R15,R15                  WAS CORE GOTTEN
SMTGET02 BNZ   NOCORE                   NO. PRINT'INSUFFICIENT CORE'
         MVC   DMEDME,ADDRCORE          LINK NEW DME TO LAST DME
         L     R2,ADDRCORE              R2=ADDRESS OF NEW DME
         B     BLDELEMS                 BRANCH TO FILL IN FIELDS OF
*                                       DME AND DBE
         SPACE
***********************************************************************
*        A DME EXISTS ON THE DEFERRED QUEUE FOR LOADNAME. BUILD A     *
*        DBE FOR THIS REQUEST AND CHAIN IT TO DBE QUEUE FOR DME.      *
***********************************************************************
GETDBE   DS    0H                       A NEW DEFER BREAK ELEMENT MUST
*                                       BE ESTABLISHED
         MVC   GETCORE(GETLEN),GETL     MOVE LIST FORM OF GETMAIN TO
*                                       WORK AREA
         LA    R1,GETCORE               R1=ADDRESS OF L FORM OF MACRO
         GETMAIN EC,LV=TWELVE,A=ADDRCORE,SP=ONE,MF=(E,(R1)) GET CORE
*                                       FOR NEW DBE
         LTR   R15,R15                  WAS CORE GOTTEN
SMTGET03 BNZ   NOCORE                   NO. PRINT'INSUFFICIENT CORE'
         MVC   DBEDBE,ADDRCORE          CHAIN NEW DBE TO LAST DBE
         L     R7,ADDRCORE              PUT ADDRESS OF NEW DBE IN R7
         B     BLDDBE                   GO BUILD A NEW DBE
         SPACE
***********************************************************************
*    THERE WAS NOT ENOUGH CORE FOR GETMAIN. ISSUE MESSAGE AND QUIT.   *
***********************************************************************
NOCORE   DS    0H                       THERE IS INSUFFICIENT CORE TO
*                                       SET UP DEFER ELEMENT
         LA    R1,MSG1       R1=ADDR OF MESSAGE NUMBERS
         SPACE
PUTMSG   DS    0H                       HAVE IKJEGIO PUT OUT MESSAGE
         OI    TSTFLGS4,TSTFLUSH        TURN ON TSTFLUSH SO MNL WILL
*                                       FLUSH THE INPUT STACK
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM LIST
         LM    R2,R3,D0(R1)  LOAD R2-3 WITH MESSAGE NUMBERS
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),ID=AT004,MF=(E,TSTIOPRM)
         C     R15,ATTNCODE  IS RETURN CODE 16,20 OR 24?
         BNL   RETMAIN       YES, PASS IT BACK TO IKJEGMNL
         SPACE
***********************************************************************
*        SET RETURN CODE TO ZERO AND RETURN.                          *
***********************************************************************
CODE0    DS    0H                       SET RETURN CODE TO ZERO
         XR    R15,R15                  R15=0
         B     RETMAIN                  RETURN TO MAINLINE
         EJECT
***********************************************************************
*        THIS IS THE ESTAE EXIT FOR ATD.                              *
***********************************************************************
RETRY2   DS    0H                       RETRY ROUTINE IN CASE OF
*                                       AN ABEND
         L     R5,CVTPTR                R5=ADDRESS OF CVT
         USING CVT,R5                   ESTABLISH ADDRESSABILITY TO IT
         L     R5,CVTTCBP               R5=POINTER TO DOUBLE WORD OF
*                                       POINTERS TO NEXT TO BE DIS-
*                                       PATCHED AND CURRENT TCB'S
         DROP  R5
         L     R5,D4(R5)                R5=POINTER TO CURRENT TCB
*                                       (TEST'S TCB)
         USING TCB,R5                   ESTABLISH ADDRESSABILITY TO IT
         L     R9,TCBTRN                R5=ADDRESS OF TCOMTAB
         DROP  R5
         L     R13,REGSAVE2             R13=ADDRESS OF AT'S SAVE AREA
         L     R12,GR12-SAVEAREA(R13)   RESTORE BASE REGISTER
         LA    R15,TWENTY               R15=20 - INDICATES RETURN FROM
*                                       RETRY ROUTINE
         SPACE
RETMAIN  DS    0H                       RETURN TO MAINLINE
         LR    R2,R15        SAVE RETURN CODE
         ESTAE 0             REMOVE ESTAE
         LR    R15,R2        RESET RETURN CODE
         NI    TSTFLGS4,HEXFF-TSTRERTN TURN OFF RETRY BIT
         L     R13,SAVELAST-SAVEAREA(R13)  RESTORE R13
         RETURN (14,12),,RC=(15)        RETURN
         EJECT
***********************************************************************
*                                                                     *
*              CONSTANTS AND MACROS USED IN ATD.                      *
*                                                                     *
***********************************************************************
GETL     GETMAIN EC,SP=ONE,MF=L         LIST FORM OF GETMAIN
GETLEN   EQU   *-GETL                   LENGTH OF LIST FORM
         SPACE
* CONSTANTS
         DS    0F
DUMMYABT DC    X'FF'         DUMMY ABEND TABLE
ATTNCODE DC    F'16'         RC FOR ATTENTION
***********************************************************************
*              MESSAGE POINTERS                                       *
***********************************************************************
MSG1     DC    F'39'         UNABLE TO ESTABLISH BREAKPOINT
         DC    F'260'        INSUFFICIENT STORAGE
MSG2     DC    F'39'         UNABLE TO ESTABLISH BREAKPOINT
         DC    F'245'        FULLY QUALIFIED ADDRESS MUST BE GIVEN
MSG3     DC    F'39'         UNABLE TO ESTABLISH BREAKPOINT
         DC    F'246'        ALL LOADNAMES MUST BE THE SAME
         SPACE
ATDSPL   IKJEGSPL RTRY=RETRY2,ABNTB=DUMMYABT,MODNM=IKJEGATD,TNM=ATD
         EJECT
         IKJPARMA                       PDE DSECT
         EJECT
         IKJPPL
PPLEND   EQU   *                        END OF PPL
         EJECT
SAVEAREA DSECT
SAVEUSER DS    F                        UNUSED
SAVELAST DS    F                        PTR TO LAST SAVEAREA (CALLER'S)
SAVENEXT DS    F                        PTR TO NEXT SAVEAREA (SUBRTN)
RETURNPT DS    F                        PTR TO CALLER'S RESUME ADDRESS
ENTRYPT  DS    F                        PTR TO MY ENTRY POINT
GR0      DS    F                        GENERAL REGISTER 0
GR1      DS    F                        GENERAL REGISTER 1
GR2      DS    F                        GENERAL REGISTER 2
GR3      DS    F                        GENERAL REGISTER 3
GR4      DS    F                        GENERAL REGISTER 4
GR5      DS    F                        GENERAL REGISTER 5
GR6      DS    F                        GENERAL REGISTER 6
GR7      DS    F                        GENERAL REGISTER 7
GR8      DS    F                        GENERAL REGISTER 8
GR9      DS    F                        GENERAL REGISTER 9
GR10     DS    F                        GENERAL REGISTER 10
GR11     DS    F                        GENERAL REGISTER 11
GR12     DS    F                        GENERAL REGISTER 12
LSAVE    EQU   *-SAVEAREA               LENGTH OF SAVEAREA
         EJECT
         IKJEGDME
         SPACE 2
         IKJEGDBE
         EJECT
TCB      IKJTCB                         EXPANSION OF TCB
         EJECT
CVT      DSECT
         CVT
         EJECT
         TCOMTAB                        COMMUNICATIONS TABLE DSECT
         EJECT
         TSTCWORK                       TEST WORK AREA DSECT
         ORG   CWORKCMD                 RESET TO COMMAND WORK AREA
WORKSP   DS    0H
         SPACE
***********************************************************************
*                                                                     *
*        THIS IS A MAPPING OF THE AREA CALLED CWORKCMD IN TSTCWORK.   *
*        WHEN AT IS ENTERED TO ACTIVATE DEFERED BREAKPOINTS, THE      *
*        FIRST 8 CHARACTERS OF THE WORK AREA CONTAIN THE NAME OF THE  *
*        NEWLY LOADED MODULE. THE NINTH BYTE CONTAINS A FLAG WHICH    *
*        INDICATES WHETHER OR NOT THE MODULE IS IN OVERLAY. THE       *
*        LAST 64 BYTES OF THE WORK AREA ARE RESERVED FOR A REGISTER   *
*        SAVE AREA FOR IKJEGLDF IN THIS CASE.                         *
*        IF ANY CHANGES ARE MADE TO THE WORK AREA, MAKE THE SAME      *
*        CHANGES IN IKJEGAT. BOTH MODULES USE THE SAME FORMAT         *
*        OF WORK AREA.                                                *
*                                                                     *
***********************************************************************
PDLADDR  DS    A -                      ADDRESS OF PDL BEING
*                                       PROCESSED BY AT WHEN
*                                       ACTIVATING DEFERED BREAKPOINTS
PARSECD  EQU   PDLADDR -                NONZERO SERVICE ROUTINE
*                                       RETURN CODES SENT TO VALIDITY
*                                       CHECK ROUTINES ARE STORED HERE
BYTENUMB DS    F -                      SAVE AREA FOR NUMBER OF BYTES
*                                       LAST GOTTEN
SAVEPTR  DS    A -                      POINTER TO PREVIOUS BREAK
*                                       ELEMENT LINK FIELD
CHNADDR  DS    A -                      ADDRESS OF SUBCOMMAND CHAIN
*                                       FOR BREAKPOINT(S) BEING BUILT
STAEL    DS    CL16          PARM LIST AREA FOR ESTAE
STRNGADR DS    A -                      ADDRESS OF ADDRESS STRING
*                                       FOR RANGE BEING PROCESSED
         DS    0F
PARMS    DS    (PPLEND-PPL)X -          PPL IS BUILT HERE
         ORG   PARMS
BRKSAVE  DS    18F -                    SAVE AREA FOR BREAKRTN
SAVE2345 DS    4F            WORK SAVE AREA FOR R2-5
         ORG   STRNGADR
PDEADDR  DS    A -                      ADDRESS OF FIRST ADDRESS PDE
*                                       IN PDL - PASSED AS PARM
         ORG   WORKSP
LOADNAME DS    CL8 -                    LOAD NAME OF NEWLY LOADED MOD.
*                                       FOR WHICH DEFERED BREAK-
*                                       POINTS MAY BE ACTIVATED, OR
*                                       LOAD NAME FOR WHICH DEFERED
*                                       BREAKPOINTS ARE TO BE BUILT
LOADATTR EQU   * -                      ONE BYTE FLAG INDICATING
*                                       OVERLAY STATUS FOR NEWLY
*                                       LOADED MODULE
GETCORE  GETMAIN   EC,SP=1,MF=L -       LIST FORM OF GETMAIN
ADDRCORE EQU   GETCORE+4 -              SECOND WORD OF LIST FORM
*                                       CONTAINS ADDRESS OF CORE
         ORG   WORKSP
XCTLL    XCTL  EP=IKJEGATD,SF=L -       LIST FORM OF XCTL
         ORG   STAEL                    OVERLAY STAE CONTROL BLOCK
SRHPARMS DS    0H                       BRKELEM REMOVAL ROUTINE'S
*                                       PARM LIST
SRHFLAGS DS    F'0'                     FLAGS - 0 TO REMOVE BRKELEM
SRHADDR1 DS    A                        ADDRESS OF BRKPOINT FOR
*                                       BRKELEM TO BE REMOVED
SRHADDR2 DS    A                        SECOND ADDRESS OF RANGE OR 0
SRHPRMLH EQU   *-SRHPARMS               LENGTH OF SRH PARM LIST
         EJECT
IKJEGATD CSECT
         DS    0F            FORCE FULLWORD ALIGNMENT
ATDPATCH DC    50C'Z'        PATCH AREA
         END
