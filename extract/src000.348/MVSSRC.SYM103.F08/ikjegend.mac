END      TITLE 'IKJEGEND, END COMMAND PROCESSOR  OF TEST'
         COPY IKJEGSIO
         EJECT
IKJEGEND CSECT                     END COMMAND PROCESSOR
         SPACE 2
*C103200,110000                                                @ZA07834
*A104150                                                       @ZA07834
*D112444                                                       @ZA07834
************************************************************
*                                                         **
* STATUS                                                  **
*    CHANGE LEVEL 00, VERSION NUMBER 01, OS/VS2           **
*                                                         **
* FUNCTION                                                **
*         THE BASIC FUNCTION OF THE END SUBCOMMAND IS TO  **
*         FREE THE CORE THAT HAS BEEN OBTAINED DURING THE **
*         TEST SESSION. ALL OF TEST'S CORE IS FROM        **
*         SUBPOOL NUMBER ONE                              **
*                                                         **
* ENTRY POINTS                                            **
*         IKJEGEND - MAIN ENTRY POINT                     **
*                                                         **
* INPUT                                                   **
*    NONE                                                 **
*                                                         **
* OUTPUT                                                  **
*    1.  ERROR MESSAGES TO THE MESSAGE WRITER             **
*    2.  RETURN CODES                                     **
*    *          08 - SUCCESSFUL COMPLETION (CALL IKJEGOFF)**
*    *          20 - STAE RETRY HAS INTERCEPTED AN ABEND  **
*                                                         **
* EXTERNAL REFERENCES                                     **
*         IKJEGIO - PRINTS ERROR MESSAGES;  IT IS INVOKED **
*         *         VIA THE IKJEGSIO MACRO.               **
*                                                         **
*         FREEMAIN - FREE CORE ACQUIRED DURING SESSION    **
*                                                         **
* EXITS, NORMAL                                           **
*    RETURN TO MAINLINE VIA REGISTER 14                   **
*                                                         **
* EXITS, ERROR                                            **
*    RETURN TO MAINLINE VIA REGISTER 14                   **
*                                                         **
* TABLES/WORK AREAS                                       **
*    TCOMTAB -                                            **
*    *     TSTIODCB - ADDR OF THE IO DCB                  **
*    *     TSTSYMWK - ADDR OF THE SYMBOL WORK AREA        **
*    *     TSTIODSN - ADDR OF THE IO DSN                  **
*    ENDWORKA - END'S WORKAREA                            **
*                                                         **
* ATTRIBUTES                                              **
*    REENTRANT AND REFRESHABLE                            **
*                                                         **
* CHARACTER CODE DEPENDENCY                               **
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL**
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS**
*    EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. THE     **
*    CODING HAS BEEN ARRANGED SO THAT REDEFINITION OF     **
*    'CHARACTER' CONSTANTS, BY REASSEMBLY, WILL RESULT IN **
*    A CORRECT MODULE FOR THE NEW DEFINITIONS.            **
*                                                         **
* NOTES                                                   **
*                                                         **
************************************************************
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        THE FOLLOWING ARE THE EQUATES NEEDED BY THE OFF COMMAND
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
*        REGISTER EQUATES
R0       EQU   0                   GENERAL WORK REGISTER
R1       EQU   1                   GENERAL WORK REGISTER (PARAM PASS)
R2       EQU   2                   GENERAL WORK REGISTER
R3       EQU   3                   GENERAL WORK REGISTER
R4       EQU   4                   GENERAL WORK REGISTER
R5       EQU   5                   GENERAL WORK REGISTER
R6       EQU   6                   BASE REGISTER FOR CONTROL BLOCKS
R7       EQU   7                   BASE REGISTER FOR DEFER & ACTIVE Q
R8       EQU   8                   BASE REGISTER FOR TEMPORARY USE
R9       EQU   9                   BASE REGISTER FOR TCOMTAB
R10      EQU   10                  BASE REGISTER FOR OFFWORK AREA
R11      EQU   11                  EXTRA REGISTER NOT USED
R12      EQU   12                  BASE REGISTER FOR IKJEGOFF
R13      EQU   13                  POINTER TO SAVE AREA
R14      EQU   14                  USED FOR BAL ALSO WORK REG
R15      EQU   15                  USED FOR RETURN CODES ALSO WORK REG
         SPACE
N0       EQU   0                   CONSTANT 0
N1       EQU   1                   CONSTANT 1
N2       EQU   2                   CONSTANT 2
N3       EQU   3                   CONSTANT 3
N4       EQU   4                   CONSTANT 4
N5       EQU   5                   CONSTANT 5
N6       EQU   6                   CONSTANT 6
N7       EQU   7                   CONSTANT 7
N8       EQU   8                   CONSTANT 8
N9       EQU   9                   CONSTANT 9
N10      EQU   10                  CONSTANT 10
N12      EQU   12                  CONSTANT 12
N16      EQU   16                  CONSTANT 16
N20      EQU   20                  CONSTANT 20
N24      EQU   24                  CONSTANT 24
N32      EQU   32                  CONSTANT 32
N56      EQU   56                  CONSTANT 56
N60      EQU   60                  CONSTANT 60
N72      EQU   72                  CONSTANT 72
N120     EQU   120                 CONSTANT 120
****     HEXIDECIMAL EQUATES
HEXC0    EQU   X'C0'               HEX CONSTANT C0
HEXFF    EQU   X'FF'               HEX CONSTANT FF
HEX0C    EQU   X'0C'               HEX CONSTANT 0C
HEX10    EQU   X'10'               HEX CONSTANT 10
         EJECT
ENDSTART DS    0H                  STARTING POSITION OF OFF
         SAVE  (14,12),,*          SAVE THE CALLERS REGISTERS
         LR    R12,R15             SETUP REG 12 AS OFF'S BASE
         USING ENDSTART,R12        ESTABLISH ADDRESSIBILITY
         USING TCOMTAB,R9          ESTABLISH ADDRESSIBILITY TO TCOMTAB
         L     R15,REGSAVE2        LOAD ADDR OF NEW SAVEAREA (OFF'S)
         ST    R13,N4(R15)         PLACE ADDR USER'S SAVEAREA INTO OFF
         ST    R15,N8(R13)         PLACE ADDR OFF SAVEAREA INTO USERS
         LR    R13,R15             R13= ADDR OF NEW SAVE AREA
****     ESTABLISH ADDRESSIBILITY TO OFF WORKAREA -- USE REG 10
         L     R8,WORKAREA         R1= ADDR OF GENERAL WORKAREA
         USING TSTCWORK,R8         ESTABLISH ADDRESSIBILITY
         LA    R10,CWORKCMD        R10= ADDR OF OFFS WORKAREA
         USING ENDWORKA,R10        COMPLETE ADDRESSIBILITY
         DROP  R8                  RELEASE REG 8
         OI    TSTFLGS1,ENDSW      SET END SWITCH
****     SETUP FOR RETRY THRU ESTAE
         STM   R14,R12,HEX0C(R13)  STORE REGISTERS FOR STAE
         L     R2,TSTSTAE          R2= STAE ADDR FROM TCOMTAB
         XC    STAEWRK(N16),STAEWRK   CLEAR AREA FOR STAE PARM LIST
         ESTAE (R2),PARAM=LIST,MF=(E,STAEWRK),RECORD=YES   ESTAE
         SPACE
SMTSTAE  DS    0H                  SMT TESTING LABEL
         LTR   R15,R15             TEST THE RETURN CODE FROM STAE
         BZ    END0000             START THE ACTUAL OFF PROCESSING
         STC   R15,TSTESTRC        PLACE ESTAE RC IN TCOM TABLE
         LA    R15,N24             SEND RET CODE TO MAINLINE
         B     MNLRET              THATS ALL
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*    THE FOLLOWING CSECT HANDLES ALL END PROCESSING;
*        IT FREES; 1) IO DCB'S, 2) QSAM BUFFERS, 3) SYMBOL DCB'S,
*                  4) IO DSN AREAS, 5) CALL PARAMETER BLOCK.
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
END0000  DS    0H                  START OF THE END PROCESSING ROUTINE
         L     R1,TSTIODCB         R1= ADDR OF THE IO DCB
         LA    R1,N0(R1)           ZERO HIGH ORDER BYTE
         LTR   R2,R1               IS THE DCB OPEN IF SO CLOSE
         BZ    END0020             NO THE DCB IS NOT OPEN
         TM    DCBOFLGS(R2),HEX10  IS DCB OPEN
         BZ    END0010             NO - GO FREE DCB CORE
         MVC   DCBARWRK(L'DCBARWRK),CLOSELST SETUP LIST FORM OF CLOSE
         XC    TSTIODCB,TSTIODCB   ZERO OUT THE DCB ENTRY IN TCOMTAB
         CLOSE ((R2)),MF=(E,DCBARWRK) CLOSE THE IO DCB
END0010  DS    0H
         LR    R1,R2               R1= ADDR 0F THE IO DCB
         FREEPOOL (1)              FREE ALL THE QSAM BUFFERS
         LR    R1,R2               R1= ADDR 0F THE IO DCB
         FREEMAIN RC,LV=152,A=(1),SP=1 FREE THE IO DCB
         LTR   R15,R15             WAS RETURN CODE NONZERO
         BZ    END0020             IF SO, BRANCH
         BAL   R14,SVCERR          GO PUT OUT ERROR MESSAGE
END0020  DS    0H                  NOW LOOK AT THE SYMBOL WORK AREA
         L     R1,TSTSYMWK         R1= ADDR OF SYMBOL WORK AREA
         XC    TSTSYMWK,TSTSYMWK   ZERO THE SYMWK ENTRY IN TCOMTAB
         LA    R1,N0(R1)           ZERO HIGH ORDER BYTE
         LTR   R4,R1               IS THERE A SYMBOL WORK AREA
         BZ    END0060             NO CHECK IO DSN
         L     R2,N72(R1)          R2= ADDR OF SYM DCB (FROM SYM WRKAR)
         TM    DCBOFLGS(R2),HEX10  IS THE IO DSN OPEN THEN CLOSE
         BZ    END0040             NO THEREFORE DO NOT CLOSE
         MVC   DCBARWRK(CLOSELN),CLOSELST SETUP LIST FORM CLOSE MACRO
         CLOSE ((R2)),MF=(E,DCBARWRK) CLOSE THE SYMBOL DCB
         LR    R1,R4               R1= ADDR OF SYMBOL WORK AREA SAVED
END0040  DS    0H                  FREE THE SYMBOL DCB
         FREEMAIN RC,LV=800,A=(1),SP=1 ISSUE THE FREEMAIN
         LTR   R15,R15             WAS RETURN CODE NONZERO
         BZ    END0060             IF SO, BRANCH
         BAL   R14,SVCERR          GO PUT OUT MESSAGE
END0060  DS    0H                  LOOK AT THE IO DSN'S
         L     R2,TSTIODSN         R2= LOCATION OF ADDR OF FIRST IO DSN
         XC    TSTIODSN,TSTIODSN   ZERO THE IO DSN ENTRY IN TCOMTAB
END0080  DS    0H                  CHECK IF THE IO DSN EXISTS
         LA    R1,N0(R2)           R1=R2=IO DSN, ZERO HIGH ORDER BYTE
         LTR   R1,R1               SEE IF IT EXISTS
         BZ    END0100             ALL DONE RETURN TO OFF
         L     R2,N0(R1)           ADDRESS OF IO NEXT DSN      @ZA07834
         FREEMAIN RC,LV=50,A=(1),SP=1 FREE THE CORE OF  IO DSN
         LTR   R15,R15             WAS RETURN CODE NONZERO
         BZ    END0080             IF SO, BRANCH               @ZA07834
         BAL   R14,SVCERR          GO PUT OUT MESSAGE
         B     END0080             BRANCH
****     FREE THE CHAINED CALL PARAMETER BLOCKS. CHAIN PTR = WORD 1
****     LENGTH = 4 AND 5 BYTE OF BLOCK
END0100  DS    0H                  END OF END PROCESSING RETURN TO OFF
         L     R2,CALLPARM         R2= ADDR OF THE FIRST BLOCK
         XC    CALLPARM,CALLPARM   ZERO THE CALLPARM IN TCOMTAB
END0120  DS    0H                  BEGIN LOOPOF FREEMAINS
         LA    R1,N0(R2)           R1=ADDR OF CALL BLOCK ZERO HIGH BYTE
         LTR   R1,R1               IF R1=ZERO THEN WE ARE DONE
         BZ    END0140             YES WE ARE DONE W/ CALLPARM
         L     R2,N0(R1,R0)        R2= ADDR OF NEXT BLOCK      @ZA07834
         LH    R0,N4(R1)           R0= LENGTH OF THE AREA
         FREEMAIN RC,LV=(0),A=(1),SP=1   FREE THE CALL BLOCK
         LTR   R15,R15             WAS RETURN CODE NONZERO
         BZ    END0130             IF SO, BRANCH
         BAL   R14,SVCERR          GO PUT OUT MESSAGE
END0130  DS    0H
         B     END0120             BRANCH
END0140  DS    0H                  DONE WITH END PROCESSING
         LA    R15,N8              R15= 8 AS A RETURN CODE
END0160  DS    0H                  DONE WITH END PROCESSING
         OI    TSTFLGS2,TSTXCTL    TURN ON XCTL SW IN TCOMTAB
         MVC   TSTRETRY,MNLSVWRK   RESTORE MAILINES RETRY ROUTINE
         L     R13,N4(R13)         R13 = ADDR OF CALLERS SAVE AREA
         XCTL  (2,12),EP=IKJEGOFF  XCTL TO OFF
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        THIS ROUTINE OUTPUTS ALL ERROR MESSAGES
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
SVCERR   DS    0H                  THE SVC ERROR MSG HANDLER
         ST    R14,PUTREWRK        SAVE THE RETURN ADDR OF CALLER
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO DYNAM AREA
         LR    R3,R15              PUT RETURN CODE TO REG3
         IKJEGSIO SVCERR,SVC=N120,RC=(R3),ID=END12,MF=(E,TSTIOPRM)
         L     R14,PUTREWRK        R14= ADDR OF THE CALLER
         BR    R14                 RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*          CONSTANTS USED BY THE END COMMAND
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         DS    0F                  ALIGNMENT
DCBOFLGS EQU   X'30'               DISPLACEMENT IN TSTSYMWK TO DCB ADDR
SUPERZAP DC    50CL1'Z'            PATCH AREA
         SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        THE LIST FORM OF THE CLOSE MACRO
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CLOSELST CLOSE (CLOSELST),MF=L     LIST FROM OF THE CLOSE MACRO
CLOSELN  EQU   *-CLOSELST          LENGTH OF THE CLOSE LIST MACRO
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        THE STAE MACRO, RETRY ROUTINE, AND ABEND TABLE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ADDRETRY DC    A(RETRYRTN)         ADDRESS OF THE RETRY ROUTINE
ABENDTAB DS    0H                  THE ABEND TABLE FOR STAE
         DC    X'FF'               END OF TABLE INDICATOR
         SPACE 2
*****************************************************************
*  THIS IS THE PARAM LIST FOR THE ESTAE EXIT ROUTINE
*****************************************************************
LIST     IKJEGSPL RTRY=RETRYRTN,ABNTB=ABENDTAB,MODNM=IKJEGEND,         *
               TNM=IKJEGEND
         SPACE 2
****     THE BEGINING OF THE RETRY ROUTINE
RETRYRTN DS    0H                  THE RETRY ROUTINE
         L     R5,CVTPTR           R5= ADDR OF THE CVT
         USING CVT,R5              ESTABLISH ADDR'ABILITY TO THE CVT
         L     R1,CVTTCBP          R1= ADDR OF NEW CURRENT TCB'S
         L     R5,N4(,R1)          R5= ADDR OF CURRENT TCB (TEST TCB)
         DROP  R5                  RELEASE ADDR'ABILITY TO THE CVT
         USING TCB,R5              ESTABLISH ADDR'ABILITY TO THE TCB
         L     R9,TCBTRN           R9= ADDR OF TCOMTAB (RESTORE)
         DROP  R5                  RELEASE ADDR'ABILITY TO TCB
         L     R13,REGSAVE2        R13= ADDR OF CURRENT SAVEAREA
         LM    R14,R12,N12(R13)    RESTORE ALL REGISTERS FOR OFF
         LA    R15,N20             RETURN CODE OF 20
         SPACE
MNLRET   EQU   *                   RETURN TO MAINLINE ROUTINE
         NI    TSTFLGS4,HEXFF-TSTRERTN  TURN OFF RETRY FLAG
         LR    R2,R15              SAVE RET CODE AROUND ESTAE
         ESTAE 0                   REMOVE END'S ESTAE CONTROL BLOK
         LR    R15,R2              RESTORE RETURN CODE
         L     R13,N4(R13)         R13 = ADDR OF CALLERS SAVE AREA
         RETURN (14,12),,RC=(15)   END COMPLETE
         EJECT
************************************************************
**                                                        **
**                  TCOMTAB DSECT                         **
**                                                        **
************************************************************
TCOMTAB TCOMTAB
         EJECT
************************************************************
**                                                        **
**                TCB DSECT                               **
**                                                        **
************************************************************
TCB       IKJTCB
************************************************************
**                                                        **
**             CVT DSECT MACRO EXPANSION                  **
**                                                        **
************************************************************
CVT      DSECT
         CVT
         EJECT
************************************************************
**                                                        **
**                  RB DSECT                              **
**                                                        **
************************************************************
         SPACE
         IKJRB               REQUEST BLOCK DSECT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        THE GENERAL TSO TEST WORKAREA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         TSTCWORK                  TEST WORKAREA DSECT
         EJECT
************************************************************
**                                                        **
**                           WORKAREA DSECT               **
**                                                        **
************************************************************
ENDWORKA DSECT                     DSECT TO ADDRESS END'S WORKAREA
STAEWRK  DS    4F                  STAE EXPANSION AREA
DCBARWRK DS    F                   TEMPORARY AREA FOR DCB ADDRESS
PUTREWRK DS    F                   PUT MESSAGE RETURN REGISTER
MNLSVWRK DS    F                   SAVE AREA FOR MNL'S RETRY
         END
