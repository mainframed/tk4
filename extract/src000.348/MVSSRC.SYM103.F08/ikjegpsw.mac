         EJECT
PSW      TITLE 'IKJEGPSW - TSO TEST LIST PSW ROUTINE'
         COPY  IKJEGSIO
         EJECT
IKJEGPSW CSECT
*A086600,099924,292100                                           YA2414
*C259000,259220                                                  YM4111
* A 148000,148030                                    @ZA07138,@ZA09259
***********************************************************************
*                                                                     *
* STATUS --                                                           *
*    CHANGE LEVEL 00, VERSION NUMBER 02, OS/VS2  (05/17/73)           *
*                                                                     *
* FUNCTION/OPERATION --                                               *
*    THIS COMMAND PROGRAM RECEIVES CONTROL FROM THE TEST SUBCOMMAND   *
*    PROCESSOR.  IT DISPLAYS THE PSW OF THE PROBLEM PROG OR THE PSW   *
*    AT A SPECIFIED ADDRESS. IT DISPLAYS THE PSW IN EITHER BC OR EC   *
*    MODE; BIT NUMBER 13 OF THE PSW IS THE INDICATOR; (0= BCMODE) AND *
*    (1= EC MODE).                                                    *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEGPSW    MAIN ENTRY TO LISTPSW ROUTINE                   *
*         PSWVALCK    ENTRY TO PARSE ADDRESS VALIDITY CHECK EXIT RT   *
*                                                                     *
* INPUT --                                                            *
*    ONE LINE OF INPUT FROM THE TERMINAL CONTAINING THE SUBCOMMAND    *
*                                                                     *
* OUTPUT --                                                           *
*    LINES OF OUTPUT TO THE TERMINAL OR TO A SPECIFIED DATA SET,      *
*    THE FIRST BEING A HEADER AND THE SECOND THE PSW FIELDS           *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         1.  IKJPARS  - TO SCAN THE INPUT BUFFER                     *
*         2.  IKJEGCVT - TO CHECK AND CONVERT THE ADDR, IF SPECIFIED, *
*         AND TO CONVERT THE PSW TO PRINTABLE HEX                     *
*         3.  IKJEGIO  - TO OUTPUT THE HEADER AND PSW                 *
*                                                                     *
* EXITS, NORMAL --                                                    *
*         RETURN TO IKJEGMNL VIA REGISTER14                           *
*                                                                     *
* EXITS, ERROR --                                                     *
*         NONE                                                        *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    TCOMTAB - TEST TABLE AND WORKAREA                                *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REENTRANT ROUTINE                                                *
*    REFRESHABLE ROUTINE                                              *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    RE-ASSEMBLY IS REQUIRED FOR CHANGE OF CODE                       *
*                                                                     *
* NOTES --                                                            *
*    IF AN ADDRESS IS SPECIFIED NEITHER BOUNDARY ALIGNMENT OR DATA    *
*    VALIDITY IS CHECKED                                              *
*
* CHANGE-ACTIVITY -
*                 APAR OZ07138 - CHANGES TO USE THE CORRECT RB
*                 POINTER TO FETCH THE PSW FOR DISPLAY. THE
*                 POINTER IS IN TCOMTAB AT ECBPP+1.
*                 APAR OZ09259 - THE SAME AS ABOVE.
*
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*          REGISTER EQUATES                                           *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                   REGISTER 0
R1       EQU   1                   REGISTER 1
R2       EQU   2                   REGISTER 2
R3       EQU   3                   REGISTER 3
R4       EQU   4                   REGISTER 4
R5       EQU   5                   CONTAINS ADDRESS OF WORKAREA
R6       EQU   6                   REGISTER 6
R7       EQU   7                   REGISTER 7
R8       EQU   8                   REGISTER 8
R9       EQU   9                   BASE FOR TCOMTAB
R10      EQU   10                  REGISTER 10
R11      EQU   11                  NOT USED
R12      EQU   12                  BASE FOR IKJEGPSW
R13      EQU   13                  REGISTER 13
R14      EQU   14                  REGISTER 14
R15      EQU   15                  REGISTER 15
         SPACE 2
***********************************************************************
*                                                                     *
*        OTHER EQUATES                                                *
*                                                                     *
***********************************************************************
N0       EQU   0                   DECIMAL 0
N1       EQU   1                   DECIMAL 1
N2       EQU   2                   DECIMAL 2
N3       EQU   3                   DECIMAL 3
N4       EQU   4                   DECIMAL 4
N5       EQU   5                   DECIMAL 5
N6       EQU   6                   DECIMAL 6
N7       EQU   7                   DECIMAL 7
N8       EQU   8                   DECIMAL 8
N9       EQU   9                   DECIMAL 9
N10      EQU   10                  DECIMAL 10
N11      EQU   11                  DECIMAL 11
N12      EQU   12                  DECIMAL 12
N16      EQU   16                  DECIMAL 16
N20      EQU   20                  DECIMAL 20
N22      EQU   22                  DECIMAL 22
N24      EQU   24                  DECIMAL 24
N26      EQU   26                  DECIMAL 26
N28      EQU   28                  DECIMAL 28
N30      EQU   30                  DECIMAL 30
N31      EQU   31                  DECIMAL 31
N32      EQU   32                  DECIMAL 32
N40      EQU   40                  DECIMAL 40
N52      EQU   52                  DECIMAL 52
N53      EQU   53                  DECIMAL 53
N65      EQU   65                  DECIMAL 65
N66      EQU   66                  DECIMAL 66
N67      EQU   67                  DECIMAL 67
N68      EQU   68                  DECIMAL 68
N79      EQU   79                  DECIMAL 79
N80      EQU   80                  DECIMAL 80
N104     EQU   104                 DECIMAL 104
PLUSSIGN EQU   C'+'                PLUS SIGN INDICATE 1ST LEV HAS A 2ND
NOTSYM   EQU   10                  BC INSTR MASK, BRANCH POSTIVE OR 0
ADDR     EQU   X'80'               ADDRESS STRING INDICATOR IN PDE
         SPACE
***********************************************************************
*        MESSAGE EQUATES
***********************************************************************
MSG101   EQU   101                 INVALID ADDR MSG (APDE INSERT)
MSG274   EQU   274                 REG MUST BE INDIRECT GEN (SECOND)
MSG282   EQU   282                 PSW EXTENDS INTO PROTECTED CORE
MSG103   EQU   103                 NO CORE MSG NO SECOND LEVEL
MSG104   EQU   104                 LISTPSW FAILED----
INST15   EQU   15                  LISTPSW FIXED INSERT NO.
MSG277   EQU   277                 PARSE ERROR CODE 12 (SECOND LEVEL)
         EJECT
         SAVE  (14,12),,*          SAVE MAINLINE'S REGS
         LR    R12,R15             USE ENTRY POINT FOR BASE
         USING IKJEGPSW,R12        ESTABLISH PROGRAM ADDRESSABILITY
         USING TCOMTAB,R9          ESTABLISH TCOMTAB ADDRESSABILITY
         L     R15,REGSAVE2        LOAD ADDRESS OF NEW SAVE AREA
         ST    R13,N4(R15)         STORE REG 13 IN NEW SAVE AREA
         ST    R15,N8(R13)         STORE NEW SAVE AREA ADDRESS
         LR    R13,R15             R13 NOW HAS NEW SAVE AREA ADDRESS
         L     R7,WORKAREA         LOAD ADDRESS OF TEST WORKAREA
         USING TSTCWORK,R7
         LA    R5,CWORKCMD         ADDRESS OF WORK AREA FOR CMDS
         USING PSWAREA,R5          ESTABLISH ADDRESSABILITY
         DROP  R7
         ST    R12,N68(R13)        SAVE MY BASE IN MY SAVE AREA
         XC    STAELIST(N16),STAELIST  CLEAR THE STAE PARM LIST
         L     R2,TSTSTAE          R2= ADDR OF IKJEGSTA
         ESTAE (R2),CT,PARAM=PSWSPL,RECORD=YES,MF=(E,STAELIST)
         LTR   R15,R15             WAS STAE ISSUED SUCCESSFULLY
SMTSTAE  DS    0H                  SMT TESTCASE LABEL
         BZ    GOPARSE             YES, GO SET UP TO PARSE COMMAND
         STC   R15,TSTESTRC        SAVE THE RETURN CODE FOR MNL
         LA    R15,N24             R15=24 RETURN CODE TO MNL ESTAE FAIL
         B     RETURN2             EXIT TO MNL
         EJECT
GOPARSE  EQU   *
         LR    R1,R5               ADDR OF WORK AREA, BUILD PARSE LIST
         USING PPL,R1
         MVC   PPLUPT(N12),PARMLIST MOVE ECT, UPT, ECB TO PARSE
         MVC   PPLPCL(N4),PCLADDR  POINTER TO PCL FOR PARSE
         LA    R2,TSTANSPL         LOAD ADDRESS OF PARSE ANSWER PLACE
         ST    R2,PPLANS           STORE IN PARM LIST FOR PARSE
         MVC   PPLCBUF(N4),INBUF   POINTER TO COMMAND INPUT BUFFER
         ST    R9,PPLUWA           STORE ADDRESS OF TCOMTAB
         DROP  R1
         LINK  EP=IKJPARS,ERRET=LINKFAIL  PARSE THE COMMAND
PABEND1  EQU   *                   POSSIBLE ABEND RESUME ADDRESS
SMTPARS  DS    0H                  SMT TESTCASE LABEL
*                                   LINK TO PARSE FAILED
*                                   TESTCASE ID  TPSW2100
         B     PARSEEND            AFTER PARSE IS COMPLETE, BRANCH
         EJECT
********************  VALIDITY CHECK ROUTINE  ************************
         SPACE
***********************************************************************
*        THE FOLLOWING IS EXECUTED IMMEDIATELY BEFORE A BRANCH TO     *
*        IKJEGCVT WHICH VALIDITY CHECKS THE ADDRESS SPECIFIED BY USER *
*        THIS CODE WILL NOT BE EXECUTED IF THE USER DOES NOT SPECIFY  *
*        AN ADDRESS                                                   *
***********************************************************************
         SPACE
PSWVALCK SAVE  (14,12),,*          SAVE PARSE REGISTERS
         LR    R2,R1               R2 = ADDR OF PDE
         L     R9,N4(R1)           RESTORE TCOMTAB ADDRESSABILITY
         OI    TSTFLGS4,TSTVALCK   INDICATE VALIDITY CHECK
         L     R12,REGSAVE2        LOAD ADDRESS OF PSW REGISTERS
         L     R5,N40(R12)         RESTORE WORKAREA ADDRESS
         ST    R1,PARMPTR          ADR OF PARSE LST FOR EXIT RT  YM4111
         L     R1,OUTBUF           R1= ADDR OF OUTBUFFER
         XC    N0(N4,R1),N0(R1)    CLEAR THE FIRST WORD OF OUTBUF
         L     R12,N68(R12)        RESTORE PROGRAM ADDRESSABILITY
         L     R15,REGSAVE3        LOAD ADDRESS OF NEW SAVE AREA
         ST    R13,N4(R15)         STORE REG 13 IN NEW SAVE AREA
         ST    R15,N8(R13)         STORE NEW SAVE AREA ADDRESS
         LR    R13,R15             R13 NOW HAS NEW SAVE AREA ADDRESS
****     R7 NOW CONTAINS THE ADDR OF THE PDE
         USING IKJPARMA,R7         ADDR'ABILITY TO THE PDE
         L     R7,N0(R2)           POINTER TO ADDRESS PDE
         LNR   R1,R7               NEGATIVE, ADDR CONVERSION
         LPR   R0,R7               POSTIVE, CONVERT TO BINARY
         L     R15,TSTCONVT        LOAD ADDRESS OF IKJEGCVT
         BALR  R14,R15             VALIDITY CHECK THE ADDRESS
         SPACE 1
***********************************************************************
*        THE FOLLOWING CODE IS EXECUTED UPON RETURN FROM IKJEGCVT     *
***********************************************************************
         SPACE 1
         LTR   R15,R15             IS RETURN CODE 0
         BZ    CHKADDR             YES, GO CHECK ADDRESS
         LA    R6,N4               CONVERT UNSUCCESSFUL RETURN CODE
         CR    R6,R15              WAS CONVERT UNSUCCESSFUL
         BNE   STOP                NO, WORST TROUBLES, GO SET ENDUP
         LA    R15,N8              R.C.=8, HAVE PARSE PRINT REENTER
PARSRTRN EQU   *
         NI    TSTFLGS4,HEXFF-TSTVALCK  TURN OFF VALIDITY CHECK SWITCH
         L     R1,OUTBUF           R1= ADDR OF THE OUTPUT BUFFER
         OC    N0(N4,R1),N0(R1)    IS OUTBUF CLEAR
         BZ    RETCONT             CONTINUE TO EXIT TO PARSE
         L     R2,PARMPTR          RESTORE THE PARM POINTER      YM4111
         ST    R1,N8(R2)           PLACE ADDR OF SEC LEVEL MSG IN PPL.
RETCONT  EQU   *                   WE NOW ARE READY TO RETURN TO PARSE
         L     R13,N4(R13)
         RETURN (14,12),,RC=(15)   RESTORE REGISTERS AND RETURN
CHKADDR  EQU   *
         L     R3,PDEUSER          CONVERTED ADDR - USER WORD IN PDE
         TM    PDEFLG5,PDESIB      IS PDEUSER A SIB POINTER
         BNO   CHKMORE             NO CONTINUE CHECKING
         L     R3,N0(R3)           R3 = ACTUAL ADDRESS FROM SIB
CHKMORE  EQU   *
         LA    R3,N0(R3)           ZERO HIGH ORDER BYTE OF PDEUSER
         ST    R3,PDEUSER          REPLACE ACTUAL ADDRESS IN PDEUSER
         SR    R15,R15             SUCCESSFUL RETCODE FOR PARSE
         LH    R4,PDEINDCT         INDIRECT COUNT
         LTR   R4,R4               IS ADDRESS INDIRECT
         BZ    CHKREG              NO, CHECK FOR REGISTER ADDRESS
         SPACE
*-*-*    THE FOLLOWING CALL TO IGC0009G IS TO VALIDITY CHECK THE END OF
*-*-*    THE PSW
CHKEND   DS    0H                  ADDRESS CHECK END OF PSW
         LA    R3,N7(R3)           R3= ADDRESS OF END OF PSW
         L     R4,PPTCB            R4= ADDR OF THE PP TCB
         IKJEGS9G ADDRCHK,TCBADDR=(R4),VALUE=(R3),MF=(E,TEMPWRK) SVC 97
         LA    R4,N16              R4= 16 IS THE RETURN CODE 20 OR 24.
         CR    R15,R4              IS THE R. C. GREATER THAN 16.
         BNL   STOP                SVC 97 HAD A PROBLEM SO END IT.
         LA    R4,N8               R4=8 RETURN CODE BAD ADDRESS
         CR    R15,R4              COMPARE WITH RETURN CD FROM SVC 97
         BL    ADDROK              THE ADDRESS IS VALID
         LA    R2,MSG101           R2= 101 FIRST LEVEL MSG
         LA    R3,MSG282           R3= 282 SECOND LEVEL MSG
         B     MSGOUTA             OUTPUT MESSAGE WITH ADDR PDE INSERT
         SPACE
ADDROK   DS    0H                  RETURN WITH ZERO RETURN CODE
         SR    R15,R15             R15= ZERO
         B     PARSRTRN            RETURN TO PARSE
         SPACE
CHKREG   EQU   *
         TM    PDEFLG4,HEX38       WAS ADDRESS A REGISTER
         BZ    CHKEND              NO, GO SEE IF COMPLETE PSW IN CORE
         LA    R2,MSG101           R2= 101 FIRST LEVEL MSG NO
         LA    R3,MSG274           R3= 274 SECOND LEVEL MSG NO.
         B     MSGOUTA             OUTPUT THE MESSAGE WITH ADDR PDE
         EJECT
***********************************************************************
*        MESSAGE OUTPUTTING SECTION NOTE R2= FIRST LEVEL NUMBER,
*        R3= SECOND LEVEL NUMBER.
***********************************************************************
         SPACE
MSGOUTA  DS    0H                  OUTPUT MESSAGE R7= ADDR PDE INSERT
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM AREA
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),INST11=(APDE,(R7)),       *
               ID=PSW25,MF=(E,TSTIOPRM)   OUTPUT CALL
         LTR   R15,R15             IS R.C. 0, I/O SUCCESSFUL
         BNE   IOFAILED            NO, GO CHECK R.C. FROM I/O
         LA    R15,N8              YES, PROMPT R.C. FOR PARSE
         B     PARSRTRN            GO RETURN TO PARSE
         DROP  R7                  RELEASE PDE ADDR'ABILITY
IOFAILED EQU   *
         LA    R6,N16              I/O UNSUCCESSFUL RETURN CODE
         CR    R6,R15              WAS I/O UNSUCCESSFUL
         BNL   STOP                NO, WORST TROUBLES, GO SET ENDUP
         SR    R15,R15             YES, CREATE 0 R.C. FOR MAINLINE
STOP     EQU   *
         ST    R15,ANSWPLAC        SAVE ENDUP RETURN CODE
         LA    R15,N12             SET ENDUP R.C. FOR PARSE
         B     PARSRTRN            GO RETURN TO PARSE
         SPACE
LINKFAIL DS    0H                  LINK FAILURE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM AREA
         LR    R2,R15              R2= RETURN CODE
         LR    R3,R1               R3= ABEND CODE
         IKJEGSIO SVCERR,SVC=6,RC=(R2),ABENDRG=(R3),                   *
               ID=PSW25,MF=(E,TSTIOPRM)
         LA    R8,N16              R8= 16 (RETURN CODE CHECKING)
         CR    R8,R15              IS THE RETURN CODE 16 OR GREATER
         BNL   RETURN2             YES THEREFORE LEAVE AS IS
         LA    R15,N20             SET RETURN CODE TO 20.
         B     RETURN2             EXIT WITH 20.
         SPACE
MSGOUT   DS    0H                  OUTPUT A MESSAGE FIXED INSERT(R4)
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR PARM AREA
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),INST11=(NUM,(R4)),        *
               ID=PSW25,MF=(E,TSTIOPRM)  OUT PUT THE MESSAGE
         B     PSWRET              EXIT TO MNL
         EJECT
***********************************************************************
*        THE FOLLOWING IS THE CODE EXECUTED UPON RETURN FROM PARSE    *
***********************************************************************
         SPACE 1
PARSEEND EQU   *
         LTR   R15,R15             IS RETURN CODE 0
         BNZ   PSWRET1             IF NO, BRANCH
         L     R8,TSTANSPL         LOAD ADDRESS OF PDL
         USING IKJPARMD,R8         ESTABLISH PDL ADDRESSABILITY
         LA    R4,N40              A OUTPUT LINE LENGTH
         CH    R4,TMPLL            IS USER SPECIFIED LINE LENGTH LESS
         BH    LL80                YES, GO USE 80 FOR LINE LENGTH
         LA    R4,N80              NO, ANOTHER LINE LENGTH
         CH    R4,TMPLL            IS SPECIFIED LINE LENGTH GREATER
         BL    LL80                YES, GO USE 80 FOR LINE LENGTH
         LH    R4,TMPLL            NO, USE SPECIFIED LINE LENGTH
         B     LINESET             GO SET LINE LENGTH
LL80     LA    R4,N80              DEFAULT LINE LENGTH TO 80
LINESET  ST    R4,LINELEN          STORE OUTPUT LINE LENGTH
         CLI   PRINTIT+N1,HEX00    WAS PRINT SPECIFIED
         BNZ   PRINTSPC            BRANCH IF YES
         XC    PRINTFLG(N4),PRINTFLG
         B     ADDRCHK             GO CHECK FOR ADDRESS
PRINTSPC OI    TSTFLGS1,TSTPRINT   INDICATE I/O TO DATA SET
         LA    R3,DSNAME           ADDRESS OF DSNAME PDE
         ST    R3,PRINTFLG         STORE ADDRESS OF PDE
ADDRCHK  EQU   *
         LA    R8,ADDRESS          R8= ADDRESS OF THE PARSE (PDE)
         DROP  R8                  RELEASE ADDRESSIBILITY TO PARMD(PDL)
         USING IKJPARMA,R8         ESTABLISH ADDRIBILITY TO PARMA (PDE)
         L     R3,PDEUSER          USER WORD IN ADDR PDE
         LTR   R3,R3               WAS ADDRESS SPECIFIED BY USER
         BNZ   ADRSPECF            IF YES GO TO ADRSPECF
         TM    PDEFLG3,AFLG        WAS ADDRESS SPECIFIED BY USER
         BO    ADRSPECF            YES, GO GET SPECIFIED PSW
         SPACE 1
***********************************************************************
*        THE FOLLOWING CODE LOCATES THE PROBLEM PROGRAM PSW           *
***********************************************************************
         SPACE 1
         L     R2,ECBPP            GET POINTER TO SVRB         @ZA07138
*                                                              @ZA09259
         L     R2,RBLINK-RBSECT(R2) GET POINTER TO PP RB       @ZA07138
*                                                              @ZA09259
         MVC   PSWBUF(N8),RBOPSW-RBSECT(R2)  MOVE PSW TO WORK AREA
         B     PSWCONVT            BRANCH TO CONVERT PSW TO PRINTABLE
ADRSPECF EQU   *
         L     R3,PDEUSER          USER WORD OF PDE
PSWNOSYM MVC   PSWBUF(N8),N0(R3)   MOVE PSW TO WORK AREA
         DROP  R8                  RELEASE ADDRIBILITY TO THE (PDE)
RESTRBLO DS    0H                  STAE TABLE ENTRY FOR BAD ADDRESS
         SPACE 1
***********************************************************************
*        THE FOLLOWING CODE WILL CONVERT THE PSW FROM MACHINE         *
*        REPRESENTATION TO PRINTABLE HEX                              *
***********************************************************************
         SPACE 1
PSWCONVT EQU   *
         L     R15,TSTCONVT        LOAD ADDRESS OF IKJEGCVT
         LA    R14,PSWBUF          POINT TO BINARY PSW
         ST    R14,STRNGPTR        STORE IN PDE FOR IKJEGCVT
         MVC   CVTLL(N2),PSWLEN    STORE LENGTH OF PSW IN LIST
         MVI   FLAGS,FLAG          STORE FLAG IN PDE
         MVI   TYPECODE,TYPE       STORE TYPE (HEX) IN PDE
         LA    R1,STRNGPTR         LOAD ADDRESS OF PDE
         LNR   R0,R1               R0 NEGATIVE - CONVERT TO PRINTABLE
         BALR  R14,R15             GO CONVERT THE PSW TO PRINTABLE
         LTR   R15,R15             RETURN CODE 0
         BNZ   PSWRET              IF NO, BRANCH
         SPACE 1
***********************************************************************
*        THE FOLLOWING MOVES THE THREE FIELDS TO BE PRINTED IN HEX TO *
*        THE OUTPUT FIELD BUFFER                                      *
***********************************************************************
         SPACE 1
         L     R2,CONAREA          LOAD ADDRESS OF HEX PSW
         MVI   START,BLANK         BLANK OUT FIRST BYTE OF PSW BUFFER
         MVC   START+N1(N67),START   BLANK OUT REMAINDER OF PSW BUFFER
***********************************************************************
*        DETERMINE WHAT MODE PSW WE HAVE, EC OR BC MODE
*        BIT 13 = 0 IS BC, BIT 13 = 1 IS EC MODE
***********************************************************************
         TM    PSWBUF+N1,ECMODBIT    IS THE PSW AN ECMODE PSW
         BO    ECMODPSW              YES THE PSW IS EC MOD
         MVC   KEY(N1),N3(R2)        MOVE KEY TO OUTPUT BUFFER
         MVC   INTRPTCD(N4),N5(R2)   MOVE INTRPT CODE TO OUTPUT BUFFER
         MVC   INSTRADR(N6),N11(R2)  MOVE INSTR ADDR TO OUTPUT BUFFER
         SPACE 1
***********************************************************************
*        THE FOLLOWING CONVERTS THE REMAINING PSW FIELDS TO PRINTABLE *
*        BINARY AND TRANSFERS THEM TO THE OUTPUT BUFFER               *
*        THE SECTION OF THE BINARY PSW TO BE CONVERTED IS PUT IN REG7.*
*        BITS ARE SHIFTED ONE BY ONE INTO REG6.  ACCORDING AS THE BIT *
*        IS A ZERO OR A ONE A PRINTABLE ZERO OR ONE IS ADDED INTO R10 *
*        WHEN REG10 IS FULL (AFTER 4 BITS ARE CONVERTED) IT IS STORED *
*        IN THE WORKAREA.                                             *
***********************************************************************
         SPACE 1
         MVC   PSWBUF+N2(N1),PSWBUF+N4    MOVE BINARY FIELDS TOGETHER
         SR    R3,R3
         SR    R2,R2
         IC    R3,ZERO             LOAD CHARACTER 0 INTO REGISTER
         IC    R2,ONE              LOAD CHARACTER 1 INTO REGISTER
         SR    R6,R6
         LA    R4,N4               BIT COUNTER
         L     R7,PSWBUF           LOAD BINARY PSW
         LA    R8,SYSMASK          POINT TO OUTPUT AREA FOR FIELDS
LOOP1    SLDL  R6,N1(R0)           SHIFT ONE BIT INTO R6
         LTR   R6,R6               IS IT A ZERO
         BE    ZEROBIT             IF YES, BRANCH
ONEBIT   SLL   R10,N8(R0)          OTHERWISE IT IS A ONE
         AR    R10,R2              PUT A CHARACTER ONE IN LOW BYTE
         SR    R6,R6               ZERO OUT R6 FOR NEXT BIT
         B     EIGHTBCT            GO CHECK IF R10 IS FULL
ZEROBIT  SLL   R10,N8(R0)
         AR    R10,R3              PUT A CHARACTER ZERO IN LOW BYTE
EIGHTBCT BCT   R4,LOOP1            IF R10 IS NOT FULL, BRANCH
         ST    R10,N0(R8)          STORE R10 IN WORK AREA
         LA    R8,N4(R8)           INCREMENT OUTPUT POINTER
         LA    R4,TABLE            LOAD END OF PROCESSING CHECK
         CR    R8,R4               ARE ALL BITS CONVERTED
         BE    OUTPUTIT            IF YES, OUTPUT DATA
         LA    R4,N4               RESET COUNTER FOR 4 MORE BITS
         B     LOOP1               CONVERT NEXT FOUR BITS
         SPACE
***********************************************************************
*        THE FOLLOWING SECTION OF CODE FORMATS THE EC MODE PSW
*        FIRST MOVE THE TO HEX FIELDS CONVERTED BY IKJEGCVT TO THE
*        OUTPUT FIELD BUFFER  (R2 = ADDRESS OF CONAREA)
***********************************************************************
ECMODPSW DS    0H                    EC MODE PSW FORMATTING
         USING CONAREAD,R2           SETUP DSECT FOR CONAREA
         MVC   ECKEY(N1),CONKEY      MOVE SYSTEM KEY TO PRINT AREA
         MVC   ECINADDR(N8),CONINADR MOVE INST ADDR INTO PRINT AREA
         DROP  R2                    RELEASE CONAREA ADDR'ABILITY
         SPACE
**********************************************************************
*        THE NEXT SECTION SETS UP THE BIT PATTERN IN A TEMPORARY
*        WORKAREA AND THEN MOVES THE AREA TO OUTPUT AREA
**********************************************************************
         LA    R7,N31                R7= 31 COUNT BITS TO BE FORMATTED
         L     R2,PSWBUF             R2= FIRST HALF OF THE PSW
ECLOOP   SRDL  R2,N1                 PLACE 1 BIT INTO REG 3
         SRL   R3,N31                MOVE BIT T0 LOWER POSITION
         A     R3,F0MASK             ADD THE 'F' INTO REG 3 (PRINTABLE)
         STC   R3,ECTEMPST(R7)       PLACE CHARACTER IN TEMPORARY AERA
         BCTR  R7,N0                 DECREMENT R7 BY ONE (COUNTER)
         LTR   R7,R7                 IS THE COUNT ZERO
         BNM   ECLOOP                NO WE ARE NOT DONE CONTINUE
         MVC   ECSYSMK2(N8),ECSYSMSK MOVE TO LINE BUFFER
         MVC   ECAMWP2(N4),ECAMWP    MOVE TO LINE BUFFER
         MVC   ECSPM2(N1),ECSPM      MOVE TO LINE BUFFER
         MVC   ECCC2(N2),ECCONDC     MOVE TO LINE BUFFER
         MVC   ECPROGMK(N4),ECPRGMSK MOVE TO LINE BUFFER
         L     R10,OUTBUF            R10= ADDR OF THE OUTPUT BUFFER
         CLI   LINELEN+N3,HEX36      IS LINE LEN LESS THAN HEADER LEN
         BL    ECBUILD               YES, BUILD A SECOND LINE
         LA    R2,N53                R2= HEADER LENGTH - 1
         LA    R3,ECHEADER           R3= ADDRESS OF EC MODE HEADER
         LA    R6,START2             R6= ADDR OF START OF ACTUAL OUTPUT
         BAL   R8,PSWIO              PUT OUT THE LINES
         B     PSWRET                CONTINUE TO OUTPUT THE LINE
         SPACE
****     BUILD TWO LINES OF THE HEADER
ECBUILD  DS    0H                    BUILD TWO LINES OF OUTPUT
         LA    R2,N31                MINIMUM LINE LENGTH
         LA    R3,N11(R2)            WILL PROGRAM MASK FIT IN LINE
         C     R3,LINELEN            DOES THE PROGRAM MASK FIT
         BH    ECFULINE              NO OUTPUT THE LINE AS IS
         LR    R2,R3                 YES OUTPUT THE LINE WITH PROG MASK
ECFULINE DS    0H                    LINE IS FULL AND OUTPUT IS READY
         BCTR  R2,N0                 OUTPUT DATA LEN -1
         LA    R3,ECHEADER           R3= ADDR OF THE EC MODE HEADER
         LA    R6,START2             R6= ADDR OF START OF ACTUAL OUTPUT
         BAL   R8,PSWIO              GO AND OUTPUT THE LINES
         LA    R3,N1(R2,R3)          ADDR OF REMAINING HEADER TO OUTPUT
         LA    R6,N1(R2,R6)          ADDR OF REMAINING DATA TO OTUPUT
         LA    R8,N52                MAXIMUM LENGTH OF HEADER MINUS TWO
         SR    R8,R2                 LENGTH OF THE DATA MINUS ONE
         LR    R2,R8                 R2= PROPER LENGTH
         BAL   R8,PSWIO              OUTPUT THE REMAINING TWO LINES
         B     PSWRET                RETURN TO CALLER
         SPACE
***********************************************************************
*        THE FOLLOWING CODE SETS THE OUTPUT LINE LENGTH               *
***********************************************************************
         SPACE 1
OUTPUTIT MVC   SYSMASK2(N8),SYSMASK     MOVE TO FIELD BUFFER
         MVC   AMWP2(N4),AMWP           MOVE TO FIELD BUFFER
         MVC   ILC2(N2),ILC             MOVE TO FIELD BUFFER
         MVC   CC2(N2),CC               MOVE TO FIELD BUFFER
         MVC   PROGM2(N4),PROGMASK      MOVE TO FIELD BUFFER
         L     R10,OUTBUF               POINT TO OUTPUT BUFFER
         CLI   LINELEN+N3,HEX43    IS LINE LEN LESS THAN HEADER LEN
         BL    BUILDIT             YES, GO BUILD 2 OUTPUT LINES
         LA    R2,N66              OUTPUT DATA LENGTH-1
         LA    R3,HEADER           ADDRESS OF HEADER TO PUT OUT
         LA    R6,START            ADDRESS OF PSW DATA TO PUT OUT
         BAL   R8,PSWIO            GO PUT OUT LINES
         B     PSWRET              GO SET UP FOR RETURN TO CALLER
BUILDIT  EQU   *
         LA    R2,N40              MINIMUN LINE LENGTH
         LA    R3,N4(R2)           MINMIUN LL PLUS CC FIELD
         C     R3,LINELEN          WILL CC FIELD FIT IN LINE
         BH    FULLLINE            NO, LINE FULL, GO PUT OUT
         LR    R2,R3               LENGTH SO FAR
         LA    R3,N11(R2)          LEN SO FAR PLUS PROG MASK FIELD
         C     R3,LINELEN          WILL PROG MASK FIT IN LINE
         BH    FULLLINE            NO, LINE FULL, GO PUT OUT
         LR    R2,R3               YES, PUT IT OUT
FULLLINE EQU   *
         BCTR  R2,N0               OUTPUT DATA LENGTH-1
         LA    R3,HEADER           ADDRESS OF HEADER TO PUT OUT
         LA    R6,START            ADDRESS OF PSW DATA TO PUT OUT
         BAL   R8,PSWIO            GO PUT OUT LINES
         LA    R3,N1(R2,R3)        ADDR OF REST OF HEADER TO PUT OUT
         LA    R6,N1(R2,R6)        ADDR OF REST OF PSW DATA
         LA    R8,N65              MAXMIUN LENGTH OF HEADER MINUS 2
         SR    R8,R2               LEN OF DATA MINUS ONE
         LR    R2,R8               IN PROPER REGISTER
         BAL   R8,PSWIO            GO PUT OUT LAST TWO LINES
         B     PSWRET              GO SET FOR RETURN TO CALLER
         EJECT
***********************************************************************
*        THE FOLLOWING ROUTINE BUILDS AND PUTS OUT THE HEADER AND PSW *
*        LINES.  R2 IS THE LENGTH-1 OF OUTPUT, R3 IS THE STARTING     *
*        ADDRESS OF THE HEADER AND R6 IS THE STARTING ADDRESS OF THE  *
*        PSW DATA.  R8 IS THE RETURN ADDRESS.                         *
***********************************************************************
         SPACE 1
PSWIO    EQU   *
         L     R10,OUTBUF          ADDRESS OF COMMON TEST OUTPUT BUFF
         MVI   N0(R10),HEX40       BLANK
         MVC   N1(N79,R10),N0(R10)     OUTBUF
         EX    R2,MOVE2            MOVE HEADER TO OUTBUF
         LA    R2,N5(R2)           LENGTH OF OUTPUT FOR I/O
         SLL   R2,N16              LENGTH IN HIGH ORDER HALF WORD
         ST    R2,N0(R10)          PREFIX OUTPUT WITH LENGTH
         BAL   R14,DATAOUT         GO TO I/O ROUTINE, PUT OUT HEADER
         XC    PRINTFLG(N4),PRINTFLG   REMOVE THE PRINT DSN INDICATOR
         SRL   R2,N16              LENGTH IN LOW ORDER HALFWORD OF REG
         SH    R2,FOUR             LEN-1 OF PSW DATA TO MOVE
         EX    R2,MOVE3            MOVE PSW DATA TO OUTBUF
         BAL   R14,DATAOUT         GO TO I/O ROUTINE, PUT OUT PSW
         BR    R8                  YES, RETURN TO CALLER
         SPACE 1
***********************************************************************
*        DATA IS A CALL TO IKJEGIO USING IKJEGSIO MACRO AND THE DATA
*        OPTION.  OUTBUF CONTAINS THE DATA PRINTFLG THE DS ADDR
***********************************************************************
         SPACE
DATAOUT  DS    0H                  OUTPUT THE  DATA LINE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR THE OUTPUT AREA
         ST    R14,TEMPWRK         SAVE THE RETURN ADDR
         ST    R3,TEMPWRK2         SAVE THE CURRENT R3
         L     R3,PRINTFLG         R3= ADDR OF DATA SET FOR IO.
         EJECT
         L     R4,OUTBUF           R4=ADDR OF THE OUTPUT
         IKJEGSIO DATA,DATAPTR=(R4),DSNAME=(R3),ID=PSW25,              *
               MF=(E,TSTIOPRM)     OUTPUT DATA
         L     R14,TEMPWRK         PICK UP RETURN ADDR
         L     R3,TEMPWRK2         RESTORE THE OLD VALUE TO R3.
         LTR   R15,R15             WHAT IS THE RETURN CODE
         BNZ   PSWRET              IF NON-ZERO EXIT
         BR    R14                 RETURN TO CALLER
         SPACE 1
***********************************************************************
* THE FOLLOWING CODE PROCESSES RETURN CODES AND SETS UP FOR OUTPUT OF *
* MESSAGES.  PSWRET ANALYSES CODES FROM IKJEGIO1 AND IKJEGCVT.        *
* PSWRET1 ANALYSES RETURN CODES FROM PARSE.                           *
***********************************************************************
         SPACE 1
PSWRETRY EQU   *
         L     R9,CVTPTR           ADDRESS OF CVT
         L     R9,CVTTCBP-CVT(R9)  POINTER TO NEW, CURRENT TCBS
         L     R9,N4(R9)           ADDRESS OF CURRENT TCB IS TEST TCB
         L     R9,TCBTRN-TCB(R9)   ADDRESS OF TCOMTAB
         L     R13,REGSAVE2        ADDRESS OF MY SAVE AREA
         L     R12,N68(R13)        MY BASE
         LA    R8,N20              ABEND RETURN CODE FOR MAINLINE
         B     RETURN              GO RETURN TO MAINLINE
EXITERR  EQU   *
         L     R15,ANSWPLAC        VALIDITY EXIT SAVED RETURN CODE
PSWRET   EQU   *
         LA    R8,N16
         CR    R8,R15              RETURN CODE 16
         BNL   RETURN2             IF YES (16 OR GREATER) BRANCH
         SR    R8,R8               SET RETURN CODE TO 0
         B     RETURN              GO SET UP RETURN
PSWRET1  EQU   *                   PARSE RETURN CODE ANALYSIS
         LA    R8,N8               PARSE ATTENTION R.C.
         CR    R8,R15              WAS AN ATTENTIOM SCHEDULED
         LA    R8,N16              MAINLINE ATTENTION RETURN CODE
         BE    RETURN              IF ATT SCHEDULED, GO SET UP RETURN
         LA    R8,N20              VALIDITY EXIT SEEKS END, R.C.  PARSE
         CR    R8,R15              DID VALIDITY EXIT SEEK TERMINATION
         BE    EXITERR             IF YES, GO SET UP RETURN
         LA    R8,N16              PARSE R.C. FOR NO CORE AVAILABLE
         CR    R8,R15              WAS PARSE ABLE TO GET CORE
         BE    MNLRC24             RETURN TO MNL WITH 24
         LA    R8,N12              PARSE R.C. FOR INVALID PARAMETERS
         CR    R8,R15              WERE INVALID PARMS SPECIFIED
         LA    R2,MSG104           R2= 104 FIRST LEVEL MSG NO.
         LA    R3,MSG277           R3= 277 SECOND LEVEL MSG NO.
         LA    R4,INST15           R4= FIXED INST NO. 15 (LISTPSW)
         BE    MSGOUT              GO HAVE MESSAGE PUT OUT
         SR    R8,R8               PARSE RC=4, NO MESSAGE
         OI    TSTFLGS4,TSTFLUSH   IF STACK, TELL MNL TO FLUSH
         B     RETURN              GO RETURN TO CALLER
         SPACE
MNLRC24  DS    0H                  RETURN WITH A 24
         LA    R2,MSG103           R2= 103 ADDR OF NO CORE MSG
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARAM AREA
         IKJEGSIO MSG,FIRST=(R2),ID=PSW25,MF=(E,TSTIOPRM)
         B     PSWRET              HANDLE IO RETURN CODES
RETURN   EQU   *
         LR    R15,R8              RETCODE IN PROPER REGISTER
RETURN2  DS    0H                  RETURN WITH WHAT IS IN R15
         NI    TSTFLGS1,(HEXFF-TSTPRINT)
*-*-*    ISSUE ESTAE 0 AND TURN OFF TSTRERTN SWITCH
         LR    R2,R15              SAVE THE RETURN CODE
         ESTAE 0                   REMOVE THE ESTAE
         LR    R15,R2              RESTORE THE RETURN CODE
         NI    TSTFLGS4,(HEXFF-TSTRERTN)  TURN OFF RETRY SWITCH
         L     R13,N4(R13)
         RETURN  (14,12),T,RC=(15)
         EJECT
************************************************************
*                                                          *
*            MISCELLANEOUS CONSTANTS                       *
*                                                          *
************************************************************
         SPACE 2
HEADER   DC    C'  XRXXXTIE   KEY  CMWP  INTRPT CODE  ILC  CC  PROG MAS*
               K  INSTR ADDR'                                    YA2414
ECHEADER DC    C'  XRXXXTIE   KEY  CMWP  SPM  CC  PROG MASK  INSTR ADDR*
               '                                                 YA2414
OFFSET   EQU   64                  OFFSET OF PSWAREA INTO TEST AREA
HEX00    EQU   X'00'
HEX38    EQU   X'38'
HEX36    EQU   X'36'               HEXIDECIMAL 36
HEX43    EQU   X'43'
HEX40    EQU   X'40'
PSWLEN   DC    X'0008'             LENGTH OF PSW
FLAG     EQU   X'80'               FLAG FOR IKJEGCVT
TYPE     EQU   X'04'               TYPE OF VALUE (HEX)
ZERO     DC    C'0'                CHARACTER ZERO
ONE      DC    C'1'                CHARACTER ONE
TABLEVAL DC    X'0A0B04050D06050D' LENGTH OF PSW OUTPUT FIELDS, ONE
*                                  BYTE PER FIELD IN REVERSE ORDER
HEXFF    EQU   X'FF'
ECMODBIT EQU   X'08'                 INDICATES EC MOD PSW
         DS    0F                  ALIGNMENT
SUPERZAP DC    50CL1'Z'            PATCH AREA
         DS    0F                  ALIGNMENT
F0MASK   DC    X'000000F0'           MASK FOR FORMATTING BITS
PCLADDR  DC    A(IKJEGPWP)         ADDRESS OF PARSE CSECT
ABENDTAB DS    0F
         DC    AL1(99)             LINK FAILED CODE
         DC    AL3(PABEND1)        RESUME IC AFTER LINK
         DC    AL1(97)             INVALID ADDRESS CODE
         DC    AL3(RESTRBLO)       RESUME ADDRESS FOLLOWING PROT CHECK
         DC    X'FF'               END OF TABLE INDICATOR
PSWSPL   IKJEGSPL RTRY=PSWRETRY,ABNTB=ABENDTAB,MODNM=IKJEGPSW,         *
               TNM=LISTPSW
MOVE2    MVC   N4(N1,R10),N0(R3)   MOVE HEADER TO OUTBUF
MOVE3    MVC   N4(N1,R10),N0(R6)   MOVE PSW DATA TO OUTBUF
FOUR     DC    H'4'                AMOUNT TO SUBTRACT FOR MOVE3
BLANK    EQU   C' '
         EJECT
***********************************************************************
*        WORK AREA DESECT
***********************************************************************
         SPACE
PSWAREA  DSECT
PARSELST DS    7F                  PARSE PARM LIST
TEMPWRK2 DS    0F                  ALSO USED FOR TEMP SAVING REGS.
ANSWPLAC DS    1F                  VALIDITY CHECK EXIT RC FOR MAINLINE
PSWBUF   DS    2F                  BUFFER FOR PSW
* IT IS ESSENTIAL THAT THE FOLLOWING 4 AREAS BE CONTIGUOUS AND IN ORDER
STRNGPTR DS    1F                  POINTER TO PSW
CVTLL    DS    CL2                 LENGTH OF PSW
FLAGS    DS    CL1                 FLAG FOR IKJEGCVT
TYPECODE DS    CL1                 TYPE CODE (HEX) FOR IKJEGCVT
LINELEN  DS    1F                  OUTPUT LINE LENGTH
PRINTFLG DS    1F                  ADDRESS OF DSNAME PDE OR ZERO
* IT IS ESSENTIAL THAT THE FOLLOWING 7 AREAS BE CONTIGUOUS AND IN ORDER
SYSMASK  DS    2F                  PRINTABLE SYSTEM MASK
         DS    1F                  WORD
AMWP     DS    1F                  PRINTABLE AMWP
ILC      DS    CL2                 PRINTABLE ILC
CC       DS    CL2                 PRINTABLE CC
PROGMASK DS    1F                  PRINTABLE PROGRAM MASK
TABLE    DS    2F                  TABLE
*IT IS ESSENTIAL THAT THE FOLLOWING 17 AREAS BE CONTIGUOUS AND IN ORDER
START    DS    CL2                 BLANKS
SYSMASK2 DS    CL8                 PRINTABLE SYSTEM MASK
         DS    CL4                 BLANKS
KEY      DS    CL1                 PRINTABLE KEY
         DS    CL3                 BLANKS
AMWP2    DS    CL4                 PRINTABLE AMWP
         DS    CL5                 BLANKS
INTRPTCD DS    CL4                 PRINTABLE INTERRUPTION CODE
         DS    CL7                 BLANKS
ILC2     DS    CL2                 PRINTABLE INSTRUCTION LENGTH CODE
         DS    CL2                 BLANKS
CC2      DS    CL2                 PRINTABLE CONDITION CODE
         DS    CL5                 BLANKS
PROGM2   DS    CL4                 PRINTABLE PROGRAM MASK
         DS    CL6                 BLANKS
INSTRADR DS    CL6                 PRINTABLE INSTRUCTION COUNTER
         DS    CL2                 BLANKS
* IT IS ESSENTIAL THAT THE FOLLOWING 2 AREAS BE CONTIGUOUS AND IN ORDER
OUTPTR1  DS    1F                  POINTER TO FIRST OUTPUT BUFFER
OUTPTR2  DS    1F                  POINTER TO SECOND OUTPUT BUFFER
PARMPTR  DS    1F                  POINTER TO PARSE PARM LIST    YM4111
         ORG   PSWAREA             GO BACK TO BEGINNING OF WORK AREA
TEMPWRK  DS    0H                  LABEL FOR VALIDITY CHECK WORKAERA
STAELIST DS    4F                  PARAMETER LIST FOR STAE
* * * * * * * * * ** * * * * * * * * * * * * * * * * * * * * * * * * *
*        THE FOLLOWING IS A CONTINUATION OF THE PSW WORKAREA DSECT
*        THIS PORTION IS USED FOR FORMATTING THE EC MODE PSW (AOS/2)
* * * * * * * * * ** * * * * * * * * * * * * * * * * * * * * * * * * *
         ORG  SYSMASK              OVERLAY BC MODE AREA
ECTEMPST DS   0H                   LABEL FOR MOVING FORMATTED BITS IN
ECSYSMSK DS   2F                   PRINTABLE SYSMASK AREA
ECDUMMY1 DS   1F                   FILLER FOR PROTECT AREA
ECAMWP   DS   1F                   FILLER FOR PROTECT MASK
ECDUMMY2 DS   CL2                  FILLER FOR UNUSED SPACE
ECCONDC  DS   CL2                  PRINTABLE CC AREA
ECPRGMSK DS   1F                   PRINTABLE PROGRAM MASK AREA
ECSPM    DS   CL1                  PRINTABLE SEG PROTECTION MODE AREA
ECDUMMY3 DS   CL7                  FILLER FOR UNUSED SPACE
****     FORMATTED AREA FOR EC MODE PSW -- KEEP CONTIGUOUS--
         ORG  START                START OF THE OUTPUT AREA
START2   DS   CL2                  BLANKS
ECSYSMK2 DS   CL8                  FORMATTED PRINTABLE SYSTEM MASK
         DS   CL4                  BLANKS
ECKEY    DS   CL1                  FORMATTED PROTECTION KEY
         DS   CL3                  BLANKS
ECAMWP2  DS   CL4                  FORMATTED AMWP
         DS   CL3                  BLANKS
ECSPM2   DS   CL1                  FORMATTED SEGMENT PROTECTION MODE
         DS   CL3                  BLANKS
ECCC2    DS   CL2                  FORMATTED CONDITION CODE
         DS   CL5                  BLANKS
ECPROGMK DS   CL4                  FORMATTED PROGRAM MASK
         DS   CL6                  BLANKS
ECINADDR DS   CL6                  FORMATTED INSTRUCTION ADDRESS
         DS   CL13                 BLANKS
IKJEGPSW CSECT
         EJECT
*
*        PARSE MACROS
*
IKJEGPWP IKJPARM
PRINTIT  IKJKEYWD
         IKJNAME  'PRINT',SUBFLD=PRINTDSN
PSWADDR  IKJKEYWD
         IKJNAME  'ADDR',SUBFLD=ADDRPSW
ADDRPSW  IKJSUBF
ADDRESS  IKJPOSIT  ADDRESS,VALIDCK=PSWVALCK,PROMPT='ADDRESS OF PSW'
PRINTDSN IKJSUBF
DSNAME   IKJPOSIT  DSNAME,PROMPT='DATA SET NAME'
         IKJENDP
         SPACE 2
PDEUSWD  EQU   ADDRESS+N32         IN ADDRESS PDE, USER WORD
PDEFLAG3 EQU   ADDRESS+N22         IN ADDR PDE, FLAGS FOR ADDR STRING
         EJECT
CONAREAD DSECT                       DESCRIBES CONAREA FOR EC MOD PSW
         SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*        A DSECT DESCRIBING CONAREA (FROM CONVERT) FOR EC MOD PSW
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE
         DS    CL3                   NULL POSITION BLOCK
CONKEY   DS    CL1                   PRINTABLE PROT KEY
         DS    CL5                   NULL POSITION BLOCK
CONINADR DS    CL8                   PRINTABLE INSTRUCTION ADDRESS
         EJECT
**********************************************************************
*        DSECT DESCRIBING PARSE ADDRESS PDE
**********************************************************************
         SPACE
         IKJPARMA
         EJECT
         TCOMTAB
         EJECT
         TSTCWORK
         EJECT
         IKJPPL
         EJECT
CVT      DSECT
         CVT
         EJECT
         IKJTCB
         EJECT
         IKJRB
         END
