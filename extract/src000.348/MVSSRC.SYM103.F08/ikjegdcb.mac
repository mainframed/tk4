         TITLE 'IKJEGDCB, THE LISTDCB FUNCTION OF THE TEST COMMAND'
* /* START OF SPECIFICATIONS ****
*02*  PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
***********************************************************************
* STATUS  CHANGE LEVEL 00, VERSION NO. 02, OS/VS2                     *
*                                                                     *
* FUNCTION/OPERATION                                                  *
*    THIS COMMAND PROGRAM RECEIVES CONTROL FROM THE TEST COMMAND      *
*    PROCESSOR.  IT DISPLAYS ALL OR PART OF THE DCB AT A USER         *
*    SPECIFIED ADDRESS.                                               *
*                                                                     *
* ENTRY POINTS                                                        *
*         IKJEGDCB-PROCESSES THE FIELDS OF THE DCB                    *
*         IKJEGDVK-VALIDITY CHECKS THE ADDRESS OF THE DCB             *
*                                                                     *
* INPUT                                                               *
*    ONE LINE OF INPUT FROM THE TERMINAL CONTAINING THE COMMAND       *
*                                                                     *
* OUTPUT                                                              *
*    LINES OF OUTPUT TO THE TERMINAL OR SPECIFIED DATA SET CONTAINING *
*    DESCRIPTIVE HEADERS AND THE REQUESTED DCB FIELDS.                *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*         IKJPARS  - TO SCAN THE INPUT BUFFER                         *
*         IKJEGCVT - TO CHECK AND CONVERT THE ADDRESS AND TO          *
*    CONVERT THE DCB FIELDS TO PRINTABLE HEXADECIMAL.                 *
*         IKJEGIO  - TO OUTPUT THE DCB HEADERS AND FIELDS             *
*                                                                     *
* EXITS,NORMAL                                                        *
*         IKJPARS-VIA REGISTER 14 WITH ONE OF THE FOLLOWING RETURN    *
*    CODES IN REGISTER 15-                                            *
*    0   INDICATING TO CONTINUE PROCESSING THE COMMAND BUFFER         *
*    8   INDICATING IKJPARS SHOULD PROMPT WITH REENTER                *
*    12  INDICATING IKJPARS SHOULD RETURN TO IKJEGDCB WITH A RETURN   *
*    *   CODE OF 20.                                                  *
*                                                                     *
*         IKJEGMNL-VIA REGISTER 14 WITH ONE OF THE FOLLOWING RETURN   *
*    CODES IN REGISTER 15.                                            *
*    0   NORMAL RETURN                                                *
*    16  INDICATING AN ATTENTION INTERRUPT WAS ENCOUNTERED            *
*                                                                     *
* EXITS,ERROR                                                         *
*         IKJEGMNL-VIA REGISTER 14 WITH A RETURN CODE OF 20 IN        *
*    REGISTER 15 INDICATING THE STAE RETRY ROUTINE WAS ENTERED.       *
*         IKJEGMNL-VIA REGISTER 14 WITH A RETURN CODE OF 24 IN        *
*    REGISTER 15 INDICATING THE ESTAE MACRO WAS NOT ISSUED            *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*                                                                     *
*    TCOMTAB - DSECT CONTAINING THE ADDRESS OF THE OUTPUT BUFFER,     *
*    THE COMMAND BUFFER, LISTDCB'S WORKAREA AND SAVEAREA.             *
*                                                                     *
*    DCBWKARA - CONTAINS THE PARAMETER LIST FOR IKJPARS, THE BUFFERS, *
*    USED TO BUILD THE FIELD HEADERS AND FIELDS FOR                   *
*    OUTPUT, AND THE SWITCHES USED BY IKJEGDCB.                       *
*                                                                     *
* ATTRIBUTES                                                          *
*    REENTRANT ROUTINE                                                *
*    REFRESHABLE ROUTINE                                              *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED  *
*    SO THAT REDEFINITION OF CHARACTER CONSTANTS, BY REASSEMBLY,      *
*    WILL RESULT IN A CORRECT MODULE FOR THE NEW DEFINITION.          *
*                                                                     *
* NOTES                                                               *
*    ABBREVIATIONS COMMONLY USED IN THE COMMENTS BESIDE THE CODE-     *
*    1.   PDL-PARAMETER DESCRIPTOR LIST                               *
*    2.   PDE-PARAMETER DESCRIPTOR ENTRY                              *
*    3.   PCL-PARAMETER CONTROL LIST                                  *
*    COMMENTS ON STATEMENTS USUALLY START IN COLUMN 36.               *
*    STAERTN IS THE ENTRY POINT INTO THE STAE RETRY ROUTINE.  THIS    *
*    CODE IS ENTERED FROM IKJEGSTA.                                   *
***********************************************************************
         EJECT
         COPY IKJEGSIO
IKJEGDCB CSECT
R0       EQU    0                 REGISTER 0
R1       EQU    1                 REGISTER 1
R2       EQU    2                 USED TO INDEX THROUGH OUTPUT BUFFER
R3       EQU    3                 USED AS BASE FOR DCB BEING PROCESSED
R4       EQU    4                 REGISTER 4
R5       EQU    5                 BASE OF IKJEGDCB'S WORKAREA
R6       EQU    6                 REGISTER 6
R7       EQU    7                 REGISTER 7
R8       EQU    8                 BASE FOR IKJPARMD
R9       EQU    9                 BASE FOR TCOMTAB
R10      EQU   10                 USED TO ADDRESS OUTPUT BUFFERS
R11      EQU   11                 USED TO ADDRESS OUTPUT BUFFERS
R12      EQU   12                 PROGRAM BASE
R13      EQU   13                 POINTER TO IKJEGDCB'S SAVEAREA
R14      EQU   14                 REGISTER 14
R15      EQU   15                 REGISTER 15
** THE FOLLOWING EQUATES ARE USED AS DISPLACEMENTS IN INSTRUCTIONS   **
** AND TO INDICATE THE RELATIVE ADDRESS OF FIELDS WITHIN A DCB.      **
D0       EQU    0                 DISPLACEMENT OF 0
D1       EQU    1                 DISPLACEMENT OF 1
D2       EQU    2                 DISPLACEMENT OF 2
D4       EQU    4                 DISPLACEMENT OF 4
D5       EQU    5                 DISPLACEMENT OF 5
D8       EQU    8                 DISPLACEMENT OF 8
D10      EQU   10                 DISPLACEMENT OF 10
D12      EQU   12                 DISPLACEMENT OF 12
D14      EQU   14                 DISPLACEMENT OF 14
D32      EQU   32                 DISPLACEMENT OF 32
D35      EQU   35                 DISPLACEMENT OF 35
D40      EQU   40                 DISPLACEMENT OF 40
D44      EQU   44                 DISPLACEMENT OF 44
D56      EQU   56                 DISPLACEMENT OF 56
D68      EQU   68                 DISPLACEMENT OF 68
D84      EQU   84                 DISPLACEMENT OF 84
** THE FOLLOWING EQUATES ARE USED IN TESTING AND IN DISPLACEMENTS    **
HEXBF    EQU   X'BF'              USED TO TURN SECTION HEADER SW OFF
HEXDF    EQU   X'DF'              USED TO TURN OFF FIELD HEADER SWITCH
HEXEF    EQU   X'EF'              USED TO TURN OFF FIELD SWITCH
HEXCF    EQU   X'CF'              USED TO TURN OFF FIELD HEADER AND
*                                 FIELD SWITCHES
HEXFF    EQU   X'FF'              HEX  'FF'
HEX10    EQU   X'10'              USED TO TEST OFLGS OF DCB TO
*                                 DETERMINE IF DCB IS OPEN OR CLOSED
ALLCHECK EQU   X'80'              SWITCH INDICATING ALL FIELDS ARE TO
*                                 BE OUTPUTTED
SECHDRCK EQU   X'40'              SWITCH INDICATING SECTION HEADER IS
*                                 TO BE OUTPUTTED
HDRCHECK EQU   X'20'              SWITCH INDICATING FIELD HEADERS ARE
*                                 TO BE OUTPUTTED.
FLDCHECK EQU   X'10'              SWITCH INDICATING CONTENTS OF FIELDS
*                                 ARE TO BE OUTPUTTED
ZERO     EQU   X'0000'            USED TO TURN PDE'S OFF AND ALSO TO
*                                 TEST TO SEE IF FIELD WAS SPECIFIED
PDELEN   EQU   53                 NUMBER OF BYTES MINUS 1 OF THE FIELD
*                                 PDES
FLAG     EQU   X'80'              USED TO SET FLAG BYTE OF THE FIELD
*                                 PDE PASSED TO IKJEGCVT
TYPE     EQU   X'04'              INDICATES HEXADECIMAL TO IKJEGCVT
BLANK    EQU   C' '               BLANK
RET16    EQU   16                 USED IN TESTING AND SETTING OF A
*                                 RETURN CODE OF 16
BADESTAE EQU   24                 USED TO PASS BACK A RETURN CODE 24
REGSMSK  EQU   X'38'              USED TO TEST FOR ADDRESS
*                                 BEING SPECIFIED AS REGISTER
HEXTHREE EQU   X'03'              USED TO TEST FOR ADDRESS BEING ON A
*                                 FULLWORD BOUNDARY
INST99   EQU   99                 STAE CODE FOR 'LINK FAILED'
HEXZERO  EQU   X'0000'            USED TO TEST FOR INDIRECT ADDRESSING
*                                 AGAINST INDIRECT FIELD OF ADDR PDE
RETCOD0  EQU    0                 USED TO SET RETURN CODES
RETCODE8 EQU    8                 USED TO SET AND TEST RETURN CODE 8
RETCOD12 EQU   12                 USED TO SET RETURN CODE TO
*                                 IKJPARS TO 12
RETCOD20 EQU   20                 USED TO SET THE RETURN CODE TO
*                                 IKJEGMNL TO 20 INDICATING STAE
*                                 EXIT ROUTINE WAS ENTERED
FACTOR   EQU   11                 NUMBER OF BYTES PER SECTION
*                                 OF CODE IN SUBTAB1
LINELGTH EQU   80                 DEFAULT LINE LENGTH FOR TERMINAL
M0103    EQU   103                MESSAGE NUMBER FOR ERROR MESSAGE
M0015    EQU   15                 MESSAGE NUMBER FOR ERROR MESSAGE
M0298    EQU   298                MESSAGE NUMBER FOR ERROR MESSAGE
M0280    EQU   280                MESSAGE NUMBER FOR ERROR MESSAGE
I0088    EQU   88                 INSERT NUMBER FOR ERROR MESSAGE
I0003    EQU   3                  INSERT NUMBER FOR ERROR MESSAGE
** THE FOLLOWING EQUATES ARE USED IN THE LENGTH FIELDS OF            **
** INSTRUCTIONS TO DESCRIBE THE NUMBER OF BYTES TO PROCESS.  THEY ARE**
** ALSO USED TO INDICATE THE NUMBER OF BYTES A PARTICULAR FIELD IN   **
** THE DCB CONTAINS.                                                 **
L0       EQU    0                 LENGTH OF 0
L1       EQU    1                 LENGTH OF 1
L2       EQU    2                 LENGTH OF 2
L3       EQU    3                 LENGTH OF 3
L4       EQU    4                 LENGTH OF 4
L7       EQU    7                 LENGTH OF 7
L8       EQU    8                 LENGTH OF 8
L9       EQU    9                 LENGTH OF 9
L52      EQU   52                 LENGTH OF DCB IN BYTES
L79      EQU   79                 LENGTH OF 79
L159     EQU   159                LENGTH OF 159
         EJECT
         SAVE  (14,12),,*          SAVE IKJEGMNL'S REGISTERS
         LR    R12,R15             LOAD ADDRESS OF THIS MODULE
         USING IKJEGDCB,R12        ESTABLISH PROGRAM ADDRESSABILITY
         USING TCOMTAB,R9          ESTABLISH TCOMTAB ADDRESSABILITY
         L     R15,REGSAVE2        LOAD ADDRESS OF NEW SAVE AREA
         ST    R13,D4(R15)         STORE REGISTER 13 IN NEW SAVE AREA
         ST    R15,D8(R13)         STORE NEW SAVE AREA ADDRESS
         LR    R13,R15             R13 NOW POINTS TO NEW SAVE AREA
         L     R6,WORKAREA         LOAD ADDRESS OF TEST WORKAREA
         USING TSTCWORK,R6         ESTABLISH ADDRESSABILITY
         LA    R5,CWORKCMD         SKIP CONVERT WORK AREA
         USING DCBWKARA,R5         ESTABLISH WORKAREA ADDRESSABILITY
         DROP  R6                  RELEASE R6 FOR LATER USE
*                                  CSECT
         STM   R14,R12,D12(R13)    SAVE LISTDCB'S REGISTERS
         SPACE
**********************************************************************
*                      ISSUE ESTAE                                   *
**********************************************************************
         SPACE
         LA    R15,STAEAREA        GET ADDRESS OF STAE WORKAREA
         MVC   D0(STAELEN,R15),STAELIST PUT STAE LIST FORM INTO
*                                  WORKAREA
         L     R2,TSTSTAE          GET ADDR OF STAE EXIT ROUTINE
         ESTAE (R2),CT,PARAM=IKJEGSPL,RECORD=YES,XCTL=NO,MF=(E,(R15))
         LTR   R15,R15             RETURN CODE ZERO FROM STAE
SMTSTAE  DS    0H                  SMT LABEL FOR TEST CASE TDCB2700
         BZ    SETPARSE            YES, CONTINUE PROCESSING
         STC   R15,TSTESTRC        STORE RETURN CODE FOR MAINLINE
         LA    R15,BADESTAE        PASS BACK BAD ESTAE RTN CODE (24)
         B     RETTAB(R15)         RETURN TO CALLER
         EJECT
SETPARSE DS    0H
**THIS CODE SETS UP TO GO TO IKJPARS TO VALIDITY CHECK THE COMMAND   **
**BUFFER.                                                            **
         XC    PPLLIST(TYPECODE-PPLLIST),PPLLIST  CLEAR WORKAREA
         LR    R4,R5               ESTABLISH ADDRESSABILITY TO PARSE
         USING PPL,R4              PARAMETER LIST
         MVC   PPLUPT(L4),TSTUPT   PUT ADDR UPT INTO PARAMETER LIST
         MVC   PPLECT(L4),TSTECT   PUT ADDR ECT INTO PARAMETER LIST
         MVC   PPLECB(L4),TSTCPECB PUT ADDR ECB INTO PARAMETER LIST
         MVC   PPLPCL(L4),PCLADDR  PUT ADDR OF PCL INTO PARAMETER LIST
         LA    R2,TSTANSPL         PUT POINTER TO ANSWER PLACE INTO
         ST    R2,PPLANS           PARAMETER LIST TO PARSE
         MVC   PPLCBUF(L4),INBUF   PUT ADDR OF COMMAND BUFFER INTO
*                                  PARAMETER LIST FOR PARSE
         ST    R13,PPLUWA          PUT POINTER TO SAVE AREA INTO LIST
         LR    R1,R4               REGISTER 1 POINTS TO PARAMETER LIST
         LINK  EP=IKJPARS,ERRET=LINKFAIL          GO TO PARSE
PARSBLOW DS    0H                  LABEL USED BY STAE RETRY ROUTINE
         B     LINKOK              IF CONTROL COMES HERE LINK OK
LINKFAIL DS    0H
         LR    R8,R15              TRANSFER RETURN CODE
         LR    R6,R1               TRANSFER ABEND CODE
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(R6),RC=(R8),INST11=(NUM,I0040),*
               ID=DCB10,MF=(E,TSTIOPRM) CALL I/O FOR ERROR MSG
         B     RETTAB(R15)         BRANCH INTO RETURN CODE TABLE
LINKOK   DS    0H
SMTPARS  DS    0H                  SMT LABEL FOR TEST CASE TDCB2600
         B     PARSDONE            GO TO PARSDONE
         EJECT
IKJEGDVK DS    0H
** THIS CODE IS RESPONSIBLE FOR ANALYSING THE PARAMETERS FOR LISTDCB **
** AFTER IKJPARS HAS CHECKED THEM FOR SYMTAX ERRORS.  CONTROL IS     **
** PASSED TO THIS ROUTINE BY A LINK FROM IKJPARS.                    **
         SAVE  (14,12),,*          SAVE PARSE REGISTERS
         L     R9,D4(R1)           OBTAIN ADDRESS OF LISTDCB SAVEAREA
         L     R12,D68(R9)         RESTORE PROGRAM ADDRESSABILITY
         L     R5,D40(R9)          RESTORE WORKAREA ADDRESSABILITY
         L     R6,D44(R9)          RESTORE MSG CSECT ADDRESSABILITY
         L     R9,D56(R9)          RESTORE TCOMTAB ADDRESSABILITY
         L     R15,REGSAVE3        LOAD SAVE AREA FOR IKJEGCVT
         ST    R13,D4(R15)         SAVE ADDR OF PARSE'S SAVEAREA
         ST    R15,D8(R13)         SAVE ADDR OF VALIDITY CHECK RTN'S
*                                  SAVEAREA IN PARSE'S SAVEAREA
         LR    R13,R15             LOAD NEW SAVEAREA ADDRESS
         L     R2,D0(R1)           GET ADDRESS OF PDE
         LA    R7,D8(R1)           SAVE ADDR OF 3RD PARAMETER FROM
*                                  PARSE
         OI    TSTFLGS4,TSTVALCK   TURN ON VALIDITY CHECK FLAG FOR I/O
         SR    R0,R0               ZERO OUT REGISTER FOR NO SECOND LEV
         L     R15,OUTBUF          PICK UP POINTER TO OUTBUF
         ST    R0,ZERO(R15)        STORE NO SECOND LEV MSG INDICATOR
         USING IKJPARMA,R2         ESTABLISH ADDRESSABILITY TO
*                                  PARAMETER DESCRIPTOR ENTRY (PDE)
         CLC   PDEINDCT(L2),WORDZERO TEST TO SEE IF INDIRECT
*                                  ADDRESSING WAS USED
         BNE   CONVERT             NO, GO SET UP FOR IKJEGCVT
         TM    PDEFLG4,REGSMSK     YES, IS TYPE OF ADDR REGISTER
         BZ    CONVERT             NO, GO SET UP FOR IKJEGCVT
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST FOR I/O I/O CALL
         IKJEGSIO MSG,FIRST=M0101,SECOND=M0268,ID=DCB10,MF=(E,TSTIOPRM)
         LTR   R15,R15             TEST FOR ERROR
         BZ    SET8                OK-GO BACK TO PARSE FOR REENTER
         B     SET12               NO GO BACK TO MAINLINE THRU PARSE
CONVERT  DS    0H
** THIS ROUTINE SETS UP THE PARAMETERS AND THEN GOES TO IKJEGCVT FOR **
** BINARY CONVERSION OF THE DCB ADDRESS.                             **
         LR    R1,R2               PUT ADDRESS OF ADDR PDE INTO REG 1
         LNR   R1,R1               NEGATE REGISTER 1 TO INDICATE ADDR
*                                  CONVERSION
         XR    R0,R0               RO IS POSITIVE TO INDICATE BINARY
*                                  CONVERSION
         L     R15,TSTCONVT        OBTAIN ADDR OF ENTRY POINT TO
*                                  IKJEGCVT FROM TCOMTAB
         BALR  R14,R15             GO TO IKJEGCVT
         LPR   R1,R1               RESET REGISTER 1 TO POSITIVE
         B     CONVTAB(R15)        BRANCH INTO TABLE INDEXED BY
*                                  CONTENTS OF REGISTER 15
CONVTAB  DS    0H
         B     BOUNDCK             0-CONTINUE PROCESSING
         B     SETMSG              4-SET BY IKJEGCVT-MOVE MSG ADDR
         B     SETMSG2             8-SET BY IKJEGSYM-MOVE MSG ADDR
         B     SETMSG2             12-SET BY IKJEGSYM-MOVE MSG ADDR
         B     SET12               16-ATTENTION INTERRUPT-RETURN
         B     SET12               20-IKJEGCVT OR IKJEGSYM BLEW
         B     SET12               24-IKJEGCVT OR IKJEGSYM BLEW
SETMSG2  DS    0H
SET12    DS    0H
         ST    R15,REG15           SAVE RETURN CODE FOR LATER USE
         LA    R15,RETCOD12        SET RETURN CODE TO 12
         B     PARSRTRN            GO RETURN TO IKJPARS
SETMSG   DS    0H
         MVC   D0(L4,R7),PDEUSER   PUT MSG ADDR INTO PARAMETER LIST
SET8     DS    0H
         LA    R15,RETCODE8        SET RETURN CODE TO 8
         B     PARSRTRN            PREPARE TO RETURN TO IKJPARS
         SPACE
BOUNDCK  DS    0H
         L     R3,PDEUSER          LOAD SAVEPTR (WORD PASSED TO PARSE)
         TM    PDEFLG5,PDESIB      IF ADDR IS NOT SYMBOLIC
         BZ    NOSYM               ...THEN BRANCH
         L     R3,D0(R3)           ...ELSE GET ADDR FROM SIB
NOSYM    EQU    *
         LA    R3,0(,R3)           ZERO HIGH ORDER BYTE
         L     R4,REGSAVE2         LOAD ADDR OF LISTDCBS REGISTERS
         ST    R3,D32(R4)          SAVE CONVERTED ADDRESS IN REG 3
*                                  FOR MAINLINE CODE
         LA    R3,L52(R3)          GET ADDRESS OF END OF DCB
BOUNDARY DS    0H
         TM    D35(R4),HEXTHREE    IS ADDRESS ON FULL WORD BOUNDARY
         BZ    SET0                IF YES, RETURN TO PARSE
         XC    TSTIOPRM,TSTIOPRM   CLEAR I/O PARM LIST
         IKJEGSIO MSG,FIRST=M0101,INST11=(APDE,(R2)),  CALL I/O        *
               INST21=(NUM,I0003),SECOND=M0280,ID=DCB10,MF=(E,TSTIOPRM)
         LTR   R15,R15             TEST FOR ERROR
         BZ    SET8                OK-GO BACK TO PARSE FOR REENTER
         B     SET12               NO GO BACK TO MAINLINE THRU PARSE
SET0     DS    0H
         XR    R15,R15             INDICATE PARAMETER IS VALID
PARSRTRN DS    0H
         DROP  R2                  RELEASE ADDRESSABILITY TO ADDR PDE
         L     R6,OUTBUF           PICK UP ADDRESS OF OUTBUF
         LH    R5,ZERO(R6)         PICK UP MESSAGE LENGTH IF ONE
         LTR   R5,R5               SEE IF THERE IS A MESSAGE
         BZ    NO2NDLEV            BRANCH AROUND NEXT INST. IF NONE
         ST    R6,ZERO(R7)         PASS 2ND MSG ADDRESS TO PARSE
NO2NDLEV DS    0H
         NI    TSTFLGS4,HEXFF-TSTVALCK TURN OFF VALIDITY CHECK BIT
         L     R13,D4(R13)         RESTORE ADDRESS OF PARSE SAVEAREA
         RETURN (14,12),,RC=(15)   RESTORE REGISTERS AND RETURN
         EJECT
***********************************************************************
*        THE FOLLOWING CODE IS EXECUTED UPON COMPLETION OF IKJPARS    *
***********************************************************************
PARSDONE DS    0H
** THE FOLLOWING IS A BRANCH TABLE USED TO DETERMINE WHERE CONTROL   **
** SHOULD BE GIVEN AFTER RETURNING FROM IKJPARS.                     **
         B     PARSTAB(R15)       BRANCH TO TABLE INDEXED BY CONTENTS
*                                 OF REGISTER 15
PARSTAB  DS    0H
         B     PDLADDR            RETURN CODE 0-CONTINUE PROCESSING
         B     FLUSHIT            RETURN CODE 4-GO BACK TO IKJEGMNL
         B     DCBRC16            RETURN CODE 8-ATTENTION INTERRUPT
         B     PARMSG2            RETURN CODE 12-GO WRITE MESSAGE
         B     PARMSG3            RETURN CODE 16-GO WRITE MESSAGE
         B     CHKRET             RETURN CODE 20-GO CHECK FOR CODE
PARMSG2  DS    0H
** THIS SETS UP TO WRITE MESSAGES IKJ57206I                         **
         XC    TSTIOPRM,TSTIOPRM  CLEAR I/O PARM LIST
         IKJEGSIO MSG,FIRST=M0104,INST11=(NUM,I0007),SECOND=M0277,     *
               ID=DCB10,MF=(E,TSTIOPRM) CALL I/O TO ISSUE ERROR MSG
         B     RETTAB(R15)        BRANCH INTO RTN CODE TABLE
PARMSG3  DS    0H
         LA    R4,M0103           GET MESSAGE NUMBER INTO PARM REG
         B     MSGERR             GO ISSUE ERROR MESSAGE TO TERM
PDLADDR  DS    0H
         L     R8,TSTANSPL        OBTAIN ADDRESS OF PARSE PARAMETER
*                                 DESCRIPTOR LIST (PDL)
         USING IKJPARMD,R8        ESTABLISH PDL ADDRESSABILITY
         EJECT
FIELDCHK DS    0H
** THIS CODE TESTS TO SEE IF THE FIELD PARAMETER WAS CODED ON THE    **
** CONTROL STATEMENT.                                                **
         USING IHADCB,R3          ESTABLISH ADDRESSABILITY TO DCB
         CLC   DCBFIELD(L2),WORDZERO WAS FIELD PARAMETER SPECIFIED
         BNE   SCANPDES           YES, GO SCAN DCBFIELDS
         OI    OUTPUTSW,ALLCHECK  NO, INDICATE ALL DCBFIELDS ARE TO BE
*                                 OUTPUTTED
         MVI   RELAD,HEXFF        SET THE FIRST PARSE DESCRIPTOR
*                                 ENTRY (PDE) TO NON ZERO
         MVC   RELAD+D1(PDELEN),RELAD  SET REMAINING PDES NON ZERO
         MVC   FTEK(L4),WORDZERO  ZERO DCBFTEK AND DCBBFALN PDES
         TM    DCBOFLGS,HEX10     IS THIS AN OPEN DCB
         BZ    CLOSED             NO, GO HANDLE FOR CLOSED
         MVI   DDNAM,HEXZERO      YES, ZERO OUT PDES DESCRIBING A
         MVC   DDNAM+D1(L7),DDNAM CLOSED DCB
         B     PRINTCHK           GO SEE IF PRINT WAS SPECIFIED
CLOSED   DS    0H
         MVI   TIOT,ZERO          ZERO OUT PDES DESCRIBING AN
         MVC   TIOT+D1(L9),TIOT   OPEN DCB
         B     PRINTCHK           GO SEE IF PRINT WAS SPECIFIED
SCANPDES DS    0H
         CLC   OFLGS(L2),WORDZERO WAS DCBOFLGS SPECIFIED
         BE    TRIHDR             NO, GO CHECK COMMON HEADER FIELD
         TM    DCBOFLGS,HEX10     YES, IS THIS AN OPEN DCB
         BZ    TRIHDR             NO, GO CHECK COMMON HEADER FIELD
         MVC   OFLGS(L2),WORDZERO YES, TURN OFF CLOSED DCBOFLGS PDE
         MVC   OFLGS2(L2),HEXFFFF TURN ON OPEN DCBOFLGS PDE
TRIHDR   DS    0H
** THIS CODE TESTS TO SEE IF ONE OF THE FOLLOWING OR ALL OF THE      **
** FOLLOWING FIELDS ARE SPECIFIED- DCBHIARC,DCBFTEK OR DCBBFALN      **
** THE CODE WILL LEAVE ONE OF THE PDES ON TO BE PROCESSED AND WILL   **
** TURN THE REST OF THEM OFF.  THIS IS TO AVOID OUTPUTTING THE SAME  **
** FIELD THREE TIMES.                                                **
         CLC   HIARC(L2),WORDZERO WAS THE DCBHIARC FIELD SPECIFIED
         BNE   CLEAR2             YES, CLEAR DCBFTEK AND DCBBFALN PDES
         CLC   FTEK(L2),WORDZERO  WAS THE DCBFTEK FIELD SPECIFIED
         BE    PRINTCHK           NO, GO SEE IF PRINT WAS SPECIFIED
         MVC   BFALN(L2),WORDZERO YES, ZERO OUT DCBBFALN PDE
         B     PRINTCHK           GO SEE IF PRINT WAS SPECIFIED
CLEAR2   DS    0H
         MVC   FTEK(L4),WORDZERO  CLEAR DCBFTEK AND DCBBFALN PDES
         EJECT
PRINTCHK DS    0H
** THIS CODE IS RESPONSIBLE FOR DETERMINING IF THE PRINT PARAMETER   **
** WAS SPECIFED.                                                     **
         CLC   PRINT(L2),WORDZERO WAS PRINT SPECIFIED
         BNE   PRNTSPEC           YES, PDE NON ZERO BRANCH
         NI    TSTFLGS1,(HEXFF-TSTPRINT)     INITIALIZE OUTPUT FLAGS
*                                 IN TCOMTAB
         B     TABLESCN           GO DETERMINE LENGTH OF OUTPUT LINE
PRNTSPEC DS    0H
** THIS CODE IS EXECUTED WHEN THE USER HAS SPECIFIED AN OUTPUT DATA  **
** SET.  IT SAVES THE ADDRESS OF THE DSNAME PDE FOUND IN THE PDL     **
** PASSED BY PARSE AND SETS A FLAG IN TCOMTAB TO INDICATE THIS       **
** CONDITION TO IKJEGIO.                                             **
         LA    R2,DSNAM           LOAD ADDRESS OF DSNAME PDE
         OI    TSTFLGS1,TSTPRINT  SET FLAG IN TCOMTAB TO INDICATE
*                                 USER SPECIFIED OUTPUT DATA SET
         ST    R2,PRINTFLG        STORE ADDR OF DSNAME PDE
TABLESCN DS    0H
** THIS CODE IS RESPONSIBLE FOR DETERMINING THE LENGTH OF THE OUTPUT **
** LINE.  THE DEFAULT IS 80 IF THE USER SPECIFIED AN OUTPUT LINE     **
** GREATER THAN 80 OR LESS THAN 40.  IKJEGDCB TRIES TO GIVE A GOOD   **
** FORMAT FOR THOSE OUTPUT LINES IN THE RANGE OF 40 TO 80.           **
         LA    R4,LINELGTH        LOAD DEFAULT LINE LENGTH
         CH    R4,TMPLL           COMPARE TO TERMINAL LINE LENGTH
         BNH   LINESET            BRANCH IF 80 IS LOW OR EQUAL TO
*                                 TERMINAL LINE LENGTH
         LA    R4,D40
         CH    R4,TMPLL           COMPARE 40 WITH TMP LINE LENGTH
         BH    DEFAULT            BRANCH IF 40 IS HIGHER THAN TERMINAL
*                                 LINE LENGTH
         LH    R4,TMPLL           USE SPECIFIED LINE LENGTH
         B     LINESET            GO SET LINE LENGTH
DEFAULT  DS    0H
         LA    R4,LINELGTH        DEFAULT LINE LENGTH
LINESET  DS    0H
         STH   R4,LINELEN         STORE OUTPUT LINE LENGTH
         L     R10,OUTBUF         GET ADDRESS OF OUTPUT BUFFER
         MVI   D4(R10),BLANK      BLANK OUT OUTPUT BUFFER
         MVC   D5(L159,R10),D4(R10)
         XC    D0(L4,R10),D0(R10) CLEAR 1ST 4 BYTES OF OUTBUF
         LA    R2,OFLGS2+D2       GET ADDRESS OF END OF DSECT
         ST    R2,ENDEND          STORE LAST PDE ADDRESS+2
         XR    R2,R2              INITIALIZE LENGTH OF OUTPUT TO ZERO
         LA    R6,RELAD           POINT TO FIRST PDE
         EJECT
PDECHECK DS    0H
         CLC   D0(L2,R6),WORDZERO IS THIS FIELD DESIRED
         BNE   SBRTNSVR           BRANCH IF DESIRED
PDECHK   DS    0H
         LA    R6,D2(R6)          NO, POINT TO NEXT PDE
         C     R6,ENDEND          ARE THERE MORE PDE'S
         BE    PDLEND             NO, GO TO END PROCESSING
         B     PDECHECK           YES, CHECK NEXT PDE
SBRTNSVR DS    0H
         LR    R11,R6             PRESERVE R6
         LA    R7,RELAD           ADDRESS OF FIRST PDE
         SR    R11,R7             FIND RELATIVE POSITION OF PDE
         LA    R10,FACTOR         LOAD MULTIPLICATION FACTOR
         LA    R7,SUBTAB1         LOAD ADDRESS OF TABLE
         MR    R10,R10            COMPUTE PROPER OFFSET
         AR    R7,R11             ADD OFFSET TO BASE
         BR    R7                 GO TO PROPER SUBROUTINE
         SPACE
***********************************************************************
* THE FOLLOWING CODE CONSISTS OF 27 SUBROUTINES CORRESPONDING TO THE  *
* FIELDS OF DCB.  EACH SUBROUTINE MOVES THE RELATIVE ADDRESS, FIELD   *
* LENGTH, HEADER LENGTH, AND HEADER TO A COMMON BUFFER.  CONTROL IS   *
* THEN PASSED EITHER TO THE CONVERSION ROUTINE OR TO A HEADER OUTPUT  *
* ROUTINE AND THEN TO A CONVERSION ROUTINE.  THE SUBROUTINE FOR DDNAM *
* WILL PASS CONTROL TO A VALIDITY CHECKING ROUTINE.  IT IS ESSENTIAL  *
* FOR PROPER LOGIC FLOW THAT EACH SUBROUTINE HAVE THE SAME LENGTH.    *
***********************************************************************
         SPACE
SUBTAB1  DS    0H
**THE FOLLOWING CODE SETS UP FOR FIELDS IN THE DEVICE INTERFACE
DSRELAD  EQU    *
         MVC   HDRBUFFR(L'HDRRELAD),HDRRELAD  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRRELAD MOVE LENGTH OF HEADER IN
         MVI   FLDLENTH,L4         MOVE IN FIELD LENGTH
         LA    R4,DCBRELAD         MOVE IN RELATIVE ADDRESS
         B     HDROUTPT            GO WRITE SECTION HDR OUT
DSKEYCN  EQU    *
         MVC   HDRBUFFR(L'HDRKEYCN),HDRKEYCN MOVE HEADING IN
         MVI   HDRLENTH,L'HDRKEYCN MOVE LENGTH OF HEADER IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBKEYCN         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSFDAD   EQU    *
         MVC   HDRBUFFR(L'HDRFDAD),HDRFDAD  MOVE IN HEADING
         MVI   HDRLENTH,L'HDRFDAD  MOVE LENGTH OF HEADER IN
         MVI   FLDLENTH,L8         MOVE IN FIELD LENGTH
         LA    R4,DCBFDAD          MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSDVTBL  EQU    *
         MVC   HDRBUFFR(L'HDRDVTBL),HDRDVTBL  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRDVTBL MOVE LENGTH OF HEADER IN
         MVI   FLDLENTH,L3         MOVE LENGTH OF FIELD IN
         LA    R4,DCBDVTBL+D1      MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSKEYLE  EQU    *
         MVC   HDRBUFFR(L'HDRKEYLE),HDRKEYLE   MOVE HEADING IN
         MVI   HDRLENTH,L'HDRKEYLE MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBKEYLE         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSDEVT   EQU    *
         MVC   HDRBUFFR(L'HDRDEVT),HDRDEVT  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRDEVT  MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE LENGTH OF FIELD IN
         LA    R4,DCBDEVT          MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSTRBAL  EQU    *
         MVC   HDRBUFFR(L'HDRTRBAL),HDRTRBAL  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRTRBAL MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L2         MOVE LENGTH OF FIELD IN
         LA    R4,DCBTRBAL         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
**THE FOLLOWING CODE SETS UP FOR FIELDS IN THE COMMON INTERFACE
DSBUFNO  EQU    *
         MVC   HDRBUFFR(L'HDRBUFNO),HDRBUFNO  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRBUFNO MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBBUFNO         MOVE IN RELATIVE ADDRESS
         B     HDROUTPT            GO WRITE SECTION HEADER OUT
DSBUFCB  EQU    *
         MVC   HDRBUFFR(L'HDRBUFCB),HDRBUFCB   MOVE HEADING IN
         MVI   HDRLENTH,L'HDRBUFCB MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L3         MOVE LENGTH OF FIELD IN
         LA    R4,DCBBUFCB+D1      MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSBUFL   EQU    *
         MVC   HDRBUFFR(L'HDRBUFL),HDRBUFL  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRBUFL  MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L2         MOVE LENGTH OF FIELD IN
         LA    R4,DCBBUFL          MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSDSORG  EQU    *
         MVC   HDRBUFFR(L'HDRDSORG),HDRDSORG  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRDSORG MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L2         MOVE LENGTH OF FIELD IN
         LA    R4,DCBDSORG         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSIOBAD  DS    0H
         MVC   HDRBUFFR(L'HDRIOBAD),HDRIOBAD  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRIOBAD MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L4         MOVE LENGTH OF FIELD IN
         LA    R4,DCBIOBAD         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
**THE FOLLOWING CODE SETS UP FOR FIELDS IN THE FOUNDATION EXTENSION
DSHIARC  DS    0H
         MVC   HDRBUFFR(L'HDRHIARC),HDRHIARC  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRHIARC MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE LENGTH OF FIELD IN
         LA    R4,DCBBFTEK         MOVE IN RELATIVE ADDRESS
         B     HDROUTPT            GO WRITE SECTION HEADER OUT
DSBFTEK  DS    0H
         MVC   HDRBUFFR(L'HDRBFTEK),HDRBFTEK  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRBFTEK MOVE LENGTH OF HEADER IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBBFTEK         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSBFALN  DS    0H
         MVC   HDRBUFFR(L'HDRBFALN),HDRBFALN  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRBFALN MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBBFALN         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSEODAD  DS    0H
         MVC   HDRBUFFR(L'HDREODAD),HDREODAD  MOVE HEADING IN
         MVI   HDRLENTH,L'HDREODAD MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L3         MOVE IN FIELD LENGTH
         LA    R4,DCBEODAD+D1      MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSRECFM  DS    0H
         MVC   HDRBUFFR(L'HDRRECFM),HDRRECFM  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRRECFM MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBRECFM         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSEXLST  DS    0H
         MVC   HDRBUFFR(L'HDREXLST),HDREXLST  MOVE HEADING IN
         MVI   HDRLENTH,L'HDREXLST MOVE IN LENGTH OF HEADING
         MVI   FLDLENTH,L3         MOVE IN FIELD LENGTH
         LA    R4,DCBEXLST+D1      MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
**THE FOLLOWING CODE SETS UP FOR FIELDS IN A CLOSED FOUNDATION
DSDDNAM  DS    0H
         MVC   HDRBUFFR(L'HDRDDNAM),HDRDDNAM  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRDDNAM MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L8         MOVE IN FIELD LENGTH
         LA    R4,DCBDDNAM         MOVE IN RELATIVE ADDRESS
         B     HDROUTPT            GO WRITE SECTION HEADER OUT
DSOFLG1  DS    0H
         MVC   HDRBUFFR(L'HDROFLGS),HDROFLGS MOVE HEADING IN
         MVI   HDRLENTH,L'HDROFLGS MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBOFLGS         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSIFLG   DS    0H
         MVC   HDRBUFFR(L'HDRIFLG),HDRIFLG  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRIFLG  MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBIFLG          MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSMACR   DS    0H
         MVC   HDRBUFFR(L'HDRMACR),HDRMACR  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRMACR  MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L2         MOVE IN FIELD LENGTH
         LA    R4,DCBMACR          MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
**THE FOLLOWING CODE SETS UP FOR FIELDS IN AN OPEN FOUNDATION
DSTIOT   DS    0H
         MVC   HDRBUFFR(L'HDRTIOT),HDRTIOT  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRTIOT  MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L2         MOVE IN FIELD LENGTH
         LA    R4,DCBTIOT          MOVE IN RELATIVE ADDRESS
         B     HDROUTPT            GO WRITE SECTION HEADER OUT
DSMACRF  DS    0H
         MVC   HDRBUFFR(L'HDRMACRF),HDRMACRF  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRMACRF MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L2         MOVE IN FIELD LENGTH
         LA    R4,DCBMACRF         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSIFLGS  DS    0H
         MVC   HDRBUFFR(L'HDRIFLGS),HDRIFLGS  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRIFLGS MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBIFLGS         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSDEBAD  DS    0H
         MVC   HDRBUFFR(L'HDRDEBAD),HDRDEBAD  MOVE HEADING IN
         MVI   HDRLENTH,L'HDRDEBAD MOVE IN LENGTH OF HEADING
         MVI   FLDLENTH,L3         MOVE IN FIELD LENGTH
         LA    R4,DCBDEBAD+D1      MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
DSOFLG2  DS    0H
         MVC   HDRBUFFR(L'HDROFLGS),HDROFLGS MOVE HEADING IN
         MVI   HDRLENTH,L'HDROFLGS MOVE LENGTH OF HEADING IN
         MVI   FLDLENTH,L1         MOVE IN FIELD LENGTH
         LA    R4,DCBOFLGS         MOVE IN RELATIVE ADDRESS
         B     CVTANDIO            GO SET UP FOR CONVERSION
         EJECT
**  THE FOLLOWING CODE OUTPUTS THE SECTION HEADERS                   **
HDROUTPT DS    0H
         TM    OUTPUTSW,ALLCHECK   ARE ALL THE FIELDS TO BE OUTPUTTED
         BZ    DDCHECK2            NO, GO CHECK FOR DDNAME PDE
         LTR   R2,R2               YES, IS THERE PREVIOUS OUTPUT
         BZ    CONTINUE            NO, GO PREPARE HEADER
         L     R10,OUTBUF          YES, POINT TO OUTPUT BUFFER
         LA    R14,D4(R2)          SET LENGTH OF OUTPUT
         STH   R14,D0(R10)         STORE LENGTH IN OUTPUT BUFFER
         OI    OUTPUTSW,HDRCHECK   INDICATE HEADER BEING OUTPUTTED
         OI    OUTPUTSW,SECHDRCK   INDICATE SECTION HEADER IS TO BE
*                                  OUTPUTTED
         BAL   R14,DCBIO           GO SET UP PARAMETER LIST FOR I/O
         XR    R2,R2               RESET OUTPUT COUNTER
CONTINUE DS    0H
         XR    R11,R11             CLEAR A REGISTER
         IC    R11,HDRCOUNT        LOAD OFFSET TO PROPER INSTRUCTION
         LA    R7,D14(R11)         POINT TO NEXT HEADER
         STC   R7,HDRCOUNT         SET COUNTER FOR NEXT HEADER
         LA    R7,HDRTAB           POINT TO TABLE
         AR    R7,R11              ADD OFFSET TO TABLE ADDRESS
         L     R10,OUTBUF          POINT TO OUTPUT BUFFER
         BR    R7                  GO MOVE HEADER TO OUTPUT BUFFER
HDRTAB   DS    0H
         MVC   D4(L'HEADER1,R10),HEADER1  MOVE HEADER TO BUFFER
         LA    R14,L'HEADER1       STORE LENGTH
         B     HDRIO               GO OUTPUT HEADER
         MVC   D4(L'HEADER2,R10),HEADER2  MOVE HEADER TO BUFFER
         LA    R14,L'HEADER2       STORE LENGTH
         B     HDRIO               GO OUTPUT HEADER
         MVC   D4(L'HEADER3,R10),HEADER3  MOVE HEADER TO BUFFER
         LA    R14,L'HEADER3       STORE LENGTH
         B     HDRIO               GO OUTPUT HEADER
         MVC   D4(L'HEADER4,R10),HEADER4  MOVE HEADER TO BUFFER
         LA    R14,L'HEADER4       STORE LENGTH
HDRIO    DS    0H
         LA    R14,D4(R14)         SET LENGTH OF OUTPUT
         NI    OUTPUTSW,HEXCF      TURN OFF FIELD AND HEADER SWITCHES
         STH   R14,D0(R10)         PUT LENGTH AT BEGINNING OF BUFFER
         BAL   R14,DCBIO           GO PUT OUT THE HEADER
DDCHECK2 DS    0H
         LA    R11,DDNAM           GET ADDRESS OF DCBDDNAM PDE
         CR    R6,R11              IS THIS DDNAM FIELD
         BE    TRNSLATE            IF YES GO VALIDITY CHECK THE FIELD
         EJECT
***********************************************************************
* THE FOLLOWING CODE WILL SET UP CONVERSION AND OUTPUT OF REQUESTED   *
* FIELDS.  WHEN SECTION IS REACHED, RELATIVE ADDRESS, FIELD LENGTH    *
* HEADER LENGTH, AND HEADER WILL BE IN THE COMMON BUFFERS.            *
***********************************************************************
         SPACE
CVTANDIO DS    0H
         XR    R7,R7
         XR    R10,R10
         SR    R0,R0               ZERO OUT REGISTER
         OI    OUTPUTSW,HDRCHECK   TURN ON FIELD HEADER SWITCH
         IC    R7,FLDLENTH         LOAD FIELD LENGTH
         ST    R0,HDROFFST         CLEAR OUT HDROFFST AND FLDOFFST
         IC    R10,HDRLENTH        LOAD HEADER LENGTH
         AR    R7,R7               DOUBLE FOR TRUE PRINTABLE LENGTH
         LR    R0,R10              LOAD HEADER LENGTH
         SR    R0,R7               DIFFERENCE BETWEEN HEADER AND FIELD
         LPR   R0,R0               ASSURE THAT DIFFERENCE IS POSITIVE
         SRL   R0,D1               SHIFT TO DIVIDE BY TWO
         CR    R7,R10              WHICH IS LONGER
         BH    FLDLONGR            IF FIELD IS LONGER, BRANCH
         STH   R0,FLDOFFST         STORE IN WORK AREA
         SR    R0,R0               CLEAR OUT REGISTER
         LR    R7,R10              R7 NOW CONTAINS OUTPUT LENGTH
FLDLONGR DS    0H
         STH   R0,HDROFFST         STORE IN WORK AREA
         AR    R7,R2               COMPUTE TENTATIVE OUTPUT LENGTH
         CH    R7,LINELEN          IS FIELD LONGER THAN OUTPUT LINE
         BNH   MOREROOM            BRANCH IF THE FIELD CAN FIT
         L     R11,OUTBUF          OBTAIN ADDRESS OF OUTBUF
         LA    R10,D2(R2)          ADD TWO BYTES TO LENGTH OF OUTPUT
         STH   R10,D0(R11)         STORE LENGTH OF OUTPUT
         BAL   R14,DCBIO           GO OUTPUT LINES
         SR    R7,R2               RESET LENGTH OF CURRENT FIELD
         XR    R2,R2               RESET LINE TO ZERO
         OI    OUTPUTSW,HDRCHECK   TURN ON FIELD HEADER SWITCH
         EJECT
***********************************************************************
* THE FOLLOWING IS REACHED WHEN THERE IS MORE ROOM IN OUTPUT BUFFER   *
* IT SETS UP FOR IKJEGCVT WHICH WILL CONVERT THE FIELD AND MOVE THE   *
* HEADER AND FIELD TO THE PROPER BUFFERS.                             *
***********************************************************************
MOREROOM DS    0H
         SR    R7,R2
         MVI   CVTLL,HEXZERO      ZERO OUT 1ST BYTE OF LENGTH
         MVC   CVTLL+D1(L1),FLDLENTH  MOVE LENGTH OF FIELD INTO
*                                 PARAMETER LIST
         ST    R4,STRNGPTR        STORE POINTER TO FIELD CONTENTS
         MVI   FLAGS,FLAG         MOVE FLAG TO PARAMETER LIST
         MVI   TYPECODE,TYPE      MOVE TYPE CODE (HEX) TO LIST
         LNR   R0,R7              INDICATE CONVERSION TO PRINTABLE
         LA    R1,STRNGPTR        LOAD ADDRESS OF PARAMETER LIST
         L     R15,TSTCONVT       LOAD ADDRESS OF IKJEGCVT
         BALR  R14,R15            GO CONVERT THE FIELD
         LPR   R0,R0              RESTORE REGISTER 0 TO POSITIVE
         LTR   R15,R15            IS RETURN CODE ZERO
         BNZ   SEVRET             NO, GO HANDLE SERVICE ROUTINE CODE
         L     R10,OUTBUF         YES, POINT TO OUTPUT BUFFER
         LH    R11,FLDOFFST
         AR    R11,R10            ADD IN OFFSET FOR FORMATTING
         LA    R11,D84(R11)       POINT TO POSITION IN FIELD BUFFER
         AR    R11,R2             GET PROPER DISPLACEMENT INTO BUFFER
         L     R10,CONAREA        POINT TO CONVERT OUTPUT AREA
         XR    R1,R1              CLEAR A REGISTER
         IC    R1,D0(R10)         OBTAIN LENGTH OF DCB FIELD FROM
*                                 FIRST BYTE OF CONVERTED AREA
         BCTR  R1,R0              TAKE ONE FROM LENGTH
         EX    R1,MOVE2           GO MOVE FIELD INTO BUFFER
         LH    R10,HDROFFST
         L     R11,OUTBUF         GET ADDRESS OF OUTPUT BUFFER
         AR    R11,R10
         LA    R10,HDRBUFFR       GET ADDRESS OF FIELD HEADER
         AR    R11,R2             GET PROPER DISPLACEMENT INTO BUFFER
         XR    R1,R1              CLEAR REGISTER 1
         IC    R1,HDRLENTH        OBTAIN LENGTH OF DCB FIELD
         BCTR  R1,R0              TAKE ONE FROM LENGTH
         EX    R1,MOVE3           GO MOVE FIELD NAME INTO BUFFER
         AR    R2,R7              RESET OUTPUT CHARACTER COUNT
         LA    R2,D2(R2)          2 SPACES BETWEEN THIS AND NEXT FIELD
         B     PDECHK             GO CHECK TO SEE IF THERE ARE MORE
*                                 FIELDS TO BE OUTPUTTED
         EJECT
***********************************************************************
* THE FOLLOWING CODE SETS UP A PARAMETER LIST FOR IKJEGIO WHICH WILL  *
* OUTPUT THE LINE(S).  THIS CODE IS BRANCHED TO FROM CVTANDIO, DCBRET,*
* AND HDROUTPT.  UPON ENTRY OUTBUF POINTS TO THE DATA TO BE OUTPUTTED.*
***********************************************************************
         SPACE
DCBIO    DS    0H
         STM   R2,R3,DATAREGS     SAVE PARM REGISTERS
         L     R1,OUTBUF          POINT TO OUTPUT BUFFER
         ST    R1,OUTPTR1         STORE POINTER IN PARAMETER LIST
         L     R0,PRINTFLG        SEND IKJEGIO POINTER TO DSNAME PDE
*                                 THE FIRST TIME
         LR    R2,R1              TRANSFER ADDRESS OF OUTPUT LINE
         LR    R3,R0              TRANSFER ADDRESS OF DSNAME PDE
         XR    R1,R1              CLEAR A REGISTER
         ST    R1,PRINTFLG        CLEAR PRINTFLG TO AVOID SENDING
*                                 THE ADDRESS OF THE DSNAME PDE TO
*                                 IKJEGIO MORE THAN ONCE
         ST    R14,REG14          SAVE CONTENTS OF REGISTER 14
         XC    TSTIOPRM,TSTIOPRM  CLEAR I/O PARM LIST
         IKJEGSIO DATA,DATAPTR=(R2),DSNAME=(R3),ID=DCB10,              *
               MF=(E,TSTIOPRM)    CALL I/O TO SEND OUT DATA
         LM    R2,R3,DATAREGS     RESTORE DATA PARM REGS
         LTR   R15,R15            RETURN CODE FROM IO A ZERO
         BZ    CLEARBUF           YES, GO CLEAR BUFFERS
         B     SEVRET             NO, GO HANDLE SERVICE ROUTINE CODES
CLEARBUF DS    0H
         L     R10,OUTBUF         GET ADDRESS OF OUTPUT BUFFER
         MVI   D4(R10),BLANK      CLEAR OUTPUT AREA
         MVC   D5(L79,R10),D4(R10)
         L     R14,REG14          RESTORE CONTENTS OF REGISTER 14
         TM    OUTPUTSW,FLDCHECK  WAS A FIELD JUST PUT OUT
         BZ    FURTHCHK           NO, GO CHECK FOR FIELD HEADER
         NI    OUTPUTSW,HEXEF     YES, TURN OFF FIELD SWITCH
         TM    OUTPUTSW,SECHDRCK  IS SECTION HEADER TO BE OUTPUTTED
         BZ    BRANCH1            NO, CONTINUE PROCESSING
         NI    OUTPUTSW,HEXBF     YES, TURN OFF SECTION HEADER SWITCH
         XC    D0(L4,R10),D0(R10) CLEAR FIRST FOUR BYTES OF OUTBUF
*                                 TO INDICATE A LINE SHOULD BE SKIPPED
         B     DCBIO              GO BACK TO I/O ROUTINE
BRANCH1  DS    0H
         BR    R14                RETURN TO CALLING ROUTINE
FURTHCHK DS    0H
         TM    OUTPUTSW,HDRCHECK  WAS A FIELD HEADER JUST PUT OUT
         BZ    BRANCH1            NO, BRANCH TO RETURN TO CALLER
         NI    OUTPUTSW,HEXDF     YES, TURN OFF FIELD HEADER SWITCH
         L     R11,OUTBUF         GET ADDRESS OF OUTPUT BUFFER
         LA    R10,D84(R11)       POINT TO FIELD BUFFER
         LR    R1,R2              GET LENGTH OF DATA TO BE OUTPUTTED
         BCTR  R1,R0              TAKE ONE FROM LENGTH
         EX    R1,MOVE3           MOVE FIELD DATA INTO OUTPUT BUFFER
         OI    OUTPUTSW,FLDCHECK  INDICATE FIELD DATA TO BE OUTPUTTED
         MVI   D0(R10),BLANK      CLEAR WORK BUFFER
         MVC   D1(L79,R10),D0(R10)
         B     DCBIO              GO TO I/O ROUTINE
         EJECT
***********************************************************************
* THE FOLLOWING CODE SCANS THE DDNAME FIELD AND CONVERTS THE FIELD TO *
* PRINTABLES.  A NON PRINTABLE IS CONVERTED TO A PERIOD.  ACCEPTED    *
* CHARACTERS ARE ALL OF THE ALPHANUMERIC, NATIONAL, THE QUOTE SIGN,   *
* AND BLANKS.                                                         *
***********************************************************************
TRNSLATE DS    0H
         MVC   DDNAMBUF(L8),D0(R4) COPY DDNAME INTO WORKAREA
         TR    DDNAMBUF(L8),TRTABLE TRANSLATE DDNAM TO PRINTABLES
         LA    R10,L8             LOAD LENGTH OF DDNAME
         AR    R10,R2             ADD PREVIOUS OUTPUT LENGTH
         CH    R10,LINELEN        DOES DDNAM FIT IN OUTPUT LINE
         BH    NOFIT              BRANCH IF NOT ENOUGH ROOM
         B     MOVEIT             GO PUT DDNAME FIELD IN WORK BUFFER
NOFIT    DS    0H
         BAL   R14,DCBIO          OUTPUT FIELDS AND HEADERS
         XR    R2,R2
MOVEIT   DS    0H
         L     R11,OUTBUF         POINT TO OUTPUT BUFFER
         AR    R11,R2
         LA    R10,D84(R11)       POINT TO FIELD BUFFER
         OI    OUTPUTSW,HDRCHECK  TURN ON FIELD HEADER SWITCH
         MVC   D4(L'HDRDDNAM,R11),HDRBUFFR MOVE HEADING INTO I/O BUFFER
         MVC   D0(L8,R10),DDNAMBUF  MOVE DDNAME TO FIELD BUFFER
*                                 FROM DCB
         LA    R2,D10(R2)         RESET LINE LENGTH
         B     PDECHK             GO CHECK NEXT PDE
         EJECT
DCBRC16  DS    0H
         LA    R15,RET16          SET RETURN CODE TO 16 (ATTENTION)
         B     EXITNOW            RETURN TO IKJEGMNL
FIELDMSG DS    0H
         LA    R4,M0015           GET MESSAGE NUMBER INTO PARM REG
MSGERR   DS    0H
         XC    TSTIOPRM,TSTIOPRM  CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=(R4),ID=DCB10,MF=(E,TSTIOPRM) CALL I/O
         B     RETTAB(R15)        BRANCH INTO BRANCH RTN TABLE
DCBRET0  DS    0H
         LA    R15,RETCOD0        SET RETURN CODE FOR IKJEGMNL TO 0
RETURN   DS    0H
         CLC   REG14,WORDZERO     DID IKJEGDCB CALL IKJEGIO
         BE    FIELDMSG           NO, GO WRITE MESSAGE
EXITNOW  DS    0H
         NI    TSTFLGS1,(HEXFF-TSTPRINT)     TURN OFF OUTPUT FLAG
         LR    R2,R15             SAVE RETURN CODE
*                                 IN TCOMTAB
         ESTAE 0,OV               REMOVE THE ESTAE
         NI    TSTFLGS4,HEXFF-TSTRERTN IF THE RETRY SWITCH ON, TURN OFF
         L     R13,D4(R13)        RESTORE REGISTER 13
         LR    R15,R2             RESTORE RETURN CODE
         RETURN (14,12),T,RC=(15) RETURN TO IKJEGMNL
FLUSHIT  DS    0H
         OI    TSTFLGS4,TSTFLUSH  INDICATE TO IKJEGMNL TO FLUSH STACK
RETURN0  DS    0H
         XR    R15,R15            SET RETURN CODE TO ZERO
         B     EXITNOW            RETURN TO IKJEGMNL
CHKRET   DS    0H
         L     R15,REG15          PUT SAVED RETURN CODE INTO REG 15
SEVRET   DS    0H
         B     RETTAB(R15)        GO THRU FOLLOWING TABLE INDEXED BY
*                                 CONTENTS OF REGISTER 15
RETTAB   DS    0H
         B     RETURN0            0-FROM SERVICE ROUTINE-RETURN-0
         B     RETURN0            4-FROM SERVICE ROUTINE-RETURN-0
         B     RETURN0            8-FROM SERVICE ROUTINE-RETURN-0
         B     RETURN0            12-FROM SERVICE ROUTINE RETURN-0
         B     EXITNOW            16-FROM SERVICE ROUTINE-RETURN 16
         B     EXITNOW            20-FROM SERVICE ROUTINE-RETURN 20
         B     EXITNOW            24-FROM SERVICE ROUTINE-RETURN 24
PDLEND   DS    0H
         LTR   R2,R2              IS THERE ANY MORE OUTPUT
         BZ    DCBRET0            IF NO, BRANCH
         LA    R2,D2(R2)          ADD 2 BYTES TO OUTPUT LENGTH
         L     R10,OUTBUF         GET ADDRESS OF OUTPUT BUFFER
         STH   R2,D0(R10)         STORE LENGTH OF OUTPUT IN BUFFER
         BAL   R14,DCBIO          GO OUTPUT HEADERS AND FIELDS
         B     DCBRET0            RETURN TO IKJEGMNL
         EJECT
**********************************************************************
*                     STAE RETRY ROUTINE                             *
**********************************************************************
STAERTN  DS    0H
         L     R6,CVTPTR          GET CVT ADDRESS
         USING CVT,R6             ESTABLISH ADDRESSABILITY TO CVT
         L     R6,CVTTCBP         GET ADDRESS OF TCB WORDS
         L     R6,D4(R6)          GET ADDRESS OF CURRENT TCB
         DROP  R6                 DROP ADDRESSABLITY TO CVT
         USING TCB,R6             ESTABLISH ADDRESSABILITY TO TCB
         L     R9,TCBTRN          PICK UP POINTER TO TCOMTAB FROM
*                                 TCBTRN FIELD OF TEST'S TCB
         OI    TSTFLGS4,TSTRERTN  TURN ON THE RETRY IN PROCESS SWITCH
         L     R13,REGSAVE2       GET ADDR OF LISTDCB'S REGISTERS
         L     R12,D68(R13)       RESET BASE REGISTER
         LA    R15,RETCOD20       INDICATE STAE EXIT RTN ENTERED
         B     EXITNOW            GO BACK TO IKJEGMNL
         EJECT
IKJEGSPL IKJEGSPL RTRY=STAERTN,ABNTB=STATBL,MODNM=IKJEGDCB,TNM=LISTDCB
ZZZZZZZZ DC    52C'Z'             TO BE USED FOR MAINTENANCE
TRTABLE  DS    0H
         DC    256CL1'.'          INITIALIZE TO 256 PERIODS
         ORG   TRTABLE+(C'A')     GO TO POSITION +193 IN TABLE
         DC    C'ABCDEFGHI'       FIRST THIRD OF ALPHABET
         ORG   TRTABLE+(C'J')     GO TO POSITION +209 IN TABLE
         DC    C'JKLMNOPQR'       SECOND THIRD OF ALPHABET
         ORG   TRTABLE+(C'S')     GO TO POSITION +226 IN TABLE
         DC    C'STUBWXYZ'        THIRD THIRD OF ALPHABET
         ORG   TRTABLE+(C'0')     GO TO POSITION +240 IN TABLE
         DC    C'0123456789'      ACCEPT NUMBERS
         ORG   TRTABLE+(C'''')    GO TO POSITION +125 IN TABLE
         DC    C''''              ACCEPT QUOTES
         ORG   TRTABLE+(C'=')     GO TO POSITION +126 IN TABLE
         DC    C'='               ACCEPT EQUAL MARKS
         ORG   TRTABLE+(C'$')     GO TO POSITION +91 IN TABLE
         DC    C'$'               ACCEPT DOLLAR SIGN
         ORG   TRTABLE+(C' ')     GO TO POSITION +64 IN TABLE
         DC    C' '               ACCEPT BLANK
         ORG   TRTABLE+256        GO TO END OF TABLE
         SPACE
HDRRELAD DC    C'RELAD'           FIELD HEADER IN DEVICE INTERFACE SEG
HDRKEYCN DC    C'KEYCN'           FIELD HEADER IN DEVICE INTERFACE SEG
HDRFDAD  DC    C'FDAD'            FIELD HEADER IN DEVICE INTERFACE SEG
HDRDVTBL DC    C'DVTBL'           FIELD HEADER IN DEVICE INTERFACE SEG
HDRKEYLE DC    C'KEYLE'           FIELD HEADER IN DEVICE INTERFACE SEG
HDRDEVT  DC    C'DEVT'            FIELD HEADER IN DEVICE INTERFACE SEG
HDRTRBAL DC    C'TRBAL'           FIELD HEADER IN DEVICE INTERFACE SEG
HDRBUFNO DC    C'BUFNO'           FIELD HEADER IN COMMON INTERFACE
HDRBUFCB DC    C'BUFCB'           FIELD HEADER IN COMMON INTERFACE
HDRBUFL  DC    C'BUFL'            FIELD HEADER IN COMMON INTERFACE
HDRDSORG DC    C'DSORG'           FIELD HEADER IN COMMON INTERFACE
HDRIOBAD DC    C'IOBAD'           FIELD HEADER IN COMMON INTERFACE
HDRHIARC DC    C'HIARC-BFTEK-BFALN' TRI HEADERS IN FOUNDATION EXTENSION
HDRBFTEK DC    C'BFTEK-HIARC-BFALN' TRI HEADERS IN FOUNDATION EXTENSION
HDRBFALN DC    C'BFALN-HIARC-BFTEK' TRI HEADERS IN FOUNDATION EXTENSION
HDREODAD DC    C'EODAD'           FIELD HEADER IN FOUNDATION EXTENSION
HDRRECFM DC    C'RECFM'           FIELD HEADER IN FOUNDATION EXTENSION
HDREXLST DC    C'EXLST'           FIELD HEADER IN FOUNDATION EXTENSION
HDRDDNAM DC    C'DDNAM'           FIELD HEADER IN CLOSED FOUNDATION
HDROFLGS DC    C'OFLGS'           FIELD HEADER IN CLOSED FOUNDATION
HDRIFLG  DC    C'IFLG'            FIELD HEADER IN CLOSED FOUNDATION
HDRMACR  DC    C'MACR'            FIELD HEADER IN CLOSED FOUNDATION
HDRTIOT  DC    C'TIOT'            FIELD HEADER IN OPEN FOUNDATION
HDRMACRF DC    C'MACRF'           FIELD HEADER IN OPEN FOUNDATION
HDRIFLGS DC    C'IFLGS'           FIELD HEADER IN OPEN FOUNDATION
HDRDEBAD DC    C'DEBAD'           FIELD HEADER IN OPEN FOUNDATION
HEADER1  DC    C'DEVICE INTERFACE SEGMENT'  DCB SECTION HEADER
HEADER2  DC    C'COMMON INTERFACE'          DCB SECTION HEADER
HEADER3  DC    C'FOUNDATION EXTENSION'      DCB SECTION HEADER
HEADER4  DC    C'FOUNDATION'                DCB SECTION HEADER
WORDZERO DC    X'00000000'        WORD OF ZEROES
HEXFFFF  DC    X'FFFF'            USED TO TURN ON PDES DESCRIBING THE
*                                 DCB FIELDS
PCLADDR  DC    V(IKJEGPCL)        ADDRESS OF PARAMETER CONTROL LIST
*                                 FOR IKJPARS
RETRYADR DC    AL3(STAERTN)       ADDR OF STAE EXIT ROUTINE
** THE FOLLOWING IS THE STAE MESSAGE TABLE                           **
STATBL   DS    0F
         DC    AL1(INST99),AL3(PARSBLOW)  PARSE LINK FAILED
         DC    AL1(HEXFF)                   END OF STATE ABEND TABLE
MOVE2    MVC   D0(L0,R11),D1(R10) MOVE FIELD INTO BUFFER
MOVE3    MVC   D4(L0,R11),D0(R10) MOVE FIELD HEADER OR DATA INTO BUFFER
STAEL    DS    0F
STAELIST ESTAE STAELIST,MF=L       LIST FORM OF STAE MACRO
STAELEN  EQU   *-STAELIST          LENGTH OF STAE LIST FORM
         EJECT
IKJEGPCL IKJPARM
ADDRESS  IKJPOSIT ADDRESS,VALIDCK=IKJEGDVK,PROMPT='ADDRESS OF DCB'
PRINT    IKJKEYWD
         IKJNAME   'PRINT',SUBFLD=DSNAME
DCBFIELD IKJKEYWD
         IKJNAME   'FIELD',SUBFLD=FIELDNAM
DSNAME   IKJSUBF
DSNAM    IKJPOSIT  DSNAME,PROMPT='DSNAME'
FIELDNAM IKJSUBF
RELAD    IKJKEYWD
         IKJNAME   'DCBRELAD'
KEYCN    IKJKEYWD
         IKJNAME   'DCBKEYCN'
FDAD     IKJKEYWD
         IKJNAME   'DCBFDAD'
DVTBL    IKJKEYWD
         IKJNAME   'DCBDVTBL'
KEYLE    IKJKEYWD
         IKJNAME   'DCBKEYLE'
DEVT     IKJKEYWD
         IKJNAME   'DCBDEVT'
TRBAL    IKJKEYWD
         IKJNAME   'DCBTRBAL'
BUFNO    IKJKEYWD
         IKJNAME   'DCBBUFNO'
BUFCB    IKJKEYWD
         IKJNAME   'DCBBUFCB'
BUFL     IKJKEYWD
         IKJNAME   'DCBBUFL'
DSORG    IKJKEYWD
         IKJNAME   'DCBDSORG'
IOBAD    IKJKEYWD
         IKJNAME   'DCBIOBAD'
HIARC    IKJKEYWD
         IKJNAME   'DCBHIARC'
FTEK     IKJKEYWD
         IKJNAME   'DCBBFTEK'
BFALN    IKJKEYWD
         IKJNAME   'DCBBFALN'
EODAD    IKJKEYWD
         IKJNAME   'DCBEODAD'
RECFM    IKJKEYWD
         IKJNAME   'DCBRECFM'
EXLST    IKJKEYWD
         IKJNAME   'DCBEXLST'
DDNAM    IKJKEYWD
         IKJNAME   'DCBDDNAM'
OFLGS    IKJKEYWD
         IKJNAME   'DCBOFLGS'
IFLG     IKJKEYWD
         IKJNAME   'DCBIFLG'
MACR     IKJKEYWD
         IKJNAME   'DCBMACR'
TIOT     IKJKEYWD
         IKJNAME   'DCBTIOT'
MACRF    IKJKEYWD
         IKJNAME   'DCBMACRF'
IFLGS    IKJKEYWD
         IKJNAME   'DCBIFLGS'
DEBAD    IKJKEYWD
         IKJNAME   'DCBDEBAD'
OFLGS2   IKJKEYWD
         IKJNAME   'DCBOFLG2'
         IKJENDP
         EJECT
         IKJPARMA
         EJECT
         IKJPPL
         EJECT
CVT      DSECT
         CVT
         EJECT
         IKJTCB
         EJECT
         TCOMTAB
         EJECT
         TSTCWORK
         EJECT
         DCBD  DSORG=PS,DEVD=DA
         EJECT
DCBWKARA DSECT
PPLLIST  DS    7F       PARSE PARAMETER LIST DESCRIBED IN IKJPPL
*                       MACRO
HDRBUFFR DS    5F       BUFFER FOR ONE FIELD HEADER
PRINTFLG DS    F        ADDRESS OF DSNAME PDE FOR IKJEGIO
ENDEND   DS    F        ADDRESS OF LAST FIELD PDE + 2
DDNAMBUF DS    2F       BUFFER FOR DDNAM FIELD
OUTPTR1  DS    F        FIRST OUTPUT POINTER FOR IKJEGIO
OUTPTR2  DS    F        SECOND OUTPUT POINTER FOR IKJEGIO
** THE FOLLOWING FIELD IS INITIALIZED IN THE DCBIO ROUTINE.  BEFORE  **
** RETURNING TO IKJEGMNL THIS FIELD IS CHECKED FOR A 0 INDICATING    **
** IKJEGIO WAS NOT CALLED TO OUTPUT A FIELD.                         **
REG14    DS    F        REGISTER 14 SAVEAREA
REG15    DS    F        RETURN CODE SAVEAREA
HDROFFST DS    CL2      OFFSET FOR FORMATTING
FLDOFFST DS    CL2      OFFSET FOR FORMATTING
HDRLENTH DS    CL1      LENGTH OF PRECEDING FIELD HEADER
FLDLENTH DS    CL1      LENGTH OF DCB FIELD
OUTPUTSW DS    CL1      OUTPUT FLAGS
HDRCOUNT DS    CL1      NUMBER OF SECTION HEADERS ALREADY OUT
** THE FOLLOWING FOUR FIELDS MAKE UP THE PARAMETER LIST FOR IKJEGCVT **
STRNGPTR DS    F        POINTER TO FIELD TO BE CONVERTED
CVTLL    DS    CL2      LENGTH OF FIELD TO BE CONVERTED
FLAGS    DS    CL1      FLAG FOR IKJEGCVT
TYPECODE DS    CL1      TYPE OF INPUT DATA TO IKJEGCVT (HEX)
LINELEN  DS    H        OUTPUT LINE LENGTH
STAEL2   DS    0F
STAEAREA DS    3F       WORKAREA FOR STAE
DATAREGS DS    2F       WORK REGISTER SAVE ON DATA I/O CALL
         END
