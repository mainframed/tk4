     TITLE 'IKJEGDEB - TSO TEST LIST DEB ROUTINE'
* /* START OF SPECIFICATIONS ****
*02*  PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
***********************************************************************
*                                                                     *
* STATUS --                                                           *
*    CHANGE LEVEL 00, VERSION NO. 02, OS/VS2                          *
*                                                                     *
* FUNCTION/OPERATION --                                               *
*    THIS SUBCOMMAND PROCESSOR RECEIVES CONTROL FROM THE TEST MA      *
*    LINE PROGRAM.  IT DISPLAYS ALL OR PART OF THE DEB AT THE         *
*    SPECIFIED ADDRESS.                                               *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEGDEB - MAIN ENTRY TO LISTDEB                            *
*         DEBVALCK - PARSE VALIDITY CHECK EXIT FOR ADDRESS OF DEB     *
*                                                                     *
* INPUT --                                                            *
*    ONE LINE OF INPUT FROM THE TERMINAL CONTAINING THE SUBCOMMAND    *
*                                                                     *
* OUTPUT --                                                           *
*    LINES OF OUTPUT TO THE TERMINAL OR SPECIFIED DATA SET CONTAINING *
*    DESCRIPTIVE HEADERS AND THE REQUESTED DEB FIELDS.                *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         1.  IKJPARS  - TO SCAN THE INPUT BUFFER                     *
*         2.  IKJEGCVT - TO CHECK AND CONVERT THE ADDRESS,            *
*         AND TO CONVERT THE DEB TO PRINTABLE HEX                     *
*         3.  IKJEGIO  - TO OUTPUT THE HEADER AND DEB FIELDS          *
*                                                                     *
* EXITS, NORMAL --                                                    *
*         RETURN TO IKJEGMNL VIA REGISTER 14                          *
*                                                                     *
* EXITS, ERROR --                                                     *
*         RETURN TO IKJEGMNL VIA REGISTER 14                          *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    TCOMTAB - TEST TABLE AND WORKAREA                                *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REENTRANT, REFRESHABLE                                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    RE-ASSEMBLY IS REQUIRED FOR CHANGE OF CODE                       *
*                                                                     *
* NOTES --                                                            *
*    THE LISTDEB ROUTINE WILL PRINT ONLY THE BASIC SECTION AND ANY    *
*    DIRECT ACCESS SECTIONS OF THE SPECIFIED DEB.                     *
*    THE SPECIFIED DEB IS ASSUMED TO BE A VALID DEB.                  *
*                                                                     *
***********************************************************************
         EJECT
         COPY IKJEGSIO
         TCOMTAB
         SPACE 2
         TSTCWORK
         SPACE 2
         IKJPPL
         SPACE 2
         IKJPARMA
         EJECT
         DCBD  DSORG=PS
         EJECT
IKJEGDEB CSECT
***********************************************************************
*                                                                     *
*                            REGISTER EQUATES                         *
*                                                                     *
***********************************************************************
         SPACE 2
R0       EQU   0                   REGISTER 0
R1       EQU   1                   REGISTER 1
R2       EQU   2                   REGISTER 2
R3       EQU   3                   REGISTER 3 - BASE FOR DEB
R4       EQU   4                   REGISTER 4
R5       EQU   5                   BASE FOR DBWKAREA
R6       EQU   6                   REGISTER 6
R7       EQU   7                   REGISTER 7
R8       EQU   8                   BASE FOR IKJPARMD
R9       EQU   9                   BASE FOR TCOMTAB
R10      EQU   10                  REGISTER 10
R11      EQU   11                  REGISTER 11
R12      EQU   12                  PROGRAM BASE
R13      EQU   13                  REGISTER 13
R14      EQU   14                  REGISTER 14
R15      EQU   15                  REGISTER 15
         SPACE 2
***********************************************************************
*                                                                     *
*        OTHER EQUATES                                                *
*                                                                     *
***********************************************************************
         SPACE 2
BADESTAE EQU   24                  RETURN CODE FOR UNSUCCESSFUL ESTAE
M0040    EQU   40                  MESSAGE NUMBER
M0041    EQU   41                  MESSAGE NUMBER
M0103    EQU   103                 MESSAGE NUMBER
M0247    EQU   247                 MESSAGE NUMBER
M0248    EQU   248                 MESSAGE NUMBER
M0268    EQU   268                 MESSAGE NUMBER
M0298    EQU   298                 MESSAGE NUMBER
N30      EQU   30                  DECIMAL 30
N0       EQU   0                   DECIMAL 0
N1       EQU   1                   DECIMAL 1
N2       EQU   2                   DECIMAL 2
N3       EQU   3                   DECIMAL 3
N4       EQU   4                   DECIMAL 4
N5       EQU   5                   DECIMAL 5
N104     EQU   104                 DECIMAL 104
N8       EQU   8                   DECIMAL 8
N11      EQU   11                  DECIMAL 11
N12      EQU   12                  DECIMAL 12
N15      EQU   15                  DECIMAL 15
N16      EQU   16                  DECIMAL 16
N20      EQU   20                  DECIMAL 20
N24      EQU   24                  DECIMAL 24
N32      EQU   32                  DECIMAL 32
N40      EQU   40                  DECIMAL 40
N56      EQU   56                  DECIMAL 56
N68      EQU   68                  DECIMAL 68
N79      EQU   79                  DECIMAL 79
N80      EQU   80                  DECIMAL 80
NOTSYM   EQU   10                  BC INSTR MASK, BRANCH POSTIVE OR 0
         SPACE 2
***********************************************************************
*                                                                     *
*        TO LIMIT THE SIZE OF IKJEGDEB, THE MAJORITY OF THE FIELD     *
*        HEADERS HAVE BEEN EQUATED TO FIELDS IN THE PARSE CSECT,      *
*        IKJEGDBP.  THOSE EQUATES ARE AT THE END OF THE MODULE.  THE  *
*        FOLLOWING EQUATES SET UP THOSE FIELD HEADER EQUATES.         *
*                                                                     *
***********************************************************************
         SPACE 2
LENKEYWD EQU   6                   LENGTH OF IKJKEYWD PCE
LENNAME  EQU   13                  LENGTH OF IKJNAME PCE
FLDHDR   EQU   LENKEYWD+LENNAME    NORMAL DISPLACEMENT BETWEEN FIELD
*                                   HEADERS IN PARSE CSECT, IKJEGDBP
FIRSTHDR EQU   108                 DISPLACEMENT INTO PARSE CSECT,
*                                   IKJEGDBP, OF FIRST FIELD HDR, NMSUB
         EJECT
         SAVE  (14,12),,*
         LR    R12,R15
         USING IKJEGDEB,R12        ESTABLISH PROGRAM ADDRESSABILITY
         USING TCOMTAB,R9          ESTABLISH TCOMTAB ADDRESSABILITY
         L     R15,REGSAVE2        ADDRESS OF LISTDEB SAVE AREA
         ST    R13,N4(R15)         STORE REGISTER 13 NEW SAVE AREA
         ST    R15,N8(R13)         STORE NEW SAVE AREA ADDRESS
         LR    R13,R15             R13 NOW POINTS TO NEW SAVE AREA
         L     R7,WORKAREA         ADDR OF GENERAL WORK AREA FOR CMDS
         USING TSTCWORK,R7
         LA    R5,CWORKCMD         ADDRESS OF WORK AREA FOR CMDS
         USING DBWKAREA,R5         ESTABLISH WORK AREA ADDRESSABILITY
         DROP  R7
         L     R3,TSTSTAE          ADDRESS OF STAE EXIT ROUTINE
         LA    R1,STAELIST         STAE PARAMETER LIST
         ST    R12,N68(R13)        SAVE MY BASE IN MY SAVE AREA
         MVC   N0(N16,R1),LFSTAE   STAE PARAMETER LIST TO WORK AREA
         ESTAE (R3),CT,PARAM=IKJEGSPL,RECORD=YES,XCTL=NO,MF=(E,(R1))
         LTR   R15,R15             WAS STAE ISSUED SUCCESSFULLY
SMTSTAE  DS    0H                  SMT TESTCASE LABEL
*                                   INSUFFICIENT CORE TO ISSUE STAE
*                                   TESTCASE ID  TDEB2800
         BZ    GOPARSE             YES, GO SET UP TO PARSE COMMAND
         STC   R15,TSTESTRC        SAVE RETURN CODE FOR MAINLINE
         LA    R15,BADESTAE        PASS BACK A BAD ESTAE RTN CODE
         B     DEBRET              BRANCH TO EXIT
GOPARSE  DS    0H
         MVI   OUTPUTSW,HEX00      ZERO OUTPUT SWITCH
         LR    R1,R5               R1 POINTS TO LIST FOR PARSE
         USING PPL,R1
         MVC   PPLUPT(N4),TSTUPT   POINTER TO UPT FOR PARSE
         MVC   PPLECT(N4),TSTECT   POINTER TO ECT FOR PARSE
         MVC   PPLECB(N4),TSTCPECB POINTER TO CP ECB FOR PARSE
         MVC   PPLPCL(N4),PCLADDR  ADDR OF PCL INTO PARSE LIST
         LA    R2,TSTANSPL         LOAD ADDRESS OF ANSWER PLACE
         ST    R2,PPLANS           PTR TO ANSWER PLACE
         MVC   PPLCBUF(N4),INBUF   PTR TO COMMAND BUFFER
         ST    R13,PPLUWA          PTR TO SAVE AREA
         DROP  R1
         LINK  EP=IKJPARS,ERRET=LINKFAIL     GO TO PARSE
PABEND1  DS    0H                  POSSIBLE ABEND RESUME ADDRESS
         B     LINKOK              IF CONTROL COMES HERE SVC 6 OK
LINKFAIL DS    0H
         LR    R2,R1               TRANSFER THE ABEND CODE
         LR    R3,R15              TRANSFER THE RETURN CODE
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(R2),RC=(R3),ID=DEB11,          *
               INST11=(NUM,I0040),MF=(E,TSTIOPRM)     CALL I/O
         B     DEBRET              BRANCH TO TEST RTN CODE AND EXIT
LINKOK   DS    0H
SMTPARS  DS    0H                  SMT TESTCASE LABEL
*                                   LINK TO PARSE FAILED
*                                   TESTCASE ID  TDEB2700
         B     PARSDONE            GO TO PARSDONE
         SPACE 1
***********************************************************************
*   THIS IS THE PARSE ADDRESS VALIDITY CHECK EXIT ROUTINE             *
***********************************************************************
         SPACE 1
DEBVALCK SAVE  (14,12),,*
         LR    R2,R1               ADDR OF PARSE LIST FOR VALIDITY
*                                   CHECK ROUTINES
         L     R9,N4(R1)           LOAD R9 WITH ADDRESS OF SAVE AREA
         L     R12,N68(R9)         RESTORE BASE REGISTER
         L     R5,N40(R9)          RESTORE WORKAREA ADDRESSABILITY
         L     R1,N0(R1)           ADDRESS OF ADDRESS PDE
         LCR   R1,R1               NEGATIVE
         L     R9,N56(R9)          RESTORE TCOMTAB ADDRESSABILITY
         L     R15,REGSAVE3        LOAD SAVE AREA FOR IKJEGCVT
         LCR   R0,R1               R0 INDICATES CONVERT TO BINARY
         ST    R13,N4(R15)         STORE OLD SAVE AREA ADDRESS
         ST    R15,N8(R13)         STORE NEW SAVE AREA ADDRESS
         LR    R13,R15
         L     R15,OUTBUF          PICK UP POINTER TO OUTBUF
         SR    R14,R14             ZERO FOR NO MSG DEFAULT VALUE
         ST    R14,N0(R15)         STORE NO MSG INDICATOR
         OI    TSTFLGS4,TSTVALCK   TURN ON VALIDITY CHECK BIT
         L     R15,TSTCONVT        ENTRY POINT OF IKJEGCVT
         BALR  R14,R15             GO TO IKJEGCVT
         LPR   R1,R1               POSTIVE POINTER TO ADDRESS PDE
         USING IKJPARMA,R1         R1 IS BASE FOR ADDRESS PDE
         LTR   R15,R15             IS RETURN CODE 0
         BZ    BOUNDCK             YES, GO CHECK FOR VALID ADDRESS
         LA    R6,N4               UNSUCCESSFUL R.C. FROM CONVERT
         CR    R6,R15              WAS CONVERT UNABLE TO CONVERT
         BNE   STOP                NO, WORST TROUBLES, GO SET TO END
RETCODE8 DS    0H
         LA    R15,N8              RC=8, PARSE GIVE REENTER MESG
PARSRTN  DS    0H
         NI    TSTFLGS4,HEXFF-TSTVALCK TURN OFF VALIDITY CHECK BIT
         L     R13,N4(R13)
         L     R5,OUTBUF           PICK UP POINTER TO OUTBUF
         LH    R6,N0(R5)           PICK MSG LENGTH FIELD
         LTR   R6,R6               TEST FOR PRESENTS OF MSG
         BZ    NO2NDMSG            IF ZERO THEN THERE ISN'T A MESSAGE
         L     R1,N24(R13)         PICK UP POINTER TO PARSE PARM LIST
         ST    R5,N8(R1)           STORE ADDRESS OF MESSAGE IN PARM L
NO2NDMSG DS    0H
         RETURN  (14,12),,RC=(15)  RESTORE REGISTERS AND RETURN
BOUNDCK  DS    0H
         L     R3,PDEUSER          LOAD BINARY DEB ADDRESS
         LTR   R3,R3               WAS ADDRESS SYMBOLIC ?
         BC    NOTSYM,NOSYM        BRANCH IF NOT SYMBOLIC
         L     R3,N0(R3)           LOAD CONVERTED SYMBOLIC ADDR
         ST    R3,PDEUSER          PDEUSER NOW POINTS TO DEB
NOSYM    DS    0H
         L     R6,REGSAVE2         GET DEB'S SAVE AREA ADDRESS
         ST    R3,N32(R6)          POINT DEB'S R3 TO DEB
REGTEST  DS    0H
         LH    R4,PDEINDCT         LOAD INDIRECT COUNT
         LTR   R4,R4               IS ADDRESS INDIRECT
         BNZ   FULLWORD            IF INDIRECT BRANCH
         TM    PDEFLG4,GENR+LFPR+SFPR  IS ADDRESS A REGISTER ?
         BZ    FULLWORD            IF NOT REGISTER BRANCH
         LA    R3,M0268            PICK UP SECOND LEVEL MESSAGE NUMBER
         B     MESSAGIO            PUT OUT THE MESSAGE
FULLWORD DS    0H
         TM    PDEUSER+N3,HEX03    ADDRESS ON FULL WORD
         BNZ   SETMESG             NO, GO GIVE INVALID ADDRESS MESSAGE
         LA    R4,N32(R3)          ESTAB ENDING ADDR OF DEB
         L     R7,PPTCB            GET PP'S TCB ADDRESS
         IKJEGS9G ADDRCHK,TCBADDR=(R7),VALUE=(R4),MF=(E,SVCPARMS)
         C     R15,EIGHT           IS ADDRESS VALID ?
         BE    BADDEB              NO, BAD DEB ADDR PRINT MESSAGE
         BH    STOP                ERROR  ENCOUNTERED IN SVC 97
         LA    R1,DEBBASND-DEBBASIC-N1(R3) ADDR END BASIC SEC.
PARDCB1  DS    0H                  NEXT INSTRUCTION MAY ABEND
         L     R4,DEBDCBAD-DEBBASIC(R3)  GET DCB ADDRESS
PARDCB2  DS    0H                  PRECEDING INSTR MAY ABEND
         LA    R4,DCBDSORG-IHADCB(R4)  GET ADDRESS OF DEB'S DCB
         L     R7,PPTCB            GET PP'S TCB ADDRESS
*                                  CHECK DCBDSORG FOR READABILIT
         IKJEGS9G ADDRCHK,TCBADDR=(R7),VALUE=(R4),MF=(E,SVCPARMS)
         C     R15,EIGHT           IS ADDRESS OK ?
         BE    BADDEB              NO, DCB ADDRESS BAD - BAD DEB
         BH    STOP                ERROR ENCOUNTERED IN SVC 97
         LA    R1,DEBBASND-DEBBASIC-N1(R3) ADDR END BASIC SEC.
         TM    DCBDSORG-IHADCB(R4),ISAM ISDEB FOR ISAM DATA SET?
         BZ    NOTISAM             NOT ISAM, FORGET ADDED LENGTH
         LA    R1,DEBEXPTA-DEBISAM+L'DEBEXPTA(R1)  ADD LEN ISAM
NOTISAM  DS    0H                  CHECK FOR EXTENTS
         SR    R0,R0               CLEAR REGISTER TO ZERO
PARNMEX1 DS    0H                  NEXT INSTRUCTION MAY ABEND
         IC    R0,DEBNMEXT-DEBBASIC(R3) NUM EXTENTS IN DATASET
PARNMEX2 DS    0H                  PREVIOUS INSTR MAY ABEND
         SLA   R0,N4               MULTIPLY BY 16-LEN OF DA SECT
         AR    R0,R1               ENDING ADDRESS OF DEB
         L     R7,PPTCB            GET ADDRESS OF PP'S TCB
         LR    R8,R0               GET ADDRESS OF END OF DEB
         IKJEGS9G ADDRCHK,TCBADDR=(R7),VALUE=(R8),MF=(E,SVCPARMS)
         C     R15,EIGHT           IS RETURN CODE 0 OR 4 ?
         BE    BADDEB              NO, BAD DEB ADDR PRINT MESSAGE
         BH    STOP                ERROR ENCOUNTERED IN SVC 97
         SR    R15,R15             SET RETURN CODE TO 0
         B     PARSRTN             ADDRESS OK - RETURN TO PARSE
BADDEB   DS    0H
         LA    R3,M0298            OBTAIN SECOND LEVEL MESSAGE NUMBER
         B     MESSAGIO            GO GIVE MESSAGE
SETMESG  DS    0H
         L     R2,N0(R2)           PICK UP ADDRESS PDE POINTER
         XC    TSTIOPRM,TSTIOPRM   CLEAR OUT PARM LIST FOR I/O
         IKJEGSIO MSG,FIRST=M0101,INST11=(APDE,(R2)),SECOND=M0280, CALL*
               INST21=(NUM,I0003),ID=DEB11,MF=(E,TSTIOPRM) IO ISSUE MSG
         B     IOPARSE             RETURN TO PARSE
MESSAGIO DS    0H
         L     R2,N0(R2)           PTR TO ADDRESS PDE
         XC    TSTIOPRM,TSTIOPRM   CLEAR OUT PARM LIST FOR I/O
         IKJEGSIO MSG,FIRST=M0101,INST11=(APDE,(R2)),SECOND=(R3), CALL *
               ID=DEB11,MF=(E,TSTIOPRM) IO ISSUE ERROR MSG
IOPARSE  DS    0H
         LTR   R15,R15             IS RETURN CODE 0
         BZ    RETCODE8            YES, GO BACK TO PARSE WITH RC=8
         LA    R6,N4               UNSUCCESSFUL I/O R.C.
         CR    R15,R6              COULD I/O PUT OUT MESSAGE
         BNE   STOP                WORST TROUBLES, GO SAVE R.C.
         SR    R15,R15             CREATE 0 R.C. FOR MAINLINE
STOP     DS    0H
         ST    R15,REG14           SAVE R.C.
         LA    R15,N12             HAVE PARSE CLEAN UP AND END
         B     PARSRTN             GO BACK TO PARSE
         SPACE 1
***********************************************************************
* THE FOLLOWING CODE CHECKS THE FIELD,PRINT, AND ADDRESS PDE'S.  IF   *
* FIELD IS NOT SPECIFIED, THE PROGRAM SETS ALL THE FIELD PDE'S        *
* NON-ZERO.  IF PRINT IS SPECIFIED THE ADDRESS OF THE PRINT DATA SET  *
* PDE IS STORED IN PRINTFLG AND LATER PASSED TO IKJEGIO1.  THE ADDRESS*
* OF THE DEB IS FOUND IN THE USER WORD OF THE PARSE PARM LIST AFTER   *
* CONTROL IS RETURNED FROM IKJEGCVT.                                  *
***********************************************************************
         SPACE 1
PARSDONE DS    0H
         LTR   R15,R15             IS RETURN CODE 0
         BNZ   DEBRET1             IF NO BRANCH TO DEBRET1
DCBTRY1  DS    0H                  NEXT INSTRUCTION MAY ABEND
         L     R6,DEBDCBAD-DEBBASIC(R3) ADDR DCB FOR THIS DEB
DCBTRY2  DS    0H                  PREV / NEXT INSTRS MAY ABEND
         TM    DCBDSORG-IHADCB(R6),ISAM IS DEB ISAM DATA SET?
PABEND2  DS    0H
         BZ    NOTISAM1            NO, GO ON
         OI    OUTPUTSW,ISAMBIT    YES, INDICATE FOR LATER PROCESSING
NOTISAM1 DS    0H
         L     R8,TSTANSPL         FIND ADDRESS OF PARSE PDL
         USING IKJPARMD,R8         ESTABLISH PDL ADDRESSABILITY
         CLI   DEBFIELD+N1,HEX00   WAS FIELD SPECIFIED
         BNE   PRINTCHK            IF SPECIFIED CHECK FOR PRINT KEYWORD
         OI    OUTPUTSW,ALLCHECK
         MVI   NMSUB,HEXFF         INDICATE THAT FIRST FIELD IS DESIRED
         MVC   NMSUB+N1(NMTRK-NMSUB+N1),NMSUB  INDICATE ALL FDS
PRINTCHK DS    0H
         CLI   PRINT+N1,HEX00      WAS A PRINT DATA SET SPECIFIED
         BNE   PRNTSPEC            IF NOT ZERO PRINT WAS SPECIFIED
         SR    R2,R2
         B     TABLESCN            GO CHECK OUTPUT LINE LENGTH
PRNTSPEC LA    R2,DSNAM
         OI    TSTFLGS1,TSTPRINT
         EJECT
***********************************************************************
* THE FOLLOWING CODE STARTS WITH THE FIRST FIELD PDE AND DETERMINES   *
* WHETHER OR NOT THE FIELD CORRESPONDING TO THAT PDE IS DESIRED.  IF  *
* IT IS, CONTROL IS PASSED TO THE PROPER SUBROUTINE.  IF NOT, THE NEXT*
* PDE IS CHECKED UNTIL ALL THE PDE'S HAVE BEEN EXAMINED.              *
***********************************************************************
         SPACE 1
TABLESCN DS    0H
         LA    R4,N40              MINIMUM LINE LENGTH
         CH    R4,TMPLL            IS USER SPECIFIED LINE LENGTH LESS
         BH    LL80                YES, GO USE 80 FOR LINE LENGTH
         LA    R4,N80              NO, MAXIMUM LINE LENGTH
         CH    R4,TMPLL            IS SPECIFIED LINE LENGTH GREATER
         BL    LL80                YES, GO USE 80 FOR LINE LENGTH
         LH    R4,TMPLL            NO, USE SPECIFIED LINE LENGTH
         B     LINESET             GO SET LINE LENGTH
LL80     LA    R4,N80              DEFAULT LINE LENGTH TO 80
LINESET  ST    R4,LINELEN          STORE LINE LENGTH
         ST    R2,PRINTFLG         INDICATE OUTPUT TO TERM OR DS
         L     R10,OUTBUF          ADDRESS OF OUTPUT BUFFER
         MVI   N4(R10),BLANK       CLEAR OUTPUT
         MVC   N5(N79,R10),N4(R10)  BUFFER TO BLANKS
         LA    R11,BUFFER          ADDR OF DEB BUFF FOR CONVERTED FLDS
         MVC   N0(N80,R11),N4(R10) CLEAR DEB FIELD BUFFER
NMTRY1   DS    0H                  NEXT INSTRUCTION MAY ABEND
         MVC   NMEXTSTR(N1),DEBNMEXT-DEBBASIC(R3)  NUM OF EXTS
NMTRY2   DS    0H                  PREV NEXT INSTRS MAY ABEND
         MVC   EXTCTR(N1),DEBNMEXT-DEBBASIC(R3) ALSO IN EXT CTR
NMTRY3   DS    0H                  PREV & NEXT INSTRS MAY ABEND
         CLI   DEBEXSCL-DEBBASIC(R3),HEX04 IS DEB A DASD DATASET
EXTRY1   DS    0H                  PREVIOUS INSTR MAY ABEND
         BE    CHECKEXT            YES, GO CHECK NUMBER OF EXTENTS
         OI    OUTPUTSW,NOTDASD    NO, INDICATE WHY NO DASD SECTION
         B     SETPTRS             GO SET UP TO SEARCH FIELD PDE
CHECKEXT DS    0H
         CLI   DEBNMEXT-DEBBASIC(R3),HEX00  ARE THEIR EXTENTS
EXTRY2   DS    0H                  PREVIOUS INSTR MAY ABEND
         BNE   SETPTRS             YES, GO SET UP FIELD PDE SEARCH
         OI    OUTPUTSW,NOEXTENT   NO, INDICATE WHY NO DASD SECTION
SETPTRS  DS    0H
         LA    R2,DVMOD
         ST    R2,FSTPDEND         ADDR OF 1ST PDE OF 2ND SECTION
         LA    R2,NMTRK            ADDR OF LAST PDE OF 2ND SECTION
         LA    R2,N2(R2)           ADDRESS GREATER THAN LAST PDE
         ST    R2,LASTPDE          SAVE FOR END INDICATOR
         LA    R6,NMSUB            POINT TO FIRST PDE
         SR    R2,R2
         L     R4,PCLADDR          ADDRESS OF PARSE CSECT
         USING IKJEGDBP,R4
PDECHECK CLI   N1(R6),HEX00        WAS THIS FIELD SPECIFIED
         BNE   SBRTNSVR            IF FIELD IS REQUESTED BRANCH
         LA    R6,N2(R6)           OTHERWISE POINT TO NEXT PDE
         C     R6,LASTPDE          ARE THERE MORE PDES
         BE    PDLEND              IF NO MORE BRANCH TO PDLEND
         B     PDECHECK            CHECK THE NEXT PDE
SBRTNSVR DS    0H
         LR    R11,R6              PRESERVE R6
         LA    R7,NMSUB            ADDRESS OF FIRST PDE
         SR    R11,R7              FIND RELATIVE POSITION OF PDE
         LA    R10,N11             LOAD MULT FACTOR - EACH
*                                  SUBRTN IS 22 BYTES
*                                  LONG, 11 IS HALF
         LA    R7,SUBTAB1          LOAD ADDRESS OF TABLE
         MR    R10,R10             COMPUTE PROPER OFFSET
         AR    R7,R11              ADD OFFSET TO BASE
         BR    R7                  GO TO PROPER SUBROUTINE
         EJECT
***********************************************************************
*   THE FOLLOWING CODE CONSISTS OF 26 SUBROUTINES CORRESPONDING       *
*   TO THE 26 FIELDS OF THE DEB.  EACH SUBROUTINE MOVES THE RELATIVE  *
*   ADDRESS, HEADER LENGTH, FIELD LENGTH, AND HEADER TO A COMMON      *
*   BUFFER.  CONTROL IS THEN PASSED TO A COMMON CONVERSION AND        *
*   I/O ROUTINE.  IT IS ESSENTIAL FOR PROPER LOGIC FLOW THAT EACH     *
*   SUBROUTINE HAVE THE SAME LENGTH                                   *
***********************************************************************
         SPACE 1
SUBTAB1  DS    0H
DEB00B   MVC   HDRBUF(N5),HDRNMSUB FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF FIELD HEADER
         MVI   FLDLEN,L'DEBNMSUB   LENGTH OF DEB FIELD
         MVI   RELADR,DEBNMSUB-DEBBASIC DISP OF FIELD INTO DEB
         B     HEADERCK            GO CHECK FOR SECTION HEADER
DEB01B   MVC   HDRBUF(N5),HDRTCBAD FIELD HEADER TO FIELD BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBTCBB    LENGTH OF DEB FIELD
         MVI   RELADR,DEBTCBB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB04B   MVC   HDRBUF(N5),HDRAMLNG FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBAMLNG   LENGTH OF DEB FIELD
         MVI   RELADR,DEBAMLNG-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB05B   MVC   HDRBUF(N5),HDRDEBAD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBDEBB    LENGTH OF DEB FIELD
         MVI   RELADR,DEBDEBB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB08B   MVC   HDRBUF(N5),HDROFLGS FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBOFLGS   LENGTH OF DEB FIELD
         MVI   RELADR,DEBOFLGS-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB11B   MVC   HDRBUF(N5),HDRIRBAD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBIRBB    LENGTH OF DEB FIELD
         MVI   RELADR,DEBIRBB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB12B   MVC   HDRBUF(N5),HDROPATB FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBOPATB   LENGTH OF DEB FIELD
         MVI   RELADR,DEBOPATB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB13B   MVC   HDRBUF(N5),HDRQSCNT FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBQSCNT   LENGTH OF DEB FIELD
         MVI   RELADR,DEBQSCNT-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB14B   MVC   HDRBUF(N5),HDRFLGS1 FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBFLGS1   LENGTH OF DEB FIELD
         MVI   RELADR,DEBFLGS1-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB15B   MVC   HDRBUF(L'HDRRSRVD),HDRRSRVD
         MVI   HDRLEN,L'HDRRSRVD   LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,N1           LENGTH OF DEB FIELD
         MVI   RELADR,N15          DISPLACEMENT OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB16B   MVC   HDRBUF(N5),HDRNMEXT FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBNMEXT   LENGTH OF DEB FIELD
         MVI   RELADR,DEBNMEXT-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB17B   MVC   HDRBUF(N5),HDRUSPRG FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBUSRPB   LENGTH OF DEB FIELD
         MVI   RELADR,DEBUSRPB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB20B   MVC   HDRBUF(N5),HDRPRIOR FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBPRIOR   LENGTH OF DEB FIELD
         MVI   RELADR,DEBPRIOR-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB21B   MVC   HDRBUF(N5),HDRECBAD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBECBB    LENGTH OF DEB FIELD
         MVI   RELADR,DEBECBB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB24B1  MVC   HDRBUF(L'HDRPROTG),HDRPROTG
         MVI   HDRLEN,L'HDRPROTG   LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBPROTG   LENGTH OF DEB FIELD
         MVI   RELADR,DEBPROTG-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB25B   MVC   HDRBUF(N5),HDRDCBAD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBDCBB    LENGTH OF DEB FIELD
         MVI   RELADR,DEBDCBB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB28B   MVC   HDRBUF(N5),HDREXSCL FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBEXSCL   LENGTH OF DEB FIELD
         MVI   RELADR,DEBEXSCL-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
DEB29B   MVC   HDRBUF(N5),HDRAPPAD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBAPPB    LENGTH OF DEB FIELD
         MVI   RELADR,DEBAPPB-DEBBASIC DISP OF FIELD INTO DEB
         B     CVTANDIO            GO CONVERT FIELD TO PRINTABLE
         EJECT
***********************************************************************
*   THE FOLLOWING ROUTINES HANDLE THE DIRECT ACCESS SECTIONS          *
***********************************************************************
         SPACE 1
DEB00DA  MVC   HDRBUF(N5),HDRDVMOD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBDVMOD   LENGTH OF FIELD
         MVI   RELADR,DEBDVMOD-DEBDASD DISPL FIELD INTO DASD SEC
         B     FIRSTSEC            GO CHECK FOR ALL FIELDS REQUESTED
DEB01DA  MVC   HDRBUF(N5),HDRUCBAD FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBUCBA    LENGTH OF DEB FIELD
         MVI   RELADR,DEBUCBA-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
DEB04DA  MVC   HDRBUF(N5),HDRBINUM FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBBINUM   LENGTH OF DEB FIELD
         MVI   RELADR,DEBBINUM-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
DEB06DA  MVC   HDRBUF(N5),HDRSTRCC FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBSTRCC   LENGTH OF DEB FIELD
         MVI   RELADR,DEBSTRCC-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
DEB08DA  MVC   HDRBUF(N5),HDRSTRHH FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBSTRHH   LENGTH OF DEB FIELD
         MVI   RELADR,DEBSTRHH-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
DEB10DA  MVC   HDRBUF(N5),HDRENDCC FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBENDCC   LENGTH OF DEB FIELD
         MVI   RELADR,DEBENDCC-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
DEB12DA  MVC   HDRBUF(N5),HDRENDHH FIELD HEADER TO HEADER BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBENDHH   LENGTH OF DEB FIELD
         MVI   RELADR,DEBENDHH-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
DEB14DA  MVC   HDRBUF(N5),HDRNMTRK FIELD HEADER TO FIELD BUFFER
         MVI   HDRLEN,N5           LENGTH OF DEB FIELD HEADER
         MVI   FLDLEN,L'DEBNMTRK   LENGTH OF DEB FIELD
         MVI   RELADR,DEBNMTRK-DEBDASD DISPL FIELD INTO DASD SEC
         B     SECNDSEC            GO CHECK POINTER TO DASD SECTION
         EJECT
*
*        ANALYZE POSITION IN DEB
*
FIRSTSEC DS    0H
         TM    OUTPUTSW,ANYSECND   IS THEIR A DIRECT ACCESS SECTION
         BM    NOSECOND            NO, GO CLEAN UP AND GIVE MESSAGE
         TM    OUTPUTSW,ALLCHECK   ARE ALL FIELDS REQUESTED
         BO    HEADERCK            YES, GO PUT OUT DASD SECTION HDR
SECNDSEC DS    0H
         TM    OUTPUTSW,ANYSECND   IS THEIR A DIRECT ACCESS SECTION
         BM    NOSECOND            NO, GO CLEAN UP AND GIVE MESSAGE
         TM    OUTPUTSW,DASDSEC    IS POINTER TO SECOND SECTION OK
         BO    CVTANDIO            YES, GO CONVERT FIELD
         LTR   R2,R2               IS THEIR PREVIOUS OUTPUT
         BZ    SETSECPT            NO, GO POINT TO DASD SECTION
         L     R10,OUTBUF          POINT TO OUTPUT BUFFER
         LA    R14,N2(R2)          SET LENGTH OF OUTPUT
         SLL   R14,N16             LENGTH IN HIGH ORDER HALF
         ST    R14,N0(R10)         PREFIX OUTPUT WITH LENGTH
         NI    OUTPUTSW,(HEXFF-FLDCHECK)
         OI    OUTPUTSW,HDRCHECK
         BAL   R14,DEBIO           GO PUT OUT FIRST SECTION HDRS
*                                   AND FIELD DATA
         SR    R2,R2               NO OUTPUT TO PUT OUT
SETSECPT DS    0H
         LA    R3,DEBBASND-DEBBASIC(R3)  POINT TO SEC SEC-DASD
         TM    OUTPUTSW,ISAMBIT    IS DEB FOR A ISAM DATASET
         BZ    NOTISAM2            NO, GO ON
         LA    R3,DEBEXPTA-DEBBASND+L'DEBEXPTA(R3) YES,SKIP ISAM
NOTISAM2 DS    0H
         OI    OUTPUTSW,DASDSEC    INDICATE POINTER TO DASD SEC OK
         B     CVTANDIO            GO CONVERT DEB FIELD
HEADERCK DS    0H
         TM    OUTPUTSW,ALLCHECK   ARE ALL FIELDS REQUESTED
         BZ    CVTANDIO            IF NO PROCESS THE FIELD
         LTR   R2,R2               IS THERE PREVIOUS OUTPUT
         BZ    NOOUTPUT            NO, GO GET SECTION HEADERS
         L     R10,OUTBUF          POINT TO OUTPUT BUFFER
         LA    R14,N2(R2)          SET LENGTH OF OUTPUT
         SLL   R14,N16             LENGTH IN HIGH ORDER HALFWORD
         ST    R14,N0(R10)         STORE IN OUTPUT BUFFER
         NI    OUTPUTSW,(HEXFF-FLDCHECK) INDICATE NOT A FIELD
         OI    OUTPUTSW,HDRCHECK   INDICATE A HEADER
         BAL   R14,DEBIO           PUT OUT HEADER AND FIELD
         SR    R2,R2               RESET OUTPUT COUNTER
NOOUTPUT C     R6,FSTPDEND         IN SECTION1 OR SECTION2
         L     R10,OUTBUF          POINT TO OUTPUT BUFFER
         BNL   SECT2IO             IF IN SECTION2 BRANCH
         MVC   N4(L'HEADER1,R10),HEADER1
         LA    R14,L'HEADER1       LOAD LENGTH OF HEADER
         B     HDR10               OUTPUT THE HEADER
SECT2IO  DS    0H
         STM   R2,R3,DATAREG       SAVE WORK REGSITERS
         SR    R0,R0               SPACE
         L     R1,OUTBUF            A
         ST    R0,N0(R1)             LINE
         LR    R2,R1               INDICATE NULL LINE COMING
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO DATA,DATAPTR=(R2),ID=DEB11,MF=(E,TSTIOPRM) CALL I/O
         LM    R2,R3,DATAREG       RESTORE REGISTERS
         LTR   R15,R15             WAS I/O OK
         BNZ   DEBRET              NO, GO SET UP RETURN
         MVC   N4(L'HEADER2,R10),HEADER2    MOVE HEADER TO BUFFER
         LA    R14,L'HEADER2
         NI    OUTPUTSW,(HEXFF-ALLCHECK)
         LA    R3,DEBBASND-DEBBASIC(R3)  ADDR OF 1ST DASD SEC
         TM    OUTPUTSW,ISAMBIT    IS DEB FOR A ISAM DATASET
         BZ    NOTISAM3            NO, GO ON
         LA    R3,DEBEXPTA-DEBBASND+L'DEBEXPTA(R3) YES,SKIP ISAM
NOTISAM3 DS    0H
         OI    OUTPUTSW,DASDSEC    INDICATE PTR TO SECOND SECTION OK
HDR10    LA    R14,N4(R14)         SET LENGTH OF OUTPUT
         NI    OUTPUTSW,(HEXFF-HDRCHECK-FLDCHECK)
         SLL   R14,N16             LENGTH IN HIGH ORDER HALFWORD
         ST    R14,N0(R10)         STORE LENGTH IN OUTPUT BUFFER
         BAL   R14,DEBIO           PUT OUT THE HEADER
         SPACE 1
***********************************************************************
*   THE FOLLOWING CODE DETERMINES WHETHER THE OUTPUT LINE IS ALREADY  *
*   FULL.  IF FULL CONTROL IS PASSED TO DEBIO.  WHEN THIS SECTION IS  *
*   REACHED, R6 POINTS TO THE PDE OF THE FIELD BEING PROCESSED, AND   *
*   FLDLEN, HDRLEN, RELADR, AND HDRBUF CONTAIN THE PROPER INFORMATION *
*   FOR THAT FIELD.                                                   *
***********************************************************************
         SPACE 1
CVTANDIO DS    0H
         SR    R7,R7
         SR    R10,R10
         IC    R7,FLDLEN           LOAD FIELD LENGTH
         IC    R10,HDRLEN          LOAD HEADER LENGTH
         AR    R7,R7               DOUBLE FOR TRUE PRINTABLE LENGTH
         CR    R7,R10              WHICH IS LONGER
         BH    FLDLONGR            IF FIELD IS LONGER, BRANCH
         LR    R7,R10              R7 CONTAINS OUTPUT LENGTH
FLDLONGR AR    R7,R2               CALCULATE TOTAL NEW OUTPUT LENGTH
         C     R7,LINELEN          IS THERE ROOM FOR THIS FIELD
         BNH   MOREROOM            BRANCH IF THE FIELD CAN FIT
         L     R11,OUTBUF          POINT TO OUTPUT BUFFER
         LA    R10,N2(R2)          LENGTH OF OUTPUT BUFFER
         SLL   R10,N16             LENGTH IN HIGH ORDER HALFWORD
         ST    R10,N0(R11)         STORE LENGTH OF OUTPUT
         TM    OUTPUTSW,HDRCHECK
         BZ    HEADERIO            GO SET UP TO OUTPUT FIELD HDRS
         OI    OUTPUTSW,FLDCHECK
         B     DEBIOGO             GO SETUP TO OUTPUT LINE
HEADERIO NI    OUTPUTSW,(HEXFF-FLDCHECK)
         OI    OUTPUTSW,HDRCHECK
DEBIOGO  BAL   R14,DEBIO           GO TO INTERNAL I/O ROUTINE
         SR    R7,R2               RESET LENGTH OF FIELD TO BE CONVRTED
         ST    R6,FSTADDR
         SR    R2,R2               SET OUTPUT LENGTH TO ZERO
          SPACE
***********************************************************************
*   THE FOLLOWING CODE IS REACHED WHEN THERE IS MORE ROOM IN THE      *
*   OUTPUT BUFFER.  IT SETS UP FOR DEBCVT WHICH WILL CONVERT THE      *
*   FIELD TO PRINTABLE HEXADECIMAL AND MOVE THE HEADERS AND FIELD     *
*   TO THE PROPER BUFFERS                                             *
***********************************************************************
          SPACE
MOREROOM DS    0H
         LTR   R2,R2
         BNZ   RESET               MORE ROOM IN BUFFER, GO ADD
         ST    R6,FSTADDR
RESET    SR    R7,R2
         SR    R10,R10
         IC    R10,RELADR          FIND OFFSET OF FIELD
         AR    R10,R3              ADD OFFSET TO BASE
         SR    R1,R1               ZERO R1
         IC    R1,FLDLEN           PUT FIELD LENGTH IN R1
         BCTR  R1,R0               DECREMENT FOR MOVE
         LA    R11,TEMPAREA        GET ADDRESS OF TEMP STORAGE
*                                  AREA DATA TO BE TRANSLATED
MOVETRY1 DS    0H                  NEXT INSTRUCTION MAY ABEND
         EX    R1,MOVE1            MOVE DATA FROM DEB TEMPAREA
MOVETRY2 DS    0H                  PREVIOUS INSTR MAY ABEND
         ST    R11,STRNGPTR        STORE IN LIST FOR IKJEGCVT
         SPACE 1
***********************************************************************
*  THE FOLLOWING CODE SETS UP THE PARAMETER LIST FOR IKJEGCVT WHICH   *
*  WILL CONVERT THE DEB FIELD TO PRINTABLE HEXADECIMAL.  IT THEN      *
*  DETERMINES WHETHER THE HEADER FOR THAT FIELD HAS BEEN OUTPUTTED,   *
*  AND MOVES THE CONVERTED FIELD TO THE PROPER BUFFER.                *
***********************************************************************
         SPACE
DEBCVT   DS    0H
         MVI   CVTLL,HEX00         ZERO OUT TOP BYTE OF LENGTH
         MVC   CVTLL+N1(N1),FLDLEN   MOVE LENGTH OF FIELD TO PARM LIST
         MVI   FLAGS,FLAG          MOVE FLAG TO LIST
         MVI   TYPE,TYPECODE       MOVE IN CODE FOR HEX
         LA    R1,STRNGPTR         POINT TO PARM LIST
         LCR   R0,R1               R0 NEGATIVE FOR CONVERT TO PRINTABLE
         L     R15,TSTCONVT        LOAD ADDRESS OF IKJEGCVT
         BALR  R14,R15             GO TO IKJEGCVT
         LTR   R15,R15             IS RETURN CODE 0
         BNZ   DEBRET              IF NO BRANCH
         L     R10,CONAREA         LOAD ADDRESS OF CONVERTED FIELDS
         TM    OUTPUTSW,HDRCHECK   IS HEADER OUT
         BZ    HDRNTOUT            BRANCH IF NOT OUT YET
         L     R11,OUTBUF          POINT TO OUTPUT BUFFER
         AR    R11,R2              SKIP PREVIOUS DATA
         IC    R1,FLDLEN           GET LENGTH OF FIELD
         AR    R1,R1               DOUBLE FOR PRINTABLE LENGTH
         BCTR  R1,R0               LEN-1 FOR EXECUTE INSTR
         EX    R1,MOVE2            MOVE CONVERTED FIELD TO OUTBUF
         B     CVTRTRN             GO CHECK FOR MORE FIELDS
HDRNTOUT LA    R11,BUFFER          POINT TO FIELD BUFFER
         AR    R11,R2
         IC    R1,FLDLEN           GET LENGTH OF FIELD
         AR    R1,R1               DOUBLE FOR PRINTABLE LENGTH
         BCTR  R1,R0               LEN-1 FOR EXECUTE INSTR
         EX    R1,MOVE3            MOVE FIELD TO BUFFER IN WORKAREA
         L     R11,OUTBUF          ADDRESS OF OUTPUT BUFFER
         LA    R10,HDRBUF          ADDRESS OF HEADER BUFFER
         AR    R11,R2
         SR    R1,R1
         IC    R1,HDRLEN           GET HEADER LENGTH
         BCTR  R1,R0               LEN-1 FOR EXECUTE INSTR
         EX    R1,MOVE4            MOVE FIELD HEADER TO OUTBUF
CVTRTRN  LA    R6,N2(R6)
         LA    R2,N2(R2)           SET FOR TWO SPACES BETWEEN FIELDS
         AR    R2,R7
         C     R6,LASTPDE          ARE THERE ANY MORE PDE'S
         BE    PDLEND              BRANCH IF NO
         B     PDECHECK            GO CHECK NEXT PDE
          SPACE
***********************************************************************
* THE FOLLOWING CODE CONTAINS THE HEART OF THE LOGIC OF THE PROGRAM.  *
* IT SETS UP THE PARAMETER LIST FOR IKJEGIO1 WHICH WILL OUTPUT THE    *
* LINE OF DATA.  IT THEN DETERMINES WHAT KIND OF DATA, WHETHER HEADER *
* OR FIELD, WAS OUTPUTTED.  IF FIELD DATA WAS PUT OUT IT CHECKS FOR   *
* FURTHER EXTENTS OF THOSE FIELDS, AND FOR FURTHER FIELDS.  IF A      *
* FIELD HEADER WAS PUT OUT IT SETS UP THE BUFFERS AND THE PARAMETER   *
* LIST TO OUTPUT THE CORRESPONDING FIELDS.                            *
* UPON REACHING THIS SECTION, R2 CONTAINS THE OUTPUT LINE LENGTH,     *
* OUTPUTSW INDICATES THE KIND OF DATA IN THE BUFFER, R6 POINTS TO THE *
* PDE OF THE NEXT FIELD, EXTCTR CONTAINS THE NUMBER OF REMAINING      *
* EXTENTS, AND R3 POINTS TO THE DEB.                                  *
***********************************************************************
         SPACE
DEBIO    DS    0H
         OI    OUTPUTSW,SOMEOUT    INDICATE WE PUT OUT A LINE
         L     R1,OUTBUF           POINT TO BUFFER
         ST    R1,OUTPTR1          STORE POINTER IN LIST
         L     R0,PRINTFLG
         SR    R1,R1
         ST    R1,PRINTFLG
         ST    R1,OUTPTR2          ZERO OUT SECOND WORD OF LIST
         LA    R1,OUTPTR1          POINT TO PARM LIST
         STM   R2,R3,DATAREG       SAVE WORK REGISTERS
         L     R2,OUTPTR1          PICK UP DATA LINE POINTER
         LR    R3,R0               TRANSFER DSNPDE IF ONE
         ST    R14,REG14           STORE RETURN ADDRESS
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO DATA,DATAPTR=(R2),DSNAME=(R3),ID=DEB11,              *
               MF=(E,TSTIOPRM)
         LM    R2,R3,DATAREG       RESTORE WORKREGS
         LTR   R15,R15             IS RETURN CODE 0
         BNZ   DEBRET              IF NO RETURN
         L     R10,OUTBUF
         MVI   N4(R10),BLANK
         MVC   N5(N79,R10),N4(R10)
         L     R14,REG14           RESTORE RETURN ADDRESS
         TM    OUTPUTSW,FLDCHECK   WAS A FIELD JUST PUT OUT
         BZ    FURTHRCK            BRANCH IF NOT A FIELD
BRANCH2  DS    0H                  CONVERTED FIELDS WERE JUST PUT OUT
         BCTR  R6,R0               POINT BACK
         BCTR  R6,R0                 TO PDE
         LA    R10,BUFFER
         MVI   N0(R10),BLANK
         MVC   N1(N79,R10),N0(R10)
         CLC   FSTADDR(N4),FSTPDEND   IN BASIC OR DASD SECTION
         BL    S1OUTPUT            IF IN SECTION1 BRANCH
         LA    R6,N2(R6)
         SR    R10,R10
         IC    R10,EXTCTR          LOAD EXTENT COUNTER
         BCTR  R10,R0              DECREMENT EXTENT COUNTER
         STC   R10,EXTCTR
         LTR   R10,R10             ARE THERE MORE EXTENTS
         BZ    NOMOREXT            BRANCH IF NO MORE
         L     R6,FSTADDR          POINT TO FIRST PDE FOR OUTPUT LINE
         LA    R3,N16(R3)          POINT TO NEXT EXTENT
         SR    R2,R2
         B     PDECHECK            CHECK NEXT PDE
FURTHRCK TM    OUTPUTSW,HDRCHECK   WAS A FIELD HEADER JUST PUT OUT
         BZ    BRANCH1             IF NO BRANCH TO SETUP RETURN
         LA    R10,BUFFER
         L     R11,OUTBUF
         LR    R1,R2
         BCTR  R1,R0               LEN-1 FOR EXECUTE INSTR
         EX    R1,MOVE4            MOVE FIELDS TO OUTBUF
         OI    OUTPUTSW,FLDCHECK
         B     DEBIO               GO SETUP TO PUT OUT LINE
BRANCH1  BR    R14                 SECTION 1 OR 2 HEADER PUT OUT
NOMOREXT DS    0H
         NI    OUTPUTSW,(HEXFF-HDRCHECK)     INDICATE NO HEADER YET
         MVC   EXTCTR(N1),NMEXTSTR  RESET EXTENT COUNTER FOR FIELDS
         L     R3,TSTANSPL         ADDRESS OF PDL
         USING IKJPARMD,R3         R3 POINTS TO PDL
         L     R3,PDEUSER-IKJPARMA+ADDRESS   ADDR DEB PDEUSER
         DROP  R3                  R3 NO LONGER PDL BASE
         LA    R3,DEBBASND-DEBBASIC(R3)  ADDRESS OF1ST DASD SEC
         BR    R14                 RETURN TO MAIN ROUTINE
S1OUTPUT LA    R6,N2(R6)           RESTORE PDE POINTER
         NI    OUTPUTSW,(HEXFF-HDRCHECK)
         NI    OUTPUTSW,(HEXFF-FLDCHECK)
         BR    R14                 RETURN TO MAIN ROUTINE
         SPACE
***********************************************************************
*   THE FOLLOWING CODE IS REACHED WHEN THERE ARE NO MORE FIELDS.      *
*   IT CHECKS THE BUFFER FOR MORE DATA, IN WHICH CASE A BRANCH IS     *
*   MADE TO DEBIO.  IF THERE ARE MORE EXTENTS IS THEN PASSED TO       *
*   TABLESCN WHICH WILL PROCESS THE NEXT EXTENT.  OTHERWISE CONTROL   *
*   IS RETURNED AND PASSED TO DEBRET PRIOR TO RETURN TO IKJEGMN1.     *
***********************************************************************
         SPACE 1
PDLEND   DS    0H
         LTR   R2,R2               IS THERE ANY MORE OUTPUT
         BNZ   PUTITOUT            YES, GO PUT OUT REST OF OUTPUT
         TM    OUTPUTSW,SOMEOUT    DID WE OUTPUT ANY FIELDS
         BO    DEBRET              YES, GO SET UP RETURN TO MAINLINE
         LA    R2,M0041            PICK UP ERROR MESSAGE NUMBER
         SR    R3,R3               INDICATE NO SECOND LEVEL
         B     MSGIO               GO PUT OUT MESSAGE
PUTITOUT DS    0H
         L     R10,OUTBUF          LOAD ADDRESS OF OUTPUT BUFFER
         LA    R1,N2(R2)           LENGTH OF OUTPUT BUFFER
         SLL   R1,N16              LENGTH IN HIGH ORDER HALFWORD
         ST    R1,N0(R10)          STORE LENGTH OF OUTPUT
         TM    OUTPUTSW,HDRCHECK
         BZ    TURNONHD            GO SET UP FOR FIELD HEADER
         OI    OUTPUTSW,FLDCHECK
         B     BRANCH              GO SET UP TO OUTPUT FIELDS
TURNONHD NI    OUTPUTSW,(HEXFF-FLDCHECK)
         OI    OUTPUTSW,HDRCHECK
BRANCH   BAL   R14,DEBIO           GO SETUP TO OUTPUT LINE
         B     DEBRET              RETURN TO IKJEGMN1
NOSECOND DS    0H
         LTR   R2,R2               IS THEIR ANY FIELDS TO PUT OUT
         BZ    GIVEMESG            NO, GO GIVE MESSAGE
         L     R10,OUTBUF          ADDRESS OF OUTPUT BUFFER
         LA    R1,N2(R2)           LENGTH OF DATA TO PUT OUT
         SLL   R1,N16              LENGTH IN HIGH ORDER HALFWORD
         ST    R1,N0(R10)          PREFIX OUTPUT WITH LENGTH
         NI    OUTPUTSW,(HEXFF-FLDCHECK)
         OI    OUTPUTSW,HDRCHECK
         BAL   R14,DEBIO           GO PUT OUT FIELD HDRS AND FIELDS
         SR    R2,R2               NO MORE OUTPUT
GIVEMESG DS    0H
         TM    OUTPUTSW,NOTDASD    NO DASD SECTION BECAUSE NOT A DASD
         BO    PUTMSG6A            YES, GO GIVE NOT A DASD MESSAGE
         LA    R2,M0040            PICK UP FIRST LEVEL ERROR MSG NUM
         LA    R3,M0247            PICK UP SECOND LEVEL ERROR MSG NUM
         B     MSGAGOGO            GO PUT OUT MESSAGE
PUTMSG6A DS    0H
         LA    R2,M0040            PICK UP FIRST LEVEL MSG NUMBER
         LA    R3,M0248            PICK UP SECOND LEVEL MSG NUMBER
MSGAGOGO DS    0H
         NI    TSTFLGS1,(HEXFF-TSTPRINT) INSURE PRINT SWITCH OFF
         B     MSGIO               BRANCH TO ISSUE MESSAGES
          SPACE
***********************************************************************
*   THE FOLLOWING CODE PROCESSES THE VARIOUS RETURN CODES AND         *
*    RETURNS TO MAINLINE.                                             *
***********************************************************************
          SPACE
DEBRETRY DS    0H
         L     R9,CVTPTR           ADDRESS OF CVT
         L     R9,CVTTCBP-CVT(R9)  POINTER TO NEW, CURRENT TCBS
         L     R9,N4(R9)           ADDRESS OF CURRENT TCB IS TEST TCB
         L     R9,TCBTRN-TCB(R9)   ADDRESS OF TCOMTAB
         OI    TSTFLGS4,TSTRERTN   TURN ON RETRY IN PROCESS SW
         L     R13,REGSAVE2        ADDRESS OF MY SAVE AREA
         L     R12,N68(R13)        MY BASE
         LA    R8,N20              ABEND RETURN CODE FOR MAINLINE
         B     RETURN              GO RETURN TO MAINLINE
EXITERR  DS    0H
         L     R15,REG14           VALIDITY EXIT SAVED RET CODE
DEBRET   DS    0H
         LA    R8,N16              ATTENTION RETCODE
         CR    R8,R15              DID SOMEONE HIT ATTENTION
         BE    RETURN              IF YES BRANCH
         LA    R8,N20              ABEND RETURN CODE
         CR    R8,R15              DID SOMEONE ABEND
         BE    RETURN              YES, GO SET RETURN
         LA    R8,N24              TEST FOR BAD ESTAE
         CR    R8,R15              COMPARE WITH IO RTN CODE
         BE    RETURN              IF SO GO BACK WITH RTN CODE
         SR    R8,R8               RETCODE IS ZERO
         B     RETURN              GO RETURN TO MAINLINE
DEBRET1  DS    0H                  PARSE RETURN CODE ANALYSIS
         LA    R8,N8               ATTENTION R.C. FROM PARSE IS 8
         CR    R8,R15              HAS AN ATTENTION BEEN SCHEDULED
         LA    R8,N16              MAINLINE ATTENTION R.C. IS 16
         BE    RETURN              ATTENTION SCHEDULED, GO SET UP RET
         LA    R8,N20              VALIDITY EXIT ERR R.C. FROM PARSE
         CR    R8,R15              DID VALIDITY EXIT SEEK TO END
         BE    EXITERR             VALIDITY EXIT TERM., GO SET RETURN
         LA    R8,N16              NO CORE R.C. FROM PARSE
         SR    R3,R3               INDICATE NO SECOND LEVEL MSG
         CR    R8,R15              IS R.C. FROM PARSE 16
         LA    R2,M0103            PICK UP FIRST LEVEL MESSAGE NUM
         BE    MSGIO               IF R.C. 16, GO GIVE NO CORE MESSAGE
         LA    R8,N12              INVALID PARMS R.C. FROM PARSE
         CR    R8,R15              IS R.C. FROM PARSE 12
         BE    PARSE12             IF A 12 SEND MESSAGE
         SR    R8,R8               PARSE RC=4, NO MESSAGE
         OI    TSTFLGS4,TSTFLUSH   IF STACK, TELL MNL TO FLUSH
         B     RETURN              GO RETURN TO CALLER
PARSE12  DS    0H
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=M0104,INST11=(NUM,I0014),SECOND=M0277,     *
               ID=DEB11,MF=(E,TSTIOPRM)  CALL I/O FOR ERROR MSG
         B     DEBRET              GO CHECK RETURN CODE FROM I/O
MSGIO    DS    0H
         XC    TSTIOPRM,TSTIOPRM   CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),ID=DEB11,MF=(E,TSTIOPRM)
         B     DEBRET              GO CHECK RETURN CODE FROM I/O
RETURN   DS    0H
         NI    TSTFLGS1,(HEXFF-TSTPRINT)
         ESTAE 0,OV                REMOVE ESTAE
         LR    R15,R8              RETCODE IN PROPER REGISTER
         L     R13,N4(R13)
         NI    TSTFLGS4,HEXFF-TSTRERTN TURN OFF RETRY SWITCH IF ON
         RETURN (14,12),T,RC=(15)
         EJECT
***********************************************************************
*                                                                     *
*                            HEADERS AND OTHER CONSTANTS              *
*                                                                     *
***********************************************************************
         SPACE 2
IKJEGSPL IKJEGSPL RTRY=DEBRETRY,ABNTB=ABENDTAB,MODNM=IKJEGDEB,TNM=LISTD*
               EB
ZZZZZZZZ DC    52C'Z'              TO BE USED FOR MAINTENANCE
HDRRSRVD DC    C'RESERVED'                      DEB FIELD HEADER
HDRPROTG DC    C'PROTG/DEBID'                   DEB FIELD HEADER
HEADER1  DC    C'BASIC SECTION'                 DEB SECTION HEADER
HEADER2  DC    C'DIRECT ACCESS SECTION'         DEB SECTION HEADER
FLAG     EQU   X'80'               FLAG FOR IKJEGCVT
TYPECODE EQU   X'04'               TYPE CODE FOR HEX FOR CONVERT
BLANK    EQU   C' '
HEXFF    EQU   X'FF'
HEX00    EQU   X'00'
HEX38    EQU   X'38'
HEX03    EQU   X'03'
HEX04    EQU   X'04'
HEX0F    EQU   X'0F'
FOUR     DC    F'4'                USED COMPARE RC ADDR CHECK
EIGHT    DC    F'8'                USED COMPARE RC ADDR CHECK
PCLADDR  DC    A(IKJEGDBP)         ADDRESS OF PARSE PCL CSECT
ABENDTAB DS    0F
         DC    AL1(99)             LINK FAILED CODE
         DC    AL3(PABEND1)        RESUME IC AFTER LINK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(PARDCB1)        RESUME IC AT DCB CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(PARDCB2)        RESUME IC AFTER DCB CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(PARNMEX1)       RESUME IC AT EXT CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(PARNMEX2)       RESUME IC AFTER EXT CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(DCBTRY1)        RESUME IC AT DCB CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(DCBTRY2)        RESUME IC AFTER DCB CHECK, AT
*                                  DSORG CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(PABEND2)        RESUME IC AFTER CHECK DSORG IN DCB
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(NMTRY1)         RESUME IC AT NM CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(NMTRY2)         RESUME IC AFTER NM CK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(NMTRY3)         RESUME IC AT NM CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(EXTRY1)         RESUME IC AT EXT CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(CHECKEXT)       RESUME IC AT EXT CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(EXTRY2)         RESUME IC AT EXT CHECK
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(MOVETRY1)       RESUME IC AT MOVE
         DC    AL1(98)             INVALID DEB CODE
         DC    AL3(MOVETRY2)       RESUME IC AFTER MOVE
         DC    X'FF'               END OF TABLE INDICATOR
RETRYADR DC    AL3(DEBRETRY)       ADDRESS OF DEB STAE RETRY ROUTINE
LFSTAE   DS    0F
         ESTAE  MF=L
MOVE1    MVC   N0(N0,R11),N0(R10)
MOVE2    MVC   N4(N0,R11),N1(R10)
MOVE3    MVC   N0(N0,R11),N1(R10)
MOVE4    MVC   N4(N0,R11),N0(R10)
PDELENTH EQU   51                  TOTAL LENGTH OF FIELD PDES
ALLCHECK EQU   X'80'               OUTPUT FLAG FOR HEADER1
SOMEOUT  EQU   X'40'               FLAG FOR ANY OUTPUT, CHECK BAD PARMS
HDRCHECK EQU   X'20'               OUTPUT FLAG FOR FIELD HEADERS
FLDCHECK EQU   X'10'               OUTPUT FLAG FOR FIELDS
DASDSEC  EQU   X'08'               FLAG FOR SECOND SECTION POINTER
ISAMBIT  EQU   X'04'               FLAG FOR DEB ASSOCIATED WITH ISAM DS
ANYSECND EQU   X'03'               NO DIRECT ACCESS SECTION
NOTDASD  EQU   X'02'               NO DASD SECTION - DS NOT ON A DASD
NOEXTENT EQU   X'01'               NO DASD SECTION - 0 EXTENTS
ISAM     EQU   X'80'               ISAM ORGANIZATION CODE IN DCB
DSORG    EQU   26                  OFFSET INTO DCB OF DSORG CODE
OFFSET   EQU   64                  OFFSET OF DBWKAREA INTO TEST WRKAREA
         EJECT
DBWKAREA DSECT
PARSELST DS    7F                  PARM LIST FOR PARSE
PRINTFLG DS    1F                  ADDRESS OF PRINT PDL
OUTPUTSW DS    CL1                 OUTPUT FLAGS
         DS    CL2                 TWO BYTES
EXTCTR   DS    CL1                 NO. OF EXTENTS STILL TO BE PROCESSED
FSTADDR  DS    1F                  ADDR OF PDE OF 1ST FLD ON OUTPUT LNE
FSTPDEND DS    1F                  ADDRESS OF DVMOD PDE
LASTPDE  DS    1F                  ADDRESS OF NMTRK PDE +2
BUFFER   DS    20F                 BUFFER FOR CONVERTED FIELDS
RELADR   DS    CL1                 OFFSET OF FIELD INTO THE DEB
FLDLEN   DS    CL1                 LENGTH OF DEB FIELD
HDRLEN   DS    CL1                 LENGTH OF DEB FIELD HEADER
NMEXTSTR DS    CL1                 NUMBER OF EXTENTS IN DEB
HDRBUF   DS    3F                  BUFFER FOR CURR DEB FLD HEADER
LINELEN  DS    1F                  MAXIMUN LENGTH OF OUTPUT LINE
SVCPARMS DS    3F                  PARAMETER FOR SVC 97 ADRCK
TEMPAREA DS    CL8                 TEMPORARY STOR AREA FOR DATA
*                                  TO TRANSLATE. THIS FIELD IS
*                                  AS LONG AS THE LONGEST SINGLE
*                                  FIELD IN DEB. IF LONGER FIELD
*                                  IS EVER DEF, THIS FIELD MUST
*                                  BE LENGTHENED.
* IT IS ESSENTIAL THAT THE FOLLOWING 6 AREAS BE CONTIGUOUS AND IN ORDER
STRNGPTR DS    1F                  CONVERT PARM LIST - PTR TO FIELD
CVTLL    DS    CL2                                     LENGTH OF FIELD
FLAGS    DS    CL1                                     FLAGS
TYPE     DS    CL1                                     TYPE OF DATA
OUTPTR1  DS    1F                  I/O PARM LIST - PTR TO IST I/O BUFF
OUTPTR2  DS    1F                                  PTR TO 2ND I/O BUFF
REG14    DS    1F                  REG 14 OR VALIDITY CHECK EXIT R.C.
         ORG   DBWKAREA            GO BACK TO BEGINNING OF WORK AREA
STAELIST DS    3F                  PARAMETER LIST FOR STAE
DATAREG  DS    2F                  PLACE TO HOLD PARM REG FOR I/O CALL
         EJECT
IKJEGDEB CSECT
         EJECT
*
*        PARSE MACROS
*
         SPACE 2
IKJEGDBP IKJPARM
ADDRESS  IKJPOSIT  ADDRESS,VALIDCK=DEBVALCK,PROMPT='ADDRESS OF DEB'
PRINT    IKJKEYWD
         IKJNAME   'PRINT',SUBFLD=DSNAME
DEBFIELD IKJKEYWD
         IKJNAME   'FIELD',SUBFLD=FIELDNAM
DSNAME   IKJSUBF
DSNAM    IKJPOSIT  DSNAME,PROMPT='DATA SET NAME'
FIELDNAM IKJSUBF
NMSUB    IKJKEYWD
         IKJNAME  'DEBNMSUB'
TCBAD    IKJKEYWD
         IKJNAME  'DEBTCBAD'
AMLNG    IKJKEYWD
         IKJNAME  'DEBAMLNG'
DEBAD    IKJKEYWD
         IKJNAME  'DEBDEBAD'
OFLGS    IKJKEYWD
         IKJNAME  'DEBOFLGS'
IRBAD    IKJKEYWD
         IKJNAME  'DEBIRBAD'
OPATB    IKJKEYWD
         IKJNAME  'DEBOPATB'
QSCNT    IKJKEYWD
         IKJNAME  'DEBQSCNT'
FLGS1    IKJKEYWD
         IKJNAME   'DEBFLGS1'
RSVD     IKJKEYWD
         IKJNAME  'DEBRSRVD'
NMEXT    IKJKEYWD
         IKJNAME  'DEBNMEXT'
USPRG    IKJKEYWD
         IKJNAME  'DEBUSPRG'
PRIOR    IKJKEYWD
         IKJNAME  'DEBPRIOR'
ECBAD    IKJKEYWD
         IKJNAME  'DEBECBAD'
PROTG    IKJKEYWD
         IKJNAME  'DEBPROTG'
         IKJNAME  'DEBDEBID'
DCBAD    IKJKEYWD
         IKJNAME  'DEBDCBAD'
EXSCL    IKJKEYWD
         IKJNAME  'DEBEXSCL'
APPAD    IKJKEYWD
         IKJNAME  'DEBAPPAD'
DVMOD    IKJKEYWD
         IKJNAME  'DEBDVMOD'
UCBAD    IKJKEYWD
         IKJNAME  'DEBUCBAD'
BINUM    IKJKEYWD
         IKJNAME  'DEBBINUM'
STRCC    IKJKEYWD
         IKJNAME  'DEBSTRCC'
STRHH    IKJKEYWD
         IKJNAME  'DEBSTRHH'
ENDCC    IKJKEYWD
         IKJNAME  'DEBENDCC'
ENDHH    IKJKEYWD
         IKJNAME  'DEBENDHH'
NMTRK    IKJKEYWD
         IKJNAME  'DEBNMTRK'
         IKJENDP
*
*        THE FOLLOWING STATEMENTS EQUATE THE FIELD HEADERS IN THE PARSE
*        CSECT
*
HDRNMSUB EQU   IKJEGDBP+FIRSTHDR               FIELD HEADER IN PDL
HDRTCBAD EQU   HDRNMSUB+FLDHDR                 FIELD HEADER IN PDL
HDRAMLNG EQU   HDRTCBAD+FLDHDR                 FIELD HEADER IN PDL
HDRDEBAD EQU   HDRAMLNG+FLDHDR                 FIELD HEADER IN PDL
HDROFLGS EQU   HDRDEBAD+FLDHDR                 FIELD HEADER IN PDL
HDRIRBAD EQU   HDROFLGS+FLDHDR                 FIELD HEADER IN PDL
HDROPATB EQU   HDRIRBAD+FLDHDR                 FIELD HEADER IN PDL
HDRQSCNT EQU   HDROPATB+FLDHDR                 FIELD HEADER IN PDL
HDRFLGS1 EQU   HDRQSCNT+FLDHDR                 FIELD HEADER IN PDL
HDRNMEXT EQU   HDRFLGS1+FLDHDR+FLDHDR          FIELD HEADER IN PDL
HDRUSPRG EQU   HDRNMEXT+FLDHDR                 FIELD HEADER IN PDL
HDRPRIOR EQU   HDRUSPRG+FLDHDR                 FIELD HEADER IN PDL
HDRECBAD EQU   HDRPRIOR+FLDHDR                 FIELD HEADER IN PDL
HDRDCBAD EQU   HDRECBAD+FLDHDR+FLDHDR+LENNAME  FIELD HEADER IN PDL
HDREXSCL EQU   HDRDCBAD+FLDHDR                 FIELD HEADER IN PDL
HDRAPPAD EQU   HDREXSCL+FLDHDR                 FIELD HEADER IN PDL
HDRDVMOD EQU   HDRAPPAD+FLDHDR                 FIELD HEADER IN PDL
HDRUCBAD EQU   HDRDVMOD+FLDHDR                 FIELD HEADER IN PDL
HDRBINUM EQU   HDRUCBAD+FLDHDR                 FIELD HEADER IN PDL
HDRSTRCC EQU   HDRBINUM+FLDHDR                 FIELD HEADER IN PDL
HDRSTRHH EQU   HDRSTRCC+FLDHDR                 FIELD HEADER IN PDL
HDRENDCC EQU   HDRSTRHH+FLDHDR                 FIELD HEADER IN PDL
HDRENDHH EQU   HDRENDCC+FLDHDR                 FIELD HEADER IN PDL
HDRNMTRK EQU   HDRENDHH+FLDHDR                 FIELD HEADER IN PDL
         SPACE 4
CVT      DSECT
         CVT
         EJECT
         IKJTCB
         EJECT
         IEZDEB
         END
