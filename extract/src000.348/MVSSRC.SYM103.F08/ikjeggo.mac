GO       TITLE 'GO RUN CALL COMMAND PROCESSOR (IKJEGGO)'
         COPY  IKJEGSIO
IKJEGGO  CSECT
*D324940,392300,491500,565500-567000                           XXXXXXXX
*C324960,492000                                                XXXXXXXX
*A387010,520610-520620,524610-524640                           XXXXXXXX
         EJECT
***********************************************************************
* STATUS                                                              *
*    CHANGE LEVEL 00,VERSION NUMBER 02, VS2     02/27/73              *
*                                                                     *
* FUNCTION                                                            *
*    GO-CAUSES THE MODE TO CHANGE FROM COMMAND (IN WHICH YOU MAY ENTER*
*    TEST COMMANDS) TO PROBLEM PROGRAM.  GO WITHOUT THE ADDRESS       *
*    PARAMETER CAUSES EXECUTION TO BEGIN AT THE INITIAL ENTRY         *
*    POINT IF THE PROBLEM PROGRAM HAD BEEN LOADED BY TEST OR          *
*    CAUSES EXECUTION TO BEGIN FROM THE POINT OF INTERRUPTION.        *
*    GO WITH AN ADDRESS CAUSES EXECUTION TO PROCEED AS IF A           *
*    BRANCH HAD BEEN TAKEN TO THAT ADDRESS.  WHEN A BREAKPOINT        *
*    IS ENCOUNTERED OR EXECUTION IS COMPLETED THE MODE IS CHANGED     *
*    BACK TO COMMAND MODE.                                            *
*                                                                     *
*    CALL-DIFFERS FROM 'GO' IN THAT IT INITIALIZES REGISTERS 1, 14,   *
*    AND 15 OF THE PROBLEM PROGRAM'S REGISTERS AT THE TIME            *
*    EXECUTION BEGINS THUS ALLOWING FOR THE PASSING OF A              *
*    PARAMETER LIST TO THE PROBLEM PROGRAM.  REGISTER 1 IS SET TO     *
*    A DUMMY PARAMETER LIST IF 'PARM' IS NOT SPECIFIED.  THE HIGH     *
*    ORDER BIT OF THE LAST PARAMETER IS SET TO 1 IF 'VL' IS           *
*    SPECIFIED.  REGISTER 14 WILL CONTAIN THE RETURN ADDRESS          *
*    WHICH WILL CAUSE A CHANGE IN THE MODE BACK TO THE COMMAND        *
*    MODE IN WHICH TEST COMMANDS CAN BE ISSUED.  IF THE 'RETURN'      *
*    KEYWORD IS SPECIFIED, REGISTER 14 IS SET TO THE RETURN           *
*    ADDRESS SPECIFIED.  THE ADDRESS PARAMETER MUST BE SPECIFIED      *
*    WITH THE CALL COMMAND.                                           *
*                                                                     *
*    RUN-DIFFERS FROM 'GO' IN THAT IT REMOVES ALL THE BREAKPOINTS     *
*    ESTABLISHED BY 'AT' AND ADJUSTS THE ENVIRONMENT SO THAT          *
*    TEST IS REMOVED UPON TERMINATION OF THE PROBLEM PROGRAM.         *
*                                                                     *
* ENTRY POINTS                                                        *
*                                                                     *
*         IKJEGGO-ENTERED VIA LINK FROM IKJEGMNL.  REGISTER 9 WILL    *
*    POINT TO TCOMTAB, THE COMMON DSECT USED BY TEST.  THIS IS THE    *
*    ENTRY POINT WHEN THE GO COMMAND HAS BEEN ISSUED.                 *
*                                                                     *
*         IKJEGRUN-ENTERED VIA LINK FROM IKJEGMNL.  REGISTER 9 WILL   *
*    POINT TO TCOMTAB, THE COMMON DSECT USED BY TEST.  THIS IS THE    *
*    ENTRY POINT WHEN THE RUN COMMAND HAS BEEN ISSUED.                *
*                                                                     *
*         IKJEGCAL-ENTERED VIA LINK FROM IKJEGMNL.  REGISTER 9 WILL   *
*    POINT TO TCOMTAB, THE COMMAND DSECT USED BY TEST.  THIS IS THE   *
*    ENTRY POINT WHEN THE CALL COMMAND HAS BEEN ISSUED.               *
*                                                                     *
*         ADDRCHK-ENTERED FROM IKJPARS.  REGISTER 1 POINTS TO A       *
*    THREE WORD PARAMETER LIST.  THE FIRST WORD POINTS TO THE         *
*    ADDRESS PDE BUILT BY IKJPARS, THE SECOND WORD POINTS TO          *
*    TCOMTAB AND THE THIRD WORD IS TO BE USED BY THE VALIDITY         *
*    CHECK ROUTINE TO PASS A POINTER TO A SECOND LEVEL MESSAGE        *
*    BACK TO IKJPARS.  THIS ROUTINE IS RESPONSIBLE FOR VALIDITY       *
*    CHECKING ALL PARAMETERS FOR GO, CALL, AND RUN.                   *
*                                                                     *
* INPUT                                                               *
*    THE REQUESTED FUNCTION WILL BE POINTED TO BY THE INBUF FIELD     *
*    FOUND IN TCOMTAB.  THE FORMAT OF THE GO STATEMENT IS             *
*    GO ADDR       WHERE THE ADDRESS IS AN OPTIONAL PARAMETER.        *
*    THE RUN STATEMENT ALSO HAS THE ADDRESS AS AN OPTIONAL PARAMETER  *
*    AND ITS FORMAT IS                                                *
*    RUN ADDR                                                         *
*    THE CALL STATEMENT HAS THE FOLLOWING FORMAT WITH ALL PARAMETERS  *
*    OPTIONAL EXCEPT THE ADDRESS PARAMETER.                           *
*    CALL ADDR PARM(ADDR-LIST) VL RETURN(ADDR)                        *
*                                                                     *
* OUTPUT                                                              *
*    GO AND CALL WILL CAUSE THE EXECUTION OF THE PROBLEM PROGRAM      *
*    WHICH CHANGES THE MODE TO PROBLEM PROGRAM UNTIL A BREAKPOINT IS  *
*    ENCOUNTERED OR UNTIL COMPLETE EXECUTION OF THE PROBLEM           *
*    PROGRAM, AT WHICH POINT GO AND CALL CHANGE THE MODE BACK TO THE  *
*    COMMAND MODE IN WHICH TEST COMMANDS MAY BE ENTERED.              *
*    RUN CAUSES THE EXECUTION OF THE PROBLEM PROGRAM WHICH CHANGES THE*
*    MODE TO PROBLEM PROGRAM AND UPON COMPLETION OF EXECUTION THE MODE*
*    WILL REMAIN PROBLEM PROGRAM.  RUN WIPES OUT ALL TRACES OF TEST.  *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*                                                                     *
*         IKJPARS-TO VALIDITY CHECK AND SCAN THE COMMAND BUFFER.      *
*    REGISTER 1 WILL POINT TO A 7 WORD PARAMETER LIST.                *
*                                                                     *
*         IKJEGCVT-TO CONVERT THE ADDRESS TO BINARY.  REGISTER 1      *
*    WILL BE THE ADDRESS COMPLEMENT OF THE ADDRESS PDE.  REGISTER 0   *
*    WILL BE POSITIVE TO INDICATE BINARY CONVERSION.                  *
*                                                                     *
*         IKJEGSIO-TO WRITE DIAGNOSTIC MESSAGES.                      *
*                                                                     *
* EXITS, NORMAL                                                       *
*                                                                     *
*         IKJPARS-VIA BRANCH REGISTER 14 FROM ADDRCHK WITH ONE OF THE *
*    FOLLOWING RETURN CODES IN REGISTER 15-                           *
*    0   INDICATING TO CONTINUE PROCESSING THE COMMAND BUFFER         *
*    8   INDICATING IKJPARS SHOULD PROMPT WITH REENTER                *
*    12  INDICATING IKJPARS SHOULD RETURN TO IKJEGGO WITH A RETURN    *
*    *   CODE OF 20                                                   *
*                                                                     *
*         IKJEGMNL-VIA BRANCH REGISTER 14 FROM IKJEGCAL AND IKJEGGO   *
*    WITH ONE OF THE FOLLOWING RETURN CODES IN REGISTER 15-           *
*    4    NORMAL END OF PROCESSING                                    *
*    16   INDICATING AN ATTENTION INTERRUPT WAS ENCOUNTERED           *
*    *    DURING PROCESSING                                           *
*                                                                     *
*         IKJEGMNL-VIA BRANCH REGISTER 14 FROM IKJEGRUN WITH ONE      *
*    OF THE FOLLOWING RETURN CODES IN REGISTER 15-                    *
*    12   NORMAL END OF PROCESSING, RUNSW IN TCOMTAB ON               *
*    16   INDICATING AN ATTENTION INTERRUPT WAS ENCOUNTERED           *
*    *    DURING PROCESSING                                           *
*                                                                     *
* EXITS, ERROR                                                        *
*         IKJEGMNL-VIA BRANCH REGISTER 14 WITH ONE OF THE FOLLOWING   *
*    RETURN CODES IN REGISTER 15 -                                    *
*    00   SYSTEM ERROR, TSTFLUSH IN TCOMTAB ON                        *
*    12   CRITICAL SYSTEM ERROR IN RUN PROCESSING, RUNSW IN           *
*    TCOMTAB OFF, TSTFLUSH IN TCOMTAB ON                              *
*    20   RETURN FROM ESTAE RETRY ROUTINE                             *
*    24   INDICATING AN ESTAE ERROR EITHER IN THIS MODULE OR A        *
*         MODULE CALLED BY THIS MODULE                                *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    THIS MODULE USES THE COMMON DSECT OF THE TEST PACKAGE-TCOMTAB.   *
*    AREA POINTED TO BY WORKAREA IN TCOMTAB.  THE PARAMETER CONTROL   *
*    LIST FOR IKJPARS IS BUILT IN THE WORKAREA.                       *
*    TCOMTAB CONTAINS POINTERS TO THIS MODULE'S SAVEAREA, A POINTER   *
*    TO THE COMMAND BUFFER, AND A POINTER TO THE OUTPUT BUFFER.       *
*                                                                     *
* ATTRIBUTES                                                          *
*    REENTRANT, REFRESHABLE                                           *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED  *
*    SO THAT REDEFINITION OF CHARACTER CONSTANTS, BY REASSEMBLY,      *
*    WILL RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.         *
*                                                                     *
* NOTES                                                               *
*    ABBREVIATIONS COMMONLY USED IN THE COMMENTS BESIDE THE CODE      *
*    1.   PDL-PARAMETER DESCRIPTOR LIST                               *
*    2.   PDE-PARAMETER DESCRIPTOR ENTRY                              *
*    3.   PCL-PARAMETER CONTROL LIST                                  *
*    4.   PPL-PARSE PARAMETER LIST                                    *
*    THE COMMENTS ON THE STATEMENTS GENERALLY START IN COLUMN 30.     *
*    STAERTN IS THE ENTRY POINT TO THE STAE RETRY ROUTINE AND IS      *
*    ENTERED FROM IKJEGSTA.                                           *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        OTHER ENTRY POINTS TO THIS MODULE                            *
*                                                                     *
***********************************************************************
         ENTRY IKJEGRUN
         ENTRY IKJEGCAL
         SPACE 3
***********************************************************************
*                                                                     *
*                      EQUATES                                        *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0             REGISTER 0 - USED AS A PARM REGISTER
R1       EQU   1             REGISTER 1 - WORK REG AND SYSTEM REG
R2       EQU   2             REGISTER 2 - WORKREG
R3       EQU   3             REGISTER 3 - WORKREG
R4       EQU   4             REGISTER 4 - WORKREG
R5       EQU   5             REGISTER 5 - WORKREG
R6       EQU   6             REGISTER 6 - USED FOR TSTCWORK
*                            ADDRESSABILITY - SET IN SETUP CODE AND
*                            ABNORMAL ADDRCHCK RETURNS AND
*                            NOWHERE ELSE.
R7       EQU   7             REGISTER 7 - BASE FOR ADDR PDE
R8       EQU   8             REGISTER 8 - WORKREG
R9       EQU   9             REGISTER 9 - BASE FOR TCOMTAB
R10      EQU   10            REGISTER 10 - FOR INTERNAL BAL'S
R11      EQU   11            REGISTER 11 - RESERVED FOR MAINTENANCE
R12      EQU   12            REGISTER 12 - BASE FOR CSECT
R13      EQU   13            REGISTER 13 - SAVE AREA POINTER
R14      EQU   14            REGISTER 14 - FOR EXTERNAL BALR'S
R15      EQU   15            REGISTER 15 - WORKREG AND RETURN CODES
         SPACE
L0       EQU    0            LENGTH OF 0 FOR EXECUTED MOVES
L2       EQU    2            LENGTH OF 2
L3       EQU    3            LENGTH OF 3
L4       EQU    4            LENGTH OF 4
L8       EQU    8            LENGTH OF 8
L12      EQU    12           LENGTH OF 12
         SPACE
D0       EQU    0            DISPLACEMENT OF 0
D1       EQU    1            DISPLACEMENT OF 1
D2       EQU    2            DISPLACEMENT OF 2
D4       EQU    4            DISPLACEMENT OF 4
D6       EQU    6            DISPLACEMENT OF 6
D8       EQU    8            DISPLACEMENT OF 8
         SPACE
FACTOR   EQU    8            USED TO CALCULATE MSG DISPLACEMENT
FOUR     EQU    4            RETURN CODE FROM CALL AND GO
GOCODE   EQU   X'04'         GO RETURN CODE
EIGHT    EQU    8            CALL CODE FOR PARSE EXIT
ERCODE   EQU   8             ERROR RETURN CODE FROM RUN TO END TEST
CALLCODE EQU   GOCODE        CALL RETURN CODE - SAME AS GO
TWELVE   EQU   12            PARSE VALIDITY CHECK AND RUN RETURN CODES
RUNCODE  EQU   X'0C'         RUN RETURN CODE
RET16    EQU   16            USED TO SET ATTN RETURN CODE FOR IKJEGMNL
RC24     EQU   24            ESTAE ERROR RETURN CODE
RETCOD20 EQU   20            USED TO SET STAE RETURN CODE FOR IKJEGMNL
HEXONE   EQU   X'01'         INDICATOR GETMAIN FAILED
HEXTHREE EQU   X'03'         INDICATOR LINK FAILED
HEXFF    EQU   X'FF'         INDICATOR OF END OF STAE ABEND TABLE
HEXOF    EQU   X'0F'         BINARY '00001111' USED TO TEST FOR
*                            KEYWORDS FROM PARSE
HIGHBIT  EQU   B'10000000'   HIGH ORDER BIT MASK.
LENBITS  EQU   X'C0'         LENGTH BITS OF OP CODE
PLUSSIGN EQU   C'+'          PLUS SIGN FOR INDICATING 2ND LEVEL MSG
         EJECT
         USING TCOMTAB,R9    SET UP TCOMTAB ADDRESSABILITY
*                            FOR THIS CSECT
         USING TSTCWORK,R6   R6 WILL BE SET UP TO POINT TO
*                            TSTCWORK
         SPACE
***********************************************************************
*                                                                     *
*                 GO PROCESSING STARTS HERE                           *
*                                                                     *
***********************************************************************
         SPACE
GO       DS    0H            GO COMMAND OF TEST
         SAVE  (14,12),,*    SAVE CALLER'S REGISTERS
         LR    R12,R15       ESTABLISH ADDRESSABILITY TO BEGINNING
         USING IKJEGGO,R12   OF PROGRAM
         LA    R5,GOSPL      R5=ADDR OF ESTAE PARM LIST
         BAL   R10,SETUP     FINISH ENTRY LINKAGE, ISSUE STAE, AND
*                            POINT R6 TO GO'S WORKAREA
         MVI   CMDCODE,GOCODE SAVE GO RETURN CODE
         LA    R2,FOUR       SAVE GO CODE FOR PARSBILD ROUTINE
         SPACE
INIT     DS    0H            RUN PROCESSING ENTERS HERE
***********************************************************************
**             CHECK FOR AN ADDRESS IN INPUT COMMAND                 **
***********************************************************************
         TM    TSTFLGS3,NOPARMS  HAS AN ADDRESS BEEN SUPPLIED.
         BO    RESUME        NO ADDRESS - CONTINUE.
***********************************************************************
**             SET UP PCL AND PARSE THE COMMAND                      **
***********************************************************************
         L     R4,GOCON      REG 4 CONTAINS GO PARAMETER CONTROL
*                            LIST (PCL) ADDRESS
         BAL   R10,PARSBILD  BUILD PARM LIST AND PARSE INPUT
         SPACE
***********************************************************************
** CHECK TO SEE IF AN ADDRESS IS SPECIFIED.  IF SO USE IT TO ALTER   **
** THE PROGRAM'S RESUME ADDRESS, OTHERWISE BACK THE CURRENT RESUME   **
** ADDRESS UP TWO BYTES TO CONTINUE.                                 **
***********************************************************************
         SPACE
         SR    R5,R5         CLEAR REGISTER 5
         L     R7,TSTANSPL   REG 7 CONTAINS ADDRESS OF PDL
         USING GORUNDUM,R7   ESTABLISH PDL ADDRESSABILITY
         LA    R7,ADDR       REG 7 CONTAINS ADDR OF ADDRESS PDE
         DROP  R7            DROP PDL ADDRESSABILITY
         USING IKJPARMA,R7   ESTABLISH PDE ADDRESSABILITY
***********************************************************************
*              REGISTER 7 IS USED AS THE BASE FOR ALL PDE             *
*              REFERENCES FROM HERE ON                                *
***********************************************************************
         O     R5,PDEUSER    REG 5 CONTAINS ADDRESS IF SPECIFIED
         BZ    RESUME        NONE SPECIFIED, USE RESUME ADDR.
         SPACE
***********************************************************************
**             AN ADDRESS WAS SUPPLIED, TURN OFF WAIT COUNT          **
***********************************************************************
SETWAIT  DS    0H
         L     R3,PPTCB      ADDR SPECIFIED, REG 3 CONTAINS ADDR OF
*                            PROBLEM PROGRAM TCB
         IKJEGS9G  WCF,TCBADDR=(R3),MF=(E,SVCPARMS)   TURN OFF         *
                             WAIT COUNT
         LTR   R15,R15       SVC 97 RETURN CODE ZERO ?
         BNZ   SVCERR        NO, ISSUE ERROR MESSAGE AND QUIT
         B     PSWSET        SPECIFIED, USE IT.
         SPACE
***********************************************************************
** REGISTER 5 CONTAINS THE PRESUMED NEW IC ADDR FOR THE PROGRAM.     **
** DETERMINE IF A USER-INSERTED BREAKPOINT EXISTS AT THAT ADDR.      **
***********************************************************************
BREAKTST DS    0H
         SPACE
         L     R4,BREAKTAB   REG 4 CONTAINS ADDR OF FIRST ELEMENT
         SPACE
***********************************************************************
**THIS CODE TESTS TO SEE IF THE NEW IC IS ON THE BREAK ELEMENT CHAIN **
***********************************************************************
LOOP1    DS    0H
         LTR   R4,R4         IS THIS THE END OF CHAIN
         BZ    PSWSET2       YES, ADDR NOT A BREAKPOINT, USE IT FOR
*                            RESUME ADDRESS
         USING BRKELEM,R4    ESTABLISH BREAK ELEMENT ADDRESSABILITY
         C     R5,BRKADDR    IS ADDR SPECIFIED THIS BREAK ADDR
         BE    BREAK         YES, GO SET UP TO CHANGE THE IC
         L     R4,BRKLINK    NO, POINT TO NEXT BREAK ELEMENT
         B     LOOP1         GO TEST FOR BREAK POINT AT PRESUMED NEW
*                            IC ADDRESS
         SPACE
***********************************************************************
*        NO ADDRESS SUPPLIED. IF THIS IS A RUN REQUEST, GO REMOVE     *
*        ALL REMNANTS OF TEST FROM PP'S TCBS. OTHERWISE, GET RESUME   *
*        ADDRESS FROM OLD PSW IN SVRB FOR GO AND CALL.                *
***********************************************************************
RESUME   DS    0H
         L     R5,PPTCB      REG 5 POINTS TO THE PROBLEM PROGRAM TCB
         L     R5,TCBRBP-TCB(R5) REG 5 POINTS TO THE BREAKPOINT SVRB
         L     R5,RBLINK-RBSECT(R5)    REG 5 POINTS TO THE PROBLEM
*                            PROGRAM REQUEST BLOCK
         L     R5,RBOPSW-RBSECT+D4(R5) PICK UP THE RESUME IC FROM
*                            THE OLD PSW (RBOPSW) IN THE REQUEST BLOCK
         LA    R5,D0(R5)     CLEAR HIGH ORDER BYTE
         CLI   CMDCODE,RUNCODE    IS THIS A RUN REQUEST ?
         BE    RUNSET        YES, SET RESUME ADDRESS FOR RUN
         CLC   D0(L2,R5),TSTSVC IS BREAKPOINT INSTR THERE
         BE    BREAKTST      YES, CHECK FOR USER-SET BREAKPOINT
         B     EXIT          NO, GO RETURN TO MAINLINE
         SPACE 2
***********************************************************************
** RESUME ADDRESS IN REGISTER 5 IS ADDRESS OF A BREAK SVC.           **
** SET REGISTER 5 TO POINT TO INSTRUCTION SAVED IN THE BREAK ELEMENT.**
** THE PROBLEM PROGRAM WILL RESUME AT THAT POINT.                    **
***********************************************************************
BREAK    DS    0H
         LA    R5,BRKINST    REG 5 CONTAINS ADDRESS OF SAVED INST
***********************************************************************
*        R5 CONTAINS NEW RESUME ADDRESS. PUT IT INTO RESUME           *
*        PSW IN SVRB                                                  *
***********************************************************************
PSWSET2  DS    0H
         L     R3,PPTCB      GET ADDRESS OF PP'S TCB
PSWSET   DS    0H
         LA    R5,D0(R5)     CLEAR HIGH ORDER BYTE OF ADDR
         IKJEGS9G OPSW,TCBADDR=(R3),VALUE=(R5),MF=(E,SVCPARMS)         *
                             RESET IC IN RESUME PSW
         LTR   R15,R15       SVC 97 RETURN CODE ZERO?
         BNZ   SVCERR        NO, ISSUE ERROR MESSAGE AND QUIT
         SPACE
***********************************************************************
*        IF THIS IS A RUN REQUEST, GO REMOVE ALL REMNANTS OF TEST     *
*        FROM PP'S TCBS.                                              *
***********************************************************************
         CLI   CMDCODE,RUNCODE  IS THIS A RUN REQUEST ?
         BE    RESET         YES, GO RESET TCBS
         SPACE
***********************************************************************
*        NORMAL RETURN TO MAINLINE FROM GO, CALL, AND RUN             *
***********************************************************************
EXIT     DS    0H            SET PROPER RETURN CODE (CONTAINED IN R11)
         SR    R15,R15       ZERO REG 15
         IC    R15,CMDCODE   PUT RETURN CODE INTO REGISTER 15
         SPACE
RETURN   DS    0H            RETURN TO IKJEGMNL
         LR    R2,R15        SAVE RETURN CODE
         ESTAE 0             REMOVE ESTAE
         LR    R15,R2        RESET RETURN CODE
         NI    TSTFLGS4,HEXFF-TSTRERTN TURN OFF RETRY BIT
         L     R13,SAVELAST-SAVEAREA(R13) RESET SAVE AREA POINTER
         RETURN  (14,12),RC=(15)  RETURN TO IKJEGMNL
         SPACE
***********************************************************************
*        INPUT COMMAND WAS INCORRECT AND PARSE WAS UNABLE TO          *
*        PROMPT. TELL MAINLINE TO FLUSH THE INPUT STACK.              *
***********************************************************************
FLUSHIT  DS    0H
         OI    TSTFLGS4,TSTFLUSH  INDICATE IKJEGMNL SHOULD FLUSH STACK
         SPACE
***********************************************************************
*        SET RETURN CODE TO MAINLINE TO 0 FOR SYSTEM ERROR            *
***********************************************************************
EXIT0    DS    0H
         XR    R15,R15       SET RETURN CODE
         B     RETURN        RETURN TO IKJEGMNL
         SPACE
***********************************************************************
*        USER ENTERED AN ATTENTION, RETURN TO MNL WITH 16 RETURN CODE *
***********************************************************************
ATTNEXIT DS    0H
         LA    R15,RET16     INDICATE ATTENTION INTERRUPT ENCOUNTERED
         B     RETURN        GO SET UP TO RETURN TO IKJEGMNL
         SPACE
***********************************************************************
*        ESTAE ERROR ENCOUNTERED IN THIS MODULE OR ONE OF THE         *
*        MODULES CALLED BY THIS MODULE                                *
***********************************************************************
EXIT24   DS    0H
         LA    R15,RC24      INDICATE ESTAE ERROR ENCOUNTERED
         B     RETURN        GO SET UP RETURN TO IKJEGMNL
         SPACE
***********************************************************************
*        ERROR OR ATTN OCCURRED DURING VALIDITY CHECK PROCESSING.     *
*        SERVICE ROUTINE RETURN CODE WAS SAVED IN REGSAVE FIELD.      *
*        GET IT AND PERFORM APPROPRIATE FUNCTION.                     *
***********************************************************************
CHKRET   DS    0H
         L     R15,REGSAVE   PUT SAVED RETURN CODE INTO REG 15
SEVRET   DS    0H
         B     RETTAB(R15)   GO THROUGH FOLLOWING TABLE INDEXED
*                            CONTENTS OF REGISTER 15
RETTAB   DS    0H
         B     EXIT0         THIS CONDITION SHOULD BE IMPOSSIBLE
         B     EXIT0         4-FROM SERVICE ROUTINE-RETURN 0
         B     EXIT0         8-FROM SERVICE ROUTINE-RETURN 0
         B     EXIT0         12-FROM SERVICE ROUTINE-RETURN 0
         B     RETURN        16-FROM SERVICE ROUTINE-RETURN 16
         B     RETURN        20-FROM SERVICE ROUTINE-RETURN 20
         B     RETURN        24-FROM SERVICE ROUTINE-RETURN 24
         SPACE 2
***********************************************************************
*        THIS SUBROUTINE IS ENTERED WITH A BAL 10,SETUP.              *
*        IT COMPLETES THE ENTRY LINKAGE AND ISSUES ESTAE FOR GO,      *
*        RUN, AND CALL. UPON RETURN FROM THIS CODE, REG 6 CONTAINS    *
*        THE ADDRESS OF GO'S WORKAREA.                                *
***********************************************************************
SETUP    DS    0H
         L     R15,REGSAVE2  SUBCOMMAND SAVE AREA.
         ST    R15,SAVENEXT-SAVEAREA(R13) SAVE FOWARD POINTER.
         ST    R13,SAVELAST-SAVEAREA(R15) SAVE BACK POINTER.
         LR    R13,R15       SET REGISTER 13
**********************************************************************
*              ISSUE ESTAE FOR GO, RUN, AND CALL                     *
**********************************************************************
STAECODE DS    0H
         STM   R14,R12,RETURNPT-SAVEAREA(R13)  SAVE OUR REGISTERS
         L     R6,WORKAREA   LOAD ADDR OF WORKAREA
         XC    STAEAREA,STAEAREA CLEAR ESTAE PARM AREA
         L     R15,TSTSTAE   R15=ADDR OF ESTAE EXIT ROUTINE
         ESTAE (R15),CT,PARAM=(R5),XCTL=NO,RECORD=YES,                 *
               MF=(E,STAEAREA)  ESTABLISH ESTAE EXIT
         LTR   R15,R15       RETURN CODE FROM ESTAE
         BZ    D0(R10)       RETURN TO CALLER
         STC   R15,TSTESTRC  SAVE ESTAE RETURN CODE
         B     EXIT24        RETURN TO MAINLINE WITH RC=24
SMTSTAE  DS    0H            SMT LABEL FOR TEST CASES TGO01500
*                            AND TCAL2900
         BNZ   CODE16        NONZERO STAE RETURN CODE, GO WRITE MESSAGE
         BR    R10           RETURN TO CALLER.
         EJECT
***********************************************************************
*                                                                     *
*        RUN PROCESSING STARTS HERE                                   *
*                                                                     *
***********************************************************************
IKJEGRUN DS    0D            RUN COMMAND OF TEST
         SAVE  (14,12),,IKJEGRUN
         L     R12,BASECON-IKJEGRUN(R15)  SETUP BASE REG.
         LA    R5,RUNSPL     R5=ADDR OF ESTAE PARM LIST
         BAL   R10,SETUP     FINISH ENTRY LINKAGE, ISSUE STAE, AND
*                            POINT R6 TO GO'S WORKAREA
         MVI   CMDCODE,RUNCODE SAVE RETURN CODE FROM RUN
         LA    R2,TWELVE     SET RUN INDICATOR FOR PARSE EXIT.
         SPACE
***********************************************************************
*        IF THIS IS AN OVERLAY MODULE, THE HIGH ORDER BIT             *
*        OF THE FIRST BYTE OF THE TSTDCB FIELD IN TCOMTAB WILL BE ON. *
*        IF SO, WRITE ERROR MESSAGE. IF NOT, BRANCH TO INIT SECTION   *
*        OF GO'S CODE.                                                *
***********************************************************************
         TM    TSTDCB,HIGHBIT  IS THIS AN OVERLAY MODULE
         BZ    INIT          NO, CONTINUE PROCESSING REQUEST
         LA    R3,MSG3       YES, PREPARE TO WRITE MESSAGE IKJ57423I
         B     MSGRTN        GO TO THE MESSAGE ROUTINE
         SPACE
***********************************************************************
*        A RUN WAS ISSUED WITH NO RESUME ADDRESS. R5 CONTAINS         *
*        RESUME ADDRESS FROM PP'S RBOPSW FIELD. CHECK TO SEE          *
*        IF THIS ADDRESS POINTS TO PPEXIT2 IN TCOMTAB, OR TO AN       *
*        INSTRUCTION IN A BRKELEM. IF NEITHER, LEAVE RESUME           *
*        ADDRESS ALONE. IF IT POINTS TO PPEXIT2, RESET TO POINT       *
*        TO CVTEXIT IN THE CVT. IF IT POINTS TO A BRKELEM             *
*        INSTRUCTION, RESET IT TO POINT TO THE APPROPRIATE POINT      *
*        IN THE PROBLEM PROGRAM.                                      *
***********************************************************************
         SPACE
RUNSET   DS    0H            CHECK RESUME ADDRESS AND RESET IT
*                            IF NECESSARY
         LA    R4,PPEXIT2    GET ADDRESS OF PPEXIT2
         CR    R4,R5         IS RESUME ADDRESS PPEXIT2 ?
         BE    SETEXIT       YES, GO RESET TO POINT TO CVTEXIT
         L     R8,BREAKTAB   GET ADDRESS OF FIRST BRKELEM
         USING BRKELEM,R8    R8 IS BASE FOR BRKELEM
         SPACE
CKBRKELM DS    0H            IF A BRKELEM EXISTS, SEE IF RESUME
*                            ADDRESS FOLLOWS INSTRUCTION IN BRKELEM -
*                            IF IT DOES, PP PROBABLY ABENDED IN BRKELEM
         LTR   R8,R8         DOES A BRKELEM EXIST ?
         BZ    RESET         NO, GO RESET TRN FIELD
         TM    BRKINST,LENBITS  HOW LONG IS INSTRUCTION IN BRKELEM ?
         LA    R3,L2         PUT A 2 IN R3
         BZ    CHEKBRK       INSTRUCTION IS TWO BYTES, GO
*                            CHECK RESUME ADDRESS
         LA    R3,L2(R3)     ADD TWO MORE TO LENGTH
         BM    CHEKBRK       INSTRUCTION IS FOUR BYTES - GO CHECK
*                            RESUME ADDRESS
         LA    R3,L2(R3)     ADD TWO TO LENGTH - SIX BYTE INSTRUCTION
         SPACE
CHEKBRK  DS    0H            SEE IF RESUME ADDRESS POINTS TO
*                            END OF INSTRUCTION
         LA    R4,BRKINST(R3)  POINT TO END OF INSTRUCTION
         CR    R4,R5         DOES RESUME ADDRESS POINT THERE ?
         BE    SETBRK        YES, PP PROBABLY ABENDED HERE - GO RESET
*                            RESUME ADDRESS TO FOLLOW INSTRUCTION IN PP
         L     R8,BRKLINK    GET ADDRESS OF NEXT BRKELEM
         B     CKBRKELM      GO CHECK NEXT BRKELEM
SETBRK   DS    0H            RESUME ADDRESS FOLLOWED BREAKPOINT
*                            INSTRUCTION IN BRKELEM. RESET RESUME
*                            ADDRESS TO FOLLOW INSTRUCTION IN PP
         L     R4,BRKADDR    GET ADDR OF BREAKPOINT FOR BRKELEM
         LA    R4,D0(R3,R4)  POINT PAST BREAKPOINTED INSTRUCTION
         B     SETADDR       GO RESET RESUME ADDRESS
         SPACE
SETEXIT  DS    0H            RESUME ADDRESS POINTED TO PPEXIT2, RESET
*                            IT TO POINT TO CVTEXIT IN CVT
         L     R4,CVTPTR     GET ADDRESS OF CVT
         USING CVT,R4        R4 IS BASE FOR CVT
         LA    R4,CVTEXIT    GET ADDRESS OF CVTEXIT
         DROP  R4            R4 NO LONGER CVT BASE
         SPACE
SETADDR  DS    0H            R4 CONTAINS NEW RESUME ADDRESS. USE IT
*                            TO CHANGE RBOPSW FIELD.
         L     R5,PPTCB      GET PP'S TCB ADDRESS IN R5
         IKJEGS9G  OPSW,TCBADDR=(R5),VALUE=(R4),MF=(E,SVCPARMS)  RESET *
                             PP RESUME ADDRESS
         LTR   R15,R15       IS RETURN CODE ZERO ?
         BNZ   SVCERR        NO, GO ISSUE ERROR MESSAGE AND QUIT
         SPACE
***********************************************************************
*        RESET PROBLEM PROGRAM'S REGISTER 14 TO POINT TO AN SVC 3     *
*        IN CVT IF IT NOW POINTS TO SVC 97 (PPEXIT) IN TCOMTAB.       *
*        RESET BOTH THE ACTIVE PROGRAM'S REGISTER 14, AND REGISTER    *
*        14 IN THE FIRST SAVE AREA OFF THE FIRST DAUGHTER TCB         *
*        UNDER TEST.                                                  *
***********************************************************************
         SPACE
RESET    DS    0H            RESET REGISTER 14
         L     R4,TSTTCB     GET ADDRESS OF TEST'S TCB
         L     R4,TCBLTC-TCB(R4)  GET ADDRESS OF FIRST DAUGHTER
         L     R4,TCBFSA-TCB(R4)  GET ADDRESS OF FIRST SAVE AREA
         L     R8,RETURNPT-SAVEAREA(R4)  GET ORIGINAL REGISTER 14
         LA    R8,D0(R8)     CLEAR HIGH ORDER BYTE
         LA    R5,PPEXIT     GET ADDRESS OF SVC 97 IN TCOMTAB
         CR    R5,R8         ARE THEY THE SAME
         BNE   CKACTIVE      NO, GO CHECK ACTIVE R14
         L     R8,CVTPTR     GET ADDRESS OF CVT
         LA    R8,CVTEXIT-CVT(R8) GET ADDRESS OF SVC3 IN CVT
         ST    R8,RETURNPT-SAVEAREA(R4)  REPLACE ORIGINAL R14
         SPACE
CKACTIVE DS    0H            CHECK ACTIVE R14
         L     R4,PPTCB      GET ACTIVE PP TCB ADDRESS
         L     R5,TCBRBP-TCB(R4)  GET SVRB ADDRESS FOR SVC 97
         L     R8,RBGRS14-RBSECT(R5)  GET ACTIVE R14 FOR PP
         LA    R8,D0(R8)      CLEAR HIGH ORDER BYTE
         LA    R5,PPEXIT     GET ADDRESS OF SVC 97 IN TCOMTAB
         CR    R5,R8         ARE THEY THE SAME ?
         BNE   OFFTEST       NO, GO REMOVE REMNANTS OF TEST
         L     R8,CVTPTR     GET ADDRESS OF CVT
         LA    R8,CVTEXIT-CVT(R8) GET ADDRESS OF SVC3 IN CVT
         IKJEGS9G  GPR,TCBADDR=(R4),VALUE=(R8),REGNO=14,MF=(E,SVCPARMS)*
                             REPLACE ACTIVE R14
         LTR   R15,R15       SVC RETURN CODE ZERO ?
         BNZ   SVCERR        NO, GO ISSUE ERROR MESSAGE AND QUIT
         SPACE
***********************************************************************
*        OTHER PROCESSING ALL DONE.  FOR ALL TASKS UNDER TEST'S TCB,  *
*        TURN OFF TEST BIT AND RESET TCBTRN FIELD TO 0 IN TCB.        *
***********************************************************************
OFFTEST  DS    0H
         L     R4,TSTTCB     REG 4 CONTAINS ADDR OF TEST'S TCB
         USING TCB,R4        ALLOW SYMBOLIC REFERENCE
         LA    R8,D0(R4)     CLEAR HIGH ORDER BYTE AND SAVE
***********************************************************************
*        FIND TEST'S SUBTASKS' TCBS.                                  *
***********************************************************************
DAU      DS    0H
         L     R5,TCBLTC     GET THE ADDR OF THE LAST DAUGHTER TASK
         LTR   R5,R5         IS THERE A DAUGHTER TASK
         BNZ   PROCESS       YES, GO PROCESS
SIS      DS    0H
         L     R5,TCBNTC     NO, GET ADDRESS OF NEXT SISTER TCB IF ONE
         LTR   R5,R5         WAS THERE A SISTER TASK
         BNZ   PROCESS       YES, GO PROCESS
MOTH     DS    0H
         L     R4,TCBOTC     NO, GET ADDRESS OF MOTHER TASK
         LA    R4,D0(R4)     CLEAR HIGH ORDER BYTE
         CR    R4,R8         DOES MOTHER TASK = TEST TASK
         BNE   SIS           NO, GO CHECK FOR ANOTHER SISTER TCB
         SPACE
***********************************************************************
*        ALL DONE - RETURN TO MNL WITH OK RETURN CODE.                *
***********************************************************************
RUNRTN   DS    0H
         OI    TSTFLGS1,RUNSW TURN ON RUN SWITCH
         B     EXIT          RUN AND GO SHARE CODE FROM HERE ON.
         SPACE
***********************************************************************
*        IF TASK IS UNDER TEST, TURN OFF TEST BIT, RESET TCBTRN.      *
***********************************************************************
PROCESS  DS    0H
         LA    R5,D0(R5)     CLEAR HIGH ORDER BYTE
         CLC   TCBPKF,TCBPKF-TCB(R5)  IS THIS TCB'S KEY
*                            THE SAME KEY AS TEST'S TCB
         BNE   BUMPTCB       NO, THE TASK IS NOT UNDER TEST
         IKJEGS9G TCPOFF,TCBADDR=(R5),MF=(E,SVCPARMS) TURN OFF         *
                             TEST BIT
         LTR   R15,R15       SVC 97 RETURN CODE ZERO?
         BNZ   RUNBLEW       NO, GO TRY TO RECOVER
         IKJEGS9G TRN,TCBADDR=(R5),VALUE=D0,MF=(E,SVCPARMS) RESET TRN
         LTR   R15,R15       SVC97 RETURN CODE ZERO?
         BNZ   RUNBLEW       NO, GO TRY TO RECOVER
         SPACE
***********************************************************************
*        GET ADDRESS OF NEXT TCB, PROCESS IT.                         *
***********************************************************************
BUMPTCB  DS    0H            GET ADDRESS OF NEXT TCB
         LR    R4,R5         FIND NEXT TCB UNDER TEST
         B     DAU           LOOP UNTIL FINISHED
         EJECT
***********************************************************************
*        NONZERO RETURN CODE FROM SVC 97 INDICATES BAD ERROR. ATTEMPT *
*        TO RECOVER BY REVERSING ABOVE PROCEDURE. IF RECOVERY         *
*        FAILS, ISSUE CRITICAL SYSTEM ERROR MESSAGE, AND RETURN       *
*        TO MAINLINE WITH A RETURN CODE OF 8 TO END TEST SESSION.     *
*        IF RECOVERY IS SUCCESSFUL, ISSUE SYSTEM ERROR MESSAGE AND    *
*        RETURN TO MAINLINE WITH A RETURN CODE OF 0.                  *
***********************************************************************
         SPACE
RUNBLEW  DS    0H
         L     R4,TSTTCB     GET ADDRESS OF TEST'S TCB IN R4
         LA    R8,D0(R4)     CLEAR HI BYTE AND PUT IN R8
         SPACE
BLEWDAU  DS    0H
         L     R5,TCBLTC     GET ADDRESS OF DAUGHTER TCB
         LTR   R5,R5         ANY DAUGHTER TCB?
         BNZ   BLEWPROC      YES, GO PROCESS IT
         SPACE
BLEWSIS  DS    0H
         L     R5,TCBNTC     GET ADDRESS OF SISTER TCB
         LTR   R5,R5         ANY SISTER TCB?
         BNZ   BLEWPROC      YES, GO PROCESS IT
         SPACE
BLEWMOTH DS    0H
         L     R4,TCBOTC     GET ADDRESS OF MOTHER TCB
         LA    R4,D0(R4)     CLEAR HI BYTE
         CR    R8,R4         IS THIS TEST'S TCB?
         BNE   BLEWSIS       NO, CONTINUE CLEANUP
         B     RUNSVCMS      RECOVERY SUCCESSFUL, GO ISSUE MESSAGE
         SPACE
BLEWPROC DS    0H
         LA    R5,D0(R5)     CLEAR HI BYTE OF TCB ADDRESS
         CLC   TCBPKF,TCBPKF-TCB(R5)  DOES THIS TCB HAVE THE SAME
*                            KEY AS TEST'S
         BNE   BLEWBUMP      NO, THIS TCB NOT UNDER TEST
         CLI   TCBABF-TCB(R5),TCBTCP   IS THIS TCB'S TEST BIT ON?
         BE    BLEWTRN       YES, GO CHECK IT'S TRN FIELD
         IKJEGS9G TCPON,TCBADDR=(R5),MF=(E,SVCPARMS) TURN THIS TCB'S   *
                             TEST BIT ON
         LTR   R15,R15       SVC 97 RETURN CODE ZERO?
         BNZ   RUNEND        NO, RECOVERY UNSUCCESSFUL
         SPACE
BLEWTRN  DS    0H
         L     R7,TCBTRN-TCB(R5)  GET TCBTRN FIELD IN R7
         LA    R7,D0(R7)     CLEAR HI BYTE
         CR    R7,R9         IS TRN FIELD POINTER TO TCOMTAB ?
         BE    BLEWBUMP      YES, THIS TCB OK
         IKJEGS9G  TRN,TCBADDR=(R5),VALUE=(R9),MF=(E,SVCPARMS)  RESET  *
                             TRN FIELD OF TCB
         LTR   R15,R15       SVC 97 RETURN CODE ZERO?
         BNZ   RUNEND        NO, RECOVERY UNSUCCESSFUL
         SPACE
BLEWBUMP DS    0H
         LR    R4,R5         GET ADDRESS OF NEXT TCB
         B     BLEWDAU       GO CHECK IT
         SPACE
RUNEND   DS    0H
         O     R2,HIBITON    MAKE R2 NEGATIVE TO INDICATE BAD ERROR
         LA    R3,MSG10      PUT MSG ID IN R3
         B     MSGRTN        GO WRITE MESSAGE
         DROP  R4            R4 NO LONGER NEEDED FOR TCB ADDRESSES
         EJECT
***********************************************************************
*                                                                     *
*        CALL PROCESSING STARTS HERE                                  *
*                                                                     *
***********************************************************************
IKJEGCAL DS    0D            CALL COMMAND OF TEST
         SAVE  (14,12),,IKJEGCAL
         L     R12,BASECON-IKJEGCAL(R15)  SETUP BASE REG.
         LA    R5,CALSPL     R5=ADDR OF ESTAE PARM LIST
         BAL   R10,SETUP     FINISH ENTRY LINKAGE, ISSUE STAE, AND
*                            POINT R6 TO GO'S WORKAREA
         MVI   CMDCODE,CALLCODE SAVE RETURN CODE FROM CALL (SAME AS GO)
         LA    R2,EIGHT      CALL CODE FOR PARSE VALIDITY EXIT.
         SPACE
***********************************************************************
** BUILD PARAMETER LIST AND PARSE THE CALL COMMAND.                  **
***********************************************************************
         L     R4,CALLCON    REG 4 CONTAINS ADDRESS OF CALL'S PARAMETER
*                            CONTROL LIST
         BAL   R10,PARSBILD  BUILD PARM LIST AND PARSE INPUT
         L     R8,TSTANSPL   REG 8 CONTAINS THE PDL ADDR
         USING CALLDUMM,R8   ESTABLISH ADDRESSABILITY FOR PDL
         SPACE
***********************************************************************
** MOVE PROBLEM PROGRAMS REGISTERS INTO WORKING STORAGE IN ORDER TO  **
** MAKE THE REQUESTED CHANGES WITH A SINGLE ISSUANCE OF TEST'S SVC.  **
***********************************************************************
         SPACE
         L     R5,PPTCB      REG 5 CONTAINS THE ADDR OF THE PROBLEM
*                            PROGRAM TASK CONTROL BLOCK (TCB)
         USING TCB,R5        ESTABLISH TCB ADDRESSABILITY
         L     R4,TCBRBP     REG 4 CONTAINS THE ADDR OF SVC'S SVRB
         DROP  R5            RELEASE REG 5 FOR FUTURE USE.
         MVC   PPRSAVE,RBGRSAVE-RBSECT(R4) MOVE PROBLEM PROGRAM'S
*                            REGISTERS INTO COMMAND'S WORKAREA
         SPACE
***********************************************************************
**       INITIALIZE COUNTER FOR PARMLIST GETMAIN, CHECK FOR          **
**       PARM KEYWORD.                                               **
***********************************************************************
         LA    R4,L12        REG 4 IS AN ACCUMULATOR-HERE IS SET FOR
*                            MINIMUM LENGTH FOR PARMLIST, ONE
*                            ADDRESS AND 2 CONTROL WORDS.
         TM    PARM+D1,HEXOF WAS PARM SPECIFIED IN CALL COMMAND
         BZ    BLDLST        NO, BUILD A NULL PARAMETER LIST
         LA    R7,PARMADDR   YES, GET ADDR OF FIRST PARM ADDRESS PDE
         SPACE
***********************************************************************
** THIS CODE DETERMINES THE SIZE OF THE AREA FOR THE PARAMETER LIST  **
** THAT IS TO BE BUILT.                                              **
***********************************************************************
LOOP3    DS    0H            EXAMINE PARM CHAIN
         L     R7,PDECHAIN   OBTAIN THE ADDR OF THE NEXT ADDRESS PDE
         LA    R7,D0(R7)     CLEAR HIGH ORDER BYTE
         LTR   R7,R7         IS THERE ANOTHER ADDRESS PDE
         BZ    BLDLST        NO, ISSUE GETMAIN AND BUILD PARMLIST
         LA    R4,D4(R4)     YES, BUMP ACCUMULATOR FOR ONE MORE ADDRESS
         B     LOOP3         GO FIND NEXT ADDR PDE IF ONE EXISTS
         SPACE
***********************************************************************
*        USE CALCULATED LENGTH TO ISSUE GETMAIN FOR PARMLIST          *
***********************************************************************
SMTGET01 DS    0H            SMT LABEL FOR TEST CASE TGO01500
BLDLST   DS    0H            OBTAIN CORE FOR PARAMETER LIST
         LR    R0,R4         PUT LENGTH OF GETMAIN INTO REGISTER 0
         GETMAIN RC,LV=(0),SP=1   ISSUE GETMAIN FOR STORAGE
BLOW1    EQU   *             ABEND TABLE ENTRY
         LTR   R15,R15       WAS GET MAIN SUCCESSFUL
         BZ    GETMOK        YES CONTINUE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
* ISSUE 'GETMAIN SVC ERROR' MESSAGE
         IKJEGSIO SVCERR,SVC=10,RC=(R15),ID=GO014,MF=(E,TSTIOPRM)
         C     R15,ATTNRC    IS ATTENTION IN EFFECT?
         BE    ATTNEXIT      YES,SEND RC=16 TO MAINLINE
         C     R15,ESTAERC   DID IO FAIL ON ESTAE?
         BE    EXIT24        YES,SEND RC=24 TO MAINLINE
         B     MSGRTNA       GO ISSUE MESSAGE                  XXXXXXXX
         SPACE
***********************************************************************
*        CHAIN ADDRESS OF PARMLIST OFF CALLPARM FIELD IN TCOMTAB      *
***********************************************************************
GETMOK   DS    0H
         LA    R3,CALLPARM   GET ADDRESS OF BEGINNING OF PARAMETER LIST
*                            CHAINED FROM A WORD IN TCOMTAB
         SPACE
LOOP4    DS    0H            CHECK FOR MORE PARAMETER LISTS
         OC    D1(L3,R3),D1(R3) ANY MORE PARAMETER LISTS AROUND
         BZ    ADDL          NO, GO ADD NEW LIST TO THE CHAIN
         L     R3,D0(R3)     YES, GET ADDRESS OF NEXT PARAMETER LIST
         B     LOOP4         GO SEE IF IT IS LAST ON CHAIN
         SPACE
ADDL     DS    0H            ADD NEW PARAMETER LIST TO CHAIN IN TCOMTAB
         ST    R1,D0(R3)     PUT ADDR OF NEW LIST INTO FIRST WORD OF
*                            LAST ENTRY OF CHAIN
         SPACE
***********************************************************************
*        FINISH INITIALIZATION OF PARMLIST. CHECK FOR PARM KEYWORD.   *
*        IF NO PARM, DUMMY IS PASSED. SET PP R1 TO POINT TO           *
*        ADDRESSES IN PARM LIST.                                      *
***********************************************************************
         XC    D0(L8,R1),D0(R1)   ZERO FIRST EIGHT BYTES
*                            OF PARAMETER BUFFER
         STH   R4,D4(R1)     PLACE LENGTH OF NEW LIST INTO THE LENGTH
*                            FIELD OF NEW ENTRY ON CHAIN
         LA    R1,D6(R1)     POINT TO HALFWORD OF ZEROS
         ST    R1,D2(R1)     STORE ADDRESS OF HALFWORD OF
*                            ZEROS FOR DUMMY PARM LIST
         LA    R1,L2(R1)     POINT TO BEGINNING OF ACTUAL
*                            PARAMETER ADDRESS LIST
         ST    R1,PPREG1     REPLACE PP REG 1 CONTENTS
         TM    PARM+D1,HEXOF WAS PARM SPECIFIED
         BZ    VARLIST       NO - CHECK FOR VL KEYWORD
         SPACE
***********************************************************************
** BUILD PARAMETER LIST FROM ADDRESS PDE USER FIELDS                 **
***********************************************************************
PARMSET  DS    0H
         LA    R7,PARMADDR   REG 7 CONTAINS ADDR OF FIRST PARAMETER
*                            ADDRESS PDE
         SPACE
LOOP5    DS    0H            SET UP PARAMETER
         L     R5,PDEUSER    PUT PARM ADDRESS IN R5
         LA    R5,D0(R5)     ZERO HIGH ORDER BYTE OF ADDRESS
         ST    R5,D0(R1)     PUT ADDRESS IN PARM LIST
         L     R7,PDECHAIN   REG 7 POINTS TO NEXT ADDRESS PDE
         LA    R7,D0(R7)     CLEAR HIGH ORDER BYTE
         LTR   R7,R7         WERE THERE ANY MORE PDES
         BZ    VARLIST       NO, CHECK IF LIST IS VARIABLE LENGTH
         LA    R1,D4(R1)     YES, BUMP LIST POINTER
         B     LOOP5         AND GO MOVE NEXT ADDR INTO NEW LIST
         SPACE
***********************************************************************
*        IF VL WAS SPECIFIED, TURN ON HIGH-ORDER BIT OF LAST          *
*        ADDRESS IN PARM LIST.                                        *
***********************************************************************
VARLIST  DS    0H            CHECK FOR 'VL' SPECIFIED
         TM    VLIST+D1,HEXOF  WAS 'VL' SPECIFIED
         BZ    RETNCHK       NO, GO CHECK FOR RETURN KEYWORD
         OI    D0(R1),HIGHBIT YES, FLAG HIGH ORDER BYTE OF LAST
*                            ELEMENT OF LIST WITH A X'80'
         SPACE
***********************************************************************
*        IF THE RETURN KEYWORD IS SPECIFIED, SET THE CONTENTS         *
*        OF PP REG 14  TO THE SPECIFIED ADDRESS. OTHERWISE, POINT     *
*        PP REG 14 TO A BREAK SVC IN TCOMTAB.                    *
***********************************************************************
RETNCHK  DS    0H
         TM    RETKEY+D1,HEXOF WAS 'RETURN' SPECIFIED
         BZ    BREAKIT       NO, SET REG 14 FOR BREAK
         LA    R7,RETADDR    REG 7 CONTAINS ADDRESS OF RETURN ADDR PDE
         MVC   PPREG14,PDEUSER MOVE ADDR INTO REG 14
         B     ZAPREGS       RESET ALL PP REGS
         SPACE
BREAKIT  DS    0H            SET REG 14
         LA    R7,PPEXIT     REG 7 CONTAINS ADDR OF BREAK SVC
         ST    R7,PPREG14    RESET REGISTER 14 WITH THIS ADDRESS
         SPACE
***********************************************************************
*        SET PP REG 15 TO ADDRESS SPECIFIED BY USER. PUT ALTERED      *
*        PP REGS BACK IN SVRB.                                        *
***********************************************************************
ZAPREGS  DS    0H            RESTORE ALL PP REGS, PICKING UP CHANGES
         SPACE
         LA    R7,BRADDR     REG 7 CONTAINS ADDR OF BRANCH ADDR PDE
         L     R5,PDEUSER    REG 5 CONTAINS THE BRANCH ADDRESS
         ST    R5,PPREG15    PLACE ENTRY ADDR IN PP R15.
         L     R3,PPTCB      REG 3 CONTAINS TCB PTR FOR TEST SVC
         IKJEGS9G AGPR,TCBADDR=(R3),VALUE=PPRSAVE,MF=(E,SVCPARMS)      *
                             RESTORE PP'S ALTERRED REGISTERS
         LTR   R15,R15       SVC 97 RETURN CODE ZERO?
         BNZ   CALSVCMS      NO, GO ISSUE ERROR MESSAGE AND QUIT
         SPACE
***********************************************************************
**HAVING SET ADDRESS AT WHICH PROBLEM PROGRAM IS TO RESUME EXECUTION**
**IN REGISTER 5 AND A 'GO' RETURN CODE IN REGISTER 11, ENTER 'GO'   **
**LOGIC TO EFFECT RESET OF RIGHT-HALF PP RBOPSW AND RETURN TO       **
**IKJEGMNL.                                                          **
***********************************************************************
         SPACE
         B     SETWAIT       ENTER 'GO' LOGIC
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE ADDRESS VALIDITY CHECK ROUTINE FOR GO,           *
*        CALL, AND RUN.                                               *
*                                                                     *
***********************************************************************
ADDRCHK  DS    0H
         SAVE  (14,12),,ADDRCHK
         L     R12,BASECON-ADDRCHK(R15)   SETUP BASE REG.
         L     R7,D0(R1)     REG 7 CONTAINS ADDRESS OF ADDRESS PDE
         L     R9,D4(R1)     REG 9 CONTAINS ADDRESS OF TCOMTAB
         LA    R8,D8(R1)     SAVE ADDRESS OF THIRD WORD IN LIST
         L     R4,REGSAVE3   REG 4 CONTAINS NEW SAVEAREA ADDRESS
         ST    R13,SAVELAST-SAVEAREA(R4) STORE BACK POINTER.
         ST    R4,SAVENEXT-SAVEAREA(R13) STORE FORWARD POINTER.
         LR    R13,R4        SET NEW SAVE ADDR IN REG 13
         SPACE
***********************************************************************
*        CHECK FOR INVALID ADDRESS TYPE. IF INVALID, ISSUE            *
*        ERROR MESSAGE.                                               *
***********************************************************************
         OI    TSTFLGS4,TSTVALCK TURN ON VALIDITY CHECK BIT    XXXXXXXX
         OC    PDEINDCT,PDEINDCT WAS INDIRECT ADDRESSING SPECIFIED
         BNZ   CONVERT       YES, VALID STORAGE ADDR, CONVERT IT
         TM    PDEFLG4,GENR+LFPR+SFPR WAS REG TYPE ADDRESSING USED
         BNZ   BUMRTURN      YES, INVALID ADDR, REQUEST MSG & PROMPT
         SPACE
***********************************************************************
*        CONVERT THE ADDRESS TO BINARY USING IKJEGCVT.                *
***********************************************************************
CONVERT  DS    0H
         SPACE
         L     R1,OUTBUF     R1=ADDR OF OUTPUT BUFFER
         XC    D0(L4,R1),D0(R1) ZERO OUT FIRST WORD OF OUT BUFFER
         LR    R1,R7         REG 1 CONTAINS ADDR OF ADDRESS PDE
         LCR   R1,R1         NEGATIVE FOR ADDR CONVERSION
         SR    R0,R0         REG 0 IS POSITIVE TO INDICATE BINARY
*                            CONVERSION
         L     R15,TSTCONVT  REG 15 CONTAINS ADDR OF IKJEGCVT ENTRY PT
         BALR  R14,R15       ATTEMPT TO CONVERT THE ADDRESS
         B     RETAB(R15)    BRANCH THROUGH FOLLOWING TABLE INDEXED
*                            BY CONTENTS IN REGISTER 15
RETAB    DS    0H
         B     RET0          0-CONTINUE PROCESSING
         B     SETMSG        4-IKJEGCVT CODE-RETURN TO IKJPARS
         B     SETMSG2       8-IKJEGSYM CODE-RETURN TO IKJPARS
         B     SETMSG2       12-IO ERROR-RETURN TO IKJPARS
         B     RETURN12      16-ATTENTION INTERRUPT-RETURN TO PARSE
         B     RETURN12      20-IKJEGCVT OR IKJEGSYM BLEW
         B     RETURN12      24-ESTAE ERROR
         SPACE
***********************************************************************
**THIS CODE PASSES THE ADDRESS OF A SECOND LEVEL MESSAGE FROM        **
**IKJEGCVT OR IKJEGSYM BACK TO IKJPARS.  THE ADDRESS IS PICKED UP IN **
**THE PDEUSER WORD AND PLACED IN THE THIRD WORD OF THE PARAMETER LIST**
**PASSED BY IKJPARS.  IF NO SECOND LEVEL EXISTS THE PDEUSER WORD WILL**
**CONTAIN X'FF000000'. CVT RETURN CODE WAS 4 - UNABLE TO CONVERT.    **
***********************************************************************
SETMSG   DS    0H
         L     R1,OUTBUF     R1=ADDR OF OUTBUF
         SR    R0,R0         R0=0
         C     R0,D0(R1)     IS FIRST WORD OF OUTBUF ZERO?
         BE    RETURN8       YES, NO SECOND LEVEL MESSAGE TO PASS
         MVC   D0(L4,R8),OUTBUF MOVE ADDR OF SECOND LEVEL MESSAGE
*                               INTO PARSE PARAMETER LIST
RETURN8  DS    0H
         LA    R15,EIGHT     SET RETURN CODE TO IKJPARS TO 8
         B     CHKRTURN      GO SET UP TO RETURN TO IKJPARS
         SPACE
***********************************************************************
*        SAME AS ABOVE, BUT CVT RETURN CODE 8 - EITHER SYM ERROR      *
*        OR I/O ERROR.                                                *
***********************************************************************
SETMSG2  DS    0H
         L     R1,OUTBUF     R1=ADDR OF OUTBUF
         SR    R0,R0         R0=0
         C     R0,D0(R1)     IS FIRST WORD OF OUTBUF ZERO?
         BE    RETURN12      YES, NO SECOND LEVEL MESSAGE TO PASS
         MVC   D0(L4,R8),OUTBUF MOVE ADDR OF SECOND LEVEL MESSAGE
*                               INTO PARSE PARAMETER LIST
         SPACE
***********************************************************************
*        SET RETURN CODE TO PARSE TO 12 TO INDICATE THAT PARSE IS     *
*        TO RETURN TO GO WITH A RETURN CODE OF 20. SAVE IKJEGCVT      *
*        RETURN CODE IN REGSAVE FIELD OF GO'S WORKAREA.               *
***********************************************************************
RETURN12 DS    0H
         L     R6,WORKAREA   LOAD ADDR OF WORKAREA
RETRN12  DS    0H
         OI    TSTFLGS4,TSTFLUSH  TURN ON TSTFLUSH SO MNL WILL
*                            FLUSH INPUT STACK
         ST    R15,REGSAVE   SAVE RETURN CODE FOR LATER USE
         LA    R15,TWELVE    SET RETURN CODE FOR IKJPARS
         B     CHKRTURN      GO RETURN TO IKJPARS
         SPACE
***********************************************************************
*        CVT RETURN CODE WAS 0, ADDRESS HAS BEEN CONVERTED.           *
*        IF HIGH ORDER BIT OF PDEUSER FIELD IS ON, PDEUSER POINTS     *
*        TO THE CONVERTED ADDRESS WORD. OTHERWISE, PDEUSER            *
*        CONTAINS THE CONVERTED ADDRESS.                              *
***********************************************************************
RET0     DS    0H
         TM    PDEUSER,PDESIB IS ADDRESS IN SYM INFO BLOCK
         BZ    SET0          NO, LEAVE PDEUSER FIELD ALONE
         L     R1,PDEUSER    YES, REG 1 CONTAINS ADDR OF SYM INFO
*                            BLOCK
         MVC   PDEUSER,D0(R1) MOVE ACTUAL ADDRESS INTO PDEUSER.
         SPACE
***********************************************************************
*        TURN ON FLAG IN PDEUSER FIELD TO INDICATE ADDRESS            *
*        ADDRESS HAS BEEN CONVERTED.                                  *
***********************************************************************
SET0     DS    0H
         MVI   PDEUSER,PDECONVD  TURN ON FLAG IN PDE TO INDICATE
*                            ADDRESS IS CONVERTED
         XR    R15,R15       INDICATE VALID PARAMETER TO IKJPARS
         SPACE
***********************************************************************
*        RETURN TO PARSE.                                             *
***********************************************************************
CHKRTURN DS    0H
         NI    TSTFLGS4,HEXFF-TSTVALCK TURN OFF VALIDITY CHECK BIT
         L     R13,SAVELAST-SAVEAREA(R13) RESET REGISTER 13
*                            TO RETURN TO IKJPARS
         RETURN (14,12),RC=(15) RETURN TO IKJPARS
         SPACE 3
***********************************************************************
** INFORM USER ADDRESS IS INCORRECTLY SPECIFIED.                     **
***********************************************************************
BUMRTURN DS    0H
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
* ISSUE 'INVALID ADDRESS' MESSAGE
* ISSUE 'REG.NOTATION MUST BE INDIRECT GEN.REG.' MESSAGE
         IKJEGSIO MSG,FIRST=M0101,INST11=(APDE,(R7)),SECOND=M0274,     *
               ID=GO014,MF=(E,TSTIOPRM)
         LTR   R15,R15       RETURN FROM IO A ZERO
         BZ    SETMSG        YES, MESSAGE WAS WRITTEN-RETURN
         B     RETRN12       NO,MSG MAY NOT HAVE BEEN WRITTEN-RETURN
         EJECT
***********************************************************************
*        THIS SUBROUTINE BUILDS A STANDARD PARSE PARAMETER LIST       *
*        AND LINKS TO PARSE. IT IS ENTERED BY A BAL 10,PARSBILD.      *
*        THE PCL ADDRESS TO BE USED IS PASSED IN REG 4. REGS 1 AND    *
*        5 ARE CLOBBERED.                                             *
***********************************************************************
PARSBILD DS    0H
         LA    R1,PPLAREA    REGISTER 1 CONTAINS ADDR OF PPL AREA
         USING PPL,R1        ESTABLISH ADDRESSABILITY TO PARSE
*                            PARAMETER LIST
         MVC   PPLUPT,TSTUPT PUT ADDR UPT INTO PARAMETER LIST
         MVC   PPLECT,TSTECT PUT ADDR ECT INTO PARAMETER LIST
         MVC   PPLECB,TSTCPECB PUT ADDR ECB INTO PARAMETER LIST
         ST    R4,PPLPCL     PUT ADDR OF PCL INTO PARAMETER LIST
         LA    R5,TSTANSPL   PUT POINTER TO ANSWER PLACE INTO
         ST    R5,PPLANS     PARAMETER LIST TO IKJPARS
         MVC   PPLCBUF,INBUF PUT ADDRESS OF COMMAND BUFFER INTO
*                            PARAMETER LIST FOR PARSE
         ST    R9,PPLUWA     PUT ADDRESS OF TCOMTAB INTO LIST
         DROP  R1            DROP ADDRESSABILITY TO PARSE PARAMETER
*                            LIST
         LINK  EP=IKJPARS,ERRET=PARSERR    PARSE THE COMMAND.
PARSBLOW DS    0H            LABEL USED BY STAE RETRY ROUTINE
SMTPARS  DS    0H            SMT LABEL FOR TEST CASES TGO01500 AND
*                            TCAL2800
         B     PARSTAB(R15)  GO HANDLE RETURN CODE FROM IKJPARS
PARSTAB  DS    0H
         B     CODE0         0-CONTINUE PROCESSING
         B     FLUSHIT       4-GO BACK TO IKJEGMNL
         B     ATTNEXIT      8-ATTENTION ENCOUNTERED-EXIT
         B     CODE12        12-GO WRITE PROPER MESSAGE
         B     CODE16        16-GO WRITE PROPER MESSAGE
         B     CHKRET        20-RETURN TO IKJEGMNL
         SPACE
***********************************************************************
*        PARSE OK, RETURN TO CALLER                                   *
***********************************************************************
CODE0    DS    0H
         BR    R10           GO BACK TO CALLING ROUTINE
         SPACE
***********************************************************************
** PARSE RETURN CODE WAS 12, INDICATING INVALID PARMS SENT TO PARSE. **
** REGISTER 2 CONTAINS A CODE INDICATING WHICH ROUTINE USED IKJPARS. **
** THE FOLLOWING BRANCH TABLE IS USED TO FIND THE APPROPRIATE MESSAGE**
***********************************************************************
CODE12   DS    0H
         B     MSGTAB2(R2)   GO TO PROPER ROUTINE
MSGTAB2  DS    0H
         NOP   MSGTAB2       NO FUNCTION EXISTS
         B     GOMSG2        4-CODE FOR GO
         B     CALLMSG2      8-CODE FOR CALL
         B     RUNMSG2       12-CODE FOR RUN
         SPACE
GOMSG2   DS    0H
         LA    R3,MSG1       INDICATE MESSAGE NUMBER
         B     MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
CALLMSG2 DS    0H
         LA    R3,MSG5       INDICATE MESSAGE NUMBER
         B     MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
RUNMSG2  DS    0H
         LA    R3,MSG4       INDICATE MESSAGE NUMBER
         B     MSGRTN        GO TO MESSAGE ROUTINE
         SPACE
***********************************************************************
*        PARSE RETURN CODE 16 - NOT ENOUGH MAIN STORAGE FOR PDL       *
*        ISSUE MESSAGE.                                               *
***********************************************************************
CODE16   DS    0H
         B     MSGRTNA       GO TO MESSAGE ROUTINE             XXXXXXXX
         EJECT
***********************************************************************
*                                                                     *
*                   ESTAE EXIT ROUTINE                                *
*                                                                     *
***********************************************************************
STAERTN  DS    0H
         SPACE
***********************************************************************
*        GET ADDRESS OF TCOMTAB                                       *
***********************************************************************
         L     R2,CVTPTR     GET CVT ADDRESS
         USING CVT,R2        ESTABLISH ADDRESSABILITY TO CVT
         L     R2,CVTTCBP    GET ADDRESS OF TCB WORDS
         L     R2,D4(R2)     GET ADDRESS OF CURRENT TCB
         DROP  R2            DROP ADDRESSABILITY TO CVT
         USING TCB,R2        ESTABLISH ADDRESSABILITY TO TCB
         L     R9,TCBTRN     PICK UP POINTER TO TCOMTAB FROM
*                            TCBTRN FIELD OF TEST'S TCB
         SPACE
***********************************************************************
*        RESTORE GO'S REGISTERS 13 AND 12 (12 IS BASE).               *
***********************************************************************
         L     R13,REGSAVE2  GET ADDR OF GO, CALL, RUN REGISTERS
         L     R12,GR12-SAVEAREA(R13)  RESET ADDRESSABILITY
         SPACE
***********************************************************************
*        SET RETURN CODE TO MAINLINE TO INDICATE THAT ESTAE           *
*        EXIT ROUTINE WAS ENTERED.                                    *
***********************************************************************
NOWORK   DS    0H
         LA    R15,RETCOD20  SET RETURN CODE FOR IKJEGMNL INDICATING
*                            ESTAE EXIT ROUTINE ENTERED
         B     RETURN        GO SET UP TO RETURN TO IKJEGMNL
         EJECT
***********************************************************************
*  THIS IS THE MESSAGE WRITING ROUTINE.
*  AT ENTRY R3 CONTAINS THE ADDRESS OF A THREE WORD PARAMETER LIST.
*    WORD1=MESSAGE NUMBER OF FIRST LEVEL MESSAGE
*    WORD2=MESSAGE NUMBER OF SECOND LEVEL MESSAGE
*    WORD3=INSERT NUMBER TO BE INSERTED IN FIRST LEVEL MESSAGE
*          WORD3 WILL BE ZERO OF THERE IS NO INSERT
***********************************************************************
MSGRTN   DS    0H
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
         STM   R2,R4,SAVE234 SAVE R2-R4 FOR REUSE
         LM    R2,R4,D0(R3)  LOAD R2-R4 WITH PARM LIST VALUES
* ISSUE FIRST AND SECOND LEVEL MESSAGES
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),INST11=(NUM,(R4)),        *
               ID=GO014,MF=(E,TSTIOPRM)
         LM    R2,R4,SAVE234 RESET R2-R4                       XXXXXXXX
MSGRTN1  DS    0H                                              XXXXXXXX
         OI    TSTFLGS4,TSTFLUSH  TURN ON TSTFLUSH SO MNL WILL
*                            FLUSH INPUT STACK
         B     RCTABLE(R15)  INDEX THROUGH RETURN CODE BRANCH TABLE
RCTABLE  DS    0H
         B     CKCRIT        RC=0 NORMAL CONTINUE
         B     CKCRIT        RC=4 IO ERROR TRY TO CONTINUE
         B     CKCRIT        RC=8 SHOULD NEVER HAPPEN
         B     CKCRIT        RC=12 IO ERROR TRY TO CONTINUE
         B     ATTNEXIT      RC=16 ATTENION HIT,EXIT
         B     CKCRIT        RC=20 IO ABEND TRY TO CONTINUE
         B     EXIT24        RC=24 ESTAE ERROR,EXIT
CKCRIT   DS    0H            CHECK FOR CRITICAL ERROR
         LTR   R2,R2         IS THIS A CRITICAL RUN ERROR?
         BNL   EXIT0         NO, GO BACK WITH RETURN CODE 0
         B     EXIT          RETURN TO MAINLINE WITH RETURN CODE 12
*                            BUT WITH RUNSW OFF TO CLEAN UP
*                            AND GET OUT OF TEST
MSGRTNA  DS    0H                                              XXXXXXXX
* ISSUE 'NOT ENOUGH MAIN STORAGE' MESSAGE                      XXXXXXXX
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM LST XXXXXXXX
         IKJEGSIO MSG,FIRST=M0103,ID=GO014,MF=(E,TSTIOPRM)     XXXXXXXX
         B     MSGRTN1       GO CHECK RETURN CODES             XXXXXXXX
         EJECT
***********************************************************************
*        A NONZERO RETURN CODE WAS RETURNED BY SVC 97. DETERMINE      *
*        WHICH COMMAND WAS ISSUED, AND ISSUE APPROPRIATE MESSAGE.     *
***********************************************************************
         SPACE
SVCERR   DS    0H
         B     SVCTAB(R2)    BRANCH ON R2 INTO TABLE
         SPACE
SVCTAB   DS    0H
         NOP   SVCTAB        THIS BRANCH IMPOSSIBLE
         B     GOSVCMSG      ISSUE GO MESSAGE
         B     CALSVCMS      ISSUE CALL MESSAGE
         B     RUNSVCMS      ISSUE RUN MESSAGE
         SPACE
GOSVCMSG DS    0H
         LA    R3,MSG7       PUT MSG ID IN R3
         B     MSGRTN        GO WRITE MSG
         SPACE
CALSVCMS DS    0H
         LA    R3,MSG8       PUT MSGID IN R3
         B     MSGRTN        GO WRITE MSG
         SPACE
RUNSVCMS DS    0H
         LA    R3,MSG9       PUT MSGID IN R3
         B     MSGRTN        GO WRITE MSG
         EJECT
***********************************************************************
*     ROUTINES TO HANDLE ERRET EXITS FROM LINK AND LOAD MACROS
***********************************************************************
PARSERR  EQU   *
* ISSUE 'LINK TO IKJPARS SVC ERROR' MESSAGE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM LIST
         LR    R0,R1         LOAD ABEND CODE INTO R0
         IKJEGSIO SVCERR,SVC=6,RC=(R15),ABENDRG=(R0),                  *
               INST11=(NUM,I0040),ID=GO014,MF=(E,TSTIOPRM)
         C     R15,ATTNRC    IS RC=16,20 OR 24?
         BL    NOWORK        NO, SEND RC=20 TO MAINLINE
         B     RETURN        SEND 16,20 OR 24 RC TO MAINLINE
         EJECT
***********************************************************************
*        THESE ARE THE PARSE MACROS FOR GO, RUN, AND CALL.            *
***********************************************************************
IKJEGPAR IKJPARM DSECT=GORUNDUM    GO AND RUN MACROS
ADDR     IKJPOSIT ADDRESS,VALIDCK=ADDRCHK
         IKJENDP
         SPACE
IKJEGPAS IKJPARM DSECT=CALLDUMM    CALL MACROS
BRADDR   IKJPOSIT ADDRESS,PROMPT='BRANCH ADDRESS',VALIDCK=ADDRCHK
PARM     IKJKEYWD
         IKJNAME  'PARM',SUBFLD=PARMSFLD
VLIST    IKJKEYWD
         IKJNAME 'VL'
RETKEY   IKJKEYWD
         IKJNAME 'RETURN',SUBFLD=RETSFLD
PARMSFLD IKJSUBF
PARMADDR IKJPOSIT ADDRESS,LIST,VALIDCK=ADDRCHK,PROMPT='PARAMETER ADDRESX
               S(ES)'
RETSFLD  IKJSUBF
RETADDR  IKJPOSIT ADDRESS,VALIDCK=ADDRCHK,PROMPT='RETURN ADDRESS'
         IKJENDP
         EJECT
***********************************************************************
*                           CONSTANTS                                 *
***********************************************************************
         SPACE
         DS    0F             ALIGN SP1 TO WORD BOUNDARY
HIBITON  DC    X'80000000'   WORD WITH HI BIT ON TO MAKE R2 NEGATIVE
GOCON    DC    V(IKJEGPAR)    ADDRESS OF GO/RUN PCL
CALLCON  DC    V(IKJEGPAS)    ADDRESS OF CALL PCL
BASECON  DC    A(IKJEGGO)     PROGRAM BASE ADDRESS
ATTNRC   DC    F'16'         ATTENTION RETURN CODE
ESTAERC  DC    F'24'         ESTAE FAILURE RETURN CODE
         SPACE
**  THE FOLLOWING IS THE ESTAE MESSAGE TABLE                         **
         SPACE
STATBL   DS    0F
         DC    AL1(92),AL3(BLOW1)           GETMAIN FAILED
         DC    AL1(99),AL3(PARSBLOW)        PARSE LINK FAILED
         DC    AL1(HEXFF)                   END OF ESTAE ABEND TABLE
         SPACE 2
GOSPL    IKJEGSPL RTRY=STAERTN,ABNTB=STATBL,MODNM=IKJEGGO,TNM=GO
RUNSPL   IKJEGSPL RTRY=STAERTN,ABNTB=STATBL,MODNM=IKJEGGO,TNM=RUN
CALSPL   IKJEGSPL RTRY=STAERTN,ABNTB=STATBL,MODNM=IKJEGGO,TNM=CALL
         EJECT
***********************************************************************
* THESE ARE THE MESSAGE PARAMETER LISTS USED BY THE COMMON
* MESSAGE WRITING ROUTINE(MSGRTN)
* THE PARAMETER LISTS HAVE THE FOLLOWING FORMAT.
*    WORD1=FIRST LEVEL MESSAGE NUMBER IN BINARY
*    WORD2=SECOND LEVEL MESSAGE NUMBER IN BINARY
*    WORD3=FIRST LEVEL MESSAGE INSERT NUMBER IN
*          BINARY OR ZERO IF THERE IS NO INSERT
***********************************************************************
MSG1     DS    0F
         DC    F'104'        GO FAILED,COMMAND SYSTEM ERROR
         DC    F'277'        PARSE ERROR CODE 12
         DC    F'18'         'GO' INSERT
MSG3     DS    0F
         DC    F'58'         RUN FAILED
         DC    F'257'        OVERLAY PGMS NOT SUPPORTED BY RUN
         DC    F'19'         'RUN' INSERT
MSG4     DS    0F
         DC    F'104'        RUN FAILED,COMMAND SYSTEM ERROR
         DC    F'277'        PARSE ERROR CODE 12
         DC    F'19'         'RUN' INSERT
MSG5     DS    0F
         DC    F'104'        CALL FAILED,COMMAND SYSTEM ERROR
         DC    F'277'        PARSE ERROR CODE 12
         DC    F'20'         'CALL' INSERT
MSG7     DS    0F
         DC    F'104'        GO FAILED,COMMAND SYSTEM ERROR
         DC    F'283'        SVC97 RETURN CODE NONZERO
         DC    F'18'         'GO' INSERT
MSG8     DS    0F
         DC    F'104'        CALL FAILED,COMMAND SYSTEM ERROR
         DC    F'283'        SVC97 RETURN CODE NONZERO
         DC    F'20'         'CALL' INSERT
MSG9     DS    0F
         DC    F'104'        RUN FAILED,COMMAND SYSTEM ERROR
         DC    F'283'        SVC97 RETURN CODE NONZERO
         DC    F'19'         'RUN' INSERT
MSG10    DS    0F
         DC    F'104'        RUN FAILED,COMMAND SYSTEM ERROR
         DC    F'276'        SYSTEM CNTRL BLK ERROR,TEST SESSION ENDED
         DC    F'19'         'RUN' INSERT
         EJECT
         SPACE 2
         TCOMTAB
         EJECT
         SPACE
         BRKELEM
         EJECT
         SPACE
         IKJPPL
         EJECT
         TSTCWORK
         ORG   CWORKCMD      GO BACK TO COMMAND WORK AREA
GOWKAREA DS    0H
CMDCODE  DS    AL1           THIS IS THE NORMAL RETURN CODE TO BE
*                            ISSUED UPON COMPLETION OF THE COMMAND
SVCPARMS DS    3F            WORK AREA FOR TEST SVC MACRO EXPANSION
PPLAREA  DS    7F            PARSE PARAMETER LIST-DESCRIPTION IN PPL
*                            MACRO EXPANSION
ADDRONE  DS    A             ADDRESS OF FIRST LEVEL MESSAGE
ADDRTWO  DS    A             ADDRESS OF SECOND LEVEL MESSAGE
REGSAVE  DS    F             SERVICE ROUTINE RETURN CODE SAVEAREA
STAEAREA DS    CL16          ESTAE WORKAREA
***********************************************************************
*        THE FOLLOWING FORMAT FOR THE SVRB'S SAVE AREA FOR THE        *
*        GPR'S ASSUMES THAT THE SVC INTERRUPT HANDLER DOES A          *
*        STM 0,15                                                     *
***********************************************************************
         DS    0F
PPRSAVE  DS    0CL64         SAVE AREA FOR PP'S REGISTERS
PPREG0   DS    F             SAVED REGISTER 0
PPREG1   DS    F             SAVED REGISTER 1
PPREG2   DS    F             SAVED REGISTER 2
PPREG3   DS    F             SAVED REGISTER 3
PPREG4   DS    F             SAVED REGISTER 4
PPREG5   DS    F             SAVED REGISTER 5
PPREG6   DS    F             SAVED REGISTER 6
PPREG7   DS    F             SAVED REGISTER 7
PPREG8   DS    F             SAVED REGISTER 8
PPREG9   DS    F             SAVED REGISTER 9
PPREG10  DS    F             SAVED REGISTER 10
PPREG11  DS    F             SAVED REGISTER 11
PPREG12  DS    F             SAVED REGISTER 12
PPREG13  DS    F             SAVED REGISTER 13
PPREG14  DS    F             SAVED REGISTER 14
PPREG15  DS    F             SAVED REGISTER 15
SAVE234  DS    3F            SAVE AREA FOR R2-R4 DURING MESSAGE WRITING
         EJECT
         SPACE
         IKJPARMA
         EJECT
         SPACE
         IKJTCB
         EJECT
CVT      DSECT
         CVT
         EJECT
         IKJRB
         EJECT
SAVEAREA DSECT
SAVEUSER DS    F             UNUSED
SAVELAST DS    F             PTR TO LAST SAVEAREA (CALLER'S)
SAVENEXT DS    F             PTR TO NEXT SAVEAREA (SUBROUTINE)
RETURNPT DS    F             PTR TO CALLER'S RESUME ADDRESS
ENTRYPT  DS    F             PTR TO ENTRY POINT
GR0      DS    F             GENERAL REGISTER 0
GR1      DS    F             GENERAL REGISTER 1
GR2      DS    F             GENERAL REGISTER 2
GR3      DS    F             GENERAL REGISTER 3
GR4      DS    F             GENERAL REGISTER 4
GR5      DS    F             GENERAL REGISTER 5
GR6      DS    F             GENERAL REGISTER 6
GR7      DS    F             GENERAL REGISTER 7
GR8      DS    F             GENERAL REGISTER 8
GR9      DS    F             GENERAL REGISTER 9
GR10     DS    F             GENERAL REGISTER 10
GR11     DS    F             GENERAL REGISTER 11
GR12     DS    F             GENERAL REGISTER 12
LSAVE    EQU   *-SAVEAREA    LENGTH OF SAVEAREA
         EJECT
IKJEGGO  CSECT
         DS    0F            FORCE FULLWORD ALIGNMENT
GRCPATCH DC    50C'Z'        PATCH AREA
         END
