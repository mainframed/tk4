         TITLE 'TEST LOADER       IKJEGLDR'
         COPY  IKJEGSIO
IKJEGLDR CSECT
         EJECT
***********************************************************************
*
* STATUS --
*    CHANGE LEVEL 00, VERSION NO. 02, VS2   02/27/73
*
* FUNCTION -- IKJEGLDR LOADS THE PROGRAM TO BE TESTED
*
*    IKJEGLDR IS ATTACHED BY THE TEST INITIALIZATION
*    ROUTINE, IKJEGINT.  IT IS PASSED AS AN INPUT PARAMETER THE
*    ADDRESS OF THE TCOMTAB IN REGISTER ONE.  AFTER SAVING
*    REGISTERS AND SETTING PROGRAM ADDRESSABILITY, IT PICKS UP
*    FROM THE TCOMTAB THE ADDRESS OF THE PARSE DESCRIPTOR LIST
*    FOR THE TEST COMMAND.  IT THEN CHECKS TO SEE WHETHER THE
*    INPUT IS A LOAD MODULE OR AN OBJECT MODULE.  WHEN THE INPUT
*    IS A LOAD MODULE, THE PROCESSING BY THE OS/VS2 LOADER AS
*    DESCRIBED IN THE FOLLOWING PARAGRAPH IS SKIPPED.
*
*    IF THE INPUT IS AN OBJECT MODULE, IKJEGLDR GETS CORE
*    AND BUILDS A PARAMETER LIST FOR THE OS/VS2 LOADER (HEWLOAD).YM1030
*    IKJEGLDR THEN LOADS THE LOADER AND BRANCHES TO IT.  IF THERE
*    IS AN ERROR DURING LOADER PROCESSING, THEN CONTROL IS
*    RETURNED TO OS/VS2.  IF THERE ARE NO ERRORS, THEN THE LOADER
*    IS DELETED AND THE PARAMETER LIST CORE FREED.
*
*    ONCE HEWLOAD HAS COMPLETED, IF REQUIRED, IKJEGLDR           YM1030
*    CHECKS TO SEE IF THE PROBLEM PROGRAM IS A COMMAND PROCESSOR,
*    AS DESCRIBED BY THE PDE FOR THE CP OPERAND OF THE TEST
*    COMMAND.  IF SO, IKJEGIO IS CALLED IN ORDER TO GET A COMMAND
*    FROM THE USER.  ONCE THE COMMAND IS RECEIVED, CORE IS GOTTEN
*    FOR A COMMAND PROCESSOR PARAMETER LIST (CPPL) AND THE LIST
*    IS BUILT.  NEXT, THE COMMAND SCAN SERVICE ROUTINE (IKJSCAN)
*    IS CALLED TO PROCESS THE VERB FIELD OF THE COMMAND IN ORDER
*    TO SIMULATE THE CONDITIONS THAT WOULD HAVE OCCURRED IF THE
*    COMMAND HAD BEEN RECEIVED BY THE TMP.  IKJEGLDR THEN
*    BRANCHES TO THE LOCATION AT WHICH A PSEUDO BREAK POINT IS
*    INSERTED INTO THE PROBLEM PROGRAM, AS DESCRIBED BELOW.
*
*    IF THE PROBLEM PROGRAM IS NOT A COMMAND PROCESSOR, THEN
*    INSTEAD OF GETTING A COMMAND FROM THE USER, IKJEGLDR BUILDS
*    A PARAMETER LIST IN THE STANDARD OS/VS2 FORMAT.  IF THE USER
*    SPECIFIES PARAMETER DATA ON THE TEST COMMAND, THEN THIS DATA
*    IS PLACED INTO THE LIST.  IF NO DATA IS FURNISHED, A
*    PARAMETER LIST WITH A LENGTH OF FOUR CONTAINING ALL ZEROES
*    IS CONSTRUCTED.
*
*    ONCE THE PARAMETER LIST HAS BEEN CONSTRUCTED, WHETHER
*    IT IS A COMMAND PROCESSOR OR STANDARD OS/VS2 LIST, IKJEGLDR
*    CALLS IKJEGS9G IN ORDER TO PLACE THE ADDRESS OF THE TCOMTAB
*    INTO THE PROBLEM PROGRAM TCB AND TO TURN ON THE TCBTCP BIT
*    IN THE TCB.  UPON RETURN FROM IKJEGS9G, IKJEGLDR FINDS THE
*    ENTRY POINT OF THE PROBLEM PROGRAM BY SEARCHING THE CONTENTS
*    DIRECTORY ENTRIES.  ONCE THE ENTRY POINT HAS BEEN FOUND, THE
*    FIRST TWO BYTES OF USER CODE ARE SAVED IN THE TSTGO FIELD OF
*    THE TCOMTAB AND A SVC 97 IS PLACED INTO THE PROBLEM
*    PROGRAM.  THIS IS DONE SO THAT WHEN IKJEGLDR XCTLS TO THE
*    PROGRAM, SVC 97 WILL GET CONTROL AND POST THE INITIALIZATION
*    ROUTINE.  THUS, THE PROBLEM PROGRAM WILL THEN BE INITIALIZED
*    WITH THE STANDARD TEST FORMAT, WHICH IS A PRB FOR THE
*    PROBLEM PROGRAM CHAINED TO AN SVRB FOR SVC 97.  ONCE THE
*    PSEUDO BREAK POINT IS ESTABLISHED, IKJEGLDR XCTLS TO THE
*    PROBLEM PROGRAM.
*
* ENTRY POINTS --
*    IKJEGLDR
*
* INPUT --
*    TEST COMMUNICATION TABLE POINTED TO BY REGISTER 1.
*
*    TPL POINTED TO BY TPLPTR IN TCOMTAB
*
*    THE DCB OPENED BY IKJEGINT IS HUNG FROM TSTDCB IN TCOMTAB
*
*    THE BLDL ENTRY GOTTEN BY IKJEGINT IS LOCATED AT BLDLAREA
*    BLDLAREA IS EQUATED TO CONAREA IN TCOMTAB
*
*    THE PDL(PARAMETER DISCRIPTOR LIST) IS PASSED AT TSTANSPL
*    IN TCOMTAB
*
* OUTPUT --
*    REGISTER 1 POINTS TO THE PARAMETER LIST BUILT FOR THE PROGRAM
*    TO BE TESTED.
*    REGISTER 15 CONTAINS A RETURN CODE.
*
* EXTERNAL REFERENCES --
*         IKJEGIO- TO WRITE DIAGNOSTIC MESSAGES TO THE TERMINAL IN
*         THE CASE OF ERROR.
*
* EXITS, NORMAL --
*         XCTL TO THE EPA OF THE PROGRAM TO BE TESTED.
*
* EXITS, ERROR --
*         RETURN VIA REGISTER 14.
*           RC=0 ERROR OCCURRED
*           RC=4 ATTENTION OCCURRED
*           RC=20 ESTAE ERROR EXIT ENTERED
*           RC=24 ESTAE MACRO ERROR
*
* TABLES/WORKAREAS --
*    TCOMTAB POINTED TO BY REG 9, IS TEST'S COMMUNICATION TABLE
*
*    TPL POINTED TO BY REGISTER 10 IS THE TEST PARAMETER LIST
*
*    PDL POINTED TO BY TSTANSPL IN TCOMTAB
*
*    WORKAREA POINTED TO BY TCOMTAB IS THE GENERAL W.A. FOR ALL OF TEST
*
* ATTRIBUTES --
*    RE-ENTRANT
*    REFRESHABLE
*
* CHARACTER CODE DEPENDENCY --
*    NONE
*
* NOTES --
*    REGISTER CONVENTIONS FOR LOADER ARE AS FOLLOWS
*    REG 9  TCOMTAB POINTER
*    REG 10 TPL POINTER
*    REG 11 ONLY USED FOR LINK REGISTER
*    REG 12 IS THE BASE REGISTER
*    REG 6  IS FOR MAINTENANCE
*
**************************CHANGE ACTIVITY******************************
*    @ZA15329 - NEAR LABEL SETPSUED TCBTCP FLAG ZEROED WHEN INVALID.  *
*                                                                     *
***********************************************************************
         EJECT
*        EQUATES AND CONSTANTS
         SPACE
LOAD     EQU   1
DCBLEN   EQU   96
CP       EQU   1
X0       EQU   0              HEXIDECIMAL 0
X1       EQU   1              HEXIDECIMAL 1
X2       EQU   2              HEXIDECIMAL 2
X3       EQU   3              HEXIDECIMAL 3
X4       EQU   4              HEXIDECIMAL 4
X5       EQU   5              HEXIDECIMAL 5
X6       EQU   6              HEXIDECIMAL 6
X7       EQU   7              HEXIDECIMAL 7
X8       EQU   8              HEXIDECIMAL 8
X9       EQU   9              HEXIDECIMAL 9
N12      EQU   12             TWELVE.
N15      EQU   15             FIFTEEN.
BLANK    EQU   X'40'          BLANK.
X40      EQU   X'40'          HEXIDECIMAL '40'
XFF      EQU   X'FF'          HEXIDECIMAL 'FF'
N22      EQU   22             TWENTY TWO.
N24      EQU   24             TWENTY FOUR.
N25      EQU   25             TWENTY FIVE.
N28      EQU   28             TWENTY EIGHT.
N44      EQU   44             FORTY FOUR.
N48      EQU   48             FORTY EIGHT.
N50      EQU   50             FIFTY.
N96      EQU   96             NINETY SIX.
N98      EQU   98             NINETY EIGHT.
MINORBIT EQU   X'04'          MINOR BIT IN CDE ATTR 1.
NOSYNTAX EQU   X'80'         NO SYNTAX CHECK
ATTNBIT  EQU   B'01000000'    TO TEST IF ATTENTION HAS BEEN ENTERED
ZERO     EQU   0              USED IN CONJUNCTION WITH ATTN TEST
R0       EQU   0              REGISTER 0
R1       EQU   1              REGISTER 1
R2       EQU   2              REGISTER 2
R3       EQU   3              REGISTER 3
R4       EQU   4              REGISTER 4
R5       EQU   5              REGISTER 5
R6       EQU   6              REGISTER 6
R7       EQU   7              REGISTER 7
R8       EQU   8              REGISTER 8
R9       EQU   9              REGISTER 9
R10      EQU   10             REGISTER 10
R11      EQU   11             REGISTER 11
R12      EQU   12             REGISTER 12
R13      EQU   13             REGISTER 13
R14      EQU   14             REGISTER 14
R15      EQU   15             REGISTER 15
RC20     EQU   20            RETURN CODE 20
RC24     EQU   24            RETURN CODE 24
         EJECT
         SAVE  (14,12),,*
         LR    R12,R15        LOAD R12 AS BASE REGISTER
         USING IKJEGLDR,R12   ESTABLISH ADDRESSABILITY
         LR    R9,R1          R9=TCOMTAB ADDRESS.
         USING TCOMTAB,R9     TCOMTAB ADDRESSABILITY.
         LR    R4,R13         R4=BACK POINTER.
         L     R13,REGSAVE2   R13=NEW REGSAVE AREA ADDR.
         ST    R4,X4(R13)     STORE BACK POINTER IN NEW AREA.
         ST    R13,X8(R4)     STORE FORE POINTER IN OLD AREA.
         L     R2,WORKAREA   R2=ADDR OF WORK AREA
         USING TSTCWORK,R2   ESTABLISH ADDRESSABILITY
         XC    LDRESTAE,LDRESTAE CLEAR ESTAE PARM LIST
         L     R15,TSTSTAE   R15=ADDR OF ESTAE EXIT ROUTINE
         ESTAE (R15),CT,PARAM=LDRSPL,XCTL=NO,RECORD=YES,               *
               MF=(E,LDRESTAE) ESTABLISH ESTAE EXIT
         DROP  R2
         LTR   R15,R15       WAS ESTAE SUCCESSFUL?
         BZ    LDR1          YES,CONTINUE
         STC   R15,TSTESTRC  NO,STORE RETURN CODE
         LA    R15,RC24      RC=24 IS ESTAE FAILURE
         B     RETURN        RETURN TO INITIALIZATION
LDR1     EQU   *
         USING ECT,R2         ECT ADDRESSABILITY.
         L     R8,TSTANSPL    R8=ADDR OF PASSED PDL.
         USING IKJPARMD,R8    *
         L     R3,CVTPTR      GET CVT ADDRESS
         USING CVT,R3
         L     R4,CVTTCBP     GET TCB WORDS ADDRESS
         L     R7,X4(R4)      GET CURRENT TCB ADDRESS
         ST    R7,PPTCB       INITIALIZE THE PPTCB IN TCOMTAB
         L     R10,TPLPTR     GET TPL ADDRESS
         USING TPL,R10         TPL ADDRESSABILITY
         ST    R7,TPLCTCB     INITIALIZE TPL ATTACHED TCB SLOT
         L     R2,TPLECT      ECT POINTER.
         XC    ECTRCDF(X2),ECTRCDF  ZERO RTN CD
         SPACE
*        IF LOAD KEYWORD SPECIFIED, THEN FETCH WILL LOAD.
*        ELSE, IT WAS OBJECT WHICH WAS SPECIFIED, IN WHICH CASE
*        THE OSLOADER IS USED TO DO THE LOAD.
         SPACE
         CLI   LOADOBJ+X1,LOAD Q.IS 'LOAD' SPECIFIED.
         BNE   OSLOAD         NO,USE OS LOADER.
*                             YES,USE PROGRAM FETCH.
         L     R4,TSTDCB      GET THE DCB ADDRESS - 4
         LA    R4,X4(R4)      GET THE DCB ADDRESS.
         L     R5,BLDLAREA    GET THE BLDL ENTRY ADDRESS.
         L     R2,TPLECT      ECT POINTER.
         MVC   ECTPCMD(L'ECTPCMD),X4(R5)  PUT MEMBER NAME IN ECT.
         SPACE
*        WAS CP SPECIFIED, IF YES THEN PROMPT FOR THE COMMAND.
*        IF NO, THEN PROCEED.
         SPACE
PARMSET  EQU   *
         CLI   CPNOCP+X1,CP    Q.IS 'CP' SPECIFIED.
         BE    CMDPRMPT       YES,REQUEST A COMMAND.
         SPACE
*        IF A PARM STRING WERE ENTERED, GET A BUFFER AND FILL IT.
*        OTHERWISE , PROCEED
         SPACE
         NC    STRING+X1(X3),STRING+X1  PARM STRING SPECIFIED Q.
         BNZ   PARMSTRG       YES,SET UP PARMS.
         GETMAIN RC,LV=8      GET STORAGE FOR PARMLIST.
         LTR   R15,R15        WAS GETMAIN SUCCESSFUL
         BNZ   GETMERR        NO. ISSUE MESSAGES AND TERMINATE
         LA    R3,X4(R1)      PARMS ADDR.
         SR    R4,R4          EMPTY LIST.
         O     R3,HIGHBIT     INDICATE LAST ELEMENT OF LIST.
         STM   R3,R4,X0(R1)   INITIALIZE EMPTY LIST
         LR    R7,R1          SAVE THE PARAMETER LIST ADDRESS.
GOPP     EQU   *
         BAL   R11,SETTRN     TCBTCP BIT=1 TCBTRNB=TCOMTAB ADDRESS.
         L     R2,TPLECT      ECT POINTER
         LA    R3,ECTPCMD     POINTER TO THE MEMBER NAME.
         L     R4,TSTTCB      THIS IS THE JOB STEP TCB.
         SPACE
*        IF THE MODULE IS ALREADY IN CORE , SET A PSUEDO BREAKPT.
*        IF IT IS NOT IN CORE , WHICH IS THE 99.9999 PERCENT CASE,
*        THE BREAK POINT WILL BE SET BY THE IKJEGINT MODULE
*        AFTER BEING POSTED BY SVC 61.
         SPACE
         XR    R1,R1
         L     R1,TCBJPQ-TCB(R4)  FIRST CDE.
         USING CDENTRY,R1
CDELOOP  EQU   *
         LA    R1,X0(R1)      CLEAR HIGH ORDER BYTE
         LR    R2,R1          COPY CDE ADDRESS INTO REG TWO
         LTR   R1,R1          IS IT THE END OF CDE'S
         BZ    LLSLOOK        LOOK ON THE LOAD LIST...
         CLC   CDNAME(L'CDNAME),X0(R3)  CHECK THE NAME.
         BE    SETPSEUD          FOUND A MATCH.
         L     R1,CDCHAIN     GET THE NEXT CDE ADDRESS
         B     CDELOOP        LOOP.......
LLSLOOK  EQU   *
         L     R1,TCBLLS-TCB(R4)  GET LOAD LIST BEGIN.
         USING LLE,R1
         USING CDENTRY,R2      ESTABLISH ADDRESSABILITY FOR CDE
LLSLOOP  EQU   *
         LTR   R1,R1          CHECK FOR END OF LOAD LIST.
         BZ    OUT            NOFIND GET OUT.
         LM    R1,R2,LLECHN   R1=NEXT ENTRY...R2=CDE PTR.
         CLC   CDNAME(L'CDNAME),X0(R3)  SEE IF NAME IS IN CORE.
         BNE   LLSLOOP        NO FIND LOOP.....
SETPSEUD EQU   *              *
         L     R1,CDENTPT        GET THE ENTRY POINT.
         MVC   TSTGOPSW(X2),X0(R1)  SAVE THE INSTR.
         MVC   X0(X2,R1),TSTSVC  SET THE PSEUDO BREAK POINT.
         MVI   DEFERTAB,X0    SET TRN TO ZERO              @ZA15329
         DROP  R2             FREE BASE REGISTER USED FOR CDE
         USING ECT,R2         ESTABLISH ADDRESSABILITY FOR ECT
OUT      EQU   *
         L     R15,WORKAREA   ADDR OF XCTL LIST FORM FOR XCTL.
         MVC   X0(XCTLLEN,R15),XCTLFORM  *
         OI    TSTFLGS3,TSTGOSW    SET SPECIAL PSEUDO BP SWITCH.
         CLI   LOADOBJ+X1,LOAD  LOAD OR OBJECT...
         LR    R1,R7          PARMAMETER LIST TO REGISTER ONE...
         L     R13,X4(R13)    FIX UP REGISTER 13 FOR PP
         BNE   XCTLOBJ        OBJECT...
         BAL   R14,ATNCHK     GO SEE IF AN ATTENTION WAS POSTED
         L     R4,TSTDCB      GET THE DCB ADDRESS - 4
         LA    R4,X4(R4)      GET THE DCB ADDRESS.
         L     R5,BLDLAREA    GET THE BLDL ENTRY ADDRESS.
         LA    R5,X4(R5)           OFFSET INTO BLDL ENTRY.
         XC    N28(N44,R13),N28(R13)  ZERO REGS FOR PROTECTION.
         XCTL  (2,12),DCB=(R4),DE=(R5),SF=(E,(15))
         EJECT
XCTLOBJ  EQU   *
         BAL   R14,ATNCHK     GO SEE IF AN ATTENTION WAS POSTED
         XC    N28(N44,R13),N28(R13)  ZERO REGS FOR PROTECTION.
         XCTL  (2,12),EPLOC=(3),SF=(E,(15))
         SPACE
         SPACE
CMDPRMPT EQU   *
*        REQUEST A COMMAND FOR THE PROGRAM BEING TESTED.
         SPACE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM LIST
* ISSUE 'ENTER COMMAND FOR CP' MESSAGE AND GET INPUT
         IKJEGSIO PTGT,FIRST=M0070,ID=LDR18,MF=(E,TSTIOPRM)
         LTR   R15,R15        TEST FOR ZERO RETURN CODE
         BZ    PRMPGETM       NORMAL RETURN CONTINUE
         C     R15,ATTNCODE   TEST FOR ATTENTION IN EFFECT
         BE    RET4           ATTN HIT, EXIT WITH RETURN CODE=4
         B     RET0           CANNOT CONTINUE DUE TO IO ERRORS
         SPACE
*        BUILD PARMLIST FOR COMMAND SCAN SERVICE ROUTINE AND SCAN THE
*        VERB FIELD OF THE COMMAND RECEIVED FROM THE TERMINAL.
PRMPGETM EQU   *
         GETMAIN RC,LV=16      GET CORE FOR CPPL
         LTR   R15,R15        WAS GETMAIN SUCCESSFUL
         BNZ   GETMERR        NO. ISSUE MESSAGES AND TERMINATE
         LR    R7,R1          SAVE ADDRESS.
         USING CPPL,R7        *
         SPACE
         L     R1,WORKAREA    R1=ADDR OF PARM LIST.
         MVC   X0(N12,R1),PARMLIST MOVE IN STANDARD PARMS.
         LA    R2,N24(,R1)    R2=FLAG WORD ADDR.
         LA    R3,N28(,R1)    R3=OUTPUT AREA ADDR.
         L     R4,INBUF       CPPL COMMAND BUFFER =IN BUFFER.
         ST    R4,CPPLCBUF     INITIALIZE CPPL.
         MVC   CPPLUPT(N12),TPLUPT  DITTO.
         SR    R5,R5          FLAG WORD.
         STM   R2,R5,N12(R1)   MOVE IN FLAG & OUTPUT AREA ADDRS.
         ST    R5,INBUF       CLEAR TEST'S INPUT BUFFER POINTER.
         OI    X0(R2),NOSYNTAX INDICATE 'NO SYNTAX CHECK'.
         LINK  EP=IKJSCAN,ERRET=SCANERR     SCAN VERB FIELD OF COMMAND.
         L     R2,TPLECT      ECT POINTER.
         NI    ECTSWS,XFF-ECTNOPD  TURN OFF PARM SW.
         TM    X6(R3),X40     Q.COMMAND NAME W/NO FIELDS.
         BZ    SKIP           SWITCH OFF.
         OI    ECTSWS,ECTNOPD  TURN SWITCH ON.
SKIP     EQU   *              *
         B     GOPP           PLACE PSEUDO-BREAK & ENTER PP.
ATNCHK   EQU   *
         L     R4,ECBTMPA     GET ADDRESS OF ATTENTION ECB.
         TM    ZERO(R4),ATTNBIT HAS AN ATTENTION BEEN POSTED
         BO    RET4           IF SO, LET'S GET OUT OF HERE
         BR    R14            OTHERWISE, RETURN TO CALLER
         SPACE
PARMSTRG EQU   *
*        SET UP SPECIFIED PARM STRING AS POINTED TO FROM A STANDARD
*        VARIABLE LIST.
         SPACE
         L     R4,STRING      R4=ADDR OF CHARACTER STRING.
         LH    R2,STRING+X4    R2=LENGTH OF STRING.
         CL    R2,AHUNDRED    DOES IT EXCEED MAXIMUM Q.
         BNH   PARMST10       STRING NOT GTR THAN 100,CONTINUE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
* ISSUE 'PARAMETER STRING LENGTH EXCEEDED' MESSAGE
* ISSUE 'MAXIMUM LENGTH IS 100' MESSAGE
         IKJEGSIO MSG,FIRST=M0069,SECOND=M0271,ID=LDR18,               *
               MF=(E,TSTIOPRM)
         BAL   R11,IORETCK    TEST IO RETURN CODES
         B     RET0           RETURN WITH RC-0-ERROR
PARMST10 EQU   *
         LA    R0,X6(,R2)     R0=LENGTH OF STRING & POINTER.
         GETMAIN RC,LV=(0)    GET STORAGE FOR LIST AND STRING.
         LTR   R15,R15        WAS GETMAIN SUCCESSFUL
         BNZ   GETMERR        NO. ISSUE MESSAGES AND TERMINATE
         LA    R3,X4(,R1)     R3=ADDR FOR PASSED PARM STRING.
         STH   R2,X4(R1)      MOVE LENGTH TO PARMS.
        LTR   R2,R2          IS NULL PARM STRING PASSED ZZZZZZZZ
        BZ    NULPARMS       YES, SKIP EXECUTE INST     ZZZZZZZZ
         BCTR  R2,X0          DECREMENT FOR EXECUTE.
         EX    R2,STRMVC      MOVE THE STRING.
NULPARMS O     R3,HIGHBIT     INDICATE LAST LIST ELEMENT. ZZZZZZZZ
         ST    R3,X0(,R1)     STORE PARM POINTER IN LIST.
         LR    R7,R1          SAVE THE PARAMETER LIST ADDRESS.
         B     GOPP           PLACE PSEUDO-BREAK, ENTER PP.
         SPACE
STRMVC   MVC   X6(X0,R1),X0(R4)         *
         SPACE
OSLOAD   EQU   *
*        SET UP PARM LIST AND DDNAME LIST FOR OS LOADER.LOAD THE
*        PROCESSING PORTION OF THE LOADER,BRANCH TO IT AND DELETE
*        IT UPON ITS RETURN.
         SPACE
         GETMAIN  RC,LV=OBJCORE  GET CORE FOR OSLOAD PARMS
         LTR   R15,R15        WAS GETMAIN SUCCESSFUL
         BNZ   GETMERR        NO. ISSUE MESSAGES AND TERMINATE
         LA    R2,X8(R1)      OPTION LIST ADDRESS.
         LA    R3,OPTCORE(R2)  POINT BEYOND OPTIONS
         O     R3,HIGHBIT     INDICATE LAST ELEMENT.
         MVC   X0(OPTLN,R2),OPTIONS MOVE IN OPTIONS.
         XC    X0(N98,R3),X0(R3) CLEAR DDNAME LIST.
         MVC   N98-X8(X8,R3),TERMDD  PLACE DDNAME INTO LIST
         MVI   X1(R3),N96     DDNAME LIST LENGTH.
         MVC   X2(X8,R3),INTSTDDN MOVE DDNAME TO SYSLIN SLOT IN LIST.
         STM   R2,R3,X0(R1)   INITIALIZE LIST.
         LR    R2,R1          SAVE LIST ADDR.
         LOAD  EP=HEWLOAD,ERRET=LOADERR     LOAD THE VS LOADER.
         LR    R15,R0         R15=VS LOADER ENTRY POINT.
         LR    R1,R2          R1=LIST ADDR.
         BALR  R14,R15        ENTER LDR TO LOAD TESTED PROGRAM
         C     R15,FOUR       Q. IS PROGRAM SUCCESSFULLY LOADED.
         BH    RET0           NO. DEPART
         LR    R3,R1          SAVE NAME POINTER IN R3.
         DELETE EP=HEWLOAD     DELETE THE VS LOADER.
         LR    R1,R2          R1=ADDR OF STORAGE GOTTEN FOR LOADER.
         FREEMAIN  RC,LV=OBJCORE,A=(1)  FREE THE PARM CORE
         LTR   R15,R15        WAS FREEMAIN SUCCESSFUL
         BZ    OSLOAD1        YES. CONTINUE
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
* ISSUE 'FREEMAIN SVC ERROR' MESSAGE
         IKJEGSIO SVCERR,SVC=120,RC=(R15),ID=LDR18,MF=(E,TSTIOPRM)
         BAL   R11,IORETCK    TEST IO RETURN CODES
* CONTINUE AFTER ERROR
         SPACE
*        ISSUE A LOAD FOR THE PROGRAM BROUGHT IN BY THE VS LOADER
*        IN ORDER TO GET IT ON THE LOAD LIST.SAVE THE PROGRAM NAME
*        IN TSTCURLD OF TCOMTAB AND SET UP PARAMETERS REQUIRED BY
*        THE PROGRAM.
         SPACE
OSLOAD1  EQU   *
         L     R2,TPLECT      ECT POINTER.
         MVC   ECTPCMD(X8),X0(R3)  PUT MEMBER NAME IN ECT.
         B     PARMSET        SET UP PARAMETERS FOR THE PROGRAM.
SETTRN   EQU   *
         BAL   R14,ATNCHK     GO SEE IF AN ATTENTION WAS POSTED
         L     R2,WORKAREA    GET POINTER TO WORKING CORE
         USING TSTCWORK,R2    ESTABLISH ADDRESSABILITY
         L     R4,PPTCB       OUR TCB ADDRESS ...
         IKJEGS9G TRN,TCBADDR=(R4),VALUE=(R9),MF=(E,LDRSVCL) SET TCBTRN
         LTR   R15,R15        CHECK RETURN CODE FROM SVC
         BNZ   PUTSVCMG       BRANCH IF OTHER THAN ZERO
         SPACE
         IKJEGS9G TCPON,TCBADDR=(R4),MF=(E,LDRSVCL) TCBTCP
         LTR   R15,R15        CHECK RETURN CODE FROM SVC
         BNZ   PUTSVCMG       BRANCH IF OTHER THAN ZERO
         BR    R11            RETURN
RET4     LA    R15,X4         RC=4
         B     RETURN         RETURN TO CALLER
RET0     SR    R15,R15        ZERO RETURN CODE.
RETURN   EQU   *              RETURN.
         LR    R2,R15        SAVE RETURN CODE
         ESTAE 0             REMOVE ESTAE
         LR    R15,R2        RESET RETURN CODE
         NI    TSTFLGS4,XFF-TSTRERTN TURN OFF RETRY BIT
         L     R13,X4(R13)     ADDRESS OF REGSAVE AREA
         RETURN (14,12),RC=(15)  RETURN.
PUTSVCMG EQU   *
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
* ISSUE 'LOADER FAILED' MESSAGE
* ISSUE ' SVC 97 RETURN CODE NONZERO' MESSAGE
         IKJEGSIO MSG,FIRST=M0058,INST11=(NUM,I0031),SECOND=M0283,     *
               ID=LDR18,MF=(E,TSTIOPRM)
         BAL   R11,IORETCK    TEST IO RETURN CODES
         B     RET0           RETURN WITH RC=0-ERROR
         EJECT
IORETCK  EQU   *              IO RETURN CODE CHECK ROUTINE
         B     IORC0(R15)     USE RETURN CODE AGAINST BRANCH TABLE
IORC0    EQU   *
         B     X0(R11)        RC=0 NORMAL RETURN, CONTINUE
         B     X0(R11)        RC=4 IO ERROR TRY TO CONTINUE
         B     RET0           RC=8 SHOULD NEVER HAPPEN
         B     X0(R11)        RC=12 IO ERROR TRY TO CONTINUE
         B     RET4           RC=16 ATTN,RETURN TO INIT WITH RC=4
         B     X0(R11)        RC=20 RETRY ENTERED TRY TO CONTINUE
         B     RETURN         RC=24, PASS IT ON BACK TO INIT
         EJECT
SCANERR  EQU   *              LOGIC FOR LINK ERRET
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
         LR    R0,R1         LOAD ABEND CODE INTO R0
* ISSUE 'LINK TO IKJSCAN SVC ERROR' MESSAGE
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(R0),RC=(R15),                  *
               INST11=(NUM,I0043),ID=LDR18,MF=(E,TSTIOPRM)
         BAL   R11,IORETCK    TEST IO RETURN CODES
         B     RET0           TERMINATE WITH RC=0-ERROR
         SPACE
LOADERR  EQU   *             LOGIC FOR LOAD ERRET
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM CLEAR IO PARM LIST
         LR    R0,R1         LOAD ABEND CODE INTO R0
* ISSUE 'LOAD HEWLOAD SVC ERROR' MESSAGE
         IKJEGSIO SVCERR,SVC=8,ABENDRG=(R0),RC=(R15),                  *
               INST11=(NUM,I0134),ID=LDR18,MF=(E,TSTIOPRM)
         BAL   R11,IORETCK   TEST IO RC'S
         B     RET0          TERMINATE WITH RC=0-ERRORS
         SPACE
GETMERR  EQU   *              GETMAIN ERROR HANDLING LOGIC
         XC    TSTIOPRM(L'TSTIOPRM),TSTIOPRM  CLEAR IO PARM LIST
* ISSUE 'GETMAIN SVC ERROR' MESSAGE
         IKJEGSIO SVCERR,SVC=10,RC=(R2),ID=LDR18,MF=(E,TSTIOPRM)
         BAL   R11,IORETCK    TEST IO RETURN CODES
         B     RET0           TERMINATE WITH RC=0
         EJECT
*************************************************
*     ESTAE EXIT ROUTINE
*************************************************
ESTAERTY EQU   *
* ESTABLISH PROGRAM ADDRESSABILITY
         DROP  R12
         USING *,R15         USE R15 AS TEMPORARY BASE REG
         L     R12,BASEAD    LOAD PROGRAM BASE REGISTER
         DROP R15
         USING IKJEGLDR,R12  ESTABLISH ADDRESSABILITY
* REESTABLISH TCOMTAB ADDRESSABILITY
         L     R2,CVTPTR     GET CVT ADDRESS
         USING CVT,R2
         L     R2,CVTTCBP    GET ADDRESS OF TCB WORDS
         L     R2,X4(R2)     GET ADDRESS OF THIS TCB
         DROP  R2
         USING TCB,R2
         L     R2,TCBOTC     GET ADDRESS OF TEST'S(MOTHER) TCB
         L     R9,TCBTRN     GET TCOMTAB ADDRESS
         L     R13,REGSAVE2  GET LOADERS SAVE AREA ADDRESS
         LA    R15,RC20      SET RC=20
         B     RETURN        RETURN TO INITIALIZATION
         EJECT
         SPACE
XCTLFORM XCTL  EP=XCTLFORM,SF=L
XCTLLEN  EQU   *-XCTLFORM     *
OPTIONS  DS    0F             ROUND TO FULL WORD
         DC    AL2(OPTLN-2)   LENGTH OF LIST.
         DC    C'TERM,NOPRINT,NCAL,NOMAP,NORES,LET,NAME=TEMPNAME'      *
               OSLOADER PARAMETERS
OPTLN    EQU   *-OPTIONS
OPTLN1   DS    0F             ROUND TO FULL WORD
OPTCORE  EQU   OPTLN1-OPTIONS  OPTIONS CORE REQUIREMENT
OBJCORE  EQU   8+OPTCORE+12*8  TOTAL PARAMETER CORE FOR OSLOADER
AHUNDRED DC    A(100)         *
FOUR     DC    F'4'           FOUR
ATTNCODE DC    F'16'          RETURN CODE 16=ATTENTION
HIGHBIT  DC    X'80000000'    HIGH ORDER BIT
DUMMYATB DC    X'FF'         DUMMY ABEND TABLE
BASEAD   DC    A(IKJEGLDR)   PROGRAM BASE ADDRESS
LDRSPL   IKJEGSPL RTRY=ESTAERTY,ABNTB=DUMMYATB,MODNM=IKJEGLDR,         *
               TNM=LOADER    ESTAE PARAMETER LIST
         TSTCWORK
         ORG   CWORKCVT       ORIGIN OF SPACE FOR FOLLOWING DS
LDRSVCL  DS    XL12           SPACE FOR SVC97 PARAMETER LIST
LDRESTAE DS    XL16          SPACE FOR ESTAE PARM LIST
         EJECT
         IHACDE
         EJECT
         IHALLE
         EJECT
CVT      DSECT
         CVT
         EJECT
IKJEGLDR CSECT
         SPACE
*        PARSE CONSTANTS AND DSECT
         SPACE
IKJEGYDR IKJPARM
DSNAME   IKJPOSIT DSNAME
STRING   IKJPOSIT QSTRING
LOADOBJ  IKJKEYWD
         IKJNAME 'LOAD'
         IKJNAME 'OBJECT'
CPNOCP   IKJKEYWD
         IKJNAME 'CP'
         IKJNAME 'NOCP'
         IKJENDP
         EJECT
         TCOMTAB
         SPACE
         IKJCPPL
         SPACE
         IKJECT
         SPACE
         IKJTPL
         SPACE
         IKJTCB
         SPACE
         EJECT
IKJEGLDR CSECT
         DS    0F            FORCE FULLWORK ALIGNMENT
LDRPATCH DC    50C'Z'        PATCH AREA
         END
