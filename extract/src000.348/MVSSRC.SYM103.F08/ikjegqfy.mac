 TITLE 'IKJEGQFY'
*A65680                                                        @ZA04118
* /* START OF SPECIFICATIONS ****
*02*  PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
***********************************************************************
*                                                                     *
* STATUS                                                              *
*    VERSION NO.  00, OS/VS2 RELEASE NO. 02                           *
*                                                                     *
* FUNCTION/OPERATION                                                  *
*    THIS ROUTINE IS CALLED BY THE SUBCOMMAND PROCESSOR (OS TIME-     *
*    SHARING OPTION FOR MVT) TO SET AND RESET THE BASE ADDRESS USED TO*
*    RESOLVE RELATIVE AND SYMBOLIC ADDRESSES.  IT CAN ALSO ASSOCIATE  *
*    THE LOAD MODULE NAME AND CSECT NAME WITH THEIR CURRENT ADDRESS IN*
*    THE REGION.                                                      *
*                                                                     *
* ENTRY POINTS                                                        *
*         IKJEGQFY - GOES TO PARSE TO EXAMINE THE SUBCOMMAND          *
*                                                                     *
* INPUT                                                               *
*    ONE LINE OF INPUT FROM THE TERMINAL INTO THE INPUT BUFFER        *
*                                                                     *
* OUTPUT                                                              *
*    1.  ERROR MESSAGES TO THE MESSAGE WRITER                         *
*    2.  RETURN CODES                                                 *
*    *       0 - SUCCESSFUL COMPLETION OR MODULE NOT FOUND            *
*    *       4 - QUALIFICATION TO A NEW TCB                           *
*    *       8 - RETURN CODE TO HAVE PARSE ISSUE A 'REENTER'          *
*    *      12 - PARSE VALIDITY CHECK EXIT ERROR RETURN CODE          *
*    *      16 - AN ATTENTION HAS BEEN SCHEDULED                      *
*    *      24 - ESTAE RETRY HAS INTERCEPTED AN ABEND                 *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*         IKJPARS - TO SCAN THE INPUT BUFFER FOR SYNTAX CHECKING OF   *
*         ADDRESSES AND KEYWORD IF SPECIFIED AND TO PROMPT THE USER   *
*         FOR VALID INPUT WHEN NECESSARY.  AT ENTRY TO IKJPARS, REG   *
*         ONE POINTS TO A PARAMETER LIST WITH THE FOLLOWING FORMAT -  *
*         00 - POINTER TO UPT                                         *
*         04 - POINTER TO ECT                                         *
*         08 - POINTER TO CP ECB                                      *
*         12 - POINTER TO PARAMETER DESCRIPTOR LIST (PDL)             *
*         16 - POINTER TO ANSWER PLACE                                *
*         20 - POINTER TO COMMAND BUFFER                              *
*         24 - POINTER TO USERWORK AREA (QUALIFY'S SAVE AREA)         *
*                                                                     *
*         IKJEGCVT - CONVERTS AN ABSOLUTE ADDRESS, AN EXPRESSION, AN  *
*         INDIRECT ADDRESS, OR A FULLY QUALIFIED ADDRESS TO BINARY.   *
*         AT ENTRY REGISTER ONE CONTAINS THE COMPLEMENT OF THE PDL    *
*         ADDRESS TO INDICATE AN ADDRESS CONVERSION AND REGISTER ZERO *
*         IS SET NEGATIVE TO INDICATE CONVERT TO BINARY.              *
*                                                                     *
*         IKJEGI01 - OUTPUTS ERROR MESSAGES.  AT ENTRY REGISTER ONE   *
*         CONTAINS THE ADDRESS OF THE LENGTH FIELD OF THE OUTPUT      *
*         BUFFER.                                                     *
*                                                                     *
*         IKJEGSYM - RESOLVES THE ENTRYNAME ADDRESS ASSOCIATED WITH   *
*         THE GIVEN LOADNAME.                                         *
*                                                                     *
* EXITS,NORMAL                                                        *
*         RETURN VIA REGISTER 14 TO THE CALLER                        *
*                                                                     *
* EXITS,ERROR                                                         *
*         RETURN TO CALLER VIA REGISTER 14                            *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    TCOMTAB                                                          *
*    *    PPTCB - UPDATED WHEN QUALIFICATION IS TO A NEW TCB          *
*    *    PPRB  - QUALIFICATION IS TO A NEW TCB                       *
*    *    PPLOAD - UPDATED FOR ALL QUALIFICATION                      *
*    *    TSTSYMBA - UPDATED FOR LOADNAME/LOADNAME.ENTRYNAME          *
*    *               QUALIFICATION.                                   *
*    *    TSTCURLD - UPDATED FOR QUALIFICATION TO A NEW LOADNAME      *
*    *    TSTCURCT - UPDATED FOR QUALIFICATION TO A NEW ENTRYNAME     *
*                                                                     *
*    WORKSP - QUALIFY WORKAREA                                        *
*                                                                     *
* ATTRIBUTES                                                          *
*    REENTRANT                                                        *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS            *
*    EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN *
*    ARRANGED SO THAT REDEFINITION OF 'CHARACTER' CONSTANTS, BY       *
*    REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW          *
*    DEFINITIONS.                                                     *
*                                                                     *
* NOTES                                                               *
*                                                                     *
***********************************************************************
         EJECT
         COPY IKJEGSIO             OBTAIN CALLING MACROS
IKJEGQFY CSECT
ZERO     EQU   0                        PARAMETER REGISTER
PARAMREG EQU   1                        PARAMETER REGISTER
WORKE    EQU   2                        EVEN WORK REGISTER
WORKO    EQU   3                        ODD WORK REGISTER
REG4     EQU   4                        WORK REGISTERS
REG5     EQU   5                        *
REG6     EQU   6                        *
REG7     EQU   7                        *
REG8     EQU   8                        *
REG9     EQU   9                        POINTER TO TCOMTAB
REG10    EQU   10                       POINTER TO WORK AREA
R11      EQU   11                       WORK REGISTER - POINTER TO PDL
BASEREG  EQU   12                       BASE FOR CSECT
SAVEREG  EQU   13                       SAVE AREA ADDRESS REG
RETREG   EQU   14                       ADDRESS OF RETURN POINT
ADDREG   EQU   15                       ADDRESS REGISTER
RETCODE EQU    15                       RETURN CODE REGISTER
         SPACE
* FIELD AND NUMBER EQUATES
ONE      EQU   1                        ONE
TWO      EQU   2                        NUMBER 2
THREE    EQU   3                        NO. 3
PARSCODE EQU   3                        PARSE LINK FAILED CODE
FOUR     EQU   4                        FOUR
TCBADR   EQU   4                        DISPLACEMENT FOR CURRENT
*                                       TCB ADDR
FIVE     EQU   5                        NO. 5
SIX      EQU   6                        SIX
EIGHT    EQU   8                        EIGHT
SYMCODE  EQU   8                        SYM LINK FAILED CODE
NINE     EQU   9                        NINE
TEN      EQU   10                       TEN
TWELVE   EQU   12                       NUMBER 12
N14      EQU   14                       NUMBER 14
SIXTEEN  EQU   16                       SIXTEEN
TWENTY   EQU   20                       NO. 20
THIRTY2  EQU   32                       OFFSET FOR MESSAGE
FORTY    EQU   40                       OFFSET
FIFTY6   EQU   56                       NUMBER 56
FIFTY8   EQU   58                       NUMBER 58
SIXTY    EQU   60                       NO. 60
OFFSET   EQU   64                       OFFSET INTO COMMON WORK AREA
SIXTY8   EQU   68                       NUMBER 68
REG15    EQU   15                       USED FOR REGISTER 15
REG2     EQU   2                        USED FOR REGISTER 2
I0010    EQU   10                       INSERT NUMBER 10 WITHIN I/O
I0040    EQU   40                       INSERT NUMBER 40 WITHIN I/O
I0085    EQU   85                       INSERT NUMBER 85 WITHIN I/O
M0026    EQU   26                       MESSAGE NUMBER 26 WITHIN I/O
M0025    EQU   25                       MESSAGE NUMBER 25 WITHIN I/O
M0227    EQU   227                      MESSAGE NUMBER 227 WITHIN I/O
M0103    EQU   103                      MESSAGE NUMBER 103 WITHIN I/O
M0296    EQU   296                      MESSAGE NUMBER 296 WITHIN I/O
M0268    EQU   268                      MESSAGE NUMBER 268 WITHIN I/O
M0226    EQU   226                      MESSAGE NUMBER 226 WITHIN I/O
BADESTAE EQU   24                       CODE FOR UNABLE TO ISSUE ESTAE
HEX03    EQU   X'03'                    INDICATES FULLWORD BOUNDARY
REGTYPE  EQU   X'38'                    INDICATES REGISTER TYPE ADDR
LLCHAIN  EQU   0                        POINTER TO NEXT LLE
LLCDPTR  EQU   4                        POINTER TO CDE FROM LLE
CDATTRX  EQU   0                        ATTRIBUTES FOUND IN CDE
ZEROIT   EQU   X'00'                    ZERO
ZEROBYTE EQU   X'00'                    BYTE OF ZEROES
HEX01    EQU   X'01'                    MASK FOR TESTING P-BIT OF
*                                       PSW'S AMWP FIELD
NOPRINT  EQU   X'20'                    NOPRINT SETTING
PRINT    EQU   X'DF'                    SETTING TO RESET SWITCH
ONBIT    EQU   X'80'                    INDICATES HIGH ORDER BIT ON
MINOR    EQU   X'04'                    MINOR CDE
HEXF0    EQU   X'F0'                    MASK FOR PROTECTION KEY OF PSW
HEXFF    EQU   X'FF'                    STAE ADDR TABLE END INDICATOR
CDNAMEX  EQU   8                        MODULE OR ALIAS NAME
CDXL     EQU   20                       POINTER TO EXTENT LIST
XLCSECTS EQU   4                        NUMBER OF CSECTS
BLANK    EQU   C' '                     BLANK
L1       EQU   1                        LENGTH OF 1
L3       EQU   3                        LENGTH OF 3
L4       EQU   4                        LENGTH OF 4
L6       EQU   6                        LENGTH OF 6
L7       EQU   7                        LENGTH OF 7
L8       EQU   8                        LENGTH OF 8
         SPACE
         SAVE  (14,12),,IKJEGQFY        SAVE REGISTERS
         LR    BASEREG,ADDREG           SET UP ADDRESSABILITY
         USING IKJEGQFY,BASEREG         *
         USING TCOMTAB,REG9             SET UP ADDRESSABILITY TO
*                                          COMMUNICATION WORK AREA
         L     REG5,REGSAVE2            GET POINTER TO MY SAVE AREA
         ST    SAVEREG,FOUR(ZERO,REG5)  SAVE ADDR OF CALLER'S SAVE AREA
         ST    REG5,EIGHT(SAVEREG)      SAVE ADDR OF MY SAVE AREA
         LR    SAVEREG,REG5             PUT ADDRESS OF MY SAVE AREA
*                                          IN REGISTER 13
         L     REG10,WORKAREA           GET ADDRESS OF COMMON WORK AREA
         USING TSTCWORK,REG10           ESTABLISH ADDRESSABILITY TO
*                                          WORK AREA
         LA    REG10,CWORKCMD           R10=ADDRESS OF QUALIFY'S WORK
*                                          AREA
         DROP  REG10
         USING WORKSP,REG10             SET UP ADDRESSABILITY TO MY
*                                          WORK AREA
         SAVE  (14,12)                  SAVE REGISTERS IN MY SAVE AREA
*                                          IN CASE STAE EXIT GETS
*                                          CONTROL
         SPACE
         MVC   PPTCBSAV(FOUR),PPTCB        SAVE CURRENT PPTCB
         MVC   PPRBSAV(FOUR),PPRB          SAVE CURRENT RB PTR
         SPACE
*
*        ISSUE STAE FOR PARSE AND SYM LINK
*
         SPACE
         L     REG4,TSTSTAE             GET ADDR OF STAE EXIT
*                                       ROUTINE
         LA    ADDREG,BLDMSG            GET WKAREA ADDR
         MVC   ZERO(STAELEN,ADDREG),STAELIST  MOVE STAE LIST
         SPACE
         ESTAE (4),CT,PARAM=IKJEGSPL,XCTL=NO,RECORD=YES,MF=(E,(15))
         SPACE
         LTR   RETCODE,RETCODE          CHECK FOR A VALID RETURN
*                                       CODE
SMTSTAE  DS    0H                       SMT TEST LABEL FOR STAE MACRO
         BZ    SETUP                    YES...
         STC   REG15,TSTESTRC           SAVE RETURN CODE FOR MAINLINE
         LA    REG15,BADESTAE           SEND BACK RETURN CODE 24
         B     QFYRET                   RETURN TO CALLER
         SPACE
* THIS SECTION PREPARES FOR PASSING CONTROL TO THE PARSE ROUTINE
         SPACE
SETUP    DS    0H                       SET UP FOR PARSE
         DROP  REG10
         SPACE
         USING PPLUPT,REG10             SET UP ADDRESSABILITY TO
*                                       PARSE PARAMETER LIST
         SPACE
         MVC   PPLUPT(FOUR),TSTUPT      MOVE USER PROFILE TABLE INTO
*                                       WORKAREA
         MVC   PPLECT(FOUR),TSTECT      MOVE ENVIRONMENT CONTROL TABLE
         MVC   PPLECB(FOUR),TSTCPECB    MOVE COMMAND PROCESSOR EVENT
*                                       CONTROL BLOCK
         MVC   PPLPCL(FOUR),PCLISTA     MOVE ADDR OF PARAMETER CONTROL
*                                       LIST
         LA    REG4,TSTANSPL            GET PTR TO ANSWER PLACE
         ST    REG4,PPLANS              STORE IN WORKAREA
         MVC   PPLCBUF(FOUR),INBUF      MOVE PTR TO COMMAND BUFFER
         ST    SAVEREG,PPLUWA           SAVE PTR TO QUALIFY'S WORKAREA
         DROP  REG10
         USING WORKSP,REG10             SET UP ADDRESSABILITY TO
*                                       WORKAREA
         LR    PARAMREG,REG10           PUT ADDRESS OF PARAMETER LIST
*                                          INTO REGISTER 1
         LINK  EP=IKJPARS,ERRET=LKFAIL1 GO TO PARSE ROUTINE
PARSBLOW DS    0H
         B     LINKOK1                  IF CONTROL COMES HERE OK - GO
LKFAIL1  DS    0H
         LR    REG6,PARAMREG            TRANSFER ABEND CODE
         LR    REG4,RETCODE             TRANSFER RETURN CODE
         XC    TSTIOPRM,TSTIOPRM        ZERO OUT PARM LIST
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(REG6),INST11=(NUM,I0040), CALL *
               RC=(REG4),ID=QFY26,MF=(E,TSTIOPRM) FOR ERROR MSG
         CH    RETCODE,H16              TEST FOR SUCCESSFUL IO CALL
         BL    QFYCCO                   BRANCH TO ZERO OUT RTN CODE
         B     QFYRET                   GO BACK WITH RETURN CODE
LINKOK1  DS    0H
         SPACE
SMTPARS  DS    0H                       SMT TEST LABEL FOR PARSE LINK
         SPACE
         LTR   RETCODE,RETCODE          DID PARSE COMPLETE SUCCESSFULLY
         BNZ   CHKCODE                  NO, FIND TYPE OF ERROR
         L     R11,TSTANSPL             GET ADDRESS OF PDL
         USING IKJPARMD,R11             GET ADDRESSABILITY TO PDL
         LA    R11,ADDR                 R11=ADDRESS OF ADDRESS PDE
         DROP  R11
         USING IKJPARMA,R11             GET ADDRESSABILITY TO PDE
         SPACE
CHECKADR DS    0H                       CHECK FOR ARGUMENT BEING LOAD-
*                                          NAME OR ADDRESS
         CLC   PDEUSER(L4),NOBINARY     IS ARGUMENT BINARY ADDRESS
         BE    CHKSYM                   NO, CHECK FOR SYMBOL.SYMBOL
         L     WORKE,PDEUSER            PICK UP CONVERTED ADDRESS
         LA    WORKE,ZERO(ZERO,WORKE)   CLEAR HIGH ORDER BYTE OF REG
         ST    WORKE,PPLOAD             STORE ADDRESS IN FIELD OF
*                                          TCOMTAB FOR CURRENTLY
*                                          QUALIFIED BASE FOR RELATIVES
         SPACE
         DROP  R11                      DROP ADDRESS PDE BASE
         L     R11,TSTANSPL             R11 = ADDRESS OF PDL
         USING IKJPARMD,R11             GET ADDRESSABILITY TO PDL
         SR    REG4,REG4                CLEAR REG
         CH    REG4,TCBNAME             WAS TCB SPECIFIED W/O LOADNM
         SPACE
         LA    R11,ADDR                 SET R11 TO ADDR OF PDE
         DROP  R11                      DROP PDL ADDRESSABILITY
         USING IKJPARMA,R11             SET UP ADDRESSABILITY TO PDE
         SPACE
         BE    SYMCHK                   TCB NOT SPECIFIED...
         SPACE
         TM    PDEFLG1,ONBIT            WAS ADDR FULLY QUALIFIED
         BZ    TCBINVAL                 NO, PUT OUT 'TCB INVALID' MSG
         SPACE
         LA    REG4,M0026               GET MESSAGE NUMBER INTO REG
         LA    REG5,M0227               GET MESSAGE NUMBER INTO REG
         B     PUTMSG                   PRINT INFORMATION MSG
         SPACE
TCBINVAL DS    0H
         LA    REG4,M0025               GET MESSAGE NUMBER INTO REG
         SR    REG5,REG5                INDICATE NO SECOND LEVEL
*                                       INVALID' MSG
         B     PUTMSG                   PRINT ERROR MESSAGE
         SPACE
SYMCHK   TM    PDEFLG3,ONBIT            TEST FOR .CSECT.SYMBOL
         BO    QFYCCO                   YES...RETURN
         SPACE
         TM    PDEFLG4,RELADDR          TEST FOR RELATIVE ADDR
         BO    QFYCCO                   YES...
         SPACE
         ST    WORKE,TSTSYMBA           QUALIFICATION MUST BE
*                                       .ENTRYNAME...SAVE NEW BASE
*                                       FOR SYMBOLICS
         MVI   TSTCURCT,BLANK           BLANK OUT CSECTNAME IN
         MVC   CSECTNM1(L7),TSTCURCT    TCOMTAB
         LA    REG4,TSTCURCT            GET FIELD ADDR
         LH    REG5,PDELEN2             AND LENGTH OF CSECT NAME
         BCTR  REG5,ZERO                DECREMENT BY 1 FOR MOVE
         L     WORKO,PDECTNAM           GET PTR TO NAME
         EX    REG5,EXMOVE              MOVE CSECT NAME TO TCOMTAB
         B     QFYCCO                   GO TO WRAP UP ROUTINE
         SPACE
CHKCODE  DS    0H                       EXAMINE RETURN CODE FROM PARSE
         STC   RETCODE,CODESAVE         SAVE RETURN CODE
         LA    REG5,RTNCODE             GO TO PROPER BRANCH
RTNCODE  B     ZERO(RETCODE,REG5)       IN BRANCH TABLE
         SPACE
         B     RC04                     RC=4  UNABLE TO PROMPT
         B     CODE16                   RC=8  ATTN SCHEDULED
         B     NOPARSE                  RC=12 UNABLE TO PARSE
         B     NOCORE                   RC=16 NO CORE AVAILABLE
NOCONVRT DS    0H                       RC=20 CONVERT FAILED
         SPACE
         CLI   CONVRTCD,SIXTEEN         GET RETURN CODE SAVED
*                                       FROM BAD CONVERT
         BL    QFYCCO                   IF 0,4,8, OR 12, SET RETURN
*                                       CODE TO 0 FOR MAINLINE
         SR    RETCODE,RETCODE          ZERO OUT HIGH ORDER BYTES
         IC    RETCODE,CONVRTCD         PICK UP RETURN CODE FOR MNL
         B     QFYRET                   RETURN TO MAINLINE
         SPACE
RC04     OI    TSTFLGS4,TSTFLUSH        INITILIAZE STACK FLUSH
*                                       FOR MAINLINE
         B     QFYCCO                   RETURN TO MAINLINE
         SPACE
NOCORE   DS    0H                       STORAGE NOT AVAILABLE
         LA    REG4,M0103               GET MESSAGE NUMBER INTO REG
         SR    REG5,REG5                INDICATE NO SECOND LEVEL MSG
         B     PUTMSG                   BRANCH TO ISSUE MESSAGE
         SPACE
CODE16   DS    0H                       SET RETURN CODE TO 16 FOR
*                                          ATTENTION SCHEDULED
         XR    RETCODE,RETCODE          CLEAR REGISTER
         LA    RETCODE,SIXTEEN(ZERO,RETCODE) SET RETURN CODE TO 16
*                                          FOR ATTENTION SCHEDULED
         B     QFYRET                   GO TO WRAP UP PROCEDURE
         SPACE
NOPARSE  DS    0H                       UNABLE TO PARSE
         XC    TSTIOPRM,TSTIOPRM        CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=M0104,INST11=(NUM,I0010), CALL I/O         *
               SECOND=M0277,ID=QFY26,MF=(E,TSTIOPRM) TO ISSUE ERR MSG
         CH    REG15,H16                TEST FOR SERIOUS ERROR
         BL    QFYCCO                   IF NOT CONTINUE
         B     QFYRET                   IF SERIOUS RTN TO MAINLINE
         SPACE
PUTMSG   DS    0H
         XC    TSTIOPRM,TSTIOPRM        CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=(REG4),     CALL I/O                       *
               SECOND=(REG5),ID=QFY26,MF=(E,TSTIOPRM) TO ISSUE ERR MSG
         CH    REG15,H16                TEST FOR SERIOUS ERROR
         BL    QFYCCO                   IF NOT CONTINUE
         B     QFYRET                   IF SERIOUS RTN TO MAINLINE
CHKSYM   DS    0H                       CHECK FOR SYMBOL.SYMBOL
         TM    PDEFLG2,ONBIT            IS THERE AN ENTRYNAME
*                                          PARAMETER IN THE PDE
         BO    MOVENM                   YES, ARGUMENT IS
*                                          LOADNAME.CSECTNAME
ONLYSYM  DS    0H                       FOUND PDE TO CONTAIN ONLY A
*                                          SYMBOL
         LM    WORKE,WORKO,PDEADRPT     PICK UP PTR TO SYMBOL AND FLAGS
         STM   WORKE,WORKO,PDELDNAM     STORE IN LOADNAME ENTRIES OF
*                                          PDE
         MVI   PDEADRPT,ZEROIT          CLEAR OUT STRING FIELD
         MVC   STRING1(L7),PDEADRPT     COMPLETE CLEARING FIELD
         SPACE
MOVENM   DS    0H                       MOVE LOADNAME TO TEST FIELD
         MVI   NEWLOAD,BLANK            BLANK OUT NEWLOAD FIELD IN
         MVC   NEWLOAD1(L7),NEWLOAD        THE WORK AREA
         LH    WORKE,PDELEN1            PICK UP LENGTH OF LOADNAME
         L     WORKO,PDELDNAM           GET POINTER TO NAME
         LA    REG4,NEWLOAD             GET ADDR OF WORK AREA FIELD
         BCTR  WORKE,ZERO               DECREMENT LENGTH BY ONE
         EX    WORKE,EXMOVE             MOVE NEW NAME TO WORK AREA
         DROP  R11
         L     R11,TSTANSPL             R11=ADDRESS OF PDL
         USING IKJPARMD,R11             GET ADDRESSABILITY TO PDL
         SPACE
ISTCB    DS    0H                       CHECK FOR TCB SPECIFIED
         XR    REG4,REG4                CLEAR REGISTER
         CH    REG4,TCBNAME             WAS TCB PARAMETER GIVEN
         BNE   YESTCB                   YES, SET UP SEARCH FOR NAME
         LA    R11,ADDR                 R11=ADDRESS OF ADDRESS PDE
         DROP  R11
         USING IKJPARMA,R11             GET ADDRESSABILITY TO PDE
         MVI   TCBFLG,TCBNOSP           INDICATE TCB NOT SPECIFIED
         EJECT
*****************************************************************
*                                                               *
*        THIS ROUTINE INITIALIZES A SEARCH FOR THE LOADNAME     *
*        THROUGH EACH TASK UNDER THE TEST TCB.                  *
*                                                               *
*****************************************************************
         SPACE
         L     WORKO,TSTTCB             GET THE ADDR OF TEST'S TCB
*                                       FROM TCOMTAB
         USING TCB,WORKO                SET UP ADDRESSABILITY TO TCB
         SPACE
DAUGHTER L     WORKE,D(WORKO)           GET ADDR OF DAUGHTER TCB
         LTR   WORKE,WORKE              IS THERE A DAUGHTER
         BNZ   SETSRCH                  YES...GO SEARCH FOR LOADNAME
         SPACE
SISTER   L     WORKE,S(WORKO)           GET ADDR OF SISTER TCB
         LTR   WORKE,WORKE              IS THERE A SISTER
         BNZ   SETSRCH                  YES...SEARCH FOR LOADNAME
         SPACE
MOTHER   CLC   M+ONE(THREE,WORKO),TSTTCB+ONE  DOES MOTHER = TEST TCB
         BE    NOFIND                   YES...PUT OUT ' NO FIND' MSG
         SPACE
         L     WORKO,M(WORKO)           NO...GET ADDR OF MOTHER TCB
         B     SISTER                   SEARCH 'SISTER' CHAIN
         SPACE
SETSRCH  ST    WORKE,TCBUSED            SAVE TCB ADDRESS
         DROP  WORKO                    DROP ADDRESSABILITY TO
*                                       TEST'S TCB
         USING TCB,WORKE                ADDRESSABILITY FOR TCB BEING
*                                       USED
         CLC   TCBUSED+ONE(THREE),ONE(WORKE)   IS THERE AN RB
         BE    NORB                     NO....(TCBRBP FIELD POINTS
*                                       TO THE TCB ITSELF RATHER THAN
*                                       TO AN RB)
         SPACE
         TM    TCBFLGS5,TCBFC           IS THIS TASK TERMINATED
         BNO   SEARCHRB                 NO...SEARCH THE RB CHAIN
*                                       FOR THIS TCB
         SPACE
NORB     LR    WORKO,WORKE              INITIALIZE TO SEARCH FOR
         B     DAUGHTER                 THE NEXT LOWER TCB
         EJECT
*********************************************************************
*                                                                   *
* THE SEARCH IS NOW BEGUN THROUGH RB'S AND LLE'S TO GET TO CDE'S AND*
* LOOK FOR MATCHING LOADNAME                                        *
*                                                                   *
*********************************************************************
         SPACE
SEARCHRB DS    0H                       BEGIN SEARCH OF RB CHAIN
         L     WORKO,TCBRBP             GET PTR TO RB QUE
         USING RBSECT,WORKO             SET UP ADDRESSABILITY
         SPACE
ISRBOK   DS    0H                       CHECK FOR TYPE OF RB
         TM    RBSTAB1,RBFTP            IS RB A PRB
         BNZ   NEXTRB                   NO, CHECK FOR NEXT RB
         SPACE
GETCODE  L     REG4,RBCDE               GET PTR TO CDE
         BAL   REG8,GETXL               BRANCH TO EXAMINE CDE
         SPACE
NEXTRB   DS    0H                       SET UP FOR SEARCHING NEXT RB
         L     WORKO,RBLINK             GET PTR TO NEXT RB
         LA    WORKO,ZERO(ZERO,WORKO)   CLEAR HIGH ORDER BYTE
         CLR   WORKO,WORKE              IS POINTER TO TCB
         BE    CHKLLE                   YES, BEGIN SEARCH THRU LOAD
*                                          LIST
         BNE   ISRBOK                   NO, CHECK FOR TYPE OF RB
         SPACE
         DROP  WORKO
         SPACE
GETXL    DS    0H                       LOOK FOR LOAD NAME
         USING CDENTRY,REG4             SET UP ADDRESSABILITY
         L     REG5,CDXLMJP             PICK UP XL POINTER
TESTNM   DS    0H                       CHECK FOR NAME
         CLC   CDNAME,NEWLOAD           DO LOADNAMES MATCH
         BE    CHKATTR                  YES, CHECK ATTRIBUTES
         TM    CDATTR,MINOR             IS THIS A MINOR CDE
         BO    MINORCDE                 YES, MINOR CDE
         BR    REG8                     NO, RETURN TO CALLER
         SPACE
MINORCDE DS    0H
         LR    REG4,REG5                THIS IS A MINOR CDE
         B     GETXL                    CHECK LOADNAME IN MAJOR CDE
         SPACE
CHKATTR  DS    0H                       LOADNAMES MATCHED - FIND XL
         TM    CDATTR,MINOR             IS THIS A MINOR CDE
         BZ    GOTOXL                   NO GO TO XL
         DROP  REG4
         USING CDENTRY,REG5             SET UP ADDRESSABILITY
         L     REG5,CDXLMJP             THIS IS A MINOR CDE, GET PTR
*                                          TO XL
         SPACE
GOTOXL   DS    0H                       GET FIRST CSECT ADDRESS FROM XL
         LA    REG6,FOUR                PUT A FOUR IN REG
         DROP  REG5
         USING XTLST,REG5               SET UP ADDRESSABILITY
         L     REG7,XTLNRFAC            PICK UP NUMBER CSECTS
         DROP  REG5
         LA    REG7,TWO(ZERO,REG7)      ACCOUNT FOR PRECEEDING 8 BYTES
         MR    REG6,REG6                GET DISPLACEMENT INTO XL
*                                          FOR ADDRESS OF FIRST CSECT
         L     REG7,ZERO(REG7,REG5)     PICK UP ADDRESS OF FIRST CSECT
         ST    REG7,CSECTADR            SAVE ADDRESS OF CSECT
         B     CHKCSECT                 CHECK FOR CSECT GIVEN
         SPACE
CHKLLE   DS    0H                       RB CHAIN EXHAUSTED WITHOUT A
*                                          MATCH - BEGIN SEARCH THRU
*                                          LLE'S
         L     REG4,TCBLLS              GET PTR TO LOAD LIST
TESTREG  LTR   REG4,REG4                HAS A MODULE BEEN LOADED
         BZ    NOMATCH                  NO, UNSUCCESSFUL SEARCH
         LR    REG6,REG4                SAVE LOAD LIST ADDR
         USING LLE,REG4                 SET UP ADDRESSABILITY
         L     REG4,LLECDPT             GET POINTER TO CDE
         BAL   REG8,GETXL               BRANCH TO EXAMINE CDE
NEXTLLE  DS    0H                       GET POINTER TO NEXT LLE
         LR    REG4,REG6                RESTORE LOAD LIST ADDR
         L     REG4,LLECHN              PICK UP POINTER
         B     TESTREG                  CHECK FOR MODULE BEING LOADED
         DROP  REG4
         SPACE
* THIS CODE IS ENTERED WHEN IT IS INITIALLY DETERMINED THAT A TCB
* ADDRESS WAS SPECIFIED.
         SPACE
YESTCB   DS    0H                       BEGIN PREPARATION TO SEARCH
*                                          FROM SPECIFIED TCB THROUGH
*                                          RB'S AND LLE'S TO CDE'S TO
*                                          FIND MATCHING LOADNAME
         MVI   TCBFLG,TCBGIVEN          SET SWITCH TO INDICATE TCB
*                                          SPECIFIED
         DROP  R11
         L     R11,TSTANSPL             R11=ADDRESS OF PDL
         USING IKJPARMD,R11             GET ADDRESSABILITY TO PDL
         LA    R11,ADDRTCB              R11=ADDRESS OF TCB PDE
         DROP  R11
         USING IKJPARMA,R11             GET ADDRESSABILITY TO PDE
         L     WORKE,PDEUSER            GET BINARY ADDRESS OF TCB
         ST    WORKE,TCBUSED            SAVE TCB ADDRESS
         LA    WORKE,ZERO(ZERO,WORKE)   ZERO HIGH ORDER BYTE
         DROP  R11
         L     R11,TSTANSPL             R11=ADDRESS OF PDL
         USING IKJPARMD,R11             GET ADDRESSABILITY TO PDL
         LA    R11,ADDR                 R11=ADDRESS OF ADDRESS PDE
         DROP  R11
         USING IKJPARMA,R11             GET ADDRESSABILITY TO PDE
         B     SEARCHRB                 BEGIN SEARCH OF RB CHAIN
         SPACE
* THIS CODE IS ENTERED WHEN A SEARCH THROUGH RB QUEUES AND LLE'S HAS
* FOUND NO MATCH IN LOADNAME FOR THE TCB SEARCHED
NOMATCH  DS    0H                       HERE IT IS DETERMINED WHETHER
*                                          MORE TCB'S CAN BE CHECKED
*                                          FOR OR NOT
         TM    TCBFLG,TCBGIVEN          WAS A TCB SPECIFIED BY THE
*                                          USER
         BO    ERRCOND                  YES, PUT OUT ERROR MESSAGE
         LR    WORKO,WORKE              GET ADDR OF NEXT LOWER TCB
         B     DAUGHTER                 GO THROUGH LOOP AGAIN
         SPACE
ERRCOND  DS    0H                       SET UP MESSAGE FOR MODULE NOT
*                                          FOUND
         SPACE
         L     WORKO,PDELDNAM           GET POINTER TO LOADNAME
         L     REG5,OUTBUF              GET ADDRESS OF OUTBUF IN REG
         MVI   ZERO(REG5),BLANK         MOVE BLANK INTO FIRST BYTE
         MVC   ONE(OUTBUFRL,REG5),ZERO(REG5) BLANK OUT BUFFER
         LA    REG4,FOUR(REG5)          ESTAB POINTER FOR TEXT MOVE
         SPACE
         LH    REG6,PDELEN1             GET LENGTH OF LOADNAME
         BCTR  REG6,ZERO                DECREMENT BY ONE FOR MOVE INSTR
         EX    REG6,EXMOVE              MOVE LOADNAME TO FIRST LEVEL
*                                       MESSAGE
         SPACE
         LA    REG6,SIX(REG6)           CALCULATE LENGTH OF INSERT
         STH   REG6,ZERO(REG5)          STORE INTO INSERT
         XC    TSTIOPRM,TSTIOPRM        CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=M0024,INST11=(ADDR,(REG5)), CALL I/O       *
               SECOND=M0222,INST21=(ADDR,(REG5)),ID=QFY26, TO ISSUE    *
               MF=(E,TSTIOPRM)                          AN ERROR MSG
         CH    REG15,H16                TEST FOR SERIOUS ERROR
         BL    QFYCCO                   IF NOT CONTINUE
         B     QFYRET                   IF SERIOUS RTN TO MAINLINE
         SPACE
NOFIND   DS    0H                       SINCE LOADNAME COULD NOT BE
*                                          FOUND TESTS ARE MADE TO SEE
*                                          IF USER SPECIFIED LOADNAME.
*                                          ENTRYNAME OR JUST SYMBOL
         TM    PDEFLG2,ONBIT            WAS SYMBOL.SYMBOL INDICATED
         BZ    FIXPDE                   NO, CLEAN UP PDE
         SPACE
LDCST    DS    0H                       SET UP MESSAGE FOR UNABLE TO
*                                          QUALIFY ARGUMENT AS
*                                          LOADNAME.CSECTNAME
         XC    TSTIOPRM,TSTIOPRM        CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=M0024,INST11=(APDE,(R11)), CALL I/O        *
               SECOND=M0223,ID=QFY26,MF=(E,TSTIOPRM) TO ISSUE ERR MSG
         CH    REG15,H16                TEST FOR SERIOUS ERROR
         BL    QFYCCO                   IF NOT CONTINUE
         B     QFYRET                   IF SERIOUS RTN TO MAINLINE
         SPACE
CONVERT  DS    0H                       THIS ROUTINE GIVES CONTROL TO
*                                       CONVERT TO GET A BINARY ADDR
         LCR   PARAMREG,R11             PUT COMPLEMENT OF POINTER TO
*                                          PDE INTO REG 1 TO INDICATE
*                                          AN ADDRESS CONVERT NEEDED
         XR    ZERO,ZERO                INDICATE THAT A BINARY CONVERT
*                                          IS NEEDED
         OI    TSTFLGS3,NOPRINT         SET SWITCH FOR IKJEGSYM NOT TO
*                                          PRINT A MESSAGE IF AN ERROR
*                                          OCCURS
         L     ADDREG,TSTCONVT          GET ADDRESS OF CONVERT ROUTINE
         BALR  RETREG,ADDREG            GO TO CONVERT ROUTINE
         NI    TSTFLGS3,PRINT           RESET SWITCH
         LTR   RETCODE,RETCODE          WAS CONVERT SUCCESSFUL
         BNZ   CHKATTN                  NO, CHECK FOR ATTENTION
*                                          SCHEDULED
         TM    PDEUSER,ONBIT            IS ADDRESS IN USERWORD
         BZ    SETPPLD                  YES...GO SET PPLOAD
         SPACE
         L     WORKE,PDEUSER            NO...MUST PICK UP PTR
*                                       TO SI BLOCK
         MVC   PDEUSER(L4),ZERO(WORKE)  MOVE ADDR INTO USER WORD
         SPACE
SETPPLD  DS    0H                       PUT CONVERTED ADDRESS INTO
*                                          TCOMTAB
         MVC   PPLOAD(L4),PDEUSER       SET NEW BASE FOR RELATIVES
         B     QFYRET                   RETURN
         SPACE
CHKATTN  DS    0H                       CHECK FOR ATTENTION SCHEDULED
         STC   RETCODE,CODESAVE         STORE CODE
         CLI   CODESAVE,SIXTEEN         WAS ATTENTION SCHEDULED
         BE    QFYRET                   YES, RETURN
         L     WORKO,PDEADRPT           GET ADDRESS OF STRING
         LH    REG7,PDELEN3                GET LENGTH OF NAME
         BCTR  REG7,ZERO                DECREMENT ONE FOR EX INSTR
         L     REG8,OUTBUF              GET ADDR OF MSG BUFFER @ZA04118
         LA    REG4,FOUR(REG8)          ESTAB POINTER FOR TEXT MOVE
         EX    REG7,EXMOVE              MOVE LOADNAME OR SYMBOL INTO
*                                       MESSAGE INSERT
         LA    REG7,FIVE(REG7)          CALCULATE INSERT LENGTH
         STH   REG7,ZERO(REG8)          STORE INTO INSERT HEADER
         XC    TSTIOPRM,TSTIOPRM        CLEAR PARM LIST FOR I/O CALL
         IKJEGSIO MSG,FIRST=M0024,INST11=(ADDR,(REG8)), CALL I/O       *
               SECOND=M0224,ID=QFY26,MF=(E,TSTIOPRM) TO ISSUE ERR MSG
         CH    REG15,H16                TEST FOR SERIOUS ERROR
         BL    QFYCCO                   IF NOT CONTINUE
         B     QFYRET                   IF SERIOUS RTN TO MAINLINE
*                                          TO QUALIFY AS LOADNAME
*                                          NOR SYMBOL
         SPACE
FIXPDE   DS    0H                       ADJUSTMENTS MUST BE MADE FOR
*                                          PDE
         MVC   PDEADRPT(L8),PDELDNAM    MOVE SYMBOL INFORMATION BACK
*                                          TO SYMBOL SLOT IN PDE
         MVI   PDELDNAM,ZERO            CLEAR OUT LOADNAME SLOT
         MVC   LDNM1(L7),PDELDNAM
         B     CONVERT                  GO TO CONVERT TO RESOLVE
*                                          ADDRESS
         SPACE
CHKCSECT DS    0H                       THIS CODE IS ENTERED IF A MATCH
*                                          WERE FOUND TO LOADNAME
         C     WORKE,PPTCB              WAS LOADNAME FOUND ON A NEW
*                                          TCB
         BNE   NEWTCB                   YES, NEW TCB GIVEN
         MVI   TCBUSED,NOTNEW           SET HIGH ORDER BYTE EQUAL TO
*                                          X'80' TO INDICATE LOADNAME
*                                          FOUND ON OLD TCB
TSTENTRY TM    PDEFLG2,ONBIT            WAS ENTRYNAME SPECIFIED
         BNO   NOENTRY                  NO, SET UP TCOMTAB INFO
         SPACE
* SET UP TO GO TO IKJEGSYM
         LR    PARAMREG,R11             PUT POINTER TO PDE IN REG1
         MVI   PDEADRPT,ZEROBYTE        CLEAR STRING ADDRESS AREA
         MVC   STRING1(L6),PDEADRPT        IN PDE
         LA    ADDREG,BLDMSG            GET WKAREA ADDR
         MVC   ZERO(SYMLEN,ADDREG),SYMLIST  MOVE SYM LIST
         SPACE
         LINK  MF=(E,(1)),SF=(E,(15)),ERRET=LKFAIL2   RESOLVE SYMBOLS
         B     LINKOK2                  IF CONTROL GETS HERE -OK
LKFAIL2  DS    0H
         LR    REG10,PARAMREG           TRANSFER ABEND CODE
         LR    REG4,RETCODE             TRANSFER RETURN CODE
         XC    TSTIOPRM,TSTIOPRM        CLEAR PARM LIST
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(REG10),INST11=(NUM,I0085), CALL*
               RC=(REG4),ID=QFY26,MF=(E,TSTIOPRM) TO ISSUE ERROR MSG
         CH    RETCODE,H16              COMPARE RC FOR SERIOUS ERROR
         BL    QFYCCO                   CONTINUE INTO NORMAL EXIT
         B     QFYRET                   SERIOUS RETURN WITH RTN CODE
         SPACE
         SPACE
LINKOK2  DS    0H
SYMBLOW  DS    0H
         LTR   RETCODE,RETCODE          IS RETURN CODE ZERO
         BNZ   TESTCODE                 NO, CHECK FURTHER
         MVI   TSTCURCT,BLANK           BLANK OUT CSECT NAME
         MVC   CSECTNM1(L7),TSTCURCT       IN TCOMTAB
         LA    REG4,TSTCURCT            GET ADDR OF FIELD
         LH    REG5,PDELEN2             GET LENGTH OF NAME
         BCTR  REG5,ZERO                DECREMENT BY ONE
         L     WORKO,PDECTNAM           GET POINTER TO NAME
         EX    REG5,EXMOVE              MOVE CSECT NAME TO TCOMTAB
         SPACE
         L     REG7,PDEUSER             PICK UP ADDRESS RETURNED
         S     REG7,TSTWHR              GET DISPLACEMENT OF CSECT
*                                       FROM BEGIN OF LOAD MODULE
         A     REG7,CSECTADR            ADD LOAD MODULE ADDR
*                                       (FIRST CSECT ADDR) FOUND BY
*                                       QUALIFY'S SEARCH
         SPACE
SETTCOM  DS    0H                       PUT LATEST INFO IN TCOMTAB
         ST    REG7,TSTSYMBA            STORE NEW BASE ADDRESS IN
         ST    REG7,PPLOAD                 FIELDS OF TCOMTAB
         LM    REG6,REG7,NEWLOAD        PICK UP NEW LOADNAME
         STM   REG6,REG7,TSTCURLD       STORE IN QUALIFIED LOADNAME
*                                       FIELD OF TCOMTAB
         SPACE
**************************************************************
*                                                            *
*        THE FOLLOWING ROUTINE WILL INITIALIZE TO PRINT      *
*        A MESSAGE INDICATING THE TCB ADDRESS UNDER WHICH    *
*        QUALIFICATION HAS TAKEN PLACE.                      *
*                                                            *
**************************************************************
         SPACE
         ST    WORKE,TCBSAVE            SAVE TCB ADDR
         XC    TSTIOPRM,TSTIOPRM        ZERO OUT PARM AREA FOR I/O
         IKJEGSIO MSG,FIRST=M0027,INST11=(REG,(WORKE)), CALL I/O FOR   *
               ID=QFY26,MF=(E,TSTIOPRM)   ERROR MESSAGE
         CH    RETCODE,H16              TEST FOR SERIOUS ERROR
         BL    CKTCB                    IF NOT CONTINUE WITH EXIT
         B     QFYRET                   RETURN FAST
         SPACE
CKTCB    DS    0H
         OI    TSTFLGS2,TSTQUAL         TURN ON-QUALIFY STARTING TCB
         OC    TSTGO(FOUR),TSTGO        TEST IF A NEW TCB WAS
*                                       QUALIFIED
         LA    RETCODE,FOUR             IF SO, SET RETURN CODE TO 4
         BNZ   QFYRET1                  AND BRANCH
         SPACE
QFYCCO   DS    0H                       THIS IS A WRAP UP ROUTINE
         NI    TSTFLGS2,HEXFF-TSTQUAL   TURN ON-QUALIFY STARTING TCB
         XR    RETCODE,RETCODE          SET RETURN CODE TO ZERO
QFYRET   DS    0H                       RETURN TO MAINLINE
         MVC   PPTCB(FOUR),PPTCBSAV     RESTORE ORIGINAL PPTCB IN
*                                       TCOMTAB
         MVC   PPRB(FOUR),PPRBSAV       RESTORE ORIGINAL RB
QFYRET1  DS    0H                       EQUATE LABEL
         LR    REG2,REG15               TRANSFER RETURN CODE
         ESTAE 0,OV                     REMOVE ESTAE
         LR    REG15,REG2               TRANSFER RETURN CODE
         NI    TSTFLGS4,HEXFF-TSTRERTN  TURN OFF RETRY SW IF ON
         SPACE
         L     SAVEREG,FOUR(ZERO,SAVEREG) RESTORE REG 13
         RETURN (14,12),,RC=(15)        RETURN TO CALLER - IKJEGMN1
         SPACE
         SPACE
NEWTCB   DS    0H                       LOADNAME FOUND ON A NEW TCB
         L     REG4,PPRB                GET CURRENT RB
         L     REG5,BREAKTAB            GET PTR TO BREAK TABLE
*                                       FROM TCOMTAB
         USING BRKELEM,REG5             SET UP ADDRESSABILITY TO
*                                       BREAK TABLE
         SPACE
         L     REG6,TCBRBP              GET PTR TO RB QUE
         USING RBSECT,REG6              SET UP ADDRESSABILITY TO
*                                       NEW RB
         SPACE
         LTR   REG5,REG5                HAS A BREAKPOINT BEEN SET
         BZ    SETTCB                   NO, BRANCH
         SPACE
         SPACE
PRBTST   LA    REG6,ZERO(ZERO,REG6)     CLEAR HIGH-ORDER BYTE
         TM    RBSTAB1,RBFTSIRB         IS RB A PRB OR AN IRB
         BZ    RBTST                    YES...
         SPACE
         L     REG6,RBLINK              NO...BUMP TO NEXT RB
         B     PRBTST                   CHECK AGAIN
         SPACE
RBTST    TM    RBOPSW+ONE,HEXF0         CHECK PSW FOR KEY 0
         BZ    NOQUAL                   KEY IS ZERO, NO QUALIFICATION
         SPACE
         TM    RBOPSW+ONE,HEX01         CHECK P-BIT OF PSW'S AMWP
         BZ    NOQUAL                   P-BIT OFF INDICATES
*                                       SUPERVISOR STATE...NO GOOD
         SPACE
         DROP  REG6
         USING RBSECT,REG4              SET UP ADDRESSABILITY TO
*                                       OLD RB
         SPACE
CHKBRK   CLC   RBOPSW+FIVE(THREE),BRKADDR+ONE   COMPARE INSTR ADDR
*                                               OF CURRENT RB'S PSW
*                                               TO BRKADDR
         BE    MATCH                    BRANCH IF MATCH IS FOUND
         SPACE
         L     REG5,BRKLINK             GET BRKLINK ENTRY
         LTR   REG5,REG5                IS IT ZERO (END OF CHAIN)
         BZ    SETTCB                   YES...GO SET PPTCB
         B     CHKBRK                   NO...CHK NEXT BREAK ELEMENT
         SPACE
MATCH    LA    REG5,BRKINST             PTR TO BRKINSTR IN
*                                       BREAK TABLE
         L     ZERO,PPTCB               GET CUR TCB ADDR FROM TCOMTAB
         IKJEGS9G  OPSW,TCBADDR=(ZERO),VALUE=(REG5),MF=(E,TESTSVC)
         CH    RETCODE,H16              TEST FOR SERIOUS ERROR
         BL    SETTCB                   IF NOT CONTINUE WITH EXIT
         B     QFYRET                   RETURN FAST
         SPACE
SETTCB   L     REG5,PPTCB               GET CUR PROB PGM TCB ADDR
         ST    REG5,TCBUSED             SAVE ADDRESS OF OLD TCB
         LA    WORKE,ZERO(ZERO,WORKE)   CLEAR HIGH-ORDER BYTE
         ST    WORKE,PPTCB              PUT THE NEW TCB ADDRESS IN
*                                          TCOMTAB
         SPACE
         DROP  REG4
         USING RBSECT,REG6              ADDRESSABILITY TO NEW RB
         SPACE
SETPRB   LA    ZERO,ZERO(REG6)          GET ADDR OF NEW RB
         ST    ZERO,PPRB                SAVE NEW RB ADDR
         SPACE
         L     WORKO,RBCDE              GET PTR TO CDE
         LA    WORKO,ZERO(WORKO)        CLEAR HIGH BYTE
         LTR   WORKO,WORKO              CHECK IF CDE ADDR IS ZERO
         BNZ   SETAQUAL                 IF NOT, CHANGE 'TSTAQUAL'
*                                       IN TCOMTAB
         SPACE
         MVI   TSTAQUAL,ZEROBYTE        IF SO, SET FIRST BYTE OF
*                                       TSTAQUAL TO ZERO
         B     SETTSTGO                 BRANCH TO SET 'TSTGO' IN
*                                       TCOMTAB
         SPACE
SETAQUAL DS    0H                       INITIALIZE TO REQUALIFY
         MVC   TSTAQUAL(TWELVE),CDNAMEX(WORKO)   PUT LOADNAME AND
*                                       ENTRY POINT ADDR INTO TSTAQUAL
         SPACE
SETTSTGO MVC   TSTGO(FOUR),RBOPSW+FOUR  SAVE NEW RB'S PSW INSTR ADDR
         SPACE
         LA    REG4,TSTGO+SIX           REG1 = PTR TO SVC
         IKJEGS9G  OPSW,TCBADDR=(WORKE),VALUE=(REG4),MF=(E,TESTSVC)
         CH    RETCODE,H16              TEST FOR SERIOUS ERROR
         BL    CONT1                    IF NOT CONTINUE WITH EXIT
         B     QFYRET                   RETURN FAST
         SPACE
CONT1    DS    0H
         L     ZERO,PPRB                REG0 = PTR TO NEW RB
         MVC   TSTGO+FOUR(ONE),RBWCF    SAVE WAIT COUNT OF NEW RB
         DROP  REG6
*                                       ORDER BYTE.
         IKJEGS9G  WCF,TCBADDR=(WORKE),MF=(E,TESTSVC)
         CH    RETCODE,H16              TEST FOR SERIOUS ERROR
         BL    TSTENTRY                 BRANCH TO TEST FOR ENTRY NAME
         B     QFYRET                   RETURN FAST
         SPACE
NOQUAL   DS    0H
         XC    TSTIOPRM,TSTIOPRM        ZERO OUT PARM LIST
         IKJEGSIO MSG,FIRST=M0107,INST11=(NUM,I0022), CALL I/O FOR     *
               SECOND=M0225,ID=QFY26,MF=(E,TSTIOPRM)  ERR MSG
         CH    RETCODE,H16              TEST FOR SERIOUS ERROR
         BL    QFYCCO                   NOT SERIOUS CONTINUE
         B     QFYRET                   RETURN TO MAINLINE
         SPACE
NOENTRY  DS    0H                       LOADNAME WAS FOUND BUT
*                                          ENTRYNAME NOT SPECIFIED
         MVI   TSTCURCT,ZEROBYTE        ZERO OUT FIELD IN TCOMTAB FOR
         MVC   CSECTNM1(L7),TSTCURCT       CURRENTLY QUALIFIED CSECT
*                                          NAME
         B     SETTCOM                  FINISH PUTTING INFO IN TCOMTAB
         SPACE
TESTCODE DS    0H                       CHECK CODE ON RETURN FROM
*                                          IKJEGSYM
         CLI   TCBUSED,NOTNEW           WAS NEW TCB USED
         BE    STOREC                   NO, CHECK RETURN CODE
         MVC   PPTCB(L4),TCBUSED        RESTORE PPTCB
         SPACE
STOREC   DS    0H                       CHECK RETURN CODE
         STC   RETCODE,CODESAVE         SAVE CODE TO TEST
         CLI   CODESAVE,SIXTEEN         WAS AN ATTENTION SCHEDULED
         BE    QFYRET                   YES, RETURN TO CALLER
         B     LDCST                    NO, PUT OUT MESSAGE FOR UNABLE
*                                          TO QUALIFY LOADNAME.
*                                          CSECTNAME
         SPACE
         EJECT
********************************************************************
*                                                                  *
*THIS ROUTINE WILL BE ENTERED BY PARSE TO MAKE A VALIDITY CHECK ON *
* THE FIRST QUALIFY POSITIONAL PARAMTER.  IF THE PARAMETER IS AN   *
* EXPRESSION, AN INDIRECT ADDRESS, AN ABSOLUTE ADDRESS, OR A FULLY *
* QUALIFIED ADDRESS CONTROL IS GIVEN TO THE CONVERT ROUTINE TO CONVERT
* THE ADDRESS TO BINARY.                                           *
*                                                                  *
********************************************************************
         SPACE
QFYVALCK DS    0H                       VALIDITY CHECK ROUTINE
         SAVE  (14,12),,QFYVALCK        SAVE REGISTERS FROM PARSE
         L     REG5,FOUR(ZERO,PARAMREG) GET ADDRESS OF QUALIFY'S SAVE
*                                          AREA
         L     BASEREG,SIXTY8(ZERO,REG5) SET UP ADDRESSABILITY WITH
*                                          MAINLINE OF QUALIFY
         L     REG9,FIFTY6(ZERO,REG5)   RESTORE REGISTER 9 WITH ADDR
*                                          OF TCOMTAB
         L     REG10,SIXTY(ZERO,REG5)   WORKAREA ADDRESSABILITY
         SPACE
         L     REG6,REGSAVE3            GET ADDRESS OF SAVE AREA FOR
*                                          THIS ROUTINE
         ST    SAVEREG,FOUR(ZERO,REG6)  SAVE ADDRESS OF PARSE SAVE AREA
         ST    REG6,EIGHT(ZERO,SAVEREG) STORE ADDRESS OF NEW SAVE AREA
*                                          IN PARSE SAVE AREA
         LR    SAVEREG,REG6             PUT ADDRESS OF NEW SAVE AREA
*                                          IN REGISTER 13
         SPACE
* BEGIN TESTS OF PARAMETER
         XR    REG4,REG4                CLEAR REGISTER FOR TEST
         L     R11,OUTBUF               PICK UP ADDRESS OF OUTBUF
         ST    REG4,ZERO(R11)           SET IN NO 2ND MSG DEFAULT VALUE
         OI    TSTFLGS4,TSTVALCK        TURN ON THE VALIDITY CHECK SW
         L     R11,ZERO(ZERO,PARAMREG)   PUT ADDRESS OF PDE IN REG 11
         ST    PARAMREG,PDESAVE         SAVE PARSE PARAM LIST ADDR
         CH    REG4,PDEINDCT            IS ADDRESS INDIRECT
         BNE   PREPCONV                 YES, SET UP FOR CONVERT ROUTINE
         TM    PDEFLG4,REGTYPE          IS IT A REGISTER ADDRESS
         BM    REGMSG                   YES, PUT OUT MESSAGE FOR
*                                          INVALID ADDRESS
         CLI   PDEFLG4,SYMADDR          IS ADDRESS A SYMBOLIC
         BNE   WHATISIT                 NO, DETERMINE WHETHER OR NOT
*                                          TO CONVERT
         CLI   PDESIGN,ZEROBYTE         IS ADDRESS AN EXPRESSION
         BNE    PREPCONV                 YES, SET UP FOR CONVERT RTN
         TM    PDEFLG1,ONBIT            IS ADDRESS FULLY QUALIFIED
         BZ    CHKCT                    NO, SET UP FOR RETURN TO PARSE
         SPACE
PREPCONV DS    0H                       SET UP FOR CONVERT ROUTINE
         LCR   PARAMREG,R11             PUT TWO'S COMPLEMENT OF ADDR
*                                          OF PDE IN REGISTER 1 TO
*                                          INDICATE THAT THIS IS TO BE
*                                          AN ADDRESS CONVERT
         XR    ZERO,ZERO                INDICATE THAT A BINARY CONVERT
*                                          IS DESIRED
         L     ADDREG,TSTCONVT          GET ADDRESS OF CONVERT ROUTINE
         BALR  RETREG,ADDREG            GO TO CONVERT ROUTINE
         LTR   RETCODE,RETCODE          WAS CONVERT SUCCESSFUL
         BNZ   BADCONV                  NO...HAVE PARSE PUT OUT
*                                       'REENTER'
         TM    PDEUSER,ONBIT            IS ADDRESS IN USERWORD
         BZ    GOBACK                   YES, RETURN TO PARSE
         L     WORKE,PDEUSER            GET POINTER TO SI BLOCK
         L     WORKO,ZERO(ZERO,WORKE)   PICK UP ADDR
         ST    WORKO,PDEUSER            STORE IN USERWORD
         B     GOBACK                   RETURN TO PARSE
         SPACE
CHKLENG  DS    0H                       CHECK LENGTH OF SYMBOLIC
         XR    REG5,REG5                CLEAR REGISTER
         LA    REG5,L8(ZERO,REG5)       PUT AN 8 IN REGISTER
         CH    REG5,PDELEN3             DOES SYMBOL EXCEED 8 BYTES
         BL    EXCEEDS                  YES, PUT OUT MESSAGE
BACK     L     REG4,NOBINARY            PICK UP INDICATION FOR ADDRESS
*                                          NOT CONVERTED TO BINARY
         ST    REG4,PDEUSER             PLACE IN PDE
         SPACE
GOBACK   DS    0H                       RETURN
         XR    RETCODE,RETCODE          SET RETURN CODE TO ZERO
         NI    TSTFLGS4,HEXFF-TSTVALCK  TURN OFF THE VALIDITY CHECK SW
         L     SAVEREG,FOUR(ZERO,SAVEREG) RESTORE REG 13
         RETURN (14,12),,RC=(15)        RETURN TO PARSE
         SPACE
CHKCT    DS    0H                       TEST FOR CSECTNAME.SYMBOL
         TM    PDEFLG2,ONBIT            CSECTNAME GIVEN
         BZ    CHKLENG                  NO, TEST LENGTH OF SYMBOLIC
         B     PREPCONV                 RESOLVE CSECTNAME ADDRESS
         SPACE
WHATISIT  EQU  *                        DETERMINE WHETHER OR NOT TO
*                                          CONVERT ADDRESS
         TM    PDEFLG1,ONBIT            LOADNAME GIVEN
         BZ    PREPCONV                 NO, CONVERT ADDRESS
         TM    PDEFLG3,ONBIT            FULLY QUALIFIED NAME GIVEN
         BO    PREPCONV                 YES, CONVERT ADDRESS
         B     BACK                     INPUT WAS LOADNAME.CSECTNAME
*                                          RETURN TO IKJPARS WITH CODE
*                                          OF ZERO
         SPACE
EXCEEDS  DS    0H                       PREPARE TO PUT OUT MESSAGE FOR
*                                          LENGTH OF SYMBOL TOO GREAT
         LA    REG2,M0268               GET MESSAGE NUMBER INTO REG
         B     MSGOUT                   BRANCH TO PUT OUT MESSAGE
         SPACE
REGMSG   DS    0H
         LA    REG2,M0268               GET MESSAGE NUMBER INTO REG
         SPACE
MSGOUT   DS    0H
         XC    TSTIOPRM,TSTIOPRM        CLEAR I/O PARM LIST
         IKJEGSIO MSG,FIRST=M0101,INST11=(APDE,(R11)), CALL I/O FOR    *
               SECOND=(REG2),ID=QFY26,MF=(E,TSTIOPRM) ERROR MESSAGE
CKRC     DS    0H
         LTR   RETCODE,RETCODE          WAS MESSAGE SUCCESSFULLY
*                                          HANDLED
         BNZ   SAVECODE                 NO, SAVE RETURN CODE
         B     SETCODE8                 HAVE PARSE PUT OUT 'REENTER'
         EJECT
********************************************************************
*                                                                  *
*   THIS ROUTINE WILL BE ENTERED BY PARSE TO MAKE A VALIDITY CHECK *
*   ON THE ADDRESS SPECIFIED FOR THE TCB KEYWORD.                  *
*                                                                  *
********************************************************************
         SPACE 2
QFYCHECK DS    0H
         SAVE  (14,12),,QFYCHECK        SAVE REGISTERS FROM PARSE
         L     REG5,FOUR(ZERO,PARAMREG) GET ADDRESS OF QUALIFY'S
*                                          SAVE AREA
         L     BASEREG,SIXTY8(ZERO,REG5) GET ADDRESSABILITY WITH
*                                          MAINLINE OF QUALIFY
         L     REG9,FIFTY6(ZERO,REG5)   RESTORE REG9 WITH ADDRESS OF
*                                          TCOMTAB
         L     REG10,SIXTY(ZERO,REG5)   WORKAREA ADDRESSABILITY
         SPACE
         L     REG6,REGSAVE3            GET ADDRESS OF SAVE AREA FOR
*                                          THIS ROUTINE
         ST    SAVEREG,FOUR(ZERO,REG6)  SAVE ADDRESS OF PARSE SAVE AREA
         ST    REG6,EIGHT(ZERO,SAVEREG) STORE ADDRESS OF NEW SAVE AREA
*                                          IN PARSE SAVE AREA
         LR    SAVEREG,REG6             PUT ADDRESS OF NEW SAVE AREA
*                                          IN REGISTER 13
* GET TCB ADDRESS CONVERTED TO BINARY
         XR    ZERO,ZERO                INDICATE BINARY CONVERT
         L     R11,OUTBUF               PICK UP ADDRESS TO OUTBUF
         ST    ZERO,ZERO(R11)           STORE NO MSG DEFAULT
         OI    TSTFLGS4,TSTVALCK        TURN ON VALIDITY CHECK SW
         L     R11,ZERO(ZERO,PARAMREG)  GET ADDR OF PDE
         ST    PARAMREG,PDESAVE         SAVE PARSE PARAM LIST ADDR
         LCR   PARAMREG,R11             PUT COMPLEMENT OF ADDRESS OF
*                                          PDE IN REGISTER TO INDICATE
*                                          ADDRESS CONVERT
         L     ADDREG,TSTCONVT          GET ADDRESS OF CONVERT ROUTINE
         BALR  RETREG,ADDREG            GO TO CONVERT ADDR
         LTR   RETCODE,RETCODE          WAS CONVERT SUCCESSFUL
         BNZ   BADCONV                  NO, SET ERROR CODE
         L     WORKO,PDEUSER
         TM    PDEUSER,ONBIT            IS CONVERTED ADDR IN USER WORD
         BZ    NOSYM                    YES...
         SPACE
         L     WORKO,ZERO(ZERO,WORKO)   NO, GET ADDR FROM SI BLOCK
         ST    WORKO,PDEUSER            AND SAVE
NOSYM    DS    0H
         LH    WORKO,PDEINDCT           GET INDIRECT ADDR COUNT
         LTR   WORKO,WORKO              IS IT ZERO
         BNZ   FULLWORD                 NO...CHECK BOUNDARY
         SPACE
         TM    PDEFLG4,REGTYPE          IS THIS A REGISTER ADDR
         BZ    FULLWORD                 NO...
         SPACE
         B     REGMSG                   SET UP FOR 'INVALID REGISTER
*                                       ADDR' MSG
         SPACE
FULLWORD TM    PDEUSER3,HEX03           FULLWORD BOUNDARY
         BZ    CHKTCB                   YES...CHECK IF TCB EXISTS
*                                       AT SPECIFIED ADDRESS
         SPACE
         XC    TSTIOPRM,TSTIOPRM        ZERO OUT PARM FIELD
         IKJEGSIO MSG,FIRST=M0101,INST11=(APDE,(R11)), CALL I/O FOR    *
               SECOND=M0280,INST21=(NUM,I0003), ERROR MSG              *
               ID=QFY26,MF=(E,TSTIOPRM)         TO USER
         B     CKRC                     CHECK RETURN CODE
         SPACE
*****************************************************************
*                                                               *
*        THE FOLLOWING ROUTINE WILL CHECK WHETHER OR NOT A TCB  *
*        UNDER TEST ACTUALLY EXISTS AT THE SPECIFIED ADDRESS.   *
*                                                               *
*****************************************************************
         SPACE
CHKTCB   L     REG7,PDEUSER             GET SPECIFIED TCB ADDR
         LA    REG7,ZERO(ZERO,REG7)     CLEAR HIGH BYTE AND SAVE
         SPACE
         L     REG4,TSTTCB              TEST'S TCB
         LA    REG8,ZERO(REG4)          CLEAR HIGH BYTE AND SAVE
DAU      L     REG5,D(REG4)             GET ADDR OF DAUGHTER TCB
         LTR   REG5,REG5                IS THERE A DAUGHTER
         BNZ   CHKADDR                  YES...CHECK IF VALID
         SPACE
SIS      L     REG5,S(REG4)             GET ADDR OF SISTER TCB
         LTR   REG5,REG5                IS THERE A SISTER
         BNZ   CHKADDR                  YES...CHECK IF VALID
         SPACE
MOTH     L     REG4,M(REG4)             GET ADDR OF MOTHER TCB
         LA    REG4,ZERO(REG4)          CLEAR HIGH BYTE
         CR    REG4,REG8                DOES MOTHER = TEST TASK
         BNE   SIS                      NO...CHECK SISTER TASK
         SPACE
         LA    REG2,M0226               GET MESSAGE NUMBER INTO REG
         B     MSGOUT                   MESSAGE
         SPACE
CHKADDR  LA    REG5,ZERO(ZERO,REG5)     CLEAR HIGH BYTE
         CR    REG5,REG7                DOES THIS TCB ADDR MATCH
*                                       THE GIVEN TCB ADDR
         BE    RETPARSE                 YES...ADDR IS VALID, RETURN
*                                       TO PARSE
         SPACE
         LR    REG4,REG5                GET NEXT LOWER TCB IN CHAIN
         B     DAU                      LOOP UNTIL DONE
         SPACE
*****************************************************************
         SPACE 2
RETPARSE DS    0H                       RETURN TO PARSE
         NI    TSTFLGS4,HEXFF-TSTVALCK  TURN OFF VALIDITY CHECK BIT
         L     REG4,OUTBUF              PICK UP ADDR OF SECOND LEV MSG
         LH    REG2,ZERO(REG4)          PREPARE TO TEST FOR 2ND LEV
         LTR   REG2,REG2                TEST FOR ZERO MSG LENGTH
         BZ    NO2NDLEV                 BRANCH AROUND NEXT INSTRUCTION
         L     REG4,PDESAVE             GET PARSE PARAM LIST ADDR
         MVC   EIGHT(FOUR,REG4),OUTBUF  PUT ADDR OF SECOND LEVEL
*                                       MSG IN PARSE PARAMETER LIST
NO2NDLEV DS    0H
         L     SAVEREG,FOUR(ZERO,SAVEREG) RESTORE REG 13
         RETURN (14,12),,RC=(15)        RETURN TO PARSE
         SPACE
BADCONV  DS    0H                       CONVERT RTN NOT SUCCESSFUL
         SPACE
SAVECODE STC   RETCODE,CONVRTCD         SAVE RETURN CODE
         CLI   CONVRTCD,EIGHT           COMPARE TO EIGHT
         BNH   SETCODE8                 IF 4 OR 8, SET RETURN CODE
*                                       TO 8 FOR PARSE
         SPACE
         LA    RETCODE,TWELVE           ELSE, SET RETURN CODE TO 12
*                                       FOR PARSE
         B     RETPARSE                 RETURN TO PARSE
         SPACE
SETCODE8 XR    RETCODE,RETCODE          CLEAR REGISTER
         LA    RETCODE,EIGHT(ZERO,RETCODE) RETURN CODE OF 8 FOR PARSE
*                                          TO ISSUE 'REENTER'
         B     RETPARSE                 RETURN TO PARSE
         EJECT
*************************************************************
*                                                           *
*        STAE RETRY ROUTINE                                 *
*                                                           *
*************************************************************
         SPACE 2
RETRY    DS    0H                       RETRY ADDR
         L     REG4,CVTPTR              GET CVT ADDR
         USING CVTDSECT,REG4            ADDRESSABILITY TO CVT
         SPACE
         L     REG4,CVTTCBP             GET ADDR OF CURRENT
         L     REG4,TCBADR(ZERO,REG4)   TCB (TEST'S TCB)
         DROP REG4
         SPACE
         USING TCB,REG4                 ADDRESSABILITY TO TCB
         L     REG9,TCBTRN              TCBTRN FIELD OF TEST'S TCB
         OI    TSTFLGS4,TSTRERTN        TURN ON RETRY SW
*                                       CONTAINS PTR TO TCOMTAB
         SPACE
         L     SAVEREG,REGSAVE2         GET ADDR OF QUALIFY'S
*                                       SAVEAREA
         L     BASEREG,SIXTY8(ZERO,SAVEREG)  RE-ESTABLISH MODULE
*                                            ADDRESSABILITY
         SPACE
NOWORK   LA    RETCODE,TWENTY           SET RETURN CODE TO 20
         B     QFYRET                   RETURN TO MAINLINE
         EJECT
EXMOVE   MVC   ZERO(ZERO,REG4),ZERO(WORKO) MOVE INSTRUCTION TO BE
*                                          EXECUTED
         EJECT
******************************************************************
*                                                                *
*              CONSTANTS                                         *
*                                                                *
******************************************************************
*
         SPACE
         DS    0F                       ALIGNMENT
IKJEGSPL IKJEGSPL RTRY=RETRY,ABNTB=STATBL,MODNM=IKJEGQFY,TNM=QUALIFY
         DS    0F                       ALIGNMENT
ZZZZZZZZ DC    52C'Z'                   TO BE USED FOR MAINTENANCE
NOEXP    DC    X'FF000000'              SYMBOLIC OF NOT AN ADDRESS
*                                          EXPRESSION
MASKUP   DC    X'FFFFFFFE'              MASK FOR ROUNDING UP
NOBINARY DC    X'FFFFFFFF'              SYMBOLIC FOR ADDRESS NOT
*                                          CONVERTED TO BINARY
ICCHNG   DC    X'08000000'              IC CHANGE FLAG
WAITCNT  DC    X'01000000'              FLAG TO TURN OFF WAIT CNT
TAB      DC    C'0123456789ABCDEF'      TABLE FOR TCB ADDR TRANSLATE
PCLISTA  DC    V(IKJEGPCL)              ADDRESS OF PCLIST CSECT
         SPACE
RETRYADR DC    AL3(RETRY)               RETRY ROUTINE ADDR FOR STAE
         SPACE
STAELIST ESTAE STAELIST,MF=L            LIST FORM OF STAE
STAELEN  EQU   *-STAELIST               LENGTH OF STAE LIST
         SPACE
         SPACE
SYMLIST  LINK  EP=IKJEGSYM,SF=L         LIST FORM OF LINK
SMTSYM   DS    0H                       SMT TEST LABEL FOR SYM LINK
         SPACE
SYMLEN   EQU   *-SYMLIST                LENGTH OF SYM LIST
         SPACE
ZEROH    DC    H'0'                     HALFWORD OF ZERO
H16      DC    H'16'                    FOR RETURN CODE TEST
         SPACE 2
*****************************************************************
*                                                               *
*        STAE ADDRESS TABLE                                     *
*                                                               *
*****************************************************************
         SPACE 2
STATBL   DS    0H
         DC    AL1(99),AL3(PARSBLOW)    PARSE LINK FAILED
         DC    AL1(99),AL3(SYMBLOW)     SYM LINK FAILED
         DC    AL1(HEXFF)               TABLE END
         EJECT
         DS    0F                       ALIGNMENT
IKJEGPCL IKJPARM DSECT=IKJPARMD
ADDR     IKJPOSIT ADDRESS,PROMPT='ADDRESS',VALIDCK=QFYVALCK
TCBNAME  IKJKEYWD
         IKJNAME 'TCB',SUBFLD=TCBADDR
TCBADDR  IKJSUBF
ADDRTCB  IKJPOSIT  ADDRESS,PROMPT='TCB ADDRESS',VALIDCK=QFYCHECK
         IKJENDP
         EJECT
         TCOMTAB                        COMMUNICATIONS WORK AREA
CSECTNM1 EQU   TSTCURCT+1               SECOND BYTE OF TSTCURCT
PPTCB1   EQU   PPTCB+1                  SECOND BYTE OF FIELD
         EJECT
WORKSP   DSECT                          WORK AREA DSECT
PARSPARM DS    0H                       PARAMETER LIST FOR PARSE
PTUPT    DS    A                        POINTER TO UPT
PTECT    DS    A                        POINTER TO ECT
PTCPECB  DS    A                        POINTER TO CP ECB
PTPCL    DS    A                        POINTER TO PCL
PTANSW   DS    A                        POINTER TO ANSWER PLACE
PTBUFF   DS    A                        POINTER TO COMMAND BUFFER
PTAREA   DS    A                        POINTER TO USER WORK AREA
NEWLOAD  DS    2F                       LOADNAME GIVEN BY USER
NEWLOAD1 EQU   NEWLOAD+1                SECOND BYTE OF NEWLOAD FIELD
PPRBSAV  DS    A                        SAVE AREA FOR PPRB
PPTCBSAV DS    A                        SAVE AREA FOR PPTCB
TCBSAVE  DS    A                        SAVE AREA FOR QUALIFIED TCB
PDESAVE  DS    A                        PTR TO PARSE PARAMETER LIST
PROTKEY  DS    X                        PROTECTION KEY FOR TEST
TCBFLG   DS    X                        SWITCH FOR TCB
TCBGIVEN EQU   X'80'                    TCB SPECIFIED
TCBNOSP  EQU   X'00'                    TCB NOT SPECIFIED
CODESAVE DS    X                        RETURN CODE SAVED FOR TESTING
CONVRTCD DS    X                        CONVERT RETURN CODE
         DS    0F                       ALIGNMENT
CSECTADR DS    A                        ADDRESS OF FIRST CSECT
TCBUSED  DS    A                        ADDRESS OF TCB USED
TESTSVC  DS    3F                       PARM LIST FOR TEST SVC
BLDMSG   DS    18C                      WORK AREA TO BUILD MESSAGE
BLDMSG1  EQU   BLDMSG+1                 SECOND BYTE
NEWADDR  EQU   X'00'                    INDICATES NEW TCB ADDR
NOTNEW   EQU   X'80'                    INDICATES TCB ADDR IN PPTCB
*                                          IS THE ONE LOADNAME WAS
*                                          FOUND ON
TCBUSED1 EQU   TCBUSED+1                SECOND BYTE OF TCBUSED
         EJECT
         IKJPARMA
LDNM1    EQU   PDELDNAM+1               SECOND BYTE OF LOADNAME SLOT
STRING1  EQU   PDEADRPT+1               SECOND BYTE OF STRING
USEWRD   EQU   PDEUSER+1                SECOND BYTE OF USERWORD
PDEUSER3 EQU   PDEUSER+3                FOURTH BYTE OF USER WORD
         EJECT
         TSTCWORK
         EJECT
         BRKELEM
         EJECT
CVTDSECT DSECT
         CVT
         EJECT
         IHACDE
         IHAXTLST
         IHALLE
         EJECT
         IKJTCB                         TCB DSECT
         SPACE
S        EQU   TCBNTC-TCB               SISTER TASK
M        EQU   TCBOTC-TCB               MOTHER TASK
D        EQU   TCBLTC-TCB               DAUGHTER TASK
         EJECT
         IKJRB                          RB DSECT
         EJECT
         IKJPPL                         PARSE PARAMETER LIST DSECT
         END
