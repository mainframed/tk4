         TITLE 'IKJEGTCB, THE LISTTCB FUNCTION OF THE TEST COMMAND'
         COPY  IKJEGSIO
IKJEGTCB CSECT
***********************************************************************
* STATUS                                                              *
*    CHANGE LEVEL 000, VERSION 02, OS/VS2                             *
*                                                                     *
* FUNCTION/OPERATION                                                  *
*    THIS SUBCOMMAND PROGRAM RECEIVES CONTROL FROM THE TEST SUBCOMMAND*
*    PROCESSOR.  IT DISPLAYS ALL OR PART OF THE PROBLEM PROGRAM TCB OR*
*    THE TCB AT A SPECIFIED ADDRESS.                                  *
*                                                                     *
* ENTRY POINTS                                                        *
*         IKJEGTCB - ENTERED FROM IKJEGMNL                            *
*         IKJEGVCK - ENTERED FROM IKJPARS                             *
*                                                                     *
* INPUT                                                               *
*    ONE LINE OF INPUT FROM THE TERMINAL CONTAINING THE SUBCOMMAND    *
*                                                                     *
* OUTPUT                                                              *
*    LINES OF OUTPUT TO THE TERMINAL CONTAINING DESCRIPTIVE HEADERS   *
*    AND THE REQUESTED TCB FIELDS                                     *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*         IKJPARS  - TO SCAN THE INPUT BUFFER                         *
*         IKJEGCVT - TO CHECK AND CONVERT THE ADDRESS, IF SPECIFIED   *
*    AND TO CONVERT THE TCB FIELDS TO PRINTABLE                       *
*         IKJEGIO  - TO OUTPUT THE HEADER AND TCB FIELDS              *
*         IKJEGBLD - TO BUILD AN ADDRESS STRING FOR A MESSAGE         *
*                                                                     *
* EXITS,NORMAL                                                        *
*                                                                     *
*         IKJPARS-VIA A BRANCH REGISTER 14 FROM IKJEGVCK WITH ONE OF  *
*    THE FOLLOWING RETURN CODES IN REGISTER 15-                       *
*    0  - INDICATING TO CONTINUE PROCESSING THE COMMAND BUFFER        *
*    8  - INDICATING IKJPARS SHOULD PROMPT WITH REENTER               *
*    12 - INDICATING IKJPARS SHOULD RETURN TO IKJEGTCB WITH A         *
*    *    RETURN CODE OF 20 IN REGISTER 15                            *
*                                                                     *
*         IKJEGMNL VIA REGISTER 14 WITH ONE OF THE FOLLOWING          *
*    RETURN CODES PASSED VIA REGISTER 15.                             *
*    0  - NORMAL RETURN                                               *
*    16 - INDICATING AN ATTENTION INTERRUPT WAS ENCOUNTERED           *
*                                                                     *
* EXITS,ERROR                                                         *
*         IKJEGMNL-VIA BRANCH REGISTER 14 WITH A RETURN CODE OF 20    *
*    IN REGISTER 15 INDICATING THE ESTAE RETRY ROUTINE WAS ENTERED.   *
*    A RETURN CODE OF 24 INDICATES THAT THE ESTAE COULD NOT BE ISSUED.*
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    TCOMTAB - TEST TABLE AND WORKAREA                                *
*                                                                     *
* ATTRIBUTES                                                          *
*    REENTRANT ROUTINE                                                *
*    REFRESHABLE ROUTINE                                              *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL            *
*    REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT *
*    TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS BEEN ARRANGED  *
*    SO THAT REDEFINITION OF CHARACTER CONSTANTS, BY REASSEMBLY,      *
*    WILL RESULT IN A CORRECT MODULE FOR THE NEW DEFINITION.          *
*                                                                     *
* NOTES                                                               *
*    COMMENTS ON THE ASSEMBLER STATEMENTS USUALLY START IN COLUMN 36. *
*    TCBRTRY IS THE ENTRY POINT INTO THE STAE RETRY ROUTINE AND IS    *
*    GIVEN CONTROL FROM IKJEGSTA.                                     *
*    PLM = SY35-0004                                                  *
*          TSO COMMAND PROCESSOR LOGIC                                *
*          VOLUME III - TEST                                          *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              REGISTER EQUATES                                       *
*                                                                     *
***********************************************************************
R0       EQU   0                   WILL BE ZERO OR NEG FOR CONVERT
R1       EQU   1                   PARAMETER REGISTER
R2       EQU   2                   WORK REG
R3       EQU   3                   WORK REG & BASE REG FOR TCB DSECT
R4       EQU   4                   WORK REG
R5       EQU   5                   PT TO WORK AREA
R6       EQU   6                   WORK REG
R7       EQU   7                   WORK REG
R8       EQU   8                   USED TO REF TCB ENTRIES
R9       EQU   9                   BASE REG FOR TCOMTAB
R10      EQU   10                  WORK REG
R11      EQU   11                  WORK REG & WORKAREA BASE
R12      EQU   12                  MODULE BASE REG
R13      EQU   13                  PT TO SAVE AREA
R14      EQU   14                  LINKAGE RETURN REG
R15      EQU   15                  LINKAGE BRANCH REG
         SPACE 2
***********************************************************************
*                                                                     *
*        SYMBOLIC EQUATES                                             *
*                                                                     *
***********************************************************************
         SPACE
ZERO     EQU   0                   NO. 0
ONE      EQU   1                   NO. 1
TWO      EQU   2                   NO. 2
THREE    EQU   3                   NO. 3
FOUR     EQU   4                   NO. 4
FIVE     EQU   5                   NO. 5
EIGHT    EQU   8                   NO. 8
TEN      EQU   10                  NO. 10
ELEVEN   EQU   11                  NO. 11
TWELVE   EQU   12                  NO. 12
SIXTEEN  EQU   16                  NO. 16
EIGHTEEN EQU   18                  NO. 18
TWENTY   EQU   20                  NO. 20
TWENTY4  EQU   24                  NO. 24
THIRTY2  EQU   32                  NO. 32
THIRTY5  EQU   35                  NO. 35
FORTY    EQU   40                  NO. 40
FIFTY6   EQU   56                  NO. 56
SIXTY8   EQU   68                  NO. 68
EIGHTY   EQU   80                  NO. 80
EIGHTY4  EQU   84                  NO. 84
EIGHTY9  EQU   89                  NO. 89
NINETY   EQU   90                  NO. 90
ONE59    EQU   159                 NO. 159
ONE63    EQU   163                 NO. 163
ONE84    EQU   184                 NO. 184
HEX00    EQU   X'00'               NO. 0
HEX01    EQU   X'01'               NO. 1
HEX03    EQU   X'03'               NO. 3
HEX04    EQU   X'04'               NO. 4
HEXFF    EQU   X'FF'               USED IN NI INST
BLANK    EQU   C' '                USED TO CLEAR BUFFERS
TYPE     EQU   X'04'               INDICATES CONVERT TO HEX
FLAG     EQU   X'80'               VALUE CONVERSION
LINKCODE EQU   X'03'               STAE CODE FOR LINK FAILED
PROTCHK  EQU   7                   STAE CODE FOR PROTECTION CHK
CVTADDR  EQU   16                  ADDRESS OF CVT
HEX38    EQU   X'38'               USED IN TM INSTRUCTION
PLUS     EQU   C'+'                PLUS SIGN
* THE FOLLOWING ARE 1ST LEVEL MESSAGE NO. EQUATES.
M0016    EQU   16                  TCB FIELD NAME REQUIRED
M0101    EQU   101                 INVALID ADDRESS ...
M0103    EQU   103                 NOT ENOUGH MAIN STORAGE
M0104    EQU   104                 LISTTCB FAILED, COMND SYS ERR
* THE FOLLOWING ARE 2ND LEVEL MESSAGE NO. EQUATES.
M0274    EQU   274                 REG NOT. MUST BE INDRCT GEN REG
M0277    EQU   277                 PARSE ERROR CODE 12
M0280    EQU   280                 FULLWORD BOUNDARY REQ.
* THE FOLLOWING ARE CONSTANT MESSAGE INSERT EQUATES.
I0040    EQU   40                  IKJPARS
I0008    EQU   8                   LISTTCB
I0003    EQU   3                   FULL
I0099    EQU   99                  ABEND CODE INSERT NO.
I0097    EQU   97                  ABEND CODE INSERT NO. (ICTABLE)
**********************************************************************
         EJECT
*  ENTRY POINT FROM IKJEGMNL.  REGISTER 9 POINTS TO TCOMTAB UPON     *
*  ENTRY.                                                            *
         SPACE
         SAVE  (14,12),,*          SAVE CALLING PROGRAM REGISTERS
         LR    R12,R15             SAVE ADDRESS OF THIS PROGRAM
         USING IKJEGTCB,R12        SET UP MODULE BASE
         USING TCOMTAB,R9          ADDRESSABILITY FOR TCOMTAB
         L     R15,REGSAVE2        POINT TO MODULE SAVE AREA
         L     R7,PARSADR          POINT TO PARSE PCL
         ST    R13,FOUR(R15)       STORE POINT TO OLD SAVE AREA
         ST    R15,EIGHT(R13)      STORE NEW AREA ADDR OLD SAVE AREA
         LR    R13,R15             POINT TO NEW SAVE AREA
         STM   R14,R12,TWELVE(R13) SAVE REGISTERS FOR SAFETY
         L     R6,WORKAREA         GET ADDRESS OF WORKAREA
         USING TSTCWORK,R6         ESTABLISH ADDRESSABILITY TO IT
         LA    R5,CWORKCMD         SKIP CONVERT WORKAREA
         DROP  R6                  DROP ADDRESSABILITY TO CONVERT AREA
         USING MYWKAREA,R5         ESTABLISH ADDRESSABILITY TO OUR AREA
         L     R2,TSTSTAE          POINT TO IKJEGSTA
         XC    STAESTUF(SIXTEEN),STAESTUF   CLEAR STAE PARAMETER AREA
         ESTAE (R2),PARAM=LISTESTA,RECORD=YES,MF=(E,(R5))  ISSUE ESTAE
         LTR   R15,R15             RETURN CODE 0
SMTSTAE  DS    0H                  SMT LABEL FOR TEST CASE TTCB0400
         BZ    SETPARSE            YES, CONTINUE PROCESSING
         STC   R15,TSTESTRC        STORE RET CODE IN TCOMTAB
         LA    R15,TWENTY4         SEND RC=24 TO MAINLINE
         B     RETURNS             RETURN TO MAINLINE
SETPARSE EQU   *
**  THIS CODE SETS UP TO GO TO IKJPARS TO VALIDITY CHECK THE INPUT  **
**  BUFFER.                                                         **
         DROP  R5                  RELEASE REGISTER 5
         USING PPL,R5              ESTABLISH ADDRESSABILITY TO PARSE
         LR    R1,R5               PARAMETER LIST
         LA    R2,TSTANSPL         LOAD ADDRESS OF ANSWER PLACE
         MVC   PPLUPT(FOUR),TSTUPT PUT ADDR UPT INTO PARAMETER LIST
         MVC   PPLECT(FOUR),TSTECT PUT ADDR ECT INTO PARAMETER LIST
         MVC   PPLECB(FOUR),TSTCPECB PUT ADDR ECB INTO PARAMETER LIST
         ST    R7,PPLPCL           PT TO PCL
         ST    R2,PPLANS           PT TO ANSWER PLACE FOR PARSE
         MVC   PPLCBUF(FOUR),INBUF PT TO COMMAND BUFFER
         ST    R13,PPLUWA          PT TO SAVE AREA FOR TCB REGS
         DROP  R5                  RELEASE REGISTER 5
         USING MYWKAREA,R5
         LINK  EP=IKJPARS,ERRET=LINKFAIL LINK TO PARSE
PARSEBLO EQU   *                   LABEL USED BY STAE RETRY ROUTINE
SMTPARS  DS    0H                  SMT LABEL FOR TEST CASE TTCB0500
         B     PARSDONE            GO TO PARSDONE
IKJEGVCK EQU   *
**  THIS IS THE VALIDITY CHECK ROUTINE FOR IKJEGTCB.  IT RECEIVES   **
**  CONTROL FROM IKJPARS.  REGISTER 1 POINTS TO THE THREE WORD      **
**  PARAMETER LIST FROM IKJPARS.  THE FIRST WORD POINTS TO THE PDE  **
**  BUILT BY IKJPARS, THE SECOND WORD POINTS TO IKJEGTCB'S SAVEAREA **
**  AND THE THIRD WORD IS USED TO PASS THE ADDRESS OF THE SECOND    **
**  LEVEL MESSAGE PASSED BY IKJEGCVT OR IKJEGSYM BACK TO IKJPARS.   **
         SAVE  (14,12),,*          SAVE PARSE'S REGS
         L     R9,FOUR(R1)         GET ADDR OF SAVE AREA
         L     R12,SIXTY8(R9)      RESTORE PROG ADDRESSABILITY
         L     R5,FORTY(R9)        RESTORE WORK AREA ADDRESSABILITY
         L     R9,FIFTY6(R9)       RESTORE POINTER TO TCOMTAB
         ST    R1,OUTPTR2          SAVE ADDR OF PARSE PARM LIST
         L     R1,ZERO(R1)         POINT TO PDE FOR IKJEGCVT
         LR    R10,R1              GET ADDRESS OF PDL
         USING IKJPARMA,R10        ESTABLISH ADDRESSABILITY TO PDL
         LCR   R1,R1               R1 NEGATIVE FOR ADDRESSES
         SPACE
         L     R15,REGSAVE3        PT TO VALIDITY ROUTINE SAVE AREA
         LCR   R0,R1               R0 INDICATES CONVERT TO BINARY
         ST    R13,FOUR(R15)       STORE OLD SAVE AREA ADDR
         ST    R15,EIGHT(R13)      STORE NEW SAVE AREA ADDR
         LR    R13,R15             POINT TO NEW SAVE AREA
         SR    R14,R14             ZERO OUT REG 14
         L     R4,OUTBUF           ACCESS OUTBUF
         ST    R14,ZERO(R4)        CLEAR 1ST WORD OF OUTBUF
         OI    TSTFLGS4,TSTVALCK   INDICATE VALIDITY CHECK TO IO
         L     R15,TSTCONVT        EP OF IKJEGCVT
         BALR  R14,R15             GO TO IKJEGCVT
         LPR   R1,R1               RESET REGISTER 1 TO POSITIVE
         B     CONVTAB(R15)        BRANCH INTO TABLE INDEXED BY
*                                  CONTENTS OF REGISTER 15
CONVTAB  EQU   *
         B     BOUNDCK             0-CONTINUE PROCESSING
         B     SET8                4-SET BY IKJEGCVT-MOVE MSG ADDR
         B     SET12               8-SET BY IKJEGSYM-MOVE MSG ADDR
         B     SET12               12-SET BY IKJEGSYM-MOVE MSG ADDR
         B     SET12               16-ATTENTION INTERRUPT-RETURN
         B     SET12               20-IKJEGCVT OR IKJEGSYM BLEW
SET12    EQU   *
         ST    R15,REG15           SAVE RETURN CODE FOR LATER USE
         LA    R15,TWELVE          SET RETURN CODE TO 12
         B     PARSRTRN            GO RETURN TO IKJPARS
SET8     EQU   *
         LA    R15,EIGHT           SET RETURN CODE TO 8
         B     PARSRTRN            GO RETURN TO IKJEGMNL
SET0     EQU   *
         XR    R15,R15             SET RETURN CODE TO 0
         SPACE
PARSRTRN EQU   *
         L     R4,OUTBUF           ACCESS OUTBUF
         L     R4,ZERO(R4)         FIRST WORD OF OUTBUF TO REG 4
         LTR   R4,R4               IS THERE A SECOND LEVEL MESSAGE
         BZ    PARSRET             NO, RETURN TO PARSE
         L     R7,OUTPTR2          GET ADDR OF PARM LIST FROM PARSE
         LA    R7,EIGHT(R7)        GET ADDR OF 3RD WORD OF PARM LIST
         MVC   ZERO(FOUR,R7),OUTBUF PUT MSG ADDR INTO PARM LIST
PARSRET  EQU   *                   RETURN TO PARSE
         NI    TSTFLGS4,HEXFF-TSTVALCK CLEAR VALIDITY CHECK FLAG
         L     R13,FOUR(R13)       RESTORE REGISTER 13
         RETURN (14,12),,RC=(15)   RESTORE REGS AND RETURN
***********************************************************************
*THE FOLLOWING CODE PERFORMS FURTHER ADDRESS VALIDITY CHECKING.  IT
*CHECKS THAT THE ADDRESS IS NOT A REGISTER AND THAT THE ADDRESS IS ON
*A FULL WORD BOUNDARY.
***********************************************************************
BOUNDCK  EQU   *
         L     R3,PDEUSER          LOAD USER WORD
         TM    PDEUSER,PDESIB      IS CONVERTED ADDRESS IN USER WORD
         BZ    NOSYM               YES, PICK UP THE ADDRESS
         L     R3,ZERO(ZERO,R3)    NO, GET ADDR FROM SI BLOCK
         ST    R3,THIRTY2(R1)      PUT ADDRESS INTO USER WORD
NOSYM    EQU   *
         L     R6,REGSAVE2         GET ADDR OF SAVE AREA
         ST    R3,THIRTY2(R6)      SAVE TCB ADDR
REGTEST  EQU   *                   CHECK FOR INVALID REGISTER ADDR
         LH    R4,PDEINDCT         GET INDIRECT COUNT
         LTR   R4,R4               IS IT ZERO
         BNZ   FULLWORD            NO, INDIRECT ADDRESS, BRANCH
         TM    PDEFLG4,HEX38       YES, IS THIS A REGISTER ADDR
         BZ    FULLWORD            NO, GO CHECK BOUNDARY
         LA    R2,M0101            MSG-INVALID ADDRESS ...
         LA    R3,M0274            MSG-REG NOT. MUST BE IND GEN REG
         LR    R4,R10              ADDRESS PDE
         B     MSG2                GO OUTPUT THE MESSAGES
         SPACE
FULLWORD EQU   *
         TM    THIRTY5(R1),HEX03   FULLWORD BOUNDARY
         BZ    SET0                RETURN TO PARSE
         LA    R2,M0101            MSG-INVALID ADDRESS ...
         LA    R3,M0280            MSG-FULLWORD BOUNDARY REQ.
         LR    R4,R10              ADDRESS PDE
         B     MSG3                GO OUTPUT THE MESSAGES
         SPACE
*        THE FOLLOWING CODE IS EXECUTED UPON COMPLETION OF PARSE      *
PARSDONE EQU   *
         LTR   R15,R15             IS RETURN CODE 0 (SUCCESSFUL PARSE
*                                  COMPLETION)
         BNZ   TCBRET1             NO, BRANCH TO TCBRET
         ST    R15,REG14           REG15=0...CLEAR REG14 SAVE
         L     R10,TSTANSPL        LOAD ADDR OF PARSE PDL
         USING IKJPARMD,R10        ESTABLISH PDL ADDRESSABILITY
FIELDCHK EQU   *
         MVI   EXTENTFG,HEX00      CLEAR EXTENT FLAG
         MVI   NOFLDFLG,HEX00      CLEAR NO FIELDS FLAG
         CLI   TCBFIELD+ONE,HEX00  WERE FIELDS SPECIFIED BY USER
         BNE   PRINTCHK            YES,  GO TO PRINTCHK
***********************************************************************
*        OTHERWISE FIELD WAS NOT SPECIFIED AND THE USER DESIRES ALL   *
*        FIELDS OF THE TCB.  IT IS NECESSARY TO MAKE THE PDE'S FOR ALL*
*        THE FIELDS OF THE TCB NON-ZERO.                              *
***********************************************************************
         MVI   RBP,HEXFF           INDICATE THAT ALL FIELDS OF THE TCB
         MVC   RBP+ONE(CNT*2-ONE),RBP  WERE REQUESTED BY THE USER
         MVI   NOFLDFLG,HEXFF      SET NO FIELDS FLAG
PRINTCHK EQU   *
         CLI   PRINTIT+ONE,HEX00   IS PRINT KEYWORD SPECIFIED
         BNE   PRINTSPC            YES...GO TURN ON PRINT FLAG
         NI    TSTFLGS1,(HEXFF-TSTPRINT)  NO...TURN OFF FLAG BIT
         SR    R4,R4               ZERO FOR OUTPUT TO TERMINAL
         B     ADDRCHK             GO CHECK FOR ADDR PARAMETERS
PRINTSPC EQU   *
         OI    TSTFLGS1,TSTPRINT   SWITCH ON FOR OUTPUT TO DATA SET
         LA    R4,DSNAM            GET ADDR OF DSNAME PDE
ADDRCHK  EQU   *
         LA    R10,ADDRESS         GET POINTER TO ADDRESS FIELD
         DROP  R10                 RELEASE REGISTER 10
         USING IKJPARMA,R10        ESTABLISH ADDRESSABILITY
         L     R7,PDEADRPT         GET POINTER TO ADDRESS
         DROP  R10                 RELEASE REGISTER 10
         L     R10,TSTANSPL        LOAD ADDR OF PARSE PDL
         USING IKJPARMD,R10        ESTABLISH PDL ADDRESSABILITY
         SPACE
         ST    R4,PRINTFLG         MOVE ADDR OF DSNAME PDE OR 0 INTO
*                                  WORKAREA
         LTR   R7,R7               WAS ADDR SPECIFIED BY USER
         BNZ   TABLESCN            YES, IF ADDR SPECIFIED, BRANCH
         L     R3,PPTCB            NO, PT TO THE PROBLEM PROGRAM TCB
***********************************************************************
*        THE FOLLOWING CODE WILL SCAN THE STRING OF PARSE PDES ONE BY *
*        ONE AND BRANCH TO THE APPROPRIATE SUBROUTINE.                *
***********************************************************************
TABLESCN EQU   *
         L     R11,OUTBUF          POINT TO OUTPUT BUFFER
         SPACE
         USING TCB,R3              ESTABLISH ADDRESSABILITY TO TCB
         SPACE
         LA    R4,EIGHTY           LOAD DEFAULT OUTPUT LENGTH
         CH    R4,TMPLL            COMPARE WITH TERMINAL LINE LENGTH
         BNH   LINESET             IF 80 IS LOW, BRANCH
         LA    R4,FORTY
         CH    R4,TMPLL            COMPARE 40 WITH TMP LINE LENGTH
         BH    DEFAULT             BRANCH IF 40 IS HIGHER THAN TERMINAL
         LH    R4,TMPLL            USE SPECIFIED LINE LENGTH
         B     LINESET             GO SET LINE LENGTH
DEFAULT  EQU   *
         LA    R4,EIGHTY           DEFAULT LINE LENGTH TO 80
LINESET  EQU   *
         ST    R4,LINELEN          STORE OUTPUT LINE LENGTH
         SR    R2,R2               ZERO OUTPUT LENGTH COUNTER
         ST    R2,LENGTH           CLEAR OUT AREA
         STH   R2,GRSFLAG1         TURN OFF GRS FLAGS
         MVI   ZERO(R11),BLANK     CLEAR OUT
         MVC   ONE(ONE63,R11),ZERO(R11)  OUTPUT BUFFERS
         LA    R6,RBP              POINT TO STRING OF FIELD PDE'S
         LA    R4,RBP+CNT*2        PT TO END OF STRING OF PDES
         ST    R4,ENDPDECK         OF FIELD KEYWORDS
PDECHECK EQU   *
         CLI   ONE(R6),HEX00       IS KEYWORD PRESENT
         BNE   SBRTNSVR            YES, GO TO CORRESPONDING SUBROUTINE
         LA    R6,TWO(R6)          NO, POINT TO NEXT PDE
         C     R6,ENDPDECK         IS THERE ANOTHER PDE
         BE    PDLEND              NO, GO TO PDLEND
         B     PDECHECK            YES, CHECK NEXT PDE
         SPACE
SBRTNSVR EQU   *
         L     R7,ENDPDECK         END OF PDE STRING
         LA    R10,CNT*2           LENGTH OF PDE STRING
         SR    R7,R6               SUBTRACT CURRENT PDE LOCATION
         SR    R10,R7              FIND RELATIVE POSITION OF PDE
         LA    R11,ELEVEN          HALF THE NO. OF BYTES FOR EACH
*                                  PDE BLOCK OF CODE
         SPACE
         LA    R7,SBRTNTAB         LOAD ADDRESS OF SUBROUTINE TABLE
         MR    R10,R10             MULTIPLY FOR PROPER ADDRESSING IN
*                                  TABLE
         AR    R7,R11              ADD THE OFFSET
         L     R11,TCBEXT2         PTR TO EXTENSION TO TCB
         USING TCBXTNT2,R11        ESTABLISH ADDRESSABILITY
         BR    R7                  BRANCH TO THE PROPER SECTION BELOW
         EJECT
SBRTNTAB EQU   *
         SPACE
***********************************************************************
*       FOLLOWING ARE 81 BLOCKS CONTAINING 5 LINES EACH               *
*       THESE BLOCKS CORRESPOND TO THE FIELDS OF THE TCB.             *
*       THEY SET THE FIELD AND HEADER LENGTHS, THE RELATIVE           *
*       ADDRESS OF THE FIELD IN THE TCB, AND THE HEADER.              *
*       CONTROL IS THEN PASSED TO A COMMON OUTPUT AND                 *
*       CONVERSION ROUTINE.                                           *
***********************************************************************
         SPACE
TCB000S  EQU   *
         MVC   HDRBUF(L'HDRRBP),HDRRBP   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRBP     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES FOR THIS FIELD
         LA    R8,TCBRBP           RBP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB004S  EQU   *
         MVC   HDRBUF(L'HDRPIE),HDRPIE   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRPIE     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES FOR THIS FIELD
         LA    R8,TCBPIE           PIE ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB008S  EQU   *
         MVC   HDRBUF(L'HDRDEB),HDRDEB   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRDEB     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO OF BYTES FOR THIS FIELD
         LA    R8,TCBDEB           DEB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB012S  EQU   *
         MVC   HDRBUF(L'HDRTIO),HDRTIO   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTIO     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES FOR THIS FIELD
         LA    R8,TCBTIO           TIO ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB016S  EQU   8
         MVC   HDRBUF(L'HDRCMP),HDRCMP  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRCMP     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES FOR THIS FIELD
         LA    R8,TCBCMP           CMP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB020S  EQU   *
         MVC   HDRBUF(L'HDRTRN),HDRTRN  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTRN     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES IN THIS FIELD
         LA    R8,TCBTRN           TRN ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB024S  EQU   *
         MVC   HDRBUF(L'HDRMSS),HDRMSS   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRMSS     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES IN THIS FIELD
         LA    R8,TCBMSS           MSS ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB028S  EQU   *
         MVC   HDRBUF(L'HDRPKF),HDRPKF  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRPKF     LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBPKF           PKF ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB029S  EQU   *
         MVC   HDRBUF(L'HDRFLGS),HDRFLGS   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRFLGS    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FIVE         NO. BYTES IN THIS FIELD
         LA    R8,TCBFLGS          FLGS ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB034S  EQU   *
         MVC   HDRBUF(L'HDRLMP),HDRLMP  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRLMP     LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBLMP           LMP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB035S  EQU   *
         MVC   HDRBUF(L'HDRDSP),HDRDSP   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRDSP     LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBDSP           DSP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB036S  EQU   *
         MVC   HDRBUF(L'HDRLLS),HDRLLS   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRLLS     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBLLS           LLS ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB040S  EQU   *
         MVC   HDRBUF(L'HDRJLB),HDRJLB   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRJLB     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBJLB           JLB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB044S  EQU   *
         MVC   HDRBUF(L'HDRJPQ),HDRJPQ   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRJPQ     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBJPQ           JPQ ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
* THE FOLLOWING BLOCK SETS UP FOR THE GRS FIELD OF THE TCB            *
TCB048S  EQU   *
         MVC   HDRBUF(L'HDRGRS),HDRGRS   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRGRS     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES FOR EACH REGISTER
         LA    R8,TCBGRS           GRS ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB112S  EQU   *
         MVC   HDRBUF(L'HDRQEL),HDRQEL   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRQEL     LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBQEL           QEL ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB113S  EQU   *
         MVC   HDRBUF(L'HDRFSAB),HDRFSAB  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRFSAB    LENGTH OF FIELD HEADER
         MVI   FLDLEN,THREE        NO. BYTES IN THIS FIELD
         LA    R8,TCBFSAB          FSA ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB116S  EQU   *
         MVC   HDRBUF(L'HDRTCB),HDRTCB   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTCB     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES IN THIS FIELD
         LA    R8,TCBTCB           CUR TCB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB120S  EQU   *
         MVC   HDRBUF(L'HDRTME),HDRTME   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTME     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBTME           TME ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB124S  EQU   *
         MVC   HDRBUF(L'HDRJSTCB),HDRJSTCB   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRJSTCB   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBJSTCB         JSTCB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB128S  EQU   *
         MVC   HDRBUF(L'HDRNTC),HDRNTC  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNTC     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBNTC           NTC ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB132S  EQU   *
         MVC   HDRBUF(L'HDROTC),HDROTC   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDROTC     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBOTC           OTC ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB136S  EQU   *
         MVC   HDRBUF(L'HDRLTC),HDRLTC   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRLTC     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBLTC           LTC ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB140S  EQU   *
         MVC   HDRBUF(L'HDRIQE),HDRIQE   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRIQE     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBIQE           IQE ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB144S  EQU   *
         MVC   HDRBUF(L'HDRECB),HDRECB   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRECB     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBECB           ECB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB148S  EQU   *
         MVC   HDRBUF(L'HDRTSFLG),HDRTSFLG   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTSFLG   LENGTH OF HEADER BUFFER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBTSFLG         TSFLG ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB149S  EQU   *
         MVC   HDRBUF(L'HDRSTPCT),HDRSTPCT   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRSTPCT   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBSTPCT         STPCT ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB150S  EQU   *
         MVC   HDRBUF(L'HDRTSLP),HDRTSLP  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTSLP    LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBTSLP          TSLP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB151S  EQU   *
         MVC   HDRBUF(L'HDRTSDP),HDRTSDP  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTSDP    LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBTSDP          TSDP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB152S  EQU   *
         MVC   HDRBUF(L'HDRPQE),HDRPQE   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRPQE     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBPQE           PQE ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
* THE FOLLOWING BLOCK SETS UP FOR THE AQE FIELD OF THE TCB            *
TCB156S  EQU   *
         MVC   HDRBUF(L'HDRAQE),HDRAQE  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRAQE     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBAQE           AQE ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB160S  EQU   *
         MVC   HDRBUF(L'HDRNSTAE),HDRNSTAE   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNSTAE   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNSTAE         STAE FLAGS ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB161S  EQU   *
         MVC   HDRBUF(L'HDRSTABB),HDRSTABB  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRSTABB   LENGTH OF FIELD HEADER
         MVI   FLDLEN,THREE        NO. BYTES IN THIS FIELD
         LA    R8,TCBSTABB         STAE ADDR ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB164S  EQU   *
         MVC   HDRBUF(L'HDRTCT),HDRTCT   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTCT     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBTCT           TCT ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB168S  EQU   *
         MVC   HDRBUF(L'HDRUSER),HDRUSER   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRUSER    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBUSER          USER ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB172S  EQU   *
         MVC   HDRBUF(L'HDRNDSP0),HDRNDSP0   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNDSP0   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNDSP0         NDSP0 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB173S  EQU   *
         MVC   HDRBUF(L'HDRNDSP1),HDRNDSP1  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNDSP1   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNDSP1         NDSP1 ENTRY
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB174S  EQU   *
         MVC   HDRBUF(L'HDRNDSP2),HDRNDSP2   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNDSP2   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNDSP2         NDSP2 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB175S  EQU   *
         MVC   HDRBUF(L'HDRNDSP3),HDRNDSP3  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNDSP3   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNDSP3         NDSP3 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB176S  EQU   *
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. OF BYTES IN FIELD
         LA    R8,TCBNDSP3+ONE     RESERVED ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB180S  EQU   *
         MVC   HDRBUF(L'HDRJSCB),HDRJSCB   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRJSCB    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBJSCB          JSCB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB181S  EQU   *                   DDEXC ROUTINE
         MVC   HDRBUF(L'HDRDDEXC),HDRDDEXC   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRDDEXC   LENGTH OF FIELD HEADER
         MVI   FLDLEN,TWO          NO. BYTES IN THIS FIELD
         LA    R8,TCBDDEXC         DDEXC ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB182S  EQU   *                   DDWTC ROUTINE
         MVC   HDRBUF(L'HDRDDWTC),HDRDDWTC   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRDDWTC   LENGTH OF FIELD HEADER
         MVI   FLDLEN,TWO          NO. BYTES IN THIS FIELD
         LA    R8,TCBDDWTC         DDWTC ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB183S  EQU   *                   IOBRC ROUTINE
         MVC   HDRBUF(L'HDRIOBRC),HDRIOBRC   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRIOBRC   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBIOBRC         IOBRC FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB184S  EQU   *
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBIOBRC+FOUR     RESERVED ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB196S  EQU   *
         MVC   HDRBUF(L'HDREXT1),HDREXT1   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDREXT1    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBEXT1          RESERVED ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
         SPACE 1
TCB200S  EQU   *
         MVC   HDRBUF(L'HDRNDSP4),HDRNDSP4  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNDSP4   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNDSP4         NDSP4 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB201S  EQU   *
         MVC   HDRBUF(L'HDRNDSP5),HDRNDSP5  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRNDSP5   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBNDSP5         NDSP5 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB202S  EQU   *
         MVC   HDRBUF(L'HDRFLGS6),HDRFLGS6  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRFLGS6   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBFLGS6         FLGS6 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB203S  EQU   *
         MVC   HDRBUF(L'HDRFLGS7),HDRFLGS7  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRFLGS7   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBFLGS7         FLGS7 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB204S  EQU   *
         MVC   HDRBUF(L'HDRDAR),HDRDAR  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRDAR     LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBDAR           DAR ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB205S  EQU   *
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBDAR+ONE       RESERVED ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB206S  EQU   *                   SYSCT ROUTINE
         MVC   HDRBUF(L'HDRSYSCT),HDRSYSCT   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRSYSCT   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBSYSCT         SYSCT FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB207S  EQU   *                   STMCT ROUTINE
         MVC   HDRBUF(L'HDRSTMCT),HDRSTMCT   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRSTMCT   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBSTMCT         STMCT FIELD IN TCB
         B     FLDOUTPT            TO COMMON CONVERSION ROUTINE
TCB208S  EQU   *
         MVC   HDRBUF(L'HDREXT2),HDREXT2  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDREXT2    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBEXT2          EXT2 ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB212S  EQU   *
         MVC   HDRBUF(L'HDRAECB),HDRAECB  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRAECB    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBAECB          RESERVED ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB216S  EQU   *
         MVC   HDRBUF(L'HDRTIRB),HDRTIRB  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTIRB    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBTIRB          TIRB ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB220S  EQU   *
         MVC   HDRBUF(L'HDRBACK),HDRBACK  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRBACK    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBBACK          BACK ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB224S  EQU   *
         MVC   HDRBUF(L'HDRRTWA),HDRRTWA HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRTWA    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO BYTES IN THE FIELD
         LA    R8,TCBRTWA          RTWA ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB228S  EQU   *
         MVC   HDRBUF(L'HDRIOTIM),HDRIOTIM  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRIOTIM   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBIOTIM         IOTIM ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB232S  EQU   *
         MVC   HDRBUF(L'HDRTMSAV),HDRTMSAV  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTMSAV   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBTMSAV         TMSAV ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB236S  EQU   *
         MVC   HDRBUF(L'HDRABCUR),HDRABCUR  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRABCUR   LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBABCUR         TMSAV ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB237S  EQU   *                   RESERVED ROUTINE
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBABCUR+ONE     RESERVED FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB238S  EQU   *
         MVC   HDRBUF(L'HDRTID),HDRTID  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTID     LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBTID           TID ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB239S  EQU   *
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FIVE         NO. BYTES IN THIS FIELD
         LA    R8,TCBTID+ONE       RESERVED ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB244S  EQU   *
         MVC   HDRBUF(L'HDRFOE),HDRFOE  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRFOE     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBFOE           FOE ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB248S  EQU   *
         MVC   HDRBUF(L'HDRSWA),HDRSWA  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRSWA     LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBSWA           SWA ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB249S  EQU   *
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBSWA+FOUR      RSVD ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB250S  EQU   *
         MVC   HDRBUF(L'HDRTCBID),HDRTCBID  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTCBID   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBTCBID         TCBID ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB251S  EQU   *
         MVC   HDRBUF(L'HDRRTM12),HDRRTM12  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRTM12   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBRTM12         GTFA ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB2511S EQU   *
         MVC   HDRBUF(L'HDRESTAE),HDRESTAE  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRESTAE   LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBESTAE         ESTAE ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB2512S EQU   *
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,FOUR         NO. BYTES IN THIS FIELD
         LA    R8,TCBESTAE+FOUR    RSVD ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB2513S EQU   *
         MVC   HDRBUF(L'HDRCCPVI),HDRCCPVI  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRCCPVI   LENGTH OF FIELD HEADER
         MVI   FLDLEN,TWO          NO. BYTES IN THIS FIELD
         LA    R8,TCBCCPVI         CCPVI ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB2514S EQU   *
         MVC   HDRBUF(L'HDRAFFN),HDRAFFN  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRAFFN    LENGTH OF FIELD HEADER
         MVI   FLDLEN,TWO          NO. BYTES IN THIS FIELD
         LA    R8,TCBAFFN          AFFN ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB2515S EQU   *                   FBYT1 ROUTINE
         MVC   HDRBUF(L'HDRFBYT1),HDRFBYT1   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRFBYT1   LENGTH OF FIELD HEADER
         MVI   FLDLEN,TWO          NO. BYTES IN THIS FIELD
         LA    R8,TCBFBYT1         FBYT1 FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB2517S EQU   *                   RESERVED ROUTINE
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,EIGHTEEN     NO. BYTES IN THIS FIELD
         LA    R8,TCBFBYT2+ONE     RESERVED FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB252S  EQU   *
         MVC   HDRBUF(L'HDRTFLG),HDRTFLG  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRTFLG    LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBTFLG          TFLG ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB253S  EQU   *
         MVC   HDRBUF(L'HDRGTFA),HDRGTFA  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRGTFA    LENGTH OF FIELD HEADER
         MVI   FLDLEN,THREE        NO. BYTES IN THIS FIELD
         LA    R8,TCBGTFA          GTFA ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB254S  EQU   *                   RESERVED ROUTINE
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD   HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF FIELD HEADER
         MVI   FLDLEN,ONE          NO. BYTES IN THIS FIELD
         LA    R8,TCBGTFA+THREE    RESERVED FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB257S  EQU   *
         MVC   HDRBUF(L'HDRRCMP),HDRRCMP  HEADER TO HEADER BUFFER
         MVI   HDRLEN,L'HDRRCMP    LENGTH OF FIELD HEADER
         MVI   FLDLEN,THREE        NO. BYTES IN THIS FIELD
         LA    R8,TCBRCMP          RCMP ENTRY IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
TCB258S  EQU   *                   RESERVED ROUTINE
         MVC   HDRBUF(L'HDRRSVD),HDRRSVD   HEADER TO HEADER FUFFER
         MVI   HDRLEN,L'HDRRSVD    LENGTH OF THIS HEADER FIELD
         MVI   FLDLEN,TWENTY4      NO. BYTES IN THIS FIELD
         LA    R8,TCBRCMP+THREE    RESERVED FIELD IN TCB
         B     FLDOUTPT            GO TO COMMON CONVERSION ROUTINE
         SPACE 2
CNT      EQU   (*-TCB000S)/22
         EJECT
FLDOUTPT EQU   *
         L     R10,OUTBUF          POINT TO OUTPUT BUFFER
         CLI   NOFLDFLG,HEX00      IS NO FIELDS FLAG SET
         BE    FIELDSON            NO, BRANCH TO CONTINUE
         CLC   HDRBUF(FOUR),HDRTFLG IS THIS THE TFLG FIELD
         BNE   FIELDSON            NO, BRANCH TO CONTINUE
         MVI   EXTENTFG,HEXFF      SET ENTENT FLAG ON
         B     GRSFIELD            BRANCH TO OUTPUT TCB EXTENT HDR
FIELDSON EQU   *
         CLC   HDRBUF(THREE),HDRGRS  IS THIS THE GRS FIELD
         BE    GRSFIELD            YES...
         SPACE
         SR    R7,R7               NO, CLEAR OUT REGISTER
         IC    R7,FLDLEN           LOAD LENGTH OF FIELD
         AR    R7,R7               WILL BE TWICE AS LONG WHEN CONVERTED
*                                  TO PRINTABLE HEXADECIMAL
         SR    R11,R11             CLEAR OUT REGISTER
         IC    R11,HDRLEN          LOAD HEADER LENGTH
         CR    R7,R11              WHICH IS LONGER
         BH    LENTHSET            BRANCH IF FIELD OUTPUT IS LONGER
HDRLONGR EQU   *
         IC    R7,HDRLEN           HEADER IS LONGER
LENTHSET EQU   *
         AR    R7,R2               ADD LENGTH TO CURRENT OFFSET
         C     R7,LINELEN          WILL FIELD FIT IN LINE
         BNH   MOREROOM            IF LINE IS NOT FULL GO TO MOREROOM
OUTPTBUF EQU   *
         SR    R7,R2               BUFFER IS FULL...GET CURRENT
*                                  FIELD LENGTH
         BAL   R14,TCBIO           OUTPUT THE FIELD HEADERS
         EX    R2,MOVEINS3         MOVE FIELDS TO OUTPUT BUFFER
         BAL   R14,TCBIO           OUTPUT THE FIELDS
         SPACE
         BAL   R14,IOSPACE         GO SKIP A LINE
         SPACE
         SR    R2,R2               RESET OUTPUT COUNTER
***********************************************************************
*        THE FOLLOWING CODE WILL CONVERT A FIELD OF THE TCB TO        *
*        PRINTABLE HEX, STORE IT IN A TEMPORARY BUFFER, AND MOVE THE  *
*        CORRESPONDING HEADER TO THE OUTPUT BUFFER.                   *
***********************************************************************
MOREROOM EQU   *
         LR    R11,R8              GET ADDR OF TCB FIELD
GRSENTRY EQU   *
         SR    R1,R1               GET LENGTH
         IC    R1,FLDLEN           * OF FIELD TO CONVERT
         AR    R1,R11              * PLUS START OF FIELD
         BCTR  R1,R0               * - 1 = END OF FIELD
PROTBLO1 EQU   *                   PROT CHECK HERE, IF ABEND
         IC    R1,ZERO(R1)         FORCE PROT CHK HERE IF BAD
PROTBLO2 EQU   *                   PROT CHECK HERE, IF ABEND.
*
         ST    R11,STRNGPTR        STORE ADDRESS IN PDE FOR IKJEGCVT
         MVC   LENGTH+ONE(ONE),FLDLEN   SAVE FIELD LENGTH
         MVI   FLAGS,FLAG          X'80' TO INDICATE VALUE CONVERT
         MVI   TYPECODE,TYPE       X'04' TO INDICATE CONVERT TO HEX
         SPACE
         LA    R1,STRNGPTR         POINT TO TCB FIELD TO BE CONVERTED
         LCR   R0,R1               R0 NEGATIVE FOR CONVERSION FROM
*                                  BINARY TO PRINTABLE HEX
         L     R15,TSTCONVT        GET ADDR OF CONVERT
         BALR  R14,R15             GO TO IKJEGCVT
         LPR   R1,R1               RESTORE REGISTER 1 TO POSITIVE
         LTR   R15,R15             RETURN CODE FROM IO A ZERO
         BNZ   SEVRET              NO, GO HANDLE SERVICE ROUTINE CODE
         SPACE
         L     R1,OUTBUF           YES, POINT TO OUTPUT BUFFER
         LA    R1,EIGHTY4(R1)      POINT TO FIELD BUFFER
         AR    R1,R2               ADD DISPLACEMENT
         L     R15,CONAREA         GET CONVERTED FIELD
         SPACE
         SR    R14,R14             CLEAR OUT REGISTER
         IC    R14,FLDLEN          GET FIELD LENGTH
         AR    R14,R14             HEX REPRESENTATION OF FIELD WILL
*                                  BE DOUBLE ITS BINARY LENGTH
         BCTR  R14,R0              SUBTRACT ONE FOR MOVE INST
         EX    R14,MOVEINS1        MOVE CONVERTED FIELD TO WORKAREA
         IC    R14,HDRLEN          GET HEADER LENGTH
         BCTR  R14,R0              SUBTRACT ONE FOR MOVE INST
         LR    R1,R10              GET ADDR OF HDR OUTPUT BUFFER
         AR    R1,R2               ADD CURRENT DISPLACEMENT
         EX    R14,MOVEINS2        MOVE HEADER TO OUTPUT BUFFER
         LR    R2,R7               UPDATE OUTPUT LINE LENGTH COUNTER
         LA    R2,TWO(R2)          TWO SPACES BETWEEN FIELDS
         CLI   GRSFLAG1,HEX00      GRS FIELD BEING PROCESSED
         BNE   GRSCHECK            YES...
         LA    R6,TWO(R6)          NO, POINT TO NEXT PDE
         C     R6,ENDPDECK         ANY MORE FIELDS TO PROCESS
         BE    PDLEND              NO, GO FINISH UP
         B     PDECHECK            YES, CHECK NEXT PDE
***********************************************************************
*        THE FOLLOWING CODE WILL PRINT OUT THE CONTENTS OF THE GENERAL*
*        REGISTER SAVE AREA                                           *
***********************************************************************
GRSFIELD EQU   *
         LTR   R2,R2               IS THE OUTPUT BUFFER EMPTY
         BZ    GRSSETUP            YES...DO NOT WRITE OUT BUFFER
         BAL   R14,TCBIO           NO, PUT OUT HEADERS
         EX    R2,MOVEINS3         MOVE FIELDS TO OUTPUT BUFFER
         BAL   R14,TCBIO           PUT OUT FIELDS
         BAL   R14,IOSPACE         GO SKIP A LINE
         SPACE
         SR    R2,R2               RESET LINE COUNTER
GRSSETUP EQU   *
         CLI   EXTENTFG,HEX00      IS EXTENT FLAG SET
         BNE   EXTSETUP            YES, BRANCH TO OUTPUT EXT HDR
         LR    R11,R8              LOAD ADDR OF GRS FIELD
         MVI   GRSFLAG1,HEX01      INITILIZE COUNT OF REGISTERS
         MVI   GRSFLAG2,HEX01      AND LINE COUNT TO ONE
         MVC   FOUR(L'HDRGRS,R10),HDRGRS  MOVE HDR TO OUTPUT BUFFER
         IC    R2,HDRLEN           SET LENGTH OF OUTPUT
         LA    R2,TWO(R2)          ADD 2 TO AVOID TRUNCATION OF HEADER
         BAL   R14,TCBIO           OUTPUT THE HEADER
         MVI   FOUR(R10),BLANK
         MVC   FIVE(L'HDRGRS,R10),FOUR(R10)  CLEAR THE OUTPUT BUFFER
         SPACE
         SR    R2,R2               SET OUTPUT LINE COUNT TO ZERO
         LA    R7,EIGHT            INITILIZE OUTPUT BUFFER OFFSET
         LA    R4,REGHDRS          PUT HDR OF 1ST REG
         MVC   HDRBUF(THREE),ZERO(R4)  INTO OUTPUT BUFFER
         LA    R4,THREE(R4)        BUMP REG HDR POINTER
         B     GRSENTRY            GO PROCESS FIELD
         SPACE
GRSCHECK EQU   *
         CLI   GRSFLAG1,HEX04      IS THE LINE FULL YET
         MVC   HDRBUF(THREE),ZERO(R4)  MOVE NEXT HDR TO OUTPUT BUFFER
         LA    R4,THREE(R4)        BUMP TO NEXT REG HDR
         BE    GRSOUTPT            LINE IS FULL...PUT IT OUT
         SPACE
         SR    R14,R14             NO, CLEAR OUT REGISTER
         IC    R14,GRSFLAG1        BUMP COUNTER FOR
         LA    R14,ONE(R14)        NO. REGS PER LINE
         STC   R14,GRSFLAG1        SAVE INCREMENTED COUNTER
         SPACE
         LA    R11,FOUR(R11)       BUMP TO NEXT GRS FIELD
         LA    R7,TEN(R7)          BUMP DISPLACEMENT COUNT
         B     GRSENTRY            GO PROCESS NEXT FIELD
         SPACE
GRSOUTPT EQU   *
***********************************************************************
* THIS CODE GOES TO THE TCB IO ROUTINE TO OUTPUT THE GENERAL REGISTERS*
***********************************************************************
         BAL   R14,TCBIO           PUT OUT HEADER
         EX    R2,MOVEINS3         MOVE FIELDS TO BUFFER
         BAL   R14,TCBIO           PUT OUT FIELDS
         MVI   FOUR(R10),BLANK     MOVE BLANK TO HDR
         MVC   FIVE(ONE59,R10),FOUR(R10)  OUTPUT BUFFER
         SR    R14,R14             CLEAR OUT REGISTER
         SR    R2,R2               RESET OUTPUT COUNTER
         CLI   GRSFLAG2,HEX04      FOUR LINES YET
         BE    GRSDONE             YES...
         SPACE
         LA    R7,EIGHT            NO, INIT DISPL FOR NEXT LINE
         IC    R14,GRSFLAG2        LOAD FLAG
         LA    R14,ONE(R14)        BUMP LINE COUNTER
         STC   R14,GRSFLAG2        STORE UPDATED FLAG
         SPACE
         LA    R11,FOUR(R11)       BUMP POINTER TO NEXT REGISTER
         MVI   GRSFLAG1,HEX01      RESET REG FIELD COUNTER
         B     GRSENTRY            GO PROCESS NEXT REG FIELD
         SPACE
GRSDONE  EQU   *
         LA    R6,TWO(R6)          BUMP TO NEXT PDE
         STH   R14,GRSFLAG1        CLEAR OUT BOTH REG COUNTERS
         SPACE
         BAL   R14,IOSPACE         GO SKIP A LINE
         SPACE
         B     PDECHECK            GO CHECK FOR MORE PDE'S
PDLEND   EQU   *
         LTR   R2,R2               IS THE OUTPUT BUFFER EMPTY
         BZ    CHKFLD              OUTPUT BUFFER IS EMPTY...CHECK FOR
*                                  FIELD( ) SITUATION
         SPACE
         BAL   R14,TCBIO           PUT OUT HEADERS
         EX    R2,MOVEINS3         MOVE FIELDS TO BUFFER
         BAL   R14,TCBIO           PUT OUT FIELDS
         SPACE
         BAL   R14,IOSPACE         GO SKIP A LINE
         SPACE
         B     SEVRET              GO CHECK RETURN CODES
* THIS ROUTINE OUTPUTS 'TCB EXTENT' WHEN ALL TCB IS PRINTED.
EXTSETUP EQU   *
         MVC   FOUR(L'HDRTEXT,R10),HDRTEXT HEADER TO OUTPUT BUFFER
         MVI   HDRLEN,L'HDRTEXT    SET LENGTH OF OUTPUT
         IC    R2,HDRLEN           OUTPUT LENGTH TO REG 2
         LA    R2,TWO(R2)          ADD TWO TO AVOID TRUNCATION
         BAL   R14,TCBIO           GO OUTPUT HEADER
         MVI   FOUR(R10),BLANK     PREPARE TO CLEAR BUFFER
         MVC   FIVE(L'HDRTEXT,R10),FOUR(R10)  CLEAR OUTPUT BUFFER
         SR    R2,R2               RESET LINE COUNTER
         MVI   EXTENTFG,HEX00      TURN OFF EXTENT FLAG
         MVI   NOFLDFLG,HEX00      TURN OFF FIELDS FLAG
         B     TCB252S             PICK UP TFLG ENTRY IN TCB
TCBIO    EQU   *
***********************************************************************
* THIS IS THE IO ROUTINE FOR IKJEGTCB RESPONSIBLE FOR OUTPUTTING FIELD*
* HEADERS AND FIELD CONTENTS.                                         *
***********************************************************************
         ST    R14,REG14           SAVE REGISTER 14
         LA    R1,OUTPTR1          POINT TO PARAMETER LIST
         L     R0,PRINTFLG         LOAD ADDRESS OF DSNAME PDE IF ANY
         LA    R14,TWO(R2)
         ST    R10,OUTPTR1         STORE POINTER TO OUTPUT BUFFER
         STH   R14,ZERO(R10)       STORE LENGTH OF OUTPUT BFFR
         SR    R14,R14             CLEAR OUT REGISTER
TCBIO1   EQU   *
         ST    R14,OUTPTR2         ZERO OUT SECOND WORD
         ST    R14,PRINTFLG        INDICATE OPEN DATA SET NOW
         XC    TSTIOPRM,TSTIOPRM CLEAR PARAMETER AREA
         IKJEGSIO DATA,DATAPTR=(R10),DSNAME=(R0),ID=TCB31,             *
               MF=(E,TSTIOPRM)     CALL IO
         LTR   R15,R15             TEST RET CODE FROM IO
         BNZ   TESTRC1             NOT ZERO, CLEAN UP AND EXIT
         L     R14,REG14           YES, RESTORE REGISTER 14
         BR    R14                 RETURN TO MAIN LINE OF MODULE
         SPACE
***********************************************************************
*                                                                     *
*        THE FOLLOWING CODE WILL SPACE ONE LINE                       *
*                                                                     *
***********************************************************************
         SPACE
IOSPACE  EQU   *
         MVI   FOUR(R10),BLANK     CLEAR THE
         MVC   FIVE(ONE59,R10),FOUR(R10)  OUTPUT BUFFER
         SPACE
         ST    R14,REG14           SAVE RETURN REG
         XR    R14,R14             CLEAR OUT REGISTER
         ST    R14,ZERO(R10)       ZERO LENGTH TO SPACE ONE LINE
         LA    R1,OUTPTR1          POINT TO PARAMETER LIST
         B     TCBIO1              GO SKIP A LINE
*                                                                     *
***********************************************************************
*   THE FOLLOWING CODE PROCESSES THE VARIOUS RETURN CODES AND         *
*   INITIALIZES TO PRINT ANY NECESSARY MESSAGES.                      *
***********************************************************************
CHKFLD   EQU   *
         L     R14,REG14           CHECK IF 'FIELD( )' WAS
         LTR   R14,R14             SPECIFIED...IF SO, THE TCBIO RTN
*                                  WAS NOT ENTERED & REG14 = 0.
         BNZ   RETURN              OK...RETURN
         SPACE
         LA    R2,M0016            MSG-TCB FIELD NAME REQUIRED
         LA    R3,ZERO             NO SECOND LEVEL MESSAGE
         B     MSG1                GO OUTPUT THE MESSAGE
         SPACE
         SPACE
TCBRET1  EQU   *                   PARSE RETURN CODE
         AR    R15,R15             DOUBLE FOR PROPER ADDRESSING
         LA    R3,PARSETAB(R15)    POINT TO CORRECT SECTION IN TABLE
         BR    R3                  GO TO PROPER SECTION FOR R.C.
PARSETAB EQU   *
         NOP   PARSETAB            RC=0, NEVER EXECUTED
         NOP   PARSETAB            RC=0, NEVER EXECUTED
         B     FLUSHIT             INDICATE IKJEGMNL SHOULD FLUSH STACK
         NOP   PARSETAB            PUT IN FOR ALIGNMENT PURPOSES
         LA    R15,SIXTEEN         RC=8, ATTENTION
         B     RETURN              RETURN TO IKJEGMNL
         LA    R2,M0104            RC=12, MSG-TCB FAILED
         B     RC12MSG             BRANCH TO SET UP REST OF IO
         LA    R2,M0103            RC=16, MSG-NOT ENOUGH CORE
         B     RC16MSG             BRANCH TO SET UP REST OF IO
         B     CHKRTN              RC=20-CHECK SERVICE RTN RETURN CODE
         NOP   PARSETAB            NOT EXECUTED
RC12MSG  LA    R3,M0277            MSG-PARSE ERROR CODE 12
         B     MSG4                GO OUTPUT THE MESSAGES
RC16MSG  LA    R3,ZERO             NO SECOND LEVEL MESSAGE
         B     MSG1                GO OUTPUT THE MESSAGE
CHKRTN   EQU   *
         L     R15,REG15           PUT SAVED RETURN CODE INTO REG 15
SEVRET   EQU   *
         CH    R15,ATTNCODE        COMPARE RET CODE TO 16
         BNL   RETURN              RET CODE IS 16 OR GREATER
         B     RETURN0             RET CODE IS LESS THAN 16
         SPACE
RETURN   EQU   *
         LR    R2,R15              SAVE RET CODE OVER ESTAE
         ESTAE 0                   REMOVE ESTAE REQUEST
         LR    R15,R2              RESTORE RET CODE
         NI    TSTFLGS4,HEXFF-TSTRERTN  SHUT OFF RETRY FLAG
RETURNS  EQU   *                   RETURN TO MAINLINE
         NI    TSTFLGS1,(HEXFF-TSTPRINT)  TURN OFF PRINT FLG
         L     R13,FOUR(R13)       RESTORE IKJEGMNL REGISTERS AND
         RETURN (14,12),T,RC=(15)  RETURN TO MAINLINE
FLUSHIT  EQU   *
         OI    TSTFLGS4,TSTFLUSH   INDICATE TO IKJEGMNL TO FLUSH STACK
RETURN0  EQU   *
         XR    R15,R15             SET RETURN CODE TO 0
         B     RETURN              GO RETURN TO IKJEGMNL
         EJECT
*  ENTRY POINT TO THE STAE RETRY ROUTINE.  ENTERED FROM IKJEGSTA     *
         SPACE
TCBRTRY  EQU   *
         USING *,R15
         L     R4,CVTADDR          LOAD ADDRESS OF CVT
         USING CVTDSECT,R4         ESTABLISH ADDRESSABILITY
         L     R4,CVTTCBP          LOAD ADDRESS OF TCB POINTERS
         DROP  R4                  RELEASE REG 4
         L     R4,ZERO(R4)         LOAD ADDRESS OF TEST TCB
         USING TCB,R4              ESTABLISH ADDRESSABILITY
         L     R9,TCBTRN           LOAD ADDRESS OF TCOMTAB
         L     R12,TCBADR
         USING IKJEGTCB,R12
         DROP  R15
         DROP  R4                  RELEASE REG 4
         L     R13,REGSAVE2        POINT TO TCB REGISTERS
         LA    R15,TWENTY          SET RETURN CODE
         B     RETURN              RETURN TO IKJEGMNL
ICTABLE  EQU   *
         DC    AL1(I0099),AL3(PARSEBLO)  *
         DC    AL1(I0097),AL3(PROTBLO1)   *
         DC    AL1(I0097),AL3(PROTBLO2)   *
         DC    AL1(HEXFF)                   *
         SPACE 1
CONSTANT DC    50C'Z'              PATCH AREA
ATTNCODE DC    H'16'               HALFWORD OF 16
         EJECT
* THE FOLLOWING ARE MESSAGE OUTPUTTING ROUTINES.
MSG1     XC    TSTIOPRM,TSTIOPRM   CLEAR THE PARAMETER AREA
         IKJEGSIO MSG,FIRST=(R2),SECOND=(R3),ID=TCB31,                 *
               MF=(E,TSTIOPRM)     CALL IO
TESTRC1  CH    R15,ATTNCODE        IS RET CODE LESS 16
         BNL   RETURN              NO, RETURN
         B     RETURN0             YES, SET RC=0, RETURN
         SPACE
MSG2     XC    TSTIOPRM,TSTIOPRM   CLEAR THE PARAMETER AREA
         IKJEGSIO MSG,FIRST=(R2),INST11=(APDE,(R4)),SECOND=(R3),       *
               ID=TCB31,MF=(E,TSTIOPRM)  CALL IO
TESTRC2  CH    R15,ATTNCODE        IS RET CODE LESS 16
         BNL   SET12               NO, GIVE RC=12 TO PARSE
         B     SET8                YES, GIVE RC=8 TO PARSE
         SPACE
MSG3     XC    TSTIOPRM,TSTIOPRM   CLEAR PARAMETER AREA
         IKJEGSIO MSG,FIRST=(R2),INST11=(APDE,(R4)),SECOND=(R3),       *
               INST21=(NUM,I0003),ID=TCB31,MF=(E,TSTIOPRM)
         B     TESTRC2             BRANCH TO TEST RET CODE
         SPACE
MSG4     XC    TSTIOPRM,TSTIOPRM   CLEAR PARAMETER AREA
         IKJEGSIO MSG,FIRST=(R2),INST11=(NUM,I0008),SECOND=(R3),       *
               ID=TCB31,MF=(E,TSTIOPRM)  CALL IO
         B     TESTRC1             BRANCH TO TEST RET CODE
         SPACE
LINKFAIL XC    TSTIOPRM,TSTIOPRM   CLEAR PARAMETER AREA
         LR    R3,R1               ABEND CODE TO REG 3
         LR    R4,R15              RET CODE TO REG 4
         IKJEGSIO SVCERR,SVC=6,ABENDRG=(R3),RC=(R4),                   *
               ID=TCB31,INST11=(NUM,I0040),MF=(E,TSTIOPRM) CALL IO
         B     TESTRC1             BRANCH TO TEST RET CODE
         SPACE
LISTESTA IKJEGSPL RTRY=TCBRTRY,ABNTB=ICTABLE,MODNM=IKJEGTCB,           *
               TNM=LISTTCB  BUILD PARAMETER LIST FOR ESTAE
         EJECT
MYWKAREA DSECT
* IT IS ESSENTIAL THAT THE FOLLOWING 7 AREAS BE CONTIGUOUS AND IN ORDER
STAESTUF DS    4F                  AREA FOR STAE LIST
GRSFLAG1 DS    CL1                 TCBGRS FIELD FLAG
GRSFLAG2 DS    CL1                 TCBGRS FIELD FLAG
FLDLEN   DS    CL1                 LENGTH OF TCB FIELD
HDRLEN   DS    CL1                 LENGTH OF HEADER
HDRBUF   DS    2F                  BUFFER FOR HEADER
LINELEN  DS    1F                  OUTPUT LINE LENGTH
ENDPDECK DS    1F                  ADDR OF LAST FIELD PDE +2
PRINTFLG DS    1F                  ADDR OF DSNAME PDE
REG14    DS    1F                  REGISTER 14
REG15    DS     F                  RETURN CODE FROM SERVICE
NOFLDFLG DS    CL1                 NO FIELDS SPECIFIED FLAG
EXTENTFG DS    CL1                 EXTENT PRINTED FLAG
*                                  ROUTINE SAVEAREA
* IT IS ESSENTIAL THAT THE FOLLOWING 4 AREAS BE CONTIGUOUS AND IN ORDER
STRNGPTR DS    1F                  PT TO FIELD TO BE CONVERTED
LENGTH   DS    CL2                 LENGTH OF FIELD TO BE CONVERTED
FLAGS    DS    CL1                 FLAG FOR IKJEGCVT
TYPECODE DS    CL1                 TYPE OF DATA TO BE CONVERTED (HEX)
* IT IS ESSENTIAL THAT THE FOLLOWING 2 AREAS BE CONTIGUOUS AND IN ORDER
OUTPTR1  DS    1F                  PT TO FIRST OUTPUT BUFFER
OUTPTR2  DS    1F                  PT TO SECOND LEVEL MSG IF ANY
TEMP3    DS    3F                  WORK AREA FOR SVC 97
         EJECT
IKJEGTCB CSECT
** THE DECLARED CONSTANTS FOR THE IKJEGTCB MODULE.                  **
HDRRBP   DC    C'RBP'              RBP HEADER OF TCB
HDRPIE   DC    C'PIE'              PROGRAM INTERRUPT ELEMENT HDR
HDRDEB   DC    C'DEB'              DATA EXTENT BLOCK HDR
HDRTIO   DC    C'TIO'              TASK I/O HEADER
HDRCMP   DC    C'CMP'              TASK COMPLETION CODE HDR
HDRTRN   DC    C'TRN'              TESTRAN HDR
HDRMSS   DC    C'MSS'              SUBPOOL SPQE HDR
HDRPKF   DC    C'PKF'              PROTECTION KEY HDR
HDRFLGS  DC    C'FLGS'             MISC FLAGS HDR
HDRLMP   DC    C'LMP'              LIMIT PRIORITY HDR
HDRDSP   DC    C'DSP'              DISPATCHING PRIORITY HDR
HDRLLS   DC    C'LLS'              LOAD LIST ADDR HDR
HDRJLB   DC    C'JLB'              JOBLIB DCB ADDR HDR
HDRJPQ   DC    C'JPQ'              JOB PACK CDE ADDR HDR
HDRGRS   DC    C'GRS'              GENERAL REGISTER HDR
HDRQEL   DC    C'QEL'              ENQUEUE COUNT HDR
HDRFSAB  DC    C'FSAB'             FIRST PARM SAVE AREA ADDR HDR
HDRTCB   DC    C'TCB'              DAUGHTER TCB ADDR HDR
HDRTME   DC    C'TME'              TIMER ADDR HDR
HDRJSTCB DC    C'JSTCB'            JOB STEP TCB ADDR HDR
HDRNTC   DC    C'NTC'              PREVIOUS SUBTASK TCB ADDR HDR
HDROTC   DC    C'OTC'              ORIGINATING TCB ADDR HDR
HDRLTC   DC    C'LTC'              SUBTASK LAST TCB ADDR HDR
HDRIQE   DC    C'IQE'              IQE ADDR HDR
HDRECB   DC    C'ECB'              EVENT CONTROL BLOCK ADDR HDR
HDRTSFLG DC    C'TSFLG'            FLAG HDR
HDRSTPCT DC    C'STPCT'            STPCT HDR
HDRTSLP  DC    C'TSLP'             TSLP HDR
HDRTSDP  DC    C'TSDP'             TSDP HDR
HDRPQE   DC    C'PQE'              PARTITION QUEUE ELEMENT ADDR HDR
HDRAQE   DC    C'AQE'              ALLOCATED QUEUE ELEMENT ADDR HDR
HDRNSTAE DC    C'NSTAE'            STAE FLAGS HDR
HDRSTABB DC    C'STABB'            CURRENT STAE ADDR HDR
HDRTCTR  DC    C'TCTR'             TCT FLAG HDR
HDRTCT   DC    C'TCT'              TIMING CONTROL TABLE ADDR HDR
HDRUSER  DC    C'USER'             USER FIELD HDR
HDRNDSP0 DC    C'NDSP0'            -
HDRNDSP1 DC    C'NDSP1'            NON - DISPATCHABILITY
HDRNDSP2 DC    C'NDSP2'            HEADERS
HDRNDSP3 DC    C'NDSP3'            HEADER
HDRRSVD  DC    C'RESERVED'         RESERVED WORD HEADER
HDRJSCB  DC    C'JSCB'             JOB STEP CONTROL BLOCK ADDR HDR
HDREXT1  DC    C'EXT1'             ADDR OS-AOS COMMON TCB EXTENSION
HDRNDSP4 DC    C'NDSP4'            SECONDARY NONDISPATCHABILITY FLAGS
HDRNDSP5 DC    C'NDSP5'            SEC NON FLAGS UNIQUE TO AOS/2
HDRFLGS6 DC    C'FLGS6'            TASK RELATED FLAGS COMMON TO AOS1-2
HDRFLGS7 DC    C'FLGS7'            TASK RELATED FLAGS UNIQUE TO AOS2
HDRDAR   DC    C'DAR'              DAMAGE ASSESSMENT RTN HDR
HDREXT2  DC    C'EXT2'             ADDR AOS1-AOS2 COMMON TCB EXTENSION
HDRTIRB  DC    C'TIRB'             ADDRESS OF TIRB FOR TASK
HDRBACK  DC    C'BACK'             ADDR OF PREVIOUS TCB ON READY QUE
HDRRTWA  DC    C'RTWA'             ADDR OF CURRENT RTM2 WORKAREA
HDRIOTIM DC    C'IOTIM'            TIME
HDRTMSAV DC    C'TMSAV'            TIME
HDRABCUR DC    C'ABCUR'            ABEND RECURSION BYTE
HDRSYSCT DC    C'SYSCT'            'SYSTEM MUST CONPLETE' COUNT
HDRTID   DC    C'TID'              TASK ID NUMBER
HDRFOE   DC    C'FOE'              @ 1ST FIX OWNERSHIP ELEMENT
HDRSWA   DC    C'SWA'              ADDRESS OF 1ST SCHEDULER WORK AREA
HDRTFLG  DC    C'TFLG'             GTF FLAG BYTE
HDRGTFA  DC    C'GTFA'             ADDRESS OF TEMPORARY TRACE BUFFER
HDRRCMP  DC    C'RCMP'             ABTERM COMP CODE ON VALID STAE REC
HDRDDEXC DC    C'DDEXC'            DDEXC HEADER
HDRDDWTC DC    C'DDWTC'            DDWTC HEADER
HDRIOBRC DC    C'IOBRC'            IOBRC HEADER
HDRSTMCT DC    C'STMCT'            STMCT HEADER
HDRAECB  DC    C'AECB'             AECB HEADER
HDRTCBID DC    C'TCBID'            TCBID HEADER
HDRRTM12 DC    C'RTM12'            RTM12 HEADER
HDRESTAE DC    C'ESTAE'            ESTAE HEADER
HDRCCPVI DC    C'CCPVI'            CCPVI HEADER
HDRAFFN  DC    C'AFFN'             AFFN HEADER
HDRFBYT1 DC    C'FBYT1-2'            FBYT1 HEADER
HDRTEXT  DC    C'TCB EXTENT'       TCB EXTENT HEADER
         SPACE 1
TCBADR   DC    A(IKJEGTCB)         ADDRESS OF BEGINNING OF MODULE
         SPACE
PARSADR  DC    V(IKJEGPCL)         ADDR OF PARAMETER LIST FOR PARSE
MOVEINS1 MVC   ZERO(ZERO,R1),ONE(R15)   MOVE CONVERTED FIELDS
MOVEINS2 MVC   FOUR(ZERO,R1),HDRBUF     MOVE HEADER TO OUTPUT BUFFER
MOVEINS3 MVC   FOUR(ZERO,R10),EIGHTY4(R10)  INST TO MOVE TCB FIELDS
*                                  TO OUTPUT BUFFER
         DS    0F
REGHDRS  DC    C'R0 R1 R2 R3 '     REGISTER HEADERS
         DC    C'R4 R5 R6 R7 '     *
         DC    C'R8 R9 R10R11'     *
         DC    C'R12R13R14R15'     *
         EJECT
IKJEGPCL IKJPARM
ADDRTCB  IKJKEYWD
         IKJNAME  'ADDR',SUBFLD=TCBADDR
PRINTIT  IKJKEYWD
         IKJNAME   'PRINT',SUBFLD=DSNAME
TCBFIELD IKJKEYWD
         IKJNAME   'FIELD',SUBFLD=FIELDNAM
DSNAME   IKJSUBF
DSNAM    IKJPOSIT  DSNAME,PROMPT='DSNAME'
TCBADDR  IKJSUBF
ADDRESS  IKJPOSIT  ADDRESS,VALIDCK=IKJEGVCK,PROMPT='ADDRESS'
FIELDNAM IKJSUBF
RBP      IKJKEYWD
         IKJNAME   'TCBRBP'
PIE      IKJKEYWD
         IKJNAME   'TCBPIE'
DEB      IKJKEYWD
         IKJNAME   'TCBDEB'
TIO      IKJKEYWD
         IKJNAME   'TCBTIO'
CMP      IKJKEYWD
         IKJNAME   'TCBCMP'
TRN      IKJKEYWD
         IKJNAME   'TCBTRN'
MSS      IKJKEYWD
         IKJNAME   'TCBMSS'
PKF      IKJKEYWD
         IKJNAME   'TCBPKF'
FLGS     IKJKEYWD
         IKJNAME   'TCBFLGS'
LMP      IKJKEYWD
         IKJNAME   'TCBLMP'
DSP      IKJKEYWD
         IKJNAME   'TCBDSP'
LLS      IKJKEYWD
         IKJNAME   'TCBLLS'
JLB      IKJKEYWD
         IKJNAME   'TCBJLB'
JPQ      IKJKEYWD
         IKJNAME   'TCBJPQ'
GRS      IKJKEYWD
         IKJNAME   'TCBGRS'
QEL      IKJKEYWD
         IKJNAME   'TCBQEL'
FSAB     IKJKEYWD
         IKJNAME   'TCBFSAB'
TCB1     IKJKEYWD
         IKJNAME   'TCBTCB'
TME      IKJKEYWD
         IKJNAME   'TCBTME'
JSTCB    IKJKEYWD
         IKJNAME   'TCBJSTCB'
NTC      IKJKEYWD
         IKJNAME   'TCBNTC'
OTC      IKJKEYWD
         IKJNAME   'TCBOTC'
LTC      IKJKEYWD
         IKJNAME   'TCBLTC'
IQE      IKJKEYWD
         IKJNAME   'TCBIQE'
ECB      IKJKEYWD
         IKJNAME   'TCBECB'
TSFLG    IKJKEYWD
         IKJNAME   'TCBTSFLG'
STPCT    IKJKEYWD
         IKJNAME   'TCBSTPCT'
TSLP     IKJKEYWD
         IKJNAME   'TCBTSLP'
TSDP     IKJKEYWD
         IKJNAME   'TCBTSDP'
PQE      IKJKEYWD
         IKJNAME  'TCBPQE'
AQE      IKJKEYWD
         IKJNAME   'TCBAQE'
NSTAE    IKJKEYWD
         IKJNAME  'TCBNSTAE'
STABB    IKJKEYWD
         IKJNAME   'TCBSTABB'
TCT      IKJKEYWD
         IKJNAME   'TCBTCT'
USER     IKJKEYWD
         IKJNAME  'TCBUSER'
NDSP0    IKJKEYWD
         IKJNAME   'TCBNDSP0'
NDSP1    IKJKEYWD
         IKJNAME   'TCBNDSP1'
NDSP2    IKJKEYWD
         IKJNAME   'TCBNDSP2'
NDSP3    IKJKEYWD
         IKJNAME   'TCBNDSP3'
RSRVD    IKJKEYWD
         IKJNAME   'RESERVED'
JSCB     IKJKEYWD
         IKJNAME   'TCBJSCB'
DDEXC    IKJKEYWD
         IKJNAME   'TCBDDEXC'
DDWTC    IKJKEYWD
         IKJNAME   'TCBDDWTC'
IOBRC    IKJKEYWD
         IKJNAME   'TCBIOBRC'
RSVD2    IKJKEYWD
         IKJNAME   'RSVD2'
EXT1    IKJKEYWD
         IKJNAME   'TCBEXT1'
NDSP4    IKJKEYWD
         IKJNAME   'TCBNDSP4'
NDSP5    IKJKEYWD
         IKJNAME   'TCBNDSP5'
FLGS6    IKJKEYWD
         IKJNAME   'TCBFLGS6'
FLGS7    IKJKEYWD
         IKJNAME   'TCBFLGS7'
DAR      IKJKEYWD
         IKJNAME   'TCBDAR'
RSVD     IKJKEYWD
         IKJNAME   'TCBRSVD'
SYSCT    IKJKEYWD
         IKJNAME   'TCBSYSCT'
STMCT    IKJKEYWD
         IKJNAME   'TCBSTMCT'
EXT2     IKJKEYWD
         IKJNAME   'TCBEXT2'
AECB     IKJKEYWD
         IKJNAME   'TCBAECB'
TIRB     IKJKEYWD
         IKJNAME   'TCBTIRB'
BACK     IKJKEYWD
         IKJNAME   'TCBBACK'
RTWA     IKJKEYWD
         IKJNAME   'TCBRTWA'
IOTIM    IKJKEYWD
         IKJNAME   'TCBIOTIM'
TMSAV    IKJKEYWD
         IKJNAME   'TCBTMSAV'
ABCUR    IKJKEYWD
         IKJNAME   'TCBABCUR'
RSVD3    IKJKEYWD
         IKJNAME   'RSVD3'
TID      IKJKEYWD
         IKJNAME   'TCBTID'
RSVD4    IKJKEYWD
         IKJNAME   'RSVD4'
FOE      IKJKEYWD
         IKJNAME   'TCBFOE'
SWA      IKJKEYWD
         IKJNAME   'TCBSWA'
RSVD5    IKJKEYWD
         IKJNAME   'RSVD5'
TCBID    IKJKEYWD
         IKJNAME   'TCBTCBID'
RTM12    IKJKEYWD
         IKJNAME   'TCBRTM12'
ESTAE    IKJKEYWD
         IKJNAME   'TCBESTAE'
RSVD6    IKJKEYWD
         IKJNAME   'RSVD6'
CCPVI    IKJKEYWD
         IKJNAME   'TCBCCPVI'
AFFN     IKJKEYWD
         IKJNAME   'TCBAFFN'
FBYT1    IKJKEYWD
         IKJNAME   'TCBFBYT1'
RSVD7    IKJKEYWD
         IKJNAME   'RSVD7'
TFLG     IKJKEYWD
         IKJNAME   'TCBTFLG'
GTFA     IKJKEYWD
         IKJNAME   'TCBGTFA'
RSVD8    IKJKEYWD
         IKJNAME   'RSVD8'
RCMP     IKJKEYWD
         IKJNAME   'TCBRCMP'
RSVD9    IKJKEYWD
         IKJNAME   'RSVD9'
         IKJENDP
         EJECT
CVTDSECT DSECT
         CVT
         EJECT
         IKJTCB
         SPACE 1
         EJECT
         TCOMTAB
         SPACE
         TSTCWORK
         SPACE
         IKJPPL
         EJECT
         IKJPARMA
         END
