TUAA     TITLE 'IGTUAA -- GET INITIAL SAVEAREA/WORKAREA'
IGTUAA   CSECT ,                   GET INITIAL SAVEAREA - WORKAREA
*/* * START OF SPECIFICATIONS ************************************** */
*/*                                                                  */
*/*   MODULE-NAME = IGTUAA                                           */
*/*                                                                  */
*/*   DESCRIPTIVE-NAME = GET INITIAL SAVEAREA/WORKAREA               */
*/*                      (IGTYGSV MACRO SUPPORT)                     */
*/*                                                                  */
*/*   COPYRIGHT = NONE                                               */
*/*                                                                  */
*/*   STATUS = RELEASE 1, MODIFICATION LEVEL 0.                      */
*/*                                                                  */
*/*   FUNCTION = THIS ROUTINE WILL PROVIDE AN INITIAL SAVEAREA-      */
*/*       WORKAREA FOR THE CALLING ROUTINE.  SINCE THIS IS THE       */
*/*       INITIAL SAVEAREA, A VPSS STORAGE MANAGEMENT CONTROL        */
*/*       BLOCK MUST BE ACQUIRED.  THIS ROUTINE SUPPORTS THE         */
*/*       IGTYGSV MACRO WITH INITIAL=YES SPECIFIED.                  */
*/*       STORAGE MANAGEMENT IS LIFO (LAST ACQUIRED STORAGE MUST     */
*/*       BE INITIALLY RELEASED STORAGE).                            */
*/*                                                                  */
*/*   NOTES =                                                        */
*/*     THIS MACRO MUST SUPPORT PARAMETERS GENERATED BY THE          */
*/*     GETMAIN R,LV= MACRO (USED FOR PL/S WITH STACK OPTION)        */
*/*                                                                  */
*/*     DEPENDENCIES =                                               */
*/*        WORD-2 OF THE SAVEAREA POINTED TO BY INPUT REGISTER       */
*/*        13 (THE FORWARD SAVEAREA CHAIN POINTER) MUST BE           */
*/*        AVAILABLE FOR TEMPORARY STORAGE BY THIS ROUTINE.          */
*/*        THIS ROUTINE ASSUMES MACRO IGTYGSV INITIAL=YES HAS        */
*/*        ESTABLISHED THE INPUT PARAMETERS.                         */
*/*                                                                  */
*/*     RESTRICTIONS =                                               */
*/*        SINCE THIS ROUTINE MAY BE ENTERED IN EITHER PROBLEM OR    */
*/*        SUPERVISOR STATE AND IN ANY KEY, THIS PROGRAM MAY NOT     */
*/*        ISSUE PRIVLEDGED INSTRUCTIONS OR UPDATE SYSTEM CONTROL    */
*/*        BLOCKS.                                                   */
*/*                                                                  */
*/*     REGISTER-CONVENTIONS = STANDARD VPSS CONVENTIONS             */
*/*                                                                  */
*/*     PATCH-LABEL = APPATCH                                        */
*/*                                                                  */
*/*   MODULE-TYPE = CSECT                                            */
*/*                                                                  */
*/*     PROCESSOR = VS/2 ASSEMBLER                                   */
*/*                                                                  */
*/*     MODULE SIZE = SEE END OF ASSEMBLER LISTING                   */
*/*                                                                  */
*/*     ATTRIBUTES = RE-ENTRANT.                                     */
*/*                                                                  */
*/*   ENTRY-POINT = IGTUAA                                           */
*/*                                                                  */
*/*     PURPOSE = SAME AS FUNCTION                                   */
*/*                                                                  */
*/*     LINKAGE = ENTERED UNLOCKED, TASK MODE, ENABLED. MAY BE       */
*/*               IN ANY KEY AND EITHER PROBLEM OR SUPERVISOR        */
*/*               STATE.                                             */
*/*                                                                  */
*/*     INPUT = THE FOLLOWING REGISTERS ARE INITIALIZED ON ENTRY     */
*/*             (SET BY MACRO IGTYGSV INITIAL=YES) --                */
*/*         REGISTER  0 - BYTE-0 CONTAINS THE SUBPOOL TO CONTAIN     */
*/*                       THE REQUESTED STORAGE. BYTES 1-3 CONTAIN   */
*/*                       THE REQUIRED SAVEAREA/WORKAREA LENGTH.     */
*/*         REGISTER  1 - AMOUNT OF STORAGE TO BE AVAILABLE FOR      */
*/*                       LOWER LEVEL SAVEAREA/WORKAREAS (MACRO      */
*/*                       DEFAULTS TO 0).                            */
*/*         REGISTER 12 - ADDRESS OF THE APCT.                       */
*/*         REGISTER 13 - ADDRESS OF CURRENT SAVEAREA.  WORD 2       */
*/*                       (FORWARD CHAIN) IS USED FOR TEMPORARY      */
*/*                       STORAGE.                                   */
*/*         REGISTER 14 - RETURN ADDRESS                             */
*/*         REGISTER 15 - ADDRESS OF THIS ROUTINE (IGTUAA).          */
*/*                                                                  */
*/*     OUTPUT = AN APSM IS CONSTRUCTED TO DESCRIBE THE ACQUIRED     */
*/*              STORAGE.  AN APSC AND APSV ARE INITIALIZED FOR      */
*/*              THE NEW SAVEAREA/WORKAREA.                          */
*/*                                                                  */
*/*   EXIT-NORMAL = THE FOLLOWING REGISTERS ARE RETURNED TO THE      */
*/*                 CALLER --                                        */
*/*                 REGISTER  0 - UNPREDICTABLE                      */
*/*                 REGISTER  1 - ADDRESS OF NEW SAVEAREA            */
*/*                 REGISTER 2-13 - SAME AS ON INPUT                 */
*/*                 REGISTER 14 - RETURN ADDRESS                     */
*/*                 REGISTER 15 - UNPREDICTABLE                      */
*/*                                                                  */
*/*   EXIT-ERROR  = NONE.                                            */
*/*                                                                  */
*/*   EXTERNAL-REFERENCES = THE FOLLOWING ROUTINES AND               */
*/*                         CONTROL BLOCKS ARE USED.                 */
*/*                                                                  */
*/*     ROUTINES = NONE.                                             */
*/*                                                                  */
*/*     DATA-AREAS = NONE                                            */
*/*                                                                  */
*/*     CONTROL-BLOCKS =                                             */
*/*         APCT     - R                                             */
*/*         APSC     - R,       C                                    */
*/*         APSM     - R,       C                                    */
*/*         APSV     - R,       C                                    */
*/*                                                                  */
*/*   TABLES = NONE                                                  */
*/*                                                                  */
*/*   MACROS =                                                       */
*/*       IGTXEPLG                                                   */
*/*       GETMAIN                                                    */
*/*                                                                  */
*/*   CHANGE-ACTIVITY = NONE                                         */
*/*                                                                  */
*/*   MESSAGES = NONE                                                */
*/*                                                                  */
*/*   ABEND-CODES = NONE                                             */
*/*                                                                  */
*/* * END OF SPECIFICATIONS **************************************** */
         SPACE 3
         COPY  IGTXSYSO            DEFINE SCP CHARACTERISTICS
         EJECT ,
         USING APCT,APCTPTR        VPSS CONTROL TABLE
         USING APSV,APSVPTR        VPSS SAVE AREA
         USING IGTUAA,APENTRY      BASE REGISTER FOR IGTUAA
         B     STARTUP             SKIP IDENTIFIER
         DC    YL1(COREIDE-*-1)    LENGTH OF ID
         DC    C'IGTUAA'           CSECT NAME
         DC    C' &SYSDATE'        ASSEMBLY DATE
COREIDE  EQU   *                   END OF ID
         SPACE 2
STARTUP  DS    0H                  START OF CODE
*
** SAVE INPUT REQUIREMENTS
*
         ST    RCORESZ,SVUSP       BYTE-0 = SUBPOOL FOR GETMAIN
         AL    RCORESZ,CEXTRA      ADD EXTRA STORAGE REQUIREMENTS
*                                  * FOR THE APSC, THE APSM
*                                  * HEADER AND FOR THE
*                                  * REGISTER SAVE AREA
         N     RCORESZ,CRND8       ROUND TO DOUBLEWORD BOUNDARY
         STH   RCORESZ,SVUREQ      SAVE ACTUAL USER REQUIREMENTS
*
** DETERMINE GETMAIN SIZE.  USE MAXIMUM OF:
**       A)  R0+R1 (MINIMUM+EXTRA), AND
**       B)  APCTSMIN.
*
         AR    RCORESZ,REXTRASZ    GET USER + EXTRA STORAGE
         C     RCORESZ,APCTSMIN    IF LESS THAN APCT
         BNL   GETCORE             * SPECIFIED MINIMUM,
         L     RCORESZ,APCTSMIN    * THEN USE APCT VALUE
*
** GET THE REQUIRED STORAGE
*
GETCORE  EQU   *                   * GET REQUIRED STORAGE
         A     RCORESZ,CARNDPGE    ROUND REQUIREMENTS
         N     RCORESZ,CRNDPGE     * TO PAGE INCREMENTS.
         STCM  RCORESZ,BYTE2,SVAREQ SAVE NUMBER OF 256-BYTE BLOCKS
         AIF   ('&VPSSSYS' NE 'MVS').VS1A IF MVS SYSTEM USE SVC 120
         BALR  RTEMPB,*-*          ESTABLISH TEMPORARY BASE
         USING *,RTEMPB            TELL ASSEMBLER
         IC    R15,SVUSP           SUBPOOL IN LOW REG 15
         GETMAIN RU,               UNCONDITIONALLY OBTAIN STORAGE      *
               LV=(0),             * LENGTH IN REGISTER 0              *
               SP=(15),            * SUBPOOL IN REG 15                 *
               BNDRY=PAGE          * START ON PAGE BOUNDARY
         DROP  RTEMPB              TEMPORARY BASE CLOBBERED
         AGO   .SYSA               * SKIP VS1 GETMAIN REQUEST
.VS1A    ANOP  ,                   GENERATE VS1 SYSTEM GETMAIN
         ICM   RCORESZ,BYTE0,SVUSP PLACE SUBPOOL IN HI-BYTE
         GETMAIN R,LV=(0)          GET REQUESTED STORAGE
.SYSA    ANOP  ,                   GETMAIN REQUEST GENERATED
*                                  * REG 1 -> ACQUIRED AREA
         BALR  APENTRY,*-*         RE-ESTABLISH BASE REGISTER
         USING *,APENTRY
*
** CONSTRUCT APSM
*
         USING APSM,APSMPTR        USE TO CONSTRUCT APSM
         L     RTEMPA,CID          FILL IN STORAGE IDENTIFIER
         ST    RTEMPA,APSMID       * ('APSM')
         SR    RTEMPA,RTEMPA       SET FOLLOWING INDICATORS TO 0:
         ST    RTEMPA,APSMNEXT     * NO 'NEXT' APSM
         ST    RTEMPA,APSMPREV     * NO 'PREVIOUS' APSM
         ST    RTEMPA,APSMAPSV     * NO 'PREVIOUS' APSM OWNED
*                                  * BY THIS APSV
         LA    RTEMPA,APSMSAVE     POINT APSM TO STORAGE
         ST    RTEMPA,APSMREGS     * MANAGEMENT REGISTER SAVEAREA
         SR    RTEMPA,RTEMPA       CLEAR REGISTER FOR CHAR INSERT
         ICM   RTEMPA,BYTE0,SVUSP  LENGTH AND SUBPOOL OF
         ICM   RTEMPA,BYTE2,SVAREQ * THIS GETMAIN. USED FOR FREEMAIN
         ST    RTEMPA,APSMSIZE     * AND FUTURE GETMAINS.
*
** CONSTRUCT APSC
*
         USING APSC-APSMLN1,APSMPTR TELL ASM WHERE APSC IS
         SH    RTEMPA,CAPSMLN1     SET APSCMXSZ TO MAXIMUM SIZE
         STH   RTEMPA,APSCMXSZ     * (APSM NOT COUNTED)
         LH    RTEMPA,SVUREQ       SET APSCCRSZ TO CURRENT SA-WA
         SH    RTEMPA,CAPSMLN1     * SIZE (APSM NOT COUNTED).
         STH   RTEMPA,APSCCRSZ     *
         SR    RTEMPA,RTEMPA       SHOW NO PREVIOUS APSC EXISTS
         ST    RTEMPA,APSCAPSC     * FOR THIS APSC.
*
** CONSTRUCT APSV
*
         DROP  APSVPTR             TO PREVENT ASM FROM USING
         USING APSV-APSMLN1-APSCLN,APSMPTR TELL ASM OF APSC LOCATION
         ST    APSMPTR,APSVAPSM    POINT TO CURRENT APSM
         ST    APSMPTR,APSVFREE    FREE APSM AT SUBROUTINE TERMINATION
         LA    APSCPTR,APSMLN1(,APSMPTR) SKIP HEADER AND REGISTERS
*                                  NOW POINTING AT APSC
         USING APSV-APSCLN,APSCPTR TELL ASM OF APSV LOCATION
         ST    APSCPTR,APSVAPSC    SAVE POINTER TO CURRENT APSC
         LA    RNEWAPSV,APSCLN(,APSCPTR) POINT TO NEW
*                                  * SAVEAREA/WORKAREA
         BR    APRETURN            RETURN ITS ADDRESS TO CALLER
         EJECT ,
********************************************************************* *
**                                                                    *
**       CONSTANTS                                                    *
**                                                                    *
********************************************************************* *
         SPACE 2
CAPSMLN1 DC    Y(APSMLN1)          LENGTH OF INITIAL APSM
*                                  * (INCLUDES REGISTER SAVEAREA)
CEXTRA   DC    A(APSCLN+APSMLN1+7) ALLOW FOR INITIAL APSM, THE APSC
*                                  * AND FOR ROUNDING
CRND8    DC    A(X'00007FF8')      ROUND TO DOUBLEWORD,
*                                  * ELIMINATE SUBPOOL
         AIF   ('&VPSSSYS' NE 'MVS').VS1B IF MVS PAGE = 4K
CARNDPGE DC    A(X'00000FFF')      ROUND UPWARD TO 4K BOUNDARY
CRNDPGE  DC    A(X'00007000')      ROUND TO 4K BOUNDARY
         AGO   .SYSB               SKIP VS1 VALUES
.VS1B    ANOP  ,                   GENERATE VS1 VALUES
CARNDPGE DC    A(X'000007FF')      ROUND UPWARD TO 2K BOUNDARY
CRNDPGE  DC    A(X'00007800')      ROUND TO 2K BOUNDARY
.SYSB    ANOP  ,                   PAGE ROUND VALUES GENERATED
CID      DC    CL4'APSM'           CONTROL BLOCK ID. MUST BE
*                                  * ON FULLWORD BOUNDARY.
         SPACE 5
********************************************************************* *
**                                                                    *
**       BYTE EQUATES FOR ICM/CLM/STCM                                *
**                                                                    *
********************************************************************* *
         SPACE 2
BYTE0    EQU   B'1000'             USE BYTE 0
BYTE1    EQU   B'0100'             USE BYTE 1
BYTE2    EQU   B'0010'             USE BYTE 2
BYTE3    EQU   B'0001'             USE BYTE 3
         SPACE 5
********************************************************************* *
**                                                                    *
**       DEFINE REQUESTED VPSS DSECTS                                 *
**                                                                    *
********************************************************************* *
         SPACE 2
         IGTXDSCT IGTXAPCT         CONTROL TABLE
         IGTXDSCT IGTXAPSC         STORAGE MANAGEMENT CONTROL WORD
         IGTXDSCT IGTXAPSM         STORAGE MANAGEMENT CONTROL BLOCK
         IGTXDSCT IGTXAPSV         SAVEAREA/WORKAREA
         EJECT ,
         IGTXEPLG ,                REGISTERS & DSECTS
RCORESZ  EQU   R0                  REQUESTED DYNAMIC STORAGE SIZE
RTEMPA   EQU   R0                  TEMPORARY VALUE HOLDER
RTEMPB   EQU   R1                  TEMPORARY BASE (MVS ONLY)
REXTRASZ EQU   R1                  EXTRA DYNAMIC STORAGE SIZE
*                                  * WHICH MUST BE ALLOCATED FOR
*                                  * FUTURE SAVEAREAS/WORKAREAS
RNEWAPSV EQU   R1                  RETURN POINTER TO USER'S
*                                  * ACQUIRED AREA
         SPACE 5
********************************************************************* *
**                                                                    *
**       RE-DEFINE APSVNEXT FOR TEMPORARY WORKAREA                    *
**                                                                    *
********************************************************************* *
         SPACE 2
SVUSP    EQU   APSVNEXT+0,1,C'X'   SUBPOOL FOR SA-WA
SVAREQ   EQU   APSVNEXT+1,1,C'X'   ACTUAL GETMAIN SIZE (IN 256-BYTES)
SVUREQ   EQU   APSVNEXT+2,2,C'H'   USER REQUESTED LENGTH
         SPACE 5
         END   ,
