TUAC     TITLE 'IGTUAC -- FREE SAVEAREA/WORKAREA'
IGTUAC   CSECT ,                   FREE SAVEAREA - WORKAREA
*/* * START OF SPECIFICATIONS ************************************** */
*/*                                                                  */
*/*   MODULE-NAME = IGTUAC                                           */
*/*                                                                  */
*/*   DESCRIPTIVE-NAME = FREE SAVEAREA/WORKAREA                      */
*/*                      (IGTYFSV MACRO SUPPORT)                     */
*/*                                                                  */
*/*   COPYRIGHT = NONE                                               */
*/*                                                                  */
*/*   STATUS = RELEASE 1, MODIFICATION LEVEL 0.                      */
*/*                                                                  */
*/*   FUNCTION = THIS ROUTINE WILL RELEASE THE SAVEAREA/WORKAREA     */
*/*       OF THE EXITING SUBROUTINE.  IF ANY STORAGE AREAS WERE      */
*/*       OBTAINED FOR THIS SUBROUTINE (DESCRIBED BY APSM),          */
*/*       THEY ARE FREEMAINED (NOTE THAT THIS MAY INCLUDE THE        */
*/*       SAVEAREA ITSELF).  THIS ROUTINE SUPPORTS THE IGTYFSV       */
*/*       MACRO.                                                     */
*/*       STORAGE MANAGEMENT IS LIFO (LAST ACQUIRED STORAGE MUST     */
*/*       BE INITIALLY RELEASED STORAGE).                            */
*/*                                                                  */
*/*   NOTES =                                                        */
*/*     THIS MACRO MUST SUPPORT PARAMETERS GENERATED BY THE          */
*/*     FREEMAIN R,LV= MACRO (USED FOR PL/S WITH STACK OPTION)       */
*/*                                                                  */
*/*     DEPENDENCIES =                                               */
*/*        REGISTER 1 MUST POINT TO A VPSS EXTENDED SAVEAREA         */
*/*        (APSV) WHICH HAS BEEN CREATED BY IGTUAA, IGTUAC, OR       */
*/*        IGTUAF.                                                   */
*/*                                                                  */
*/*     RESTRICTIONS =                                               */
*/*        SINCE THIS ROUTINE MAY BE ENTERED IN EITHER PROBLEM OR    */
*/*        SUPERVISOR STATE AND IN ANY KEY, THIS PROGRAM MAY NOT     */
*/*        ISSUE PRIVLEDGED INSTRUCTIONS OR UPDATE SYSTEM CONTROL    */
*/*        BLOCKS.                                                   */
*/*                                                                  */
*/*     REGISTER-CONVENTIONS = STANDARD VPSS CONVENTIONS             */
*/*                                                                  */
*/*     PATCH-LABEL = APPATCH                                        */
*/*                                                                  */
*/*   MODULE-TYPE = CSECT                                            */
*/*                                                                  */
*/*     PROCESSOR = VS/2 ASSEMBLER                                   */
*/*                                                                  */
*/*     MODULE SIZE = SEE END OF ASSEMBLER LISTING                   */
*/*                                                                  */
*/*     ATTRIBUTES = RE-ENTRANT.                                     */
*/*                                                                  */
*/*   ENTRY-POINT = IGTUAC                                           */
*/*                                                                  */
*/*     PURPOSE = SAME AS FUNCTION                                   */
*/*                                                                  */
*/*     LINKAGE = ENTERED UNLOCKED, TASK MODE, ENABLED. MAY BE       */
*/*               IN ANY KEY AND EITHER PROBLEM OR SUPERVISOR        */
*/*               STATE.                                             */
*/*                                                                  */
*/*     INPUT = THE FOLLOWING REGISTERS ARE INITIALIZED ON ENTRY     */
*/*             (SET BY MACRO IGTYFSV) --                            */
*/*         REGISTER  0 - IGNORED.                                   */
*/*         REGISTER  1 - ADDRESS OF SAVEAREA/WORKAREA TO RELEASE    */
*/*                       (MUST BE VPSS EXTENDED SAVEAREA -- APSV).  */
*/*         REGISTER 12 - ADDRESS OF THE APCT                        */
*/*         REGISTER 13 - IGNORED (DOES NOT HAVE TO BE SAVEAREA)     */
*/*         REGISTER 14 - RETURN ADDRESS                             */
*/*         REGISTER 15 - ADDRESS OF THIS ROUTINE (IGTUAC).          */
*/*                                                                  */
*/*     OUTPUT = THE SAVEAREA/WORKAREA POINTED TO BY REGISTER-1      */
*/*              IS RELEASED.  IF ANY APSM WHERE ACQUIRED FOR THIS   */
*/*              EXITING ROUTINE, THEY ARE NOW FREEMAINED.           */
*/*                                                                  */
*/*   EXIT-NORMAL = THE FOLLOWING REGISTERS ARE RETURNED TO THE      */
*/*                 CALLER --                                        */
*/*                 REGISTER  0 - UNPREDICTABLE                      */
*/*                 REGISTER  1 - UNPREDICTABLE                      */
*/*                 REGISTER 2-13 - SAME AS ON INPUT                 */
*/*                 REGISTER 14 - RETURN ADDRESS                     */
*/*                 REGISTER 15 - UNPREDICTABLE                      */
*/*                                                                  */
*/*   EXIT-ERROR  = NONE.                                            */
*/*                                                                  */
*/*   EXTERNAL-REFERENCES = THE FOLLOWING ROUTINES AND               */
*/*                         CONTROL BLOCKS ARE USED.                 */
*/*                                                                  */
*/*     ROUTINES = NONE.                                             */
*/*                                                                  */
*/*     DATA-AREAS = NONE                                            */
*/*                                                                  */
*/*     CONTROL-BLOCKS =                                             */
*/*         APCT     - R                                             */
*/*         APSC     - R,    D                                       */
*/*         APSM     - R,    D                                       */
*/*         APSV     - R,    D                                       */
*/*                                                                  */
*/*   TABLES = NONE                                                  */
*/*                                                                  */
*/*   MACROS =                                                       */
*/*       IGTXEPLG                                                   */
*/*       FREEMAIN                                                   */
*/*                                                                  */
*/*   CHANGE-ACTIVITY = NONE                                         */
*/*                                                                  */
*/*   MESSAGES = NONE                                                */
*/*                                                                  */
*/*   ABEND-CODES = NONE                                             */
*/*                                                                  */
*/* * END OF SPECIFICATIONS **************************************** */
         EJECT ,
         COPY  IGTXSYSO            DEFINE SCP CHARACTERISTICS
         SPACE 3
         USING APCT,APCTPTR        VPSS CONTROL TABLE
         USING APSV,RTAPSV         VPSS SAVE AREA
         USING IGTUAC,APENTRY      BASE REGISTER
         SPACE 5
         B     STARTUP             SKIP IDENTIFIER
         DC    YL1(COREIDE-*-1)    LENGTH OF ID
         DC    C'IGTUAC'           CSECT NAME
         DC    C' &SYSDATE'        ASSEMBLY DATE
COREIDE  EQU   *                   END OF ID
         SPACE 2
STARTUP  DS    0H                  START OF CODE
         L     APSMPTR,APSVFREE    ADDRESS OF FIRST APSM
*                                  * TO FREE
         LTR   APSMPTR,APSMPTR     ANY TO FREE ?
         BZR   APRETURN            NO--DONE SO RETURN
         EJECT ,
*
** LOOP THROUGH APSM ENTRIES OWNED BY EXITING SAVE AREA
** ISSUE FREEMAIN FOR EACH BLOCK, ALSO REMOVE FROM
** RECOVERY QUEUE (APSMNEXT/APSMPREV).
*
         USING APSM,APSMPTR        POINTING TO FIRST ENTRY
         DROP  APENTRY             RE-USING OLD BASE REGISTER
         L     RTEMPA,APSMREGS     REGISTER SAVE AREA
         STM   R2,R14,4*(R2-R0)(RTEMPA) SAVE INPUT VALUES
         LR    RREGSPTR,RTEMPA     SAVE POINTER TO SAVED REGISTERS
         BALR  APCODE,0            ESTABLISH NEW BASE
         USING *,APCODE            TELL ASSEMBLER
NEXTAPSM EQU   *                   FREE NEXT (OR FIRST) APSM
         L     RNXTAPSM,APSMAPSV   NEXT APSM TO FREE
         LTR   RNXTAPSM,RNXTAPSM   ANY MORE ?
         BNZ   CONTLOOP            YES--CONTINUE LOOP
         L     RNXTAPSM,APSMPREV   NEXT APSM ON QUEUE
         LTR   RNXTAPSM,RNXTAPSM   ANY LEFT ?
         BZ    LASTAPSM            YES--THEN
         SR    RTEMPB,RTEMPB       * CLEAR 'NEXT' POINTER IN
         ST    RTEMPB,APSMNEXT-APSM(,RNXTAPSM) * RECOVERY
*                                  * CHAIN SINCE ELEMENT
*                                  * FREED
LASTAPSM EQU   *                   NEXT POINTER CLEARED
*
** MUST RELOAD REGISTERS BEFORE LAST FREEMAIN SINCE
** MAY BE RELEASING AREA CONTAINING REGISTER SAVEAREA.
*
         PUSH  USING               SAVE 'USING' STATUS
         DROP  APCODE              RE-SETTING BASE REGISTER
         LM    R2,R14,4*(R2-R0)(RREGSPTR) RELOAD INPUT REGISTERS
*                                  * NOTE: NO BASE REGISTER
         L     R0,APSMSIZE         SUBPOOL/LENGTH OF ELEMENT
         FREEMAIN R,LV=(0),A=(1)   FREE THE STORAGE
         SPACE 2
         BR    APRETURN            RETURN TO CALLER
*                                  * SAVEAREA FREED.
         SPACE 2
         POP   USING               RESTORE BASE ADDRESSIBILITY
         SPACE 5
CONTLOOP EQU   *                   NOT ON LAST APSM TO FREE
         L     R0,APSMSIZE         SUBPOOL/LENGTH OF ELEMENT
         FREEMAIN R,LV=(0),A=(1)   FREE THIS APSM
         LR    APSMPTR,RNXTAPSM    NEXT APSM
         B     NEXTAPSM            CONTINUE THE LOOP
         EJECT ,
********************************************************************* *
**                                                                    *
**       DEFINE REQUESTED VPSS DSECTS                                 *
**                                                                    *
********************************************************************* *
         SPACE 2
         IGTXDSCT IGTXAPCT         CONTROL TABLE
         IGTXDSCT IGTXAPSC         STORAGE MANAGEMENT CONTROL WORD
         IGTXDSCT IGTXAPSM         STORAGE MANAGEMENT CONTROL BLOCK
         IGTXDSCT IGTXAPSV         SAVEAREA/WORKAREA
         EJECT ,
         IGTXEPLG ,                DEFINE REGISTERS AND DSECTS
RTEMPB   EQU   R0                  TEMPORARY VALUE HOLDER
RTAPSV   EQU   R1                  ADDRESS OF APSV TO ELIMINATE
*                                  * (INPUT TO THIS PROGRAM)
RREGSPTR EQU   R3                  POINTER TO SAVE REGISTERS
RNXTAPSM EQU   R9                  NEXT APSM TO FREE
RTEMPA   EQU   R15                 TEMPORARY VALUE HOLDER
         SPACE 5
         END   ,
