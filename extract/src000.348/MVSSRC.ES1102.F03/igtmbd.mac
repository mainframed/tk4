TMBD     TITLE 'IGTMBD -- VPSS CALL ROUTER                             *
                        '
IGTMBD   CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IGTMBD    77.092'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @07,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@07                                      01S0001
*                                                               01S0089
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVEAREA/WORKAREA NOT YET ESTABLISHED. THEREFORE ALL          */
*   /* CALCULATIONS MUST BE PERFORMED USING ONLY THE REGISTERS.      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0090
*                                                               01S0090
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE APUT. SET APUTPTR TO ADDRESS OF THIS CONTROL BLOCK.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0090
*   DO;                             /* START OF CODE                 */
*                                                               02S0090
*     /***************************************************************/
*     /*                                                             */
*     /* FIND THE APUT. ON ENTRY, REG 0 -> WORD WHICH CONTAINS THE   */
*     /* ADDRESS OF THE APUT. SET APUTPTR TO THE ADDRESS.            */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0091
*     RFY                                                       02S0091
*      (R0P,                                                    02S0091
*       APUTPTR) RSTD;              /* NEED THESE REGS               */
*     APUTPTR=R0P;                  /* USEFULL POINTER               */
         LR    APUTPTR,R0P                                      02S0092
*     RFY                                                       02S0093
*      (R0P) UNRSTD;                /* FINISHED WITH REG 0           */
*     APUTPTR=APUTPTR->I031P;       /* POINT TO APUT                 */
         L     APUTPTR,I031P(,APUTPTR)                          02S0094
*     RFY                                                       02S0095
*      (APUT) BASED(APUTPTR);       /* TELL COMPILER                 */
*   END;                            /* END OF CODE                   */
*   RFY                                                         01S0097
*    (APUTPTR) RSTD;                /* TELL COMPILER OF POINTER      */
*   RFY                                                         01S0098
*    (APUT) BASED(APUTPTR);         /* TO APUT.                      */
*                                                               01S0098
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE APCT. SET APCTPTR TO ADDRESS OF THIS CONTROL BLOCK.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0099
*   DO;                             /* START OF CODE                 */
*                                                               02S0099
*     /***************************************************************/
*     /*                                                             */
*     /* FIND THE APCT. ON ENTRY, APUTPTR -> APUT. THE APUT CONTAINS */
*     /* THE ADDRESS OF THE APCT. SET APCTPTR TO THIS ADDRESS.       */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0100
*     RFY                                                       02S0100
*      (APCTPTR) RSTD;              /* NEED THIS REG                 */
*     APCTPTR=APUTAPCT;             /* POINT TO APCT                 */
         L     APCTPTR,APUTAPCT(,APUTPTR)                       02S0101
*     RFY                                                       02S0102
*      (APCT) BASED(APCTPTR);       /* TELL COMPILER                 */
*   END;                            /* END OF CODE                   */
*   RFY                                                         01S0104
*    (APCTPTR) RSTD;                /* TELL COMPILER OF POINTER      */
*   RFY                                                         01S0105
*    (APCT) BASED(APCTPTR);         /* TO APCT.                      */
         EJECT
*                                                               01S0106
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND ACB, IF ANY. SET APACBPTR = @ ACB. IF NO ACB, SET        */
*   /* APACBPTR = 0. IF INVALID UNIT, SET APACBPTR = -1.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0106
*   DO;                             /* START OF CODE                 */
*                                                               02S0106
*     /***************************************************************/
*     /*                                                             */
*     /* FIND ACB ASSOCIATED WITH UNIT APINUNIT. ON INPUT, APINPTR   */
*     /* CONTAINS THE ADDRESS OF THE INPUT PARAMETER LIST. ON OUTPUT,*/
*     /* APACBPTR CONTAINS: 1) THE ADDRESS OF THE ACB, 2) ZERO IF THE*/
*     /* ACB DOES NOT EXIST, OR 3) -1 IF APINUNIT IS INVALID.        */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0107
*     RFY                                                       02S0107
*      (APACBPTR) RSTD;             /* USING REG                     */
*     RFY                                                       02S0108
*      (APAT) BASED(APUTAPAT);      /* ACB TABLE POINTED TO BY APUT  */
*     APACBPTR=APINUNIT;            /* UNIT NUMBER FROM CALLER       */
         L     @10,APINAUNT(,APINPTR)                           02S0109
         L     APACBPTR,APINUNIT(,@10)                          02S0109
*     IF APACBPTR<=00×              /* IF UNIT NUMBER INVALID        */
*         APACBPTR>99 THEN          /* (RANGE IS 1 TO 99), SET       */
         LTR   APACBPTR,APACBPTR                                02S0110
         BNP   @RT00110                                         02S0110
         C     APACBPTR,@CF02436                                02S0110
         BNH   @RF00110                                         02S0110
@RT00110 DS    0H                                               02S0111
*       APACBPTR=-1;                /* APACBPTR = -1.                */
         SLR   APACBPTR,APACBPTR                                02S0111
         BCTR  APACBPTR,0                                       02S0111
*     ELSE                          /* IF UNIT NUMBER VALID,         */
*       APACBPTR=APATACB(APACBPTR); /* GET ACB PTR FROM ACB ARRAY.   */
         B     @RC00110                                         02S0112
@RF00110 LR    @10,APACBPTR                                     02S0112
         SLA   @10,2                                            02S0112
         L     @08,APUTAPAT(,APUTPTR)                           02S0112
         L     @10,APATACB-4(@10,@08)                           02S0112
         LR    APACBPTR,@10                                     02S0112
*     RFY                                                       02S0113
*      (APAT);                      /* FINISHED WITH APAT            */
@RC00110 DS    0H                                               02S0114
*     RFY                                                       02S0114
*      (IFGACB) BASED(APACBPTR);    /* APACBPTR = -1, 0, OR @ACB     */
*   END;                            /* END OF CODE                   */
*   RFY                                                         01S0116
*    (APACBPTR) RSTD;               /* TELL COMPILER OF POINTER      */
*   RFY                                                         01S0117
*    (IFGACB) BASED(APACBPTR);      /* TO ACB FOR UNIT 'APINUNIT'    */
         EJECT
*                                                               01S0118
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE APCP ENTRY FOR THE REQUESTED FUNCTION, APINFUNC. IF  */
*   /* REQUESTED FUNCTION DOES NOT EXIST, SET POINTER TO DUMMY APCP  */
*   /* ENTRY SHOWING INVALID FUNCTION.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0118
*   DO;                             /* START OF CODE                 */
*                                                               02S0118
*     /***************************************************************/
*     /*                                                             */
*     /* FIND THE APCP ENTRY FOR THE REQUESTED FUNCTION, APINFUNC. IF*/
*     /* THE REQUESTED FUNCTION DOES NOT EXIST, SET THE RETURN       */
*     /* POINTER TO A DUMMY APCP LOCATED AT END OF APCP TABLE. THIS  */
*     /* ENTRY IS ALSO SELECTED IF APINFUNC IS NOT SPECIFIED (CALL   */
*     /* INPUT HAS ONLY 1 PARAMETER). THIS DUMMY ENTRY IS FLAGGED AS */
*     /* AN UNKNOWN FUNCTION REQUEST.                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0119
*     RFY                                                       02S0119
*      (R0F) RSTD;                  /* REQUIRED REGISTERS            */
*     IF APINAP1E=BON THEN          /* IF ONLY 1-PARM, THEN FUNCTION */
         TM    APINAP1E(APINPTR),B'10000000'                    02S0120
         BNO   @RF00120                                         02S0120
*       R0F=0;                      /* NOT SPECIFIED SO USE DUMMY.   */
         SLR   R0F,R0F                                          02S0121
*     ELSE                          /* OTHERWISE SET REGISTER-0 =    */
*       R0F=APINFUNC;               /* FUNCTION MNEMONIC.            */
         B     @RC00120                                         02S0122
@RF00120 L     @10,APINAFNC(,APINPTR)                           02S0122
         L     R0F,APINFUNC(,@10)                               02S0122
*     RFY                                                       02S0123
*      (R14F,                                                   02S0123
*       R15P,                                                   02S0123
*       APCPPTR) RSTD;              /* REQUIRED REGISTERS            */
@RC00120 DS    0H                                               02S0124
*     RFY                                                       02S0124
*      (APCP) BASED(APCPPTR);       /* TELL COMPILER OF POINTER      */
*     APCPPTR=APCTAPCP;             /* POINT TO APCP HEADER          */
         L     APCPPTR,APCTAPCP(,APCTPTR)                       02S0125
*     R14F=APCPLN1;                 /* LENGTH OF APCP ENTRY          */
         LA    R14F,96                                          02S0126
*     R15P=APCPLAST+ADDR(APCP);     /* POINT TO LAST ENTRY PRIOR TO
*                                      DUMMY ENTRY                   */
         LR    R15P,APCPPTR                                     02S0127
         AL    R15P,APCPLAST(,APCPPTR)                          02S0127
*     APCPPTR=ADDR(APCPFRST);       /* POINT TO FIRST APCP ENTRY     */
         LA    @08,APCPFRST(,APCPPTR)                           02S0128
         LR    APCPPTR,@08                                      02S0128
*                                                               02S0129
*/*                                                                  */
*/* EQUIVALENT CODE ----                                             */
*/* DO APCPPTR = APCPPTR TO R15P BY R14F                             */
*/*    WHILE(R0F ^= APCPAPFN)                                        */
*/*                                                                  */
*                                                               02S0129
*FNDAPCP1:                          /* SCAN APCP FOR MATCHING        */
*     IF R0F^=APCPAPFN THEN         /* APCPAPFN (FUNCTION MNEMONIC). */
FNDAPCP1 CL    R0F,APCPAPFN(,APCPPTR)                           02S0129
         BE    @RF00129                                         02S0129
*       GEN(BXLE APCPPTR,R14F,FNDAPCP1)/* IF NONE FOUND, THEN POINT  */
*       REFS(R14F,R15P)             /* AT DUMMY ENTRY AT END OF      */
*           SETS(APCPPTR)           /* APCP TABLE.                   */
*           FLOWS(FNDAPCP1)         /* APCPPTR NOW SET TO ADDRESS    */
*           SEQFLOW;                /* OF SELECTED ENTRY.            */
         BXLE APCPPTR,R14F,FNDAPCP1
*     RFY                                                       02S0131
*      (R0F,                                                    02S0131
*       R14F,                                                   02S0131
*       R15P) UNRSTD;               /* FINISHED WITH TEMPORARY REGS  */
@RF00129 DS    0H                                               02S0132
*     RFY                                                       02S0132
*      (APCP) BASED(APCPPTR);       /* APCPPTR POINTS TO APCP ENTRY  */
*   END;                            /* END OF CODE                   */
*   RFY                                                         01S0134
*    (APCPPTR) RSTD;                /* TELL COMPILER OF POINTER      */
*   RFY                                                         01S0135
*    (APCP) BASED(APCPPTR);         /* TO THE APCP ENTRY.            */
         EJECT
*                                                               01S0136
*   /*****************************************************************/
*   /*                                                               */
*   /* OBTAIN A SAVEAREA/WORKAREA. USE THE WORKAREA POINTED TO BY THE*/
*   /* ACB IF POSSIBLE.                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0136
*   RFY                                                         01S0136
*    (RAPINPTR) RSTD;               /* REGISTER 1 REQUIRED TO        */
*   RAPINPTR=APINPTR;               /* OBTAIN SA-WA. SAVE INPUT      */
         LR    RAPINPTR,APINPTR                                 01S0137
*   RFY                                                         01S0138
*    (APINPTR) UNRSTD;              /* PARAMETERS IN REGISTER        */
*   RFY                                                         01S0139
*    (APIN) BASED(RAPINPTR);        /* RAPINPTR. TELL COMPILER.      */
*   DO;                             /* START OF CODE                 */
*                                                               02S0140
*     /***************************************************************/
*     /*                                                             */
*     /* OBTAIN A SAVEAREA-WORKAREA (SA-WA). RETURN THE ADDRESS OF   */
*     /* THIS WA-SA IN REGISTER-1. USE THE WORKAREA POINTED TO BY THE*/
*     /* ACB IF THE FOLLOWING CONDITIONS EXIST: 1) THE APCP SHOWS THE*/
*     /* ACB'S SA-WA MAY BE USED (APCPSPSA=1), 2) THE ACB EXISTS     */
*     /* (APACBPTR>0), 3) THE ACB IS OPEN (ACBOPEN=1), AND 4) THE    */
*     /* SA-WA IS NOT IN USE (APAXSVSW=00). IF ALL THESE CONDITIONS  */
*     /* DO NOT EXIST, GETMAIN A TEMPORARY SA-WA.                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0141
*     RFY                                                       02S0141
*      (R0F,                                                    02S0141
*       R1P) RSTD;                  /* REQUIRED REGISTERS            */
*     IF APCPSUSV=BON&              /* INSURE SA-WA MAY BE USED      */
*         APACBPTR>0&               /* ACB MUST EXIST                */
*         ACBOPEN=BON THEN          /* ACB MUST BE OPEN              */
         TM    APCPSUSV(APCPPTR),B'01000000'                    02S0142
         BNO   @RF00142                                         02S0142
         LTR   APACBPTR,APACBPTR                                02S0142
         BNP   @RF00142                                         02S0142
         TM    ACBOPEN(APACBPTR),B'00010000'                    02S0142
         BNO   @RF00142                                         02S0142
*       DO;                         /* THEN SA-WA EXISTS. CHECK 02S0143
*                                      IN-USE INDICATOR              */
*         TS(ACBAMWAP->APAXSVSW);   /* DETERMINE IF SA-WA IN-USE. IF
*                                      NOT, MARK IN-USE. USE TS TO
*                                      INSURE TASK & CPU        02S0144
*                                      SERIALIZATION.                */
         L     @08,ACBAMWAP(,APACBPTR)                          02S0144
         TS    APAXSVSW(@08)                                    02S0144
*         BC(TSONMSK,FNDSAWA1);     /* IF NOT AVAILABLE, GO GETMAIN
*                                      NEW SA-WA.                    */
         BC    4,FNDSAWA1                                       02S0145
*         R0F=(APSVLN+APSCLN+@SIZDATD+7)/* R0 = LENGTH OF:           */
*             &'0000FFF8'X;         /* SAVEAREA + CONTROL WORD +
*                                      DYNAMIC AREA ROUNDED UPWARD TO
*                                      DOUBLEWORD BOUNDARY.          */
         LA    R0F,95                                           02S0146
         AL    R0F,@SIZDATD                                     02S0146
         N     R0F,@CF02455                                     02S0146
*         R1P=ACBAMWAP->APAXAPSV;   /* POINT TO ACB'S SA-WA. (AT
*                                      APSC)                         */
         L     @08,ACBAMWAP(,APACBPTR)                          02S0147
         L     R1P,APAXAPSV(,@08)                               02S0147
*         R1P->APSCCRSZ=R0F;        /* SET REQUIRED SIZE IN APSC     */
         STH   R0F,APSCCRSZ(,R1P)                               02S0148
*         R1P=R1P+APSCLN;           /* SKIP APSC. POINT AT APSV.     */
         LA    R1P,8(,R1P)                                      02S0149
*         R0F=CACBSAWA;             /* SHOW ACB'S SA-WA USED         */
         SLR   R0F,R0F                                          02S0150
*       END;                        /* ACB'S SA-WA SELECTED          */
*     ELSE                          /* IF ACB'S SA-WA NOT AVAILABLE, */
*FNDSAWA1:                          /* THEN GETMAIN A SA-WA          */
*       DO;                         /* USING IGTYGSV.                */
         B     @RC00142                                         02S0152
@RF00142 DS    0H                                               02S0152
FNDSAWA1 DS    0H                                               02S0153
*         DO;                       /* IGTYGSV LV(APSVLN+@SIZDATD)INI
*                                      TIAL(YES)                     */
*           RFY                                                 02S0154
*            (GPR00F,                                           02S0154
*             GPR01F) RSTD;         /* NEEDED REGISTERS              */
*           GPR00F=APSVLN+@SIZDATD; /* SET REG 0 TO SUBPOOL/LENGTH   */
         LA    GPR00F,80                                        02S0155
         AL    GPR00F,@SIZDATD                                  02S0155
*           GPR01F=0;               /* NO EXTRA STORAGE REQUIRED     */
         SLR   GPR01F,GPR01F                                    02S0156
*           CALL APCVZUAA;          /* OBTAIN INITIAL           02S0157
*                                      SAVEAREA-WORKAREA             */
         L     @15,APCTZUAA(,APCTPTR)                           02S0157
         BALR  @14,@15                                          02S0157
*           RFY                                                 02S0158
*            (GPR00F,                                           02S0158
*             GPR01F) UNRSTD;       /* FINISHED WITH REGISTERS       */
*         END;                      /* REG_1 -> SAVEAREA/WORKAREA
*                                      OBTAINED R1P -> OBTAINED SA-WA*/
*         R0F=CNEWSAWA;             /* SHOW NEW SA-WA USED           */
         LA    R0F,1                                            02S0160
*       END;                        /* NEW SA-WA SELECTED.           */
*                                                               02S0161
*     /***************************************************************/
*     /*                                                             */
*     /* SET R1P = @SA-WA & R0F TO INDICATE IF THE ACB'S SA-WA WAS   */
*     /* USED (=CACBSAWA IF ACB SA-WA USED & =CNEWSAWA IF NEW SA-WA  */
*     /* OBTAINED. R1P -> SA-WA. R0F = CACBSAWA×CNEWSAWA             */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0162
*   END;                            /* END OF CODE                   */
@RC00142 DS    0H                                               02S0163
*   RFY                                                         01S0163
*    (R0F,                                                      01S0163
*     R1P) RSTD;                    /* R1->SA-WA,               01S0163
*                                      R0=CACBSAWA×CNEWSAWA          */
*                                                               01S0163
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE SAVEAREA - WORKAREA. CHAIN NEW SAVEAREA INTO   */
*   /* CHAIN. INITIALIZE DYNAMIC AREA POINTER.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0164
*   DO;                             /* START OF CODE                 */
*                                                               02S0164
*     /***************************************************************/
*     /*                                                             */
*     /* ON ENTRY, R1->SA-WA & R0=CACBSAWA×CNEWSAWA. CHAIN NEW       */
*     /* SAVEAREA INTO OS CHAIN & POINT R13 AT NEW SAVEAREA. POINT   */
*     /* APDATA AT DYNAMIC WORKAREA. SET DSAWA TO INDICATE IF THE    */
*     /* SA-WA BELONGS TO THE ACB OR HAS BEEN GETMAIN'ED.            */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0165
*     RFY                                                       02S0165
*      (R0F,                                                    02S0165
*       R1P,                                                    02S0165
*       APDATA) RSTD;               /* REQUIRED REGISTERS            */
*     APSVNEXT=R1P;                 /* FORWARD CHAIN                 */
         ST    R1P,APSVNEXT(,APSVPTR)                           02S0166
*     R1P->APSVPREV=APSVPTR;        /* BACKWARD CHAIN                */
         ST    APSVPTR,APSVPREV(,R1P)                           02S0167
*     APSVPTR=R1P;                  /* POINT TO NEW SAVEAREA         */
         LR    APSVPTR,R1P                                      02S0168
*     RFY                                                       02S0169
*      (R1P) UNRSTD;                /* FINISHED WITH R1              */
*     APDATA=ADDR(APSV)+APSVLN;     /* POINT TO DYNAMIC AREA (AFTER
*                                      SAVEAREA).                    */
         LA    APDATA,80(,APSVPTR)                              02S0170
*     GEN(USING @DATD,APDATA)       /* TELL ASSEMBLER                */
*     NOSETS REFS(APDATA);                                      02S0171
         USING @DATD,APDATA
*     DSAWA=R0F;                    /* SAVE CACBSAWA×CNEWSAWA        */
         LR    DSAWA,R0F                                        02S0172
*     RFY                                                       02S0173
*      (R0F) UNRSTD;                /* INDICATOR IN DYNAMIC AREA.
*                                      SA-WA ESTABLISHED             */
*   END;                            /* END OF CODE                   */
*                                                               01S0175
*   /*****************************************************************/
*   /*                                                               */
*   /* DYNAMIC AREA NOW ESTABLISHED. IT MAY BE USED FOR FURTHER      */
*   /* CALCULATIONS                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0175
*   RFY                                                         01S0175
*    (APDATA) RSTD;                 /* RESTRICT DYNAMIC POINTER      */
*   GEN(USING @DATD,APDATA)         /* TELL ASSEMBLER OF ADDRESSING  */
*   REFS(APDATA)                    /* TELL COMPILER WHAT THE        */
*       NOSETS                      /* GENERATE STATEMENT REQUIRES   */
*       SEQFLOW;                    /* OF COMPILER.                  */
*                                                               01S0176
         USING @DATD,APDATA
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD & INITIALIZE THE APCW. THIS CONTROL BLOCK IS BUILT IN   */
*   /* THE DYNAMIC AREA.                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0177
*   DO;                             /* START OF CODE                 */
*                                                               02S0177
*     /***************************************************************/
*     /*                                                             */
*     /* INITIALIZE PART OF THE APCW. THE REST OF THE APCW IS BUILT  */
*     /* AS THE PARAMETERS ARE VALIDATED.                            */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0178
*     RFY                                                       02S0178
*      (APCWPTR) RSTD;              /* SET REGISTER APCWPTR TO       */
*     APCWPTR=ADDR(DAPCW);          /* ADDRESS OF APCW               */
         LA    APCWPTR,DAPCW                                    02S0179
*     RFY                                                       02S0180
*      (APCW) BASED(APCWPTR);       /* TELL COMPILER                 */
*     APCW(1:LENGTH(APCW)-LENGTH(APCWAPEM))=/* ZERO HEADER PORTION   */
*         APCW(1:LENGTH(APCW)-LENGTH(APCWAPEM))&&/* OF APCW CONTAINED*/
*         APCW(1:LENGTH(APCW)-LENGTH(APCWAPEM));/* IN WORKAREA.      */
         XC    APCW(112,APCWPTR),APCW(APCWPTR)                  02S0181
*     APCWID=APCWIDC;               /* SET IN-CORE ID                */
         MVC   APCWID(4,APCWPTR),@CC01690                       02S0182
*     APCWAPEM=IGTMBREM;            /* BUILD SKELETON APEM           */
         L     @01,APCTZMBR(,APCTPTR)                           02S0183
         L     @01,IGTMBRAE(,@01)                               02S0183
         MVC   APCWAPEM(128,APCWPTR),IGTMBREM(@01)              02S0183
*     APCWAPIN=ADDR(APIN);          /* USER'S INPUT PARM ADDRESS     */
         ST    RAPINPTR,APCWAPIN(,APCWPTR)                      02S0184
*     APCWAPUT=ADDR(APUT);          /* APUT ADDRESS                  */
         ST    APUTPTR,APCWAPUT(,APCWPTR)                       02S0185
*     APCWAPSV=APSVPREV;            /* USER'S SAVEAREA ADDRESS       */
         L     @15,APSVPREV(,APSVPTR)                           02S0186
         ST    @15,APCWAPSV(,APCWPTR)                           02S0186
*     APCWACB=ADDR(IFGACB);         /* ACB ADDRESS (OR 0)            */
         ST    APACBPTR,APCWACB(,APCWPTR)                       02S0187
*     APCWAPCP=ADDR(APCP);          /* APCP ENTRY ADDRESS            */
         ST    APCPPTR,APCWAPCP(,APCWPTR)                       02S0188
*     APCWAPOP=APCPAPOP;            /* FUNCTION OP-CODE              */
         MVC   APCWAPOP(2,APCWPTR),APCPAPOP(APCPPTR)            02S0189
*     APCWAPAL=ADDR(APCPAPAL);      /* ALGORITHM-DEPENDENT SWITCHES
*                                      (SEE MEMBER 'IGTXAPAL').      */
*                                                               02S0190
         LA    @15,APCPAPAL(,APCPPTR)                           02S0190
         ST    @15,APCWAPAL(,APCWPTR)                           02S0190
*     /***************************************************************/
*     /*                                                             */
*     /* USE APCW TO POINT TO CONTROL BLOCKS INSTEAD OF REGISTERS.   */
*     /* THIS ALLOWS PL/S COMPILER OPTIMIZATION OF REGISTERS.        */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0191
*     RFY                                                       02S0191
*      (RAPINPTR,                                               02S0191
*       APUTPTR,                                                02S0191
*       APACBPTR) UNRSTD;           /* FINISHED WITH POINTERS        */
*     RFY                                                       02S0192
*      (APCPPTR) RSTD;              /* USE FOR PERFORMANCE           */
*     RFY                                                       02S0193
*       APIN BASED(APCWAPIN);       /* USER'S INPUT PARAMETER LIST   */
*     RFY                                                       02S0194
*       APUT BASED(APCWAPUT);       /* VPSS USER TABLE               */
*     RFY                                                       02S0195
*       APCP BASED(APCPPTR);        /* VPSS CALL PROCESSING SWITCHES */
*     RFY                                                       02S0196
*       APEM BASED(APCWPTR+(ADDR(APCWAPEM)-ADDR(APCW)));/* ERR MSG   */
*     RFY                                                       02S0197
*       IFGACB BASED(APCWACB);      /* VPSS ACB                      */
*     RFY                                                       02S0198
*       APCX BASED(ACBAMAX);        /* VPSS ACB CALL EXTENSION       */
*     RFY                                                       02S0199
*       APAX BASED(ACBAMWAP);       /* VPSS ACCESS METHOD EXTENSION  */
*   END;                            /* END OF CODE                   */
*   RFY                                                         01S0201
*    (APCWPTR) RSTD;                /* TELL COMPILER OF POINTER      */
*   RFY                                                         01S0202
*    (APCW) BASED(APCWPTR);         /* TO THE APCW                   */
         EJECT
*                                                               01S0203
*   /*****************************************************************/
*   /*                                                               */
*   /* VALIDATE THE INPUT PARAMETERS & THE CURRENT ENVIRONMENT.      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0203
*   DO;                             /* START OF CODE                 */
*                                                               02S0203
*     /***************************************************************/
*     /*                                                             */
*     /* VALIDATE THE INPUT DATA & THE CURRENT ENVIRONMENT. IF AN    */
*     /* ERROR IS DETECTED, SET APCWRCDE, APCWR15C, & APEMMSGN. SAVE */
*     /* THE FIRST OCCURENCE OF THE HIGHEST ERROR CODE.              */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0204
*     DO;                           /* START OF CODE                 */
*                                                               03S0204
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE NUMBER OF INPUT PARAMETERS. PLACE IN APCWNBRI.  */
*       /* THEN INSURE NUMBER OF PARAMETERS IS WITHIN RANGE FOR THE  */
*       /* SPECIFIED FUNCTION.                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0205
*       DAPINPTR=ADDR(APIN);        /* POINT TO INPUT LIST           */
         L     @11,APCWAPIN(,APCWPTR)                           03S0205
         LR    DAPINPTR,@11                                     03S0205
*       DO APCWNBRI=1 BY 1          /* DETERMINE NUMBER OF           */
*             WHILE DAPINPTR->APINAP1E=BOFF;/* PARMS. LAST ENTRY HAS */
         LA    @11,1                                            03S0206
         ST    @11,APCWNBRI(,APCWPTR)                           03S0206
         B     @DE00206                                         03S0206
@DL00206 DS    0H                                               03S0207
*         DAPINPTR=DAPINPTR+4;      /* X'80' IN HI-ORDER BYTE.       */
         AL    DAPINPTR,@CF00091                                03S0207
*       END;                        /* APCWNBRI SET                  */
         LA    @11,1                                            03S0208
         AL    @11,APCWNBRI(,APCWPTR)                           03S0208
         ST    @11,APCWNBRI(,APCWPTR)                           03S0208
@DE00206 TM    APINAP1E(DAPINPTR),B'10000000'                   03S0208
         BZ    @DL00206                                         03S0208
*       IF(APCWNBRI<APCPMINP)×      /* IF TOO FEW PARMS OR           */
*           (APCWNBRI>APCPMAXP) THEN/* TOO MANY PARMS, THEN ERROR    */
         L     @11,APCWNBRI(,APCWPTR)                           03S0209
         CH    @11,APCPMINP(,APCPPTR)                           03S0209
         BL    @RT00209                                         03S0209
         CH    @11,APCPMAXP(,APCPPTR)                           03S0209
         BNH   @RF00209                                         03S0209
@RT00209 DS    0H                                               03S0210
*         IF APCWR15B<APCCRERR THEN /* IF THIS IS HIGHEST ERROR      */
         CLI   APCWR15B(APCWPTR),8                              03S0210
         BNL   @RF00210                                         03S0210
*           DO;                     /* CODE, THEN LOG ERROR.         */
*             APCWR15B=APCCRERR;    /* REG 15 ERROR CODE             */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0212
*             APCWRCN=APCCC009;     /* RETURN CODE                   */
         MVI   APCWRCN(APCWPTR),X'09'                           03S0213
*             APEMMSGN=APCMC009;    /* SYNAD MESSAGE CODE APEMVALN
*                                      NOT USED                      */
         MVC   APEMMSGN+112(4,APCWPTR),@CF00558                 03S0214
*           END;                    /* ERROR INDICATED               */
*     END;                          /* END OF CHKNBRI CODE           */
@RF00210 DS    0H                                               03S0216
@RF00209 DS    0H                                               03S0217
*     DO;                           /* START OF CHKAPFN CODE         */
*                                                               03S0217
*       /*************************************************************/
*       /*                                                           */
*       /* SET APCWAPFN TO FUNCTION MNEMONIC                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0218
*       IF APCWNBRI>                /* IF AN LEAST ENOUGH PARMS      */
*           ((ADDR(APINAFNC)-ADDR(APIN))/4) THEN/* TO HAVE FUNCTION  */
         L     @11,APCWNBRI(,APCWPTR)                           03S0218
         C     @11,@CF00053                                     03S0218
         BNH   @RF00218                                         03S0218
*         APCWAPFN=APINFUNC;        /* THEN SAVE, IN APCW            */
         L     @11,APCWAPIN(,APCWPTR)                           03S0219
         L     @11,APINAFNC(,@11)                               03S0219
         MVC   APCWAPFN(4,APCWPTR),APINFUNC(@11)                03S0219
*       ELSE                        /* IF TOO FEW PARMS, THEN        */
*         APCWAPFN='';              /* LEAVE BLANK.                  */
*                                                               03S0220
         B     @RC00218                                         03S0220
@RF00218 MVI   APCWAPFN(APCWPTR),C' '                           03S0220
         MVC   APCWAPFN+1(3,APCWPTR),APCWAPFN(APCWPTR)          03S0220
*       /*************************************************************/
*       /*                                                           */
*       /* INSURE THE SPECIFIED FUNCTION MNEMONIC IS VALID           */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0221
*       IF APCPSFNV=BOFF&           /* IF FUNCTION NOT VALID         */
*           APCWR15B<APCCRERR THEN  /* AND IS HIGHEST ERROR THEN     */
@RC00218 TM    APCPSFNV(APCPPTR),B'10000000'                    03S0221
         BNZ   @RF00221                                         03S0221
         CLI   APCWR15B(APCWPTR),8                              03S0221
         BNL   @RF00221                                         03S0221
*         DO;                       /* LOG ERROR.                    */
*           APEMVALN=APCMK012;      /* NAME OF FIELD IN ERROR        */
         LA    @11,112                                          03S0223
         ALR   @11,APCWPTR                                      03S0223
         MVC   APEMVALN(4,@11),@CF00542                         03S0223
*           APCWR15B=APCCRERR;      /* SHOW ERROR CONDITION          */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0224
*           IF APCPSFNS=BON THEN    /* SET CODES BASED ON ERROR TYPE */
         TM    APCPSFNS(APCPPTR),B'01000000'                    03S0225
         BNO   @RF00225                                         03S0225
*             DO;                   /* (UNSUPPORTED OR UNKNOWN)      */
*               APCWRCN=APCCC001;   /* RETURN CODE                   */
         MVI   APCWRCN(APCWPTR),X'01'                           03S0227
*               APEMMSGN=APCMC001;  /* SYNAD MESSAGE CODE            */
         MVC   APEMMSGN(4,@11),@CF00053                         03S0228
*             END;                  /* UNSUPPORTED IFUNC PROCESSED   */
*           ELSE                    /* IF UNKNOWN FUNCTION,          */
*             DO;                   /* THEN DO                       */
         B     @RC00225                                         03S0230
@RF00225 DS    0H                                               03S0231
*               APCWRCN=APCCC002;   /* RETURN CODE                   */
         MVI   APCWRCN(APCWPTR),X'02'                           03S0231
*               APEMMSGN=APCMC002;  /* SYNAD MESSAGE CODE            */
         MVC   APEMMSGN+112(4,APCWPTR),@CF00096                 03S0232
*             END;                  /* UNKNOWN IFUNC PROCESSED       */
*         END;                      /* INVALID FUNCTION PROCESSED    */
@RC00225 DS    0H                                               03S0235
*     END;                          /* END OF CHKAPFN CODE           */
@RF00221 DS    0H                                               03S0236
*     DO;                           /* START OF CHKACBE CODE         */
*                                                               03S0236
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR THE FOLLOWING 3 ERROR CONDITIONS: 1) APINUNIT IS*/
*       /* INVALID (APCWACB=-1), 2) ACB EXISTS (APCWACB>0) BUT MAY   */
*       /* NOT (APCPSACN =1), AND 3) ACB DOES NOT EXIST (APCWACB=0)  */
*       /* BUT MUST (APCPSACR =1). IF AN ERROR IS DETECTED, SET ERROR*/
*       /* INDICATORS.                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0237
*       IF APCWACBF<0 THEN          /* INVALID UNIT NUMBER IS ERROR  */
         L     @11,APCWACBF(,APCWPTR)                           03S0237
         LTR   @11,@11                                          03S0237
         BNM   @RF00237                                         03S0237
*         IF APCWR15B<APCCRERR THEN /* IF ERROR CODE HIGHER THAN     */
         CLI   APCWR15B(APCWPTR),8                              03S0238
         BNL   @RF00238                                         03S0238
*           DO;                     /* CURRENT CODE, LOG ERROR.      */
*             APEMVALN=APCMK011;    /* NAME OF FIELD IN ERROR        */
         LA    @11,112                                          03S0240
         ALR   @11,APCWPTR                                      03S0240
         MVC   APEMVALN(4,@11),@CF00561                         03S0240
*             APEMMSGN=APCMC003;    /* ERROR MESSAGE NUMBER          */
         MVC   APEMMSGN(4,@11),@CF00065                         03S0241
*             APCWRCN=APCCC003;     /* USER RETURN CODE              */
         MVI   APCWRCN(APCWPTR),X'03'                           03S0242
*             APCWR15B=APCCRERR;    /* SET REGISTER 15 TO ERROR      */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0243
*           END;                    /* ERROR LOGGED.                 */
*         ELSE                                                  03S0245
*           ;                       /* COMPILER REQUIREMENT          */
@RF00238 DS    0H                                               03S0246
*       ELSE                        /* IF OK SO FAR --               */
*         IF APCWACB>0&             /* IF ACB EXISTS BUT             */
*             APCPSACN=BON THEN     /* MAY NOT, IS ERROR.            */
         B     @RC00237                                         03S0246
@RF00237 L     @11,APCWACB(,APCWPTR)                            03S0246
         LTR   @11,@11                                          03S0246
         BNP   @RF00246                                         03S0246
         TM    APCPSACN(APCPPTR),B'00100000'                    03S0246
         BNO   @RF00246                                         03S0246
*           IF(APCWR15B<APCCRWRN)×  /* IF THIS ERROR CODE IS         */
*               (APCWR15B<APCCRERR& /* HIGHER THAN CURRENT ERROR     */
*               APCPSACW=BOFF) THEN /* CODE, THEN                    */
         CLI   APCWR15B(APCWPTR),4                              03S0247
         BL    @RT00247                                         03S0247
         CLI   APCWR15B(APCWPTR),8                              03S0247
         BNL   @RF00247                                         03S0247
         TM    APCPSACW(APCPPTR),B'00010000'                    03S0247
         BNZ   @RF00247                                         03S0247
@RT00247 DS    0H                                               03S0248
*             DO;                   /* LOG THE ERROR.                */
*               APEMVALN=APCMK011;  /* NAME OF FIELD IN ERROR        */
         LA    @11,112                                          03S0249
         ALR   @11,APCWPTR                                      03S0249
         MVC   APEMVALN(4,@11),@CF00561                         03S0249
*               APEMMSGN=APCMC005;  /* ERROR MESSAGE NUMBER          */
         MVC   APEMMSGN(4,@11),@CF00553                         03S0250
*               APCWRCN=APCCC005;   /* USER RETURN CODE              */
         MVI   APCWRCN(APCWPTR),X'05'                           03S0251
*               APCWR15B=APCCRERR;  /* SET REGISTER 15 TO ERROR      */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0252
*               IF APCPSACW=BON THEN/* IF ONLY WARNING CONDITION,    */
         TM    APCPSACW(APCPPTR),B'00010000'                    03S0253
         BNO   @RF00253                                         03S0253
*                 APCWR15B=APCCRWRN;/* THEN CHANGE R15 VALUE         */
         MVI   APCWR15B(APCWPTR),X'04'                          03S0254
*             END;                  /* EXISTING ACB PROCESSED        */
*           ELSE                                                03S0256
*             ;                     /* COMPILER REQUIREMENT          */
@RF00247 DS    0H                                               03S0257
*         ELSE                      /* IF OK SO FAR --               */
*           IF APCWACB=0&           /* IF ACB DOES NOT EXIST         */
*               APCPSACR=BON THEN   /* BUT MUST, THEN IS ERROR       */
         B     @RC00246                                         03S0257
@RF00246 L     @11,APCWACB(,APCWPTR)                            03S0257
         LTR   @11,@11                                          03S0257
         BNZ   @RF00257                                         03S0257
         TM    APCPSACR(APCPPTR),B'10000000'                    03S0257
         BNO   @RF00257                                         03S0257
*             IF(APCWR15B<APCCRWRN)×/* IF THIS ERROR CODE IS         */
*                 (APCWR15B<APCCRERR&/* HIGHER THAN CURRENT ERROR    */
*                 APCPSACW=BOFF) THEN/* CODE, THEN                   */
         CLI   APCWR15B(APCWPTR),4                              03S0258
         BL    @RT00258                                         03S0258
         CLI   APCWR15B(APCWPTR),8                              03S0258
         BNL   @RF00258                                         03S0258
         TM    APCPSACW(APCPPTR),B'00010000'                    03S0258
         BNZ   @RF00258                                         03S0258
@RT00258 DS    0H                                               03S0259
*               DO;                 /* LOG THE ERROR.                */
*                 APEMVALN=APCMK011;/* NAME OF FIELD IN ERROR        */
         LA    @11,112                                          03S0260
         ALR   @11,APCWPTR                                      03S0260
         MVC   APEMVALN(4,@11),@CF00561                         03S0260
*                 APEMMSGN=APCMC004;/* ERROR MESSAGE NUMBER          */
         MVC   APEMMSGN(4,@11),@CF00091                         03S0261
*                 APCWRCN=APCCC004; /* USER RETURN CODE              */
         MVI   APCWRCN(APCWPTR),X'04'                           03S0262
*                 APCWR15B=APCCRERR;/* SET REGISTER 15 TO ERROR      */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0263
*                 IF APCPSACW=BON THEN/* IF ONLY WARNING CONDITION,  */
         TM    APCPSACW(APCPPTR),B'00010000'                    03S0264
         BNO   @RF00264                                         03S0264
*                   APCWR15B=APCCRWRN;/* THEN CHANGE R15 VALUE       */
         MVI   APCWR15B(APCWPTR),X'04'                          03S0265
*               END;                /* NON-EXISTANT ACB PROCESSED    */
*             ELSE                                              03S0267
*               ;                   /* COMPILER REQUIREMENT          */
@RF00258 DS    0H                                               03S0268
*     END;                          /* END OF CHKACBE CODE           */
@RC00258 DS    0H                                               03S0268
@RF00257 DS    0H                                               03S0268
@RC00246 DS    0H                                               03S0268
@RC00237 DS    0H                                               03S0269
*     DO;                           /* START OF CHKACBO CODE         */
*                                                               03S0269
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR THE FOLLOWING 2 ERROR CONDITIONS -- 1) ACB OPEN */
*       /* (ACBOPEN=1) BUT MAY NOT (APCPSOPN=1), AND 2) ACB CLOSED   */
*       /* (ACBOPEN=0) BUT MUST BE OPEN (APCTSOPR=1). IF AN ERROR IS */
*       /* DETECTED, SET ERROR INDICATORS AND FAIL THE REQUEST. NOTE:*/
*       /* MUST INSURE ACB EXISTS BEFORE REFERENCING ACB FIELDS.     */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0270
*       IF APCPSOPN=BON&            /* IF THE ACB MUST BE CLOSED     */
*           APCWACB>0&              /* AND THE ACB EXISTS & IS OPEN, */
*           ACBOPEN=BON THEN        /* THEN IS ERROR CONDITION       */
         TM    APCPSOPN(APCPPTR),B'00100000'                    03S0270
         BNO   @RF00270                                         03S0270
         L     @11,APCWACB(,APCWPTR)                            03S0270
         LTR   @11,@11                                          03S0270
         BNP   @RF00270                                         03S0270
         TM    ACBOPEN(@11),B'00010000'                         03S0270
         BNO   @RF00270                                         03S0270
*         IF(APCWR15B<APCCRWRN)×    /* IF THIS ERROR CODE IS         */
*             (APCWR15B<APCCRERR&   /* HIGHER THAN CURRENT ERROR     */
*             APCPSOPW=BOFF) THEN   /* CODE, THEN                    */
         CLI   APCWR15B(APCWPTR),4                              03S0271
         BL    @RT00271                                         03S0271
         CLI   APCWR15B(APCWPTR),8                              03S0271
         BNL   @RF00271                                         03S0271
         TM    APCPSOPW(APCPPTR),B'00010000'                    03S0271
         BNZ   @RF00271                                         03S0271
@RT00271 DS    0H                                               03S0272
*           DO;                     /* LOG THE ERROR.                */
*             APEMVALN=APCMK011;    /* NAME OF FIELD IN ERROR        */
         LA    @11,112                                          03S0273
         ALR   @11,APCWPTR                                      03S0273
         MVC   APEMVALN(4,@11),@CF00561                         03S0273
*             APEMMSGN=APCMC006;    /* ERROR MESSAGE NUMBER          */
         MVC   APEMMSGN(4,@11),@CF00226                         03S0274
*             APCWRCN=APCCC006;     /* USER RETURN CODE              */
         MVI   APCWRCN(APCWPTR),X'06'                           03S0275
*             APCWR15B=APCCRERR;    /* SET REGISTER 15 TO ERROR      */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0276
*             IF APCPSOPW=BON THEN  /* IF ONLY WARNING CONDITION,    */
         TM    APCPSOPW(APCPPTR),B'00010000'                    03S0277
         BNO   @RF00277                                         03S0277
*               APCWR15B=APCCRWRN;  /* THEN CHANGE R15 VALUE         */
         MVI   APCWR15B(APCWPTR),X'04'                          03S0278
*           END;                    /* OPEN ACB PROCESSED            */
*         ELSE                                                  03S0280
*           ;                       /* COMPILER REQUIREMENT          */
@RF00271 DS    0H                                               03S0281
*       ELSE                        /* IF OK SO FAR --               */
*         IF APCPSOPR=BON&          /* IF THE ACB MUST BE OPEN       */
*             (APCWACB^>0×          /* AND THE ACB DOES NOT EXIST    */
*             ACBOPEN=BOFF) THEN    /* OR IS CLOSED, IS ERROR.       */
         B     @RC00270                                         03S0281
@RF00270 TM    APCPSOPR(APCPPTR),B'10000000'                    03S0281
         BNO   @RF00281                                         03S0281
         L     @11,APCWACB(,APCWPTR)                            03S0281
         LTR   @11,@11                                          03S0281
         BNP   @RT00281                                         03S0281
         TM    ACBOPEN(@11),B'00010000'                         03S0281
         BNZ   @RF00281                                         03S0281
@RT00281 DS    0H                                               03S0282
*           IF(APCWR15B<APCCRWRN)×  /* IF THIS ERROR CODE IS         */
*               (APCWR15B<APCCRERR& /* HIGHER THAN CURRENT ERROR     */
*               APCPSOPW=BOFF) THEN /* CODE, THEN                    */
         CLI   APCWR15B(APCWPTR),4                              03S0282
         BL    @RT00282                                         03S0282
         CLI   APCWR15B(APCWPTR),8                              03S0282
         BNL   @RF00282                                         03S0282
         TM    APCPSOPW(APCPPTR),B'00010000'                    03S0282
         BNZ   @RF00282                                         03S0282
@RT00282 DS    0H                                               03S0283
*             DO;                   /* LOG THE ERROR.                */
*               APEMVALN=APCMK011;  /* NAME OF FIELD IN ERROR        */
         LA    @11,112                                          03S0284
         ALR   @11,APCWPTR                                      03S0284
         MVC   APEMVALN(4,@11),@CF00561                         03S0284
*               APEMMSGN=APCMC007;  /* ERROR MESSAGE NUMBER          */
         MVC   APEMMSGN(4,@11),@CF00395                         03S0285
*               APCWRCN=APCCC007;   /* USER RETURN CODE              */
         MVI   APCWRCN(APCWPTR),X'07'                           03S0286
*               APCWR15B=APCCRERR;  /* SET REGISTER 15 TO ERROR      */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0287
*               IF APCPSOPW=BON THEN/* IF ONLY WARNING CONDITION,    */
         TM    APCPSOPW(APCPPTR),B'00010000'                    03S0288
         BNO   @RF00288                                         03S0288
*                 APCWR15B=APCCRWRN;/* THEN CHANGE R15 VALUE         */
         MVI   APCWR15B(APCWPTR),X'04'                          03S0289
*             END;                  /* CLOSED ACB PROCESSED          */
*           ELSE                                                03S0291
*             ;                     /* COMPILER REQUIREMENT          */
@RF00282 DS    0H                                               03S0292
*     END;                          /* END OF CHKACBO CODE           */
@RC00282 DS    0H                                               03S0292
@RF00281 DS    0H                                               03S0292
@RC00270 DS    0H                                               03S0293
*     DO;                           /* START OF CHKAPRL CODE         */
*                                                               03S0293
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE APRL MUST EXIST, INSURE THE FOLLOWING CONDITIONS   */
*       /* EXIST: 1) PARAMETER LIST HAS AT LEAST 3 ENTRIES, AND 2)   */
*       /* PARAMETER 3 POINTS TO AN APRL. IF THE APRL EXISTS, SET    */
*       /* APCWAPRL TO ITS ADDRESS. IF THE APRL DOES NOT EXIST, SET  */
*       /* APCWAPRL TO 0 (APRL NOT SPECIFIED) OR -1 (APRL SPECIFIED  */
*       /* BUT IS INVALID).                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0294
*       IF APCPSARR=BON THEN        /* IF THE APRL MUST EXIST,       */
         TM    APCPSARR(APCPPTR),B'10000000'                    03S0294
         BNO   @RF00294                                         03S0294
*         DO;                       /* THEN CONTINUE INSPECTION.     */
*           IF APCWNBRI>            /* IF AT LEAST APINAPRL EXISTS   */
*               ((ADDR(APINAAR)-ADDR(APIN))/4) THEN/* THEN APRL GIVEN*/
         L     @11,APCWNBRI(,APCWPTR)                           03S0296
         C     @11,@CF00096                                     03S0296
         BNH   @RF00296                                         03S0296
*             DO;                   /* FIND APRL                     */
*               DAPRLPTR=APINAPRL   /* FIND APRL AND                 */
*                   &CLRHIBIT;      /* CLEAR HI-BIT OF WORD.         */
         L     @11,APCWAPIN(,APCWPTR)                           03S0298
         L     @11,APINAAR(,@11)                                03S0298
         L     DAPRLPTR,APINAPRL(,@11)                          03S0298
         N     DAPRLPTR,@CF02416                                03S0298
*               IF(DAPRLPTR^=0)&    /* IF APRL SPECIFIED BUT         */
*                   (DAPRLPTR->APRLID^=APRLIDC)/* IS INVALID         */
*                 THEN                                          03S0299
         LTR   DAPRLPTR,DAPRLPTR                                03S0299
         BZ    @RF00299                                         03S0299
         CLC   APRLID(4,DAPRLPTR),@CC00487                      03S0299
         BE    @RF00299                                         03S0299
*                 DAPRLPTR=-1;      /* THEN SET PTR TO -1.           */
         SLR   DAPRLPTR,DAPRLPTR                                03S0300
         BCTR  DAPRLPTR,0                                       03S0300
*             END;                  /* EXISTING APRL PROCESSED       */
*           ELSE                    /* IF TOO FEW PARMS GIVEN,       */
*             DAPRLPTR=0;           /* SHOW THE FIELD DOESN'T EXIST. */
         B     @RC00296                                         03S0302
@RF00296 SLR   DAPRLPTR,DAPRLPTR                                03S0302
*           APCWAPRL=DAPRLPTR;      /* SAVE APRL ADDRESS             */
@RC00296 ST    DAPRLPTR,APCWAPRL(,APCWPTR)                      03S0303
*           RFY                                                 03S0304
*            (APRL) BASED(APCWAPRL);/* SHOW APCW NOW POINTS TO APRL  */
*           IF APCWAPRL^>0 THEN     /* IF NO APRL, IS ERROR --       */
         SLR   @11,@11                                          03S0305
         L     @09,APCWAPRL(,APCWPTR)                           03S0305
         CR    @09,@11                                          03S0305
         BH    @RF00305                                         03S0305
*             IF APCWR15B<APCCRERR THEN/* IF THIS ERROR CODE HIGHER  */
         CLI   APCWR15B(APCWPTR),8                              03S0306
         BNL   @RF00306                                         03S0306
*               DO;                 /* THAN CURRENT, LOG IT.         */
*                 APEMVALN=APCMK014;/* NAME OF FIELD IN ERROR        */
         LA    @09,14                                           03S0308
         LA    @15,112                                          03S0308
         ALR   @15,APCWPTR                                      03S0308
         ST    @09,APEMVALN(,@15)                               03S0308
*                 APCWR15B=APCCRERR;/* SET REGISTER 15 TO ERROR.     */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0309
*                 IF DAPRLPTR=0 THEN/* GENERATE ERROR FOR            */
         CR    DAPRLPTR,@11                                     03S0310
         BNE   @RF00310                                         03S0310
*                   DO;             /* EITHER MISSING OR INVALID.    */
*                     APEMMSGN=APCMC011;/* MISSING                   */
         ST    @09,APEMMSGN(,@15)                               03S0312
*                     APCWRCN=APCCC011;/* MISSING                    */
         MVI   APCWRCN(APCWPTR),X'0B'                           03S0313
*                   END;            /* MISSING PROCESSED.            */
*                 ELSE              /* PROCESS INVALID               */
*                   DO;             /* APRL ENTRY.                   */
         B     @RC00310                                         03S0315
@RF00310 DS    0H                                               03S0316
*                     APEMMSGN=APCMC010;/* INVALID                   */
         MVC   APEMMSGN+112(4,APCWPTR),@CF00561                 03S0316
*                     APCWRCN=APCCC010;/* INVALID                    */
         MVI   APCWRCN(APCWPTR),X'0A'                           03S0317
*                     APCWRCT=APCCTICB;/* INVALID CONTROL BLOCK      */
         MVI   APCWRCT(APCWPTR),X'04'                           03S0318
*                   END;            /* INVALID PROCESSED.            */
*               END;                /* APRL ERROR LOGGED.            */
@RC00310 DS    0H                                               03S0321
*         END;                      /* APRL PARAMETER PROCESSED.     */
@RF00306 DS    0H                                               03S0321
@RF00305 DS    0H                                               03S0322
*     END;                          /* END OF CHKAPRL CODE.          */
@RF00294 DS    0H                                               03S0323
*     DO;                           /* START OF CHKAPIO CODE         */
*                                                               03S0323
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE APIO MUST EXIST, INSURE THE FOLLOWING CONDITIONS   */
*       /* EXIST: 1) APRL EXISTS, 2) APRL SHOWS THAT AN APIO EXISTS  */
*       /* (APRLXIO=1), AND 3) THE APIO IS VALID. IF THE APIO DOES   */
*       /* NOT EXIST, SET APCWAPIO TO 0 (APIO NOT SPECIFIED) OR -1   */
*       /* (APIO SPECIFIED NOT IS INVALID).                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0324
*       IF APCPSIOR=BON THEN        /* IF THE APIO MUST EXIST,       */
         TM    APCPSIOR(APCPPTR),B'10000000'                    03S0324
         BNO   @RF00324                                         03S0324
*         DO;                       /* THEN CONTINUE INSPECTION.     */
*           RFY                                                 03S0326
*             IFGACB BASED(APRLACB);/* USE APRL POINTER SINCE APCWACB
*                                      NOT NECESSARILY OK.           */
*           IF APCWAPRL>0&          /* APRL MUST EXIST TO FIND APIO  */
*               APRLXIO=BON THEN    /* INSURE XLTE REQUEST ISSUED.   */
         SLR   @11,@11                                          03S0327
         L     @09,APCWAPRL(,APCWPTR)                           03S0327
         CR    @09,@11                                          03S0327
         BNH   @RF00327                                         03S0327
         TM    APRLXIO(@09),B'00000100'                         03S0327
         BNO   @RF00327                                         03S0327
*             DO;                   /* FIND APIO USING APRL.         */
*               IF APRLAPIO>0&      /* VALIDATE APRLAPIO. MUST BE    */
*                   APRLAPIO<=APDXIOCT THEN/* VALID APDXAPIO NUMBER. */
         L     @02,APRLAPIO(,@09)                               03S0329
         CR    @02,@11                                          03S0329
         BNH   @RF00329                                         03S0329
         L     @11,APRLACB(,@09)                                03S0329
         L     @11,ACBDEB-1(,@11)                               03S0329
         L     @11,DEBIRBAD(,@11)                               03S0329
         CH    @02,APDXIOCT(,@11)                               03S0329
         BH    @RF00329                                         03S0329
*                 DAPIOPTR=APDXAPIO(APRLAPIO);/* FIND APIO.          */
         ST    @02,@TF00001                                     03S0330
         L     @09,@TF00001                                     03S0330
         SLA   @09,2                                            03S0330
         L     DAPIOPTR,APDXAPIO-4(@09,@11)                     03S0330
*               ELSE                /* APIO GIVEN BUT INVALID SO     */
*                 DAPIOPTR=-1;      /* SET PTR TO -1.                */
         B     @RC00329                                         03S0331
@RF00329 SLR   DAPIOPTR,DAPIOPTR                                03S0331
         BCTR  DAPIOPTR,0                                       03S0331
*             END;                  /* EXISTING APIO PROCESSED       */
*           ELSE                    /* IF APIO NOT SPECIFIED,        */
*             DAPIOPTR=0;           /* SHOW THE FIELD DOESN'T EXIST. */
         B     @RC00327                                         03S0333
@RF00327 SLR   DAPIOPTR,DAPIOPTR                                03S0333
*           RFY                                                 03S0334
*             IFGACB BASED(APCWACB);/* REVERT TO APCW POINTER        */
@RC00327 DS    0H                                               03S0335
*           APCWAPIO=DAPIOPTR;      /* SAVE APIO ADDRESS             */
         ST    DAPIOPTR,APCWAPIO(,APCWPTR)                      03S0335
*           RFY                                                 03S0336
*            (APIO) BASED(APCWAPIO);/* SHOW APCW NOW POINTS TO APIO  */
*           IF APCWAPIO^>0 THEN     /* IF NO APIO, IS ERROR --       */
         SLR   @11,@11                                          03S0337
         L     @09,APCWAPIO(,APCWPTR)                           03S0337
         CR    @09,@11                                          03S0337
         BH    @RF00337                                         03S0337
*             IF APCWR15B<APCCRERR THEN/* IF THIS ERROR CODE HIGHER  */
         CLI   APCWR15B(APCWPTR),8                              03S0338
         BNL   @RF00338                                         03S0338
*               DO;                 /* THAN CURRENT, LOG IT.         */
*                 APEMVALN=APCMK052;/* NAME OF FIELD IN ERROR (APRL) */
         LA    @09,112                                          03S0340
         ALR   @09,APCWPTR                                      03S0340
         MVC   APEMVALN(4,@09),@CF00679                         03S0340
*                 APCWR15B=APCCRERR;/* SET REGISTER 15 TO ERROR.     */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0341
*                 IF DAPIOPTR=0 THEN/* GENERATE ERROR FOR            */
         CR    DAPIOPTR,@11                                     03S0342
         BNE   @RF00342                                         03S0342
*                   DO;             /* EITHER NOT TRANSLATED OR BAD. */
*                     APEMMSGN=APCMC013;/* NOT TRANSLATED            */
         MVC   APEMMSGN(4,@09),@CF00433                         03S0344
*                     APCWRCN=APCCC013;/* NOT TRANSLATED             */
         MVI   APCWRCN(APCWPTR),X'0D'                           03S0345
*                   END;            /* NOT TRANSLATED                */
*                 ELSE              /* PROCESS INVALID               */
*                   DO;             /* APIO ENTRY.                   */
         B     @RC00342                                         03S0347
@RF00342 DS    0H                                               03S0348
*                     APEMMSGN=APCMC012;/* INVALID                   */
         MVC   APEMMSGN+112(4,APCWPTR),@CF00578                 03S0348
*                     APCWRCN=APCCC012;/* INVALID                    */
         MVI   APCWRCN(APCWPTR),X'0C'                           03S0349
*                     APCWRCT=APCCTICB;/* INVALID CONTROL BLOCK      */
         MVI   APCWRCT(APCWPTR),X'04'                           03S0350
*                   END;            /* INVALID PROCESSED.            */
*               END;                /* APIO ERROR LOGGED.            */
@RC00342 DS    0H                                               03S0353
*         END;                      /* APIO PARAMETER PROCESSED.     */
@RF00338 DS    0H                                               03S0353
@RF00337 DS    0H                                               03S0354
*     END;                          /* END OF CHKAPIO CODE.          */
@RF00324 DS    0H                                               03S0355
*     DO;                           /* START OF CHKBLD CODE          */
*                                                               03S0355
*       /*************************************************************/
*       /*                                                           */
*       /* IF REQUIRED, DETERMINE THAT 'BLD' CALL IS ACTIVE          */
*       /* (APAXBDSW=1). ACTIVE SWITCH IS RESET BY 'XLTE' CALL. IF   */
*       /* THIS CHECK REQUESTED, THE ACB MUST BE OPENED (APCPSOPR=1) */
*       /* SO THE EXISTANCE OF THE OPEN ACB HAS ALREADY BEEN         */
*       /* VALIDATED.                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0356
*       IF APCPSBLR=BON&            /* IF ACTIVE 'BLD' REQUIRED AND  */
*           APAXBDSW=BOFF THEN      /* ACTIVE SWITCH OFF, IS ERROR   */
         TM    APCPSBLR(APCPPTR),B'10000000'                    03S0356
         BNO   @RF00356                                         03S0356
         L     @11,APCWACB(,APCWPTR)                            03S0356
         L     @11,ACBAMWAP(,@11)                               03S0356
         TM    APAXBDSW(@11),B'10000000'                        03S0356
         BNZ   @RF00356                                         03S0356
*         IF(APCWR15B<APCCRWRN)×    /* IF THIS ERROR CODE IS         */
*             (APCWR15B<APCCRERR&   /* HIGHER THAN CURRENT ERROR     */
*             APCPSBLW=BOFF) THEN   /* CODE, THEN                    */
         CLI   APCWR15B(APCWPTR),4                              03S0357
         BL    @RT00357                                         03S0357
         CLI   APCWR15B(APCWPTR),8                              03S0357
         BNL   @RF00357                                         03S0357
         TM    APCPSBLW(APCPPTR),B'00010000'                    03S0357
         BNZ   @RF00357                                         03S0357
@RT00357 DS    0H                                               03S0358
*           DO;                     /* LOG THE ERROR.                */
*             APEMMSGN=APCMC008;    /* ERROR MESSAGE NUMBER          */
         MVC   APEMMSGN+112(4,APCWPTR),@CF00037                 03S0359
*             APCWRCN=APCCC008;     /* USER RETURN CODE              */
         MVI   APCWRCN(APCWPTR),X'08'                           03S0360
*             APCWR15B=APCCRERR;    /* SET REGISTER 15 TO ERROR      */
         MVI   APCWR15B(APCWPTR),X'08'                          03S0361
*             IF APCPSBLW=BON THEN  /* IF ONLY WARNING CONDITION,    */
         TM    APCPSBLW(APCPPTR),B'00010000'                    03S0362
         BNO   @RF00362                                         03S0362
*               APCWR15B=APCCRWRN;  /* THEN CHANGE R15 VALUE         */
         MVI   APCWR15B(APCWPTR),X'04'                          03S0363
*           END;                    /* ACTIVE 'BLD ' PROCESSED       */
@RF00362 DS    0H                                               03S0365
*     END;                          /* END OF CHKBLD CODE            */
@RF00357 DS    0H                                               03S0365
@RF00356 DS    0H                                               03S0366
*                                                               02S0366
*     /***************************************************************/
*     /*                                                             */
*     /* INPUT VALIDATED                                             */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0366
*   END;                            /* END OF CODE                   */
         EJECT
*                                                               01S0367
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO ERRORS WERE DETECTED CALL THE APPROPRIATE PROCESSING    */
*   /* ROUTINE. THEN CALL IGTMBG TO PROCESS THE RETURN CODE.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0367
*   DO;                             /* START OF CODE                 */
*                                                               02S0367
*     /***************************************************************/
*     /*                                                             */
*     /* IF NO ERRORS WERE DETECTED, CALL THE APPROPRIATE PROCESSING */
*     /* ROUTINE(S). THEN CALL IGTMBG TO PROCESS THE RETURN CODE,    */
*     /* CALL THE USER'S EXIT ROUTINE IF REQUIRED, AND TO COMPLETE   */
*     /* THE ERROR MESSAGE, IF ANY.                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0368
*     IF APCWR15C^=APCCROK THEN     /* IF A PREVIOUS ERROR           */
         L     @11,APCWR15C(,APCWPTR)                           02S0368
         LTR   @11,@11                                          02S0368
         BZ    @RF00368                                         02S0368
*       DO;                         /* WAS DETECTED,                 */
*         IF APCWRCT=0 THEN         /* IF TYPE OF ERROR NOT SET,     */
         CLI   APCWRCT(APCWPTR),0                               02S0370
         BNE   @RF00370                                         02S0370
*           APCWRCT=APCCTLOG;       /* SHOW LOGICAL ERROR. ALSO SHOW */
         MVI   APCWRCT(APCWPTR),X'08'                           02S0371
*         APCWRCC=APCCC;            /* COMPONENT FINDING ERROR       */
@RF00370 MVI   APCWRCC(APCWPTR),X'07'                           02S0372
*         APCWZAM=BON;              /* SET LOGICAL ERROR EXIT TYPE   */
         OI    APCWZAM(APCWPTR),B'00000001'                     02S0373
*       END;                        /* & SKIP PROCESSING CALL        */
*     ELSE                          /* IF NO PREVIOUS ERRORS,        */
*       DO;                         /* THEN                          */
         B     @RC00368                                         02S0375
@RF00368 DS    0H                                               02S0376
*         APCWSIX=BON;              /* SHOW INSTALLATION EXIT ACTIVE */
         OI    APCWSIX(APCWPTR),B'10000000'                     02S0376
*         CALL APCV1MBD(APCW);      /* CALL INSTALLATION EXIT        */
         ST    APCWPTR,@AL00001                                 02S0377
         MVI   @AL00001,X'80'                                   02S0377
         L     @15,APCT1MBD(,APCTPTR)                           02S0377
         LA    @01,@AL00001                                     02S0377
         BALR  @14,@15                                          02S0377
*         APCWSIX=BOFF;             /* INSTALLATION EXIT FINISHED    */
         NI    APCWSIX(APCWPTR),B'01111111'                     02S0378
*         IF R15F=APCCROK&          /* IF BY-PASS NOT SPECIFIED,     */
*             APCWR15C=APCCROK THEN /* AND NO ERROR DETECTED         */
         SLR   @14,@14                                          02S0379
         CR    R15F,@14                                         02S0379
         BNE   @RF00379                                         02S0379
         C     @14,APCWR15C(,APCWPTR)                           02S0379
         BNE   @RF00379                                         02S0379
*           CALL EVAL(APCPRTN+APCTCRTN)/* CALL PROCESSING ROUTINE    */
*               ->I031P->UAPCPRTN(APCW);/* SPECIFIED IN APCP.        */
         ST    APCWPTR,@AL00001                                 02S0380
         L     @11,APCPRTN(,APCPPTR)                            02S0380
         AL    @11,APCTCRTN(,APCTPTR)                           02S0380
         L     @15,I031P(,@11)                                  02S0380
         LA    @01,@AL00001                                     02S0380
         BALR  @14,@15                                          02S0380
*       END;                        /* FUNCTION PROCESSED            */
@RF00379 DS    0H                                               02S0382
*     APCWSIX=BON;                  /* INSTALLATION EXIT ACTIVE      */
@RC00368 OI    APCWSIX(APCWPTR),B'10000000'                     02S0382
*     CALL APCV2MBD(APCW);          /* CLEAN-UP INSTALLATION EXIT    */
         ST    APCWPTR,@AL00001                                 02S0383
         MVI   @AL00001,X'80'                                   02S0383
         L     @15,APCT2MBD(,APCTPTR)                           02S0383
         LA    @01,@AL00001                                     02S0383
         BALR  @14,@15                                          02S0383
*     APCWSIX=BOFF;                 /* INSTALLATION EXIT COMPLETE    */
         NI    APCWSIX(APCWPTR),B'01111111'                     02S0384
*     CALL APCVZMBG;                /* RETURN-CODE, MSG, USER-EXIT.
*                                      NOTE:APCWPTR -> APCW     02S0385
*                                      INTERFACE.                    */
         L     @15,APCTZMBG(,APCTPTR)                           02S0385
         BALR  @14,@15                                          02S0385
*   END;                            /* END OF CODE                   */
*                                                               01S0387
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE THE SAVEAREA-WORKAREA                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0387
         EJECT
*   DO;                             /* START OF CODE                 */
*                                                               02S0387
*     /***************************************************************/
*     /*                                                             */
*     /* RELEASE THE SAVEAREA-WORKAREA. IF THE ACB'S SA-WA WAS USED  */
*     /* (DSAWA=CACBSAWA), JUST RESET APAXSVSW. OTHERWISE FREE THE   */
*     /* DYNAMIC AREA USING MACRO IGTYFSV.                           */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0388
*     RFY                                                       02S0388
*      (R1P) RSTD;                  /* NEED REG 1                    */
*     R1P=APSVPTR;                  /* @ CURRENT SA-WA               */
         LR    R1P,APSVPTR                                      02S0389
*     APSVPTR=APSVPREV;             /* SET R13 = @ PREVIOUS SA-WA    */
         L     APSVPTR,APSVPREV(,APSVPTR)                       02S0390
*     APSVRG15=APCWR15C;            /* MOVE RETURN CODE TO REG 15
*                                      RELOAD LOCATION               */
         L     @11,APCWR15C(,APCWPTR)                           02S0391
         ST    @11,APSVRG15(,APSVPTR)                           02S0391
*     IF DSAWA=CACBSAWA THEN        /* IF ACB AREA USED, JUST        */
         LTR   DSAWA,DSAWA                                      02S0392
         BNZ   @RF00392                                         02S0392
*       ACBAMWAP->APAXSVSW=TSOFF;   /* RESET IN-USE INDICATOR        */
         L     @11,APCWACB(,APCWPTR)                            02S0393
         L     @11,ACBAMWAP(,@11)                               02S0393
         MVI   APAXSVSW(@11),X'00'                              02S0393
*     ELSE                          /* OTHERWISE ISSUE FREEMAIN      */
*       DO;                         /* IGTYFSV A(R1P->I031F)         */
         B     @RC00392                                         02S0394
@RF00392 DS    0H                                               02S0395
*         RFY                                                   02S0395
*           GPR01P RSTD;            /* REG 1 SET TO AREA ADDRESS     */
*         GPR01P=ADDR(R1P->I031F);  /* SET REG 1 TO ADDR OF AREA TO
*                                      FREE                          */
*         CALL APCVZUAC;            /* FREE THE SAVEAREA-WORKAREA    */
         L     @15,APCTZUAC(,APCTPTR)                           02S0397
         BALR  @14,@15                                          02S0397
*         RFY                                                   02S0398
*           GPR01P UNRSTD;          /* FINISHED WITH REG 1           */
*       END;                        /* SAVEAREA-WORKAREA FREED (VIA
*                                      IGTYFSV).                     */
*     RFY                                                       02S0400
*      (R1P) UNRSTD;                /* FINISHED WITH REG 1           */
@RC00392 DS    0H                                               02S0401
*   END;                            /* END OF CODE                   */
*                                                               01S0402
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER. RETURN CODE SAVED IN PREVIOUS SAVEAREA AND  */
*   /* IS PLACED IN REGISTER 15 BY THE RETURN STATEMENT.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0402
*   RETURN;                         /* RETURN TO CALLER. R15 SET     */
@EL00001 DS    0H                                               01S0402
@EF00001 DS    0H                                               01S0402
@ER00001 LM    @14,@12,12(@13)                                  01S0402
         BR    @14                                              01S0402
         EJECT
*                                   /* IGTXEPLG                      */
*                                                               01S0403
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0403
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0403
*     GPR01F FIXED(31) REG(1),                                  01S0403
*     GPR01P PTR(31) REG(1);                                    01S0403
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0404
*     I031F FIXED(31) BASED,                                    01S0404
*     I031P PTR(31) BASED,                                      01S0404
*     I015F FIXED(15) BASED,                                    01S0404
*     I015P PTR(15) BASED,                                      01S0404
*     I008P PTR(8) BASED,                                       01S0404
*     I001C CHAR(1) BASED;                                      01S0404
*                                                               01S0405
*   /*****************************************************************/
*   /*                                                               */
*   /* MODULE PATCH AREA                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0405
*   DCL                                                         01S0405
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0405
*   GENERATE DATA DEFS(APPATCH);                                01S0406
*                                                               01S0407
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0407
*   DCL                                                         01S0407
*     R0F FIXED(31) REG(0),                                     01S0407
*     R0P PTR(24) REG(0),                                       01S0407
*     R0RSTD PTR(31) REG(0),                                    01S0407
*     R1F FIXED(31) REG(1),                                     01S0407
*     R1P PTR(24) REG(1),                                       01S0407
*     R1RSTD PTR(31) REG(1),                                    01S0407
*     R2F FIXED(31) REG(2),                                     01S0407
*     R2P PTR(24) REG(2),                                       01S0407
*     R2RSTD PTR(31) REG(2),                                    01S0407
*     R3F FIXED(31) REG(3),                                     01S0407
*     R3P PTR(24) REG(3),                                       01S0407
*     R3RSTD PTR(31) REG(3),                                    01S0407
*     R4F FIXED(31) REG(4),                                     01S0407
*     R4P PTR(24) REG(4),                                       01S0407
*     R4RSTD PTR(31) REG(4),                                    01S0407
*     R5F FIXED(31) REG(5),                                     01S0407
*     R5P PTR(24) REG(5),                                       01S0407
*     R5RSTD PTR(31) REG(5),                                    01S0407
*     R6F FIXED(31) REG(6),                                     01S0407
*     R6P PTR(24) REG(6),                                       01S0407
*     R6RSTD PTR(31) REG(6),                                    01S0407
*     R7F FIXED(31) REG(7),                                     01S0407
*     R7P PTR(24) REG(7),                                       01S0407
*     R7RSTD PTR(31) REG(7),                                    01S0407
*     R8F FIXED(31) REG(8),                                     01S0407
*     R8P PTR(24) REG(8),                                       01S0407
*     R8RSTD PTR(31) REG(8),                                    01S0407
*     R9F FIXED(31) REG(9),                                     01S0407
*     R9P PTR(24) REG(9),                                       01S0407
*     R9RSTD PTR(31) REG(9),                                    01S0407
*     R10F FIXED(31) REG(10),                                   01S0407
*     R10P PTR(24) REG(10),                                     01S0407
*     R10RSTD PTR(31) REG(10),                                  01S0407
*     R11F FIXED(31) REG(11),                                   01S0407
*     R11P PTR(24) REG(11),                                     01S0407
*     R11RSTD PTR(31) REG(11),                                  01S0407
*     R12F FIXED(31) REG(12),                                   01S0407
*     R12P PTR(24) REG(12),                                     01S0407
*     R12RSTD PTR(31) REG(12),                                  01S0407
*     R13F FIXED(31) REG(13),                                   01S0407
*     R13P PTR(24) REG(13),                                     01S0407
*     R13RSTD PTR(31) REG(13),                                  01S0407
*     R14F FIXED(31) REG(14),                                   01S0407
*     R14P PTR(24) REG(14),                                     01S0407
*     R14RSTD PTR(31) REG(14),                                  01S0407
*     R15F FIXED(31) REG(15),                                   01S0407
*     R15P PTR(24) REG(15),                                     01S0407
*     R15RSTD PTR(31) REG(15),                                  01S0407
*                                                               01S0407
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0407
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0407
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0407
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0407
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0407
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0407
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0407
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0407
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0407
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0407
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0407
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0407
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0407
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0408
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0408
*   DCL                                                         01S0408
*     RAPINPTR REG(2) PTR(24);      /* HOLD APIN ADDRESS             */
*   END                                                         01S0409
*                                                               01S0409
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IGTXAPRL)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPAT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPAX)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCC)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCM)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCP)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCW)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCX)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPDX)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPEM)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPFN)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPIN)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPIO)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPOP)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSC)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPUT)                                       */
*/*%INCLUDE SYSUT5  (FNDAPUT )                                       */
*/*%INCLUDE SYSUT5  (FNDAPCT )                                       */
*/*%INCLUDE SYSUT5  (FNDACB  )                                       */
*/*%INCLUDE SYSUT5  (FNDAPCP )                                       */
*/*%INCLUDE SYSUT5  (FNDSAWA )                                       */
*/*%INCLUDE SYSUT5  (INTSAWA )                                       */
*/*%INCLUDE SYSUT5  (INTAPCW )                                       */
*/*%INCLUDE SYSUT5  (CHKAPIN )                                       */
*/*%INCLUDE SYSUT5  (CHKNBRI )                                       */
*/*%INCLUDE SYSUT5  (CHKAPFN )                                       */
*/*%INCLUDE SYSUT5  (CHKACBE )                                       */
*/*%INCLUDE SYSUT5  (CHKACBO )                                       */
*/*%INCLUDE SYSUT5  (CHKAPRL )                                       */
*/*%INCLUDE SYSUT5  (CHKAPIO )                                       */
*/*%INCLUDE SYSUT5  (CHKBLD  )                                       */
*/*%INCLUDE SYSUT5  (CALLRTNS)                                       */
*/*%INCLUDE SYSUT5  (RLSSAWA )                                       */
*                                                               01S0409
*       ;                                                       01S0409
         B     @EL00001                                         01S0409
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@AL00001 DS    1A
@TF00001 DS    F
IGTMBD   CSECT
         DS    0F
@CF00053 DC    F'1'
@CF00096 DC    F'2'
@CF00065 DC    F'3'
@CF00091 DC    F'4'
@CF00553 DC    F'5'
@CF00226 DC    F'6'
@CF00395 DC    F'7'
@CF00037 DC    F'8'
@CF00558 DC    F'9'
@CF00561 DC    F'11'
@CF00542 DC    F'12'
@CF00578 DC    F'21'
@CF00433 DC    F'32'
@CF00679 DC    F'52'
@CF02436 DC    F'99'
@CF02416 DC    XL4'7FFFFFFF'
@CF02455 DC    XL4'0000FFF8'
@DATD    DSECT
         DS    0D
DAPCW    DS    CL240
         ORG   DAPCW
DAPCW0   DS    CL112
DAPCW1   DS    CL128
         ORG   DAPCW+240
IGTMBD   CSECT
         NOPR  ((@ENDDATD-@DATD)/1025*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00487 DC    C'APRL'
@CC01690 DC    C'APCW'
IGTMBD   CSECT
*                                   /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGTMBD   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DAPINPTR EQU   @02
DAPRLPTR EQU   @02
DAPIOPTR EQU   @02
DSAWA    EQU   @03
APCODE   EQU   @07
APCTPTR  EQU   @12
APSVPTR  EQU   @13
R0P      EQU   @00
APINPTR  EQU   @01
APUTPTR  EQU   @11
APACBPTR EQU   @09
R0F      EQU   @00
R14F     EQU   @14
R15P     EQU   @15
APCPPTR  EQU   @10
RAPINPTR EQU   @02
R1P      EQU   @01
GPR00F   EQU   @00
GPR01F   EQU   @01
APDATA   EQU   @06
APCWPTR  EQU   @08
R15F     EQU   @15
GPR01P   EQU   @01
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCQPTR  EQU   @09
APDEBPTR EQU   @08
APDSPTR  EQU   @11
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APRLPTR  EQU   @08
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUBPTR  EQU   @10
APXLPTR  EQU   @11
R0RSTD   EQU   @00
R1F      EQU   @01
R1RSTD   EQU   @01
R10F     EQU   @10
R10P     EQU   @10
R10RSTD  EQU   @10
R11F     EQU   @11
R11P     EQU   @11
R11RSTD  EQU   @11
R12F     EQU   @12
R12P     EQU   @12
R12RSTD  EQU   @12
R13F     EQU   @13
R13P     EQU   @13
R13RSTD  EQU   @13
R14P     EQU   @14
R14RSTD  EQU   @14
R15RSTD  EQU   @15
R2F      EQU   @02
R2P      EQU   @02
R2RSTD   EQU   @02
R3F      EQU   @03
R3P      EQU   @03
R3RSTD   EQU   @03
R4F      EQU   @04
R4P      EQU   @04
R4RSTD   EQU   @04
R5F      EQU   @05
R5P      EQU   @05
R5RSTD   EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R8RSTD   EQU   @08
R9F      EQU   @09
R9P      EQU   @09
R9RSTD   EQU   @09
DEBPTR   EQU   0
DEBDAPTR EQU   0
DEBEXPTR EQU   0
DEBSBPTR EQU   0
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBIBCT  EQU   ACBJWA
ACBAMWAP EQU   ACBIBCT
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBDEB   EQU   ACBDDNM+5
ACBOFLGS EQU   ACBCOMN+48
ACBOPEN  EQU   ACBOFLGS
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBAPID  EQU   ACBCOMN+72
ACBAMAX  EQU   ACBAPID
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
APRL     EQU   0
APRLID   EQU   APRL
APRLECB  EQU   APRL+8
APRLECBC EQU   APRLECB
APRLFDBK EQU   APRL+12
APRLACB  EQU   APRL+24
APRLAPIO EQU   APRL+32
APRLOPTS EQU   APRL+40
APRLOPT0 EQU   APRLOPTS
APRLXIO  EQU   APRLOPT0
APRLOPT1 EQU   APRLOPTS+1
APRLOPT2 EQU   APRLOPTS+2
APRLOPT3 EQU   APRLOPTS+3
APRLOPTZ EQU   APRL+56
APRLOPT4 EQU   APRLOPTZ
APRLOPT5 EQU   APRLOPTZ+1
APRLOPT6 EQU   APRLOPTZ+2
APRLOPT7 EQU   APRLOPTZ+3
APRLEXTS EQU   APRL+68
APAT     EQU   0
APATACB  EQU   APAT+8
APAX     EQU   0
APAXAPSV EQU   APAX+8
APAXSVSW EQU   APAX+44
APAXFLGS EQU   APAX+45
APAXFLG0 EQU   APAXFLGS
APAXFLG1 EQU   APAXFLGS+1
APAXFLG2 EQU   APAXFLGS+2
APAXBDSW EQU   APAXFLG2
APCP     EQU   0
APCPLAST EQU   APCP+8
APCPFRST EQU   APCP+16
APCT     EQU   0
APCTENQM EQU   APCT+12
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTERRS EQU   APCT+876
@NM00080 EQU   APCT+936
APCTSTAT EQU   @NM00080
APCTPRSW EQU   @NM00080+1
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTAPCP EQU   APCT+1032
APCTCRTN EQU   APCT+1036
APCTZ@@1 EQU   APCT+1120
APCVZUAA EQU   0
APCVZUAC EQU   0
APCVZMBG EQU   0
APCV1MBD EQU   0
APCV2MBD EQU   0
APCW     EQU   0
APCWID   EQU   APCW
APCWAPIN EQU   APCW+8
APCWAPUT EQU   APCW+12
APCWAPSV EQU   APCW+16
APCWACB  EQU   APCW+20
APCWACBF EQU   APCWACB
APCWAPRL EQU   APCW+24
APCWAPIO EQU   APCW+28
APCWAPCP EQU   APCW+32
APCWAPAL EQU   APCW+40
APCWSWS  EQU   APCW+46
APCWSW0  EQU   APCWSWS
APCWSIX  EQU   APCWSW0
APCWNBRI EQU   APCW+48
APCWAPFN EQU   APCW+56
APCWOPF  EQU   APCW+62
APCWAPOP EQU   APCWOPF
APCWR15C EQU   APCW+64
APCWR15B EQU   APCWR15C+3
APCWRCDE EQU   APCW+68
APCWRCT  EQU   APCWRCDE+1
APCWRCC  EQU   APCWRCDE+2
APCWRCN  EQU   APCWRCDE+3
APCWINTV EQU   APCW+72
APCWINT0 EQU   APCWINTV
APCWZAM  EQU   APCWINT0
APCWINT1 EQU   APCWINTV+1
APCWINT2 EQU   APCWINTV+2
APCWINT3 EQU   APCWINTV+3
APCWAPEM EQU   APCW+112
APCX     EQU   0
APCXUSRI EQU   APCX+8
APCXFLGS EQU   APCXUSRI+4
APCXFLG0 EQU   APCXFLGS
APCXINTV EQU   APCXUSRI+24
APDX     EQU   0
APDX252A EQU   APDX+28
APDXDXL  EQU   APDX+32
APDXIOCT EQU   APDX+128
APDXSWS  EQU   APDX+130
APDXSW0  EQU   APDXSWS
APDXSW1  EQU   APDXSWS+1
APDXAPIO EQU   APDX+136
APEM     EQU   0
APEMMSG  EQU   APEM+92
APEMMSGN EQU   APEMMSG
APEMVALU EQU   APEM+108
APEMVALN EQU   APEMVALU+4
APIN     EQU   0
APINAUNT EQU   APIN
APINAFNC EQU   APIN+4
APINFMTS EQU   APIN+8
APINUNIT EQU   0
APINFUNC EQU   0
APINAPRL EQU   0
APIO     EQU   0
APIOIOCB EQU   APIO
APIOFLGS EQU   APIO+248
APIOFLGA EQU   APIOFLGS
APIOFLG0 EQU   APIOFLGA
APIOFLG2 EQU   APIOFLGA+2
APIOFLG3 EQU   APIOFLGA+3
APIOFLGB EQU   APIOFLGS+4
APIOFLG7 EQU   APIOFLGB+3
APIOINDX EQU   APIO+288
APIOSAVE EQU   APIOINDX
APIOTR   EQU   APIO+360
APIOGMSZ EQU   APIO+376
APIONBR  EQU   APIO+384
APSC     EQU   0
APSCCRSZ EQU   APSC+2
APSV     EQU   0
APSVPREV EQU   APSV+4
APSVNEXT EQU   APSV+8
APSVREGS EQU   APSV+12
APSVRG15 EQU   APSVREGS+4
APUT     EQU   0
APUTAPAT EQU   APUT+8
APUTAPCT EQU   APUT+12
APUTFLGS EQU   APUT+24
APUTFLG0 EQU   APUTFLGS
UAPCPRTN EQU   0
IGTMBR   EQU   0
IGTMBRAE EQU   IGTMBR
IGTMBRAK EQU   IGTMBR+4
IGTMBRAM EQU   IGTMBR+8
IGTMBREM EQU   0
IGTMBRKT EQU   0
IGTMBRMT EQU   0
I031P    EQU   0
I031F    EQU   0
APCVZDAL EQU   0
APCVZDAP EQU   0
APCVZDBK EQU   0
APCVZDDA EQU   0
APCVZDDQ EQU   0
APCVZDEQ EQU   0
APCVZDID EQU   0
APCVZDIO EQU   0
APCVZDIP EQU   0
APCVZDMD EQU   0
APCVZDMM EQU   0
APCVZDQR EQU   0
APCVZDRI EQU   0
APCVZDUA EQU   0
APCVZDUL EQU   0
APCVZDWI EQU   0
APCVZDWT EQU   0
APCVZDX1 EQU   0
APCVZDX2 EQU   0
APCVZDX3 EQU   0
APCVZDX4 EQU   0
APCVZD10 EQU   0
APCVZD20 EQU   0
APCVZD4E EQU   0
APCVZD40 EQU   0
APCVZD41 EQU   0
APCVZD42 EQU   0
APCVZD43 EQU   0
APCVZD44 EQU   0
APCVZD45 EQU   0
APCVZD46 EQU   0
APCVZD47 EQU   0
APCVZD48 EQU   0
APCVZD49 EQU   0
APCVZD60 EQU   0
APCVZD80 EQU   0
APCVZD81 EQU   0
APCVZD82 EQU   0
APCVZD83 EQU   0
APCVZJAA EQU   0
APCVZJAD EQU   0
APCVZJAG EQU   0
APCVZJAJ EQU   0
APCVZJAM EQU   0
APCVZJAP EQU   0
APCVZJAX EQU   0
APCVZJAY EQU   0
APCVZJBA EQU   0
APCVZJBD EQU   0
APCVZJBG EQU   0
APCVZJBJ EQU   0
APCVZJBM EQU   0
APCVZJDA EQU   0
APCVZJDD EQU   0
APCVZJDG EQU   0
APCVZJDJ EQU   0
APCVZJDM EQU   0
APCVZJHC EQU   0
APCVZJHE EQU   0
APCVZJHF EQU   0
APCVZJHO EQU   0
APCVZJHQ EQU   0
APCVZJHR EQU   0
APCVZJHT EQU   0
APCVZJHW EQU   0
APCVZJH0 EQU   0
APCVZJH6 EQU   0
APCVZJI0 EQU   0
APCVZJI3 EQU   0
APCVZJJ0 EQU   0
APCVZKAA EQU   0
APCVZKBA EQU   0
APCVZKBB EQU   0
APCVZKBC EQU   0
APCVZKBD EQU   0
APCVZKBE EQU   0
APCVZKBF EQU   0
APCVZKCA EQU   0
APCVZKDA EQU   0
APCVZKGA EQU   0
APCVZKGB EQU   0
APCVZKGC EQU   0
APCVZKGD EQU   0
APCVZLCA EQU   0
APCVZLCB EQU   0
APCVZMBA EQU   0
APCVZMBD EQU   0
APCVZMBH EQU   0
APCVZMBK EQU   0
APCVZMBM EQU   0
APCVZMIB EQU   0
APCVZMIC EQU   0
APCVZMIF EQU   0
APCVZMJB EQU   0
APCVZMJC EQU   0
APCVZMJH EQU   0
APCVZMJI EQU   0
APCVZMMA EQU   0
APCVZUAB EQU   0
APCVZUAD EQU   0
APCVZUAE EQU   0
APCVZUAF EQU   0
APCVZUAG EQU   0
APCVZUBB EQU   0
APCVZUFA EQU   0
APCVZUHA EQU   0
APCVZUHB EQU   0
APCVZUJA EQU   0
APCVZUKA EQU   0
APCV1CMD EQU   0
APCV1JAA EQU   0
APCV1JBJ EQU   0
APCV1JHC EQU   0
APCV1JHL EQU   0
APCV1JHT EQU   0
APCV1MAB EQU   0
APCV2JHC EQU   0
APCV2JHL EQU   0
APINACI  EQU   0
APINACW  EQU   0
APINBIV  EQU   0
APINBLB  EQU   0
APINCHB  EQU   0
APINCHC  EQU   0
APINCHS  EQU   0
APINCHX  EQU   0
APINCXC  EQU   0
APINCXS  EQU   0
APINCXX  EQU   0
APINDLB  EQU   0
APINDSV  EQU   0
APINERR  EQU   0
APINICI  EQU   0
APINICW  EQU   0
APINKYVF EQU   0
APINKYVL EQU   0
APINKYVP EQU   0
APINKYWD EQU   0
APINPXB  EQU   0
APINPXC  EQU   0
APINPXF  EQU   0
APINPXP  EQU   0
APINSTB  EQU   0
APINSTD  EQU   0
APINUST  EQU   0
APINXBS  EQU   0
APINXBX  EQU   0
APINXCD  EQU   0
APINXCT  EQU   0
APINXID  EQU   0
APINXI1  EQU   0
APINXI2  EQU   0
APINXLB  EQU   0
APINXST  EQU   0
APINYST  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I256C    EQU   0
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
@NM00041 EQU   APCP
APCPAPFN EQU   @NM00041
APCPOPF  EQU   @NM00041+6
APCPAPOP EQU   APCPOPF
APCPRTN  EQU   @NM00041+8
APCPMAXP EQU   @NM00041+16
APCPMINP EQU   @NM00041+18
APCPSWS  EQU   @NM00041+32
APCPSACB EQU   APCPSWS
APCPSACR EQU   APCPSACB
APCPSACN EQU   APCPSACB
APCPSACW EQU   APCPSACB
APCPSBLD EQU   APCPSWS+1
APCPSBLR EQU   APCPSBLD
APCPSBLW EQU   APCPSBLD
APCPSOP  EQU   APCPSWS+2
APCPSOPR EQU   APCPSOP
APCPSOPN EQU   APCPSOP
APCPSOPW EQU   APCPSOP
APCPSAR  EQU   APCPSWS+3
APCPSARR EQU   APCPSAR
APCPSIO  EQU   APCPSWS+4
APCPSIOR EQU   APCPSIO
APCPSWX  EQU   APCPSWS+9
APCPSUSV EQU   APCPSWX
APCPSFN  EQU   APCPSWS+10
APCPSFNV EQU   APCPSFN
APCPSFNS EQU   APCPSFN
APCPSRCL EQU   APCPSWS+11
APCPSEML EQU   APCPSWS+12
APCPAPAL EQU   @NM00041+48
APCTZ    EQU   APCTZ@@@
APCTZUAA EQU   APCTZ
APCTZUAB EQU   APCTZ+4
APCTZUAC EQU   APCTZ+8
APCTZUAD EQU   APCTZ+12
APCTZUAE EQU   APCTZ+16
APCTZUBB EQU   APCTZ+24
APCTZD10 EQU   APCTZ+28
APCTZD20 EQU   APCTZ+32
APCTZD40 EQU   APCTZ+36
APCTZD41 EQU   APCTZ+40
APCTZD42 EQU   APCTZ+44
APCTZD43 EQU   APCTZ+48
APCTZD44 EQU   APCTZ+52
APCTZD45 EQU   APCTZ+56
APCTZD46 EQU   APCTZ+60
APCTZD47 EQU   APCTZ+64
APCTZD48 EQU   APCTZ+68
APCTZD49 EQU   APCTZ+72
APCTZD60 EQU   APCTZ+76
APCTZD80 EQU   APCTZ+80
APCTZD4E EQU   APCTZ+84
APCTZMBA EQU   APCTZ+88
APCTZMBD EQU   APCTZ+92
APCTZMBG EQU   APCTZ+96
APCTZMBR EQU   APCTZ+100
APCTZDX1 EQU   APCTZ+104
APCTZDX2 EQU   APCTZ+108
APCTZDX3 EQU   APCTZ+112
APCTZDX4 EQU   APCTZ+116
APCTZMBH EQU   APCTZ+120
APCTZMBK EQU   APCTZ+124
APCTZMBM EQU   APCTZ+128
APCTZMJB EQU   APCTZ+132
APCTZMJC EQU   APCTZ+136
APCTZMJH EQU   APCTZ+140
APCTZMMA EQU   APCTZ+144
APCTZDMD EQU   APCTZ+148
APCTZD81 EQU   APCTZ+152
APCTZDID EQU   APCTZ+156
APCTZDRI EQU   APCTZ+160
APCTZMJI EQU   APCTZ+164
APCTZDWT EQU   APCTZ+168
APCTZDMM EQU   APCTZ+172
APCTZDAL EQU   APCTZ+176
APCTZDBK EQU   APCTZ+180
APCTZDIP EQU   APCTZ+184
APCTZDDA EQU   APCTZ+188
APCTZDUL EQU   APCTZ+192
APCTZDEQ EQU   APCTZ+196
APCTZDDQ EQU   APCTZ+200
APCTZDUA EQU   APCTZ+204
APCTZUAF EQU   APCTZ+208
APCTZUAG EQU   APCTZ+212
APCTZDIO EQU   APCTZ+216
APCTZUHA EQU   APCTZ+220
APCTZUHB EQU   APCTZ+224
APCTZJAA EQU   APCTZ+232
APCTZJAD EQU   APCTZ+236
APCTZJAG EQU   APCTZ+240
APCTZJAJ EQU   APCTZ+244
APCTZJAM EQU   APCTZ+248
APCTZJAP EQU   APCTZ+252
APCTZJAY EQU   APCTZ+256
APCTZUFA EQU   APCTZ+260
APCTZUJA EQU   APCTZ+264
APCTZDAP EQU   APCTZ+268
APCTZKAA EQU   APCTZ+272
APCTZD82 EQU   APCTZ+276
APCTZMIB EQU   APCTZ+280
APCTZMIC EQU   APCTZ+284
APCTZD83 EQU   APCTZ+288
APCTZMIF EQU   APCTZ+296
APCTZJH0 EQU   APCTZ+300
APCTZJI0 EQU   APCTZ+304
APCTZJI3 EQU   APCTZ+308
APCTZJJ0 EQU   APCTZ+312
APCTZJBA EQU   APCTZ+316
APCTZJBD EQU   APCTZ+320
APCTZJBG EQU   APCTZ+324
APCTZJBJ EQU   APCTZ+328
APCTZJBM EQU   APCTZ+332
APCTZKCA EQU   APCTZ+340
APCTZKDA EQU   APCTZ+344
APCTZJDA EQU   APCTZ+356
APCTZJDJ EQU   APCTZ+360
APCTZJH6 EQU   APCTZ+364
APCTZJHO EQU   APCTZ+368
APCTZJHF EQU   APCTZ+372
APCTZJHE EQU   APCTZ+376
APCTZDQR EQU   APCTZ+380
APCTZJHR EQU   APCTZ+384
APCTZJHT EQU   APCTZ+388
APCTZJHW EQU   APCTZ+392
APCTZ1   EQU   APCTZ@@1
APCTZKBA EQU   APCTZ1
APCTZKBC EQU   APCTZ1+4
APCTZKBB EQU   APCTZ1+8
APCTZJHC EQU   APCTZ1+20
APCTZJHQ EQU   APCTZ1+24
APCTZKBD EQU   APCTZ1+28
APCTZKBE EQU   APCTZ1+40
APCTZUKA EQU   APCTZ1+56
APCTZKBF EQU   APCTZ1+60
APCTZJDD EQU   APCTZ1+64
APCTZJDG EQU   APCTZ1+68
APCTZJDM EQU   APCTZ1+72
APCTZLCA EQU   APCTZ1+76
APCTZLCB EQU   APCTZ1+80
APCTZDWI EQU   APCTZ1+84
APCTZJAX EQU   APCTZ1+88
APCTZKGA EQU   APCTZ1+92
APCTZKGB EQU   APCTZ1+96
APCTZKGC EQU   APCTZ1+100
APCTZKGD EQU   APCTZ1+104
APCTU    EQU   APCTU@@@
APCT1MAB EQU   APCTU
APCT1MBD EQU   APCTU+4
APCT2MBD EQU   APCTU+8
APCT1CMD EQU   APCTU+12
APCT1JAA EQU   APCTU+20
APCT1JHC EQU   APCTU+24
APCT2JHC EQU   APCTU+28
APCT1JHT EQU   APCTU+32
APCT1JHL EQU   APCTU+36
APCT2JHL EQU   APCTU+40
APCT1JBJ EQU   APCTU+44
APINFMT1 EQU   APINFMTS
APINAERR EQU   APINFMT1
@NM00138 EQU   APINFMT1+4
APINAKYW EQU   @NM00138
APINAKYV EQU   @NM00138+4
APINFMT2 EQU   APINFMTS
APINAAR  EQU   APINFMT2
APINFMT3 EQU   APINFMTS
APINASTB EQU   APINFMT3
APINAACW EQU   APINFMT3+4
APINAICW EQU   APINFMT3+8
APINAACI EQU   APINFMT3+12
APINAICI EQU   APINFMT3+16
APINFMT4 EQU   APINFMTS
APINAXI1 EQU   APINFMT4
APINAXI2 EQU   APINFMT4+4
APINAXLB EQU   APINFMT4+8
APINAXCD EQU   APINFMT4+12
APINFMT5 EQU   APINFMTS
APINADLB EQU   APINFMT5
APINFMT6 EQU   APINFMTS
APINABIV EQU   APINFMT6
APINABLB EQU   APINFMT6+4
APINFMT7 EQU   APINFMTS
APINACHS EQU   APINFMT7
APINACHC EQU   APINFMT7+4
APINACHB EQU   APINFMT7+8
APINACHX EQU   APINFMT7+12
APINFMT8 EQU   APINFMTS
APINACXS EQU   APINFMT8
APINACXC EQU   APINFMT8+4
APINACXX EQU   APINFMT8+8
APINFMT9 EQU   APINFMTS
APINASTD EQU   APINFMT9
APINADSV EQU   APINFMT9+4
APINAYST EQU   APINFMT9+8
APINAXST EQU   APINFMT9+12
APINAUST EQU   APINFMT9+16
APINFM10 EQU   APINFMTS
APINAXBS EQU   APINFM10
APINAXCT EQU   APINFM10+4
APINAXBX EQU   APINFM10+8
APINAXID EQU   APINFM10+12
APINAPMS EQU   APIN
APINAP1  EQU   APINAPMS
APINAP1E EQU   APINAP1
APINAP2  EQU   APINAPMS+4
APINAP3  EQU   APINAPMS+8
APINAP4  EQU   APINAPMS+12
@NM00150 EQU   APIOIOCB
@NM00151 EQU   APIOIOCB
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
APIOIOB  EQU   @NM00151+160
@NM00152 EQU   @NM00151
APIOSRB  EQU   @NM00150+128
APIOIOSB EQU   @NM00150
APINAP4P EQU   APINAP4+1
@NM00142 EQU   APINAP4
APINAP4E EQU   APINAP4
APINAP3P EQU   APINAP3+1
@NM00141 EQU   APINAP3
APINAP3E EQU   APINAP3
APINAP2P EQU   APINAP2+1
@NM00140 EQU   APINAP2
APINAP2E EQU   APINAP2
APINAP1P EQU   APINAP1+1
@NM00139 EQU   APINAP1
@NM00112 EQU   APCTU+48
APCT1MBM EQU   APCTU+16
@NM00111 EQU   APCTZ1+108
@NM00110 EQU   APCTZ1+52
@NM00109 EQU   APCTZ1+48
@NM00108 EQU   APCTZ1+44
@NM00107 EQU   APCTZ1+36
@NM00106 EQU   APCTZ1+32
@NM00105 EQU   APCTZ1+16
@NM00104 EQU   APCTZ1+12
@NM00103 EQU   APCTZ+396
@NM00102 EQU   APCTZ+352
@NM00101 EQU   APCTZ+348
@NM00100 EQU   APCTZ+336
@NM00099 EQU   APCTZ+292
APCTZJFA EQU   APCTZ+228
@NM00098 EQU   APCTZ+20
@NM00067 EQU   @NM00041+96
@NM00066 EQU   APCPSWS+13
@NM00065 EQU   APCPSEML
APCPSEMA EQU   APCPSEML
APCPSEMR EQU   APCPSEML
@NM00064 EQU   APCPSRCL
APCPSRCP EQU   APCPSRCL
APCPSRCA EQU   APCPSRCL
APCPSRCR EQU   APCPSRCL
@NM00063 EQU   APCPSFN
APCPSFFK EQU   APCPSFN
APCPSFNK EQU   APCPSFN
@NM00062 EQU   APCPSWX
@NM00061 EQU   APCPSWX
@NM00060 EQU   APCPSWS+5
@NM00059 EQU   APCPSIO
@NM00058 EQU   APCPSIO
@NM00057 EQU   APCPSIO
@NM00056 EQU   APCPSIO
@NM00055 EQU   APCPSAR
@NM00054 EQU   APCPSAR
@NM00053 EQU   APCPSAR
@NM00052 EQU   APCPSAR
@NM00051 EQU   APCPSOP
@NM00050 EQU   APCPSOP
@NM00049 EQU   APCPSBLD
@NM00048 EQU   APCPSBLD
@NM00047 EQU   APCPSBLD
@NM00046 EQU   APCPSACB
@NM00045 EQU   APCPSACB
@NM00044 EQU   @NM00041+24
@NM00043 EQU   @NM00041+20
APCPUSRX EQU   @NM00041+12
@NM00042 EQU   @NM00041+4
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
IGTMBRMV EQU   IGTMBRMT+4
IGTMBRMN EQU   IGTMBRMT
IGTMBRKV EQU   IGTMBRKT+4
IGTMBRKN EQU   IGTMBRKT
@NM00158 EQU   APUT+160
APUTAPEM EQU   APUT+32
APUTRCDE EQU   APUT+28
@NM00157 EQU   APUT+26
APUTFLG1 EQU   APUTFLGS+1
@NM00156 EQU   APUTFLG0
APUTACT  EQU   APUTFLG0
@NM00155 EQU   APUT+18
APUTSIZE EQU   APUT+16
APUTUSER EQU   APUT+4
APUTID   EQU   APUT
APSVWORK EQU   APSV+80
@NM00154 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG0  EQU   APSVREGS+8
APSVRG14 EQU   APSVREGS
APSVAPSC EQU   APSV
@NM00153 EQU   APSC+8
APSCAPSC EQU   APSC+4
APSCMXSZ EQU   APSC
@NM00149 EQU   APIO+424
@NM00148 EQU   APIO+400
APIOTMEE EQU   APIO+396
APIOTMES EQU   APIO+392
APIOXTME EQU   APIO+388
APIONBRI EQU   APIONBR+2
APIONBRX EQU   APIONBR
APIOAPCT EQU   APIO+380
APIOGMS1 EQU   APIOGMSZ+2
@NM00147 EQU   APIOGMSZ+1
APIOGMSP EQU   APIOGMSZ
APIOGMAD EQU   APIO+372
APIOCISZ EQU   APIO+370
APIOSIZE EQU   APIO+368
APIORB   EQU   APIOTR+4
APIOTCB  EQU   APIOTR
APIOECB  EQU   APIO+356
APIOTERM EQU   APIO+352
APIOASCB EQU   APIO+348
APIOTCSW EQU   APIOSAVE
APIOSNSE EQU   APIO+256
APIOACTV EQU   APIOFLG7
APIOFLG6 EQU   APIOFLGB+2
APIOFLG5 EQU   APIOFLGB+1
APIOFLG4 EQU   APIOFLGB
@NM00146 EQU   APIOFLG3
APIOPGFS EQU   APIOFLG3
APIOPGIP EQU   APIOFLG3
APIORSME EQU   APIOFLG3
APIORET  EQU   APIOFLG3
APIONPST EQU   APIOFLG3
APIOIOCT EQU   APIOFLG3
@NM00145 EQU   APIOFLG2
APIODMPT EQU   APIOFLG2
APIODUMP EQU   APIOFLG2
APIOCSWT EQU   APIOFLG2
APIOVINX EQU   APIOFLG2
APIOVSNS EQU   APIOFLG2
APIOEXCL EQU   APIOFLG2
APIOFLG1 EQU   APIOFLGA+1
@NM00144 EQU   APIOFLG0
APIOSU50 EQU   APIOFLG0
APIOSYNC EQU   APIOFLG0
APIOFXED EQU   APIOFLG0
@NM00143 EQU   APIO+246
APIOOLAP EQU   APIO+244
APIOIOAP EQU   APIO+240
APIORGN  EQU   APIO+236
APIOPGFL EQU   APIO+232
APIOPGFX EQU   APIO+228
APIOAPCI EQU   APIO+224
APIOCCW  EQU   APIO+220
APIODEB  EQU   APIO+216
APIOAPXL EQU   APIO+212
APIOVCSW EQU   APIO+208
APIOAPUB EQU   APIO+204
APIOAPIO EQU   APIO+200
APIOUSER EQU   APIO+196
APIOID   EQU   APIO+192
@NM00137 EQU   APEM+128
APEMSSNM EQU   APEM+124
APEMCM17 EQU   APEM+123
APEMAPRL EQU   APEM+117
APEMCM16 EQU   APEM+116
APEMVALP EQU   APEMVALU
APEMCM15 EQU   APEM+107
@NM00136 EQU   APEMMSG+4
APEMCM13 EQU   APEM+91
APEMCCWC EQU   APEM+85
APEMCM12 EQU   APEM+84
APEMDDN  EQU   APEM+76
APEMCM11 EQU   APEM+75
APEMDVTP EQU   APEM+73
APEMCM10 EQU   APEM+72
APEMUNIT EQU   APEM+69
APEMCM09 EQU   APEM+68
APEMSTEP EQU   APEM+60
APEMCM08 EQU   APEM+59
APEMJOB  EQU   APEM+51
APEMCM07 EQU   APEM+50
APEMCICT EQU   APEM+48
APEMCM06 EQU   APEM+47
APEMCIOP EQU   APEM+43
APEMCM05 EQU   APEM+42
APEMCINM EQU   APEM+38
APEMCM04 EQU   APEM+37
APEMNAME EQU   APEM+33
APEMCM03 EQU   APEM+32
APEMERCD EQU   APEM+26
APEMCM02 EQU   APEM+25
APEMTIME EQU   APEM+18
APEMCM01 EQU   APEM+17
APEMDATE EQU   APEM+12
APEMREG1 EQU   APEM+8
APEMZ2   EQU   APEM+6
APEMSZ2  EQU   APEM+4
APEMZ1   EQU   APEM+2
APEMSZ1  EQU   APEM
@NM00135 EQU   APDX+136
@NM00134 EQU   APDX+133
@NM00133 EQU   APDX+132
@NM00132 EQU   APDXSW1
@NM00131 EQU   APDXSW0
APDXSSMF EQU   APDXSW0
APDXSEOT EQU   APDXSW0
APDXSOPN EQU   APDXSW0
@NM00130 EQU   APDX+52
@NM00129 EQU   APDX+50
APDXNDMP EQU   APDX+48
APDXDEB  EQU   APDX+44
APDXAPOC EQU   APDX+40
APDXDXA  EQU   APDX+36
APDXSIZE EQU   APDXDXL+2
@NM00128 EQU   APDXDXL
APDXAPMF EQU   APDX252A
APDX252L EQU   APDX+24
APDX000A EQU   APDX+20
APDX000L EQU   APDX+16
APDXAPDS EQU   APDX+12
APDXAPCT EQU   APDX+8
APDXUSER EQU   APDX+4
APDXID   EQU   APDX
APCXAPUT EQU   APCX+36
APCXINTF EQU   APCXINTV
APCXBSAD EQU   APCXUSRI+20
APCXARCD EQU   APCXUSRI+16
APCXAFNC EQU   APCXUSRI+12
APCXACCW EQU   APCXUSRI+8
APCXFLG3 EQU   APCXFLGS+3
APCXFLG2 EQU   APCXFLGS+2
APCXFLG1 EQU   APCXFLGS+1
@NM00127 EQU   APCXFLG0
APCXOWN  EQU   APCXFLG0
APCXREG  EQU   APCXUSRI
APCXUSER EQU   APCX+4
APCXID   EQU   APCX
@NM00126 EQU   APCW+240
APCWEMSG EQU   APCWAPEM
@NM00125 EQU   APCW+112
@NM00124 EQU   APCW+80
@NM00123 EQU   APCW+76
APCWZCNV EQU   APCWINT3
APCWZFLO EQU   APCWINT3
APCWZFLU EQU   APCWINT3
APCWZFLD EQU   APCWINT3
APCWZIDX EQU   APCWINT3
APCWZFLN EQU   APCWINT3
@NM00122 EQU   APCWINT3
APCWZLGC EQU   APCWINT2
APCWZHDW EQU   APCWINT2
APCWZUKN EQU   APCWINT2
@NM00121 EQU   APCWINT2
@NM00120 EQU   APCWINT1
@NM00119 EQU   APCWINT0
APCWRC0  EQU   APCWRCDE
@NM00118 EQU   APCWR15C
@NM00117 EQU   APCW+60
@NM00116 EQU   APCW+52
APCWSW1  EQU   APCWSWS+1
@NM00115 EQU   APCWSW0
APCWSVAL EQU   APCWSW0
@NM00114 EQU   APCW+44
@NM00113 EQU   APCW+36
APCWUSER EQU   APCW+4
@NM00097 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00096 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTAPVU EQU   APCT+1520
APCTABR  EQU   APCT+1116
APCTACTR EQU   APCT+1112
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00095 EQU   APCT+1080
@NM00094 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
APCTABND EQU   APCT+1072
@NM00093 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
APCTAALP EQU   APCT+1020
APCTEALP EQU   APCT+1016
@NM00092 EQU   APCT+1012
@NM00091 EQU   APCT+1008
@NM00090 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00089 EQU   APCT+996
@NM00088 EQU   APCT+992
@NM00087 EQU   APCT+988
@NM00086 EQU   APCT+984
@NM00085 EQU   APCT+980
APCTECPW EQU   APCT+976
APCTEULD EQU   APCT+972
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00084 EQU   @NM00080+2
@NM00083 EQU   APCTPRSW
APCTAPST EQU   APCTPRSW
@NM00082 EQU   APCTPRSW
@NM00081 EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTHALT EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTSTRT EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
@NM00079 EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTASCB EQU   APCT+920
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00078 EQU   APCT+912
@NM00077 EQU   APCT+908
@NM00076 EQU   APCT+904
@NM00075 EQU   APCT+900
@NM00074 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTDSAP EQU   APCT+872
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTAPDS EQU   APCT+860
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00073 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00072 EQU   APCTSMAD+1
@NM00071 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00070 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00069 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
APCTSSID EQU   APCTENQM+4
@NM00068 EQU   APCTENQM
APCTSSVT EQU   APCT+8
APCTUSER EQU   APCT+4
APCTID   EQU   APCT
@NM00040 EQU   APCP+12
APCPUSER EQU   APCP+4
APCPID   EQU   APCP
@NM00039 EQU   APAX+72
@NM00038 EQU   APAX+68
@NM00037 EQU   APAX+64
APAXIOCT EQU   APAX+60
APAXLCIT EQU   APAX+56
APAXAPRL EQU   APAX+52
APAXSTAT EQU   APAX+48
@NM00036 EQU   APAXFLG2
@NM00035 EQU   APAXFLG1
@NM00034 EQU   APAXFLG0
APAXARBL EQU   APAX+40
APAXAPLB EQU   APAX+36
APAXCIE  EQU   APAX+32
APAXCIN  EQU   APAX+28
APAXCIS  EQU   APAX+24
APAXCCWE EQU   APAX+20
APAXCCWN EQU   APAX+16
APAXCCWS EQU   APAX+12
APAXUSER EQU   APAX+4
APAXID   EQU   APAX
@NM00033 EQU   APAT+408
@NM00032 EQU   APAT+8
APATUSER EQU   APAT+4
APATID   EQU   APAT
@NM00031 EQU   APRL+80
@NM00030 EQU   APRL+76
APRLEMSP EQU   APRL+72
APRLEMSL EQU   APRL+70
APRLACTV EQU   APRL+69
@NM00029 EQU   APRLEXTS
APRLEXTA EQU   APRLEXTS
@NM00028 EQU   APRL+60
APRLPGFX EQU   APRLOPT7
APRLDUMP EQU   APRLOPT7
@NM00027 EQU   APRLOPT7
@NM00026 EQU   APRLOPT6
@NM00025 EQU   APRLOPT5
@NM00024 EQU   APRLOPT4
@NM00023 EQU   APRL+52
@NM00022 EQU   APRL+48
APRLAPRL EQU   APRL+44
@NM00021 EQU   APRLOPT3
@NM00020 EQU   APRLOPT2
@NM00019 EQU   APRLOPT1
APRLNRC  EQU   APRLOPT0
@NM00018 EQU   APRLOPT0
APRLASY  EQU   APRLOPT0
@NM00017 EQU   APRLOPT0
APRLCCW  EQU   APRL+36
APRLTCB  EQU   APRL+28
APRLURCP EQU   APRL+20
APRLVALN EQU   APRL+18
APRLMSGN EQU   APRL+16
APRLRCN  EQU   APRLFDBK+3
APRLRCC  EQU   APRLFDBK+2
APRLRCT  EQU   APRLFDBK+1
@NM00016 EQU   APRLFDBK
APRLECBA EQU   APRLECB+1
@NM00015 EQU   APRLECBC
APRLECBP EQU   APRLECBC
APRLECBW EQU   APRLECBC
APRLUSER EQU   APRL+4
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00014 EQU   DEBACS08+12
@NM00013 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00012 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00011 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00010 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
ACBVVIC  EQU   ACBINFLG
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00009 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00008 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00007 EQU   ACBOFLGS
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00006 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00005 EQU   ACBDSORG
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00004 EQU   ACBCCTYP
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00003 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00002 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00001 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00247 EQU   @RC00246
@RF00264 EQU   @RC00258
@RC00271 EQU   @RC00270
@RF00288 EQU   @RC00282
@RF00299 EQU   @RC00296
@RC00329 EQU   @RC00327
@RF00253 EQU   @RC00247
@RF00277 EQU   @RC00271
@ENDDATA EQU   *
         END   IGTMBD,(C'PLS2344',0701,77092)
