TMBR     TITLE 'IGTMBR -- VPSS CALL INTERFACE ERROR MESSAGE (APEM) CONS*
               TANTS'
         MACRO
         MSG   &NUMBER,&MSG,&LAST= SYNAD ERROR MESSAGE
         GBLA  &IGTMBRN            NUMBER OF ENTRIES
         GBLC  &IGTMBRL            SYSNDX FOR FIRST CALL
         LCLA  &N                  HOLD &NUMBER VALUE
         LCLA  &E                  HOLD ERROR NUMBER
         COPY  IGTXSYSA            SYSTEM STATUS
         AIF   (&IGTMBRN NE 0).NFIRST CHECK FOR FIRST CALL
.*
.* INITIALIZE VARIABLES
.*
         DC    A(TOT&SYSNDX)       NUMBER OF ENTRIES
         DC    CL15'INVALID MSG 000' MSG 0-USE IF MSG NOT DEFINED
         SPACE 2
&IGTMBRL SETC  '&SYSNDX'           SAVE INITIAL SYSNDX VALUE
.NFIRST  ANOP  ,                   INITIALIZATION COMPLETE
.*
.* CHECK FOR LAST CALL ENTRY
.*
         AIF   ('&LAST' EQ '' OR '&LAST' EQ 'NO').NLAST
         AIF   ('&LAST' NE 'YES').LASTERR
         AIF   ('&MSG' EQ '').LASTOK INSURE NO MESSAGE SPECIFIED
         IGTXMERR ERRN=09,         * 'LAST=YES' AND 'MSG' MUTUALLY     *
               KEYWORD=(MSG,LAST), * EXCLUSIVE. GIVE ERROR MESSAGE     *
               VALUE=(&MSG,&LAST), * AND DEFAULT 'MSG' TO NULL.        *
               DEFAULT=NULL,       *                                   *
               ERRLVL=4            * MINOR ERROR
.LASTOK  ANOP  ,                   VALID LAST CALL
*
** END OF SYNAD ERROR MESSAGES
*
TOT&IGTMBRL EQU &IGTMBRN           NUMBER OF MESSAGES
         MEXIT ,                   END OF MACRO EXPANSION
.LASTERR IGTXMERR ERRN=1,          LAST= NOT PROPERLY SPECIFIED        *
               KEYWORD=LAST,       * GIVE ERROR MESSAGE AND            *
               VALUE=(&LAST),      * DEFAULT TO LAST=NO                *
               QUANT='YES AND NO', * (IE EXPECT MORE ERROR MESSAGES)   *
               DEFAULT=NO          *
.NLAST   ANOP  ,                   NOT LAST CALL -- PROCESS ENTRY
.*
.* BUILD MESSAGE DC
.*
         AIF   (T'&NUMBER EQ 'N').MSGOK1 MSG NUMBER MUST BE A
&N       SETA  &IGTMBRN+1          * SELF DEFINING TERM
         IGTXMERR ERRN=6,          * IF NOT, GIVE ERROR MSG &          *
               KEYWORD=NUMBER,     * DEFAULT TO NEXT SEQUENTIAL        *
               VALUE=(&NUMBER),    * MESSAGE NUMBER                    *
               QUANT='SELF-DEFINING TERMS',                            *
               DEFAULT=&N
         AGO   .NSET               * NUMBER NOW SET
.MSGOK1  ANOP  ,                   IF NUMBER IS SELF-DEFINING, THEN
&N       SETA  &NUMBER             * INSURE THAT MESSAGES ARE IN
         AIF   (&N GT &IGTMBRN).MSGOK2 * ASCENDING SEQUENCE.
&N       SETA  &IGTMBRN+1          * IF NOT, THEN GIVE AN ERROR
         IGTXMERR ERRN=11,         * MESSAGE AND DEFAULT TO            *
               VALUE=(&NUMBER),    * THE NEXT SEQUENTIAL NUMBER        *
               KEYWORD=(NUMBER,ASCENDING),                             *
               DEFAULT=&N
         AGO   .NSET               * NUMBER NOW SET
.MSGOK2  ANOP  ,                   MESSAGE NUMBER VALID
.*
.* IN NOT PROCESSING NEXT ID, THEN GENERATE DUMMY
.* MESSAGES BETWEEN &IGTMBRN+1 AND &N-1.
.*
.DUMMYMG ANOP  ,                   LOOP FOR DUMMY MESSAGES
         AIF   (&N EQ &IGTMBRN+1).NSET READY FOR NEW MSG ?
         DC    CL15'INVALID MSG &IGTMBRN' MSG NUMBER NOT USED
&IGTMBRN SETA  &IGTMBRN+1          INCREMENT NUMBER OF MESSAGES
         AGO   .DUMMYMG            RETRY TEST FOR MSG LOCATION
.NSET    ANOP  ,                   AT CORRECT MSG LOCATION
.*
.** VALIDATE MSG CONTENTS. IT MUST BE OF THE FORM:
.**      'MSG'
.** WHERE MSG IS OF 1-15 CHARACTERS & DOES NOT CONTAIN QUOTES
.*
         AIF   (K'&MSG LT 2).MSGBAD0 MUST BE ENCLOSED IN QUOTES
         AIF   ('&MSG'(1,1) NE '''' OR                                 *
               '&MSG'(K'&MSG,1) NE '''').MSGBAD0 IF NOT, IS ERROR
         AIF   (K'&MSG GT 17).MSGBAD1 MSG NOT LONGER THAN 15
         DC    CL15&MSG            SYNAD MESSAGE
         AGO   .EXIT               GO TO EXIT LOGIC
.MSGBAD0 ANOP  ,                   NOT ENCLOSED IN QUOTES
&E       SETA  1                   ERROR MESSAGE NUMBER
         AGO   .MSGBAD             GO GENERATE MESSAGE
.MSGBAD1 ANOP  ,                   MSG TOO LONG
&E       SETA  3                   ERROR MESSAGE NUMBER
.MSGBAD  ANOP  ,                   INVALID MSG VALUE
         IGTXMERR ERRN=&E,         * SHOW ALLOWABLE RANGE              *
               KEYWORD=MESSAGE,    * & DEFAULT TAKEN                   *
               VALUE=(&MSG),       * FOR &MSG                          *
               RANGE='1 TO 15 CHARACTERS ENCLOSED IN QUOTES.',         *
               DEFAULT='''INVALID MSG &N'''
         DC    CL15'INVALID MSG &N' *** INVALID MSG SPECIFIED ***
.EXIT    ANOP  ,                   CHECK FOR LAST REQUEST
         SPACE 2                   SPACING BETWEEN REQUESTS
&IGTMBRN SETA  &IGTMBRN+1          INCREMENT NUMBER OF MESSAGES
         MEND  ,                   END OF MACRO
         EJECT ,
         MACRO
         KYWD  &NUMBER,&KEYWORD,&LAST= SYNAD ERROR MESSAGE KEYWORD
         GBLA  &IGTMBRM            NUMBER OF ENTRIES
         GBLC  &IGTMBRP            SYSNDX FOR FIRST CALL
         LCLA  &N                  HOLD &NUMBER VALUE
         LCLA  &E                  HOLD ERROR NUMBER
         COPY  IGTXSYSA            SYSTEM STATUS
         AIF   (&IGTMBRM NE 0).NFIRST CHECK FOR FIRST CALL
.*
.* INITIALIZE VARIABLES
.*
         DC    A(TOT&SYSNDX)       NUMBER OF ENTRIES
         DC    CL08'********'      NAME 00-USE IF KEYWORD NOT DEFINED
         SPACE 2
&IGTMBRP SETC  '&SYSNDX'           SAVE INITIAL SYSNDX VALUE
.NFIRST  ANOP  ,                   INITIALIZATION COMPLETE
.*
.* CHECK FOR LAST CALL ENTRY
.*
         AIF   ('&LAST' EQ '' OR '&LAST' EQ 'NO').NLAST
         AIF   ('&LAST' NE 'YES').LASTERR
         AIF   ('&KEYWORD' EQ '').LASTOK INSURE NO KEYWORD SPECIFIED
         IGTXMERR ERRN=09,         * 'LAST=YES' AND 'KEYWORD' MUTUALLY *
               KEYWORD=(KEYWORD,LAST), * EXCLUSIVE. GIVE ERROR MESSAGE *
               VALUE=(&KEYWORD,&LAST), * AND DEFAULT 'MSG' TO NULL.    *
               DEFAULT=NULL,       *                                   *
               ERRLVL=4            * MINOR ERROR
.LASTOK  ANOP  ,                   VALID LAST CALL
*
** END OF SYNAD ERROR MESSAGE KEYWORDS
*
TOT&IGTMBRP EQU &IGTMBRM           NUMBER OF KEYWORDS
         MEXIT ,                   END OF MACRO EXPANSION
.LASTERR IGTXMERR ERRN=1,          LAST= NOT PROPERLY SPECIFIED        *
               KEYWORD=LAST,       * GIVE ERROR MESSAGE AND            *
               VALUE=(&LAST),      * DEFAULT TO LAST=NO                *
               QUANT='YES AND NO', * (IE EXPECT MORE ERROR MESSAGES)   *
               DEFAULT=NO          *
.NLAST   ANOP  ,                   NOT LAST CALL
.*
.* PROCESS KEYWORD
.*
         AIF   (T'&NUMBER EQ 'N').KWDOK1 KWD NUMBER MUST BE A
&N       SETA  &IGTMBRM+1          * SELF DEFINING TERM
         IGTXMERR ERRN=6,          * IF NOT, GIVE ERROR MSG &          *
               KEYWORD=NUMBER,     * DEFAULT TO NEXT SEQUENTIAL        *
               VALUE=(&NUMBER),    * KEYWORD NUMBER                    *
               QUANT='SELF-DEFINING TERMS',                            *
               DEFAULT=&N
         AGO   .NSET               * NUMBER NOW SET
.KWDOK1  ANOP  ,                   IF NUMBER IS SELF-DEFINING, THEN
&N       SETA  &NUMBER             * INSURE THAT KEYWORDS ARE IN
         AIF   (&N GT &IGTMBRM).KWDOK2 * ASCENDING SEQUENCE.
&N       SETA  &IGTMBRM+1          * IF NOT, THEN GIVE AN ERROR
         IGTXMERR ERRN=11,         * MESSAGE AND DEFAULT TO            *
               VALUE=(&NUMBER),    * THE NEXT SEQUENTIAL NUMBER        *
               KEYWORD=(NUMBER,ASCENDING),                             *
               DEFAULT=&N
         AGO   .NSET               * NUMBER NOW SET
.KWDOK2  ANOP  ,                   KEYWORD NUMBER VALID
.*
.* IN NOT PROCESSING NEXT ID, THEN GENERATE DUMMY
.* KEYWORDS BETWEEN &IGTMBRM+1 AND &N-1.
.*
.DUMMYKW ANOP  ,                   LOOP FOR DUMMY KEYWORDS
         AIF   (&N EQ &IGTMBRM+1).NSET READY FOR NEW KEYWORD ?
         DC    CL08'KYWD &IGTMBRM' KEYWORD NOT USED
&IGTMBRM SETA  &IGTMBRM+1          INCREMENT NUMBER OF KEYWORDS
         AGO   .DUMMYKW            RETRY TEST FOR KEYWORD LOCATION
.NSET    ANOP  ,                   AT CORRECT LOCATION
.*
.** VALIDATE KEYWORD CONTENTS. IT MUST BE OF THE FORM:
.**      KEYWORD
.** WHERE KEYWORD IS FROM 1-8 CHARACTERS AND
.** NOT SURROUNDED BY QUOTES.
.*
         AIF   (K'&KEYWORD EQ 0).KWDBAD0 MUST EXIST
         AIF   (K'&KEYWORD GT 08).KWDBAD1 KWD NOT LONGER THAN 8
         DC    CL08'&KEYWORD'      KEYWORD
         AGO   .EXIT               GO TO EXIT LOGIC
.KWDBAD0 ANOP  ,                   KEYWORD DOES NOT EXIST
&E       SETA  2                   ERROR MESSAGE NUMBER
         AGO   .KWDBAD             GO GENERATE MESSAGE
.KWDBAD1 ANOP  ,                   KWD TOO LONG
&E       SETA  3                   ERROR MESSAGE NUMBER
.KWDBAD  ANOP  ,                   INVALID KWD VALUE
         IGTXMERR ERRN=&E,         * SHOW ALLOWABLE RANGE              *
               KEYWORD=KEYWORD,    * & DEFAULT TAKEN                   *
               VALUE=(&KEYWORD),   * FOR &KEYWORD                      *
               RANGE='1 TO 8 CHARACTERS NOT ENCLOSED IN QUOTES.',      *
               DEFAULT='KYWD &N'
         DC    CL08'KYWD &N'       *** INVALID KWD SPECIFIED ***
.EXIT    ANOP  ,                   CHECK FOR LAST REQUEST
         SPACE 2                   SPACING BETWEEN REQUESTS
&IGTMBRM SETA  &IGTMBRM+1          INCREMENT NUMBER OF KEYWORDS
.DONE    MEXIT ,                   END OF MACRO EXPANSION
         MEND  ,                   END OF MACRO
         EJECT ,
IGTMBR   CSECT ,
*/* * START OF SPECIFICATIONS ************************************** */
*/*                                                                  */
*/*   MODULE-NAME = IGTMBR                                           */
*/*                                                                  */
*/*   DESCRIPTIVE-NAME = VPSS CALL ERROR MESSAGES AND KEYWORDS       */
*/*                                                                  */
*/*   COPYRIGHT = NONE                                               */
*/*                                                                  */
*/*   STATUS = RELEASE 1, MODIFICATION LEVEL 0.                      */
*/*                                                                  */
*/*   FUNCTION = THIS ROUTINE CONTAINS THE ERROR MESSAGES            */
*/*       (15-CHARACTERS) AND KEYWORDS (8-CHARACTERS) USED TO        */
*/*       CONSTRUCT VPSS ERROR MESSAGES.                             */
*/*                                                                  */
*/*   NOTES =                                                        */
*/*                                                                  */
*/*     DEPENDENCIES =                                               */
*/*        ALL ROUTINES USING THIS MODULE MUST BE CHANGED IF THE     */
*/*        FORMAT OF THIS MODULE CHANGES.  ADDITION OF NEW ERROR     */
*/*        MESSAGES AND KEYWORDS WILL ONLY REQUIRE AN ASSEMBLY OF    */
*/*        THOSE MODULES WHICH USE THE NEW VALUES.  MACRO IGTXAPCM   */
*/*        CONTAINS THE INDEXES INTO THE MESSAGE AND KEYWORD         */
*/*        SECTIONS OF THIS MODULE.  MACRO IGTXAPMV DESCRIBES THE    */
*/*        FORMAT OF THIS MODULE.                                    */
*/*                                                                  */
*/*     RESTRICTIONS = NONE.                                         */
*/*                                                                  */
*/*     REGISTER-CONVENTIONS = STANDARD VPSS CONVENTIONS             */
*/*                                                                  */
*/*     PATCH-LABEL = APPATCH                                        */
*/*                                                                  */
*/*   MODULE-TYPE = CSECT                                            */
*/*                                                                  */
*/*     PROCESSOR = VS/2 ASSEMBLER                                   */
*/*                                                                  */
*/*     MODULE SIZE = SEE END OF ASSEMBLER LISTING                   */
*/*                                                                  */
*/*     ATTRIBUTES = RE-ENTRANT, ONLY-LOADABLE (CONSTANTS ONLY)      */
*/*                                                                  */
*/*   ENTRY-POINT = IGTMBR                                           */
*/*                                                                  */
*/*     PURPOSE = SAME AS FUNCTION                                   */
*/*                                                                  */
*/*     LINKAGE = N/A.  CONTAINS CONSTANTS ONLY.  NO EXECUTABLE      */
*/*               CODE EXISTS IN THIS MODULE.                        */
*/*                                                                  */
*/*     INPUT = N/A.                                                 */
*/*                                                                  */
*/*     OUTPUT = N/A.                                                */
*/*                                                                  */
*/*   EXIT-NORMAL = N/A.                                             */
*/*                                                                  */
*/*   EXIT-ERROR  = N/A.                                             */
*/*                                                                  */
*/*   EXTERNAL-REFERENCES = THE FOLLOWING ROUTINES AND               */
*/*                         CONTROL BLOCKS ARE USED.                 */
*/*                                                                  */
*/*     ROUTINES = N/A.                                              */
*/*                                                                  */
*/*     DATA-AREAS = NONE.                                           */
*/*                                                                  */
*/*     CONTROL-BLOCKS =                                             */
*/*         APEM     -       C                                       */
*/*                                                                  */
*/*   TABLES = NONE                                                  */
*/*                                                                  */
*/*   MACROS =                                                       */
*/*       MSG   -- INTERNAL MACRO                                    */
*/*       KYWD  -- INTERNAL MACRO                                    */
*/*       IGTXMERR  -- GENERATE VPSS MACRO ERROR MESSAGE             */
*/*       IGTXEPLG                                                   */
*/*                                                                  */
*/*   CHANGE-ACTIVITY = NONE                                         */
*/*                                                                  */
*/*   MESSAGES =                                                     */
*/*      CONTAINS SKELETON APEM.                                     */
*/*                                                                  */
*/*   ABEND-CODES = NONE                                             */
*/*                                                                  */
*/* * END OF SPECIFICATIONS **************************************** */
         SPACE 3
         COPY  IGTXSYSO            DEFINE SCP CHARACTERISTICS
         SPACE 5
***********************************************************************
*                                                                     *
*        ADDRESSES OF INDIVIDUAL TABLES                               *
*                                                                     *
***********************************************************************
         SPACE 3
         DC    A(APEM)             ADDRESS OF SKELETON SYNAD MESSAGE
         DC    A(KEYWORDS)         ADDRESS OF KEYWORD TABLE
         DC    A(MSGS)             ADDRESS OF SYNAD MESSAGE TABLE
         EJECT ,
***********************************************************************
*                                                                     *
*        SYNAD MESSAGE SKELETON                                       *
*                                                                     *
***********************************************************************
         SPACE 5
         IGTXAPEM LIST=YES,DSECT=NO GENERATE SYNAD MESSAGE
         EJECT ,
***********************************************************************
*                                                                     *
*        KEYWORD CONSTANTS                                            *
*                                                                     *
***********************************************************************
         SPACE 5
KEYWORDS DS    0D                  KEYWORD CONSTANTS
 KYWD          001,REG
 KYWD          002,STRN
 KYWD          003,OWN
 KYWD          004,LERR
 KYWD          005,PERR
 KYWD          006,INTV
 KYWD          007,EMSG
 KYWD          008,RBA
 KYWD          009,RCDE
 KYWD          010,BSAD
 KYWD          011,IUNIT
 KYWD          012,IFUNC
 KYWD          013,IERROR
 KYWD          014,IAPRL
 KYWD          015,ISTATE
 KYWD          016,IFMY
 KYWD          017,YARRV
 KYWD          018,ICTY
 KYWD          019,IDLY
 KYWD          020,YARRVX
 KYWD          021,ICTYX
 KYWD          022,IDLYX
 KYWD          023,IFMX
 KYWD          024,XARRV
 KYWD          025,ICTX
 KYWD          026,IDLX
 KYWD          027,XARRVX
 KYWD          028,ICTXX
 KYWD          029,IDLXX
 KYWD          030,IFMU
 KYWD          031,UARRV
 KYWD          032,ICTU
 KYWD          033,IDLU
 KYWD          034,UARRVX
 KYWD          035,ICTUX
 KYWD          036,IDLUX
 KYWD          037,COND
 KYWD          038,IVAL1
 KYWD          039,IVAL2
 KYWD          040,LABEL
 KYWD          041,ACIT
 KYWD          042,ICIT
 KYWD          043,ACCW
 KYWD          044,ICCW
 KYWD          045,APIO
 KYWD          046,NULL
 KYWD          047,SP-000
 KYWD          048,SP-252
 KYWD          049,SP-230
 KYWD          050,ACB
 KYWD          051,APLB
 KYWD          052,APRL
 KYWD          053,DEBCHK
 KYWD          054,FREEMAIN
 KYWD          055,GETMAIN
 KYWD          056,SETLOCK
 KYWD          057,PGFIX
 KYWD          058,PGFREE
 KYWD          059,SETFRR
         AIF   ('&VPSSSYS' NE 'MVS').VS1K060 SKIP IF VS1
 KYWD          060,ESTAE
         AGO   .MVSK060            SKIP VS1 EXPANSION
.VS1K060 ANOP  ,                   VS1 EXPANSION
 KYWD          060,STAE
.MVSK060 ANOP  ,                   KEYWORD 060 FOR MVS/VS1 GENERATED
 KYWD          061,CCW
 KYWD          062,SP-241
 KYWD          063,APXL
 KYWD          064,VSL
 KYWD          065,APDX
 KYWD          066,IDAL
 KYWD          067,APCI
 KYWD          068,APMF
 KYWD          069,SP-245
 KYWD          070,SMF
 KYWD          071,SUSPEND
 KYWD          072,RESUME
 KYWD          073,APUB
 KYWD          074,FESTAE
 KYWD          LAST=YES            GENERATE THE NUMBER OF ENTRIES
         EJECT ,
***********************************************************************
*                                                                     *
*        SYNAD MESSAGES                                               *
*                                                                     *
***********************************************************************
         SPACE 5
MSGS     DS    0D                  SYNAD MESSAGES
 MSG           001,'UNSUPPORT FUNC'
 MSG           002,'UNKNOWN FUNC'
 MSG           003,'OUT OF RANGE'
 MSG           004,'ACB MISSING'
 MSG           005,'ACB EXISTS'
 MSG           006,'ACB OPEN'
 MSG           007,'ACB CLOSED'
 MSG           008,'BLD NOT ACTIVE'
 MSG           009,'INVLD NBR PARMS'
 MSG           010,'INVALID KEYWORD'
 MSG           011,'INVALID VALUE'
 MSG           012,'DD STMT MISSING'
 MSG           013,'INVALID DD STMT'
 MSG           014,'VALUE NOT GIVEN'
 MSG           015,'CANNOT MODIFY'
 MSG           016,'JCL DOWNGRADE'
 MSG           017,'MODULE MISSING'
 MSG           018,'NO STORAGE'
 MSG           019,'INVLD SVC FUNC'
 MSG           020,'DDNAME IN USE'
 MSG           021,'BAD CNTRL BLOCK'
 MSG           022,'(UN)ALLOC FAIL'
 MSG           023,'INSTAL EXIT REJ'
 MSG           026,'NOT DWORD BDY'
 MSG           027,'DUPLICATE LABEL'
 MSG           029,'UNRESLVD LABELS'
 MSG           030,'NOT A WORD BDY'
 MSG           031,'NO FREE APRLS'
 MSG           032,'NOT TRANSLATED'
 MSG           033,'SUPV SERV FAIL'
 MSG           034,'APIO ACTIVE'
 MSG           035,'PGM CHK REF'
 MSG           036,'UNEXPECTD ABEND'
 MSG           037,'LOGIC ERROR'
 MSG           039,'TABLE OVERFLOW'
 MSG           040,'UNKNOWN COND'
 MSG           041,'STARTIO ERROR'
 MSG           042,'PURGED REQUEST'
 MSG           043,'UNIT EXCEPTION'
 MSG           044,'PROGRAM CHK'
 MSG           045,'PROTECTION CHK'
 MSG           046,'CHAN DATA CHK'
 MSG           047,'CHAN CNTL CHK'
 MSG           048,'INTFCE CNTL CHK'
 MSG           049,'CHAINING CHK'
 MSG           050,'UNIT CHECK'
 MSG           051,'CMD REJECT'
 MSG           052,'INT REQ'
 MSG           053,'BUS OUT CHK'
 MSG           054,'EQP CHECK'
 MSG           055,'DATA CHECK'
 MSG           056,'NOT IPLED'
 MSG           057,'I/O LIMIT CHK'
 MSG           058,'I/O LENGTH CHK'
 MSG           059,'CHAN PGM SHORT'
 MSG           060,'INCORRECT LNGTH'
 MSG           061,'UNKN CIT OPCODE'
 MSG           062,'INVLD CIT OPTN'
 MSG           063,'INVLD CIT BRNCH'
 MSG           064,'EXCEED BRNCH CT'
 MSG           065,'INDEX OVERFLOW'
 MSG           066,'INDEX DIV BY 0'
 MSG           067,'BLK STOR LIM CK'
 MSG           068,'DATA CONVERT CK'
 MSG           069,'FLT PT OVERFLOW'
 MSG           070,'FLT PT UNDERFLW'
 MSG           071,'FLT PT UNNORM'
 MSG           072,'FLT PT DIV BY 0'
 MSG           073,'DATA DEPENDENT'
 MSG           074,'EXCL PORT REIPL'
 MSG           075,'NO PORT AVAIL'
 MSG           LAST=YES            GENERATE THE NUMBER OF ENTRIES
         EJECT ,
         IGTXAPCC LIST=YES         SHOW ERROR CODES
         EJECT ,
         IGTXAPCM LIST=YES         SHOW MESSAGE/KEYWORD INDEX VALUES
         EJECT ,
         IGTXEPLG ,                GENERATE PATCH FOR IDENTIFICATION
         END   ,
