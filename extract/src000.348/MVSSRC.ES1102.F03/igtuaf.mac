TUAF     TITLE 'IGTUAF -- INITIALIZE SAVEAREA/WORKAREA'
IGTUAF   CSECT ,                   INITIALIZE SAVEAREA-WORKAREA
*/* * START OF SPECIFICATIONS ************************************** */
*/*                                                                  */
*/*   MODULE-NAME = IGTUAF                                           */
*/*                                                                  */
*/*   DESCRIPTIVE-NAME = INITIALIZE SAVEAREA/WORKAREA                */
*/*                                                                  */
*/*   COPYRIGHT = NONE                                               */
*/*                                                                  */
*/*   STATUS = RELEASE 1, MODIFICATION LEVEL 0.                      */
*/*                                                                  */
*/*   FUNCTION = THIS ROUTINE WILL CREATE THE REQUIRED VPSS          */
*/*       STORAGE MANAGEMENT CONTROL BLOCKS (APSM, APSC, APSV)       */
*/*       IN A CALLER PROVIDED WORKAREA AND RETURN THE ADDRESS OF    */
*/*       THE APSC.  THIS PROVIDES THE SAME FUNCTION AS IGTUAA       */
*/*       EXCEPT THE USER PROVIDES THE WORKAREA AND THE ADDRESS      */
*/*       OF THE APSC RATHER THAN THE APSV IS RETURNED.              */
*/*       STORAGE MANAGEMENT IS LIFO (LAST ACQUIRED STORAGE MUST     */
*/*       BE INITIALLY RELEASED STORAGE).                            */
*/*                                                                  */
*/*   NOTES =                                                        */
*/*     THIS ROUTINE MAY NOT ASSUME REGISTER 13 POINTS TO A          */
*/*     SAVEAREA.                                                    */
*/*                                                                  */
*/*     DEPENDENCIES =                                               */
*/*        THE USER IS REQUIRED TO COMPLETE APSCCRSZ AND TO          */
*/*        BYPASS THE APSC WHEN BUILDING THE SAVEAREA/DYNAMIC AREA.  */
*/*        THE USER MUST ALSO INSURE THAT THE SUPPLIED AREA IS       */
*/*        LARGE ENOUGH TO HOLD THE APSM, APSC, AND APSV AS WELL     */
*/*        AS THE USER'S CONTROL BLOCKS.                             */
*/*                                                                  */
*/*     RESTRICTIONS =                                               */
*/*        SINCE THIS ROUTINE MAY BE ENTERED IN EITHER PROBLEM OR    */
*/*        SUPERVISOR STATE AND IN ANY KEY, THIS PROGRAM MAY NOT     */
*/*        ISSUE PRIVLEDGED INSTRUCTIONS OR UPDATE SYSTEM CONTROL    */
*/*        BLOCKS.                                                   */
*/*                                                                  */
*/*     REGISTER-CONVENTIONS = STANDARD VPSS CONVENTIONS             */
*/*                                                                  */
*/*     PATCH-LABEL = APPATCH                                        */
*/*                                                                  */
*/*   MODULE-TYPE = CSECT                                            */
*/*                                                                  */
*/*     PROCESSOR = VS/2 ASSEMBLER                                   */
*/*                                                                  */
*/*     MODULE SIZE = SEE END OF ASSEMBLER LISTING                   */
*/*                                                                  */
*/*     ATTRIBUTES = RE-ENTRANT.                                     */
*/*                                                                  */
*/*   ENTRY-POINT = IGTUAF                                           */
*/*                                                                  */
*/*     PURPOSE = SAME AS FUNCTION                                   */
*/*                                                                  */
*/*     LINKAGE = ENTERED UNLOCKED, TASK MODE, ENABLED. MAY BE       */
*/*               IN ANY KEY AND EITHER PROBLEM OR SUPERVISOR        */
*/*               STATE.                                             */
*/*                                                                  */
*/*     INPUT = THE FOLLOWING REGISTERS ARE INITIALIZED ON ENTRY --  */
*/*         REGISTER  0 - BYTE-0 CONTAINS THE SUBPOOL OF THE         */
*/*                       STORAGE.  BYTES 1-3 CONTAIN THE LENGTH     */
*/*                       OF THE SUPPLIED AREA.                      */
*/*         REGISTER  1 - ADDRESS OF THE USER SUPPLIED STORAGE       */
*/*                       TO BE FORMATTED INTO A VPSS APSM.          */
*/*         REGISTER 12 - ADDRESS OF THE APCT.                       */
*/*         REGISTER 14 - RETURN ADDRESS                             */
*/*         REGISTER 15 - ADDRESS OF THIS ROUTINE (IGTUAF).          */
*/*         NOTE: REGISTER 13 DOES NOT POINT TO A SAVEAREA.          */
*/*                                                                  */
*/*     OUTPUT = AN APSM IS CONSTRUCTED TO DESCRIBE THE SUPPLIED     */
*/*              STORAGE.  AN APSC AND APSV ARE INITIALIZED FOR      */
*/*              THE NEW SAVEAREA/WORKAREA. THE CALLER IS            */
*/*              RESPONSIBLE FOR COMPLETING APSCCRSZ.                */
*/*                                                                  */
*/*   EXIT-NORMAL = THE FOLLOWING REGISTERS ARE RETURNED TO THE      */
*/*                 CALLER --                                        */
*/*                 REGISTER  0 - UNPREDICTABLE                      */
*/*                 REGISTER  1 - ADDRESS OF APSC FOR NEW            */
*/*                               SAVEAREA/WORKAREA                  */
*/*                 REGISTER 2-13 - SAME AS ON INPUT                 */
*/*                 REGISTER 14 - RETURN ADDRESS                     */
*/*                 REGISTER 15 - UNPREDICTABLE                      */
*/*                                                                  */
*/*   EXIT-ERROR  = NONE.                                            */
*/*                                                                  */
*/*   EXTERNAL-REFERENCES = THE FOLLOWING ROUTINES AND               */
*/*                         CONTROL BLOCKS ARE USED.                 */
*/*                                                                  */
*/*     ROUTINES = NONE.                                             */
*/*                                                                  */
*/*     DATA-AREAS = NONE                                            */
*/*                                                                  */
*/*     CONTROL-BLOCKS =                                             */
*/*         APCT     - R                                             */
*/*         APSC     - R,       C                                    */
*/*         APSM     - R,       C                                    */
*/*         APSV     - R,       C                                    */
*/*                                                                  */
*/*   TABLES = NONE                                                  */
*/*                                                                  */
*/*   MACROS =                                                       */
*/*       IGTXEPLG                                                   */
*/*                                                                  */
*/*   CHANGE-ACTIVITY = NONE                                         */
*/*                                                                  */
*/*   MESSAGES = NONE                                                */
*/*                                                                  */
*/*   ABEND-CODES = NONE                                             */
*/*                                                                  */
*/* * END OF SPECIFICATIONS **************************************** */
         EJECT ,
         COPY  IGTXSYSO            SCP CHARACTERISTICS
         SPACE 2
         USING APCT,APCTPTR        CONTROL TABLE
         USING IGTUAF,APENTRY      BASE
         B     STARTUP             SKIP IN-CORE ID
         DC    YL1(COREIDE-*-1)    ID LENGTH
         DC    C'IGTUAF'           PGM NAME
         DC    C' &SYSDATE'        ASSEMBLY DATE
COREIDE  EQU   *                   END OF ID
         SPACE 2
STARTUP  DS    0H                  START OF CODE
*
** SAVE INPUT REGS IN APSM TO BE CONSTRUCTED
*
         USING APSM,APSMPTR        APSM FIRST IN DYNAMIC AREA
         ST    RTEMPA,APSMSAVE     SAVE INPUT VALUES
*
** CONSTRUCT APSM
*
         XC    APSM(APSMLN0),APSM  INITIALIZE UNUSED FIELDS
         MVC   APSMID,CAPSMID      IN-CORE ID
         ST    R0,APSMSIZE         SUBPOOL/LENGTH
         LA    RTEMPA,APSMSAVE     REGISTER SAVEAREA POINTER
         ST    RTEMPA,APSMREGS     * IN THIS APSM
*
** CONSTRUCT APSC
*
         USING APSC-APSMLN1,APSMPTR APSC AFTER APSM
         SH    R0,CAPSMLN1         APSC LENGTH IS INPUT LENGTH
         STH   R0,APSCMXSZ         * MINUS APSM LENGTH
         SR    R0,R0               NO PREVIOUS APSC
         ST    R0,APSCAPSC         * EXISTS
*                                  NOTE APSCCRSZ FILLED BY USER
*
** CONSTRUCT APSV
*
         USING APSV-APSCLN-APSMLN1,APSMPTR APSV AFTER APSC
         LA    RTEMPA,APSMLN1(,APSMPTR) POINTER TO APSC IN
         ST    RTEMPA,APSVAPSC     * APSV
         ST    APSMPTR,APSVAPSM    CURRENT APSM
         ST    APSMPTR,APSVFREE    FREE APSM AT SUBROUTINE TERMINATION
*
** RELOAD SAVED REGISTERS.
** POINT TO APSC.
** RETURN.
*
         USING APSM,APSMPTR        TELL ASSEMBLER OF POINTER
         L     RTEMPA,APSMSAVE     RELOAD CHANGED INPUT REGS
         LA    APSCPTR,APSM+APSMLN1 POINT TO APSC. RETURNED TO CALLER
         BR    APRETURN            EXIT
         EJECT ,
***********************************************************************
**                                                                    *
**       CONSTANTS                                                    *
**                                                                    *
***********************************************************************
         SPACE 2
CAPSMLN1 DC    Y(APSMLN1)          INITIAL APSM LENGTH
CAPSMID  DC    CL4'APSM'           IN-CORE ID FOR APSM
         SPACE 5
***********************************************************************
**                                                                    *
**       DEFINE REQUESTED VPSS DSECTS                                 *
**                                                                    *
***********************************************************************
         SPACE 2
         IGTXDSCT IGTXAPCT         CONTROL TABLE
         IGTXDSCT IGTXAPSC         STORAGE MANAGEMENT CONTROL WORD
         IGTXDSCT IGTXAPSM         STORAGE MANAGEMENT CONTROL BLOCK
         IGTXDSCT IGTXAPSV         EXTENDED SAVEAREA
         EJECT ,
         IGTXEPLG ,                DEFINE DSECTS & REGISTERS
RTEMPA   EQU   R2                  TEMPORARY CNTRL BLK POINTER
         SPACE 5
         END   ,                   CSECT END
