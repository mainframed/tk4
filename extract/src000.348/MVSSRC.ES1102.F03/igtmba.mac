TMBA     TITLE 'IGTMBA -- FAST PATH                                    *
                        '
IGTMBA   CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IGTMBA    77.092'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @07,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@07                                      01S0001
*   RFUNC=APINFUNC;                 /* RFUNC CONTAINS FUNCTION NAME
*                                      APRLPTR -> APRL BEFORE USING.
*                                      LOAD ADDRESS IF ONE OF THREE  */
         L     @09,APINAFNC(,APINPTR)                           01S0036
         L     RFUNC,APINFUNC(,@09)                             01S0036
*   RFY                                                         01S0037
*    (APRL) BASED(APRLPTR);         /* FUNCTIONS PROCESSED BY RTN.   */
*   RFY                                                         01S0038
*    (RCODE) RSTD;                  /* SET TO RETURN CODE            */
*   RCODE=APCCROK;                  /* SET TO NORMAL RETURN CODE (0) */
         SLR   RCODE,RCODE                                      01S0039
*   RFY                                                         01S0040
*    (ECB) BASED(ADDR(APRLECB));    /* ECB WITHIN APRL               */
*                                                               01S0040
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR 'FAST PATH' REQUESTS (EXCW,EXC,WAIT) AND PROCESS.   */
*   /* OTHERWISE GO TO MODULE IGTMBD.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0041
         EJECT
*   IF RFUNC=APFNEXCW THEN          /* CHECK FOR EXECUTE & WAIT      */
         CL    RFUNC,@CF01009                                   01S0041
         BNE   @RF00041                                         01S0041
*     DO;                           /* 'EXCW' LOGIC                  */
*                                                               02S0042
*       /*************************************************************/
*       /*                                                           */
*       /* 'EXCW' -- EXECUTE-AND-WAIT. THIS IS SYNCHRONOUS           */
*       /* PROCESSING. CONTROL IS NOT RETURNED TO THE CALLER UNTIL   */
*       /* THE I/O IS COMPLETE.                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0043
*       APRLPTR=APINAPRL;           /* APRLPTR -> APRL               */
         L     @06,APINAAR(,APINPTR)                            02S0043
         L     APRLPTR,APINAPRL(,@06)                           02S0043
*       TS(APRLACTV);               /* SEE IF APRL CURRENTLY ACTIVE  */
         TS    APRLACTV(APRLPTR)                                02S0044
*       BC(TSOFFMSK,PEXCW01);       /* IF ACTIVE, THEN               */
         BC    8,PEXCW01                                        02S0045
*       RCODE=APCCRBSY;             /* SET ERROR CODE TO SHOW BUSY.  */
         LA    RCODE,4                                          02S0046
*       GOTO EXIT4;                 /* AND GO TO EXIT LOGIC.         */
         B     EXIT4                                            02S0047
*PEXCW01:                                                       02S0048
*       ;                           /* APRL MARKED ACTIVE NOW        */
PEXCW01  DS    0H                                               02S0049
*       APRLASY=BOFF;               /* AFTER SHOWING SYNCHRONOUS,    */
         NI    APRLASY(APRLPTR),B'11110111'                     02S0049
*       DO;                         /* IGTYIO APRL(APRL)FUNC(EXCP)   */
*         RFY                                                   02S0051
*          (GPR00F,                                             02S0051
*           GPR01P) RSTD;           /* RESTRICT REQUIRED REGISTERS   */
*         GPR00F=0;                 /* SET R0 = FUNCTION REQUEST ID  */
         SLR   GPR00F,GPR00F                                    02S0052
*         GPR01P=ADDR(APRL);        /* POINT TO APRL TO PROCESS      */
         LR    GPR01P,APRLPTR                                   02S0053
*         SVC(111);                 /* ISSUE VPSS SVC REQUEST        */
         SVC   111                                              02S0054
*         RFY                                                   02S0055
*          (GPR00F,                                             02S0055
*           GPR01P) UNRSTD;         /* RELEASE REGISTERS             */
*       END;                        /* IGTYIO APRL(APRL)FUNC(EXCP)
*                                      ISSUE I/O REQUEST.            */
*       DO;                         /* IGTYWAIT ECB(APRLECB)         */
*         RFY                                                   02S0058
*          (GPR00F,                                             02S0058
*           GPR01P) RSTD;           /* REGISTERS USED                */
*         DCL                                                   02S0059
*           BIT0013X BIT(8) BASED(ADDR(APRLECB));/* OVERLAY BYTE-0 OF
*                                      ECB                           */
*         IF BIT0013X(2)='0'B THEN  /* IF ECB NOT ALREADY POSTED     */
         TM    BIT0013X+8(APRLPTR),B'01000000'                  02S0060
         BNZ   @RF00060                                         02S0060
*           DO;                     /* THEN ISSUE WAIT SVC           */
*             GPR01P=ADDR(APRLECB); /* POINT TO ECB                  */
         LA    GPR01P,APRLECB(,APRLPTR)                         02S0062
*             GPR00F=1;             /* WAIT COUNT                    */
         LA    GPR00F,1                                         02S0063
*             SVC(1);               /* WAIT FOR ECB POSTING          */
         SVC   1                                                02S0064
*           END;                    /* ECB WAIT COMPLETE             */
*         RFY                                                   02S0066
*          (GPR00F,                                             02S0066
*           GPR01P) UNRSTD;         /* FINISHED WITH REGISTERS       */
@RF00060 DS    0H                                               02S0067
*       END;                        /* ECB WAIT COMPLETE WAIT FOR I/O
*                                      COMPLETION                    */
*       APRLACTV=TSOFF;             /* RESET ACTIVE INDICATOR        */
         MVI   APRLACTV(APRLPTR),X'00'                          02S0068
*       IF APRLECBC='7F'X THEN      /* IF NORMAL COMPLETION,         */
         CLI   APRLECBC(APRLPTR),X'7F'                          02S0069
         BE    @RT00069                                         02S0069
*         GOTO EXIT0;               /* THEN GO TO EXIT ROUTINE       */
*       ELSE                        /* OTHERWISE --                  */
*         GOTO EXITXCTL;            /* GO TO 'XCTL' LOGIC (ERROR)    */
         B     EXITXCTL                                         02S0071
*     END;                          /* END OF 'EXCW' LOGIC           */
         EJECT
*   IF RFUNC=APFNEXC THEN           /* CHECK FOR EXECUTE             */
@RF00041 CL    RFUNC,@CF01007                                   01S0073
         BNE   @RF00073                                         01S0073
*     DO;                           /* 'EXC ' LOGIC                  */
*                                                               02S0074
*       /*************************************************************/
*       /*                                                           */
*       /* 'EXC ' -- EXECUTE. THIS IS ASYNCHRONOUS PROCESSING.       */
*       /* CONTROL IS RETURNED AFTER THE I/O REQUEST IS ISSUED. THE  */
*       /* I/O MIGHT NOT BE COMPLETED (IT MIGHT NOT EVEN BE STARTED).*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0075
*       APRLPTR=APINAPRL;           /* APRLPTR -> APRL               */
         L     @06,APINAAR(,APINPTR)                            02S0075
         L     APRLPTR,APINAPRL(,@06)                           02S0075
*       TS(APRLACTV);               /* SEE IF APRL CURRENTLY ACTIVE  */
         TS    APRLACTV(APRLPTR)                                02S0076
*       BC(TSOFFMSK,PEXC01);        /* IF ACTIVE, THEN               */
         BC    8,PEXC01                                         02S0077
*       RCODE=APCCRBSY;             /* SET ERROR CODE TO SHOW BUSY.  */
         LA    RCODE,4                                          02S0078
*       GOTO EXIT4;                 /* AND GO TO EXIT LOGIC.         */
         B     EXIT4                                            02S0079
*PEXC01:                                                        02S0080
*       ;                           /* APRL MARKED ACTIVE NOW        */
PEXC01   DS    0H                                               02S0081
*       APRLASY=BON;                /* AFTER SHOWING ASYNCHRONOUS,   */
         OI    APRLASY(APRLPTR),B'00001000'                     02S0081
*       DO;                         /* IGTYIO APRL(APRL)FUNC(EXCP)   */
*         RFY                                                   02S0083
*          (GPR00F,                                             02S0083
*           GPR01P) RSTD;           /* RESTRICT REQUIRED REGISTERS   */
*         GPR00F=0;                 /* SET R0 = FUNCTION REQUEST ID  */
         SLR   GPR00F,GPR00F                                    02S0084
*         GPR01P=ADDR(APRL);        /* POINT TO APRL TO PROCESS      */
         LR    GPR01P,APRLPTR                                   02S0085
*         SVC(111);                 /* ISSUE VPSS SVC REQUEST        */
         SVC   111                                              02S0086
*         RFY                                                   02S0087
*          (GPR00F,                                             02S0087
*           GPR01P) UNRSTD;         /* RELEASE REGISTERS             */
*       END;                        /* IGTYIO APRL(APRL)FUNC(EXCP)
*                                      ISSUE I/O REQUEST.            */
*       GOTO EXIT0;                 /* GOTO EXIT ROUTINE.            */
         B     EXIT0                                            02S0089
*     END;                          /* GOTO EXIT LOGIC               */
         EJECT
*   IF RFUNC=APFNWAIT THEN          /* CHECK FOR WAIT.               */
@RF00073 CL    RFUNC,@CF01011                                   01S0091
         BNE   @RF00091                                         01S0091
*     DO;                           /* WAIT FOR I/O COMPLETION       */
*                                                               02S0092
*       /*************************************************************/
*       /*                                                           */
*       /* 'WAIT' -- WAIT. THIS IS ASYNCHRONOUS PROCESSING. CONTROL  */
*       /* IS RETURNED TO THE USER AFTER THE I/O (ISSUED BY 'EXC '   */
*       /* CALL) HAS COMPLETED.                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0093
*       APRLPTR=APINAPRL;           /* APRLPTR -> APRL               */
         L     @06,APINAAR(,APINPTR)                            02S0093
         L     APRLPTR,APINAPRL(,@06)                           02S0093
*       IF APRLACTV=TSOFF THEN      /* IF 'EXC ' REQUEST NOT         */
         CLI   APRLACTV(APRLPTR),X'00'                          02S0094
         BNE   @RF00094                                         02S0094
*         DO;                       /* OUTSTANDING, THEN IS ERROR    */
*           RCODE=APCCRBSY;         /* SET ERROR CODE                */
         LA    RCODE,4                                          02S0096
*           GOTO EXIT4;             /* AND GO TO EXIT LOGIC.         */
         B     EXIT4                                            02S0097
*         END;                      /* NON-ACTIVE APRL PROCESSED     */
*       DO;                         /* IGTYWAIT ECB(APRLECB)         */
@RF00094 DS    0H                                               02S0100
*         RFY                                                   02S0100
*          (GPR00F,                                             02S0100
*           GPR01P) RSTD;           /* REGISTERS USED                */
*         DCL                                                   02S0101
*           BIT0017X BIT(8) BASED(ADDR(APRLECB));/* OVERLAY BYTE-0 OF
*                                      ECB                           */
*         IF BIT0017X(2)='0'B THEN  /* IF ECB NOT ALREADY POSTED     */
         TM    BIT0017X+8(APRLPTR),B'01000000'                  02S0102
         BNZ   @RF00102                                         02S0102
*           DO;                     /* THEN ISSUE WAIT SVC           */
*             GPR01P=ADDR(APRLECB); /* POINT TO ECB                  */
         LA    GPR01P,APRLECB(,APRLPTR)                         02S0104
*             GPR00F=1;             /* WAIT COUNT                    */
         LA    GPR00F,1                                         02S0105
*             SVC(1);               /* WAIT FOR ECB POSTING          */
         SVC   1                                                02S0106
*           END;                    /* ECB WAIT COMPLETE             */
*         RFY                                                   02S0108
*          (GPR00F,                                             02S0108
*           GPR01P) UNRSTD;         /* FINISHED WITH REGISTERS       */
@RF00102 DS    0H                                               02S0109
*       END;                        /* ECB WAIT COMPLETE WAIT FOR I/O
*                                      TO COMPLETE                   */
*       APRLACTV=TSOFF;             /* RESET BUSY INDICATOR          */
         MVI   APRLACTV(APRLPTR),X'00'                          02S0110
*       IF APRLECBC='7F'X THEN      /* IF NORMAL COMPLETION,         */
         CLI   APRLECBC(APRLPTR),X'7F'                          02S0111
         BE    @RT00111                                         02S0111
*         GOTO EXIT0;               /* THEN GO TO EXIT ROUTINE       */
*       ELSE                        /* OTHERWISE --                  */
*         GOTO EXITXCTL;            /* GO TO 'XCTL' LOGIC (ERROR)    */
         B     EXITXCTL                                         02S0113
*     END;                          /* END OF 'WAIT' LOGIC           */
         EJECT
*                                                               01S0115
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RCODE > 4 (CAUSED BY AN ERROR CONDITION) OR NOT A FAST-PATH*/
*   /* REQUEST, 'XCTL' TO IGTMBD.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0115
*EXITXCTL:                          /* ERROR OR NOT FAST-PATH        */
*   DO;                             /* GO TO VPSS ROUTER ROUTINE     */
*                                                               02S0115
@RF00091 DS    0H                                               02S0115
EXITXCTL DS    0H                                               02S0116
*     /***************************************************************/
*     /*                                                             */
*     /* NOT FAST-PATH REQUEST (EXCW, EXC, WAIT) OR ERROR CONDITION  */
*     /* DETECTED. TRANSFER CONTROL TO IGTMBD TO CONTINUE PROCESSING.*/
*     /* CONTROL WILL BE RETURNED DIRECTLY TO THE USER, NOT TO THIS  */
*     /* PROGRAM (IE: THIS IS AN XCTL, NOT A CALL, TRANSFER OF       */
*     /* CONTROL). ON ENTRY TO IGTMBD, ALL REGISTERS MUST BE THE SAME*/
*     /* AS ON ENTRY TO THIS PROGRAM EXCEPT REGISTER 15, WHICH MUST  */
*     /* CONTAIN THE ADDRESS OF IGTMBD.                              */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0116
*     APSVRG15=                     /* SET SAVED REGISTER 15         */
*         APSVRG0->                 /* SAVED REGISTER 0              */
*         I031P->                   /* POINTS TO WORD WITH @ APUT    */
*         APUTAPCT->                /* POINTS TO APCT                */
*         APCTZMBD;                 /* POINTS TO @ IGTMBD            */
         L     @09,APSVRG0(,APSVPTR)                            02S0116
         L     @09,I031P(,@09)                                  02S0116
         L     @09,APUTAPCT(,@09)                               02S0116
         L     @09,APCTZMBD(,@09)                               02S0116
         ST    @09,APSVRG15(,APSVPTR)                           02S0116
*     LM(R14P,R12P,APSVREGS);       /* RELOAD INPUT REGISTERS NOTE:
*                                      R15 -> IGTMBD                 */
         LM    R14P,R12P,APSVREGS(APSVPTR)                      02S0117
*     RFY                                                       02S0118
*      (R15P) RSTD;                 /* USING REGISTER 15             */
*     GOTO R15P->APCVZMBD;          /* GO TO MODULE IGTMBD           */
         BR    R15P                                             02S0119
*     RFY                                                       02S0120
*      (R15P) UNRSTD;               /* FINISHED WITH REGISTER 15     */
*                                                               02S0120
*     /***************************************************************/
*     /*                                                             */
*     /* NOTE -- CONTROL DOES NOT RETURN                             */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0121
*   END;                            /* 'XCTL' ACCOMPLISHED           */
         EJECT
*                                                               01S0122
*   /*****************************************************************/
*   /*                                                               */
*   /* IF FAST-PATH REQUEST AND RETURN CODE IS 0 (OK) OR 4 (INVALID  */
*   /* APRL STATUS BUSY/FREE) THEN RETURN TO CALLER WITH REGISTER 15 */
*   /* SET.                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0122
*EXIT0:                             /* FAST PATH RETURN              */
*   DO;                             /* 0 RETURN CODE                 */
*                                                               02S0122
EXIT0    DS    0H                                               02S0123
*     /***************************************************************/
*     /*                                                             */
*     /* FAST PATH REQUEST AND NO ERROR CONDITION DETECTED. IF THE   */
*     /* USER HAS SPECIFIED A RETURN WORD (APRLURCP NOT ZERO), THEN  */
*     /* SET THE WORD TO ZERO. FALL THROUGH TO THE RETURN-TO-CALLER  */
*     /* LOGIC.                                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0123
*     IF APRLURCP^=RCODE THEN       /* IF USER WANTS RETURN CODE     */
         L     @09,APRLURCP(,APRLPTR)                           02S0123
         CR    @09,RCODE                                        02S0123
         BE    @RF00123                                         02S0123
*       APRLURCP->I031F=RCODE;      /* THEN SET TO ZERO.             */
         ST    RCODE,I031F(,@09)                                02S0124
*   END;                            /* FALL THRU TO RETURN LOGIC     */
@RF00123 DS    0H                                               02S0126
*EXIT4:                             /* FAST PATH RETURN              */
*   DO;                             /* 4 RETURN CODE                 */
*                                                               02S0126
EXIT4    DS    0H                                               02S0127
*     /***************************************************************/
*     /*                                                             */
*     /* FAST PATH REQUEST AND APRL BUSY/FREE SET WRONG. ALSO USED BY*/
*     /* EXIT0 TO RETURN CONTROL TO THE USER. ON ENTRY, RCODE HAS    */
*     /* BEEN SET TO THE DESIRED REGISTER 15 RETURN CODE.            */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0127
*     RETURN CODE(RCODE);           /* RETURN TO CALLER WITH REGISTER
*                                      15 SET TO 0 OR 4.             */
         LR    @15,RCODE                                        02S0127
         L     @14,12(,@13)                                     02S0127
         LM    @00,@12,20(@13)                                  02S0127
         BR    @14                                              02S0127
*   END;                            /* END OF RETURN LOGIC.          */
         EJECT
*                                   /* IGTXEPLG                      */
*                                                               01S0129
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0129
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0129
*     GPR01P PTR(31) REG(1);                                    01S0129
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0130
*     I031F FIXED(31) BASED,                                    01S0130
*     I031P PTR(31) BASED,                                      01S0130
*     I015F FIXED(15) BASED,                                    01S0130
*     I015P PTR(15) BASED,                                      01S0130
*     I008P PTR(8) BASED,                                       01S0130
*     I001C CHAR(1) BASED;                                      01S0130
*                                                               01S0131
*   /*****************************************************************/
*   /*                                                               */
*   /* MODULE PATCH AREA                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0131
*   DCL                                                         01S0131
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0131
*   GENERATE DATA DEFS(APPATCH);                                01S0132
*                                                               01S0133
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0133
*   DCL                                                         01S0133
*     R0F FIXED(31) REG(0),                                     01S0133
*     R0P PTR(24) REG(0),                                       01S0133
*     R0RSTD PTR(31) REG(0),                                    01S0133
*     R1F FIXED(31) REG(1),                                     01S0133
*     R1P PTR(24) REG(1),                                       01S0133
*     R1RSTD PTR(31) REG(1),                                    01S0133
*     R2F FIXED(31) REG(2),                                     01S0133
*     R2P PTR(24) REG(2),                                       01S0133
*     R2RSTD PTR(31) REG(2),                                    01S0133
*     R3F FIXED(31) REG(3),                                     01S0133
*     R3P PTR(24) REG(3),                                       01S0133
*     R3RSTD PTR(31) REG(3),                                    01S0133
*     R4F FIXED(31) REG(4),                                     01S0133
*     R4P PTR(24) REG(4),                                       01S0133
*     R4RSTD PTR(31) REG(4),                                    01S0133
*     R5F FIXED(31) REG(5),                                     01S0133
*     R5P PTR(24) REG(5),                                       01S0133
*     R5RSTD PTR(31) REG(5),                                    01S0133
*     R6F FIXED(31) REG(6),                                     01S0133
*     R6P PTR(24) REG(6),                                       01S0133
*     R6RSTD PTR(31) REG(6),                                    01S0133
*     R7F FIXED(31) REG(7),                                     01S0133
*     R7P PTR(24) REG(7),                                       01S0133
*     R7RSTD PTR(31) REG(7),                                    01S0133
*     R8F FIXED(31) REG(8),                                     01S0133
*     R8P PTR(24) REG(8),                                       01S0133
*     R8RSTD PTR(31) REG(8),                                    01S0133
*     R9F FIXED(31) REG(9),                                     01S0133
*     R9P PTR(24) REG(9),                                       01S0133
*     R9RSTD PTR(31) REG(9),                                    01S0133
*     R10F FIXED(31) REG(10),                                   01S0133
*     R10P PTR(24) REG(10),                                     01S0133
*     R10RSTD PTR(31) REG(10),                                  01S0133
*     R11F FIXED(31) REG(11),                                   01S0133
*     R11P PTR(24) REG(11),                                     01S0133
*     R11RSTD PTR(31) REG(11),                                  01S0133
*     R12F FIXED(31) REG(12),                                   01S0133
*     R12P PTR(24) REG(12),                                     01S0133
*     R12RSTD PTR(31) REG(12),                                  01S0133
*     R13F FIXED(31) REG(13),                                   01S0133
*     R13P PTR(24) REG(13),                                     01S0133
*     R13RSTD PTR(31) REG(13),                                  01S0133
*     R14F FIXED(31) REG(14),                                   01S0133
*     R14P PTR(24) REG(14),                                     01S0133
*     R14RSTD PTR(31) REG(14),                                  01S0133
*     R15F FIXED(31) REG(15),                                   01S0133
*     R15P PTR(24) REG(15),                                     01S0133
*     R15RSTD PTR(31) REG(15),                                  01S0133
*                                                               01S0133
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0133
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0133
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0133
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0133
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0133
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0133
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0133
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0133
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0133
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0133
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0133
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0133
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0133
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0134
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0134
*   DCL                                                         01S0134
*     RFUNC REG(10) FIXED(31);      /* HOLD FUNCTION CODE            */
*   DCL                                                         01S0135
*     RCODE REG(11) FIXED(31);      /* HOLD RETURN CODE              */
*   END                             /* END OF PROGRAM                */
*                                                               01S0136
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*/*%INCLUDE SYSLIB  (IGTXAPRL)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCC)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPFN)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPIN)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPUT)                                       */
*/*%INCLUDE SYSUT5  (PEXCW   )                                       */
*/*%INCLUDE SYSUT5  (PEXC    )                                       */
*/*%INCLUDE SYSUT5  (PWAIT   )                                       */
*/*%INCLUDE SYSUT5  (PXCTL   )                                       */
*/*%INCLUDE SYSUT5  (PRETURN )                                       */
*                                                               01S0136
*       ;                                                       01S0136
@EL00001 DS    0H                                               01S0136
@EF00001 DS    0H                                               01S0136
@ER00001 LM    @14,@12,12(@13)                                  01S0136
         BR    @14                                              01S0136
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IGTMBA   CSECT
         DS    0F
@CF01007 DC    C'EXC '
@CF01009 DC    C'EXCW'
@CF01011 DC    C'WAIT'
@DATD    DSECT
         DS    0D
IGTMBA   CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
IGTMBA   CSECT
*                                   /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
@ENDDATD EQU   *
IGTMBA   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
APCODE   EQU   @07
APCTPTR  EQU   @12
APSVPTR  EQU   @13
RFUNC    EQU   @10
APRLPTR  EQU   @08
APINPTR  EQU   @01
RCODE    EQU   @11
GPR00F   EQU   @00
GPR01P   EQU   @01
R14P     EQU   @14
R12P     EQU   @12
R15P     EQU   @15
APACBPTR EQU   @09
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCPPTR  EQU   @10
APCQPTR  EQU   @09
APCWPTR  EQU   @08
APDATA   EQU   @06
APDEBPTR EQU   @08
APDSPTR  EQU   @11
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUBPTR  EQU   @10
APUTPTR  EQU   @11
APXLPTR  EQU   @11
R0F      EQU   @00
R0P      EQU   @00
R0RSTD   EQU   @00
R1F      EQU   @01
R1P      EQU   @01
R1RSTD   EQU   @01
R10F     EQU   @10
R10P     EQU   @10
R10RSTD  EQU   @10
R11F     EQU   @11
R11P     EQU   @11
R11RSTD  EQU   @11
R12F     EQU   @12
R12RSTD  EQU   @12
R13F     EQU   @13
R13P     EQU   @13
R13RSTD  EQU   @13
R14F     EQU   @14
R14RSTD  EQU   @14
R15F     EQU   @15
R15RSTD  EQU   @15
R2F      EQU   @02
R2P      EQU   @02
R2RSTD   EQU   @02
R3F      EQU   @03
R3P      EQU   @03
R3RSTD   EQU   @03
R4F      EQU   @04
R4P      EQU   @04
R4RSTD   EQU   @04
R5F      EQU   @05
R5P      EQU   @05
R5RSTD   EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R8RSTD   EQU   @08
R9F      EQU   @09
R9P      EQU   @09
R9RSTD   EQU   @09
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
APRL     EQU   0
APRLECB  EQU   APRL+8
APRLECBC EQU   APRLECB
APRLFDBK EQU   APRL+12
APRLURCP EQU   APRL+20
APRLOPTS EQU   APRL+40
APRLOPT0 EQU   APRLOPTS
APRLASY  EQU   APRLOPT0
APRLOPT1 EQU   APRLOPTS+1
APRLOPT2 EQU   APRLOPTS+2
APRLOPT3 EQU   APRLOPTS+3
APRLOPTZ EQU   APRL+56
APRLOPT4 EQU   APRLOPTZ
APRLOPT5 EQU   APRLOPTZ+1
APRLOPT6 EQU   APRLOPTZ+2
APRLOPT7 EQU   APRLOPTZ+3
APRLEXTS EQU   APRL+68
APRLACTV EQU   APRL+69
APCT     EQU   0
APCTENQM EQU   APCT+12
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTERRS EQU   APCT+876
@NM00034 EQU   APCT+936
APCTSTAT EQU   @NM00034
APCTPRSW EQU   @NM00034+1
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTZ@@1 EQU   APCT+1120
APCVZMBD EQU   0
APIN     EQU   0
APINAUNT EQU   APIN
APINAFNC EQU   APIN+4
APINFMTS EQU   APIN+8
APINFUNC EQU   0
APINAPRL EQU   0
APSV     EQU   0
APSVREGS EQU   APSV+12
APSVRG15 EQU   APSVREGS+4
APSVRG0  EQU   APSVREGS+8
APUT     EQU   0
APUTAPCT EQU   APUT+12
APUTFLGS EQU   APUT+24
APUTFLG0 EQU   APUTFLGS
BIT0013X EQU   0
BIT0017X EQU   0
I031P    EQU   0
I031F    EQU   0
APCVZDAL EQU   0
APCVZDAP EQU   0
APCVZDBK EQU   0
APCVZDDA EQU   0
APCVZDDQ EQU   0
APCVZDEQ EQU   0
APCVZDID EQU   0
APCVZDIO EQU   0
APCVZDIP EQU   0
APCVZDMD EQU   0
APCVZDMM EQU   0
APCVZDQR EQU   0
APCVZDRI EQU   0
APCVZDUA EQU   0
APCVZDUL EQU   0
APCVZDWI EQU   0
APCVZDWT EQU   0
APCVZDX1 EQU   0
APCVZDX2 EQU   0
APCVZDX3 EQU   0
APCVZDX4 EQU   0
APCVZD10 EQU   0
APCVZD20 EQU   0
APCVZD4E EQU   0
APCVZD40 EQU   0
APCVZD41 EQU   0
APCVZD42 EQU   0
APCVZD43 EQU   0
APCVZD44 EQU   0
APCVZD45 EQU   0
APCVZD46 EQU   0
APCVZD47 EQU   0
APCVZD48 EQU   0
APCVZD49 EQU   0
APCVZD60 EQU   0
APCVZD80 EQU   0
APCVZD81 EQU   0
APCVZD82 EQU   0
APCVZD83 EQU   0
APCVZJAA EQU   0
APCVZJAD EQU   0
APCVZJAG EQU   0
APCVZJAJ EQU   0
APCVZJAM EQU   0
APCVZJAP EQU   0
APCVZJAX EQU   0
APCVZJAY EQU   0
APCVZJBA EQU   0
APCVZJBD EQU   0
APCVZJBG EQU   0
APCVZJBJ EQU   0
APCVZJBM EQU   0
APCVZJDA EQU   0
APCVZJDD EQU   0
APCVZJDG EQU   0
APCVZJDJ EQU   0
APCVZJDM EQU   0
APCVZJHC EQU   0
APCVZJHE EQU   0
APCVZJHF EQU   0
APCVZJHO EQU   0
APCVZJHQ EQU   0
APCVZJHR EQU   0
APCVZJHT EQU   0
APCVZJHW EQU   0
APCVZJH0 EQU   0
APCVZJH6 EQU   0
APCVZJI0 EQU   0
APCVZJI3 EQU   0
APCVZJJ0 EQU   0
APCVZKAA EQU   0
APCVZKBA EQU   0
APCVZKBB EQU   0
APCVZKBC EQU   0
APCVZKBD EQU   0
APCVZKBE EQU   0
APCVZKBF EQU   0
APCVZKCA EQU   0
APCVZKDA EQU   0
APCVZKGA EQU   0
APCVZKGB EQU   0
APCVZKGC EQU   0
APCVZKGD EQU   0
APCVZLCA EQU   0
APCVZLCB EQU   0
APCVZMBA EQU   0
APCVZMBG EQU   0
APCVZMBH EQU   0
APCVZMBK EQU   0
APCVZMBM EQU   0
APCVZMIB EQU   0
APCVZMIC EQU   0
APCVZMIF EQU   0
APCVZMJB EQU   0
APCVZMJC EQU   0
APCVZMJH EQU   0
APCVZMJI EQU   0
APCVZMMA EQU   0
APCVZUAA EQU   0
APCVZUAB EQU   0
APCVZUAC EQU   0
APCVZUAD EQU   0
APCVZUAE EQU   0
APCVZUAF EQU   0
APCVZUAG EQU   0
APCVZUBB EQU   0
APCVZUFA EQU   0
APCVZUHA EQU   0
APCVZUHB EQU   0
APCVZUJA EQU   0
APCVZUKA EQU   0
APCV1CMD EQU   0
APCV1JAA EQU   0
APCV1JBJ EQU   0
APCV1JHC EQU   0
APCV1JHL EQU   0
APCV1JHT EQU   0
APCV1MAB EQU   0
APCV1MBD EQU   0
APCV2JHC EQU   0
APCV2JHL EQU   0
APCV2MBD EQU   0
APINACI  EQU   0
APINACW  EQU   0
APINBIV  EQU   0
APINBLB  EQU   0
APINCHB  EQU   0
APINCHC  EQU   0
APINCHS  EQU   0
APINCHX  EQU   0
APINCXC  EQU   0
APINCXS  EQU   0
APINCXX  EQU   0
APINDLB  EQU   0
APINDSV  EQU   0
APINERR  EQU   0
APINICI  EQU   0
APINICW  EQU   0
APINKYVF EQU   0
APINKYVL EQU   0
APINKYVP EQU   0
APINKYWD EQU   0
APINPXB  EQU   0
APINPXC  EQU   0
APINPXF  EQU   0
APINPXP  EQU   0
APINSTB  EQU   0
APINSTD  EQU   0
APINUNIT EQU   0
APINUST  EQU   0
APINXBS  EQU   0
APINXBX  EQU   0
APINXCD  EQU   0
APINXCT  EQU   0
APINXID  EQU   0
APINXI1  EQU   0
APINXI2  EQU   0
APINXLB  EQU   0
APINXST  EQU   0
APINYST  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I256C    EQU   0
ECBPTR   EQU   APRLECB
APCTZ    EQU   APCTZ@@@
APCTZUAA EQU   APCTZ
APCTZUAB EQU   APCTZ+4
APCTZUAC EQU   APCTZ+8
APCTZUAD EQU   APCTZ+12
APCTZUAE EQU   APCTZ+16
APCTZUBB EQU   APCTZ+24
APCTZD10 EQU   APCTZ+28
APCTZD20 EQU   APCTZ+32
APCTZD40 EQU   APCTZ+36
APCTZD41 EQU   APCTZ+40
APCTZD42 EQU   APCTZ+44
APCTZD43 EQU   APCTZ+48
APCTZD44 EQU   APCTZ+52
APCTZD45 EQU   APCTZ+56
APCTZD46 EQU   APCTZ+60
APCTZD47 EQU   APCTZ+64
APCTZD48 EQU   APCTZ+68
APCTZD49 EQU   APCTZ+72
APCTZD60 EQU   APCTZ+76
APCTZD80 EQU   APCTZ+80
APCTZD4E EQU   APCTZ+84
APCTZMBA EQU   APCTZ+88
APCTZMBD EQU   APCTZ+92
APCTZMBG EQU   APCTZ+96
APCTZDX1 EQU   APCTZ+104
APCTZDX2 EQU   APCTZ+108
APCTZDX3 EQU   APCTZ+112
APCTZDX4 EQU   APCTZ+116
APCTZMBH EQU   APCTZ+120
APCTZMBK EQU   APCTZ+124
APCTZMBM EQU   APCTZ+128
APCTZMJB EQU   APCTZ+132
APCTZMJC EQU   APCTZ+136
APCTZMJH EQU   APCTZ+140
APCTZMMA EQU   APCTZ+144
APCTZDMD EQU   APCTZ+148
APCTZD81 EQU   APCTZ+152
APCTZDID EQU   APCTZ+156
APCTZDRI EQU   APCTZ+160
APCTZMJI EQU   APCTZ+164
APCTZDWT EQU   APCTZ+168
APCTZDMM EQU   APCTZ+172
APCTZDAL EQU   APCTZ+176
APCTZDBK EQU   APCTZ+180
APCTZDIP EQU   APCTZ+184
APCTZDDA EQU   APCTZ+188
APCTZDUL EQU   APCTZ+192
APCTZDEQ EQU   APCTZ+196
APCTZDDQ EQU   APCTZ+200
APCTZDUA EQU   APCTZ+204
APCTZUAF EQU   APCTZ+208
APCTZUAG EQU   APCTZ+212
APCTZDIO EQU   APCTZ+216
APCTZUHA EQU   APCTZ+220
APCTZUHB EQU   APCTZ+224
APCTZJAA EQU   APCTZ+232
APCTZJAD EQU   APCTZ+236
APCTZJAG EQU   APCTZ+240
APCTZJAJ EQU   APCTZ+244
APCTZJAM EQU   APCTZ+248
APCTZJAP EQU   APCTZ+252
APCTZJAY EQU   APCTZ+256
APCTZUFA EQU   APCTZ+260
APCTZUJA EQU   APCTZ+264
APCTZDAP EQU   APCTZ+268
APCTZKAA EQU   APCTZ+272
APCTZD82 EQU   APCTZ+276
APCTZMIB EQU   APCTZ+280
APCTZMIC EQU   APCTZ+284
APCTZD83 EQU   APCTZ+288
APCTZMIF EQU   APCTZ+296
APCTZJH0 EQU   APCTZ+300
APCTZJI0 EQU   APCTZ+304
APCTZJI3 EQU   APCTZ+308
APCTZJJ0 EQU   APCTZ+312
APCTZJBA EQU   APCTZ+316
APCTZJBD EQU   APCTZ+320
APCTZJBG EQU   APCTZ+324
APCTZJBJ EQU   APCTZ+328
APCTZJBM EQU   APCTZ+332
APCTZKCA EQU   APCTZ+340
APCTZKDA EQU   APCTZ+344
APCTZJDA EQU   APCTZ+356
APCTZJDJ EQU   APCTZ+360
APCTZJH6 EQU   APCTZ+364
APCTZJHO EQU   APCTZ+368
APCTZJHF EQU   APCTZ+372
APCTZJHE EQU   APCTZ+376
APCTZDQR EQU   APCTZ+380
APCTZJHR EQU   APCTZ+384
APCTZJHT EQU   APCTZ+388
APCTZJHW EQU   APCTZ+392
APCTZ1   EQU   APCTZ@@1
APCTZKBA EQU   APCTZ1
APCTZKBC EQU   APCTZ1+4
APCTZKBB EQU   APCTZ1+8
APCTZJHC EQU   APCTZ1+20
APCTZJHQ EQU   APCTZ1+24
APCTZKBD EQU   APCTZ1+28
APCTZKBE EQU   APCTZ1+40
APCTZUKA EQU   APCTZ1+56
APCTZKBF EQU   APCTZ1+60
APCTZJDD EQU   APCTZ1+64
APCTZJDG EQU   APCTZ1+68
APCTZJDM EQU   APCTZ1+72
APCTZLCA EQU   APCTZ1+76
APCTZLCB EQU   APCTZ1+80
APCTZDWI EQU   APCTZ1+84
APCTZJAX EQU   APCTZ1+88
APCTZKGA EQU   APCTZ1+92
APCTZKGB EQU   APCTZ1+96
APCTZKGC EQU   APCTZ1+100
APCTZKGD EQU   APCTZ1+104
APCTU    EQU   APCTU@@@
APCT1MAB EQU   APCTU
APCT1MBD EQU   APCTU+4
APCT2MBD EQU   APCTU+8
APCT1CMD EQU   APCTU+12
APCT1JAA EQU   APCTU+20
APCT1JHC EQU   APCTU+24
APCT2JHC EQU   APCTU+28
APCT1JHT EQU   APCTU+32
APCT1JHL EQU   APCTU+36
APCT2JHL EQU   APCTU+40
APCT1JBJ EQU   APCTU+44
APINFMT1 EQU   APINFMTS
APINAERR EQU   APINFMT1
@NM00067 EQU   APINFMT1+4
APINAKYW EQU   @NM00067
APINAKYV EQU   @NM00067+4
APINFMT2 EQU   APINFMTS
APINAAR  EQU   APINFMT2
APINFMT3 EQU   APINFMTS
APINASTB EQU   APINFMT3
APINAACW EQU   APINFMT3+4
APINAICW EQU   APINFMT3+8
APINAACI EQU   APINFMT3+12
APINAICI EQU   APINFMT3+16
APINFMT4 EQU   APINFMTS
APINAXI1 EQU   APINFMT4
APINAXI2 EQU   APINFMT4+4
APINAXLB EQU   APINFMT4+8
APINAXCD EQU   APINFMT4+12
APINFMT5 EQU   APINFMTS
APINADLB EQU   APINFMT5
APINFMT6 EQU   APINFMTS
APINABIV EQU   APINFMT6
APINABLB EQU   APINFMT6+4
APINFMT7 EQU   APINFMTS
APINACHS EQU   APINFMT7
APINACHC EQU   APINFMT7+4
APINACHB EQU   APINFMT7+8
APINACHX EQU   APINFMT7+12
APINFMT8 EQU   APINFMTS
APINACXS EQU   APINFMT8
APINACXC EQU   APINFMT8+4
APINACXX EQU   APINFMT8+8
APINFMT9 EQU   APINFMTS
APINASTD EQU   APINFMT9
APINADSV EQU   APINFMT9+4
APINAYST EQU   APINFMT9+8
APINAXST EQU   APINFMT9+12
APINAUST EQU   APINFMT9+16
APINFM10 EQU   APINFMTS
APINAXBS EQU   APINFM10
APINAXCT EQU   APINFM10+4
APINAXBX EQU   APINFM10+8
APINAXID EQU   APINFM10+12
APINAPMS EQU   APIN
APINAP1  EQU   APINAPMS
APINAP2  EQU   APINAPMS+4
APINAP3  EQU   APINAPMS+8
APINAP4  EQU   APINAPMS+12
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
APINAP4P EQU   APINAP4+1
@NM00071 EQU   APINAP4
APINAP4E EQU   APINAP4
APINAP3P EQU   APINAP3+1
@NM00070 EQU   APINAP3
APINAP3E EQU   APINAP3
APINAP2P EQU   APINAP2+1
@NM00069 EQU   APINAP2
APINAP2E EQU   APINAP2
APINAP1P EQU   APINAP1+1
@NM00068 EQU   APINAP1
APINAP1E EQU   APINAP1
@NM00066 EQU   APCTU+48
APCT1MBM EQU   APCTU+16
@NM00065 EQU   APCTZ1+108
@NM00064 EQU   APCTZ1+52
@NM00063 EQU   APCTZ1+48
@NM00062 EQU   APCTZ1+44
@NM00061 EQU   APCTZ1+36
@NM00060 EQU   APCTZ1+32
@NM00059 EQU   APCTZ1+16
@NM00058 EQU   APCTZ1+12
@NM00057 EQU   APCTZ+396
@NM00056 EQU   APCTZ+352
@NM00055 EQU   APCTZ+348
@NM00054 EQU   APCTZ+336
@NM00053 EQU   APCTZ+292
APCTZJFA EQU   APCTZ+228
APCTZMBR EQU   APCTZ+100
@NM00052 EQU   APCTZ+20
@NM00076 EQU   APUT+160
APUTAPEM EQU   APUT+32
APUTRCDE EQU   APUT+28
@NM00075 EQU   APUT+26
APUTFLG1 EQU   APUTFLGS+1
@NM00074 EQU   APUTFLG0
APUTACT  EQU   APUTFLG0
@NM00073 EQU   APUT+18
APUTSIZE EQU   APUT+16
APUTAPAT EQU   APUT+8
APUTUSER EQU   APUT+4
APUTID   EQU   APUT
APSVWORK EQU   APSV+80
@NM00072 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG14 EQU   APSVREGS
APSVNEXT EQU   APSV+8
APSVPREV EQU   APSV+4
APSVAPSC EQU   APSV
@NM00051 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00050 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTAPVU EQU   APCT+1520
APCTABR  EQU   APCT+1116
APCTACTR EQU   APCT+1112
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00049 EQU   APCT+1080
@NM00048 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
APCTABND EQU   APCT+1072
@NM00047 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTCRTN EQU   APCT+1036
APCTAPCP EQU   APCT+1032
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
APCTAALP EQU   APCT+1020
APCTEALP EQU   APCT+1016
@NM00046 EQU   APCT+1012
@NM00045 EQU   APCT+1008
@NM00044 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00043 EQU   APCT+996
@NM00042 EQU   APCT+992
@NM00041 EQU   APCT+988
@NM00040 EQU   APCT+984
@NM00039 EQU   APCT+980
APCTECPW EQU   APCT+976
APCTEULD EQU   APCT+972
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00038 EQU   @NM00034+2
@NM00037 EQU   APCTPRSW
APCTAPST EQU   APCTPRSW
@NM00036 EQU   APCTPRSW
@NM00035 EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTHALT EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTSTRT EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
@NM00033 EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTASCB EQU   APCT+920
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00032 EQU   APCT+912
@NM00031 EQU   APCT+908
@NM00030 EQU   APCT+904
@NM00029 EQU   APCT+900
@NM00028 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTDSAP EQU   APCT+872
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTAPDS EQU   APCT+860
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00027 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00026 EQU   APCTSMAD+1
@NM00025 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00024 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00023 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
APCTSSID EQU   APCTENQM+4
@NM00022 EQU   APCTENQM
APCTSSVT EQU   APCT+8
APCTUSER EQU   APCT+4
APCTID   EQU   APCT
@NM00021 EQU   APRL+80
@NM00020 EQU   APRL+76
APRLEMSP EQU   APRL+72
APRLEMSL EQU   APRL+70
@NM00019 EQU   APRLEXTS
APRLEXTA EQU   APRLEXTS
@NM00018 EQU   APRL+60
APRLPGFX EQU   APRLOPT7
APRLDUMP EQU   APRLOPT7
@NM00017 EQU   APRLOPT7
@NM00016 EQU   APRLOPT6
@NM00015 EQU   APRLOPT5
@NM00014 EQU   APRLOPT4
@NM00013 EQU   APRL+52
@NM00012 EQU   APRL+48
APRLAPRL EQU   APRL+44
@NM00011 EQU   APRLOPT3
@NM00010 EQU   APRLOPT2
@NM00009 EQU   APRLOPT1
APRLNRC  EQU   APRLOPT0
@NM00008 EQU   APRLOPT0
APRLXIO  EQU   APRLOPT0
@NM00007 EQU   APRLOPT0
APRLCCW  EQU   APRL+36
APRLAPIO EQU   APRL+32
APRLTCB  EQU   APRL+28
APRLACB  EQU   APRL+24
APRLVALN EQU   APRL+18
APRLMSGN EQU   APRL+16
APRLRCN  EQU   APRLFDBK+3
APRLRCC  EQU   APRLFDBK+2
APRLRCT  EQU   APRLFDBK+1
@NM00006 EQU   APRLFDBK
APRLECBA EQU   APRLECB+1
@NM00005 EQU   APRLECBC
APRLECBP EQU   APRLECBC
APRLECBW EQU   APRLECBC
APRLUSER EQU   APRL+4
APRLID   EQU   APRL
ECBEVNT  EQU   ECBEXTND
@NM00004 EQU   ECBEXTND
@NM00003 EQU   ECBBYTE3
@NM00002 EQU   ECBEXTBA
@NM00001 EQU   ECBCC
ECBPOSTB EQU   ECBCC
ECBWAITB EQU   ECBCC
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00069 EQU   EXIT0
@RF00069 EQU   EXITXCTL
@RT00111 EQU   EXIT0
@RF00111 EQU   EXITXCTL
@ENDDATA EQU   *
         END   IGTMBA,(C'PLS2341',0701,77092)
