TKDA     TITLE 'IGTKDA -- RELEASE VPSS CHANNEL PROGRAM                 *
                        '
IGTKDA   CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IGTKDA    77.093'                              01S0001
         DROP  @15
@PROLOG  BALR  @07,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@07                                      01S0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*   RAPRLPTR=R1P;                   /* SAVE APRL ADDRESS             */
         LR    RAPRLPTR,R1P                                     01S0180
*   RFY                                                         01S0181
*     APCT BASED(APCTPTR);          /* TELL                          */
*   RFY                                                         01S0182
*     APDX BASED(RAPDXPTR);         /* COMPILER                      */
*   RFY                                                         01S0183
*     APRL BASED(RAPRLPTR);         /* OF POINTERS.                  */
*   RFY                                                         01S0184
*     DEBBASIC BASED(RDEBPTR);      /* DEB,APDX,APCT OK BY DEBCHK    */
*   RFY                                                         01S0185
*     R1P UNRSTD;                   /* FINISHED WITH INPUT REG       */
*   GEN(MODESET EXTKEY=DATAMGT)                                 01S0186
*   NOREFS NOSETS;                  /* RUN IN DATA MANAGEMENT KEY    */
         MODESET EXTKEY=DATAMGT
         EJECT
*                                                               01S0187
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUIRE SAVEAREA/WORKAREA. INITIALIZE PL/S WORKAREA.          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0187
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0187
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD AND INITIALIZE A SAVEAREA/WORKAREA. ISSUE A           */
*     /* CONDITIONAL GETMAIN FOR THE REQUESTED SA/WA SIZE. IF THE    */
*     /* STORAGE IS UNAVAILABLE, ISSUE A UNCONDITIONAL GETMAIN IF THE*/
*     /* CALLER WAS IN PROBLEM PROGRAM STATE AND KEY 8-15. IF        */
*     /* PRIVLEDGED, USE CSA. INITIALIZE THE SAVEAREA/WORKAREA (VIA  */
*     /* IGTUAF) AND SAVE THE INPUT REGISTER VALUES.                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0188
*     RFY                           /* REQUIRED REGISTERS            */
*      (RSP,                        /* DYNAMIC AREA SUBPOOL          */
*       RLV,                        /* DYNAMIC AREA LENGTH           */
*       RADDR,                      /* DYNAMIC AREA ADDRESS          */
*       R1P,                        /* GETMAIN RETURNED AREA ADDRESS */
*       R15F) RSTD;                 /* GETMAIN RETURN CODE           */
*     RSP=CNORMSP;                  /* NORMAL SUBPOOL                */
         LA    RSP,230                                          02S0189
*     RLV=CNORMLV;                  /* NORMAL LENGTH REQUIREMENT     */
         L     RLV,@CF04591                                     02S0190
*     GEN REFS(RSP,RLV);                                        02S0191
*                                   /*
         GETMAIN RC,               ISSUE CONDITIONAL GETMAIN           *
               LV=(RLV),           * REQUIRED LENGTH                   *
               SP=(RSP),           * REQUIRED SUBPOOL                  *
               BNDRY=PAGE          * START ON PAGE BOUNDARY            *
                                   * R1P->STORAGE. R15F HAS RETURN CODE
*     IF R15F^=0 THEN               /* IS STORAGE NOT ACQUIRED,      */
         LTR   R15F,R15F                                        02S0192
         BZ    @RF00192                                         02S0192
*       DO;                         /* TRY A DIFFERENT SUBPOOL.      */
*         IF RBLINK->PSWPP=BOFF×    /* IF SUPERVISOR STATE OR        */
*             RBLINK->PSWUKEY=BOFF THEN/* OR PRIVLEDGED KEY (0-7)    */
         L     @14,TCBPTR                                       02S0194
         L     @14,RBSECPTR(,@14)                               02S0194
         L     @14,RBLINK(,@14)                                 02S0194
         TM    PSWPP(@14),B'10000001'                           02S0194
         BO    @RF00194                                         02S0194
*           RSP=CEMERSP;            /* THEN USE CSA.                 */
         LA    RSP,241                                          02S0195
*         GEN REFS(RSP,RLV);                                    02S0196
@RF00194 DS    0H                                               02S0196
*                                   /*
         GETMAIN RU,               ISSUE UNCONDITIONAL GETMAIN         *
               LV=(RLV),           * REQUIRED LENGTH                   *
               SP=(RSP),           * REQUIRED SUBPOOL                  *
               BNDRY=DBLWD         * NO SPECIAL ALIGNMENT              *
                                   * R1 -> ACQUIRED STORAGE
*       END;                                                    02S0197
*     RADDR=R1P;                    /* SAVE ADDR ACQUIRED STORAGE    */
@RF00192 LR    RADDR,R1P                                        02S0198
*     RFY                                                       02S0199
*      (R1P,                                                    02S0199
*       R15F) UNRSTD;               /* GETMAIN REGISTERS NOT NEEDED. */
*                                                               02S0199
*     /***************************************************************/
*     /*                                                             */
*     /* STORAGE NOW OBTAINED. 'RADDR' CONTAINS ITS ADDRESS, 'RSP'   */
*     /* ITS SUBPOOL, AND 'RLV' ITS LENGTH. CONSTRUCT A              */
*     /* SAVEAREA/WORKAREA USING IGTUAF. ON INPUT TO THIS PROGRAM,   */
*     /* REGISTER 1 MUST CONTAIN THE DYNAMIC STORAGE ADDRESS.        */
*     /* REGISTER 0 MUST HAVE THE SUBPOOL NUMBER IN BYTE 0, AND THE  */
*     /* LENGTH OF THE AREA IN BYTES 1-3. ON RETURN, REGISTER 1      */
*     /* CONTAINS THE ADDRESS OF THE APSC FOR THE NEW SAVEAREA.      */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0200
*     RFY                                                       02S0200
*      (R0F,                                                    02S0200
*       R1P) RSTD;                  /* NEEDED REGISTERS              */
*     R0F=RSP;                      /* SUBPOOL                       */
         LR    R0F,RSP                                          02S0201
*     SLL(R0F,24);                  /* MOVE TO BYTE 0                */
         SLL   R0F,24                                           02S0202
*     R0F=R0F×RLV;                  /* LENGTH IN BYTES 1-3.          */
         OR    R0F,RLV                                          02S0203
*     R1P=RADDR;                    /* ADDRESS OF DYNAMIC STORAGE    */
         LR    R1P,RADDR                                        02S0204
*     RFY                                                       02S0205
*      (RSP,                                                    02S0205
*       RLV,                                                    02S0205
*       RADDR) UNRSTD;              /* FINISHED WITH GETMAIN REGS    */
*     CALL APCVZUAF;                /* INITIALIZE SA-WA. ON RETURN,
*                                      R1 -> APSC.                   */
         L     @15,APCTZUAF(,APCTPTR)                           02S0206
         BALR  @14,@15                                          02S0206
*     R0F=(APSVLN+APSCLN+@SIZDATD+7)/* ALLOW FOR APSV, APSC, AND     */
*         &'0000FFF8'X;             /* DYNAMIC AREA. ROUND TO DWORD. */
         LA    R0F,95                                           02S0207
         AL    R0F,@SIZDATD                                     02S0207
         N     R0F,@CF04637                                     02S0207
*     R1P->APSCCRSZ=R0F;            /* SET USED SIZE IN APSC         */
         STH   R0F,APSCCRSZ(,R1P)                               02S0208
*     R1P=R1P+APSCLN;               /* SKIP APSC. NOW AT APSV.       */
         LA    R1P,8(,R1P)                                      02S0209
*     RFY                                                       02S0210
*       R0F UNRSTD;                 /* FINISHED WITH REGISTER 0      */
*                                                               02S0210
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD SAVEAREA. POINT TO DYNAMIC AREA.                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0211
*     R1P->APSVPREV=0;              /* NO PREVIOUS SAVEAREA          */
         SLR   @10,@10                                          02S0211
         ST    @10,APSVPREV(,R1P)                               02S0211
*     APSVPTR=R1P;                  /* POINT TO NEW SAVEAREA         */
         LR    APSVPTR,R1P                                      02S0212
*     RFY                                                       02S0213
*       R1P UNRSTD;                 /* FINISHED WITH REGISTER 1      */
*     RFY                                                       02S0214
*       APDATA RSTD;                /* SET APDATA TO ADDRESS         */
*     APDATA=ADDR(APSV)+APSVLN;     /* OF PL/S DYNAMIC AREA          */
         LA    APDATA,80(,APSVPTR)                              02S0215
*     GEN(USING @DATD,APDATA)                                   02S0216
*     NOSETS REFS(APDATA);          /* (AFTER SAVEAREA).             */
*                                                               02S0216
         USING @DATD,APDATA
*     /***************************************************************/
*     /*                                                             */
*     /* SAVE REGISTER POINTERS IN WORKAREA. THIS ALLOWS FOR PL/S    */
*     /* REGISTER OPTIMIZATION.                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0217
*     DAPRLPTR=RAPRLPTR;            /* ADDRESS OF INPUT APRL         */
         ST    RAPRLPTR,DAPRLPTR                                02S0217
*     DDEBPTR=RDEBPTR;              /* ADDRESS OF ASSOCIATED DEB     */
         ST    RDEBPTR,DDEBPTR                                  02S0218
*     DAPDXPTR=RAPDXPTR;            /* ADDRESS OF APDX FOR DEB       */
         ST    RAPDXPTR,DAPDXPTR                                02S0219
*     RFY                                                       02S0220
*       APRL BASED(DAPRLPTR);       /* TELL COMPILER OF              */
*     RFY                                                       02S0221
*       DEBBASIC BASED(DDEBPTR);    /* THESE POINTERS                */
*     RFY                                                       02S0222
*       APDX BASED(DAPDXPTR);       /* FOR LATER USE.                */
*     DUSERKEY=DEBPROTG;            /* SAVE USER PROTECT KEY (THIS IS
*                                      KEY OF OPEN REQUESTOR).       */
         L     @10,DDEBPTR                                      02S0223
         MVC   DUSERKEY(1),DEBPROTG(@10)                        02S0223
*     RFY                                                       02S0224
*      (RDEBPTR,                                                02S0224
*       RAPDXPTR,                                               02S0224
*       RAPRLPTR) UNRSTD;           /* DONE WITH REGS                */
*   END;                            /* END OF CODE SEGMENT           */
         EJECT
*                                                               01S0226
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE RECOVERY AREA AND ISSUE A SETFRR TO COVER THIS */
*   /* PROGRAM'S PROCESSING.                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0226
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0226
*     /***************************************************************/
*     /*                                                             */
*     /* ESTABLISH RECOVERY ENVIRONMENT. THIS EXIT WILL GAIN CONTROL */
*     /* IF AN ABEND OCCURS. A DUMP IS TAKEN, THE APPROPRIATE ERROR  */
*     /* FLAGS SET, AND CONTROL PASSED TO THE CLEANUP ROUTINE TO     */
*     /* RELEASE RESOURCES BEFORE RETURNING TO THE CALLER.           */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0227
*                                                               02S0227
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD ESTAE/FRR EXIT PARAMETER LIST (APES)                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0227
*     RFY                                                       02S0227
*      (R0P,                                                    02S0227
*       R1F,                                                    02S0227
*       R14P,                                                   02S0227
*       R15F) RSTD;                 /* INITIALIZE APES BLOCK         */
*     R0P=ADDR(APES);               /* TO ZEROS                      */
         LA    R0P,APES                                         02S0228
*     R1F=LENGTH(APES);             /* USE MVCL TO                   */
         LA    R1F,648                                          02S0229
*     R15F=0;                       /* CLEAR, SINCE FIELD            */
         SLR   R15F,R15F                                        02S0230
*     MVCL(R0P,R14P);               /* MORE THAN 256 BYTES LONG      */
         MVCL  R0P,R14P                                         02S0231
*     RFY                                                       02S0232
*      (R0P,                                                    02S0232
*       R1F,                                                    02S0232
*       R14P,                                                   02S0232
*       R15F) UNRSTD;               /* FINISHED WITH MVCL REGS       */
*     APESID=APESIDC;               /* IN-CORE ID                    */
         MVC   APESID(4),@CC04469                               02S0233
*     APESADDR=ADDR(APES);          /* ESTAE/SETFRR PARM VALUE       */
         LA    @15,APES                                         02S0234
         ST    @15,APESADDR                                     02S0234
*     APESAPMV=ADDR(CMBRXZZZ);      /* MESSAGE INDEX VALUES          */
         LA    @15,CMBRXZZZ                                     02S0235
         ST    @15,APESAPMV                                     02S0235
*     APESFDMP=BON;                 /* DUMP ON ERROR                 */
*     APESFREC=BON;                 /* RECORD ON LOGREC              */
*     APESFSDP=BON;                 /* SDUMP ON ERROR                */
         OI    APESFDMP,B'11100000'                             02S0238
*     APESMXCD=CERRN99;             /* NUMBER OF CMBRXZZZ ENTRIES    */
         MVI   APESMXCD,X'0E'                                   02S0239
*     APESMOD='IGTKDA  ';           /* MODULE IN CONTROL             */
         MVC   APESMOD(8),@CC04646                              02S0240
*     APESPROC='IGTKDA  ';          /* CSECT IN CONTROL              */
         MVC   APESPROC(8),@CC04646                             02S0241
*     APESFRR='        ';           /* NO FRR ID                     */
         MVC   APESFRR(8),@CC04647                              02S0242
*     APESREGP=ADDR(APESREGZ);      /* DEFAULT REGISTER SAVEAREA     */
         LA    @15,APESREGZ                                     02S0243
         ST    @15,APESREGP                                     02S0243
*     RFY                                                       02S0244
*      (R15P) RSTD;                 /* SET REGISTER 15 TO            */
*     R15P=ADDR(EXIT);              /* BACKOUT ROUTINE               */
         LA    R15P,EXIT                                        02S0245
*     STM(R0F,R15F,APESREGZ);       /* SAVE REGISTERS FOR RETRY      */
         STM   R0F,R15F,APESREGZ                                02S0246
*     RFY                                                       02S0247
*       R15P UNRSTD;                /* FINISHED WITH 15              */
*     APESCODE=CERRN99;             /* 'UNKNOWN' ERROR               */
         MVI   APESCODE,X'0E'                                   02S0248
*     CALL GETLLCK;                 /* GET LOCAL LOCK & ISSUE SETFRR */
         BAL   @14,GETLLCK                                      02S0249
*   END;                            /* RECOVERY ENVIRONMENT SET      */
         EJECT
*                                                               01S0251
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE REQUIRED PORTIONS OF THE USER'S APRL TO A PROTECTED  */
*   /* AREA.                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0251
*   DO;                                                         02S0251
*                                                               02S0251
*     /***************************************************************/
*     /*                                                             */
*     /* COPY THE USER'S APRL TO A PROTECTED COPY. THIS ALLOWS       */
*     /* REFERENCE TO A STABLE COPY AND ELIMINATES HAVING TO SWITCH  */
*     /* PROTECT KEYS TO REFERENCE THE APRL. ONLY THOSE FIELDS       */
*     /* REQUIRED FOR PROCESSING ARE COPIED. IF AN ERROR OCCURS      */
*     /* REFERENCING THE APRL, THE FRR WILL INTERCEPT THE FAILURE. AN*/
*     /* ERROR CODE WILL BE RETURNED TO THE CALLER INDICATING THE    */
*     /* FAILURE.                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0252
*     DAPRL=DAPRL&&DAPRL;           /* CLEAR INTERNAL APRL AREA      */
         XC    DAPRL(80),DAPRL                                  02S0252
*     APESCODE=CERRN06;             /* ERROR CODE - BAD APRL         */
         MVI   APESCODE,X'06'                                   02S0253
*     APESFSDP=BOFF;                /* NO SDUMP ON FAILURE           */
         NI    APESFSDP,B'11011111'                             02S0254
*     SPKA(DUSERKEY);               /* SWITCH TO USER'S KEY          */
         SLR   @01,@01                                          02S0255
         IC    @01,DUSERKEY                                     02S0255
         SPKA  0(@01)                                           02S0255
*     RFY                                                       02S0256
*      (R0F,                                                    02S0256
*       R1F,                                                    02S0256
*       R14F,                                                   02S0256
*       R15F) RSTD;                 /* COPY REGISTERS                */
*     R0F=APRLOPTS;                 /* HOLD OPTION SWITCHES          */
         L     @11,DAPRLPTR                                     02S0257
         L     R0F,APRLOPTS(,@11)                               02S0257
*     R1F=APRLOPTZ;                 /* HOLD OPTION SWITCHES          */
         L     R1F,APRLOPTZ(,@11)                               02S0258
*     R14F=APRLAPIO;                /* INDEX INTO APDX FOR APIO ADDR */
         L     R14F,APRLAPIO(,@11)                              02S0259
*     R15F=APRLUSER;                /* HOLD INSTALLATION-USE FIELD   */
         L     R15F,APRLUSER(,@11)                              02S0260
*     GEN(MODESET EXTKEY=DATAMGT)                               02S0261
*     NOREFS NOSETS;                /* RESUME NORMAL KEY             */
         MODESET EXTKEY=DATAMGT
*     APESCODE=CERRN99;             /* IS VPSS FAULT.                */
         MVI   APESCODE,X'0E'                                   02S0262
*     APESFSDP=BON;                 /* SDUMP ON FAILURE              */
         OI    APESFSDP,B'00100000'                             02S0263
*     RFY                                                       02S0264
*       APRL BASED(ADDR(DAPRL));    /* APRL BASE                     */
*     APRLOPTS=R0F;                 /* SAVE OPTION SWITCHES          */
         LA    @11,DAPRL                                        02S0265
         ST    R0F,APRLOPTS(,@11)                               02S0265
*     APRLOPTZ=R1F;                 /* SAVE OPTION SWITCHES          */
         ST    R1F,APRLOPTZ(,@11)                               02S0266
*     APRLAPIO=R14F;                /* SAVE APIO INDEX               */
         ST    R14F,APRLAPIO(,@11)                              02S0267
*     APRLUSER=R15F;                /* SAVE INSTALLATION-USE FIELD   */
         ST    R15F,APRLUSER(,@11)                              02S0268
*     RFY                                                       02S0269
*      (R0F,                                                    02S0269
*       R1F,                                                    02S0269
*       R14F,                                                   02S0269
*       R15F) UNRSTD;               /* FINISHED WITH REGISTERS       */
*     APRLID=APRLIDC;               /* IN-CORE ID FOR DUMP           */
         MVC   APRLID(4,@11),@CC03160                           02S0270
*     APESRTRY=ADDR(RESTAPRL);      /* MOVE APRL TO USER IF ERROR
*                                      SINCE USER'S NOW COPIED.      */
         LA    @15,RESTAPRL                                     02S0271
         L     @14,APESREGP                                     02S0271
         ST    @15,APESRTRY(,@14)                               02S0271
*   END;                            /* APRL COPIED                   */
         EJECT
*                                                               01S0273
*   /*****************************************************************/
*   /*                                                               */
*   /* INSURE THE DEB IS STILL VALID (ISSUE DEBCHK)                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0273
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0273
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE DEBCHK TO INSURE DEB STILL EXISTS. IF DEB DOES NOT    */
*     /* EXIST, SET ERROR FLAG AND EXIT.                             */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0274
*     STM(R10F,R11F,DSUPVSVE);      /* SAVE DESTROYED REGISTERS      */
         STM   R10F,R11F,DSUPVSVE                               02S0274
*     RFY                                                       02S0275
*      (R10P,                                                   02S0275
*       R1P,                                                    02S0275
*       R15P) RSTD;                 /* DEBCHK INPUT REGISTERS        */
*     R1P=DDEBPTR;                  /* ADDRESS OF DEB TO VERIFY      */
         L     R1P,DDEBPTR                                      02S0276
*     R10P=PSATOLD;                 /* TCB TO CHECK. MAY NOT BE TCB
*                                      WHICH OPENED ACB, BUT IS SAME
*                                      TCB STRUCTURE.                */
         L     R10P,PSATOLD                                     02S0277
*     R15P=CVTDEBVR;                /* DEBCHK BRANCH ENTRY POINT     */
         L     @11,CVTPTR                                       02S0278
         L     @11,CVTEXT2(,@11)                                02S0278
         L     R15P,CVTDEBVR(,@11)                              02S0278
*     APESCODE=CERRN03;             /* DEBCHK FAILURE CODE           */
         MVI   APESCODE,X'03'                                   02S0279
*     GEN REFS(R15P,R1P,R10P) SETS(R10P,R11P,R15P);             02S0280
*                                   /*
         CALL  (15)                CALL DEBCHK ROUTINE
         NOP   *-*                 + 0 -- DEB VALID (R15=0)
*                                  + 4 -- DEB INVALID (R15=4)
*     APESCODE=CERRN99;             /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0281
*     LM(R10F,R11F,DSUPVSVE);       /* RELOAD DESTROYED REGISTERS    */
         LM    R10F,R11F,DSUPVSVE                               02S0282
*     IF R15F^=0 THEN               /* IF DEBCHK FAILED,             */
         LTR   R15F,R15F                                        02S0283
         BZ    @RF00283                                         02S0283
*       DO;                         /* THEN SET ERROR CODE AND STOP  */
*         APESCODE=CERRN03;         /* ERROR NUMBER                  */
         MVI   APESCODE,X'03'                                   02S0285
*         DO;                       /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*           DO;                     /* ABEND(APCTABND)               */
*             RESPECIFY                                         02S0288
*              (GPR01F) RESTRICTED;                             02S0288
*             GPR01F=APCTABND;      /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0289
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                               02S0290
*             RESPECIFY                                         02S0291
*              (GPR01F) UNRESTRICTED;                           02S0291
*           END;                    /* ABEND(APCTABND) FORCE ABEND   */
*           GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);        02S0293
*                                                  /* NO CODE
*         END;                      /* ABEND ISSUED                  */
*       END;                        /* ERROR PROCESSED               */
*     RFY                                                       02S0296
*      (R10P,                                                   02S0296
*       R1P,                                                    02S0296
*       R15P) UNRSTD;               /* FINISHED WITH REGISTERS       */
@RF00283 DS    0H                                               02S0297
*   END;                            /* DEBCHK SUCCESSFUL .           */
         EJECT
*                                                               01S0298
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE APIO TO RELEASE. UPDATE THE APDX AND THE PROTECTED   */
*   /* COPY OF THE APRL TO REFLECT THE FREED APIO.                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0298
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0298
*     /***************************************************************/
*     /*                                                             */
*     /* LOCATE THE APIO BASED ON APRLAPIO. RESET THE APDX AND THE   */
*     /* APRL (PROTECTED COPY). SAVE THE APIO ADDRESS IN 'DAPIOPTR'. */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0299
*                                                               02S0299
*     /***************************************************************/
*     /*                                                             */
*     /* INSURE THE APRL HAS AN ASSOCIATED APIO ('XLTE' ISSUED).     */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0299
*     IF APRLXIO=BOFF THEN          /* IF APRL INDICATES THAT        */
         LA    @15,DAPRL                                        02S0299
         TM    APRLXIO(@15),B'00000100'                         02S0299
         BNZ   @RF00299                                         02S0299
*       DO;                         /* APIO DOES NOT EXIST, IS ERROR */
*         APESCODE=CERRN02;         /* SET ERROR CODE                */
         MVI   APESCODE,X'02'                                   02S0301
*         APESFSDP=BOFF;            /* NO SDUMP                      */
         NI    APESFSDP,B'11011111'                             02S0302
*         DO;                       /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*           DO;                     /* ABEND(APCTABND)               */
*             RESPECIFY                                         02S0305
*              (GPR01F) RESTRICTED;                             02S0305
*             GPR01F=APCTABND;      /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0306
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                               02S0307
*             RESPECIFY                                         02S0308
*              (GPR01F) UNRESTRICTED;                           02S0308
*           END;                    /* ABEND(APCTABND) FORCE ABEND   */
*           GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);        02S0310
*                                                  /* NO CODE
*         END;                      /* ABEND ISSUED                  */
*       END;                        /* ERROR CONDITION PROCESSED     */
*                                                               02S0312
*     /***************************************************************/
*     /*                                                             */
*     /* USE APRLAPIO TO INDEX INTO APDX FOR APIO LOCATION. INSURE   */
*     /* APRLAPIO WITHIN RANGE AND THAT THE APIO ENTRY EXISTS.       */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0313
*     IF APRLAPIO<=0×               /* IF INDEX NOT WITHIN RANGE     */
*         APRLAPIO>APDXIOCT×        /* (1 <= APRLAPIO <= APDXAPIO)   */
*         APDXAPIO(APRLAPIO)=0 THEN /* OR NO APIO FOR THIS INDEX     */
@RF00299 SLR   @15,@15                                          02S0313
         LA    @14,DAPRL                                        02S0313
         L     @14,APRLAPIO(,@14)                               02S0313
         CR    @14,@15                                          02S0313
         BNH   @RT00313                                         02S0313
         L     @11,DAPDXPTR                                     02S0313
         CH    @14,APDXIOCT(,@11)                               02S0313
         BH    @RT00313                                         02S0313
         SLA   @14,2                                            02S0313
         C     @15,APDXAPIO-4(@14,@11)                          02S0313
         BNE   @RF00313                                         02S0313
@RT00313 DS    0H                                               02S0314
*       DO;                         /* IS ERROR --                   */
*         APESCODE=CERRN02;         /* SET ERROR CODE                */
         MVI   APESCODE,X'02'                                   02S0315
*         APESFSDP=BOFF;            /* NO SDUMP -- USER ERROR        */
         NI    APESFSDP,B'11011111'                             02S0316
*         DO;                       /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*           DO;                     /* ABEND(APCTABND)               */
*             RESPECIFY                                         02S0319
*              (GPR01F) RESTRICTED;                             02S0319
*             GPR01F=APCTABND;      /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0320
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                               02S0321
*             RESPECIFY                                         02S0322
*              (GPR01F) UNRESTRICTED;                           02S0322
*           END;                    /* ABEND(APCTABND) FORCE ABEND   */
*           GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);        02S0324
*                                                  /* NO CODE
*         END;                      /* ABEND ISSUED                  */
*       END;                        /* ERROR PROCESSED               */
*                                                               02S0326
*     /***************************************************************/
*     /*                                                             */
*     /* SAVE THE ADDRESS OF THE APIO TO PROCESS.                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0327
*     DAPIOPTR=APDXAPIO(APRLAPIO);  /* SAVE THE ADDRESS OF THE APIO  */
@RF00313 LA    @15,DAPRL                                        02S0327
         L     @15,APRLAPIO(,@15)                               02S0327
         SLA   @15,2                                            02S0327
         L     @01,DAPDXPTR                                     02S0327
         L     @15,APDXAPIO-4(@15,@01)                          02S0327
         ST    @15,DAPIOPTR                                     02S0327
*     RFY                                                       02S0328
*       APIO BASED(DAPIOPTR);       /* TELL PL/S                     */
*                                                               02S0328
*     /***************************************************************/
*     /*                                                             */
*     /* ALTHOUGH IT SHOULD NOT OCCUR, A CHECK IS FIRST MADE TO      */
*     /* INSURE THAT THE APIO IS ACTUALLY 'OWNED' BY THIS DEB AND    */
*     /* THAT IT IS A VALID APIO. IF NOT, THE ERROR IS RECORDED AND  */
*     /* PROCESSING TERMINATED (THIS MINIMIZES THE IMPACT OF THE     */
*     /* ERROR).                                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0329
*     IF APIOID^=APIOIDC×           /* IF NOT AN APIO OR             */
*         (APIOASCB^=PSAAOLD×       /* APIO NOT "OWNED" BY THE DEB   */
*         APIODEB^=DDEBPTR) THEN    /* (ASCB/DEB ADDRS MATCH)        */
         CLC   APIOID(4,@15),@CC04308                           02S0329
         BNE   @RT00329                                         02S0329
         CLC   APIOASCB(4,@15),PSAAOLD                          02S0329
         BNE   @RT00329                                         02S0329
         CLC   APIODEB(4,@15),DDEBPTR                           02S0329
         BE    @RF00329                                         02S0329
@RT00329 DS    0H                                               02S0330
*       DO;                         /* IS ERROR.                     */
*         APDXAPIO(APRLAPIO)=0;     /* PREVENT RECURSION             */
         LA    @15,DAPRL                                        02S0331
         L     @15,APRLAPIO(,@15)                               02S0331
         SLA   @15,2                                            02S0331
         SLR   @14,@14                                          02S0331
         L     @01,DAPDXPTR                                     02S0331
         ST    @14,APDXAPIO-4(@15,@01)                          02S0331
*         APESCODE=CERRN08;         /* SET ERROR CODE                */
         MVI   APESCODE,X'08'                                   02S0332
*         DO;                       /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*           DO;                     /* ABEND(APCTABND)               */
*             RESPECIFY                                         02S0335
*              (GPR01F) RESTRICTED;                             02S0335
*             GPR01F=APCTABND;      /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0336
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                               02S0337
*             RESPECIFY                                         02S0338
*              (GPR01F) UNRESTRICTED;                           02S0338
*           END;                    /* ABEND(APCTABND) FORCE ABEND   */
*           GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);        02S0340
*                                                  /* NO CODE
*         END;                      /* ABEND ISSUED                  */
*       END;                        /* ERROR PROCESSED               */
*                                                               02S0342
*     /***************************************************************/
*     /*                                                             */
*     /* INSURE I/O NOT OUTSTANDING FOR THIS APIO. IF I/O CURRENTLY  */
*     /* ACTIVE, AND CLOSE NOT IN PROGRESS, DO NOT PROCESS THE       */
*     /* RELEASE. IF CLOSE IN PROGRESS, LOG THE ERROR (CLOSE ISSED   */
*     /* PURGE TO STOP ALL I/O) AND CONTINUE AFTER CLEARING THE APIO.*/
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0343
*     IF APIOACTV^=0 THEN           /* IF I/O ACTIVE, IS ERROR       */
@RF00329 L     @01,DAPIOPTR                                     02S0343
         CLI   APIOACTV(@01),0                                  02S0343
         BE    @RF00343                                         02S0343
*       IF APDXSOPN=BOFF THEN       /* IF CLOSE, THEN LOG & CONTINUE */
         L     @01,DAPDXPTR                                     02S0344
         TM    APDXSOPN(@01),B'10000000'                        02S0344
         BNZ   @RF00344                                         02S0344
*         DO;                       /* START OF CODE SEGMENT         */
*                                                               03S0345
*           /*********************************************************/
*           /*                                                       */
*           /* APIO SHOWS ACTIVE. FREE THE ASSOCIATED I/O RESOURCES  */
*           /* BY CALLING IGTKCA (TERMINATION ROUTINE). NOTE THAT THE*/
*           /* I/O MUST HAVE BEEN TERMINATED BY NOW SINCE A PURGE HAS*/
*           /* BEEN PREVIOUSLY ISSUED.                               */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0346
*           APESCODE=CERRN07;       /* ERROR CODE                    */
         MVI   APESCODE,X'07'                                   03S0346
*           DRETRY(04)=APESRTRY;    /* SAVE CURRENT RETRY POINT      */
         L     @15,APESREGP                                     03S0347
         L     @14,APESRTRY(,@15)                               03S0347
         ST    @14,DRETRY+12                                    03S0347
*           APESRTRY=ADDR(IOACTV1); /* NEW RETRY POINT (IN-LINE)     */
         LA    @14,IOACTV1                                      03S0348
         ST    @14,APESRTRY(,@15)                               03S0348
*           APESFDMP=BOFF;          /* NO SYSUDUMP                   */
         NI    APESFDMP,B'01111111'                             03S0349
*           GEN(SPACE ,)                                        03S0350
*           NOREFS NOSETS SEQFLOW FLOWS(IOACTV1);/* FOR PL/S FLOW
*                                      ONLY                          */
         SPACE ,
*           DO;                     /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*             DO;                   /* ABEND(APCTABND)               */
*               RESPECIFY                                       03S0353
*                (GPR01F) RESTRICTED;                           03S0353
*               GPR01F=APCTABND;    /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        03S0354
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                               03S0355
*               RESPECIFY                                       03S0356
*                (GPR01F) UNRESTRICTED;                         03S0356
*             END;                  /* ABEND(APCTABND) FORCE ABEND   */
*             GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);      03S0358
*                                                  /* NO CODE
*           END;                    /* ABEND ISSUED                  */
*IOACTV1:                           /* RETRY POINT                   */
*           DO;                     /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               03S0360
IOACTV1  DS    0H                                               03S0361
*             /*******************************************************/
*             /*                                                     */
*             /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT */
*             /* INSURE REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT   */
*             /* SAVED IN APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S*/
*             /* OPTIMIZATION MEMORY OF CURRENT REGISTER VALUES      */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0361
*             RFY                                               03S0361
*              (R0RSTD,                                         03S0361
*               R1RSTD,                                         03S0361
*               R2RSTD,                                         03S0361
*               R3RSTD,                                         03S0361
*               R4RSTD,                                         03S0361
*               R5RSTD,             /* 6-7 BASES                     */
*               R8RSTD,                                         03S0361
*               R9RSTD,                                         03S0361
*               R10RSTD,                                        03S0361
*               R11RSTD,            /* 12-13 APCT/APSV PTRS          */
*               R14RSTD,                                        03S0361
*               R15RSTD) RSTD;      /* KEEP PL/S FROM CARRYING DATA  */
*             GEN(MODESET EXTKEY=DATAMGT)                       03S0362
*             NOREFS NOSETS;        /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*             RFY                                               03S0363
*              (R0RSTD,                                         03S0363
*               R1RSTD,                                         03S0363
*               R2RSTD,                                         03S0363
*               R3RSTD,                                         03S0363
*               R4RSTD,                                         03S0363
*               R5RSTD,             /* 6-7 BASES                     */
*               R8RSTD,                                         03S0363
*               R9RSTD,                                         03S0363
*               R10RSTD,                                        03S0363
*               R11RSTD,            /* 12-13 APCT/APSV PTRS          */
*               R14RSTD,                                        03S0363
*               R15RSTD) UNRSTD;    /* ALLOW PL/S TO USE REGS AGAIN  */
*           END;                    /* RETRY ENVIRONMENT SET         */
*           APESRTRY=ADDR(IOACTV2); /* NEW RETRY POINT               */
         LA    @15,IOACTV2                                      03S0365
         L     @14,APESREGP                                     03S0365
         ST    @15,APESRTRY(,@14)                               03S0365
*           DO;                     /* ERROR RECOVERY COMPLETE       */
*             APESFPRV=BOFF;        /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             03S0367
*             APESCODE=CERRN99;     /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   03S0368
*             APESFDMP=BON;         /* RESET DUMP/LOG FLAGS          */
*             APESFREC=BON;         /* TO THEIR NORMAL VALUES        */
*             APESFSDP=BON;         /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             03S0371
*           END;                    /* ALL INDICATORS RESET          */
*           APESCOD1=0;             /* RESET ERROR INDICATOR         */
*                                                               03S0373
         MVI   APESCOD1,X'00'                                   03S0373
*           /*********************************************************/
*           /*                                                       */
*           /* CALL IGTKBC (I/O TERMINATION ROUTINE) TO FREE THE     */
*           /* RESOURCES                                             */
*           /*                                                       */
*           /*********************************************************/
*                                                               03S0374
*           APIORET=BON;            /* IGTKBC TO BE SUBROUTINE       */
         L     @15,DAPIOPTR                                     03S0374
         OI    APIORET(@15),B'00100000'                         03S0374
*           RFY                                                 03S0375
*             R1P RSTD;             /* R1 MUST POINT                 */
*           R1P=ADDR(APIO);         /* TO APIO (ALSO IOSB)           */
         LR    R1P,@15                                          03S0376
*           APESMOD='IGTKBC  ';     /* SHOW ROUTINE IN CONTROL       */
         MVC   APESMOD(8),@CC04680                              03S0377
*           APESPROC='IGTKBC  ';    /* IF IGTKBC.                    */
         MVC   APESPROC(8),@CC04680                             03S0378
*           GEN(MODESET EXTKEY=ZERO)                            03S0379
*           NOREFS NOSETS;          /* IGTKBC REQUIRES KEY-0         */
         MODESET EXTKEY=ZERO
*           CALL APIOTERM->APCVZKBC;/* CALL TERMINATION ROUTINE      */
         L     @14,DAPIOPTR                                     03S0380
         L     @15,APIOTERM(,@14)                               03S0380
         BALR  @14,@15                                          03S0380
*           GEN(MODESET EXTKEY=DATAMGT)                         03S0381
*           NOREFS NOSETS;          /* RESUME NORMAL KEY             */
         MODESET EXTKEY=DATAMGT
*           RFY                                                 03S0382
*             R1P UNRSTD;           /* DONE WITH REG 1               */
*IOACTV2:                           /* STAE RETRY POINT              */
*           DO;                     /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               03S0383
IOACTV2  DS    0H                                               03S0384
*             /*******************************************************/
*             /*                                                     */
*             /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT */
*             /* INSURE REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT   */
*             /* SAVED IN APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S*/
*             /* OPTIMIZATION MEMORY OF CURRENT REGISTER VALUES      */
*             /*                                                     */
*             /*******************************************************/
*                                                               03S0384
*             RFY                                               03S0384
*              (R0RSTD,                                         03S0384
*               R1RSTD,                                         03S0384
*               R2RSTD,                                         03S0384
*               R3RSTD,                                         03S0384
*               R4RSTD,                                         03S0384
*               R5RSTD,             /* 6-7 BASES                     */
*               R8RSTD,                                         03S0384
*               R9RSTD,                                         03S0384
*               R10RSTD,                                        03S0384
*               R11RSTD,            /* 12-13 APCT/APSV PTRS          */
*               R14RSTD,                                        03S0384
*               R15RSTD) RSTD;      /* KEEP PL/S FROM CARRYING DATA  */
*             GEN(MODESET EXTKEY=DATAMGT)                       03S0385
*             NOREFS NOSETS;        /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*             RFY                                               03S0386
*              (R0RSTD,                                         03S0386
*               R1RSTD,                                         03S0386
*               R2RSTD,                                         03S0386
*               R3RSTD,                                         03S0386
*               R4RSTD,                                         03S0386
*               R5RSTD,             /* 6-7 BASES                     */
*               R8RSTD,                                         03S0386
*               R9RSTD,                                         03S0386
*               R10RSTD,                                        03S0386
*               R11RSTD,            /* 12-13 APCT/APSV PTRS          */
*               R14RSTD,                                        03S0386
*               R15RSTD) UNRSTD;    /* ALLOW PL/S TO USE REGS AGAIN  */
*           END;                    /* RETRY ENVIRONMENT SET         */
*           APESRTRY=DRETRY(04);    /* RESET RETRY REGISTER          */
         L     @15,DRETRY+12                                    03S0388
         L     @14,APESREGP                                     03S0388
         ST    @15,APESRTRY(,@14)                               03S0388
*           DO;                     /* ERROR RECOVERY COMPLETE       */
*             APESFPRV=BOFF;        /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             03S0390
*             APESCODE=CERRN99;     /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   03S0391
*             APESFDMP=BON;         /* RESET DUMP/LOG FLAGS          */
*             APESFREC=BON;         /* TO THEIR NORMAL VALUES        */
*             APESFSDP=BON;         /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             03S0394
*           END;                    /* ALL INDICATORS RESET          */
*           APESCOD1=0;             /* CLEAR ERROR CODE              */
         MVI   APESCOD1,X'00'                                   03S0396
*           APESMOD='IGTKDA  ';     /* RESET MODULE IN CONTROL       */
         MVC   APESMOD(8),@CC04646                              03S0397
*           APESPROC='IGTKDA  ';    /* TO BE IGTKDA.                 */
         MVC   APESPROC(8),@CC04646                             03S0398
*           APIOACTV=0;             /* INSURE I/O NOT LONGER ACTIVE  */
         L     @01,DAPIOPTR                                     03S0399
         MVI   APIOACTV(@01),X'00'                              03S0399
*         END;                      /* I/O CLEARED                   */
*       ELSE                        /* IF NOT IN CLOSE PROCESSING,   */
*         DO;                       /* LOG (USER ERROR) AND STOP     */
         B     @RC00344                                         02S0401
@RF00344 DS    0H                                               02S0402
*           APESCODE=CERRN07;       /* ERROR CODE                    */
         MVI   APESCODE,X'07'                                   02S0402
*           APESFSDP=BOFF;          /* NO SDUMP -- USER ERROR        */
         NI    APESFSDP,B'11011111'                             02S0403
*           DO;                     /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*             DO;                   /* ABEND(APCTABND)               */
*               RESPECIFY                                       02S0406
*                (GPR01F) RESTRICTED;                           02S0406
*               GPR01F=APCTABND;    /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0407
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                               02S0408
*               RESPECIFY                                       02S0409
*                (GPR01F) UNRESTRICTED;                         02S0409
*             END;                  /* ABEND(APCTABND) FORCE ABEND   */
*             GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);      02S0411
*                                                  /* NO CODE
*           END;                    /* ABEND ISSUED                  */
*         END;                      /* ACTIVE APIO PROCESSED         */
*                                                               02S0413
*     /***************************************************************/
*     /*                                                             */
*     /* RESET THE APRL (PROTECTED COPY) AND APDX FIELDS ASSOCIATED  */
*     /* WITH THIS APIO.                                             */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0414
*     APDXAPIO(APRLAPIO)=0;         /* APIO PTR IN APDX CLEARED      */
@RC00344 DS    0H                                               02S0414
@RF00343 SLR   @15,@15                                          02S0414
         LA    @14,DAPRL                                        02S0414
         L     @11,APRLAPIO(,@14)                               02S0414
         SLA   @11,2                                            02S0414
         L     @01,DAPDXPTR                                     02S0414
         ST    @15,APDXAPIO-4(@11,@01)                          02S0414
*     APRLAPIO=0;                   /* UPDATE APRL TO SHOW           */
         ST    @15,APRLAPIO(,@14)                               02S0415
*     APRLXIO=BOFF;                 /* NO TRANSLATED PROGRAM         */
         NI    APRLXIO(@14),B'11111011'                         02S0416
*   END;                            /* APIO FOUND                    */
         EJECT
*                                                               01S0418
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE THE APIO. COPY THE APIO TO A PROTECTED WORKAREA. THIS */
*   /* ALLOWS THE REMAINDER OF THIS PROGRAM TO RELEASE THE RESOURCES */
*   /* ATTACHED TO THIS APIO WITHOUT ACTUALLY 'LOCKING' ON THE APIO  */
*   /* CHAIN.                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0418
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0418
*     /***************************************************************/
*     /*                                                             */
*     /* RELEASE THE APIO ASSOCIATED WITH THE APRL. THE APIO IS FREED*/
*     /* BY CLEARING THE DEB/ASCB ADDRESSES (NOTE: THE ASCB ADDRESS  */
*     /* MUST BE RESET LAST SINCE A NEW USER MAY OBTAIN THIS APIO AS */
*     /* SOON AS APIOASCB = 0.) A COPY OF THE APIO IS MADE TO BE USED*/
*     /* FOR FURTHER PROCESSING (IE RELEASING THE RESOURCES          */
*     /* ASSOCIATED WITH THIS APIO).                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0419
*                                                               02S0419
*     /***************************************************************/
*     /*                                                             */
*     /* SAVE A COPY OF THE APIO IN THE DYNAMIC STORAGE AREA. THIS   */
*     /* ALLOWS RELEASE TO COMPLETE PROCESSING EVEN THOUGH THE REAL  */
*     /* APIO IS RELEASED (ANOTHER USER MAY ACQUIRE THE JUST RELEASED*/
*     /* APIO).                                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0419
*     RFY                                                       02S0419
*      (R0P,                                                    02S0419
*       R14P,                                                   02S0419
*       R1F,                                                    02S0419
*       R15F) RSTD;                 /* MVCL REGISTERS                */
*     R0P=ADDR(DAPIO);              /* ADDRESS OF THE APIO COPY      */
         LA    R0P,DAPIO                                        02S0420
*     R14P=ADDR(APIO);              /* ADDRESS OF THE REAL APIO      */
         L     R14P,DAPIOPTR                                    02S0421
*     R1F=APIOLN;                   /* LENGTH OF APIO FOR MVCL       */
         LA    R1F,424                                          02S0422
*     R15F=R1F;                     /* MOVE THE ENTIRE APIO          */
         LR    R15F,R1F                                         02S0423
*     MVCL(R0P,R14P);               /* SAVE THE APIO                 */
         MVCL  R0P,R14P                                         02S0424
*     RFY                                                       02S0425
*      (R0P,                                                    02S0425
*       R14P,                                                   02S0425
*       R1F,                                                    02S0425
*       R15F) UNRSTD;               /* DONE WITH MVCL REGS           */
*                                                               02S0425
*     /***************************************************************/
*     /*                                                             */
*     /* FREE THE REAL APIO                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0426
*     APIODEB=0;                    /* CLEAR OWNERSHIP FLAGS         */
         SLR   @15,@15                                          02S0426
         L     @14,DAPIOPTR                                     02S0426
         ST    @15,APIODEB(,@14)                                02S0426
*     APIOASCB=0;                   /* (DEB AND ASCB)                */
         ST    @15,APIOASCB(,@14)                               02S0427
*     DAPIOPTR=ADDR(DAPIO);         /* CHANGE APIO POINTER TO COPY   */
         LA    @15,DAPIO                                        02S0428
         ST    @15,DAPIOPTR                                     02S0428
*   END;                            /* END OF CODE                   */
         EJECT
*                                                               01S0430
*   /*****************************************************************/
*   /*                                                               */
*   /* PGFREE THE STORAGE FIXED BY THE VPSS TRANSLATE FUNCTION       */
*   /* (IGTKCA).                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0430
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0430
*     /***************************************************************/
*     /*                                                             */
*     /* IF THE CHANNEL PROGRAM WAS FIXED AT TRANSLATION BY IGTKCA   */
*     /* (APIOFXED=1), THEN PGFREE THE USER'S BUFFERS AND THE CHANNEL*/
*     /* PROGRAM.                                                    */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0431
*     IF APIOFXED=BON THEN          /* PAGE FIX AT TRANSLATION ?     */
         TM    APIOFXED(@15),B'10000000'                        02S0431
         BNO   @RF00431                                         02S0431
*       DO;                         /* YES-- THEN FREE NOW.          */
*         DRETRY(02)=APESRTRY;      /* SAVE CURRENT RETRY ADDRESS    */
         L     @14,APESREGP                                     02S0433
         L     @11,APESRTRY(,@14)                               02S0433
         ST    @11,DRETRY+4                                     02S0433
*         APESRTRY=ADDR(PGFREEY);   /* NEW RETRY ADDRESS             */
         LA    @11,PGFREEY                                      02S0434
         ST    @11,APESRTRY(,@14)                               02S0434
*         RFY                                                   02S0435
*          (R0P,                                                02S0435
*           R1P,                                                02S0435
*           R4P) RSTD;              /* IEAVPSI INTERFACE REGISTERS   */
*         R0P=0;                    /* NO ECB (FIX COMPLETED)        */
         SLR   R0P,R0P                                          02S0436
*         R1P=APIOPGFX              /* POINT TO 1ST VSL &            */
*             ×'80000000'X;         /* SHOW LIST FORMAT.             */
         L     R1P,APIOPGFX(,@15)                               02S0437
         O     R1P,@CF04684                                     02S0437
*         R1P->VSLFLAG1='00'X;      /* CLEAR FLAGS                   */
         MVI   VSLFLAG1(R1P),X'00'                              02S0438
*         R1P->VSLFREE=BON;         /* SHOW PGFREE REQUEST.          */
         OI    VSLFREE(R1P),B'00100000'                         02S0439
*         R4P=DEBTCBB;              /* ELIMINATE FOE. BELONGS TO TCB
*                                      WHICH OPENED ACB.             */
         L     @15,DDEBPTR                                      02S0440
         L     R4P,DEBTCBB-1(,@15)                              02S0440
         LA    R4P,0(,R4P)                                      02S0440
*         APESCODE=CERRN05;         /* PGFIX ERROR CODE              */
         MVI   APESCODE,X'05'                                   02S0441
*         GEN(MODESET EXTKEY=ZERO)                              02S0442
*         NOREFS NOSETS;            /* PSI REQUIRES KEY-0            */
         MODESET EXTKEY=ZERO
*         CALL IEAVPSI;             /* FREE REQUIRED PAGES           */
         L     @05,CVTPTR                                       02S0443
         L     @15,CVTVPSIB(,@05)                               02S0443
         BALR  @14,@15                                          02S0443
*         RFY                                                   02S0444
*          (R0P,                                                02S0444
*           R1P,                                                02S0444
*           R4P) UNRSTD;            /* FINISHED WITH REGISTERS       */
*         RFY                                                   02S0445
*          (R15F) RSTD;             /* PSI RETURN CODE               */
*         GEN(MODESET EXTKEY=DATAMGT)                           02S0446
*         NOREFS NOSETS;            /* RESUME NORMAL KEY             */
         MODESET EXTKEY=DATAMGT
*         APESCODE=CERRN99;         /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0447
*         IF R15F^=0 THEN           /* IF PGFREE FAILED, THEN        */
         LTR   R15F,R15F                                        02S0448
         BZ    @RF00448                                         02S0448
*           DO;                     /* FORCE ERROR TO BE LOGGED.     */
*             APESCODE=CERRN05;     /* SET ERROR CODE                */
         MVI   APESCODE,X'05'                                   02S0450
*             DO;                   /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*               DO;                 /* ABEND(APCTABND)               */
*                 RESPECIFY                                     02S0453
*                  (GPR01F) RESTRICTED;                         02S0453
*                 GPR01F=APCTABND;  /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0454
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                               02S0455
*                 RESPECIFY                                     02S0456
*                  (GPR01F) UNRESTRICTED;                       02S0456
*               END;                /* ABEND(APCTABND) FORCE ABEND   */
*               GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);    02S0458
*                                                  /* NO CODE
*             END;                  /* ABEND ISSUED                  */
*           END;                    /* ERROR LOGGED                  */
*         RFY                                                   02S0461
*           R15F UNRSTD;            /* FINISHED WITH REGISTER        */
@RF00448 DS    0H                                               02S0462
*PGFREEY:                           /* FRR RETRY POINT               */
*         DO;                       /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               02S0462
PGFREEY  DS    0H                                               02S0463
*           /*********************************************************/
*           /*                                                       */
*           /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT   */
*           /* INSURE REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT     */
*           /* SAVED IN APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S  */
*           /* OPTIMIZATION MEMORY OF CURRENT REGISTER VALUES        */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0463
*           RFY                                                 02S0463
*            (R0RSTD,                                           02S0463
*             R1RSTD,                                           02S0463
*             R2RSTD,                                           02S0463
*             R3RSTD,                                           02S0463
*             R4RSTD,                                           02S0463
*             R5RSTD,               /* 6-7 BASES                     */
*             R8RSTD,                                           02S0463
*             R9RSTD,                                           02S0463
*             R10RSTD,                                          02S0463
*             R11RSTD,              /* 12-13 APCT/APSV PTRS          */
*             R14RSTD,                                          02S0463
*             R15RSTD) RSTD;        /* KEEP PL/S FROM CARRYING DATA  */
*           GEN(MODESET EXTKEY=DATAMGT)                         02S0464
*           NOREFS NOSETS;          /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*           RFY                                                 02S0465
*            (R0RSTD,                                           02S0465
*             R1RSTD,                                           02S0465
*             R2RSTD,                                           02S0465
*             R3RSTD,                                           02S0465
*             R4RSTD,                                           02S0465
*             R5RSTD,               /* 6-7 BASES                     */
*             R8RSTD,                                           02S0465
*             R9RSTD,                                           02S0465
*             R10RSTD,                                          02S0465
*             R11RSTD,              /* 12-13 APCT/APSV PTRS          */
*             R14RSTD,                                          02S0465
*             R15RSTD) UNRSTD;      /* ALLOW PL/S TO USE REGS AGAIN  */
*         END;                      /* RETRY ENVIRONMENT SET         */
*         APESRTRY=DRETRY(02);      /* RESTORE RETRY POINT           */
         L     @15,APESREGP                                     02S0467
         L     @14,DRETRY+4                                     02S0467
         ST    @14,APESRTRY(,@15)                               02S0467
*         DO;                       /* ERROR RECOVERY COMPLETE       */
*           APESFPRV=BOFF;          /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             02S0469
*           APESCODE=CERRN99;       /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0470
*           APESFDMP=BON;           /* RESET DUMP/LOG FLAGS          */
*           APESFREC=BON;           /* TO THEIR NORMAL VALUES        */
*           APESFSDP=BON;           /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             02S0473
*         END;                      /* ALL INDICATORS RESET          */
*         APESCOD1=0;               /* CLEAR ERROR INDICATOR         */
*                                                               02S0475
         MVI   APESCOD1,X'00'                                   02S0475
*         /***********************************************************/
*         /*                                                         */
*         /* PGFREE VPSS VSL ENTRIES                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0476
*         DRETRY(02)=APESRTRY;      /* SAVE CURRENT RETRY ADDRESS    */
         ST    @14,DRETRY+4                                     02S0476
*         APESRTRY=ADDR(PGFREEZ);   /* NEW RETRY ADDRESS             */
         LA    @14,PGFREEZ                                      02S0477
         ST    @14,APESRTRY(,@15)                               02S0477
*         RFY                                                   02S0478
*          (R0P,                                                02S0478
*           R1P,                                                02S0478
*           R2P,                                                02S0478
*           R4P) RSTD;              /* IEAVPSI INTERFACE REGISTERS   */
*         R0P=0;                    /* NO ECB -- PGFIX COMPLETE      */
         SLR   R0P,R0P                                          02S0479
*         R1P=APIOPGFX              /* ADDRESS OF AREA TO PGFREE     */
*             ×'20000000'X;         /* SHOW REGISTER FORM, PGFREE.   */
         L     @05,DAPIOPTR                                     02S0480
         L     R1P,APIOPGFX(,@05)                               02S0480
         O     R1P,@CF04688                                     02S0480
*         R2P=APIOPGFL+LENGTH(VSL)  /* LAST BYTE TO PGFREE           */
*             ×'80000000'X;         /* SET END-OF-LIST FLAG          */
         LA    R2P,8                                            02S0481
         AL    R2P,APIOPGFL(,@05)                               02S0481
         O     R2P,@CF04684                                     02S0481
*         R4P=DEBTCBB;              /* ELIMINATE FOE. BELONGS TO TCB
*                                      WHICH OPENED ACB.             */
         L     @03,DDEBPTR                                      02S0482
         L     R4P,DEBTCBB-1(,@03)                              02S0482
         LA    R4P,0(,R4P)                                      02S0482
*         APESCODE=CERRN05;         /* PGFIX ERROR CODE              */
         MVI   APESCODE,X'05'                                   02S0483
*         GEN(MODESET EXTKEY=ZERO)                              02S0484
*         NOREFS NOSETS;            /* PSI REQUIRES KEY-0            */
         MODESET EXTKEY=ZERO
*         CALL IEAVPSI;             /* FIX REQUIRED PAGES            */
         L     @05,CVTPTR                                       02S0485
         L     @15,CVTVPSIB(,@05)                               02S0485
         BALR  @14,@15                                          02S0485
*         RFY                                                   02S0486
*          (R0P,                                                02S0486
*           R1P,                                                02S0486
*           R2P,                                                02S0486
*           R4P) UNRSTD;            /* FINISHED WITH REGISTERS       */
*         RFY                                                   02S0487
*          (R15F) RSTD;             /* PSI RETURN CODE               */
*         GEN(MODESET EXTKEY=DATAMGT)                           02S0488
*         NOREFS NOSETS;            /* RESUME NORMAL KEY             */
         MODESET EXTKEY=DATAMGT
*         APESCODE=CERRN99;         /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0489
*         IF R15F^=0 THEN           /* IF PGFREE FAILED, THEN        */
         LTR   R15F,R15F                                        02S0490
         BZ    @RF00490                                         02S0490
*           DO;                     /* FORCE ERROR TO BE LOGGED.     */
*             APESCODE=CERRN05;     /* SET ERROR CODE                */
         MVI   APESCODE,X'05'                                   02S0492
*             DO;                   /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*               DO;                 /* ABEND(APCTABND)               */
*                 RESPECIFY                                     02S0495
*                  (GPR01F) RESTRICTED;                         02S0495
*                 GPR01F=APCTABND;  /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0496
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                               02S0497
*                 RESPECIFY                                     02S0498
*                  (GPR01F) UNRESTRICTED;                       02S0498
*               END;                /* ABEND(APCTABND) FORCE ABEND   */
*               GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);    02S0500
*                                                  /* NO CODE
*             END;                  /* ABEND ISSUED                  */
*           END;                    /* ERROR LOGGED                  */
*         RFY                                                   02S0503
*           R15F UNRSTD;            /* FINISHED WITH REGISTER        */
@RF00490 DS    0H                                               02S0504
*PGFREEZ:                           /* FRR RETRY POINT               */
*         DO;                       /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               02S0504
PGFREEZ  DS    0H                                               02S0505
*           /*********************************************************/
*           /*                                                       */
*           /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT   */
*           /* INSURE REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT     */
*           /* SAVED IN APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S  */
*           /* OPTIMIZATION MEMORY OF CURRENT REGISTER VALUES        */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0505
*           RFY                                                 02S0505
*            (R0RSTD,                                           02S0505
*             R1RSTD,                                           02S0505
*             R2RSTD,                                           02S0505
*             R3RSTD,                                           02S0505
*             R4RSTD,                                           02S0505
*             R5RSTD,               /* 6-7 BASES                     */
*             R8RSTD,                                           02S0505
*             R9RSTD,                                           02S0505
*             R10RSTD,                                          02S0505
*             R11RSTD,              /* 12-13 APCT/APSV PTRS          */
*             R14RSTD,                                          02S0505
*             R15RSTD) RSTD;        /* KEEP PL/S FROM CARRYING DATA  */
*           GEN(MODESET EXTKEY=DATAMGT)                         02S0506
*           NOREFS NOSETS;          /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*           RFY                                                 02S0507
*            (R0RSTD,                                           02S0507
*             R1RSTD,                                           02S0507
*             R2RSTD,                                           02S0507
*             R3RSTD,                                           02S0507
*             R4RSTD,                                           02S0507
*             R5RSTD,               /* 6-7 BASES                     */
*             R8RSTD,                                           02S0507
*             R9RSTD,                                           02S0507
*             R10RSTD,                                          02S0507
*             R11RSTD,              /* 12-13 APCT/APSV PTRS          */
*             R14RSTD,                                          02S0507
*             R15RSTD) UNRSTD;      /* ALLOW PL/S TO USE REGS AGAIN  */
*         END;                      /* RETRY ENVIRONMENT SET         */
*         APESRTRY=DRETRY(02);      /* RESTORE RETRY POINT           */
         L     @15,DRETRY+4                                     02S0509
         L     @14,APESREGP                                     02S0509
         ST    @15,APESRTRY(,@14)                               02S0509
*         DO;                       /* ERROR RECOVERY COMPLETE       */
*           APESFPRV=BOFF;          /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             02S0511
*           APESCODE=CERRN99;       /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0512
*           APESFDMP=BON;           /* RESET DUMP/LOG FLAGS          */
*           APESFREC=BON;           /* TO THEIR NORMAL VALUES        */
*           APESFSDP=BON;           /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             02S0515
*         END;                      /* ALL INDICATORS RESET          */
*         APESCOD1=0;               /* CLEAR ERROR INDICATOR         */
*                                                               02S0517
         MVI   APESCOD1,X'00'                                   02S0517
*         /***********************************************************/
*         /*                                                         */
*         /* PGFREE ISSUED FOR ALL STORAGE FIXED FOR THIS APIO.      */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0518
*       END;                        /* BUFFERS AND CHANNEL PGM  02S0518
*                                      PGFREE'D                      */
*   END;                            /* END OF CODE SEGMENT           */
@RF00431 DS    0H                                               02S0520
         EJECT
*                                                               01S0520
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAIN THE STORAGE ACQUIRED BY IGTKCA (VPSS TRANSLATE) FOR  */
*   /* THIS APIO.                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0520
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0520
*     /***************************************************************/
*     /*                                                             */
*     /* FREE STORAGE ACQUIRED FOR THE CCWS, IDALS, APXLS, AND VSLS. */
*     /* USE BRANCH ENTRY TO FREEMAIN SINCE LOCAL LOCK ALREADY OWNED */
*     /* (MAY NOT RELINQUISH).                                       */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0521
*                                                               02S0521
*     /***************************************************************/
*     /*                                                             */
*     /* SET RECOVERY ENVIRONMENT. IF ERROR OCCURS, BYPASS THE       */
*     /* FREEMAIN PROCESSING.                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0521
*     DRETRY(01)=APESRTRY;          /* SAVE CURRENT RETRY POINT      */
         L     @15,APESREGP                                     02S0521
         L     @14,APESRTRY(,@15)                               02S0521
         ST    @14,DRETRY                                       02S0521
*     APESRTRY=ADDR(FRESTORZ);      /* NEW RETRY POINT               */
         LA    @14,FRESTORZ                                     02S0522
         ST    @14,APESRTRY(,@15)                               02S0522
*                                                               02S0523
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD IGTUAG CONTROL BLOCK                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0523
*     RFY                                                       02S0523
*      (R1P) RSTD;                  /* INTERFACE REGISTER            */
*     R1P=ADDR(DAPGF);              /* POINT TO IGTUAG INPUT         */
         LA    R1P,DAPGF                                        02S0524
*     RFY                                                       02S0525
*       APGF BASED(R1P);            /* TELL THE COMPILER             */
*     APGF=APGF&&APGF;              /* CLEAR UNUSED FIELDS           */
         XC    APGF(16,R1P),APGF(R1P)                           02S0526
*     APGFXSP=APXLSP;               /* SUBPOOL REQUIRED              */
         MVI   APGFXSP(R1P),X'E6'                               02S0527
*     APGFXKEY=APXLKEY;             /* KEY                           */
         MVI   APGFXKEY(R1P),X'05'                              02S0528
*     APGFSLCK=BON;                 /* SHOW LOCAL LOCK OWNED         */
*     APGFSFRE=BON;                 /* FREEMAIN REQUESTED.           */
*     APGFSINL=BON;                 /* USE INDIRECT POINTERS FOR     */
*     APGFSINA=BON;                 /* LENGTH AND ADDRESS. USED BY
*                                      RECOVERY.                     */
*     APGFSTCB=BON;                 /* ASSOCIATE STORAGE WITH        */
         OI    APGFSLCK(R1P),B'11001101'                        02S0533
*     APGFTCB=DEBTCBB;              /* TCB WHICH OPENED THE ACB.     */
         L     @15,DDEBPTR                                      02S0534
         L     @00,DEBTCBB-1(,@15)                              02S0534
         ICM   @00,8,@CB02617                                   02S0534
         ST    @00,APGFTCB(,R1P)                                02S0534
*     APGFXADR=ADDR(APIOGMAD);      /* ADDRESS OF DYNAMIC STORAGE    */
         L     @15,DAPIOPTR                                     02S0535
         LA    @00,APIOGMAD(,@15)                               02S0535
         ST    @00,APGFXADR(,R1P)                               02S0535
*     APGFXLN=ADDR(APIOGMSZ);       /* LENGTH OF DYNAMIC STORAGE     */
         LA    @00,APIOGMSZ(,@15)                               02S0536
         ST    @00,APGFXLN(,R1P)                                02S0536
*     APESCODE=CERRN04;             /* ERROR CODE IF FREEMAIN FAILS  */
         MVI   APESCODE,X'04'                                   02S0537
*     CALL APCVZUAG;                /* FREE THE STORAGE              */
         L     @15,APCTZUAG(,APCTPTR)                           02S0538
         BALR  @14,@15                                          02S0538
*     RFY                                                       02S0539
*       R15F RSTD;                  /* IGTUAG RETURN CODE            */
*     IF R15F^=0 THEN               /* IF STORAGE NOT FREED, THEN    */
         LTR   R15F,R15F                                        02S0540
         BZ    @RF00540                                         02S0540
*       DO;                         /* LOG ERROR BEFORE CONTINUING.  */
*         GEN FLOWS(FRESTORZ) SEQFLOW;                          02S0542
*                                    /* FOR PL/S FLOW ANALYSIS
*         DO;                       /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*           DO;                     /* ABEND(APCTABND)               */
*             RESPECIFY                                         02S0545
*              (GPR01F) RESTRICTED;                             02S0545
*             GPR01F=APCTABND;      /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0546
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                               02S0547
*             RESPECIFY                                         02S0548
*              (GPR01F) UNRESTRICTED;                           02S0548
*           END;                    /* ABEND(APCTABND) FORCE ABEND   */
*           GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);        02S0550
*                                                  /* NO CODE
*         END;                      /* ABEND ISSUED                  */
*       END;                        /* ERROR PROCESSED               */
*     RFY                                                       02S0553
*       R15F UNRSTD;                /* DONE WITH RETURN CODE REG     */
@RF00540 DS    0H                                               02S0554
*FRESTORZ:                          /* FRR RETRY POINT               */
*     DO;                           /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               02S0554
FRESTORZ DS    0H                                               02S0555
*       /*************************************************************/
*       /*                                                           */
*       /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT INSURE*/
*       /* REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT SAVED IN       */
*       /* APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S OPTIMIZATION  */
*       /* MEMORY OF CURRENT REGISTER VALUES                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0555
*       RFY                                                     02S0555
*        (R0RSTD,                                               02S0555
*         R1RSTD,                                               02S0555
*         R2RSTD,                                               02S0555
*         R3RSTD,                                               02S0555
*         R4RSTD,                                               02S0555
*         R5RSTD,                   /* 6-7 BASES                     */
*         R8RSTD,                                               02S0555
*         R9RSTD,                                               02S0555
*         R10RSTD,                                              02S0555
*         R11RSTD,                  /* 12-13 APCT/APSV PTRS          */
*         R14RSTD,                                              02S0555
*         R15RSTD) RSTD;            /* KEEP PL/S FROM CARRYING DATA  */
*       GEN(MODESET EXTKEY=DATAMGT)                             02S0556
*       NOREFS NOSETS;              /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*       RFY                                                     02S0557
*        (R0RSTD,                                               02S0557
*         R1RSTD,                                               02S0557
*         R2RSTD,                                               02S0557
*         R3RSTD,                                               02S0557
*         R4RSTD,                                               02S0557
*         R5RSTD,                   /* 6-7 BASES                     */
*         R8RSTD,                                               02S0557
*         R9RSTD,                                               02S0557
*         R10RSTD,                                              02S0557
*         R11RSTD,                  /* 12-13 APCT/APSV PTRS          */
*         R14RSTD,                                              02S0557
*         R15RSTD) UNRSTD;          /* ALLOW PL/S TO USE REGS AGAIN  */
*     END;                          /* RETRY ENVIRONMENT SET         */
*     APESRTRY=DRETRY(01);          /* RESTORE PREVIOUS RETRY RTN    */
         L     @00,DRETRY                                       02S0559
         L     @15,APESREGP                                     02S0559
         ST    @00,APESRTRY(,@15)                               02S0559
*     DO;                           /* ERROR RECOVERY COMPLETE       */
*       APESFPRV=BOFF;              /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             02S0561
*       APESCODE=CERRN99;           /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0562
*       APESFDMP=BON;               /* RESET DUMP/LOG FLAGS          */
*       APESFREC=BON;               /* TO THEIR NORMAL VALUES        */
*       APESFSDP=BON;               /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             02S0565
*     END;                          /* ALL INDICATORS RESET          */
*     APESCOD1=0;                   /* CLEAR ERROR INDICATOR         */
         MVI   APESCOD1,X'00'                                   02S0567
*     RFY                                                       02S0568
*       APGF;                       /* DONE WITH APGF.               */
*     RFY                                                       02S0569
*       R1P UNRSTD;                 /* FINISHED WITH REGISTER        */
*   END;                            /* PERMANENT STORAGE RELEASED    */
         EJECT
*RESTAPRL:                          /* RETRY POINT                   */
*                                                               01S0571
*   /*****************************************************************/
*   /*                                                               */
*   /* RE-ESTABLISH ENVIRONMENT IF RETRY ENTRY                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0571
*   DO;                             /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               01S0571
RESTAPRL DS    0H                                               01S0572
*     /***************************************************************/
*     /*                                                             */
*     /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT INSURE  */
*     /* REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT SAVED IN         */
*     /* APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S OPTIMIZATION    */
*     /* MEMORY OF CURRENT REGISTER VALUES                           */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0572
*     RFY                                                       01S0572
*      (R0RSTD,                                                 01S0572
*       R1RSTD,                                                 01S0572
*       R2RSTD,                                                 01S0572
*       R3RSTD,                                                 01S0572
*       R4RSTD,                                                 01S0572
*       R5RSTD,                     /* 6-7 BASES                     */
*       R8RSTD,                                                 01S0572
*       R9RSTD,                                                 01S0572
*       R10RSTD,                                                01S0572
*       R11RSTD,                    /* 12-13 APCT/APSV PTRS          */
*       R14RSTD,                                                01S0572
*       R15RSTD) RSTD;              /* KEEP PL/S FROM CARRYING DATA  */
*     GEN(MODESET EXTKEY=DATAMGT)                               01S0573
*     NOREFS NOSETS;                /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*     RFY                                                       01S0574
*      (R0RSTD,                                                 01S0574
*       R1RSTD,                                                 01S0574
*       R2RSTD,                                                 01S0574
*       R3RSTD,                                                 01S0574
*       R4RSTD,                                                 01S0574
*       R5RSTD,                     /* 6-7 BASES                     */
*       R8RSTD,                                                 01S0574
*       R9RSTD,                                                 01S0574
*       R10RSTD,                                                01S0574
*       R11RSTD,                    /* 12-13 APCT/APSV PTRS          */
*       R14RSTD,                                                01S0574
*       R15RSTD) UNRSTD;            /* ALLOW PL/S TO USE REGS AGAIN  */
*   END;                            /* RETRY ENVIRONMENT SET         */
*   APESRTRY=ADDR(EXIT);            /* PREVENT RECOVERY LOOP         */
         L     @15,APESREGP                                     01S0576
         LA    @14,EXIT                                         01S0576
         ST    @14,APESRTRY(,@15)                               01S0576
*   DO;                             /* ERROR RECOVERY COMPLETE       */
*     APESFPRV=BOFF;                /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             01S0578
*     APESCODE=CERRN99;             /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   01S0579
*     APESFDMP=BON;                 /* RESET DUMP/LOG FLAGS          */
*     APESFREC=BON;                 /* TO THEIR NORMAL VALUES        */
*     APESFSDP=BON;                 /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             01S0582
*   END;                            /* ALL INDICATORS RESET          */
*                                                               01S0583
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY THE PROTECTED COPY OF THE APRL BACK TO THE USER'S APRL.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0584
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0584
*     /***************************************************************/
*     /*                                                             */
*     /* MOVE THE UPDATED PORTIONS OF THE APRL BACK TO THE USER'S    */
*     /* COPY OF THE APRL (IF REQUESTED). IF AN ERROR HAS OCCURRED   */
*     /* DURING THE PROCESSING (APESCOD1^=0), SET THE ERROR CODES IN */
*     /* THE APRL. IF AN ABEND OCCURS, SET THE REGISTER 15 VALUE TO  */
*     /* INDICATE THAT AN ERROR HAS OCCURRED. SET RECOVERY           */
*     /* ENVIRONMENT                                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0585
*     DRETRY(03)=APESRTRY;          /* SAVE RETRY ADDRESS            */
         ST    @14,DRETRY+8                                     02S0585
*     APESRTRY=ADDR(UPDAPRLZ);      /* SET NEW RETRY ADDRESS         */
         LA    @14,UPDAPRLZ                                     02S0586
         ST    @14,APESRTRY(,@15)                               02S0586
*     IF APESCOD1^=0 THEN           /* IF AN ERROR HAS BEEN          */
         CLI   APESCOD1,0                                       02S0587
         BE    @RF00587                                         02S0587
*       CALL SETAPRL;               /* DETECTED, THEN SET ERROR CODE */
*                                                               02S0588
         BAL   @14,SETAPRL                                      02S0588
*     /***************************************************************/
*     /*                                                             */
*     /* MOVE PROTECTED APRL BACK TO USER'S AREA                     */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0589
*     IF APRLNRC=BOFF THEN          /* IF THE USER WANTS THE RETURN  */
@RF00587 LA    @15,DAPRL                                        02S0589
         TM    APRLNRC(@15),B'00000001'                         02S0589
         BNZ   @RF00589                                         02S0589
*       DO;                         /* CODE (NOT SYSTEM INITIATED)-- */
*         APESCODE=CERRN06;         /* ERROR CODE -- BAD APRL        */
         MVI   APESCODE,X'06'                                   02S0591
*         APESFSDP=BOFF;            /* NO SDUMP -- USER ERR IF ABEND */
         NI    APESFSDP,B'11011111'                             02S0592
*         SPKA(DUSERKEY);           /* SWITCH TO THE USER'S KEY      */
         SLR   @01,@01                                          02S0593
         IC    @01,DUSERKEY                                     02S0593
         SPKA  0(@01)                                           02S0593
*         DAPRLPTR->APRLAPIO=0;     /* SHOW NO APIO EXISTS           */
         L     @14,DAPRLPTR                                     02S0594
         SLR   @11,@11                                          02S0594
         ST    @11,APRLAPIO(,@14)                               02S0594
*         DAPRLPTR->APRLUSER=APRLUSER;/* RESTORE INSTALLATION FIELD  */
         L     @11,APRLUSER(,@15)                               02S0595
         ST    @11,APRLUSER(,@14)                               02S0595
*         DAPRLPTR->APRLOPTS=APRLOPTS;/* RESTORE OPTIONS             */
         MVC   APRLOPTS(4,@14),APRLOPTS(@15)                    02S0596
*         DAPRLPTR->APRLOPTZ=APRLOPTZ;/* RESTORE OPTIONS             */
         MVC   APRLOPTZ(4,@14),APRLOPTZ(@15)                    02S0597
*         DAPRLPTR->APRLFDBK=APRLFDBK;/* RESTORE ERROR CODE (OR 0)   */
         L     @11,APRLFDBK(,@15)                               02S0598
         ST    @11,APRLFDBK(,@14)                               02S0598
*         DAPRLPTR->APRLMSGN=APRLMSGN;/* ERROR MSG NUMBER (OR 0)     */
         LH    @11,APRLMSGN(,@15)                               02S0599
         STH   @11,APRLMSGN(,@14)                               02S0599
*         DAPRLPTR->APRLVALN=APRLVALN;/* KEYWORD FOR ERROR MSG-OR 0  */
         LH    @15,APRLVALN(,@15)                               02S0600
         STH   @15,APRLVALN(,@14)                               02S0600
*         GEN(MODESET EXTKEY=DATAMGT)                           02S0601
*         NOREFS NOSETS;            /* RESUME THE NORMAL KEY         */
         MODESET EXTKEY=DATAMGT
*         APESCODE=CERRN99;         /* DEFAULT ERROR CODE            */
         MVI   APESCODE,X'0E'                                   02S0602
*         APESFSDP=BON;             /* SDUMP IF ERROR                */
         OI    APESFSDP,B'00100000'                             02S0603
*       END;                        /* USER APRL UPDATED             */
*UPDAPRLZ:                          /* FRR/ESTAE RECOVERY POINT      */
*                                                               02S0605
*     /***************************************************************/
*     /*                                                             */
*     /* RESET ERROR RECOVERY POINT                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0605
*     DO;                           /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               02S0605
@RF00589 DS    0H                                               02S0605
UPDAPRLZ DS    0H                                               02S0606
*       /*************************************************************/
*       /*                                                           */
*       /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT INSURE*/
*       /* REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT SAVED IN       */
*       /* APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S OPTIMIZATION  */
*       /* MEMORY OF CURRENT REGISTER VALUES                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0606
*       RFY                                                     02S0606
*        (R0RSTD,                                               02S0606
*         R1RSTD,                                               02S0606
*         R2RSTD,                                               02S0606
*         R3RSTD,                                               02S0606
*         R4RSTD,                                               02S0606
*         R5RSTD,                   /* 6-7 BASES                     */
*         R8RSTD,                                               02S0606
*         R9RSTD,                                               02S0606
*         R10RSTD,                                              02S0606
*         R11RSTD,                  /* 12-13 APCT/APSV PTRS          */
*         R14RSTD,                                              02S0606
*         R15RSTD) RSTD;            /* KEEP PL/S FROM CARRYING DATA  */
*       GEN(MODESET EXTKEY=DATAMGT)                             02S0607
*       NOREFS NOSETS;              /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*       RFY                                                     02S0608
*        (R0RSTD,                                               02S0608
*         R1RSTD,                                               02S0608
*         R2RSTD,                                               02S0608
*         R3RSTD,                                               02S0608
*         R4RSTD,                                               02S0608
*         R5RSTD,                   /* 6-7 BASES                     */
*         R8RSTD,                                               02S0608
*         R9RSTD,                                               02S0608
*         R10RSTD,                                              02S0608
*         R11RSTD,                  /* 12-13 APCT/APSV PTRS          */
*         R14RSTD,                                              02S0608
*         R15RSTD) UNRSTD;          /* ALLOW PL/S TO USE REGS AGAIN  */
*     END;                          /* RETRY ENVIRONMENT SET         */
*     APESRTRY=DRETRY(03);          /* RESTORE RETRY POINT           */
         L     @15,DRETRY+8                                     02S0610
         L     @14,APESREGP                                     02S0610
         ST    @15,APESRTRY(,@14)                               02S0610
*     DO;                           /* ERROR RECOVERY COMPLETE       */
*       APESFPRV=BOFF;              /* RESET RECURSION FLAG.         */
         NI    APESFPRV,B'10111111'                             02S0612
*       APESCODE=CERRN99;           /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0613
*       APESFDMP=BON;               /* RESET DUMP/LOG FLAGS          */
*       APESFREC=BON;               /* TO THEIR NORMAL VALUES        */
*       APESFSDP=BON;               /* (ALL ON)                      */
         OI    APESFDMP,B'11100000'                             02S0616
*     END;                          /* ALL INDICATORS RESET          */
*   END;                            /* END OF CODE SEGMENT           */
         EJECT
*EXIT:                              /* LAST-HOPE RECOVERY POINT      */
*                                                               01S0619
*   /*****************************************************************/
*   /*                                                               */
*   /* RE-ESTABLISH ENVIRONMENT IF RETRY ENTRY                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0619
*   DO;                             /* ENTRY FROM ESTAE/FRR RETRY    */
*                                                               01S0619
EXIT     DS    0H                                               01S0620
*     /***************************************************************/
*     /*                                                             */
*     /* ENTRY FROM ESTAE/FRR RETRY (IGTUKA). RETRY DOES NOT INSURE  */
*     /* REGISTERS 0-5, 8-11, 14-15 VALID SINCE NOT SAVED IN         */
*     /* APESREGS. ISSUE DUMMY RESTRICT TO WIPE PL/S OPTIMIZATION    */
*     /* MEMORY OF CURRENT REGISTER VALUES                           */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0620
*     RFY                                                       01S0620
*      (R0RSTD,                                                 01S0620
*       R1RSTD,                                                 01S0620
*       R2RSTD,                                                 01S0620
*       R3RSTD,                                                 01S0620
*       R4RSTD,                                                 01S0620
*       R5RSTD,                     /* 6-7 BASES                     */
*       R8RSTD,                                                 01S0620
*       R9RSTD,                                                 01S0620
*       R10RSTD,                                                01S0620
*       R11RSTD,                    /* 12-13 APCT/APSV PTRS          */
*       R14RSTD,                                                01S0620
*       R15RSTD) RSTD;              /* KEEP PL/S FROM CARRYING DATA  */
*     GEN(MODESET EXTKEY=DATAMGT)                               01S0621
*     NOREFS NOSETS;                /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*     RFY                                                       01S0622
*      (R0RSTD,                                                 01S0622
*       R1RSTD,                                                 01S0622
*       R2RSTD,                                                 01S0622
*       R3RSTD,                                                 01S0622
*       R4RSTD,                                                 01S0622
*       R5RSTD,                     /* 6-7 BASES                     */
*       R8RSTD,                                                 01S0622
*       R9RSTD,                                                 01S0622
*       R10RSTD,                                                01S0622
*       R11RSTD,                    /* 12-13 APCT/APSV PTRS          */
*       R14RSTD,                                                01S0622
*       R15RSTD) UNRSTD;            /* ALLOW PL/S TO USE REGS AGAIN  */
*   END;                            /* RETRY ENVIRONMENT SET         */
*                                                               01S0623
*   /*****************************************************************/
*   /*                                                               */
*   /* CANCEL THE RECOVERY ENVIRONMENT                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0624
*   DO;                             /* START OF CODE SEGMENT         */
*                                                               02S0624
*     /***************************************************************/
*     /*                                                             */
*     /* CANCEL THE RECOVERY ENVIRONMENT AND RELEASE THE LOCAL LOCK. */
*     /* ALL PROCESSING NOW COMPLETE.                                */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0625
*     CALL FREELLCK;                /* FREE THE LOCAL LOCK           */
         BAL   @14,FREELLCK                                     02S0625
*   END;                            /* RECOVERY ENVIRONMENT CANCELLED*/
         EJECT
*                                                               01S0627
*   /*****************************************************************/
*   /*                                                               */
*   /* SET THE REGISTER 15 RETURN CODE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0627
*   RFY                                                         01S0627
*     RERRCODE RSTD;                /* HOLDS RETURN CODE TO CALLER   */
*   RERRCODE=APCCROK;               /* SHOW 'RLSE' SUCCESSFUL.       */
         SLR   RERRCODE,RERRCODE                                01S0628
*   IF APESCOD1^=0 THEN             /* IF ERROR OCCURRED, THEN       */
         CLI   APESCOD1,0                                       01S0629
         BE    @RF00629                                         01S0629
*     RERRCODE=APCCRERR;            /* SET REG 15 NON-ZERO           */
         LA    RERRCODE,8                                       01S0630
*                                                               01S0631
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE THE SAVEAREA/WORKAREA. THEN RETURN TO THE CALLER (VIA SVC*/
*   /* 3) WITH REGISTER 15 INDICATING IF THE 'RLSE' WORKED. NOTE THAT*/
*   /* REGISTER 14 ON ENTRY DID NOT POINT TO THE RETURN POINT.       */
*   /* THEREFORE THE NORMAL RETURN MECHANISM COULD NOT BE USED.      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0631
*   DO;                             /* IGTYFSV A(APSV)               */
@RF00629 DS    0H                                               01S0632
*     RFY                                                       01S0632
*       GPR01P RSTD;                /* REG 1 SET TO AREA ADDRESS     */
*     GPR01P=ADDR(APSV);            /* SET REG 1 TO ADDR OF AREA TO
*                                      FREE                          */
         LR    GPR01P,APSVPTR                                   01S0633
*     CALL APCVZUAC;                /* FREE THE SAVEAREA-WORKAREA    */
         L     @15,APCTZUAC(,APCTPTR)                           01S0634
         BALR  @14,@15                                          01S0634
*     RFY                                                       01S0635
*       GPR01P UNRSTD;              /* FINISHED WITH REG 1           */
*   END;                            /* SAVEAREA-WORKAREA FREED FREE
*                                      THE SAVEAREA/WORKAREA         */
*   RFY                                                         01S0637
*     R15F RSTD;                    /* HOLDS RETURN CODE             */
*   R15F=RERRCODE;                  /* PUT RETURN CODE IN REGISTER 15*/
         LR    R15F,RERRCODE                                    01S0638
*   SVC(3);                         /* RETURN TO THE DISPATCHER      */
         SVC   3                                                01S0639
*   GEN NOREFS NOSETS EXIT;                                     01S0640
*                                  /*
*                                   NO CODE - SHOW THAT SVC 3 DOES
*                                   * NOT RETURN CONTROL
*   RFY                                                         01S0641
*    (RERRCODE,                                                 01S0641
*     R15F) UNRSTD;                 /* FINISHED WITH REGISTERS       */
         EJECT
*                                                               01S0642
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERNAL SUBROUTINES                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0642
*SETAPRL:                           /* CONVERT APESCOD1 INTO APRL    */
*   PROC;                           /* ERROR INDICATORS              */
*                                                               02S0642
         B     @PB00002                                         02S0642
SETAPRL  STM   @14,@12,12(@13)                                  02S0642
*   /*****************************************************************/
*   /*                                                               */
*   /* TAKE THE ERROR CODE (APESCOD1) AND CONVERT IT INTO ERRORS     */
*   /* CODES WHICH ARE MOVED INTO THE APRL (PROTECTED COPY).         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0643
*   IF APESCOD1^=0 THEN             /* IF NON-ZERO CODE, THEN        */
         CLI   APESCOD1,0                                       02S0643
         BE    @RF00643                                         02S0643
*     DO;                           /* BUILD APRL ERROR VALUES.      */
*       IF APESCOD1>CERRN99 THEN    /* IF INVALID VALUE, USE         */
         CLI   APESCOD1,14                                      02S0645
         BNH   @RF00645                                         02S0645
*         APESCOD1=CERRN99;         /* 'INDETERMINATE' ERROR VALUE.  */
         MVI   APESCOD1,X'0E'                                   02S0646
*       APRLRCT=CMBXRCT(APESCOD1);  /* ERROR TYPE                    */
@RF00645 LA    @15,DAPRL                                        02S0647
         SLR   @14,@14                                          02S0647
         IC    @14,APESCOD1                                     02S0647
         SLA   @14,3                                            02S0647
         SLR   @11,@11                                          02S0647
         IC    @11,CMBXRCT-8(@14)                               02S0647
         STC   @11,APRLRCT(,@15)                                02S0647
*       APRLRCC=APCCI;              /* ERROR COMPONENT (IO)          */
         MVI   APRLRCC(@15),X'05'                               02S0648
*       APRLRCN=CMBXRCN(APESCOD1);  /* UNIQUE ERROR NUMBER           */
         LH    @11,CMBXRCN-8(@14)                               02S0649
         STC   @11,APRLRCN(,@15)                                02S0649
*       APRLMSGN=CMBRMT(APESCOD1);  /* IGTMBR MESSAGE NUMBER         */
         LH    @11,CMBRMT-8(@14)                                02S0650
         STH   @11,APRLMSGN(,@15)                               02S0650
*       APRLVALN=CMBRKT(APESCOD1);  /* IGTMBR KEYWORD NUMBER         */
         LH    @14,CMBRKT-8(@14)                                02S0651
         STH   @14,APRLVALN(,@15)                               02S0651
*     END;                          /* ERROR CODES SET               */
*   RETURN;                         /* RETURN TO CALLER              */
@EL00002 DS    0H                                               02S0653
@EF00002 DS    0H                                               02S0653
@ER00002 LM    @14,@12,12(@13)                                  02S0653
         BR    @14                                              02S0653
*   END SETAPRL;                    /* END OF SUBROUTINE             */
         B     @EL00002                                         02S0654
         EJECT
*GETLLCK:                           /* GET THE LOCAL LOCK AND        */
*   PROC OPTIONS(NOSAVEAREA);       /* ESTABLISH FRR ENVIRONMENT     */
*                                                               02S0655
GETLLCK  STM   @14,@12,12(@13)                                  02S0655
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE LOCAL LOCK. THEN ISSUE A SETFRR TO PROVIDE RECOVERY   */
*   /* SUPPORT. THE SAME PARAMETERS AS AVAILABLE TO AN ESTAE (IF ANY)*/
*   /* ARE PASSED ('APES' BLOCK)                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0656
*                                                               02S0656
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE LOCAL LOCK                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0656
*   STM(R11F,R13F,DSUPVSVE);        /* SAVE DESTROYED REGISTERS      */
         STM   R11F,R13F,DSUPVSVE                               02S0656
*   APESCODE=CERRN09;               /* SET ERROR CODE                */
         MVI   APESCODE,X'09'                                   02S0657
*   GEN REFS(PSALITA,FLC) SETS(R11F,R12F,R13F,R14F);            02S0658
*                                   /*
         MODESET EXTKEY=ZERO       SETLOCK REQUIRES KEY-0
         SETLOCK OBTAIN,           ACQUIRE THE                         *
               TYPE=LOCAL,         * LOCAL LOCK                        *
               MODE=UNCOND,        * UNCONDITIONALLY.                  *
               RELATED=(FREELLCK,APESFLLK) * R13 HAS RETURN CODE
         MODESET EXTKEY=DATAMGT    RESUME STANDARD KEY
*   RFY                                                         02S0659
*     R15F RSTD;                    /* HOLDS SETLOCK RETURN CODE     */
*   R15F=R13F;                      /* SAVE SETLOCK RETURN CODE      */
         LR    R15F,R13F                                        02S0660
*   APESCODE=CERRN99;               /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0661
*   LM(R11F,R13F,DSUPVSVE);         /* RELOAD DESTROYED REGISTERS    */
*                                                               02S0662
         LM    R11F,R13F,DSUPVSVE                               02S0662
*   /*****************************************************************/
*   /*                                                               */
*   /* INSURE LOCK ACQUIRED. ABEND IF NOT                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0663
*   IF R15F^=0 THEN                 /* IF SETLOCK FAILED,            */
         LTR   R15F,R15F                                        02S0663
         BZ    @RF00663                                         02S0663
*     DO;                           /* THEN TERMINATE PROCESSING     */
*       APESCODE=CERRN09;           /* SET ERROR CODE                */
         MVI   APESCODE,X'09'                                   02S0665
*       DO;                         /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*         DO;                       /* ABEND(APCTABND)               */
*           RESPECIFY                                           02S0668
*            (GPR01F) RESTRICTED;                               02S0668
*           GPR01F=APCTABND;        /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0669
*           SVC(13);                /* ISSUE ABEND SVC               */
         SVC   13                                               02S0670
*           RESPECIFY                                           02S0671
*            (GPR01F) UNRESTRICTED;                             02S0671
*         END;                      /* ABEND(APCTABND) FORCE ABEND   */
*         GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);          02S0673
*                                                  /* NO CODE
*       END;                        /* ABEND ISSUED                  */
*     END;                          /* ERROR PROCESSED               */
*   RFY                                                         02S0676
*     R15F UNRSTD;                  /* FINISHED WITH RETURN CODE     */
@RF00663 DS    0H                                               02S0677
*   APESFLLK=BON;                   /* SHOW LOCAL LOCK OWNED         */
*                                                               02S0677
         OI    APESFLLK,B'00100000'                             02S0677
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE SETFRR TO COVER THE PROCESSING. PARAMETER LIST IS 'APES'*/
*   /* BLOCK. THE EXIT ROUTINE CAN PROCESS BOTH (E)STAE AND FRR      */
*   /* ENTRIES.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0678
*   APESCODE=CERRN13;               /* SETFRR ERROR CODE             */
         MVI   APESCODE,X'0D'                                   02S0678
*   RFY                                                         02S0679
*     R15P RSTD;                    /* SETFRR SETS TO PARM LIST      */
*   GEN REFS(PSA,PSACSTK,PSALSFCC,APCTZUKA,APCT,APCTPTR,FRRSFRRA,
*       FRRSENTR,FRRSPARM,FRRSCURR,FRRSLAST,FRRS) SETS(R14F,R15F,R15P);
*                                   /*
         MODESET EXTKEY=ZERO       SETFRR REQUIRES KEY-0
         SETFRR A,FRRAD=APCTZUKA-APCT(,APCTPTR), IGTUKA IS EXIT RTN    *
               PARMAD=(R15P),      * SAVE @ 6-WORD PARM FIELD HERE     *
               CLEAR=NO,           * DO NOT CLEAR PARM FIELD           *
               WRKREGS=(R14F,R15F), * WORK REGISTERS                   *
               RELATED=(FREELLCK,APES) * APES IS INPUT
*   R15P->I031P=ADDR(APES);         /* 1ST WORD OF PARM LIST IS 02S0681
*                                      ADDRESS OF 'APES'             */
         LA    @14,APES                                         02S0681
         ST    @14,I031P(,R15P)                                 02S0681
*   RFY                                                         02S0682
*     R15P UNRSTD;                  /* SETFRR PARM FIELD SET         */
*   GEN(MODESET EXTKEY=DATAMGT)                                 02S0683
*   NOREFS NOSETS;                  /* RESUME STANDARD KEY           */
         MODESET EXTKEY=DATAMGT
*   APESCODE=CERRN99;               /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0684
*   APESFFRR=BON;                   /* SHOW SETFRR ISSUED            */
*                                                               02S0685
         OI    APESFFRR,B'10000000'                             02S0685
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESSING COMPLETE. RETURN TO CALLER                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0686
*   RETURN;                         /* RETURN TO CALLER              */
@EL00003 DS    0H                                               02S0686
@EF00003 DS    0H                                               02S0686
@ER00003 LM    @14,@12,12(@13)                                  02S0686
         BR    @14                                              02S0686
*   END GETLLCK;                    /* END OF SUBROUTINE             */
         EJECT
*FREELLCK:                          /* RELEASE THE LOCAL LOCK        */
*   PROC OPTIONS(NOSAVEAREA);       /* CANCEL THE FRR ENVIRONMENT    */
*                                                               02S0688
FREELLCK STM   @14,@12,12(@13)                                  02S0688
*   /*****************************************************************/
*   /*                                                               */
*   /* CANCEL THE CURRENT FRR (SET BY GETLLCK). THEN RELEASE THE     */
*   /* LOCAL LOCK.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0689
*                                                               02S0689
*   /*****************************************************************/
*   /*                                                               */
*   /* CANCEL THE RECOVERY ENVIRONMENT                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0689
*   IF APESFFRR=BON THEN            /* IF SETFRR ISSUED,             */
         TM    APESFFRR,B'10000000'                             02S0689
         BNO   @RF00689                                         02S0689
*     DO;                           /* THEN CANCEL IT.               */
*       APESFFRR=BOFF;              /* SHOW NOT IN FRR               */
         NI    APESFFRR,B'01111111'                             02S0691
*       APESCODE=CERRN13;           /* ERROR CODE                    */
         MVI   APESCODE,X'0D'                                   02S0692
*       GEN REFS(PSA,PSACSTK,FRRS,FRRSCURR,FRRSEMP,FRRSELEN,FRRSCURR)
*           SETS(R14F,R15F);                                    02S0693
*                                   /*
         MODESET EXTKEY=ZERO       SETFRR REQUIRES KEY-0
         SETFRR D,                 CANCEL THE CURRENT ENTRY            *
               WRKREGS=(R14F,R15F), * WORK REGISTERS                   *
               RELATED=(GETLLCK,APES) * APES WAS INPUT
         MODESET EXTKEY=DATAMGT    RESUME STANDARD KEY
*       APESCODE=CERRN99;           /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0694
*     END;                          /* FRR CANCELLED                 */
*                                                               02S0695
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE THE LOCAL LOCK                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0696
*   IF APESFLLK=BON THEN            /* IF LOCAL LOCK OWNED,          */
@RF00689 TM    APESFLLK,B'00100000'                             02S0696
         BNO   @RF00696                                         02S0696
*     DO;                           /* THEN RELEASE IT.              */
*       STM(R11F,R13F,DSUPVSVE);    /* SAVE DESTROYED REGISTERS      */
         STM   R11F,R13F,DSUPVSVE                               02S0698
*       APESCODE=CERRN10;           /* SET ERROR CODE                */
         MVI   APESCODE,X'0A'                                   02S0699
*       GEN REFS(PSALITA,FLC) SETS(R11F,R12F,R13F,R14F);        02S0700
*                                      /*
         MODESET EXTKEY=ZERO       SETLOCK REQUIRES KEY-0
         SETLOCK RELEASE,          RELEASE THE                         *
               TYPE=LOCAL,         * LOCAL LOCK                        *
               RELATED=(GETLLCK,APESFLLK) * R13 HAS RETURN CODE
         MODESET EXTKEY=DATAMGT    RESUME STANDARD KEY
*       RFY                                                     02S0701
*         R15F RSTD;                /* WILL HOLD SETLOCK RETURN CODE */
*       APESCODE=CERRN99;           /* RESET ERROR CODE              */
         MVI   APESCODE,X'0E'                                   02S0702
*       R15F=R13F;                  /* HOLD RETURN CODE              */
         LR    R15F,R13F                                        02S0703
*       LM(R11F,R13F,DSUPVSVE);     /* RESTORE DESTROYED REGISTERS   */
         LM    R11F,R13F,DSUPVSVE                               02S0704
*       IF R15F^=0 THEN             /* IF SETLOCK FAILED,            */
         LTR   R15F,R15F                                        02S0705
         BZ    @RF00705                                         02S0705
*         DO;                       /* THEN LOG AND TERMINATE.       */
*           APESCODE=CERRN10;       /* SET ERROR CODE                */
         MVI   APESCODE,X'0A'                                   02S0707
*           DO;                     /* FORCE ABEND TO LOG ERROR &
*                                      PASS CONTROL TO THE (E)STAE OR
*                                      FRR EXIT ROUTINE.             */
*             DO;                   /* ABEND(APCTABND)               */
*               RESPECIFY                                       02S0710
*                (GPR01F) RESTRICTED;                           02S0710
*               GPR01F=APCTABND;    /* COMP CODE IN REG 1            */
         L     GPR01F,APCTABND(,APCTPTR)                        02S0711
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                               02S0712
*               RESPECIFY                                       02S0713
*                (GPR01F) UNRESTRICTED;                         02S0713
*             END;                  /* ABEND(APCTABND) FORCE ABEND   */
*             GEN NOREFS NOSETS NOSEQFLOW FLOWS(APCVZUKA);      02S0715
*                                                  /* NO CODE
*           END;                    /* ABEND ISSUED                  */
*         END;                      /* ERROR PROCESSED               */
*       RFY                                                     02S0718
*         R15F UNRSTD;              /* FINISHED WITH RETURN CODE     */
@RF00705 DS    0H                                               02S0719
*       APESFLLK=BOFF;              /* SHOW LOCK NOT OWNED           */
         NI    APESFLLK,B'11011111'                             02S0719
*     END;                          /* LOCK RELEASED                 */
*                                                               02S0720
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESSING COMPLETE. RETURN TO THE CALLER.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0721
*   RETURN;                         /* RETURN TO THE CALLER          */
@EL00004 DS    0H                                               02S0721
@EF00004 DS    0H                                               02S0721
@ER00004 LM    @14,@12,12(@13)                                  02S0721
         BR    @14                                              02S0721
*   END FREELLCK;                   /* END OF SUBROUTINE             */
         B     @EL00004                                         02S0722
@PB00004 DS    0H                                               02S0723
         EJECT
*                                   /* IGTXEPLG                      */
*                                                               01S0723
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0723
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01F FIXED(31) REG(1),                                  01S0723
*     GPR01P PTR(31) REG(1);                                    01S0723
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0724
*     I031F FIXED(31) BASED,                                    01S0724
*     I031P PTR(31) BASED,                                      01S0724
*     I015F FIXED(15) BASED,                                    01S0724
*     I015P PTR(15) BASED,                                      01S0724
*     I008P PTR(8) BASED,                                       01S0724
*     I001C CHAR(1) BASED;                                      01S0724
*                                                               01S0725
*   /*****************************************************************/
*   /*                                                               */
*   /* MODULE PATCH AREA                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0725
*   DCL                                                         01S0725
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0725
*   GENERATE DATA DEFS(APPATCH);                                01S0726
*                                                               01S0727
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0727
*   DCL                                                         01S0727
*     R0F FIXED(31) REG(0),                                     01S0727
*     R0P PTR(24) REG(0),                                       01S0727
*     R0RSTD PTR(31) REG(0),                                    01S0727
*     R1F FIXED(31) REG(1),                                     01S0727
*     R1P PTR(24) REG(1),                                       01S0727
*     R1RSTD PTR(31) REG(1),                                    01S0727
*     R2F FIXED(31) REG(2),                                     01S0727
*     R2P PTR(24) REG(2),                                       01S0727
*     R2RSTD PTR(31) REG(2),                                    01S0727
*     R3F FIXED(31) REG(3),                                     01S0727
*     R3P PTR(24) REG(3),                                       01S0727
*     R3RSTD PTR(31) REG(3),                                    01S0727
*     R4F FIXED(31) REG(4),                                     01S0727
*     R4P PTR(24) REG(4),                                       01S0727
*     R4RSTD PTR(31) REG(4),                                    01S0727
*     R5F FIXED(31) REG(5),                                     01S0727
*     R5P PTR(24) REG(5),                                       01S0727
*     R5RSTD PTR(31) REG(5),                                    01S0727
*     R6F FIXED(31) REG(6),                                     01S0727
*     R6P PTR(24) REG(6),                                       01S0727
*     R6RSTD PTR(31) REG(6),                                    01S0727
*     R7F FIXED(31) REG(7),                                     01S0727
*     R7P PTR(24) REG(7),                                       01S0727
*     R7RSTD PTR(31) REG(7),                                    01S0727
*     R8F FIXED(31) REG(8),                                     01S0727
*     R8P PTR(24) REG(8),                                       01S0727
*     R8RSTD PTR(31) REG(8),                                    01S0727
*     R9F FIXED(31) REG(9),                                     01S0727
*     R9P PTR(24) REG(9),                                       01S0727
*     R9RSTD PTR(31) REG(9),                                    01S0727
*     R10F FIXED(31) REG(10),                                   01S0727
*     R10P PTR(24) REG(10),                                     01S0727
*     R10RSTD PTR(31) REG(10),                                  01S0727
*     R11F FIXED(31) REG(11),                                   01S0727
*     R11P PTR(24) REG(11),                                     01S0727
*     R11RSTD PTR(31) REG(11),                                  01S0727
*     R12F FIXED(31) REG(12),                                   01S0727
*     R12P PTR(24) REG(12),                                     01S0727
*     R12RSTD PTR(31) REG(12),                                  01S0727
*     R13F FIXED(31) REG(13),                                   01S0727
*     R13P PTR(24) REG(13),                                     01S0727
*     R13RSTD PTR(31) REG(13),                                  01S0727
*     R14F FIXED(31) REG(14),                                   01S0727
*     R14P PTR(24) REG(14),                                     01S0727
*     R14RSTD PTR(31) REG(14),                                  01S0727
*     R15F FIXED(31) REG(15),                                   01S0727
*     R15P PTR(24) REG(15),                                     01S0727
*     R15RSTD PTR(31) REG(15),                                  01S0727
*                                                               01S0727
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0727
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0727
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0727
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0727
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0727
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0727
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0727
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0727
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0727
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0727
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0727
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0727
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0727
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0728
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0728
*   DCL                             /* LOCAL REGISTERS               */
*     RDEBPTR PTR(24) REG(02),      /* DEB POINTER SET ON INPUT      */
*     RAPRLPTR PTR(24) REG(08),     /* HOLD INPUT APRL ADDRESS       */
*     RAPDXPTR PTR(24) REG(11),     /* APDX POINTER SET ON INPUT     */
*     RLV FIXED(31) REG(03),        /* HOLD GETMAIN/FREEMAIN LENGTH  */
*     RADDR PTR(24) REG(04),        /* HOLD GETMAIN/FREEMAIN ADDRESS */
*     RSP FIXED(31) REG(05),        /* HOLD GETMAIN/FREEMAIN SUBPOOL */
*     RERRCODE FIXED(31) REG(03);   /* HOLDS REGISTER 15 RETURN CODE */
*   END IGTKDA                      /* END OF MODULE                 */
*                                                               01S0729
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOCM)                                       */
*/*%INCLUDE SYSLIB  (IHASUBIT)                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAVSL  )                                       */
*/*%INCLUDE SYSLIB  (IGTXAPRL)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCC)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCM)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPDX)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPGF)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPIO)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPMV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSC)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSM)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPXL)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPES)                                       */
*/*%INCLUDE SYSUT5  (BSAWA   )                                       */
*/*%INCLUDE SYSUT5  (INITSTAE)                                       */
*/*%INCLUDE SYSUT5  (SAVEAPRL)                                       */
*/*%INCLUDE SYSUT5  (DEBCHK  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (DOSTAE  )                                       */
*/*%INCLUDE SYSUT5  (FNDAPIO )                                       */
*/*%INCLUDE SYSUT5  (IOACTV  )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (FREEAPIO)                                       */
*/*%INCLUDE SYSUT5  (PGFREE  )                                       */
*/*%INCLUDE SYSUT5  (FRESTOR )                                       */
*/*%INCLUDE SYSUT5  (UPDAPRL )                                       */
*/*%INCLUDE SYSUT5  (FREESTAE)                                       */
*/*%INCLUDE SYSUT5  (SUBRTNS )                                       */
*/*%INCLUDE SYSUT5  (SETAPRL )                                       */
*/*%INCLUDE SYSUT5  (GETLLCK )                                       */
*/*%INCLUDE SYSUT5  (FREELLCK)                                       */
*                                                               01S0729
*       ;                                                       01S0729
@EL00001 DS    0H                                               01S0729
@EF00001 DS    0H                                               01S0729
@ER00001 BR    @14                                              01S0729
@DATA    DS    0H
@DATD    DSECT
         DS    0F
IGTKDA   CSECT
         DS    0F
@CF04591 DC    F'4096'
@CF04637 DC    XL4'0000FFF8'
@CF04684 DC    XL4'80000000'
@CF04688 DC    XL4'20000000'
@DATD    DSECT
         DS    0D
DAPRLPTR DS    A
DDEBPTR  DS    A
DAPDXPTR DS    A
DAPIOPTR DS    A
APES     DS    CL648
         ORG   APES
APESID   DS    CL4
APESUSER DS    FL4
APESADDR DS    AL4
APESAPMV DS    AL4
APESFLGS DS    BL2
         ORG   APESFLGS
APESFLG0 DS    BL1
         ORG   APESFLG0
APESFDMP DS    BL1
APESFREC EQU   APESFLG0+0
APESFSDP EQU   APESFLG0+0
@NM00210 EQU   APESFLG0+0
APESFRTY EQU   APESFLG0+0
APESFEXR EQU   APESFLG0+0
@NM00211 EQU   APESFLG0+0
         ORG   APESFLGS+1
APESFLG1 DS    BL1
         ORG   APESFLG1
APESFFRR DS    BL1
APESFPRV EQU   APESFLG1+0
APESFLLK EQU   APESFLG1+0
APESFXLK EQU   APESFLG1+0
APESFGM  EQU   APESFLG1+0
APESFSDI EQU   APESFLG1+0
APESFSTE EQU   APESFLG1+0
@NM00212 EQU   APESFLG1+0
         ORG   APES+18
APESSUID DS    BL1
         ORG   APESSUID
APESSU33 DS    BL1
@NM00213 EQU   APESSUID+0
         ORG   APES+19
APESCODE DS    FL1
APESCOD1 DS    FL1
APESCNTR DS    FL1
APESMXCD DS    FL1
@NM00214 DS    FL1
@NM00215 DS    AL4
@NM00216 DS    AL4
@NM00217 DS    AL4
APESEXRA DS    AL4
APESR14S DS    AL4
APESREGP DS    AL4
APESREGZ DS    CL64
APESMOD  DS    CL8
APESPROC DS    CL8
APESFRR  DS    CL8
APESSDWA DS    CL512
         ORG   APES+648
DAPIO    DS    CL424
DAPGF    DS    CL16
DAPRL    DS    CL80
DSUPVSVE DS    CL64
DUSERKEY DS    CL1
         DS    CL3
DRETRY   DS    10A
IGTKDA   CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC04646 DC    C'IGTKDA  '
@CC04647 DC    C'        '
@CC04680 DC    C'IGTKBC  '
@CC03160 DC    C'APRL'
@CC04308 DC    C'APIO'
@CC04469 DC    C'APES'
@CB02617 DC    X'00'
         DS    CL3
CMBRXZZZ DS    CL112
         ORG   CMBRXZZZ
@NM00220 DS    CL8
         ORG   @NM00220
@NM00221 DC    H'32'
@NM00222 DC    H'14'
@NM00223 DC    AL1(0)
@NM00224 DC    AL1(8)
@NM00225 DC    H'3'
         ORG   CMBRXZZZ+8
@NM00226 DS    CL8
         ORG   @NM00226
@NM00227 DC    H'21'
@NM00228 DC    H'52'
@NM00229 DC    AL1(0)
@NM00230 DC    AL1(4)
@NM00231 DC    H'4'
         ORG   CMBRXZZZ+16
@NM00232 DS    CL8
         ORG   @NM00232
@NM00233 DC    H'33'
@NM00234 DC    H'53'
@NM00235 DC    AL1(0)
@NM00236 DC    AL1(8)
@NM00237 DC    H'5'
         ORG   CMBRXZZZ+24
@NM00238 DS    CL8
         ORG   @NM00238
@NM00239 DC    H'33'
@NM00240 DC    H'54'
@NM00241 DC    AL1(0)
@NM00242 DC    AL1(8)
@NM00243 DC    H'6'
         ORG   CMBRXZZZ+32
@NM00244 DS    CL8
         ORG   @NM00244
@NM00245 DC    H'33'
@NM00246 DC    H'58'
@NM00247 DC    AL1(0)
@NM00248 DC    AL1(8)
@NM00249 DC    H'7'
         ORG   CMBRXZZZ+40
@NM00250 DS    CL8
         ORG   @NM00250
@NM00251 DC    H'35'
@NM00252 DC    H'52'
@NM00253 DC    AL1(0)
@NM00254 DC    AL1(4)
@NM00255 DC    H'8'
         ORG   CMBRXZZZ+48
@NM00256 DS    CL8
         ORG   @NM00256
@NM00257 DC    H'34'
@NM00258 DC    H'0'
@NM00259 DC    AL1(0)
@NM00260 DC    AL1(8)
@NM00261 DC    H'9'
         ORG   CMBRXZZZ+56
@NM00262 DS    CL8
         ORG   @NM00262
@NM00263 DC    H'21'
@NM00264 DC    H'45'
@NM00265 DC    AL1(0)
@NM00266 DC    AL1(4)
@NM00267 DC    H'10'
         ORG   CMBRXZZZ+64
@NM00268 DS    CL8
         ORG   @NM00268
@NM00269 DC    H'33'
@NM00270 DC    H'56'
@NM00271 DC    AL1(0)
@NM00272 DC    AL1(8)
@NM00273 DC    H'11'
         ORG   CMBRXZZZ+72
@NM00274 DS    CL8
         ORG   @NM00274
@NM00275 DC    H'33'
@NM00276 DC    H'56'
@NM00277 DC    AL1(0)
@NM00278 DC    AL1(8)
@NM00279 DC    H'12'
         ORG   CMBRXZZZ+80
@NM00280 DS    CL8
         ORG   @NM00280
@NM00281 DC    H'33'
@NM00282 DC    H'56'
@NM00283 DC    AL1(0)
@NM00284 DC    AL1(8)
@NM00285 DC    H'13'
         ORG   CMBRXZZZ+88
@NM00286 DS    CL8
         ORG   @NM00286
@NM00287 DC    H'33'
@NM00288 DC    H'56'
@NM00289 DC    AL1(0)
@NM00290 DC    AL1(8)
@NM00291 DC    H'14'
         ORG   CMBRXZZZ+96
@NM00292 DS    CL8
         ORG   @NM00292
@NM00293 DC    H'33'
@NM00294 DC    H'59'
@NM00295 DC    AL1(0)
@NM00296 DC    AL1(8)
@NM00297 DC    H'15'
         ORG   CMBRXZZZ+104
@NM00298 DS    CL8
         ORG   @NM00298
@NM00299 DC    H'36'
@NM00300 DC    H'0'
@NM00301 DC    AL1(0)
@NM00302 DC    AL1(8)
@NM00303 DC    H'16'
         ORG   CMBRXZZZ+112
IGTKDA   CSECT
*                                   /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGTKDA   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
APCODE   EQU   @07
FRRSPTR  EQU   @00
FRREPTR  EQU   @00
DEBPTR   EQU   @00
DEBDAPTR EQU   @00
DEBEXPTR EQU   @00
DEBSBPTR EQU   @00
IOSBPTR  EQU   @00
SRBPTR   EQU   @00
SDWAPTR  EQU   @00
VSLPTR   EQU   @00
APCTPTR  EQU   @12
APSVPTR  EQU   @13
RDEBPTR  EQU   @02
RAPDXPTR EQU   @11
RAPRLPTR EQU   @08
R1P      EQU   @01
RSP      EQU   @05
RLV      EQU   @03
RADDR    EQU   @04
R15F     EQU   @15
R0F      EQU   @00
APDATA   EQU   @06
R0P      EQU   @00
R1F      EQU   @01
R14P     EQU   @14
R15P     EQU   @15
R14F     EQU   @14
R10F     EQU   @10
R11F     EQU   @11
R10P     EQU   @10
R11P     EQU   @11
GPR01F   EQU   @01
R0RSTD   EQU   @00
R1RSTD   EQU   @01
R2RSTD   EQU   @02
R3RSTD   EQU   @03
R4RSTD   EQU   @04
R5RSTD   EQU   @05
R8RSTD   EQU   @08
R9RSTD   EQU   @09
R10RSTD  EQU   @10
R11RSTD  EQU   @11
R14RSTD  EQU   @14
R15RSTD  EQU   @15
R4P      EQU   @04
R2P      EQU   @02
RERRCODE EQU   @03
GPR01P   EQU   @01
R13F     EQU   @13
R12F     EQU   @12
APACBPTR EQU   @09
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCPPTR  EQU   @10
APCQPTR  EQU   @09
APCWPTR  EQU   @08
APDEBPTR EQU   @08
APDSPTR  EQU   @11
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APINPTR  EQU   @01
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APRLPTR  EQU   @08
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUBPTR  EQU   @10
APUTPTR  EQU   @11
APXLPTR  EQU   @11
R12P     EQU   @12
R12RSTD  EQU   @12
R13P     EQU   @13
R13RSTD  EQU   @13
R2F      EQU   @02
R3F      EQU   @03
R3P      EQU   @03
R4F      EQU   @04
R5F      EQU   @05
R5P      EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R9F      EQU   @09
R9P      EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIXAVL EQU   CVTMAP+124
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTDEBVR EQU   CVTXTNT2+8
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IEAVPSI  EQU   0
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
PVTPCBQS EQU   PVT+1852
IOCOM    EQU   0
SUBITS   EQU   0
SUBYTE1  EQU   SUBITS
SUBYTE2  EQU   SUBITS+1
SUBYTE3  EQU   SUBITS+2
SUBYTE4  EQU   SUBITS+3
SUBYTE5  EQU   SUBITS+4
SUBYTE6  EQU   SUBITS+5
SUBYTE7  EQU   SUBITS+6
SUBYTE8  EQU   SUBITS+7
SUBYTE9  EQU   SUBITS+8
SUBYTE10 EQU   SUBITS+9
SUBYTE11 EQU   SUBITS+10
SUBYTE12 EQU   SUBITS+11
SUBYTE13 EQU   SUBITS+12
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00044 EQU   RBSECT+10
@NM00045 EQU   @NM00044
RBTRSVRB EQU   @NM00045
@NM00047 EQU   @NM00044+1
RBETXR   EQU   @NM00047
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00054 EQU   RBSECT+28
@NM00055 EQU   @NM00054
IRBEND   EQU   RBSECT+96
@NM00058 EQU   RBSECT+96
RBRSV138 EQU   @NM00058+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBTCBB  EQU   DEBTCBAD+1
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00071 EQU   IOSB+20
IOSCSW   EQU   @NM00071+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSDIE   EQU   IOSB+68
IOSDIEFG EQU   IOSDIE
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLC   EQU   SRB+12
SDWA     EQU   0
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWASDA0 EQU   SDWASDAT
SDWASDA1 EQU   SDWASDAT+1
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
VSL      EQU   0
VSLSTRT  EQU   VSL
VSLFLAG1 EQU   VSLSTRT
VSLFREE  EQU   VSLFLAG1
VSLEND   EQU   VSL+4
VSLFLAG2 EQU   VSLEND
APRL     EQU   0
APRLID   EQU   APRL
APRLUSER EQU   APRL+4
APRLECB  EQU   APRL+8
APRLECBC EQU   APRLECB
APRLFDBK EQU   APRL+12
APRLRCT  EQU   APRLFDBK+1
APRLRCC  EQU   APRLFDBK+2
APRLRCN  EQU   APRLFDBK+3
APRLMSGN EQU   APRL+16
APRLVALN EQU   APRL+18
APRLAPIO EQU   APRL+32
APRLOPTS EQU   APRL+40
APRLOPT0 EQU   APRLOPTS
APRLXIO  EQU   APRLOPT0
APRLNRC  EQU   APRLOPT0
APRLOPT1 EQU   APRLOPTS+1
APRLOPT2 EQU   APRLOPTS+2
APRLOPT3 EQU   APRLOPTS+3
APRLOPTZ EQU   APRL+56
APRLOPT4 EQU   APRLOPTZ
APRLOPT5 EQU   APRLOPTZ+1
APRLOPT6 EQU   APRLOPTZ+2
APRLOPT7 EQU   APRLOPTZ+3
APRLEXTS EQU   APRL+68
APCT     EQU   0
APCTENQM EQU   APCT+12
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTERRS EQU   APCT+876
@NM00151 EQU   APCT+936
APCTSTAT EQU   @NM00151
APCTPRSW EQU   @NM00151+1
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTABND EQU   APCT+1072
APCTZ@@1 EQU   APCT+1120
APCVZUAC EQU   0
APCVZUAF EQU   0
APCVZUAG EQU   0
APCVZUKA EQU   0
APCVZKBC EQU   0
APDX     EQU   0
APDX252A EQU   APDX+28
APDXDXL  EQU   APDX+32
APDXIOCT EQU   APDX+128
APDXSWS  EQU   APDX+130
APDXSW0  EQU   APDXSWS
APDXSOPN EQU   APDXSW0
APDXSW1  EQU   APDXSWS+1
APDXAPIO EQU   APDX+136
APGF     EQU   0
APGFSW   EQU   APGF
APGFSINA EQU   APGFSW
APGFSINL EQU   APGFSW
APGFSLCK EQU   APGFSW
APGFSTCB EQU   APGFSW
APGFSFRE EQU   APGFSW
APGFXSP  EQU   APGF+2
APGFXKEY EQU   APGF+3
APGFXADR EQU   APGF+4
APGFXLN  EQU   APGF+8
APGFTCB  EQU   APGF+12
APIO     EQU   0
APIOIOCB EQU   APIO
APIOID   EQU   APIO+192
APIODEB  EQU   APIO+216
APIOPGFX EQU   APIO+228
APIOPGFL EQU   APIO+232
APIOFLGS EQU   APIO+248
APIOFLGA EQU   APIOFLGS
APIOFLG0 EQU   APIOFLGA
APIOFXED EQU   APIOFLG0
APIOFLG2 EQU   APIOFLGA+2
APIOFLG3 EQU   APIOFLGA+3
APIORET  EQU   APIOFLG3
APIOFLGB EQU   APIOFLGS+4
APIOFLG7 EQU   APIOFLGB+3
APIOACTV EQU   APIOFLG7
APIOINDX EQU   APIO+288
APIOSAVE EQU   APIOINDX
APIOASCB EQU   APIO+348
APIOTERM EQU   APIO+352
APIOTR   EQU   APIO+360
APIOGMAD EQU   APIO+372
APIOGMSZ EQU   APIO+376
APIONBR  EQU   APIO+384
APMV     EQU   0
APMVHDR  EQU   APMV
APMVHKWD EQU   APMVHDR+4
APMVHMSG EQU   APMVHDR+8
APMVKWD  EQU   0
APMVMSG  EQU   0
APSC     EQU   0
APSCCRSZ EQU   APSC+2
APSM     EQU   0
APSMSIZE EQU   APSM+4
APSV     EQU   0
APSVPREV EQU   APSV+4
APSVREGS EQU   APSV+12
APXL     EQU   0
APESREGS EQU   0
APESREGF EQU   APESREGS+60
APESRTRY EQU   APESREGF
APESMV   EQU   0
I031P    EQU   0
APCVZDAL EQU   0
APCVZDAP EQU   0
APCVZDBK EQU   0
APCVZDDA EQU   0
APCVZDDQ EQU   0
APCVZDEQ EQU   0
APCVZDID EQU   0
APCVZDIO EQU   0
APCVZDIP EQU   0
APCVZDMD EQU   0
APCVZDMM EQU   0
APCVZDQR EQU   0
APCVZDRI EQU   0
APCVZDUA EQU   0
APCVZDUL EQU   0
APCVZDWI EQU   0
APCVZDWT EQU   0
APCVZDX1 EQU   0
APCVZDX2 EQU   0
APCVZDX3 EQU   0
APCVZDX4 EQU   0
APCVZD10 EQU   0
APCVZD20 EQU   0
APCVZD4E EQU   0
APCVZD40 EQU   0
APCVZD41 EQU   0
APCVZD42 EQU   0
APCVZD43 EQU   0
APCVZD44 EQU   0
APCVZD45 EQU   0
APCVZD46 EQU   0
APCVZD47 EQU   0
APCVZD48 EQU   0
APCVZD49 EQU   0
APCVZD60 EQU   0
APCVZD80 EQU   0
APCVZD81 EQU   0
APCVZD82 EQU   0
APCVZD83 EQU   0
APCVZJAA EQU   0
APCVZJAD EQU   0
APCVZJAG EQU   0
APCVZJAJ EQU   0
APCVZJAM EQU   0
APCVZJAP EQU   0
APCVZJAX EQU   0
APCVZJAY EQU   0
APCVZJBA EQU   0
APCVZJBD EQU   0
APCVZJBG EQU   0
APCVZJBJ EQU   0
APCVZJBM EQU   0
APCVZJDA EQU   0
APCVZJDD EQU   0
APCVZJDG EQU   0
APCVZJDJ EQU   0
APCVZJDM EQU   0
APCVZJHC EQU   0
APCVZJHE EQU   0
APCVZJHF EQU   0
APCVZJHO EQU   0
APCVZJHQ EQU   0
APCVZJHR EQU   0
APCVZJHT EQU   0
APCVZJHW EQU   0
APCVZJH0 EQU   0
APCVZJH6 EQU   0
APCVZJI0 EQU   0
APCVZJI3 EQU   0
APCVZJJ0 EQU   0
APCVZKAA EQU   0
APCVZKBA EQU   0
APCVZKBB EQU   0
APCVZKBD EQU   0
APCVZKBE EQU   0
APCVZKBF EQU   0
APCVZKCA EQU   0
APCVZKDA EQU   0
APCVZKGA EQU   0
APCVZKGB EQU   0
APCVZKGC EQU   0
APCVZKGD EQU   0
APCVZLCA EQU   0
APCVZLCB EQU   0
APCVZMBA EQU   0
APCVZMBD EQU   0
APCVZMBG EQU   0
APCVZMBH EQU   0
APCVZMBK EQU   0
APCVZMBM EQU   0
APCVZMIB EQU   0
APCVZMIC EQU   0
APCVZMIF EQU   0
APCVZMJB EQU   0
APCVZMJC EQU   0
APCVZMJH EQU   0
APCVZMJI EQU   0
APCVZMMA EQU   0
APCVZUAA EQU   0
APCVZUAB EQU   0
APCVZUAD EQU   0
APCVZUAE EQU   0
APCVZUBB EQU   0
APCVZUFA EQU   0
APCVZUHA EQU   0
APCVZUHB EQU   0
APCVZUJA EQU   0
APCV1CMD EQU   0
APCV1JAA EQU   0
APCV1JBJ EQU   0
APCV1JHC EQU   0
APCV1JHL EQU   0
APCV1JHT EQU   0
APCV1MAB EQU   0
APCV1MBD EQU   0
APCV2JHC EQU   0
APCV2JHL EQU   0
APCV2MBD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I256C    EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTVPSIB EQU   CVTS01+456
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTIHASU EQU   CVTS01+696
PVTPTR   EQU   CVTPVTP
IOCOMPTR EQU   CVTIXAVL
ASCBPTR  EQU   PSAAOLD
TCBPTR   EQU   PSATOLD
RBSECPTR EQU   TCBRBP
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
@NM00060 EQU   RBOPSW
@NM00062 EQU   @NM00060+1
@NM00063 EQU   @NM00062
PSWUKEY  EQU   @NM00063
@NM00064 EQU   @NM00062
PSWPP    EQU   @NM00064
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
APCTZ    EQU   APCTZ@@@
APCTZUAA EQU   APCTZ
APCTZUAB EQU   APCTZ+4
APCTZUAC EQU   APCTZ+8
APCTZUAD EQU   APCTZ+12
APCTZUAE EQU   APCTZ+16
APCTZUBB EQU   APCTZ+24
APCTZD10 EQU   APCTZ+28
APCTZD20 EQU   APCTZ+32
APCTZD40 EQU   APCTZ+36
APCTZD41 EQU   APCTZ+40
APCTZD42 EQU   APCTZ+44
APCTZD43 EQU   APCTZ+48
APCTZD44 EQU   APCTZ+52
APCTZD45 EQU   APCTZ+56
APCTZD46 EQU   APCTZ+60
APCTZD47 EQU   APCTZ+64
APCTZD48 EQU   APCTZ+68
APCTZD49 EQU   APCTZ+72
APCTZD60 EQU   APCTZ+76
APCTZD80 EQU   APCTZ+80
APCTZD4E EQU   APCTZ+84
APCTZMBA EQU   APCTZ+88
APCTZMBD EQU   APCTZ+92
APCTZMBG EQU   APCTZ+96
APCTZMBR EQU   APCTZ+100
APCTZDX1 EQU   APCTZ+104
APCTZDX2 EQU   APCTZ+108
APCTZDX3 EQU   APCTZ+112
APCTZDX4 EQU   APCTZ+116
APCTZMBH EQU   APCTZ+120
APCTZMBK EQU   APCTZ+124
APCTZMBM EQU   APCTZ+128
APCTZMJB EQU   APCTZ+132
APCTZMJC EQU   APCTZ+136
APCTZMJH EQU   APCTZ+140
APCTZMMA EQU   APCTZ+144
APCTZDMD EQU   APCTZ+148
APCTZD81 EQU   APCTZ+152
APCTZDID EQU   APCTZ+156
APCTZDRI EQU   APCTZ+160
APCTZMJI EQU   APCTZ+164
APCTZDWT EQU   APCTZ+168
APCTZDMM EQU   APCTZ+172
APCTZDAL EQU   APCTZ+176
APCTZDBK EQU   APCTZ+180
APCTZDIP EQU   APCTZ+184
APCTZDDA EQU   APCTZ+188
APCTZDUL EQU   APCTZ+192
APCTZDEQ EQU   APCTZ+196
APCTZDDQ EQU   APCTZ+200
APCTZDUA EQU   APCTZ+204
APCTZUAF EQU   APCTZ+208
APCTZUAG EQU   APCTZ+212
APCTZDIO EQU   APCTZ+216
APCTZUHA EQU   APCTZ+220
APCTZUHB EQU   APCTZ+224
APCTZJAA EQU   APCTZ+232
APCTZJAD EQU   APCTZ+236
APCTZJAG EQU   APCTZ+240
APCTZJAJ EQU   APCTZ+244
APCTZJAM EQU   APCTZ+248
APCTZJAP EQU   APCTZ+252
APCTZJAY EQU   APCTZ+256
APCTZUFA EQU   APCTZ+260
APCTZUJA EQU   APCTZ+264
APCTZDAP EQU   APCTZ+268
APCTZKAA EQU   APCTZ+272
APCTZD82 EQU   APCTZ+276
APCTZMIB EQU   APCTZ+280
APCTZMIC EQU   APCTZ+284
APCTZD83 EQU   APCTZ+288
APCTZMIF EQU   APCTZ+296
APCTZJH0 EQU   APCTZ+300
APCTZJI0 EQU   APCTZ+304
APCTZJI3 EQU   APCTZ+308
APCTZJJ0 EQU   APCTZ+312
APCTZJBA EQU   APCTZ+316
APCTZJBD EQU   APCTZ+320
APCTZJBG EQU   APCTZ+324
APCTZJBJ EQU   APCTZ+328
APCTZJBM EQU   APCTZ+332
APCTZKCA EQU   APCTZ+340
APCTZKDA EQU   APCTZ+344
APCTZJDA EQU   APCTZ+356
APCTZJDJ EQU   APCTZ+360
APCTZJH6 EQU   APCTZ+364
APCTZJHO EQU   APCTZ+368
APCTZJHF EQU   APCTZ+372
APCTZJHE EQU   APCTZ+376
APCTZDQR EQU   APCTZ+380
APCTZJHR EQU   APCTZ+384
APCTZJHT EQU   APCTZ+388
APCTZJHW EQU   APCTZ+392
APCTZ1   EQU   APCTZ@@1
APCTZKBA EQU   APCTZ1
APCTZKBC EQU   APCTZ1+4
APCTZKBB EQU   APCTZ1+8
APCTZJHC EQU   APCTZ1+20
APCTZJHQ EQU   APCTZ1+24
APCTZKBD EQU   APCTZ1+28
APCTZKBE EQU   APCTZ1+40
APCTZUKA EQU   APCTZ1+56
APCTZKBF EQU   APCTZ1+60
APCTZJDD EQU   APCTZ1+64
APCTZJDG EQU   APCTZ1+68
APCTZJDM EQU   APCTZ1+72
APCTZLCA EQU   APCTZ1+76
APCTZLCB EQU   APCTZ1+80
APCTZDWI EQU   APCTZ1+84
APCTZJAX EQU   APCTZ1+88
APCTZKGA EQU   APCTZ1+92
APCTZKGB EQU   APCTZ1+96
APCTZKGC EQU   APCTZ1+100
APCTZKGD EQU   APCTZ1+104
APCTU    EQU   APCTU@@@
APCT1MAB EQU   APCTU
APCT1MBD EQU   APCTU+4
APCT2MBD EQU   APCTU+8
APCT1CMD EQU   APCTU+12
APCT1JAA EQU   APCTU+20
APCT1JHC EQU   APCTU+24
APCT2JHC EQU   APCTU+28
APCT1JHT EQU   APCTU+32
APCT1JHL EQU   APCTU+36
APCT2JHL EQU   APCTU+40
APCT1JBJ EQU   APCTU+44
@NM00200 EQU   APIOIOCB
APIOIOSB EQU   @NM00200
APIOSRB  EQU   @NM00200+128
@NM00201 EQU   APIOIOCB
@NM00209 EQU   APXL
APXLADDR EQU   @NM00209
APXLADDV EQU   APXLADDR
APXLADDL EQU   APXLADDR+4
CMBRX    EQU   CMBRXZZZ
CMBRMT   EQU   CMBRX
CMBRKT   EQU   CMBRX+2
CMBXRCT  EQU   CMBRX+5
CMBXRCN  EQU   CMBRX+6
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00304 EQU   CMBRX+4
APXLADLB EQU   APXLADDL+1
APXLADL0 EQU   APXLADDL
APXLADVB EQU   APXLADDV+1
APXLADV0 EQU   APXLADDV
APIOIOB  EQU   @NM00201+160
@NM00202 EQU   @NM00201
@NM00183 EQU   APCTU+48
APCT1MBM EQU   APCTU+16
@NM00182 EQU   APCTZ1+108
@NM00181 EQU   APCTZ1+52
@NM00180 EQU   APCTZ1+48
@NM00179 EQU   APCTZ1+44
@NM00178 EQU   APCTZ1+36
@NM00177 EQU   APCTZ1+32
@NM00176 EQU   APCTZ1+16
@NM00175 EQU   APCTZ1+12
@NM00174 EQU   APCTZ+396
@NM00173 EQU   APCTZ+352
@NM00172 EQU   APCTZ+348
@NM00171 EQU   APCTZ+336
@NM00170 EQU   APCTZ+292
APCTZJFA EQU   APCTZ+228
@NM00169 EQU   APCTZ+20
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00076 EQU   IOSPCISC+4
@NM00075 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00074 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
@NM00065 EQU   @NM00064
@NM00061 EQU   @NM00060
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00059 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
@NM00219 EQU   APESMV+6
@NM00218 EQU   APESMV+4
APESMVKW EQU   APESMV+2
APESMVMS EQU   APESMV
APESREGE EQU   APESREGS+56
APESREGD EQU   APESREGS+52
APESREGC EQU   APESREGS+48
APESREGB EQU   APESREGS+44
APESREGA EQU   APESREGS+40
APESREG9 EQU   APESREGS+36
APESREG8 EQU   APESREGS+32
APESREG7 EQU   APESREGS+28
APESREG6 EQU   APESREGS+24
APESREG5 EQU   APESREGS+20
APESREG4 EQU   APESREGS+16
APESREG3 EQU   APESREGS+12
APESREG2 EQU   APESREGS+8
APESREG1 EQU   APESREGS+4
APESREG0 EQU   APESREGS
@NM00208 EQU   APXL+12
APXLLAST EQU   APXL+8
APXLUSER EQU   APXL+4
APXLID   EQU   APXL
APSVWORK EQU   APSV+80
@NM00207 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG0  EQU   APSVREGS+8
APSVRG15 EQU   APSVREGS+4
APSVRG14 EQU   APSVREGS
APSVNEXT EQU   APSV+8
APSVAPSC EQU   APSV
@NM00206 EQU   APSM+88
APSMSAVE EQU   APSM+24
@NM00205 EQU   APSM+24
APSMREGS EQU   APSM+20
APSMAPSV EQU   APSM+16
APSMPREV EQU   APSM+12
APSMNEXT EQU   APSM+8
APSMSIZ1 EQU   APSMSIZE+2
@NM00204 EQU   APSMSIZE+1
APSMSPID EQU   APSMSIZE
APSMID   EQU   APSM
@NM00203 EQU   APSC+8
APSCAPSC EQU   APSC+4
APSCMXSZ EQU   APSC
APMVMMSG EQU   APMVMSG+4
APMVMNBR EQU   APMVMSG
APMVKKWD EQU   APMVKWD+4
APMVKNBR EQU   APMVKWD
APMVHEM  EQU   APMVHDR
@NM00199 EQU   APIO+424
@NM00198 EQU   APIO+400
APIOTMEE EQU   APIO+396
APIOTMES EQU   APIO+392
APIOXTME EQU   APIO+388
APIONBRI EQU   APIONBR+2
APIONBRX EQU   APIONBR
APIOAPCT EQU   APIO+380
APIOGMS1 EQU   APIOGMSZ+2
@NM00197 EQU   APIOGMSZ+1
APIOGMSP EQU   APIOGMSZ
APIOCISZ EQU   APIO+370
APIOSIZE EQU   APIO+368
APIORB   EQU   APIOTR+4
APIOTCB  EQU   APIOTR
APIOECB  EQU   APIO+356
APIOTCSW EQU   APIOSAVE
APIOSNSE EQU   APIO+256
APIOFLG6 EQU   APIOFLGB+2
APIOFLG5 EQU   APIOFLGB+1
APIOFLG4 EQU   APIOFLGB
@NM00196 EQU   APIOFLG3
APIOPGFS EQU   APIOFLG3
APIOPGIP EQU   APIOFLG3
APIORSME EQU   APIOFLG3
APIONPST EQU   APIOFLG3
APIOIOCT EQU   APIOFLG3
@NM00195 EQU   APIOFLG2
APIODMPT EQU   APIOFLG2
APIODUMP EQU   APIOFLG2
APIOCSWT EQU   APIOFLG2
APIOVINX EQU   APIOFLG2
APIOVSNS EQU   APIOFLG2
APIOEXCL EQU   APIOFLG2
APIOFLG1 EQU   APIOFLGA+1
@NM00194 EQU   APIOFLG0
APIOSU50 EQU   APIOFLG0
APIOSYNC EQU   APIOFLG0
@NM00193 EQU   APIO+246
APIOOLAP EQU   APIO+244
APIOIOAP EQU   APIO+240
APIORGN  EQU   APIO+236
APIOAPCI EQU   APIO+224
APIOCCW  EQU   APIO+220
APIOAPXL EQU   APIO+212
APIOVCSW EQU   APIO+208
APIOAPUB EQU   APIO+204
APIOAPIO EQU   APIO+200
APIOUSER EQU   APIO+196
@NM00192 EQU   APGF+16
APGFINIT EQU   APGF+1
APGFSUNC EQU   APGFSW
APGFSPGE EQU   APGFSW
APGFSCLR EQU   APGFSW
@NM00191 EQU   APDX+136
@NM00190 EQU   APDX+133
@NM00189 EQU   APDX+132
@NM00188 EQU   APDXSW1
@NM00187 EQU   APDXSW0
APDXSSMF EQU   APDXSW0
APDXSEOT EQU   APDXSW0
@NM00186 EQU   APDX+52
@NM00185 EQU   APDX+50
APDXNDMP EQU   APDX+48
APDXDEB  EQU   APDX+44
APDXAPOC EQU   APDX+40
APDXDXA  EQU   APDX+36
APDXSIZE EQU   APDXDXL+2
@NM00184 EQU   APDXDXL
APDXAPMF EQU   APDX252A
APDX252L EQU   APDX+24
APDX000A EQU   APDX+20
APDX000L EQU   APDX+16
APDXAPDS EQU   APDX+12
APDXAPCT EQU   APDX+8
APDXUSER EQU   APDX+4
APDXID   EQU   APDX
@NM00168 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00167 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTAPVU EQU   APCT+1520
APCTABR  EQU   APCT+1116
APCTACTR EQU   APCT+1112
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00166 EQU   APCT+1080
@NM00165 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
@NM00164 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTCRTN EQU   APCT+1036
APCTAPCP EQU   APCT+1032
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
APCTAALP EQU   APCT+1020
APCTEALP EQU   APCT+1016
@NM00163 EQU   APCT+1012
@NM00162 EQU   APCT+1008
@NM00161 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00160 EQU   APCT+996
@NM00159 EQU   APCT+992
@NM00158 EQU   APCT+988
@NM00157 EQU   APCT+984
@NM00156 EQU   APCT+980
APCTECPW EQU   APCT+976
APCTEULD EQU   APCT+972
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00155 EQU   @NM00151+2
@NM00154 EQU   APCTPRSW
APCTAPST EQU   APCTPRSW
@NM00153 EQU   APCTPRSW
@NM00152 EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTHALT EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTSTRT EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
@NM00150 EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTASCB EQU   APCT+920
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00149 EQU   APCT+912
@NM00148 EQU   APCT+908
@NM00147 EQU   APCT+904
@NM00146 EQU   APCT+900
@NM00145 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTDSAP EQU   APCT+872
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTAPDS EQU   APCT+860
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00144 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00143 EQU   APCTSMAD+1
@NM00142 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00141 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00140 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
APCTSSID EQU   APCTENQM+4
@NM00139 EQU   APCTENQM
APCTSSVT EQU   APCT+8
APCTUSER EQU   APCT+4
APCTID   EQU   APCT
@NM00138 EQU   APRL+80
@NM00137 EQU   APRL+76
APRLEMSP EQU   APRL+72
APRLEMSL EQU   APRL+70
APRLACTV EQU   APRL+69
@NM00136 EQU   APRLEXTS
APRLEXTA EQU   APRLEXTS
@NM00135 EQU   APRL+60
APRLPGFX EQU   APRLOPT7
APRLDUMP EQU   APRLOPT7
@NM00134 EQU   APRLOPT7
@NM00133 EQU   APRLOPT6
@NM00132 EQU   APRLOPT5
@NM00131 EQU   APRLOPT4
@NM00130 EQU   APRL+52
@NM00129 EQU   APRL+48
APRLAPRL EQU   APRL+44
@NM00128 EQU   APRLOPT3
@NM00127 EQU   APRLOPT2
@NM00126 EQU   APRLOPT1
@NM00125 EQU   APRLOPT0
APRLASY  EQU   APRLOPT0
@NM00124 EQU   APRLOPT0
APRLCCW  EQU   APRL+36
APRLTCB  EQU   APRL+28
APRLACB  EQU   APRL+24
APRLURCP EQU   APRL+20
@NM00123 EQU   APRLFDBK
APRLECBA EQU   APRLECB+1
@NM00122 EQU   APRLECBC
APRLECBP EQU   APRLECBC
APRLECBW EQU   APRLECBC
VSLEND1A EQU   VSLEND+1
VSLEXTRS EQU   VSLFLAG2
VSLKEPRL EQU   VSLFLAG2
VSLPGOUT EQU   VSLFLAG2
VSLRSV3  EQU   VSLFLAG2
VSLERR   EQU   VSLFLAG2
VSLRAO   EQU   VSLFLAG2
VSLNULL  EQU   VSLFLAG2
VSLAST   EQU   VSLFLAG2
VSLSTRTA EQU   VSLSTRT+1
VSLRSV2  EQU   VSLFLAG1
VSLONG   EQU   VSLFLAG1
VSLRSV1  EQU   VSLFLAG1
VSLRLS   EQU   VSLFLAG1
VSLOAD   EQU   VSLFLAG1
VSLFIX   EQU   VSLFLAG1
VSLCONT  EQU   VSLFLAG1
@NM00121 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00120 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
SDWAERTM EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00119 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00118 EQU   SDWADDAT+3
@NM00117 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00116 EQU   SDWASDA1
SDWAERR  EQU   SDWASDA1
SDWAIO   EQU   SDWASDA1
SDWADM   EQU   SDWASDA0
SDWAQQS  EQU   SDWASDA0
SDWACBS  EQU   SDWASDA0
SDWAGTF  EQU   SDWASDA0
SDWASWA  EQU   SDWASDA0
SDWALSQA EQU   SDWASDA0
SDWASQA  EQU   SDWASDA0
SDWANUC  EQU   SDWASDA0
@NM00115 EQU   SDWADUMP+2
@NM00114 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00113 EQU   SDWADPFS
SDWAENSN EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
SDWASEQ# EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00112 EQU   SDWAACF3
@NM00111 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00110 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00109 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWARCDE EQU   SDWAPARQ
SDWALCPU EQU   SDWACPUA+2
@NM00108 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
SDWACPUI EQU   SDWA+239
@NM00107 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
SDWAERFL EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00106 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00105 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00104 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00103 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00102 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00101 EQU   SDWAINC2
@NM00100 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00099 EQU   SDWAILC2
@NM00098 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00097 EQU   SDWANXT2
@NM00096 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00095 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00094 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00093 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00092 EQU   SDWAINC1
@NM00091 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00090 EQU   SDWAILC1
@NM00089 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00088 EQU   SDWANXT1
@NM00087 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00086 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00085 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00084 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00083 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00082 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00081 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00080 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00079 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SDWAPARM EQU   SDWA
@NM00078 EQU   SRB+40
@NM00077 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBFLNK  EQU   SRB+4
SRBID    EQU   SRB
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00073 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00072 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSNOTRS EQU   IOSDIEFG
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00071
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00070 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00069 EQU   DEBACS08+12
@NM00068 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00067 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00066 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBNMSUB EQU   DEBTCBAD
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00058+8
PRBEND   EQU   @NM00058+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00058+6
RBRSV136 EQU   @NM00058+4
RBRSV135 EQU   @NM00058
@NM00057 EQU   RBSECT+32
@NM00056 EQU   @NM00054+1
RBSCF    EQU   @NM00055
RBPGMQ1  EQU   RBPGMQ+1
@NM00053 EQU   RBPGMQ
@NM00052 EQU   RBSECT+16
@NM00051 EQU   @NM00047
@NM00050 EQU   @NM00047
RBIQETP  EQU   @NM00047
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00047
@NM00049 EQU   @NM00047
@NM00048 EQU   @NM00047
RBPMSVRB EQU   @NM00045
RBATNXIT EQU   @NM00045
@NM00046 EQU   @NM00045
RBWAITP  EQU   @NM00045
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00045
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00043 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00042 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00041 EQU   RBOPSWB2
@NM00040 EQU   XRBPSW
@NM00039 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00038 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00037 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00036 EQU   XSTAB1
@NM00035 EQU   RBBASIC+8
@NM00034 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00033 EQU   RBPRFX
@NM00032 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00031 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00030 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00029 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00028 EQU   FRRSFLGS+1
@NM00027 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
SURV104  EQU   SUBITS+13
SURV103  EQU   SUBYTE13
SURV102  EQU   SUBYTE13
SURV101  EQU   SUBYTE13
SU100BT  EQU   SUBYTE13
SU99BIT  EQU   SUBYTE13
SU98BIT  EQU   SUBYTE13
SU97BIT  EQU   SUBYTE13
SU96BIT  EQU   SUBYTE13
SU95BIT  EQU   SUBYTE12
SU94BIT  EQU   SUBYTE12
SU93BIT  EQU   SUBYTE12
SU92BIT  EQU   SUBYTE12
SU91BIT  EQU   SUBYTE12
SU90BIT  EQU   SUBYTE12
SU89BIT  EQU   SUBYTE12
SU88BIT  EQU   SUBYTE12
SU87BIT  EQU   SUBYTE11
SU86BIT  EQU   SUBYTE11
SU85BIT  EQU   SUBYTE11
SU84BIT  EQU   SUBYTE11
SU83BIT  EQU   SUBYTE11
SU82BIT  EQU   SUBYTE11
SU81BIT  EQU   SUBYTE11
SU80BIT  EQU   SUBYTE11
SU79BIT  EQU   SUBYTE10
SU78BIT  EQU   SUBYTE10
SU77BIT  EQU   SUBYTE10
SU76BIT  EQU   SUBYTE10
SU75BIT  EQU   SUBYTE10
SU74BIT  EQU   SUBYTE10
SU73BIT  EQU   SUBYTE10
SU72BIT  EQU   SUBYTE10
SU71BIT  EQU   SUBYTE9
SU70BIT  EQU   SUBYTE9
SU69BIT  EQU   SUBYTE9
SU68BIT  EQU   SUBYTE9
SU67BIT  EQU   SUBYTE9
SU66BIT  EQU   SUBYTE9
SU65BIT  EQU   SUBYTE9
SU64BIT  EQU   SUBYTE9
SU63BIT  EQU   SUBYTE8
SU62BIT  EQU   SUBYTE8
SU61BIT  EQU   SUBYTE8
SU60BIT  EQU   SUBYTE8
SU59BIT  EQU   SUBYTE8
SU58BIT  EQU   SUBYTE8
SU57BIT  EQU   SUBYTE8
SU56BIT  EQU   SUBYTE8
SU55BIT  EQU   SUBYTE7
SU54BIT  EQU   SUBYTE7
SU53BIT  EQU   SUBYTE7
SU52BIT  EQU   SUBYTE7
SU51BIT  EQU   SUBYTE7
SU50BIT  EQU   SUBYTE7
SU49BIT  EQU   SUBYTE7
SU48BIT  EQU   SUBYTE7
SU47BIT  EQU   SUBYTE6
SU46BIT  EQU   SUBYTE6
SU45BIT  EQU   SUBYTE6
SU44BIT  EQU   SUBYTE6
SU43BIT  EQU   SUBYTE6
SU42BIT  EQU   SUBYTE6
SU41BIT  EQU   SUBYTE6
SU40BIT  EQU   SUBYTE6
SU39BIT  EQU   SUBYTE5
SU38BIT  EQU   SUBYTE5
SU37BIT  EQU   SUBYTE5
SU36BIT  EQU   SUBYTE5
SU35BIT  EQU   SUBYTE5
SU34BIT  EQU   SUBYTE5
SU33BIT  EQU   SUBYTE5
SU32BIT  EQU   SUBYTE5
SU31BIT  EQU   SUBYTE4
SU30BIT  EQU   SUBYTE4
SU29BIT  EQU   SUBYTE4
SU28BIT  EQU   SUBYTE4
SU27BIT  EQU   SUBYTE4
SU26BIT  EQU   SUBYTE4
SU25BIT  EQU   SUBYTE4
SU24BIT  EQU   SUBYTE4
SU23BIT  EQU   SUBYTE3
SU22BIT  EQU   SUBYTE3
SU21BIT  EQU   SUBYTE3
SU20BIT  EQU   SUBYTE3
SU19BIT  EQU   SUBYTE3
SU18BIT  EQU   SUBYTE3
SU17BIT  EQU   SUBYTE3
SU16BIT  EQU   SUBYTE3
SU15BIT  EQU   SUBYTE2
SU14BIT  EQU   SUBYTE2
SU13BIT  EQU   SUBYTE2
SU12BIT  EQU   SUBYTE2
SU11BIT  EQU   SUBYTE2
SU10BIT  EQU   SUBYTE2
SU9BIT   EQU   SUBYTE2
SU8BIT   EQU   SUBYTE2
SU7BIT   EQU   SUBYTE1
SU6BIT   EQU   SUBYTE1
SU5BIT   EQU   SUBYTE1
SU4BIT   EQU   SUBYTE1
SU3BIT   EQU   SUBYTE1
SU2BIT   EQU   SUBYTE1
SU1BIT   EQU   SUBYTE1
SU0BIT   EQU   SUBYTE1
IOCOEND  EQU   IOCOM+128
IOCPATCH EQU   IOCOM+124
IOCUCBBM EQU   IOCOM+120
IOCQCNT  EQU   IOCOM+116
IOCIOSDQ EQU   IOCOM+112
IOCIOSEQ EQU   IOCOM+108
IOCSVCF  EQU   IOCOM+104
IOCTCCW  EQU   IOCOM+100
IOCRSVTB EQU   IOCOM+96
IOCMFCNT EQU   IOCOM+92
IOCMFHK  EQU   IOCOM+88
IOCGENA  EQU   IOCOM+84
IOCCCH   EQU   IOCOM+80
IOCASYNQ EQU   IOCOM+76
IOCLCHTB EQU   IOCOM+72
IOCATTBL EQU   IOCOM+68
IOCOMEX  EQU   IOCOM+64
IOCSYNCH EQU   IOCOM+56
IOCCATLK EQU   IOCOM+48
IOCPRGID EQU   IOCOM+44
IOCIOSCP EQU   IOCOM+40
IOCORMGT EQU   IOCOM+36
IOCVOID  EQU   IOCOM+32
IOCSTIO  EQU   IOCOM+28
IOCSCOMP EQU   IOCOM+24
IOCHD160 EQU   IOCOM+20
IOCINT   EQU   IOCOM+16
IOCCTBL  EQU   IOCOM+12
IOCHIO   EQU   IOCOM+8
IOCPST   EQU   IOCOM+4
IOCPGCT  EQU   IOCOM+2
IOCVOICT EQU   IOCOM
PVTEND   EQU   PVT+1936
PVTVCONS EQU   PVT+1896
PVTPRSB  EQU   PVT+1892
PVTCIOQL EQU   PVTPCBQS+36
PVTCIOQF EQU   PVTPCBQS+32
PVTGFADL EQU   PVTPCBQS+28
PVTGFADF EQU   PVTPCBQS+24
PVTFPCBL EQU   PVTPCBQS+20
PVTFPCBF EQU   PVTPCBQS+16
PVTPCBQR EQU   PVTPCBQS
PVTLPAFX EQU   PVT+1850
PVTLSQAF EQU   PVT+1848
PVTLPAR  EQU   PVT+1844
PVTLPAI  EQU   PVT+1840
PVTLPAFC EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTPFTQR EQU   PVTQS+20
PVTRSBQL EQU   PVTQS+18
PVTRSBQF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTRESV4 EQU   PVT+47
PVTVRDFC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
PVTFLAG2 EQU   PVT+1
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTRESV1 EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00643 EQU   @EL00002
@PB00003 EQU   @PB00004
@RF00696 EQU   @EL00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGTKDA,(C'PLS1055',0701,77093)
