         TITLE 'IEDQBV  -  COMMBUF ROUTINE'
         GBLB  &IEDQZA(64)                                     @Y17XAMG
&IEDQZA(6) SETB 1                                              @Y17XAMG
IEDQBV   CSECT
*A005000                                                       @Y17XAMG
*C468000                                                       @Y17XAMG
***********************************************************************
**************** CHANGE ACTIVITY FOLLOWS ******************************
*THIS IS A DUMMY APAR TO CORRECT FICHE FLAGGING PROBLEM        @OZ19773
*                                                                     *
* STATUS -- CHANGE LEVEL 0                                            *
*                                                                     *
* FUNCTION -- THIS ROUTINE IS ENTERED WHEN A COMMBUF MACRO HAS BEEN   *
*    CODED IN THE INHDR SUBGROUP. THE CURRENT BUFFER WILL BE MOVED    *
*    TO THE NEXT AVAILABLE COMMON BUFFER DATA AREA, THE NAMED TLIST   *
*    WILL BE ACCESSED, AND A COMMBUF STCB WILL BE INSERTED INTO THE   *
*    STCB CHAIN OF THE APPROPRIATE LCB'S IF THE MAXDEEP OPERAND HAS   *
*    NOT BEEN EXCEEDED AND THE LINE IS ACTIVE.                        *
*                                                                     *
* ENTRY POINTS --                                                     *
*                                                                     *
*         FIRST EXECUTABLE INSTRUCTION.                               *
*                                                                     *
* INPUT --                                                            *
*                                                                     *
*    R1 HAS THE ADDRESS OF THE COMMBUF MACRO PARAMETER LIST.          *
*                                                                     *
*    R12 HAS THE ENTRY POINT ADDRESS.                                 *
*                                                                     *
* OUTPUT --                                                           *
*                                                                     *
*    A COMMBUF STCB WILL BE INSERTED INTO THE STCB CHAIN OF THE       *
*    APPROPRIATE LCB'S.                                               *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*                                                                     *
*         .IEDQTNT -- TO FIND THE TERMINAL ENTRY                      *
*                                                                     *
*         .IGG019RB OR IGG019RO -- TCAM DISPATCHER                    *
*                                                                     *
* EXITS,NORMAL --                                                     *
*                                                                     *
*         COMMBUF STCB HAS BEEN INSERTED INTO THE STCB CHAIN OF THE   *
*         APPROPRIATE LCB'S. REGISTER 15 CONTAINS A RETURN CODE OF    *
*         X'00'.                                                      *
*                                                                     *
* EXITS,ERROR --                                                      *
*                                                                     *
*         MHGET DID NOT SUCCESSFULLY EXECUTE. REGISTER 15 CONTAINS A  *
*         RETURN CODE OF X'04'.                                       *
*                                                                     *
*         NO COMMBUF STCB WAS AVAILABLE. REGISTER 15 CONTAINS A       *
*         RETURN CODE OF X'08'.                                       *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*                                                                     *
*    STCB                                                             *
*    AVT                                                              *
*    QCB                                                              *
*    LCB                                                              *
*    DCB                                                              *
*    TERMINAL TABLE                                                   *
*    COMMON BUFFER MASTER QCB                                         *
*    COMMON BUFFER DATA AREA PREFIX                                   *
*                                                                     *
* ATTRIBUTES --                                                       *
*                                                                     *
*    REUSABLE,ENABLED,RESIDENT                                        *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*                                                                     *
*    THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A PARTICULAR   *
*    INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.           *
*                                                                     *
* NOTES --                                                            *
*                                                                     *
*    STANDARD TCAM LINKAGES AND DEVIATIONS FROM STANDARDS.            *
*                                                                     *
***********************************************************************
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        PARAMETER LIST ADDRESS
R2       EQU   2                        WORK REGISTER
R3       EQU   3                        WORK REGISTER
RSTCB    EQU   3                        STCB BASE
RLCB     EQU   4                        LCB BASE
R5       EQU   5                        WORK REGISTER
R6       EQU   6                        WORK REGISTER
R7       EQU   7                        WORK REGISTER
RQCB     EQU   7                        QCB ADDRESS
R8       EQU   8                        WORK REGISTER
RCMB     EQU   8                        COMMON BUFFER DSECT ADDRESS
RAVT     EQU   9                        AVT ADDRESS
RDCB     EQU   10                       DCB BASE
RDISP    EQU   11                       WORK REGISTER
RBASE    EQU   12                       BASE REGISTER
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN ADDRESS
R15      EQU   15                       LINK ADDRESS
***********************************************************************
*                                                                     *
         USING IEDCBDA,R14              COMMON BUFFER DATA AREA PREFIX
         USING IEDCMB,RCMB              COMMON BUFFER MASTER QCB
         USING IEDQSTCB,RSTCB           STCB
         USING IEDQLCB,RLCB             LCB
         USING IEDQQCB,RQCB             QCB
         USING IHADCB,RDCB              DCB
         USING IEDQAVTD,RAVT            AVT
         USING IEDQTRM,R1               TERMINAL ENTRY
         USING IEDQDISP,RDISP           DISPATCHER
         USING *,RBASE                  CSECT BASE
*                                                                     *
***********************************************************************
IEDQBV   IEDHJN IEDQBV01
         L     RCMB,AVTCBQCB            GET ADDRESS OF COMMON BUFR QCB
         L     R14,CMBNEXT-ONE          GET ADDR OF DATA AREA PREFIX
         CLC   CBDAUSCT(TWO),AVTFZERO   IS USE COUNT ZERO
         BE    USCTOK                   BRANCH IF YES
         LH    R6,LOSTCNTR              GET NO LOST CNTR
         LA    R6,ONE(R6)               INCR CNTR
         STH   R6,LOSTCNTR              SET NEW VALUE
         B     EXIT2                    EXIT
USCTOK   EQU   *
         L     R6,CBDAADDR-ONE          GET ADDRESS OF DATA AREA
         LR    R5,R1                    SAVE PARM LIST ADDRESS
         MVC   TWO(TWO,R6),AVTFZERO     ZERO OUT DATA LENGTH IN DATA
*                                         AREA
*
         SPACE 1
***********************************************************************
*        MOVE DATA FROM THE BUFFER TO THE DATA AREA                   *
***********************************************************************
         SPACE 1
         MHGET WORK=(6)                 MOVE DATA FROM BUFFER TO AREA
         LTR   R15,R15                  GOOD RETURN CODE
         BNZ   EXIT1                    EXIT IF NOT
         SPACE 1
***********************************************************************
*        FIND THE TLIST ENTRY                                         *
***********************************************************************
         SPACE 1
         L     R1,FOUR(R5)              GET ADDR OF TLIST CHAR STRING
         SR    R0,R0                    CLEAR REGISTER
         IC    R0,FOUR(R5)              GET LENGTH OF TLIST NAME
         MVI   AVTDOUBL,AVTEBLNK        CLEAR AVT WORK AREA
         MVC   AVTDOUBL+ONE(SEVEN),AVTDOUBL
*                                       TO BLANKS
         LR    R15,R0                   LENGTH FOR EXECUTE
         BCTR  R15,AVTEZERO             DECR FOR EXECUTE
         EX    R15,MOVIT                MOVE NAME
         LA    R1,AVTDOUBL              ADDR FOR NAME
         L     R15,AVTMSGS-ONE          GET VCON TABLE ADDRESS
         L     R15,EIGHT(R15)           LOAD ADDR OF A1 ROUTINE
         BAL   R14,FOUR(R15)            LINK TO BINARY SEARCH ROUTINE
         LR    R1,R15                   ASSUME OFFSET FOUND
         LTR   R15,R15                  WAS THE TLIST ENTRY FOUND
         LA    R15,NTLIST               ASSUME LIST NOT FOUND
         BZ    EXIT1                    EXIT IF NOT
         L     R15,AVTRNMPT             GET ADDR OF TNT CODE
         BALR  R14,R15                  LINK TO GET TERM ENTRY ADDR
         SR    R2,R2                    CLEAR REGISTER
         ST    R5,SAVE                  SAVE ADDR OF PARAMETER LIST
         LR    R5,R1                    GET ADDR OF TERMINAL ENTRY
         TM    TRMSTATE,TRMLIST         IS THIS A LIST ENTRY
         LA    R15,NTLIST               SET RETURN CODE
         BZ    EXIT1                    BRANCH IF NO
         LH    R6,FOUR(R5)              GET NO. OF ENTRIES IN TLIST
LOOP     EQU   *
         LTR   R6,R6                    FINISHED
         BZ    EXIT                     BRANCH IF YES
         SPACE 1
***********************************************************************
*        GET THE TLIST ENTRY                                          *
***********************************************************************
         SPACE 1
NOTFINI  EQU   *
         BCTR  R6,R0                    SUBTRACT ONE FROM NO. ENTRIES
         SR    R1,R1                    CLEAR REGISTER
         LH    R1,SIX(R2,R5)            GET TLIST ENTRY
         L     R15,AVTRNMPT             GET ADDR OF TERMNAME TABLE
         BALR  R14,R15                  AND POINT TO TERMINAL ENTRY
         SR    R3,R3                    CLEAR REGISTER
         IC    R3,TRMCHCIN              GET CHARACTERISTICS INDEX
         BCTR  R3,R0                    DECREMENT BY ONE
         MH    R3,AVTDCTLN              MULTIPLY BY DCT LEN    @Y17XAMG
         A     R3,AVTCSTCS              DCT BASE
         TM    TWO(R3),CBRDCAST         IS THIS A BROADCAST TERMINAL
         BZ    OFFSET                   IF NOT, GET NEXT ENTRY
         L     RQCB,TRMDESTQ-ONE        GET QCB ADDRESS
         L     RDCB,QCBDCBAD-ONE        GET DCB ADDRESS
         TM    DCBOFLGS,OPEN            IS DCB OPEN
         BNZ   GETLCB                   BRANCH IF YES
OFFSET   EQU   *
         LA    R2,TWO(R2)               IF NOT,PREPARE TO PICK UP NEXT
*                                         OFFSET
         B     LOOP                     GO TO GET NEXT ENTRY
         SPACE 1
***********************************************************************
*        GET THE LCB                                                  *
***********************************************************************
         SPACE 1
GETLCB   EQU   *
         SR    R15,R15                  CLEAR REGISTER
         IC    R15,QCBRELLN             GET QCB'S STARTING RLN
         SR    R1,R1                    CLEAR REGISTER
         IC    R1,DCBEIOBX              GET LCB SIZE
         MR    R14,R1                   GET STARTING LCB OFFSET
         AL    R15,DCBIOBAD             POINT TO IOB OF LCB
         LR    RLCB,R15                 GET IOB ADDRESS
         LA    R15,LCBFLAG1-IEDQLCB     GET OFFSET TO BEGINNING OF LCB
         SR    RLCB,R15                 GET ADDRESS OF LCB
         TM    LCBSTAT1,LCBRECVN+LCBSENDN IS THE LINE STOPPED
         BNM   OFFSET                   BRANCH IF YES
         TM    LCBSTAT1,LCBOCNI         STOPLINE IN PROGRESS
         BO    OFFSET                   BRANCH IF YES
         TM    QCBSTAT,QCBTRMHO         IS TERMINAL HELD
         BO    OFFSET                   BRANCH IF SO
         L     RSTCB,LCBSTCBA-ONE       GET FIRST STCB OFF LCB
CHKSTCB  EQU   *
         CLI   STCBPRI-IEDQSTCB(RSTCB),CMBVTO IS THIS COMMBUF STCB
         BNE   STCBSUB                  IF NOT,GO GET COMMBUF STCB
CBSTCB   EQU   *
         SR    R15,R15                  CLEAR REGISTER FIFTEEN
         LH    R15,STCBCNTR             GET NO. COMMBUF STCB'S
         LA    R15,ONE(R15)             ADD ONE TO COUNT
         STH   R15,STCBCNTR             STORE UPDATED COUNT
         L     R1,SAVE                  GET ADDR OF PARM LIST
         LH    R15,TWO(R1)              GET MAXDEEP VALUE
         CH    R15,STCBCNTR             IS MAXDEEP EXCEEDED
         BH    GETSTCB                  BRANCH IF NO
         LH    R15,LOSTCNTR             GET NO. LOST VALUE
         LA    R15,ONE(R15)             ADD ONE TO NO. LOST COUNTER
         STH   R15,LOSTCNTR             STORE NEW VALUE
         XC    STCBCNTR,STCBCNTR        CLEAR CNTR
         B     OFFSET                   GET NEXT ENTRY
GETSTCB  EQU   *
         L     RSTCB,STCBLINK-ONE-IEDQSTCB(RSTCB) GET NEXT STCB
         B     CHKSTCB                  CHECK FOR COMMBUF STCB
         SPACE 1
***********************************************************************
*        GET A COMMBUF STCB AND CHAIN INTO THE LCB                    *
***********************************************************************
         SPACE 1
STCBSUB  EQU   *
         SR    R0,R0                    CLEAR REG
         LH    R0,CMBASTCB              GET NO AVAIL STCBS
         LTR   R0,R0                    IS STCB AVAIL
         LA    R15,NOSTCB               ASSUME NONE
         BZ    EXIT1                    BRANCH IF NO
         BCTR  R0,ZERO                  DECR NO AVAIL STCB
         STH   R0,CMBASTCB              SET NEW AVAIL COUNT
         L     R15,CMBSTCB-ONE          GET ADDRESS OF STCB
         MVI   FOUR(R15),CMBPRITY       PLACE PRIORITY IN STCB
         LH    R1,SIX(R2,R5)            GET TTCIN
         STH   R1,TWO(R15)              STORE IN STCB
         MVI   0(R15),CMBVTO            MOVE IN MCPL FIELD
         SR    R0,R0                    CLEAR REGISTER ZERO
         IC    R0,CMBNINDX              GET INDEX TO DATA AREA
         STC   R0,ONE(R15)              PLACE INDEX IN STCB
         LR    R0,R3                    SAVE STCB ADDRESS
         LR    R7,RCMB                  GET ADDR OF MASTER QCB
         SH    R7,HEIGHT                SUBTRACT EIGHT FROM ADDR OF QCB
         LR    R3,RLCB                  CHAIN INTO LCB
         ST    R13,AVTPARM              SAVE REGISTER 13
         LA    R13,AVTSAVE2             GET ADDRESS OF SAVE AREA 2
         L     RDISP,AVTEA              GET DISPATCHER ADDRESS
         BAL   R14,DSPUNAVR             BRANCH TO DISPATCHER
         L     R13,AVTPARM              RESTORE REGISTER 13
         SPACE 1
***********************************************************************
*        POST THE LCB                                                 *
***********************************************************************
         SPACE 1
FREELCB  EQU   *
         L     R14,CMBNEXT-ONE          GET ADDR OF DATA AREA PREFIX
         LH    R3,CBDAUSCT              GET DATA AREA USE COUNT
         LA    R3,ONE(R3)               UPDATE USE COUNT
         STH   R3,CBDAUSCT              STORE NEW USE COUNT IN PREFIX
         L     R3,CBDAADDR-ONE          POINT TO DATA AREA
         MVC   CBDALEN(TWO),TWO(R3)     MOVE IN DATA AREA LENGTH
         OI    LCBSTAT2,LCBSNDPR        SET SEND PRIORITY
         TM    LCBSTAT1,LCBFREEN        IS LCB FREE
         BZ    TESTPOLL                 BRANCH IF NOT
         MVI   LCBPRI,PRILNFRE          POST PRIORITY
         OI    LCBSTAT1,LCBSENDN        SET SEND STATE
         ST    RLCB,LCBQCBA-ONE         LCB IS QCB
         LR    R1,RLCB                  PARAMETER FOR POST
         ST    R13,AVTPARM              SAVE REGISTER 13
         LA    R13,AVTSAVE2             GET ADDRESS OF SAVE AREA 2
         BAL   R14,DSPPOSTR             BRANCH TO DISPATCHER
         L     R13,AVTPARM              RESTORE REGISTER 13
         B     OFFSET                   GET NEXT TLIST ENTRY
         SPACE 1
***********************************************************************
*        CHECK TO SEE IF THE LINE IS BEING AUTOPOLLED                 *
***********************************************************************
         SPACE 1
TESTPOLL EQU   *
         CLI   LCBCPA+TWENTY4,AUTOPOLL  IS LINE BEING AUTOPOLLED
         BNE   OFFSET                   BRANCH IF NOT
         MVI   LCBCPA+THIRTY2,NOP       NOP TICS
         MVI   LCBCPA+FIFTY6,NOP        AFTER POLLS
         B     OFFSET                   GET NEXT TLIST ENTRY
         SPACE 1
***********************************************************************
*        GET THE ADDRESS OF THE NEXT DATA AREA PREFIX AND STORE       *
*        IT IN THE COMMBUF MASTER QCB                                 *
***********************************************************************
         SPACE 1
EXIT     EQU   *
         L     R14,CMBNEXT-ONE          GET ADDR OF DATA AREA PREFIX
         SR    R3,R3                    CLEAR REGISTER
         SR    R7,R7                    CLEAR REGISTER
         IC    R3,CBDAINDX              GET INDEX BYTE
         LH    R7,CMBDAREA              GET NO. DATA AREAS
         BCTR  R7,R0                    SUBTRACT ONE
         CR    R3,R7                    COMPARE VALUES
         BE    BEGIN                    GET ADDR OF FIRST PREFIX
         LA    R15,CBDPRFSZ(R14)        POINT TO NEXT PREFIX
         B     NEXT                     STORE ADDRESS
BEGIN    EQU   *
         L     R15,CMBFIRST-ONE         GET ADDR OF FIRST PREFIX
NEXT     EQU   *
         SR    R0,R0                    CLEAR REGISTER
         IC    R0,0(R15)                GET INDEX BYTE
         ST    R15,CMBNEXT-ONE          STORE ADDR OF NEXT AREA
         STC   R0,CMBNINDX              STORE INDEX BYTE
         DROP  R14
EXIT2    EQU   *
         SR    R15,R15                  CLEAR REG
         LH    R1,LOSTCNTR              GET NO LOST
         LTR   R1,R1                    ANY LOST
         BZ    EXIT1                    BRANCH IF NO
         LA    R15,EIGHT                SET TOO DEEP RETURN CODE
         LA    R6,LOSTCNTR              GET ADDRESS OF LOST COUNTER
         MVC   ZERO(FOUR,R6),AVTFZERO   ZERO OUT LOST AND STCB CNTRS
EXIT1    EQU   *
         L     RBASE,AVTUI              GET RETURN INTERFACE ADDRESS
         B     FOUR(RBASE)              RETURN TO CALLER
***********************************************************************
         SPACE 1
MOVIT    MVC   AVTDOUBL(1),ZERO(R1)     EXECUTE FOR MOVE
         DS    0F
SAVE     DC    F'0'                     ADDR OF PARM LIST
LOSTCNTR DC    H'0'                     NO. LOST COUNTER
STCBCNTR DC    H'0'                     STCB COUNTER
HEIGHT   DC    H'8'                     HALF WORD OF EIGHT
ZERO     EQU   0                        ZERO
ONE      EQU   1                        ONE
TWO      EQU   2                        TWO
FOUR     EQU   4                        CONSTANT FOUR
FIVE     EQU   5                        FIVE
SIX      EQU   6                        SIX
SEVEN    EQU   7                        SEVEN
EIGHT    EQU   8                        EIGHT
TWENTY4  EQU   24                       TWENTY FOUR
THIRTY2  EQU   32                       THIRTY TWO
FIFTY6   EQU   56                       FIFTY SIX
NOP      EQU   X'03'                    NOP COMMAND
AUTOPOLL EQU   X'09'                    AUTOPOLL COMMAND
OPEN     EQU   X'10'                    DCB OPEN FLAG
CMBVTO   EQU   X'26'                    COMMON BUFFER MCPL
CBRDCAST EQU   X'40'                    BROADCAST TERMINAL
CMBPRITY EQU   X'90'                    COMMON BUFFER PRIORITY
NTLIST   EQU   X'0C'                    RETURN CODE FOR NOT TLIST
NOSTCB   EQU   X'10'                    NO STCB AVAIL
         LTORG                                                 @OZ19773
***********************************************************************
         SPACE 4
         TAVTD
         SPACE 4
         TLCBD
         SPACE 4
         TTRMD
         SPACE 4
         TDISPD
         SPACE 4
         TQCBD
         SPACE 4
         DCBD  DSORG=TX
         SPACE 4
         TPRIOR
         SPACE 4
         TSTCBD
         SPACE 4
         SPACE 4
         IEDCBDA
         SPACE 4
         IEDCMB
***********************************************************************
         END
