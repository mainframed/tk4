         TITLE 'IEDQA1  -  BINARY SEARCH ROUTINE'
IEDQA1   CSECT
*A042700-044100,216300-218100,220000,279300-281100,373200-374400 S22025
*A457000,458000,508000,523000,524000,537100-539700               S22025
*C036000,372000,588000,591000,777000,78000                       S22025
*D306000,309000,543000-550000                                    S22025
*C539400-539450,711000                                           S22027
***********************************************************************
*                                                                     *
*STATUS -- CHANGE LEVEL 0                                             *
*                                                                     *
*FUNCTION -- SEARCHES THE TERMINAL NAME TABLE TO FIND THE ENTRY       *
*   NAME PASSED.                                                      *
*                                                                     *
*   THE ADDRESS OF THE FIELD CONTAINING THE TERMINAL NAME SOUGHT      *
*   AND THE LENGTH OF THE FIELD ARE LOADED FROM THE PARAMETER LIST    *
*   INTO REGISTERS 2 AND 5 RESPECTIVELY. REGISTER 4 IS INITIALIZED    *
*   TO THE ADDRESS OF THE TERMINAL NAME TABLE (AVTRNMPT) AND          *
*   REGISTER 7 TO THE ENTRY LENGTH FROM THE TERMINAL NAME TABLE.      *
*   IF PLUS 4 ENTRY INTO THIS MODULE IS USED REGISTERS 0 HAS THE S22025
*   LENGTH AND REGISTER 1 HAS ADDRES.BECAUSE NO PARMETER LIST IS S22025
*   USED.
*                                                                     *
*   THE LENGTH FROM THE PARAMETER LIST IS COMPARED WITH THE LENGTH    *
*   FROM THE TERMINAL NAME TABLE.  IF THE LENGTH FROM THE TABLE IS    *
*   HIGHER THAN OR EQUAL TO THE LENGTH PASSED,  THE LENGTH PASSED     *
*   IS TO BE USED AS THE COMPARE LENGTH.  IT IS LEFT IN REGISTER 1.   *
*   IF THE LENGTH FROM THE TABLE IS LOW,  THE LENGTH FROM THE TABLE   *
*   IS USED AS THE COMPARE LENGTH.  IT IS MOVED INTO REGISTER 1       *
*   FROM REGISTER 7.                                                  *
*                                                                     *
*   REGISTER 1 IS DECREMENTED TO BE USED FOR EXECUTING THE SUBSE-     *
*   QUENT COMPARE.  REGISTER 10 IS INITIALIZED TO THE ADDRESS OF      *
*   THE MIDDLE ENTRY FROM THE TERMINAL NAME TABLE.  REGISTER 7 IS     *
*   INCREMENTED BY 3 TO GET THE FULL LENGTH OF A TERMINAL NAME        *
*   TABLE ENTRY,  AND THIS VALUE IS SAVED IN REGISTER 11.  REGISTER   *
*   8 IS SET TO POINT ONE ENTRY BEYOND THE LAST ENTRY IN THE TABLE.   *
*   REGISTER 7 IS MULTIPLIED BY THE SEARCH EXTENT FACTOR IN THE       *
*   TERMINAL NAME TABLE TO GET THE LENGTH OF THE FIRST SEARCH         *
*   EXTENT.  THE SEARCH LOOP IS THEN ENTERED.                         *
*                                                                     *
*   REGISTER 10 (THE ADDRESS OF THE ENTRY TO BE COMPARED) IS          *
*   COMPARED TO REGISTER 8 (THE ADDRESS OF THE LAST ENTRY,  PLUS      *
*   THE LENGTH OF ONE ENTRY) TO DETERMINE IF THE SEARCH IS BEYOND     *
*   THE END OF THE TABLE.  IF SO,  THE CURRENT ENTRY IS NOT           *
*   COMPARED (BECAUSE IT IS NOT A REAL ENTRY).  INSTEAD IT IS         *
*   IMMEDIATELY DECREMENTED BY THE SEARCH EXTENT IN REGISTER 7 AND    *
*   COMPARED WITH REGISTER 11.                                        *
*                                                                     *
*   IF THE CURRENT ENTRY IS A REAL ENTRY,  IT IS COMPARED TO THE      *
*   ENTRY PASSED (POINTED TO BY REGISTER 2).  IF THE CURRENT ENTRY    *
*   IS HIGH,  REGISTER 10 IS DECREMENTED BY REGISTER 7 (THE CURRENT   *
*   SEARCH EXTENT);  IF IT IS LOW,  IT IS INCREMENTED BY REGISTER     *
*   7.  REGISTER 7 IS THEN COMPARED WITH REGISTER 11 (THE LENGTH OF   *
*   ONE ENTRY).  IF REGISTER 7 IS LESS THAN THE LENGTH OF ONE         *
*   ENTRY,  THE SEARCH HAS FAILED.  REGISTER 15 IS SET TO A RETURN    *
*   CODE OF X'00',  THE ADDRESS OF THE SCB IS SET IN REGISTER 0 AND   *
*   RETURN IS MADE VIA THE RETURN INTERFACE ROUTINE.                  *
*                                                                     *
*   IF REGISTER 7 IS NOT LESS THAN THE LENGTH OF ONE ENTRY,  IT IS    *
*   DIVIDED BY TWO TO OBTAIN A NEW SEARCH EXTENT AND THE SEARCH       *
*   LOOP IS REENTERED.                                                *
*                                                                     *
*   IF THE CURRENT ENTRY IS EQUAL TO THE NAME PASSED,  THE SEARCH     *
*   IS COMPLETE.  THE KEY (ORDINAL INDEX) TO THE MATCHING ENTRY IS    *
*   COMPUTED BY DIVIDING THE LENGTH FROM THE FIRST ENTRY TO THE       *
*   MATCHING ENTRY BY THE LENGTH OF ONE ENTRY AND ADDING ONE.  THE    *
*   KEY IS RETURNED IN REGISTER 15.  THE ADDRESS OF THE SCB IS SET    *
*   IN REGISTER 0 AND RETURN IS MADE VIA THE RETURN INTERFACE         *
*   ROUTINE.                                                          *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQA1' TO SEARCH THE TERMINAL NAME TABLE TO FIND THE        *
*   ENTRY NAME PASSED.  CALLING SEQUENCE FROM USER INTERFACE IS:      *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*       'IEDQA1+4' TO USE BINARY SEARCH WITHOUT PARMATER LIST.   S22025
*   CALLING SEQUENCE IS:                                         S22025
*                                                                S22025
*       L     R15,AVTMSGS-1            GET VCON TABLE ADDR       S22025
*       L     R15,8(R15)               LOAD ADDR OF IEDQA1       S22025
*       BAL   R14,4(R15)               LINK TO IEDQA1            S22025
*                                                                     *
*INPUT --                                                             *
*   PLUS 0 ENTRY:                                                S22025
*   REGISTER 1 - THE ADDRESS OF A PARAMETER LIST.  PARAMETER LIST     *
*   FORMAT IS:                                                        *
*                                                                     *
*        *********************************                            *
*        *       * PARAM * UN-   * CHAR  *                            *
*        * INDEX * LIST  *  USED * LNGTH *                            *
*        *       * LNGTH *       *       *                            *
*        *********************************                            *
*        *                               *                            *
*        *  ADDRESS OF CHARACTER STRING  *                            *
*        *                               *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 3 - THE ADDRESS OF THE SCB.                              *
*                                                                     *
*   REGISTER 9 - THE ADDRESS OF THE AVT.                              *
*                                                                     *
*   REGISTER 12 - THE ENTRY POINT ADDRESS AND BASE REGISTER FOR       *
*   THIS ROUTINE.                                                     *
*                                                                     *
*   PLUS 4 ENTRY:                                                S22025
*                                                                S22025
*   REGISTER 0 - LENGTH OF CHARACTER STRING.                     S22025
*                                                                S22025
*   REGISTER 1 - ADDRESS OF CHARACTER STRING.                    S22025
*                                                                S22025
*   OTHER REGISTERS SAME AS ABOVE.                               S22025
*OUTPUT --                                                            *
*   REGISTER 0 - THE ADDRESS OF THE SCB.                              *
*                                                                     *
*   REGISTER 15 - IF A MATCHING ENTRY IS FOUND,  THE KEY (ORDINAL     *
*   INDEX) TO THE MATCHING ENTRY.  IF NO MATCHING ENTRY IS FOUND,     *
*   A RETURN CODE OF X'00'.                                           *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   TERMINAL NAME TABLE.                                              *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE.                                       *
*                                                                     *
*   SCB - STATION CONTROL BLOCK FOR CURRENT STATION.                  *
*                                                                     *
*EXITS,  NORMAL -- A MATCHING ENTRY IS FOUND.  REGISTER 0 CONTAINS    *
*   THE ADDRESS OF THE SCB.  REGISTER 15 CONTAINS THE KEY (ORDINAL    *
*   INDEX) TO THE MATCHING ENTRY.                                     *
*                                                                     *
*EXITS,  ERROR -- NO MATCHING ENTRY IS FOUND.  REGISTER 0 CONTAINS    *
*   THE ADDRESS OF THE SCB.  REGISTER 15 CONTAINS A RETURN CODE OF    *
*   X'00'.                                                            *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*   NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN     *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*   WHEN CHANGING THIS MODULE FOR ANY REASON YOU MUST INSURE     S22025
*   THAT ALL CODE EXECUTED IN THE PLUS FOUR ENTRY REMAIN         S22025
*   RE-ENTRANT BECAUSE THIS MODULE IS BEING USED BY TOTE AND     S22025
*   APPLICATION PROGRAMS ALSO.                                   S22025
*                                                                     *
***********************************************************************
********* REGISTER EQUATES **********
         SPACE
R0       EQU   0                        DUMMY BASE REG
         SPACE
R1       EQU   1                        PARAMETER LIST ADDRESS
         SPACE
RFLD     EQU   2                        ADDR OF FIELD PASSED
         SPACE
RSCB     EQU   3                        ADDRESS OF SCB
         SPACE
RTAB     EQU   4                        ADDR OF TABLE TO BE
*                                         SEARCHED
         SPACE
RLEN     EQU   5                        LENGTH OF FIELD PASSED
         SPACE
RSRCHX   EQU   7                        SEARCH EXTENT REGISTER
         SPACE
RLAST    EQU   8                        ADDR OF LAST ENTRY + 1
         SPACE
RAVT     EQU   9                        ADDRESS OF AVT
RADDR    EQU   10                       ADDR OF CURRENT ENTRY IN
*                                         TABLE
         SPACE
RTRULEN  EQU   11                       FULL LENGTH OF A TABLE ENTRY
         SPACE
RBASE    EQU   12                       BASE REGISTER
R13      EQU   13                       CALLERS SAVE AREA ADDR   S22025
EIGHT    EQU   8                        OFFSET VALUE             S22025
         SPACE
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       BRANCH REGISTER, BASE
*                                         REGISTER AND RETURN CODE
*                                         REGISTER
         SPACE
********* OTHER EQUATES **********
         SPACE
ADDRLEN  EQU   3                        LENGTH OF AN ADDR CONSTANT
         SPACE
ONE      EQU   1                        OFFSET TO START OF NAME
         SPACE
DIVIDE   EQU   1                        SHIFT LENGTH TO HALVE A
*                                         VALUE IN A REG
         SPACE
         SPACE
INCX     EQU   1                        FACTOR TO GET ORDINAL INDEX
CVTOFF   EQU   16                       ADDRESS OF THE CVT       S22025
         SPACE
TWO      EQU   2                        OFFSET TO LENGTH FIELD
FOUR     EQU   4                        OFFSET TO FIELD ADDRESS
SEVEN    EQU   7                        LENGTH FACTOR FOR CLEARING
*                                         AVT WORK AREA
TWELVE   EQU   12                       OFFSET FOR +4 SAVE ADDR  S22025
SIXTEEN  EQU   16                       OFFSET FOR +4 SAVE PTR   S22025
         SPACE
MOVEFLAG EQU   X'01'                    INDEX FLAG: MOVE NAME
         EJECT
         USING *,RBASE
IEDQA101 EQU   *                                                 S22025
         B     ENTRY                    ENTRY FROM IEDQUI        S22025
IEDQA102 EQU   *                                                 S22025
         B     SAVEIT-IEDQA101(R15)     BRANCH AROUND ID         S22025
IEDQA1   IEDHJN ,                       MODULE ID                S22025
SAVEIT   DS    0H                                                S22025
         STM   R14,RBASE,12(R13)        SAVE CALLERS REGISTERS   S22025
         L     RAVT,CVTOFF              GET ADDRESS OF CVT       S22025
         L     RAVT,AVTCVTPT(,RAVT)     FIND POINTER TO AVT      S22025
         L     RAVT,AVTEZERO(,RAVT)     GET ADDRESS OF AVT       S22025
         USING IEDQAVTD,RAVT                                     S22025
         ST    R13,SIXTEEN(,R13)        STORE BACKWARD POINTER   S22025
         LA    R13,TWELVE(,R13)         ADJUST SAVE ADDRESS      S22025
         LR    RBASE,R15                SET R12 AS BASE REG      S22025
         LR    RFLD,R1                  INITIALIZE ADDR FIELD    S22025
         LR    RLEN,R0                  GET LENGTH OF FIELD      S22025
         B     BINSRCH                  BRANCH TO SEARCH         S22025
ENTRY    EQU   *                                                 S22025
         USING IEDQAVTD,RAVT                                     S22025
         L     RFLD,FOUR(,R1)           INITIALIZE ADDR FIELD    S22025
         SR    RLEN,RLEN                CLEAR REG                S22027
         IC    RLEN,ADDRLEN(,R1)        GET ENTRY LENGTH         S22027
         TM    0(R1),MOVEFLAG           MUST NAME BE MOVED       S22025
         BNO   BINSRCH                  NO, BRANCH TO COMPUTE    S22025
         SR    R1,R1                    YES, SET UP FOR MOVE     S22025
         SPACE
         SPACE
BINSRCH  DS    0H
         L     RTAB,AVTRNMPT            GET ADDR OF TERMNAME TABLE
         USING IEDQTNTD,RTAB
         SPACE
         SR    RSRCHX,RSRCHX            CLEAR REG
         IC    RSRCHX,TNTENLEN          INSERT ENTRY LNG
         CR    RLEN,RSRCHX              LNG PASSED GT ENTRY LENGTH
         BH    BADRTN                   YES, IT IS INVALID, EXIT
         SPACE
         LTR   R1,R1                    MUST NAME BE MOVED       S22025
         BNZ   SETLEN                   NO, BRANCH               S22025
         SPACE
         MVI   AVTDOUBL,AVTEBLNK        CLEAR AVT WORK AREA
         MVC   AVTDOUBL+1(SEVEN),AVTDOUBL TO ZEROES
         BCTR  RLEN,AVTEZERO            DECREMENT FOR EXECUTE
         EX    RLEN,MOVEX               MOVE NAME TO AVT WORK AREA
         LA    RFLD,AVTDOUBL            POINT TO AVT WORK AREA
         SPACE
SETLEN   EQU   *
         LR    RLEN,RSRCHX              SET COMPARE LENGTH
         SPACE
BICKETER EQU   *
         BCTR  RLEN,AVTEZERO            DECREMENT FOR COMPARE
         L     RADDR,TNTMIDEN-1         GET ADDR OF MIDDLE ENTRY
         LA    RADDR,AVTEZERO(,RADDR)   CLEAR HIGH-ORDER BYTE
         LA    RSRCHX,ADDRLEN(,RSRCHX)  GET FULL ENTRY LENGTH
         LR    RTRULEN,RSRCHX           SAVE FULL ENTRY LENGTH
         MH    RSRCHX,TNTLEN            GET OFFSET TO LAST + 1
         LA    RLAST,TNTFIRST           GET ADDR OF FIRST ENTRY
         AR    RLAST,RSRCHX             GET ADDR OF LAST + 1
         LR    RSRCHX,RTRULEN           GET FULL ENTRY LNG
         MH    RSRCHX,TNTSRCHX          MULTIPLY BY SEARCH EXTENT
*                                         FACTOR TO GET SEARCH
*                                         EXTENT
         B     ENTRLOOP                 ENTER LOOP
         SPACE
LOOP     EQU   *
         CR    RSRCHX,RTRULEN           SEARCH EXTENT LT TRUE LNG
         BL    BADRTN                   YES, ENTRY NOT FOUND
         SRL   RSRCHX,DIVIDE            DIVIDE EXTENT BY TWO
         CR    RADDR,RLAST              POINTING BEYOND TABLE END
         BNL   LO                       YES, GO ADJUST DOWN
         SPACE
ENTRLOOP EQU   *
         EX    RLEN,COMPEX              COMPARE ENTRY WITH FIELD
         BH    HI                       HIGH, GO ADJUST UP
         BE    FOUND                    EQUAL, ENTRY FOUND
*
LO       EQU   *
         SR    RADDR,RSRCHX             LO, ADJUST DOWN
         B     LOOP                     SEARCH AGAIN             S22027
         SPACE
HI       EQU   *
         BXH   RADDR,RSRCHX,LOOP        ADJUST UP AND LOOP
         SPACE
FOUND    EQU   *
         LA    RTAB,TNTOFF(,RTAB)       GET ADDRESS OF 1ST ENTRY
         SR    RADDR,RTAB               GET OFFSET TO OUR ENTRY
         SR    R0,R0                    CLEAR FOR DIVIDE
         LR    R1,RADDR                 MOVE OFFSET TO DIVIDE REG
         SPACE
         DR    R0,RTRULEN               DIVIDE TO GET INDEX
         LA    R15,INCX(,R1)            INCREMENT TO GET ORDINAL
*                                         INDEX
         SPACE
         B     RETURN                   RETURN TO CALLER
         SPACE
BADRTN   EQU   *
         SR    R15,R15                  RETURN X'00' RETURN CODE
         SPACE
RETURN   EQU   *
         LR    R0,RSCB                  RETURN SCB ADDR TO MH
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              RETURN TO CALLER         S22025
         SPACE
********* EXECUTED INSTRUCTIONS **********
         SPACE
MOVEX    MVC   AVTDOUBL(ONE),AVTEZERO(RFLD) MOVE NAME TO
*                                         AVT WORK AREA
         SPACE
COMPEX   CLC   AVTEZERO(1,RFLD),AVTEZERO(RADDR) FIELD-ENTRY COMPARE
         EJECT
********* DSECTS *********
         SPACE 2
         TAVTD
         EJECT
         TTNTD
         END
