A801     TITLE '''IEDQA8'' -- MULTIPLE INSERT AT OFFSET ROUTINE'
IEDQA8   CSECT
*A158000,308000                                                 SA53607
*A008000,156000,172000,481000                                    S22025
*C201800,472000,700000-708000                                    S22025
*D212000                                                         S22025
*D436500-439000,640800-644800                                   SA58444
*A216000                                                       @OY16431
         SPACE
***********************************************************************
*STATUS -- CHANGE LEVEL 0                                             *
*                                                                     *
*FUNCTION --                                                          *
*   INSERTS A DATA STRING OF UP TO EIGHT CHARACTERS AT A SPECIFIED    *
*   INTERVAL OF UP TO 65,535 BYTES THROUGHOUT THE MESSAGE.            *
*                                                                     *
*   AN INITIAL LINK IS MADE TO THE LOCATE OPTION ROUTINE (IEDQAE)     *
*   TO FIND THE ADDRESS OF THE OPTION FIELD IN WHICH INTERVALS        *
*   ACROSS BUFFERS IS HELD.  IF THE FIELD IS NOT FOUND, CONTROL       *
*   RETURNS TO THE CALLER WITH A RETURN CODE OF FOUR IN REGISTER      *
*   15.                                                               *
*                                                                     *
*   THE INITIAL OFFSET FOR DATA IS COMPUTED.  IF IT IS NOT WITHIN     *
*   THIS BUFFER,  IT IS SAVED IN THE OPTION FIELD AND CONTROL         *
*   RETURNS TO THE CALLER.  OTHERWISE THE MAIN LOOP IS ENTERED.       *
*                                                                     *
*   IN THE MAIN LOOP,  A LINK IS MADE TO THE USER INTERFACE           *
*   (IEDQAO) TO INSERT THE DATA STRING,  THEN A LINK IS MADE TO THE   *
*   INSERT DATA ROUTINE (IEDQAF) TO SHIFT THE ORIGINAL DATA LEFT-     *
*   WARDS IN THE BUFFER UP TO THE NEXT INSERT POINT.  THE LOOP IS     *
*   RE-ENTERED UNTIL THE INSERT POINT IS BEYOND THE END OF THE        *
*   BUFFER.                                                           *
*                                                                     *
*   WHEN THIS OCCURS,  A FINAL LINK TO THE INSERT DATA ROUTINE IS     *
*   MADE TO SHIFT THE LOGICALLY EMPTY AREA TO THE END OF THE BUFFER   *
*   AND THE NEW FINAL DATA SIZE IS COMPUTED AND SET IN THE PREFIX     *
*   (PRFSIZE).  IF THERE IS A SUBSEQUENT BUFFER,  THE INITIAL         *
*   INSERT OFFSET FOR THAT BUFFER IS COMPUTED AND SET IN THE OPTION   *
*   FIELD.  CONTROL RETURNS TO THE CALLER WITH A RETURN CODE OF       *
*   ZERO IN REGISTER 15.                                              *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQA801' TO INSERT A CHARACTER STRING AT SPECIFIED INTER-   *
*   VALS.  CALLING SEQUENCE FROM USER INTERFACE IS:                   *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 - THE ADDRESS OF A MACRO-GENERATED PARAMETER LIST.     *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        * INDEX * PARM  * INDEX * INDEX *                            *
*        *  TO   *  LIST *  TO   *  TO   *                            *
*        *   A8  * LNGTH *   AF  *   AO  *                            *
*        *********************************                            *
*        *          INSERT               *                            *
*        *                 DATA          *                            *
*        *                               *                            *
*        *********************************                            *
*        *   INTERVAL    * INDEX *  OPT  *                            *
*        *    BETWEEN    *  TO   * FIELD *                            *
*        *     INSERTS   *   AE  * OFFSET*                            *
*        *********************************                            *
*                                                                     *
*        INSERT DATA WORD:                                            *
*                                                                     *
*        *********************************                            *
*        *LENGTH *      ADDRESS OF       *   DATA =                   *
*        *  OF   *   CHARACTER STRING    *     CHARACTER STRING       *
*        * STRING*                       *                            *
*        *********************************                            *
*                                                                     *
*        *********************************                            *
*        * NO.   * IDLE  *               *   DATA =                   *
*        *  OF   *  CHAR *   (UNUSED)    *     IDLES                  *
*        * IDLES *       *               *                            *
*        *********************************                            *
*                                                                     *
*        A8 INDEX BYTE: X'01' OFF - DATA = CHARACTER STRING           *
*                       X'01' ON - DATA = IDLES                       *
*                                                                     *
*   REGISTER 4 - ADDRESS OF LCB                                       *
*                                                                     *
*   REGISTER 6 - ADDRESS OF CURRENT BUFFER                            *
*                                                                     *
*   REGISTER 9 - ADDRESS OF AVT                                       *
*                                                                     *
*   REGISTER 12 -  ENTRY POINT ADDRESS AND BASE FOR THIS ROUTINE      *
*                                                                     *
*   OPTION FIELD - ON FIRST BUFFER,  CONTENTS ON ENTRY IGNORED.  ON   *
*   TEXT BUFFERS,  CONTAINS THE OFFSET TO THE FIRST INSERT POINT IN   *
*   THE CURRENT BUFFER.                                               *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - CONTAINS ZEROES IF FUNCTION COMPLETED SUCCESS-      *
*   FULLY.  CONTAINS X'04' IF OPTION FIELD NOT FOUND.                 *
*                                                                     *
*   OPTION FIELD - ON NOT-LAST BUFFERS,  CONTAINS THE OFFSET TO THE   *
*   FIRST INSERT POINT IN THE NEXT BUFFER.                            *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQAF' - INSERT DATA ROUTINE                                    *
*                                                                     *
*   'IEDQAO' - UNIT REQUEST INTERFACE                                 *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   LCB - LINE CONTROL BLOCK                                          *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED                                  *
*                                                                     *
*   USER-DEFINED OPTION FIELD                                         *
*                                                                     *
*EXITS,  NORMAL --                                                    *
*   THE REQUESTED DATA IS INSERTED IN THE BUFFER.  THE OPTION FIELD   *
*   CONTAINS THE OFFSET TO THE FIRST INSERT POINT IN THE NEXT         *
*   BUFFER,  UNLESS THE CURRENT BUFFER IS THE LAST BUFFER.  REGIS-    *
*   TER 15 CONTAINS A RETURN CODE OF X'00'.                           *
*                                                                     *
*EXITS,  ERROR --                                                     *
*   THE OPTION FIELD SPECIFIED CANNOT BE FOUND.  REGISTER 15 CON-     *
*   TAINS A RETURN CODE OF X'04'.                                     *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTE -- THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      *
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    *
*   BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        *
*   DEFINITIONS.                                                      *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST ADDRESS
         SPACE
REXTN2   EQU   2                        EXTENT BETWEEN INSERTS
         SPACE
RSCB3    EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
         SPACE
RDATAD5  EQU   5                        WORK REGISTER
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE
RPARM7   EQU   7                        PARAMETER LIST ADDRESS
         SPACE
RLIM8    EQU   8                        SHIFT LIMIT
         SPACE
RAVT9    EQU   9                        AVT ADDRESS
         SPACE
ROPT10   EQU   10                       OPTION FIELD ADDRESS
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
ONE      EQU   1                        ONE-BYTE INCREMENT FACTOR
SHIFT8   EQU   8                        ONE-BYTE SHIFT FACTOR
         SPACE
INSOFF   EQU   4                        PREFIX INSERT OFFSET
FOUR     EQU   4                        OFFSET USED ON RETURN    S22025
EIGHT    EQU   8                       NUMB DATE/TIME CHAR      SA53607
DATOFF   EQU   6                        PREFIX DATA OFFSET
         SPACE
IDLEFLAG EQU   X'01'                    DATA TYPE = IDLES FLAG
REG15OFF EQU   X'0F'                    REG 15 INDICATOR       @YM08438
DATACHAR EQU   X'80'                    DATA=CHARACTERS          S22025
DATAIDLS EQU   X'40'                    DATA=IDLES               S22025
         EJECT
         USING IEDQAVTD,RAVT9
         USING IEDQLCB,RLCB4
         USING IEDQPRF,RPREFIX
         USING IEDQA801,RBASE
         USING IEDQSCB,RSCB3
         SPACE
IEDQA801 EQU   *
IEDQA8   IEDHJN MLTATOFF                MODULE ID                S22025
         LR    RPARM7,R1                SAVE PARAMETER LIST ADDRESS
         USING IEDQPARM,RPARM7
         SPACE
         MVI   AVTPARM+1,FOUR           SET CODE FOR IEDQAE    @OY16431
         IC    R15,PARMOPT              SET OPTION FIELD OFFSET
         STC   R15,AVTPARM+2              IN PARAMETER LIST
         MVI   AVTPARM+3,REG15OFF       SET RETURN REG = 15
         IC    R15,PARMAE               PICK UP LOCATE-OPTION INDEX
         BAL   R14,LINK                 LINK TO GET OPT FLD ADDRESS
         SPACE
         LTR   ROPT10,R15               SET ADDRESS IN OPT REGISTER
         BNZ   INITEXTN                 OPT FIELD FOUND, PROCEED
         SPACE
         LA    R15,AVTECD4              SET BAD RETURN CODE
         B     EXIT                     EXIT IMMEDIATELY
         SPACE
INITEXTN EQU   *
         LH    REXTN2,PARMEXTN          PICK UP
         N     REXTN2,AVTCLRHI            EXTENT FIELD
         SPACE
         SR    RDATAD5,RDATAD5          (CLEAR FOR INSERT)
         IC    RDATAD5,LCBISZE          PICK UP RESERVE CHAR COUNT
         LA    RDATAD5,AVTTXTSZ+1(,RDATAD5) ADD SIZE OF TEXT PREFIX
         TM    PRFSTAT1,PRFNHDRN        TEST IF HEADER PREFIX
         BO    TEXT                     NO, GO ADD FROM OPT FIELD
         SPACE
         LA    RDATAD5,AVTHDRSZ-AVTTXTSZ(REXTN2,RDATAD5) YES, ADD
         TM    LCBSTAT1,LCBRECVN       RECEIVE OPERATION        SA53607
         BZ    TESTFIT                 NO, PROCEED              SA53607
         TM    SCBBSCFM,SCBDATEN       DATE/TIME REQUESTED      SA53607
         BZ    TESTFIT                 NO, PROCEED              SA53607
         LA    RDATAD5,EIGHT(RDATAD5)  YES, ADD FOR DATE/DIME   SA53607
         B     TESTFIT                    FROM EXTENT AND PROCEED
         SPACE
TEXT     EQU   *
         SR    R0,R0                    PICK
         IC    R0,AVTEZERO(,R15)         UP
         SLL   R0,SHIFT8                  OPTION
         IC    R0,ONE(,R15)                FIELD
         AR    RDATAD5,R0               ADD TO GET INITIAL OFFSET
*        B     TESTFIT                  PROCEED
         EJECT
TESTFIT  EQU   *
         LH    R0,PRFSIZE               PICK UP TOTAL
         N     R0,AVTCLRHI                DATA SIZE
         CR    RDATAD5,R0               IS 1ST OFFSET IN NEXT BFR
         BL    WILLFIT                  NO, GO SET INITIAL OFFSET
         BE    MIGHTFIT                 MAYBE, GO SEE
         SPACE
WONTFIT  EQU   *
         TM    PRFSTAT1,PRFNLSTN        YES, SEE IF LAST BUFFER
         BNO   GOODRTN                  IT IS, GO EXIT NOW
         SPACE
         SR    RDATAD5,R0               NO, SET INITIAL OFFSET FOR
         B     SETOPT                     NEXT BFR, GO SET OPT FLD
         SPACE
MIGHTFIT EQU   *
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST BUFFER
         BNO   WILLFIT                  YES, GO AHEAD AND INSERT
         SPACE
         SR    RDATAD5,RDATAD5          NO, WAIT TILL NEXT BUFFER
         B     SETOPT                   GO SET ZERO IN OPT FLD
         SPACE
WILLFIT  EQU   *
         ST    RDATAD5,INSOFF(,RPREFIX) SET INITIAL INSERT OFFSETS
         LH    R0,PARMAF                SET INSERT-DATA AND UNIT-
         STH   R0,AVTPARM+2               REQUEST INDICES IN AVT
*        B     MAINLOOP                 ENTER MAIN LOOP
         EJECT
MAINLOOP EQU   *
         MVI   AVTPARM+1,IDLEFLAG       ASSUME IDLES TO INSERT
         TM    PARMA8,IDLEFLAG          TEST IF IDLES TO INSERT
         BO    TESTSND                  YES                      S22025
         SPACE
         MVI   AVTPARM+1,AVTEZERO       INDICATE CHARACTERS INSERT
TESTSND  EQU   *                                                 S22025
         TM    LCBSTAT1,LCBSENDN        SEND                     S22025
         BO    MAIN2                    YES                      S22025
         TM    PARMA8,IDLEFLAG          IDLES SPECIFIED          S22025
         MVI   PRFXTRA,DATAIDLS         INDICATE IDLES           S22025
         BO    MAIN2                    YES                      S22025
         MVI   PRFXTRA,DATACHAR         INDICATE CHARACTERS      S22025
         SPACE
MAIN2    EQU   *
         L     R0,PARMINS               SET INSERT DATA DATA
         ST    R0,AVTPARM3                INTO AVT PARM AREA
         IC    R15,AVTPARM+3            GET UNIT-REQUEST INDEX
         BAL   R14,LINK                 GO LINK TO INSERT DATA
         SPACE
         MVI   AVTPARM+1,AVTEZERO       INDICATE CHARACTERS
         LH    RLIM8,PRFSIZE            GET TOTAL
         N     RLIM8,AVTCLRHI             DATA SIZE
         LA    RLIM8,ONE(,RLIM8)        POINT BEYOND LAST BYTE
         LH    R0,DATOFF(,RPREFIX)      GET CURRENT
         N     R0,AVTCLRHI                DATA OFFSET
         SR    RLIM8,R0                 SUBTRACT FOR RESIDUAL COUNT
         SPACE
         LTR   R15,R15                  TEST IF NO MORE UNITS
         IC    R15,AVTPARM+2            PICK UP IEDQAF INDEX
         LA    R15,ONE(,R15)            REQUEST SHIFT-DATA FUNCTION
         BNZ   URUNOUT                  NO MORE UNITS, BRANCH
         SPACE
         CR    RLIM8,REXTN2             CAN ANOTHER INSERT BE DONE
         BH    SHIFT                    YES, GO SHIFT
         BL    CLOSEUP                  NO, GO CLOSE UP
         SPACE
         TM    PRFSTAT1,PRFNLSTN        JUST AT END, IS IT LAST BFR
         BO    CLOSEUP                  NO, WAIT NEXT BFR, CLOSE UP
         SPACE
SHIFT    EQU   *
         LR    RLIM8,REXTN2             SET SHIFT LIMIT = EXTENT
         LA    R14,MAINLOOP             SET RETURN TO INSERT AGAIN
*                                       SHIFT TO NEXT INSERT POINT
         SPACE
LINK     EQU   *
         STC   R15,AVTPARM              SET ROUTINE INDEX
         LA    R1,AVTPARM               POINT TO PARAMETER LIST
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BR    R15                      LINK TO SUBROUTINE
         EJECT
URUNOUT  EQU   *
         OI    SCBERR1,SCBNOBFN         TURN ON NO-MORE-UNITS FLAG
         LTR   RLIM8,RLIM8              IS CLOSEUP NEEDED
         BZ    FINALSZE                 NO, BRANCH
         SPACE
CLOSEUP  EQU   *
         BAL   R14,LINK                 GO SHIFT TO END OF BUFFER
         SPACE
         SR    REXTN2,RLIM8             GET NEXT BFR INITIAL OFFSET
         SPACE
FINALSZE EQU   *
         LH    RDATAD5,DATOFF(,RPREFIX) GET CURRENT
         N     RDATAD5,AVTCLRHI           DATA OFFSET
         SH    RDATAD5,INSOFF(,RPREFIX) SUBTRACT TO GET TRUE OFFSET
         LR    R1,RDATAD5               SAVE IN CASE INCL HDR
         BCTR  RDATAD5,AVTEZERO         DECR TO POINT TO LAST BYTE
         STH   RDATAD5,PRFSIZE          SET AS FINAL DATA SIZE
         SPACE
TESTLAST EQU   *
         TM    PRFSTAT1,PRFNLSTN        IS THIS LAST BUEFFER
         BNO   TESTRTN                  NO, BRANCH
         SPACE
         LR    RDATAD5,REXTN2           PREPARE TO SET OPT FIELD
         SPACE
SETOPT   EQU   *
         STC   RDATAD5,ONE(,ROPT10)     SET INITIAL OFFSET FOR
         SRL   RDATAD5,SHIFT8             NEXT BUFFER INTO
         STC   RDATAD5,AVTEZERO(,ROPT10) OPTION FIELD
         SPACE
TESTRTN  EQU   *
         LA    R15,AVTECD4              SET ERROR RETURN CODE
         TM    SCBERR1,SCBNOBFN         DID WE RUN OUT OF UNITS
         BO    EXIT                     YES, RETURN WITH ERROR CODE
         SPACE
GOODRTN  EQU   *
         SR    R15,R15                  SET GOOD RETURN CODE
         SPACE
EXIT     EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
         EJECT
********* DSECTS *********
         SPACE
IEDQPARM DSECT
         SPACE
PARMA8   DS    XL1                      MULT INS AT OFFSET INDEX
PARMLEN  DS    XL1                      PARAMETER LIST LENGTH
PARMAF   DS    XL1                      INSERT DATA INDEX
PARMAO   DS    XL1                      UNIT REQUEST INDEX
PARMINS  DS    F                        INSERT DATA FIELD
PARMEXTN DS    H                        EXTENT BETWEEN INSERTS
PARMAE   DS    XL1                      LOCATE OPTION INDEX
PARMOPT  DS    XL1                      OPTION FIELD OFFSET
         EJECT
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TSCBD
         SPACE
         END
