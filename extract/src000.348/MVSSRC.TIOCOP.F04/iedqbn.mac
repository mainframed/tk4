IEDQBN   TITLE 'IEDQBN - DATA ATTACH ROUTINE'
IEDQBN   CSECT
*A568860                                                        SA54268
*D568900-569100,570100-676000                                  @SA70879
*A712000                                                       @SA70879
*A708000,C712400-712500                                        @SA74976
***********************************************************************
*                                                                     *
* TITLE 'IEDQBN' - DATA ATTACH ROUTINE                                *
*                                                                     *
* STATUS - CHANGE LEVEL 001                                           *
*                                                                     *
* FUNCTION - COMBINES DATA (ON HOLD QUEUE) WHICH COULD NOT BE         *
*    BE PROCESSED IN PREVIOUS BUFFER WITH CURRENT BUFFER TO BE        *
*    PROCESSED                                                        *
*                                                                     *
* ENTRY POINT - 'IEDQBN'                                              *
*    CALLING SEQUENCE -                                               *
*         L    R15,AVTUI                                              *
*         BALR R14,R15                                                *
*                                                                     *
* INPUT -                                                             *
*    EXPECTED REGISTER CONTENTS                                       *
*         USING R3,SCB ADDR                                           *
*         USING R4,LCB ADDR                                           *
*         USING R6,BUFFER DSECT                                       *
*         USING R9,AVT BASE                                           *
*    ADDRESS OF BN PARAMETER LIST PASSED IN R1                        *
*                                                                     *
* OUTPUT - BUFFER WITH THE COMBINED DATA                              *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*    IEDQAF - CLOSE UP DATA IN BUFFER                                 *
*                                                                     *
* EXITS,NORMAL - RETURN TO CALLER THRU UI; EXIT TO MH                 *
*                                                                     *
* EXITS,ERROR - N/A                                                   *
*                                                                     *
* TABLES/WORK AREAS -                                                 *
*    AVT - ADDRESS VECTOR TABLE                                       *
*    LCB - LINE CONTROL BLOCK                                         *
*    BUFFERS BEING PROCESSED                                          *
*                                                                     *
* ATTRIBUTES - REUSABLE,REENTRANT                                     *
*                                                                     *
* CHARACTER CODE DEPENDENCY - THE OPERATION OF THIS MODULE DOES NOT   *
*    DEPEND UPON AN INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER *
*    SET.                                                             *
* NOTES - N/A                                                         *
*                                                                     *
**********************************************************************
         EJECT
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        ADDR OF PARM LIST AT ENTRY
*                                       TIME; WORK REG
R2       EQU   2                        WORK REG
RSCB     EQU   3                        SCB ADDRESSABILITY
RLCB     EQU   4                        LCB ADDRESS
R5       EQU   5                        USED TO CONTAIN ADDRESS OF
*                                       CURRENT BFR
RPREFIX  EQU   6                        BUFFER ADDR
R7       EQU   7                        WORK REG
R8       EQU   8                        WORK REG
RAVT     EQU   9                        AVT ADDRESS
RPARM    EQU   10                       PARAMETER LIST ADDRESS
RSAVEB   EQU   11                       SAVE BFR REG
RBASE    EQU   12                       BASE REG
R13      EQU   13                       AVTSAVE REG
R14      EQU   14                       LINKAGE REG
R15      EQU   15                       LINKAGE REG
INC      EQU   1                        INCREMENT
AFOFF    EQU   2                        AF OFFSET
DISPB    EQU   4                        DISPLACEMENT
INSOFF   EQU   4                        INSERT OFFSET
ADOFF    EQU   5                        ADDR OFFSET
DATOFF   EQU   6                        DATA OFFSET
DISPA    EQU   13                       DISPLACEMENT
TWO      EQU   2                        CONSTANT
RET      EQU   X'01'                    FLAG IN BN INDEX TO INDICATE
*                                       RETURN TO CALLING MODULE
SEVEN    EQU   7                        DIFFERENCE BETWEEN HDR AND TXT
*                                       PREFIX SIZE
ANDLOW   EQU   X'FC'                    MASK TO CLEAR INDEX FLAGS
         USING IEDQBN01,RBASE
         USING IEDQAVTD,RAVT
         USING IEDQLCB,RLCB
         USING IEDQPRF,RPREFIX
         USING IEDQSCB,RSCB
IEDQBN01 EQU   *
IEDQBN   IEDHJN IDPASS
         LR    RPARM,R1                 PARM LIST ADDRESS
         LR    RSAVEB,RPREFIX           SAVE ORIGINAL BUFFER ADDR
         CLC   ADOFF(3,RPARM),AVTFZERO  ANY BFR'S Q'D?
         BE    CKEND2                   BR NO
HOLDQ    EQU   *                                                 HHW
         L     R5,DISPB(RPARM)          PREPARE TO
         LR    R8,RPARM                 SCAN HOLD Q
LOOP     EQU   *
         CLC   DISPA(3,R5),LCBSCBA      BFR ON Q FOR THIS SCB?
         BE    BFRDELNK                 BR YES
         CLC   ADOFF(3,R5),AVTFZERO     LAST BFR ON Q?
         BE    CKEND2                   YES
         LR    R8,R5                    PUT ADDR OF BFR IN R8
         L     R5,DISPB(R5)             BUMP TO NEXT BFR IN CHAIN
         B     LOOP                     BRANCH TO CHECK NEXT BFR
BFRDELNK EQU   *
         MVC   ADOFF(3,R8),ADOFF(R5)    PULL BFR OFF Q
         IC    R8,PRFNBUNT-IEDQPRF(R5)  PUT LCB ADDR
         ST    RLCB,PRFNBUNT-IEDQPRF(R5) BACK
         STC   R8,PRFNBUNT-IEDQPRF(R5)  IN BFR
         TM    PRFSTAT1,PRFNLSTN        IS CURRENT BFR THE EOT BFR?
         BO    CONT                     BR NO
         NI    PRFSTAT1-IEDQPRF(R5),PRFNLSTF  SET BFR FROM HOLD Q AS
*                                       EOT BFR
         B     CONT2                    BRANCH
CONT     EQU   *
         OI    PRFSTAT1-IEDQPRF(R5),PRFNLSTN  TURN OFF EOT
CONT2    EQU   *
         LR    R8,R5                    REVERSE POINTERS
         LR    R5,RPREFIX               R5 NOW POINTS TO CURRENT BFR
         LR    RPREFIX,R8               RPREFIX POINTS TO BFR PULLED
*                                       OFF HOLD Q
LOOP1    EQU   *
         CLC   PRFTIC+1-IEDQPRF(3,R8),LSTUNIT  LAST UNIT OF BFR
*                                       (FROM HOLD Q)?
         BE    FOUND                    BR YES
         L     R8,PRFTIC-IEDQPRF(R8)    LINK TO NEXT UNIT
         B     LOOP1                    BR BACK TO TEST THIS UNIT
FOUND    EQU   *
         IC    R7,PRFTIC-IEDQPRF(R8)    LINK CURRENT BFR (AS UNITS)
         ST    R5,PRFTIC-IEDQPRF(R8)    TO BFR PULLED OFF
         STC   R7,PRFTIC-IEDQPRF(R8)    THE HOLD Q
         MVC   PRFTIC(1),PRFTIC-IEDQPRF(R5)
         SR    R8,R8                    CLEAR REG
         IC    R8,PRFNBUNT              NO. UNITS IN BFR THAT WAS ON
*                                       HOLD Q
         MH    R8,AVTKEYLE              MULTIPLY BY KEYLEN
         SR    R7,R7                   CLEAR REGISTER
         IC    R7,PRFNBUNT-IEDQPRF(R5)  ADD NUMBER OF UNITS
         SR    R2,R2                     IN BUFFER ON HOLD Q
         IC    R2,PRFNBUNT               TO BUFFER JUST RECEIVED
         AR    R2,R7                            AND
         STC   R2,PRFNBUNT               UPDATE TOTAL COUNT
         TM    PRFSTAT1,PRFCNCLN        RECALLED BUFFER
         BO    CKEND2                   YES, DON'T ATTACH DATA
         CLC   AVTADBUF+1(3),SCBDEOB+1  IS THIS THE LAST EOB
         BNE   NOEOB                    NO, DON'T UPDATE
         IC    R7,SCBDEOB               UPDATE
         ST    RPREFIX,SCBDEOB          EOB BFR
         STC   R7,SCBDEOB               POINTER
         TM    PRFSTAT1,PRFNLSTN        IS THIS BUFFER LST      SA54268
         BO    NOTLSTBF                 BRANCH IF NO            SA54268
         IC    R7,LCBLSPCI-1            SAVE HI BYTE            SA54268
         ST    RPREFIX,LCBLSPCI-1       SET EOB BUFFER PTR      SA54268
         STC   R7,LCBLSPCI-1            RESET HI BYTE           SA54268
NOTLSTBF EQU   *                                                SA54268
         LH    R7,SCBEOB                GET EOB OFFSET
         N     R7,AVTCLRHI              CLEAR HIGH HALF
         LTR   R7,R7                    IS EOB OFFSET ZERO?
         BNZ   CALC                      BR NO
         SR    R7,R7                    CLEAR REG
         CLI   PRFSCAN,AVTEZERO         ISZE SAVED IN PRFSCAN?
         BE    SKIP1                    BR NO
         IC    R7,PRFSCAN               GET ISZE
         B     CONT3                    BRANCH
SKIP1    EQU   *
         L     R7,LCBDCBPT              DCB ADDR
         TM    PRFSTAT1,PRFNHDRN        HDR BFR?
         BO    NOTHDR3                  BR NO
         IC    R7,DCBRESER-IHADCB(R7)   NO. OF HDR RESERVES
         B     CONT3                    BRANCH
NOTHDR3  EQU   *
         IC    R7,DCBRESER+1-IHADCB(R7) NO. OF TXT RESERVES
CONT3    EQU   *
         LA    R7,AVTTXTSZ(R7)          ADD PREFIX SIZE
         TM    PRFSTAT1,PRFNHDRN        HDR BFR?
         BO    NOTHDR4                  BR NO
         LA    R7,SEVEN(R7)             ADD SEVEN
NOTHDR4  EQU   *
         CH    R7,PRFSIZE               DOES BFR FROM HOLD Q HAVE
*                                       ANY DATA?
         BNE   CALCEOB                  BR YES
         SR    R7,R7                    ZERO REG
         B     SAVE                     BRANCH
CALCEOB  EQU   *
         LH    R7,PRFSIZE               SAVE VALUE
         N     R7,AVTCLRHI              FOR EOB OFFSET
         B     SAVE                     AFTER SHIFT BY AF
CALC     EQU   *
         SR    R1,R1                    CLEAR REG
         IC    R1,LCBISZE               NO. RESERVES IN NEW BFR
         LA    R1,AVTTXTSZ(R1)          PLUS PREFIX SIZE
         TM    PRFSTAT1-IEDQPRF(R5),PRFNHDRN  HDR BFR?
         BO    NOTHDR2                  BR NO
         LA    R1,SEVEN(,R1)            ADD TO SIZE
NOTHDR2  EQU   *
         SR    R7,R1                    CALCULATE NEW
         AH    R7,PRFSIZE               EOB OFFSET
SAVE     EQU   *
         STH   R7,PRFXTRA+1             SAVE EOB OFFSET AFTER SHIFT
NOEOB    EQU   *
         ST    RPREFIX,AVTADBUF         UPDATE ADBUF
         CLI   PRFSCAN,AVTEZERO         ISZE SAVED IN PRFSCAN?
         BE    SKIP                     BR NO
         IC    R2,PRFSCAN               ELSE, GET ISZE AND
         MVI   PRFSCAN,AVTEZERO         ZERO HIGH ORDER BYTE
*                                       OR PRFSCAN
         B     CONT1                    BRANCH
SKIP     EQU   *
         L     R2,LCBDCBPT              GET DCB ADDR
         TM    PRFSTAT1,PRFNHDRN        HDR BFR?
         BO    NOTHDR1                  BR NO
         IC    R2,DCBRESER-IHADCB(R2)   NO. OF HDR RESERVES
         B     CONT1
NOTHDR1  EQU   *
         IC    R2,DCBRESER+1-IHADCB(R2)  NO. OF TEXT RESERVES
CONT1    EQU   *
         SR    R1,R1                    CLEAR REG              @SA74976
         IC    R1,LCBISZE               PICK UP ORIG SIZE      @SA74976
         STC   R2,LCBISZE               SET LCBISZE
         LH    R7,PRFSIZE-IEDQPRF(R5)   LOAD DATA SIZE         @SA70879
         LTR   R7,R7                    ZERO LENGTH?           @SA70879
         BZ    CKEND2                   BRANCH YES             @SA70879
         LR    R7,R1                    SET ISIZE              @SA74976
         LA    R7,AVTTXTSZ(R7)          ADD TEXT BUFFER HDR SIZ@SA70879
         TM    PRFSTAT1-IEDQPRF(R5),PRFNHDRN HEADER BUFFER?    @SA70879
         BO    TXTBUFF                  BRANCH NO              @SA70879
         LA    R7,SEVEN(,R7)            INCREASE TO HEADER SIZE@SA70879
TXTBUFF  EQU   *                                               @SA70879
         AR    R8,R7                    END OF LAST UNIT       @SA70879
         LA    R8,INC(R8)               BUMP BY ONE            @SA70879
         STH   R8,DATOFF(RPREFIX)       STORE OFFSET           @SA70879
         BCTR  R8,0                     SUBTRACT ONE           @SA70879
         SH    R8,PRFSIZE               SUBTRACT PRFSIZE IN BFR@SA70879
         STH   R8,INSOFF(RPREFIX)       FROM HOLDQ FOR INSRT   @SA70879
         LH    R8,PRFSIZE-IEDQPRF(R5)   CALCULATE AMOUNT       @SA70879
         N     R8,AVTCLRHI              OF DATA TO             @SA70879
         SR    R8,R7                    BE SHIFTED             @SA70879
         LR    R2,R8                    AMOUNT TO SHIFT        @SA70879
         AH    R2,PRFSIZE               PLUS PRFSIE OF BFR FROM@SA70879
*                                       HOLD Q GIVES           @SA70879
         STH   R2,PRFSIZE               NEW TOTAL PRFSZE       @SA70879
*                                       OF CREATED BUFFER      @SA70879
         IC    R2,AFOFF(RPARM)          AF INDEX IN
         LA    R2,INC(R2)               AVTPARM WITH
         STC   R2,AVTPARM               X'01'
         LA    R1,AVTPARM               EXIT TO
         L     R15,AVTMSGS-1            GET ADDR OF VCON TABLE   S22025
         IC    R14,AVTEZERO(,R1)        GET INDEX TO ROUT ADDR   S22025
         LA    R0,ANDLOW                SET UP MASK              S22025
         NR    R14,R0                   CLEAR INDEX FLAGS        S22025
         L     R15,AVTEZERO(R15,R14)    GET AF ADDRESS           S22025
         BAL   R14,DISPB(R15)           BRANCH TO IEDQAF         S22025
         CLC   AVTADBUF+1(3),SCBDEOB+1   EOB BFR?
         BNE   CKEND1                   BRNO
         MVC   SCBEOB(2),PRFXTRA+1      SET EOB OFFSET
CKEND1   EQU   *
         LR    R1,RPREFIX               INITIALIZE FOR LOOP WITH FIRST
*                                       UNIT ADDR
         LR    R8,RPREFIX               SAVE ADDR
         SR    R2,R2                    CLEAR REG
         SR    R7,R7                    CLEAR REG
         IC    R7,PRFNBUNT              NO. OF UNITS
         LH    R5,PRFSIZE               SIZE OF BFR
         N     R5,AVTCLRHI              CLEAR HIGH ORDER BYTES
         B     COMPARE1                 BRANCH
COMPARE  EQU   *
         L     R8,PRFTIC-IEDQPRF(R8)    INCREMENT TO NEXT UNIT
COMPARE1 EQU   *
         L     R1,PRFTIC-IEDQPRF(R1)    BUMP TO NEXT UNIT
         LA    R2,INC(0,R2)             COUNT UNITS WITH DATA
         SH    R5,AVTKEYLE              DECREMENT BY KEYLEN
         BP    COMPARE                  BRANCH IF MORE UNITS CONTAIN
*                                       DATA
         STC   R2,PRFNBUNT              NO. OF DATA UNITS
         CR    R2,R7                    ALL UNITS HAVE DATA
         BE    CKEND2                   BR YES
         SR    R7,R2                    NO. OF UNITS
         STC   R7,PRFNBUNT-IEDQPRF(R1)   TO FREE
         LR    R2,R1                    ADDR OF FIRST UNIT TO BE
*                                       RETURNED
         B     COMPARE2                 BRANCH
NOTLAST  EQU   *
         L     R2,PRFTIC-IEDQPRF(R2)    BUMP TO NEXT UNIT
COMPARE2 EQU   *
         BCT   R7,NOTLAST               BRANCH IF NOT LAST UNIT
         MVC   PRFTIC+1-IEDQPRF(3,R8),PRFTIC+1-IEDQPRF(R2) MOVE TIC
*                                       ADDR OF LAST UNIT TO BE
*                                       RETURNED INTO LAST UNIT OF BFR
         LA    R5,AVTBFRTB              BFR RETURN QCB
         MVI   PRFPRI-IEDQPRF(R1),PRIBFRTB  PRIORITY
         ST    R5,PRFQCBA-1-IEDQPRF(R1) DEST Q ADDR IN ELEMENT
         LR    R2,R13                   SAVE REG
         LA    R13,AVTSAVE2             ADDR OF SAVE2
         LR    R5,RSAVEB                SAVE REG
         USING IEDQDISP,RSAVEB
         L     RSAVEB,AVTEA             BRANCH TO
         BAL   R14,DSPPOSTR             DISPATCHER AND RETURN
         LR    R13,R2                   RESTORE REG
         DROP  RSAVEB
         LR    RSAVEB,R5                RESTORE REG
CKEND2   EQU   *
         TM    0(RPARM),RET             RETURN TO CALLER?
         BO    CKEND                    BR YES
         LR    RPREFIX,RSAVEB           RESTORE ORIGINAL BUFFER
         SR    R15,R15                  CLEAR REG
         IC    R15,INC(RPARM)           GET LNG OF BN PARM LIST
         LA    R1,0(R15,RPARM)          BUMP TO NEXT PARM LIST
         IC    R15,0(R1)                GET NEXT INDEX
         SRL   R15,TWO                  INSURE LOW TWO BITS
         SLL   R15,TWO                  ARE OFF
         L     RBASE,AVTMSGS-1          LOAD MH VCON TABLE ADDR
         L     RBASE,0(R15,RBASE)       LOAD MODULE ADDR
         BR    RBASE                    EXIT
         SPACE
RESET    EQU   *
         ST    RPREFIX,AVTADBUF        REST BUFFER ADDRES FOR MH
         MVC   SCBEOB(2),PRFSIZE       RESET EOB OFFSET
         B     CKEND2                   EXIT TO MH
         SPACE
CKEND    EQU   *
         LR    R1,RPARM                 RETURN
         L     R14,AVTUI                TO
         B     DISPB(R14)               CALLER
LSTUNIT  DC    X'000002'                INDICATES LAST UNIT IN BFR
         TAVTD
         TDISPD
         TPRIOR
         TSCBD
         TLCBD
         TPRFD
         DCBD  DSORG=TX
         END
