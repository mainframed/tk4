A201     TITLE '''IEDQA2'' - INSERT AT OFFSET ROUTINE'
IEDQA2   CSECT
*A375000                                                        SA53607
*A225000,480000                                                  S22025
*C283000,715000                                                  S22025
*A435000                                                         A42418
*C283000,355000                                                  A42418
*D405000                                                         A42418
*D441000-445000,686400-690000,697000                            SA58444
*A205000,228000,605000                                         @OY12644
         SPACE
***********************************************************************
*STATUS -- CHANGE LEVEL 0                                             *
*                                                                     *
*FUNCTION -- INSERTS DATA AT A USER-SPECIFIED OFFSET INTO THE         *
*   MESSAGE.                                                          *
*                                                                     *
*   THE INSERT OFFSET IS ACCESSED FROM THE PARAMETER LIST OR,  IF     *
*   THE INSERT IS AT THE SCAN POINTER,  FROM THE PREFIX FIELD         *
*   PRFSCAN                                                           *
*                                                                     *
*   IF THE OFFSET IS GREATER THAN THE BUFFER SIZE,  THE FUNCTION IS   *
*   NOT PERFORMED AND CONTROL RETURNS TO THE CALLER.                  *
*                                                                     *
*   A LINK IS MADE TO THE UNIT REQUEST INTERFACE (IEDQAO) TO INSERT   *
*   THE DATA IN THE BUFFER.  IF THERE IS LOGICALLY EMPTY SPACE        *
*   REMAINING IN THE BUFFER AFTER THE INSERT,  A LINK IS MADE TO      *
*   THE INSERT DATA ROUTINE (IEDQAF) TO SHIFT THE SPACE TO THE END    *
*   OF THE BUFFER.  THE FINAL DATA SIZE IS COMPUTED AND SET IN THE    *
*   FIELD PRFSIZE IN THE PREFIX.  RETURN IS MADE TO THE CALLER.       *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQA201' TO INSERT DATA IN THE BUFFER.  CALLING SEQUENCE    *
*   FROM USER INTERFACE IS:                                           *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 - THE ADDRESS OF A MACRO-GENERATED PARAMETER LIST.     *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        * INDEX * PARM  * INDEX * INDEX *                            *
*        *  TO   *  LIST *  TO   *  TO   *                            *
*        *   A2  * LNGTH *   AF  *   AO  *                            *
*        *********************************                            *
*        *                               *                            *
*        *          INSERT DATA          *                            *
*        *                               *                            *
*        *********************************                            *
*        *    INSERT     *                                            *
*        *     OFFSET    *                                            *
*        *  (OPTIONAL)   *                                            *
*        *****************                                            *
*                                                                     *
*        INSERT DATA WORD                                             *
*                                                                     *
*        *********************************                            *
*        *LENGTH *      ADDRESS OF       *   DATA =                   *
*        *  OF   *   CHARACTER STRING    *     CHARACTER STRING       *
*        * STRING*                       *                            *
*        *********************************                            *
*                                                                     *
*        *********************************                            *
*        * NO.   * IDLE  *               *   DATA =                   *
*        *  OF   *  CHAR *   (UNUSED)    *     IDLES                  *
*        * IDLES *       *               *                            *
*        *********************************                            *
*                                                                     *
*        A2 INDEX BYTE: X'01' OFF - DATA = CHARACTER STRING           *
*                       X'01' ON - DATA = IDLES                       *
*                                                                     *
*   REGISTER 3 - ADDRESS OF SCB                                       *
*                                                                     *
*   REGISTER 4 - ADDRESS OF LCB                                       *
*                                                                     *
*   REGISTER 6 - ADDRESS OF THE BUFFER                                *
*                                                                     *
*   REGISTER 9 - ADDRESS OF THE AVT                                   *
*                                                                     *
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE FOR THIS ROUTINE       *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - RETURN CODE.  CONTAINS X'00' IF DATA HAS BEEN       *
*   INSERTED OR X'04' IF NO EMPTY UNITS ARE AVAILABLE.                *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQAF' - INSERT DATA ROUTINE                                    *
*                                                                     *
*   'IEDQAO' - UNIT REQUEST INTERFACE                                 *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED                                  *
*                                                                     *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*   LCB - LINE CONTROL BLOCK                                          *
*                                                                     *
*EXITS,  NORMAL -- REQUESTED DATA HAS BEEN INSERTED IN THE BUFFER.    *
*   REGISTER 15 CONTAINS A RETURN CODE OF X'00'.                      *
*                                                                     *
*EXITS,  ERROR -- NO EMPTY UNITS ARE AVAILABLE.  REGISTER 15          *
*   CONTAINS A RETURN CODE OF X'04'.                                  *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE,  REFRESHABLE, ENABLED,  RESIDENT,   *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTE -- THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      *
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    *
*   BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        *
*   DEFINITIONS.                                                      *
*                                                                     *
*******************************************************************   *
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST ADDRESS
         SPACE
RWORK    EQU   2                        WORK REGISTER
         SPACE
RSCB     EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
         SPACE
RDATAD   EQU   5                        DATA OFFSET REGISTER
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE
RSIZE    EQU   7                        RESIDUAL COUNT REGISTER
         SPACE
RNEW     EQU   8                        NEW UNIT ADDRESS
RLIM     EQU   8                        SHIFT LOOP LIMIT
         SPACE
RAVT     EQU   9                        AVT ADDRESS
         SPACE
RLOCRTN  EQU   10                       LOCAL RETURN REGISTER
         SPACE
RBASE    EQU   12                       ENTRY POINT ADDRESS AND
*                                         BASE REGISTER
         SPACE
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
INSOFF   EQU   4                        OFFSET TO INSERT OFFSET
FOUR     EQU   4                        OFFSET USED ON RETURN    S22025
DATOFF   EQU   6                        OFFSET TO DATA OFFSET
         SPACE
ONE      EQU   1                        INCREMENT VALUE OF ONE
TWO      EQU   2                        CONSTANT               @OY12644
EIGHT    EQU   8                        LNG OF INS AT SCAN PARMLIST
         SPACE
LINKFLAG EQU   X'01'                    LINK REQUEST FLAG
SHIFFLAG EQU   X'01'                    SHIFT REQUEST FLAG
DATALPHA EQU   X'80'                    DATA=CHARACTERS          S22025
HEXDATA  EQU   X'40'                    DATA=IDLES               S22025
IDLEFLAG EQU   X'01'                                             S22025
BFREDIT  EQU   X'40'                    DATA MOVEMENT FLAG     @OY12644
         EJECT
         USING IEDQPRF,RPREFIX
         USING IEDQPARM,R1
         USING IEDQAVTD,RAVT
         USING IEDQLCB,RLCB4
         USING IEDQSCB,RSCB
         USING IEDQA2,RBASE
         SPACE
IEDQA201 EQU   *
IEDQA2   IEDHJN INSATOFF                MODULE ID                S22025
         LH    RSIZE,PRFSIZE            GET DATA SIZE
         N     RSIZE,AVTCLRHI           IS THIS A ZERO-LENGTH BFR
         LA    R15,AVTECD4              ASSUME YES
         BZ    ABEXIT                   ZERO-LNG BFR, EXIT NOW
         SPACE
         CLI   PARMLEN,EIGHT            IS INSERT AT SCAN POINTER
         BE    OFFSCAN                  YES, GO LOAD SCAN POINTER
         SPACE
         LH    RDATAD,PARMOFF           SET UP OFFSET REGISTER
         N     RDATAD,AVTCLRHI
         IC    R15,LCBISZE              PICK UP NO. RESERVE CHARS
         LA    RDATAD,AVTTXTSZ(R15,RDATAD) ADD LNG OF TEXT PRFX  A42418
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HEADER BUFFER
         BO    COMPSIZE                 NO, OFFSET IS GOOD
         SPACE
         LA    RDATAD,AVTHDRSZ-AVTTXTSZ(,RDATAD) YES, ADD EXTRA
         TM    LCBSTAT1,LCBRECVN       RECEIVE OPERATION        SA53607
         BZ    COMPSIZE                NO, PROCEED              SA53607
         TM    SCBBSCFM,SCBDATEN       DATE/TIME REQUESTED      SA53607
         BZ    COMPSIZE                NO, PROCEED              SA53607
         LA    RDATAD,EIGHT(RDATAD)    YES, ADD FOR DATE/DIME   SA53607
         B     COMPSIZE                 GO TEST AGAINST BUFFER SIZE
         SPACE
OFFSCAN  EQU   *
         LH    RDATAD,PRFSCAN           PICK UP SCAN POINTER
         N     RDATAD,AVTCLRHI
         SPACE
COMPSIZE EQU   *
         CR    RDATAD,RSIZE             IS OFFSET GT SEG SIZE
         LA    R15,AVTECD4              ASSUME YES
         BH    EXIT                     YES, RETURN TO CALLER
         SPACE
         LA    RDATAD,ONE(,RDATAD)      ADD ONE FOR INSERT OFFST A42418
         ST    RDATAD,INSOFF(,RPREFIX)  SET UP INITIAL OFFSETS
BILDPARM EQU   *
         IC    R15,PARMFLAG             PICK UP INDEX BYTE
         LA    RWORK,ONE                PICK UP MASK
         NR    R15,RWORK                CLEAR ALL BUT DATA FLAG
         STC   R15,AVTPARM+1            SET DATA TYPE IN PARM LIST
         L     RWORK,PARMINS            GET DATA DATA
         ST    RWORK,AVTPARM3           SET IN PARM LIST
         TM    LCBSTAT1,LCBSENDN        SEND                     S22025
         BO    DATACHAR                 YES                      S22025
         MVI   PRFXTRA,DATALPHA         ASSUME DATA=CHARACTERS   S22025
         TM    AVTPARM+1,IDLEFLAG       IDLES                    S22025
         BZ    DATACHAR                 NO                       S22025
         MVI   PRFXTRA,HEXDATA          YES                      S22025
DATACHAR EQU   *                                                 S22025
         SPACE
         LA    RLOCRTN,TESTRTN          SET EXIT TO TEST RETURN
         IC    R15,PARMAF               PICK UP IEDQAF INDEX
         STC   R15,AVTPARM+2            SET IN PARAMETER LIST
         IC    R15,PARMAO               PICK UP IEDQAO INDEX
         SPACE
LINK     EQU   *
         STC   R15,AVTPARM              SET IN PARAMETER LIST
         LR    RWORK,R1                 SAVE IEDQA2 PARAMETER LIST
         LA    R1,AVTPARM               POINT TO IEDQAO'S PARM LIST
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BALR  R14,R15                  LINK TO IEDQAO
         SPACE
         LR    R1,RWORK                 RESET IEDQA2 PARM LIST
         BR    RLOCRTN                  RETURN TO (LOCAL) CALLER
         SPACE
TESTRTN  EQU   *
         LTR   R15,R15                  TEST IF INSERT MADE
         BNZ   EXIT                     NO, NO MORE UNITS, EXIT
         SPACE
         CLI   INSOFF+1(RPREFIX),AVTEZERO ANY LOGICAL GARBAGE LEFT
         BE    FINALSZE                 NO, NO CLOSEUP NEEDED, EXIT
         SPACE
         LH    RLIM,PRFSIZE             PICK UP TOTAL DATA SIZE
         N     RLIM,AVTCLRHI
         TM    LCBSTAT1,LCBSENDN        SENDING?               @OY12644
         BO    NOSET                    BRANCH IF YES          @OY12644
         OI    PRFTQBCK+TWO,BFREDIT     INDICATE DATA MOVEMENT @OY12644
NOSET    EQU   *                                               @OY12644
         LA    RLIM,ONE(,RLIM)          POINT BEYOND DATA
         LH    R0,DATOFF(,RPREFIX)      PICK UP DATA OFFSET
         N     R0,AVTCLRHI
         SR    RLIM,R0                  SET LIMIT REG = RESIDUAL CT
         SPACE
         MVI   AVTPARM+1,AVTEZERO       INDICATE DATA = CHARS
         IC    R15,PARMAF               PICK UP IEDQAF INDEX
         LA    R15,SHIFFLAG(,R15)       SET SHIFT REQUEST FLAG
         BAL   RLOCRTN,LINK             GO SHIFT DATA
         SPACE
FINALSZE EQU   *
         LH    RDATAD,DATOFF(,RPREFIX)  PICK UP FINAL DATA OFFSET
         N     RDATAD,AVTCLRHI
         SH    RDATAD,INSOFF(,RPREFIX)  SUBTRACT LEFTOVER GARBAGE
         LR    R1,RDATAD                SAVE IN CASE INCL HDR
         BCTR  RDATAD,AVTEZERO          POINT TO LAST BYTE OF DATA
         STH   RDATAD,PRFSIZE           SET AS FINAL DATA SIZE
         SPACE
EXIT     EQU   *
         SPACE
ABEXIT   EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
         EJECT
********* DSECTS *********
         SPACE
IEDQPARM DSECT
         SPACE
PARMFLAG DS    XL1                      OFFSET FLAGS
PARMLEN  DS    XL1                      PARAMETER LIST LENGTH
PARMAF   DS    XL1                      IEDQAF VCON TABLE OFFSET
PARMAO   DS    XL1                      IEDQAO VCON TABLE OFFSET
PARMINS  DS    A                        ADDRESS OF INSERT DATA
PARMOFF  DS    H                        OFFSET
         EJECT
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TSCBD
         END
