AC01     TITLE '''IEDQAC'' - DATETIME ROUTINE'
IEDQAC   CSECT
***********************************************************************
*A412000                                                         S22025
*C465000-471000,612000-615000,090000                             S22025
*D207000-219000                                                  S22025
*                                                                     *
*STATUS -- CHANGE LEVEL 0                                             *
*                                                                     *
*FUNCTION --                                                          *
*   INSERTS THE DATE,  THE TIME,  OR BOTH INTO THE BUFFER.            *
*                                                                     *
*   THE PREFIX SCAN POINTER (PRFSCAN) IS ACCESSED AND A LINK IS       *
*   MADE TO THE ADDRESS FINDER ROUTINE (IEDQAL) TO GET THE ADDRESS    *
*   OF THE SCAN POINTER.  INSERTION OF DATA IS TO START HERE.         *
*                                                                     *
*   IF THE TIME,  OR THE DATE AND TIME,  IS REQUESTED,  THE ROUTINE   *
*   ISSUES A TIME MACRO (SVC 11).  IF THE DATE ONLY IS REQUESTED,     *
*   IT IS ACCESSED FROM THE COMMUNICATION VECTOR TABLE (CVT).         *
*                                                                     *
*   IF THE DATE IS REQUESTED,  THE DATA RETURNED BY THE TIME MACRO    *
*   OR ACCESSED FROM THE CVT IS PLACED IN THE AVT WORK AREA           *
*   (AVTDOUBL),  WHERE IT IS ARRANGED INTO THE FORMAT YYPDDD, WHERE   *
*   YY IS THE LAST TWO BYTES OF THE YEAR,  DDD THE THREE-DIFIT        *
*   NUMBER OF THE DAY AND P A PERIOD.  THE SUBROUTINE NAMED LOOP      *
*   IS THEN ENTERED.  THIS SUBROUTINE INSERTS AN INITIAL BLANK AT     *
*   THE SCAN POINTER,  THEN LINKS REPEATEDLY TO THE BUFFER STEP       *
*   ROUTINE (IEDQAX) TO RETURN THE ADDRESS OF EACH SUCCESSIVE BYTE    *
*   AND INSERTS THE FORMATTED DATA FROM AVTDOUBL A BYTE AT A TIME     *
*   UNTIL ALL OF THE DATA HAS BEEN INSERTED.                          *
*                                                                     *
*   IF THE DATE ONLY IS REQUESTED,  THE ROUTINE RETURNS TO THE        *
*   MESSAGE HANDLER VIA THE RETURN INTERFACE ROUTINE             S22025
*   OTHERWISE THE TIME IS PROCESSED.                                  *
*                                                                     *
*   IF THE TIME IS REQUESTED,  THE TIME DATA RETURNED BY THE TIME     *
*   MACRO IS PLACED IN AVTDOUBL,  WHERE IT IS ARRANGED INTO THE       *
*   FORMAT HHPMMPSS,  WHERE HH IS THE HOUR,  MM IS THE MINUTES,  SS   *
*   ENTERED TO PLACE THE FORMATTED DATA IN THE BUFFER.  THE ROUTINE   *
*   THEN RETURNS TO THE MESSAGE HANDLER VIA THE RETURN INTERFACE      *
*   ROUTINE.                                                          *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAC01' TO PLACE THE DATE AND/OR THE TIME INTO THE         *
*   BUFFER.  CALLING SEQUENCE IS:                                     *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 -- THE ADDRESS OF A MACRO-GENERATED PARAMETER LIST.    *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        *       * PARAM *   LENGTH OF   *                            *
*        * INDEX * LIST  *     INSERT    *                            *
*        *       *  LNG  *      DATA     *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 6 -- ADDRESS OF THE BUFFER.                              *
*                                                                     *
*   REGISTER 9 -- ADDRESS OF THE AVT.                                 *
*                                                                     *
*   REGISTER 12 -- ENTRY POINT ADDRESS AND BASE REGISTER.             *
*                                                                     *
*OUTPUT --                                                            *
*   THE BUFFER CONTAINS THE FORMATTED DATE AND/OR TIME.               *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*                                                                     *
*   AVT -- ADDRESS VECTOR TABLE.                                      *
*                                                                     *
*   CVT -- COMMUNICATION VECTOR TABLE.                                *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED.                                 *
*                                                                     *
*EXITS,  NORMAL --                                                    *
*   THE BUFFER CONTAINS THE FORMATTED DATE AND/OR TIME.               *
*                                                                     *
*EXITS,  ERROR -- N/A.                                                *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL       *
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             *
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      *
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    *
*   BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        *
*   DEFINITIONS.                                                      *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        TIME REGISTER
         SPACE
R1       EQU   1                        DATE REGISTER
         SPACE
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RWORK3   EQU   3                        WORK REGISTER
         SPACE
RSCAN    EQU   5                        ADDRESS OF SCAN POINTER
         SPACE
RPREFIX  EQU   6                        ADDRESS OF BUFFER
         SPACE
RUNIT    EQU   7                                                 S22025
         SPACE
RX       EQU   8                        INDEX REGISTER
         SPACE
RAVT     EQU   9                        ADDRESS OF AVT
         SPACE
RRET     EQU   10                       LOCAL RETURN REGISTER
RKEYLE   EQU   11                                                S22025
         SPACE
RBASE    EQU   12                       ENTRY POINT REGISTER
*                                         AND BASE REGISTER
         SPACE
R13      EQU   13                       ADDRESS OF SAVE AREA
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
PARMLEN  EQU   1                        INSERT LENGTH
         SPACE
DATELEN  EQU   7                        LENGTH OF DATE FIELD INBFR
BOTHLEN  EQU   16                       LENGTH OF BOTH DATE & TIME
         SPACE
PTLEN    EQU   4                        LENGTH OF TIME PACKED
FOUR     EQU   4                        OFFSET USED ON RETURN    S22025
PDLEN    EQU   3                        LENGTH OF DATE PACKED
UTLEN    EQU   7                        LENGTH OF TIME UNPACKED
UDLEN    EQU   5                        LENGTH OF DATE UNPACKED
         SPACE
INC      EQU   1                        INCREMENT VALUE
         SPACE
INSDLEN  EQU   5                        INSERT LENGTH FOR DATE
INSTLEN  EQU   7                        INSERT LENGTH FOR TIME
         SPACE
BYTELEN  EQU   8                        SHIFT FACTOR FOR ONE BYTE
         EJECT
         USING IEDQAVTD,RAVT
         USING IEDQPRF,RPREFIX
         USING IEDQAC,RBASE
         SPACE
IEDQAC01 EQU   *
IEDQAC   IEDHJN DATETIME                ID AND DATE              S22025
         LR    RWORK3,R1                SET NEW PARAM REG
         LH    RSCAN,PRFSCAN            GET SCAN POINTER OFFSET
         N     RSCAN,AVTCLRHI           CLEAR TOP HALF OF REGSIETR
         IC    R15,PARMLEN(,RWORK3)     PICK UP INSERT LENGTH
         BCTR  R15,AVTEZERO             DECREMENT BY ONE
         SR    RSCAN,R15                POINT TO START OF
*                                         INSERT AREA
         LR    R15,RSCAN               SET SCAN OFFSET           S22025
         LH    RKEYLE,AVTKEYLE         INITIALIZE FOR SCAN       S22025
         LR    RUNIT,RPREFIX           COPY BFR ADDR AS UNIT     S22025
         LR    RX,R15                   SAVE CONTENTS OF REG 15  S22025
         SPACE
         CLI   PARMLEN(RWORK3),DATELEN  DATE ONLY REQUESTED
         BE    DATEONLY                 YES, GO PROCESS
         SPACE
         TIME  DEC                      NO, GET TIME AND DATE
         LR    R15,RX                   RESTORE CONT OF REG 15   S22025
         SPACE
         CLI   PARMLEN(RWORK3),BOTHLEN  BOTH TIME & DATE REQUESTED
         BNE   FORMTIME                 NO, DO TIME ONLY
         BAL   RRET,PROCDATE            YES, LINK TO DO DATE
         SPACE
         SPACE
* THE FOLLOWING INSTRUCTIONS UNPACK THE TIME,FORMAT IT INTO THE
* BUFFER, UPDATE THE SCAN POINTER AND RETURN TO THE CALLER
         SPACE
FORMTIME EQU   *
         ST    R0,AVTDOUBL              STORE TIME INTO WORK AREA
         UNPK  AVTDOUBL(UTLEN),AVTDOUBL(PTLEN) UNPACK TIME
         SPACE
         LH    RWORK2,AVTDOUBL+4        MOVE SECONDS
         STH   RWORK2,AVTDOUBL+6          TO RIGHT
         LH    RWORK2,AVTDOUBL+2        PICK UP MINUTES
         STC   RWORK2,AVTDOUBL+4        STORE 2ND BYTE
         SRL   RWORK2,BYTELEN           SHIFT AND
         STC   RWORK2,AVTDOUBL+3          STORE 1ST BYTE
         MVI   AVTDOUBL+2,AVTEPER       STORE PERIODS
         MVI   AVTDOUBL+5,AVTEPER         IN TIME
         SPACE
         LA    RWORK3,INSTLEN           SET DATA COUNT
         BAL   RRET,LOOP                GO INSERT TIME
         SPACE
RETURN   EQU   *
         SR    R15,R15                  SET GOOD RETURN CODE
         L     RBASE,AVTUI              GET RETURN ADDRESS       S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
         SPACE
* THE FOLLOWING INSTRUCTIONS ACCESS THE DATE FROM THE CVT, LINK TO
* UNPACK AND FORMAT THE DATE INTO BUFFER, AND LINK TO RETURN TO THE
* CALLER.
         SPACE
DATEONLY EQU   *
         L     R1,CVTPTR                GET ADDR OF CVT
         USING IEDQCVTD,R1
         L     R1,CVTDATE               GET DATE FROM CVT
         DROP  R1
         SPACE
         LA    RRET,RETURN              GO PROCESS DATE
         SPACE
* THE FOLLOWING INSTRUCTIONS CONSTITUTE AN INTERNAL SUBROUTINE THAT
* UNPACKS THE DATE, FORMAT IT INTO THE BUFFER, UPDATE THE SCAN
* POINTER AND RETURN TO THE (LOCAL) CALLER.
         SPACE
PROCDATE EQU   *
         ST    R1,AVTDOUBL
         UNPK  AVTDOUBL(UDLEN),AVTDOUBL+1(PDLEN) UNPACK DATE
         SPACE
         LM    RWORK2,RWORK3,AVTDOUBL   PICK UP DATE
         SRDL  RWORK2,BYTELEN           SHIFT RIGHT
         ST    RWORK3,AVTDOUBL+4        STORE BACK 2ND HALF
         STH   RWORK2,AVTDOUBL+2        STORE BACK REST OF DAY
         MVI   AVTDOUBL+2,AVTEPER       INSERT PERIOD
         SPACE
         LA    RWORK3,INSDLEN           SET DATA COUNT
         SPACE
LOOP     EQU   *
         SR    RX,RX                    INITIALIZE INDEX TO 0
         LA    RWORK2,INC               SET INCREMENT REG TO 1
         B     ADDR                     BRANCH TO GET ADDRESS    S22025
NXTUNIT  EQU   *                                                 S22025
         SR    R15,RKEYLE                                        S22025
         L     RUNIT,PRFTIC-IEDQPRF(RUNIT)   GET NEXT UNIT ADDR  S22025
ADDR     EQU   *                                                 S22025
         CR    R15,RKEYLE                                        S22025
         BH    NXTUNIT                  YES,GET NEXT UNIT ADDR.  S22025
         LA    RSCAN,AVTUMALN-1(R15,RUNIT)   GET DATA ADDR       S22025
         MVI   AVTEZERO(RSCAN),AVTEBLNK SET INITIAL BLANK
         SPACE
LOOP1    EQU   *
         IC    R14,AVTDOUBL(RX)         MOVE DATA BYTE
         LA    R15,INC(R15)            BUMP UNIT OFFSET          S22025
         CR    R15,RKEYLE              IS IT OUT-OF-UNIT         S22025
         BNH   STC                     NO, INSERT FIRST/NXT BYTE S22025
         L     RUNIT,PRFTIC-IEDQPRF(RUNIT)   GET NEXT UNIT ADDR  S22025
         SR   R15,RKEYLE               RESET UNIT OFFSET         S22025
STC      EQU   *                                                 S22025
         LA    RSCAN,AVTUMALN-1(R15,RUNIT)   GET DATA ADDR       S22025
         STC   R14,AVTEZERO(,RSCAN)       TO BUFFER              S22025
         BXLE  RX,RWORK2,LOOP1          LOOP IF ALL DATA NOT MOVED
         LA    R15,INC(R15)            INCREMENT TO NXT BYTE     S22025
         SPACE
         BR    RRET                     EXIT TO (LOCAL) CALLER
         SPACE
         EJECT
********* DSECTS *********
         SPACE
          TAVTD
         EJECT
         TPRFD
         EJECT
IEDQCVTD DSECT
         CVT
         END
