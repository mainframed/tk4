 TITLE 'IEDQFW COMWRITE'
IEDQFW   CSECT
         SPACE 3                                                 S21903
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A143000,167000,174000,209000,307000,309000,472000,498000,530000 A44876
*C173000,198000,296000,304000,413000,500000                      A44876
*D354000-362000,414000-415000                                    A44876
*A 195000,307560                                                SA63960
*C 193000,472000                                                SA63960
*D299000-304000,307000,461000                                   SA65375
*A460000,467300,472700                                         @SA69987
*C200000,431000-445000                                         @SA69987
*A307840                                                       @SA69988
*A498000                                                       @SA69989
*C307490-307770,414000                                         @SA69989
*D205000-209000                                                @SA69989
*A167800,457000                                                @SA70175
*C195500-197000,501000                                         @SA70175
*A181000,417000,429000,558000                                  @SA70176
*C536000,551000-553000                                         @SA70176
*C352000                                                       @SA70181
*A167800,195000,429560                                         @SA73145
*C508000                                                       @SA73145
*C498600                                                       @YA07124
*C307490-307580  MOVED AFTER 307760                            @YA09314
*C196860-196940                                                @YA09722
*A167900                                                       @YA09722
*A167960                                                       @ZA04043
*C196860-196880                                                @ZA04043
*A429620                                                       @YA11009
*C457630-457700                                                XA12523
*C 196900,196908                                               @Y17XASZ
*A196780                                                       @OY19405
*C307420                                                       @OZ32703
         SPACE 3                                                 S21903
***********************************************************************
*                                                                     *
*MODULE NAME-IEDQFW COMWRITE                                          *
*                                                                     *
*  DESCRIPTIVE NAME = COMWRITE                                        *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE LEVEL 5                                            *
*                                                                     *
*                                                                     *
*FUNCTION-                                                            *
*   UPON ENTRY A DEVTYPE MACRO IS ISSUED TO OBTAIN THE MAX BLOCK SIZE *
*   FOR THE OUTPUT DEVICE. THE OUTPUT DCB IS OPENED AND TESTED FOR    *
*   SUCCESSFUL OPEN. COMWRIT FLAGS IN THE AVT ARE INITIALIZED AND     *
*   THE DECB'S ARE MARKED NOT ACTIVE.COMWRITE NOW GOES INTO WAIT      *
*   STATE WAITING ON EITHER ECB.                                      *
*   WHEN AN ECB IS POSTED THE PARM LIST IS CHECKED FOR BOUNDARY       *
*   ALLIGNMENT. IF NOT ON FULLWORD MESSAGE IED116I IS WRITTEN TO      *
*   THE COMWRITE DATASET.IFPARMLIST IS OK THE PARMFLAG IS TESTED FOR  *
*   CLOSEDOWN.IF CLOSEDOWN IS REQUESTED COMWRITE CLOSES. IF NOT       *
*   A TEST IS MADE TO SEE IF THE DATA TO BE WRITTEN WILL EXCEED       *
*   THE MAX BLOCKSIZE OF THE DEVICE. IF YES MESSAGE IED117I IS WRITTEN*
*   TO THE COMWRITE DATASET. A TEST IS THEN MADE TO SEE IF THE BLOCK  *
*   TO BE WRITTEN WILL EXCEED CORE. IF YES MESSAGE IED115I IS WRITTEN *
*   TO COMWRITE DATASET. IF ALL TESTS ARE OK THE RECORD IS WRITTEN AND*
*   COMWRITE ISSUES WAIT ON EITHER ECB.                               *
*   A TEST IS MADE TO SEE IF THE RECORD PROVIDED HAS PREFIX SPACE     *
*   RESERVED FOR TIME STAMP.THIS IS INDICATED BY A FLAG BEING OFF IN  *
*   THE PARAMETER LIST.IF THE PREFIX EXISTS,THE RECORD WILL BE TIME   *
*   STAMPED AND A TIMER INTERVAL SET FOR 15 SECONDS.IF ANOTHER RECORD *
*   IS WRITTEN BEFORE THE 15 SECOND INTERVAL,THE TIMESTAMP AREA WILL  *
*   BE CLEARED TO BINARY ZERO.                                        *
*                                                                     *
* INPUT-- 1-PARMLIST POINTER POINTS TO A PARMLIST ON A FULLWORD       *
*           BOUNDARY, DEFINING DATA TO BE LOGGED.                     *
*         2-CORRESPONDING ECB MUST BE POSTED BY AQCTRL SVC.           *
* OUTPUT- --SPECIFIED DATA LOGGED ON SEQUENTIAL DATA SET NAMED BY     *
*           'COMWRITE' DD CARD.                                       *
* EXITS-  NORMAL-SVC EXIT- INVOKED BY TCAM CLOSEDOWN OR REQUESTED BY  *
*                USER IN PARMLIST.                                    *
* EXITS- ERROR- ALL ERROR EXITS ARE SYSTEM ABEND 044.REGISTER 3       *
*               CONTAINS A REASON CODE WHICH IS EXPLAINED BELOW.      *
*        REGISTER 3=1 PERMANENT I/O ERROR ON OUTPUT DEVICE,           *
*                     IN ASSOCIATION WITH MESSAGE IED113I.            *
*                     REG 7 CONTAINS USER ID,REG 8 CONTAINS           *
*                     ADDR OF FAILING DECB.                           *
*                                                                     *
*                  =2 STAE ROUTINE FAILED.REG 15 CONTAINS THE         *
*                     RETURN CODE.                                    *
*                                                                     *
*                  =3 USER PARMLIST INCORRECT AND OUTPUT              *
*                     REQUIRED WAS SPECIFIED IN PARMFLAG.             *
*                     REG 7 CONTAINS ADDR OF PARMLIST                 *
*                     SAVED IN COMWRITE. REG 11 CONTAINS              *
*                     ADDR OF ERROR MESSAGE.                          *
*                                                                     *
*                  =4 THE DEVTYPE SVC FAILED.REG 15 CONTAINS          *
*                     THE RETURN CODE                                 *
*                                                                     *
*                  =5 OPEN FAILED ON THE OUTPUT DCB.                  *
*   MESSAGES--                                                        *
*        IED112I TCAM REQUESTED COMWRITE CLOSEDOWN-                   *
*                TCAM IS IN CLOSEDOWN PROCESS.                        *
*        IED113I I/O ERROR,UNIT,STATUS/SENSE,USERID,COMWRITE CLOSING- *
*                PERMANANT ERROR ON OUTPUT DEVICE,UNIT IS 3 BYTES,    *
*                STATUS/SENSE IS 8 BYTES,AND USERID IS 4 BYTES.       *
*        IED114I 0000 ABEND,COMWRITE CLOSING-                         *
*                COMWRITE HAS ABENDED WITH INDICATED COMPLETION CODE. *
*        IED115I USERID DATA AREA EXCEEDS CORE-  THE DATA AREA        *
*                        SPECIFIED IN THE PARMLIST WILL WRAP THE      *
*                        HIGH END OF CORE.                            *
*        IED116I USERID PARMLIST NOT ON FULLWORD BOUNDARY---PARMLIST  *
*                        MUST BEGIN ON FULLWORD BOUNDARY.             *
*        IED117I USERID BLKSIZE EXCEEDS DEVICE SPECS--   THE LENGTH   *
*                        OF THE DATA FIELD EXCEEDS THE MAXIMUM        *
*                        ALLOWED FOR THAT DEVICE.                     *
*ATTRIBUTES -- SERIALLY REUSEABLE,RESIDENT ONCE ATTACHED, PROBLEM     *
*              PROGRAM MODE                                           *
*                                                                     *
*                                                                     *
* NOTE-  THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL        *
*        REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS        *
*        EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME. REDEFINITION OF *
*        CHARACTER CONSTANTS BY REASSEMBLY WILL RESULT IN A CORRECT   *
*        MODULE FOR THE NEW DEFINITIONS. THIS MODULE IS ALSO          *
*        DEPENDENT ON DISPLACEMENTS IN SOME OS CONTROL BLOCKS. THESE  *
*        DISPLACEMENTS ARE DEFINED IN THE EQUATES PRECEEDING THE      *
*        CODING. REDEFINITION OF THESE EQUATES & REASSEMBLY WILL      *
*        RESULT IN A CORRECT MODULE FOR THE NEW DISPLACEMENTS.        *
*                                                                     *
* SYSTEM REQUIREMENTS--MULTIPLE WAIT OPTION AND MUST BE ATTACHED BY   *
*           INTRO OPTION                                              *
* TABLES/WORKAREA--                                                   *
* PARMLIST FORMAT---MUST BE ON FULLWORD BOUNDARY                      *
*              ******************                                     *
*           +0 * ADDR OF DATA   *  ADDR OF DATA TO BE LOGGED          *
*              *                *                                     *
*              ******************                                     *
*           +4 *TS *FLGS* LENGTH*                                     *
*              *                *                                     *
*              ******************                                     *
*           +8 *RECORD  COUNT   *                                     *
*              *                *                                     *
*              ******************                                     *
*          +12 * PARM ID        *                                     *
*              *                *                                     *
*              ******************                                     *
*                                                                     *
*              +4--TEST AND SET FLAGS FOR USE OF CALLER.              *
*              +5--FLAGS                                              *
*                  BIT 0  1= TERMINATE COMWRITE AFTER SPECIFIED       *
*                            RECORD COUNT HAS EXPIRED.                *
*                  BIT 1  1= PARMLIST COMPLETE (SET BY COMWRITE       *
*                            WHEN PARMLIST FUNCTIONS ARE COMPLETED)   *
*                         0= PARMLIST INCOMPLETE OR IN USE BY COMWRITE*
*                  BIT 2  1= REQUEST IMMEDIATE TERMINATION OF COMWRITE*
*                  BIT 3  1= OUTPUT DATA IS MANDATORY IF DATA CANNOT  *
*                            BE WRITTEN AS SPECIFIED, TERMINATE       *
*                            COMWRITE WITH A S044 ABEND               *
*                            WITH A THREE IN REGISTER 3.              *
*                         0= OUTPUT DATA NOT MANDATORY. IF DATA       *
*                            CANNOT BE WRITTEN AS SPECIFIED, WRITE    *
*                            ERROR MESSAGE IN OUTPUT.                 *
*                                                                     *
*              +6--LENGTH(2 BYTES)-MUST BE BETWEEN 18 AND             *
*                            32,760 DECIMAL & MUST NOT EXCEED THE     *
*                            MAXIMUM BLKSIZE OF THE OUTPUT DEVICE     *
*                                                                     *
* AVT --                                                              *
*         AVTCWFL2--                                                  *
*              BIT 0- 1= COMWRITE ACTIVE.(SET BY COMWRITE)            *
*              BIT 1-5 NOT USED                                       *
*              BIT 6- 0= WRAPPING OUTPUT ALLOWED (REUSE SAME VOL)     *
*                    1= WRAPPING OUTPUT NOT ALLOWED (INVOKES          *
*                       VOLUME SWITICHING WHICH REQUIRES              *
*                       OPERATOR INTERVENTION).                       *
*              BIT 7- 1= COMWRITE CLOSEDOWN WAS REQUESTED BY USER     *
*                       IN PARMLIST OR TCAM CLOSEDOWN-SET BY          *
*                       COMWRITE.                                     *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0                   PARMREG,STAERTNE
R1       EQU   1                   INPUT AVTREG/WORK
R2       EQU   2    WORKREG
R3       EQU   3    CVT REG
R4       EQU   4    AVT REG
R5       EQU   5    BASE REG
RETREG   EQU   6
RINDEX   EQU   7                   AVTCWPM INDEX REG
R7       EQU   7    ECB REG
RDECB    EQU   8                   ADDR OF DECB
R8       EQU   8    ECB REG
R9       EQU   9                        WORK REGISTER            A44876
R10      EQU   10   PARM LIST  REG
R11      EQU   11   AREA ADDRESS  REG
R12      EQU   12   LENGTH  REG
R13      EQU   13   SAVE AREA REG
R14      EQU   14                  RETURN REG
R15      EQU   15                  RETURN CODE REG
BUSY     EQU   X'40'
CWACTIVE EQU   X'80'
DECBIOB  EQU   X'10'               DECB DISPL TO IOB ADDR
SENSE    EQU   X'02'               SENSE DISPL IN IOB
STATUS   EQU   X'0C'               CSW STATUS DISPL IN IOB
BLKSIZE  EQU   X'3E'               BSAM DCB DISPL TO BLKSIZE
BOXTOP   EQU   X'A4'               CVT HI CORE ADDR
CLSDOWN  EQU   X'01'               AVTCWFL2=CLOSEDOWN REQUESTED
DISPL    EQU   12                  DISPL FROM AVTCWPM1 TO AVTCWPM2
*                                  USED TO SET  RINDEX
CC       EQU   4                   DISPL OF COMPL CODE IN STAE WORKAREA
HEX20    EQU   X'20'                    DEV CLASS=DIRECT ACCESS  A44876
FOUR     EQU   4
SIXTEEN  EQU   16
BUFSZ    EQU   976                      BUFF TR - 960+16       @SA70175
DEVTFAIL EQU   X'01'                    DEVTYPE FAILED         @SA73145
ONE      EQU   1                        CONSTANT ONE           @YA09722
SEVEN    EQU   7                        MASK FOR ICM           @YA09722
FIFTEEN  EQU   15                       MASK FOR ICM           @ZA04043
         EJECT
********       INITIALIZATION                                  ********
         USING PARMLIST,R10
         USING IEDQAVTD,R4
         USING *,R5
         STM   14,12,12(13)        SAVE REGS
         LR    R5,R15              SET BASE
IEDQFW   IEDHJN  ENTRY                                           S05331
         LA    R12,CWSAVE          LOAD SAVE AREA ADDRESS
         ST    R12,8(13)           SET FORWARD CHAIN
         ST    R13,4(R12)          SET BACK CHAIN
         LR   R13,R12              LOAD SAVE REG
         LR    R4,R1               LOAD AVT ADDR PASSED BY ATTACH
         STM   R13,R5,STAESAVE         SAVE REGS FOR STAE RETRY@SA70176
**************** SET STAE TO RECOVER COMPL CODE & INFORM **************
**************** OPERATOR. THIS CODE & THE STAERTINE MAY  *************
**************** BE REMOVED WHEN THE STAE OPERAND OF     **************
**************** ATTACH IS AVAILABLE.                    **************
         STAE  STAERTNE,CT,,XCTL=NO ISSUE STAE
         LTR   R15,R15             SUCESSFUL ?
         BZ    CHKBLK              YES
         LA    R3,2(R0)            NO-LOAD REASON CODE
         B     TERM
*********                          **********                    ******
**************** INSERT MAX BLKSIZE IN DCB FOR OPEN      **************
CHKBLK   DEVTYPE  DDNAME,AREA,DEVTAB    GET DEVICE CHAR         SA63960
         LTR   R15,R15             CHK RETURN CODE
         BNZ   DEVFAIL             BAD
         MVI   CWCTL,AVTEZERO           CLEAR DEVTYPE FAILED   @SA73145
*              COMPUTE LARGEST REQUIRED BLOCKSIZE FOR LOGDCB   @SA70175
*              BASED UPON THE CURRENT CONTENTS OF THE TRACE    @SA70175
*              TABLE POINTERS, MIN. REQUIREMENTS WILL BE FOR   @SA70175
*              BUFFER TRACE, 960 BYTES PLUS 16 BYTE PREFIX.    @SA70175
*              RESULT OF COMPUTATION WILL BE SAVED IN MAXBLK   @SA70175
*              FOR USE BY OPEN DCB EXIT.                       @SA70175
         LA    R9,BUFSZ                 SET BUFF TRACE SIZE.   @SA70175
         L     R2,AVTDISTR              ADDR OF STCB TRACE TBL @SA70175
         LTR   R2,R2                    TEST IF TABLE EXISTS.  @SA70175
         BZ    NOSTCB                   NO-BYPASS CALCULATION  @SA70175
         BAL   R1,COMPSIZE              GO TO CALCULATE SIZE.  @SA70175
NOSTCB   EQU   *                                               @SA70175
         L     R2,AVTRACE               ADDR OF IOTR TRACE TBL.@SA70175
         LTR   R2,R2                    TEST IF TABLE EXISTS.  @SA70175
         BZ    NOIOTR                   NO - DISREGARD.        @SA70175
         BAL   R1,COMPSIZE              COMPUTE SIZE,USE LARGE @SA70175
NOIOTR   EQU   *                                               @SA70175
         L     R2,AVTREADD              GET INTRO BUFF. TRACE  @OY19405
         LTR   R2,R2                    WAS IT SPECIFIED       @OY19405
         BZ    NOINTBUF                 NO BUFF. TRAC ON INTRO @OY19405
         LM    R14,R15,4(R2)            START ADD. OF TABLES   @OY19405
         LA    R14,0(R14)               CLEAR HIGH ORDER BYTES @OY19405
         LA    R15,0(R15)               OF BOTH REGISTERS      @OY19405
         SR    R15,R14                  GET SIZE OF ONE TABLE  @OY19405
         CR    R9,R15                   COMPARE SIZES          @OY19405
         BH    NOINTBUF                 OK, CONTINUE           @OY19405
         LR    R9,R15                   LARGEST SIZE IN R9     @OY19405
NOINTBUF EQU   *                                               @OY19405
         ICM   R2,FIFTEEN,AVTSAVTP      GET 3705 SECONDARY     @ZA04043
*                                       AVT POINTER            @ZA04043
         BNM   NOTPIOTR                 BRANCH, IF VTAM NOT    @ZA04043
*                                       IN SYSTEM              @ZA04043
         USING IEDNSVTD,R2                                     @YA09722
         L     R2,SAVTPIUT    GET ADDRESS OF PIU TRACE         @Y17XASZ
         LTR   R2,R2          IS THERE A TRACE ADDR            @Y17XASZ
         DROP  R2                                              @YA09722
         BZ    NOTPIOTR                 BRANCH, IF ZERO        @YA09722
         BAL   R1,COMPSIZE              GO COMPUTE TABLE SIZE  @YA09722
NOTPIOTR EQU   *                                               @YA09722
         STH   R9,MAXBLK                STORE MAX BLOCK SIZE   @YA09722
         B     OPENLOG                  GO OPEN LOG DATA SET   @YA09722
COMPSIZE EQU   *                                               @SA70175
         LM    R14,R15,4(R2)            LOAD LIMITS OF TABLE.  @SA70175
         LA    R14,0(R14)               CLEAR HIGH ORDER BYTES @SA70175
         LA    R15,0(R15)               OF BOTH REGISTERS.     @SA70175
         SR    R15,R14                  COMPUTE TOTAL SIZE     @SA70175
         SRL   R15,1                    DIVIDE BY 2.           @SA70175
         LA    R15,16(R15)              + 16 BYTES FOR PREFIX. @SA70175
         CR    R9,R15                   COMPARE SIZES.         @SA70175
         BCR   2,R1                     EXIT TO CALLER WITH    @SA70175
         LR    R9,R15                   LARGEST VALUE IN R9.   @SA70175
         BR    R1                       RETURN,                @SA70175
OPENLOG  EQU   *                                               @SA70175
         OPEN  (LOGDCB,(OUTPUT,REREAD))  OPEN LOG DATA SET       A44876
         TM    LOGDCB+48,X'10'     WAS OPEN SUCCESFUL ?
         BO    TESTDA                   YES - GO TEST TYPE DEV @SA69987
         LA    R3,5                LOAD REASON CODE
         B     TERM                GO ABEND
DEVFAIL  LA    R3,4(R0)            LOAD REASON CODE
         B     TERM                GO ABEND
TESTDA   EQU   *                                               @SA69987
         TM    UNIT,HEX20               IS COMWRITE DS ON DIRECT
*                                       ACCESS DEVICE            A44876
         BZ    INIT                     IF NOT, DONT NEED CCHH   A44876
         L     R8,LOGDCB+44             LOAD DCB ADDR            A44876
         L     R9,SIXTEEN(R8)           LOAD # OF EXTENTS        A44876
         SLL   R9,FOUR                  MULTIPLY # OF EXTENTS BY
*                                       NUMBER OF BYTES PER EXT  A44876
         AR    R8,R9                    ADD OFFSET TO DEB BASE
*                                       POINTER                  A44876
         MVC   LASTRK,42(R8)            GET END CCHH OF LAST EXT A44876
INIT     EQU   *
         OI    AVTCWFL2,CWACTIVE        INDICATE COMWRITE ACTIVE
         MVI   AVTCWTS1,X'00'      CLEAR TS1 &
         MVI   AVTCWTS2,X'00'      TS2
       MVI     AVTCWEC1,X'00'      CLEAR ECB1
       MVI     AVTCWEC2,X'00'      CLEAR ECB2
         NI    CWCTL,X'00'         CLEAR CONTROL FLAGS
********SET UP TWO ITEM WAITLIST AND WAIT FOR EITHER POSTED    ********
FW02     TM    CWCTL,X'00'+W1START+W2START IS DECB1 OR DECB2 ACTIVE ?
         BO    DECWAIT             BOTH ARE
         BZ    AVTWAIT             NEITHER IS
         TM    CWCTL,X'00'+W1START AM I WHICH ONE
         BO    DEC1AVT2            DECB1 IS
         B     DEC2AVT1            DECB2 IS
DECWAIT  LA    R7,DECB1
         LA    R8,DECB2
         B     CWWAIT
AVTWAIT  LA    R7,AVTCWEC1
         LA    R8,AVTCWEC2
         B     CWWAIT
DEC1AVT2 LA    R7,AVTCWEC2
         LA    R8,DECB1
         B     CWWAIT              WAIT ON DECB1 + PARM2
DEC2AVT1 LA    R7,AVTCWEC1
         LA    R8,DECB2            WAIT ON DECB2 + PARM1
CWWAIT   TM    AVTBIT1,AVTCLOSN    TCAM CLOSE IN PROCESS ?
         BO    CLOSEDN             YES CLOSE AND RETURN
         STM   R7,R8,WAITLIST      STORE ECB ADDRESS IN LIST
         OI    WAITEND-4,X'80'     SET END OF LIST
         WAIT  1,ECBLIST=WAITLIST  WAIT ON ONE EVENT
********SERVICE ELEMENTS THAT WERE POSTED                      ********
********AVTCWEC1 MAY HAVE BEEN POSTED BY TCAM CLOSEDOWN        ********
         TM    AVTBIT1,AVTCLOSN    TCAM CLOSE IN PROCESS ?
         BO    CLOSEDN             YES CLOSE LOG AND RETURN
         TM    DECB1,COMPLETE      PARM1  DONE ?
         BZ    FW10                NO
         LA    RINDEX,0            SET INDEX TO AVTCWPM1
         LA    RDECB,DECB1         SET TO USE DECB1
         BAL   RETREG,PARM1CMP     YES
FW10     TM    DECB2,COMPLETE      PARM2 DONE  ?
         BZ    FW11                NO
         LA    RINDEX,DISPL        SET INDEX TO AVTCWPM2
         LA    RDECB,DECB2         SET TO USE DECB2
         BAL   RETREG,PARM1CMP     YES
FW11     TM    AVTCWEC1,COMPLETE   PARM1 POSTED  ?
         BZ    FW12                NO
         LA    RINDEX,0            SET INDEX TO AVTCWPM1
         LA    RDECB,DECB1         SET TO USE DECB1
         BAL   RETREG,PARM1        YES
FW12     TM    AVTCWEC2,COMPLETE   PARM2  POSTED  ?
         BZ    FW02                NO GO PICK UP ECB TO WAIT ON
         LA    RINDEX,DISPL        SET INDEX TO AVTCWPM2
         LA    RDECB,DECB2         SET TO USE DECB2
         BAL   RETREG,PARM1        YES
         B     FW02                GO PICK UP ECB'S TO WAIT ON
         EJECT
********RESET ECB1 & PARMLIST COMPLETE. CHECK PARAMATER        ********
********LIST FOR VALIDITY. IF RECORD COUNT IS SPECIFIED,       ********
********DECREMENT THE COUNT. ISSUE WRITE IF ALL IS OK          ********
PARM1    LA    R2,0                RESET
         STC   R2,AVTCWEC1(RINDEX) AVT ECB
         L     R10,AVTCWPM1(RINDEX) GET PARMLIST POINTER
         MVC   PARMSAVE(16),PARMAREA SAVE PARMLIST FOR ABEND
         ST    R10,WORKA           CHECK
         TM    WORKA+3,X'03'       BOUNDRY ALIGN
         BNZ   BNDRY1              OF PARM LIST
         LA   R1,PARMFLAG          BUILD
         ST   R1,QPARM2                  PARM
         MVC   PARMCMPL,PARMFLAG              LIST
         NI    PARMCMPL,X'FF'-COMPLETE             TO RESET
         LA   R1,QPARM1            PARMLIST COMPLETE
         SVC   102                 DATA MOVE
         TM    PARMFLAG,COMWTCLS   REQ FOR CLOSE OF COMWRITE  ?
         BO    NORMCLOS            YES CLOSE
         L     R11,PARMAREA        PICK UP AREA ADDRESS
         LH    R12,PARMLEN         PICK UP LENTH
         CH    R12,=H'18'          LESS THAN 18
         BNL   PARM1CKH            NO
         LH    R12,=H'18'          YES, ADJUST
PARM1CKH CH    R12,LOGDCB+BLKSIZE  EXCEED MAX BLKSIZE ?
         BH    SIZE                YES
PARM1LOK L     R3,16               LOAD CVT POINTER     ****
         LR    R2,R11              LOAD DATA ADDRESS    ****
         AR    R2,R12              ADD LENGTH           ****
         CL    R2,BOXTOP(R3)       CHECK TOP OF CORE
         BH    CORE1               EXCEDS CORE          ****
         TM    PARMFLAG,NOPREFIX        DATA PREFIX SPECIFIED
         BO    WRITETST                 GO TEST FOR DISK WRAP    A44876
         MVC   0(4,R11),PARMID          ELSE, MOVE CALLERS IT TO BUFFER
         XC    4(8,R11),4(R11)          CLEAR TIME STAMP FIELD
STAMP    TIME
         STM   0,1,4(R11)               TIME STAMP BUFFER
WRITETST TM    UNIT,HEX20               IS DATA SET ON DA DEV?   A44876
         BZ    WRITEPM1                 IF NOT, BRANCH TO WRITE  A44876
         CLC   RCDADDR,LASTRK           COMPARE CCHH OF LAST RCD
*                                       WRITTEN TO CCHH OF LAST
*                                       TRACK ON COMWRITE        A44876
         BL    WRITEPM1                 BRANCH NOT LAST TRACK  @OZ32703
POINT1   TM    CWCTL,W1START            TEST IF DECB1 ACTIVE.  @SA69988
         BZ    POINT2                   NO - BYPASS CHECK.     @SA69988
         CHECK DECB1                    ENSURE COMPLETION.     @SA69988
POINT2   TM    CWCTL,W2START            TEST IF DECB2 ACTIVE.  @SA69988
         BZ    POINT                    NO - BYPASS CHECK.     @SA69988
         CHECK DECB2                    ENSURE COMPLETION.     @SA69988
         OC    EOFLOC,EOFLOC            TEST IF EOF RECORDED.  @YA09314
         BNZ   POINT                    YES - BYPASS NOTE.     @YA09314
         NOTE  LOGDCB                   RECORD EOF POINT FLD.  @YA09314
         ST    R1,EOFLOC                SAVE FOR LATER POINT.  @YA09314
POINT    POINT LOGDCB,TTRSTART          REPOSITION DATA SET      A44876
*              THE FOLLOWING BRANCH CAN BE ZAPPED TO A NOP IN  @SA69988
*              ORDER TO CAUSE A LINE OF ASTERISKS TO PRINT ON  @SA69988
*              THE SYSTEM CONSOLE WHEN COMWRITE DATA SET       @SA69988
*              WRAPS, THIS WILL ONLY BE EFFECTIVE WHEN COMWRITE@SA69988
*              IS ON DASD DEVICE. EMBEDDED IN THIS LINE WILL   @SA69988
*              BE A TIME STAMP INDICATING THE TIME OF WRAP.    @SA69988
*              THIS FEATURE SHOULD ONLY BE USED TO DETERMINE   @SA69988
*              THE CORRECT SIZE OF THE COMWRITE DATA-SET.      @SA69988
         B     WRITEPM1                 BYPASS WTO FOR WRAP    @SA69988
         SPACE 2                                               @SA69988
         MVC   TMSTMP,4(R11)            PICK UP TIME FROM LAST @SA69988
         OI    TMSTMP+3,X'0F'           REMOVE SIGN.           @SA69988
         UNPK  TMSTMPD,TMSTMP           CONVERT TO ZONED DEC.  @SA69988
         MVC   WTMSTMP,TMEDIT           MOVE IN EDIT FLD.      @SA69988
         TR    WTMSTMP,TMSTMPD          MOVE CORRESPOND'G FLDS @SA69988
         WTO   '********************** COMWRITE DS WRAP ****************
               ************',ROUTCDE=(2),DESC=4                @SA69988
ETMSG    EQU   *                                               @SA69988
         ORG   ETMSG-20                                        @SA69988
WTMSTMP  DS    CL8                                             @SA69988
         ORG   ETMSG                                           @SA69988
         B     WRITEPM1                                        @SA69988
TMSTMP   DC    CL4' '                                          @SA69988
TMSTMPD  DC    CL7' '                                          @SA69988
         DC    C':'                                            @SA69988
TMEDIT   DC    AL1(0,1,7,2,3,7,4,5)     MOVE CORRESPOND'G MASK @SA69988
WRITEPM1 WRITE (RDECB),SF,,(R11),(R12),MF=E
         LTR   RINDEX,RINDEX       DECB1 OR DECB2 ?
         BNZ   ACTIVE2             DECB2
         OI    CWCTL,W1START       SET DECB1 ACTIVE
         B     CHKCNT
ACTIVE2  OI    CWCTL,W2START       SET DECB2 ACTIVE
CHKCNT   TM    PARMFLAG,CTOPTION   RECORD COUNT SPECIFIED ? $***
       BZ      LEAVE               NO
         TM    CWCOUNT(RDECB),CWCOUNT1  COUNT PREVIOUSLY SPECIFIED ?
         BO    WRITE1A                  YES  BYPASS SETTING
         MVC   CWRCT1(4,RDECB),PARMCT   NO  SET UP CW COUNT
         OI    CWCOUNT(RDECB),CWCOUNT1  SET  COUNT SPECIFIED
WRITE1A  L     R2,CWRCT1(RDECB)    GET CURRENT COUNT
         BCT   R2,WRITE1B          SUBTRACT ONE AND GO TO WRITE
         B     NORMCLOS            COUNT = ZERO CLOSE
WRITE1B  ST    R2,CWRCT1(RDECB)    STORE DECREMENTED COUNT
LEAVE    BR    RETREG              RETURN TO MAINLINE CODE
CORE1    LA    R12,L'HICORE        LOAD ERROR MSG LENGTH   *****
         MVC   HICORE+8(4),PARMID  PUT ID IN ERROR MSG
         LA    R11,HICORE          LOAD ERROR MEG ADDRESS  *****
         B     MUST
BNDRY1  LA     R12,L'ERRMSG       LOAD MSG SIZE
         MVC   ERRMSG+8(4),PARMID  PUT ID IN ERROR MSG
        LA     R11,ERRMSG         LOAD MSG LOCATION        *****
         B     MUST
SIZE     LA    R12,L'ERRSIZE       LOAD ERRMSG SIZE
         MVC   ERRSIZE+8(4),USERID MOVE IN USER ID
         LA    R11,ERRSIZE         LOAD ERRMSG ADDR
MUST     TM    PARMFLAG,REQOUT     IS DATA OUTPUT REQUIRED ?
         BZ    WRITEPM1            NO
         B     CLOSEDNA
         EJECT
********CHECK DECB1.   IF NORMAL COMPLETITION, SET             ********
********PARMLIST COMPLETE & RESET DECBECB, DECB ACTIVE &       ********
********                THEN RETURN. FOR ABNORMAL COMPLETITION ********
********CAUSE OUTPUT WRAP OR VOL SWITCH IF END OF VOL, OR      ********
********CLOSEDOWN IF PERM I/O ERROR                            ********
PARM1CMP  L    R10,AVTCWPM1(RINDEX) LOAD PARMLIST POINTER
         MVC   PARMSAVE(16),PARMAREA SAVE PARMLIST FOR ABEND
         LTR   RINDEX,RINDEX       DECB1 OR DECB2 ?
         BNZ   PARM2CMP            DECB2
         NI    CWCTL,X'FF'-W1START RESET DECB1 ACTIVE
         B     CHKIO
PARM2CMP NI    CWCTL,X'FF'-W2START RESET DECB2 ACTIVE
CHKIO    TM    0(RDECB),X'7F'           TEST FOR NORMAL COMP.  @SA70181
         BO    PARM1OKA            YES
CHECK1   CHECK (RDECB)
         B     PARM1OKA            GO RESET FLAGS
********       RESET ERROR FLAGS ON TCLOSE ONLY TO ALLOW  *************
*********               OUTPUT TO RESUME                  *************
PARM1OK  NI    LOGDCB+44,X'3F'     RESET DCB
         NI    LOGDCB+61,X'EF'     ERROR FLAGS
         L     R1,DECBIOB(RDECB)   GET IOB ADDRESS
         LTR   R1,R1               ZERO ?
         BZ    PARM1OKA
         NI    0(R1),X'C0'         RESET IOB
         NI    1(R1),X'00'         ERROR FLAGS
**************************************************************
PARM1OKA L     R10,AVTCWPM1(RINDEX) GET PARM LIST ADDRESS
         LA   R1,PARMFLAG          BUILD
         ST   R1,QPARM2                  PARM
         MVC   PARMCMPL,PARMFLAG              LIST
         OI    PARMCMPL,COMPLETE                   TO SET
         LA   R1,QPARM1            PARMLIST COMPLETE
         SVC   102                 DATA MOVE
         MVI   0(RDECB),X'00'      RESET  DECB ECB
         LTR   RINDEX,RINDEX       DECB1 OR DECB2
         BNZ   PARM2OK             DECB2
         NI    CWCTL,X'FF'-W1START RESET DECB1 ACTIVE FLAG
         MVI   AVTCWTS1,X'00'      RESET TS1
         B     PMCMPRET
PARM2OK  NI    CWCTL,X'FF'-W2START RESET DECB2 ACTIVE FLAG
         MVI   AVTCWTS2,X'00'      RESET TS2
PMCMPRET BR    RETREG              RETURN TO MAINLINE
         EJECT
********QUIESCE BOTH DECB,S & CLOSE THE OUTPUT DCB. IF CLOSE   ********
********DOWN WAS REQUESTED EXIT. OTHERWISE REOPEN DCB.         ********
CLOSEDN  WTO   'IED112I  TCAM REQUESTED COMWRITE CLOSEDOWN.',          C
               ROUTCDE=2,DESC=7
         SR    R3,R3               SET NO ABEND
         B     SETCLOSE
CLOSEDNA LA    R3,3(R0)            LOAD REASON CODE
         B     SETCLOSE
NORMCLOS SR    R3,R3               SET NO ABEND
SETCLOSE OI    AVTCWFL2,CLSDOWN    SET CLOSEDOWN REQUEST
CLOSE    TM    CWCTL,W1START       DECB1 ACTIVE ?
         BZ    CLOSEDN1            NO CHECK DECB2
         WAIT  ECB=DECB1           YES WAIT
         LA    RINDEX,0            SET INDEX TO AVTCWPM1
         LA    RDECB,DECB1         SET TO USE DECB1
         BAL   RETREG,PARM1OK      GO RESET FLGS AND RETURN
CLOSEDN1 TM    CWCTL,W2START       DECB2 ACTIVE
         BZ    CLOSEDN2            NO CLOSE
         WAIT  ECB=DECB2           YES WAIT
         LA    RINDEX,DISPL        SET INDEX TO AVTCWPM2
         LA    RDECB,DECB2         SET TO USE DECB2
         BAL   RETREG,PARM1OK      GO RESET FLGS AND RETURN
CLOSEDN2 OC    EOFLOC,EOFLOC            TEST FOR PREV. WRAP.   @SA69989
         BZ    CLOSEDN3                 NO-BYPASS POINT TO END @SA69989
         TM    UNIT,HEX20               TEST IF TAPE DEV.      @SA69989
         BNO   CLOSEDN3                 YES - BYPASS POINT     @SA69989
         POINT LOGDCB,EOFLOC            POINT TO END OF DATA   @SA69989
         WRITE DECB1,SF,,LASTREC,L'LASTREC,MF=E                @SA69989
         CHECK DECB1                    ENSURE COMPLETION.     @SA69989
CLOSEDN3 CLOSE (LOGDCB)                 CLOSE TRACE DATA SET.  @SA69989
         LTR   R3,R3
         BZ    QFWEXIT                  ZERO = NORMAL EXIT.    @SA70176
         CH    R3,=H'16'                IS IT STAE RET CODE.   @SA70176
         BNE   TERM                     NO - GO TO ABEND.      @SA70176
         NI    AVTCWFL2,X'FF'-CWACTIVE  RESET ACTIVE BIT.      @SA70176
         L     R13,CWSAVE+4             LOAD CALLERS@SAVE ADR. @SA70176
         LM    R14,R12,12(R13)          RELOAD ENTRY REGS.     @SA70176
         BR    R15                      RE-ENTER IEDQFW.       @SA70176
QFWEXIT  EQU   *                        NORMAL EXIT POINT.     @SA70176
         MVI   AVTCWEC1,BUSY       SET ECB BUSY
         MVI   AVTCWEC2,BUSY
        MVI    AVTCWTS1,X'FF'      SET TS1 &
         MVI   AVTCWTS2,X'FF'      TS2 BUSY
         NI    AVTCWFL2,X'FF'-CWACTIVE RESET COMWRITE ACTIVE
         MVI   AVTAFE10,X'00'           INDICATE
         MVI   AVTAFE20,X'00'           SERVICE AIDS NO
         MVI   AVTAFE30,X'00'           LONGER ACTIVE
         L    R13,CWSAVE+4
         LM    14,12,12(13)        RESTORE REGS
         LA    R15,0               SET RC=0
         BR    R14                 RETURN
         SPACE 4                                               @SA70176
STAECLOS EQU   *                                               @SA70176
         BALR  R15,0                    SET TEMP BASE REG.     @SA70176
         USING *,R15                                           @SA70176
         ENTRY STAECLOS                                        @SA70176
         LM    R13,R5,STAESAVE          RELOAD QFW REGS.       @SA70176
         DROP  R15                                             @SA70176
         SR    R3,R3                    DEVTYPE FAILED IND.    @SA73145
         TM    CWCTL,DEVTFAIL           DID DEVTYPE FAIL       @SA73145
         BO    SETCLOSE                 BR YES, TERMINATE      @SA73145
         TM    LOGDCB+48,X'10'          WAS OPEN SUCCESSFUL?   @YA11009
         BNO   SETCLOSE                 NO, OPEN NOT SUCCESSFUL@YA11009
         LA    R3,16                    SET EXIT CODE          @SA70176
         B     SETCLOSE                 GO TO CLOSE DOWN RTN   @SA70176
STAESAVE DC    9F'0'                    REGS REQUIRED FOR      @SA70176
*                                       RECOVERY FROM ABEND.   @SA70176
         EJECT
***************************************************************@SA69987
*         SYNAD EXIT, ISSUE MSG IED113I, ABEND 044-1           @SA69987
*         AFTER 15 ERRORS.                                     @SA69987
***************************************************************@SA69987
SYNAD    STM   R0,R15,SYNADSV           SAVE ERR EXIT REGS.    @SA69987
         LA    R13,SYNADSV1             SET SAVE AREA REG.     @SA69987
       SYNADAF ACSMETH=BSAM             OBTAIN ERROR STATS.    @SA69987
         MVC   ERRMSG0C,50(R1)          MOVE STATS TO MSG      @SA69987
         L     R7,DECBIOB(R8)           GET IOB ADDR.          @SA69987
         MVC   WORK(2),STATUS(R7)       MOVE STATUS FROM IOB   @SA69987
         MVC   WORK+2(2),SENSE(R7)      MOVE SENSE FROM IOB    @SA69987
         UNPK  ERRM1ST+1(9),WORK(5)     UNPACK STATUS.         @SA69987
         TR    ERRM1ST+1(8),TABLE       CONVERT TO EBCDIC.     @SA69987
         MVC   ERRM1ST,ERRM1ST+1        OFFSET FIELD.          @SA69987
         MVI   ERRM1SN-1,C','           INSERT COMMA.          @SA69987
         MVI   ERRM1SN+4,C' '           ERASE TRASH.           @SA69987
         MVC   ERRM1USR,USERID          INSERT TR BLK ID.      @SA69987
         WTO   MF=(E,ERRMSG0)           OUTPUT FIRST HALF MSG  @SA69987
         WTO   MF=(E,ERRMSG1)           OUTPUT 2ND HALF OF MSG @SA69987
       SYNADRLS                                                @SA69987
         LH    R1,SYNADCT               GET COUNT OF PREC ERRS @SA69987
         BCT   R1,SYNADXT               DECREMENT COUNT.       @SA69987
         LA    R3,1                     SET ABEND CODE.        @SA69987
         B     TERM                     EXIT ON 15TH ERR.      @SA69987
SYNADXT  STH   R1,SYNADCT               STORE UPDATED COUNT FLD@SA69987
         LM    R0,R15,SYNADSV           RESTORE ERR REGS.      @SA69987
         BR    R14                      RETURN TO EOV.         @SA69987
**************** ENTRY TO CLEANUP & ABEND *****************************
TERM     MVI   AVTCWEC1,BUSY       SET ECB BUSY
         MVI   AVTCWEC2,BUSY
        MVI    AVTCWTS1,X'FF'      SET TS1 &
         MVI   AVTCWTS2,X'FF'      TS2 BUSY
         NI    AVTCWFL2,X'FF'-CWACTIVE RESET COMWRITE ACTIVE
         MVI   AVTAFE10,X'00'           INDICATE
         MVI   AVTAFE20,X'00'           SERVICE AIDS NO
         MVI   AVTAFE30,X'00'           LONGER ACTIVE
         LA    R7,PARMSAVE         LOAD ADDR PARMLIST FOR ABEND
         L     R1,S044             SET  ABEND CODE
         SVC   13                  ABEND
         SPACE 4                                               @SA70175
*              DCB OPEN EXIT ROUTINE, SETS COMWRITE BLKSIZE TO @SA70175
*              LARGEST REQUIRED AS COMPUTED PREVIOUSLY OR      @SA70175
*              ALLOWS INSERTION OF BLKSIZE FROM JCL/LABEL.     @SA70175
DCBXITL  DS    0F                                              @SA70175
         DC    AL1(133),AL3(DCBXIT)                            @SA70175
         USING *,R15                                           @SA70175
DCBXIT   EQU   *                                               @SA70175
         CLC   LOGDCB+62(2),MAXBLK      DCB BUFSIZE OR MAXIMUM XA125235
*                                       CALCULATED SIZE LARGER XA125235
         BCR   10,R14                   BRANCH DCB BUFSIZE     XA125235
*                                       EQUAL OR HIGH          XA125235
         MVC   LOGDCB+62(2),MAXBLK      NO - INSERT MAX SIZE.  @SA70175
         BR    R14                      RETURN TO OPEN ROUTINE @SA70175
         EJECT
**************** CONSTANTS FOR COMWRITE                  **************
ERRMSG0  WTO   'IED113I I/O ERROR - JJJJJJJJ,SSSSSSSS,UUU,TT,DDDDDDDD,OX
               OOOOO,EEEEEEEEEEEEEEE,BBBBCCCCHHHHRR,AAAAAA',   @SA69987X
               MF=L,DESC=4,ROUTCDE=(2,8,11)                    @SA69987
EMSG0    EQU   *                                               @SA69987
         ORG   EMSG0-82                                        @SA69987
ERRMSG0C DS    0CL78                    MSG TEXT AREA.         @SA69987
         ORG   EMSG0                                           @SA69987
ERRMSG1  WTO   'IED113I - SSSS,SSSS - USER COMWRITE SUBTASK RECORD BYPAX
               SSED.',MF=L,DESC=4,ROUTCDE=(2,8,11)             @SA69987
EMSG1    EQU   *                                               @SA69987
         ORG   EMSG1-54                                        @SA69987
ERRM1ST  DS    CL4                      STATUS FIELD.          @SA69987
         DS    CL1                                             @SA69987
ERRM1SN  DS    CL4                      SENSE FLD.             @SA69987
         DS    CL3                                             @SA69987
ERRM1USR DS    CL4                      TR BLK ID FLD.         @SA69987
         ORG   EMSG1                                           @SA69987
S044     DC    X'80044000'
WAITLIST EQU   *
         DC    2F'0'
WAITEND  EQU   *
CWSAVE   DC    18F'0'
PARMSAVE DC    3F'0'               4 WORD SAVE AREA FOR PARMLIST
SYNADSV  DC    16F'0'                   SAVE AREA FOR SYNAD REGSSA69987
SYNADSV1 DC    18F'0'                   SYNAD ALT AREA.        @SA69987
USERID   DC    F'0'
AREA     DC    5F'0'                     DEVTYPE AREA           SA63960
AREA1    DC    H'0'                     SAVE LAST REC OVRHD     SA63960
SYNADCT  DC    H'15'                    MAX ERROR COUNT.       @SA69987
UNIT     EQU   AREA+2                   DEVICE CLASS FROM THE
*                                       DEVTYP MACRO             A44876
MAXBLK   EQU   AREA+6                   MAXIMUM BLOCKSIZE       SA63960
DDNAME   DC    CL8'COMWRITE '      REQUIRED DD NAME
         ORG   *-X'F0'
TABLE    DS    0F
         ORG   *+X'F0'
         DC    C'0123456789ABCDEF'
********       PARMLIST FOR QCTRL SVC DATA MOVE                ********
         DS    0F
QPARM1   DC    X'08'
         DC    AL3(PARMCMPL)
QPARM2   DC    F'0'
QPARM3   DC    X'80'
         DC    AL3(PARMLNG)
*********                          **********                    ******
WORKA    DC    F'0'                WORK AREA FOR CHK BNDRY ALIGN
WORK     DC    F'0'
         DC    X'0F'               XTRA BYTE IN WORK FOR UNPK
PARMCMPL DC    X'00'
PARMLNG  DC    X'0001'
HICORE   DC    C'IED115I USER DATA AREA EXCEEDS CORE'
ERRMSG   DC    C'IED116I USER PARMLIST NOT ON FULLWORD BOUNDARY'
ERRSIZE  DC    C'IED117I USER BLKSIZE EXCEEDS DEVICE SPECS.'
PERIOD   DC    C'.'
EOFLOC   DC    F'0'                    @SAVE AREA FOR EOF NOTE.@SA69989
LASTREC  DC    C'*** PADDING RECORD ***' DUMMY LAST RECORD.    @SA69989
LASTRK   DC    F'0'                     SAVE AREA FOR DISK CCHH  A44876
EOTSW    DC    X'00'                    END OF TAPE SWITCH       A44876
TTRSTART DC    X'00000001'              START TTR OF DSK EXTENT@YA07124
         EJECT
LOGDCB   DCB   DSORG=PS,MACRF=WP,DEVD=DA,DDNAME=COMWRITE,NCP=2,        X
               EXLST=DCBXITL,RECFM=U,SYNAD=SYNAD               @SA70175
*                                                                A44876
         EJECT
         SPACE 5                                                 S21903
         LTORG
         EJECT                                                   S21903
*************THE FOLLOWING STMNTS MUST BE KEPT IN SEQUENCE************
         WRITE DECB1,SF,LOGDCB,DECB1,'S',MF=L                   #1
         DC    F'0'                RECORD COUNT FIELD,DECB1     #2
         DC    X'00'               RECORD COUNT INDICATOR       #3
CWCOUNT1 EQU   X'80'               COUNT CONTROL SPECIFIED      #4
CWCTL    DC    X'01'                    DECB1 & B2 STATUS BYTE @SA73145
W1START  EQU   X'80'               DECB1 ACTIVE                 #6
W2START  EQU   X'40'               DECB2 ACTIVE                 #7
         WRITE DECB2,SF,LOGDCB,DECB2,'S',MF=L                   #8
         DC    F'0'                RECORD COUNT FIELD,DECB2     #9
         DC    X'00'               RECORD COUNT INDICATOR       #10
**************************************************
CWCOUNT  EQU   X'18'               DISPL FROM DECB TO COUNTID
CWRCT1   EQU   X'14'               DISPL FROM DECB TO RECCNT
         EJECT
PARMLIST DSECT
PARMAREA DS    F                   POINTER TO DATA AREA
PARMTS   DS    XL1                 USER TEST & SET BYTE
PARMFLAG DS    XL1
CTOPTION EQU   X'80'               RECORD COUNT SPECIFIED
COMPLETE EQU   X'40'               PARMLIST COMPLETE-LIST IS FREE
COMWTCLS EQU   X'20'               REQUEST IMMEDIATE TERMINATION
REQOUT   EQU   X'10'               DATA OUTPUT IS REQUIRED
NOPREFIX EQU   X'08'                    PARMFLAG INDIC NO DATA PREFIX
PARMLEN  DS    H                   LENGTH OF DATA AREA
PARMCT   DS    F                   RECORD COUNT WHEN CTOPTION SPECIFIED
PARMID   DS    F'0'                EBCIDIC PARMLIST ID SUP. BY USER
RCDADDR  EQU   LOGDCB+8                 CCHH OF LAST RCD WRITTEN
*                                       TO DISK                  A44876
BYTEBAL  EQU   LOGDCB+18                BYTE BALANCE ON TRACK    A44876
         EJECT
**************** STAE EXIT RTNE. MAN BE REMOVED WHEN     **************
**************** STAE OPERAND OF ATTACH IS AVAILABLE     **************
STAERTNE CSECT
         USING STAERTNE,R15        PICK UP NEW BASE
         STM   R1,R14,WTOSAVE1          SAVE SYSTEM REGS.      @SA70176
         LA    R13,WTOSAVE
         C     R0,TWELVE           WAS WORK AREA PASSED
         BNE   YES                 YES
         LR    R2,R0               NO-GET CC FROM REG 0
         B     YES+4
YES      L     R2,CC(R1)           GET CC FROM WORK AREA
         LA    R2,0(R2)            CLEAR HI ORD BYTE
         ST    R2,WTOWORK1         PUT IN WORK AREA
         UNPK  WTOWORK2(7),WTOWORK1+1(4) UNPACK
         NI    WTOWORK2,X'0F'      RESET
         MVZ   WTOWORK2+1(5),WTOWORK2 ZONE BITS
         TR    WTOWORK2(6),WTOTABLE & XLATE
         MVC   WTO+18(3),WTOWORK2  MOVE INTO MESSAGE
WTO      WTO   'IED114I  S000 ABEND,COMWRITE CLOSING.',                C
               ROUTCDE=(2,11),DESC=7
         BALR  R15,0                    SET NEW BASE AFTER WTO.@SA70176
         USING *,R15                                           @SA70176
         LM    R1,R0,WTOSAVE1           RESTORE REGS AND SET   @SA70176
*                                     RETURN CODE AND RETRY AD @SA70176
         DROP  R15                                             @SA70176
         BR    R14
WTOTABLE DS    0X                  XLATE TABLE
         DC    C'0123456789ABCDEF'
WTOWORK2 DC    7X'00'              UNPK WORK 2
WTOSAVE  DC    18F'0'              REG SAVE AREA
WTOSAVE1 DC    14F'0'                   SYSTEM REG SAVE AREA.  @SA70176
         DC    A(4),A(STAECLOS)         RC + RETRY ADDRESS.    @SA70176
WTOWORK1 DC    F'0'                UNPK WORK AREA
         DC    X'00'               PADDING
TWELVE   DC    F'12'
         EJECT
         TAVTD
         END
