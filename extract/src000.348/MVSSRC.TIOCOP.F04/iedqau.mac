         SPACE 3                   *
AU02     TITLE '''IEDQAU'' -- CUTOFF ROUTINE AND SUBTASK'   *
         SPACE 3                     *
IEDQAU   CSECT                          *
         SPACE 3                         *
******************** MICROFICHE FLAGS ************************SUPT CODE
*A000000-999999                                  *             @X31X8M0
*C008400                                        *                X02004
*C684000                                     *                   X01004
*A288000,292000,730000,732000                                    S22029
*C008000-008020                                                  S22029
*D140000-148000,716000-728000,736000                             S22029
*A089000-092000,108800-111200,438000,456800-463200,502000        S22025
*C056000,136000,200000,216000,220000,308000,356000,364000-376000 S22025
*C388000,400000,412000,424000,448000,454000                      S22025
*D092000,436000-440000,788000-796000                             S22025
*A028000,108000,164000,168000,188000,208000,228000,884000        A49213
*C208000,220000,788000                                           A49213
*A468000,468100                                                  S21903
*C476000,488000,492000                                           S21903
*A168000,252000                                                 SA56206
*D276000                                                        SA56206
*A320100-322700,842000,996600-887200                             S22024
*C008080,540000,656000,664000                                    S22024
*A136000                                                        SA61096
*C008010-008016                                                 SA61096
*D289000-290000                                                 SA61096
*A091000,108000,110000                                           X03039
*D320100-322700,841000-843000,886400-887600,898000,950000        X03039
*C448000-452000                                                @OS77010
*A452000                                                       @OS77010
*A648000                                                       @ZA04008
*C449000                                                       @OY15455
*A321680                                                       @OY20385
*A110800,044000,084000,009110,009270,320000                    @Y17XAMF
*****    **************************************************************
**                                                                    *
**TITLE:  IEDQAU - CUTOFF ROUTINE AND SUBTASK                         *
**                                                                    *
** MODULE NAME = IEDQAU                                               *
**                                                                    *
** DESCRIPTIVE NAME = CUTOFF ROUTINE AND SUBTASK                      *
**                                                                    *
** COPYRIGHT = 'NONE'                                                 *
**                                                                    *
** STATUS:  CHANGE LEVEL 10                                    @Y17XAMF
**                                                                    *
**FUNCTION -- CUTS OFF A MESSAGE BEING RECEIVED FROM A NON-SNA        *
**  DEVICE AFTER RECEIPT OF A                                  @Y17XAMF
**  USER-SPECIFIED MAXIMUM NUMBER OF BYTES OR ON DETECTION OF         *
**  IDENTICAL CHARACTERS IN THE BUFFER.                               *
**  CUTOFF ROUTINE:                                                   *
**  UPON ENTRY,  THE ROUTINE DETERMINES IF THE CUTOFF FLAG IN  @Y17XAMF
*   THE SCB (SCBCUTFN) IS SET.  ON INITIAL ENTRY,  IT IS NOT.  IF     *
*   THE BUFFER IS A ZERO-LENGTH BUFFER,  CONTROL RETURNS TO THE       *
*   CALLER IMMEDIATELY.                                               *
*                                                                     *
*   THE ROUTINE DETERMINES IF ALL THE CHARACTERS IN THE FIRST UNIT    *
*   OF THE BUFFER ARE IDENTICAL.  IF SO,  THE CUTOFF FUNCTION IS      *
*   INITIATED.                                                        *
*                                                                     *
*   IF NOT,  THE CUTOFF COUNT FIELD IN THE SCB (SCBBKFCT) IS INCRE-   *
*   MENTED BY THE DATA SIZE OF THE CURRENT BUFFER (PRFSIZE).  IF      *
*   THE RESULT IS NOT GREATER THAN THE USER-SPECIFIED MAXIMUM,        *
*   RETURN IS MADE TO THE CALLER.  IF IT IS,  THE CUTOFF FUNCTION     *
**  IS INITIATED.                                                     *
**                                                                    *
**  TO INITIATE THE CUTOFF FUNCTION,  THE CUTOFF FLAG IS SET,  @Y17XAMF
**                                                             @Y17XAMF
**  IF THE CUTOFF RESOURCE IS A PRE-SNA 3705 DEVICE A FID0     @Y17XAMF
**  PIU IS BUILT AND TPOSTED TO IDDSAO.  THE BUFFER FOR THIS   @Y17XAMF
**  PIU IS OBTAINED THRU THE BUFFER STEAL ROUTINE(AVTSTEAL).   @Y17XAMF
**  THE SCB CUTOFF FLAG REMAINS ON IF NO BUFFERS ARE AVAILABLE.@Y17XAMF
**  IF THE DEVICE IS SNA, NO CUTOFF FUNCTION IS PERFORMED.     @Y17XAMF
**                                                             @Y17XAMF
**  IF THE CUTOFF RESOURCE IS AN EP DEVICE, THE LCB ERROR FLAG @Y17XAMF
**  IN THE LCB IS SET AND THE ADDRESS OF THE CUTOFF QCB IS     @Y17XAMF
**  SET IN THE LCB. RETURN IS MADE TO THE CALLER.              @Y17XAMF
*   IF THE CUTOFF ROUTINE IS ENTERED AFTER THE CUTOFF FUNCTION IS     *
*   INITIATED,  THE ROUTINE DETECTS THIS BY EXAMINING THE CUTOFF      *
*   FLAG AND FINDING IT ON.  IF THE LCB QCB FIELD (LCBQCBA) IS ZERO   *
*   THE FUNCTION IS COMPLETE AND RETURN IS MADE TO THE CALLER.  IF    *
*   THE FIELD IS NOT ZERO,  THE ROUTINE DETERMINES IF THIS BUFFER     *
*   IS FLAGGED AS THE LAST BUFFER OF THE MESSAGE.  IF  SO,  THE LCB   *
*   ERROR FLAG IS TURNED OFF.  RETURN IS MADE TO THE CALLER.          *
*                                                                     *
*   CUTOFF SUBTASK:                                                   *
*   THE SUBTASK DETERMINES INITIAL ENTRY BY DETECTING A CHANNEL       *
*   PROGRAM CHECK CONDITION.  THE UCB IS EXAMINED TO DETERMINE WHAT   *
*   CHANNEL PROGRAM IS TO BE SET UP.  FOR TELETYPE TERMINALS,  A      *
*   WRITE BREAK IS SET UP.  FOR IBM 2260 TERMINALS,  IT IS A WRITE    *
*   BREAK AND READ SKIP.  FOR ALL OTHER IBM TERMINALS,  IT IS A       *
*   READ SKIP.  THE SUBTASK PERFORMS AN EXCPVR ON THE CHANNEL PROGRAM *
*   AND EXITS TO THE DISPATCHER AT THE LABEL DSPDISP.                 *
*                                                                     *
*   SUBSEQUENT ENTRY TO THE SUBTASK IS DETECTED BY THE ABSENCE OF     *
*   A CHANNEL PROGRAM CHECK CONDITION.  THE ADDRESS OF THE FIRST      *
*   BUFFER RECEIVED AFTER INITIATION OF THE CUTOFF IS ACCESSED FROM   *
*   THE LCB.  THIS BUFFER IS FLAGGED AS THE LAST BUFFER OF THE        *
*   MESSAGE AND ITS DATA SIZE IS SET TO ONE.  EXIT IS MADE BY         *
*   POSTING THE BUFFER TO THE STARTMH QCB.                            *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAU' TO TEST FOR IDENTICAL CHARACTERS,  INCREMENT AND     *
*   TEST THE CUTOFF COUNT AND INITIATE THE CUTOFF FUNCTION WHEN       *
*   NEEDED.  CALLING SEQUENCE FROM USER INTERFACE IS:                 *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*       'CUTFFQCB' + 12 TO EXECUTE THE CUTOFF CHANNEL PROGRAM AND     *
*   TO POST THE FINAL BUFFER TO MH AFTER THE CHANNEL PROGRAM          *
*   COMPLETES.  THE SUBTASK IS ENTERED AS A RESULT OF THE LINE END    *
*   APPENDAGE'S POSTING THE LCB TO THE CUTOFF QCB.                    *
*                                                                     *
*INPUT,  CUTOFF ROUTINE --                                            *
*   REGISTER 1 -- THE ADDRESS OF A MACRO-GENERATED PARAMETER LIST.    *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        * INDEX * PARM  *   REQUESTED   *                            *
*        *  FOR  *  LIST *    CUTOFF     *                            *
*        *   AU  * LNGTH *     LENGTH    *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 3 -  ADDRESS OF THE SCB                                  *
*                                                                     *
*   REGISTER 4 -  ADDRESS OF THE LCB                                  *
*                                                                     *
*   REGISTER 6 -  ADDRESS OF THE CURRENT BUFFER                       *
*                                                                     *
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE FOR THE ROUTINE        *
*                                                                     *
*   REGISTER 13 - ADDRESS OF THE SAVE AREA FOR THE ROUTINE AND BASE   *
*   FOR AVT ADDRESSABILITY                                            *
*                                                                     *
*OUTPUT, CUTOFF ROUTINE --                                            *
*   SCB CUTOFF COUNT FIELD (SCBBKFCT) - WHEN ENTERED WITH THE SCB     *
*   CUTOFF BIT OFF, CONTAINS THE ACCUMULATED DATA COUNT FOR ALL       *
*   BUFFERS UP TO AND INCLUDING THE CURRENT BUFFER.                   *
*                                                                     *
*   SCB CUTOFF BIT (SCBCUTFN) - WHEN ENTERED WITH THE BIT OFF,  IT    *
*   IS LEFT OFF ON EXIT WHEN THE REQUESTED COUNT IS NOT EXCEEDED      *
*   AND IDENTICAL  CHARACTERS ARE NOT FOUND,  AND IT IS TURNED ON     *
*   WHEN THE COUNT IS EXCEEDED OR IDENTICAL CHARACTERS ARE FOUND.     *
*                                                                     *
*   LCB QCB FIELD (LCBQCBA) - WHEN A CUTOFF CONDITION IS DETECTED,    *
*   SET TO THE ADDRESS OF THE CUTOFF QCB.                             *
*                                                                     *
*   LCB ERROR BIT (LCBERROR) - WHEN ENTERED WITH THE CUTOFF BIT       *
*   OFF,  THIS BIT IS TURNED ON IF A CUTOFF CONDITION IS DETECTED.    *
*   WHEN ENTERED WITH THE CUTOFF BIT ON,  THIS BIT IS TURNED OFF IF   *
*   THE LCB QCB FIELD IS NOT ZEROES BUT THE BUFFER IS FLAGGED AS A    *
*   LAST BUFFER.                                                      *
*                                                                     *
*INPUT,  CUTOFF SUBTASK --                                            *
*   REGISTER 1 - THE ADDRESS OF THE LCB                               *
*                                                                     *
*   REGISTER 7 - THE ADDRESS OF THE CUTOFF QCB,  USED AS THE BASE     *
*   FOR THE SUBTASK                                                   *
*                                                                     *
*   REGISTER 11 - THE ADDRESS OF THE DISPATCHER                       *
*                                                                     *
*   REGISTER 13 - THE ADDRESS OF THE SAVE AREA FOR THE SUBTASK AND    *
*   BASE FOR AVT ADDRESSABILITY                                       *
*                                                                     *
*   LCB CHANNEL STATUS WORD (LCBCSW) - INDICATES CHANNEL PROGRAM      *
*   CHECK ON FIRST DISPATCH,  NOT ON SECOND DISPATCH                  *
*                                                                     *
*OUTPUT,                                                       @Y17XAMF
*   IF CUTOFF DEVICE IS 3705 PRE-SNA A RESET IMMEDIATE IS SENT @Y17XAXF
*   TO IEDSAO.                                                 @Y17XAMF
*                                                              @Y17XAMF
*   CUTOFF SUBTASK:                                            @Y17XAMF
*   LCB CHANNEL PROGRAM AREA (LCBCPA) + 16 - CONTAINS THE CCWS        *
*   EXECUTED TO PERFORM THE CUTOFF FUNCTION                           *
*                                                                     *
*   LCB QCB FIELD (LCBQCBA) - AFTER SECOND DISPATCH,  CLEARED TO      *
*   ZEROES                                                            *
*                                                              @Y17XAMF
*   RETURN CODES.                                              @Y17XAMF
*   R15 = 0  CUTOFF FUNCTION EXECUTED CORRECTLY.               @Y17XAMF
*         4  NO BUFFER AVAILABLE FOR BUILDING RESET IMMEDIATE  @Y17XAMF
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED                                  *
*                                                                     *
*   LCB - LINE CONTROL BLOCK                                          *
*                                                                     *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*   DCB - DATA CONTROL BLOCK                                          *
*                                                                     *
*   DEB - DATA EXTENT BLOCK                                           *
*                                                                     *
*   UCB - UNIT CONTROL BLOCK                                          *
*                                                                     *
*EXITS,  NORMAL,  CUTOFF ROUTINE -- DATA LENGTH HAS NOT REACHED THE   *
*   CUTOFF LIMIT AND IDENTICAL CHARACTERS ARE NOT FOUND IN THE        *
*   BUFFER.  SCBBKFCT IS INCREMENTED BY THE DATA SIZE IN THIS         *
*   BUFFER.                                                           *
*                                                                     *
*   DATA LENGTH HAS REACHED THE CUTOFF LIMIT,  OR IDENTICAL CHARAC-   *
*   TERS ARE FOUND IN THE BUFFER.  THE SCB CUTOFF BIT IS TURNED ON.   *
*   THE ADDRESS OF THE CUTOFF QCB IS SET INTO THE LCB.  THE LCB       *
*   ERROR FLAG IS TURNED ON.                                          *
*                                                                     *
*   A BUFFER FLAGGED AS THE LAST BUFFER IS BEING PROCESSED AND THE    *
*   CUTOFF FLAG IS ON.  IF THE LCB QCB FIELD IS NOT ZEROES,  THE      *
*   LCB ERROR BIT IS TURNED OFF.                                      *
*                                                                     *
*EXITS,  NORMAL,  CUTOFF SUBTASK --                                   *
*   A CUTOFF CONDITION HAS BEEN DETECTED.  THE LCB CHANNEL PROGRAM    *
*   AREA CONTAINS THE CCWS EXECUTED TO PERFORM THE CUTOFF FUNCTION.   *
*   THE LCB ERROR BIT IS TURNED OFF.                                  *
*                                                                     *
*   A CUTOFF FUNCTION HAS BEEN PERFORMED.  THE LCB QCB FIELD IS       *
*   CLEARED TO ZERO.  THE FIRST BUFFER RECEIVED AFTER INITIATION      *
*   OF THE CUTOFF FUNCTION IS POSTED TO THE STARTMH QCB FLAGGED AS    *
*   THE LAST BUFFER AND WITH A SIZE OF ONE.                           *
*                                                                     *
*EXITS,  ERROR - N/A                                                  *
*                                                                     *
*TABLES/WORK AREAS --                                                 *
*   MODEL CCWS NEEDED TO PERFORM EACH OF THE POSSIBLE CUTOFF          *
*   PROCEDURES                                                        *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE,  REFRESHABLE,  ENABLED,             *
*   RESIDENT,  PROBLEM PROGRAM MODE.                                  *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN        *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
R1       EQU   1                        PARAMETER LIST ADDRESS
RCCW2    EQU   2                        ADDRESS OF CCW
R2       EQU   2                        WORK REG                 A49213
RSCB3    EQU   3                        SCB ADDRESS
R4       EQU   4                        LCB ADDRESS
R5       EQU   5                        LAST DATA BYTE ADDRESS
RPREFIX  EQU   6                        BUFFER ADDRESS
RSAVT    EQU   7                        SAVT ADDRESS           @Y17XAMF
R7       EQU   7                        CUTOFF QCB ADDRESS
R8       EQU   8                        DATA SIZE
RAVT     EQU   9                        ADDRESS OF AVT           S22025
R10      EQU   10                       REG 10                   S22024
RDCB10   EQU   10                       DCB ADDRESS
R11      EQU   11                       DISPATCHER ADDRESS
R12      EQU   12                       BASE REGISTER
R13      EQU   13                       SAVE AREA ADDR & AVT BASE
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         EJECT
NUMUNT   EQU   1                        NUMBER OF UNITS        @Y17XAMF
NUMBUF   EQU   1                        NUMBER OF BUFFERS      @Y17XAMF
FOUR     EQU   4                        VALUE 4                  S22024
SEVEN    EQU   7                        VALUE 7                  S22024
EIGHT    EQU   8                        VALUE 8                  S22024
         SPACE 2
         USING IEDQAVTD,RAVT                                     S22025
         USING IEDQLCB,R4
         USING IEDQPRF,RPREFIX
         USING IEDQSCB,RSCB3
         USING IEDQAU,R12
         SPACE 2
IEDQAU   IEDHJN ENTER                                            S22025
         LR    R8,R1                    SAVE PARM LIST ADDR      X03039
         LH    R1,LCBTTCIN              TNT INDEX                X03039
         N     R1,AVTCLRHI              CLEAR HI HALF            X03039
         BZ    RESTPARM                 IF ZERO THEN NOT VTAM TRMX03039
*                                                                X03039
         L     R15,AVTRNMPT             TNT CODE                 X03039
         BALR  R14,R15                  GET TERMINAL ADDRESS     X03039
*                                                                X03039
         SR    R15,R15                  INITIALIZE RETURN CODE @Y17XAMF
         SH    R1,TPREFIX               CALCULATE ADDRESS OF   @Y17XAMF
         USING IEDNTRM,R1                TTE PREFIX            @Y17XAMF
         TM    TRMSTATE,TRMPREF         IS RESOURCE EP         @Y17XAMF
         BNO   RESTPARM                 YES, BRANCH            @Y17XAMF
         TM    TRMBYTE0,TRMSNA          IS RESOURCE SNA        @Y17XAMF
         BO    EXIT                     YES, BRANCH            @Y17XAMF
         DROP  R1                       YES, BRANCH            @Y17XAMF
RESTPARM EQU   *                                                 X03039
         LR    R1,R8                    RESTORE PARM LIST ADDR   X03039
         SPACE
         TM    SCBERR1,SCBCUTFN         IS CUTOFF FLAG SET
         BO    CKEND                    CHECK IF END OF MESSAGE
         SPACE
         LH    R8,PRFSIZE               GET TOTAL DATA COUNT
         N     R8,AVTCLRHI
         BZ    TEST                     EXIT IF ZERO-LENGTH BUFF S22025
         TM    PRFSTAT1,PRFTSMSG       THIS TSO MSG             SA61096
         BO    TSOM                    USE CURRENT DATA COUNT   SA61096
               SPACE
         LH    R5,AVTKEYLE              UNIT SIZE - 12
         LR    R7,R5                    COPY
         LA    R0,PRFSTXT+2-PRFNBUNT    TEXT PREFIX SIZE
         CH    R8,AVTKEYLE              IS DATA SIZE > KEYLNGTH  A49213
         BNL   USEKEY                   YES, USE KEYLENGTH FOR   A49213
*                                       COMPARE                  A49213
         LR    R5,R8                    USE DATA SIZE FOR COMPRE A49213
USEKEY   EQU   *                                                 A49213
         SR    R2,R2                    CLEAR REG                A49213
         IC    R2,LCBISZE               INSERT # OF RESERVE CHAR A49213
         AR    R0,R2                    INCREMENT BY # RES CHARS A49213
         SR    R5,R0                    CALCULATE COUNT COR CLC
         BM    NOMTCH                   ONLY 1 CHAR-SKIP COMPAR SA56206
         LR    R11,RPREFIX              LOAD BUFFER ADDR         A49213
         AR    R11,R0                   INCREMENT BY LENGTH OF   A49213
*                                       PREFIX+2+ # OF RESERVE   A49213
*                                       CHARACTERS               A49213
         LA    R11,10(R11)              INCREMENT BY LENGTH OF   A49213
*                                       UNIT CTRL AREA (MINUS    A49213
*                                       THE 2 ADDITIONAL BYTES   A49213
*                                       IN REG 0) TO POINT TO    A49213
*                                       BEGINNING OF TEXT        A49213
         LR    R15,R11                  SAVE PTR TO 1ST CHAR     A49213
         EX    R5,CLCX                  CHECK FOR IDENTICAL CHARS
         BNE   NOMTCH                   BRANCH NOT IDENTICAL
*
         SR    R5,R5                    CLEAR
         IC    R5,PRFNBUNT              NUMBER OF UNITS IN BUFFER
         LR    R10,R7                   SAVE UNITSIZE            A49213
         LR    R2,R8                    GET TOTAL DATA SIZE      A49213
         SR    R2,R10                   DECREMENT TOTAL BY LNGTH A49213
*                                       OF 1ST UNIT ALREADY      A49213
*                                       CHECKED.                 A49213
         BCTR  R7,0                     DECTEMENT FOR EXECUTED
         BCTR  R7,0                     COMPARE
         LR    R11,RPREFIX              SET BUFFER ADDRESS       S22025
CKNB     EQU   *
         BCT   R5,AROUND                LAST UNIT?               A49213
         B     SETCUT                   YES,GO SET FLAG          A49213
AROUND   EQU   *                                                 A49213
*
         L     R11,PRFTIC-IEDQPRF(R11)  NEXT UNIT ADDRESS        S22025
         CLC   ZERO(ONE,R15),PRFSUNIT-IEDQPRF(R11) SAME CHAR     A49213
*                                       AS FIRST UNIT?           A49213
         BNE   NOMTCH                   BRANCH NOT IDENTICAL
         SR    R2,R10                   DECREMENT BY UNIT SIZE   A49213
         BNM   CONTINUE                 IF NOT NEGATIVE, DATA >  A49213
*                                       UNIT SIZE, CONTINUE.     A49213
         AR    R7,R2                    ADD NEGATIVE R2 TO R7 TO A49213
*                                       OBTAIN REMAINING DATA    A49213
*                                       LENGTH.                  A49213
CONTINUE EQU   *                                                 A49213
         EX    R7,CLCUNT                COMPARE
         BE    CKNB                     BRACH EQUAL - CHECK NEXT UNIT
*
NOMTCH   EQU   *
         L     RDCB10,LCBDCBPT          DCB ADDRESS
         USING IHADCB,RDCB10
         SR    R5,R5                    CLEAR IF OVER 255       SA56206
         IC    R5,DCBRESER+1            TEST RESERVE COUNT
         LA    R5,AVTTXTSZ(R5)          ADD TEXT PREFIX SIZE
         TM    PRFSTAT1,PRFNHDRN        TEXT PREFIX ?
         BO    TEXT                     BRANCH YES
*
         IC    R5,DCBRESER              HEADER RESERVE COUNT
         LA    R5,AVTHDRSZ(R5)          ADD HEADER PREFIX SIZE
TEXT     EQU   *
         SR    R8,R5                    DATA COUNT
TSOM     EQU   *                                                 S22029
         AL    R8,SCBBKFCT-1            ADD TO ACCUMULATED COUNT
         ST    R8,SCBBKFCT-1              ACCUMULATED
         CLC   2(2,R1),SCBBKFCT+1       COMPARE TO CUTOFF VALUE
         BH    TEST                     BRANCH LIMIT NOT REACHED S22025
*
SETCUT   EQU   *
         OI    SCBERR1,SCBCUTFN         SET ON CUTOFF FLAG IN SCB
         CLI   LCBFLAG1,AVTEZERO        IF IT A PLCB           @Y17XAMF
         BNE   NOTPLCB                  NO, BRANCH             @Y17XAMF
         LA    R0,NUMUNT                GET A BUFFER WITH      @Y17XAMF
         LA    R1,NUMBUF                 ONE UNIT VIA THE      @Y17XAMF
         L     R15,AVTSTEAL              BUFFER STEAL          @Y17XAMF
         BALR  R14,R15                   ROUTINE               @Y17XAMF
         LTR   R15,R15                  WAS BUFFER OBTAINED    @Y17XAMF
         BNZ   BLDRESET                 YES, BRANCH            @Y17XAMF
         LA    R15,FOUR                 SET RETURN CODE        @Y17XAMF
         B     EXIT                     EXIT ROUTINE           @Y17XAMF
         EJECT                                                 @Y17XAMF
***************************************************************@Y17XAMF
*        BUILD RESET IMMEDIATE FOR IEDSAO                      @Y17XAMF
***************************************************************@Y17XAMF
BLDRESET DS    0H                                              @Y17XAMF
         SH    R15,PREFIX               CALCULATE ADDR OF      @Y17XAMF
         USING IEDPF2,R15                BUFFER PREFIX         @Y17XAMF
         XC    IEDPF2(PRF2LEN),IEDPF2   INITIALIZE THE PREFIX  @Y17XAMF
         OI    PRF2FLG2,PRF2TNTI         WITH TNT INDICATORS   @Y17XAMF
         DROP  R15                                             @Y17XAMF
         SPACE 1                                               @Y17XAMF
         DROP  RPREFIX                                         @Y17XAMF
         AH    R15,PREFIX               GET ADDR TO HEADER OF  @Y17XAMF
         LR    R1,R15                    BUFFER AND SAVE FOR   @Y17XAMF
         USING IEDQPRF,R15               TPOSTING BUFFER       @Y17XAMF
         L     RSAVT,AVTSAVTP           GET ADDRESSABILITY TO  @Y17XAMF
         USING IEDNSVTD,RSAVT            SAVT                  @Y17XAMF
         MVC   PRFQCBA(L'PRFQCBA),SAVTSAO+ONE WILL TPOST TO SAO@Y17XAMF
         MVI   PRFPRI,PRIOUTQ           SET PRIORITY           @OY20385
         MVI   PRFPIUO,ONE              PIU FOLLOWS PRFPIUO    @Y17XAMF
         LA    R15,PRFPIUO+ONE          GET ADDRESSABILITY TO  @Y17XAMF
*                                        TH                    @Y17XAMF
         SPACE 1                                               @Y17XAMF
         DROP  R15                                             @Y17XAMF
         USING IEDQPRF,RPREFIX                                 @Y17XAMF
         USING IEDTH,R15                                       @Y17XAMF
         MVI   TTHBYTE0,TTH0BYT0        INITIALIZE FOR         @Y17XAMF
         MVI   TTHBYTE1,TTH0BYT1         FID0 PIU              @Y17XAMF
         MVC   TTHDAF(L'TTHDAF),PRFSRCE MOVE TTCIN OF SOURCE   @Y17XAMF
         MVC   TTHOAF(L'TTHOAF),SAVTTCPU MOVE TCAM PU TTCIN    @Y17XAMF
         XC    TTHTAG(L'TTHTAG),TTHTAG  ZERO TAG FIELD         @Y17XAMF
         MVC   TTHDCF(L'TTHDCF),DCFVAL  INDICATE LENGTH OF DATA@Y17XAMF
         DROP  R15                                             @Y17XAMF
         SPACE 1                                               @Y17XAMF
         USING IEDPIU0,R15                                     @Y17XAMF
         MVC   PIU0RH(L'PIU0RH),TRHFID0 INITIALIZE FOR         @Y17XAMF
         MVI   PIU0PAD,PIU0PAD0          FID0 PIU              @Y17XAMF
         DROP R15                                              @Y17XAMF
         SPACE 1                                               @Y17XAMF
         LA    R15,PIU0LEN(,R15)        CALCULATE ADDR OF BDU  @Y17XAMF
         USING IEDBDU,R15                                      @Y17XAMF
         MVI   BDUCMND,CD0CTRL          IS A CONTROL COMMAND   @Y17XAMF
         MVI   BDUMODIF,CD0CRI          IS A RESET IMMEDIATE   @Y17XAMF
         XC    BDUFNFLG(L'BDUFNFLG+L'BDUBDUFG+L'BDUSYRSP+L'BDUEXRSP),BD*
               UFNFLG                   NO FLAGS ARE SET       @Y17XAMF
         DROP  R15                                             @Y17XAMF
         SPACE 1                                               @Y17XAMF
         L     R11,AVTEA                GET DISPATCHER ADDR    @Y17XAMF
         USING IEDQDISP,R11                                    @Y17XAMF
         LR    R0,R13                   CURRENT SAVE AREA ADDR @YM06908
         LA    R13,AVTSAVE2             DSPPOSTR'S AVT POINTER @YM06908
         BAL   R14,DSPPOSTR             TPOST THE RESET IMMED  @Y17XAMF
         LR    R13,R0                   RESTORE SAVE AREA ADDR @YM06908
         DROP  R11                                             @YM06908
         B     EXIT                                            @Y17XAMF
         EJECT                                                 @Y17XAMF
NOTPLCB  DS    0H                                              @Y17XAMF
         LA    R7,CUTFFQCB              ADDRESS OF CUTOFF QCB
         ST    R7,LCBQCBA-1             PUT CUTOFF QCB ADDR IN LCB
CKEND    EQU   *
         SR    R15,R15                  INITIALIZE RETURN CODE @Y17XAMF
         TM    LCBERBST,LCBDLNKN        IS ERB POSTABLE
         BO    SETNO                    BRANCH YES - SET NOT
*
         LA    R10,LCBERB               ERB ADDRESS
         LA    R5,2                     SET FOR BCT
         LA    R11,AVTBFRTB-4           BUFFER RETURN QUEUE      S22025
NEXT     EQU   *
         LR    R7,R11                   SAVE LAST ELEMENT ADDR   S22025
         L     R11,4(,R7)               NEXT ELEMENT             S22025
         LA    R11,0(,R11)              CLEAR HIGH ORDER BYTE    S22025
         CLR   R11,R10                  IS ERB IN THIS QUEUE?    S22025
         BE    REMOVE                   BRANCH YES - REMOVE
*
         C     R11,AVTDELAD             IS THIS DUMMY END ELEMENTS22025
         BNE   NEXT                     BRANCH NO - CONTINUE SCAN
*
         LA    R11,AVTREADY-4           SEARCH READY QUEUE       S22025
         BCT   R5,NEXT                  SCAN READY QUEUE ONCE
*
         B     TEST                     EXIT IF IN NEITHER QUEUE S22025
*                                       WAIT
REMOVE   EQU   *
         MVC   5(3,R7),5(R11)           REMOVE ERB FROM QUEUE    S22025
SETNO    EQU   *
         NI    LCBERBST,LCBDLNKF        SET ERB UN-POSTABLE
TEST     EQU   *                                                 S22025
         TM    PRFSTAT1,PRFNLSTN        IS BUFFER MARKED LAST
         BNO   TSTCUTOF                 YES CHECK CUTTOFF      @OS77010
         TM    PRFSTAT1,PRFITCPN        TEMPORARY END OF MSG   @OY15455
         BNO   EXIT                     NO, RETURN             @OS77010
TSTCUTOF EQU   *                                               @OS77010
         TM    SCBERR1,SCBCUTFN         WAS CUTOFF EXECUTED
         BC    EIGHT,EXIT               BRANCH TO EXIT IF NO     S22025
*
         OI    LCBERBST,LCBDLNKN        SET ERB POSTABLE
EXIT     EQU   *                                                 S22025
         L     R12,AVTUI                GET RETURN INTERFACE ADDRS22025
         B     FOUR(R12)                BRANCH TO RETURN ROUTINE S22025
         SPACE 1                                                 S22025
********* EXECUTED INSTRUCTIONS *********                        S22025
         SPACE 1                                                 S22025
CLCX     CLC   ZERO(ZERO,R11),ONE(R11)  COMPARE                  S22024
         SPACE 1                                                 S22025
CLCUNT   CLC   PRFNBUNT-IEDQPRF+1(1,R11),PRFNBUNT-IEDQPRF(R11)   S22024
         SPACE
         EJECT
*THIS CODE SETS UP THE CUTOFF QCB                                S21903
         SPACE 1                                                 S21903
         DS    0F
         ORG   *-8                      SETUP FOR CUTOFF QCB     S21903
CUTFFQCB EQU   *                        START OF CUTOFF QCB
         ORG
         DC    AL1(DSPMCPL4)            QCB MCPL FIELD           S21903
         DC    AL3(*-1)                 QCB POINTER FIELD        S21903
         USING CUTFFQCB,R7
         USING IEDQDISP,R11
         USING AVTSAVE2,R13                                      S22025
         SPACE
         LR    R4,R1                    LCB ADDRESS TO R4
         L     RDCB10,LCBDCBPT          GET DCB ADDR FROM LCB
         USING IHADCB,RDCB10
         TM    LCBCSW+4,CHPGM           CHANNEL PROGRAM CHECK
         BZ    POSTBFR                  BRANCH NO - CUTOFF COMPLETE
*
         NI    LCBERBST,X'FF'-LCBERROR  RESET ERROR FLAG
         L     RDCB10,DCBDEBAD          GET DEB ADDR FROM DCB
         USING DEBNMSUB,RDCB10          DEB ADDRESSABILITY       S22024
         L     RDCB10,DEBUCBAD          UCB ADDRESS
         LA    RCCW2,CCWLIST            POINT TO WRITE BREAK
         LA    R15,CCWLEN-1             MOVE ONE CCW
         IC    R0,UCBTBYT4-UCBOB(RDCB10)    PICK UP UNIT TYPE
         STC   R0,AVTDOUBL              STORE IN AVT
         NI    AVTDOUBL,ADAPMASK        CLEAR LOW-ORDER NIBBLE
         CLI   AVTDOUBL,TTAI            IS IT TELEGRAPH ADAPTER I
         BE    SETCCWAD                 YES, GO DO WRITE BREAK
         SPACE
         LA    RCCW2,CCWLEN(,RCCW2)     POINT TO READ SKIP
         CLI   AVTDOUBL,IBMAIII         IS IT IBM ADAPTER III
         BNE   SETCCWAD                 NO, GO DO READ SKIP
         SPACE
         IC    R0,UCBTBYT1-UCBOB(RDCB10)  MODEL BYTE
         STC   R0,AVTDOUBL              STORE IN AVT
         NI    AVTDOUBL,MODLMASK        CLEAR HIGH-ORDER NIBBLE
         CLI   AVTDOUBL,MODEL1          IS IT MODEL 1
         BNE   SETCCWAD                 NO, GO DO READ SKIP
         SPACE
         LA    RCCW2,CCWLEN(,RCCW2)     POINT TO SPECIAL 2260 CCWS
         LA    R15,CCWLEN(,R15)         MOVE TWO CCW'S
         SPACE
SETCCWAD EQU   *
         EX    R15,MVCX                 MOVE CCW TO LCB
         STCM  R13,7,LCBCPA+17          SET DUMMY DATA ADDR    @ZA04008
         LA    RCCW2,LCBCPA+16          POINT TO WHERE MOVED
         IC    R0,LCBSTART-1            SAVE HI-BYTE             S22024
         ST    RCCW2,LCBSTART-1         POINT LCB TO CCW(S)
         STC   R0,LCBSTART-1            STORE HI-BYTE BACK       S22024
         LA    R1,LCBFLAG1              POINT R1 TO IOB
         LA    R0,TPOP                  PICK UP TP OP CODES
         STH   R0,LCBTPCD+2             SET UP LCB
         SPACE
         EXCPVR (1),SUBSYS                                       X01004
         SPACE
         B     DSPDISP                  RETURN TO DISPATCHER
         EJECT
POSTBFR  EQU   *
         USING IHADCB,RDCB10
         OI    LCBERBST,LCBDLNKN        SET ERB POSTABLE
         L     R1,LCBLSPCI-1            ADDRESS OF FIRST BUFFER
         SR    R5,R5
         TM    PRFSTAT1-IEDQPRF(R1),PRFTSMSG  THIS TS MSG        S22029
         BO    TSO0500                  SKIP RESERVE COUNT       S22029
         IC    R5,DCBRESER+1            TEXT RESERVE COUNT
TSO0500  EQU   *                                                 S22029
         LA    R5,AVTTXTSZ+1(R5)        SET = ONE DATA BYTE
         STH   R5,PRFSIZE-IEDQPRF(R1)   DO NOT TRANSLATE ENTIRE BFR
         NI    PRFSTAT1-IEDQPRF(R1),X'FF'-PRFNLSTN  NOT LAST OFF
         L     R0,DCBMH-1               ADDRESS OF STARTMH
         CLI   LCBFLAG1,LCBPLCB         PSEUDO LCB             @YM06085
         BNE   GOTMH                    BR NO, HAVE QCB        @YM06085
         L     R0,LCBMHA-1              GET PROPER MH QCB      @YM06085
GOTMH    EQU   *                                               @YM06085
         ST    R0,PRFQCBA-IEDQPRF-1(R1)  SET QCB ADDRESS
         MVI   PRFPRI-IEDQPRF(R1),PRIMHBFR   SET PRIORITY
         BAL   R14,DSPPOST              EXIT TO DISPATCHER     @Y17XAMX
*
         SPACE
********* EXECUTED INSTRUCTIONS *********
         SPACE
         SPACE
MVCX     MVC   LCBCPA+16(0),0(RCCW2)    MOVE                     S22024
         SPACE
********* MODEL CCWS *********
         SPACE
CCWLIST  CCW   13,CCWLIST,X'00',30      WRITE BREAK
         SPACE
         CCW   2,CCWLIST,X'10',65535    READ SKIP
         SPACE
         CCW   66,CCWLIST,X'70',960     SPECIAL 2848 READ SKIP
         CCW   65,CCWLIST,X'00',1000    SPECIAL 2848 BREAK
         EJECT
********* OTHER EQUATES *********
         SPACE
CHPGM    EQU   X'20'                    FLAG                     S22024
TPOP     EQU   X'0202'                  FLAGS                    S22024
ADAPMASK EQU   X'F0'                    LOW-ORDER NIBBLE CLEAR MASK
TTAI     EQU   X'40'                    TELEGRAPH ADAPTER TYPE I
TTAII    EQU   X'50'                    TELEGRAPH ADAPTER TYPE II
IBMAIII  EQU   X'80'                    IBM ADAPTER TYPE III
MODLMASK EQU   X'0F'                    HI-ORDER NIBBLE CLEAR MASK
MODEL1   EQU   X'01'                    MODEL 1 FLAG
ZERO     EQU   0                        VALUE 0                  S22024
         SPACE
TPOPCUTF EQU   0                        CUTOFF CLEANUP TP OP CODE
ONE      EQU   1                        INCREMENT VALUE OF 1
CCWLEN   EQU   8                        LENGTH OF ONE CCW
REG2OFF  EQU   28                       OFFSET TO REG2 IN SAVE AREA
DCFVAL   DC    AL2(TRH1LEN+BDULEN+L'PIU0PAD) DATA CNT FLD VAL  @Y17XAMF
TRHFID0  DC    X'0B8000'                FID0 RH VALUE          @Y17XAMF
TPREFIX  DS    0H                                              @Y17XAMF
         DC    AL2(TRMPRFSZ)            LEN OF TTE PREFIX      @Y17XAMF
PREFIX   DS    0H                                              @Y17XAMF
         DC    AL2(PRF2LEN)             LEN OF BUFFER PREFIX   @Y17XAMF
********** DSECTS ********
         SPACE
         TAVTD
         EJECT
         TBDUD
         EJECT
         TCD0D
         EJECT
         DCBD  DSORG=TX
         TDEBD
         EJECT
         TQCBD
         EJECT
         TDISPD
         TLCBD
         EJECT
         TPIU0D
         EJECT
         TPRFD
         TPRIOR
         TSCBD
         IEFUCBOB
         TTRMD ,                                                 S22024
         EJECT
         TRHD
         EJECT
         TTHD
         END
