         TITLE 'IEDPMD - MANUAL DIAL PROCESSING                        *
                        '
IEDPMD   CSECT ,                                                   0001
@PROLOG  DS    0H                                                  0002
*                                         /*
      USING  IEDPMD,REG15
IEDPMD IEDHJN AFTERHJN,HJN
*   IF RPARM->PRFPRI=PRIPIUCP THEN  /* IF OP CTL INPUT ...           */
         CLI   PRFPRI(RPARM),X'00'                                 0221
         BNE   @RF00221                                            0221
*     DO;                           /* ... USE OP CTL WORKAREA       */
*       STM(REG0,REG14,OPCTWORK);   /* SAVE USERS REGS               */
         STM   REG0,REG14,OPCTWORK                                 0223
*       RDUAL=ADDR(OPCTWORK);       /* INITIALIZE WORK AREA BASE     */
         LA    RDUAL,OPCTWORK                                      0224
*     END;                                                         0225
*   ELSE                            /* ... USE TCAM WORKAREA         */
*     DO;                                                          0226
         B     @RC00221                                            0226
@RF00221 DS    0H                                                  0227
*       STM(REG0,REG14,TCAMWORK);   /* SAVE USERS REGS               */
         STM   REG0,REG14,TCAMWORK                                 0227
*       RDUAL=ADDR(TCAMWORK);       /* INITIALIZE WORK AREA BASE     */
         LA    RDUAL,TCAMWORK                                      0228
*     END;                                                         0229
*   RFY                                                            0230
*    (REG0,                                                        0230
*     RWORK,                                                       0230
*     REG5,                                                        0230
*     REG7,                                                        0230
*     RTERM,                                                       0230
*     RRUDATA,                                                     0230
*     REG10,                                                       0230
*     REG11,                                                       0230
*     REG14) UNRSTD;                /* FREE ALL REGS POSSIBLE FOR  0230
*                                      COMPILER                      */
@RC00221 DS    0H                                                  0231
*   IEDQPPTR=RPARM;                 /* GET BUFFER ADDRESS            */
         LR    IEDQPPTR,RPARM                                      0231
*   RFY                                                            0232
*     RPARM UNRSTD;                                                0232
*   RBASE=REG15;                    /* ESTABLISH BASE REG            */
         LR    RBASE,REG15                                         0233
*   GEN NOREFS NOSETS;                                             0234
       DROP  REG15
       USING IEDPMD,RBASE
*   RFY                                                            0235
*     REG15 UNRSTD;                                                0235
*   PMDWORK=PMDWORK&&PMDWORK;       /* CLEAR WORK AREA FOR PMD       */
         XC    PMDWORK(48,RDUAL),PMDWORK(RDUAL)                    0236
*   PMDWTO=' ';                     /* CLEAR WTOLIST FOR EXECUTE     */
         MVI   PMDWTO+1(RDUAL),C' '                                0237
         MVC   PMDWTO+2(122,RDUAL),PMDWTO+1(RDUAL)                 0237
         MVI   PMDWTO(RDUAL),C' '                                  0237
*   IF PRFPRI=PRIPIUCP THEN         /* IF COMPACTED PIU FROM OP CTL  */
         CLI   PRFPRI(IEDQPPTR),X'00'                              0238
         BNE   @RF00238                                            0238
*     DO;                                                          0239
*       RFY                                                        0240
*         IEDPRUQD BASED(IEDQPPTR); /* PACKED PIU OVERLAY BUFFER     */
*       RFY                                                        0241
*        (RTERM,                                                   0241
*         RRUDATA,                                                 0241
*         RBDU) RSTD;                                              0241
*       RTERM=PRUTTCIN;             /* TNT INDEX                     */
         LH    RTERM,PRUTTCIN(,IEDQPPTR)                           0242
         N     RTERM,@CF01244                                      0242
*       RBDU=ADDR(PRUDATA);         /* BDU BASE                      */
         LA    RBDU,PRUDATA(,IEDQPPTR)                             0243
*     END;                                                         0244
*   ELSE                            /* REGULAR PIU FROM DEBLOCK      */
*     DO;                                                          0245
         B     @RC00238                                            0245
@RF00238 DS    0H                                                  0246
*       RFY                                                        0246
*         IEDPIU0 BASED(ADDR(PRFPIUO)+PRFPIUO);/* FID0 PIU BASE    0246
*                                      OVERLAY BUFFER                */
*       RFY                                                        0247
*         IEDTH BASED(ADDR(PIU0TH));/* TH BASE                       */
*       RTERM=TTHOAF;               /* TNT INDEX                     */
         LA    @10,PRFPIUO(,IEDQPPTR)                              0248
         SLR   @07,@07                                             0248
         IC    @07,PRFPIUO(,IEDQPPTR)                              0248
         ALR   @10,@07                                             0248
         SLR   RTERM,RTERM                                         0248
         ICM   RTERM,3,TTHOAF(@10)                                 0248
*       RBDU=ADDR(PIU0RU);          /* BDU BASE                      */
         LA    RBDU,PIU0RU(,@10)                                   0249
*     END;                                                         0250
*   RRUDATA=RBDU+LENGTH(IEDBDU);    /* FIRST BYTE OF DATA FOLLOWING
*                                      BDU                           */
@RC00238 LA    RRUDATA,6                                           0251
         ALR   RRUDATA,RBDU                                        0251
*   IEDQNPTR=AVTRNMPT;              /* BASE FOR TNTCODE              */
         L     IEDQNPTR,AVTRNMPT(,RAVT)                            0252
*   RTERM=ADDR(TNTFIRST)+((RTERM-1)*(TNTENLEN+3));/* FIND TNT ENTRY
*                                      WITHIN TNT                    */
         LA    @10,82                                              0253
         ALR   @10,IEDQNPTR                                        0253
         LR    @01,RTERM                                           0253
         BCTR  @01,0                                               0253
         SLR   @07,@07                                             0253
         IC    @07,TNTENLEN(,IEDQNPTR)                             0253
         LA    @15,3                                               0253
         ALR   @15,@07                                             0253
         MR    @00,@15                                             0253
         ALR   @10,@01                                             0253
         LR    RTERM,@10                                           0253
*   WKTERMN(1:TNTENLEN)=TERMNAM(1:TNTENLEN);/* PUT NAME IN MSG       */
         LR    @10,@07                                             0254
         BCTR  @10,0                                               0254
         EX    @10,@SM01245                                        0254
*   RTERM=TERMAD;                   /* GET TERM ENTRY ADDRESS        */
         ALR   @07,RTERM                                           0255
         BCTR  @07,0                                               0255
         L     @10,TERMAD(,@07)                                    0255
         LA    @10,0(,@10)                                         0255
         LR    RTERM,@10                                           0255
*                                                                  0256
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS PHASE1 (X'20') RESPONSE: GET LINENAME AND DIGITS FOR  */
*   /* MANUAL DIAL                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0256
*   RFY                                                            0256
*     RPARM RSTD;                                                  0256
*   IF BDUPHASE=RSP20 THEN          /* IF HANDLING PHASE I           */
         TM    BDUPHASE(RBDU),B'00100000'                          0257
         BNO   @RF00257                                            0257
         TM    BDUPHASE(RBDU),B'01000000'                          0257
         BNZ   @RF00257                                            0257
*     DO;                           /* GET LINE NAME & DIGITS        */
*       RFY                                                        0259
*         REG15 RSTD;                                              0259
*       TRMANDL=ON;                 /* SET MANUAL DIAL IN PROCESS    */
         LR    @05,RTERM                                           0260
         AL    @05,@CF01251                                        0260
         LA    @07,TRMANDL-2(,@05)                                 0260
         LR    @00,@07                                             0260
         LA    @14,3                                               0260
         NR    @00,@14                                             0260
         LCR   @00,@00                                             0260
         ALR   @07,@00                                             0260
         L     @14,0(,@07)                                         0260
@GL00001 LR    @10,@14                                             0260
         O     @10,@CB01247+3(@00)                                 0260
         CS    @14,@10,0(@07)                                      0260
         BNE   @GL00001                                            0260
*       RPARM=NETADDR;              /* NETWORK ADDRESS TO ROUTINE    */
         SLR   RPARM,RPARM                                         0261
         ICM   RPARM,3,NETADDR(RRUDATA)                            0261
*       CALL IEDIAP03;                                             0262
         L     @10,AVTSAVTP(,RAVT)                                 0262
         L     @15,SAVTNAX(,@10)                                   0262
         BALR  @14,@15                                             0262
*       RTERM=ADDR(TNTFIRST)+((REG15-1)*(TNTENLEN+3));             0263
         LA    RTERM,82                                            0263
         ALR   RTERM,IEDQNPTR                                      0263
         LR    @05,REG15                                           0263
         BCTR  @05,0                                               0263
         SLR   @14,@14                                             0263
         IC    @14,TNTENLEN(,IEDQNPTR)                             0263
         LA    @10,3                                               0263
         ALR   @10,@14                                             0263
         MR    @04,@10                                             0263
         ALR   RTERM,@05                                           0263
*       RFY                                                        0264
*        (RBDU,                                                    0264
*         REG15) UNRSTD;                                           0264
*       WKLINEN(1:TNTENLEN)=TERMNAM(1:TNTENLEN);/* LINE NAME FOR WTO
*                                      MESSAGE                       */
         BCTR  @14,0                                               0265
         EX    @14,@SM01252                                        0265
*       WKDIGITS=WKDIGITS&&WKDIGITS;/* CLEAR AREA FOR DIGITS         */
         XC    WKDIGITS(32,RDUAL),WKDIGITS(RDUAL)                  0266
*       IF PRFPRI=PRIPIUCP THEN     /* IF PACKED PIU                 */
         CLI   PRFPRI(IEDQPPTR),X'00'                              0267
         BNE   @RF00267                                            0267
*         LENDGTS=PRUDATCT-LENGTH(IEDBDU)-2;/* LENGTH OF DIAL DIGITS
*                                      IN PACKED PIU                 */
         LH    @07,PRUDATCT(,IEDQPPTR)                             0268
         SL    @07,@CF00044                                        0268
         STH   @07,LENDGTS(,RDUAL)                                 0268
*       ELSE                        /* REGULAR PIU FROM DEBLOCK      */
*         LENDGTS=TTHDCF-LENGTH(PIU0RH)-LENGTH(PIU0PAD)-LENGTH(IEDBDU)-
*             LENGTH(NETADDR);      /* LENGTH OF DIAL DIGITS IN PIU  */
         B     @RC00267                                            0269
@RF00267 LA    @07,PRFPIUO(,IEDQPPTR)                              0269
         SLR   @15,@15                                             0269
         IC    @15,PRFPIUO(,IEDQPPTR)                              0269
         ALR   @07,@15                                             0269
         SLR   @00,@00                                             0269
         ICM   @00,3,TTHDCF(@07)                                   0269
         SL    @00,@CF00234                                        0269
         STH   @00,LENDGTS(,RDUAL)                                 0269
*       IF PRFPRI=PRIPIUCP THEN     /* IF COMPATCED PIU - ALWAYS ONE
*                                      UNIT                          */
@RC00267 CLI   PRFPRI(IEDQPPTR),X'00'                              0270
         BNE   @RF00270                                            0270
*         WKDIGITS(1:LENDGTS)=DIALDIG(1:LENDGTS);/* PUT DIGITS IN  0271
*                                      WORKAREA                      */
         LH    @07,LENDGTS(,RDUAL)                                 0271
         BCTR  @07,0                                               0271
         EX    @07,@SM01254                                        0271
*       IF PRFPRI^=PRIPIUCP THEN    /* IF REGULAR PIU FROM DEBLOCK -
*                                      MAYBE 1 OR 2 UNITS            */
@RF00270 CLI   PRFPRI(IEDQPPTR),X'00'                              0272
         BE    @RF00272                                            0272
*         DO;                                                      0273
*           IF PRFTIC^=INVTIC THEN  /* MORE                          */
         CLC   PRFTIC(4,IEDQPPTR),INVTIC                           0274
         BE    @RF00274                                            0274
*             DO;                   /* THAN 1 BUFFER UNIT            */
*               LENFIRST=AVTKEYLE-(ADDR(DIALDIG)-ADDR(IEDQPRF)-LENGTH(
*                   IEDBDU));       /* NUMBER OF DIGITS IN FIRST UNIT*/
         LA    @07,DIALDIG(,RRUDATA)                               0276
         SLR   @07,IEDQPPTR                                        0276
         SL    @07,@CF00070                                        0276
         LCR   @07,@07                                             0276
         AH    @07,AVTKEYLE(,RAVT)                                 0276
         STH   @07,LENFIRST(,RDUAL)                                0276
*               IF LENFIRST>0 THEN  /* IF SOME IN 1ST UNIT           */
         LTR   @07,@07                                             0277
         BNP   @RF00277                                            0277
*                 WKDIGITS(1:LENFIRST)=DIALDIG(1:LENFIRST);/* MOVE 0278
*                                      FIRST NUMBERS TO MSG          */
         BCTR  @07,0                                               0278
         EX    @07,@SM01254                                        0278
*               LENSEC=LENDGTS-LENFIRST;/* DIGITS IN 2ND UNIT        */
@RF00277 LH    @07,LENFIRST(,RDUAL)                                0279
         LH    @15,LENDGTS(,RDUAL)                                 0279
         SLR   @15,@07                                             0279
         STH   @15,LENSEC(,RDUAL)                                  0279
*               RTERM=PRFTIC;       /* POINT TO 2ND UNIT             */
         L     RTERM,PRFTIC(,IEDQPPTR)                             0280
*               WKDIGITS(LENFIRST+1:LENDGTS)=RTERM->UNIT2DGT(1:LENSEC);
         ALR   @07,RDUAL                                           0281
         BCTR  @15,0                                               0281
         EX    @15,@SM01256                                        0281
*                                   /* MOVE SECOND NUMBERS TO MESSAGE*/
*             END;                                                 0282
*           ELSE                    /* ONLY ONE UNIT FROM DEBLOCK    */
*             WKDIGITS(1:LENDGTS)=DIALDIG(1:LENDGTS);/* PUT DIGITS IN
*                                      WORK AREA                     */
         B     @RC00274                                            0283
@RF00274 LH    @07,LENDGTS(,RDUAL)                                 0283
         BCTR  @07,0                                               0283
         EX    @07,@SM01254                                        0283
*         END;                                                     0284
@RC00274 DS    0H                                                  0285
*       RPARM=ADDR(WTOLIST1);       /* ADDR OF LIST FORM FOR EXEC    */
@RF00272 LA    RPARM,WTOLIST1                                      0285
*       K=RPARM->M1LEN;             /* GET LENGTH OF LIST FORM       */
         LH    @07,M1LEN(,RPARM)                                   0286
         STH   @07,K(,RDUAL)                                       0286
*       K=K+4;                      /* BUMP TO INCLUDE ROUTING AND 0287
*                                      DESCRIPTOR CODES              */
         AL    @07,@CF00326                                        0287
         STH   @07,K(,RDUAL)                                       0287
*       PMDWTO(1:K)=WTOLIST1(1:K);  /* SET UP PHASE 1 MESSAGE        */
         BCTR  @07,0                                               0288
         EX    @07,@SM01258                                        0288
*       RPARM=ADDR(PMDWTO);         /* SET ADDRESS FOR EXEC WTO      */
         LA    RPARM,PMDWTO(,RDUAL)                                0289
*       RPARM->MSG1TERM(1:TNTENLEN)=WKTERMN(1:TNTENLEN);/* PLACE TERM
*                                      NAME IN MSG                   */
         SLR   @07,@07                                             0290
         IC    @07,TNTENLEN(,IEDQNPTR)                             0290
         BCTR  @07,0                                               0290
         EX    @07,@SM01260                                        0290
*       RPARM->MSG1LINE(1:TNTENLEN)=WKLINEN(1:TNTENLEN);/* PLACE LINE
*                                      NAME IN MSG                   */
         EX    @07,@SM01262                                        0291
*       GEN REFS(WKDIGITS,RDUAL) SETS(WKDIGITS);                   0292
*                                         /* @YM05653*/
         OI    WKDIGITS(RDUAL),X'F0'    SET UP FOR MOVE ZONES @YM05653
         MVZ   WKDIGITS+1(31,RDUAL),WKDIGITS(RDUAL)  ZONES    @YM05653
*       RPARM->MSGDIGTS(1:LENDGTS)=WKDIGITS(1:LENDGTS);            0293
         LH    @07,LENDGTS(,RDUAL)                                 0293
         BCTR  @07,0                                               0293
         EX    @07,@SM01264                                        0293
*     END;                          /* END SPECIAL PHASE1 PROCESS    */
*                                                                  0295
*   /*****************************************************************/
*   /*                                                               */
*   /* PHASE 3 MSG TO PROCESS                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0295
*   ELSE                                                           0295
*     DO;                                                          0295
         B     @RC00257                                            0295
@RF00257 DS    0H                                                  0296
*       TRMANDL=OFF;                /* RESET MANUAL DIAL IN PROGRESS */
         LR    @11,RTERM                                           0296
         AL    @11,@CF01251                                        0296
         LA    @15,TRMANDL-2(,@11)                                 0296
         LR    @14,@15                                             0296
         LA    @07,3                                               0296
         NR    @14,@07                                             0296
         LCR   @14,@14                                             0296
         ALR   @15,@14                                             0296
         L     @07,0(,@15)                                         0296
@GL00002 LR    @00,@07                                             0296
         N     @00,@CB01266+3(@14)                                 0296
         CS    @07,@00,0(@15)                                      0296
         BNE   @GL00002                                            0296
*       RPARM=ADDR(WTOLIST2);       /* ADDR OF LIST FORM FOR EXEC    */
         LA    RPARM,WTOLIST2                                      0297
*       K=RPARM->M2LEN;             /* GET LENGTH OF LIST FORM       */
         LH    @07,M2LEN(,RPARM)                                   0298
         STH   @07,K(,RDUAL)                                       0298
*       K=K+4;                      /* BUMP TO INCLUDE ROUTING AND 0299
*                                      DESCRIPTOR CODES              */
         AL    @07,@CF00326                                        0299
         STH   @07,K(,RDUAL)                                       0299
*       PMDWTO(1:K)=WTOLIST2(1:K);  /* SET UP PHASE 3 MESSAGE        */
         BCTR  @07,0                                               0300
         EX    @07,@SM01270                                        0300
*       RPARM=ADDR(PMDWTO);         /* SET ADDRESS FOR EXEC WTO      */
         LA    RPARM,PMDWTO(,RDUAL)                                0301
*       RPARM->MSG2TERM(1:TNTENLEN)=WKTERMN(1:TNTENLEN);/* PLACE TERM
*                                      NAME IN MSG                   */
         SLR   @07,@07                                             0302
         IC    @07,TNTENLEN(,IEDQNPTR)                             0302
         BCTR  @07,0                                               0302
         EX    @07,@SM01272                                        0302
*     END;                                                         0303
*                                                                  0304
*   /*****************************************************************/
*   /*                                                               */
*   /* PREPARE AND OUTPUT MESSAGE USING WTO                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0304
*   GEN NOREFS NOSETS;                                             0304
@RC00257 DS    0H                                                  0304
         WTO   MF=(E,(1))    ISSUE MESSAGE TO SYSTEM CONSOLE
*   LM(REG0,REG14,PMDSAVE);         /* RESTORE USERS REGS            */
         LM    REG0,REG14,PMDSAVE(RDUAL)                           0305
*   END IEDPMD                                                     0306
*                                                                  0306
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (TAVTD   )                                       */
*/*%INCLUDE SYSLIB  (TBDUD   )                                       */
*/*%INCLUDE SYSLIB  (TPIU0D  )                                       */
*/*%INCLUDE SYSLIB  (TPRFD   )                                       */
*/*%INCLUDE SYSLIB  (TPRUD   )                                       */
*/*%INCLUDE SYSLIB  (TRSPD   )                                       */
*/*%INCLUDE SYSLIB  (TTNTD   )                                       */
*/*%INCLUDE SYSLIB  (TRHD    )                                       */
*/*%INCLUDE SYSLIB  (TTRMD   )                                       */
*/*%INCLUDE SYSLIB  (TTHD    )                                       */
*                                                                  0306
*       ;                                                          0306
@EL00001 DS    0H                                                  0306
@EF00001 DS    0H                                                  0306
@ER00001 BR    @14                                                 0306
@DATA    DS    0H
@SM01245 MVC   WKTERMN(0,RDUAL),TERMNAM(RTERM)
@SM01252 MVC   WKLINEN(0,RDUAL),TERMNAM(RTERM)
@SM01254 MVC   WKDIGITS(0,RDUAL),DIALDIG(RRUDATA)
@SM01256 MVC   WKDIGITS(0,@07),UNIT2DGT(RTERM)
@SM01258 MVC   PMDWTO(0,RDUAL),WTOLIST1
@SM01260 MVC   MSG1TERM(0,RPARM),WKTERMN(RDUAL)
@SM01262 MVC   MSG1LINE(0,RPARM),WKLINEN(RDUAL)
@SM01264 MVC   MSGDIGTS(0,RPARM),WKDIGITS(RDUAL)
@SM01270 MVC   PMDWTO(0,RDUAL),WTOLIST2
@SM01272 MVC   MSG2TERM(0,RPARM),WKTERMN(RDUAL)
         DS    0F
         DS    0F
@CF00326 DC    F'4'
@CF00070 DC    F'6'
@CF00044 DC    F'8'
@CF00234 DC    F'12'
@CF01251 DC    F'-12'
@CF01244 DC    XL4'0000FFFF'
         DS    0D
@CB01247 DC    B'000000000000000000000000000100000000000000000000000000C
               00'
@CB01266 DC    B'111111111111111111111111111011111111111111111111111111C
               11'
         DS    CL2
WORKDUAL DS    CL480
         ORG   WORKDUAL
TCAMWORK DC    X'00'
         DC    XL239'0'
OPCTWORK DC    X'00'
         DC    XL239'0'
         ORG   WORKDUAL+480
INVTIC   DC    X'08000002'
IEDPMD   CSECT
WTOLIST1 WTO   'IED434I    TERM=         LINE=         REQUIRES MANUAL *
               DIAL,DIGITS=                                ',ROUTCDE=(8*
               ),DESC=3,MF=L
WTOLIST2 WTO   'IED435I   SESSION STARTED FOR TERM=         ,MANUALLY D*
               IALED',ROUTCDE=(8),DESC=5,MF=L
IEDPMD   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
IEDQAPTR EQU   @13
IEDQPPTR EQU   @06
IEDPRUQP EQU   @09
IEDQNPTR EQU   @03
IEDQTPTR EQU   @08
REG0     EQU   @00
RPARM    EQU   @01
RDUAL    EQU   @02
RWORK    EQU   @04
REG5     EQU   @05
REG7     EQU   @07
RTERM    EQU   @08
RRUDATA  EQU   @09
REG10    EQU   @10
REG11    EQU   @11
RBDU     EQU   @11
RBASE    EQU   @12
RAVT     EQU   @13
REG14    EQU   @14
REG15    EQU   @15
IEDQAVTD EQU   0
AVTSAVEX EQU   IEDQAVTD+216
@NM00003 EQU   IEDQAVTD+316
AVTCKFLG EQU   @NM00003
AVTBASE  EQU   IEDQAVTD+340
AVTPKF   EQU   AVTBASE
AVTRNMPT EQU   IEDQAVTD+352
AVTHG02  EQU   IEDQAVTD+456
AVTDISP  EQU   IEDQAVTD+480
AVTHD    EQU   IEDQAVTD+484
AVTSCOPT EQU   AVTHD
AVTSAVTP EQU   IEDQAVTD+540
AVTSAVTF EQU   AVTSAVTP
AVTCKPEL EQU   IEDQAVTD+580
AVTCKRMV EQU   AVTCKPEL
AVTCKELF EQU   IEDQAVTD+608
AVTCKBYT EQU   IEDQAVTD+619
AVTHG01  EQU   IEDQAVTD+620
AVTCKLNK EQU   IEDQAVTD+624
AVTCRELE EQU   IEDQAVTD+636
AVTCCELE EQU   AVTCRELE
AVTCLRHI EQU   IEDQAVTD+644
AVTADBUF EQU   IEDQAVTD+648
AVTSYSER EQU   IEDQAVTD+656
AVTCKPQB EQU   IEDQAVTD+732
AVTCKPTB EQU   AVTCKPQB
AVTCKPEC EQU   AVTCKPQB+4
AVTCKPCC EQU   AVTCKPEC
AVTOPCQB EQU   IEDQAVTD+744
AVTOPCOB EQU   AVTOPCQB
AVTOPCEC EQU   AVTOPCQB+4
AVTOPCCC EQU   AVTOPCEC
AVTOLTQB EQU   IEDQAVTD+756
AVTCWFL1 EQU   IEDQAVTD+852
AVTCWFL2 EQU   IEDQAVTD+853
AVTSUBT  EQU   IEDQAVTD+876
AVTIOTR  EQU   IEDQAVTD+877
AVTKEYLE EQU   IEDQAVTD+960
AVTBIT1  EQU   IEDQAVTD+978
AVTBIT2  EQU   IEDQAVTD+979
AVTBIT3  EQU   IEDQAVTD+980
AVTBIT4  EQU   IEDQAVTD+1064
@NM00083 EQU   IEDQAVTD+1160
IEDNSVTD EQU   0
SAVTDIAG EQU   IEDNSVTD
SAVTDIAF EQU   SAVTDIAG
SAVTLUSQ EQU   IEDNSVTD+88
SAVTTCPU EQU   IEDNSVTD+238
SAVTNAX  EQU   IEDNSVTD+248
SAVTZELM EQU   IEDNSVTD+270
SAVTRDRV EQU   IEDNSVTD+284
SAVTCKQB EQU   IEDNSVTD+300
SAVTCKTB EQU   SAVTCKQB
SAVTCKEC EQU   SAVTCKQB+4
SAVTCKCC EQU   SAVTCKEC
IEDBDU   EQU   0
BDUFNFLG EQU   IEDBDU+2
BDUBDUFG EQU   IEDBDU+3
BDURSP   EQU   IEDBDU+4
BDUSYRSP EQU   BDURSP
BDUPHASE EQU   BDUSYRSP
BDUEXRSP EQU   BDURSP+1
BDUEND   EQU   IEDBDU+6
IEDPIU0  EQU   0
PIU0TH   EQU   IEDPIU0
PIU0RH   EQU   IEDPIU0+10
PIU0PAD  EQU   IEDPIU0+13
PIU0RU   EQU   IEDPIU0+14
IEDQPRF  EQU   0
PRFRCB   EQU   IEDQPRF
PRFKEY   EQU   PRFRCB
PRFQCBA  EQU   PRFRCB+1
PRFPRI   EQU   PRFRCB+4
PRFLINK  EQU   PRFRCB+5
PRFTIC   EQU   IEDQPRF+8
PRFTICC  EQU   PRFTIC
PRFNBUNT EQU   IEDQPRF+12
PRFSUNIT EQU   PRFNBUNT
PRFPLQCB EQU   PRFSUNIT
PRFPIUO  EQU   PRFPLQCB
@NM00109 EQU   IEDQPRF+16
PRFSVFFO EQU   @NM00109
PRFSTAT1 EQU   IEDQPRF+20
PRFEOFN  EQU   PRFSTAT1
PRFCORE  EQU   IEDQPRF+21
PRFXTRA  EQU   PRFCORE
PRFSCAN  EQU   IEDQPRF+24
PRFTQBCK EQU   IEDQPRF+26
PRFNTXT  EQU   PRFTQBCK
PRFEOBOF EQU   PRFNTXT
PRFCHDR  EQU   IEDQPRF+32
PRFHQBCK EQU   IEDQPRF+35
IEDPF1   EQU   0
PRF1FLG1 EQU   IEDPF1+3
PRF1WD2  EQU   IEDPF1+4
PRF1SEQP EQU   PRF1WD2
PRF1SQID EQU   PRF1SEQP
PRF1TAG1 EQU   PRF1SQID
IEDPF2   EQU   0
PRF2FLG2 EQU   IEDPF2
PRF2WD2  EQU   IEDPF2+4
IEDPRUQD EQU   0
PRUTTCIN EQU   IEDPRUQD
PRUDATCT EQU   IEDPRUQD+2
PRUTIC   EQU   IEDPRUQD+8
PRUDATA  EQU   IEDPRUQD+12
IEDPRUND EQU   0
PRURHTH  EQU   IEDPRUND
PRURH    EQU   PRURHTH
PRURHFG0 EQU   PRURH
PRURHFG1 EQU   PRURH+1
PRURHFG2 EQU   PRURH+2
PRUTH    EQU   PRURHTH+3
PRUFIDN  EQU   PRUTH
IEDQTNTD EQU   0
IEDQTCDE EQU   IEDQTNTD
TNTENLEN EQU   IEDQTNTD+40
IEDQTDCE EQU   IEDQTNTD+46
TNTFIRST EQU   0
IEDTNTA  EQU   0
IEDRH    EQU   0
TRHBYTE0 EQU   IEDRH
TRHBYTE1 EQU   IEDRH+1
TRHBYTE2 EQU   IEDRH+2
IEDQTRM  EQU   0
TRMSTATE EQU   IEDQTRM
TRMLOG   EQU   TRMSTATE
TRMINSEQ EQU   IEDQTRM+4
TLISTCNT EQU   TRMINSEQ
TRMOUTSQ EQU   IEDQTRM+6
TLISTEN  EQU   TRMOUTSQ
TRMDSORG EQU   TLISTEN
TRMALTD  EQU   IEDQTRM+8
TRMDEVFL EQU   IEDQTRM+10
TRMSTAT  EQU   IEDQTRM+12
IEDNTRM  EQU   0
TRMBYTE4 EQU   IEDNTRM
TRMBYTE3 EQU   IEDNTRM+1
TRMBYTE2 EQU   IEDNTRM+2
TRMINPG  EQU   TRMBYTE2
TRMANDL  EQU   TRMBYTE2
TRMBYTE1 EQU   IEDNTRM+3
TRMSCPRQ EQU   TRMBYTE1
TRMBYTE0 EQU   IEDNTRM+6
TRMSIBPT EQU   IEDNTRM+7
IEDTH    EQU   0
TTHBYTE0 EQU   IEDTH
TTHOAF   EQU   IEDTH+4
TTHSNF   EQU   IEDTH+6
TTHTAG   EQU   TTHSNF
TTHTAG1  EQU   TTHTAG
TTHDCF   EQU   IEDTH+8
DUALWORK EQU   0
PMDSAVE  EQU   DUALWORK
K        EQU   DUALWORK+60
LENDGTS  EQU   DUALWORK+62
LENFIRST EQU   DUALWORK+64
LENSEC   EQU   DUALWORK+66
PMDWORK  EQU   DUALWORK+68
WKTERMN  EQU   PMDWORK
WKLINEN  EQU   PMDWORK+8
WKDIGITS EQU   PMDWORK+16
PMDWTO   EQU   DUALWORK+116
TNTENTRY EQU   0
TERMNAM  EQU   TNTENTRY
TERMAD   EQU   0
MSG1     EQU   0
MSGID1   EQU   MSG1
M1LEN    EQU   MSGID1
MSGPH1   EQU   MSG1+4
MSG1TERM EQU   MSGPH1+16
MSG1LINE EQU   MSGPH1+30
MSGDIGTS EQU   MSGPH1+67
MSG2     EQU   0
MSGID2   EQU   MSG2
M2LEN    EQU   MSGID2
MSGPH3   EQU   MSG2+4
MSG2TERM EQU   MSGPH3+35
RUINFO   EQU   0
NETADDR  EQU   RUINFO
DIALDIG  EQU   RUINFO+2
IEDIAP03 EQU   0
TNTCODE  EQU   0
TNTDCODE EQU   0
TRMPRE1  EQU   TRMBYTE4
TRMNCP1  EQU   TRMBYTE4
TRMPRE   EQU   TRMBYTE3
TRMNCP   EQU   TRMBYTE3
TRMPU    EQU   TRMBYTE3
TRMLU    EQU   TRMBYTE3
TRMLINK  EQU   TRMBYTE3
UNIT2DGT EQU   PRFSUNIT
BDUTEXT  EQU   BDUEND
PRFSHDR  EQU   IEDQPRF+42
TRMOPT   EQU   IEDQTRM+20
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00137 EQU   TRMLINK
TRMLSTAT EQU   TRMLINK
TRMLINT  EQU   TRMLINK
TRMEPMOD EQU   TRMLINK
TRMLULOG EQU   TRMLU
TRMINERR EQU   TRMLU
TRMLUREQ EQU   TRMLU
TRMSESRQ EQU   TRMLU
TRMTDIFF EQU   TRMLU
TRMLUTM  EQU   TRMLU
TRMLUIT  EQU   TRMLU
TRMAUTO  EQU   TRMLU
TRMPCONT EQU   TRMPU
@NM00136 EQU   TRMPU
TRMNCONT EQU   TRMNCP
TRMQUCKN EQU   TRMNCP
TRMSLOWN EQU   TRMNCP
TRMSYGEN EQU   TRMNCP
TRMNCPCL EQU   TRMNCP
TRMIPLDM EQU   TRMNCP
TRMINOUT EQU   TRMPRE
TRMRDOUT EQU   TRMPRE
TRMNLOUT EQU   TRMPRE
TRMWROUT EQU   TRMPRE
TRMASNXI EQU   TRMPRE
TRMSTMM  EQU   TRMPRE
TRMCMODE EQU   TRMPRE
TRMSTPND EQU   TRMPRE
@NM00135 EQU   TRMNCP1
TRMINOP  EQU   TRMNCP1
TRMLYNCH EQU   TRMPRE1
TRMSPOUT EQU   TRMPRE1
TRMERLCK EQU   TRMPRE1
TRMQNPL  EQU   TRMPRE1
TRMSPACT EQU   TRMPRE1
TRMOCNI  EQU   TRMPRE1
TRMSESSN EQU   TRMPRE1
TRMCONT  EQU   TRMPRE1
@NM00144 EQU   MSG2+64
@NM00143 EQU   MSGPH3+59
M2P2     EQU   MSGPH3+43
M2P1     EQU   MSGPH3
@NM00142 EQU   MSGID2+2
@NM00141 EQU   MSG1+91
M1P3     EQU   MSGPH1+38
M1P2     EQU   MSGPH1+24
M1P1     EQU   MSGPH1
@NM00140 EQU   MSGID1+2
TTHTAG2  EQU   TTHTAG+1
@NM00139 EQU   TTHTAG1
TTHTAGS  EQU   TTHTAG1
TTHDAF   EQU   IEDTH+2
TTHBYTE1 EQU   IEDTH+1
TTHEFI   EQU   TTHBYTE0
@NM00138 EQU   TTHBYTE0
TTHEBIU  EQU   TTHBYTE0
TTHBBIU  EQU   TTHBYTE0
TTHFTYPE EQU   TTHBYTE0
TRMSUBST EQU   IEDNTRM+12
TRMTYPE  EQU   IEDNTRM+11
TRMRLMCT EQU   IEDNTRM+10
TRMCOHTG EQU   TRMSIBPT+1
TRMGPCNT EQU   TRMSIBPT
TRMBUFRD EQU   TRMBYTE0
TRMSNA   EQU   TRMBYTE0
TRMGP    EQU   TRMBYTE0
TRMDIAL  EQU   TRMBYTE0
@NM00134 EQU   TRMBYTE0
TRMOUTPT EQU   TRMBYTE0
TRMINPUT EQU   TRMBYTE0
TRMUDEF  EQU   TRMBYTE0
TRMCOHRT EQU   IEDNTRM+4
TRMSTOTE EQU   TRMBYTE1
TRMCKPRN EQU   TRMBYTE1
TRMTSATN EQU   TRMBYTE1
TRMTRACE EQU   TRMBYTE1
TRMSWBCK EQU   TRMBYTE1
TRMAUTOC EQU   TRMBYTE1
TRMINPTP EQU   TRMBYTE1
TRMWTNEG EQU   TRMSCPRQ
TRMWRBRK EQU   TRMBYTE2
TRMNOSND EQU   TRMBYTE2
TRMPREP  EQU   TRMBYTE2
TRMGPACT EQU   TRMBYTE2
TRMCLOSN EQU   TRMINPG
TRMREMB  EQU   TRMBYTE2
TRMRSACT EQU   TRMBYTE2
TRMOPTBL EQU   IEDQTRM+18
TRMOPNO  EQU   IEDQTRM+17
TRMCHCIN EQU   IEDQTRM+16
TRMSENSE EQU   TRMSTAT+3
TRMTEMPR EQU   TRMSTAT+2
TRMSIO   EQU   TRMSTAT
@NM00133 EQU   TRMDEVFL+1
TRMTPIN  EQU   TRMDEVFL+1
TRMNCPI  EQU   TRMDEVFL+1
TRMRNTRM EQU   TRMDEVFL+1
@NM00132 EQU   TRMDEVFL+1
TRMLMD   EQU   TRMDEVFL+1
TRMCONC  EQU   TRMDEVFL+1
TRMTSOB  EQU   TRMDEVFL
TRMBFDY  EQU   TRMDEVFL
TRMTBLK  EQU   TRMDEVFL
TRMSBLK  EQU   TRMDEVFL
TRMBLKS  EQU   TRMDEVFL
TRMADDC  EQU   TRMDEVFL
TRMDDIG  EQU   TRMDEVFL
TRMBUFS  EQU   TRMDEVFL
TRMPRILK EQU   TRMALTD
TRMLGB   EQU   TRMDSORG
TRMUTERM EQU   TLISTCNT
TRMDESTQ EQU   IEDQTRM+1
TRMSCNYN EQU   TRMSTATE
TRMOPTFN EQU   TRMSTATE
TRMHELDN EQU   TRMSTATE
TRMACPTN EQU   TRMSTATE
TRMPREF  EQU   TRMSTATE
TRMPROC  EQU   TRMLOG
TRMLIST  EQU   TRMLOG
TRMLINE  EQU   TRMSTATE
@NM00131 EQU   TRHBYTE2
@NM00130 EQU   TRHBYTE2
@NM00129 EQU   TRHBYTE2
TRHCSI   EQU   TRHBYTE2
@NM00128 EQU   TRHBYTE2
TRHCDI   EQU   TRHBYTE2
TRHEB    EQU   TRHBYTE2
TRHBB    EQU   TRHBYTE2
TRHPI    EQU   TRHBYTE1
@NM00127 EQU   TRHBYTE1
@NM00126 EQU   TRHBYTE1
@NM00125 EQU   TRHBYTE1
TRHER    EQU   TRHBYTE1
TRHDR2   EQU   TRHBYTE1
@NM00124 EQU   TRHBYTE1
TRHDR1   EQU   TRHBYTE1
TRHEC    EQU   TRHBYTE0
TRHBC    EQU   TRHBYTE0
TRHSDI   EQU   TRHBYTE0
TRHFI    EQU   TRHBYTE0
@NM00123 EQU   TRHBYTE0
TRHRUCAT EQU   TRHBYTE0
TRHTYPE  EQU   TRHBYTE0
TNTTRMAD EQU   IEDTNTA
TNTLEN   EQU   IEDQTNTD+44
TNTMIDEN EQU   IEDQTNTD+41
TNTSRCHX EQU   IEDQTNTD+38
@NM00122 EQU   IEDPRUND+4
PRUTHEFI EQU   PRUFIDN
PRUTHUSS EQU   PRUFIDN
PRUTHEIU EQU   PRUFIDN
PRUTHBIU EQU   PRUFIDN
PRUTHTYE EQU   PRUFIDN
@NM00121 EQU   PRURHFG2
PRURHCSI EQU   PRURHFG2
@NM00120 EQU   PRURHFG2
PRURHCDI EQU   PRURHFG2
PRURHEB  EQU   PRURHFG2
PRURHBB  EQU   PRURHFG2
PRURHPI  EQU   PRURHFG1
@NM00119 EQU   PRURHFG1
PRURHER  EQU   PRURHFG1
PRURHDR2 EQU   PRURHFG1
@NM00118 EQU   PRURHFG1
PRURHDR1 EQU   PRURHFG1
PRURHEC  EQU   PRURHFG0
PRURHBC  EQU   PRURHFG0
PRURHSDI EQU   PRURHFG0
PRURHFI  EQU   PRURHFG0
@NM00117 EQU   PRURHFG0
PRURUCAT EQU   PRURHFG0
PRURHTYP EQU   PRURHFG0
PRUNUNIT EQU   PRUTIC+1
@NM00116 EQU   PRUTIC
@NM00115 EQU   IEDPRUQD+4
PRF2SEQP EQU   PRF2WD2
@NM00114 EQU   IEDPF2+1
@NM00113 EQU   PRF2FLG2
PRF2SMI  EQU   PRF2FLG2
PRF2FORM EQU   PRF2FLG2
PRF2TNTI EQU   PRF2FLG2
PRF1RULN EQU   PRF1SEQP+2
PRF1TAG2 EQU   PRF1SQID+1
@NM00112 EQU   PRF1TAG1
PRF1TAGS EQU   PRF1TAG1
@NM00111 EQU   PRF1FLG1
PRF1LOGD EQU   PRF1FLG1
PRF1USS  EQU   PRF1FLG1
PRF1FORM EQU   PRF1FLG1
PRF1EXPI EQU   PRF1FLG1
PRF1FIDI EQU   PRF1FLG1
PRF1RH   EQU   IEDPF1
PRFDEST  EQU   IEDQPRF+40
PRFISEQ  EQU   IEDQPRF+38
PRFSTXT  EQU   PRFHQBCK
PRFNHDR  EQU   PRFCHDR
PRFCRCD  EQU   IEDQPRF+29
PRFSVSEQ EQU   PRFNTXT+1
PRFSVPRI EQU   PRFEOBOF
PRFISIZE EQU   PRFSCAN+1
@NM00110 EQU   PRFSCAN
PRFEOB   EQU   PRFXTRA+1
PRFSTSO  EQU   PRFXTRA
PRFNHDRN EQU   PRFSTAT1
PRFNLSTN EQU   PRFSTAT1
PRFLOCK  EQU   PRFEOFN
PRFDUPLN EQU   PRFSTAT1
PRFTSMSG EQU   PRFSTAT1
PRFITCPN EQU   PRFSTAT1
PRFERMGN EQU   PRFSTAT1
PRFCNCLN EQU   PRFSTAT1
PRFSVFLG EQU   @NM00109+3
PRFSIZE  EQU   PRFSVFFO+2
PRFSRCE  EQU   PRFSVFFO
PRFLCB   EQU   IEDQPRF+13
PRFTI0   EQU   PRFTIC+1
@NM00108 EQU   PRFTICC
@NM00107 EQU   PRFTICC
@NM00106 EQU   PRFTICC
PRFTICON EQU   PRFTICC
@NM00105 EQU   PRFTICC
@NM00104 EQU   PRFTICC
PRFBFMM  EQU   PRFTICC
PRFEOMSG EQU   PRFTICC
PRFCOUNT EQU   PRFLINK+1
@NM00103 EQU   PRFLINK
PRFFLAGS EQU   PRFPRI
PRFIOADR EQU   PRFQCBA
PRFOPCDE EQU   PRFKEY
BDUXGRPH EQU   BDUEXRSP
BDUXFINL EQU   BDUEXRSP
BDUXINIT EQU   BDUEXRSP
BDURESP  EQU   BDUSYRSP
BDUERROR EQU   BDUSYRSP
BDUXERLK EQU   BDUBDUFG
BDUALTAK EQU   BDUFNFLG
BDUNEGAK EQU   BDUFNFLG
BDUPOSAK EQU   BDUFNFLG
BDUTPTX  EQU   BDUFNFLG
BDUFRSTB EQU   BDUFNFLG
BDULEADG EQU   BDUFNFLG
BDUHEADR EQU   BDUFNFLG
BDUSTHDR EQU   BDUFNFLG
BDUMODIF EQU   IEDBDU+1
BDUCMND  EQU   IEDBDU
SAVTBITN EQU   IEDNSVTD+312
@NM00102 EQU   SAVTCKQB+8
@NM00101 EQU   SAVTCKEC+1
@NM00100 EQU   SAVTCKCC
SAVTCKPO EQU   SAVTCKCC
SAVTCKWA EQU   SAVTCKCC
SAVTCKCH EQU   SAVTCKTB+1
SAVTCKVT EQU   SAVTCKTB
@NM00099 EQU   IEDNSVTD+297
SAVTRDFG EQU   SAVTRDRV+12
@NM00098 EQU   SAVTRDRV+5
SAVTRDPY EQU   SAVTRDRV+4
SAVTRDQB EQU   SAVTRDRV+1
SAVTRDKY EQU   SAVTRDRV
SAVTNID  EQU   IEDNSVTD+280
SAVTDVAS EQU   IEDNSVTD+276
SAVTPLSZ EQU   IEDNSVTD+274
@NM00097 EQU   IEDNSVTD+273
SAVTSUBL EQU   IEDNSVTD+272
@NM00096 EQU   SAVTZELM+1
SAVTSUBM EQU   SAVTZELM
SAVTMHDX EQU   IEDNSVTD+268
SAVTNAT1 EQU   IEDNSVTD+266
SAVTSH20 EQU   IEDNSVTD+264
SAVTLCBS EQU   IEDNSVTD+260
SAVTRNMP EQU   IEDNSVTD+256
SAVTTNTX EQU   IEDNSVTD+252
SAVTSUBV EQU   IEDNSVTD+247
SAVTSUBA EQU   IEDNSVTD+246
SAVTSIBC EQU   IEDNSVTD+244
SAVTBSM  EQU   IEDNSVTD+240
SAVTSCPT EQU   SAVTTCPU
SAVTRQTG EQU   IEDNSVTD+236
SAVTRQCH EQU   IEDNSVTD+232
SAVTMAND EQU   IEDNSVTD+228
SAVTSPLN EQU   IEDNSVTD+224
SAVTNADL EQU   IEDNSVTD+222
SAVTNATL EQU   IEDNSVTD+220
SAVTMHTB EQU   IEDNSVTD+216
SAVTSSMH EQU   IEDNSVTD+212
SAVTQRS  EQU   IEDNSVTD+208
SAVTRQIN EQU   IEDNSVTD+204
SAVTDFCO EQU   IEDNSVTD+200
SAVTSAO  EQU   IEDNSVTD+196
SAVTSARI EQU   IEDNSVTD+192
SAVTSAC  EQU   IEDNSVTD+188
SAVTSAI  EQU   IEDNSVTD+184
SAVTCSCI EQU   IEDNSVTD+180
SAVTSSRP EQU   IEDNSVTD+176
SAVTSSRQ EQU   IEDNSVTD+172
SAVTSCLU EQU   IEDNSVTD+168
SAVTXTRQ EQU   IEDNSVTD+164
SAVTMVBF EQU   IEDNSVTD+160
@NM00095 EQU   IEDNSVTD+148
SAVTIPCQ EQU   IEDNSVTD+144
@NM00094 EQU   IEDNSVTD+136
SAVTXFMI EQU   IEDNSVTD+132
@NM00093 EQU   IEDNSVTD+124
SAVTXFMO EQU   IEDNSVTD+120
@NM00092 EQU   IEDNSVTD+116
SAVTSSSR EQU   IEDNSVTD+112
SAVTSCPQ EQU   IEDNSVTD+108
SAVTSLCB EQU   IEDNSVTD+104
SAVTLUSR EQU   IEDNSVTD+100
@NM00091 EQU   SAVTLUSQ+8
SAVTLUSP EQU   SAVTLUSQ+4
SAVTLUSB EQU   SAVTLUSQ
@NM00090 EQU   IEDNSVTD+84
SAVTSAT  EQU   IEDNSVTD+80
SAVTNAT  EQU   IEDNSVTD+76
SAVTCLUP EQU   IEDNSVTD+72
SAVTPIUT EQU   IEDNSVTD+68
SAVTRNTA EQU   IEDNSVTD+64
SAVTDNIR EQU   IEDNSVTD+60
SAVTCNIR EQU   IEDNSVTD+56
SAVTFLDH EQU   IEDNSVTD+52
SAVTSRTN EQU   IEDNSVTD+48
SAVTSREQ EQU   IEDNSVTD+44
SAVTFAIL EQU   IEDNSVTD+42
SAVTSUSE EQU   IEDNSVTD+40
SAVTSIB  EQU   IEDNSVTD+36
SAVTPRTN EQU   IEDNSVTD+32
@NM00089 EQU   IEDNSVTD+28
SAVTWH20 EQU   IEDNSVTD+26
SAVTPWT  EQU   IEDNSVTD+24
SAVTPRTQ EQU   IEDNSVTD+20
SAVTPREQ EQU   IEDNSVTD+16
SAVTPH20 EQU   IEDNSVTD+14
SAVTPUSE EQU   IEDNSVTD+12
SAVTPLCB EQU   IEDNSVTD+8
SAVTPOOL EQU   IEDNSVTD+4
SAVTPRMT EQU   SAVTDIAF
SAVTVIRT EQU   SAVTDIAF
AVTCPBNO EQU   IEDQAVTD+1172
AVTHRESS EQU   IEDQAVTD+1171
@NM00088 EQU   IEDQAVTD+1170
@NM00087 EQU   IEDQAVTD+1169
@NM00086 EQU   IEDQAVTD+1168
@NM00085 EQU   IEDQAVTD+1165
@NM00084 EQU   IEDQAVTD+1164
AVTHRESE EQU   @NM00083
AVTRADDR EQU   IEDQAVTD+1156
AVTNADDR EQU   IEDQAVTD+1152
AVTHRESN EQU   IEDQAVTD+1148
AVTVOLRN EQU   IEDQAVTD+1144
AVTTOTNN EQU   IEDQAVTD+1140
AVTTRCYN EQU   IEDQAVTD+1136
AVTRCTRN EQU   IEDQAVTD+1132
AVTNOVON EQU   IEDQAVTD+1128
AVTADEBN EQU   IEDQAVTD+1124
AVTVOLRR EQU   IEDQAVTD+1120
AVTTOTNR EQU   IEDQAVTD+1116
AVTTRCYR EQU   IEDQAVTD+1112
AVTRCTRR EQU   IEDQAVTD+1108
AVTNOVOR EQU   IEDQAVTD+1104
AVTADEBR EQU   IEDQAVTD+1100
AVTLODPT EQU   IEDQAVTD+1096
AVTIOBN  EQU   IEDQAVTD+1092
AVTIOBR  EQU   IEDQAVTD+1088
AVTCPBPT EQU   IEDQAVTD+1084
AVTFCPB  EQU   IEDQAVTD+1080
@NM00082 EQU   IEDQAVTD+1076
AVTINCPQ EQU   IEDQAVTD+1072
@NM00081 EQU   IEDQAVTD+1068
@NM00080 EQU   IEDQAVTD+1065
@NM00079 EQU   AVTBIT4
@NM00078 EQU   AVTBIT4
@NM00077 EQU   AVTBIT4
@NM00076 EQU   AVTBIT4
@NM00075 EQU   AVTBIT4
@NM00074 EQU   AVTBIT4
@NM00073 EQU   AVTBIT4
AVTRUFTN EQU   AVTBIT4
@NM00072 EQU   IEDQAVTD+1060
AVTNOBFQ EQU   IEDQAVTD+1056
@NM00071 EQU   IEDQAVTD+1052
AVTDKENQ EQU   IEDQAVTD+1048
@NM00070 EQU   IEDQAVTD+1044
AVTDKAPQ EQU   IEDQAVTD+1040
AVTCOPY  EQU   IEDQAVTD+1036
AVTIA    EQU   IEDQAVTD+1032
AVTFL    EQU   IEDQAVTD+1028
@NM00069 EQU   IEDQAVTD+1024
AVTNCPBQ EQU   IEDQAVTD+1020
AVTTOTNC EQU   IEDQAVTD+1016
AVTCMAX  EQU   IEDQAVTD+1012
AVTCMIN  EQU   IEDQAVTD+1008
AVTHM02  EQU   IEDQAVTD+1004
AVTOPCIN EQU   IEDQAVTD+1002
AVTDCTLN EQU   IEDQAVTD+1000
AVTOPMSK EQU   IEDQAVTD+996
AVTDDFT  EQU   IEDQAVTD+992
AVTSTEAL EQU   IEDQAVTD+988
AVTOPTN  EQU   IEDQAVTD+984
AVTDSKCT EQU   IEDQAVTD+982
AVTCKRST EQU   IEDQAVTD+981
AVTSTAN  EQU   AVTBIT3
AVTSTACN EQU   AVTBIT3
AVTSTAIN EQU   AVTBIT3
AVTSTAYN EQU   AVTBIT3
AVTOLTBN EQU   AVTBIT3
AVTTSAB  EQU   AVTBIT3
AVTRFULN EQU   AVTBIT3
AVTRECVN EQU   AVTBIT3
@NM00068 EQU   AVTBIT2
@NM00067 EQU   AVTBIT2
AVTOPEIN EQU   AVTBIT2
AVTSTRTN EQU   AVTBIT2
AVTTOPOL EQU   AVTBIT2
AVTCOPYN EQU   AVTBIT2
AVTREUSN EQU   AVTBIT2
AVTEXTSC EQU   AVTBIT2
AVTDISKN EQU   AVTBIT1
AVTQUCKN EQU   AVTBIT1
AVTCLOSN EQU   AVTBIT1
AVTREADN EQU   AVTBIT1
AVTDLAYN EQU   AVTBIT1
AVTAQTAN EQU   AVTBIT1
AVTTSON  EQU   AVTBIT1
AVTAPLKN EQU   AVTBIT1
AVTDUMBR EQU   IEDQAVTD+976
AVTDLQX  EQU   IEDQAVTD+974
AVTINTLV EQU   IEDQAVTD+972
AVTSMCNT EQU   IEDQAVTD+970
AVTAVFCT EQU   IEDQAVTD+968
AVTOPCON EQU   IEDQAVTD+966
AVTOPCNT EQU   IEDQAVTD+964
AVTLNCNT EQU   IEDQAVTD+962
AVTHA16  EQU   IEDQAVTD+958
AVTHA7   EQU   IEDQAVTD+956
AVTHA4   EQU   IEDQAVTD+954
AVTHA3   EQU   IEDQAVTD+952
AVTHA2   EQU   IEDQAVTD+950
AVTGETMS EQU   IEDQAVTD+949
@NM00066 EQU   IEDQAVTD+948
AVTGETMD EQU   IEDQAVTD+944
AVTGETMN EQU   IEDQAVTD+940
AVTCWTOT EQU   IEDQAVTD+936
AVTCWINT EQU   IEDQAVTD+884
AVTDTRAP EQU   IEDQAVTD+880
@NM00065 EQU   IEDQAVTD+878
@NM00064 EQU   AVTIOTR
AVTIOTRH EQU   AVTIOTR
AVTIOTRE EQU   AVTIOTR
@NM00063 EQU   AVTSUBT
AVTSUBPT EQU   AVTSUBT
AVTSUBON EQU   AVTSUBT
AVTAFE30 EQU   IEDQAVTD+872
AVTAFE20 EQU   IEDQAVTD+868
AVTAFE10 EQU   IEDQAVTD+864
AVTCWEC2 EQU   IEDQAVTD+860
AVTCWPM2 EQU   IEDQAVTD+856
AVTCWTS2 EQU   IEDQAVTD+855
AVTCWTS1 EQU   IEDQAVTD+854
AVTCWCLD EQU   AVTCWFL2
AVTCWRAP EQU   AVTCWFL2
@NM00062 EQU   AVTCWFL2
@NM00061 EQU   AVTCWFL2
@NM00060 EQU   AVTCWFL2
@NM00059 EQU   AVTCWFL2
@NM00058 EQU   AVTCWFL2
AVTCWACT EQU   AVTCWFL2
@NM00057 EQU   AVTCWFL1
@NM00056 EQU   AVTCWFL1
@NM00055 EQU   AVTCWFL1
@NM00054 EQU   AVTCWFL1
@NM00053 EQU   AVTCWFL1
@NM00052 EQU   AVTCWFL1
@NM00051 EQU   AVTCWFL1
AVTCOMWN EQU   AVTCWFL1
AVTCWEC1 EQU   IEDQAVTD+848
AVTCWPM1 EQU   IEDQAVTD+844
AVTCAREA EQU   IEDQAVTD+840
AVTFZERO EQU   IEDQAVTD+836
AVTCADDR EQU   IEDQAVTD+832
AVTCOREC EQU   IEDQAVTD+828
@NM00050 EQU   IEDQAVTD+820
AVTCPBCB EQU   IEDQAVTD+816
@NM00049 EQU   IEDQAVTD+808
AVTDSIOB EQU   IEDQAVTD+804
@NM00048 EQU   IEDQAVTD+796
AVTCPRMB EQU   IEDQAVTD+792
@NM00047 EQU   IEDQAVTD+784
AVTCLOSB EQU   IEDQAVTD+780
@NM00046 EQU   IEDQAVTD+772
AVTACTIB EQU   IEDQAVTD+768
@NM00045 EQU   IEDQAVTD+764
AVTOLTEB EQU   IEDQAVTD+760
AVTOLTCH EQU   AVTOLTQB+1
AVTOLTVT EQU   AVTOLTQB
@NM00044 EQU   AVTOPCQB+8
@NM00043 EQU   AVTOPCEC+1
@NM00042 EQU   AVTOPCCC
AVTOPCPO EQU   AVTOPCCC
AVTOPCWA EQU   AVTOPCCC
AVTOPCCH EQU   AVTOPCOB+1
AVTOPCVT EQU   AVTOPCOB
@NM00041 EQU   AVTCKPQB+9
AVTCKPTS EQU   AVTCKPQB+8
@NM00040 EQU   AVTCKPEC+1
@NM00039 EQU   AVTCKPCC
AVTCKPPO EQU   AVTCKPCC
AVTCKPWA EQU   AVTCKPCC
AVTCKPCH EQU   AVTCKPTB+1
AVTCKPVT EQU   AVTCKPTB
@NM00038 EQU   IEDQAVTD+724
AVTBFRTB EQU   IEDQAVTD+720
@NM00037 EQU   IEDQAVTD+712
AVTBFREB EQU   IEDQAVTD+708
AVTTIMQ  EQU   IEDQAVTD+704
@NM00036 EQU   IEDQAVTD+700
AVTIMQPS EQU   IEDQAVTD+696
AVTINOUT EQU   IEDQAVTD+694
AVTREFTM EQU   IEDQAVTD+692
@NM00035 EQU   IEDQAVTD+680
AVTDELYB EQU   IEDQAVTD+676
AVTOCQPT EQU   IEDQAVTD+672
AVTTSOPT EQU   IEDQAVTD+668
AVTSUPPT EQU   IEDQAVTD+664
AVTCBQCB EQU   IEDQAVTD+660
AVTMSGS  EQU   IEDQAVTD+657
@NM00034 EQU   AVTSYSER
@NM00033 EQU   AVTSYSER
@NM00032 EQU   AVTSYSER
@NM00031 EQU   AVTSYSER
@NM00030 EQU   AVTSYSER
@NM00029 EQU   AVTSYSER
AVTCMAXN EQU   AVTSYSER
AVTCMINN EQU   AVTSYSER
AVT2260L EQU   IEDQAVTD+652
AVTABEPL EQU   AVTADBUF
AVTHFF   EQU   AVTCLRHI+2
@NM00028 EQU   AVTCLRHI
AVTCCLNK EQU   AVTCRELE+5
AVTCCPRI EQU   AVTCRELE+4
AVTCCQCB EQU   AVTCCELE+1
AVTCCKEY EQU   AVTCCELE
AVTDELAD EQU   IEDQAVTD+632
AVTDELEM EQU   IEDQAVTD+628
AVTBSX   EQU   AVTCKLNK
AVTOPETR EQU   AVTHG01
@NM00027 EQU   AVTCKBYT
AVTCKONQ EQU   AVTCKBYT
@NM00026 EQU   AVTCKBYT
@NM00025 EQU   AVTCKBYT
@NM00024 EQU   AVTCKBYT
@NM00023 EQU   AVTCKBYT
@NM00022 EQU   AVTCKBYT
@NM00021 EQU   AVTCKBYT
AVTOPERT EQU   IEDQAVTD+618
AVTOPXCL EQU   IEDQAVTD+616
AVTOPERL EQU   IEDQAVTD+615
@NM00020 EQU   IEDQAVTD+614
AVTCKTIM EQU   IEDQAVTD+612
AVTCKELV EQU   IEDQAVTD+610
AVTCPRCD EQU   IEDQAVTD+609
AVTWARMN EQU   AVTCKELF
AVTCRTLN EQU   AVTCKELF
AVTCPIPN EQU   AVTCKELF
AVTCCLCN EQU   AVTCKELF
AVTCINCN EQU   AVTCKELF
@NM00019 EQU   AVTCKELF
AVTCMCPN EQU   AVTCKELF
AVTCRDYN EQU   AVTCKELF
AVTCKQAD EQU   IEDQAVTD+605
AVTSCBSZ EQU   IEDQAVTD+604
@NM00018 EQU   IEDQAVTD+600
AVTCKELE EQU   IEDQAVTD+596
@NM00017 EQU   AVTCKPEL+8
AVTCKRLK EQU   AVTCKPEL+5
AVTCKRPR EQU   AVTCKPEL+4
AVTCKRMQ EQU   AVTCKRMV+1
AVTCKRKY EQU   AVTCKRMV
AVTHK    EQU   IEDQAVTD+576
AVTHI    EQU   IEDQAVTD+572
AVTIOT   EQU   IEDQAVTD+568
AVTNX    EQU   IEDQAVTD+564
AVTTONE  EQU   IEDQAVTD+560
AVTA3TL  EQU   IEDQAVTD+556
AVTDMECB EQU   IEDQAVTD+552
AVTABEND EQU   IEDQAVTD+546
AVTPLCBN EQU   IEDQAVTD+544
@NM00016 EQU   AVTSAVTP+1
@NM00015 EQU   AVTSAVTF
AVTSNA   EQU   AVTSAVTF
AVTONSNA EQU   AVTSAVTF
AVTVTMCP EQU   AVTSAVTF
@NM00014 EQU   IEDQAVTD+536
AVTCMBSS EQU   IEDQAVTD+532
AVTRCV   EQU   IEDQAVTD+528
AVTSEND  EQU   IEDQAVTD+524
AVTCSCH  EQU   IEDQAVTD+520
AVTQ1    EQU   IEDQAVTD+516
AVTE7    EQU   IEDQAVTD+512
AVTHB    EQU   IEDQAVTD+508
AVTR1    EQU   IEDQAVTD+504
AVTBZ    EQU   IEDQAVTD+500
AVTEZ    EQU   IEDQAVTD+496
AVTEC    EQU   IEDQAVTD+492
AVTEW    EQU   IEDQAVTD+488
AVTNDIAL EQU   AVTSCOPT
AVTN2741 EQU   AVTSCOPT
AVTCONCO EQU   AVTSCOPT
AVTCONC  EQU   AVTSCOPT
AVTCMBUF EQU   AVTSCOPT
AVTAPDMP EQU   AVTSCOPT
@NM00013 EQU   AVTSCOPT
AVTHA    EQU   AVTDISP
AVTEA    EQU   IEDQAVTD+476
AVTAX    EQU   IEDQAVTD+472
AVTA3    EQU   IEDQAVTD+468
AVTGD    EQU   IEDQAVTD+464
AVTAL    EQU   IEDQAVTD+460
AVTOLTST EQU   AVTHG02
AVTE8    EQU   IEDQAVTD+452
AVTUI    EQU   IEDQAVTD+448
AVTCOMPT EQU   IEDQAVTD+444
AVTCRSRF EQU   IEDQAVTD+440
@NM00012 EQU   IEDQAVTD+436
AVTKA02  EQU   IEDQAVTD+432
AVTOPTPT EQU   IEDQAVTD+428
AVTPCBPT EQU   IEDQAVTD+424
AVTOSECB EQU   IEDQAVTD+420
AVTOPECA EQU   IEDQAVTD+416
AVTOLECA EQU   IEDQAVTD+412
AVTCKECA EQU   IEDQAVTD+408
AVTCWECA EQU   IEDQAVTD+404
AVTCWTCB EQU   IEDQAVTD+400
AVTOLTCB EQU   IEDQAVTD+396
AVTOCTCB EQU   IEDQAVTD+392
AVTCKTCB EQU   IEDQAVTD+388
AVTAS    EQU   IEDQAVTD+384
AVTNOLBF EQU   IEDQAVTD+382
AVTNCKPR EQU   IEDQAVTD+381
AVTCIB   EQU   IEDQAVTD+380
AVTSPLPT EQU   IEDQAVTD+376
AVTMVBFR EQU   IEDQAVTD+372
AVTSBTA  EQU   IEDQAVTD+368
AVTRARTN EQU   IEDQAVTD+364
AVTBSCAN EQU   IEDQAVTD+360
AVTRDYA  EQU   IEDQAVTD+356
AVTDISTR EQU   IEDQAVTD+348
AVTPARM3 EQU   IEDQAVTD+344
@NM00011 EQU   AVTPKF
@NM00010 EQU   AVTPKF
@NM00009 EQU   AVTPKF
AVTFTCHF EQU   AVTPKF
@NM00008 EQU   AVTPKF
@NM00007 EQU   AVTPKF
@NM00006 EQU   AVTPKF
@NM00005 EQU   AVTPKF
AVTPARM  EQU   IEDQAVTD+336
AVTEXS2A EQU   IEDQAVTD+330
AVTEXA2S EQU   IEDQAVTD+324
AVTOCGET EQU   IEDQAVTD+320
AVTCKAVT EQU   @NM00003+1
@NM00004 EQU   AVTCKFLG
AVTCKHLT EQU   AVTCKFLG
AVTCKREQ EQU   AVTCKFLG
AVTCKENV EQU   AVTCKFLG
AVTCKNAC EQU   AVTCKFLG
AVTCKTAC EQU   AVTCKFLG
@NM00002 EQU   IEDQAVTD+312
AVTREADD EQU   IEDQAVTD+308
AVTREADY EQU   IEDQAVTD+304
AVTRACE  EQU   IEDQAVTD+300
AVTTCB   EQU   IEDQAVTD+296
AVTPASWD EQU   IEDQAVTD+288
AVTCTLCH EQU   IEDQAVTD+280
AVTDOUBL EQU   IEDQAVTD+272
AVTDOUBX EQU   IEDQAVTD+264
AVTDPARM EQU   IEDQAVTD+260
AVTCSTCS EQU   IEDQAVTD+256
AVTDLQ   EQU   AVTSAVEX+32
@NM00001 EQU   AVTSAVEX
AVTSAVE4 EQU   IEDQAVTD+144
AVTSAVE3 EQU   IEDQAVTD+72
AVTSAVE2 EQU   IEDQAVTD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEDPMD,(C'PLS0317',0701,77033)
