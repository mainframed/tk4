         TITLE ' /* IRBMFANL - SYNTAX ANALYZER                         *
                       '
IRBMFANL CSECT ,                                                   0001
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @07,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@07                                         0001
        ENTRY SIZDATD
        L     @06,8(,@01)             PICK UP PTR TO 3RD PARAMETER
        L     @06,0(,@06)             GET PTR TO WORKAREA
        A     @06,@SIZDATD            BUMP PTR TO NEW WORKAREA
        USING @DATD,@06
        ST    @13,@SA00001+4          MANUALLY SET UP PROLOGUE
        ST    @06,8(,@13)
        LR    @13,@06
        MVC   @PC00001(12),0(@01)
*   ANARAPTR=GPR06P;                /* SAVE PTR TO WORKAREA          */
         L     @15,@PC00001+8                                      0007
         ST    GPR06P,ANARAPTR(,@15)                               0007
*   IF ANSTPARM='1'B THEN           /* IS THIS A TERMINAL TYPE ITEM? */
         L     @15,@PC00001                                        0008
         TM    ANSTPARM(@15),B'01000000'                           0008
         BNO   @RF00008                                            0008
*     DO;                           /* YES, HAVE A RECOGNIZER CHECK  */
*                                   /* INPUT SOURCE'S TEXT           */
*       ANAUSCB=ANSCB;              /* SAVE ORIGINAL SCB             */
         L     @14,@PC00001+4                                      0010
         MVC   ANAUSCB(12),ANSCB(@14)                              0010
*       CALL ANRECMOD(ANPPARM,ANAUSCB);                            0011
         LA    @14,ANPPARM(,@15)                                   0011
         ST    @14,@AL00001                                        0011
         LA    @14,ANAUSCB                                         0011
         ST    @14,@AL00001+4                                      0011
         L     @15,ANSTRUC(,@15)                                   0011
         LA    @01,@AL00001                                        0011
         BALR  @14,@15                                             0011
*       RESPECIFY                                                  0012
*        (GPR15F)RSTD;                                             0012
*       IF GPR15F=0 THEN            /* IF SUCCESSFUL RETURN          */
         LTR   GPR15F,GPR15F                                       0013
         BNZ   @RF00013                                            0013
*         ANSCB=ANAUSCB;            /* UPDATE ORIGINAL SCB           */
         L     @14,@PC00001+4                                      0014
         MVC   ANSCB(12,@14),ANAUSCB                               0014
*       ANRTCD=GPR15F;              /* RETURN TO CALLER WITH A     0015
*                                      SUCCESS- FUL (0) OR         0015
*                                      UNSUCCESSFUL (4) VALUE        */
@RF00013 LR    ANRTCD,GPR15F                                       0015
*       GOTO ANRETURN;                                             0016
         B     ANRETURN                                            0016
*       RESPECIFY                                                  0017
*        (GPR15F)UNRSTD;                                           0017
*     END;                                                         0018
*   ANALTFND='0'B;                  /* INITIALIZE REGULAR ALTERNATIVE
*                                      FOUND FLAG                    */
@RF00008 NI    ANALTFND,B'01111111'                                0019
*   ANALTPTR=ANALTADR;              /* POINT TO BEGINNING OF REGULAR
*                                      ALTERNATIVES LIST             */
         L     @15,@PC00001                                        0020
         L     @01,ANSTRUC(,@15)                                   0020
         L     ANALTPTR,ANALTADR(,@01)                             0020
*ANLOOP:                                                           0021
*   ;                                                              0021
ANLOOP   DS    0H                                                  0022
*   ANENDA='0'B;                                                   0022
         NI    ANENDA,B'01111111'                                  0022
*   DO WHILE ANENDA='0'B;           /* DO FOR EACH ALTERNATIVE ENTRY */
         B     @DE00023                                            0023
@DL00023 DS    0H                                                  0024
*     ANAUSCB=ANSCB;                /* SAVE ORIGINAL SCB             */
         L     @03,@PC00001+4                                      0024
         MVC   ANAUSCB(12),ANSCB(@03)                              0024
*     ANENDI='0'B;                                                 0025
         NI    ANENDI,B'01111111'                                  0025
*     DO ANITMPTR=ANITMADR BY LENGTH(ANITMENT)WHILE ANENDI='0'B;/* DO
*                                      FOR EACH ALTERNATIVE ENTRY    */
         L     ANITMPTR,ANITMADR(,ANALTPTR)                        0026
         B     @DE00026                                            0026
@DL00026 DS    0H                                                  0027
*       CALL IRBMFANL(ANITMENT,ANAUSCB,ANARAPTR);                  0027
         ST    ANITMPTR,@AL00001                                   0027
         LA    @15,ANAUSCB                                         0027
         ST    @15,@AL00001+4                                      0027
         L     @15,@PC00001+8                                      0027
         ST    @15,@AL00001+8                                      0027
         LA    @01,@AL00001                                        0027
         L     @15,@CA00028                                        0027
         BALR  @14,@15                                             0027
*       RESPECIFY                                                  0028
*        (GPR15F)RSTD;                                             0028
*       ANRETCOD=GPR15P;            /* SAVE RETURN CODE              */
         LR    ANRETCOD,GPR15P                                     0029
*       RESPECIFY                                                  0030
*        (GPR15F)UNRSTD;                                           0030
*       IF ANRETCOD=ANUNSUCC THEN   /* IF UNSUCCESSFUL RETURN GET  0031
*                                      NEXT ALTERNATIVE              */
         CH    ANRETCOD,@CH00072                                   0031
         BE    @RT00031                                            0031
*         GOTO ANNXTALT;                                           0032
*       IF ANENDITM='1'B THEN       /* SETTING LOOP CONTROL VARIABLE */
         TM    ANENDITM(ANITMPTR),B'10000000'                      0033
         BNO   @RF00033                                            0033
*         ANENDI='1'B;              /* TO THAT OF THE END OF LIST BIT*/
         OI    ANENDI,B'10000000'                                  0034
*     END;                                                         0035
@RF00033 AH    ANITMPTR,@CH00127                                   0035
@DE00026 TM    ANENDI,B'10000000'                                  0035
         BZ    @DL00026                                            0035
*     ANSCB=ANAUSCB;                /* UPDATE ORIGINAL SCB           */
         L     @03,@PC00001+4                                      0036
         MVC   ANSCB(12,@03),ANAUSCB                               0036
*     IF ANINBIT='1'B THEN          /* IF INITIALIZATION ROUTINE   0037
*                                      EXISTS CALL IT FOR OPTION   0037
*                                      INITIAL.                      */
         TM    ANINBIT(ANALTPTR),B'01000000'                       0037
         BNO   @RF00037                                            0037
*       CALL MFOPINIT(ANAPARM);                                    0038
         LA    @03,ANAPARM(,ANALTPTR)                              0038
         ST    @03,@AL00001                                        0038
         L     @15,ANINIT(,ANALTPTR)                               0038
         LA    @01,@AL00001                                        0038
         BALR  @14,@15                                             0038
*     IF ANRCBIT='1'B THEN          /* IS STRUCTURE RECURSIVEX       */
@RF00037 L     @15,@PC00001                                        0039
         L     @15,ANSTRUC(,@15)                                   0039
         TM    ANRCBIT(@15),B'01000000'                            0039
         BNO   @RF00039                                            0039
*       DO;                         /* 'YES                          */
*         ANALTFND='1'B;            /* INDICATE AN ALTERNATE WAS   0041
*                                      FOUND                         */
         OI    ANALTFND,B'10000000'                                0041
*         IF ANINSTRC='1'B THEN     /* FOR INITIAL STRUCTURE FREE  0042
*                                      BCB'S AND BUFFERS             */
         TM    ANINSTRC(@15),B'10000000'                           0042
         BNO   @RF00042                                            0042
*           CALL MFFREBUF(ANFRECUR,ANAUSCB);/* FREE UP TO CURRENT  0043
*                                      BUFFER-BCB                    */
         LA    @15,@CF00072                                        0043
         ST    @15,@AL00001                                        0043
         LA    @15,ANAUSCB                                         0043
         ST    @15,@AL00001+4                                      0043
         L     @14,@CA00067                                        0043
         L     @15,INFREBUF-INFREBUF(,@14)                         0043
         LA    @01,@AL00001                                        0043
         BALR  @14,@15                                             0043
*         ANALTPTR=ANRCALT;         /* POINT TO RECURSIVE LIST       */
@RF00042 L     @15,@PC00001                                        0044
         L     @01,ANSTRUC(,@15)                                   0044
         L     ANALTPTR,ANRCALT(,@01)                              0044
*         GOTO ANLOOP;              /* KEEP LOOKING FOR RECURSIVE  0045
*                                      ALTERNATIVES                  */
         B     ANLOOP                                              0045
*       END;                                                       0046
*     IF ANINSTRC='1'B THEN         /* FOR INITIAL STRUCTURE FREE  0047
*                                      BCB'S AND BUFFERS             */
@RF00039 L     @15,@PC00001                                        0047
         L     @01,ANSTRUC(,@15)                                   0047
         TM    ANINSTRC(@01),B'10000000'                           0047
         BNO   @RF00047                                            0047
*       CALL MFFREBUF(ANFREALL,ANSCB);/* FREE ALL BUFFER-BCB'S       */
         LA    @15,@CF00074                                        0048
         ST    @15,@AL00001                                        0048
         L     @15,@PC00001+4                                      0048
         ST    @15,@AL00001+4                                      0048
         L     @14,@CA00067                                        0048
         L     @15,INFREBUF-INFREBUF(,@14)                         0048
         LA    @01,@AL00001                                        0048
         BALR  @14,@15                                             0048
*     ANRTCD=ANSUCCES;              /* RETURN CODE=SUCCESS           */
@RF00047 SR    ANRTCD,ANRTCD                                       0049
*     GO TO ANRETURN;                                              0050
         B     ANRETURN                                            0050
*ANNXTALT:                                                         0051
*     ;                                                            0051
ANNXTALT DS    0H                                                  0052
*     IF ANENDALT='1'B THEN         /* SETTING LOOP CONTROL VARIABLE */
         TM    ANENDALT(ANALTPTR),B'10000000'                      0052
         BNO   @RF00052                                            0052
*       ANENDA='1'B;                /* TO THAT OF THE END OF LIST BIT*/
         OI    ANENDA,B'10000000'                                  0053
*     ANALTPTR=ANALTPTR+LENGTH(ANALTENT);/* NEXT ALTERNATIVE ENTRY   */
@RF00052 AH    ANALTPTR,@CH00128                                   0054
*   END;                                                           0055
@DE00023 TM    ANENDA,B'10000000'                                  0055
         BZ    @DL00023                                            0055
*   IF ANINSTRC='1'B THEN           /* FOR INITIAL STRUCTURE FREE  0056
*                                      BCB'S AND BUFFERS             */
         L     @15,@PC00001                                        0056
         L     @01,ANSTRUC(,@15)                                   0056
         TM    ANINSTRC(@01),B'10000000'                           0056
         BNO   @RF00056                                            0056
*     CALL MFFREBUF(ANFREALL,ANSCB);/* FREE ALL BUFFER-BCB'S         */
         LA    @15,@CF00074                                        0057
         ST    @15,@AL00001                                        0057
         L     @15,@PC00001+4                                      0057
         ST    @15,@AL00001+4                                      0057
         L     @14,@CA00067                                        0057
         L     @15,INFREBUF-INFREBUF(,@14)                         0057
         LA    @01,@AL00001                                        0057
         BALR  @14,@15                                             0057
*   IF ANRCBIT='1'B&ANALTFND='1'B THEN/* IF RECURSIVE AND AN       0058
*                                      ALTERNATIVE WAS FOUND, THEN   */
@RF00056 L     @15,@PC00001                                        0058
         L     @01,ANSTRUC(,@15)                                   0058
         TM    ANRCBIT(@01),B'01000000'                            0058
         BNO   @RF00058                                            0058
         TM    ANALTFND,B'10000000'                                0058
         BNO   @RF00058                                            0058
*     DO;                                                          0059
*       ANRTCD=ANSUCCES;            /* RETURN CODE=SUCCESS           */
         SR    ANRTCD,ANRTCD                                       0060
*       GO TO ANRETURN;                                            0061
         B     ANRETURN                                            0061
*     END;                                                         0062
*   ELSE                                                           0063
*     ANRTCD=ANUNSUCC;              /* RETURN CODE=FAILURE           */
@RF00058 LA    ANRTCD,4                                            0063
*ANRETURN:                                                         0064
*   GEN;                                                           0064
ANRETURN DS    0H                                                  0064
        L     @15,@PC00001+8
        S     @06,@SIZDATD
        ST    GPR06P,ANARAPTR(,@15)
*   RETURN CODE(ANRTCD);            /* RETURN TO CALLER              */
         LR    @15,ANRTCD                                          0065
         L     @13,4(,@13)                                         0065
         L     @14,12(,@13)                                        0065
         LM    @00,@12,20(@13)                                     0065
         BR    @14                                                 0065
*   END IRBMFANL;                                                  0066
@DATA    DS    0H
@CH00127 DC    H'12'
@CH00128 DC    H'16'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@AL00001 DS    3A
IRBMFANL CSECT
         DS    0F
@CF00074 DC    F'0'
@CF00072 DC    F'4'
@CH00072 EQU   @CF00072+2
@DATD    DSECT
         DS    0D
ANALTFND DS    BL1
ANENDA   DS    BL1
ANENDI   DS    BL1
         DS    CL1
ANAUSCB  DS    CL12
         ORG   ANAUSCB
ANAUBCB  DS    AL4
ANAUTXT  DS    AL4
ANAUBYT  DS    FL4
         ORG   ANAUSCB+12
IRBMFANL CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA00028 DC    A(IRBMFANL)
@CA00067 DC    A(INFREBUF)
         DS    0D
ANPATCH  DS    CL100
@DATD    DSECT
SIZDATD  EQU   @SIZDATD
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IRBMFANL CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ANRTCD   EQU   @02
ANRETCOD EQU   @04
ANITMPTR EQU   @03
ANALTPTR EQU   @02
GPR06P   EQU   @06
GPR08    EQU   @08
GPR09    EQU   @09
GPR10    EQU   @10
GPR11    EQU   @11
GPR12    EQU   @12
GPR15F   EQU   @15
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR14F   EQU   @14
GPR14P   EQU   @14
         EXTRN INFREBUF
ANSTRENT EQU   0
ANSFLAGS EQU   ANSTRENT
ANINSTRC EQU   ANSFLAGS
ANRCBIT  EQU   ANSFLAGS
ANALTADR EQU   ANSTRENT+4
ANRCALT  EQU   ANSTRENT+8
ANALTENT EQU   0
ANAFLAGS EQU   ANALTENT
ANENDALT EQU   ANAFLAGS
ANINBIT  EQU   ANAFLAGS
ANITMADR EQU   ANALTENT+4
ANINIT   EQU   ANALTENT+8
ANAPARM  EQU   ANALTENT+12
ANITMENT EQU   0
ANIFLAGS EQU   ANITMENT
ANENDITM EQU   ANIFLAGS
ANRECMOD EQU   0
MFFREBUF EQU   0
MFOPINIT EQU   0
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
ANITMPRM EQU   0
ANPFLAGS EQU   ANITMPRM
ANSTPARM EQU   ANPFLAGS
ANSTRUC  EQU   ANITMPRM+4
ANPPARM  EQU   ANITMPRM+8
ANSCB    EQU   0
ANARAPTR EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ANBYTLFT EQU   ANSCB+8
ANTXTCUR EQU   ANSCB+4
ANCURBCB EQU   ANSCB
@NM00004 EQU   ANPFLAGS
ANENDPRM EQU   ANPFLAGS
ANIPARM  EQU   ANITMENT+8
ANRECSTR EQU   ANITMENT+4
@NM00003 EQU   ANIFLAGS
ANSTRM   EQU   ANIFLAGS
@NM00002 EQU   ANAFLAGS
@NM00001 EQU   ANSFLAGS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00031 EQU   ANNXTALT
@ENDDATA EQU   *
         END   IRBMFANL,(C'PL/S-II',0502,74087)
