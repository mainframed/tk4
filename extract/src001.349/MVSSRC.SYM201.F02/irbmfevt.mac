         TITLE '*/* IRBMFEVT - MFROUTER SERVICE MODULE                 *
                       '
         EJECT
* COMMUNICATIONS VECTOR TABLE
         CVT   DSECT=YES
* PREFIXED STORAGE AREA
         IHAPSA
* LOGICAL CONFIGURATION COMMUNICATION AREA
         IHALCCA
* GLOBAL SUPERVISOR TABLE
EVGST    IRBSTGST
* TIMER CONTROL AREA
         IEAVVTPC
* TIMER QUEUE ELEMENT
         IHATQE
* RECOVERY/TERMINATION WORK AREA (RTCA/SDWA)
         IHASDWA
* CPU WORK/SAVE AREA
         IHAWSAVT CLASS=CPU
* FUNCTIONAL RECOVERY ROUTINE STACK
         IHAFRRS
*  MFROUTER MEASUREMENT VECTOR TABLES (MMV)
         IRBSTMMV
* CPU SAVE AREA
EVSAVE   DSECT
EVMFRSAV DS    72C                  MFROUTER SAVE AREA
* FULL EIGHTEEN WORDS IS USED FOR RTM SAVE AREA ON CALLRTM MACRO
         ORG   EVMFRSAV+15*4        END OF REGISTER SAVE AREA
EVMFRRES DS    F                    RESERVED
EVMFRTOD DS    D                    TIME OF DAY CLOCK VALUE FOR
*                                   CATCHING UP TO REAL TIME
EVMGRSAV DS    72C                  MG ROUTINE SAVE AREA
         EJECT
* REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
* BEGIN ROUTER
IRBMFEVT CSECT ,
         USING PSA,R0
         L     R15,PSALCCAV         GET VIRTUAL ADDRESS OF LCCA
         USING LCCA,R15
         L     R15,LCCACPUS         GET ADDRESS OF CPU SAVE AREA
         USING WSAC,R15
         L     R15,WSACMF1          GET ADDRESS OF MF/1 SAVE AREA
         USING EVSAVE,R15
         STM   R0,R14,EVMFRSAV      SAVE ALL REGISTERS EXCEPT R15
         DROP  R15
*                                         R15 POINTS TO SAVE AREA
         BALR  R4,0                 ESTABLISH CODE ADDRESSABILITY
         USING *,R4
* ESTABLISH FAILURE RECOVERY ENVIRONMENT
         LA    R7,EVFRR             SET UP ADDR OF FRR
EVSFRR1  SETFRR A,FRRAD=(R7),PARMAD=(R5),WRKREGS=(R5,R6),              X
               RELATED=(MFEVFRR,IRBMFEVT(EVSFRR2,EVSFRR3,EVSFRR4))
         ST    R15,0(,R5)           STORE ADDRESS OF REGISTER SAVE AREA
*                                         INTO FIRST WORD OF SIX WORD
*                                         PARAMETER AREA
         LR    R2,R15               SAVE SAVE AREA ADDRESS FOR
*                                         MEASUREMENT GATHERING
*                                         ROUTINES
         USING EVSAVE,R2
         L     R3,FLCCVT            GET CVT ADDRESS
         USING CVTMAP,R3
         L     R3,CVTMFCTL          GET ADDRESS OF MF/1 GLOBAL
*                                         SUPERVISOR TABLE
         USING EVGST,R3
         L     R3,STGSMMV           GET ADDRESS OF MFROUTER VECTOR TBL
         AR    R3,R0                INDEX TO ENTRY WITH MFROUTER CODE
         USING STMMEVTL,R3
         L     R3,STMMEVNT          POINT TO FIRST MG ROUTINE
         USING STMMMGRL,R3
         LA    R13,EVMGRSAV         POINT TO SAVE AREA FOR MG
*                                   ROUTINE USE
EVLOOP   L     R15,STMMMGAD         LOAD ADDRESS OF MG ROUTINE
         L     R1,STMMMGDA          GET PARAMETER ADDRESS
         BALR  R14,R15              GO TO MG ROUTINE
*  GET ADDRESS OF NEXT MG ROUTINE
         LA    R3,STMMMGNX-STMMMGRL(,R3)
*                                         ENTRY
         B     EVLOOP               LOOP. DUMMY MG ROUTINE WILL CAUSE
*                                         EXIT (IRBMFEVE OR IRBMFEVL)
         DROP  R3
         DROP  R4
         EJECT
* ENQUEUE TIMER QUEUE ELEMENT AND RETURN MG ROUTINE  -  THIS SECTION
* WILL RECEIVE CONTROL AFTER THE LAST SAMPLING MG ROUTINE HAS RETURNED
* CONTROL TO THE MAINLINE CODE.
         ENTRY IRBMFEVE             THIS ENTRY IS USED BY
*                                         INITIALIZATION PROGRAMS WHEN
*                                         CREATING THE MFROUTER MG
*                                         ROUTINE VECTOR TABLE (MMV).
*                                         THE ADDRESS OF IRBMFEVE IS
*                                         USED TO CREATE THE LAST
*                                         (DUMMY) MG ROUTINE ENTRY IN
*                                         THE MMV FOR THE SAMPLING
*                                         EVENT CLASS.  FOR OTHER
*                                         EVENT CLASSES, IRBMFEVL IS
*                                         USED INSTEAD.
IRBMFEVE DS    0H
         BALR  R4,0                 ESTABLISH CODE ADDRESSABILITY
         USING *,R4
* RE-ENQUEUE THE TIMER QUEUE ELEMENT
* FIRST OBTAIN THE DISPATCHER (DISP) LOCK
EVSL1    SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,                         X
               RELATED=(MFEVDISP,IRBMFEVT(EVSL2,EVSL3))
* ACCESS TQE ADDRESS AND ENQ ROUTINE ADDRESS
         L     R3,FLCCVT            ESTABLISH ADDRESSABILITY TO CVT
         USING CVTMAP,R3
         L     R1,CVTTPC            ESTABLISH ADDRESSABILITY TO TIMER
*                                         CONTROL AREA
         USING TPC,R1
         LA    R1,TPCMFTQE          ESTABLISH ADDRESSABILITY TO MF/1
*                                         TQE
         USING TQE,R1
         L     R5,CVTMFCTL          ESTABLISH ADDRESSABILITY TO GST
         USING EVGST,R5
* CALCULATE TIME OF NEXT INTERRUPT AND STORE INTO THE TQE
         LM    R6,R7,TQEVAL         GET TIME OF LAST INTERRUPT.  THIS
*                                         IS IN THE FORM OF A DOUBLE-
*                                         WORD WHERE THE
*                                         WORD WHERE BIT 51 REPRESENTS
*                                         ONE MICROSECOND.  IT IS THE
*                                         GMT TIME OF CENTURY TIME.
         AL    R7,STGSCYC+4         ADD LOW ORDER WORD OF CYCLE
*                                         INTERVAL TO LOW ORDER WORD OF
*                                         TIME OF LAST INTERRUPT.
         BC    12,EVLAB1            BRANCH ON NO OVERFLOW
         AL    R6,EVONE             ADD CARRY TO HIGH ORDER WORD
EVLAB1   AL    R6,STGSCYC           ADD HIGH ORDER WORD OF CYCLE
*                                         INTERVAL TO HIGH ORDER WORD
*                                         OF TIME OF LAST INTERRUPT.
         STM   R6,R7,TQEVAL         STORE TIME OF NEXT INTERRUPT INTO
*                                         THE TQE
* CHECK IF NEXT INTERRUPT TIME HAS ALREADY ELAPSED
         STCK  EVMFRTOD             GET CURRENT TIME
* IF THE CLOCK VALUE IS GOOD, THE NEXT TWO INSTRUCTIONS ARE ALL THAT IS
* NORMALLY EXECUTED. IF THE CLOCK IS BAD, THE BRANCH ON CONDITION
* AFTER THE SECOND STCK PREVENTS THE BAD VALUE FROM BEING USED.
         CLC   EVMFRTOD(8),TQEVAL   HAS TQE TIME ALREADY ELAPSED
         BL    EVLAB3               NO. CURRENT TIME IS LESS THAN NEXT
*                                   INTERRUPT TIME
         STCK  EVMFRTOD             GET CURRENT TIME AND SET CONDITION
*                                   CODE
         BNZ   EVLAB3               CLOCK VALUE NO GOOD. DO NOT USE IT
*                                   TO CALCULATE A NEW TQE VALUE.
* INCREMENT THIS TIME WITHOUT GOING THROUGH CHECK AGAIN, SO NO LOOP
* OCCURS
         LM    R6,R7,EVMFRTOD       GET CURRENT TIME
         AL    R7,STGSCYC+4         ADD LOW ORDER CYCLE INTERVAL
         BC    12,EVLAB2            BRANCH ON NO OVERFLOW
         AL    R6,EVONE             ADD CARRY
EVLAB2   AL    R6,STGSCYC           ADD HIGH ORDER CYCLE INTERVAL
         STM   R6,R7,TQEVAL         RESET TIME OF NEXT INTERRUPT
EVLAB3   DS    0H                   END OF REAL TIME CHECK
         DROP  R1
         DROP  R5
* GO TO TIMER ENQUEUE ROUTINE TO ENQUEUE TQE
         L     R15,CVTQTE00         GET ADDRESS OF TIMER ENQUEUE
*                                         ROUTINE
         LR    R5,R2                SAVE ADDRESS OF REGISTER SAVE AREA
         BALR  R2,R15               ENQUEUE TQE
         LR    R2,R5                RESTORE ADDRESS OF REGISTER
*                                         SAVEAREA
* RELEASE DISP LOCK
EVSL2    SETLOCK RELEASE,TYPE=DISP,DISABLED,                           X
               RELATED=(MFEVDISP,IRBMFEVT(EVSL1))
* CANCEL THE FAILURE RECOVERY ENVIRONMENT
EVSFRR2  SETFRR D,WRKREGS=(R5,R6),RELATED=(MFEVFRR,IRBMFEVT(EVSFRR1))
         LM    R0,R14,EVMFRSAV      RESTORE REGISTERS
         BR    R14                  RETURN
         DROP  R3
         DROP  R4
         EJECT
* RETURN MG ROUTINE  -  THIS PROGRAM WILL RECEIVE CONTROL AFTER THE
* LAST MG ROUTINE HAS RETURNED TO THE MAINLINE CODE.
         ENTRY IRBMFEVL             THIS ENTRY IS USED BY
*                                         INITIALIZATION PROGRAMS WHEN
*                                         CREATING THE MMV.  THE
*                                         ADDRESS OF IRBMFEVL IS USED
*                                         TO CREATE THE LAST (DUMMY)
*                                         MG ROUTINE ENTRY IN THE MMV
*                                         FOR EACH EVENT CLASS.  FOR
*                                         THE SAMPLING EVENT CLASS,
*                                         IRBMFEVE IS USED INSTEAD.
IRBMFEVL DS    0H
         BALR  R4,0                 ESTABLISH ADDRESSABILITY
         USING *,R4
* CANCEL THE FAILURE RECOVERY ENVIRONMENT
EVSFRR3  SETFRR D,WRKREGS=(R5,R6),RELATED=(MFEVFRR,IRBMFEVT(EVSFRR1))
         LM    R0,R14,EVMFRSAV      RESTORE REGISTERS
         BR    R14                  RETURN TO CALLER
         DROP  R4
         EJECT
* FAILURE RECOVERY EXIT
EVFRR    BALR  R8,0                 ESTABLISH CODE ADDRESSABILITY
         USING *,R8
         USING SDWA,R1              ESTABLISH ADDRESSABILITY TO SDWA
         L     R2,SDWAPARM          GET ADDRESS OF FIRST WORD OF FRR
*                                         PARAMETER AREA
         L     R2,0(,R2)            GET ADDRESS OF REGISTER SAVE AREA
         MVC   SDWASRSV(60),EVMFRSAV MOVE REGS 0 - 14 TO SDWA
*  FREE DISP LOCK, IF HELD
         LR    R10,R14              SAVE RETURN ADDRESS
EVSL3    SETLOCK RELEASE,TYPE=DISP,DISABLED,                           X
               RELATED=(MFEVDISP,IRBMFEVT(EVSL1))
* CANCEL FAILURE RECOVERY ENVIRONMENT
EVSFRR4  SETFRR D,WRKREGS=(R5,R6),RELATED=(MFEVFRR,IRBMFEVT(EVSFRR1))
*  ABTERM MF/1 TASK
         LR    R7,R1                SAVE SDWA ADDRESS
         L     R3,FLCCVT            GET CVT ADDRESS
         USING CVTMAP,R3
         L     R3,CVTMFCTL          GET ADDRESS OF MF/1 CONTROL TABLES
         USING EVGST,R3
         L     R4,STGSTCB           TCB ADDRESS
         LH    R5,STGSASID          ASID
         LA    R13,EVMFRSAV         SAVE AREA ADDRESS
         CALLRTM TYPE=ABTERM,COMPCOD=X'1FD',SYSTEM,ASID=(R5),TCB=(R4)
         LR    R14,R10              RESTORE RETURN ADDRESS
         LR    R1,R7                RESTORE SDWA ADDRESS
* RETURN TO RTM INDICATING RETRY
         SETRP RETADDR=EVRETRY,RETREGS=YES,RC=4
         BR    R14                  RETURN TO RTM
         DROP  R3
         DROP  R8
         EJECT
* RETRY ROUTINE. RETURNS TO CALLER WITH REGISTERS INTACT
EVRETRY BR    R14                  RETURN
         EJECT
* BEGIN DATA DEFINITION (READ-ONLY)
EVONE    DC    F'1'                 CONSTANT ONE
EVPATCH  DS    100C                 PATCH AREA
*   END;                                                           0007
@DATA    DS    0H
         DS    0F
         DS    0F
         DS    0D
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
@ENDDATA EQU   *
         END   IRBMFEVT,(C'PL/S-II',0502,74087)
