         TITLE '*/* IRBMFCNV - BINARY TO CHARACTER CONVERSION MODULE   *
                       '
IRBMFCNV CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IRBMFCNV  74.087'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(28),0(@01)                                 0001
*                                                                  0006
*/* BEGIN GENERAL INITIALIZATION                                     */
*                                                                  0006
*   IF CNFLOAT='1'B THEN                                           0006
         L     @10,@PC00001+24                                     0006
         TM    CNFLOAT(@10),B'10000000'                            0006
         BNO   @RF00006                                            0006
*     CNIFLOAT='1'B;                /* INITIALIZE TEMPORARY VARIABLE */
         OI    CNIFLOAT,B'10000000'                                0007
*   ELSE                                                           0008
*     CNIFLOAT='0'B;                /* INITIALIZE TEMPORARY VARIABLE */
         B     @RC00006                                            0008
@RF00006 NI    CNIFLOAT,B'01111111'                                0008
*   CNRETCDE=0;                     /* SET NORMAL RETURN CODE        */
*                                                                  0009
@RC00006 SR    @10,@10                                             0009
         LR    CNRETCDE,@10                                        0009
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK PARAMETERS FOR VALIDITY IF NO OUTPUT STRING OR OUTPUT   */
*   /* STRING IS TOO LONG                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0010
*   IF CNOUTLEN<=0×CNOUTLEN>256 THEN                               0010
         L     @04,@PC00001+12                                     0010
         L     @04,CNOUTLEN(,@04)                                  0010
         CR    @04,@10                                             0010
         BNH   @RT00010                                            0010
         CH    @04,@CH00056                                        0010
         BNH   @RF00010                                            0010
@RT00010 DS    0H                                                  0011
*     RETURN CODE(12);              /* RETURN TO REPORT GENERATOR    */
*                                                                  0011
         L     @13,4(,@13)                                         0011
         L     @00,@SIZDATD                                        0011
         LR    @01,@11                                             0011
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,12                                              0011
         L     @14,12(,@13)                                        0011
         LM    @00,@12,20(@13)                                     0011
         BR    @14                                                 0011
*   /*****************************************************************/
*   /*                                                               */
*   /* FORCE FLOATING OF RESULT IN OUTPUT STRING IF BAD OUTPUT SCALE */
*   /* FACTOR                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0012
*   IF CNOUFRAC<0×CNOUFRAC>=CNOUTLEN THEN                          0012
@RF00010 L     @10,@PC00001+16                                     0012
         L     @10,CNOUFRAC(,@10)                                  0012
         LTR   @10,@10                                             0012
         BM    @RT00012                                            0012
         L     @04,@PC00001+12                                     0012
         C     @10,CNOUTLEN(,@04)                                  0012
         BL    @RF00012                                            0012
@RT00012 DS    0H                                                  0013
*     DO;                                                          0013
*       CNIFLOAT='1'B;              /* FORCE FLOATING                */
         OI    CNIFLOAT,B'10000000'                                0014
*       CNRETCDE=4;                 /* SET WARNING RETURN CODE       */
         LA    CNRETCDE,4                                          0015
*     END;                                                         0016
*   IF CNINPUT<0 THEN                                              0017
@RF00012 L     @10,@PC00001                                        0017
         ICM   @04,15,CNINPUT(@10)                                 0017
         BNM   @RF00017                                            0017
*     CNMINUS=1;                    /* INDICATES MINUS SIGN REQUIRED */
         MVC   CNMINUS(2),@CH00065                                 0018
*   ELSE                                                           0019
*     CNMINUS=0;                    /* MINUS SIGN NOT REQUIRED       */
         B     @RC00017                                            0019
@RF00017 SR    @10,@10                                             0019
         STH   @10,CNMINUS                                         0019
*   IF CNCOMMAS='1'B THEN                                          0020
@RC00017 L     @10,@PC00001+20                                     0020
         TM    CNCOMMAS(@10),B'10000000'                           0020
         BNO   @RF00020                                            0020
*     CNSSIGCM='1'B;                /* INITIALIZE TEMPORARY VARIABLE */
         OI    CNSSIGCM,B'10000000'                                0021
*   ELSE                                                           0022
*     CNSSIGCM='0'B;                /* INITIALIZE TEMPORARY VARIABLE */
         B     @RC00020                                            0022
@RF00020 NI    CNSSIGCM,B'01111111'                                0022
*   CNSFRAZR='0'B;                  /* DONT SUPPRESS LEADING ZERO ON
*                                      ALL FRACTIONAL NUMBERS        */
@RC00020 NI    CNSFRAZR,B'01111111'                                0023
*                                                                  0024
*/* BEGIN MAINLINE PROCESSING                                        */
*                                                                  0024
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP INTERNAL VARIABLES TO REPRESENT IDEAL CONVERTED STRING */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0024
*   IF CNINPUT=0 THEN               /* ZERO IS A SPECIAL CASE        */
         SR    @10,@10                                             0024
         L     @04,@PC00001                                        0024
         C     @10,CNINPUT(,@04)                                   0024
         BNE   @RF00024                                            0024
*     DO;                                                          0025
*       CNSIGNFC=0;                 /* NO COMMAS REQUIRED            */
         LR    CNSIGNFC,@10                                        0026
*       CNSSIGCM='0'B;              /* NO COMMAS REQUIRED            */
         NI    CNSSIGCM,B'01111111'                                0027
*       CNSIGNF=0;                  /* NO CONVERTED SIGNIFICANT    0028
*                                      DIGITS                        */
         LR    CNSIGNF,@10                                         0028
*       CNSIGZER=0;                 /* NO SIGNIFICANT TRAILING ZEROS */
         LR    CNSIGZER,@10                                        0029
*       CNLEADZ=1;                  /* INDICATES THAT A LEADING ZERO
*                                      IS REQUIRED BEFORE THE DEC. 0030
*                                      POINT.                        */
         LA    CNLEADZ,1                                           0030
*       CNFRAZER=0;                 /* NO FRACTIONAL LEADING ZEROS 0031
*                                      REQUIRED                      */
         LR    CNFRAZER,@10                                        0031
*       CNFRAC=0;                   /* NO CONVERTED FRACTIONAL DIGITS*/
         STH   @10,CNFRAC                                          0032
*     END;                                                         0033
*   ELSE                            /* INPUT VALUE IS NON-ZERO.    0034
*                                      CONVERSION IS NECESSARY       */
*     DO;                                                          0034
         B     @RC00024                                            0034
@RF00024 DS    0H                                                  0035
*       CVD(CNINPUT,CNPAKSTR);      /* CONVERT BINARY INPUT VALUE TO
*                                      PACKED DECIMAL FORMAT         */
         L     @10,@PC00001                                        0035
         L     @10,CNINPUT(,@10)                                   0035
         CVD   @10,CNPAKSTR                                        0035
*       UNPK(CNWRKSTR,CNPAKSTR);    /* UNPACK                        */
*                                                                  0036
         UNPK  CNWRKSTR(16),CNPAKSTR(8)                            0036
*       /*************************************************************/
*       /*                                                           */
*       /* CHANGE SIGN FIELD TO ZONE PATTERN                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0037
*       CNWRKSTR(LENGTH(CNWRKSTR))=CNWRKSTR(LENGTH(CNWRKSTR))×'F0'X;
*                                                                  0037
         OI    CNWRKSTR+15,X'F0'                                   0037
*       /*************************************************************/
*       /*                                                           */
*       /* ISOLATE SIGNIFICANT DIGITS BY STEPPING OVER LEADING ZEROS */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0038
*       DO CNLOOPV=1 BY 1 WHILE(CNWRKSTR(CNLOOPV)='F0'X);          0038
         LA    CNLOOPV,1                                           0038
         B     @DE00038                                            0038
@DL00038 DS    0H                                                  0039
*       END;                                                       0039
*                                                                  0039
         AH    CNLOOPV,@CH00065                                    0039
@DE00038 LA    @10,CNWRKSTR-1(CNLOOPV)                             0039
         CLI   0(@10),X'F0'                                        0039
         BE    @DL00038                                            0039
*       /*************************************************************/
*       /*                                                           */
*       /* CNLOOPV NOW POINTS TO FIRST NON-ZERO CHARACTER. SET UP    */
*       /* INTERNAL VARIABLES TO DESCRIBE REQUIRED SEGMENTS OF THE   */
*       /* OUTPUT VARIABLE                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0040
*       IF CNINSCAL>=0 THEN         /* ALL DIGITS ARE SIGNIFICANT    */
         SR    @10,@10                                             0040
         L     @04,@PC00001+4                                      0040
         L     @04,CNINSCAL(,@04)                                  0040
         CR    @04,@10                                             0040
         BL    @RF00040                                            0040
*         DO;                                                      0041
*                                                                  0041
*           /*********************************************************/
*           /*                                                       */
*           /* SAVE SIGNIFICANT DIGITS                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0042
*           CNSIGDIG=CNWRKSTR(CNLOOPV:LENGTH(CNWRKSTR));           0042
         MVI   CNSIGDIG+1,C' '                                     0042
         MVC   CNSIGDIG+2(8),CNSIGDIG+1                            0042
         LA    @09,16                                              0042
         SR    @09,CNLOOPV                                         0042
         LA    @07,CNWRKSTR-1(CNLOOPV)                             0042
         EX    @09,@SM00144                                        0042
*           CNSIGNF=LENGTH(CNWRKSTR)-CNLOOPV+1;/* REMEMBER NUMBER OF
*                                      SIGNIFICANT DIGITS            */
         AH    @09,@CH00065                                        0043
         LR    CNSIGNF,@09                                         0043
*           CNLEADZ=0;              /* NO LEADING ZERO               */
         LR    CNLEADZ,@10                                         0044
*           CNSIGZER=CNINSCAL;      /* TRAILING ZEROS REQUIRED IF  0045
*                                      SCALE>0. NUMBER OF TRAILING 0045
*                                      SIGNIFICANT ZEROS IS EQUAL TO
*                                      SCALE FACTOR                  */
*                                                                  0045
         L     @09,@PC00001+4                                      0045
         L     @09,CNINSCAL(,@09)                                  0045
         LR    CNSIGZER,@09                                        0045
*           /*********************************************************/
*           /*                                                       */
*           /* ESTABLISH NUMBER OF COMMAS NEEDED BEFORE DECIMAL POINT*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0046
*           IF(CNSIGNF+CNSIGZER)<=3 THEN                           0046
         LR    @09,CNSIGNF                                         0046
         AR    @09,CNSIGZER                                        0046
         CH    @09,@CH00098                                        0046
         BH    @RF00046                                            0046
*             CNSIGNFC=0;           /* NO COMMAS NEEDED              */
         LR    CNSIGNFC,@10                                        0047
*           ELSE                                                   0048
*             DO;                                                  0048
         B     @RC00046                                            0048
@RF00046 DS    0H                                                  0049
*               CNSIGNFC=(CNSIGNF+CNSIGZER)/3;                     0049
*                                                                  0049
         LA    @10,3                                               0049
         LR    @09,CNSIGNF                                         0049
         AR    @09,CNSIGZER                                        0049
         LR    @00,@09                                             0049
         SRDA  @00,32                                              0049
         DR    @00,@10                                             0049
         LR    CNSIGNFC,@01                                        0049
*               /*****************************************************/
*               /*                                                   */
*               /* IF EVEN MULTIPLE OF 3, ONE LESS COMMA IS REQUIRED */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0050
*               IF(CNSIGNF+CNSIGZER)//3=0 THEN                     0050
         LR    @00,@09                                             0050
         SRDA  @00,32                                              0050
         DR    @00,@10                                             0050
         LTR   @00,@00                                             0050
         BNZ   @RF00050                                            0050
*                 CNSIGNFC=CNSIGNFC-1;                             0051
         BCTR  CNSIGNFC,0                                          0051
*             END;                                                 0052
@RF00050 DS    0H                                                  0053
*           CNFRAZER=0;             /* NO LEADING FRACTIONAL ZEROS   */
@RC00046 SR    @10,@10                                             0053
         LR    CNFRAZER,@10                                        0053
*           CNFRAC=0;               /* NO CONVERTED FRACTIONAL DIGITS*/
         STH   @10,CNFRAC                                          0054
*           GO TO CNLAB1;           /* PUT STRING IN OUTPUT FIELD    */
         B     CNLAB1                                              0055
*         END;                                                     0056
*       IF CNINSCAL<(-(LENGTH(CNWRKSTR)-CNLOOPV))THEN/* ALL DIGITS 0057
*                                      CONVERTED ARE FRACTIONAL      */
@RF00040 L     @10,@PC00001+4                                      0057
         L     @10,CNINSCAL(,@10)                                  0057
         LA    @04,16                                              0057
         SR    @04,CNLOOPV                                         0057
         LR    @03,@04                                             0057
         LCR   @03,@03                                             0057
         CR    @10,@03                                             0057
         BNL   @RF00057                                            0057
*         DO;                                                      0058
         ST    @04,@TF00001                                        0058
*           CNSIGNF=0;              /* NO SIGNIFICANT CONVERTED    0059
*                                      DIGITS                        */
         SR    @07,@07                                             0059
         LR    CNSIGNF,@07                                         0059
*           CNSIGZER=0;             /* NO SIGNIFICANT TRAILING ZEROS */
         LR    CNSIGZER,@07                                        0060
*           CNLEADZ=1;              /* ONE SIGNIFICANT ZERO IS     0061
*                                      REQUIRED                      */
         LA    @15,1                                               0061
         LR    CNLEADZ,@15                                         0061
*           CNSIGNFC=0;             /* NO COMMAS REQUIRED            */
         LR    CNSIGNFC,@07                                        0062
*           CNSSIGCM='0'B;          /* NO COMMAS REQUIRED            */
         NI    CNSSIGCM,B'01111111'                                0063
*           CNFRAZER=-CNINSCAL-(LENGTH(CNWRKSTR)-CNLOOPV+1);/* SET 0064
*                                      NUMBER OF ZEROS TRAILING    0064
*                                      DECIMAL POINT AND LEADING   0064
*                                      CONVERTED FRACTIONAL DIGITS   */
         LR    CNFRAZER,@10                                        0064
         LCR   CNFRAZER,CNFRAZER                                   0064
         A     @15,@TF00001                                        0064
         SR    CNFRAZER,@15                                        0064
*           CNFRADIG=CNWRKSTR(CNLOOPV:LENGTH(CNWRKSTR));/* REMEMBER
*                                      FRACTIONAL DIGITS ACTUALLY  0065
*                                      CONVERTED                     */
         MVI   CNFRADIG+1,C' '                                     0065
         MVC   CNFRADIG+2(8),CNFRADIG+1                            0065
         LA    @10,CNWRKSTR-1(CNLOOPV)                             0065
         L     @07,@TF00001                                        0065
         EX    @07,@SM00146                                        0065
*           CNFRAC=LENGTH(CNWRKSTR)-CNLOOPV+1;/* LENGTH OF FRACTIONAL
*                                      DIGITS                        */
         STH   @15,CNFRAC                                          0066
*         END;                                                     0067
*       ELSE                        /* CONVERTED DIGITS ARE PART   0068
*                                      SIGNIFICANT AND PART        0068
*                                      FRACTIONAL                    */
*         DO;                                                      0068
         B     @RC00057                                            0068
@RF00057 DS    0H                                                  0069
*           CNSIGNF=LENGTH(CNWRKSTR)+CNINSCAL-CNLOOPV+1;/* LENGTH OF
*                                      SIGNIFICANT DIGITS            */
         LA    @10,16                                              0069
         L     @03,@PC00001+4                                      0069
         L     @03,CNINSCAL(,@03)                                  0069
         LR    CNSIGNF,@03                                         0069
         AR    CNSIGNF,@10                                         0069
         SR    CNSIGNF,CNLOOPV                                     0069
         AH    CNSIGNF,@CH00065                                    0069
*           CNSIGDIG=CNWRKSTR(CNLOOPV:LENGTH(CNWRKSTR)+CNINSCAL);/*
*                                      REMEMBER SIGNIFICANT DIGITS   */
*                                                                  0070
         MVI   CNSIGDIG+1,C' '                                     0070
         MVC   CNSIGDIG+2(8),CNSIGDIG+1                            0070
         SR    @03,CNLOOPV                                         0070
         AR    @03,@10                                             0070
         LA    @10,CNWRKSTR-1(CNLOOPV)                             0070
         EX    @03,@SM00148                                        0070
*           /*********************************************************/
*           /*                                                       */
*           /* ESTABLISH NUMBER OF COMMAS NEEDED BEFORE DECIMAL POINT*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0071
*           IF CNSIGNF<=3 THEN                                     0071
         CH    CNSIGNF,@CH00098                                    0071
         BH    @RF00071                                            0071
*             CNSIGNFC=0;           /* NO COMMAS REQUIRED            */
         SR    CNSIGNFC,CNSIGNFC                                   0072
*           ELSE                                                   0073
*             DO;                                                  0073
         B     @RC00071                                            0073
@RF00071 DS    0H                                                  0074
*               CNSIGNFC=CNSIGNF/3;                                0074
*                                                                  0074
         LA    @10,3                                               0074
         LR    @00,CNSIGNF                                         0074
         SRDA  @00,32                                              0074
         DR    @00,@10                                             0074
         LR    CNSIGNFC,@01                                        0074
*               /*****************************************************/
*               /*                                                   */
*               /* ONE LESS COMMA IS REQUIRED FOR AN EVEN MULTIPLE OF*/
*               /* THREE                                             */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0075
*               IF CNSIGNF//3=0 THEN                               0075
         LR    @00,CNSIGNF                                         0075
         SRDA  @00,32                                              0075
         DR    @00,@10                                             0075
         LTR   @00,@00                                             0075
         BNZ   @RF00075                                            0075
*                 CNSIGNFC=CNSIGNFC-1;                             0076
         BCTR  CNSIGNFC,0                                          0076
*             END;                                                 0077
@RF00075 DS    0H                                                  0078
*           CNSIGZER=0;             /* NO TRAILING SIGNIFICANT ZEROS */
@RC00071 SR    @10,@10                                             0078
         LR    CNSIGZER,@10                                        0078
*           CNLEADZ=0;              /* NO LEADING ZERO               */
         LR    CNLEADZ,@10                                         0079
*           CNFRAZER=0;             /* NO LEADING FRACTIONAL ZEROS   */
         LR    CNFRAZER,@10                                        0080
*           CNFRAC=-CNINSCAL;       /* NUMBER OF FRACTIONAL DIGITS   */
         L     @10,@PC00001+4                                      0081
         L     @10,CNINSCAL(,@10)                                  0081
         LR    @07,@10                                             0081
         LCR   @07,@07                                             0081
         STH   @07,CNFRAC                                          0081
*           CNFRADIG=CNWRKSTR(LENGTH(CNWRKSTR)+CNINSCAL+1:LENGTH(  0082
*               CNWRKSTR));         /* REMEMBER FRACTIONAL DIGITS    */
         MVI   CNFRADIG+1,C' '                                     0082
         MVC   CNFRADIG+2(8),CNFRADIG+1                            0082
         SR    @07,@07                                             0082
         BCTR  @07,0                                               0082
         SR    @07,@10                                             0082
         LA    @02,CNWRKSTR+16(@10)                                0082
         EX    @07,@SM00150                                        0082
*         END;                                                     0083
*     END;                                                         0084
@RC00057 DS    0H                                                  0085
*CNLAB1:                                                           0085
*                                                                  0085
*/* AT THIS POINT AN IDEAL STRING HAS BEEN CREATED WITH ALL NEEDED 0085
*   DESCRIPTION. TRY TO FIT THIS STRING INTO THE OUTPUT FIELD        */
*                                                                  0085
*   IF CNIFLOAT^='1'B THEN          /* FLOATING OF RESULT IN THE   0085
*                                      OUTPUT STRING HAS NOT BEEN  0085
*                                      INDICATED                     */
@RC00024 DS    0H                                                  0085
CNLAB1   TM    CNIFLOAT,B'10000000'                                0085
         BO    @RF00085                                            0085
*     DO;                                                          0086
*                                                                  0086
*       /*************************************************************/
*       /*                                                           */
*       /* CALCULATE IDEAL NUMBER OF REQUIRED CHARACTERS INCLUDING   */
*       /* POSSIBLE SIGN, DECIMAL POINT, AND COMMAS                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0087
*       CNPLACES=CNMINUS;           /* MINUS SIGN (1 OR 0)           */
         LH    CNPLACES,CNMINUS                                    0087
*       CNPLACES=CNPLACES+CNSIGNF;  /* ADD NUMBER OF SIGNIFICANT   0088
*                                      CONVERTED DIGITS              */
         AR    CNPLACES,CNSIGNF                                    0088
*       IF CNSSIGCM='1'B THEN       /* IF COMMAS, ADD NUMBER REQUIRED*/
         TM    CNSSIGCM,B'10000000'                                0089
         BNO   @RF00089                                            0089
*         CNPLACES=CNPLACES+CNSIGNFC;                              0090
         AR    CNPLACES,CNSIGNFC                                   0090
*       CNPLACES=CNPLACES+CNSIGZER+ /* SIGNIFICANT ZEROS TRAILING  0091
*                                      CONVERTED SIGNIFICANT DIGITS  */
*           CNLEADZ;                /* LEADING ZERO                  */
@RF00089 LR    @10,CNPLACES                                        0091
         AR    @10,CNSIGZER                                        0091
         AR    @10,CNLEADZ                                         0091
         LR    CNPLACES,@10                                        0091
*       IF CNOUFRAC>0 THEN          /* IF FRACTIONAL OUTPUT IS     0092
*                                      DESIRED                       */
         L     @10,@PC00001+16                                     0092
         L     @10,CNOUFRAC(,@10)                                  0092
         LTR   @10,@10                                             0092
         BNP   @RF00092                                            0092
*         CNPLACES=CNPLACES+CNDECLEN+/* DECIMAL POINT LENGTH         */
*             CNOUFRAC;             /* NUMBER OF PLACES TO THE RIGHT
*                                      OF THE DECIMAL POINT IN THE 0093
*                                      OUTPUT FIELD                  */
         LA    @07,1                                               0093
         AR    @07,CNPLACES                                        0093
         AR    @07,@10                                             0093
         LR    CNPLACES,@07                                        0093
*       IF CNPLACES<=CNOUTLEN THEN  /* IF STRING WILL FIT INTO OUTPUT*/
@RF00092 L     @10,@PC00001+12                                     0094
         L     @10,CNOUTLEN(,@10)                                  0094
         CR    CNPLACES,@10                                        0094
         BH    @RF00094                                            0094
*         DO;                                                      0095
*                                                                  0095
*           /*********************************************************/
*           /*                                                       */
*           /* CONCATENATE STRING PARTS INTO OUTPUT STRING           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0096
*           CALL MFCHINSR(CNOUTLEN-CNPLACES+1);                    0096
*                                                                  0096
         SR    @10,CNPLACES                                        0096
         AH    @10,@CH00065                                        0096
         ST    @10,@AFTEMPS                                        0096
         LA    @10,@AFTEMPS                                        0096
         ST    @10,@AL00001                                        0096
         LA    @01,@AL00001                                        0096
         BAL   @14,MFCHINSR                                        0096
*           /*********************************************************/
*           /*                                                       */
*           /* MACDATE Y-2 73018                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0097
*           RESPECIFY                                              0097
*            (GPR15F)RESTRICTED;                                   0097
*           IF GPR15F=0 THEN        /* CONVERSION COMPLETE           */
         LTR   GPR15F,GPR15F                                       0098
         BNZ   @RF00098                                            0098
*             RETURN CODE(0);       /* RETURN TO REPORT GENERATOR    */
*                                                                  0099
         L     @13,4(,@13)                                         0099
         L     @00,@SIZDATD                                        0099
         LR    @01,@11                                             0099
         FREEMAIN R,LV=(0),A=(1)
         SR    @15,@15                                             0099
         L     @14,12(,@13)                                        0099
         LM    @00,@12,20(@13)                                     0099
         BR    @14                                                 0099
*           /*********************************************************/
*           /*                                                       */
*           /* MACDATE Y-2 73018                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0100
*           RESPECIFY                                              0100
*            (GPR15F)UNRESTRICTED;                                 0100
@RF00098 DS    0H                                                  0101
*         END;                                                     0101
*                                                                  0101
*       /*************************************************************/
*       /*                                                           */
*       /* REMOVE LEADING ZERO IF FRACTIONAL PART IS PRESENT AND TRY */
*       /* AGAIN                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0102
*       IF CNOUFRAC=0 THEN          /* DONT REMOVE LEADING ZERO      */
@RF00094 L     @10,@PC00001+16                                     0102
         ICM   @07,15,CNOUFRAC(@10)                                0102
         BZ    @RT00102                                            0102
*         GO TO CNLAB2;             /* FLOAT STRING IN OUTPUT FIELD  */
*       CNPLACES=CNPLACES-CNLEADZ;  /* TRY REMOVING LEADING ZERO     */
         SR    CNPLACES,CNLEADZ                                    0104
*       IF CNPLACES<=CNOUTLEN THEN  /* IF STRING WILL FIT NOW        */
         L     @10,@PC00001+12                                     0105
         L     @10,CNOUTLEN(,@10)                                  0105
         CR    CNPLACES,@10                                        0105
         BH    @RF00105                                            0105
*         DO;                                                      0106
*           CNSFRAZR='1'B;          /* SUPPRESS LEADING ZERO         */
*                                                                  0107
         OI    CNSFRAZR,B'10000000'                                0107
*           /*********************************************************/
*           /*                                                       */
*           /* CONCATENATE STRING PARTS INTO OUTPUT FIELD            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0108
*           CALL MFCHINSR(CNOUTLEN-CNPLACES+1);                    0108
*                                                                  0108
         SR    @10,CNPLACES                                        0108
         AH    @10,@CH00065                                        0108
         ST    @10,@AFTEMPS                                        0108
         LA    @10,@AFTEMPS                                        0108
         ST    @10,@AL00001                                        0108
         LA    @01,@AL00001                                        0108
         BAL   @14,MFCHINSR                                        0108
*           /*********************************************************/
*           /*                                                       */
*           /* MACDATE Y-2 73018                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0109
*           RESPECIFY                                              0109
*            (GPR15F)RESTRICTED;                                   0109
*           IF GPR15F=0 THEN        /* CONVERSION COMPLETE           */
         LTR   GPR15F,GPR15F                                       0110
         BNZ   @RF00110                                            0110
*             RETURN CODE(0);       /* RETURN TO REPORT GENERATOR    */
*                                                                  0111
         L     @13,4(,@13)                                         0111
         L     @00,@SIZDATD                                        0111
         LR    @01,@11                                             0111
         FREEMAIN R,LV=(0),A=(1)
         SR    @15,@15                                             0111
         L     @14,12(,@13)                                        0111
         LM    @00,@12,20(@13)                                     0111
         BR    @14                                                 0111
*           /*********************************************************/
*           /*                                                       */
*           /* MACDATE Y-2 73018                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0112
*           RESPECIFY                                              0112
*            (GPR00P,                                              0112
*             GPR01P,                                              0112
*             GPR14P,                                              0112
*             GPR15P)UNRESTRICTED;                                 0112
@RF00110 DS    0H                                                  0113
*         END;                                                     0113
*                                                                  0113
*       /*************************************************************/
*       /*                                                           */
*       /* CONCATENATED STRING WILL NOT FIT IN OUTPUT STRING WITH    */
*       /* CNOUFRAC PLACES TO THE RIGHT OF THE DECIMAL. TRY FLOATING */
*       /* THE CONCATENATED STRING IN THE OUTPUT FIELD FOR MAXIMUM   */
*       /* PERCISION.                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0114
*CNLAB2:                                                           0114
*       CNIFLOAT='1'B;              /* INDICATE FLOATING             */
@RF00105 DS    0H                                                  0114
CNLAB2   OI    CNIFLOAT,B'10000000'                                0114
*       CNRETCDE=4;                 /* SET WARNING RETURN CODE       */
         LA    CNRETCDE,4                                          0115
*     END;                                                         0116
*                                                                  0116
*   /*****************************************************************/
*   /*                                                               */
*   /* STRING WILL BE FLOATED IN THE OUTPUT FIELD FOR MAXIMUM        */
*   /* PRECISION TRY TO ALLOW A ZERO OR ALL FRACTIONAL NUMBER TO BE  */
*   /* REPRESENTED IN THE OUTPUT FIELD AS .XXXX OR -.XXXX            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0117
*   IF CNLEADZ^=0&CNOUTLEN>=CNMINUS+CNDECLEN+1 THEN                0117
@RF00085 LTR   CNLEADZ,CNLEADZ                                     0117
         BZ    @RF00117                                            0117
         L     @14,@PC00001+12                                     0117
         LA    @10,2                                               0117
         AH    @10,CNMINUS                                         0117
         C     @10,CNOUTLEN(,@14)                                  0117
         BH    @RF00117                                            0117
*     CNSFRAZR='1'B;                /* SUPPRESS LEADING ZERO IF IT IS
*                                      SPECIFIED AND AT LEAST THE  0118
*                                      MINUS SIGN, DECIMAL POINT AND
*                                      ONE DIGIT WILL FIT.           */
*                                                                  0118
         OI    CNSFRAZR,B'10000000'                                0118
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE IDEAL NUMBER OF REQUIRED CHARACTERS IN SIGNIFICANT  */
*   /* PART OF THE STRING INCLUDING MINUS SIGN, COMMAS, AND LEADING  */
*   /* ZERO                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0119
*   CNPLACES=CNMINUS;                                              0119
@RF00117 LH    CNPLACES,CNMINUS                                    0119
*   IF CNSSIGCM='1'B THEN           /* IF COMMAS, ADD NUMBER REQUIRED*/
         TM    CNSSIGCM,B'10000000'                                0120
         BNO   @RF00120                                            0120
*     CNPLACES=CNPLACES+CNSIGNFC;                                  0121
         AR    CNPLACES,CNSIGNFC                                   0121
*   CNPLACES=CNPLACES+CNSIGNF;      /* ADD SIGNIFICANT CONVERTED   0122
*                                      DIGITS                        */
@RF00120 AR    CNPLACES,CNSIGNF                                    0122
*   CNPLACES=CNPLACES+CNSIGZER;     /* SIGNIFICANT ZEROS TRAILING  0123
*                                      CONVERTED SIGNIFICANT DIGITS  */
         AR    CNPLACES,CNSIGZER                                   0123
*   IF CNSFRAZR='0'B THEN           /* ADD LEADING ZERO IF SPECIFIED
*                                      AND NOT SUPPRESSED.           */
         TM    CNSFRAZR,B'10000000'                                0124
         BNZ   @RF00124                                            0124
*     CNPLACES=CNPLACES+CNLEADZ;                                   0125
         AR    CNPLACES,CNLEADZ                                    0125
*   IF CNPLACES<=CNOUTLEN THEN      /* IF STRING WILL FIT INTO OUTPUT*/
@RF00124 L     @14,@PC00001+12                                     0126
         C     CNPLACES,CNOUTLEN(,@14)                             0126
         BH    @RF00126                                            0126
*     DO;                                                          0127
*       CALL MFCHINSR(1);           /* CONCATENATE STRING PARTS INTO
*                                      OUTPUT STRING                 */
*                                                                  0128
         LA    @01,@AL00128                                        0128
         BAL   @14,MFCHINSR                                        0128
*       /*************************************************************/
*       /*                                                           */
*       /* MACDATE Y-2 73018                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0129
*       RESPECIFY                                                  0129
*        (GPR15F)RESTRICTED;                                       0129
*       IF GPR15F=0 THEN            /* CONVERSION COMPLETE           */
         LTR   GPR15F,GPR15F                                       0130
         BNZ   @RF00130                                            0130
*         RETURN CODE(CNRETCDE);    /* RETURN TO REPORT GENERATOR    */
*                                                                  0131
         L     @13,4(,@13)                                         0131
         L     @00,@SIZDATD                                        0131
         LR    @01,@11                                             0131
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@05                                             0131
         L     @14,12(,@13)                                        0131
         LM    @00,@12,20(@13)                                     0131
         BR    @14                                                 0131
*       /*************************************************************/
*       /*                                                           */
*       /* MACDATE Y-2 73018                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0132
*       RESPECIFY                                                  0132
*        (GPR00P,                                                  0132
*         GPR01P,                                                  0132
*         GPR14P,                                                  0132
*         GPR15P)UNRESTRICTED;                                     0132
@RF00130 DS    0H                                                  0133
*     END;                                                         0133
*   IF CNSSIGCM='1'B THEN           /* IF COMMAS WERE SPECIFIED THEN
*                                      ATTEMPT TO REMOVE COMMAS TO 0134
*                                      SEE IF STRING WILL FIT WITHOUT
*                                      THEM                          */
@RF00126 TM    CNSSIGCM,B'10000000'                                0134
         BNO   @RF00134                                            0134
*     DO;                                                          0135
*       CNPLACES=CNPLACES-CNSIGNFC;                                0136
         SR    CNPLACES,CNSIGNFC                                   0136
*       IF CNPLACES<=CNOUTLEN THEN  /* IF STRING WILL FIT NOW        */
         L     @14,@PC00001+12                                     0137
         C     CNPLACES,CNOUTLEN(,@14)                             0137
         BH    @RF00137                                            0137
*         DO;                                                      0138
*           CNSSIGCM='0'B;          /* INDICATE NO COMMAS            */
         NI    CNSSIGCM,B'01111111'                                0139
*           CALL MFCHINSR(1);       /* CONCATENATE PARTS INTO OUTPUT
*                                      FIELD                         */
*                                                                  0140
         LA    @01,@AL00140                                        0140
         BAL   @14,MFCHINSR                                        0140
*           /*********************************************************/
*           /*                                                       */
*           /* MACDATE Y-2 73018                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0141
*           RESPECIFY                                              0141
*            (GPR15F)RESTRICTED;                                   0141
*           IF GPR15F=0 THEN        /* CONVERSION COMPLETE           */
         LTR   GPR15F,GPR15F                                       0142
         BNZ   @RF00142                                            0142
*             RETURN CODE(4);       /* RETURN TO REPORT GENERATOR    */
*                                                                  0143
         L     @13,4(,@13)                                         0143
         L     @00,@SIZDATD                                        0143
         LR    @01,@11                                             0143
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0143
         L     @14,12(,@13)                                        0143
         LM    @00,@12,20(@13)                                     0143
         BR    @14                                                 0143
*           /*********************************************************/
*           /*                                                       */
*           /* MACDATE Y-2 73018                                     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0144
*           RESPECIFY                                              0144
*            (GPR00P,                                              0144
*             GPR01P,                                              0144
*             GPR14P,                                              0144
*             GPR15P)UNRESTRICTED;                                 0144
@RF00142 DS    0H                                                  0145
*         END;                                                     0145
*     END;                                                         0146
*                                                                  0146
@RF00137 DS    0H                                                  0147
*   /*****************************************************************/
*   /*                                                               */
*   /* NUMBER WILL NOT FIT WITHOUT LOOSING SIGNIFICANCE. FILL OUTPUT */
*   /* FIELD WITH ASTERISKS AND RETURN.                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*   DO CNLOOPV=1 TO CNOUTLEN;       /* LOOP THROUGH OUTPUT FIELD     */
@RF00134 LA    CNLOOPV,1                                           0147
         B     @DE00147                                            0147
@DL00147 DS    0H                                                  0148
*     CNOUTSTR(CNLOOPV)=CNFLCHAR;   /* SET IN ASTERISK               */
         L     @14,@PC00001+8                                      0148
         ALR   @14,CNLOOPV                                         0148
         AL    @14,@CF00129                                        0148
         MVI   CNOUTSTR(@14),C'*'                                  0148
*   END;                                                           0149
         AH    CNLOOPV,@CH00065                                    0149
@DE00147 L     @14,@PC00001+12                                     0149
         C     CNLOOPV,CNOUTLEN(,@14)                              0149
         BNH   @DL00147                                            0149
*   RETURN CODE(8);                 /* RETURN TO REPORT GENERATOR    */
         L     @13,4(,@13)                                         0150
         L     @00,@SIZDATD                                        0150
         LR    @01,@11                                             0150
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,8                                               0150
         L     @14,12(,@13)                                        0150
         LM    @00,@12,20(@13)                                     0150
         BR    @14                                                 0150
*                                                                  0151
*/*                                                                  */
*/*** START OF SPECIFICATIONS ****************************************
*                                                                    */
*/*                                                                  */
*/* SUBROUTINE-NAME = MFCHINSR                                       */
*/*                                                                  */
*/* DESCRIPTIVE-NAME = CONVERTED OUTPUT INSERTION SUBROUTINE         */
*/*                                                                  */
*/* FUNCTION = COMPLETES OUTPUT STRING WITH CONVERTED STRING FROM    */
*/*            PRESET DATA AND CONTROL VARIABLES.                    */
*/*                                                                  */
*/* ENTRY-POINT = MFCHINSR                                           */
*/*                                                                  */
*/*    PURPOSE = SEE FUNCTION                                        */
*/*                                                                  */
*/*    LINKAGE = R1 - PARAMETER LIST ADDRESS                         */
*/*                                                                  */
*/**** END OF SPECIFICATIONS *****************************************
*                                                                    */
*/*                                                                  */
*/* PROCEDURE TO INSERT CHARACTERS INTO OUTPUT FIELD BASED ON      0151
*   CONTROL VARIABLES                                                */
*                                                                  0151
*MFCHINSR:                                                         0151
*   PROCEDURE(CHSTART)              /* STARTING CHARACTER POSITION IN
*                                      OUTPUT FIELD                  */
*       ;                                                          0151
MFCHINSR STM   @14,@12,12(@13)                                     0151
         MVC   @PC00002(4),0(@01)                                  0151
*                                                                  0152
*/* BEGIN MISCELLANEOUS DECLARATION                                  */
*                                                                  0152
*   DECLARE                                                        0152
*     CHSTART                       /* PARAMETER - STARTING CHARACTER
*                                      POSITION IN OUTPUT FIELD      */
*         FIXED BINARY(31),                                        0152
*     CHLOOPV                       /* LOOP VARIABLE                 */
*         FIXED BINARY(31),                                        0152
*     CHCOMCNT                      /* COMMA INSERTION CONTROL VAR.  */
*         FIXED BINARY(15),                                        0152
*     COMMA                         /* COMMA CONSTANT                */
*         CHARACTER(1)STATIC LOCAL INITIAL(','),                   0152
*     CHINSSRT                      /* INSERTION POINT FOR ROUNDING
*                                      OPERATION                     */
*         FIXED BINARY(15),                                        0152
*     CHINSERT                      /* INSERTION CHARACTERS FOR ROUND*/
*         CHARACTER(2),                                            0152
*     CHINSLEN                      /* INSERTION CHARACTER LENGTH    */
*         FIXED BINARY(15),                                        0152
*     CHDECCNT                      /* COUNT OF DIGITS PAST DEC PT,
*                                      (INCLUDING DECIMAL POINT)     */
*         FIXED BINARY(15),                                        0152
*     CHRNDUP                       /* INDICATES ROUND OPERATION     */
*         BIT(1),                                                  0152
*     CHSCAN                        /* STRING SCAN VARIABLE          */
*         FIXED BINARY(31);                                        0152
*                                                                  0153
*/* BEGIN MAINLINE PROCESSING                                        */
*                                                                  0153
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0153
*   CHRNDUP='0'B;                   /* NO ROUND REQUIRED YET         */
         NI    CHRNDUP,B'01111111'                                 0153
*   CHDECCNT=0;                     /* NO DIGITS PAST DEC PT.        */
*                                                                  0154
         SR    CHDECCNT,CHDECCNT                                   0154
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT BLANKS BEFORE START POSITION                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0155
*   IF CHSTART>1 THEN               /* IF THERE IS ROOM FOR BLANKS   */
         LA    @14,1                                               0155
         L     @10,@PC00002                                        0155
         C     @14,CHSTART(,@10)                                   0155
         BNL   @RF00155                                            0155
*     DO CHLOOPV=1 TO CHSTART-1;                                   0156
         LR    CHLOOPV,@14                                         0156
         B     @DE00156                                            0156
@DL00156 DS    0H                                                  0157
*       CNOUTSTR(CHLOOPV)=' ';      /* INSERT BLANK                  */
         L     @14,@PC00001+8                                      0157
         ALR   @14,CHLOOPV                                         0157
         AL    @14,@CF00129                                        0157
         MVI   CNOUTSTR(@14),C' '                                  0157
*     END;                                                         0158
         AH    CHLOOPV,@CH00065                                    0158
@DE00156 L     @14,@PC00002                                        0158
         L     @14,CHSTART(,@14)                                   0158
         BCTR  @14,0                                               0158
         CR    CHLOOPV,@14                                         0158
         BNH   @DL00156                                            0158
*   CHSCAN=CHSTART;                 /* SET SCAN VARIABLE AT START  0159
*                                      POSITION                      */
@RF00155 L     @14,@PC00002                                        0159
         L     CHSCAN,CHSTART(,@14)                                0159
*   IF CNMINUS=1 THEN               /* IF MINUS SIGN NEEDED          */
         LA    @14,1                                               0160
         CH    @14,CNMINUS                                         0160
         BNE   @RF00160                                            0160
*     DO;                                                          0161
*       CNOUTSTR(CHSCAN)='-';       /* INSERT MINUS SIGN             */
         L     @10,@PC00001+8                                      0162
         ALR   @10,CHSCAN                                          0162
         AL    @10,@CF00129                                        0162
         MVI   CNOUTSTR(@10),C'-'                                  0162
*       CHSCAN=CHSCAN+1;            /* POINT TO NEXT CHARACTER       */
         AR    CHSCAN,@14                                          0163
*     END;                                                         0164
*   IF CNSIGNF=0 THEN               /* NO SIGNIFICANT CONVERTED    0165
*                                      DIGITS                        */
@RF00160 LTR   CNSIGNF,CNSIGNF                                     0165
         BZ    @RT00165                                            0165
*     GO TO CHLAB1;                 /* INSERT SINGLE LEADING ZERO    */
*                                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT CONVERTED DIGITS AND TRAILING SIGNIFICANT ZEROS (WITH  */
*   /* COMMAS IF REQUESTED)                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0167
*   IF CNSSIGCM='1'B THEN           /* IF COMMAS REQUESTED           */
         TM    CNSSIGCM,B'10000000'                                0167
         BNO   @RF00167                                            0167
*     DO;                                                          0168
*                                                                  0168
*       /*************************************************************/
*       /*                                                           */
*       /* SET COMMA INSERTION CONTROL VARIABLE                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0169
*       CHCOMCNT=(3-(CNSIGNF+CNSIGZER)//3)//3;                     0169
*                                                                  0169
         LA    @14,3                                               0169
         LR    @00,CNSIGNF                                         0169
         AR    @00,CNSIGZER                                        0169
         SRDA  @00,32                                              0169
         DR    @00,@14                                             0169
         LCR   @00,@00                                             0169
         AR    @00,@14                                             0169
         SRDA  @00,32                                              0169
         DR    @00,@14                                             0169
         LR    CHCOMCNT,@00                                        0169
*       /*************************************************************/
*       /*                                                           */
*       /* INSERT SIGNIFICANT CONVERTED DIGITS                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0170
*       DO CHLOOPV=1 TO CNSIGNF;                                   0170
         LA    CHLOOPV,1                                           0170
         B     @DE00170                                            0170
@DL00170 DS    0H                                                  0171
*         IF CHCOMCNT=3 THEN        /* TIME FOR COMMA                */
         CH    CHCOMCNT,@CH00098                                   0171
         BNE   @RF00171                                            0171
*           DO;                                                    0172
*             CHCOMCNT=0;           /* RESET CONTROL VARIABLE        */
         SR    CHCOMCNT,CHCOMCNT                                   0173
*             CHLOOPV=CHLOOPV-1;    /* RESET LOOP VARIABLE           */
         BCTR  CHLOOPV,0                                           0174
*             CNOUTSTR(CHSCAN)=COMMA;                              0175
         L     @14,@PC00001+8                                      0175
         ALR   @14,CHSCAN                                          0175
         AL    @14,@CF00129                                        0175
         MVC   CNOUTSTR(1,@14),COMMA                               0175
*           END;                                                   0176
*         ELSE                      /* INSERT DIGIT                  */
*           DO;                                                    0177
*                                                                  0177
         B     @RC00171                                            0177
@RF00171 DS    0H                                                  0178
*             /*******************************************************/
*             /*                                                     */
*             /* INCREMENT COMMA CONTROL VARIABLE                    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0178
*             CHCOMCNT=CHCOMCNT+1;                                 0178
         AH    CHCOMCNT,@CH00065                                   0178
*             CNOUTSTR(CHSCAN)=CNSIGDIG(CHLOOPV);                  0179
         L     @14,@PC00001+8                                      0179
         ALR   @14,CHSCAN                                          0179
         AL    @14,@CF00129                                        0179
         LA    @10,CNSIGDIG-1(CHLOOPV)                             0179
         MVC   CNOUTSTR(1,@14),0(@10)                              0179
*           END;                                                   0180
*         CHSCAN=CHSCAN+1;          /* INCREMENT SCAN                */
@RC00171 AH    CHSCAN,@CH00065                                     0181
*       END;                                                       0182
*                                                                  0182
         AH    CHLOOPV,@CH00065                                    0182
@DE00170 CR    CHLOOPV,CNSIGNF                                     0182
         BNH   @DL00170                                            0182
*       /*************************************************************/
*       /*                                                           */
*       /* INSERT TRAILING ZEROS                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0183
*       DO CHLOOPV=1 TO CNSIGZER;                                  0183
         LA    CHLOOPV,1                                           0183
         B     @DE00183                                            0183
@DL00183 DS    0H                                                  0184
*         IF CHCOMCNT=3 THEN        /* TIME FOR COMMA                */
         CH    CHCOMCNT,@CH00098                                   0184
         BNE   @RF00184                                            0184
*           DO;                                                    0185
*             CHCOMCNT=0;           /* RESET CONTROL VARIABLE        */
         SR    CHCOMCNT,CHCOMCNT                                   0186
*             CHLOOPV=CHLOOPV-1;    /* RESET LOOP VARIABLE           */
         BCTR  CHLOOPV,0                                           0187
*             CNOUTSTR(CHSCAN)=COMMA;                              0188
         L     @14,@PC00001+8                                      0188
         ALR   @14,CHSCAN                                          0188
         AL    @14,@CF00129                                        0188
         MVC   CNOUTSTR(1,@14),COMMA                               0188
*           END;                                                   0189
*         ELSE                      /* INSERT TRAILING ZERO          */
*           DO;                                                    0190
*                                                                  0190
         B     @RC00184                                            0190
@RF00184 DS    0H                                                  0191
*             /*******************************************************/
*             /*                                                     */
*             /* INCREMENT COMMA CONTROL VARIABLE                    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0191
*             CHCOMCNT=CHCOMCNT+1;                                 0191
         AH    CHCOMCNT,@CH00065                                   0191
*             CNOUTSTR(CHSCAN)='0';                                0192
         L     @14,@PC00001+8                                      0192
         ALR   @14,CHSCAN                                          0192
         AL    @14,@CF00129                                        0192
         MVI   CNOUTSTR(@14),C'0'                                  0192
*           END;                                                   0193
*         CHSCAN=CHSCAN+1;          /* INCREMENT SCAN                */
@RC00184 AH    CHSCAN,@CH00065                                     0194
*       END;                                                       0195
         AH    CHLOOPV,@CH00065                                    0195
@DE00183 CR    CHLOOPV,CNSIGZER                                    0195
         BNH   @DL00183                                            0195
*     END;                                                         0196
*   ELSE                            /* NO COMMAS REQUIRED            */
*     DO;                                                          0197
*                                                                  0197
         B     @RC00167                                            0197
@RF00167 DS    0H                                                  0198
*       /*************************************************************/
*       /*                                                           */
*       /* INSERT SIGNIFICANT CONVERTED DIGITS                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0198
*       CNOUTSTR(CHSCAN:CHSCAN+CNSIGNF-1)=CNSIGDIG(1:CNSIGNF);     0198
         L     @14,@PC00001+8                                      0198
         ALR   @14,CHSCAN                                          0198
         AL    @14,@CF00129                                        0198
         LR    @10,CNSIGNF                                         0198
         BCTR  @10,0                                               0198
         EX    @10,@SM00152                                        0198
*       CHSCAN=CHSCAN+CNSIGNF;                                     0199
*                                                                  0199
         AR    CHSCAN,CNSIGNF                                      0199
*       /*************************************************************/
*       /*                                                           */
*       /* INSERT TRAILING ZEROS                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0200
*       DO CHLOOPV=1 TO CNSIGZER;                                  0200
         LA    CHLOOPV,1                                           0200
         B     @DE00200                                            0200
@DL00200 DS    0H                                                  0201
*         CNOUTSTR(CHSCAN)='0';                                    0201
         L     @14,@PC00001+8                                      0201
         ALR   @14,CHSCAN                                          0201
         AL    @14,@CF00129                                        0201
         MVI   CNOUTSTR(@14),C'0'                                  0201
*         CHSCAN=CHSCAN+1;                                         0202
         AH    CHSCAN,@CH00065                                     0202
*       END;                                                       0203
         AH    CHLOOPV,@CH00065                                    0203
@DE00200 CR    CHLOOPV,CNSIGZER                                    0203
         BNH   @DL00200                                            0203
*     END;                                                         0204
*                                                                  0204
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT SINGLE SIGNIFICANT LEADING ZERO IF REQUESTED AND NOT   */
*   /* SUPPRESSED                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0205
*CHLAB1:                                                           0205
*   IF CNSFRAZR='0'B&CNLEADZ>0 THEN                                0205
@RC00167 DS    0H                                                  0205
CHLAB1   TM    CNSFRAZR,B'10000000'                                0205
         BNZ   @RF00205                                            0205
         LTR   CNLEADZ,CNLEADZ                                     0205
         BNP   @RF00205                                            0205
*     DO;                                                          0206
*       CNOUTSTR(CHSCAN)='0';       /* INSERT SINGLE LEADING ZERO    */
         L     @14,@PC00001+8                                      0207
         ALR   @14,CHSCAN                                          0207
         AL    @14,@CF00129                                        0207
         MVI   CNOUTSTR(@14),C'0'                                  0207
*       CHSCAN=CHSCAN+1;            /* POINT SCAN TO NEXT CHARACTER  */
         AH    CHSCAN,@CH00065                                     0208
*     END;                                                         0209
*                                                                  0209
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT DECIMAL POINT IF IT WILL FIT                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0210
*   IF CHSCAN<=CNOUTLEN THEN        /* IF DECIMAL POINT WILL FIT     */
@RF00205 L     @14,@PC00001+12                                     0210
         C     CHSCAN,CNOUTLEN(,@14)                               0210
         BH    @RF00210                                            0210
*     DO;                                                          0211
*       CNOUTSTR(CHSCAN)='.';       /* INSERT DECIMAL POINT          */
         L     @14,@PC00001+8                                      0212
         ALR   @14,CHSCAN                                          0212
         AL    @14,@CF00129                                        0212
         MVI   CNOUTSTR(@14),C'.'                                  0212
*       CHDECCNT=CHDECCNT+1;        /* INCREMENT COUNT OF FRACTIONAL
*                                      DIGITS PLUS DECIMAL POINT     */
         LA    @14,1                                               0213
         AR    CHDECCNT,@14                                        0213
*       CHSCAN=CHSCAN+1;            /* POINT SCAN TO NEXT CHARACTER  */
         AR    CHSCAN,@14                                          0214
*     END;                                                         0215
*                                                                  0215
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT LEADING FRACTIONAL DIGITS IF THEY WILL FIT             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0216
*   DO CHLOOPV=1 TO CNFRAZER WHILE(CHSCAN<=CNOUTLEN);              0216
@RF00210 LA    CHLOOPV,1                                           0216
         B     @DE00216                                            0216
@DL00216 L     @14,@PC00001+12                                     0216
         C     CHSCAN,CNOUTLEN(,@14)                               0216
         BH    @DC00216                                            0216
*     CNOUTSTR(CHSCAN)='0';         /* INSRT LEADING FRACTIONAL DIGIT*/
         L     @14,@PC00001+8                                      0217
         ALR   @14,CHSCAN                                          0217
         AL    @14,@CF00129                                        0217
         MVI   CNOUTSTR(@14),C'0'                                  0217
*     CHDECCNT=CHDECCNT+1;          /* INCREMENT COUNT OF DIGITS PAST
*                                      DECIMAL POINT                 */
         LA    @14,1                                               0218
         AR    CHDECCNT,@14                                        0218
*     CHSCAN=CHSCAN+1;              /* POINT SCAN TO NEXT CHARACTER  */
         AR    CHSCAN,@14                                          0219
*   END;                                                           0220
         AH    CHLOOPV,@CH00065                                    0220
@DE00216 CR    CHLOOPV,CNFRAZER                                    0220
         BNH   @DL00216                                            0220
@DC00216 DS    0H                                                  0221
*   IF CHLOOPV^=CNFRAZER+1 THEN     /* NOT ALL LEADING FRACTIONAL  0221
*                                      ZEROS WOULD FIT. NO ROUNDING
*                                      IS REQUIRED.                  */
         LA    @14,1                                               0221
         LR    @10,CNFRAZER                                        0221
         AR    @10,@14                                             0221
         CR    CHLOOPV,@10                                         0221
         BNE   @RT00221                                            0221
*     GO TO CHLAB2;                 /* TEST FOR LAST CHARACTER A   0222
*                                      DECIMAL POINT                 */
*                                                                  0222
*   /*****************************************************************/
*   /*                                                               */
*   /* INSERT CONVERTED FRACTIONAL ZEROS IF THEY WILL FIT            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   DO CHLOOPV=1 TO CNFRAC WHILE(CHSCAN<=CNOUTLEN);                0223
         LR    CHLOOPV,@14                                         0223
         B     @DE00223                                            0223
@DL00223 L     @14,@PC00001+12                                     0223
         C     CHSCAN,CNOUTLEN(,@14)                               0223
         BH    @DC00223                                            0223
*     CNOUTSTR(CHSCAN)=CNFRADIG(CHLOOPV);/* INSERT CHARACTER         */
         L     @14,@PC00001+8                                      0224
         ALR   @14,CHSCAN                                          0224
         AL    @14,@CF00129                                        0224
         LA    @10,CNFRADIG-1(CHLOOPV)                             0224
         MVC   CNOUTSTR(1,@14),0(@10)                              0224
*     CHDECCNT=CHDECCNT+1;          /* INCREMENT COUNT OF DIGITS PAST
*                                      DECIMAL POINT                 */
         LA    @14,1                                               0225
         AR    CHDECCNT,@14                                        0225
*     CHSCAN=CHSCAN+1;              /* POINT SCAN TO NEXT CHARACTER  */
         AR    CHSCAN,@14                                          0226
*   END;                                                           0227
         AH    CHLOOPV,@CH00065                                    0227
@DE00223 CH    CHLOOPV,CNFRAC                                      0227
         BNH   @DL00223                                            0227
@DC00223 DS    0H                                                  0228
*   IF CHLOOPV^=CNFRAC+1 THEN       /* NOT ALL FRACTIONAL CONVERTED
*                                      DIGITS INSERTED. POSSIBILITY
*                                      OF ROUND UP                   */
         LA    @14,1                                               0228
         AH    @14,CNFRAC                                          0228
         CR    CHLOOPV,@14                                         0228
         BE    @RF00228                                            0228
*     DO;                                                          0229
*                                                                  0229
*       /*************************************************************/
*       /*                                                           */
*       /* IF NEXT CHARACTER WHICH WAS TO BE INSERTED IS GREATER THAN*/
*       /* 5                                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0230
*       IF CNFRADIG(CHLOOPV)>='5' THEN                             0230
         LA    @14,CNFRADIG-1(CHLOOPV)                             0230
         CLI   0(@14),C'5'                                         0230
         BL    @RF00230                                            0230
*         CHRNDUP='1'B;             /* SET ROUND UP FLAG             */
         OI    CHRNDUP,B'10000000'                                 0231
*     END;                                                         0232
*                                                                  0232
@RF00230 DS    0H                                                  0233
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL WITH ZEROS IF NECESSARY                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0233
*   DO WHILE(CHSCAN<=CNOUTLEN);     /* LOOP THROUGH TO END OF STRING */
@RF00228 B     @DE00233                                            0233
@DL00233 DS    0H                                                  0234
*     CNOUTSTR(CHSCAN)='0';         /* INSERT FILL ZERO              */
         L     @14,@PC00001+8                                      0234
         ALR   @14,CHSCAN                                          0234
         AL    @14,@CF00129                                        0234
         MVI   CNOUTSTR(@14),C'0'                                  0234
*     CHDECCNT=CHDECCNT+1;          /* INCREMENT COUNT OF DIGITS PAST
*                                      DECIMAL POINT                 */
         LA    @14,1                                               0235
         AR    CHDECCNT,@14                                        0235
*     CHSCAN=CHSCAN+1;              /* POINT TO NEXT CHARACTER       */
         AR    CHSCAN,@14                                          0236
*   END;                                                           0237
*                                                                  0237
@DE00233 L     @14,@PC00001+12                                     0237
         C     CHSCAN,CNOUTLEN(,@14)                               0237
         BNH   @DL00233                                            0237
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LAST CHARACTER IS A DECIMAL POINT, SHIFT RIGHT BY ONE      */
*   /* CHARACTER                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0238
*CHLAB2:                                                           0238
*   IF CNOUTSTR(CNOUTLEN)='.' THEN                                 0238
CHLAB2   L     @14,@PC00001+12                                     0238
         L     @14,CNOUTLEN(,@14)                                  0238
         L     @10,@PC00001+8                                      0238
         ALR   @14,@10                                             0238
         AL    @14,@CF00129                                        0238
         CLI   CNOUTSTR(@14),C'.'                                  0238
         BNE   @RF00238                                            0238
*     DO;                                                          0239
*                                                                  0239
*       /*************************************************************/
*       /*                                                           */
*       /* SHIFT RIGHT ONE CHARACTER                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0240
*       CNOUTSTR(2:CNOUTLEN)=CNOUTSTR(1:CNOUTLEN-1);               0240
         L     @14,@PC00001+12                                     0240
         L     @14,CNOUTLEN(,@14)                                  0240
         BCTR  @14,0                                               0240
         BCTR  @14,0                                               0240
         MVC   @TS00001(256),CNOUTSTR(@10)                         0240
         EX    @14,@SM00154                                        0240
*       CNOUTSTR(1)=' ';            /* FILL WITH LEADING BLANK       */
         MVI   CNOUTSTR(@10),C' '                                  0241
*     END;                                                         0242
*   IF CHRNDUP='1'B THEN            /* IF ROUND UP NECESSARY         */
@RF00238 TM    CHRNDUP,B'10000000'                                 0243
         BNO   @RF00243                                            0243
*     DO;                                                          0244
*                                                                  0244
*       /*************************************************************/
*       /*                                                           */
*       /* STEP BACK THROUGH STRING IN OUTPUT FIELD UNTIL ROUND CAN  */
*       /* BE PERFORMED. QUIT IF BLANK OR MINUS SIGN IS ENCOUNTERED. */
*       /* FIRST ZERO COMMA CONTROL VARIABLE.                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0245
*       CHCOMCNT=0;                                                0245
         SR    CHCOMCNT,CHCOMCNT                                   0245
*       DO CHLOOPV=CNOUTLEN TO 1 BY-1 WHILE CNOUTSTR(CHLOOPV)^=' '&
*             CNOUTSTR(CHLOOPV)^='-';                              0246
         L     @14,@PC00001+12                                     0246
         L     CHLOOPV,CNOUTLEN(,@14)                              0246
         B     @DE00246                                            0246
@DL00246 L     @14,@PC00001+8                                      0246
         LR    @10,@14                                             0246
         ALR   @10,CHLOOPV                                         0246
         AL    @10,@CF00129                                        0246
         CLI   CNOUTSTR(@10),C' '                                  0246
         BE    @DC00246                                            0246
         LR    @10,@14                                             0246
         ALR   @10,CHLOOPV                                         0246
         AL    @10,@CF00129                                        0246
         CLI   CNOUTSTR(@10),C'-'                                  0246
         BE    @DC00246                                            0246
*         IF CNOUTSTR(CHLOOPV)='.'×CNOUTSTR(CHLOOPV)=',' THEN      0247
         LR    @10,@14                                             0247
         ALR   @10,CHLOOPV                                         0247
         AL    @10,@CF00129                                        0247
         CLI   CNOUTSTR(@10),C'.'                                  0247
         BE    @RT00247                                            0247
         ALR   @14,CHLOOPV                                         0247
         AL    @14,@CF00129                                        0247
         CLI   CNOUTSTR(@14),C','                                  0247
         BNE   @RF00247                                            0247
@RT00247 DS    0H                                                  0248
*           DO;                     /* DECIMAL POINT OR COMMA      0248
*                                      ENCOUNTERED                   */
*             CHCOMCNT=0;           /* ZERO COMMA CONTROL VARIABLE   */
         SR    CHCOMCNT,CHCOMCNT                                   0249
*             GO TO CHLAB3;         /* COMPLETE ROUNDING OPERATION   */
         B     CHLAB3                                              0250
*           END;                                                   0251
*                                                                  0251
*         /***********************************************************/
*         /*                                                         */
*         /* IF CURRENT CHARACTER IS A NINE, SET IT TO ZERO AND      */
*         /* PROPAGATE CARRY TO NEXT CHARACTER                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0252
*         IF CNOUTSTR(CHLOOPV)='9' THEN                            0252
@RF00247 L     @14,@PC00001+8                                      0252
         LR    @10,@14                                             0252
         ALR   @10,CHLOOPV                                         0252
         AL    @10,@CF00129                                        0252
         CLI   CNOUTSTR(@10),C'9'                                  0252
         BNE   @RF00252                                            0252
*           DO;                                                    0253
*             CNOUTSTR(CHLOOPV)='0';                               0254
         ALR   @14,CHLOOPV                                         0254
         AL    @14,@CF00129                                        0254
         MVI   CNOUTSTR(@14),C'0'                                  0254
*             CHCOMCNT=CHCOMCNT+1;  /* INCREMENT COMMA CONTROL VBL.  */
         AH    CHCOMCNT,@CH00065                                   0255
*           END;                                                   0256
*         ELSE                      /* FINAL ROUNDING OPERATION CAN
*                                      BE PERFORMED                  */
*           DO;                                                    0257
*                                                                  0257
         B     @RC00252                                            0257
@RF00252 DS    0H                                                  0258
*             /*******************************************************/
*             /*                                                     */
*             /* SET F0-F8 TO F1-F9                                  */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0258
*             CNOUTSTR(CHLOOPV)=CNOUTSTR(CHLOOPV)+1;               0258
         L     @14,@PC00001+8                                      0258
         LA    @10,1                                               0258
         LR    @07,CHLOOPV                                         0258
         AL    @07,@CF00129                                        0258
         SR    @05,@05                                             0258
         IC    @05,CNOUTSTR(@07,@14)                               0258
         AR    @10,@05                                             0258
         AL    @14,@CF00129                                        0258
         STC   @10,CNOUTSTR(CHLOOPV,@14)                           0258
*             GO TO CHLAB4;         /* REMOVE MINUS FROM ALL ZEROS   */
         B     CHLAB4                                              0259
*           END;                                                   0260
*CHLAB3:                            /* ROUNDING LOOP COMPLETED       */
*       END;                                                       0261
*                                                                  0261
@RC00252 DS    0H                                                  0261
CHLAB3   BCTR  CHLOOPV,0                                           0261
@DE00246 LTR   CHLOOPV,CHLOOPV                                     0261
         BP    @DL00246                                            0261
@DC00246 DS    0H                                                  0262
*       /*************************************************************/
*       /*                                                           */
*       /* LOOP ENDED AND THE CARRY OPERATION COULD NOT BE COMPLETED */
*       /* BECAUSE ALL DIGITS WERE NINES. A '1' OR POSSIBLE '1,' MUST*/
*       /* BE INSERTED TO COMPLETE THE ROUNDING OPERATION. IF THERE  */
*       /* IS ROOM, INSERT AND SHIFT AS NECESSARY. OTHERWISE, RETURN */
*       /* CODE 4 TO THE MAINLINE PROCEDURE. IF FLOATING IS IN       */
*       /* CONTROL, THE DIGITS TO THE RIGHT OF THE DECIMAL POINT     */
*       /* (CHDECCNT) IS TH AMOUNT OF SPACE AVAILABLE FOR THE INSERT.*/
*       /* IF FLOATING IS NOT BEING PERFORMED, THEN THE NUMBER OF    */
*       /* BLANKS TO THE LEFT OF THE (POSSIBLE) MINUS SIGN IS THE    */
*       /* SPACE AVAILABLE FOR THE INSERT. FIRST DETERMINE INSERTION */
*       /* CHARACTERS AND LENGTH.                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0262
*       IF CHCOMCNT=3&CNSSIGCM='1'B THEN                           0262
         CH    CHCOMCNT,@CH00098                                   0262
         BNE   @RF00262                                            0262
         TM    CNSSIGCM,B'10000000'                                0262
         BNO   @RF00262                                            0262
*         DO;                       /* TIME FOR A COMMA AND THEY WERE
*                                      REQUESTED                     */
*           CHINSERT='1,';                                         0264
         MVC   CHINSERT(2),@CC00134                                0264
*           CHINSLEN=2;                                            0265
         LA    CHINSLEN,2                                          0265
*         END;                                                     0266
*       ELSE                        /* NO COMMAS NEEDED              */
*         DO;                                                      0267
         B     @RC00262                                            0267
@RF00262 DS    0H                                                  0268
*           CHINSERT='1';                                          0268
         MVI   CHINSERT+1,C' '                                     0268
         MVI   CHINSERT,C'1'                                       0268
*           CHINSLEN=1;                                            0269
         LA    CHINSLEN,1                                          0269
*         END;                                                     0270
*                                                                  0270
*       /*************************************************************/
*       /*                                                           */
*       /* NOW TRY TO INSERT STRING                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0271
*       IF CNIFLOAT='1'B THEN       /* FLOATING                      */
@RC00262 TM    CNIFLOAT,B'10000000'                                0271
         BNO   @RF00271                                            0271
*         DO;                                                      0272
*                                                                  0272
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE INSERTION POINT                             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0273
*           IF CNOUTSTR(1)='-' THEN                                0273
         L     @14,@PC00001+8                                      0273
         CLI   CNOUTSTR(@14),C'-'                                  0273
         BNE   @RF00273                                            0273
*             CHINSSRT=2;           /* INSERT BEHIND MINUS SIGN      */
         LA    CHINSSRT,2                                          0274
*           ELSE                                                   0275
*             CHINSSRT=1;           /* INSERT AT BEGINNING           */
*                                                                  0275
         B     @RC00273                                            0275
@RF00273 LA    CHINSSRT,1                                          0275
*           /*********************************************************/
*           /*                                                       */
*           /* INSERT STRING IF POSSIBLE                             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0276
*           IF CHDECCNT>=CHINSLEN THEN                             0276
@RC00273 CR    CHDECCNT,CHINSLEN                                   0276
         BL    @RF00276                                            0276
*             DO;                   /* HAVE AVAILABLE SPACE          */
*                                                                  0277
*               /*****************************************************/
*               /*                                                   */
*               /* SHIFT STRING                                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0278
*               CNOUTSTR(CHINSSRT+CHINSLEN:CNOUTLEN)=CNOUTSTR(CHINSSRT:
*                   CNOUTLEN-CHINSLEN);                            0278
*                                                                  0278
         LR    @14,CHINSSRT                                        0278
         AR    @14,CHINSLEN                                        0278
         L     @10,@PC00001+8                                      0278
         ST    @14,@TF00001                                        0278
         ALR   @14,@10                                             0278
         AL    @14,@CF00129                                        0278
         L     @07,@PC00001+12                                     0278
         L     @07,CNOUTLEN(,@07)                                  0278
         S     @07,@TF00001                                        0278
         LR    @05,@10                                             0278
         ALR   @05,CHINSSRT                                        0278
         AL    @05,@CF00129                                        0278
         MVC   @TS00001(256),CNOUTSTR(@05)                         0278
         EX    @07,@SM00156                                        0278
*               /*****************************************************/
*               /*                                                   */
*               /* INSERT TEXT                                       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0279
*               CNOUTSTR(CHINSSRT:CHINSSRT+CHINSLEN-1)=CHINSERT(1: 0279
*                   CHINSLEN);                                     0279
         ALR   @10,CHINSSRT                                        0279
         AL    @10,@CF00129                                        0279
         LR    @14,CHINSLEN                                        0279
         BCTR  @14,0                                               0279
         EX    @14,@SM00158                                        0279
*             END;                                                 0280
*           ELSE                    /* DONT HAVE SPACE               */
*             RETURN CODE(4);       /* RETURN TO REPORT GENERATOR    */
*                                                                  0281
         B     @RC00276                                            0281
@RF00276 LA    @15,4                                               0281
         L     @14,12(,@13)                                        0281
         LM    @00,@12,20(@13)                                     0281
         BR    @14                                                 0281
*           /*********************************************************/
*           /*                                                       */
*           /* SHIFT MAY HAVE PLACED DECIMAL POINT IN RIGHT-HAND     */
*           /* POSITION. IF SO, SHIFT RIGHT BY ONE                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0282
*           IF CNOUTSTR(CNOUTLEN)='.' THEN                         0282
@RC00276 L     @14,@PC00001+12                                     0282
         L     @14,CNOUTLEN(,@14)                                  0282
         L     @10,@PC00001+8                                      0282
         ALR   @14,@10                                             0282
         AL    @14,@CF00129                                        0282
         CLI   CNOUTSTR(@14),C'.'                                  0282
         BNE   @RF00282                                            0282
*             DO;                                                  0283
*               CNOUTSTR(2:CNOUTLEN)=CNOUTSTR(1:CNOUTLEN-1);       0284
         L     @14,@PC00001+12                                     0284
         L     @14,CNOUTLEN(,@14)                                  0284
         BCTR  @14,0                                               0284
         BCTR  @14,0                                               0284
         MVC   @TS00001(256),CNOUTSTR(@10)                         0284
         EX    @14,@SM00154                                        0284
*               CNOUTSTR(1)=' ';    /* FILL WITH LEADING BLANK.      */
         MVI   CNOUTSTR(@10),C' '                                  0285
*             END;                                                 0286
*         END;                                                     0287
*       ELSE                        /* NOT FLOATING                  */
*         DO;                                                      0288
*                                                                  0288
         B     @RC00271                                            0288
@RF00271 DS    0H                                                  0289
*           /*********************************************************/
*           /*                                                       */
*           /* DETERMINE AVAILABLE SPACE                             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0289
*           IF CHLOOPV=0 THEN       /* NO SPACE                      */
         LTR   CHLOOPV,CHLOOPV                                     0289
         BNZ   @RF00289                                            0289
*             RETURN CODE(4);       /* RETURN TO REPORT GENERATOR    */
         LA    @15,4                                               0290
         L     @14,12(,@13)                                        0290
         LM    @00,@12,20(@13)                                     0290
         BR    @14                                                 0290
*           IF CNOUTSTR(CHLOOPV)='-'&CHLOOPV<CHINSLEN+1×CNOUTSTR(  0291
*               CHLOOPV)=' '&CHLOOPV<CHINSLEN THEN                 0291
@RF00289 L     @14,@PC00001+8                                      0291
         ALR   @14,CHLOOPV                                         0291
         AL    @14,@CF00129                                        0291
         CLI   CNOUTSTR(@14),C'-'                                  0291
         BNE   @GL00008                                            0291
         LA    @14,1                                               0291
         AR    @14,CHINSLEN                                        0291
         CR    CHLOOPV,@14                                         0291
         BL    @RT00291                                            0291
@GL00008 L     @14,@PC00001+8                                      0291
         ALR   @14,CHLOOPV                                         0291
         AL    @14,@CF00129                                        0291
         CLI   CNOUTSTR(@14),C' '                                  0291
         BNE   @RF00291                                            0291
         CR    CHLOOPV,CHINSLEN                                    0291
         BNL   @RF00291                                            0291
@RT00291 DS    0H                                                  0292
*             RETURN CODE(4);       /* NOT ENOUGH SPACE              */
         LA    @15,4                                               0292
         L     @14,12(,@13)                                        0292
         LM    @00,@12,20(@13)                                     0292
         BR    @14                                                 0292
*           ELSE                    /* SPACE IS AVAILABLE            */
*             DO;                   /* INSERT STRING                 */
@RF00291 DS    0H                                                  0294
*               IF CNOUTSTR(CHLOOPV)='-' THEN                      0294
*                                                                  0294
         L     @14,@PC00001+8                                      0294
         LR    @10,@14                                             0294
         ALR   @10,CHLOOPV                                         0294
         AL    @10,@CF00129                                        0294
         CLI   CNOUTSTR(@10),C'-'                                  0294
         BNE   @RF00294                                            0294
*                 /***************************************************/
*                 /*                                                 */
*                 /* MOVE MINUS SIGN                                 */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0295
*                 CNOUTSTR(CHLOOPV-CHINSLEN)='-';                  0295
*                                                                  0295
         LR    @10,CHLOOPV                                         0295
         SR    @10,CHINSLEN                                        0295
         ALR   @14,@10                                             0295
         AL    @14,@CF00129                                        0295
         MVI   CNOUTSTR(@14),C'-'                                  0295
*               /*****************************************************/
*               /*                                                   */
*               /* INSERT STRING                                     */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0296
*               CNOUTSTR(CHLOOPV-CHINSLEN+1:CHLOOPV)=CHINSERT(1:   0296
*                   CHINSLEN);                                     0296
@RF00294 LR    @14,CHLOOPV                                         0296
         SR    @14,CHINSLEN                                        0296
         L     @10,@PC00001+8                                      0296
         ALR   @10,@14                                             0296
         LCR   @14,@14                                             0296
         AR    @14,CHLOOPV                                         0296
         BCTR  @14,0                                               0296
         EX    @14,@SM00158                                        0296
*             END;                                                 0297
*         END;                                                     0298
*     END;                                                         0299
@RC00271 DS    0H                                                  0300
*CHLAB4:                                                           0300
*                                                                  0300
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NUMBER IS -XXX... WHERE XXX ARE ALL ZERO, REMOVE MINUS     */
*   /* SIGN. STEP BACK THROUGH STRING DISREGARDING COMMAS AND DECIMAL*/
*   /* POINTS UNTIL A BLANK OR MINUS SIGN IS REACHED                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0300
*   DO CHLOOPV=CNOUTLEN TO 1 BY-1 WHILE CNOUTSTR(CHLOOPV)^=' '&CNOUTSTR
*         (CHLOOPV)^='-';                                          0300
@RF00243 DS    0H                                                  0300
CHLAB4   L     @14,@PC00001+12                                     0300
         L     CHLOOPV,CNOUTLEN(,@14)                              0300
         B     @DE00300                                            0300
@DL00300 L     @14,@PC00001+8                                      0300
         LR    @10,@14                                             0300
         ALR   @10,CHLOOPV                                         0300
         AL    @10,@CF00129                                        0300
         CLI   CNOUTSTR(@10),C' '                                  0300
         BE    @DC00300                                            0300
         LR    @10,@14                                             0300
         ALR   @10,CHLOOPV                                         0300
         AL    @10,@CF00129                                        0300
         CLI   CNOUTSTR(@10),C'-'                                  0300
         BE    @DC00300                                            0300
*     IF CNOUTSTR(CHLOOPV)='.'×CNOUTSTR(CHLOOPV)=',' THEN          0301
         LR    @10,@14                                             0301
         ALR   @10,CHLOOPV                                         0301
         AL    @10,@CF00129                                        0301
         CLI   CNOUTSTR(@10),C'.'                                  0301
         BE    @RT00301                                            0301
         LR    @10,@14                                             0301
         ALR   @10,CHLOOPV                                         0301
         AL    @10,@CF00129                                        0301
         CLI   CNOUTSTR(@10),C','                                  0301
         BE    @RT00301                                            0301
*       GO TO CHLAB5;               /* IGNORE DECIMAL POINT OR COMMA */
*     IF CNOUTSTR(CHLOOPV)^='0' THEN                               0303
         ALR   @14,CHLOOPV                                         0303
         AL    @14,@CF00129                                        0303
         CLI   CNOUTSTR(@14),C'0'                                  0303
         BNE   @RT00303                                            0303
*       GO TO CHLAB6;               /* NON-ZERO, QUIT                */
*CHLAB5:                            /* TEST FOR MINUS SIGN AND REMOVE
*                                      IF IT EXISTS                  */
*   END;                                                           0305
CHLAB5   BCTR  CHLOOPV,0                                           0305
@DE00300 LTR   CHLOOPV,CHLOOPV                                     0305
         BP    @DL00300                                            0305
@DC00300 DS    0H                                                  0306
*   IF CHLOOPV=0 THEN               /* NO MINUS SIGN                 */
         LTR   CHLOOPV,CHLOOPV                                     0306
         BZ    @RT00306                                            0306
*     GO TO CHLAB6;                 /* QUIT                          */
*   IF CNOUTSTR(CHLOOPV)='-' THEN                                  0308
         L     @14,@PC00001+8                                      0308
         LR    @10,@14                                             0308
         ALR   @10,CHLOOPV                                         0308
         AL    @10,@CF00129                                        0308
         CLI   CNOUTSTR(@10),C'-'                                  0308
         BNE   @RF00308                                            0308
*     CNOUTSTR(CHLOOPV)=' ';        /* REMOVE MINUS SIGN             */
         ALR   @14,CHLOOPV                                         0309
         AL    @14,@CF00129                                        0309
         MVI   CNOUTSTR(@14),C' '                                  0309
*CHLAB6:                                                           0310
*   RETURN CODE(0);                 /* RETURN TO CALLER              */
@RF00308 DS    0H                                                  0310
CHLAB6   SR    @15,@15                                             0310
         L     @14,12(,@13)                                        0310
         LM    @00,@12,20(@13)                                     0310
         BR    @14                                                 0310
*   END;                                                           0311
*   END;                                                           0312
@EL00001 L     @13,4(,@13)                                         0312
@EF00001 L     @00,@SIZDATD                                        0312
         LR    @01,@11                                             0312
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0312
         BR    @14                                                 0312
@DATA    DS    0H
@CH00098 DC    H'3'
@CH00056 DC    H'256'
@SM00144 MVC   CNSIGDIG(0),0(@07)
@SM00146 MVC   CNFRADIG(0),0(@10)
@SM00148 MVC   CNSIGDIG(0),0(@10)
@SM00150 MVC   CNFRADIG(0),0(@02)
@SM00152 MVC   CNOUTSTR(0,@14),CNSIGDIG
@SM00154 MVC   CNOUTSTR+1(0,@10),@TS00001
@SM00156 MVC   CNOUTSTR(0,@14),@TS00001
@SM00158 MVC   CNOUTSTR(0,@10),CHINSERT
         DS    0F
@AL00128 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00140 DC    A(@CF00065)             LIST WITH   1 ARGUMENT(S)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@PC00002 DS    1F
@AL00001 DS    1A
@TF00001 DS    F
@AFTEMPS DS    1F
IRBMFCNV CSECT
         DS    0F
@CF00129 DC    F'-1'
@CF00065 DC    F'1'
@CH00065 EQU   @CF00065+2
@DATD    DSECT
         DS    0D
CNMINUS  DS    H
CNFRAC   DS    H
@TS00001 DS    CL256
         DS    CL4
CNPAKSTR DS    CL8
CNWRKSTR DS    CL16
CNSIGDIG DS    CL10
CNFRADIG DS    CL10
CNSSIGCM DS    BL1
CNSFRAZR DS    BL1
CNIFLOAT DS    BL1
CHINSERT DS    CL2
CHRNDUP  DS    BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IRBMFCNV CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00134 DC    C'1,'
COMMA    DC    CL1','
CNPATCH  DS    CL100
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CHSCAN   EQU   @03
CHDECCNT EQU   @07
CHINSLEN EQU   @03
CHINSSRT EQU   @02
CHCOMCNT EQU   @05
CHLOOPV  EQU   @02
CNFRAZER EQU   @09
CNLEADZ  EQU   @08
CNSIGZER EQU   @06
CNSIGNFC EQU   @03
CNSIGNF  EQU   @04
CNRETCDE EQU   @05
CNPLACES EQU   @02
CNLOOPV  EQU   @02
GPR15F   EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR01F   EQU   @01
GPR14F   EQU   @14
IKEBC    EQU   0
IKEBF15  EQU   0
IKEBF31  EQU   0
IKEBP15  EQU   0
IKEBP31  EQU   0
IKEBP8   EQU   0
CNINPUT  EQU   0
CNINSCAL EQU   0
CNOUTSTR EQU   0
CNOUTLEN EQU   0
CNOUFRAC EQU   0
CNCOMMAS EQU   0
CNFLOAT  EQU   0
CHSTART  EQU   0
@RT00102 EQU   CNLAB2
@RT00165 EQU   CHLAB1
@RT00221 EQU   CHLAB2
@RF00282 EQU   @RC00271
@RT00301 EQU   CHLAB5
@RT00303 EQU   CHLAB6
@RT00306 EQU   CHLAB6
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IRBMFCNV,(C'PL/S-II',0502,74087)
