         TITLE 'ISTDCC00: CONTROL LAYER REQUEST START ONE              *
                        '
ISTDCC00 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTDCC00  75.288'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*PTRCRR=ADDR(CRRSPACE);             /* ADDRESS THE                   */
         L     @15,RPHCRR(,PTRRPH)                                 0445
         L     @15,CRACRR(,@15)                                    0445
         LA    PTRCRR,CRRSPACE(,@15)                               0445
*RFY CRRSAREA BASED(PTRCRR);        /*  COMPONENT RECOVERY RECORD    */
*RFY ISTPFCRR BASED(ADDR(CRRCRR));                                 0447
*/* INIALIALIZE CRR @D33SKXW*/                                     0448
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : NESTCH                                            */
*/*                                                                  */
*/* FUNCTION :  INITIALIZES THE CRR                                  */
*/*                                                                  */
*/* INPUT : A NEW CRR OR CURRENTLY USED BY SOLICIT ALL               */
*/*                                                                  */
*/*                                                                  */
*/* OUTPUT :    AN INITIALIZED CRR                                   */
*/*                                                                  */
*/* SUBROUTINES CALLED :  NONE                                       */
*/*                                                                  */
*/* MACROS USED :  LISATCVT                                          */
*/*                                                                  */
*/********************************************************************/
* IF CRRID =CRRTYPE THEN                                           0448
         CLI   CRRID(@15),X'22'                                    0448
         BNE   @RF00448                                            0448
*    DO;                                                           0449
*    RFY (PTRRPH,PTRRPL,PTRLCPB,PTRFMCB,PTRCRR) RSTD;              0450
*CRRFLGS = CRRFLGS && CRRFLGS;      /* CLEAR CRRFLGS                 */
         XC    CRRFLGS(1,PTRCRR),CRRFLGS(PTRCRR)                   0451
*CRRFLGS2 = CRRFLGS2 && CRRFLGS2;   /* CLEAR CRRFLGS2                */
         XC    CRRFLGS2(1,PTRCRR),CRRFLGS2(PTRCRR)                 0452
*CRRFLGS3 = CRRFLGS3 && CRRFLGS3;   /* CLEAR CRRFLGS3                */
*                                                                  0453
         XC    CRRFLGS3(1,PTRCRR),CRRFLGS3(PTRCRR)                 0453
*CRRC02=OFF;                        /* CLEAR REQUEST FINISH INDICATOR*/
         NI    CRRC02(PTRCRR),B'11011111'                          0454
*CRRINIO=OFF;                       /* CLEAR I/O INITIALIZED FLAG    */
*CRRSOLRQ=OFF;                      /* CLEAR SOLICIT REQUEST SWITCH  */
*CRRCPROC=OFF;                      /* CLEAR CPROC SWITCH            */
         NI    CRRINIO(PTRCRR),B'11011010'                         0457
*CRRSW2=ON;                        /* 1ST PASS SWITCH(FOR SL ALL)   */
         OI    CRRSW2(PTRCRR),B'00100000'                          0458
*    END;                                                          0459
* ELSE DO;                                                         0460
         B     @RC00448                                            0460
@RF00448 DS    0H                                                  0461
* RFY ISTDCCRR BASED (ADDR(CRAPROCR));                             0461
* PTRCRR=ADDR(CRRSPACE);                                           0462
         L     @15,RPHCRR(,PTRRPH)                                 0462
         LA    @14,312                                             0462
         ALR   @14,@15                                             0462
         LA    PTRCRR,CRRSPACE(,@14)                               0462
* RFY CRRSAREA BASED (PTRCRR);                                     0463
*         /* ZERO OUT ALL OF THE CRR FIRST                   @Z40GKNL*/
*CRRSAREA(1:256) = CRRSAREA(1:256) && CRRSAREA(1:256);  /*   @Z40GKNL*/
         XC    CRRSAREA(256,PTRCRR),CRRSAREA(PTRCRR)               0464
*CRRSAREA(257:LENGTH(CRRSAREA)) = CRRSAREA(257:LENGTH(CRRSAREA)) &&
*             CRRSAREA(257:LENGTH(CRRSAREA));             /* @Z40GKNL*/
         XC    CRRSAREA+256(64,PTRCRR),CRRSAREA+256(PTRCRR)        0465
*         /* NOW SET ALL NEEDED POINTERS AND FLAGS           @Z40GKNL*/
*                                                                  0466
* DO; /* LISATCVT CVTBASE(PAGEABLE,(CRRATCVT)) */                  0466
*   CRRATCVT = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0467
         L     @09,ATCLCPTR                                        0467
         ST    @09,CRRATCVT(,PTRCRR)                               0467
* END; /*LISATCVT*/ /* GET  VTAM CVT POINTER    */                 0468
*RFY ISTATCVT BASED(CRRATCVT);      /* SET BASE ADDRESS              */
*CRRFRR=CRAFRR;                     /* PLACE FRR POINTER IN CRR      */
         L     @08,CRAFRR(,@15)                                    0470
         ST    @08,CRRFRR(,@14)                                    0470
*CRRCHAIN=CRACRR;                   /* SAVE CRR PTR FROM CRA         */
         L     @08,CRACRR(,@15)                                    0471
         ST    @08,CRRCHAIN(,@14)                                  0471
*CRAFRR=ATCDCFRR;                   /* SAVE FRR POINTER FROM VTAM CVT*/
         L     @09,ATCDCFRR(,@09)                                  0472
         ST    @09,CRAFRR(,@15)                                    0472
*CRRID=CRRTYPE;                     /* SET CONTROL LAYER ID IN CRR   */
         MVI   CRRID(@14),X'22'                                    0473
*CRRLEN=LENGTH(ISTDCCRR)+LENGTH(CRRSAREA);                         0474
         MVC   CRRLEN(2,@14),@CH04502                              0474
*                                   /*SET CRR LENGTH                 */
*CRACRR=ADDR(CRAPROCR);             /* SAVE CRR PTR IN CRA           */
         LA    @14,CRAPROCR(,@15)                                  0475
         ST    @14,CRACRR(,@15)                                    0475
*     END;                                                         0476
*     CRRC00=ON;/*SET AUDIT TRAIL SWITCH*/                         0477
@RC00448 OI    CRRC00(PTRCRR),B'10000000'                          0477
*     CRRM00=ON;/*SET MODULE TRAIL SWITCH*/                        0478
         OI    CRRM00(PTRCRR),B'10000000'                          0478
*/* IT'S DETERMINED THAT THE WORK ELEMENT IS NOT AN LCPB.  A       0479
*  CHECK IS MADE TO FIND OUT IF THE MAJOR NODE CONTROL BLOCK IS    0479
*  AN FMCB, AND, IF SO, WHETHER THE FMCB IS IN CLEAR STATE.        0479
*IF IT IS THE ADDRESS OF THE DVT NAME IS PUT IN REG 0 FOR THE      0479
*TPDVTS MACRO.  IN ALL OTHER CASES ,EXCEPT WHERE THE WORK ELEMENT  0479
*IS AN LCPB, THE REQUEST SUBROUTINE IS CALLED.  FOR LCPB, THE      0479
*LCPBPROC SUBROUTINE IS CALLED.                                 */ 0479
*                                                                  0479
*                                                                  0479
*IF RPHWEA=ZERO ×                         /* CHECK FOR ZERO WORK ELT */
*  RPHWEA->RPLID = '00'X THEN             /* OR AN RPL               */
         L     @15,RPHWEA(,PTRRPH)                                 0479
         LTR   @15,@15                                             0479
         BZ    @RT00479                                            0479
         CLI   RPLID(@15),X'00'                                    0479
         BNE   @RF00479                                            0479
@RT00479 DS    0H                                                  0480
*  DO;                                    /* DO NOT AN LCPB          */
*   IF RPHMAJCB -> FMCTYPE = FMTYPE THEN                           0481
         L     @15,RPHMAJCB-1(,PTRRPH)                             0481
         LA    @15,0(,@15)                                         0481
         CLI   FMCTYPE(@15),X'03'                                  0481
         BNE   @RF00481                                            0481
*      DO;                                /* DO MJR NODE CB AN FMCB  */
*       PTRFMCB = RPHMAJCB;               /* ADDRESS THE FMCB        */
         LR    PTRFMCB,@15                                         0483
*       RFY ISTFMCB BASED(PTRFMCB);                                0484
*       IF FMCCLEAR = ON THEN            /* IS IT IN CLR STATE      */
         TM    FMCCLEAR(PTRFMCB),B'01000000'                       0485
         BNO   @RF00485                                            0485
*          DO;                            /* DO FMCB IN CLR STATE    */
*           ADDRDVT = ADDR(DVTCLEAR);     /* PREPARE FOR TPDVTS      */
         LA    ADDRDVT,DVTCLEAR                                    0487
*           CRRSW6 = ON;                                           0488
         OI    CRRSW6(PTRCRR),B'00000010'                          0488
*          END;                           /* END FMCB IN CLR STATE   */
*       ELSE CALL REQUEST;                                         0490
         B     @RC00485                                            0490
@RF00485 BAL   @14,REQUEST                                         0490
*      END;                               /* END MJR NODE CB AN FMCB */
*   ELSE CALL REQUEST;                                             0492
         B     @RC00481                                            0492
@RF00481 BAL   @14,REQUEST                                         0492
*  END;                                   /*  END NOT AN LCPB        */
*ELSE DO;                                                   /*@DM09122*
         B     @RC00479                                            0494
@RF00479 DS    0H                                                  0495
*      IF RPHWEA->FSBTYPE=FSTYPE THEN                       /*@DM09122*
         L     @15,RPHWEA(,PTRRPH)                                 0495
         CLI   FSBTYPE(@15),X'02'                                  0495
         BNE   @RF00495                                            0495
*       DO;                                                 /*@DM09122*
*         ADDRDVT=ADDR(DVTCLEAR);                           /*@DM09122*
         LA    ADDRDVT,DVTCLEAR                                    0497
*         CRRSW6=ON;                                        /*@DM09122*
         OI    CRRSW6(PTRCRR),B'00000010'                          0498
*       END;                                                /*@DM09122*
*      ELSE DO;                                             /*@DM09122*
         B     @RC00495                                            0500
@RF00495 DS    0H                                                  0501
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME :LCPBPROC                                           */
*/*                                                                  */
*/* FUNCTION :   TO ROUTE CONTROL TO THE APPROPRIATE ROUTINE WHEN    */
*/*   THE WORK ELEMENT IS AN LCPB.                                   */
*/*                                                                  */
*/*                                                                  */
*/* INPUT :   AN LCPB AS A WORK ELEMENT AND A MAJOR NODE CONTROL     */
*/*   BLOCK OF AN FMCB OR AN ACDEB.                                  */
*/*                                                                  */
*/* OUTPUT :   THE ADDRESS OF A DVT NAME IN REGISTER 0 OR A SWITCH   */
*/*    INDICATING THE TYPE OF EXIT TO BE TAKEN.                      */
*/* SUBROUTINES CALLED :  ISTDCC85 THRU THE ATCVT.                   */
*/*                                                                  */
*/* MACROS USED :  NONE                                              */
*/*                                                                  */
*/********************************************************************/
*RFY ISTDCLCP BASED (RPHWEA);                                      0501
*RFY ISTLCPB BASED (ADDR(DCLLCPB));                                0502
*                                                                  0502
*    IF RPHMAJCB->ACDTYPE=ACDID THEN                               0503
         L     @15,RPHMAJCB-1(,PTRRPH)                             0503
         LA    @15,0(,@15)                                         0503
         CLI   ACDTYPE(@15),X'0F'                                  0503
         BNE   @RF00503                                            0503
*       DO;                  /* DO - READ ANY PURGE  */            0504
*         RFY ISTATCVT BASED(CRRATCVT); /* BASE THE ATCVT    */    0505
*         GEN REFS(R14,R12,CRRSAVE1) SETS(CRRSAVE1)         /*@DM09569*
*         (STM R14,R12,CRRSAVE1+12(R13)); /*SAVE REGISTERS    @DM09569*
         STM R14,R12,CRRSAVE1+12(R13)
*         CALL ATCNERAP;       /* EXIT TO READ ANY PURGE      @DM08353*
         L     @14,CRRATCVT(,PTRCRR)                               0507
         L     @15,ATCNERAP(,@14)                                  0507
         BALR  @14,@15                                             0507
*         GEN REFS(CRRSAVE1,R13) SETS(R14,R12)              /*@DM09569*
*         (LM R14,R12,CRRSAVE1+12(R13));/*RESTORE REGISTERS   @DM09569*
         LM R14,R12,CRRSAVE1+12(R13)
*         CRRSW5=ON;                                               0509
         OI    CRRSW5(PTRCRR),B'00000100'                          0509
*       END;                /* END - READ ANY PURGE     */         0510
*                                                                  0510
*     ELSE DO;                                                     0511
         B     @RC00503                                            0511
@RF00503 DS    0H                                                  0512
*            ADDRDVT=ADDR(DVTPURGE);                               0512
         LA    ADDRDVT,DVTPURGE                                    0512
*            CRRSW6=ON;                                            0513
         OI    CRRSW6(PTRCRR),B'00000010'                          0513
*          END;                                                    0514
*       END;/*END LCPBPROC*/                                       0515
@RC00503 DS    0H                                                  0516
*     END;                                                  /*@DM09122*
@RC00495 DS    0H                                                  0517
*IF CRRSW6 = ON THEN                     /* TPDVTS SWITCH           */
@RC00479 TM    CRRSW6(PTRCRR),B'00000010'                          0517
         BNO   @RF00517                                            0517
*  DO;                                                             0518
*                                                                  0518
*/*  TPDVTS NAMEPTR(ADDRDVT) */                                    0519
*   DO;                                                            0519
*                                                                  0519
*/* ATBUILD (ISTRPH,ISTPAB,ISTDYPAB,ISTATCVT)  */                  0520
*/* END OF ATBUILD */                                              0520
*   RFY (GPR01P,GPR02P,GPR06P,GPR08P) RSTD;                        0520
*   GEN REFS(GPR01P,GPR02P,GPR08P) SETS(RPHWORK)                   0521
*   (STM   GPR02P,GPR08P,RPHWORK(GPR01P));                         0521
         STM   GPR02P,GPR08P,RPHWORK(GPR01P)
*   RFY (GPR02P,GPR08P) UNRSTD;                                    0522
*   RFY GPR00P RSTD;                                               0523
*   GPR00P = ADDRDVT;                                              0524
*   GPR01P -> RPHSRPRM = 0;                                        0525
         SLR   @15,@15                                             0525
         ST    @15,RPHSRPRM(,GPR01P)                               0525
*   RFY GPR15P RSTD;                                               0526
*                                                                  0526
*   DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                  0527
*     GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0528
         L     GPR15P,ATCLCPTR                                     0528
*   END; /*LISATCVT*/                                              0529
*   GPR15P=GPR15P -> ATCESC02;                                     0530
         L     GPR15P,ATCESC02(,GPR15P)                            0530
*   DCL FMZL0022 BASED(GPR15P) LABEL VALUERANGE(*);                0531
*   CALL FMZL0022;                                                 0532
         BALR  @14,@15                                             0532
*   RFY (GPR00P,GPR15P) UNRSTD;                                    0533
*   RFY (GPR02P,GPR08P) RSTD;                                      0534
*   GEN REFS(RPHWORK) SETS(GPR02P,GPR08P)                          0535
*   (LM    GPR02P,GPR08P,RPHWORK(GPR01P));                         0535
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
*   RFY (GPR01P,GPR02P,GPR06P,GPR08P) UNRSTD;                      0536
*   END;                                                           0537
*/***** END OF TPDVTS GENERATION *****/                            0538
*  CRRRTNCD=CRRLOGIC;                   /* CTRL RTNS HERE IF TPDVTS */
         MVI   CRRRTNCD(PTRCRR),X'08'                              0538
*  CRRFDB2='67'X;                       /*  FAILS                   */
         MVI   CRRFDB2(PTRCRR),X'67'                               0539
*  END;                                                            0540
*ELSE IF CRRSW5 = ON THEN                /* TPEXIT SWITCH           */
*                                                                  0541
         B     @RC00517                                            0541
@RF00517 TM    CRRSW5(PTRCRR),B'00000100'                          0541
         BNO   @RF00541                                            0541
*/* TPEXIT  NORM */                                                0542
*   DO;                                                            0542
*     RESPECIFY GPR15P RSTD;                                       0543
*                                                                  0543
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)  */                         0544
*/* END OF ATBUILD */                                              0544
*                                                                  0544
*   DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                  0544
*     GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0545
         L     GPR15P,ATCLCPTR                                     0545
*   END; /*LISATCVT*/                                              0546
*     RESPECIFY GPR00F RSTD;                                       0547
*     GPR00F=4;    /* SET PARAMETER REGISTER TO 4 */               0548
         LA    GPR00F,4                                            0548
*     GPR15P=GPR15P->ATCAP31;                                      0549
         L     GPR15P,ATCAP31(,GPR15P)                             0549
*     DCL FMZL0030 BASED(GPR15P) LABEL VALUERANGE(*);              0550
*     CALL FMZL0030;                                               0551
         BALR  @14,@15                                             0551
*     RESPECIFY (GPR00F,GPR15P) UNRSTD;                            0552
*   END; /***** END OF TPEXIT  *****/                              0553
*         /*@DM09007*/                                             0554
*    ELSE;                                /* NEITHER SWITCH SET       *
@RF00541 DS    0H                                                  0555
*                                        /* CAUSES DEFAULT TO TPESC  */
*                                                                  0555
*/*TPESC*/                                                         0555
*   DO;                                                            0555
*                                                                  0555
@RC00517 DS    0H                                                  0556
*/* ATBUILD (ISTDYPAB,ISTAVT,ISTATCVT)  */                         0556
*/* VTAM ADDRESS VECTOR TABLE */                                   0556
*/*  REVISIONS                                         002 03/06/75  */
*DCL  1  ISTAVT BDY(WORD) BASED,                                   0556
*       2  ISTACVT PTR(31),            /* ADDR OF VTAM CVT           */
*       2  ISTAS49 PTR(31),            /* ADDR OF SVC 49 CODE        */
*          3  ISTAHIP BIT(1),          /* HALT IN PROGRESS           */
*       2  ISTAS53 PTR(31),            /* ADDR OF SVC 53 CODE        */
*       2  ISTAPSTA PTR(31),           /* ADDR OF APS TABLE          */
*       2  AVTASID FIXED(15),          /* VTAM ASID                  */
*       2  ISTVTTIK FIXED(15),         /* VTAMRP TASK ID             */
*       2  ISTAPSEX PTR(31),           /* ADDR OF APS EXIT           */
*       2  ISTPHNM CHAR(5),            /* PHASE NAME OF TRANSIENT    */
*       2  ISTX1 CHAR(1),              /* TEST FIELD                 */
*       2  ISTARID PTR(15),            /* ADDR OF RID                */
*       2  ISTATRT PTR(15),            /* ADDR OF VTAM GATES IN RETAB*/
*       2  ISTAGTWT PTR(15),           /* ADDR OF GATEWAIT ROUTINE   */
*       2  ISTVTTP  PTR(15),           /* ADDR OF CODE TO CHECK FOR  */
*                                      /* PENDING TIMER INTERRUPT    */
*       2  ISTAVR01 CHAR(2),           /* RESERVED                   */
*       2  ISTPDAVP PTR(31);           /* VECTOR FOR PDAIDS SMS TRACE*/
*/* END OF ATBUILD */                                              0557
*     RFY GPR15P RSTD;                                             0557
*                                                                  0557
*   DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                  0558
*     GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0559
         L     GPR15P,ATCLCPTR                                     0559
*   END; /*LISATCVT*/                                              0560
*     GPR15P=GPR15P->ATCESC01;                                     0561
         L     GPR15P,ATCESC01(,GPR15P)                            0561
*     DCL FMZL0038 BASED(GPR15P) LABEL VALUERANGE(*);              0562
*     CALL FMZL0038;                                               0563
         BALR  @14,@15                                             0563
*     RESPECIFY GPR15P UNRSTD;                                     0564
*   END;  /***** END OF  TPESC *****/                              0565
*/********************************************************************/
*/*                                                                  */
*/* ROUTINE NAME :REQUEST                                            */
*/*                                                                  */
*/* FUNCTION :  TO PROCESS REQUESTS THAT DO NOT HAVE AN LCPB AS THE  */
*/*   WORK ELEMENT.  IN CASES WHERE THERE IS AN RPL PASSED VIA THE   */
*/*   RPH, THE SUBROUTINE DETERMINES THE TYPE OF REQUEST AND,IF IT IS*/
*/*   A RECEIVE, READ, OR SOLICIT, FURTHER DETERMINES WHETHER IT IS  */
*/*   AN ANY OR SPECIFIC OPERATION.  IN CASES WHERE THERE IS NO WORK */
*/*  ELEMENT IN THE RPH, CONTROL PASSES TO A SUBROUTINE WHICH TRIES  */
*/*  TO FIND ONE.                                                    */
*/*                                                                  */
*/* INPUT :USUALLY A WORK ELEMENT OF AN RPL BUT SOME TIMES NO WORK   */
*/*   ELEMENT.  ALSO A MAJOR NODE CONTROL BLOCK OF AN FMCB OR ACDEB. */
*/*                                                                  */
*/* OUTPUT :  A SWITCH INDICATING WHETHER EXIT FROM ISTDCC00 IS VIA  */
*/*   TPEXIT,TPDVTS, OR TPESC (NO SWITCH SET).                       */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*  ISTDCC24 (THRU THE ATCVT).                                      */
*/*                                                                  */
*/* MACROS USED :  TPLOCK                                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0566
*                                                                  0566
*REQUEST: PROC OPTIONS(NOPARMREG,NOSAVE,NOSAVEAREA);               0566
*                                                                  0566
         B     @PB00002                                            0566
REQUEST  DS    0H                                                  0567
*RFY R14 RSTD;                                                     0567
*CRRRTN9=R14;                                                      0568
         ST    R14,CRRRTN9(,PTRCRR)                                0568
*RFY R14 UNRSTD;                                                   0569
*IF RPHMAJCB ->FMCTYPE=FMTYPE THEN                                 0570
         L     @15,RPHMAJCB-1(,PTRRPH)                             0570
         LA    @15,0(,@15)                                         0570
         CLI   FMCTYPE(@15),X'03'                                  0570
         BNE   @RF00570                                            0570
*  DO;                              /*DO MJR NODE CB IS FMCB   */  0571
*                                                                  0571
*/*** START -TPLOCK (CTLLOCK)TYPE(XCLSIVE)- ***/                   0572
*     DO;                                                          0572
*     RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;        0573
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*        GPR02P = ADDR(FMCDCLOK);       /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,FMCDCLOK(,PTRFMCB)                           0575
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0576
         L     GPR04P,RPHCRR(,GPR01P)                              0576
*        GPR00P = CRALMS08;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,128                                          0577
*        GPR03P = ADDR(GPR04P->CRAL8PTR);                          0578
         LA    GPR03P,CRAL8PTR(,GPR04P)                            0578
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*        GPR15P=ATCLCPTR->ATCAP36;      /*ADDRESS OF LOCK ROUTINE*/
         L     @05,ATCLCPTR                                        0579
         L     GPR15P,ATCAP36(,@05)                                0579
*        DCL FMZL0046 BASED(GPR15P) LABEL VALUERANGE(*);           0580
*        CALL FMZL0046;                                            0581
         BALR  @14,@15                                             0581
*        GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0582
*                                                                  0582
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*     RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;      0583
*        END;                                                      0584
*/*** END -TPLOCK (CTLLOCK)TYPE(XCLSIVE)- ***/                     0585
*    IF R15 = ZERO THEN             /* IF FMCB GOT LOCKED */       0585
         SLR   @14,@14                                             0585
         CR    R15,@14                                             0585
         BNE   @RF00585                                            0585
*       DO;                         /* DO SET FMCB LOCKED FLAG */  0586
*       CRRFMCLK=ON;/*@D33SKXW */                                  0587
*                                                                  0587
         OI    CRRFMCLK(PTRCRR),B'10000000'                        0587
*        IF RPHWEA=ZERO THEN    DO;        /* NO WORK ELEMENT IN RPH */
         C     @14,RPHWEA(,PTRRPH)                                 0588
         BNE   @RF00588                                            0588
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME :  NOWORKEL                                         */
*/*                                                                  */
*/* FUNCTION :  FINDS A WORK ELEMENT WHEN THE MAJOR NODE CONTROL     */
*/*             BLOCK IS AN FMCB.  FOR RECORD MODE IT CHECKS THE RPL */
*/*             RTYPES AGAINST THE TYPES OF DATA ON THE FMCB DATA    */
*/*             QUEUES. FOR BASIC MODE IT DEQUES THE OLDEST RPL FROM */
*/*             THE FMCB WAIT Q. IF NO RPL IS FOUND CRRSW5 IS TURNED */
*/*             ON CAUSING A TPEXIT UPON RETURN.                     */
*/* INPUT : A POINTER TO THE FMCB.                                   */
*/*                                                                  */
*/*                                                                  */
*/* OUTPUT :  CRRSW5 IS ON IF A TPEXIT IS TO BE DONE                 */
*/*           AN RPL IN RPHWEA IF ONE WAS FOUND.                     */
*/* SUBROUTINES CALLED :        UNLOCK                               */
*/*                                                                  */
*/* MACROS USED :TPDEQ                                               */
*/*                                                                  */
*/********************************************************************/
*                                                                  0590
*                                                                  0590
*IF FMCMODE = FMCRCD THEN          /* RECORD MODE TEST */          0590
         CLC   FMCMODE(8,PTRFMCB),@CC03734                         0590
         BNE   @RF00590                                            0590
*  DO;                                                             0591
*    PTRRPL = FMCRPLA;                     /* GET RPL FROM WAIT Q */
         L     PTRRPL,FMCRPLA(,PTRFMCB)                            0592
*    RFY IFGRPL BASED(PTRRPL);                                     0593
*    DO WHILE PTRRPL ^= ZERO &                                     0594
*             PTRRPL ^= GATE & CRRARPL=ZERO; /* FIND OLDEST RPL */ 0594
         B     @DE00594                                            0594
@DL00594 DS    0H                                                  0595
*       IF(RPLDFASY=ON&FMCFBAS^=ZERO&FMCFBAS^=GATE) ×              0595
*         (RPLRRESP=ON&FMCFBRE^=ZERO&FMCFBRE^=GATE) ×              0595
*         (RPLNFSYN=OFF&FMCFBA^=ZERO&FMCFBA^=GATE)    THEN         0595
*                                                                  0595
         TM    RPLDFASY+16(PTRRPL),B'00000010'                     0595
         BNO   @GL00003                                            0595
         L     @15,FMCFBAS(,PTRFMCB)                               0595
         LTR   @15,@15                                             0595
         BZ    @GL00003                                            0595
         CL    @15,@CF01326                                        0595
         BNE   @RT00595                                            0595
@GL00003 TM    RPLRRESP+16(PTRRPL),B'00001000'                     0595
         BNO   @GL00002                                            0595
         L     @15,FMCFBRE(,PTRFMCB)                               0595
         LTR   @15,@15                                             0595
         BZ    @GL00002                                            0595
         CL    @15,@CF01326                                        0595
         BNE   @RT00595                                            0595
@GL00002 TM    RPLNFSYN+16(PTRRPL),B'00000100'                     0595
         BNZ   @RF00595                                            0595
         L     @15,FMCFBA(,PTRFMCB)                                0595
         LTR   @15,@15                                             0595
         BZ    @RF00595                                            0595
         CL    @15,@CF01326                                        0595
         BE    @RF00595                                            0595
@RT00595 DS    0H                                                  0596
*         CRRARPL = PTRRPL;             /* SAVE ADDR IF MATCH FOUND */
         ST    PTRRPL,CRRARPL(,PTRCRR)                             0596
*       ELSE;                                                      0597
@RF00595 DS    0H                                                  0598
*       PTRRPL = RPLPLHPT;           /* GET NEXT RPL IN CHAIN */   0598
         L     PTRRPL,RPLPLHPT(,PTRRPL)                            0598
*    END;                            /* END DO WHILE            */ 0599
*                                                                  0599
@DE00594 SLR   @15,@15                                             0599
         CR    PTRRPL,@15                                          0599
         BE    @DC00594                                            0599
         CL    PTRRPL,@CF01326                                     0599
         BE    @DC00594                                            0599
         C     @15,CRRARPL(,PTRCRR)                                0599
         BE    @DL00594                                            0599
@DC00594 DS    0H                                                  0600
*    IF CRRARPL = ZERO ×                                           0600
*       CRRARPL = GATE THEN ;                                      0600
         L     @15,CRRARPL(,PTRCRR)                                0600
         LTR   @15,@15                                             0600
         BZ    @RT00600                                            0600
         CL    @15,@CF01326                                        0600
         BE    @RT00600                                            0600
*    ELSE DO;                                                      0602
*                                                                  0602
*/* TPDEQ (CRRARPL,FMCRPLA)  */                                    0603
*        DO; /* BEGIN TPDEQ CODE GENERATION */                     0603
*        DCL FMZCA051 BIT(32) CONSTANT('80000000'X);               0604
*        DCL FMZCB051 BIT(32) CONSTANT('7FFFFFFF'X);               0605
*        RFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;                   0606
*                                                                  0606
*        RFY ISTWKE  ;                                             0607
*        GPR15P=ADDR(FMCRPLA); /*ADDRESS QUEUE POINTER */          0608
         LA    GPR15P,FMCRPLA(,PTRFMCB)                            0608
*        RFY (GPR02P,GPR03P) RSTD;                                 0609
*        STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                 0610
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0610
*        GPR03P=CRRARPL × FMZCA051;                                0611
         L     @09,@CF01326                                        0611
         L     GPR03P,CRRARPL(,PTRCRR)                             0611
         OR    GPR03P,@09                                          0611
*        GPR14P=FMZCA051;                                          0612
         LR    GPR14P,@09                                          0612
*        GPR15P=ADDR(GPR15P->PABWEQA);                             0613
*        GPR02P=GPR15P->PABWEQA×FMZCA051;                          0614
         O     @09,PABWEQA(,GPR15P)                                0614
         LR    GPR02P,@09                                          0614
*        DO WHILE(GPR02P^=GPR14P);                                 0615
         B     @DE00615                                            0615
@DL00615 DS    0H                                                  0616
*FMZL2051:;                                                        0616
FMZL2051 DS    0H                                                  0617
*          IF GPR02P=GPR03P                                        0617
*          THEN DO;                                                0617
         CR    GPR02P,GPR03P                                       0617
         BNE   @RF00617                                            0617
*            GPR00P=GPR02P->WKECHAIN;                              0619
         L     GPR00P,WKECHAIN(,GPR02P)                            0619
*            CS(GPR02P,GPR00P,GPR15P->PABWEQA);                    0620
         CS    GPR02P,@00,PABWEQA(GPR15P)                          0620
*            BC(7,FMZL3051);                                       0621
         BC    7,FMZL3051                                          0621
*            GPR14P=GPR02P;                                        0622
         LR    GPR14P,GPR02P                                       0622
*            GPR14P->WKECHAIN=0;                                   0623
         SLR   @09,@09                                             0623
         ST    @09,WKECHAIN(,GPR14P)                               0623
*            END;                                                  0624
*          ELSE DO;                                                0625
         B     @RC00617                                            0625
@RF00617 DS    0H                                                  0626
*            IF (GPR02P->WKECHAIN)=GPR14P                          0626
*            THEN                                                  0626
         L     @09,WKECHAIN(,GPR02P)                               0626
         CR    @09,GPR14P                                          0626
         BE    @RT00626                                            0626
*              GOTO ISTA0051;                                      0627
*            ELSE DO;                                              0628
*              GPR15P=ADDR(GPR02P->WKECHAIN);                      0629
         LA    GPR15P,WKECHAIN(,GPR02P)                            0629
*              GPR02P=GPR02P->WKECHAIN;                            0630
         LR    GPR02P,@09                                          0630
*              GOTO FMZL2051;                                      0631
         B     FMZL2051                                            0631
*              END;                                                0632
*            END;                                                  0633
*FMZL3051:;                                                        0634
@RC00617 DS    0H                                                  0634
FMZL3051 DS    0H                                                  0635
*        END;                                                      0635
@DE00615 CR    GPR02P,GPR14P                                       0635
         BNE   @DL00615                                            0635
*ISTA0051:;                                                        0636
ISTA0051 DS    0H                                                  0637
*        LM (GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                 0637
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0637
*        RFY (GPR02P,GPR03P) UNRSTD;                               0638
*        GPR14P=GPR14P&FMZCB051;                                   0639
         N     GPR14P,@CF01324                                     0639
*        GPR01P->RPHWEA=GPR14P;                                    0640
         ST    GPR14P,RPHWEA(,GPR01P)                              0640
*        RFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;                 0641
*        END; /* END TPDEQ GENERATION */             /* DEQUE OLDEST RP
*    */                                                            0642
*       CRRARPL=RPHWEA;                                            0643
         L     @15,RPHWEA(,PTRRPH)                                 0643
         ST    @15,CRRARPL(,PTRCRR)                                0643
*         END;                                                     0644
*                                                                  0644
*  END;                          /* END RECORD MODE  */            0645
*ELSE DO;                      /* BASIC MODE             */        0646
         B     @RC00590                                            0646
@RF00590 DS    0H                                                  0647
*    CRRSW4=ON;                                                    0647
         OI    CRRSW4(PTRCRR),B'00001000'                          0647
*    IF FMCFBA = ZERO ×                                            0648
*       FMCFBA = GATE THEN                                         0648
         L     @15,FMCFBA(,PTRFMCB)                                0648
         LTR   @15,@15                                             0648
         BZ    @RT00648                                            0648
         CL    @15,@CF01326                                        0648
         BNE   @RF00648                                            0648
@RT00648 DS    0H                                                  0649
*       IF FMCFLGA0 = ON THEN         /* DATA EXPECTED   */        0649
         TM    FMCFLGA0(PTRFMCB),B'10000000'                       0649
         BNO   @RF00649                                            0649
*          CRRSW4 = OFF;                                           0650
         NI    CRRSW4(PTRCRR),B'11110111'                          0650
*       ELSE;                                                      0651
@RF00649 DS    0H                                                  0652
*    ELSE;                                                         0652
*                                                                  0652
@RF00648 DS    0H                                                  0653
*    IF CRRSW4 = ON THEN                                           0653
         TM    CRRSW4(PTRCRR),B'00001000'                          0653
         BNO   @RF00653                                            0653
*      DO;                                                         0654
*                                                                  0654
*/* TPDEQ (,FMCRPLA)  */                                           0655
*       DO; /* BEGIN TPDEQ CODE GENERATION */                      0655
*       RFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;                    0656
*                                                                  0656
*       GPR15P=ADDR(FMCRPLA); /*ADDRESS QUEUE POINTER */           0657
         LA    GPR15P,FMCRPLA(,PTRFMCB)                            0657
*       GPR14P=GPR15P->PABWEQA×FMZCA051;                           0658
         L     @09,@CF01326                                        0658
         L     GPR14P,PABWEQA(,GPR15P)                             0658
         OR    GPR14P,@09                                          0658
*       IF GPR14P=FMZCA051 THEN;                                   0659
         CLR   GPR14P,@09                                          0659
         BE    @RT00659                                            0659
*       ELSE DO;                                                   0661
*FMZL1057:;                                                        0662
FMZL1057 DS    0H                                                  0663
*         DO WHILE(GPR14P->WKECHAIN^=FMZCA051);                    0663
         B     @DE00663                                            0663
@DL00663 DS    0H                                                  0664
*           GPR15P=ADDR(GPR14P->WKECHAIN);                         0664
         LA    GPR15P,WKECHAIN(,GPR14P)                            0664
*           GPR14P=GPR15P->PABWEQA;                                0665
         L     GPR14P,PABWEQA(,GPR15P)                             0665
*         END;                                                     0666
@DE00663 L     @09,@CF01326                                        0666
         CL    @09,WKECHAIN(,GPR14P)                               0666
         BNE   @DL00663                                            0666
*         GPR00P=FMZCA051;                                         0667
         LR    GPR00P,@09                                          0667
*         CS(GPR14P,GPR00P,GPR15P->PABWEQA);                       0668
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0668
*         BC(7,FMZL1057);                                          0669
         BC    7,FMZL1057                                          0669
*         GPR14P->WKECHAIN=0;                                      0670
         SLR   @09,@09                                             0670
         ST    @09,WKECHAIN(,GPR14P)                               0670
*       END;                                                       0671
*ISTA0057:;                                                        0672
@RT00659 DS    0H                                                  0672
ISTA0057 DS    0H                                                  0673
*       GPR14P=GPR14P&FMZCB051;                                    0673
         N     GPR14P,@CF01324                                     0673
*       GPR01P->RPHWEA=GPR14P;                                     0674
         ST    GPR14P,RPHWEA(,GPR01P)                              0674
*       RFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;                  0675
*       END; /* END TPDEQ GENERATION *//*@D33SKXW*/                0676
*      CRRARPL=RPHWEA;                                             0677
         L     @15,RPHWEA(,PTRRPH)                                 0677
         ST    @15,CRRARPL(,PTRCRR)                                0677
*      END;                                                        0678
*    ELSE;                                                         0679
@RF00653 DS    0H                                                  0680
*   END;                        /* END BASIC          */           0680
*                                                                  0680
*IF RPHWEA = ZERO ×                                                0681
*  RPHWEA = GATE THEN                                              0681
@RC00590 L     @15,RPHWEA(,PTRRPH)                                 0681
         LTR   @15,@15                                             0681
         BZ    @RT00681                                            0681
         CL    @15,@CF01326                                        0681
         BNE   @RF00681                                            0681
@RT00681 DS    0H                                                  0682
*  DO;                                                             0682
*    CALL UNLOCK;                /* UNLOCK FMCB */                 0683
         BAL   @14,UNLOCK                                          0683
*    CRRSW5 = ON;               /* PREPARE TO TPEXIT */            0684
         OI    CRRSW5(PTRCRR),B'00000100'                          0684
*  END;                                                            0685
*ELSE;                                                             0686
@RF00681 DS    0H                                                  0687
* END;                                                             0687
*        ELSE;                                                     0688
@RF00588 DS    0H                                                  0689
*       END;                             /* END SET FMCB LOCKED FLAG */
*    ELSE CRRSW5 = ON;                  /* COULD NOT LOCK FMCB-TPEXIT*/
         B     @RC00585                                            0690
@RF00585 OI    CRRSW5(PTRCRR),B'00000100'                          0690
*   END;                              /*   END MJR NODE CB IS FMCB   */
*ELSE DO;                                                          0692
         B     @RC00570                                            0692
@RF00570 DS    0H                                                  0693
*  RFY ISTACDEB BASED (PTRDEB);                                    0693
*   PTRDEB=RPHMAJCB;                                               0694
         L     PTRDEB,RPHMAJCB-1(,PTRRPH)                          0694
         LA    PTRDEB,0(,PTRDEB)                                   0694
*   IF RPHWEA = ZERO ×                /* CHECK FOR WORK ELEMENT    */
*      RPHWEA = GATE THEN                                          0695
         L     @15,RPHWEA(,PTRRPH)                                 0695
         LTR   @15,@15                                             0695
         BZ    @RT00695                                            0695
         CL    @15,@CF01326                                        0695
         BNE   @RF00695                                            0695
@RT00695 DS    0H                                                  0696
*     DO;                            /* TRY AND FIND A WORK ELEMENT*/
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : NODEBEL                                           */
*/*                                                                  */
*/* FUNCTION :   TO FIND A WORK ELEMENT WHEN THE MAJOR NODE          */
*/*              CONTROL BLOCK IS AN ACDEB. IF THE REQUSET IS        */
*/*              RECORD MODE THE RTYPES OF THE RPLS ON THE WAIT      */
*/*              QUEUE ARE CHECKED AGAINST THE DATA TYPES ON THE     */
*/*              FMCB DATA QUEUES.  IN BASIC MODE THE OLDEST RPL     */
*/*              IS DEQUEUED.  IF NO RPLS ARE FOUND THEN CRRSW5      */
*/*              IS TURNED ON TO INDICATE A TPEXIT UPON RETURN.      */
*/*                                                                  */
*/* INPUT :THE ADDRESS OF THE ACDEB .                                */
*/*                                                                  */
*/*                                                                  */
*/* OUTPUT :CRRSW5 ON INDICATING TPEXIT OR AN RPL IN RPHWEA          */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/* MACROS USED :  TPDEQ,TPLOCK,TPUNLOCK                             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0697
*                                                                  0697
*/*LOCK ACDEB*/                                                    0697
*IF CRRDBLCK = OFF THEN     /*FINDLKDEB*/                          0697
         TM    CRRDBLCK(PTRCRR),B'00010000'                        0697
         BNZ   @RF00697                                            0697
*  DO;                                                             0698
*/*VMDESET  ((15),ZERO)*/                                          0699
*     DO;                                /* INVOKE MODESET MACRO    */
*       GEN;                                                       0700
*                                                                  0700
         MODESET EXTKEY=ZERO,WORKREG=2
*     RFY (GPR15P) RSTD;                                           0701
*       GPR15F=0;                                                  0702
*                                                                  0702
         SLR   GPR15F,GPR15F                                       0702
*     RFY (GPR15P) UNRSTD;               /*PUT RETURN CODE IN RCREG*/
*     END;  /* VMDESET */                                          0704
*                                                                  0704
*/*** START -TPLOCK (DEBLOCK)TYPE(XCLSIVE)- ***/                   0705
*     DO;                                                          0705
*     RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;        0706
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ACDLOCK);        /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ACDLOCK(,PTRDEB)                             0708
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0709
         L     GPR04P,RPHCRR(,GPR01P)                              0709
*        GPR00P = CRALMS05;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,16                                           0710
*        GPR03P = ADDR(GPR04P->CRAL5PTR);                          0711
         LA    GPR03P,CRAL5PTR(,GPR04P)                            0711
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*        GPR15P=ATCLCPTR->ATCAP36;      /*ADDRESS OF LOCK ROUTINE*/
         L     @05,ATCLCPTR                                        0712
         L     GPR15P,ATCAP36(,@05)                                0712
*        DCL FMZL0064 BASED(GPR15P) LABEL VALUERANGE(*);           0713
*        CALL FMZL0064;                                            0714
         BALR  @14,@15                                             0714
*        GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0715
*                                                                  0715
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*     RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;      0716
*        END;                                                      0717
*/*** END -TPLOCK (DEBLOCK)TYPE(XCLSIVE)- ***/                     0718
*     CRRDBLCK = ON;                                               0718
*                                                                  0718
         OI    CRRDBLCK(PTRCRR),B'00010000'                        0718
*/*VMDESET  ((15),ATCAM)*/                                         0719
*     DO;                                /* INVOKE MODESET MACRO    */
*       GEN;                                                       0720
*                                                                  0720
         MODESET EXTKEY=VTAM,WORKREG=2
*     RFY (GPR15P) RSTD;                                           0721
*       GPR15F=0;                                                  0722
*                                                                  0722
         SLR   GPR15F,GPR15F                                       0722
*     RFY (GPR15P) UNRSTD;               /*PUT RETURN CODE IN RCREG*/
*     END;  /* VMDESET */                                          0724
*  END;                                                            0725
*                                                                  0725
*PTRRPL = ACDRARQ;                /* GET RPL FROM DEB RA Q */      0726
*                                                                  0726
@RF00697 L     PTRRPL,ACDRARQ(,PTRDEB)                             0726
*DO WHILE PTRRPL^=ZERO &                                           0727
*        PTRRPL^=GATE & CRRARPL=ZERO;                              0727
         B     @DE00727                                            0727
@DL00727 DS    0H                                                  0728
*  IF(RPLDFASY=ON&ACDASFQ^=ZERO&ACDASFQ^=GATE) ×                   0728
*    (RPLRRESP=ON&ACDREFQ^=ZERO&ACDREFQ^=GATE) THEN                0728
         TM    RPLDFASY+16(PTRRPL),B'00000010'                     0728
         BNO   @GL00016                                            0728
         L     @15,ACDASFQ(,PTRDEB)                                0728
         LTR   @15,@15                                             0728
         BZ    @GL00016                                            0728
         CL    @15,@CF01326                                        0728
         BNE   @RT00728                                            0728
@GL00016 TM    RPLRRESP+16(PTRRPL),B'00001000'                     0728
         BNO   @RF00728                                            0728
         L     @15,ACDREFQ(,PTRDEB)                                0728
         LTR   @15,@15                                             0728
         BZ    @RF00728                                            0728
         CL    @15,@CF01326                                        0728
         BE    @RF00728                                            0728
@RT00728 DS    0H                                                  0729
*    CRRARPL=PTRRPL;                /*STORE MATCHED PAIR */        0729
         ST    PTRRPL,CRRARPL(,PTRCRR)                             0729
*  ELSE                                                            0730
*    DO;                          /* NO MATCH       */             0730
         B     @RC00728                                            0730
@RF00728 DS    0H                                                  0731
*      IF (RPLNFSYN = OFF ) &                         /*     @D31KKNL*/
*         (ACDRAFQ^=ZERO&ACDRAFQ^=GATE) THEN                       0731
         TM    RPLNFSYN+16(PTRRPL),B'00000100'                     0731
         BNZ   @RF00731                                            0731
         L     @15,ACDRAFQ(,PTRDEB)                                0731
         LTR   @15,@15                                             0731
         BZ    @RF00731                                            0731
         CL    @15,@CF01326                                        0731
         BE    @RF00731                                            0731
*         DO;                                                      0732
*           PTRFMCB=ACDRAFQ;        /*GET FMCB ADDRESS */          0733
         LR    PTRFMCB,@15                                         0733
*           IF RPLREQ='23'X THEN                                   0734
         CLI   RPLREQ(PTRRPL),35                                   0734
         BNE   @RF00734                                            0734
*              DO WHILE (PTRFMCB^=ZERO &                           0735
*                        PTRFMCB^= GATE) &                  /*@DM09850*
*                       (CRRARPL=ZERO ×                            0735
*                        CRRARPL=GATE);                            0735
         B     @DE00735                                            0735
@DL00735 DS    0H                                                  0736
*                 IF FMCMODE=FMCRCD THEN                           0736
         CLC   FMCMODE(8,PTRFMCB),@CC03734                         0736
         BNE   @RF00736                                            0736
*                    CRRARPL=PTRRPL;                               0737
         ST    PTRRPL,CRRARPL(,PTRCRR)                             0737
*                 ELSE PTRFMCB=FMCRAFM;                            0738
         B     @RC00736                                            0738
@RF00736 L     PTRFMCB,FMCRAFM(,PTRFMCB)                           0738
*              END;              /* END DO WHILE    */             0739
@RC00736 DS    0H                                                  0739
@DE00735 SLR   @15,@15                                             0739
         CR    PTRFMCB,@15                                         0739
         BE    @DC00735                                            0739
         L     @14,@CF01326                                        0739
         CLR   PTRFMCB,@14                                         0739
         BE    @DC00735                                            0739
         L     @09,CRRARPL(,PTRCRR)                                0739
         CR    @09,@15                                             0739
         BE    @DL00735                                            0739
         CLR   @09,@14                                             0739
         BE    @DL00735                                            0739
@DC00735 DS    0H                                                  0740
*           ELSE                                                   0740
*              DO WHILE (PTRFMCB^=ZERO &                           0740
*                        PTRFMCB^=GATE) &                   /*@DM09850*
*                       (CRRARPL=ZERO ×                            0740
*                        CRRARPL=GATE);                            0740
         B     @RC00734                                            0740
@RF00734 B     @DE00740                                            0740
@DL00740 DS    0H                                                  0741
*                 IF FMCMODE^=FMCRCD THEN                          0741
         CLC   FMCMODE(8,PTRFMCB),@CC03734                         0741
         BE    @RF00741                                            0741
*                    CRRARPL=PTRRPL;                               0742
         ST    PTRRPL,CRRARPL(,PTRCRR)                             0742
*                 ELSE PTRFMCB=FMCRAFM;                            0743
         B     @RC00741                                            0743
@RF00741 L     PTRFMCB,FMCRAFM(,PTRFMCB)                           0743
*              END;                                                0744
@RC00741 DS    0H                                                  0744
@DE00740 SLR   @15,@15                                             0744
         CR    PTRFMCB,@15                                         0744
         BE    @DC00740                                            0744
         L     @14,@CF01326                                        0744
         CLR   PTRFMCB,@14                                         0744
         BE    @DC00740                                            0744
         L     @09,CRRARPL(,PTRCRR)                                0744
         CR    @09,@15                                             0744
         BE    @DL00740                                            0744
         CLR   @09,@14                                             0744
         BE    @DL00740                                            0744
@DC00740 DS    0H                                                  0745
*         END;               /*DFSYN OR READ & FMCB  ON RD  ANY Q*/
*      ELSE;                                                       0746
@RF00731 DS    0H                                                  0747
*    END;                                                          0747
@RC00731 DS    0H                                                  0748
*  PTRRPL=RPLPLHPT;                 /* GET NEXT RPL      */        0748
@RC00728 L     PTRRPL,RPLPLHPT(,PTRRPL)                            0748
*END;                                                              0749
*                                                                  0749
@DE00727 SLR   @15,@15                                             0749
         CR    PTRRPL,@15                                          0749
         BE    @DC00727                                            0749
         CL    PTRRPL,@CF01326                                     0749
         BE    @DC00727                                            0749
         C     @15,CRRARPL(,PTRCRR)                                0749
         BE    @DL00727                                            0749
@DC00727 DS    0H                                                  0750
*IF CRRARPL^=ZERO &                                                0750
*  CRRARPL^=GATE THEN                                              0750
         L     @15,CRRARPL(,PTRCRR)                                0750
         LTR   @15,@15                                             0750
         BZ    @RF00750                                            0750
         L     @14,@CF01326                                        0750
         CLR   @15,@14                                             0750
         BE    @RF00750                                            0750
*  DO;                                                             0751
*                                                                  0751
*/* TPDEQ (CRRARPL,ACDRARQ)  */                                    0752
*     DO; /* BEGIN TPDEQ CODE GENERATION */                        0752
*     RFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;                      0753
*                                                                  0753
*     GPR15P=ADDR(ACDRARQ); /*ADDRESS QUEUE POINTER */             0754
         LA    GPR15P,ACDRARQ(,PTRDEB)                             0754
*     RFY (GPR02P,GPR03P) RSTD;                                    0755
*     STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                    0756
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0756
*     GPR03P=CRRARPL × FMZCA051;                                   0757
         L     @09,@CF01326                                        0757
         L     @08,CRRARPL(,PTRCRR)                                0757
         OR    @08,@09                                             0757
         LR    GPR03P,@08                                          0757
*     GPR14P=FMZCA051;                                             0758
         LR    GPR14P,@09                                          0758
*     GPR15P=ADDR(GPR15P->PABWEQA);                                0759
*     GPR02P=GPR15P->PABWEQA×FMZCA051;                             0760
         O     @09,PABWEQA(,GPR15P)                                0760
         LR    GPR02P,@09                                          0760
*     DO WHILE(GPR02P^=GPR14P);                                    0761
         B     @DE00761                                            0761
@DL00761 DS    0H                                                  0762
*FMZL2072:;                                                        0762
FMZL2072 DS    0H                                                  0763
*       IF GPR02P=GPR03P                                           0763
*       THEN DO;                                                   0763
         CR    GPR02P,GPR03P                                       0763
         BNE   @RF00763                                            0763
*         GPR00P=GPR02P->WKECHAIN;                                 0765
         L     GPR00P,WKECHAIN(,GPR02P)                            0765
*         CS(GPR02P,GPR00P,GPR15P->PABWEQA);                       0766
         CS    GPR02P,@00,PABWEQA(GPR15P)                          0766
*         BC(7,FMZL3072);                                          0767
         BC    7,FMZL3072                                          0767
*         GPR14P=GPR02P;                                           0768
         LR    GPR14P,GPR02P                                       0768
*         GPR14P->WKECHAIN=0;                                      0769
         SLR   @09,@09                                             0769
         ST    @09,WKECHAIN(,GPR14P)                               0769
*         END;                                                     0770
*       ELSE DO;                                                   0771
         B     @RC00763                                            0771
@RF00763 DS    0H                                                  0772
*         IF (GPR02P->WKECHAIN)=GPR14P                             0772
*         THEN                                                     0772
         L     @09,WKECHAIN(,GPR02P)                               0772
         CR    @09,GPR14P                                          0772
         BE    @RT00772                                            0772
*           GOTO ISTA0072;                                         0773
*         ELSE DO;                                                 0774
*           GPR15P=ADDR(GPR02P->WKECHAIN);                         0775
         LA    GPR15P,WKECHAIN(,GPR02P)                            0775
*           GPR02P=GPR02P->WKECHAIN;                               0776
         LR    GPR02P,@09                                          0776
*           GOTO FMZL2072;                                         0777
         B     FMZL2072                                            0777
*           END;                                                   0778
*         END;                                                     0779
*FMZL3072:;                                                        0780
@RC00763 DS    0H                                                  0780
FMZL3072 DS    0H                                                  0781
*     END;                                                         0781
@DE00761 CR    GPR02P,GPR14P                                       0781
         BNE   @DL00761                                            0781
*ISTA0072:;                                                        0782
ISTA0072 DS    0H                                                  0783
*     LM (GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                    0783
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0783
*     RFY (GPR02P,GPR03P) UNRSTD;                                  0784
*     GPR14P=GPR14P&FMZCB051;                                      0785
         N     GPR14P,@CF01324                                     0785
*     GPR01P->RPHWEA=GPR14P;                                       0786
         ST    GPR14P,RPHWEA(,GPR01P)                              0786
*     RFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;                    0787
*     END; /* END TPDEQ GENERATION */                              0788
*     CRRARPL=RPHWEA;                                              0789
         L     @15,RPHWEA(,PTRRPH)                                 0789
         ST    @15,CRRARPL(,PTRCRR)                                0789
*  END;                                                            0790
*ELSE CRRSW5=ON;                                                   0791
*                                                                  0791
         B     @RC00750                                            0791
@RF00750 OI    CRRSW5(PTRCRR),B'00000100'                          0791
*IF CRRDBLCK = ON THEN  /*UNLKDEB*/                                0792
@RC00750 TM    CRRDBLCK(PTRCRR),B'00010000'                        0792
         BNO   @RF00792                                            0792
*  DO;                                                             0793
*                                                                  0793
*/*VMDESET  ((15),ZERO)*/                                          0794
*      DO;                               /* INVOKE MODESET MACRO    */
*        GEN;                                                      0795
*                                                                  0795
         MODESET EXTKEY=ZERO,WORKREG=2
*      RFY (GPR15P) RSTD;                                          0796
*        GPR15F=0;                                                 0797
*                                                                  0797
         SLR   GPR15F,GPR15F                                       0797
*      RFY (GPR15P) UNRSTD;              /*PUT RETURN CODE IN RCREG*/
*      END;  /* VMDESET */                                         0799
*     CRRDBLCK=OFF;                                                0800
*                                                                  0800
         NI    CRRDBLCK(PTRCRR),B'11101111'                        0800
*/*** START -TPUNLOCK (DEBLOCK)- ***/                              0801
*      DO;                                                         0801
*                                                                  0801
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)  */                             0802
*/* END OF ATBUILD */                                              0802
*                                                                  0802
*      RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;       0802
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ACDLOCK);        /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ACDLOCK(,PTRDEB)                             0804
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0805
         L     GPR04P,RPHCRR(,GPR01P)                              0805
*        GPR00P = CRALMS05;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,16                                           0806
*        GPR03P = ADDR(GPR04P->CRAL5PTR);                          0807
         LA    GPR03P,CRAL5PTR(,GPR04P)                            0807
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*                                                                  0808
*      DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */               0808
*        GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/               0809
         L     GPR15P,ATCLCPTR                                     0809
*      END; /*LISATCVT*/                                           0810
*        GPR15P=GPR15P->ATCAP33;                                   0811
         L     GPR15P,ATCAP33(,GPR15P)                             0811
*        DCL FMZL0081 BASED(GPR15P) LABEL VALUERANGE(*);           0812
*        CALL FMZL0081;                                            0813
         BALR  @14,@15                                             0813
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0814
*                                                                  0814
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*      RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;     0815
*        END;                                                      0816
*/*** END -TPUNLOCK (DEBLOCK)- ***/                                0817
*                                                                  0817
*/*VMDESET  ((15),VTAM)*/                                          0817
*      DO;                               /* INVOKE MODESET MACRO    */
*        GEN;                                                      0818
*                                                                  0818
         MODESET EXTKEY=VTAM,WORKREG=2
*      RFY (GPR15P) RSTD;                                          0819
*        GPR15F=0;                                                 0820
*                                                                  0820
         SLR   GPR15F,GPR15F                                       0820
*      RFY (GPR15P) UNRSTD;              /*PUT RETURN CODE IN RCREG*/
*      END;  /* VMDESET */                                         0822
*  END;                                                            0823
*  END;/*END NODEBEL*/                                             0824
*   ELSE;                                                          0825
@RF00695 DS    0H                                                  0826
*  END;                                                            0826
*                                                                  0826
*                                                                  0826
@RC00695 DS    0H                                                  0827
*IF CRRSW5 = OFF THEN               /* NO TPEXIT INDICATED           */
@RC00570 TM    CRRSW5(PTRCRR),B'00000100'                          0827
         BNZ   @RF00827                                            0827
*  DO;                              /* DO - NOT A TPEXIT             */
*   RFY IFGRPL BASED (RPHWEA);      /* ADDRESS THE RPL               */
*   CRRLCPB=ZERO;                   /* CLEAR THE LCPB PTR IN CRR     */
         SLR   @15,@15                                             0830
         ST    @15,CRRLCPB(,PTRCRR)                                0830
*   CRRARPL=ADDR(IFGRPL);           /* PLACE RPL ADDRESS IN CRR      */
         L     @15,RPHWEA(,PTRRPH)                                 0831
         ST    @15,CRRARPL(,PTRCRR)                                0831
*   CRRREQP=ON;                    /* INDICATE A REQUEST MADE       */
*                                                                  0832
         OI    CRRREQP(PTRCRR),B'00000010'                         0832
*/*       HERE A CHECK IS MADE FOR A VALID REQUEST                   */
*                                                                  0833
*   IF RPLREQ<'11'X×                                               0833
*      RPLREQ>'24'X×                                               0833
*     (RPLREQ>'13'X & RPLREQ<'1D'X) ×                              0833
*     (RPLREQ>'1E'X & RPLREQ < '22'X) THEN                         0833
         CLI   RPLREQ(@15),17                                      0833
         BL    @RT00833                                            0833
         CLI   RPLREQ(@15),36                                      0833
         BH    @RT00833                                            0833
         CLI   RPLREQ(@15),19                                      0833
         BNH   @GL00032                                            0833
         CLI   RPLREQ(@15),29                                      0833
         BL    @RT00833                                            0833
@GL00032 L     @15,RPHWEA(,PTRRPH)                                 0833
         CLI   RPLREQ(@15),30                                      0833
         BNH   @RF00833                                            0833
         CLI   RPLREQ(@15),34                                      0833
         BNL   @RF00833                                            0833
@RT00833 DS    0H                                                  0834
*      DO;                              /* DO INVALID REQUEST        */
*       CRRRTNCD=CRRLOGIC;                                         0835
         MVI   CRRRTNCD(PTRCRR),X'08'                              0835
*       CRRFDB2=CRRCRIRT;                                          0836
         MVI   CRRFDB2(PTRCRR),X'1C'                               0836
*       CRRFMCB=RPHMAJCB;/*@AS09500*/                              0837
         L     @15,RPHMAJCB-1(,PTRRPH)                             0837
         LA    @15,0(,@15)                                         0837
         ST    @15,CRRFMCB(,PTRCRR)                                0837
*      END;                            /* END INVALID REQUEST        */
*   ELSE DO;                           /* DO VALID REQUEST           */
         B     @RC00833                                            0839
@RF00833 DS    0H                                                  0840
*         CRRSW1=OFF;                                              0840
*                                                                  0840
         NI    CRRSW1(PTRCRR),B'10111111'                          0840
*/* CRRSW1 IS SET IF THE REQUEST IS A SOLICIT ALL, RECEIVE ANY, OR READ
*   ANY                                                              */
*                                                                  0841
*        IF RPLREQ='1E'X×                                          0841
*            RPLREQ='23'X×                                         0841
*            RPLREQ='1D'X THEN                                     0841
         L     @15,RPHWEA(,PTRRPH)                                 0841
         CLI   RPLREQ(@15),30                                      0841
         BE    @RT00841                                            0841
         CLI   RPLREQ(@15),35                                      0841
         BE    @RT00841                                            0841
         CLI   RPLREQ(@15),29                                      0841
         BNE   @RF00841                                            0841
@RT00841 DS    0H                                                  0842
*            IF RPHMAJCB->ACDTYPE=ACDID THEN                       0842
         L     @15,RPHMAJCB-1(,PTRRPH)                             0842
         LA    @15,0(,@15)                                         0842
         CLI   ACDTYPE(@15),X'0F'                                  0842
         BNE   @RF00842                                            0842
*               CRRSW1=ON;                                         0843
         OI    CRRSW1(PTRCRR),B'01000000'                          0843
*            ELSE;                                                 0844
@RF00842 DS    0H                                                  0845
*         ELSE IF RPHMAJCB->FMCTYPE=FMTYPE THEN;                   0845
         B     @RC00841                                            0845
@RF00841 L     @15,RPHMAJCB-1(,PTRRPH)                             0845
         LA    @15,0(,@15)                                         0845
         CLI   FMCTYPE(@15),X'03'                                  0845
         BE    @RT00845                                            0845
*              ELSE DO;          /*DO - NOT ACDEB,NOT FMCB  */     0847
*                    CRRRTNCD=CRRLOGIC;                            0848
         MVI   CRRRTNCD(PTRCRR),X'08'                              0848
*                    CRRFDB2=CRRCRIRT;                             0849
         MVI   CRRFDB2(PTRCRR),X'1C'                               0849
*                    CRRSW1=ON;                                    0850
         OI    CRRSW1(PTRCRR),B'01000000'                          0850
*                    CRRFMCB=ZERO;                                 0851
         SLR   @15,@15                                             0851
         ST    @15,CRRFMCB(,PTRCRR)                                0851
*                   END;         /* END - NOT ACDEB,NOT FMCB  */   0852
*                                                                  0852
*/* THE BUFPURGE SUBROUTINE IS AALLED IF THE REQUEST ISN'T AN 'ANY'
*    TYPE REQUEST                                                    */
*                                                                  0853
*         IF CRRSW1=OFF THEN                                       0853
@RT00845 DS    0H                                                  0853
@RC00841 TM    CRRSW1(PTRCRR),B'01000000'                          0853
         BNZ   @RF00853                                            0853
*      DO;/*      BUFPURGE*/                                       0854
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : BUFPURGE                                          */
*/*                                                                  */
*/* FUNCTION :  TO RELINQUISH CONTROL TO PURGE OUTBOUND THRU TPDVTS  */
*/*             AND TO CALL THE BUFFER TRACE ROUTINE WHEN THE        */
*/*             BUFFER TRACE ACTIVE FLAG IS ON IN THE FMCB.          */
*/*             BUFFER TRACE IS ONLY CALLED FOR SEND,WRITE OR DO     */
*/*             COMMANDS.                                            */
*/* INPUT :FMCFLGA4 FLAG FOR PURGE                                   */
*/*        FMCZF007 FLAG FOR BUFFER TRACE                            */
*/*                                                                  */
*/* OUTPUT :  CRRSW6 ON TO INDICATE TPDVTS FOR PURGE                 */
*/*                                                                  */
*/* SUBROUTINES CALLED :  UNLOCK                                     */
*/*                                                                  */
*/* MACROS USED :  NONE                                              */
*/*                                                                  */
*/********************************************************************/
*CRRFMCB=ZERO;                                                     0855
         SLR   @15,@15                                             0855
         ST    @15,CRRFMCB(,PTRCRR)                                0855
*IF FMCFLGA4=ON THEN                                               0856
         TM    FMCFLGA4(PTRFMCB),B'00001000'                       0856
         BNO   @RF00856                                            0856
*  DO;                                                             0857
*    CALL UNLOCK;                                                  0858
         BAL   @14,UNLOCK                                          0858
*    CRRSW6=ON;                                                    0859
         OI    CRRSW6(PTRCRR),B'00000010'                          0859
*    ADDRDVT=ADDR(DVTPURGE);                                       0860
         LA    ADDRDVT,DVTPURGE                                    0860
*  END;                                                            0861
*                                                                  0861
*ELSE                                                              0862
*  DO;                                                             0862
         B     @RC00856                                            0862
@RF00856 DS    0H                                                  0863
*    IF FMCZF007 = ON &                                            0863
*       (RPLREQ = '11'X ×                                          0863
*        RPLREQ = '13'X    ×                                       0863
*        RPLREQ = '22'X) THEN                                      0863
         TM    FMCZF007(PTRFMCB),B'00000100'                       0863
         BNO   @RF00863                                            0863
         L     @15,RPHWEA(,PTRRPH)                                 0863
         CLI   RPLREQ(@15),17                                      0863
         BE    @RT00863                                            0863
         CLI   RPLREQ(@15),19                                      0863
         BE    @RT00863                                            0863
         CLI   RPLREQ(@15),34                                      0863
         BNE   @RF00863                                            0863
@RT00863 DS    0H                                                  0864
*       DO;                                                        0864
*  GEN REFS(R14,R12,CRRSAVE) SETS(CRRSAVE)                         0865
*  ( STM  R14,R12,CRRSAVE+12(R13));  /* SAVE REGISTERS          */ 0865
          STM  R14,R12,CRRSAVE+12(R13)
*  RFY (R02,R06,R14,R15) RSTD;    /* REQUIRED FOR CALLING SEQK0860 */
*  R02=PTRFMCB;                            /* SAVE FMCB PTR  @DM12472*/
         LR    R02,PTRFMCB                                         0867
*  R06 = CRRARPL;                 /* GET ADDRESS OF RPL            */
         L     R06,CRRARPL(,PTRCRR)                                0868
*  R06 = R06&HIZERO;              /* SET HIGH ORDER BYTE TO ZERO   */
         N     R06,@CF04362                                        0869
*  R15 = CRRATCVT->ATCBFTRC;      /* ADDRESS TRACE ROUTINE    */   0870
         L     @03,CRRATCVT(,PTRCRR)                               0870
         L     R15,ATCBFTRC(,@03)                                  0870
*  GEN (BALR R14,R15)             /* CALL THE                 */   0871
*  SETS(R14) REFS(R15);          /*  BUFFER TRACE ROUTINE    */    0871
         BALR R14,R15
*  RFY (R02,R06,R14,R15) UNRSTD;      /* END OF CALL SEQUENCE    */
*                                                                  0872
*  PTRCRR=ADDR(CRRSPACE);           /*REBASE THE CRR          @DM09781*
*                                                                  0873
         L     PTRCRR,RPHCRR(,PTRRPH)                              0873
         LA    PTRCRR,CRRSPACE+312(,PTRCRR)                        0873
*  GEN REFS(CRRSAVE,R13) SETS(R14,R12)                             0874
*  ( LM  R14,R12,CRRSAVE+12(R13));  /* RESTORE REGISTERS        */ 0874
          LM  R14,R12,CRRSAVE+12(R13)
*     END;                                                         0875
*  ELSE;                                                           0876
@RF00863 DS    0H                                                  0877
* END;                    /* END - PURGE NOT IN PROGRESS */        0877
* END;                                                             0878
*         ELSE;                                                    0879
@RF00853 DS    0H                                                  0880
*         IF CRRSW6=OFF THEN                                       0880
@RC00853 TM    CRRSW6(PTRCRR),B'00000010'                          0880
         BNZ   @RF00880                                            0880
*            DO;                                                   0881
*             IF (RPLREQ='1D'X×RPLREQ='23'X)&              /*@DM08360*/
*                 RPHMAJCB->ACDTYPE=ACDID THEN;            /*@DM08360*/
         L     @15,RPHWEA(,PTRRPH)                                 0882
         CLI   RPLREQ(@15),29                                      0882
         BE    @GL00042                                            0882
         CLI   RPLREQ(@15),35                                      0882
         BNE   @RF00882                                            0882
@GL00042 L     @15,RPHMAJCB-1(,PTRRPH)                             0882
         LA    @15,0(,@15)                                         0882
         CLI   ACDTYPE(@15),X'0F'                                  0882
         BE    @RT00882                                            0882
*          ELSE DO;                   /*DO - NOT RCV ANY OR READ ANY */
@RF00882 DS    0H                                                  0885
*                IF RPLREQ^='23'X & RPLREQ^='24'X THEN             0885
         L     @15,RPHWEA(,PTRRPH)                                 0885
         CLI   RPLREQ(@15),35                                      0885
         BE    @RF00885                                            0885
         CLI   RPLREQ(@15),36                                      0885
         BE    @RF00885                                            0885
*                IF RPLREQ^='23'X THEN                             0886
         CLI   RPLREQ(@15),35                                      0886
         BE    @RF00886                                            0886
*             DO;/*      NRCRDANY*/                                0887
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME :NRCRDANY                                           */
*/*                                                                  */
*/* FUNCTION :  TO BUILD AN LCPB FOR ALL REQUESTS EXCEPT RECEIVES    */
*/*             AND READ ANY'S. FOR SOLICITALL REQUESTS THAT HAVE    */
*/*             NOT YET BEEN PROCESSED FOR THE FIRST FMCB, IT GETS   */
*/*             AN FMCB FOR SOLICIT ALL TO PROCESS FROM THE ACDEB.   */
*/* INPUT :RPH IN REG 1                                              */
*/*                                                                  */
*/*                                                                  */
*/* OUTPUT :  AN INITIALIZED LCPB, AND , FOR A SOLICIT ALL, AN FMCB  */
*/*           TO PROCESS.                                            */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/* MACROS USED :  REQSTORE,TPUNLOCK,TPLOCK                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0888
*RFY R15 RSTD;                                                     0888
* /*REQSTORE CBID(DCLCP)RPH(PTRRPH)CLEAR(YES)SAVE(YES)*/           0889
*  DO;                                                             0889
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)  */                         0890
*/* END OF ATBUILD */                                              0890
*                                                                  0890
* RFY (GPR02P,GPR03P,GPR04P,GPR15P) RSTD;                          0890
*                                                                  0890
* RFY (GPR01P,GPR13P) RSTD;                                        0891
*          GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);      0892
*                                                                  0892
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
* RFY (GPR01P,GPR13P) UNRSTD;                                      0893
*                                                                  0893
* DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                    0894
*   GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                    0895
         L     GPR15P,ATCLCPTR                                     0895
* END; /*LISATCVT*/                                                0896
*          GPR02P=GPR15P->ATCBPDA × '80000000'X;                   0897
         L     GPR02P,ATCBPDA(,GPR15P)                             0897
         O     GPR02P,@CF01326                                     0897
*          DCL 1 FMZA0094 FIXED(31) STATIC LOCAL,                  0898
*              2 *        FIXED(8) INIT(184),                      0898
*              2 *        PTR(24) INIT(0);                         0898
*          GPR03F=FMZA0094;                                        0899
         L     GPR03F,FMZA0094                                     0899
*          GPR04F=5;                                               0900
         LA    GPR04F,5                                            0900
*          GPR15P=GPR15P->ATCSMRQ;                                 0901
         L     GPR15P,ATCSMRQ(,GPR15P)                             0901
*          DCL FMZL0094 BASED(GPR15P) LABEL VALUERANGE(*);         0902
*          CALL FMZL0094;                                          0903
*                                                                  0903
         BALR  @14,@15                                             0903
* RFY (GPR13P) RSTD;                                               0904
*          GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);      0905
*                                                                  0905
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
* RFY (GPR13P) UNRSTD;                                             0906
*                                                                  0906
* RFY (GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;                        0907
* END ;    /********* END OF REQSTORE EXPANSION **********/        0908
*IF R15 = RCTPWAIT THEN                                            0909
*                                                                  0909
         C     R15,@CF00038                                        0909
         BNE   @RF00909                                            0909
*/*  TPWAIT   */                                                   0910
*   DO; /* BEGIN TPWAIT GENERATION*/                               0910
*   RFY (GPR01P,GPR14P,GPR15P) RSTD;                               0911
*   RFY (GPR00P) RSTD;                                             0912
*   GEN (STM   GPR00P,GPR15P,RPHWORK(GPR01P))                      0913
*   REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);                      0913
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*   RFY (GPR00P) UNRSTD;                                           0914
*   GPR15P=ADDR(LHAA0113);                                         0915
         LA    GPR15P,LHAA0113                                     0915
*   GPR14P=0;                                                      0916
         SLR   GPR14P,GPR14P                                       0916
*   GPR15P=GPR15P & '00FFFFFF'X;                                   0917
         N     GPR15P,@CF04362                                     0917
*   GPR15P=GPR15P × RPHWT1;                                        0918
         O     GPR15P,@CF01350                                     0918
*   CS (GPR14P,GPR15P,GPR01P->RPHRESMA);                           0919
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0919
*   BC (7,LHAB0113);                                               0920
*                                                                  0920
         BC    7,LHAB0113                                          0920
*/* TPEXIT  NONE */                                                0921
*   DO;                                                            0921
*     RESPECIFY GPR15P RSTD;                                       0922
*                                                                  0922
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)  */                         0923
*/* END OF ATBUILD */                                              0923
*                                                                  0923
*   DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                  0923
*     GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0924
         L     GPR15P,ATCLCPTR                                     0924
*   END; /*LISATCVT*/                                              0925
*     RESPECIFY GPR00F RSTD;                                       0926
*     GPR00F=0;     /*SET PARAMETER REGISTER TO 0*/                0927
         SLR   GPR00F,GPR00F                                       0927
*     GPR15P=GPR15P->ATCAP31;                                      0928
         L     GPR15P,ATCAP31(,GPR15P)                             0928
*     DCL FMZL0118 BASED(GPR15P) LABEL VALUERANGE(*);              0929
*     CALL FMZL0118;                                               0930
         BALR  @14,@15                                             0930
*     RESPECIFY (GPR00F,GPR15P) UNRSTD;                            0931
*   END; /***** END OF TPEXIT  *****/                              0932
*LHAB0113:;                                                        0933
LHAB0113 DS    0H                                                  0934
*   GPR01P->RPHRESMA = 0;                                          0934
         SLR   @09,@09                                             0934
         ST    @09,RPHRESMA(,GPR01P)                               0934
*   RFY (GPR00P) RSTD;                                             0935
*LHAA0113:;                                                        0936
LHAA0113 DS    0H                                                  0937
*   GEN (LM    GPR00P,GPR15P,RPHWORK(GPR01P))                      0937
*   REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);                      0937
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*   RFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;                      0938
*   END; /*****END OF TPWAIT *****/                                0939
*ELSE;                                                             0940
@RF00909 DS    0H                                                  0941
*RFY R15 UNRSTD;                                                   0941
*PTRLCPB=RPHSRPRM;                                                 0942
         L     PTRLCPB,RPHSRPRM(,PTRRPH)                           0942
*RFY ISTDCLCP BASED(PTRLCPB);                                      0943
*RFY ISTLCPB BASED (ADDR(DCLLCPB));                                0944
*CRRLCPB=ADDR(ISTDCLCP);                                           0945
         ST    PTRLCPB,CRRLCPB(,PTRCRR)                            0945
*RFY IFGRPL BASED(RPHWEA);                                         0946
*                                                                  0946
*                                                                  0946
*IF CRRRTNCD = ZERO THEN                                           0947
         CLI   CRRRTNCD(PTRCRR),0                                  0947
         BNE   @RF00947                                            0947
*  DO;                      /* DO - NO ERROR HAS OCCURRED */       0948
*    DCLRQTP=RPLREQ;                                               0949
         L     @15,RPHWEA(,PTRRPH)                                 0949
         MVC   DCLRQTP(1,PTRLCPB),RPLREQ(@15)                      0949
*    DCLRPLA=CRRARPL;                                              0950
         L     @15,CRRARPL(,PTRCRR)                                0950
         ST    @15,DCLRPLA(,PTRLCPB)                               0950
*    LCPTYPE=DCLTYPE;                                              0951
         MVI   LCPTYPE(PTRLCPB),X'12'                              0951
*    LCPLNGTH=LENGTH(ISTDCLCP);                                    0952
         MVI   LCPLNGTH(PTRLCPB),X'64'                             0952
*    LCPNXLCW=ADDR(LCPLCCW);                                       0953
         LA    @15,LCPLCCW(,PTRLCPB)                               0953
         ST    @15,LCPNXLCW(,PTRLCPB)                              0953
*    CRRCLCCW=ADDR(LCPLCCW);                                       0954
         ST    @15,CRRCLCCW(,PTRCRR)                               0954
*    IF DCLRQTP='1E'X &                                            0955
*       RPHMAJCB->ACDTYPE=ACDID THEN                               0955
         CLI   DCLRQTP(PTRLCPB),X'1E'                              0955
         BNE   @RF00955                                            0955
         L     @15,RPHMAJCB-1(,PTRRPH)                             0955
         LA    @15,0(,@15)                                         0955
         CLI   ACDTYPE(@15),X'0F'                                  0955
         BNE   @RF00955                                            0955
*       DO;                 /* DO - SOLICIT ALL            */      0956
*         DCLBNSP = ON;                                            0957
         OI    DCLBNSP(PTRLCPB),B'00000001'                        0957
*         IF CRRSW2 = OFF THEN                                     0958
         TM    CRRSW2(PTRCRR),B'00100000'                          0958
         BNZ   @RF00958                                            0958
*            DO;            /* DO - NOT 1ST SOLICIT ALL    */      0959
*              PTRDEB = RPHMAJCB;                                  0960
         LR    PTRDEB,@15                                          0960
*              RFY ISTACDEB BASED(PTRDEB);                         0961
*                                                                  0961
*/*VMDESET  ((15),ZERO)*/                                          0962
*               DO;                      /* INVOKE MODESET MACRO    */
*                 GEN;                                             0963
*                                                                  0963
         MODESET EXTKEY=ZERO,WORKREG=2
*               RFY (GPR15P) RSTD;                                 0964
*                 GPR15F=0;                                        0965
*                                                                  0965
         SLR   GPR15F,GPR15F                                       0965
*               RFY (GPR15P) UNRSTD;     /*PUT RETURN CODE IN RCREG*/
*               END;  /* VMDESET */                                0967
*                                                                  0967
*/*** START -TPLOCK (DEBLOCK)- ***/                                0968
*               DO;                                                0968
*               RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ACDLOCK);        /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ACDLOCK(,PTRDEB)                             0971
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0972
         L     GPR04P,RPHCRR(,GPR01P)                              0972
*        GPR00P = CRALMS05;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,16                                           0973
*        GPR03P = ADDR(GPR04P->CRAL5PTR);                          0974
         LA    GPR03P,CRAL5PTR(,GPR04P)                            0974
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*        GPR15P=ATCLCPTR->ATCAP35;      /*ADDRESS OF LOCK ROUTINE*/
         L     @05,ATCLCPTR                                        0975
         L     GPR15P,ATCAP35(,@05)                                0975
*        DCL FMZL0131 BASED(GPR15P) LABEL VALUERANGE(*);           0976
*        CALL FMZL0131;                                            0977
         BALR  @14,@15                                             0977
*        GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0978
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*               RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;
*        END;                                                      0980
*/*** END -TPLOCK (DEBLOCK)- ***/                                  0981
*                    CRRDBLCK=ON;           /*DEB LOCKED     @DM12428*/
         OI    CRRDBLCK(PTRCRR),B'00010000'                        0981
*              PTRFMCB = ACDFMCB;                                  0982
*                                                                  0982
         L     PTRFMCB,ACDFMCB(,PTRDEB)                            0982
*/*VMDESET  ((15),VTAM)*/                                          0983
*               DO;                      /* INVOKE MODESET MACRO    */
*                 GEN;                                             0984
*                                                                  0984
         MODESET EXTKEY=VTAM,WORKREG=2
*               RFY (GPR15P) RSTD;                                 0985
*                 GPR15F=0;                                        0986
*                                                                  0986
         SLR   @14,@14                                             0986
         LR    GPR15F,@14                                          0986
*               RFY (GPR15P) UNRSTD;     /*PUT RETURN CODE IN RCREG*/
*               END;  /* VMDESET */                                0988
*              RFY ISTFMCB BASED(PTRFMCB);                         0989
*              IF PTRFMCB^=ZERO THEN                               0990
         CR    PTRFMCB,@14                                         0990
         BE    @RF00990                                            0990
*                 CRRFMCB = ADDR(ISTFMCB);                         0991
         ST    PTRFMCB,CRRFMCB(,PTRCRR)                            0991
*              ELSE                                                0992
*                 DO;                /* DO - NO FMCB OFF ACDEB*/   0992
*                                                                  0992
         B     @RC00990                                            0992
@RF00990 DS    0H                                                  0993
*/*VMDESET  ((15),ZERO)*/                                          0993
*                    DO;                 /* INVOKE MODESET MACRO    */
*                      GEN;                                        0994
*                                                                  0994
         MODESET EXTKEY=ZERO,WORKREG=2
*                    RFY (GPR15P) RSTD;                            0995
*                      GPR15F=0;                                   0996
*                                                                  0996
         SLR   GPR15F,GPR15F                                       0996
*                    RFY (GPR15P) UNRSTD;/*PUT RETURN CODE IN RCREG*/
*                    END;  /* VMDESET */                           0998
*                                                                  0998
*/*** START -TPUNLOCK (DEBLOCK)- ***/                              0999
*                    DO;                                           0999
*                                                                  0999
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)  */                             1000
*/* END OF ATBUILD */                                              1000
*                    RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RS
*D;      GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ACDLOCK);        /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ACDLOCK(,PTRDEB)                             1002
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 1003
         L     GPR04P,RPHCRR(,GPR01P)                              1003
*        GPR00P = CRALMS05;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,16                                           1004
*        GPR03P = ADDR(GPR04P->CRAL5PTR);                          1005
         LA    GPR03P,CRAL5PTR(,GPR04P)                            1005
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*                                                                  1006
*                    DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */ 1006
*                      GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/ 1007
         L     GPR15P,ATCLCPTR                                     1007
*                    END; /*LISATCVT*/                             1008
*        GPR15P=GPR15P->ATCAP33;                                   1009
         L     GPR15P,ATCAP33(,GPR15P)                             1009
*        DCL FMZL0142 BASED(GPR15P) LABEL VALUERANGE(*);           1010
*        CALL FMZL0142;                                            1011
         BALR  @14,@15                                             1011
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      1012
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*                    RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UN
*STD;    END;                                                      1013
*/*** END -TPUNLOCK (DEBLOCK)- ***/                                1015
*                  CRRDBLCK=OFF;          /* DEB UNLOCKED    @DM12428*/
*                                                                  1015
         NI    CRRDBLCK(PTRCRR),B'11101111'                        1015
*/*VMDESET  ((15),VTAM)*/                                          1016
*                    DO;                 /* INVOKE MODESET MACRO    */
*                      GEN;                                        1017
*                                                                  1017
         MODESET EXTKEY=VTAM,WORKREG=2
*                    RFY (GPR15P) RSTD;                            1018
*                      GPR15F=0;                                   1019
*                                                                  1019
         SLR   GPR15F,GPR15F                                       1019
*                    RFY (GPR15P) UNRSTD;/*PUT RETURN CODE IN RCREG*/
*                    END;  /* VMDESET */                           1021
*                 END;               /* END - NO FMCB OFF ACDEB*/  1022
*             END;            /* END - NOT 1ST SOLICIT ALL PASS */ 1023
*           ELSE;                                                  1024
@RF00958 DS    0H                                                  1025
*         END;               /* END - SOLICIT ALL                */
*      ELSE                                                        1026
*         DO;                /* DO - NOT SOLICIT ALL           */  1026
         B     @RC00955                                            1026
@RF00955 DS    0H                                                  1027
*           PTRFMCB = RPHMAJCB;                                    1027
         L     PTRFMCB,RPHMAJCB-1(,PTRRPH)                         1027
         LA    PTRFMCB,0(,PTRFMCB)                                 1027
*           RFY ISTFMCB BASED(PTRFMCB);                            1028
*           RFY PTRDNCB RSTD;                                      1029
*           PTRDNCB=FMCDNCBA;                                      1030
         L     PTRDNCB,FMCDNCBA(,PTRFMCB)                          1030
*           RFY ISTDNCB BASED(PTRDNCB);                            1031
*           RFY ISTNCB BASED (ADDR(DNCNCB));                       1032
*           LCPSAF = FMCSAF;                                       1033
         MVC   LCPSAF(2,PTRLCPB),FMCSAF(PTRFMCB)                   1033
*           LCPDAF = NCBDAF;                                       1034
         MVC   LCPDAF(2,PTRLCPB),NCBDAF(PTRDNCB)                   1034
*           RFY PTRDNCB UNRSTD;                                    1035
*           RFY (ISTDNCB,ISTNCB);                                  1036
*           IF FMCFLGA1=ON THEN                                    1037
         TM    FMCFLGA1(PTRFMCB),B'01000000'                       1037
         BNO   @RF01037                                            1037
*              CRRSTSPR = ON;                                      1038
         OI    CRRSTSPR(PTRCRR),B'00100000'                        1038
*           ELSE CRRSTSPR = OFF;                                   1039
         B     @RC01037                                            1039
@RF01037 NI    CRRSTSPR(PTRCRR),B'11011111'                        1039
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME :  NESTCH1                                          */
*/*                                                                  */
*/* FUNCTION :  THIS SUBROUTINE PROCESSES LDOS BY MOVING THE LDO     */
*/*              COMMAND INTO THE LCCW.  FOR READ COMMANDS IT ALSO   */
*/*              CHECKS TO SEE WHETHER THERE IS DATA PRESENT AND     */
*/*              WHETHER THERE IS AN OLDER RPL ON THE WAIT Q WHICH   */
*/*             SHOULD BE HONORED FIRST.  IN THAT CASE THE PRESENT   */
*/*             RPL IS QUEUED AND THE OLDEST RPL IS DEQUEUED         */
*/* INPUT :ADDRESS OF RPL,LDO,CRR AND FMCB                           */
*/*                                                                  */
*/*                                                                  */
*/* OUTPUT :  AN LCCW CONTAINING THE LDO COMMAND OR                  */
*/*            A DEQUEUED RPL OR                                     */
*/*            ERROR CODES IN THE CRR INDICATING AN INVALID          */
*/*            CONDITION                                             */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/* MACROS USED :  TPQUE  ,VMDESET                                   */
*/*                                                                  */
*/********************************************************************/
*                                   /* RESTRICT POINTER REGISTERS    */
*RFY (PTRRPH,PTRRPL,PTRLCPB,PTRLDO,PTRFMCB,PTRCRR) RSTD;           1040
@RC01037 DS    0H                                                  1041
*RFY ISTLDO BASED(PTRLDO);                                         1041
*RFY ISTLCCW BASED (ADDR(LCPLCCW));   /* ADDRESS THE LCCW           */
*IF DCLRQTP ^='22'X THEN                     /*@DM08463*/          1043
         CLI   DCLRQTP(PTRLCPB),X'22'                              1043
         BE    @RF01043                                            1043
* DO;                                 /* DO REQUEST NOT A SEND       */
* IF DCLRQTP='13'X THEN               /* IF REQUEST WAS FOR A 'DO'   */
         CLI   DCLRQTP(PTRLCPB),X'13'                              1045
         BNE   @RF01045                                            1045
*  DO;                                                             1046
*   CRRCLDO=RPLAREA;                  /* PUT LDO ADDRESS IN THE CRR  */
         L     @02,RPHWEA(,PTRRPH)                                 1047
         L     @02,RPLAREA(,@02)                                   1047
         ST    @02,CRRCLDO(,PTRCRR)                                1047
*   PTRLDO=CRRCLDO;                   /* SET UP POINTER TO THE LDO   */
*                                                                  1048
         LR    PTRLDO,@02                                          1048
*/*VMDESET  ((15),ZERO)*/                                          1049
*  DO;                                   /* INVOKE MODESET MACRO    */
*    GEN;                                                          1050
*                                                                  1050
         MODESET EXTKEY=ZERO,WORKREG=2
*  RFY (GPR15P) RSTD;                                              1051
*    GPR15F=0;                                                     1052
*                                                                  1052
         SLR   GPR15F,GPR15F                                       1052
*  RFY (GPR15P) UNRSTD;                  /*PUT RETURN CODE IN RCREG*/
*  END;  /* VMDESET */                                             1054
*   LCCWOP=LDOCMD;                    /* MOVE THE COMMAND TO THE LCCW*/
*                                                                  1055
         MVC   LCCWOP+48(1,PTRLCPB),LDOCMD(PTRLDO)                 1055
*/*VMDESET  ((15),VTAM)*/                                          1056
*   DO;                                  /* INVOKE MODESET MACRO    */
*     GEN;                                                         1057
*                                                                  1057
         MODESET EXTKEY=VTAM,WORKREG=2
*   RFY (GPR15P) RSTD;                                             1058
*     GPR15F=0;                                                    1059
*                                                                  1059
         SLR   GPR15F,GPR15F                                       1059
*   RFY (GPR15P) UNRSTD;                 /*PUT RETURN CODE IN RCREG*/
*   END;  /* VMDESET */                                            1061
*   CRRFLDOS=ON;                     /* INDICATE 1ST LDO IN THE CRR */
         OI    CRRFLDOS(PTRCRR),B'01000000'                        1062
*  END;                               /* END REQUEST WAS A 'DO'     */
*ELSE;                                /* REQUEST WAS NOT A 'DO'     */
@RF01045 DS    0H                                                  1065
*  /*NESTCH2    */                    /*                            */
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME:NESTCH2                                              */
*/*                                                                  */
*/* INPUT:                                                           */
*/*      PTRCRR   -> ISTDCCRR                                        */
*/*      CRRCLDO  -> FIRST LDO IN LDO STRING                         */
*/*                                                                  */
*/* OUTPUT:                                                          */
*/*      **NO NORMAL OUTPUT**                                        */
*/*      CONTROL BLOCKS ARE ONLY CHANGED FOR ERROR SITUATIONS        */
*/*                                                                  */
*/* CALLS:                                                           */
*/*      **NONE**                                                    */
*/*                                                                  */
*/* MACROS:                                                          */
*/*      ?VALCHECK:                                                  */
*/*            VALIDATE CORE STORAGE BLOCK                           */
*/*                                                                  */
*/********************************************************************/
*                                   /* RESTRICT POINTER REGISTERS    */
*RFY (PTRLDO,PTRRPH,PTRRPL,PTRLCPB,PTRFMCB,PTRCRR) RSTD;           1065
*IF DCLRQTP='1D'X THEN;              /* FIRST CHECK FOR A READ       */
         CLI   DCLRQTP(PTRLCPB),X'1D'                              1066
         BE    @RT01066                                            1066
*ELSE                                                              1068
*  DO;                               /* REQUEST TYPE NOT A READ      */
*    IF DCLRQTP='13'X THEN            /* CHECK FOR AN LDO           */
         CLI   DCLRQTP(PTRLCPB),X'13'                              1069
         BNE   @RF01069                                            1069
*       DO;                                                        1070
*         PTRLDO=CRRCLDO;            /* ADDRESS THE LDO            */
         L     PTRLDO,CRRCLDO(,PTRCRR)                             1071
*         RFY ISTLDO BASED(PTRLDO); /*  LOGICAL DEVICE ORDER  */   1072
*                                                                  1072
*/*VMDESET  ((15),ZERO)*/                                          1073
*         DO;                            /* INVOKE MODESET MACRO    */
*           GEN;                                                   1074
*                                                                  1074
         MODESET EXTKEY=ZERO,WORKREG=2
*         RFY (GPR15P) RSTD;                                       1075
*           GPR15F=0;                                              1076
*                                                                  1076
         SLR   GPR15F,GPR15F                                       1076
*         RFY (GPR15P) UNRSTD;           /*PUT RETURN CODE IN RCREG*/
*         END;  /* VMDESET */         /* KEY ZERO           @VS40556*/
*         IF LDOCMD = LDOREAD THEN; /* IS OPERATION = READ?          */
         CLI   LDOCMD(PTRLDO),X'02'                                1079
         BE    @RT01079                                            1079
*                                   /* YES- FALL THROUGH TO EXIT     */
*         ELSE                      /* NO-- CHECK FOR JUMP           */
*           DO;                                                    1081
*             IF LDOCMD = LDOJUMP THEN  /* IS OPERATION = JUMP?      */
         CLI   LDOCMD(PTRLDO),X'08'                                1082
         BNE   @RF01082                                            1082
*                DO;                /* YES- CHECK JUMP TO ADDRESS    */
*                  PTRLDO=LDOADDR;   /* ADDRESS NEXT LDO             */
         L     PTRLDO,LDOADDR(,PTRLDO)                             1084
*                  LCCWOP=LDOCMD;   /* PUT CMD CODE IN LCCW          */
         MVC   LCCWOP+48(1,PTRLCPB),LDOCMD(PTRLDO)                 1085
*                  IF LDOCMD = LDOREAD THEN; /* IS OP CODE READ?     */
         CLI   LDOCMD(PTRLDO),X'02'                                1086
         BE    @RT01086                                            1086
*                                   /* YES- FALL THROUGH TO EXIT     */
*                  ELSE CRRSW0 = ON;  /* NO-- SET ERROR SWITCH      */
         OI    CRRSW0(PTRCRR),B'10000000'                          1088
*                END;                                              1089
*             ELSE CRRSW0=ON;        /* NOT JUMP LDO              */
*                                                                  1090
         B     @RC01082                                            1090
@RF01082 OI    CRRSW0(PTRCRR),B'10000000'                          1090
*             CRRCLDO=PTRLDO;         /* UPDATE POINTER IN CRR      */
@RC01082 ST    PTRLDO,CRRCLDO(,PTRCRR)                             1091
*          END;                       /*END COMMAND NOT READ LDO    */
*                                                                  1092
*/*VMDESET  ((15),VTAM)*/                                          1093
*          DO;                           /* INVOKE MODESET MACRO    */
@RT01079 DS    0H                                                  1094
*            GEN;                                                  1094
*                                                                  1094
         MODESET EXTKEY=VTAM,WORKREG=2
*          RFY (GPR15P) RSTD;                                      1095
*            GPR15F=0;                                             1096
*                                                                  1096
         SLR   GPR15F,GPR15F                                       1096
*          RFY (GPR15P) UNRSTD;          /*PUT RETURN CODE IN RCREG*/
*          END;  /* VMDESET */        /* VTAM KEY           @VS40556*/
*        END;                         /* END REQUEST TYPE AN LDO    */
*     ELSE CRRSW0 = ON;            /* NOT LDO ADDRESS VALID        */
         B     @RC01069                                            1100
@RF01069 OI    CRRSW0(PTRCRR),B'10000000'                          1100
*  END;                               /* END REQUEST TYPE NOT A READ */
@RC01069 DS    0H                                                  1102
*RFY PTRLDO UNRSTD;                 /* NO LONGER REQUIRED            */
@RT01066 DS    0H                                                  1103
*                                       /* DON'T UNLOCK FMCB @XM11207*/
* END;                                 /*END SEND MACRO @DM12550*/ 1103
*ELSE;                                                             1104
*                                                                  1104
*                                                                  1104
@RF01043 DS    0H                                                  1105
*IF FMCFLGA5=ON &                 /* BUFFER THRESHOLD EXCEEDED ? */
*  CRRSW0=ON THEN                    /*AND MACRO TYPE NOT A READ   */
         TM    FMCFLGA5(PTRFMCB),B'00000100'                       1105
         BNO   @RF01105                                            1105
         TM    CRRSW0(PTRCRR),B'10000000'                          1105
         BNO   @RF01105                                            1105
*  DO;                                                             1106
*   CRRRTNCD=CRRLOGIC;                                             1107
         MVI   CRRRTNCD(PTRCRR),X'08'                              1107
*   CRRFDB2=CRRBUFTE;                                              1108
         MVI   CRRFDB2(PTRCRR),X'0F'                               1108
*  END;                                                            1109
*ELSE;                                                             1110
*                                                                  1110
*                                                                  1110
@RF01105 DS    0H                                                  1111
*/* IF THE DEVICE IS OFFLINE OR DISCONNECTED AND NO DATA IS QUEUED,
*   THE ERROR CODES ARE SET.                                         */
*                                                                  1111
*IF FMCDEVOF= ON ×                                                 1111
*  FMCDEDSC = ON THEN                                              1111
         TM    FMCDEVOF(PTRFMCB),B'00011000'                       1111
         BZ    @RF01111                                            1111
*  DO;                                                             1112
*   IF FMCFBA=ZERO ×                                               1113
*      FMCFBA=GATE THEN                                            1113
         L     @15,FMCFBA(,PTRFMCB)                                1113
         LTR   @15,@15                                             1113
         BZ    @RT01113                                            1113
         CL    @15,@CF01326                                        1113
         BNE   @RF01113                                            1113
@RT01113 DS    0H                                                  1114
*      CRRSW0=ON;                                                  1114
         OI    CRRSW0(PTRCRR),B'10000000'                          1114
*   ELSE;                                                          1115
@RF01113 DS    0H                                                  1116
*   IF CRRSW0=ON THEN                                              1116
         TM    CRRSW0(PTRCRR),B'10000000'                          1116
         BNO   @RF01116                                            1116
*      DO;                                                         1117
*       CRRRTNCD=CRRPURGE;                                  /*@DM09502*
         MVI   CRRRTNCD(PTRCRR),X'1C'                              1118
*       CRRFDB2=CRRDEVOF;                /* DEVICE OFFLINE   @XM9224K*/
         MVI   CRRFDB2(PTRCRR),X'07'                               1119
*      END;                                                        1120
*   ELSE;                                                          1121
@RF01116 DS    0H                                                  1122
*  END;                                                            1122
*ELSE;                                                             1123
@RF01111 DS    0H                                                  1124
*        END;           /* END - NOT SOLICIT ALL        */         1124
*    END;                /* END - NO ERROR HAS OCCURRED  */        1125
*ELSE;                                                             1126
@RF00947 DS    0H                                                  1127
*  END;                                                            1127
*                ELSE;                                             1128
@RF00886 DS    0H                                                  1129
*          IF RPHMAJCB->ACDTYPE=ACDID THEN                         1129
@RC00886 DS    0H                                                  1129
@RF00885 L     @15,RPHMAJCB-1(,PTRRPH)                             1129
         LA    @15,0(,@15)                                         1129
         CLI   ACDTYPE(@15),X'0F'                                  1129
         BNE   @RF01129                                            1129
*            DO;                    /* DO - MJR NODE CB IS ACDEB */
*              GEN REFS(R14,R12,CRRSAVE1) SETS(CRRSAVE1)    /*@DM09295*
*              (STM  R14,R12,CRRSAVE1+12(R13));  /* SAVE REGS @DM09295*
         STM  R14,R12,CRRSAVE1+12(R13)
*              RFY ISTATCVT BASED (CRRATCVT);                      1132
*              CALL ATCNESAL;                                      1133
         L     @14,CRRATCVT(,PTRCRR)                               1133
         L     @15,ATCNESAL(,@14)                                  1133
         BALR  @14,@15                                             1133
*              GEN REFS(CRRSAVE1,R13) SETS(R14,R12)         /*@DM09295*
*              (LM R14,R12,CRRSAVE1+12(R13));               /*@DM09295*
         LM R14,R12,CRRSAVE1+12(R13)
*                                       /* PUT DVT ENTRY ADDR IN RPH */
*              RPHDVTA=ADDR(ATCNERFN);                      /*@DM08928*
         L     @15,CRRATCVT(,PTRCRR)                               1135
         LA    @15,ATCNERFN(,@15)                                  1135
         ST    @15,RPHDVTA(,PTRRPH)                                1135
*            END;                  /* END - MJR NODE CB IS ACDEB */
*                                                                  1136
*                                                                  1136
*          ELSE DO;                /*DO - MJR NODE CB IS FMCB  */  1137
         B     @RC01129                                            1137
@RF01129 DS    0H                                                  1138
*                 CRRFMCB=RPHMAJCB;                                1138
         L     @15,RPHMAJCB-1(,PTRRPH)                             1138
         LA    @15,0(,@15)                                         1138
         ST    @15,CRRFMCB(,PTRCRR)                                1138
*                 IF CRRRTNCD=ZERO THEN                            1139
         CLI   CRRRTNCD(PTRCRR),0                                  1139
         BNE   @RF01139                                            1139
*                    DO;              /* DO -SET UP DVT           */
*                      ADDRDVT=ADDR(SIDS(RPLREQ-'11'X+1));         1141
         L     @15,RPHWEA(,PTRRPH)                                 1141
         SLR   ADDRDVT,ADDRDVT                                     1141
         IC    ADDRDVT,RPLREQ(,@15)                                1141
         SLA   ADDRDVT,3                                           1141
         LR    @15,ADDRDVT                                         1141
         LA    ADDRDVT,SIDS-136(@15)                               1141
*                      CRRSW6=ON;                                  1142
         OI    CRRSW6(PTRCRR),B'00000010'                          1142
*                    END;             /* END SET UP DVT    */      1143
*                 ELSE;                                            1144
@RF01139 DS    0H                                                  1145
*                END;       /* END MJR NODE CB IS FMCB  */         1145
*            END;                     /*END - NOT RCV ANY OR READ ANY *
*          END;                      /* END - NO TPDVTS             */
*         ELSE;                                                    1148
@RF00880 DS    0H                                                  1149
*       END;                        /* END - REQUEST TYPE VALID     */
*      END;                         /* END - NOT TPEXIT             */
*     ELSE;                                                        1151
@RF00827 DS    0H                                                  1152
*RFY R14 RSTD;                                                     1152
@RC00827 DS    0H                                                  1153
*R14=CRRRTN9;                                                      1153
         L     R14,CRRRTN9(,PTRCRR)                                1153
*RFY R14 UNRSTD;                                                   1154
*RETURN;                                                           1155
@EL00002 DS    0H                                                  1155
@EF00002 DS    0H                                                  1155
@ER00002 BR    @14                                                 1155
*END REQUEST;                                                      1156
*                                                                  1157
*UNLOCK: PROC OPTIONS ( NOPARMREG,NOSAVE,NOSAVEAREA );             1157
UNLOCK   DS    0H                                                  1158
*/********************************************************************/
*/*                                                                  */
*/* ROUTINE NAME : UNLOCK                                            */
*/*                                                                  */
*/* FUNCTION : TO UNLOCK THE FMCB                                    */
*/*                                                                  */
*/* INPUT : NONE                                                     */
*/*                                                                  */
*/* OUTPUT :CRRFMCLK TURNED OFF                                      */
*/*                                                                  */
*/* SUBROUTINES CALLED : NONE                                        */
*/*                                                                  */
*/* MACROS USED : TPUNLOCK                                           */
*/*                                                                  */
*/********************************************************************/
*                                                                  1158
*RFY R14 RSTD;                                                     1158
*CRRRTN6=R14;                                                      1159
         ST    R14,CRRRTN6(,PTRCRR)                                1159
*RFY R14 UNRSTD;                                                   1160
* IF CRRFMCLK=ON THEN /*LOCKING CHECK   @D33SKXW*/                 1161
         TM    CRRFMCLK(PTRCRR),B'10000000'                        1161
         BNO   @RF01161                                            1161
*    DO;                                                           1162
*     CRRFMCLK=OFF;                                                1163
*                                                                  1163
*                                                                  1163
*                                                                  1163
         NI    CRRFMCLK(PTRCRR),B'01111111'                        1163
*/*** START -TPUNLOCK (CTLLOCK)- ***/                              1164
*       DO;                                                        1164
*                                                                  1164
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)  */                             1165
*/* END OF ATBUILD */                                              1165
*                                                                  1165
*       RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;      1165
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*        GPR02P = ADDR(FMCDCLOK);       /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,FMCDCLOK(,PTRFMCB)                           1167
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 1168
         L     GPR04P,RPHCRR(,GPR01P)                              1168
*        GPR00P = CRALMS08;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,128                                          1169
*        GPR03P = ADDR(GPR04P->CRAL8PTR);                          1170
         LA    GPR03P,CRAL8PTR(,GPR04P)                            1170
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*                                                                  1171
*       DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */              1171
*         GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/              1172
         L     GPR15P,ATCLCPTR                                     1172
*       END; /*LISATCVT*/                                          1173
*        GPR15P=GPR15P->ATCAP33;                                   1174
         L     GPR15P,ATCAP33(,GPR15P)                             1174
*        DCL FMZL0167 BASED(GPR15P) LABEL VALUERANGE(*);           1175
*        CALL FMZL0167;                                            1176
         BALR  @14,@15                                             1176
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      1177
*                                                                  1177
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*       RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;    1178
*        END;                                                      1179
*/*** END -TPUNLOCK (CTLLOCK)- ***/                                1180
*    END;                                                          1180
*RFY R14 RSTD;                                                     1181
@RF01161 DS    0H                                                  1182
*R14=CRRRTN6;                                                      1182
         L     R14,CRRRTN6(,PTRCRR)                                1182
*RFY R14 UNRSTD;                                                   1183
*RETURN;                                                           1184
@EL00003 DS    0H                                                  1184
@EF00003 DS    0H                                                  1184
@ER00003 BR    @14                                                 1184
*END UNLOCK;                                                       1185
*                                                                  1185
@PB00003 DS    0H                                                  1185
*/* TPEPILOG   */                                                  1186
* GEN (PRINT OFF);                                                 1186
*                                                                  1186
         PRINT OFF
*/* TEMPLATE FOR CHAIN FIELD OF WORK ELEMENT */                    1187
*DCL  1  ISTWKE BDY(WORD) BASED(WKEPTR),                           1187
*        2  * CHAR(4),                 /* SPACE                       *
*        2  WKECHAIN PTR(31),          /* CHAIN POINTER               *
*           3 WKEFLAGS BIT(8),         /* FLAGS                       *
*             4 WKEGATE  BIT(1),       /* GATE BIT                    *
*             4 *        BIT(7),       /* RESERVED                    *
*           3 WKECHNGP PTR(24);        /* PTR ADDRESS                 *
* GEN (PRINT ON);                                                  1188
         PRINT ON
*/* END OF TPEPILOG */                                             1189
*END ISTDCC00                       /* END OF PROCEDURES             */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        *
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                        *
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IHAPSA  )                                        *
*;                                                                 1189
@DATA    DS    0H
@CH04502 DC    H'332'
@DATD    DSECT
         DS    0F
ISTDCC00 CSECT
         DS    0F
@CF00038 DC    F'8'
@CF01324 DC    XL4'7FFFFFFF'
@CF01326 DC    XL4'80000000'
@CF01350 DC    XL4'08000000'
@CF04362 DC    XL4'00FFFFFF'
@DATD    DSECT
         DS    0D
CVTPTR   DS    A
LCPBPTR  DS    A
DNCBPTR  DS    A
FMCBPTR  DS    A
FSBPTR   DS    A
WKEPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTDCC00 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
FMZA0094 DS    FL4
         ORG   FMZA0094
@NM00100 DC    AL1(184)
@NM00101 DC    AL3(0)
         ORG   FMZA0094+4
@CC03734 DC    C'RECORD  '
DVTPURGE DC    CL8'IDPURGEO'
DVTPRMPT DC    CL8'IDPRESTO'
DVTCLEAR DC    CL8'IRCLROUT'
SIDS     DC    CL8'IDWRITE '
         DC    CL8'IDRESET '
         DC    CL8'IDDO    '
         DC    CL8'ID14    '
         DC    CL8'ID15    '
         DC    CL8'ID16    '
         DC    CL8'ID17    '
         DC    CL8'ID18    '
         DC    CL8'ID19    '
         DC    CL8'ID1A    '
         DC    CL8'ID1B    '
         DC    CL8'ID1C    '
         DC    CL8'IDREAD  '
         DC    CL8'IDSOLICT'
         DC    CL8'ID1F    '
         DC    CL8'ID20    '
         DC    CL8'ID21    '
         DC    CL8'IRSNDOUT'
         DC    CL8'IRRCVOUT'
         DC    CL8'IRRSTOUT'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
ADDRDVT  EQU   @00
PTRRPH   EQU   @01
PTRRPL   EQU   @06
PTRLCPB  EQU   @07
PTRFMCB  EQU   @11
PTRDEB   EQU   @10
PTRDNCB  EQU   @03
PTRLDO   EQU   @03
PTRCRR   EQU   @13
R02      EQU   @02
R06      EQU   @06
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
NEWVALUE EQU   @09
OLDVALUE EQU   @08
R00      EQU   @00
R01      EQU   @01
R03      EQU   @03
R04      EQU   @04
R05      EQU   @05
R07      EQU   @07
R08      EQU   @08
R09      EQU   @09
R10      EQU   @10
R11      EQU   @11
WORKREG  EQU   @03
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ATCLCPTR EQU   1032
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLID    EQU   RPLIDWD
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLPLHPT EQU   RPLCOMN+4
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLRRESP EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00054 EQU   LOKCHNG+2
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDTYPE  EQU   ACDVTPRX
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDLOCK  EQU   ACDVTAM
ACDFMCB  EQU   ACDVTAM+8
ACDRAFQ  EQU   ACDVTAM+12
ACDRARQ  EQU   ACDVTAM+16
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ACDASFQ  EQU   ISTACDEB+200
ACDREFQ  EQU   ISTACDEB+204
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHDVTA  EQU   ISTRPH+12
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCDCFRR EQU   ATCCOM+8
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCBFTRC EQU   ATCCOM+144
ATCSMRQ  EQU   ATCCOM+180
ATCNERFN EQU   ATCCOM+232
ATCNESAL EQU   ATCCOM+256
ATCNERAP EQU   ATCCOM+260
ATCESC01 EQU   ISTATCVT+288
ATCESC02 EQU   ISTATCVT+292
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCAP35  EQU   ISTATCVT+448
ATCAP36  EQU   ISTATCVT+452
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
@NM00065 EQU   ISTATCVT+911
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTDCCRR EQU   0
CRRCRR   EQU   ISTDCCRR
CRRSPACE EQU   ISTDCCRR+12
CRRSAREA EQU   0
CRRSAVE  EQU   CRRSAREA
CRRSAVE1 EQU   CRRSAREA+72
CRRMAS   EQU   CRRSAREA+148
CRRMAS1  EQU   CRRMAS
CRRM00   EQU   CRRMAS1
CRRMAS2  EQU   CRRMAS+1
CRRMAS3  EQU   CRRMAS+2
CRRMAS4  EQU   CRRMAS+3
CRRRMAS1 EQU   CRRMAS+4
CRRRMAS2 EQU   CRRMAS+5
CRRRMAS3 EQU   CRRMAS+6
CRRSMAS  EQU   CRRRMAS3
CRRATS   EQU   CRRSAREA+156
CRRATS1  EQU   CRRATS
CRRC00   EQU   CRRATS1
CRRC02   EQU   CRRATS1
CRRATS2  EQU   CRRATS+1
CRRATS3  EQU   CRRATS+2
CRRATS4  EQU   CRRATS+3
CRRRATS1 EQU   CRRATS+4
CRRRATS2 EQU   CRRATS+5
CRRRATS3 EQU   CRRATS+6
CRRSATS  EQU   CRRRATS3
CRRFLGS1 EQU   CRRSAREA+164
CRRFLDOS EQU   CRRFLGS1
CRRINIO  EQU   CRRFLGS1
CRRCPROC EQU   CRRFLGS1
CRRREQP  EQU   CRRFLGS1
CRRSOLRQ EQU   CRRFLGS1
CRRFLGS2 EQU   CRRSAREA+165
CRRFLGS3 EQU   CRRSAREA+166
CRRSTSPR EQU   CRRFLGS3
CRRFLGS4 EQU   CRRSAREA+167
CRRFMCLK EQU   CRRFLGS4
CRRFLGS  EQU   CRRSAREA+168
CRRSW0   EQU   CRRFLGS
CRRSW1   EQU   CRRFLGS
CRRSW2   EQU   CRRFLGS
CRRSW4   EQU   CRRFLGS
CRRSW5   EQU   CRRFLGS
CRRSW6   EQU   CRRFLGS
CRRRFLG1 EQU   CRRSAREA+169
CRRDBLCK EQU   CRRRFLG1
CRRRTYPE EQU   CRRRFLG1
CRRFDBK1 EQU   CRRSAREA+170
CRRRTNCD EQU   CRRFDBK1
CRRFDB2  EQU   CRRFDBK1+1
CRRFDB3  EQU   CRRFDBK1+2
CRRFDBK2 EQU   CRRSAREA+176
CRRDSB   EQU   CRRFDBK2
CRRESR   EQU   CRRFDBK2+2
CRRCLCCW EQU   CRRSAREA+180
CRRFMCB  EQU   CRRSAREA+184
CRRLCPB  EQU   CRRSAREA+192
CRRCLDO  EQU   CRRSAREA+200
CRRTRBUF EQU   CRRSAREA+204
CRRARPL  EQU   CRRTRBUF+4
CRRATCVT EQU   CRRSAREA+216
CRRRTN6  EQU   CRRSAREA+244
CRRRTN9  EQU   CRRSAREA+256
CRRBFLGS EQU   CRRSAREA+280
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPTYPE  EQU   ISTLCPB
LCPLNGTH EQU   ISTLCPB+1
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPSAF   EQU   LCPCID
LCPDAF   EQU   LCPCID+2
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
CRRID    EQU   PFCCRRID
PFCCRRLN EQU   PFCCRR+2
CRRLEN   EQU   PFCCRRLN
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
CRRCHAIN EQU   PFCCRRO
PFCFRRO  EQU   PFCHDR+4
CRRFRR   EQU   PFCFRRO
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRAFRR   EQU   CRAHDR+4
CRALKACT EQU   CRABASIC+8
CRAL5PTR EQU   CRABASIC+28
CRAL8PTR EQU   CRABASIC+40
CRAPROCR EQU   ISTCRA+312
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTNCB   EQU   0
NCBDAF   EQU   ISTNCB+2
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTDNCB  EQU   0
DNCNCB   EQU   ISTDNCB
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCBSCED EQU   DNCOS+2
ISTFMCB  EQU   0
FMCTYPE  EQU   ISTFMCB
FMCSAF   EQU   ISTFMCB+2
FMCDNCBA EQU   ISTFMCB+16
FMCSTAT  EQU   ISTFMCB+28
FMCDEVOF EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCMODE  EQU   ISTFMCB+52
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCRAFM  EQU   FMCCLEXT+8
FMCDCLOK EQU   FMCCLEXT+12
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGA0 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLEAR EQU   FMCMODEB
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCFBRE  EQU   ISTFMCB+220
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTFDB   EQU   0
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBTYPE  EQU   FSBFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
ISTDCLCP EQU   0
DCLLCPB  EQU   ISTDCLCP
DCLRPLA  EQU   ISTDCLCP+72
DCLRTYPE EQU   ISTDCLCP+76
DCLRQTP  EQU   DCLRTYPE
DCLRFLG  EQU   DCLRTYPE+1
DCLBNSP  EQU   DCLRFLG
DCLFLAG1 EQU   ISTDCLCP+78
ISTLDO   EQU   0
LDOCMD   EQU   ISTLDO
LDOFLAGS EQU   ISTLDO+1
LDOADDR  EQU   ISTLDO+4
FMZL0022 EQU   0
FMZL0030 EQU   0
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
FMZL0038 EQU   0
FMZL0046 EQU   0
ISTWKE   EQU   0
WKECHAIN EQU   ISTWKE+4
WKEFLAGS EQU   WKECHAIN
FMZL0064 EQU   0
FMZL0081 EQU   0
FMZL0094 EQU   0
FMZL0118 EQU   0
FMZL0131 EQU   0
FMZL0142 EQU   0
FMZL0167 EQU   0
ISTRPL   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00099 EQU   FSBRQTAG
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FSBRT0B  EQU   @NM00099+1
FSBRT0A  EQU   @NM00099+1
FSBRT09  EQU   @NM00099+1
FSBRT08  EQU   @NM00099+1
FSBRT07  EQU   @NM00099
FSBRT06  EQU   @NM00099
FSBRT05  EQU   @NM00099
FSBRT04  EQU   @NM00099
FSBRT03  EQU   @NM00099
FSBRT02  EQU   @NM00099
FSBRT01  EQU   @NM00099
FSBRT00  EQU   @NM00099
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
WKECHNGP EQU   WKECHAIN+1
@NM00103 EQU   WKEFLAGS
WKEGATE  EQU   WKEFLAGS
@NM00102 EQU   ISTWKE
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
LDOLEN   EQU   ISTLDO+2
LDOCMHN  EQU   LDOFLAGS
LDOACHN  EQU   LDOFLAGS
DCLECHAR EQU   ISTDCLCP+98
DCLIOLEN EQU   ISTDCLCP+96
DCLBTLEN EQU   ISTDCLCP+92
DCLCLDOA EQU   ISTDCLCP+88
DCLIOBUF EQU   ISTDCLCP+84
DCLLDO1  EQU   ISTDCLCP+80
DCLRSV03 EQU   ISTDCLCP+79
DCLRSV02 EQU   DCLFLAG1
DCLRPLS  EQU   DCLFLAG1
DCLBTEIS EQU   DCLFLAG1
DCLNODE  EQU   DCLFLAG1
DCLRSV04 EQU   DCLFLAG1
DCLSRESW EQU   DCLFLAG1
DCLCONV  EQU   DCLRFLG
DCLRSV01 EQU   DCLRFLG
DCLLCCW3 EQU   ISTDCLCP+64
DCLLCCW2 EQU   ISTDCLCP+56
FSBFDB   EQU   ISTFSB+32
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00098 EQU   FSBSS2
@NM00097 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00096 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FDBOFSET EQU   ISTFDB+10
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
FDBFDBA  EQU   ISTFDB
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00095 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00094 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00093 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00092 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00091 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00090 EQU   ISTFMCB+30
@NM00089 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCLNGTH EQU   ISTFMCB+1
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZV001 EQU   DNCOS+17
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCACIP  EQU   DNCBSCED+1
DNCLICP  EQU   DNCBSCED
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF006 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCCONT  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PRORSV11 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00088 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
@NM00087 EQU   ISTAPCRR+137
@NM00086 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00085 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00084 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00083 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00082 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00081 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00080 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00079 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00078 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00077 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00076 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
PFCRSV10 EQU   PFCCRR+1
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00075 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
CRRRVPT5 EQU   CRRSAREA+316
CRRRVPT4 EQU   CRRSAREA+312
CRRRVPT3 EQU   CRRSAREA+308
CRRRVPT2 EQU   CRRSAREA+304
CRRRVPT1 EQU   CRRSAREA+300
CRRRVCR2 EQU   CRRSAREA+292
CRRRVCR1 EQU   CRRSAREA+291
CRRXFNCD EQU   CRRSAREA+290
CRRLDOCT EQU   CRRSAREA+288
CRRBTLEN EQU   CRRSAREA+284
CRRBLEN  EQU   CRRSAREA+282
CRRBRTCD EQU   CRRSAREA+281
@NM00074 EQU   CRRBFLGS
CRRBFLG1 EQU   CRRBFLGS
CRRBLDAD EQU   CRRSAREA+276
CRRBARAD EQU   CRRSAREA+272
CRRRTN12 EQU   CRRSAREA+268
CRRRTN11 EQU   CRRSAREA+264
CRRRTN10 EQU   CRRSAREA+260
CRRRTN8  EQU   CRRSAREA+252
CRRRTN7  EQU   CRRSAREA+248
CRRRTN5  EQU   CRRSAREA+240
CRRRTN4  EQU   CRRSAREA+236
CRRRTN3  EQU   CRRSAREA+232
CRRRTN2  EQU   CRRSAREA+228
CRRRTN1  EQU   CRRSAREA+224
CRRRES1  EQU   CRRSAREA+222
CRRLCNT  EQU   CRRSAREA+220
CRRVALCK EQU   CRRSAREA+212
CRRBIND  EQU   CRRTRBUF+3
CRRTRRES EQU   CRRTRBUF
CRRUECB  EQU   CRRSAREA+196
CRRCMDAD EQU   CRRSAREA+188
CRRESR2  EQU   CRRESR+1
CRRESR1  EQU   CRRESR
CRRDSB2  EQU   CRRDSB+1
CRRDSB1  EQU   CRRDSB
CRRDTACT EQU   CRRSAREA+174
CRRRSV99 EQU   CRRSAREA+173
CRRRDSOH EQU   CRRFDB3
CRRRLG   EQU   CRRFDB3
CRRLGFRC EQU   CRRFDB3
CRRRDEOT EQU   CRRFDB3
CRRRDEOM EQU   CRRFDB3
CRRRDEOB EQU   CRRFDB3
CRRUNUSD EQU   CRRFDB3
CRRUINPT EQU   CRRFDB3
CRRSTSAV EQU   CRRFDB2
CRRCUERR EQU   CRRFDB2
CRRDLGFL EQU   CRRFDB2
CRRIOERR EQU   CRRFDB2
CRRDVUNS EQU   CRRFDB2
CRRATND  EQU   CRRFDB2
CRRRVID  EQU   CRRFDB2
CRRERLK  EQU   CRRFDB2
CRRNSNA  EQU   CRRRTYPE
CRRDFSYN EQU   CRRRTYPE
CRRRESP  EQU   CRRRTYPE
CRRDFASY EQU   CRRRTYPE
CRRRPSBD EQU   CRRRFLG1
CRRRPLOQ EQU   CRRRFLG1
CRRRPLS  EQU   CRRRFLG1
CRRSW7   EQU   CRRFLGS
CRRSW3   EQU   CRRFLGS
CRRRSV04 EQU   CRRFLGS4
CRRDLCCW EQU   CRRFLGS3
CRRRESET EQU   CRRFLGS3
CRRSUBBK EQU   CRRFLGS3
CRRRSV08 EQU   CRRFLGS3
CRRDEBQ  EQU   CRRFLGS3
CRRDREQ  EQU   CRRFLGS3
CRRDFDBK EQU   CRRFLGS3
CRRDFSB  EQU   CRRFLGS2
CRRDPROC EQU   CRRFLGS2
CRREXTS  EQU   CRRFLGS2
CRRELSRI EQU   CRRFLGS2
CRRPOST  EQU   CRRFLGS2
CRRENDLW EQU   CRRFLGS2
CRRPRGIP EQU   CRRFLGS2
CRRDEXP  EQU   CRRFLGS2
CRRFINI  EQU   CRRFLGS1
CRRPREIO EQU   CRRFLGS1
CRRDOCUR EQU   CRRFLGS1
CRRRATS4 EQU   CRRATS+7
@NM00073 EQU   CRRSATS
CRRASC51 EQU   CRRSATS
CRRASC40 EQU   CRRSATS
CRRASC30 EQU   CRRSATS
CRRASC21 EQU   CRRSATS
CRRASC10 EQU   CRRSATS
CRRASC01 EQU   CRRSATS
@NM00072 EQU   CRRRATS2
CRRPLIC  EQU   CRRRATS2
CRRRC81  EQU   CRRRATS2
CRRRC80  EQU   CRRRATS2
CRRRC65  EQU   CRRRATS2
CRRRC63  EQU   CRRRATS2
CRRRC55  EQU   CRRRATS2
CRRRC54  EQU   CRRRATS2
CRRRC53  EQU   CRRRATS1
CRRRC52  EQU   CRRRATS1
CRRRC51  EQU   CRRRATS1
CRRRC30  EQU   CRRRATS1
CRRRC26  EQU   CRRRATS1
CRRRC23  EQU   CRRRATS1
CRRRC22  EQU   CRRRATS1
CRRRC21  EQU   CRRRATS1
@NM00071 EQU   CRRATS4
CRRC3X   EQU   CRRATS4
CRRC85   EQU   CRRATS4
CRRC83   EQU   CRRATS4
CRRC82   EQU   CRRATS4
CRRC61   EQU   CRRATS4
CRRC60   EQU   CRRATS4
CRRC81   EQU   CRRATS3
CRRC80   EQU   CRRATS3
CRRC75   EQU   CRRATS3
CRRC51   EQU   CRRATS3
CRRC50   EQU   CRRATS3
CRRC42   EQU   CRRATS3
CRRC41   EQU   CRRATS3
CRRC40   EQU   CRRATS3
CRRC32   EQU   CRRATS2
CRRC31   EQU   CRRATS2
CRRC30   EQU   CRRATS2
CRRC25   EQU   CRRATS2
CRRC24   EQU   CRRATS2
CRRC23   EQU   CRRATS2
CRRC22   EQU   CRRATS2
CRRC21   EQU   CRRATS2
CRRC20   EQU   CRRATS1
CRRC13   EQU   CRRATS1
CRRC12   EQU   CRRATS1
CRRC11   EQU   CRRATS1
CRRC10   EQU   CRRATS1
CRRC01   EQU   CRRATS1
CRRRMAS4 EQU   CRRMAS+7
@NM00070 EQU   CRRSMAS
CRRMSC51 EQU   CRRSMAS
CRRMSC40 EQU   CRRSMAS
CRRMSC30 EQU   CRRSMAS
CRRMSC21 EQU   CRRSMAS
CRRMSC10 EQU   CRRSMAS
CRRMSC01 EQU   CRRSMAS
@NM00069 EQU   CRRRMAS2
CRRRM81  EQU   CRRRMAS2
CRRRM80  EQU   CRRRMAS2
CRRRM65  EQU   CRRRMAS2
CRRRM63  EQU   CRRRMAS2
CRRRM55  EQU   CRRRMAS2
CRRRM54  EQU   CRRRMAS2
CRRRM53  EQU   CRRRMAS1
CRRRM52  EQU   CRRRMAS1
CRRRM51  EQU   CRRRMAS1
CRRRM30  EQU   CRRRMAS1
CRRRM26  EQU   CRRRMAS1
CRRRM23  EQU   CRRRMAS1
CRRRM22  EQU   CRRRMAS1
CRRRM21  EQU   CRRRMAS1
@NM00068 EQU   CRRMAS4
CRRM3X   EQU   CRRMAS4
CRRM85   EQU   CRRMAS4
CRRM83   EQU   CRRMAS4
CRRM82   EQU   CRRMAS4
CRRM61   EQU   CRRMAS4
CRRM60   EQU   CRRMAS4
CRRM81   EQU   CRRMAS3
CRRM80   EQU   CRRMAS3
CRRM75   EQU   CRRMAS3
CRRM51   EQU   CRRMAS3
CRRM50   EQU   CRRMAS3
CRRM42   EQU   CRRMAS3
CRRM41   EQU   CRRMAS3
CRRM40   EQU   CRRMAS3
CRRM32   EQU   CRRMAS2
CRRM31   EQU   CRRMAS2
CRRM30   EQU   CRRMAS2
CRRM25   EQU   CRRMAS2
CRRM24   EQU   CRRMAS2
CRRM23   EQU   CRRMAS2
CRRM22   EQU   CRRMAS2
CRRM21   EQU   CRRMAS2
CRRM20   EQU   CRRMAS1
CRRM13   EQU   CRRMAS1
CRRM12   EQU   CRRMAS1
CRRM11   EQU   CRRMAS1
CRRM10   EQU   CRRMAS1
CRRM02   EQU   CRRMAS1
CRRM01   EQU   CRRMAS1
CRRFSB   EQU   CRRSAREA+144
CRRRSV22 EQU   ISTDCCRR+4
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00067 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00066 EQU   @NM00065
ATCVTMAB EQU   @NM00065
@NM00064 EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00063 EQU   ISTATCVT+819
@NM00062 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00061 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00060 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00059 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHTIK   EQU   RPHTSKID+3
@NM00058 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00057 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00056 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
ACDRSV09 EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRDTE  EQU   ACDVTAM+4
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDTSKID EQU   ACDVTPRX+8
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
LOKXCL   EQU   @NM00054
LOKPRY   EQU   @NM00054
@NM00055 EQU   @NM00054
@NM00053 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00028 EQU   CVTFIX+248
@NM00027 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RPLSEQNO EQU   RPLOF60+6
@NM00026 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00025 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00024 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00023 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00022 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00021 EQU   RPLRESP
@NM00020 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00019 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00018 EQU   RPLVTFL1
@NM00017 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00016 EQU   RPLRTYPE
@NM00015 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00014 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00013 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00012 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
@NM00009 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00008 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00007 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00006 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00005 EQU   RPLRBAR+3
@NM00004 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00003 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00002 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLLEN2  EQU   RPLLEN
RPLSTYP  EQU   RPLIDWD+1
@NM00052 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00051 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00050 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00049 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00048 EQU   FLCFSA
@NM00047 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00046 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00045 EQU   FLCIOA
@NM00044 EQU   FLCMCLA+15
@NM00043 EQU   FLCMCLA+14
@NM00042 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00041 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00040 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00039 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00038 EQU   FLCPER
@NM00037 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00036 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00035 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00034 EQU   FLCPIILC
@NM00033 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00032 EQU   FLCSVILC
@NM00031 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00030 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00029 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00481 EQU   @RC00479
@RT00626 EQU   ISTA0051
@RT00600 EQU   @RC00590
@RC00585 EQU   @RC00570
@RC00734 EQU   @RC00731
@RT00772 EQU   ISTA0072
@RF00792 EQU   @RC00695
@RC00856 EQU   @RC00853
@RT01086 EQU   @RC01082
@RC00947 EQU   @RC00886
@RC00833 EQU   @RC00827
@RC00880 EQU   @RC00827
@PB00002 EQU   @PB00003
@RC00485 EQU   @RC00481
@RC00955 EQU   @RC00947
@RT00882 EQU   @RC00880
@RC01129 EQU   @RC00880
@RC00958 EQU   @RC00955
@RC00990 EQU   @RC00958
@ENDDATA EQU   *
         END   ISTDCC00,(C'PLS1742',0603,75288)
