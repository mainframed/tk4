SVTM     TITLE 'ISTCSCRL - CONNECTION SERVICES RELEASE ROUTINE         *
                        '
         ISEQ  73,80
ISTCSCRL CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'ISTCSCRL  78.037'                              01S0002
         DROP  @15
@PROLOG  BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
          ENTRY DOREL,ACQDONE
         PRINT ON
*   SAVERET1=RETPTR;                /* SAVE RETURN ADDRESS           */
         ST    RETPTR,SAVERET1(,SAVEPTR)                        01S0564
*   RFY                                                         01S0565
*     RETPTR UNRSTD;                                            01S0565
*   DO;                             /* SETCRR                   01S0566
*                                      FNID(CNSRLIN)TYPE(ENTRY)      */
*     CRACRR->CNSTFLDB=''B;         /* CLEAR CURRENT TRACE FIELD     */
         L     @14,RPHCRR(,RPHPTR)                              01S0567
         L     @14,CRACRR(,@14)                                 01S0567
         XC    CNSTFLDB(3,@14),CNSTFLDB(@14)                    01S0567
*     CRACRR->CNSRLINA='1'B;        /* SET HISTORY FLAG              */
         OI    CNSRLINA(@14),B'00000100'                        01S0568
*     CRACRR->CNSRLINB='1'B;        /* SET CURRENT FLAG              */
         OI    CNSRLINB(@14),B'00000100'                        01S0569
*   END;                            /* SETCRR                        */
*   FREECES=0;                      /* INITIALISE FREE CE CHAIN      */
         SLR   @14,@14                                          01S0571
         ST    @14,FREECES(,SAVEPTR)                            01S0571
*   CSPPTR=RPHCSPA;                 /* SET UP POINTER TO PARM LIST   */
         L     CSPPTR,RPHCSPA(,RPHPTR)                          01S0572
*   RAPPTR=CSPSRC;                  /* SET UP APPLICATION RDTE PTR   */
         L     RAPPTR,CSPSRC(,CSPPTR)                           01S0573
*   TERMPTR=CSLRDTE;                /* SETUP TRML RDTE PTR   @D32CKMP*/
         L     @07,CSPRSCE(,CSPPTR)                             01S0574
         L     TERMPTR,CSLRDTE(,@07)                            01S0574
*   CEPTR=0;                        /* INITIALISE CEPTR TO OBTAIN CE
*                                      OFFSET                        */
*                                                               01S0575
         LR    CEPTR,@14                                        01S0575
*   /*****************************************************************/
*   /*                                                               */
*   /* SEE IF REQUEST IS FOR REALLOCATION ONLY. IF SO, DO IT         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0576
*   IF CSPNOREL=BITON THEN                                      01S0576
         TM    CSPNOREL(CSPPTR),B'00100000'                     01S0576
         BNO   @RF00576                                         01S0576
*     DO;                           /* IF REALLOCATION ONLY          */
*                                                               02S0578
*       /*************************************************************/
*       /*                                                           */
*       /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO HANDLE A REQUEST */
*       /* FOR REALLOCATION WITHOUT RELEASE. IF THE TERMINAL IS      */
*       /* CONNECTED OR LOGGED ON TO AN APPLICATION, THE REQUESTOR IS*/
*       /* INFORMED THAT THE REALLOCATION DID NOT OCCUR BECAUSE THE  */
*       /* RESOURCE WAS NOT FREE. OTHERWISE, THIS FUNCTION IS INVOKED*/
*       /* TO REALLOCATE THE RESOURCE SPECIFIED.                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0578
*NOREL:                                                         02S0578
*       DO;                         /* BGN OF NOREL LOGIC SEGMENT
*                                                            @D32CKMP*/
NOREL    DS    0H                                               02S0579
*         IF RCPACETR^=ADDR(RCPACETR)×/* IF CONNECTED        @DL29HMP*/
*             RCPICELN^=ADDR(RCPICELN)/* OR LOGGED ON        @DL29HMP*/
*           THEN                    /* TELL REQUESTOR        @DL29HMP*/
         LA    @14,RCPACETR(,TERMPTR)                           02S0579
         C     @14,RCPACETR(,TERMPTR)                           02S0579
         BNE   @RT00579                                         02S0579
         LA    @14,RCPICELN(,TERMPTR)                           02S0579
         C     @14,RCPICELN(,TERMPTR)                           02S0579
         BE    @RF00579                                         02S0579
@RT00579 DS    0H                                               02S0580
*           CSPCC=NOTFREE;          /* FAILED - NOT FREE     @DL29HMP*/
         MVC   CSPCC(2,CSPPTR),@CH03865                         02S0580
*         ELSE                      /*                       @DL29HMP*/
*           CALL DOREL;             /* REALLOCATE RSC        @DL29HMP*/
         B     @RC00579                                         02S0581
@RF00579 BAL   @14,DOREL                                        02S0581
*       END NOREL;                  /* END OF NOREL LOGIC SEGMENT
*                                                            @D32CKMP*/
@RC00579 DS    0H                                               02S0583
*     END;                                                      01S0583
*   ELSE                                                        01S0584
*     DO;                           /* NORMAL RELEASE                */
*                                                               01S0584
         B     @RC00576                                         01S0584
@RF00576 DS    0H                                               01S0585
*       /*************************************************************/
*       /*                                                           */
*       /* USE SEARCHQ COMMON SUBROUTINE TO LOOK FOR ACE CONNECTING  */
*       /* PARTIES (I.E.CONNECTING THE REQUESTOR AND THE TERMINAL    */
*       /* SPECIFIED.                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0585
*       RPHSAVE1=ADDR(RCPACETR);    /* CHAIN IS THE ACES QUEUED ON
*                                      THE TERMINAL                  */
         LA    @14,RCPACETR(,TERMPTR)                           01S0585
         ST    @14,RPHSAVE1(,RPHPTR)                            01S0585
*       RPHSAVE2=ADDR(ACEOBJQ);     /* LINK FIELD IS ACEOBJQ         */
         LA    @14,ACEOBJQ(,ACEPTR)                             01S0586
         ST    @14,RPHSAVE2(,RPHPTR)                            01S0586
*       RPHSAVE3=ADDR(ACESUBJ);     /* COMPARE FIELD IS ACESUBJ      */
         ST    ACEPTR,RPHSAVE3(,RPHPTR)                         01S0587
*       RPHSAVE4=RAPPTR;            /* COMPARE VALUE IS RAPPTR       */
         ST    RAPPTR,RPHSAVE4(,RPHPTR)                         01S0588
*       ENTRYREG=SRCHQPTR;          /* POINT AT SEARCHQ ROUTINE      */
         L     @07,ATCCSMA(,ATCVTPTR)                           01S0589
         L     ENTRYREG,SRCHQPTR+64(,@07)                       01S0589
*       CALL MXTRN;                 /* CALL SEARCHQ ROUTINE          */
         BALR  @14,@15                                          01S0590
*       IF RETVAL^=NOTINQ THEN                                  01S0591
         LTR   RETVAL,RETVAL                                    01S0591
         BZ    @RF00591                                         01S0591
*         DO;                       /* IF ACE IS PRESENT             */
*                                                               02S0593
*           /*********************************************************/
*           /*                                                       */
*           /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO DISCONNECT   */
*           /* THE ACE REALLOCATE THE TERMINAL RDT ENTRY, IF         */
*           /* NECESSARY, BECAUSE THE RELEASER WAS IN SESSION WITH   */
*           /* THE TERMINAL.                                         */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0593
*TRUEREL:                                                       02S0593
*           DO;                     /* BGN OF TRUEREL LOGIC SEGMENT
*                                                            @D32CKMP*/
TRUEREL  DS    0H                                               02S0594
*             DO;                   /* SETCRR                   02S0594
*                                      FNID(CNSTRRL)TYPE(SENTRY)     */
*               CRACRR->CNSTRRLA='1'B;/* SET HISTORY FLAG            */
         L     @14,RPHCRR(,RPHPTR)                              02S0595
         L     @14,CRACRR(,@14)                                 02S0595
         OI    CNSTRRLA(@14),B'00000001'                        02S0595
*               CRACRR->CNSTRRLB='1'B;/* SET CURRENT FLAG            */
         OI    CNSTRRLB(@14),B'00000001'                        02S0596
*             END;                  /* SETCRR                        */
*             ACEPTR=RETVAL->ADDRESS;/* SET UP PTR TO ACE            */
         L     ACEPTR,ADDRESS(,RETVAL)                          02S0598
*             RETVAL->ADDRESS=ACEOBJQ;/* DEQ ACE FROM TRMNL          */
*                                                               02S0599
         MVC   ADDRESS(4,RETVAL),ACEOBJQ(ACEPTR)                02S0599
*             /*******************************************************/
*             /*                                                     */
*             /* FIND LINK PRECEDING ACE IN APPLS RAPACEAP QUEUE     */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0600
*             RETVAL=ADDR(RAPACEAP);/* START AT TOP OF Q             */
         LA    RETVAL,RAPACEAP(,RAPPTR)                         02S0600
*             DO WHILE(RETVAL->ADDRESS^=ACEPTR);/* ACE IS KNOWN TO BE
*                                      THERE                         */
         B     @DE00601                                         02S0601
@DL00601 DS    0H                                               02S0602
*               RETVAL=ADDR(RETVAL->ADDRESS->ACESUBJQ);/* MOVE TO
*                                      NEXT ACE                      */
         L     @14,ADDRESS(,RETVAL)                             02S0602
         LA    @14,ACESUBJQ(,@14)                               02S0602
         LR    RETVAL,@14                                       02S0602
*             END;                                              02S0603
@DE00601 C     ACEPTR,ADDRESS(,RETVAL)                          02S0603
         BNE   @DL00601                                         02S0603
*             RETVAL->ADDRESS=ACESUBJQ;/* DEQ ACE FROM RAPACEAQ Q    */
         MVC   ADDRESS(4,RETVAL),ACESUBJQ(ACEPTR)               02S0604
*             RAPACEQD=RAPACEQD-1;  /* DECREMENT CT OF ACES QD ON    */
*                                                               02S0605
         LH    @14,RAPACEQD(,RAPPTR)                            02S0605
         BCTR  @14,0                                            02S0605
         STH   @14,RAPACEQD(,RAPPTR)                            02S0605
*             /*******************************************************/
*             /*                                                     */
*             /* CALL ACCOUNTING EXIT FOR BROKEN SESSION             */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0606
*             IF ATCACCTA^=0 THEN   /* IF ACCT EXIT SUPPLIED         */
         ICM   @14,15,ATCACCTA(ATCVTPTR)                        02S0606
         BZ    @RF00606                                         02S0606
*               DO;                                             02S0607
*                 TRMPTR=-TRMPTR;   /* COMPLEMENTED FOR BREAK        */
         LCR   TRMPTR,TRMPTR                                    02S0608
*                 ENTRYREG=ACCTPTR; /* POINT TO DOACCT ROUTN         */
         L     @07,ATCCSMA(,ATCVTPTR)                           02S0609
         L     ENTRYREG,ACCTPTR+100(,@07)                       02S0609
*                 CALL MXTRN;                                   02S0610
         BALR  @14,@15                                          02S0610
*               END;                                            02S0611
*                                                               02S0611
*             /*******************************************************/
*             /*                                                     */
*             /* ADD RELEASED ACE TO FREE ELEMENT CHAIN              */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0612
*             ACEPTR->ICESIDE=FREECES;/* CHAIN CE ON TO FREE CHAIN   */
@RF00606 MVC   ICESIDE(4,ACEPTR),FREECES(SAVEPTR)               02S0612
*             FREECES=ACEPTR;       /* COMPLETE FREE CE CHAIN        */
         ST    ACEPTR,FREECES(,SAVEPTR)                         02S0613
*             CSPRLRPH=ENDON;       /* PREPARE TO POST ALL RPHS 02S0614
*                                      EXCEPT THAT ACCOCIATED WITH
*                                      HALF CLOSED TERMINAL          */
         MVC   CSPRLRPH(4,CSPPTR),@CF00045                      02S0614
*             CALL DOREL;           /* REALLOCATE TRMNL              */
         BAL   @14,DOREL                                        02S0615
*             DO;                   /* SETCRR                   02S0616
*                                      FNID(CNSTRRL)TYPE(SEXIT)      */
*               CRACRR->CNSTRRLB='0'B;/* TURN OFF CURRENT FLAG       */
         L     @14,RPHCRR(,RPHPTR)                              02S0617
         L     @14,CRACRR(,@14)                                 02S0617
         NI    CNSTRRLB(@14),B'11111110'                        02S0617
*             END;                  /* SETCRR                        */
*           END TRUEREL;            /* END OF TRUEREL LOGIC SEGMENT
*                                                            @D32CKMP*/
*         END;                                                  01S0620
*       ELSE                                                    01S0621
*         DO;                       /* IF ACE IS NOT PRESENT THEN
*                                      LOOK FOR ACQUIRE ICE QUEUED ON
*                                      TERMINAL                      */
         B     @RC00591                                         01S0621
@RF00591 DS    0H                                               01S0622
*           RPHSAVE1=ADDR(RCPICEAQ);/* CHAIN IS THE ACQUIRE ICES
*                                      QUEUED ON TERMINAL            */
         LA    @14,RCPICEAQ(,TERMPTR)                           01S0622
         ST    @14,RPHSAVE1(,RPHPTR)                            01S0622
*           RPHSAVE2=ADDR(ICEOBJQ); /* LINK FIELD IS ICEOBJQ         */
         LA    @14,ICEOBJQ(,ICEPTR)                             01S0623
         ST    @14,RPHSAVE2(,RPHPTR)                            01S0623
*           RPHSAVE3=ADDR(ICESUBJ); /* COMPARE FIELD=CIESUBJ         */
         ST    ICEPTR,RPHSAVE3(,RPHPTR)                         01S0624
*           ENTRYREG=SRCHQPTR;      /* POINT TO SEARCHQ ROUTINE      */
         L     @07,ATCCSMA(,ATCVTPTR)                           01S0625
         L     ENTRYREG,SRCHQPTR+64(,@07)                       01S0625
*           CALL MXTRN;             /* CALL SEARCHQ                  */
         BALR  @14,@15                                          01S0626
*           IF RETVAL^=NOTINQ THEN                              01S0627
         LTR   RETVAL,RETVAL                                    01S0627
         BZ    @RF00627                                         01S0627
*             DO;                   /* IF ICE IS PRESENT             */
*                                                               02S0629
*               /*****************************************************/
*               /*                                                   */
*               /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO          */
*               /* DISCONNECT THE TERMINAL ASSOCIATED WITH THE       */
*               /* RELEASER VIA AN ACQUIRE ICE AND SEE HOW THIS      */
*               /* AFFECTS THE TERMINAL AND THE QUEUED REQUESTS.     */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0629
*REQREL:                                                        02S0629
*               DO;                 /* BGN OF REQREL LOGIC SEGMENT
*                                                            @D32CKMP*/
REQREL   DS    0H                                               02S0630
*                 DO;               /* SETCRR                   02S0630
*                                      FNID(CNSRQRL)TYPE(SENTRY)     */
*                   CRACRR->CNSRQRLA='1'B;/* SET HISTORY FLAG        */
         L     @14,RPHCRR(,RPHPTR)                              02S0631
         L     @14,CRACRR(,@14)                                 02S0631
         OI    CNSRQRLA(@14),B'10000000'                        02S0631
*                   CRACRR->CNSRQRLB='1'B;/* SET CURRENT FLAG        */
         OI    CNSRQRLB(@14),B'10000000'                        02S0632
*                 END;              /* SETCRR                        */
*                 ICEPTR=RETVAL->ADDRESS;/* POINT TO ASSOCIATING ICE */
         L     ICEPTR,ADDRESS(,RETVAL)                          02S0634
*                 RETVAL->ADDRESS=ICEOBJQ;/* DEQUEUE ICE FROM   02S0635
*                                      TERMINAL                      */
         MVC   ADDRESS(4,RETVAL),ICEOBJQ(ICEPTR)                02S0635
*                 IF ICESTAPR=BITON /* IF ICE SHOULDER TAP FLAG IS
*                                      SET                           */
*                   THEN            /* ACQUIRER IS A SHOULDER TAPPER,
*                                      SO                            */
         TM    ICESTAPR(ICEPTR),B'00001000'                     02S0636
         BNO   @RF00636                                         02S0636
*                   RPRSTPCT=RPRSTPCT-1;/* DECREMENT COUNT OF   02S0637
*                                      SHOULDER TAPPERS              */
*                                                               02S0637
         LH    @14,RPRSTPCT(,TERMPTR)                           02S0637
         BCTR  @14,0                                            02S0637
         STH   @14,RPRSTPCT(,TERMPTR)                           02S0637
*                 /***************************************************/
*                 /*                                                 */
*                 /* ...IN THE RESOURCE RDTE                         */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0638
*                 AVAILFLG=BITOF;   /* INITIALISE TO TERM NOT   02S0638
*                                      AVAILABLE                     */
@RF00636 NI    AVAILFLG(SAVEPTR),B'01111111'                    02S0638
*                 IF(RCPICEAQ=ICEOBJQ)/* IF ICE WAS AT TOP OF QUEUE  */
*                     &(RPRLIVE=BITON)/* ...AND TERMINAL WAS LIVE    */
*                     &(RCPICELN=ADDR(RCPICELN)) THEN/* & TERM NOT IN
*                                      LOGON STATE                   */
         CLC   RCPICEAQ(4,TERMPTR),ICEOBJQ(ICEPTR)              02S0639
         BNE   @RF00639                                         02S0639
         TM    RPRLIVE(TERMPTR),B'00000001'                     02S0639
         BNO   @RF00639                                         02S0639
         LA    @14,RCPICELN(,TERMPTR)                           02S0639
         C     @14,RCPICELN(,TERMPTR)                           02S0639
         BNE   @RF00639                                         02S0639
*                   IF RCPACETR=ADDR(RCPACETR) THEN/* IF NO ACES
*                                      QUEUED                        */
         LA    @14,RCPACETR(,TERMPTR)                           02S0640
         C     @14,RCPACETR(,TERMPTR)                           02S0640
         BNE   @RF00640                                         02S0640
*                     AVAILFLG=BITON;/* TERMINAL WAS AVAILABLE       */
         OI    AVAILFLG(SAVEPTR),B'10000000'                    02S0641
*                   ELSE            /* ACES QUEUED                   */
*                     DO;                                       02S0642
         B     @RC00640                                         02S0642
@RF00640 DS    0H                                               02S0643
*                       RETVAL=RCPACETR;/* FIRST ACE                 */
         L     RETVAL,RCPACETR(,TERMPTR)                        02S0643
*                       DO WHILE(RETVAL->ACEOBJQ^=ADDR(RCPACETR));/*
*                                      SEARCH FOR END OF CHAIN       */
         B     @DE00644                                         02S0644
@DL00644 DS    0H                                               02S0645
*                         RETVAL=RETVAL->ACEOBJQ;               02S0645
         L     RETVAL,ACEOBJQ(,RETVAL)                          02S0645
*                       END;                                    02S0646
@DE00644 LA    @14,RCPACETR(,TERMPTR)                           02S0646
         C     @14,ACEOBJQ(,RETVAL)                             02S0646
         BNE   @DL00644                                         02S0646
*                     END;                                      02S0647
*                                                               02S0647
*                 /***************************************************/
*                 /*                                                 */
*                 /* DEQUEUE ICE FROM APPLICATION RAPICEAQ CHAIN     */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0648
*                 RETVAL=ADDR(RAPICEAQ);/* POINT TO FIRST LINK       */
@RC00640 DS    0H                                               02S0648
@RF00639 LA    RETVAL,RAPICEAQ(,RAPPTR)                         02S0648
*                 DO WHILE(RETVAL->ADDRESS^=ICEPTR);/* SEARCH FOR END
*                                      OF CHAIN                      */
         B     @DE00649                                         02S0649
@DL00649 DS    0H                                               02S0650
*                   RETVAL=ADDR(RETVAL->ADDRESS->ICESUBJQ);     02S0650
         L     @14,ADDRESS(,RETVAL)                             02S0650
         LA    @14,ICESUBJQ(,@14)                               02S0650
         LR    RETVAL,@14                                       02S0650
*                 END;                                          02S0651
@DE00649 C     ICEPTR,ADDRESS(,RETVAL)                          02S0651
         BNE   @DL00649                                         02S0651
*                 RETVAL->ADDRESS=ICESUBJQ;/* DEQUEUE ICE FROM APPL  */
         MVC   ADDRESS(4,RETVAL),ICESUBJQ(ICEPTR)               02S0652
*                                                               03S0653
*                 /***************************************************/
*                 /*                                                 */
*                 /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO DEAL   */
*                 /* WITH THE TERMINAL RDT ENTRY AND THE REMAINDER OF*/
*                 /* A QUEUED REQUEST AFTER THE ICE HAS BEEN DEQUEUED*/
*                 /* FROM THE TERMINAL AND APPLICATION RDT ENTRIES.  */
*                 /*                                                 */
*                 /***************************************************/
*                                                               03S0653
*REQREL1:                                                       03S0653
*                 DO;               /* BGN OF REQREL1 LOGIC SEGMENT
*                                                            @D32CKMP*/
REQREL1  DS    0H                                               03S0654
*                   RFY                                         03S0654
*                     NEXTICE RSTD;                             03S0654
*                   ICXPTR=0;       /* INITIALISE PTR TO ICX         */
         SLR   @14,@14                                          03S0655
         LR    ICXPTR,@14                                       03S0655
*                   IF ICESIDE=ICEPTR THEN                      03S0656
         C     ICEPTR,ICESIDE(,ICEPTR)                          03S0656
         BNE   @RF00656                                         03S0656
*                     DO;           /* IF NO OTHER ICES IN REQUEST   */
*                       NEXTICE=0;  /* NO OTHER ICE                  */
         LR    NEXTICE,@14                                      03S0658
*                       IF ICELGON='0'B THEN                    03S0659
         TM    ICELGON(ICEPTR),B'00100000'                      03S0659
         BNZ   @RF00659                                         03S0659
*                         DO;       /* FOR ACQUIRE                   */
*                           ICERPHA->RPHCSPA->CSPCC=ENDRQD;     03S0661
*                                                               03S0661
         L     @14,ICERPHA(,ICEPTR)                             03S0661
         L     @07,RPHCSPA(,@14)                                03S0661
         MVC   CSPCC(2,@07),@CH03860                            03S0661
*                           /*****************************************/
*                           /*                                       */
*                           /* INDICATE TO ACQUIRER END OF REQUEST   */
*                           /*                                       */
*                           /*****************************************/
*                                                               03S0662
*                           ICERPHA->RPHNEXPO=CSPRLRPH;/* POINT RPH
*                                      TO OTHER WAITING RPHS         */
         MVC   RPHNEXPO(4,@14),CSPRLRPH(CSPPTR)                 03S0662
*                           CSPRLRPH=ICERPHA;/* INDICATE RPH TO BE
*                                      POSTED                        */
         ST    @14,CSPRLRPH(,CSPPTR)                            03S0663
*                         END;                                  03S0664
*                                                               03S0664
*                       /*********************************************/
*                       /*                                           */
*                       /* FREE THE LOGON DATA BUFFERS IF ANY        */
*                       /*                                           */
*                       /*********************************************/
*                                                               03S0665
*                       ELSE                                    03S0665
*                         DO;       /* LOOK FOR LOGON DATA BUFFERS   */
         B     @RC00659                                         03S0665
@RF00659 DS    0H                                               03S0666
*                           RFY                                 03S0666
*                             STRGPTR1 RSTD;                    03S0666
*                           IF ICEDATA^=0 THEN                  03S0667
         L     @14,ICEDATA(,ICEPTR)                             03S0667
         LTR   @14,@14                                          03S0667
         BZ    @RF00667                                         03S0667
*                             DO;   /* IF THERE ARE LOGON BUFFERS    */
*                               STRGPTR1=-ICEDATA;/* INDICATE CHAIN
*                                      OF BUFFERS                    */
         LR    STRGPTR1,@14                                     03S0669
         LCR   STRGPTR1,STRGPTR1                                03S0669
*                               ENTRYREG=FRESTPTR;/* POINT TO   03S0670
*                                      FREESTOR RTNE                 */
         L     @04,ATCCSMA(,ATCVTPTR)                           03S0670
         L     ENTRYREG,FRESTPTR+96(,@04)                       03S0670
*                               CALL MXTRN;/* FREE BUFFERS           */
         BALR  @14,@15                                          03S0671
*                               ICEDATA=0;/* FREE BUFFER PTR @ZA18925*/
         SLR   @14,@14                                          03S0672
         ST    @14,ICEDATA(,ICEPTR)                             03S0672
*                             END;                              03S0673
*                           RFY                                 03S0674
*                             STRGPTR1 UNRSTD;                  03S0674
@RF00667 DS    0H                                               03S0675
*                         END;                                  03S0675
*                     END;                                      03S0676
*                   ELSE                                        03S0677
*                     DO;           /* OTHER ICES QUEUED WITH THIS   */
         B     @RC00656                                         03S0677
@RF00656 DS    0H                                               03S0678
*                       NEXTICE=ICESIDE;/* NEXT ICE IN SIDE Q        */
         L     NEXTICE,ICESIDE(,ICEPTR)                         03S0678
*                       DO WHILE(NEXTICE->ICESIDE^=ICEPTR);/* SEARCH
*                                      FOR END OF CHAIN              */
         B     @DE00679                                         03S0679
@DL00679 DS    0H                                               03S0680
*                         NEXTICE=NEXTICE->ICESIDE;             03S0680
         L     NEXTICE,ICESIDE(,NEXTICE)                        03S0680
*                       END;                                    03S0681
@DE00679 C     ICEPTR,ICESIDE(,NEXTICE)                         03S0681
         BNE   @DL00679                                         03S0681
*                       NEXTICE->ICESIDE=ICESIDE;/* DEQUEUE ICE FROM
*                                      SIDE CHAIN                    */
         MVC   ICESIDE(4,NEXTICE),ICESIDE(ICEPTR)               03S0682
*                     END;                                      03S0683
*                   IF ICEICX=BITON THEN                        03S0684
@RC00656 TM    ICEICX(ICEPTR),B'01000000'                       03S0684
         BNO   @RF00684                                         03S0684
*                     DO;           /* IF ICX PRESENT                */
*                       ICXPTR=ICEUECBX;/* POINT TO ICE              */
         L     ICXPTR,ICEUECBX(,ICEPTR)                         03S0686
*                       ICEUECBX=0; /* INITIALISE TO NO FREE UECB    */
         SLR   @14,@14                                          03S0687
         ST    @14,ICEUECBX(,ICEPTR)                            03S0687
*                       IF NEXTICE=0 THEN/* IF NO MORE ICES          */
         CR    NEXTICE,@14                                      03S0688
         BNE   @RF00688                                         03S0688
*                         IF ICXUECBA^=ADDR(ICXUECBA) THEN/* AND
*                                      THERE ARE UECBS               */
         L     @14,ICXUECBA(,ICXPTR)                            03S0689
         CR    @14,ICXPTR                                       03S0689
         BE    @RF00689                                         03S0689
*                           ICEUECBX=ICXUECBA;/* TRANSFER POSSIBLE
*                                      UECBS TO ICE                  */
         ST    @14,ICEUECBX(,ICEPTR)                            03S0690
*                         ELSE                                  03S0691
*                           ;                                   03S0691
@RF00689 DS    0H                                               03S0692
*                       ELSE                                    03S0692
*                         IF ICXREQCT^=1 THEN/* FOR COREQUESITE      */
         B     @RC00688                                         03S0692
@RF00688 LH    @14,ICXREQCT(,ICXPTR)                            03S0692
         CH    @14,@CH00045                                     03S0692
         BE    @RF00692                                         03S0692
*                           DO;                                 03S0693
*                             ICXREQCT=ICXREQCT-1;/* DECREMENT  03S0694
*                                      REQUIRED COUNT                */
         BCTR  @14,0                                            03S0694
         STH   @14,ICXREQCT(,ICXPTR)                            03S0694
*                             IF AVAILFLG=BITON THEN/* IF TERM  03S0695
*                                      RELEASED WAS AVAILABLE        */
         TM    AVAILFLG(SAVEPTR),B'10000000'                    03S0695
         BNO   @RF00695                                         03S0695
*                               ICXAVLCT=ICXAVLCT-1;/* DECREMENT
*                                      AVAIL COUNT                   */
         LH    @14,ICXAVLCT(,ICXPTR)                            03S0696
         BCTR  @14,0                                            03S0696
         STH   @14,ICXAVLCT(,ICXPTR)                            03S0696
*                             IF ICXUECBA^=ADDR(ICXUECBA) THEN  03S0697
@RF00695 L     @14,ICXUECBA(,ICXPTR)                            03S0697
         CR    @14,ICXPTR                                       03S0697
         BE    @RF00697                                         03S0697
*                               DO; /* IF UECB QUEUE NOT EMPTY       */
*                                 ICEUECBX=ICXUECBA;/* PUT A UECB ON
*                                      ICE                           */
         ST    @14,ICEUECBX(,ICEPTR)                            03S0699
*                                 ICXUECBA=ICXUECBA->UECFORW;/* 03S0700
*                                      DEQUEUE UECB FROM ICX         */
         L     @14,UECFORW(,@14)                                03S0700
         ST    @14,ICXUECBA(,ICXPTR)                            03S0700
*                               END;                            03S0701
*                           END;                                03S0702
@RF00697 DS    0H                                               03S0703
*                     END;                                      03S0703
*                                                               03S0703
@RF00692 DS    0H                                               03S0703
@RC00688 DS    0H                                               03S0704
*                   /*************************************************/
*                   /*                                               */
*                   /* FREE ICE AND UECB IF THERE IS ONE QUEUEUD     */
*                   /*                                               */
*                   /*************************************************/
*                                                               03S0704
*                   IF ICEUECBX^=0 THEN/* IF UECB QUEUED ON ICE      */
@RF00684 L     @14,ICEUECBX(,ICEPTR)                            03S0704
         LTR   @14,@14                                          03S0704
         BZ    @RF00704                                         03S0704
*                     DO;                                       03S0705
*                       RFY                                     03S0706
*                        (FREEOFF,                              03S0706
*                         STRGPTR) RSTD;                        03S0706
*                       FREEOFF=-1; /* INDICATE SINGLE BLOCK         */
         SLR   FREEOFF,FREEOFF                                  03S0707
         BCTR  FREEOFF,0                                        03S0707
*                       STRGPTR=ICEUECBX;/* ACCESS UECB              */
         LR    STRGPTR,@14                                      03S0708
*                       ENTRYREG=FRESTPTR;/* POINT TO FREESTOR  03S0709
*                                      ROUTINE                       */
         L     @04,ATCCSMA(,ATCVTPTR)                           03S0709
         L     ENTRYREG,FRESTPTR+96(,@04)                       03S0709
*                       CALL MXTRN; /* FREE UECB                     */
         BALR  @14,@15                                          03S0710
*                       RFY                                     03S0711
*                        (FREEOFF,                              03S0711
*                         STRGPTR) UNRSTD;                      03S0711
*                     END;                                      03S0712
*                   ICESIDE=FREECES;/* ADD RELEASE ICE...            */
@RF00704 MVC   ICESIDE(4,ICEPTR),FREECES(SAVEPTR)               03S0713
*                   FREECES=ICEPTR; /* ....TO FREE CE CHAIN          */
         ST    ICEPTR,FREECES(,SAVEPTR)                         03S0714
*                   IF NEXTICE=0 THEN/* IF NO MORE ICES              */
         SLR   @14,@14                                          03S0715
         CR    NEXTICE,@14                                      03S0715
         BNE   @RF00715                                         03S0715
*                     IF ICXPTR^=0 THEN                         03S0716
         CR    ICXPTR,@14                                       03S0716
         BE    @RF00716                                         03S0716
*                       DO;         /* FREE ICX                      */
*                         ICXPTR->ICESIDE=FREECES;/* ADD ICX TO...   */
         L     @14,FREECES(,SAVEPTR)                            03S0718
         ST    @14,ICESIDE(,ICXPTR)                             03S0718
*                         FREECES=ICXPTR;/* ...FREE CE CHAIN         */
         ST    ICXPTR,FREECES(,SAVEPTR)                         03S0719
*                       END;                                    03S0720
*                     ELSE                                      03S0721
*                       ;           /* NO ICX                        */
@RF00716 DS    0H                                               03S0722
*                   ELSE                                        03S0722
*                     DO;           /* OTHER ICES TO DEAL WITH       */
         B     @RC00715                                         03S0722
@RF00715 DS    0H                                               03S0723
*                       IF ICXREQCT=ICXAVLCT THEN/* IF REQUEST  03S0723
*                                      COMPLETE                      */
         LH    @14,ICXAVLCT(,ICXPTR)                            03S0723
         CH    @14,ICXREQCT(,ICXPTR)                            03S0723
         BNE   @RF00723                                         03S0723
*                         DO;       /* CALL ACQDONE TO SATISFY  03S0724
*                                      REQUEST                       */
*                           RFY                                 03S0725
*                             AVAILCT RSTD;                     03S0725
*                           AVAILCT=ICXAVLCT;/* NO OT TERMS TO  03S0726
*                                                             SATISFY*/
         LR    AVAILCT,@14                                      03S0726
*                           ICEPTR=NEXTICE;/* AN AVAILABLE TERM IN Q */
         LR    ICEPTR,NEXTICE                                   03S0727
*                           CALL ACQDONE;                       03S0728
         BAL   @14,ACQDONE                                      03S0728
*                           RFY                                 03S0729
*                             AVAILCT UNRSTD;                   03S0729
*                         END;                                  03S0730
*                     END;                                      03S0731
*                                                               03S0731
@RF00723 DS    0H                                               03S0732
*                   /*************************************************/
*                   /*                                               */
*                   /* IF RELEASED ICE WAS WAITING ON AVAILABLE      */
*                   /* TERMINAL, CALL DOREL TO REALLOCATE THE        */
*                   /* TERMINAL                                      */
*                   /*                                               */
*                   /*************************************************/
*                                                               03S0732
*                   IF AVAILFLG=BITON THEN/* IF TERMINAL AVAILABLE   */
@RC00715 TM    AVAILFLG(SAVEPTR),B'10000000'                    03S0732
         BNO   @RF00732                                         03S0732
*                     CALL DOREL;                               03S0733
         BAL   @14,DOREL                                        03S0733
*                   RFY                                         03S0734
*                     NEXTICE UNRSTD;                           03S0734
@RF00732 DS    0H                                               03S0735
*                 END REQREL1;      /* END OF REQREL1 LOGIC SEGMENT
*                                                            @D32CKMP*/
*                 DO;               /* SETCRR                   02S0736
*                                      FNID(CNSRQRL)TYPE(SEXIT)      */
*                   CRACRR->CNSRQRLB='0'B;/* TURN OFF CURRENT FLAG   */
         L     @14,RPHCRR(,RPHPTR)                              02S0737
         L     @14,CRACRR(,@14)                                 02S0737
         NI    CNSRQRLB(@14),B'01111111'                        02S0737
*                 END;              /* SETCRR                        */
*               END REQREL;         /* END OF REQREL LOGIC SEGMENT
*                                                            @D32CKMP*/
*             END;                                              01S0740
*           ELSE                                                01S0741
*             DO;                   /* IF ICE IS NOT PRESENT THEN
*                                      LOOK FOR LOGON ICE CONNECTING
*                                      PARTIES                       */
         B     @RC00627                                         01S0741
@RF00627 DS    0H                                               01S0742
*               IF((RCPICELN^=ADDR(RCPICELN))&(RCPICELN->ICESUBJ=RAPPTR
*                   ))              /* IF QUEUE IS NOT EMPTY AND
*                                      LOGON ICE BELONGS TO     01S0742
*                                      APPLICATION                   */
*                 THEN                                          01S0742
         L     @14,RCPICELN(,TERMPTR)                           01S0742
         LA    @07,RCPICELN(,TERMPTR)                           01S0742
         CR    @14,@07                                          01S0742
         BE    @RF00742                                         01S0742
         C     RAPPTR,ICESUBJ(,@14)                             01S0742
         BNE   @RF00742                                         01S0742
*                 DO;                                           01S0743
*                                                               02S0744
*                   /*************************************************/
*                   /*                                               */
*                   /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO      */
*                   /* DISCONNECT AND REALLOCATE A TERMINAL, IF THE  */
*                   /* TERMINAL WAS LOGGED ON TO THE RELEASER.       */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0744
*LOGREL:                                                        02S0744
*                   DO;             /* BGN OF LOGREL LOGIC SEGMENT
*                                                            @D32CKMP*/
LOGREL   DS    0H                                               02S0745
*                     ICEPTR=RCPICELN;/* POINT TO LOGON ICE          */
         L     ICEPTR,RCPICELN(,TERMPTR)                        02S0745
*                     IF ICERSC2F=BITON/* IF RSCE2 NAME FROM @D31KKMP*/
*                         &ICEOBJ->RPRNSNEA->RCCVPAB^=0/* AND VARY
*                                      PAB THERE             @ZA29005*/
*                       THEN        /* INIT RU PRESENT IN    @D31KKMP*/
         TM    ICERSC2F(ICEPTR),B'00010000'                     02S0746
         BNO   @RF00746                                         02S0746
         L     @14,ICEOBJ(,ICEPTR)                              02S0746
         L     @14,RPRNSNEA(,@14)                               02S0746
         ICM   @07,15,RCCVPAB(@14)                              02S0746
         BZ    @RF00746                                         02S0746
*                       DO;         /* THE ICE               @D31KKMP*/
*                         RFY                                   02S0748
*                           NCSPLPTR RSTD;                      02S0748
*                                                               02S0748
*                         /*******************************************/
*                         /*                                         */
*                         /* REQUEST A CLEARED STORAGE AREA IN WHICH */
*                         /* TO BUILD THE END SESSION NETWORK        */
*                         /* CONFIGURATION SERVICES PARAMETER LIST   */
*                         /* (NCSPL) FOR SENDING THE BIND FAILED.    */
*                         /* REQSTORE CBID(NCSPL)CLEAR(YES)SAVE(YES) */
*                         /*                                         */
*                         /*******************************************/
*                                                               02S0749
*                         DO;                                   02S0749
*                                                               02S0749
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                               02S0750
*                           DCL                                 02S0750
*                             GPR01F FIXED(31) REG(01);         02S0750
*                           DCL                                 02S0751
*                             GPR01P PTR(31) REG(01);           02S0751
*                           DCL                                 02S0752
*                             GPR02F FIXED(31) REG(02);         02S0752
*                           DCL                                 02S0753
*                             GPR02P PTR(31) REG(02);           02S0753
*                           DCL                                 02S0754
*                             GPR03F FIXED(31) REG(03);         02S0754
*                           DCL                                 02S0755
*                             GPR03P PTR(31) REG(03);           02S0755
*                           DCL                                 02S0756
*                             GPR04F FIXED(31) REG(04);         02S0756
*                           DCL                                 02S0757
*                             GPR04P PTR(31) REG(04);           02S0757
*                           DCL                                 02S0758
*                             GPR05F FIXED(31) REG(05);         02S0758
*                           DCL                                 02S0759
*                             GPR05P PTR(31) REG(05);           02S0759
*                           DCL                                 02S0760
*                             GPR06F FIXED(31) REG(06);         02S0760
*                           DCL                                 02S0761
*                             GPR06P PTR(31) REG(06);           02S0761
*                           DCL                                 02S0762
*                             GPR07F FIXED(31) REG(07);         02S0762
*                           DCL                                 02S0763
*                             GPR07P PTR(31) REG(07);           02S0763
*                           DCL                                 02S0764
*                             GPR08F FIXED(31) REG(08);         02S0764
*                           DCL                                 02S0765
*                             GPR08P PTR(31) REG(08);           02S0765
*                           DCL                                 02S0766
*                             GPR09F FIXED(31) REG(09);         02S0766
*                           DCL                                 02S0767
*                             GPR09P PTR(31) REG(09);           02S0767
*                           DCL                                 02S0768
*                             GPR10F FIXED(31) REG(10);         02S0768
*                           DCL                                 02S0769
*                             GPR10P PTR(31) REG(10);           02S0769
*                           DCL                                 02S0770
*                             GPR11F FIXED(31) REG(11);         02S0770
*                           DCL                                 02S0771
*                             GPR11P PTR(31) REG(11);           02S0771
*                           DCL                                 02S0772
*                             GPR12F FIXED(31) REG(12);         02S0772
*                           DCL                                 02S0773
*                             GPR12P PTR(31) REG(12);           02S0773
*                           DCL                                 02S0774
*                             GPR13F FIXED(31) REG(13);         02S0774
*                           DCL                                 02S0775
*                             GPR13P PTR(31) REG(13);           02S0775
*                           DCL                                 02S0776
*                             GPR15F FIXED(31) REG(15);         02S0776
*                           DCL                                 02S0777
*                             GPR15P PTR(31) REG(15);           02S0777
*                           RFY                                 02S0778
*                            (GPR02P,                           02S0778
*                             GPR03P,                           02S0778
*                             GPR04P,                           02S0778
*                             GPR15P) RSTD;                     02S0778
*                           RFY                                 02S0779
*                            (GPR01P,                           02S0779
*                             GPR13P) RSTD;                     02S0779
*                           GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(
*                               RPHWORK);                       02S0780
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*                           RFY                                 02S0781
*                            (GPR01P,                           02S0781
*                             GPR13P) UNRSTD;                   02S0781
*                           DO;     /* LISATCVT                 02S0782
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                             GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER*/
         L     GPR15P,ATCLCPTR                                  02S0783
*                           END;    /* LISATCVT                      */
*                           GPR02P=GPR15P->ATCBPDA×'80000000'X; 02S0785
         L     GPR02P,ATCBPDA(,GPR15P)                          02S0785
         O     GPR02P,@CF00106                                  02S0785
*                           DCL                                 02S0786
*                             1 FMZA0019 FIXED(31) STATIC LOCAL,
*                              2 * FIXED(8) INIT(152),          02S0786
*                              2 * PTR(24) INIT(0);             02S0786
*                           GPR03F=FMZA0019;                    02S0787
         L     GPR03F,FMZA0019                                  02S0787
*                           GPR04F=34;                          02S0788
         LA    GPR04F,34                                        02S0788
*                           GPR15P=GPR15P->ATCSMRQ;             02S0789
         L     GPR15P,ATCSMRQ(,GPR15P)                          02S0789
*                           DCL                                 02S0790
*                             FMZL0019 BASED(GPR15P) LABEL VALUERANGE(*
*                                 );                            02S0790
*                           CALL FMZL0019;                      02S0791
         BALR  @14,@15                                          02S0791
*                           RFY                                 02S0792
*                            (GPR13P) RSTD;                     02S0792
*                           GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,
*                               GPR13P);                        02S0793
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*                           RFY                                 02S0794
*                            (GPR13P) UNRSTD;                   02S0794
*                           RFY                                 02S0795
*                            (GPR02P,                           02S0795
*                             GPR03P,                           02S0795
*                             GPR04P,                           02S0795
*                             GPR15P) UNRSTD;                   02S0795
*                         END;      /* ******** END OF REQSTORE 02S0796
*                                      EXPANSION                     */
*                         IF RETVAL=0/* IF THE REQUIRED STORAGE      */
*                           THEN    /* ...AREA FOR BUILDING THE      */
         LTR   RETVAL,RETVAL                                    02S0797
         BNZ   @RF00797                                         02S0797
*                           DO;     /* ...NCSPL WAS OBTAINED         */
*                             NCSPLPTR=RPHSRPRM;/* SET THE NCSPL
*                                      MAPPING BASE                  */
*                                                               02S0799
         L     NCSPLPTR,RPHSRPRM(,RPHPTR)                       02S0799
*                             /***************************************/
*                             /*                                     */
*                             /* REQUEST A CLEARED STORAGE AREA TO BE*/
*                             /* USED AS THE NETWORK CONFIGURATION   */
*                             /* SERVICES PARAMETER LIST WORK AREA.  */
*                             /* GETSTOR SIZE(NCSWASZ)ADSPACE(COMMON)*/
*                             /* KEY(VTAM)TYPE(PAGEABLE)FETCHP(NO)SAV*/
*                             /* E(YES)CLEAR(YES)                    */
*                             /*                                     */
*                             /***************************************/
*                                                               02S0800
*                             DO;                               02S0800
*                                                               02S0800
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT,ISTRPH)                        */
*/* END OF ATBUILD                                                   */
*                                                               02S0801
*                               DCL                             02S0801
*                                 GPR00F FIXED(31) REG(00);     02S0801
*                               DCL                             02S0802
*                                 GPR00P PTR(31) REG(00);       02S0802
*                               DCL                             02S0803
*                                 GPR14F FIXED(31) REG(14);     02S0803
*                               DCL                             02S0804
*                                 GPR14P PTR(31) REG(14);       02S0804
*                               RFY                             02S0805
*                                (GPR00P,                       02S0805
*                                 GPR01P,                       02S0805
*                                 GPR02P,                       02S0805
*                                 GPR03P) RSTD;                 02S0805
*                               RFY                             02S0806
*                                 ISTRPH BASED(GPR01P);         02S0806
*                               GEN REFS(GPR02P,GPR03P,GPR04P,GPR05P,
*                                   GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,
*                                   GPR11P,GPR12P,GPR13P) SETS(RPHWORK)
*                                   ;                           02S0807
         STM   GPR02P,GPR13P,RPHWORK(GPR01P)        SAVE REGISTERS
*                               GPR00F=NCSWASZ;/* SIZE IN REG0       */
         LA    GPR00F,2032                                      02S0808
*                               DCL                             02S0809
*                                 1 CMZA0038 FIXED(31) STATIC LOCAL,
*                                  2 * FIXED(8) INIT(96),/* OPTION
*                                      FLAGS                         */
*                                  2 * FIXED(8) INIT(96),/* STORAGE
*                                      KEY                           */
*                                  2 * FIXED(8) INIT(241),/* SUBPOOL
*                                      NUMBER                        */
*                                  2 * FIXED(8) INIT('00'X);/*  02S0809
*                                      REQUEST TYPE                  */
*                               GPR03F=CMZA0038;                02S0810
         L     GPR03F,CMZA0038                                  02S0810
*                               DO; /* LISATCVT                 02S0811
*                                      CVTBASE(PAGEABLE,(GPR02P))    */
*                                 GPR02P=ATCLCPTR;/* SET UP ATCVT
*                                      POINTER                       */
         L     GPR02P,ATCLCPTR                                  02S0812
*                               END;/* LISATCVT                      */
*                               CALL GPR02P->ATCGTSTR;/* CALL   02S0814
*                                      ISTORFSR                      */
         L     @15,ATCGTSTR(,GPR02P)                            02S0814
         BALR  @14,@15                                          02S0814
*                               RFY                             02S0815
*                                (GPR00P,                       02S0815
*                                 GPR01P,                       02S0815
*                                 GPR02P,                       02S0815
*                                 GPR03P) UNRSTD;               02S0815
*                             END;  /* END OF GETSTOR                */
*                                                               02S0816
*                             /***************************************/
*                             /*                                     */
*                             /*                             @XL03HMP*/
*                             /*                                     */
*                             /***************************************/
*                                                               02S0817
*                             IF RETVAL=0/* IF THE REQUESTED STORAGE */
*                               THEN/* ...AREA TO BE USED AS THE     */
         LTR   RETVAL,RETVAL                                    02S0817
         BNZ   @RF00817                                         02S0817
*                               DO; /* ...WORK AREA WAS OBTAINED     */
*                                 NCSPLWKA=RPHSRPRM;/* SET WORK AREA
*                                      POINTER                       */
*                                                               02S0819
         L     @14,RPHSRPRM(,GPR01P)                            02S0819
         ST    @14,NCSPLWKA(,NCSPLPTR)                          02S0819
*                                 /***********************************/
*                                 /*                                 */
*                                 /* FORMAT THE FIRST PORTION OF THE */
*                                 /* NETWORK CONFIG- URATIONS        */
*                                 /* PARAMETER LIST.                 */
*                                 /*                                 */
*                                 /***********************************/
*                                                               02S0820
*                                 NCSPLVCD=NCSPLVC5;/* SET VERB CODE
*                                      FOR SSCP                      */
         MVI   NCSPLVCD(NCSPLPTR),X'05'                         02S0820
*                                 NCSPLVBF=NCSBF;/* SET MOD FLAGS FOR
*                                      BIND FAILURE          @DL31HMP*/
         MVC   NCSPLVBF(2,NCSPLPTR),@CB01990                    02S0821
*                                 NCSPLRPT=ICEOBJ;/* SET LOGIC UNIT
*                                      RDTE PTR                      */
         L     @04,ICEOBJ(,ICEPTR)                              02S0822
         ST    @04,NCSPLRPT(,NCSPLPTR)                          02S0822
*                                 NCSPLRID=ICEOBJ->RPRNAME;/* SET
*                                      LOGIC UNIT RDTE NAME          */
         MVC   NCSPLRID(8,NCSPLPTR),RPRNAME(@04)                02S0823
*                                 NCSPLNSN=ICEOBJ->RPRNSNEA;/* SET
*                                      NXT SCHED NODE RDTE PTR       */
         MVC   NCSPLNSN(4,NCSPLPTR),RPRNSNEA(@04)               02S0824
*                                 NCSPLLPT=ICESUBJ;/* SET APPLICATION
*                                      RDTE PTR                      */
         L     @04,ICESUBJ(,ICEPTR)                             02S0825
         ST    @04,NCSPLLPT(,NCSPLPTR)                          02S0825
*                                 NCSPLLID=ICESUBJ->RPRNAME;/* SET
*                                      APPLICATION RDTE NAME         */
*                                                               02S0826
         MVC   NCSPLLID(8,NCSPLPTR),RPRNAME(@04)                02S0826
*                                 /***********************************/
*                                 /*                                 */
*                                 /* FORMAT THE SECOND PORTION OF THE*/
*                                 /* NETWORK CONFIGURATION SERVICES  */
*                                 /* PARAMETER LIST.                 */
*                                 /*                                 */
*                                 /***********************************/
*                                                               02S0827
*                                 NCSPLCVT=ATCVTPTR;/* SET THE VTAM
*                                      CVT POINTER                   */
         ST    ATCVTPTR,NCSPLCVT(,NCSPLPTR)                     02S0827
*                                 NCSPLREQ=BITON;/* SET REQSTORE BY
*                                      CBID FLAG ON                  */
*                                                               02S0828
         OI    NCSPLREQ(NCSPLPTR),B'00010000'                   02S0828
*                                 /***********************************/
*                                 /*                                 */
*                                 /* FORMAT THE FIRST PORTION OF THE */
*                                 /* NETWORK CONFIGURATION SERVICES  */
*                                 /* PARAMETER LIST WORK AREA.       */
*                                 /*                                 */
*                                 /***********************************/
*                                                               02S0829
*                                 RFY                           02S0829
*                                   NCSWKA BASED(NCSPLWKA);/* SET
*                                      WORK AREA MAPPING BASE        */
*                                 NCSWKAW1=ADDR(NCSWKAW3);/* SET WORK
*                                      AREA STARTING PTR             */
         LA    @04,NCSWKAW3(,@14)                               02S0830
         ST    @04,NCSWKAW1(,@14)                               02S0830
*                                 NCSWKAW2=NCSWASZ;/* SET ENTIRE WORK
*                                      AREA LENGTH                   */
*                                                               02S0831
         MVC   NCSWKAW2(4,@14),@CF01974                         02S0831
*                                 /***********************************/
*                                 /*                                 */
*                                 /* QUEUE THE NETWORK CONFIGURATION */
*                                 /* SERVICES PARM LIST ON TO THE    */
*                                 /* VARY PAB OFF OF THE LOGICAL UNIT*/
*                                 /* CLUSTER RESOURCE DEFINITION     */
*                                 /* TABLE ENTRY.                    */
*                                 /*                                 */
*                                 /***********************************/
*                                                               02S0832
*                                 CALL TPQREL;/*             @D32CKXY*/
         BAL   @14,TPQREL                                       02S0832
*                               END;                            02S0833
*                             ELSE  /* FAILED TO NCSPL WORK AREA     */
*                               DO;                             02S0834
         B     @RC00817                                         02S0834
@RF00817 DS    0H                                               02S0835
*                                 CSPCC=NOCORE;/* TELL RQSTR OF FAIL
*                                                            @XL03HMP*/
         MVC   CSPCC(2,CSPPTR),@CH00442                         02S0835
*                                 IF RETVAL=4/* IF THRESHOLD REACHED
*                                                            @XL03HMP*/
*                                   THEN/*                   @XL03HMP*/
         CH    RETVAL,@CH00201                                  02S0836
         BNE   @RF00836                                         02S0836
*                                   DO;/*                    @XL03HMP*/
*                                                               02S0837
*                                    /********************************/
*                                    /*                              */
*                                    /* RELEASE THE STORAGE AREA     */
*                                    /* OBTAINED FOR THE NETWORK     */
*                                    /* CONFIGURATION SERVICES       */
*                                    /* PARAMETER LIST (NCSPL).      */
*                                    /* RELSTORE BUFADDR(RPHSRPRM)   */
*                                    /*                              */
*                                    /********************************/
*                                                               02S0838
*                                    DO;                        02S0838
*                                                               02S0838
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                               02S0839
*                                     RFY                       02S0839
*                                      (GPR02P,                 02S0839
*                                       GPR03P,                 02S0839
*                                       GPR04P,                 02S0839
*                                       GPR15P) RSTD;           02S0839
*                                     RFY                       02S0840
*                                      (GPR01P,                 02S0840
*                                       GPR13P) RSTD;           02S0840
*                                     GENERATE REFS(GPR01P,GPR02P,
*                                         GPR13P) SETS(RPHWORK);
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*                                     RFY                       02S0842
*                                       GPR13P UNRSTD;          02S0842
*                                     GPR04P=RPHSRPRM;          02S0843
         L     GPR04P,RPHSRPRM(,GPR01P)                         02S0843
*                                     DCL                       02S0844
*                                       1 FMZA0056 FIXED(31) STATIC
*                                             LOCAL,            02S0844
*                                        2 * FIXED(8) INIT(64), 02S0844
*                                        2 * PTR(24) INIT(0);   02S0844
*                                     GPR03F=FMZA0056;          02S0845
         L     GPR03F,FMZA0056                                  02S0845
*                                     DO;/* LISATCVT            02S0846
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                                      GPR15P=ATCLCPTR;/* SET UP
*                                      ATCVT POINTER                 */
         L     GPR15P,ATCLCPTR                                  02S0847
*                                     END;/* LISATCVT                */
*                                     GPR02P=GPR15P->ATCBPDA;   02S0849
         L     GPR02P,ATCBPDA(,GPR15P)                          02S0849
*                                     GPR15P=GPR15P->ATCSMRS;   02S0850
         L     GPR15P,ATCSMRS(,GPR15P)                          02S0850
*                                     DCL                       02S0851
*                                       FMZL0056 BASED(GPR15P) LABEL
*                                           VALUERANGE(*);      02S0851
*                                     CALL FMZL0056;            02S0852
         BALR  @14,@15                                          02S0852
*                                     RFY                       02S0853
*                                       GPR13P RSTD;            02S0853
*                                     GENERATE REFS(GPR01P,RPHWORK)
*                                         SETS(GPR02P,GPR13P);  02S0854
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*                                     RFY                       02S0855
*                                      (GPR01P,                 02S0855
*                                       GPR13P) UNRSTD;         02S0855
*                                     RFY                       02S0856
*                                      (GPR02P,                 02S0856
*                                       GPR03P,                 02S0856
*                                       GPR04P,                 02S0856
*                                       GPR15P) UNRSTD;         02S0856
*                                    END;/* *********END OF RELSTORE
*                                      EXPANSION*********            */
*                                                               02S0857
*                                    /********************************/
*                                    /*                              */
*                                    /*                      @XL03HMP*/
*                                    /*                              */
*                                    /********************************/
*                                                               02S0858
*                                   END;/*                   @XL03HMP*/
*                                 ELSE                          02S0859
*                                   ;/* STORAGE NOT OBTAINED @XL03HMP*/
@RF00836 DS    0H                                               02S0860
*                               END;                            02S0860
*                           END;                                02S0861
*                         ELSE      /* FAILED TO GET NCSPL AREA, SO  */
*                           CSPCC=NOCORE;/* NOTIFY REQUESTOR OF 02S0862
*                                      FAILURE                       */
         B     @RC00797                                         02S0862
@RF00797 MVC   CSPCC(2,CSPPTR),@CH00442                         02S0862
*                       END;                                    02S0863
*                     ELSE                                      02S0864
*                       ;           /* RESOURCE NAME WAS NOT IN ICE  */
@RF00746 DS    0H                                               02S0865
*                     RFY                                       02S0865
*                       NCSPLPTR UNRSTD;                        02S0865
@RC00746 DS    0H                                               02S0866
*                     IF CSPCC^=NOCORE THEN                     02S0866
         CLC   CSPCC(2,CSPPTR),@CH00442                         02S0866
         BE    @RF00866                                         02S0866
*                       DO;         /* IF GETSTOR SUCCESSFUL         */
*                         RCPICELN=ICEOBJQ;/* DEQ LOGON ICE FROM TRML*/
         MVC   RCPICELN(4,TERMPTR),ICEOBJQ(ICEPTR)              02S0868
*/*FIND LINK TO LOGON ICE IN APPL RAPICELG Q                         */
*                                                               02S0869
*                         RETVAL=ADDR(RAPICELG);/* FIRST LINK IN Q   */
         LA    RETVAL,RAPICELG(,RAPPTR)                         02S0869
*                         DO WHILE(RETVAL->ADDRESS^=ICEPTR);    02S0870
         B     @DE00870                                         02S0870
@DL00870 DS    0H                                               02S0871
*                           RETVAL=ADDR(RETVAL->ADDRESS->ICESUBJQ);/*
*                                      POINT TO NEXT LINK            */
         L     @14,ADDRESS(,RETVAL)                             02S0871
         LA    @14,ICESUBJQ(,@14)                               02S0871
         LR    RETVAL,@14                                       02S0871
*                         END;                                  02S0872
@DE00870 C     ICEPTR,ADDRESS(,RETVAL)                          02S0872
         BNE   @DL00870                                         02S0872
*                         RETVAL->ADDRESS=ICESUBJQ;/* DEQ ICE FROM
*                                      APPL                          */
         MVC   ADDRESS(4,RETVAL),ICESUBJQ(ICEPTR)               02S0873
*                         RFY                                   02S0874
*                           STRGPTR1 RSTD;                      02S0874
*                         IF ICEDATA^=0 THEN                    02S0875
         L     @14,ICEDATA(,ICEPTR)                             02S0875
         LTR   @14,@14                                          02S0875
         BZ    @RF00875                                         02S0875
*                           DO;     /* IF LOGON DATA WITH ICE        */
*                             STRGPTR1=-ICEDATA;/* INDICATE CHAIN OF
*                                      BUFFERS                       */
         LR    STRGPTR1,@14                                     02S0877
         LCR   STRGPTR1,STRGPTR1                                02S0877
*                             ENTRYREG=FRESTPTR;/* POINT TO FREESTOR
*                                      RTNE                          */
         L     @04,ATCCSMA(,ATCVTPTR)                           02S0878
         L     ENTRYREG,FRESTPTR+96(,@04)                       02S0878
*                             CALL MXTRN;/* FREE BUFFERS             */
         BALR  @14,@15                                          02S0879
*                             ICEDATA=0;/* AND CLEAR THEIR PTR  02S0880
*                                                            @D32CKMP*/
         SLR   @14,@14                                          02S0880
         ST    @14,ICEDATA(,ICEPTR)                             02S0880
*                           END;                                02S0881
*                         ELSE                                  02S0882
*                           ;                                   02S0882
@RF00875 DS    0H                                               02S0883
*                         RFY                                   02S0883
*                           STRGPTR1 UNRSTD;                    02S0883
*                         ICESIDE=FREECES;/* PUT ICE DEQUEUED ON...  */
         MVC   ICESIDE(4,ICEPTR),FREECES(SAVEPTR)               02S0884
*                         FREECES=ICEPTR;/* ....TO FREE CE CHAIN     */
         ST    ICEPTR,FREECES(,SAVEPTR)                         02S0885
*                         CALL DOREL;/* REALLOCATE THE TERMINAL      */
         BAL   @14,DOREL                                        02S0886
*                       END;                                    02S0887
*                     ELSE                                      02S0888
*                       ;                                       02S0888
@RF00866 DS    0H                                               02S0889
*                   END LOGREL;     /* END OF LOGREL LOGIC SEGMENT
*                                                            @D32CKMP*/
*                 END;                                          01S0890
*               ELSE                                            01S0891
*                 CSPCC=INVALID;    /* NO ASSOCIATIONS               */
         B     @RC00742                                         01S0891
@RF00742 MVC   CSPCC(2,CSPPTR),@CH03858                         01S0891
*             END;                                              01S0892
@RC00742 DS    0H                                               01S0893
*         END;                                                  01S0893
@RC00627 DS    0H                                               01S0894
*     END;                                                      01S0894
*                                                               01S0894
@RC00591 DS    0H                                               01S0895
*   /*****************************************************************/
*   /*                                                               */
*   /* POST ANY RPHS THAT NEED POSTING                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0895
*   ENTRYREG=POSTPTR;               /* POINT TO POST ROUTINE         */
@RC00576 L     @07,ATCCSMA(,ATCVTPTR)                           01S0895
         L     ENTRYREG,POSTPTR+56(,@07)                        01S0895
*   CALL MXTRN;                     /* POST RPHS AS NECESSARY        */
*                                                               01S0896
         BALR  @14,@15                                          01S0896
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE ANY CE LEFT OVER                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0897
*FREEUP:                                                        01S0897
*   ;                                                           01S0897
FREEUP   DS    0H                                               01S0898
*   IF FREECES^=0 THEN                                          01S0898
         SLR   @14,@14                                          01S0898
         L     @07,FREECES(,SAVEPTR)                            01S0898
         CR    @07,@14                                          01S0898
         BE    @RF00898                                         01S0898
*     DO;                                                       01S0899
*       RFY                                                     01S0900
*        (FREEOFF,                                              01S0900
*         STRGPTR) RSTD;                                        01S0900
*       STRGPTR=FREECES;            /* BLOCKS TO BE FREED            */
         L     @04,FREECES(,SAVEPTR)                            01S0901
         LR    STRGPTR,@04                                      01S0901
*       IF STRGPTR->ICESIDE^=0 THEN /* FOR A CHAIN OF BLOCKS         */
         C     @14,ICESIDE(,STRGPTR)                            01S0902
         BE    @RF00902                                         01S0902
*         FREEOFF=ADDR(STRGPTR->ICESIDE)-STRGPTR;/* OFFSET OF FREEICE
*                                      CHAIN                         */
         LA    FREEOFF,ICESIDE(,STRGPTR)                        01S0903
         SLR   FREEOFF,STRGPTR                                  01S0903
*       ELSE                                                    01S0904
*         FREEOFF=-1;               /* ONLY ONE BLOCK TO BE FREED    */
         B     @RC00902                                         01S0904
@RF00902 SLR   FREEOFF,FREEOFF                                  01S0904
         BCTR  FREEOFF,0                                        01S0904
*       ENTRYREG=FRESTPTR;          /* POINT TO FREESTOR ROUTINE     */
@RC00902 L     @04,ATCCSMA(,ATCVTPTR)                           01S0905
         L     ENTRYREG,FRESTPTR+96(,@04)                       01S0905
*       CALL MXTRN;                 /* FREE THE CES                  */
         BALR  @14,@15                                          01S0906
*     END;                                                      01S0907
*   DO;                             /* SETCRR FNID(CNSRLIN)TYPE(EXIT)*/
@RF00898 DS    0H                                               01S0909
*     CRACRR->CNSTFLDB=''B;         /* CLEAR CURRENT TRACE FIELD     */
         L     @14,RPHCRR(,GPR01P)                              01S0909
         L     @14,CRACRR(,@14)                                 01S0909
         XC    CNSTFLDB(3,@14),CNSTFLDB(@14)                    01S0909
*   END;                            /* SETCRR                        */
*   RFY                                                         01S0911
*     RETPTR RSTD;                                              01S0911
*   RETPTR=SAVERET1;                /* RESTORE RETURN ADDRESS        */
         L     RETPTR,SAVERET1(,SAVEPTR)                        01S0912
*DOREL:                                                         01S0913
*   PROC OPTIONS(NOSAVE);                                       01S0913
*                                                               01S0913
         B     @PB00002                                         01S0913
DOREL    DS    0H                                               01S0914
*   /*****************************************************************/
*   /*                                                               */
*   /* DOREL IS CALLED WHEN THE RELEASED TERMINAL BECOMES AVAILABLE  */
*   /* FOR CONTENTION. IF THERE ARE NO REQUESTS FOR IT AN ATTEMPT IS */
*   /* MADE TO LOG IT ON TO ITS CONTROLLER (IF PRESENT)              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0914
*   SAVERET2=RETPTR;                /* SAVE RETURN ADDRESS           */
         ST    RETPTR,SAVERET2(,SAVEPTR)                        01S0914
*   RFY                                                         01S0915
*     RETPTR UNRSTD;                                            01S0915
*   DO;                             /* SETCRR                   01S0916
*                                      FNID(CNSDORL)TYPE(SENTRY)     */
*     CRACRR->CNSDORLA='1'B;        /* SET HISTORY FLAG              */
         L     @14,RPHCRR(,GPR01P)                              01S0917
         L     @14,CRACRR(,@14)                                 01S0917
         OI    CNSDORLA(@14),B'00000010'                        01S0917
*     CRACRR->CNSDORLB='1'B;        /* SET CURRENT FLAG              */
         OI    CNSDORLB(@14),B'00000010'                        01S0918
*   END;                            /* SETCRR                        */
*   IF RCPICEAQ^=ADDR(RCPICEAQ)     /* IF ICES ON RESOURCE           */
*     THEN                          /* ACQUIRE QUEUE                 */
         LA    @14,RCPICEAQ(,TERMPTR)                           01S0920
         C     @14,RCPICEAQ(,TERMPTR)                           01S0920
         BE    @RF00920                                         01S0920
*     DO;                                                       01S0921
*                                                               02S0922
*       /*************************************************************/
*       /*                                                           */
*       /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO ANALYZE THE      */
*       /* ACQUIRE REQUEST AT THE TOP OF THE TERMINAL RCPICEAQ QUEUE */
*       /* AND TO ACT ACCORDINGLY.                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0922
*DOACQ:                                                         02S0922
*       DO;                         /* BGN OF DOACQ LOGIC SEGMENT
*                                                            @D32CKMP*/
DOACQ    DS    0H                                               02S0923
*         ICEPTR=RCPICEAQ;          /* POINT TO FIRST ICE IN Q       */
         L     ICEPTR,RCPICEAQ(,TERMPTR)                        02S0923
*         RFY                                                   02S0924
*           AVAILCT RSTD;                                       02S0924
*         AVAILCT=0;                /* INITIALISE CT OF TRMNLS TO
*                                      SATISFY REQUEST FOR           */
         SLR   @14,@14                                          02S0925
         LR    AVAILCT,@14                                      02S0925
*         ICXPTR=0;                 /* INITIALISE PTR TO ICX         */
         LR    ICXPTR,@14                                       02S0926
*         IF ICEICX=BITON THEN      /* IF A GROUP REQ                */
         TM    ICEICX(ICEPTR),B'01000000'                       02S0927
         BNO   @RF00927                                         02S0927
*           DO;                                                 02S0928
*             ICXPTR=ICEUECBX;      /* SET UP PTR TO ICX OF REQST    */
         L     ICXPTR,ICEUECBX(,ICEPTR)                         02S0929
*             ICXAVLCT=ICXAVLCT+1;  /* UPDATE CT OF AVAIABLE TRMS IN
*                                      GROUP REQUEST                 */
         LA    @14,1                                            02S0930
         LH    @03,ICXAVLCT(,ICXPTR)                            02S0930
         ALR   @03,@14                                          02S0930
         STH   @03,ICXAVLCT(,ICXPTR)                            02S0930
*             AVAILCT=1;            /*                       @DL31HBS*/
         LR    AVAILCT,@14                                      02S0931
*             IF ICELGON=BITOF&ICERPHA->RPHCSPA->CSPCOREQ=BITOF THEN
         TM    ICELGON(ICEPTR),B'00100000'                      02S0932
         BNZ   @RF00932                                         02S0932
         L     @14,ICERPHA(,ICEPTR)                             02S0932
         L     @14,RPHCSPA(,@14)                                02S0932
         TM    CSPCOREQ(@14),B'01000000'                        02S0932
         BNZ   @RF00932                                         02S0932
*                                   /* FOR A LIST ACQUIRE            */
*               ICERPHA->RPHCSPA->CSPTRDTE=TERMPTR;/* PASS BACK 02S0933
*                                      TERMINAL ACQUIRED             */
         ST    TERMPTR,CSPTRDTE(,@14)                           02S0933
*           END;                                                02S0934
*         ELSE                      /* SINGLE ACQUIRE                */
*           AVAILCT=1;                                          02S0935
         B     @RC00927                                         02S0935
@RF00927 LA    AVAILCT,1                                        02S0935
*         IF AVAILCT^=0 THEN        /* IF REQST SATISFIED            */
@RC00927 LTR   AVAILCT,AVAILCT                                  02S0936
         BZ    @RF00936                                         02S0936
*           CALL ACQDONE;           /* PROCESS COMPLETED REQST       */
         BAL   @14,ACQDONE                                      02S0937
*         RFY                                                   02S0938
*           AVAILCT UNRSTD;                                     02S0938
@RF00936 DS    0H                                               02S0939
*       END DOACQ;                  /* END OF DOACQ LOGIC SEGMENT
*                                                            @D32CKMP*/
*     END;                                                      01S0940
*   ELSE                            /* MAKE THE RESOURCE             */
*     DO;                           /* AVAILABLE                     */
         B     @RC00920                                         01S0941
@RF00920 DS    0H                                               01S0942
*       IF RPRLIVE=BITOF            /* RSC DISCONNECTED              */
*         THEN                      /* DO NOT REALLOCATE             */
         TM    RPRLIVE(TERMPTR),B'00000001'                     01S0942
         BNZ   @RF00942                                         01S0942
*         DO;                       /* RESOURCE                      */
*           RPRACT=BITOF;           /* TURN OFF ACT FLAG     @DM09471*/
*           RPRTIED=BITOF;          /* TURN OFF TIED FLAG    @DM09471*/
         NI    RPRACT(TERMPTR),B'01011111'                      01S0945
*         END;                                                  01S0946
*       ELSE                        /* TRY TO REALLOCATE             */
*         DO;                       /* THE RESOURCE                  */
         B     @RC00942                                         01S0947
@RF00942 DS    0H                                               01S0948
*           IF(RPRACT=BITON)&       /* IF TRMNL ACTIV        @DM09471*/
*               (RCPACETR=ADDR(RCPACETR))&/* & NO ACES QD    @DM09471*/
*               (RCPICELN=ADDR(RCPICELN))&/* & NO LOGONS QD  @DM09471*/
*               (RCPICEAQ=ADDR(RCPICEAQ))/* & NO ACQS QD     @DM09471*/
*             THEN                  /*                       @DM09471*/
         TM    RPRACT(TERMPTR),B'10000000'                      01S0948
         BNO   @RF00948                                         01S0948
         LA    @14,RCPACETR(,TERMPTR)                           01S0948
         C     @14,RCPACETR(,TERMPTR)                           01S0948
         BNE   @RF00948                                         01S0948
         LA    @14,RCPICELN(,TERMPTR)                           01S0948
         C     @14,RCPICELN(,TERMPTR)                           01S0948
         BNE   @RF00948                                         01S0948
         LA    @14,RCPICEAQ(,TERMPTR)                           01S0948
         C     @14,RCPICEAQ(,TERMPTR)                           01S0948
         BNE   @RF00948                                         01S0948
*             DO;                   /*                       @DM09471*/
*               RPRACT=BITOF;       /* TURN OFF ACT FALG     @DM09471*/
*               RPRTIED=BITOF;      /* TUNR OFF TIED FLAG    @DM09471*/
         NI    RPRACT(TERMPTR),B'01011111'                      01S0951
*               ATCACTRM=ATCACTRM-1;/* UPDATE ACT CT         @DM09471*/
         LH    @14,ATCACTRM(,ATCVTPTR)                          01S0952
         BCTR  @14,0                                            01S0952
         STH   @14,ATCACTRM(,ATCVTPTR)                          01S0952
*             END;                  /*                       @DM09471*/
*           ELSE                    /* DO                    @DM09910*/
*             RPRTIED=BITOF;        /* MARK RSC UNTIED               */
         B     @RC00948                                         01S0954
@RF00948 NI    RPRTIED(TERMPTR),B'11011111'                     01S0954
*           IF(RCPLNAPA^=0&RCPLNAPA^=RAPPTR&RCPLNAPA->RAPAQUI=BITOF&
*               RCPLNAPA->RPRACT=BITON&TERMPTR->RPRVRYPD=BITOF) 01S0955
*                                                               01S0955
*           /*********************************************************/
*           /*                                                       */
*           /* IF THERE IS A CONTROLLER WHO IS NOT QUIESCING AND IS  */
*           /* ACTIVE AND IF VARY OFF IS NOT PENDING FOR THE TERMINAL*/
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0955
*             THEN                  /* LOG THE RESOURCE              */
@RC00948 L     @14,RCPLNAPA(,TERMPTR)                           01S0955
         LTR   @14,@14                                          01S0955
         BZ    @RF00955                                         01S0955
         CR    @14,RAPPTR                                       01S0955
         BE    @RF00955                                         01S0955
         TM    RAPAQUI(@14),B'01000000'                         01S0955
         BNZ   @RF00955                                         01S0955
         TM    RPRACT(@14),B'10000000'                          01S0955
         BNO   @RF00955                                         01S0955
         TM    RPRVRYPD(TERMPTR),B'00000010'                    01S0955
         BNZ   @RF00955                                         01S0955
*             DO;                   /* TO THE CONTROLLER             */
*               IF RPRINIMM='1'B×   /* IF DEACT IN PROGRESS  @XM02052*/
*                   (TERMPTR->RPRHLVPD='1'B&TERMPTR->RPRPTHCT=0)/*
*                                                            @XM10955*/
*                   ×(RPRHLVPD='1'B&/*                       @OZ08394*/
*                   RPRNSNEA->RPRENTRY=RPRENTGP)/* GROUP     @OZ08394*/
*                   ×(RPRHLVPD='1'B&/* HIGHER LEVEL VARY     @OZ08394*/
*                   RPRNSNEA->RPRENTRY=RPRENTLN&/* TERM ON PORT 01S0957
*                                                            @OZ08394*/
*                   RPRNSNEA->RLNPORT='1'B)/*                @OZ08394*/
*                 THEN              /*                       @OZ08394*/
         TM    RPRINIMM(TERMPTR),B'00000001'                    01S0957
         BO    @RT00957                                         01S0957
         TM    RPRHLVPD(TERMPTR),B'00000100'                    01S0957
         BNO   @GL00015                                         01S0957
         CLI   RPRPTHCT(TERMPTR),0                              01S0957
         BE    @RT00957                                         01S0957
@GL00015 TM    RPRHLVPD(TERMPTR),B'00000100'                    01S0957
         BNO   @GL00014                                         01S0957
         L     @14,RPRNSNEA(,TERMPTR)                           01S0957
         CLI   RPRENTRY(@14),X'30'                              01S0957
         BE    @RT00957                                         01S0957
@GL00014 TM    RPRHLVPD(TERMPTR),B'00000100'                    01S0957
         BNO   @RF00957                                         01S0957
         L     @14,RPRNSNEA(,TERMPTR)                           01S0957
         CLI   RPRENTRY(@14),X'50'                              01S0957
         BNE   @RF00957                                         01S0957
         TM    RLNPORT(@14),B'00010000'                         01S0957
         BNO   @RF00957                                         01S0957
@RT00957 DS    0H                                               01S0958
*                 IF CSPNOREL='1'B THEN                         01S0958
         TM    CSPNOREL(CSPPTR),B'00100000'                     01S0958
         BNO   @RF00958                                         01S0958
*                   CSPCC=UNWANT;   /*                       @XM10955*/
         MVC   CSPCC(2,CSPPTR),@CH01454                         01S0959
*                 ELSE                                          01S0960
*                   ;               /* IF RALLOC REQ. SET R.C.  01S0960
*                                                            @XM10955*/
@RF00958 DS    0H                                               01S0961
*               ELSE                                            01S0961
*                 DO;               /*                       @XM10955*/
         B     @RC00957                                         01S0961
@RF00957 DS    0H                                               01S0962
*                                                               02S0962
*                   /*************************************************/
*                   /*                                               */
*                   /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO LOG  */
*                   /* THE FREE TERMINAL TO ITS CONTROLLER AND IF THE*/
*                   /* CONTROLLER HAS A LOGON EXIT ROUTINE, TO OBTAIN*/
*                   /* A UECB TO PASS TO LOGON0.                     */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0962
*LOGCNTRL:                                                      02S0962
*                   DO;             /* BGN OF LOGCNTRL LOGIC SEGMENT
*                                                            @D32CKMP*/
LOGCNTRL DS    0H                                               02S0963
*                     RFY                                       02S0963
*                      (UECBPTR,                                02S0963
*                       REQCE,                                  02S0963
*                       REQUECB) RSTD;                          02S0963
*                     IF ATCQKHLT='1'B×ATCSNHLT='1'B/* HALT IN  02S0964
*                                      PROGRESS              @ZA26339*/
*                       THEN                                    02S0964
         TM    ATCQKHLT(ATCVTPTR),B'00110000'                   02S0964
         BZ    @RF00964                                         02S0964
*                       CSPCC=UNWANT;/*                      @ZA26339*/
         MVC   CSPCC(2,CSPPTR),@CH01454                         02S0965
*                     ELSE                                      02S0966
*                       DO;         /*                       @ZA26339*/
         B     @RC00964                                         02S0966
@RF00964 DS    0H                                               02S0967
*                         RETVAL=GOOD;/* INITIALISE TO:DO LOGON      */
         SLR   @04,@04                                          02S0967
         LR    RETVAL,@04                                       02S0967
*                         UECBPTR=0;/* INITIALISE TO :NO UECB REQD   */
         LR    UECBPTR,@04                                      02S0968
*                         RAPPTR=RCPLNAPA;/* POINT TO CNTRLR RDTE    */
         L     RAPPTR,RCPLNAPA(,TERMPTR)                        02S0969
*                         IF RAPASLGI=BITON THEN/* IF LOGON EXIT TO
*                                      BE SCHEDULED CALL GETSTORE FOR
*                                      1 UECB                        */
         TM    RAPASLGI(RAPPTR),B'00100000'                     02S0970
         BNO   @RF00970                                         02S0970
*                           REQUECB=1;/* ONE UECB REQD               */
         LA    REQUECB,1                                        02S0971
*                         ELSE                                  02S0972
*                           REQUECB=0;/* NO UECBS FOR EXIT           */
         B     @RC00970                                         02S0972
@RF00970 SLR   REQUECB,REQUECB                                  02S0972
*                         IF FREECES=0 THEN/* WE HAVE NO CE          */
@RC00970 ICM   @14,15,FREECES(SAVEPTR)                          02S0973
         BNZ   @RF00973                                         02S0973
*                           REQCE=1;/* ONE CE REQUIRED               */
         LA    REQCE,1                                          02S0974
*                         ELSE      /* FREE ICE EXISTS ON CHAIN      */
*                           REQCE=0;/* GET NO ICES                   */
         B     @RC00973                                         02S0975
@RF00973 SLR   REQCE,REQCE                                      02S0975
*                         IF REQCE^=0×REQUECB^=0 THEN           02S0976
@RC00973 SLR   @14,@14                                          02S0976
         CR    REQCE,@14                                        02S0976
         BNE   @RT00976                                         02S0976
         CR    REQUECB,@14                                      02S0976
         BE    @RF00976                                         02S0976
@RT00976 DS    0H                                               02S0977
*                           DO;     /* IF STORAGE IS REQUIRED        */
*                             ENTRYREG=GETSTPTR;/* POINT TO GETSTORE
*                                      ROUTN                         */
         L     @04,ATCCSMA(,ATCVTPTR)                           02S0978
         L     ENTRYREG,GETSTPTR+84(,@04)                       02S0978
*                             CALL MXTRN;/* GET STORAGE              */
         BALR  @14,@15                                          02S0979
*                             UECBPTR=REQUECB;/* ACCESS PTR TO UECB
*                                      STORAGE                       */
         LR    UECBPTR,REQUECB                                  02S0980
*                             RFY                               02S0981
*                              (REQUECB) UNRSTD;                02S0981
*                           END;                                02S0982
*                         IF RETVAL=GOOD THEN/* UNLESS STRGE UNAVAIL */
@RF00976 SLR   @14,@14                                          02S0983
         CR    RETVAL,@14                                       02S0983
         BNE   @RF00983                                         02S0983
*                           DO;     /* LOG ON TO CNTRLR              */
*                             IF REQCE=0 THEN                   02S0985
         CR    REQCE,@14                                        02S0985
         BNE   @RF00985                                         02S0985
*                               DO; /* ALREADY HAD A CE              */
*                                 ICEPTR=FREECES;/* TAKE A CE FROM
*                                      FREE-CES QUE                  */
         L     ICEPTR,FREECES(,SAVEPTR)                         02S0987
*                                 FREECES=ICESIDE;/* ADJUST PTR TO
*                                      FIRST FREE CE                 */
         MVC   FREECES(4,SAVEPTR),ICESIDE(ICEPTR)               02S0988
*                               END;                            02S0989
*                             ELSE                              02S0990
*                               ICEPTR=REQCE;/* USE NEW CE           */
         B     @RC00985                                         02S0990
@RF00985 LR    ICEPTR,REQCE                                     02S0990
*                             RFY                               02S0991
*                              (REQCE) UNRSTD;                  02S0991
@RC00985 DS    0H                                               02S0992
*                             ISTICE=ISTICE&&ISTICE;/* CLEAR ICE     */
         XC    ISTICE(44,ICEPTR),ISTICE(ICEPTR)                 02S0992
*                             ICEUECBX=UECBPTR;/* PASS POSSIBLE UECB
*                                      TO LOGON0                     */
         ST    UECBPTR,ICEUECBX(,ICEPTR)                        02S0993
*                             TERMPTR=CSLRDTE;/* PTR TO TRM TO LOGON
*                                                            @D32CKMP*/
         L     @14,CSPRSCE(,CSPPTR)                             02S0994
         L     TERMPTR,CSLRDTE(,@14)                            02S0994
*                             RAPPTR=RCPLNAPA;/* PTR TO DEST OF LOGON*/
         L     RAPPTR,RCPLNAPA(,TERMPTR)                        02S0995
*                             ENTRYREG=LOG0PTR;/* POINT TO LOGON0
*                                      ROUTN                         */
         L     @04,ATCCSMA(,ATCVTPTR)                           02S0996
         L     ENTRYREG,LOG0PTR+88(,@04)                        02S0996
*                             CALL MXTRN;                       02S0997
         BALR  @14,@15                                          02S0997
*                           END;                                02S0998
*                         ELSE                                  02S0999
*                           CSPCC=NOCONTLR;/* SET COMPLETION CODE    */
         B     @RC00983                                         02S0999
@RF00983 MVC   CSPCC(2,CSPPTR),@CH03862                         02S0999
*                         RAPPTR=CSPSRC;/* RESET PTR TO RELEASER RDTE*/
@RC00983 L     RAPPTR,CSPSRC(,CSPPTR)                           02S1000
*                       END;        /* END OF HALT           @ZA26339*/
*                     RFY                                       02S1002
*                       UECBPTR UNRSTD;                         02S1002
@RC00964 DS    0H                                               02S1003
*                   END LOGCNTRL;   /* END OF LOGCNTRL LOGIC SEGMENT
*                                                            @D32CKMP*/
*                 END;              /*                       @XM10955*/
*             END;                                              01S1005
*           ELSE                    /* NOT EVEN CONTROLLER           */
*             DO;                   /* WANTS RESOURCE, SO            */
         B     @RC00955                                         01S1006
@RF00955 DS    0H                                               01S1007
*               IF CSPNOREL=BITON   /* IF REQUEST WAS FOR            */
*                 THEN              /* REALLOCATE, TELL              */
         TM    CSPNOREL(CSPPTR),B'00100000'                     01S1007
         BNO   @RF01007                                         01S1007
*                 CSPCC=UNWANT;     /* REQUESTOR NO-ONE WANTS   01S1008
*                                      RESOURCE                      */
         MVC   CSPCC(2,CSPPTR),@CH01454                         01S1008
*             END;                                              01S1009
*                                                               01S1009
@RF01007 DS    0H                                               01S1010
*/*           END                                            @DM09910*/
*                                                               01S1010
*         END;                                                  01S1010
@RC00955 DS    0H                                               01S1011
*     END;                                                      01S1011
@RC00942 DS    0H                                               01S1012
*   DO;                             /* SETCRR                   01S1012
*                                      FNID(CNSDORL)TYPE(SEXIT)      */
@RC00920 DS    0H                                               01S1013
*     CRACRR->CNSDORLB='0'B;        /* TURN OFF CURRENT FLAG         */
         L     @14,RPHCRR(,GPR01P)                              01S1013
         L     @14,CRACRR(,@14)                                 01S1013
         NI    CNSDORLB(@14),B'11111101'                        01S1013
*   END;                            /* SETCRR                        */
*   RFY                                                         01S1015
*     RETPTR RSTD;                                              01S1015
*   RETPTR=SAVERET2;                                            01S1016
         L     RETPTR,SAVERET2(,SAVEPTR)                        01S1016
*   RFY                                                         01S1017
*     RETPTR UNRSTD;                                            01S1017
*   END DOREL;                                                  01S1018
@EL00002 DS    0H                                               01S1018
@EF00002 DS    0H                                               01S1018
@ER00002 BR    @14                                              01S1018
*ACQDONE:                                                       01S1019
*   PROC OPTIONS(NOSAVE);                                       01S1019
ACQDONE  DS    0H                                               01S1020
*   RFY                                                         01S1020
*    (AVAILCT,                                                  01S1020
*     NEXTICE) RSTD;                                            01S1020
*                                                               01S1020
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQDONE COMPLETES ACQUIRE/LOGONI REQUEST. IT DEQUEUES ICES IN */
*   /* REQUEST AND CONVERTS THEM TO ACES OR LOGON ICES ICXPTR=PTR TO */
*   /* ICX, OR ZERO, AVAILCT=NO OF TERMS TO BE DEALT WITH, ICEPTR=PTR*/
*   /* TO AN ICE IN REQUEST THAT CAN BE SATISFIED                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1021
*   RFY                                                         01S1021
*     RETPTR RSTD;                                              01S1021
*   SAVERET3=RETPTR;                /* SAVE RETURN ADDR              */
         ST    RETPTR,SAVERET3(,SAVEPTR)                        01S1022
*   RFY                                                         01S1023
*     RETPTR UNRSTD;                                            01S1023
*   RAPPTR=ICESUBJ;                 /* PICK UP PTR TO RDTE OF   01S1024
*                                      REQUESTING APPLICATION        */
         L     RAPPTR,ICESUBJ(,ICEPTR)                          01S1024
*   IF ICELGON=BITOF THEN                                       01S1025
         TM    ICELGON(ICEPTR),B'00100000'                      01S1025
         BNZ   @RF01025                                         01S1025
*     DO;                           /* FOR AN ACQUIRE                */
*       ICERPHA->RPHNEXPO=CSPRLRPH; /* SAVE OTHER WAITING RPHS       */
         L     @14,ICERPHA(,ICEPTR)                             01S1027
         MVC   RPHNEXPO(4,@14),CSPRLRPH(CSPPTR)                 01S1027
*       CSPRLRPH=ICERPHA;           /* SET INDICATION OF RPH TO BE
*                                      TPPOSTED BY CLOSE             */
         ST    @14,CSPRLRPH(,CSPPTR)                            01S1028
*     END;                                                      01S1029
*   FIRSTICE=ICEPTR;                /* REMEMBER FIRST ICE            */
@RF01025 ST    ICEPTR,FIRSTICE(,SAVEPTR)                        01S1030
*   NEXTICE=ICEPTR;                 /* NEXT ICE TO SATISFY           */
         LR    NEXTICE,ICEPTR                                   01S1031
*   DO WHILE(AVAILCT^=0);           /* DO FOR ALL TERMS TO BE   01S1032
*                                      PROCESSED                     */
         B     @DE01032                                         01S1032
@DL01032 DS    0H                                               01S1033
*     RAPPTR=NEXTICE->ICESUBJ;      /* RE-ESTABLISH APPLICATION      */
         L     RAPPTR,ICESUBJ(,NEXTICE)                         01S1033
*     TERMPTR=NEXTICE->ICEOBJ;      /* SET TERMPTR TO THE RDTE       */
         L     TERMPTR,ICEOBJ(,NEXTICE)                         01S1034
*     IF NEXTICE->ICESTAPR=BITON    /* IF ACQUIRER IS SATPR          */
*       THEN                        /* SHOULDER TAPPING INDICATED, SO*/
         TM    ICESTAPR(NEXTICE),B'00001000'                    01S1035
         BNO   @RF01035                                         01S1035
*       RPRSTPCT=RPRSTPCT-1;        /* DECREMENT STAP COUNT          */
         LH    @14,RPRSTPCT(,TERMPTR)                           01S1036
         BCTR  @14,0                                            01S1036
         STH   @14,RPRSTPCT(,TERMPTR)                           01S1036
*     RCPICEAQ=NEXTICE->ICEOBJQ;    /* DEQUEUE ICE FROM TOP OF  01S1037
*                                      TERMINAL QUEUE                */
*                                                               01S1037
@RF01035 MVC   RCPICEAQ(4,TERMPTR),ICEOBJQ(NEXTICE)             01S1037
*     /***************************************************************/
*     /*                                                             */
*     /* NOW DEQUEUE ICE FROM APPLICATIONS ACQBYME Q                 */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1038
*     RETVAL=ADDR(RAPICEAQ);        /* START AT TOP OF QUEUE         */
         LA    RETVAL,RAPICEAQ(,RAPPTR)                         01S1038
*     DO WHILE(RETVAL->ADDRESS^=NEXTICE);/* SEARCH FOR ICE           */
         B     @DE01039                                         01S1039
@DL01039 DS    0H                                               01S1040
*       RETVAL=ADDR(RETVAL->ADDRESS->ICESUBJQ);                 01S1040
         L     @14,ADDRESS(,RETVAL)                             01S1040
         LA    @14,ICESUBJQ(,@14)                               01S1040
         LR    RETVAL,@14                                       01S1040
*     END;                                                      01S1041
@DE01039 C     NEXTICE,ADDRESS(,RETVAL)                         01S1041
         BNE   @DL01039                                         01S1041
*     RETVAL->ADDRESS=NEXTICE->ICESUBJQ;/* DEQUEUE ICE BY CHANGING
*                                      EITHER CHAINHEAD OR PREVIOUS
*                                      LINK                          */
         MVC   ADDRESS(4,RETVAL),ICESUBJQ(NEXTICE)              01S1042
*     ICEPTR=NEXTICE;               /* SET ICEPTR TO DEQUEUED ICE    */
         LR    ICEPTR,NEXTICE                                   01S1043
*     NEXTICE=ICESIDE;              /* GET READY FOR NEXT ICE IN
*                                      SIDEWAY CHAIN                 */
*                                                               01S1044
         L     NEXTICE,ICESIDE(,ICEPTR)                         01S1044
*     /***************************************************************/
*     /*                                                             */
*     /* DEQUEUE ICE FROM SIDE CHAIN                         @XM0678K*/
*     /*                                                             */
*     /***************************************************************/
*                                                               01S1045
*     DO WHILE(NEXTICE->ICESIDE^=ICEPTR);/*                  @XM0678K*/
         B     @DE01045                                         01S1045
@DL01045 DS    0H                                               01S1046
*       NEXTICE=NEXTICE->ICESIDE;   /* BUMP TO NEXT ICE      @XM0678K*/
         L     NEXTICE,ICESIDE(,NEXTICE)                        01S1046
*     END;                          /*                       @XM0678K*/
@DE01045 C     ICEPTR,ICESIDE(,NEXTICE)                         01S1047
         BNE   @DL01045                                         01S1047
*     NEXTICE->ICESIDE=ICEPTR->ICESIDE;/* REMOVE ICE FROM CHAIN 01S1048
*                                                            @XM0678K*/
         MVC   ICESIDE(4,NEXTICE),ICESIDE(ICEPTR)               01S1048
*     IF ICELGON=BITOF THEN         /* IF NOT LOGONI TYPE            */
         TM    ICELGON(ICEPTR),B'00100000'                      01S1049
         BNZ   @RF01049                                         01S1049
*       DO;                                                     01S1050
*                                                               02S1051
*         /***********************************************************/
*         /*                                                         */
*         /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO CONNECT THE    */
*         /* APPLICATION AND TERMINAL RDT ENTRIES USING THE DEQUEUED */
*         /* ICE AS AN ACE FOR THE CONNECTION.                       */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S1051
*MAKESN:                                                        02S1051
*         DO;                       /* BGN OF MAKESN LOGIC SEGMENT
*                                                            @D32CKMP*/
MAKESN   DS    0H                                               02S1052
*           IF ICEICX=BITON×        /* IF ICX (RSC LIST PRESENT) OR  */
*               RPRSTPCT^=0         /* RSC STAP COUNT NOT ZERO       */
*             THEN                  /* RCS LIST RDTE & NIB ENTRY...
*                                      ...HAVE TO BE MARKED,         */
         TM    ICEICX(ICEPTR),B'01000000'                       02S1052
         BO    @RT01052                                         02S1052
         ICM   @14,3,RPRSTPCT(TERMPTR)                          02S1052
         BZ    @RF01052                                         02S1052
@RT01052 DS    0H                                               02S1053
*             DO;                   /* SO:                           */
*               RETVAL=ICERPHA->RPHCSPA->CSPRSCE;/* FIRST ITEM IN
*                                      RESOURCE LIST                 */
         L     @02,ICERPHA(,ICEPTR)                             02S1054
         L     @02,RPHCSPA(,@02)                                02S1054
         L     RETVAL,CSPRSCE(,@02)                             02S1054
*/*  DOWHILE(RETVAL->CSLRDTE^=TERMPTR)                               */
*                                                               02S1055
*               DO WHILE(RETVAL->CSLRDTE^=TERMPTR);/* FIND TRML IN
*                                      RSCE                  @D32CKMP*/
         B     @DE01055                                         02S1055
@DL01055 DS    0H                                               02S1056
*                 RETVAL=RETVAL+LENGTH(ISTCSL);/* LIST - NOT IT, SO
*                                                            @D32CKMP*/
         AH    RETVAL,@CH00442                                  02S1056
*               END;                /* END(DOWHILE)                  */
@DE01055 C     TERMPTR,CSLRDTE(,RETVAL)                         02S1057
         BNE   @DL01055                                         02S1057
*#DC00078:                                                      02S1058
*               ;                   /* BUMP TO CONT SRCH     @D32CKMP*/
#DC00078 DS    0H                                               02S1059
*               IF ICEICX=BITON     /* FOR A REQUEST WITH AN ICE...
*                                      ...EXTENSION THERE WILL BE..
*                                      ...A RESOURCE LIST WHOSE....  */
*                 THEN              /* ...RDT ENTRY MUST BE MARKED.  */
         TM    ICEICX(ICEPTR),B'01000000'                       02S1059
         BNO   @RF01059                                         02S1059
*                 RETVAL->CSLRDTEF=BITON;/* SO MARK LIST ENTRY  02S1060
*                                                            @D32CKMP*/
         OI    CSLRDTEF(RETVAL),B'10000000'                     02S1060
*               IF RPRSTPCT^=0      /* IF RSC STAP COUNT NOT ZERO    */
*                 THEN              /* SHOULDER TAPPERS WANT RSC     */
@RF01059 ICM   @14,3,RPRSTPCT(TERMPTR)                          02S1061
         BZ    @RF01061                                         02S1061
*                 DO;               /* SO:                           */
*                   ICERPHA->RPHCSPA->CSPCC=GOODSTAP;/* TELL ACQUIRER*/
         L     @14,ICERPHA(,ICEPTR)                             02S1063
         L     @14,RPHCSPA(,@14)                                02S1063
         MVC   CSPCC(2,@14),@CH00221                            02S1063
*                   RETVAL->CSLNIBF=BITON;/* AND MARK LIST ENTRY
*                                                            @D32CKMP*/
         OI    CSLNIBF(RETVAL),B'10000000'                      02S1064
*                 END;                                          02S1065
*             END;                                              02S1066
@RF01061 DS    0H                                               02S1067
*           ISTACE=ISTACE&&ISTACE;  /* CLEAR ACE                     */
@RF01052 XC    ISTACE(44,ACEPTR),ISTACE(ACEPTR)                 02S1067
*           ENTRYREG=TCONPTR;       /* POINT TO TCONNECT ROUTN       */
         L     @02,ATCCSMA(,ATCVTPTR)                           02S1068
         L     ENTRYREG,TCONPTR+68(,@02)                        02S1068
*           CALL MXTRN;             /* CONNECT ACE TO TRMNL          */
         BALR  @14,@15                                          02S1069
*           ACERPHA=CSPRLRPH;       /* OVERWRITE ACE FIELD WITH 02S1070
*                                      ACQUIRES RPH                  */
         MVC   ACERPHA(4,ACEPTR),CSPRLRPH(CSPPTR)               02S1070
*           ENTRYREG=ACONPTR;       /* POINT TO ACONNECT ROUTN       */
         L     @02,ATCCSMA(,ATCVTPTR)                           02S1071
         L     ENTRYREG,ACONPTR+72(,@02)                        02S1071
*           CALL MXTRN;             /* CONNECT ACE TO APPL           */
*                                                               02S1072
         BALR  @14,@15                                          02S1072
*           /*********************************************************/
*           /*                                                       */
*           /* CALL ACCT EXIT FOR ESTABLISHED SESSION                */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S1073
*           IF ATCACCTA^=0 THEN     /* IF ACCT EXIT SUPPLIED         */
         ICM   @14,15,ATCACCTA(ATCVTPTR)                        02S1073
         BZ    @RF01073                                         02S1073
*             DO;                                               02S1074
*               ENTRYREG=ACCTPTR;   /* POINT TO DOACCT ROUTN         */
         L     @02,ATCCSMA(,ATCVTPTR)                           02S1075
         L     ENTRYREG,ACCTPTR+100(,@02)                       02S1075
*               CALL MXTRN;         /* CALL DOACCT ROUT.TRMPTR IS NOT
*                                      COMPLEMENTED,FOR MAKE-SESSN   */
         BALR  @14,@15                                          02S1076
*             END;                                              02S1077
*         END MAKESN;               /* END OF MAKESN LOGIC SEGMENT
*                                                            @D32CKMP*/
@RF01073 DS    0H                                               02S1079
*       END;                                                    01S1079
*     ELSE                                                      01S1080
*       DO;                         /* FOR LOGONI                    */
         B     @RC01049                                         01S1080
@RF01049 DS    0H                                               01S1081
*                                                               02S1081
*         /***********************************************************/
*         /*                                                         */
*         /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO CONVERT QUEUED */
*         /* SIMLOGON ICES INTO LOGON ICES.                          */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S1081
*MAKELGN:                                                       02S1081
*         DO;                       /* BGN OF MAKELGN LOGIC SEGMENT
*                                                            @D32CKMP*/
MAKELGN  DS    0H                                               02S1082
*           RFY                                                 02S1082
*             UECBPTR RSTD;                                     02S1082
*           IF ICEICX=BITON THEN    /* IF THERE IS AN ICX            */
         TM    ICEICX(ICEPTR),B'01000000'                       02S1083
         BNO   @RF01083                                         02S1083
*             IF ICXUECBA^=ADDR(ICXUECBA) THEN/* WITH UECBS ON IT    */
         L     @14,ICXUECBA(,ICXPTR)                            02S1084
         CR    @14,ICXPTR                                       02S1084
         BE    @RF01084                                         02S1084
*               DO;                                             02S1085
*                 UECBPTR=ICXUECBA; /* DEQ A UECB                    */
         LR    UECBPTR,@14                                      02S1086
*                 ICXUECBA=UECFORW; /* UPDATE UECB CHAIN             */
         MVC   ICXUECBA(4,ICXPTR),UECFORW(UECBPTR)              02S1087
*               END;                                            02S1088
*             ELSE                  /* NO UECBS ON ICX               */
*               UECBPTR=0;                                      02S1089
         B     @RC01084                                         02S1089
@RF01084 SLR   UECBPTR,UECBPTR                                  02S1089
*           ELSE                    /* NO ICX                        */
*             UECBPTR=ICEUECBX;     /* COPY FROM ICE                 */
         B     @RC01083                                         02S1090
@RF01083 L     UECBPTR,ICEUECBX(,ICEPTR)                        02S1090
*           ENTRYREG=ICEDATA;       /* SAVE DATA POINTER             */
@RC01083 L     ENTRYREG,ICEDATA(,ICEPTR)                        02S1091
*           ISTICE=ISTICE&&ISTICE;  /* CLEAR ICE                     */
         XC    ISTICE(44,ICEPTR),ISTICE(ICEPTR)                 02S1092
*           ICEUECBX=UECBPTR;       /* PASS UECB TO LOGON0           */
         ST    UECBPTR,ICEUECBX(,ICEPTR)                        02S1093
*           ICEDATA=ENTRYREG;       /* PASS DATA PTR TO LOGON0       */
         ST    ENTRYREG,ICEDATA(,ICEPTR)                        02S1094
*           ENTRYREG=LOG0PTR;       /* POINT TO LOGON0 ROUTN         */
         L     @02,ATCCSMA(,ATCVTPTR)                           02S1095
         L     ENTRYREG,LOG0PTR+88(,@02)                        02S1095
*           CALL MXTRN;                                         02S1096
         BALR  @14,@15                                          02S1096
*         END MAKELGN;              /* END OF MAKELGN LOGIC SEGMENT
*                                                            @D32CKMP*/
*       END;                                                    01S1098
*     AVAILCT=AVAILCT-1;            /* UPDATE LOOP CONTROL           */
@RC01049 BCTR  AVAILCT,0                                        01S1099
*   END;                            /* THE DO WHILE                  */
@DE01032 SLR   @14,@14                                          01S1100
         CR    AVAILCT,@14                                      01S1100
         BNE   @DL01032                                         01S1100
*   IF ICXPTR^=0 THEN               /*                       @DL31HBS*/
         CR    ICXPTR,@14                                       01S1101
         BE    @RF01101                                         01S1101
*     IF ICXREQCT=ICXAVLCT THEN                                 01S1102
         CLC   ICXREQCT(2,ICXPTR),ICXAVLCT(ICXPTR)              01S1102
         BNE   @RF01102                                         01S1102
*       DO;                         /* IF REQUIRED = AVAILABLE  01S1103
*                                                            @DL31HBS*/
*                                                               02S1104
*         /***********************************************************/
*         /*                                                         */
*         /* THE FUNCTION OF THIS LOGIC SEGMENT IS TO ADD ANY LEFT   */
*         /* OVER ICES TO THE FREE ELEMENT CHAIN AFTER DEQUEUEING    */
*         /* THEM FROM THE APPLICATION AND TERMINAL RDT ENTRY QUEUES.*/
*         /*                                                         */
*         /***********************************************************/
*                                                               02S1104
*FREELIST:                                                      02S1104
*         DO;                       /* BGN OF FREELIST LOGIC SEGMENT
*                                                            @D32CKMP*/
FREELIST DS    0H                                               02S1105
*           ICXPTR->ICESIDE=FREECES;/* PUT ICX IN FREE-CES CHAIN     */
         MVC   ICESIDE(4,ICXPTR),FREECES(SAVEPTR)               02S1105
*           FREECES=ICXPTR;                                     02S1106
         ST    ICXPTR,FREECES(,SAVEPTR)                         02S1106
*           IF(CEPTR=FIRSTICE)&(FIRSTICE^=NEXTICE) THEN/* IF ICES
*                                      REMAIN                        */
         L     @14,FIRSTICE(,SAVEPTR)                           02S1107
         CR    CEPTR,@14                                        02S1107
         BNE   @RF01107                                         02S1107
         CR    @14,NEXTICE                                      02S1107
         BE    @RF01107                                         02S1107
*             DO;                                               02S1108
*               RAPPTR=NEXTICE->ICESUBJ;/* RE-ESTABLISH APPL         */
         L     RAPPTR,ICESUBJ(,NEXTICE)                         02S1109
*               FREECES=NEXTICE;    /* PUT THE ICES IN FREE-CE Q     */
         ST    NEXTICE,FREECES(,SAVEPTR)                        02S1110
*               DO WHILE(NEXTICE^=FIRSTICE);                    02S1111
         B     @DE01111                                         02S1111
@DL01111 DS    0H                                               02S1112
*                 TERMPTR=NEXTICE->ICEOBJ;/* TERMINAL                */
         L     TERMPTR,ICEOBJ(,NEXTICE)                         02S1112
*                 RETVAL=ADDR(RCPICEAQ);                        02S1113
*                                                               02S1113
         LA    RETVAL,RCPICEAQ(,TERMPTR)                        02S1113
*                 /***************************************************/
*                 /*                                                 */
*                 /* FIRST LINK IN TRML ACQUIRE QUEUE                */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S1114
*                 DO WHILE(RETVAL->ADDRESS^=NEXTICE);/* LOOK FOR LINK
*                                      TO NEXTICE FOR DEQ            */
         B     @DE01114                                         02S1114
@DL01114 DS    0H                                               02S1115
*                   RETVAL=ADDR(RETVAL->ADDRESS->ICEOBJQ);/* MOVE
*                                      DOWN Q                        */
         L     @14,ADDRESS(,RETVAL)                             02S1115
         LA    @14,ICEOBJQ(,@14)                                02S1115
         LR    RETVAL,@14                                       02S1115
*                 END;                                          02S1116
@DE01114 C     NEXTICE,ADDRESS(,RETVAL)                         02S1116
         BNE   @DL01114                                         02S1116
*                 RETVAL->ADDRESS=NEXTICE->ICEOBJQ;/* DEQ ICE FROM
*                                      TRM                           */
         MVC   ADDRESS(4,RETVAL),ICEOBJQ(NEXTICE)               02S1117
*                 RETVAL=ADDR(RAPICEAQ);/* FIRST LINK IN APPL ACQ Q  */
         LA    RETVAL,RAPICEAQ(,RAPPTR)                         02S1118
*                 DO WHILE(RETVAL->ADDRESS^=NEXTICE);/* LOOK FOR
*                                      NEXTICE                       */
         B     @DE01119                                         02S1119
@DL01119 DS    0H                                               02S1120
*                   RETVAL=ADDR(RETVAL->ADDRESS->ICESUBJQ);     02S1120
         L     @14,ADDRESS(,RETVAL)                             02S1120
         LA    @14,ICESUBJQ(,@14)                               02S1120
         LR    RETVAL,@14                                       02S1120
*                 END;                                          02S1121
@DE01119 C     NEXTICE,ADDRESS(,RETVAL)                         02S1121
         BNE   @DL01119                                         02S1121
*                 RETVAL->ADDRESS=NEXTICE->ICESUBJQ;/* DEQ ICE FROM
*                                      APPL                          */
         MVC   ADDRESS(4,RETVAL),ICESUBJQ(NEXTICE)              02S1122
*                 ICEPTR=NEXTICE;   /* REMEMBER LAST ICE DEQD        */
         LR    ICEPTR,NEXTICE                                   02S1123
*                 NEXTICE=ICESIDE;  /* MOVE TO NEXT ICE IN SIDE Q    */
         L     NEXTICE,ICESIDE(,ICEPTR)                         02S1124
*               END;                                            02S1125
@DE01111 C     NEXTICE,FIRSTICE(,SAVEPTR)                       02S1125
         BNE   @DL01111                                         02S1125
*               ICESIDE=ICXPTR;     /* COMPLETE LINK OF FREE CES     */
         ST    ICXPTR,ICESIDE(,ICEPTR)                          02S1126
*             END;                                              02S1127
*         END FREELIST;             /* END OF FREELIST LOGIC SEGMENT
*                                                            @D32CKMP*/
@RF01107 DS    0H                                               02S1129
*       END;                                                    01S1129
*   RFY                                                         01S1130
*    (AVAILCT,                                                  01S1130
*     NEXTICE) UNRSTD;                                          01S1130
@RF01102 DS    0H                                               01S1130
@RF01101 DS    0H                                               01S1131
*   RFY                                                         01S1131
*     RETPTR RSTD;                                              01S1131
*   RETPTR=SAVERET3;                /* RESTORE RETURN ADDRESS        */
         L     RETPTR,SAVERET3(,SAVEPTR)                        01S1132
*   RFY                                                         01S1133
*     RETPTR UNRSTD;                                            01S1133
*   END ACQDONE;                                                01S1134
@EL00003 DS    0H                                               01S1134
@EF00003 DS    0H                                               01S1134
@ER00003 BR    @14                                              01S1134
*TPQREL:                                                        01S1135
*   PROC OPTIONS(NOSAVE);           /*                       @D32CKXY*/
TPQREL   DS    0H                                               01S1136
*/********************************************************************/
*/*       A SUBROUTINE WAS CREATED FOR THE TPQUE TO AVOID            */
*/*       A COMPILE PROBLEM CAUSED BY THE NESTING OF DO              */
*/*       STATEMENTS BEYOND THE LIMIT OF 15                          */
*/********************************************************************/
*                                                               01S1136
*   RFY                                                         01S1136
*     RETPTR RSTD;                                              01S1136
*   SAVERET3=RETPTR;                /* SAVE RETURN ADDR              */
         ST    RETPTR,SAVERET3(,SAVEPTR)                        01S1137
*   RFY                                                         01S1138
*     RETPTR UNRSTD;                                            01S1138
*   RFY                                                         01S1139
*    (RAPPTR,                                                   01S1139
*     ICEPTR,                                                   01S1139
*     CSPPTR) UNRSTD;                                           01S1139
*   GEN(STM RAPPTR,CSPPTR,RPHSAV10(RPHPTR))/*                @ZM00657*/
*   REFS(RAPPTR,ICEPTR,CSPPTR,ATCVTPTR,RPHPTR,ISTRPH) SETS(RPHSAV10,
*       RPHSAV11,RPHSAV12,RPHSAV13);                            01S1140
*                                                               01S1140
         STM RAPPTR,CSPPTR,RPHSAV10(RPHPTR)
*/*  TPQUE (NCSPLPTR,NCSPLNSN->RCCVPAB->DYPPAB) NORM                 */
*                                                               01S1141
*   DO;                                                         01S1141
*     RFY                                                       01S1142
*      (GPR00P,                                                 01S1142
*       GPR01P,                                                 01S1142
*       GPR04P,                                                 01S1142
*       GPR05P,                                                 01S1142
*       GPR15P) RSTD;                                           01S1142
*     GEN REFS(GPR01P) SETS(RPHWORK)(STM GPR02P,GPR08P,RPHWORK(GPR01P))
*         ;                                                     01S1143
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*     GPR00P=0;                                                 01S1144
         SLR   GPR00P,GPR00P                                    01S1144
*     GPR15P=ADDR(NCSPLNSN->RCCVPAB->DYPPAB);/* HOLD PAB PTR         */
         L     @11,NCSPLNSN(,NCSPLPTR)                          01S1145
         L     GPR15P,RCCVPAB(,@11)                             01S1145
         LA    GPR15P,DYPPAB(,GPR15P)                           01S1145
*     GPR04P=NCSPLPTR;              /* WORK ELE PTR                  */
         LR    GPR04P,NCSPLPTR                                  01S1146
*     GPR05P=GPR15P;                /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                    01S1147
*     CALL ATCLCPTR->ATCAP37->ISTAPC37;                         01S1148
         L     @11,ATCLCPTR                                     01S1148
         L     @15,ATCAP37(,@11)                                01S1148
         BALR  @14,@15                                          01S1148
*     GEN(NOPR  0)                                              01S1149
*     NOSETS NOREFS;                                            01S1149
         NOPR  0
*     RFY                                                       01S1150
*      (GPR00P,                                                 01S1150
*       GPR01P,                                                 01S1150
*       GPR04P,                                                 01S1150
*       GPR05P,                                                 01S1150
*       GPR15P) UNRSTD;                                         01S1150
*   END;                            /* *** END OF TPQUE GENERATION
*                                                            @XM08651*/
*   GEN(LM  RAPPTR,CSPPTR,RPHSAV10(RPHPTR))/*                @ZM00657*/
*   REFS(RPHSAV10,RPHSAV11,RPHSAV12,RPHSAV13,RPHPTR,ISTRPH) SETS(RAPPTR
*       ,ICEPTR,CSPPTR,ATCVTPTR);                               01S1152
         LM  RAPPTR,CSPPTR,RPHSAV10(RPHPTR)
*   RFY                                                         01S1153
*    (RAPPTR,                                                   01S1153
*     ICEPTR,                                                   01S1153
*     CSPPTR,                                                   01S1153
*     ATCVTPTR) RSTD;                                           01S1153
*   RFY                                                         01S1154
*     RETPTR RSTD;                                              01S1154
*   RETPTR=SAVERET3;                                            01S1155
         L     RETPTR,SAVERET3(,SAVEPTR)                        01S1155
*   RFY                                                         01S1156
*     RETPTR UNRSTD;                /* RESTORE RETURN ADDRESS        */
*   END TPQREL;                     /*                       @D32CKXY*/
@EL00004 DS    0H                                               01S1157
@EF00004 DS    0H                                               01S1157
@ER00004 BR    @14                                              01S1157
@PB00004 DS    0H                                               01S1158
*                                                               01S1158
*/* TPEPILOG                                                         */
*                                                               01S1158
*   GEN(PRINT OFF);                                             01S1158
         PRINT OFF
*   DCL                                                         01S1159
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                         01S1160
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                              01S1161
*                                                               01S1161
         PRINT ON
*/* END OF TPEPILOG                                                  */
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTICE                                               */
*/*             ISTACE                                               */
*/*             ISTPAB                                               */
*/*             ISTLOK                                               */
*/*             ISTDYPAB                                             */
*/*             ISTRPH                                               */
*/*             ISTATCVT                                             */
*/*             ISTBFHDR                                             */
*/*             ISTPFCRR                                             */
*/*             ISTCNSTA                                             */
*/*             ISTLCCW                                              */
*/*             ISTLCPB                                              */
*/*             ISTZSAVE                                             */
*/*             ISTCFCRR                                             */
*/*             ISTZCRR                                              */
*/*             ISTASCRR                                             */
*/*             ISTAPCRR                                             */
*/*             ISTCRA                                               */
*/*             ISTICX                                               */
*/*             ISTBIND                                              */
*/*             ISTLGPFX                                             */
*/*             ISTPOHD                                              */
*/*             ISTPFX                                               */
*/*             ISTNCSPL                                             */
*/*             ISTDEVCH                                             */
*/*             ISTRDT                                               */
*/*             ISTCSL                                               */
*/*             ISTCSP                                               */
*/*             ISTUECB                                              */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                               01S1162
*   END ISTCSCRL                                                01S1162
*                                                               01S1162
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSUT5  (NOREL   )                                       */
*/*%INCLUDE SYSUT5  (TRUEREL )                                       */
*/*%INCLUDE SYSUT5  (REQREL  )                                       */
*/*%INCLUDE SYSUT5  (REQREL1 )                                       */
*/*%INCLUDE SYSUT5  (LOGREL  )                                       */
*/*%INCLUDE SYSUT5  (DOACQ   )                                       */
*/*%INCLUDE SYSUT5  (LOGCNTRL)                                       */
*/*%INCLUDE SYSUT5  (MAKESN  )                                       */
*/*%INCLUDE SYSUT5  (MAKELGN )                                       */
*/*%INCLUDE SYSUT5  (FREELIST)                                       */
*                                                               01S1162
*       ;                                                       01S1162
@EL00001 DS    0H                                               01S1162
@EF00001 DS    0H                                               01S1162
@ER00001 BR    @14                                              01S1162
@DATA    DS    0H
@CH00201 DC    H'4'
@CH00442 DC    H'12'
@CH03858 DC    H'52'
@CH03860 DC    H'56'
@CH03862 DC    H'60'
@CH00221 DC    H'64'
@CH03865 DC    H'68'
@CH01454 DC    H'72'
@DATD    DSECT
         DS    0F
ISTCSCRL CSECT
         DS    0F
@CF00045 DC    F'1'
@CH00045 EQU   @CF00045+2
@CF01974 DC    F'2032'
@CF00106 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
LCPBPTR  DS    A
CVTPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTCSCRL CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
FMZA0019 DS    FL4
         ORG   FMZA0019
@NM00052 DC    AL1(152)
@NM00053 DC    AL3(0)
         ORG   FMZA0019+4
CMZA0038 DS    FL4
         ORG   CMZA0038
@NM00054 DC    AL1(96)
@NM00055 DC    AL1(96)
@NM00056 DC    AL1(241)
@NM00057 DC    XL1'00'
         ORG   CMZA0038+4
FMZA0056 DS    FL4
         ORG   FMZA0056
@NM00058 DC    AL1(64)
@NM00059 DC    AL3(0)
         ORG   FMZA0056+4
@CB01990 DC    X'0002'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
BASEREG  EQU   @12
RPHPTR   EQU   @01
ENTRYREG EQU   @15
SAVEPTR  EQU   @13
FREEOFF  EQU   @00
NEXTICE  EQU   @03
AVAILCT  EQU   @04
ICXPTR   EQU   @05
NCSPLPTR EQU   @07
STRGPTR  EQU   @07
STRGPTR1 EQU   @07
UECBPTR  EQU   @07
TERMPTR  EQU   @08
TRMPTR   EQU   @08
REQCE    EQU   @08
REQUECB  EQU   @09
RAPPTR   EQU   @09
ACEPTR   EQU   @10
ICEPTR   EQU   @10
CEPTR    EQU   @10
CSPPTR   EQU   @11
ATCVTPTR EQU   @06
RETPTR   EQU   @14
RETVAL   EQU   @15
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
ATCLCPTR EQU   1032
ISTICE   EQU   0
ICESUBJ  EQU   ISTICE
ICEOBJ   EQU   ISTICE+4
ICESUBJQ EQU   ISTICE+8
ICEOBJQ  EQU   ISTICE+12
ICESIDE  EQU   ISTICE+16
ICEDATA  EQU   ISTICE+20
ICERPHA  EQU   ISTICE+24
ICEFLAGS EQU   ISTICE+28
ICEICX   EQU   ICEFLAGS
ICELGON  EQU   ICEFLAGS
ICERSC2F EQU   ICEFLAGS
ICESTAPR EQU   ICEFLAGS
ICEUECBX EQU   ISTICE+32
ISTACE   EQU   0
ACESUBJ  EQU   ISTACE
ACESUBJQ EQU   ISTACE+8
ACEOBJQ  EQU   ISTACE+12
ACERPHA  EQU   ISTACE+16
ACEFLAGS EQU   ISTACE+20
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00005 EQU   LOKCHNG+2
ISTDYPAB EQU   0
DYPPAB   EQU   ISTDYPAB+16
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
RPHSAVE2 EQU   RPHWORK+4
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE4 EQU   RPHWORK+12
RPHSAV10 EQU   RPHWORK+36
RPHSAV11 EQU   RPHWORK+40
RPHSAV12 EQU   RPHWORK+44
RPHSAV13 EQU   RPHWORK+48
RPHNEXPO EQU   ISTRPH+104
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSNHLT EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCACCTA EQU   ATCCOM+100
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCGTSTR EQU   ATCCOM+164
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCACTRM EQU   ATCCOM+264
ATCCSMR  EQU   ISTATCVT+296
ATCCSMA  EQU   ATCCSMR
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00016 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00018 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTBFHDR EQU   0
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSRLINA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSTRRLA EQU   CNSTFLDA
CNSRQRLA EQU   CNSTFLDA+1
CNSTFLDB EQU   ISTCNSTA+19
CNSRLINB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSTRRLB EQU   CNSTFLDB
CNSRQRLB EQU   CNSTFLDB+1
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTICX   EQU   0
ICXUECBA EQU   ISTICX
ICXREQCT EQU   ISTICX+4
ICXAVLCT EQU   ISTICX+6
ISTBIND  EQU   0
BINFMTY  EQU   ISTBIND
BINPRIP  EQU   ISTBIND+3
BINSECP  EQU   ISTBIND+4
BINCMNP  EQU   ISTBIND+5
BINCMNP2 EQU   ISTBIND+6
BINTSU   EQU   ISTBIND+7
BINRPACE EQU   BINTSU+1
BINRUSZ  EQU   BINTSU+2
BINSRUSZ EQU   BINRUSZ
BINPRUSZ EQU   BINRUSZ+1
BINPRSVC EQU   ISTBIND+13
BINLUP   EQU   BINPRSVC
BINPSCHR EQU   BINPRSVC+1
ISTLGPFX EQU   0
ISTPOHD  EQU   0
POHSTAT  EQU   ISTPOHD+1
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTNCSPL EQU   0
@NM00035 EQU   ISTNCSPL
NCSPFX   EQU   @NM00035
NCSPLVCD EQU   ISTNCSPL+17
NCSPLVBF EQU   ISTNCSPL+18
NCSPLVFL EQU   ISTNCSPL+20
NCSPLVF1 EQU   ISTNCSPL+21
NCSPLRID EQU   ISTNCSPL+28
NCSPLLID EQU   ISTNCSPL+36
NCSPLRPT EQU   ISTNCSPL+52
NCSPLLPT EQU   ISTNCSPL+56
NCSPLCMD EQU   ISTNCSPL+60
NCSCMDA  EQU   NCSPLCMD
NCSCRFLG EQU   ISTNCSPL+67
NCSPLRAD EQU   ISTNCSPL+144
NCSIOCID EQU   ISTNCSPL+148
NCSPLCID EQU   NCSIOCID
NCSPLWKA EQU   ISTNCSPL+152
NCSPLCVT EQU   ISTNCSPL+156
NCSPLFSB EQU   ISTNCSPL+168
NCSPLFL1 EQU   ISTNCSPL+176
NCSPLREQ EQU   NCSPLFL1
NCSPLFL2 EQU   ISTNCSPL+177
NCSPLFL3 EQU   ISTNCSPL+178
NCSPLFL4 EQU   ISTNCSPL+179
NCSPLFL5 EQU   ISTNCSPL+181
NCSPLAPP EQU   ISTNCSPL+216
NCSPLNSN EQU   ISTNCSPL+240
NCSSENSE EQU   ISTNCSPL+244
NCSCRMSK EQU   ISTNCSPL+268
NCSCHKPT EQU   NCSCRMSK
NCSCRMOD EQU   NCSCRMSK+2
NCSPLSID EQU   ISTNCSPL+271
NCSPLSTA EQU   NCSPLSID
NCSPLPHD EQU   NCSPLSID+1
NCSAPP   EQU   0
NCSAPBUE EQU   NCSAPP+88
NCSUSSRU EQU   0
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRACT   EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRLIVE  EQU   RPRFLAGA
RPRFLAGB EQU   ISTRPRE+22
RPRHLVPD EQU   RPRFLAGB
RPRCAUSE EQU   ISTRPRE+23
RPRNSNEA EQU   ISTRPRE+36
RPRSTPCT EQU   ISTRPRE+56
RPRPTHCT EQU   ISTRPRE+60
RPRFLAGD EQU   ISTRPRE+61
RPRINIMM EQU   RPRFLAGD
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPICELN EQU   ISTRCPRE+72
RCPLNAPA EQU   ISTRCPRE+76
RCPICEAQ EQU   ISTRCPRE+80
RCPACETR EQU   ISTRCPRE+84
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPICELG EQU   ISTRAP+88
RAPICEAQ EQU   ISTRAP+96
RAPACEAP EQU   ISTRAP+100
RAPACEQD EQU   ISTRAP+106
RAPFLG   EQU   ISTRAP+108
RAPAQUI  EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCVPAB  EQU   ISTRCC+88
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTCSL   EQU   0
CSLRDEF  EQU   ISTCSL
CSLRDTE  EQU   CSLRDEF
CSLRDTEF EQU   CSLRDTE
CSLNDEF  EQU   ISTCSL+4
CSLNIB   EQU   CSLNDEF
CSLNIBF  EQU   CSLNIB
CSLDDEF  EQU   ISTCSL+8
CSLDATA  EQU   CSLDDEF
ISTCSP   EQU   0
CSPOPT   EQU   ISTCSP+2
CSPOPT1  EQU   CSPOPT
CSPOPT2  EQU   CSPOPT+1
CSPCOREQ EQU   CSPOPT2
CSPNOREL EQU   CSPOPT2
CSPSRC   EQU   ISTCSP+4
CSPRSCE  EQU   ISTCSP+12
CSPCC    EQU   ISTCSP+20
CSPRLRPH EQU   ISTCSP+24
CSPTRDTE EQU   ISTCSP+28
CSPRSC2B EQU   ISTCSP+32
ISTUECB  EQU   0
UECFORW  EQU   ISTUECB+4
UECPLIST EQU   ISTUECB+32
UECACB   EQU   UECPLIST
UECNDID  EQU   UECPLIST+4
UECTPNCD EQU   UECNDID
UECREQTR EQU   UECPLIST+8
UECDLEN  EQU   UECPLIST+12
UECRSNCD EQU   UECDLEN
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
MXTRN    EQU   0
SRCHQPTR EQU   0
FRESTPTR EQU   0
LOG0PTR  EQU   0
ACCTPTR  EQU   0
GETSTPTR EQU   0
ACONPTR  EQU   0
TCONPTR  EQU   0
POSTPTR  EQU   0
RLSAVEA  EQU   124
SAVERET1 EQU   RLSAVEA
AVAILFLG EQU   SAVERET1
SAVERET2 EQU   RLSAVEA+4
SAVERET3 EQU   RLSAVEA+8
FREECES  EQU   RLSAVEA+12
FIRSTICE EQU   RLSAVEA+16
NCSWKA   EQU   0
NCSWKAW1 EQU   NCSWKA
NCSWKAW2 EQU   NCSWKA+4
NCSWKAW3 EQU   NCSWKA+8
ADDRESS  EQU   0
FMZL0019 EQU   0
FMZL0056 EQU   0
ISTAPC37 EQU   0
ISTAPC34 EQU   0
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
BINLUP1  EQU   BINPSCHR
BINLUS   EQU   BINPSCHR
BINFMF1  EQU   BINLUS
BINRSV09 EQU   BINFMF1
BINDSPF1 EQU   BINLUS+2
BINMEDIA EQU   BINLUS+4
BINLUP2  EQU   BINPSCHR
BINLUP3  EQU   BINPSCHR
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
BINRSV26 EQU   BINLUP3
BINRSV15 EQU   BINLUP2+10
BINPRESZ EQU   BINLUP2+9
BINRSV14 EQU   BINLUP2
BINRSV13 EQU   BINMEDIA
BINDISK  EQU   BINMEDIA
BINXCHNG EQU   BINMEDIA
BINCARD  EQU   BINMEDIA
BINDOCMT EQU   BINMEDIA
BINRSV17 EQU   BINDSPF1+1
BINTRNDS EQU   BINDSPF1
BINRSV12 EQU   BINDSPF1
BINVSDS  EQU   BINDSPF1
BINVTDS  EQU   BINDSPF1
BINHFDS  EQU   BINDSPF1
BININTR  EQU   BINDSPF1
BINRSV11 EQU   BINRSV09+1
BINXFPD  EQU   BINRSV09+1
BINCSDS  EQU   BINRSV09+1
BINQDSI  EQU   BINRSV09+1
BINRSV16 EQU   BINRSV09+1
BINARRR  EQU   BINRSV09
BINSIDS  EQU   BINRSV09
BINSAI   EQU   BINRSV09
BINSDSI  EQU   BINRSV09
BINKDDSI EQU   BINRSV09
BINPDIR  EQU   BINFMF1
BINCMPCT EQU   BINFMF1
BINDESTS EQU   BINFMF1
BINSLUS1 EQU   BINLUP1+6
BINPLUS1 EQU   BINLUP1+1
BINDSP1  EQU   BINLUP1
BINFMHS1 EQU   BINLUP1
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
@NM00051 EQU   SAVERET1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00050 EQU   CVTFIX+248
@NM00049 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
UECRVPT4 EQU   ISTUECB+80
UECRVPT3 EQU   ISTUECB+76
UECLGDTA EQU   ISTUECB+72
UECDVTPT EQU   ISTUECB+68
UECREQNM EQU   ISTUECB+60
UECSYMNM EQU   ISTUECB+52
UECVRPL  EQU   UECPLIST+16
UECRSNBT EQU   UECRSNCD+3
@NM00048 EQU   UECRSNCD
UECUSFLD EQU   UECREQTR
UECDAF   EQU   UECTPNCD+2
UECSAF   EQU   UECTPNCD
UECRPLAD EQU   UECACB
UECPAB   EQU   ISTUECB+16
UECEXLST EQU   ISTUECB+12
UECTSKID EQU   ISTUECB+8
UECTYPE  EQU   ISTUECB+3
UECRSV01 EQU   ISTUECB+2
UECLEN   EQU   ISTUECB+1
UECID    EQU   ISTUECB
CSPUNUSD EQU   CSPRSC2B+4
CSPUECBA EQU   CSPRSC2B
CSPNO    EQU   ISTCSP+22
CSPDATA  EQU   ISTCSP+16
CSPDEST  EQU   ISTCSP+8
@NM00047 EQU   CSPOPT2
CSPRSC2F EQU   CSPOPT2
CSPWASQD EQU   CSPOPT2
CSPACQS  EQU   CSPOPT2
CSPACES  EQU   CSPOPT2
CSPSTAP  EQU   CSPOPT2
@NM00046 EQU   CSPOPT1
CSPANY   EQU   CSPOPT1
CSPACT   EQU   CSPOPT1
CSPSESS  EQU   CSPOPT1
CSPPND   EQU   CSPOPT1
CSPLOGI  EQU   CSPOPT1
CSPQ     EQU   CSPOPT1
CSPRSC   EQU   CSPOPT1
CSPIDX   EQU   ISTCSP
CSLDATAF EQU   CSLDATA
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUNDSES EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
@NM00045 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00044 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00043 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPTRPRE EQU   ISTRAP+104
RAPICEAC EQU   ISTRAP+92
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00042 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00041 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00040 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRSWDAF EQU   ISTRPRE+58
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
NCSRUITS EQU   NCSUSSRU+2
NCSRULEN EQU   NCSUSSRU
NCSAPPAB EQU   NCSAPP+608
NCSAPDAT EQU   NCSAPBUE+8
NCSAPRU  EQU   NCSAPBUE+3
NCSRSV04 EQU   NCSAPBUE
NCSAPEND EQU   NCSAPP+84
NCSAPTXT EQU   NCSAPP+76
NCSAPECB EQU   NCSAPP+72
NCSAPSA  EQU   NCSAPP
NCSPLPDB EQU   NCSPLSID+5
NCSPLNID EQU   NCSPLPHD
NCSPLPO  EQU   NCSPLSTA
NCSRSVD4 EQU   NCSPLSTA
NCSRSVD2 EQU   NCSCRMOD
NCSPTMOD EQU   NCSCRMOD
NCSAIMOD EQU   NCSCRMOD
NCSRSVD1 EQU   NCSCHKPT+1
NCSPTUSE EQU   NCSCHKPT+1
NCSRNME  EQU   NCSCHKPT+1
NCSCUA   EQU   NCSCHKPT+1
NCSANSMD EQU   NCSCHKPT+1
NCSLGMOD EQU   NCSCHKPT
NCSLGAPL EQU   NCSCHKPT
NCSDTRLM EQU   NCSCHKPT
NCSESLM  EQU   NCSCHKPT
NCSNRPL  EQU   NCSCHKPT
NCSPOLD  EQU   NCSCHKPT
NCSPACTV EQU   NCSCHKPT
NCSACTV  EQU   NCSCHKPT
NCSCRDTE EQU   ISTNCSPL+264
NCSPLRTY EQU   ISTNCSPL+263
NCSPLRH  EQU   ISTNCSPL+260
NCSUFMCB EQU   ISTNCSPL+256
NCSMGLPT EQU   ISTNCSPL+252
NCSCPWPT EQU   ISTNCSPL+248
NCSSENS2 EQU   NCSSENSE+2
NCSSNS2  EQU   NCSSENSE+1
NCSSNS1  EQU   NCSSENSE
NCSPLMID EQU   ISTNCSPL+232
NCSPLPID EQU   ISTNCSPL+231
NCSPLGID EQU   ISTNCSPL+230
NCSPLSQN EQU   ISTNCSPL+228
NCSRNAME EQU   ISTNCSPL+220
NCSPLRUI EQU   ISTNCSPL+212
NCSPLRUO EQU   ISTNCSPL+208
NCSPLRRP EQU   ISTNCSPL+204
NCSPLWEL EQU   ISTNCSPL+200
NCSPLSPL EQU   ISTNCSPL+196
NCSPLP3  EQU   ISTNCSPL+192
NCSPLP2  EQU   ISTNCSPL+188
NCSPLP1  EQU   ISTNCSPL+184
NCSPLOLN EQU   ISTNCSPL+182
@NM00039 EQU   NCSPLFL5
NCSFORCE EQU   NCSPLFL5
NCSSDLK  EQU   NCSPLFL5
NCSSCPPS EQU   NCSPLFL5
NCSDLRSN EQU   ISTNCSPL+180
NCSPL2AP EQU   NCSPLFL4
NCSDSPN  EQU   NCSPLFL4
NCSDSPI  EQU   NCSPLFL4
NCSDSPA  EQU   NCSPLFL4
NCSDSPE  EQU   NCSPLFL4
NCSPLVID EQU   NCSPLFL4
NCSPLRSO EQU   NCSPLFL4
NCSDLNID EQU   NCSPLFL4
NCSEND   EQU   NCSPLFL3
NCSFINAL EQU   NCSPLFL3
NCSANS   EQU   NCSPLFL3
NCSPID   EQU   NCSPLFL3
NCSGID   EQU   NCSPLFL3
NCSPLANS EQU   NCSPLFL3
NCSEPP   EQU   NCSPLFL3
NCSPLMOM EQU   NCSPLFL3
NCSPLVIT EQU   NCSPLFL2
NCSPLVIS EQU   NCSPLFL2
NCSREMPO EQU   NCSPLFL2
NCSPLDS  EQU   NCSPLFL2
NCSOUFMC EQU   NCSPLFL2
NCSPLRIO EQU   NCSPLFL2
NCSPLRSF EQU   NCSPLFL2
NCSPLVDP EQU   NCSPLFL2
NCSPLPOS EQU   NCSPLFL1
NCSPL2CN EQU   NCSPLFL1
NCSPLAPU EQU   NCSPLFL1
NCSPLNON EQU   NCSPLFL1
NCSPLEBN EQU   NCSPLFL1
NCSPLSOM EQU   NCSPLFL1
NCSPL2IN EQU   NCSPLFL1
NCSPLRCR EQU   ISTNCSPL+172
NCSPLECB EQU   ISTNCSPL+164
NCSPLRPH EQU   ISTNCSPL+160
NCSPLDAF EQU   NCSPLCID+2
NCSPLSAF EQU   NCSPLCID
NCSPLRCD EQU   NCSPLRAD+1
NCSLSCMD EQU   NCSPLRAD
NCSPLWRF EQU   ISTNCSPL+72
NCSPLWRE EQU   ISTNCSPL+68
NCSSTCMD EQU   NCSCRFLG
NCSUSRNF EQU   NCSCRFLG
NCSOPRQU EQU   NCSCRFLG
NCSCRDSE EQU   NCSCRFLG
NCSFMERP EQU   NCSCRFLG
NCSFMCLD EQU   NCSCRFLG
NCSPLCLD EQU   NCSCRFLG
NCSPLWRM EQU   NCSCRFLG
NCSPLUAD EQU   ISTNCSPL+64
NCSMSGSP EQU   ISTNCSPL+63
NCSNCPEP EQU   ISTNCSPL+62
NCSCMDB  EQU   NCSPLCMD+1
@NM00038 EQU   NCSCMDA
NCSPLUFM EQU   NCSCMDA
NCSPLFLO EQU   NCSCMDA
NCSPLSYN EQU   NCSCMDA
NCSPLCTL EQU   NCSCMDA
NCSPLSYS EQU   NCSCMDA
NCSCRPID EQU   ISTNCSPL+51
NCSCRCMD EQU   ISTNCSPL+50
NCSDLID  EQU   ISTNCSPL+44
NCSRRNPT EQU   ISTNCSPL+24
NCSIORC  EQU   ISTNCSPL+23
NCSPRMRC EQU   ISTNCSPL+22
NCSOVFMC EQU   NCSPLVF1
NCSRSV02 EQU   NCSPLVFL
NCSDACLK EQU   NCSPLVFL
NCSABCON EQU   NCSPLVFL
NCSDCONT EQU   NCSPLVFL
NCSVSTAT EQU   NCSPLVFL
NCSVDEL  EQU   NCSPLVFL
NCSVNCSA EQU   NCSPLVFL
NCSVBF16 EQU   NCSPLVBF+1
NCSVBF15 EQU   NCSPLVBF+1
NCSVBF14 EQU   NCSPLVBF+1
NCSVBF13 EQU   NCSPLVBF+1
NCSVBF12 EQU   NCSPLVBF+1
NCSVBF11 EQU   NCSPLVBF+1
NCSVBF10 EQU   NCSPLVBF+1
NCSVBF09 EQU   NCSPLVBF+1
NCSVBF08 EQU   NCSPLVBF
NCSVBF07 EQU   NCSPLVBF
NCSVBF06 EQU   NCSPLVBF
NCSVBF05 EQU   NCSPLVBF
NCSVBF04 EQU   NCSPLVBF
NCSVBF03 EQU   NCSPLVBF
NCSVBF02 EQU   NCSPLVBF
NCSVBF01 EQU   NCSPLVBF
@NM00037 EQU   ISTNCSPL+16
NCSCRWKA EQU   NCSPFX+12
@NM00036 EQU   NCSPFX
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
POHID    EQU   ISTPOHD+2
POHGEN   EQU   POHSTAT
POHRREQ  EQU   POHSTAT
POHRSVD2 EQU   POHSTAT
POHCNTRL EQU   POHSTAT
POHLBL   EQU   POHSTAT
POHDATA  EQU   POHSTAT
POHEND   EQU   POHSTAT
POHRSVD1 EQU   ISTPOHD
LGPLOGNP EQU   ISTLGPFX+48
LGPSESSP EQU   ISTLGPFX+12
LGPUSECT EQU   ISTLGPFX+10
LGPDTLEN EQU   ISTLGPFX+8
LGPBFHDR EQU   ISTLGPFX
BINUSE   EQU   ISTBIND+36
BINUSEL  EQU   ISTBIND+35
BINPRIM  EQU   ISTBIND+27
BINPRIML EQU   ISTBIND+26
BINRSV05 EQU   ISTBIND+25
BINLUTYP EQU   BINLUP
BINRSV27 EQU   BINLUP
BINRSV08 EQU   BINTSU+4
BINPRUSE EQU   BINPRUSZ
BINPRUSM EQU   BINPRUSZ
BINSRUSE EQU   BINSRUSZ
BINSRUSM EQU   BINSRUSZ
BINRPACM EQU   BINRPACE
BINRSV07 EQU   BINRPACE
BINRSV06 EQU   BINTSU
BINCONR  EQU   BINCMNP2
BINRCHN  EQU   BINCMNP2
BINMDIBK EQU   BINCMNP2
BINBKFS  EQU   BINCMNP2
BINRCVR  EQU   BINCMNP2
BINFMTRM EQU   BINCMNP2
BINRSV04 EQU   BINCMNP
BINALT   EQU   BINCMNP
BINBKTR  EQU   BINCMNP
BINBRAK  EQU   BINCMNP
BINFMHD  EQU   BINCMNP
BINRSV03 EQU   BINCMNP
BINSSEB  EQU   BINSECP
BINSCMP  EQU   BINSECP
BINRSV02 EQU   BINSECP
BINSCHNR EQU   BINSECP
BINSMCH  EQU   BINSECP
BINSCHN  EQU   BINSECP
BINPSEB  EQU   BINPRIP
BINPCMP  EQU   BINPRIP
BINRSV01 EQU   BINPRIP
BINPCHNR EQU   BINPRIP
BINPMCH  EQU   BINPRIP
BINPCHN  EQU   BINPRIP
BINTS    EQU   ISTBIND+2
BINFM    EQU   ISTBIND+1
BINTYPE  EQU   BINFMTY
BINFMT   EQU   BINFMTY
ICXWORK  EQU   ISTICX+8
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00034 EQU   ISTAPCRR+137
@NM00033 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00032 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00031 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00030 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00029 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00028 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00027 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00026 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00025 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00024 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00023 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00022 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
BFHDATA  EQU   ISTBFHDR+8
BFHUSED  EQU   ISTBFHDR+6
BFHSIZE  EQU   ISTBFHDR+4
BFHNXCHN EQU   ISTBFHDR
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00021 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00020 EQU   ATCAOSM+333
@NM00019 EQU   @NM00018
ATCSNUF  EQU   @NM00018
ATCOPKL  EQU   @NM00018
ATCABEN  EQU   @NM00018
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00017 EQU   @NM00016
ATCVTMAB EQU   @NM00016
@NM00015 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00014 EQU   ISTATCVT+819
@NM00013 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00012 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00011 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00010 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00009 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00008 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00007 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00005
LOKPRY   EQU   @NM00005
@NM00006 EQU   @NM00005
@NM00004 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
@NM00003 EQU   ACEFLAGS
ACEVARY  EQU   ACEFLAGS
ACETAKER EQU   ACEFLAGS
ACEPREMR EQU   ACEFLAGS
ACETAKEN EQU   ACEFLAGS
ACEPREMD EQU   ACEFLAGS
ACEOBJ   EQU   ISTACE+4
ICERSC2B EQU   ISTICE+36
@NM00002 EQU   ISTICE+29
@NM00001 EQU   ICEFLAGS
ICESPEC  EQU   ICEFLAGS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00659 EQU   @RC00656
@RC00797 EQU   @RC00746
@RF00932 EQU   @RC00927
@RC00957 EQU   @RC00955
@RC01084 EQU   @RC01083
@PB00003 EQU   @PB00004
@RC00817 EQU   @RC00797
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   ISTCSCRL,(C'PLS1242',0603,78037)
