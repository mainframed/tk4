VP32     TITLE 'BLSUVP32--VALIDATE PDE FOR INTEGER RANGE: 0 TO 2**24   *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPSR                           */
*/*------------------------------------------------------------------*/
BLSUVP32 CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSUVP32  78.060'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
*/*------------------------------------------------------------------*/
*/* BLSUVP32--VALIDATE PDE FOR INTEGER RANGE BETWEEN 0 AND 2**24     */
*/*------------------------------------------------------------------*/
*                                                               01S0007
*   PDEP=PDEPTR;                    /* ->PDE                         */
         L     PDEP,PDEPTR(,R1)                                 01S0007
*   RANGEORG=PDEI1;                 /* RANGE ORIGIN                  */
         L     @14,PDEIP(,PDEP)                                 01S0008
         L     RANGEORG,PDEI1(,@14)                             01S0008
*   IF PDEIFP(2)='1'B THEN          /* EXPLICIT RANGE END            */
         TM    PDEIFP+8(PDEP),B'10000000'                       01S0009
         BNO   @RF00009                                         01S0009
*     RANGEEND=PDEI2;               /* INTEGER RANGE END             */
         L     @14,PDEIP+8(,PDEP)                               01S0010
         L     RANGEEND,PDEI2(,@14)                             01S0010
*   ELSE                            /* IMPLICIT RANGE END            */
*     RANGEEND=RANGEORG;            /* INTEGER RANGE END             */
         B     @RC00009                                         01S0011
@RF00009 LR    RANGEEND,RANGEORG                                01S0011
*   IF                              /* INVALID INTEGER               */
*       RANGEORG>RANGEEND×          /* VALUE TOO SMALL               */
*       RANGEEND>16777216 THEN      /* VALUE TOO LARGE               */
@RC00009 CLR   RANGEORG,RANGEEND                                01S0012
         BH    @RT00012                                         01S0012
         CL    RANGEEND,@CF00080                                01S0012
         BNH   @RF00012                                         01S0012
@RT00012 DS    0H                                               01S0013
*     RF=4;                         /* RETURN CODE                   */
         LA    RF,4                                             01S0013
*   ELSE                            /* VALID INTEGER                 */
*     RF=0;                         /* RETURN CODE                   */
         B     @RC00012                                         01S0014
@RF00012 SLR   RF,RF                                            01S0014
*   RETURN CODE(RF);                                            01S0015
@RC00012 L     @14,12(,@13)                                     01S0015
         LM    @00,@12,20(@13)                                  01S0015
         BR    @14                                              01S0015
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0016
*     I031F FIXED(31) BASED,                                    01S0016
*     I031P PTR(31) BASED,                                      01S0016
*     I015F FIXED(15) BASED,                                    01S0016
*     I015P PTR(15) BASED,                                      01S0016
*     I008P PTR(8) BASED,                                       01S0016
*     I001C CHAR(1) BASED;                                      01S0016
*   GENERATE NODEFS NOREFS DATA;                                01S0017
*   END BLSUVP32;                   /* BLRPEND(BLSUVP32)             */
@EL00001 DS    0H                                               01S0018
@EF00001 DS    0H                                               01S0018
@ER00001 LM    @14,@12,12(@13)                                  01S0018
         BR    @14                                              01S0018
@DATA    DS    0H
@DATD    DSECT
         DS    0F
BLSUVP32 CSECT
         DS    0F
@CF00080 DC    F'16777216'
@DATD    DSECT
         DS    0D
BLSUVP32 CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
***********************************************************************
         SPACE
BLSUVP32 CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSUVP32+19)/20+7)/8)CL8'BLSUVP32'
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
@ENDDATD EQU   *
BLSUVP32 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RANGEEND EQU   @05
RANGEORG EQU   @06
PDEP     EQU   @04
R1       EQU   @01
RC       EQU   @12
RD       EQU   @13
RF       EQU   @15
RA       EQU   @10
RB       EQU   @11
RE       EQU   @14
R0       EQU   @00
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
PDE      EQU   0
@NM00001 EQU   PDE
PDEIP    EQU   @NM00001
PDEIF    EQU   @NM00001+6
PDEIFP   EQU   PDEIF
PDEI1    EQU   0
PDEI2    EQU   0
PARMLIST EQU   0
PDEPTR   EQU   PARMLIST
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
MSGPTR   EQU   PARMLIST+8
ZZ2PTR   EQU   PARMLIST+4
@NM00003 EQU   PDE+16
@NM00002 EQU   @NM00001+7
PDEIF8   EQU   PDEIF
PDEIF7   EQU   PDEIF
PDEIF6   EQU   PDEIF
PDEIF5   EQU   PDEIF
PDEIF4   EQU   PDEIF
PDEIF3   EQU   PDEIF
PDEIF2   EQU   PDEIF
PDEIL    EQU   @NM00001+4
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLSUVP32,(C'PLS1401',0701,78060)
