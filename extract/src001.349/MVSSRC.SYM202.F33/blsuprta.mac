PRTA     TITLE 'BLSUPRTA--TRANSMIT VAR LEN (ASA) MESSAGE TO PRINTER    *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*                                                                  */
*/*   THIS MODULE WAS WRITTEN FOR @G57LPKB                           */
*/*   THIS MODULE WAS CHANGED FOR @ZA32004                   @ZA32004*/
*/*                                                                  */
*/*------------------------------------------------------------------*/
BLSUPRTA CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'BLSUPRTA  78.117'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @12,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@12                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                          01S0002
         USING @DATD,@11                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @11,8(,@13)                                      01S0002
         LR    @13,@11                                          01S0002
         MVC   @PC00001(8),0(@01)                               01S0002
*   ZZ1PTR=ADDR(ZZ1);               /* ->BLSU SYSTEM VARIABLE        */
         L     ZZ1PTR,ZZ2ZZ1P(,R9)                              01S0135
*   RESPECIFY                                                   01S0136
*    (ZZ1) BASED(ZZ1PTR);           /* BLSU SYSTEM VARIABLE          */
*   FLAG='00'X;                     /* INITIALIZE PROCESSING FLAGS   */
         MVI   FLAG,X'00'                                       01S0137
*   RETC=ZZZFLAGI;                  /* EXPECT NORMAL COMPLETION      */
         SLR   RETC,RETC                                        01S0138
*   IF MSGPL<5 THEN                 /* INVALID MESSAGE LENGTH        */
         L     @14,@PC00001+4                                   01S0139
         CLC   MSGPL(2,@14),@CH00100                            01S0139
         BNL   @RF00139                                         01S0139
*     DO;                           /* TERMINATE PROCESSING          */
*       RETC=ZZZFLAGS;              /* SERIOUS CONDITION             */
         LA    RETC,12                                          01S0141
*       GO TO EXIT;                 /* RETURN                        */
         B     EXIT                                             01S0142
*     END;                          /* TERMINATE PROCESSING          */
*   IF ZZ1FPRNT='1'B THEN           /* DCB OPEN              @ZA32004*/
*                                                               01S0144
@RF00139 TM    ZZ1FPRNT(ZZ1PTR),B'10000000'                     01S0144
         BNO   @RF00144                                         01S0144
*     /***************************************************************/
*     /*                                                             */
*     /* TRANSMIT OUTPUT LINE                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0145
*     DO;                           /* TRANSMIT OUTPUT LINE          */
*                                                               01S0145
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR PAGE OVERFLOW                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0146
*       CTLASA=MSGPT0;              /* CONTROL CHARACTER SUPPLIED    */
         L     @14,@PC00001+4                                   01S0146
         MVC   CTLASA(1),MSGPT0(@14)                            01S0146
*       IF CTLASA='1' THEN          /* PAGE EJECT                    */
         CLI   CTLASA,C'1'                                      01S0147
         BNE   @RF00147                                         01S0147
*         FLAGP='1'B;               /* NEW PAGE DEMANDED             */
*                                                               01S0148
         OI    FLAGP,B'10000000'                                01S0148
*       ELSE                                                    01S0149
*         IF CTLASA='+'&ZZ1PCNT>0 THEN /* OVERPRINT LINE             */
         B     @RC00147                                         01S0149
@RF00147 CLI   CTLASA,C'+'                                      01S0149
         BNE   @RF00149                                         01S0149
         L     @14,ZZ1PCNT(,ZZ1PTR)                             01S0149
         LTR   @14,@14                                          01S0149
         BNP   @RF00149                                         01S0149
*           ZZ1PCNT=ZZ1PCNT-1;      /* ANTICIPATE ZZ1PCNT INCREMENT  */
         BCTR  @14,0                                            01S0150
         ST    @14,ZZ1PCNT(,ZZ1PTR)                             01S0150
*         ELSE                                                  01S0151
*                                                               01S0151
*           /*********************************************************/
*           /*                                                       */
*           /* CONTROL CHARACTER ALONE DOES NOT DETERMINE OVERFLOW.  */
*           /* USE A MORE COMPLEX CRITERION                          */
*           /*                                                       */
*           /*********************************************************/
*                                                               01S0151
*           DO;                     /* NON-TRIVIAL OVERFLOW CRITERION*/
         B     @RC00149                                         01S0151
@RF00149 DS    0H                                               01S0152
*             PAGEUSED=ZZ1PCNT//ZZ1PGSZ;/* LINES USED                */
         L     @00,ZZ1PCNT(,ZZ1PTR)                             01S0152
         SRDA  @00,32                                           01S0152
         D     @00,ZZ1PGSZ(,ZZ1PTR)                             01S0152
         LR    PAGEUSED,@00                                     01S0152
*             IF PAGEUSED=0 THEN    /* NONE LEFT                     */
         LTR   PAGEUSED,PAGEUSED                                01S0153
         BNZ   @RF00153                                         01S0153
*               FLAGP='1'B;         /* PAGE OVERFLOW                 */
*                                                               01S0154
         OI    FLAGP,B'10000000'                                01S0154
*             ELSE                                              01S0155
*               IF CTLASA=' ' THEN  /* SINGLE SPACE                  */
         B     @RC00153                                         01S0155
@RF00153 CLI   CTLASA,C' '                                      01S0155
         BE    @RT00155                                         01S0155
*                 ;                 /* THIS PAGE WILL HOLD MSGP      */
*               ELSE                                            01S0157
*                 IF CTLASA='0' THEN /* DOUBLE SPACE                 */
         CLI   CTLASA,C'0'                                      01S0157
         BNE   @RF00157                                         01S0157
*                   IF PAGEUSED=ZZ1PGSZ-1 THEN                  01S0158
         L     @14,ZZ1PGSZ(,ZZ1PTR)                             01S0158
         BCTR  @14,0                                            01S0158
         CR    PAGEUSED,@14                                     01S0158
         BNE   @RF00158                                         01S0158
*                     FLAGP='1'B;   /* PAGE OVERFLOW                 */
         OI    FLAGP,B'10000000'                                01S0159
*                   ELSE                                        01S0160
*                     ;             /* THIS PAGE WILL HOLD MSGP      */
@RF00158 DS    0H                                               01S0161
*                 ELSE                                          01S0161
*                   IF CTLASA='-' THEN /* TRIPLE SPACE               */
         B     @RC00157                                         01S0161
@RF00157 CLI   CTLASA,C'-'                                      01S0161
         BNE   @RF00161                                         01S0161
*                     IF PAGEUSED>=ZZ1PGSZ-2 THEN               01S0162
         L     @14,ZZ1PGSZ(,ZZ1PTR)                             01S0162
         BCTR  @14,0                                            01S0162
         BCTR  @14,0                                            01S0162
         CR    PAGEUSED,@14                                     01S0162
         BL    @RF00162                                         01S0162
*                       FLAGP='1'B; /* PAGE OVERFLOW                 */
         OI    FLAGP,B'10000000'                                01S0163
*                     ELSE                                      01S0164
*                       ;           /* THIS PAGE WILL HOLD MSGP      */
@RF00162 DS    0H                                               01S0165
*                   ELSE                                        01S0165
*                                                               01S0165
*                     /***********************************************/
*                     /*                                             */
*                     /* EDIT MESSAGE TO CONTAIN A SINGLE-SPACE      */
*                     /* CONTROL RATHER THAN AN UNSUPPORTED CONTROL  */
*                     /*                                             */
*                     /***********************************************/
*                                                               01S0165
*                     DO;           /* UNSUPPORTED CONTROL           */
         B     @RC00161                                         01S0165
@RF00161 DS    0H                                               01S0166
*                       CTLASA=' '; /* SINGLE SPACE CONTROL          */
         MVI   CTLASA,C' '                                      01S0166
*                       RETC=ZZZFLAGE;/* ERROR CONDITION             */
         LA    RETC,8                                           01S0167
*                     END;          /* UNSUPPORTED CONTROL           */
*           END;                    /* NON-TRIVIAL OVERFLOW CRITERION*/
*                                                               01S0169
@RC00161 DS    0H                                               01S0169
@RC00157 DS    0H                                               01S0169
@RT00155 DS    0H                                               01S0169
@RC00153 DS    0H                                               01S0170
*       IF FLAGP='1'B THEN          /* NEW PAGE NEEDED               */
*                                                               01S0170
@RC00149 DS    0H                                               01S0170
@RC00147 TM    FLAGP,B'10000000'                                01S0170
         BNO   @RF00170                                         01S0170
*         /***********************************************************/
*         /*                                                         */
*         /* START NEW PAGE                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0171
*         DO;                       /* START NEW PAGE                */
*           TXTLEN=MIN(ZZ1PLINE,ZZZTXTL+1);/* MAX TITLE LENGTH       */
         L     TXTLEN,ZZ1PLINE(,ZZ1PTR)                         01S0172
         LA    @14,251                                          01S0172
         CR    TXTLEN,@14                                       01S0172
         BNH   *+6
         LR    TXTLEN,@14                                       01S0172
*           TH2P=ADDR(MSGLT)+TXTLEN-LENGTH(TH2B);/* GO          01S0173
*                                      TO END OF THE LINE FOR PAGE NO*/
         LA    TH2P,MSGLT                                       01S0173
         ALR   TH2P,TXTLEN                                      01S0173
         SL    TH2P,@CF01165                                    01S0173
*           MSGLL=TXTLEN+4;         /* LOGICAL RECORD LENGTH         */
         LA    @14,4(,TXTLEN)                                   01S0174
         STH   @14,MSGLL                                        01S0174
*           MSGHB=MSGHS;            /* MSGH STATIC DATA              */
         MVC   MSGHB(32),MSGHS                                  01S0175
*           IF PSCBUSRL<=LENGTH(PSCBUSER)&PSCBUSRL>0 THEN       01S0176
         L     @14,CPPLPSCB(,R9)                                01S0176
         CLI   PSCBUSRL(@14),7                                  01S0176
         BH    @RF00176                                         01S0176
         CLI   PSCBUSRL(@14),0                                  01S0176
         BNH   @RF00176                                         01S0176
*             MSGHBBB=PSCBUSER;     /* USERID                        */
         MVC   MSGHBBB(7),PSCBUSER(@14)                         01S0177
*           ELSE                                                01S0178
*             MSGHBBA='';           /* ELIMINATE USERID IN BATCH     */
         B     @RC00176                                         01S0178
@RF00176 MVI   MSGHBBA,C' '                                     01S0178
         MVC   MSGHBBA+1(8),MSGHBBA                             01S0178
*           MSGLT=MSGHB;            /* FIRST PART OF LINE AND BLANKS */
@RC00176 MVC   @TS00001(32),MSGHB                               01S0179
         MVI   MSGLT+32,C' '                                    01S0179
         MVC   MSGLT+33(218),MSGLT+32                           01S0179
         MVC   MSGLT(32),@TS00001                               01S0179
*           TH2B=TH2S;              /* INITIALIZE END OF LINE        */
         MVC   TH2B(41,TH2P),TH2S                               01S0180
*           PAGENUM=(ZZ1PCNT+2*ZZ1PGSZ-1)/ZZ1PGSZ;/* NEW PAGE NUMBER */
*                                                               01S0181
         L     @14,ZZ1PGSZ(,ZZ1PTR)                             01S0181
         LR    PAGENUM,@14                                      01S0181
         ALR   PAGENUM,PAGENUM                                  01S0181
         AL    PAGENUM,ZZ1PCNT(,ZZ1PTR)                         01S0181
         BCTR  PAGENUM,0                                        01S0181
         LR    @00,PAGENUM                                      01S0181
         SRDA  @00,32                                           01S0181
         DR    @00,@14                                          01S0181
         LR    PAGENUM,@01                                      01S0181
*            DO;/*BLRCNVUC(PAGENUM) FROM(UNSIGNED FIXED BINARY)TO(CHARA
*TER)PATTERN('402020202120'X)SET(TH2BAB)REMARK(PAGE NUMBER)OPTIONS(PATT
*RN IN PLACE)*/                                                 01S0182
*              /*PAGE NUMBER*/                                  01S0183
*              CVD(PAGENUM,PACKED);/*UNSIGNED BINARY=>PACKED DECIMAL*/
         CVD   PAGENUM,PACKED                                   01S0183
*              ED(TH2BAB,PACKED(41:64));/*PACKED DECIMAL=>EBCDIC*/
         ED    TH2BAB(6,TH2P),PACKED+5                          01S0184
*            END;/*BLRCNVUC(PAGENUM) FROM(UNSIGNED FIXED BINARY)TO(CHAR
*CTER)PATTERN('402020202120'X)SET(TH2BAB)REMARK(PAGE NUMBER)OPTIONS(PAT
*ERN IN PLACE)*/                                                01S0185
*           CALL BLSDTIME(ZZ2,TH2BCB,TH2BDB);/* OBTAIN TIME, DATE    */
         ST    R9,@AL00001                                      01S0186
         LA    @14,TH2BCB(,TH2P)                                01S0186
         ST    @14,@AL00001+4                                   01S0186
         LA    @14,TH2BDB(,TH2P)                                01S0186
         ST    @14,@AL00001+8                                   01S0186
         L     @15,@CV01144                                     01S0186
         LA    @01,@AL00001                                     01S0186
         BALR  @14,@15                                          01S0186
*           DCBLRECL=MSGLL;         /* RECORD LENGTH                 */
         L     @14,ZZ1PDCBP(,ZZ1PTR)                            01S0187
         LH    @10,MSGLL                                        01S0187
         N     @10,@CF01182                                     01S0187
         STH   @10,DCBLRECL+72(,@14)                            01S0187
*           RESPECIFY                                           01S0188
*            (R0,                   /* ->MSGL                        */
*             R1) RESTRICTED;       /* ->DCB                         */
*           R0=ADDR(MSGL);          /* ->MSGL                        */
         LA    R0,MSGL                                          01S0189
*           R1=ADDR(IHADCB);        /* ->DCB                         */
         LR    R1,@14                                           01S0190
*           GENERATE CODE(PUT (1),(0));                         01S0191
         PUT (1),(0)
*           RESPECIFY                                           01S0192
*            (R0,                   /* ->MSGL                        */
*             R1) UNRESTRICTED;     /* ->DCB                         */
*           MSGLT0='+';             /* UNDERSCORE HEADER LINE        */
         MVI   MSGLT0,C'+'                                      01S0193
*           MSGLT(2:2)='_';         /* INITIAL UNDERSCORE            */
         MVI   MSGLT+1,C'_'                                     01S0194
*           MVC(MSGLT(3:LENGTH(MSGLT)),MSGLT(2:LENGTH(MSGLT)-1));
         MVC   MSGLT+2(249),MSGLT+1                             01S0195
*           RESPECIFY                                           01S0196
*            (R0,                   /* ->MSGL                        */
*             R1) RESTRICTED;       /* ->DCB                         */
*           R0=ADDR(MSGL);          /* ->MSGL                        */
         LA    R0,MSGL                                          01S0197
*           R1=ADDR(IHADCB);        /* ->DCB                         */
         L     R1,ZZ1PDCBP(,ZZ1PTR)                             01S0198
*           GENERATE CODE(PUT (1),(0));                         01S0199
         PUT (1),(0)
*           RESPECIFY                                           01S0200
*            (R0,                   /* ->MSGL                        */
*             R1) UNRESTRICTED;     /* ->DCB                         */
*                                                               01S0200
*           ZZ1PCNT=(PAGENUM-1)*ZZ1PGSZ+1;/* NEW LINE COUNT          */
         LR    @01,PAGENUM                                      01S0201
         BCTR  @01,0                                            01S0201
         M     @00,ZZ1PGSZ(,ZZ1PTR)                             01S0201
         AL    @01,@CF00048                                     01S0201
         ST    @01,ZZ1PCNT(,ZZ1PTR)                             01S0201
*           IF ZZ2TTLP^=ZZZNULL THEN/* SUB-TITLE NEEDED              */
*                                                               01S0202
         L     @14,ZZ2TTLP(,R9)                                 01S0202
         CL    @14,@CF00068                                     01S0202
         BE    @RF00202                                         01S0202
*             /*******************************************************/
*             /*                                                     */
*             /* SUPPLY SUB-TITLE                                    */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0203
*             CALL BLSUPRTN(ZZ2,MSGT);/* OUTPUT SUB-TITLE            */
*                                                               01S0203
         ST    R9,@AL00001                                      01S0203
         ST    @14,@AL00001+4                                   01S0203
         L     @10,ZZ2BVTP(,R9)                                 01S0203
         L     @15,BVTPRTNP(,@10)                               01S0203
         LA    @01,@AL00001                                     01S0203
         BALR  @14,@15                                          01S0203
*           ELSE                                                01S0204
*                                                               01S0204
*             /*******************************************************/
*             /*                                                     */
*             /* NO SUB-TITLE, SO PROVIDE BLANK LINE                 */
*             /*                                                     */
*             /*******************************************************/
*                                                               01S0204
*             DO;                   /* PROVIDE BLANK LINE            */
         B     @RC00202                                         01S0204
@RF00202 DS    0H                                               01S0205
*               MSGLL=5;            /* MESSAGE LENGTH                */
         MVC   MSGLL(2),@CH00100                                01S0205
*               MSGLO=0;            /* OFFSET                        */
         SLR   @14,@14                                          01S0206
         STH   @14,MSGLO                                        01S0206
*               MSGLT0=' ';         /* SINGLE SPACE CONTROL CHARACTER*/
         MVI   MSGLT0,C' '                                      01S0207
*               CALL BLSUPRTA(ZZ2,MSGL);/* GENERATE BLANK LINE       */
         ST    R9,@AL00001                                      01S0208
         LA    @14,MSGL                                         01S0208
         ST    @14,@AL00001+4                                   01S0208
         LA    @01,@AL00001                                     01S0208
         L     @15,@CA00028                                     01S0208
         BALR  @14,@15                                          01S0208
*               RETC=MAX(RETC,RF);  /* RETURN CODE                   */
         CR    RETC,RF                                          01S0209
         BNL   *+6
         LR    RETC,RF                                          01S0209
*             END;                  /* PROVIDE BLANK LINE            */
*           IF MSGPL=5&CTLASA='1' THEN /* EXPLICIT PAGE REQUEST      */
@RC00202 L     @14,@PC00001+4                                   01S0211
         CLC   MSGPL(2,@14),@CH00100                            01S0211
         BNE   @RF00211                                         01S0211
         CLI   CTLASA,C'1'                                      01S0211
         BE    @RT00211                                         01S0211
*             GO TO EXIT;           /* EVERYTHING DONE               */
*           ZZ1PCNT=ZZ1PCNT+1;      /* ACCOUNT FOR MSG LINE          */
@RF00211 LA    @14,1                                            01S0213
         AL    @14,ZZ1PCNT(,ZZ1PTR)                             01S0213
         ST    @14,ZZ1PCNT(,ZZ1PTR)                             01S0213
*           CTLASA=' ';             /* SUPPLY SINGLE SPACE CONTROL   */
         MVI   CTLASA,C' '                                      01S0214
*         END;                      /* START NEW PAGE                */
*                                                               01S0215
*       ELSE                                                    01S0216
*         IF CTLASA='-' THEN                                    01S0216
         B     @RC00170                                         01S0216
@RF00170 CLI   CTLASA,C'-'                                      01S0216
         BNE   @RF00216                                         01S0216
*           ZZ1PCNT=ZZ1PCNT+3;      /* NEW LINE COUNT                */
         LA    @14,3                                            01S0217
         AL    @14,ZZ1PCNT(,ZZ1PTR)                             01S0217
         ST    @14,ZZ1PCNT(,ZZ1PTR)                             01S0217
*         ELSE                                                  01S0218
*           IF CTLASA='0' THEN                                  01S0218
         B     @RC00216                                         01S0218
@RF00216 CLI   CTLASA,C'0'                                      01S0218
         BNE   @RF00218                                         01S0218
*             ZZ1PCNT=ZZ1PCNT+2;    /* NEW LINE COUNT                */
         LA    @14,2                                            01S0219
         AL    @14,ZZ1PCNT(,ZZ1PTR)                             01S0219
         ST    @14,ZZ1PCNT(,ZZ1PTR)                             01S0219
*           ELSE                                                01S0220
*             ZZ1PCNT=ZZ1PCNT+1;    /* NEW LINE COUNT                */
*                                                               01S0220
         B     @RC00218                                         01S0220
@RF00218 LA    @14,1                                            01S0220
         AL    @14,ZZ1PCNT(,ZZ1PTR)                             01S0220
         ST    @14,ZZ1PCNT(,ZZ1PTR)                             01S0220
*       MLENGTH=MIN(LENGTH(MSGL),MSGPL,ZZ1PLINE+4);/*ALLOWABLE LEN   */
@RC00218 DS    0H                                               01S0221
@RC00216 DS    0H                                               01S0221
@RC00170 L     @14,@PC00001+4                                   01S0221
         LH    @14,MSGPL(,@14)                                  01S0221
         N     @14,@CF01182                                     01S0221
         LA    MLENGTH,255                                      01S0221
         CR    MLENGTH,@14                                      01S0221
         BNH   *+6
         LR    MLENGTH,@14                                      01S0221
         LA    @10,4                                            01S0221
         L     @08,ZZ1PLINE(,ZZ1PTR)                            01S0221
         ALR   @08,@10                                          01S0221
         CR    MLENGTH,@08                                      01S0221
         BNH   *+6
         LR    MLENGTH,@08                                      01S0221
*       IF MLENGTH<MSGPL THEN       /* MESSAGE WILL BE TRUNCATED     */
         CR    MLENGTH,@14                                      01S0222
         BNL   @RF00222                                         01S0222
*         RETC=MAX(RETC,ZZZFLAGW);  /* WARNING CONDITION             */
         CR    RETC,@10                                         01S0223
         BNL   *+6
         LR    RETC,@10                                         01S0223
*       MSGLL=MLENGTH;              /* MESSAGE LENGTH                */
@RF00222 STH   MLENGTH,MSGLL                                    01S0224
*       MSGLO=0;                    /* NO OFFSET                     */
         SLR   @14,@14                                          01S0225
         STH   @14,MSGLO                                        01S0225
*       MSGLT0=CTLASA;              /* ASA CONTROL CHARACTER         */
         MVC   MSGLT0(1),CTLASA                                 01S0226
*       IF MLENGTH>5 THEN           /* TEXT EXISTS                   */
         C     MLENGTH,@CF00100                                 01S0227
         BNH   @RF00227                                         01S0227
*         DO;                       /* PROCESS TEXT                  */
*           MSGLT1(1:MLENGTH-5)=MSGPT1(1:MLENGTH-5);/* TEXT          */
         LR    @14,MLENGTH                                      01S0229
         SL    @14,@CF00163                                     01S0229
         L     @10,@PC00001+4                                   01S0229
         EX    @14,@SM01183                                     01S0229
*           TR(MSGLT1,ZZ1TREBC);    /* SUPPRESS NON-GRAPHICS         */
         TR    MSGLT1(250),ZZ1TREBC(ZZ1PTR)                     01S0230
*         END;                      /* PROCESS TEXT                  */
*       DCBLRECL=MLENGTH;           /* LENGTH OF LINE                */
@RF00227 L     @14,ZZ1PDCBP(,ZZ1PTR)                            01S0232
         STH   MLENGTH,DCBLRECL+72(,@14)                        01S0232
*       RESPECIFY                                               01S0233
*        (R0,                       /* ->MSGP                        */
*         R1) RESTRICTED;           /* ->DCB                         */
*       R0=ADDR(MSGL);              /* ->EDITED MESSAGE              */
         LA    R0,MSGL                                          01S0234
*       R1=ADDR(IHADCB);            /* ->DCB                         */
         LR    R1,@14                                           01S0235
*       GENERATE CODE(PUT   (1),(0));                           01S0236
         PUT   (1),(0)
*       RESPECIFY                                               01S0237
*        (R0,                       /* ->MSGP                        */
*         R1) UNRESTRICTED;         /* ->DCB                         */
*     END;                          /* TRANSMIT OUTPUT LINE          */
*                                                               01S0238
*   ELSE                            /* ENVIRONMENTAL ERROR           */
*     RETC=ZZZFLAGT;                /* TERMINATING CONDITION         */
*                                                               01S0239
         B     @RC00144                                         01S0239
@RF00144 LA    RETC,16                                          01S0239
*EXIT:                              /* STANDARD EXIT                 */
*   RETURN CODE(RETC);              /* RETURN CODE                   */
*                                                               01S0240
@RC00144 DS    0H                                               01S0240
EXIT     L     @13,4(,@13)                                      01S0240
         L     @00,@SIZDATD                                     01S0240
         LR    @01,@11                                          01S0240
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@06                                          01S0240
         L     @14,12(,@13)                                     01S0240
         LM    @00,@12,20(@13)                                  01S0240
         BR    @14                                              01S0240
*/*BLSUPEND--MVS IPCS MODULE*/                                  01S0241
*                                                               01S0241
*   DECLARE/*DATA FOR AHB MACROS*/                              01S0241
*     PACKED BIT(64) BOUNDARY(DWORD);/*DATA CONVERSION WORK AREA*/
*                                                               01S0241
*                                                               01S0241
*    DECLARE /* COMMON VARIABLES */                             01S0242
*      I256C CHAR(256) BASED,                                   01S0242
*      I031F FIXED(31) BASED,                                   01S0242
*      I031P PTR(31)   BASED,                                   01S0242
*      I015F FIXED(15) BASED,                                   01S0242
*      I015P PTR(15)   BASED,                                   01S0242
*      I008P PTR(8)    BASED,                                   01S0242
*      I001C CHAR(1)   BASED;                                   01S0242
*    GENERATE NODEFS NOREFS DATA;                               01S0243
*   END BLSUPRTA /*BLRPEND(BLSUPRTA) */                         01S0244
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                        *
*/*%INCLUDE SYSLIB  (BLRFULL )                                        *
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        *
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        *
*/*%INCLUDE SYSLIB  (IKJECT  )                                        *
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        *
*/*%INCLUDE SYSLIB  (BLSUSERV)                                        *
*/*%INCLUDE SYSLIB  (BLRSERV )                                        *
*/*%INCLUDE SYSLIB  (BLRSERVD)                                        *
*/*%INCLUDE SYSLIB  (BLSDSERV)                                        *
*/*%INCLUDE SYSLIB  (IHADCBDF)                                        *
*/*%INCLUDE SYSLIB  (IHADCB  )                                        *
*;                                                              01S0244
@EL00001 L     @13,4(,@13)                                      01S0244
@EF00001 L     @00,@SIZDATD                                     01S0244
         LR    @01,@11                                          01S0244
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0244
         BR    @14                                              01S0244
@DATA    DS    0H
@SM01183 MVC   MSGLT1(0),MSGPT1(@10)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@AL00001 DS    3A
BLSUPRTA CSECT
         DS    0F
@CF00048 DC    F'1'
@CF00100 DC    F'5'
@CH00100 EQU   @CF00100+2
@CF00163 DC    F'6'
@CF01165 DC    F'41'
@CF00068 DC    XL4'80000000'
@CF01182 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
@TS00001 DS    CL32
MSGL     DS    CL255
         ORG   MSGL
MSGLL    DS    FL2
MSGLO    DS    FL2
MSGLT    DS    CL251
         ORG   MSGLT
MSGLT0   DS    CL1
MSGLT1   DS    CL250
         ORG   MSGL+255
CTLASA   DS    CL1
         ORG   CTLASA
CTLASA0  DS    CL1
CTLASA1  DS    0C
         ORG   CTLASA+1
FLAG     DS    BL1
         ORG   FLAG
FLAGP    DS    BL1
@NM00097 EQU   FLAG+0
         ORG   FLAG+1
         DS    CL7
PACKED   DS    BL8
BLSUPRTA CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA00028 DC    A(BLSUPRTA)
@CV01144 DC    V(BLSDTIME)
         DS    0D
MSGHS    DS    CL32
         ORG   MSGHS
MSGHS$   DC    CL1'1'
MSGHSA   DC    CL15'IPCS PRINT LOG '
MSGHSB   DS    CL16
         ORG   MSGHSB
MSGHSBA  DC    CL9'FOR USER '
MSGHSBB  DC    CL7' '
         ORG   MSGHS+32
TH2S     DS    CL41
         ORG   TH2S
TH2SA    DS    CL10
         ORG   TH2SA
TH2SAA   DC    CL4'PAGE'
TH2SAB   DC    X'402020202120'
         ORG   TH2S+10
TH2SB    DC    CL4' '
TH2SC    DS    CL13
         ORG   TH2SC
TH2SCA   DC    CL5'TIME '
TH2SCB   DC    CL8' '
         ORG   TH2S+27
TH2SD    DS    CL14
         ORG   TH2SD
TH2SDA   DC    CL6' DATE '
TH2SDB   DC    CL8' '
         ORG   TH2S+41
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSUPRTA CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSUPRTA+19)/20+7)/8)CL8'BLSUPRTA'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         DS    D                    BY-PASS ED MICRO-CODE BUG
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSUPRTA CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETC     EQU   @06
PAGEUSED EQU   @02
PAGENUM  EQU   @07
MLENGTH  EQU   @02
TXTLEN   EQU   @03
ZZ1PTR   EQU   @05
TH2P     EQU   @02
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1PDCBP EQU   ZZ1+20
ZZ1PCNT  EQU   ZZ1+72
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PLINE EQU   ZZ1+80
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1FPRNT EQU   ZZ1F+2
ZZ1TREBC EQU   ZZ1+824
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00015 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2ALOCP EQU   ZZ2+1056
ZZ2MSGSP EQU   ZZ2+1060
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2MSG0P EQU   ZZ2+1076
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ENQ0P EQU   ZZ2+1092
ZZ2ADSDP EQU   ZZ2+1096
ZZ2APDRP EQU   ZZ2+1100
ZZ2FDSDP EQU   ZZ2+1104
ZZ2FPDRP EQU   ZZ2+1108
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2DVTP  EQU   ZZ2+1276
ZZ2BVTP  EQU   ZZ2+1280
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2TTLP  EQU   ZZ2+1316
ZZ2F     EQU   ZZ2+2824
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBUSER EQU   PSCB
PSCBUSRL EQU   PSCB+7
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUPRTN EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
DVT      EQU   0
DVTDEQPP EQU   DVT+8
DVTENQPP EQU   DVT+12
DVTAUTHP EQU   DVT+20
DVTLPCLP EQU   DVT+24
DVTBP00P EQU   DVT+28
DVTCN00P EQU   DVT+32
DVTDF00P EQU   DVT+36
DVTDS00P EQU   DVT+44
DVTFL00P EQU   DVT+48
DVTFP00P EQU   DVT+52
DVTGD00P EQU   DVT+56
DVTGG00P EQU   DVT+60
DVTGP00P EQU   DVT+64
DVTND00P EQU   DVT+68
DVTND01P EQU   DVT+72
DVTOD00P EQU   DVT+76
DVTPS00P EQU   DVT+80
DVTSD00P EQU   DVT+84
DVTSL00P EQU   DVT+88
DVTTL00P EQU   DVT+92
DVTUD00P EQU   DVT+96
DVTUP00P EQU   DVT+100
DVTLP00P EQU   DVT+104
DVTLALLP EQU   DVT+108
DVTLPFMP EQU   DVT+112
DVTCLOSP EQU   DVT+116
DVTOPENP EQU   DVT+120
DVTPERAP EQU   DVT+124
DVTDALLP EQU   DVT+128
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
DCBLRECL EQU   IHADCS40+10
DCBCNTRL EQU   IHADCS40+12
DCBEROPT EQU   DCBCNTRL
MSGT     EQU   0
MSGTT    EQU   MSGT+8
TH2B     EQU   0
TH2BA    EQU   TH2B
TH2BAB   EQU   TH2BA+4
TH2BC    EQU   TH2B+14
TH2BCB   EQU   TH2BC+5
TH2BD    EQU   TH2B+27
TH2BDB   EQU   TH2BD+6
BLSCALOC EQU   0
BLSDADSD EQU   0
BLSDAPDR EQU   0
BLSDDEQP EQU   0
BLSDENQP EQU   0
BLSDENQ0 EQU   0
BLSDFDSD EQU   0
BLSDFPDR EQU   0
BLSDMSGS EQU   0
BLSDMSG0 EQU   0
BLSEAUTH EQU   0
BLSELPCL EQU   0
BLSELPFM EQU   0
BLSFBP00 EQU   0
BLSFCLOS EQU   0
BLSFCN00 EQU   0
BLSFDALL EQU   0
BLSFDF00 EQU   0
BLSFDS00 EQU   0
BLSFFL00 EQU   0
BLSFFP00 EQU   0
BLSFGD00 EQU   0
BLSFGG00 EQU   0
BLSFGP00 EQU   0
BLSFLALL EQU   0
BLSFLP00 EQU   0
BLSFND00 EQU   0
BLSFND01 EQU   0
BLSFOD00 EQU   0
BLSFOPEN EQU   0
BLSFPERA EQU   0
BLSFPS00 EQU   0
BLSFSD00 EQU   0
BLSFSL00 EQU   0
BLSFTL00 EQU   0
BLSFUD00 EQU   0
BLSFUP00 EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTT EQU   0
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PZ2      EQU   0
MSGP     EQU   0
MSGPL    EQU   MSGP
MSGPT    EQU   MSGP+4
MSGPT0   EQU   MSGPT
MSGPT1   EQU   MSGPT+1
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
MSGHB    EQU   MSGLT
MSGHBB   EQU   MSGHB+16
MSGHBBA  EQU   MSGHBB
MSGHBBB  EQU   MSGHBB+9
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
MSGHBA   EQU   MSGHB+1
MSGHB$   EQU   MSGHB
CPPLCBUF EQU   CPPL
MSGPO    EQU   MSGP+2
TH2BDA   EQU   TH2BD
TH2BCA   EQU   TH2BC
TH2BB    EQU   TH2B+10
TH2BAA   EQU   TH2BA
MSGTT1   EQU   MSGTT+1
MSGTT0   EQU   MSGTT
@NM00096 EQU   MSGT+6
MSGTL    EQU   MSGT+4
MSGTXP   EQU   MSGT
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00095 EQU   IHADCS40+16
DCBCNTRA EQU   DCBCNTRL+1
@NM00094 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00093 EQU   IHADCS40+9
@NM00092 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00091 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
@NM00090 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00089 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00088 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00087 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00086 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00085 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00084 EQU   DCBPUT
DCBDEBA  EQU   DCBDEBAD+1
@NM00083 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00082 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00081 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00080 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00079 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00078 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00077 EQU   DCBDSRG1
@NM00076 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00075 EQU   IHADCS01+5
@NM00074 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00073 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00072 EQU   IHADCB
DVT99999 EQU   DVT+256
DVT0064P EQU   DVT+252
DVT0063P EQU   DVT+248
DVT0062P EQU   DVT+244
DVT0061P EQU   DVT+240
DVT0060P EQU   DVT+236
DVT0059P EQU   DVT+232
DVT0058P EQU   DVT+228
DVT0057P EQU   DVT+224
DVT0056P EQU   DVT+220
DVT0055P EQU   DVT+216
DVT0054P EQU   DVT+212
DVT0053P EQU   DVT+208
DVT0052P EQU   DVT+204
DVT0051P EQU   DVT+200
DVT0050P EQU   DVT+196
DVT0049P EQU   DVT+192
DVT0048P EQU   DVT+188
DVT0047P EQU   DVT+184
DVT0046P EQU   DVT+180
DVT0045P EQU   DVT+176
DVT0044P EQU   DVT+172
DVT0043P EQU   DVT+168
DVT0042P EQU   DVT+164
DVT0041P EQU   DVT+160
DVT0040P EQU   DVT+156
DVT0039P EQU   DVT+152
DVT0038P EQU   DVT+148
DVT0037P EQU   DVT+144
DVT0036P EQU   DVT+140
DVT0035P EQU   DVT+136
DVT0034P EQU   DVT+132
DVT0011P EQU   DVT+40
DVT0005P EQU   DVT+16
DVT0002P EQU   DVT+4
DVT0001P EQU   DVT
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVTPRTAP EQU   BVT+32
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00071 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00070 EQU   UPT
@NM00069 EQU   ECT+52
@NM00068 EQU   ECT+48
@NM00067 EQU   ECT+44
@NM00066 EQU   ECTSWS2+1
@NM00065 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00064 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00063 EQU   PSCB+36
@NM00062 EQU   PSCB+32
@NM00061 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00060 EQU   PSCBATR1
@NM00059 EQU   PSCBATR1
@NM00058 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00057 EQU   ZZ2+7288
@NM00056 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00055 EQU   ZZ2ES
@NM00054 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00053 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00052 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00051 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00050 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00049 EQU   ZZ2F
ZZ2F3270 EQU   ZZ2F
@NM00048 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00047 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00046 EQU   ZZ2+1504
@NM00045 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2RVTP  EQU   ZZ2+1284
@NM00044 EQU   ZZ2+1272
@NM00043 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00042 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00041 EQU   ZZ2+1112
@NM00040 EQU   ZZ2+1080
ZZ2FT25P EQU   ZZ2+1072
@NM00039 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00038 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00037 EQU   ZZ2A+224
@NM00036 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00035 EQU   ZZ2AQD+56
@NM00034 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00033 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00032 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00031 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00030 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00029 EQU   ZZ2A+24
@NM00028 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00027 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00026 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00025 EQU   ZZ2AF+2
@NM00024 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00023 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00022 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00021 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00020 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00019 EQU   ZZ2+264
@NM00018 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00017 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00016 EQU   @NM00015
ZZ2AMD2  EQU   @NM00015
ZZ2AMD1  EQU   @NM00015
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00014 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00013 EQU   ZZ1+1080
ZZ1TRHEX EQU   ZZ1+568
@NM00012 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00011 EQU   ZZ1F+3
@NM00010 EQU   ZZ1F+2
@NM00009 EQU   ZZ1F+1
ZZ1FTCAM EQU   ZZ1F+1
ZZ1FACCM EQU   ZZ1F+1
@NM00008 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00007 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00006 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00005 EQU   ZZ1+84
@NM00004 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00003 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00002 EQU   ZZ1+24
ZZ1BLRBL EQU   ZZ1+16
@NM00001 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00211 EQU   EXIT
@ENDDATA EQU   *
         END   BLSUPRTA,(C'PLS1903',0701,78117)
