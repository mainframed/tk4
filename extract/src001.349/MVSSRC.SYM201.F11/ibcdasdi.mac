 PRINT OFF
  REPRO

  REPRO

  REPRO
0≈Û
  REPRO
Ü 0‰7ç}
  REPRO

  REPRO
’ 1ß˚’ 0 ˚
  PRINT ON
ENTER    START 0
         ORG   ENTER
 TITLE 'DASDI-IBCDASDI PACK INITIALIZATION'
*                                                                     *
*STATUS -CHANGE LEVEL 7.88 -- REL VS 2-3 -- 78/06/02                  *
*                                                                     *
*FUNCTION/OPERATION- EITHER INITIALIZES A DIRECT ACCESS VOLUME TO     *
*   CONFORM TO OS/360 SPECIFICATIONS OR OBTAINS ALTERNATE TRACKS      *
*   FOR SPECIFIED DEFECTIVE TRACKS ON A PREVIOUSLY INITIALIZED        *
*   VOLUME.                                                           *
*                                                                     *
*   INITIALIZING A DIRECT ACCESS VOLUME CONSISTS OF THE FOLLOWING-    *
*   DETECTING DEFECTIVE TRACKS, ASSIGNING ALTERNATES FOR DEFECTIVE    *
*   PRIMARY TRACKS ON DISK STORAGE, WRITING THE STANDARD HOME ADD-    *
*   RESS AND RECORD ZERO ON EACH TRACK, FORMATING OF TRACK ZERO,      *
*   WRITING A STANDARD VOLUME TABLE OF CONTENTS, AND OPTIONALLY       *
*   WRITING AN IPL PROGRAM.                                           *
*                                                                     *
*   OBTAINING AN ALTERNATE TRACK FOR A SPECIFIED DEFECTIVE TRACK ON   *
*   DISK STORAGE CONSISTS OF THE FOLLOWING-                           *
*   SELECTING THE FIRST AVAILABLE ALTERNATE AS SPECIFIED IN THE VTOC, *
*   CHAIN THE ALTERNATE TRACK TO THE DEFECTIVE PRIMARY AND THE        *
*   DEFECTIVE PRIMARY TO THE ALTERNATE, AND UPDATE THE VTOC TO        *
*   INDICATE THE NUMBER OF ALTERNATE TRACKS STILL AVAILABLE.          *
*                                                                     *
*ENTRY POINTS- CONTROL IS GIVEN TO LOCATION -START- BY THE ABSOLUTE   *
*   LOADER, WHICH CONSTITUTES THE FIRST PART OF THE PROGRAM. CONTROL  *
*   CARDS ARE READ AND ANALYSED TO DETERMINE IF THE INITIALIZATION    *
*   OR THE GET-AN-ALTERNATE TRACK FUNCTION IS TO BE EXECUTED. THE     *
*   INITIALIZATION ROUTINE IS ENTERED AT -VOLCHK- IF THE VOLUME       *
*   LABEL IS TO BE CHECKED, OTHERWISE AT LOCATION -GEN5E-. THE        *
*   GETALT FUNCTION IS ENTERED AT LOCATION -GETALTY2-.                *
*                                                                     *
*INPUT- CONTROL STATEMENTS,AVAILABLE DIRECT ACCESS VOLUME.            *
*                                                                     *
*OUTPUT- THE DIRECT ACCESS VOLUME WILL EITHER BE INITIALIZED OR HAVE  *
*   ALTERNATE TRACKS ASSIGNED AS DESCRIBED UNDER THE ABOVE HEADING,   *
*   FUNCTION/OPERATION. APPROPIATE MESSAGES WILL BE GIVEN TO THE      *
*   OPERATOR DESCRIBING THE STATUS OF THE DIRECT ACCESS VOLUME.       *
*                                                                     *
*EXITS-NORMAL- SUCCESSFUL COMPLETION OF DASDI RESULTS IN A WAIT PSW   *
*   WITH E'S IN THE ADDRESS FIELD FOR DISPLAY IN THE CONSOLE LIGHTS.  *
*   AN END OF JOB MESSAGE IS ALSO GIVEN ON THE MESSAGE DEVICE.        *
*                                                                     *
*EXITS-ERROR- A WAIT PSW IS LOADED WITH E'S IN THE ADDRESS FIELD      *
*   FOR DISPLAY IN THE CONSOLE LIGHTS. ERROR STOPS, WHENEVER          *
*   POSSIBLE, ARE PRECEDED BY A MESSAGE WHICH DEFINES THE ERROR.      *
*   THE MESSAGE IS GIVEN ON THE MESSAGE DEVICE OR OPERATORS CONSOLE.  *
*   MACHINE CHECK INTERRUPTS RESULT IN THE LOADING OF A PSW IN THE    *
*   WAIT STATE WITH E2 IN THE ADDRESS FIELD FOR DISPLAY IN THE        *
*   CONSOLE LIGHTS. CONSTANTS ARE SET UP FOR THE RUNNING OF THE       *
*   SEREP PROGRAM AFTER DASDI HALTS ON MACHINE CHECK OR I/O DEVICE    *
*   MALFUNCTION.                                                      *
*                                                                     *
*EXTERNAL ROUTINES- DASDI REQUIRES SOME INFORMATION FROM THE          *
*   OPERATOR AS TO THE LOCATION OF THE TYPEWRITER CONSOLE (IF ANY),   *
*   AND THE INPUT SOURCE FOR THE CONTROL STATEMENTS. ON INITIAL       *
*   LOADING OF DASDI, THE PROGRAM HALTS IN A WAIT STATE WITH F'S      *
*   DISPLAYED IN THE CONSOLE LIGHTS. IF A CONSOLE TYPEWRITER IS       *
*   AVAILABLE, THE OPERATOR DEPRESSES THE REQUEST KEY AND THIS        *
*   IDENTIFIES THE LOCATION OF THE TYPEWRITER TO DASDI AND A MESSAGE  *
*   IS GIVEN ASKING THE OPERATOR TO DEFINE THE INPUT DEVICE FOR       *
*   CONTROL STATEMENTS. THE OPERATOR THEN TYPES IN LOWER OR UPPER     *
*   CASE FOR EXAMPLE-                                                 *
*        INPUT=1402 00C                                               *
*   WHICH TELLS DASDI TO GO TO A 1402 READER ON CUU 00C FOR CONTROL   *
*   CARDS.                                                            *
*   IF A CONSOLE TYPEWRITER IS NOT AVAILABLE, THE OPERATOR ENTERS     *
*   INTO HEX LOCATIONS 0110 AND 0111, ONE OF THE FOLLOWING CODES-     *
*        XCUU   WHERE X=0 FOR A 2540 READER, 1 FOR A 1402/1442        *
*   READER, AND 2 FOR A 2400 NINE TRACK TAPE. CUU IS THE CHANNEL/     *
*   UNIT ADDRESS OF THE INPUT DEVICE.                                 *
*                                                                     *
*TABLES/WORK AREAS                                                    *
*   -OPRTAB- A LIST OF VALID COMMAND WORDS USED ON CONTROL CARDS.     *
*   -KEYTAB- A LIST OF VALID KEY WORDS USED ON CONTROL CARDS.         *
*   -SYINTAB-A LIST OF VALID INPUT DEVICES FOR CONTROL CARDS.         *
*   -DEVTAB- A LIST OF VALID DEVICES HANDLED BY DASDI.                *
*   -PROCBUFF- A LIST OF CONSTANTS FOR SPECIFIC DEVICE TYPES.         *
*   -CONVTAB-A TABLE USED TO CONVERT CONSOLE INPUT TO UPPER CASE.     *
*   -IOTAB-  A TABLE USED TO CONVERT HEX TO EBCDIC GRAPHIC.           *
*   -ALTTT-  A TABLE USED TO CONVERT EBCDIC GRAPHIC TO HEX.           *
*   -TAB13-  A BUFFER OF HEX 00'S FOR DISK AND DRUM SURFACE ANALYSIS. *
*   -TAB5E-  A BUFFER OF HEX E5'S FOR DATA CELL SURFACE ANALYSIS.     *
*   -TAB5E-  A BUFFER OF HEX 55'S FOR DISK AND DRUM SURFACE ANALYSIS. *
*                                                                     *
*ATTRIBUTES- PRIVILEGED, DISABLED, NON-RELOCATABLE, SERIALLY-REUSABLE *
*   EXCEPT FOR 2321 JOBS FOLLOWING NON-2321 JOBS.                     *
*   CHARACTER DEPENDENT TABLES AT -CONVTAB- AND -ALTTT-.              *
*                                                                     *
         EJECT
***********************************************************************
*                FIXES IBCDASDI                                       *
*                LATEST FIRST                                         *
***********************************************************************
*
*C 403900,404000,436800,436900                                 @ZA32972
*D 392494,392584,392644-392860                                 @ZA27317
*C 392314-392349,392377,392447,392507                          @ZA27317
*A 392356,392384,392453-392501,392525,392528,392584,392587     @ZA27317
*
*C 392516,392522                                               @ZA27277
*
*    APARS ZA03390 THRU ZA03395 ARE FOR 3340 RECLAIM TRACK PROBLEMS
*A436120-436140                                                @ZA03388
*C436200                                                       @ZA03388
*C333780                                                       @ZA03374
*A022720,235589-235600,235614,235660-235697,235736-235740      @ZA03390
*A235753-235792,400044,400084                                  @ZA03390
*C392450                                                       @ZA03357
*A439408                                                       @ZA03391
*A392385                                                       @ZA03393
*A382420,388620,391820,392389-392458,392467,400020-400040,     @ZA03395
*A400060-400080,404920,418720,428420,436520,438320             @ZA03395
*C046800                                                       @ZM33362
*D392474-392530                                                @ZA03395
*A440120,522920                                                @ZA03395
*C392450                                                       @ZM00000
*C046800                                                       @ZM33362
*C235656,392422,392442,481284                                  @ZM33348
*C438940                                                       @ZA01663
*A438924                                                       @ZA01663
*C438940                                                       @ZA01663
*A333601,333602                                                @ZA01227
*C394600                                                       @ZA01227
*309600-309600                                                   A48568
*1355,001000,018300,019200-019400,066800,074000                    7974
*1355,142900                                                       7679
*2095566600                                                        1095
*2095635200                                                        1095
*2095639400                                                        1095
* 310100                                                         A43208
* 011800                                                         A42861
* 001000,018400,018600,018800,019100,027000,034000,034200,047800,S20201
* 048000,049000,054400,056200,060200,060600,060800,062000,062600,S20201
* 063200,067000,071000,074000,089600,090200,106000,106800,108000,S20201
* 110000,110200,111200,111600,111800,112200,123600,123800,124000,S20201
* 124400,135800,137400,137800,138400,139000,139600,140200,140800,S20201
* 176000,176200,215600,216200,221400,221800,222000,222200,235600,S20201
* 241520,423000,423400,424800,425000,428600,428800,432400,434800,S20201
* 442200-442600,445600,467400,467800,471400,471600,473200,498450,S20201
* 543600,567000,599000,600000-601000,645800,646400,647200,       S20201
* 668800-674400,674800-681400,682400,683600,692400,692600,693600,S20201
* 693800,694000-694400,694800,695600,697000,697800-698200,701600,S20201
* 703200,703600,705200,707800,778200,710800,721200,721600,722000,S20201
* 726400,745200,745400,745800,747200,747400,747600,761200,761400,S20201
* 761600,762400,763600,763800,766000,768600,778400,784400,784800,S20201
* 785400,790800,796000,819600,853000,880400,880600,882200,882600,S20201
* 883400,888600,890800,898200,899200,899400,921000,921200,923000,S20201
* 925600,927800,929800,959600,964000                             S20201
* 372700,377600                                                   M5714
* 360000,361400                                                   M6371
*0988311200,314300                                               A46384
* 266600,267600,347100,347200,389200,396400                      A43889
*0988125800-126100,133100,208630-208750                          M0158
*A BUNCH                                                       @Z30RSHG
*C 391110,200                                                  @ZM40038
*C315698                                                       @ZA10913
*C504600                                                       @ZA13756
*A016100,016300,016500                                         @ZA13757
*C408200,411600                                                @ZA13758
*A076820,076840                                                @ZA13797
*A076020-076080                                                @ZA13798
*C076100                                                       @ZA13798
         USING IPLPSW,BASE0,BASE10,11,12,13                      S20201
         USING TAB13,8                                           S20201
         USING TAB5E,9                                           S20201
         SPACE 1
IPLPSW   DC    XL2'0004'                IPLPSW                   A42861
         DS    2X                      DO NOT OVERLAY IPL'D DEVICE 7974
         DC    A(START)                INITIAL ECS ENTRY POINT     7974
         EJECT
*   COMMON STORAGE AREAS USED BY ALL SECTIONS
               SPACE 2
         ORG   ENTER+272
INPUTDEV DC    X'BAD0000000000000'
               SPACE 2
*   GENERAL PURPOSE REGISTER SAVE AREAS
               SPACE 2
REGSV1   DC    2F'0'                   SCAN REG SAVE AREA
REGSV    DC    16F'0'                  USED BY INTERRUPT SUPERVISORS.
REGSV2   DC    16F'0'                  USED BY DATA INPUT ROUTINE
REGSV3   DC    16F'0'                  USED BY BLANK TRACK PRINTOUT.
REGSV4   DC    16F'0'                  USED BY MESSAGE OUTPUT ROUTINE
REGSV5   DC    16F'0'                  USED BY I/O CONTROL ROUTINE
REGSV6   DC    16F'0'                  USED BY WRITE TO OPERATOR
REGSV7   DC    16F'0'                  USED BY ERROR MSG PRINT
REGSV8   DC    16F'0'                  USED BY FORMAT VTOC ROUTINE
ERRSAV1  DC    16F'0'                  USED BY TAPE ERROR ROUTINES.
         EJECT
*                       **********************************************
*                       *            UNIT CONTROL BLOCK              *
*                       **********************************************
*                       *                                            *
*                       *    BYTE                FUNCTION            *
*                       *   00              UNIT REFERENCE NUMBER    *
*                       *   01              UNUSED                   *
*                       *   02-03           CHANNEL AND UNIT NUMBER
*                       *   04              CAW PROTECT              *
*                       *   05-07           CAW                      *
*                       *   08-15           INTERRUPT PSW            *
*                       *   16-23           INTERRUPT CSW            *
*                       *   24-31           SENSE INFORMATION        *
*                       *   32-48           3330,2305 SENSE INFO     *
*                       **********************************************
*
        SPACE 2
UCBTAB   DS    0D
         SPACE 1
UCBTO    DC    XL48'00'                TO DEVICE UCB             S20201
         SPACE 1
UCBSYI   DC    XL48'00'                INPUT UCB               @ZA13757
         SPACE 1
UCBSYO   DC    XL48'00'                MESSAGE OUTPUT UCB      @ZA13757
         SPACE 1
UCBOPR   DC    XL48'00'                OPERATOR OUTPUT UCB     @ZA13757
         SPACE 1
         EJECT
SWITCHRD DS    19D                     SCAN WORK AREA
SETUPPSW DC    X'01040000'             NEW EXTERNAL INTERRUPT PSW
         DC    A(EXTINT)
         DC    X'01040000'             NEW SUPERVISOR CALL PSW
         DC    A(SVCINT)
         DC    X'01040000'             NEW PROGRAM INTERRUPT PSW
         DC    A(PGMINT)
         DC    X'00020000'             NEW MACHINE CHECK PSW
         DC    X'000000E2'
         DC    X'01040000'             NEW INPUT/OUTPUT PSW
         DC    A(CKCSW)
CVBCOM   DS    1D                      CVB WORK AREA
CLEAR    DC    D'0'                    EIGHT BYTES OF ZEROS
SARG   DS      1D                      SEARCH ARGUMENT
KEYSEQ   DC    XL8'00'                 PARAMETER INDICATOR BYTE
TRACKA   DC    F'0'
TRACKADR DC    F'0'
SYOMDL   DC    XL4'0'
SYODEV   DC    XL4'0'
SYIMDL   DC    XL4'0'
SYIDEV   DC    XL4'0'
TOMDL    DC    XL8'0'                                           XL03145
TODEV    DC    XL4'0'
VTOCBGN  DC    F'0'
         DC    H'0'                    ALLOW FOR PROCESSING STRTADR1095
VTOCEND  DC    F'0'
SAVLGTH  DC    XL4'00'                 SCAN LENGTH REG SAVE AREA
VTOCENDX DC    3H'0'
VOLCHKSW DC    X'0000'                 VOL LABEL CHK BYPASS SWITCH
ALTSW    DC    X'00'                   TEST AVAIL-ALT FOR 3330   S20201
FLGDRUM  DC    X'00'                   DRUM DEVICE INDICATOR     S20201
*                                        01=2301
*                                        02=2303
*                                        04=2305
*                                        08=2305 W/ALT ASSIGNED
*                                        20=MODEL PARAMETER READ
SEQSW    DC    X'00'                   CTL STM SEQUENCE INDICATOR SW
JOBSW    DC    X'00'                    TELL IF JOB STMNT HAS BEEN READ
SPIOSW   DC    X'00'
         SPACE 1                                               @Z30RSHG
FLGBYT1  DC    X'00'                   SWITCHES                @Z30RSHG
         SPACE 1                                               @Z30RSHG
NORCDSW  DC    X'00'                   NO RECORD FOUND SWITCH
ENTRYTWO DC    X'00'                   SURFACE CHK ERROR COUNTER
IPLSW  DC      X'00'                   IPL REQUEST SWITCH
CHANSAV  DC    X'00'                   CHANNEL NUMBER SAVE AREA
CHCKAREA DC    X'00'                   DEVICE CHECK SAVE AREA.
DSCBSW   DC    X'00'
GTALTSW  DC    X'00'                   GETALT FUNCTION SWITCH - FF - ON
VTOCSW   DC    X'00'                   WRITE VTOC SW
TEXTSW   DC    X'00'
ALTALTSW DC    X'00'                    GET ALT FOR ALT
BINSW    DC    X'00'
ACTXIISW DC    X'00'
ERR906SW DC    X'00'                    2321 BAD HA/R0
BYPASS   DC    X'00'                   'FF' MEANS SKIP ANALYSIS.
ERASESW  DC    X'00'                   'FF' MEANS DATA CHECK 2321 ERASE
SPAREX  DC  X'000000'
YEA      DC    C'YES'
DATE     DC    C'78/06/02'             DATE OF LAST CHANGE YY/MM/DD
APARNO   DC    C'OZ32972'              AND APAR NUMBER
EDJTSW   DC    X'00'                    TELL END OF TASK
REQSW    DC    X'00'                   1ST TIME SWITCH FOR REQUEST 7974
BLANK    DC    6C' '                    SIX BYTES OF BLANKS
SDSWITCH DC    X'00'                    UNREADABLE HA SWITCH   @ZA03390
         EJECT
         SPACE 2
*   PSW AREAS
         SPACE 2
SVPSW  DS      1D                      USED BY INTERRUPT SUPERVISORS
         SPACE 1
COWAIT   DC    X'00060000'             TERMINATE WAIT STATE.
         DC    X'0000EEEE'
         SPACE 1
WAITNO1  DC    X'FF060000'             WAIT PSW FOR OPR SYSIN INSERT
         DC    X'0000FFFF'
         SPACE 1
CONTINUE DC    X'01040000'             CONSOLE INTRPT RETURN PSW
         DC    A(CKINPUT)
         SPACE 1
IOWAIT   DC    X'01060000'             I/O WAIT AND RETRY PSW
         DC    X'00001111'
         SPACE 1
ENIOPSW  DC    X'0104000000'
         DC    AL3(CKIOINT)
         SPACE 1
ACKCSW1  DC    X'0104000000'           UNSOLISITED SELECTOR RETURNS.
         DC    AL3(CKCSW1)
*
*    COMMON CONSTANTS
*
       DS      0F
SYSBAS   DC    X'00001000'         ****TEMPORARY
         DC    X'00002000'
         DC    X'00003000'
VTCBAS   DC    X'00004000'
ADRD2321 DC    A(MFRANAL)              ADDRESS READ BACK CCWS--2321.
ERRORMSG DC    A(ERRMSG)               ADDRESS OF ERROR MESSAGE TABLE.
         EJECT
*    SYSTEM REGISTER DESIGNATIONS
*
GR1   EQU     1
GR2   EQU     2
GR3   EQU     3
GR4   EQU     4
GR5   EQU     5
GR7   EQU     7
GR8   EQU      8                        BASE FOR TAB13,2321      S20201
GR15  EQU     15
REG1     EQU   1
REG14    EQU   14
GR6      EQU   6
GR9      EQU   9                        BASE FOR TAB5E           S20201
GR14     EQU   14
CSR0     EQU   0
CSR1     EQU   1
CSR2     EQU   2
CSR3     EQU   3
CSR4     EQU   4
CSR5     EQU   5
REGC     EQU   3
REGD     EQU   4                       REGD AND REGE MUST BE EVEN ODD
REGE     EQU   5
REGF     EQU   6
REGG     EQU   7
REGH     EQU   8
WORK4    EQU   4
ERREG1   EQU   1
ERREG3   EQU   3
ERREG4   EQU   4
BASE0    EQU   0                       BASE REGESTER ZERO
BASE10   EQU   10                      SYSTEM BASE REG
BASE12   EQU   12
BASE13   EQU   13                                                S20201
SCANADR  EQU   1                       SCAN ADR POINTER
LENGTH   EQU   2                       SCAN LENGTH REGISTER
UCBREG   EQU   2                       POINTER TO UCB
CCWREG   EQU   3
IOLOOP   EQU   4
SCANREG  EQU   8
LINK5    EQU   5                        LINK REGISTER
ERRLNK   EQU   9                                           *
LINK9    EQU   9                       LINK REQISTER
LINK14   EQU   14                      LINK REG FOR SCAN ROUTINE
LINK     EQU   15                      LINKAGE REGISTER
LINK15   EQU   15
         EJECT
*        ***************************************************
*        *    EQUATES FOR STANDARDS                        *
*        ***************************************************
R0       EQU   0                        REGISTER 0               S20201
A27      EQU   27                       LOCATION 27              S20201
H40      EQU   X'40'                    HEX 40                   S20201
L16      EQU   16                       LENGTH OF 16             S20201
K1       EQU   1                        CONSTANT OF 1            S20201
H07      EQU   X'07'                    INCREMENT VALUE          S20201
K3       EQU   3                        CONSTANT OF 3            S20201
TEN      EQU   X'10'                    ENV DATA BIT             S20201
EIGHTY   EQU   X'80'                    BUFLOG FULL BIT          S20201
H00      EQU   X'00'                    HEX 00                   S20201
H04      EQU   X'04'                    HEX 04                   S20201
L11      EQU   11                       LENGTH OF 11             S20201
L2       EQU   2                        LENGTH OF 2              S20201
L4       EQU   4                        LENGTH OF 4              S20201
L0       EQU   0                        VALUE OF ZERO            S20201
L12      EQU   12                       LENGTH OF 12             S20201
H24      EQU   X'24'                    HEX 24                   S20201
H01      EQU   X'01'                    HEX 01                   S20201
L8       EQU   8                        LENGTH OF 8              S20201
K6       EQU   6                        CONSTANT OF 6            S20201
H02      EQU   X'02'                    VALUE OF HEX 02          S20201
H20      EQU   X'20'                    VALUE OF HEX 20          S20201
HEX19    EQU   X'19'                    HEX 19                   S20201
HEX1A    EQU   X'1A'                    HEX 1A                   S20201
FD       EQU   X'FD'                   CONSTANT / DEFECTIVE BIT AS15479
TWO56    EQU   256                      VALUE OF 256             S20201
X05      EQU   X'05'                    HEX 05 CONSTANT          S20201
CHARC    EQU   C'C'                     CHARACTER C              S20201
CHARA    EQU   C'A'                     CHARACTER A              S20201
CHAR1    EQU   C'1'                     CHARACTER 1              S20201
CHAR2    EQU   C'2'                     CHARACTER 2              S20201
TWOSIX   EQU   26                       LENGTH OF 26             S20201
L6       EQU   6                        LENGTH OF 6              S20201
L10      EQU   10                       LENGTH OF 10             S20201
L20      EQU   20                       LENGTH OF 20             S20201
L32      EQU   32                       LENGTH OF 32             S20201
L5       EQU   5                        LENGTH OF 5              S20201
ONE11    EQU   111                      LENGTH OF 111            S20201
K22      EQU   22                       CONSTANT OF 22           S20201
L7       EQU   7                        LENGTH OF 7              S20201
H08      EQU   X'08'                    HEX 08                   S20201
H0B      EQU   X'0B'                    HEX 0B                   S20201
H16      EQU   X'16'                    HEX 16                   S20201
L24      EQU   24                       LENGTH OF 24             S20201
A114     EQU   114                      LENGTH OF 114            S20201
A106     EQU   106                      LENGTH OF 106            S20201
N59      EQU   59                      LENGTH CONSTANT         @Z40MSTT
N70      EQU   70                      LENGTH CONSTANT         @Z40MSTT
         EJECT
*        ***************************************************
*        *  EQUATES FOR STANDARDS                          *
*        ***************************************************
L59      EQU   59                       LENGTH OF 59             S20201
L40      EQU   40                       LENGTH OF 40             S20201
L30      EQU   30                       LENGTH OF 30             S20201
L56      EQU   56                       LENGTH OF 56             S20201
L67      EQU   67                       LENGTH OF 67             S20201
L240     EQU   240                      CONSTANT OF 240          S20201
L9       EQU   9                        CONSTANT OF 9            S20201
L50      EQU   50                       CONSTANT OF 50           S20201
L45      EQU   45                       CONSTANT OF 45           S20201
L36      EQU   36                       CONSTANT OF 36           S20201
L38      EQU   38                       CONSTANT OF 38           S20201
L15      EQU   15                       CONSTANT OF 15           S20201
L22      EQU   22                       CONSTANT OF 22           S20201
L31      EQU   31                       CONSTANT OF 31           S20201
D25      EQU   25                       DISPLACEMENT OF 25      XL03145
     EJECT
START    LM    0,15,REGSV              CLEAR GENERAL REGS
         LM    BASE10,BASE13,SYSBAS     ESTABLISH BASES          S20201
         MVC   88(40),SETUPPSW         ESTABLISH DASDI PSWS.
         MVI   50,X'FF'                 SET SEREP FALGS IN OLD MC PSW
         MVI   REQSW,X'00'             TURN OFF REQUEST SWITCH     7974
         LPSW  WAITNO1                 WAIT FOR SYSIN DEVICE DEFINITION
*
*    SETUP SYSIN DEVICE FROM CONSOLE INPUT
*
CKINPUT  TM    INPUTDEV,X'F0'          INPUT VIA READER 1402/2540/3505
         BC    8,IN1402                YES - PERFORM 1402 SETUP
         MVZ   CHCKAREA(1),INPUTDEV    SETUP DEVICE TYPE CHECK
         CLI   CHCKAREA,X'10'          IS SYSIN DEVICE A 1442
         BC    8,IN1442                YES
         CLI   CHCKAREA,X'20'          IS SYSIN DEVICE A 2400
         BC    8,IN2400                YES
         CLI   CHCKAREA,X'30'          IS SYSIN DEVICE A 1052
         BC    8,IN1052                YES
         CLI   INPUTDEV,X'BA'          WAS INTERRUPT KEY DEPRESSED.
         BC    8,START                 YES--GO TO START UNTIL REQUEST.
         B     INPUTERR                ILLEGAL INPUT DEVICE
*
IN1402   MVI   UCBSYI,T1402             SYSIN UCB FOR 1402       S20201
INADR    MVN   CHANSAV(1),INPUTDEV     ISOLATE CHANNEL NUMBER
         MVC   UCBSYI+2(2),INPUTDEV    ENTER SYSIN C/U IN SYSIN UCB
         NI    UCBSYI+2,X'07'          CLEAR DEVICE TYPE INDICATOR
         MVC   120(8),ENIOPSW
         B     CLRSCAN
*
IN1442   MVI   UCBSYI,T1442             SYSIN UCB FOR 1442       S20201
         B     INADR                   ENTER SYSIN C/U IN UCBSYI
*
IN2400   MVI   UCBSYI,T2400             SYSIN UCB FOR 2400       S20201
         B     INADR
*
IN1052   MVI   UCBSYI,T1052             SYSIN UCB FOR 1052       S20201
         B     INADR
*
*    INPUT PARAMETER ERROR DISPLAY ROUTINE
*
INPUTERR MVC   WAITNO1+6(2),INPUTDEV   SET INTERFACE ADR FOR DISPLAY
         MVZ   WAITNO1+6(1),CON80      INSERT CODE 8 IN FIRST HALF BYTE
*                                      INDICATES INPUT PARAMETER ERROR
         LPSW  WAITNO1                 SET WAIT CODE IN COLSOLE LIGHTS
*
         DS    0F
CON80    DC    X'80'
ENABLE   DC    X'FF'                   I/O ENABLED
DISABLE  DC    X'01'                   I/O DISABLED
         DS    0F
         EJECT
*        SETUP SYSIN DEVICE FROM TYPEWRITER INPUT
         SPACE 2
ATTN     TM    REQSW,X'FF'             IS THIS FIRST ATTN INTERUPT 7974
         MVI   REQSW,X'FF'             TURN ON REQUEST SWITCH      7974
         BZ    ATTN1                   YES  THIS IS THE FIRST.     7974
         LPSW  56                      NOT THE FIRST.              7974
ATTN1    SSM   ENABLE                  SET SYSTEM MASK ENABLE      7974
         MVI   UCBOPR,T1052             UCBOPR DEVICE TYPE       S20201
         MVC   UCBOPR+2(2),58          INSERT C/U IN UCBOPR
         LA    GR1,41                  LENGTH OF MESSAGE.
         LA    CSR2,OPRMSG             MESSAGE PRINT WORD TO OPERATOR
         BAL   LINK15,OPPRNT           CALL W T O ROUTINE
         SPACE 1
         LA    UCBREG,UCBOPR           GET TYPE WRITER UCB
         LA    CCWREG,TYPREAD          GET READ CCW FOR TYPEWRITER
         BAL   LINK9,STARTIO           ISSUE SIO
         SPACE 1
         TR    SYIBUF(80),CONVTAB      CHANGE LOWER TO UPPER CASE
         SPACE 1
MSGANL   MVC   SYIMDL(4),SYIBUF+6      INSERT SYSIN MODEL NUMBER
         MVC   SYIDEV(3),SYIBUF+11     INSERT SYSIN DEVICE ADR
         LA    CSR2,SYIMDL             CHECK SYSIN DEVICE ADR
         LA    CSR3,SYINTAB            TABLE LIMITS START ADR AND
         LA    CSR5,MODTAB-5           END ADR RESPECTIVELY
         BAL   LINK9,DEVLUP
         SPACE 1
         MVC   UCBSYI(1),0(CSR3)        SET SYSIN  DEVICE TYPE CODE
         CLI   UCBSYI,T2400             IS SYSIN TAPE            S20201
         BNE   MSGANL1                    NO, SKIP MODE SET
         MVI   SYICCW,X'93'               YES, MOVE MODE SET IN
MSGANL1  LA    CSR2,SYIDEV              CHECK SYSIN DEVICE ADR
         BAL   LINK9,INTFCECK          CHECK INTERFACE ADR
         SPACE 1
         B     INPUTERR                ERROR ON SYSIN DEF ENTRY
         SPACE 1
         STH   CSR1,UCBSYI+2           INSERT SYSIN C/U IN UCB
         MVC   120(8),ENIOPSW
         B     CLRSCAN
CON7278  DC    H'7278'                 2314 RESIDUAL COUNT TEST.
         SPACE 2
TYPREAD  CCW   X'0A',SYIBUF,X'20',14    TYPEWRITER READ CCW
         SPACE 2
OPRMSG   DC    CL30'IBC105A  DEFINE INPUT DEVICE. '                7974
         DC    CL11'DASDI  7.88'        CONSOLE MESSAGE
               SPACE 2
     EJECT
         DS    0D
CONVTAB  DC    X'000102030405060708090A0B0C0D0E0F'  CONVERT LOWER CASE
         DC    X'101112131415161718191A1B1C1D1E1F'  TO UPPER CASE
         DC    X'202122232425402728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7B7F'
         DC    X'80'
         DC    C'ABCDEFGHI'
         DC    X'8A8B8C8D8E8F'
         DC    X'90'
         DC    C'JKLMNOPQR'
         DC    X'9A9B9C9D9E9F'
         DC    X'A0A1'
         DC    C'STUVWXYZ'
         DC    X'AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0'
         DC    C'ABCDEFGHI'
         DC    X'CACBCCCDCECF'
         DC    X'D0'
         DC    C'JKLMNOPQR'
         DC    X'DADBDCDDDEDF'
         DC    X'E0E1'
         DC    C'STUVWXYZ'
         DC    X'EAEBECEDEEEF'
         DC    C'0123456789'
         DC    X'FAFBFCFDFEFF'
SYIBUF   DS    20F
SEREPSAV DC    28X'00'
     EJECT
         SPACE 3
*                       **********************************************
*                       *          DATA INPUT ROUTINE                 *
*                       **********************************************
         SPACE 3
*    GR2 CONTINS THE INPUT BUFFER ADDRESS
         SPACE 2
SYSIN  STM     0,15,REGSV2             SAVE REGISTERS
         ST    GR2,SYICCW1              SET DATA ADDRESS IN CCW
         MVI   SYICCW1,X'02'             SET READ COMMAND
       LR      GR4,GR2                 SAVE DATA ADDRESS
       LM      GR2,GR3,INPUTR          SET START IO PARAMETERS
         BAL   LINK9,STARTIO           LINK TO START I/O
         SPACE 1
         LM    0,15,REGSV2             RESTORE REGISTER
         BR    LINK15                  RETURN TO CALLER
         SPACE 2
*    CONSTANTS AND STORAGE AREAS FOR SYSTEM INPUT
         SPACE 2
       DS      0D
INPUTR   DC    A(UCBSYI)               POINTER TO SYSIN UCB
         DC    A(SYICCW)               CONTAINS CCW LIST FOR SYSIN
         SPACE 1
SYICCW   CCW   3,SYICCW1,X'40',1
SYICCW1  DC    F'0'
       DC      X'20000050'
         EJECT
         SPACE 2
*                       **********************************************
*                       *          MESSAGE OUTPUT ROUTINE             *
*                       **********************************************
         SPACE 2
SYSOUT STM     0,15,REGSV4             SAVE REGISTERS
         CLI   UCBSYO,X'00'            IS OUTPUT DEVICE DEFINED
         BC    7,SYSOUT1               YES - USE DEFINED OUTPUT DEVICE
         SPACE 1
         CLI   UCBOPR,X'00'            NO - IS WTO DEVICE DEFINED
         BC    8,ERRWAIT               W T O DEVICE IS NOT DEFINED
         SPACE 1
         B     OPPRNT                  AND SET MSG LENGTH MAX
         SPACE 1
SYSOUT1  ST    GR2,SYOCCW              STORE MSG ADR IN CCW
         CLI   UCBSYO,T2400            IS SYSOUT TAPE            S20201
         BC    8,SYOTAPE               YES - ADJUST CCW LIST FOR TAPE
         SPACE 1
         CLI   UCBSYO,T1052             IS SYSOUT TYPEWRITER     S20201
         BC    8,SYOTYPE               YES - MODIFY CCW LIST FOR TYPE
         SPACE 1
       MVI     SYOCCW,X'11'            ASSUME DOUBLE SPACE
         B     SYSREF
         SPACE 1
SYOTAPE  MVI   SYOCCW,X'01'            SET TAPE WRITE OPR IN SYOCCW
         LA    UCBREG,UCBSYO           ADR OF SYSOUT UCB
         LA    CCWREG,SYOTCCW          POINTER TO CCW LIST
         B     SYSREF1
         SPACE 1
SYOTYPE  MVI   SYOCCW,X'09'            SET TYPE WRITE CMD IN SYPCCW
         ST    CSR1,SYOCCW+4           ENTER COUNT INTO CCW
         MVI   SYOCCW+4,X'20'          SET FLAG IN CCW
         B     SYSREF
               SPACE 1
SYSREF   LM    GR2,GR3,OUTPUTR         GET UCB AND CCW LIST ADR
      SPACE 1
SYSREF1  BAL   LINK9,STARTIO           ISSUE SIO SEQUENCE
         LM    0,15,REGSV4             RESTORE REGISTERS
         BR    LINK15                  RETURN TO CALLER
SYO3800  EQU   *                                               @Z40MSTT
         CLI   UCBSYO,T3800            IS WRITER A 3800?       @Z40MSTT
         BNE   QUIT                    NO, SKIP 3800 CODE.     @Z40MSTT
         STM   R0,GR15,REGSV4          SAVE REGISTERS.         @Z40MSTT
         LA    GR2,UCBSYO              GET UCB ADDRESS.        @Z40MSTT
         LA    GR3,INITCCW             GET INITIALIZE CCW.     @Z40MSTT
         BAL   LINK9,STARTIO           ISSUE INIT PRINT.       @Z40MSTT
         LM    R0,GR15,REGSV4          RESTORE REGISTERS.      @Z40MSTT
QUIT     EQU   *                                               @Z40MSTT
         LPSW  COWAIT                  TERMINATE UTILITY.      @Z40MSTT
         EJECT
*    CONTAINS AND STORAGE AREAS FOR SYSOUT
      SPACE 1
OUTPUTR  DC    A(UCBSYO)               POINTER TO SYSOUT UCB
         DC    A(SYOCCW)               ADR OF SYSOUT CCW LIST
      SPACE 1
SYOTCCW  CCW   X'BB',CLEAR,X'40',1     MODE SET ODD PARITY TRANSLATOR
*                                      ON BYTE CONVERTER OFF
SYOCCW DC      A(0)                    SYSOUT CCW
       DC      X'20000080'             131 CHARACTERS
     EJECT
*                       **********************************************
*                       *          WRITE TO OPERATOR ROUTINE          *
*                       **********************************************
         SPACE 2
*      GR1 CONTAINS NUMBER OF CHARACTER TO WRITE
*      GR2 CONTAINS STARTING ADDRESS OF MESSAGE
         SPACE 2
*    SET UP CCW
         SPACE 1
OPPRNT STM     0,15,REGSV6             SAVE REGISTERS
       ST      GR1,OPRCCW+4            STORE COUNT
       ST      GR2,OPRCCW              STORE ADDRESS
       MVI     OPRCCW,X'09'            WRITE COMMAND
       MVI     OPRCCW+4,X'20'          SET SILI BIT
       LM      GR2,GR3,SYSOPR          SPIOCS PARAMETERS
         SPACE 1
*    PRINT MESSAGE
         SPACE 1
OPPRN1   BAL   LINK9,STARTIO           ISSUE SIO TO W T O
         LM    0,15,REGSV6             RESTORE REGISTERS
         BR    LINK15                  RETURN TO CALLER
         SPACE 1
*    TYPEWRITER ERROR - SWITCH TO PRINTER
         SPACE 1
         LM    GR2,GR3,OUTPUTR         GET SYSOUT UCB AND CCW LIST
         SPACE 1
OPRBRA BC      0,OPRERR
       MVI     OPRBRA+1,X'F0'          SET BRANCH TO EXIT
       B       OPPRN1
         SPACE 1
OPRERR MVI     OPRBRA+1,X'00'
       LPSW    COWAIT                  NO PRINTER OR
        SPACE 2
*    CONSTANTS AND STORAGE AREA FOR OPPRNT
         SPACE 1
       DS      0D
SYSOPR   DC    A(UCBOPR)               POINTER TO TYPEWRITER UCB
       DC      A(OPRCCW)
         SPACE 1
OPRCCW DS      1D                      OPPRNT CCW
     EJECT
*                       ***********************************************
*                       *        I/O ERROR MESSAGE FORMAT ROUTINE     *
*                       ***********************************************
         SPACE 2
IOPRNT   STM   0,15,REGSV7             SAVE REGISTERS
         MVI   IOCONV,C' '              BLANK OUT IOCONV
         MVC   IOCONV+K1(L67),IOCONV   CLEAR IOCONV              S20201
         UNPK  IOCONV(5),2(3,UCBREG)     UNPACK CHANNEL / UNIT
         UNPK  IOCONV+4(5),20(3,UCBREG)  UNPACK CSW STATUS FIELD
         UNPK  IOCONV+8(13),24(7,UCBREG) UNPACK SENSE INFORMATION
         LA    CSR4,UCBSYI              GET UCB ADDR             M1828
         CR    CSR4,UCBREG              IS IT UCBSYI             M1828
         BNE   IOPRNT0                  NO, 6 SENSE BYTES ONLY   M1828
         CLI   UCBSYI,T2400             IS DEVICE TYPE = TAPE    M1828
         BE    GETREST            YES - 24 SENSE BYTES FOR TAPE  M1828
IOPRNT0  LA    CSR4,UCBTO               GET UCB ADDR             S20201
         CR    CSR4,UCBREG              IS IT UCBTO              S20201
         BNE   IOPRNT1                  NO, 6 SENSE BYTES ONLY   S20201
GETREST  UNPK  IOCONV+L8(L15),L24(L8,UCBREG) YES UNPACK 8 SENSE  S20201
         UNPK  IOCONV+L22(L15),L31(L8,UCBREG)  UNPACK SENSE      S20201
         UNPK  IOCONV+L36(L15),L38(L8,UCBREG) UNPACK SENSE       S20201
         UNPK  IOCONV+L50(L7),L45(L4,UCBREG) UNPACK CCHH         S20201
IOPRNT1  CLI   L0(UCBREG),DASDMAX      IS IT A DASD DEVICE       S20201
         BH    NOTDASD                 NO--BYPASS PRINT OF CCHH.
         L     CSR4,4(UCBREG)          YES-POINTER TO CCW LIST.
         LTR   CSR4,CSR4               IS THERE A POINTER TO A CCW LIST
       BC      8,NOTDASD               NO--DO NOT PRINT CCHH.
         L     CSR4,0(CSR4)            POINTER TO SEEK ADDRESS.
         UNPK  IOCONV+L59(L9),L2(L5,CSR4)  UNPACK SEEK ADDR      S20201
NOTDASD  OC    16(4,UCBREG),16(UCBREG) COMMAND CODE FROM CSW OR CAW.
         BC    4,CSWEXIT               CSW--GO TO CSWEXIT.
         SPACE 1
         L     CSR4,4(UCBREG)          CAW--GET COMMAND CODE FROM CAW.
         B     CAWEXIT                 GO TO CAW EXIT .
         SPACE 1
CSWEXIT  L     CSR4,16(UCBREG)         GET ADDRESS IN CSW AT INTERRUPT.
         S     CSR4,EIGHT              GET ADDRESS OF CCW THAT INTERPTD
         SPACE 1
CAWEXIT  UNPK  IOCONV+L56(K3),L0(L2,CSR4)  UNPACK COMMAND CODE   S20201
         TR    IOCONV(L67),IOTAB-L240  TRANSLATE TO EBCDIC       S20201
         L     WORK4,ERRORMSG          PUT ADDRESS OF ERRMSG IN REG 4
         AR    WORK4,ERREG1            ADD VALUE OF ERREG1 TO REG. 4
         MVI   PRWD,C' '               CLEAR FIRST BYTE OF BUFFER.
         MVC   PRWD+1(131),PRWD        CLEAR REMAINING BUFFER.
         MVC   PRWD(L4),IBC2           MESSAGE HEADER           XL03145
         MVC   PRWD+L4(L20),L0(WORK4)  INSERT INDEXED ERRMSG    XL03145
         MVC   PRWD+26(3),IOCONV+1     INSERT CHANNEL/UNIT IN MSG
         MVC   PRWD+L30(L2),IOCONV+L56  INSERT OPCODE IN MSG     S20201
         MVC   PRWD+33(4),IOCONV+4     INSERT CSW STATUS IN MSG
         LA    GR1,PRWD+L40             FORMAT SENSE BYTES       S20201
         LA    GR2,IOCONV+L8              FROM IOCONV            S20201
         LA    GR3,K6                  SET TO LOOP 6 TIMES       S20201
PRNTLOOP MVC   L0(L4,GR1),L0(GR2)       MOVE UNPKED SENSE        S20201
         MVC   L5(L4,GR1),L4(GR2)      SEPARATE FROM NEXT TWO    S20201
         LA    GR1,L11(GR1)             2 BLANKS BETWEEN WORDS   S20201
         LA    GR2,L8(GR2)             POINT TO NEXT SENSE BYTE  S20201
         BCT   GR3,PRNTLOOP            INSERT 24 SENSE BYTES     S20201
         MVC   PRWD+A106(L8),IOCONV+L59 INSERT SEEK ADDR IF ANY  S20201
         LM    0,15,REGSV7             RESTORE REGISTERS
         LA    CSR1,A114               LOAD MESSAGE LENGTH       S20201
*
*                       ***********************************************
*                       *          WRITE A LINE TO MSG OUTPUT         *
*                       ***********************************************
*
PRNT     STM   0,15,REGSV7             SAVE REGISTERS
         LA    GR2,PRWD                132 BYTE WORD TO BE PRINTED
       BAL     GR15,SYSOUT             PRINT ONE LINE
         MVI   PRWD,C' '               CLEAR PRINT AREA TO BLANKS
         MVC   PRWD+1(131),PRWD
         LM    0,15,REGSV7             RESTORE REGS
         BR    LINK9                   RETURN TO CALLING ROUTINE
         SPACE 1
       DS      0D
PRWD     DC    132C' '                  MESSAGE PRINT BUFFER
IBC2     DC   C'IBC2'                   MESSAGE HEADER          XL03145
     EJECT
*                       ***********************************************
*                       *         INPUT/OUTPUT CONTROL ROUTINE        *
*                       *                                             *
*                       *  ON ENTRY TO STARTIO OR STARTIOX            *
*                       *  REG UCBREG POINTS TO DEVICE UCB            *
*                       *  REG CCWREG POINTS TO EXCP CCW LIST ADR     *
*                       *  REG LINK9 IS ROUTINE LINK REGISTER         *
*                       ***********************************************
               SPACE 2
STARTIO  STM   0,15,REGSV5             SAVE REGISTERS
STARTIOX ST    CCWREG,72               INSERT CCW LIST ADR IN CAW
         LH    CSR4,2(UCBREG)          ENTER C/U INTO CSR4
         MVC   120(8),ENIOPSW          MULTIPLEXOR RETURN POINT.
         SPACE 1
STARTIO1 SSM   ENABLE                  ENABLE I/O INTERRUPTS
         MVC   120(8),ACKCSW1          SELECTOR RETURN POINT.
         SPACE 1
TIOBUSY  TIO   0(CSR4)                 CHECK DEVICE STATUS.
         TM    68,X'50'                 BUSY - STATUS MODIFIER SET
         MVI   68,X'00'                 CLEAR STATUS BYTES
         BC    1,TIOBUSY                YES, CONTROL UNIT BUSY
         SSM   DISABLE                 DISABLE I/O INTERRUPTS
         SPACE 1
SIO      SIO   0(CSR4)                 ISSUE SIO
         BC    8,TIO                   COMMAND ACCEPTED
         BC    2,SIO                   UNIT BUSY - RETRY
         BC    1,SIOERR                UNIT UNAVAILABLE - ERROR
         B     CKCSW                   CHECK ERROR CONDITION
         SPACE 1
TIO      TIO   0(CSR4)                 ISSUE TIO
         BC    2,TIO                   BUSY - TEST AGAIN
         B     CKCSW                   CHECK ERROR CONDITION EXISTING
         SPACE 1
IORTRN   LM    0,15,REGSV5             RESTORE REGISTERS
         BR    LINK9                   RETURN TO USER
         SPACE 1
CKIOINT  CH    CSR4,58                 INTERRUPT CAUSED BY PGM UCB
         BE    SIO                     YES - HAVE SERVICED - START I/O
         B     STARTIO1                N/ - CHK INTERRUPTS PENDING
      SPACE 1
SENCCW   CCW   4,IOSESV,X'20',24       SENSE COMMAND             S20201
         SPACE 1
IOSESV   DC    XL24'00'                SENSE BYTE SAVE AREA      S20201
IOTAB  DC      C'0123456789ABCDEF'
IOCONV   DC    XL68'00'                 CONVERT TO DECIMAL       S20201
     EJECT
*                       **********************************************
*                       *     ALL I/O INTERRUPTS ENTER HERE          *
*                       *  REG UCBREG POINTS TO INTRPTING UCB         *
*                       **********************************************
      SPACE 1
*    CHECK FOR I/O ERROR
      SPACE 1
CKCSW1   TM    68,X'10'                BUSY
         BC    1,SIO                   YES--REISSUE SIO.
         TM    68,X'04'                DEVICE END.
         BC    1,STARTIOX              RETRY CCW ON DEVICE END PENDING.
         TM    68,X'08'                CHANNEL END.
         BC    1,TIO                   YES--AWAIT DEVICE END.
CKCSW    CLI   SEEKSWT,X'01'            WERE WE SEEKING CYL 400 XL03145
         MVI   SEEKSWT,H00              TURN OFF SEEK SWITCH    XL03145
         BCR   8,LINK9                  YES RETURN TO PROCESS   XL03145
         TM    68,X'03'                IS THIS AN ERROR INTERRUPT.
         BC    4,IOERR                 YES
         TM    69,X'FF'                ANY ERROR BITS ON
         BC    4,IOERR                 YES
         TM    68,X'80'                IS THIS AN ATTENTION INTRPT
         BC    1,ATTN                  YES - SETUP TO HONOR REQUEST
         CLI   UCBSYI,X'00'            INPUT DEVICE PREVIOUSLY DEFINED.
         BC    7,DEFINED               YES-GO TEST FOR DEVICE END.
         CLI   UCBOPR,X'00'            PREVIOUS CONSOLE REQUEST.
         BC    8,START                 NO--RETURN TO START
DEFINED  C     UCBREG,INPUTR           TODEVICE                @ZA13797
         BNL   DEF2                    NO-BRANCH               @ZA13797
         TM    68,X'10'                BUSY                    @ZA13797
         BC    1,SIO                   YES-REISSUE SIO         @ZA13797
DEF2     TM    68,X'04'                IS INTERRUPT DEVICE END.@ZA13797
         BC    1,IORTRN                YES - RETURN TO PROCESS
         TM    68,X'20'                IS INTERRUPT CTL UNIT END
         BC    1,SIO                   YES - REISSUE SIO
         TM    68,X'08'                IS INTRPT CHANNEL END
         BC    1,TIO                   YES - LOOP ON TIO FOR DEVICE END
         TM    68,X'10'                IS INTERRUPT BUSY INDICATION
         BC    1,SIO                   YES - REISSUE SIO
         CH    CSR4,58                 INT CAUSED BY PGM UCB   @ZA13798
         BNE   STARTIO1                NO                      @ZA13798
         SPACE 1
IOERR    TM    ACTXIISW,X'10'          IS 2321 DIRECT RETURN BIT ON.
         BCR   1,LINK9                 YES-RETURN TO PROCESS.
         MVC   8(16,UCBREG),56         SAVE I/O PSW AND CSW IN UCB.
         MVC   4(4,UCBREG),72          SAVE CAW IN UCB
         MVC   24(8,UCBREG),CLEAR      CLEAR SENSE FIELD OF UCB.
         TM    68,X'02'                IS THIS A UNIT CHECK.
         BC    8,TYPECHK               NO--CHECK DEVICE INTERRUPTING.
         LA    CSR4,SENCCW             ADDRESS OF SENSE CCW.
         ST    CSR4,72                 SET UP CAW.
         LH    CSR4,2(UCBREG)          CHANNEL//UNIT ADDRESS.
         CLI   68,X'02'                UNIT CHECK ONLY.
         BE    SENCHK                  YES-GIVE SENSE COMMAND.
DEVTEST  TM    68,X'04'                DEVICE END PRESENT.
         BC    1,SENCHK                YES-GO SENSE.
DEVTIO   TIO   0(CSR4)                 NO--TEST FOR DEVICE END.
         BC    4,DEVTEST               CSW STORED--TEST FOR DEVICE END.
         B     DEVTIO                  LOOP ON TIO--UNTIL DEVICE END.
SENCHK   SIO   0(CSR4)                 ISSUE SENSE COMMAND.
         BC    1,SIOERR                UNIT NOT OPERATIONAL.
         BC    2,SENCHK                CHANNEL OR SUBCHANNEL BUSY.
IOTIO    TIO   0(CSR4)                 TEST STATUS OF DEVICE.
         BC    2,IOTIO                 BUSY--TRY AGAIN.
SENSAV   MVC   24(6,UCBREG),IOSESV     SAVE SENSE BYTES IN UCB.
         CLI   GTALTSW,X'FF'            CHECK GETALT RTN         M0990
         BE    CONT                                              M0990
         TM    FLGDRUM,H04      CHECK FOR ALT ASSIGNED FOR ZEUS  M0990
         BNO   CONT                                              M0990
         CLI   BYPASS,X'FF'        IS THE BYPASS FLAG SET        M0090
         BNE   CONT                                              M0990
         CLI   IOSESV+7,X'85'      SENSE INDIC. FOR SECOND TRY   M0090
         BNE   CONT                                              M0990
         MVI   ALTCNTX+1,H00       SET THE ALTERNATE TO ZERO     M0090
         B     INTORG                                            M0990
CONT     EQU   *                        DELETE CHECK FOR ONLY 6  M1828
         MVC   L24(L24,UCBREG),IOSESV   YES, SAVE 24 SENSE       S20201
SENSAV1  XC    IOSESV(L24),IOSESV       CLEAR SENSE BYTE AREA    S20201
         EJECT
*    CHECK DEVICE TYPE INTERRUPTING
               SPACE 2
TYPECHK  TM    ERRETRY,X'FF'           IS THE ERROR RETRY SWITCH ON.
         BC    1,ERBYPASS              YES-PRESERVE ORIGINAL ERROR REGS
         MVC   ERRSAV1(64),REGSV5      SAVE STARTIO REGS IN ERRSAV1.
         SPACE 1
ERBYPASS CLI   L0(UCBREG),DASDMAX       DASD INTERRUPT           S20201
         BNH   ERR100
         CLI   L0(UCBREG),T2400         2400 INTERRUPT           S20201
         BC    8,ERR300
      SPACE 1
         CLI   L0(UCBREG),T1052         1052 INTERRUPT           S20201
         BC    8,ERR500
      SPACE 1
         CLI   L0(UCBREG),T1402         1402 INTERRUPT           S20201
         BC    8,ERR600
      SPACE 1
         CLI   L0(UCBREG),T1442         1442 INTERRUPT           S20201
         BC    8,ERR200
      SPACE 1
         CLI   L0(UCBREG),T1403         1403 INTERRUPT           S20201
         BC    8,ERR400
      SPACE 1
         CLI   L0(UCBREG),T1443         1443 INTERRUPT           S20201
         BC    8,ERR800
         SPACE
         CLI   L0(UCBREG),T3800        3800 INTERRUPT?         @Z40MSTT
         BE    ERR400                  1403 ERROR ROUTINE.     @Z40MSTT
      SPACE 1
         B     SIOERR                  NO DEVICE TYPE IN TABLE..
     EJECT
*        VOLUME LABEL CHECK ROUTINE
*
CKVOLLBL MVI   NORCDSW,X'F0'           TURN ON NO RECORD FOUND SWITCH
         XC    SAVEVTOC(96),SAVEVTOC   CLEAR VTOC/VOL LABEL BUFFER
         LA    UCBREG,UCBTO            PREPARE TO READ DASD VOL LABEL
         MVC   CCHH(5),CCHHR            PREPARE TO READ VOL ID
         XC    SEEKADR+2(4),SEEKADR+2  CLEAR THE SEEK ADDRESS      7679
RETALT   LA    CCWREG,SEEKVOL          READ VOLUME LABEL.
         BAL   LINK9,STARTIO            SIO FOR VOLUME LABEL
         MVI   NORCDSW,X'00'           RESET NO RECORD SWITCH
         CLC   SAVEVTOC(4),VOLABID     IS THIS A SYSTEM VOL LABEL
         BC    8,VOLYES                YES-COMPARE THE SERIAL NUMBERS.
         SPACE 1
         MVI   NORCDSW,X'0A'           NO--SET UP TO PRINT INVALID MSG.
         B     PRNTMESS                PRINT MESSAGE ABOUT VOL I/D.
      SPACE 1
VOLYES   CLC   VOLLABEL(6),SAVEVTOC+4   DOES VOL LABEL CHECK OUT
         BNE   PRNTMESS                   NO
         MVC   SEEKVOL+1(3),ADBBCCHH   INSURE SEEK CCW IS RESET.
         SPACE 1
         CLI   GTALTSW,X'FF'           IS THIS A GETALT FUNCTION
         BC    7,PGMRTN                N/ - RETURN TO CALLER
         MVC   SAVALTCC(10),SAVEVTOC+11 SAVE VTOC ADDRESS
         MVC   CCHH(5),SAVALTCC         PREPARE TO READ VTOC
         BAL   LINK9,STARTIO            SIO FOR VTOC
         MVC   ALTHOLD(6),SAVEVTOC+8
PGMRTN   BR    LINK15                  RETURN TO CALLER
         SPACE 1
RCDRTN   MVI   NORCDSW,X'0A'           SET NO RECORD SWITCH TO INVALID.
      SPACE 1
PRNTMESS MVC   PRWD(89),MESS7          TELL OPERATOR VOLUME LABEL
         LA    CSR1,89                 DON'T AGREE WITH ONE MOUNTED.
         BAL   LINK9,PRNT
         SPACE 1
         TM    NORCDSW,X'0A'           IS VOL I/D INVALID FORMAT.
         BC    14,SERPRINT             NO--PRINT SERIAL ERROR MSG.
      SPACE 1
         MVC   PRWD+9(16),INVALID      TELL VOLID COULD NOT BE FOUND.
         B     VPRINT1                 GO PRINT THE MESSAGE.
      SPACE 1
SERPRINT MVC   PRWD+15(6),SAVEVTOC+4   LABEL I/D.
VPRINT   MVC   PRWD+9(6),VOLIDIS       PRINT VOLUME
VPRINT1  LA    CSR1,26                 LENGTH OF MESSAGE.
         BAL   LINK9,PRNT
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
*
VOLIDIS  DC    C'VOLID='
      SPACE 1
INVALID  DC    C'VOLID IS INVALID'
ADBBCCHH DC    AL3(BBCCHH)             USED TO REST SEEKVOL.
         DS    0D
SEEKVOL  CCW   7,BBCCHH,X'60',6        SEEK VOLUME LABEL
SEARCHID CCW   X'31',CCHH,X'60',5      SEARCH VOLUME LABEL RECORD
         CCW   8,SEARCHID,X'60',5
         CCW   6,SAVEVTOC,X'20',96
         SPACE 1
*
SAVEVTOC DC    XL96'00'                BUFFER FOR VOL LABEL AND VTOC
SAVALTCC DC    XL10'00'                DATA DIRECTORY - VTOC ADR
         DS    0F
         DC    XL2'00'
BBCCHH   DC    X'0000'                  BIN
CCHH     DC    X'0000'                     CYLINDER
HH       DC    X'0000'                        TRACK AND RECORD
         DC    XL2'00'                 ADR FOR CCW LIST
CCHHR    DC    X'0000000003'            TRACK AND RECORD OF VOL ID
VOLLABEL DC    XL6'00'                  VOL ID COMPARE
MESS7    DC    C'IBC106A  THE VOLID IN CONTROL STATEMENT '
         DC    C'DOES NOT AGREE WITH ID IN VOL LABEL '
         DC    C'WHICH FOLLOWS'
PRNTSW   DC    X'00'
     EJECT
BIT80    EQU   X'80'                   ERROR SWITCH
BIT40    EQU   X'40'                   BYPASS SWITCH
BIT20    EQU   X'20'                   EOF, PARAMETER FOLLOWS SWITCH
BIT10    EQU   X'10'                   FIRST ENTRY, PARTIAL PARAMETER
BIT08    EQU   X'08'                   COMMAND, COLUMN 72 NON-BLANK SW
BIT04    EQU   X'04'                   KEYWORD, COLUMN 72 NON-BLANK SW
BIT02    EQU   X'02'                   PARAMETER SWITCH
BIT01    EQU   X'01'                   RIGHT PAREN, LENGTH=0 SWITCH
EQUAL    EQU   C'='                    HEX 'EQUAL'
COMMA    EQU   C','                    HEX 'COMMA'
MINUS    EQU   C'-'                    HEX 'MINUS'
PERIOD   EQU   C'.'                    HEX 'PERIOD'
BLANKCOL EQU   C' '                    BLANK CHARACTER.
RESET0   EQU   X'00'                   RESET BITS
CARDBUFF EQU   SWITCHRD+1              CARD READ-IN AREA.
LASTCOLM EQU   SWITCHRD+71             LAST COLUMN
PARAMSW  EQU   SWITCHRD+81             PARAMETER FOLLOWS, CONTINUATION
SAVEPAPR EQU   SWITCHRD+83             SAVE AREA FOR PARTIAL PARAMETERS
COL72LG  EQU   SWITCHRD+103            COLUMN 72 SWITCH AND LENGTH SW
DELIMIN  EQU   SWITCHRD+106            DELIMITER INDICATORS
DELIMIN2 EQU   SWITCHRD+107            DELIMITER INDI
SAVE9    EQU   SWITCHRD+108            SAVE REGISTER 9 AREA
STORGR3  EQU   SWITCHRD+112            LOCATION WHERE SCAN REG3 STORED
ZERO     EQU   CLEAR
         SPACE 1
RDCARD   STM   3,15,REGSV6+12          SAVE REGS 3-15, 1-2 PARAM REGS
         L     GR3,STORGR3             POINTER FROM PREVIOUS SCAN SAVED
         NI    SWITCHRD,X'7F'          RESET ERROR BIT
         TM    SWITCHRD,BIT10          TEST FIRST ENTRY SWITCH
         BC    8,KIRSCD                SWITCH OFF ON FIRST ENTRY
         TM    SWITCHRD,BIT40          TEST BYPASS SWITCH
         BC    1,KBYPO                 IF ON GO TO BYPASS ROUTINE
         TM    PARAMSW,BIT08           TEST READ CARD SWITCH
         BC    1,KGTCD                 IF ON, READ A CARD
         TM    PRNTSW,X'01'            IS PRINT SWITCH ON
         BC    8,KPFOL                 NO-DO NOT PRINT NOW
         BAL   LINK9,KPRNT             PRINT THE CARD
         OI    PRNTSW,X'20'            INDICATE CARD PRINTED
         NI    PRNTSW,X'FE'            CLEAR EXTRANEOUS BITS
KPFOL    TM    PARAMSW,BIT20           DOES A PARAMETER FOLLOW
         BC    1,SCANR                 YES- SCAN THE CARD
         TM    PARAMSW,BIT40           CONTINUATION SWITCH SET
         BC    1,KCONT                 YES- PROCESS CONTINUED PART
         LA    GR3,CARDBUFF            LOAD ADDRESS OF FIRST COLUMN
KNAME    CLI   0(GR3),BLANKCOL         IS COLUMN BLANK
         LA    GR5,LASTCOLM            LOAD 5 WITH COLUMN 71 OF CARD
         BE    KOMMD                   YES- GO TO COMMAND WORD ROUTINE
         CR    GR3,GR5                 TEST IF SCANNED TO COLUMN 71
         BE    KNOP                    YES- END OF CARD REACHED
         LA    GR3,1(GR3)              GO TO NEXT COLUMN
         B     KNAME                   CHECK FOR BLANK
KOMMD    LA    GR3,1(GR3)              SPACE TO NEXT COLUMN AFTER COMD
         OI    PARAMSW,BIT04           SET COMMAND SWITCH PARAM FOLLOW
         OI    SWITCHRD,BIT08          SET COMMAND BIT '08'
         NI    DELIMIN,RESET0          RESET DELIMITER INDICATORS
KABC     CLI   0(GR3),BLANKCOL         IS COLUMN BLANK
         BNE   SCAN                    NO- CHECK PARAMETER
         CR    GR3,GR5                 IS THIS THE END COLUMN
         BE    KNOP                    YES- END OF CARD REACHED
         LA    GR3,1(GR3)              ADJUST POINTER TO NEXT COLUMN
         B     KABC                    CONTINUE SCAN
KCONT    LA    GR3,SWITCHRD+16         SET POINTER TO COLUMN 16
         NI    DELIMIN,RESET0          CLEAR DELIMITER SWITCHES
SCANR    NI    SWITCHRD,X'F7'          RESET COMMAND BIT
SCAN     NI    SWITCHRD,X'98'          RESET ALL BUT ERROR, 1ST ENTRY
         NI    PARAMSW,X'14'           RESET ALL BITS BUT COMD CNTL SW
         MVC   DELIMIN2(1),DELIMIN     SAVE DELIMITER SWITCH SETTINGS
         NI    COL72LG,X'0C'           RESET EXIT CONTROL SWITCH
         NI    DELIMIN,RESET0          CLEAR DELIMITER SWITCH
         SR    GR2,GR2                 CLEAR REGISTER
         LR    GR1,GR3                 SAVE POINTER TO PRESENT COLUMN
         LA    GR5,LASTCOLM            LOAD ADDRESS OF END COLUMN
KOMPAR   CLI   0(GR3),EQUAL            IS CHARACTER A DELIMITER
         BNH   DELIMIT                 YES-'EQUAL' CHARACTER OR LOWER
KOMPARA  LA    GR2,1(GR2)              ADD 1 TO THE LENGTH.
         CR    GR3,GR5                 IS THIS THE END COLUMN
         BE    KPART                   YES-GO TO PARTIAL PARAMETER SAVE
         LA    GR3,1(GR3)              UP POINTER TO NEXT COLUMN
         B     KOMPAR                  CONTINUE SCANNING FOR DELIMITER
KNOP     OI    SWITCHRD,BIT80          FLAG AS NO COMD OR PARAM ON CARD
         LM    1,2,ZERO                CLEAR LENGTH AND SCAN REGISTERS
KNOPAR   OI    SWITCHRD,BIT40          NO KEYWORD OR PARAMETERS FOLLOW
KPASS    LA    GR3,1(GR3)              UP POINTER TO NEXT COLUMN
         NI    PARAMSW,X'EB'           CLEAR ALL BUT BYPASS-PART PARAM.
         ST    GR3,STORGR3             SAVE REG3 FOR NEXT ENTRY
         LM    3,15,REGSV6+12          RESTORE REGISTERS 3-15, 1,2 SET
         BR    LINK14                  RETURN TO USER.
DELIMIT  CLI   0(GR3),PERIOD           IS THIS A PERIOD.
         BE    KOMPARA                 YES-THIS IS OKAY.
         CLI   0(GR3),MINUS            IS THIS A HYPHEN.
         BE    KOMPARA                 YES-THIS IS OKAY.
         CR    GR3,GR5                 IS THIS THE END COLUMN.
         BE    SETCC2                  YES- SET INDICATOR
         OI    COL72LG,BIT40           SET DELIMITER BEFORE LAST SWITCH
         TM    PARAMSW,BIT10           IS PARTIAL PARAMETER SWITCH ON
         BC    1,KPPAR                 YES-COMPLETE PARAMETER
         B     TESTPAR                 CHECK PARAMETER
LENGTH0  OI    COL72LG,BIT01           SET LENGTH EQUAL TO ZERO
         B     DELIM                   CHECK DELIMITERS
SETCC2   OI    COL72LG,BIT20           SET DELIMITER IN LAST SWITCH
         TM    PARAMSW,BIT10           IS PARTIAL PARAMETER SWITCH ON
         BC    1,KTERBY                YES- LENGTH IS TOO LONG
TESTPAR  LTR   GR4,GR2                  LOAD PARM LENGTH         S20201
         BC    8,LENGTH0               LENGTH EQUALS ZERO, SET SWITCH
         OI    COL72LG,BIT02           SET LENGTH GREATER THAN ZERO
DELIM    CLI   0(GR3),EQUAL            TEST IF DELIMITER IS AN EQUAL
         BE    KEY                     YES- GO TO KEY WORD ROUTINE
         CLI   0(GR3),COMMA            TEST FOR COMMA
         BE    PARAMC                  YES- GO TO PARAMETER ROUTINE
         CLI   0(GR3),BLANKCOL         TEST FOR BLANK
         BE    PARBLANK                YES- GO TO HANDLE BLANK PARAM
         OI    SWITCHRD,BIT80          SET ERROR BIT
         TM    COL72LG,BIT20           IS DELIMITER IN END COLUMN
         BC    1,KSETP                 YES- SET PARAMETER FOLLOWS SW.
KINVAL   OI    SWITCHRD,BIT80          SET INVALID DELIMITER ERROR SW
         LA    GR2,1(GR2)              ADJUST LENGTH REGISTER
         LA    GR3,1(GR3)              ADJUST SCAN POINTER
         CLI   0(GR3),EQUAL            TEST FOR DELIMITER
         BNH   KINV                    YES- TWO DELIMITERS IN A ROW
         CR    GR3,GR5                 END COLUMN
         BL    KINVAL                  NO- SCAN SOME MORE
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    1,KTERBY                YES
         LA    GR2,1(GR2)              UP LENGTH REGISTER
         B     KPTERR                  ESTABLISH PARAMETER
KINV     TM    PARAMSW,BIT04           IS COMMAND CONTROL SWITCH ON
         BC    1,KPCMD                 YES- ADJUST POINTER TO NEXT ONE
PRFOL    OI    PARAMSW,BIT20           SET PARAMETER FOLLOWS SWITCH
         B     KPASS                   GO TO RETURN
KBYPO    CLI   SWITCHRD+72,BLANKCOL    IS COLUMN 72 BLANK
         BNE   KGTCD                   NO- GET ANOTHER CARD
         NI    SWITCHRD,BIT10          RESET PARTIAL PARAMETER SWITCH
         NI    PARAMSW,RESET0          RESET ENTRY CONTROL SWITCH
         NI    PRNTSW,X'DE'            RESET EXTRANEOUS BITS
         B     KGTCD                   READ A CARD
KIRSCD   OI    SWITCHRD,BIT10          SET FIRST ENTRY SWITCH
         SR    GR3,GR3                 CLEAR SCAN REGISTER
         STC   GR3,PARAMSW             CLEAR PARAMETER SWITCH
         STC   GR3,COL72LG             CLEAR COLUMN 72 SWITCH
KGTCD    LA    GR2,CARDBUFF            ADDRESS OF INPUT BUFFER
         BAL   LINK15,SYSIN            READ A CARD FROM INPUT DEVICE
         TM    PRNTSW,X'20'            TEST DELAY PRINT SETTING
         BC    8,KGTCDR                DD NOT PRINT CARD NOW
         BAL   GR9,KPRNT               PRINT CARD
KGTCDR   NI    COL72LG,RESET0          CLEAR COLUMN 72 SWITCH
         CLI   SWITCHRD+72,BLANKCOL    IS COLUMN 72 BLANK
         BNE   CLMNOTBL                COLUMN 72 IS NOT BLANK
         OI    COL72LG,BIT08           SET 72 BLANK SWITCH
RETURN   TM    SWITCHRD,BIT40          IS BYPASS SWITCH ON
         BC    1,KBYPO                 YES- BYPASS CARD
         B     KPFOL                   START SCAN
CLMNOTBL OI    COL72LG,BIT04           SET 72 NOT BLANK SWITCH IN CASE
         B     RETURN                  CHECK SOME MORE
PARBLANK TM    PARAMSW,BIT04           IS COMMAND SWITCH ON
         BC    1,KPCMD                 YES-GO TO ADJUST POINTER
         OI    SWITCHRD,BIT02          SET PARAMETER PRESENT BIT
         OI    DELIMIN,BIT08           SET BLANK DELIMITER SWITCH
DECID    TM    COL72LG,BIT20           IS DELIMITER IN END COLUMN
         BC    1,KWENT                 YES- SET TO READ A CARD
         TM    COL72LG,BIT01           IS LENGTH EQUAL TO ZERO
         BC    1,KFORZRO               YES-SET UP FOR ZERO LENGTH
         OI    PARAMSW,BIT20           SET PARAMETER FOLLOWS SWITCH
         TM    DELIMIN,BIT08           IS DELIMITER A BLANK
         BC    8,KPASS                 NO- RETURN WITH POINTERS SET
KETBYP   OI    SWITCHRD,BIT40          SET BYPASS SWITCH
         B     KPASS                   GET SET TO RETURN
KFORZRO  LM    GR1,GR2,ZERO            CLEAR REGISTERS 1 AND 2
         TM    DELIMIN,BIT08           IS DELIMITER A BLANK
         BC    1,KETRDCD               GO TO SET READ CARD AND CONTINUE
         OI    PARAMSW,BIT20           SET PARAMETER FOLLOWS SWITCH
         TM    DELIMIN,BIT80           IS DELIMITER AN EQUAL SIGN
         BC    1,KTER                  YES- SET UP ERROR CONDITION
         B     KPASS                   RETURN
KETRDCD  OI    PARAMSW,X'48'           SET TO READ CARD AND CONTINUE
         TM    DELIMIN2,BIT40          IS LAST DELIMITER A COMMA
         BC    1,KGTCD                 YES- READ A CARD
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    8,KETBYP                NO- SET BYPASS SWITCH AND RETURN
         LA    GR4,SWITCHRD+16         CARD COLUMN 16
         CR    GR3,GR4                 IS SCAN ON COLUMN 16
         BE    KETBYP                  YES- SET BYPASS SWITCH
         TM    DELIMIN2,EQUAL          WAS LAST DELIMITER AN EQUAL
         BC    1,KETBYP                YES- SET BYPASS SWITCH
KTERBY   OI    SWITCHRD,BIT40          SET BYPASS SWITCH
KTER     OI    SWITCHRD,BIT80          SET ERROR SWITCH
         B     KPASS                   RETURN
KWENT    OI    PARAMSW,X'48'           SET TO READ CARD AND CONTINUE
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    1,KETCTBL               YES- SET BYPASS SWITCH AND CHECK
         TM    COL72LG,BIT01           IS LENGTH EQUAL TO ZERO
         BC    1,KZERO                 NO- RETURN
         TM    DELIMIN,BIT08           IS DELIMITER A BLANK
         BC    1,KETBYP                YES- SET BYPASS SWITCH, RETURN
         B     KPASS                   RETURN
KZERO    SR    GR1,GR1                 CLEAR REGISTER
         TM    DELIMIN,BIT80           IS DELIMITER AN EQUAL
         BC    1,KTER                  YES- SET ERROR SWITCH
         TM    DELIMIN,BIT40           IS DELIMITER A COMMA
         BC    8,KGTCD                 NO- READ A CARD
         CLC   DELIMIN(1),DELIMIN2     IS DELIMITER SAME AS LAST
         BE    KPASS                   YES- RETURN
KETCTBL  OI    SWITCHRD,BIT40          SET BYPASS SWITCH
         TM    DELIMIN,BIT40           IS DELIMITER A COMMA
         BC    1,KTER                  YES- SET ERROR SWITCH
         B     KPASS                   RETURN
KEY      OI    SWITCHRD,BIT04          SET KEY WORD SWITCH
         OI    DELIMIN,BIT80           SET DELIMITER SWITCH
         B     DECID                   GO TO CHECK DELIMITER
PARAMC   OI    SWITCHRD,BIT02          SET PARAMETER BIT
         OI    DELIMIN,BIT40           SET DELIMITER COMMA SWITCH
         B     DECID                   GO TO CHECK DELIMITER
KPART    TM    PARAMSW,BIT10           IS PARTIAL PARAMETER SWITCH ON
         BC    1,KTERBY                YES-SET BYPASS AND ERROR SWITCH
KPTERR   OI    PARAMSW,BIT10           SET PARTIAL PARAMETER SWITCH
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    1,KLAST                 YES- GO TO SET PARAMETER BIT
         MVI   SAVEPAPR,BIT40          FLAG PARTIAL PARAMETER STORED
         MVC   SAVEPAPR+1(19),SAVEPAPR STORE PARTIAL PARAMETER
         STC   GR2,SWITCHRD+82         SAVE LENGTH OF PARTIAL PARAMETER
         BCTR  GR2,0                   DECREMENT COUNT FOR MOVE
         EX    GR2,MOVEP               MOVE PARTIAL PARAMETER TO BUFFER
         OI    PARAMSW,BIT40           SET CONTINUE BIT
         TM    COL72LG,BIT04           IS COLUMN 72 BLANK
         BC    1,KGTCD                 NO- GET A CARD
         OI    SWITCHRD,BIT80          YES- FLAG AS ERROR
         B     KETBYP                  SET BYPASS SWITCH
KLAST    OI    SWITCHRD,BIT02          SET PARAMETER BIT
         B     KETBYP                  SET BYPASS BIT
KPPAR    SR    GR4,GR4                 CLEAR REGISTER
         IC    GR4,SWITCHRD+82         LENGTH OF FIRST PART.
         LTR   GR2,GR2                 IS LENGTH OF 2ND PART ZERO.
         BC     8,KOMPL                YES-THE PARAMETER IS COMPLETE.
         LA     GR6,SAVEPAPR           NO--ADDRESS OF FIRST PART.
         AR    GR6,GR4                 ADDRESS TO MOVE IN 2ND PART.
         BCTR  GR2,0                   DECREMENT COUNT FOR MOVE
         EX    GR2,MOVEPP              RECREATE COMPLETE PARAMETER.
         LA    GR2,1(GR2)              UP COUNT TO WHERE IT WAS
KOMPL    AR     GR2,GR4                TOTAL LENGTH OF PARAMETER.
         LA    GR1,SAVEPAPR            LOAD PARAMETER BUFFER ADDRESS
         NI    COL72LG,X'0C'           CLEAR LENGTH BITS, LEAVE'72' BIT
         OI    COL72LG,X'42'           SET LENGTH GREATER THAN ZERO
         MVC   DELIMIN2(1),DELIMIN     SAVE DELIMITER SWITCH SETTINGS
         NI    DELIMIN,RESET0          CLEAR DELIMITER BITS
         NI    PARAMSW,X'EF'           RESET PARTIAL PARAMETER SWITCH
         B     DELIM                   CHECK DELIMITERS
KPCMD    LA    GR3,1(GR3)              ADJUST POINTER TO NEXT COLUMN
         CLI   0(GR3),BLANKCOL         IS COLUMN BLANK
         BNE   KPCMA                   NO- CHECK FOR COMMA
         CR    GR5,GR3                 IS THIS THE LAST COLUMN
         BE    KNOPAR                  YES- NO PARAMETER FOLLOWS
         B     KPCMD                   CONTINUE SCAN
KPCMA    CLI   0(GR3),COMMA            IS COMMA THE FIRST CHARACTER
         BE    KNOPAR                  YES- NO PARAMETER FOLLOWS
         BCTR  GR3,0                   BACK UP REGISTER 3 TO PARAMETER
         B     PRFOL                   GO TO SET UP FOR PARAMETER
KSETP    OI    PARAMSW,BIT10           SET PARAMETER FOLLOWS SWITCH
         LA    GR2,1(GR2)              UP LENGTH
         B     KPTERR                  GO TO SET PARTIAL PARAMETER BIT
KPRNT    MVC   PRWD(80),CARDBUFF       MOVE CONTROL CARD TO BUFFER
WASH     LA    GR1,71                  SIZE OF CARD IN BYTES    49363
         ST    GR9,SAVE9               SAVE REGISTER 9 TEMPORARILY
         LA    GR9,PRWD                 LOAD BUFFER ADDRESS     49363
         AR    GR9,GR1                  LOCATE BUFFER AT END    49363
RANDLE   CLI   0(GR9),C' '              BLANK SPACES            49363
         BNE   MTS                      NO - EXIT               49363
         BCTR  GR9,0                    DECREMENT BUFFER ADDR   49363
         BCT   GR1,RANDLE               DECREMENT COUNTER       49363
MTS      LA    GR1,1(GR1)               ADD 1 TO COUNTER        49363
         BAL   GR9,PRNT                PRINT THE CARD
         L     GR9,SAVE9               RELOAD REGISTER 9
         BR    GR9                     RETURN TO USER
MOVEP    MVC   SAVEPAPR(1),0(GR1)      STORE PARTIAL PARAMETER
MOVEPP   MVC   0(1,GR4),0(GR1)         RECREATES PARAMETER
     EJECT
*    *********************************************************
*    * COMMON I/O STATUS & SENSE BIT ERROR INTERPRET ROUTINE *
*    *********************************************************
         SPACE 3
NEXTBIT  LA    ERRLNK,2(ERRLNK)        ADDR. OF NEXT STATUS/SENSE BIT.
         SPACE 1
ERRTEST  SR    ERREG1,ERREG1           ZERO REGISTER---NORMAL ENTRY---
         IC    ERREG1,0(ERRLNK)        GET SENSE OR STATUS CODE BIT
         TM    0(ERRLNK),STATMASK      IS STATUS BYTES TO BE TESTED ?
         BC    1,STATTEST              YES--GO TO STATUS TEST ROUTINE.
         LH    ERREG4,24(UCBREG)       NO--GET 2 SENSE BYTES FROM UCB.
         SPACE 1
SHIFTBIT LNR   ERREG1,ERREG1           COMPLMT CODE BIT/GET SHIFT FACTR
         LA    ERREG3,1                INITIATE REG TO 1
         SLA   ERREG3,15(ERREG1)       SHIFT TO FIND POSITION OF BIT
         BC    1,ERREND                END OF TEST
         NR    ERREG3,ERREG4           TEST IF CODE BIT IS ON
         BC    8,NEXTBIT               NO, GET THE NEXT BIT
         SPACE 1
ERREND   SR    ERREG1,ERREG1           ZERO REGISTER
         IC    ERREG1,1(ERRLNK)        GET DISPLACEMENT
         BC    15,0(ERREG1,ERRLNK)     BRANCH TO PROPER ROUTINE
         SPACE 1
STATTEST LH    ERREG4,20(UCBREG)       GET 2 STATUS BYTES FROM UCB.
         N     ERREG1,STATZERO         ZERO STATUS CODE BIT
         BC    15,SHIFTBIT             BR-CHECK STATUS BITS
         SPACE 3
         DS    0F
STATZERO DC    X'0000000F'             ZEROES THE HIGH ORDER OF STATUS
STATMASK EQU   X'10'                   '10' INDICATES A STATUS BYTE
BUFCCW   CCW   X'24',SAVECC1,X'30',128  DUMP BUFLOG CCW          S20201
SAVECCW  DC    H'0'                     ADDR OF CCW IN ERROR     S20201
SAVECC1  DC    F'0'                     READ BUFLOG AREA         S20201
         EJECT
*       ************************************************************
*       *  FOLLOWING ROUTINES USED BY 2301,2302,2303,2305,2311     *
*       *  2314,2321 AND 3330 DASD DEVICES.                        *
*       ************************************************************
         SPACE 2
*    DASD TEST CHANNEL STATUS BYTES ROUTINE.
         SPACE 2
ERR100   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR101-ERR100-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR102-ERR100-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR103-ERR100-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR104-ERR100-10)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR130A-ERR100-12)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR105-ERR100-14)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR106-ERR100-16)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR107-ERR100-18)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR108-ERR100-20)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR109-ERR100-22)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR110-ERR100-24)
         SPACE 2
*    2302,2303,2311,2314 TEST CHANNEL SENSE BYTES
         SPACE 2
ERR130A  CLI   L0(UCBREG),T2301         2301 DEVICE              S20201
         BE    ERR730                  YES, TEST SENSE FOR 2301  S20201
         CLI   L0(UCBREG),T23A5         IS DEVICE A 2305-1       S20201
         BE    ERRB00                   USE 2305-1 SENSE RTN     S20201
         CLI   L0(UCBREG),T23C5         IS DEVICE A 2305-2       S20201
         BE    ERRB00                   USE 2305-2 SENSE RTN     S20201
         CLI   L0(UCBREG),T3330         IS DEVICE A 3330         S20201
         BE    ERRB00                   USE 3330 SENSE BYTE RTN  S20201
         CLI   L0(UCBREG),T333C         IS DEVICE A 3330-C      XL03145
         BE    ERRB00                   USE 3330 SENSE BYTE RTN XL03145
         CLI   L0(UCBREG),T2321         2321 SENSE               S20201
         BE    ERR900
ERR130   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTE TEST
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR131-ERR130-4)
         DC    X'0C'                   NO RECORD FOUND
         DC    AL1(ERR132-ERR130-6)
         DC    X'07'                   SEEK CHECK
         DC    AL1(ERR139-ERR130-8)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR133-ERR130-10)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR134-ERR130-12)
         DC    X'04'                   DATA CHECK
         DC    AL1(ERR135-ERR130-14)
         DC    X'05'                   OVERRUN
         DC    AL1(ERR137-ERR130-16)
         DC    X'00'                    COMMAND REJECT           M0158
         DC    AL1(ERR138-ERR130-18)                             M0158
         DC    X'0E'                    MISSING ADDRESS MARKER   M0158
         DC    AL1(ERR145-ERR130-20)                             M0158
         DC    X'06'                   TRACK CONDITION CHECK
         DC    AL1(ERR140-ERR130-22)
         DC    X'09'                   TRACK OVERRUN
         DC    AL1(ERR141-ERR130-24)
         DC    X'0A'                   END OF CYLINDER
         DC    AL1(ERR142-ERR130-26)
         DC    X'0D'                   FILE PROTECT
         DC    AL1(ERR143-ERR130-28)
         DC    X'0F'                   DASD OVERFLOW INCOMPLETE
         DC    AL1(ERR144-ERR130-30)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR146-ERR130-32)
         SPACE 2
*    EXITS TO DASD ERROR RECOVERY ROUTINES
         SPACE 2
ERR101   BC    15,CHANERR              GO TO CHANNEL CONTROL CHECK RTN.
         SPACE 1
ERR102   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
         SPACE 1
ERR103   BAL   LINK15,TWOTRY            RETRY CCW LIST
         B     CHDATA                   GO TO CHANNEL DATA CHECK ROUTNE
         SPACE 1
ERR104   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE.
         SPACE 1
ERR105   BAL   LINK15,TENTRY            RETRY ERROR CCW LIST 10 TIMES
         BC    15,CHAINCHK             SOLID ERROR-GO TO CHAINCHK RTN.
         SPACE 1
ERR106   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR107   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
         SPACE 1
ERR108   BC    15,UNITCEPT             GO TO UNIT EXCEPTION ROUTINE
         SPACE 1
ERR109   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR110   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR131   BAL   LINK15,TENTRY           RETRY ERROR CCW UP TO 10 TIMES.
         BC    15,EQUIPCHK        SOLID ERROR-GO TO EQUIPCHK ROUTINE
         SPACE 1
ERR132   CLI   L0(UCBREG),T3330        IS IT 3330 ?            @ZM42053
         BNL   ERR135                  YES - USE 3330 RTN      @ZM42053
         TM    25(UCBREG),X'02'        IS MISS ADD MARK ALSO   @ZM42053
         BO    ERR132A                   YES - DO TWO SEEK
         BAL   LINK15,CYLNCHK            NO - CHECK FOR CORRECT CYLIND
         BAL   LINK14,TENSEEK          SEEK 10 TIMES IF ERROR PERSISTS
         B     NORECFND                SOLID - GO TO NORECFND RTN.
ERR132A  EQU   *                                               @Z30RSHG
         SPACE 1
         CLI   L0(UCBREG),T2303         IS THIS A 2303 DRUM    @Z30RSHG
         BNE   ERR132B                 NO--PROCESS AS NORMAL ERROR.
         TM    SPIOSW,X'F0'            IS THIS A SURFACE ANALYSIS TEST.
         BO    SURCHECK                YES--GO PROCESS ERROR.
ERR132B  BAL   LINK14,T3SEEK           RECALIBRAYE/RETRY 3 TIMES.
         B     NORECFND                   SOLID
         SPACE 1
ERR133   BAL   LINK15,INTVREQ          LINK TO INTERVENTION REQ. ROUTIN
         MVC   READYDEV(27),DISKMSG    INSERT DISKMSG//CLEAR CUU FIELD.
         MVC   READYDEV+20(3),IOCONV+1 SET DEVICE ADDR. IN OPR MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
         SPACE 1
ERR134   BAL   LINK15,TENTRY           RETRY ERROR CCW TENTIMES
         BC    15,BUSOUT
         SPACE 1
ERR135   TM    SPIOSW,X'F0'            IS SURFACE ANALYSIS SWITCH ON?
         BC    1,SURCHECK              YES-GO TO ENTRY COUNTER RTN.
         BAL   LINK15,SIXTTRY          GO TO 16X16 RECOVERY ROUTINE.
         BC    15,DATACHK              SOLID ERROR-GO TO DATACHK RTN.
         SPACE 1
ERR137   BAL   LINK15,TENTRY           RETRY ERROR CCW TEN TIMES
         BC    15,OVRRUN               SOLID ERROR-GO TO OVERRUN RTN.
         SPACE 1
ERR138   TM    25(UCBREG),X'02'         IS WRITE INHIBIT ON      M0158
         BO    INHIBIT                  YES,PRINT ERROR MSG      M0158
         B     COMREJ                   NO,USE COMMAND REJ RTN   M0158
         SPACE 1
ERR139   BAL   LINK14,TENSEEK          SEEK 10 TIMES IF ERROR PERSISTS.
         BC    15,SEEKCHK              SOLID ERROR-GO TO SEEKCHK RTN.
         SPACE 1
ERR140   B     TRACKCHK                 GO TO FILE PROTECT ROUTINE
         SPACE 1
ERR141   CLI   SPIOSW,X'F0'            OCCUR DURING SURFACE ANALYSIS.
         BNE   TROVRRUN                NO--GO GIVE ERROR MESSAGE.
         CLI   UCBTO,T2314              IS THIS A 2314           S20201
         BNE   TROVRRUN                NO--GO GIVE ERROR MESSAGE.
         LA    GR3,READHOME            READ HOME ADDRESS CCW.
         BAL   LINK9,STARTIO           READ IN THE HOME ADDRESS.
         TM    HOMEBUF,X'02'           WAS THIS A DEFECTIVE TRACK.
         BZ    TROVRRUN                NO--UNEXPECTED TRACK OVERRUN.
         B     ALTE2314                YES-TRACK HAD BAD HA-R0 AREA.
         SPACE 1
ERR142   BC    15,ENDOFCYL             GO TO END OF CYLINDER ROUTINE
         SPACE 1
ERR143   BAL   LINK15,CYLNCHK          VERIFY SEEKED TO CORRECT CYLINDE
         BAL   LINK14,TENSEEK          SEEK 10 TIMES IF ERROR PERSISTS.
         BC    15,FILEPROT             SOLID ERROR-GO TO FILEPROT RTN.
         SPACE 1
ERR144   BC    15,OVRFLOW              GO TO OVERFLOW INCOMPLETE RTN.
         SPACE 1
ERR145   BAL   LINK15,TENTRY           RETRY ERROR CCW TEN TIMES
         B     MISSMARK                GO TO MISSING ADDRESS MARKER RT
         SPACE 1
ERR146   BC    15,ENDTEST              GO TO END OF TEST ROUTINE.
         EJECT
*       ********************************************
*       *  FOLLOWING ROUTINES USED BY 1442 READER  *
*       ********************************************
         SPACE 1
*    1442 TEST CHANNEL STATUS BYTES ROUTINE.
         SPACE 2
ERR200   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTORL CHECK
         DC    AL1(ERR201-ERR200-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR202-ERR200-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR203-ERR200-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR204-ERR200-10)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR204-ERR200-12)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR204-ERR200-14)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR230-ERR200-16)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR205-ERR200-18)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR206-ERR200-20)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR207-ERR200-22)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR208-ERR200-24)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR209-ERR200-26)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR210-ERR200-28)
      SPACE 1
*    1442 TEST CHANNEL SENSE BYTES ROUTINE.
         SPACE 1
ERR230   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR231-ERR230-4)
         DC    X'07'                   SHOULD NOT OCCUR
         DC    AL1(ERR231-ERR230-6)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR232-ERR230-8)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR233-ERR230-10)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR234-ERR230-12)
         DC    X'04'                   DATA CHECK
         DC    AL1(ERR235-ERR230-14)
         DC    X'05'                   OVERRUN
         DC    AL1(ERR236-ERR230-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR237-ERR230-18)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR238-ERR230-20)
      SPACE 1
*    EXITS TO 1442 ERROR RECOVERY ROUTINES
         SPACE 1
ERR201   BC    15,CHANERR              GO TO CHANNEL CONTROL CHECK RTN.
         SPACE 1
ERR202   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
         SPACE 1
ERR203   BC    15,CHDATA               GO TO CHANNEL DATA ERROR ROUTINE
         SPACE 1
ERR204   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR205   BC    15,CHAINCHK             GO TO CHAINING CHECK ROUTINE
         SPACE 1
ERR206   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR207   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
         SPACE 1
ERR208   BC    15,UNITCEPT             GO TO UNIT EXCEPTION ROUTINE
         SPACE 1
ERR209   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR210   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR231   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR232   LA    GR2,READCHK             ADDRESS OF READER CHECK MESSAGE.
         LA    GR1,60                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO TYPE MESSAGE//WAIT ROUTINE
         SPACE 1
ERR233   BAL   LINK15,INTVREQ          LINK//INTERVENTION REQUIRED RTN.
         MVC   READYDEV(27),READYRDR   INSERT READYRDR/CLEAR CUU FIELD.
         MVC   READYDEV+22(3),IOCONV+1 SET DEV9CE ADDR. IN OPR MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
         SPACE 1
ERR234   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT RTN.
         SPACE 1
ERR235   LA    GR2,INVALCRD            ADDRESS OF INVALID CARD CODE MSG
         LA    GR1,64                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO TYPE MESSAGE//WAIT ROUTINE
         SPACE 1
ERR236   BC    15,OVRRUN               GO TO OVERRUN CHECK ROUTINE
         SPACE 1
ERR237   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
         SPACE 1
ERR238   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       ****************************************************
*       *  FOLLOWING ROUTINES FOR 2400 MAGNETIC TAPE UNIT  *
*       ****************************************************
         SPACE 2
*    2400 TEST CHANNEL STATUS BYTES ROUTINE
         SPACE 2
ERR300   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE TEST RTN.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR301-ERR300-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR302-ERR300-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR303-ERR300-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR304-ERR300-10)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR330-ERR300-12)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR305-ERR300-14)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR306-ERR300-16)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR307-ERR300-18)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR308-ERR300-20)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR309-ERR300-22)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR310-ERR300-24)
         SPACE 2
*    2400 TEST CHANNEL SENSE BYTES ROUTINE.
         SPACE 2
ERR330   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR334-ERR330-4)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR332-ERR330-6)
         DC    X'01'                   INTERVENTION REQ
         DC    AL1(ERR333-ERR330-8)
         DC    X'05'                   OVER RUN
         DC    AL1(ERR336-ERR330-10)
         DC    X'08'                   NOISE
         DC    AL1(ERR331-ERR330-12)
         DC    X'04'                   DATA CHECK
         DC    AL1(ERR335-ERR330-14)
         DC    X'07'                   DATA CONVERT CHECK
         DC    AL1(ERR337-ERR330-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR338-ERR330-18)
         DC    X'0C'                   TAPE AT LOAD POINT
         DC    AL1(ERR339-ERR330-20)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR340-ERR330-22)
         SPACE 2
*    EXITS TO 2400 ERROR RECOVERY ROUTINES.
         SPACE 2
ERR301   BC    15,CHANERR              GO TO CHANNEL CONTROL CHECK RTN.
         SPACE 1
ERR302   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
         SPACE 1
ERR303   BC    15,CHDATA               GO TO CHANNEL DATA CHECK ROUTINE
         SPACE 1
ERR304   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR305   BAL   LINK15,BACKSPC          GO TO BACKSPACE ROUTINE
         BAL   LINK15,SIXTRY           RETRY ERROR CCW LIST 6 TIMES.
         BC    15,CHAINCHK             SOLID ERROR-GO TO CHAINCHK RTN.
         SPACE 1
ERR306   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR307   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTING
         SPACE 1
ERR308   BC    15,UNITCEPT             GO TO UNIT EXCEPTION ROUTINE.
         SPACE 1
ERR309   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR310   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR331   BC    15,NOISETST             TEST FOR NOISE RECORD ROUTINE.
         SPACE 1
ERR332   BC    15,EQUIPCHK             GO TO EQUIPMENT CHECK ROUTINE
         SPACE 1
ERR333   BAL   LINK15,INTVREQ          LINK TO INTERVENTION REQ ROUTINE
         MVC   READYDEV(27),TAPEMSG    INSERT DISKMSG//CLEAR CUU FIELD.
         MVC   READYDEV+20(3),IOCONV+1 SET DEVICE ADDR. IN OPR MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
         SPACE 1
ERR334   BAL   LINK15,BACKSPC          BACKSPACE THE TAPE ONE RECORD.
         BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT ROUTINE
         SPACE 1
ERR335   BC    15,TAPEDATA             TEST READ OR WRITE OPERATION
         SPACE 1
ERR336   BAL   LINK15,BACKSPC          LINK TO TAPE BACKSPACE ROUTINE
         BAL   LINK15,SIXTRY           RETRY ERROR CCW UP TO SIX TIMES
         BC    15,OVRRUN               SOLID ERROR-GO TO OVERRUN RTN.
         SPACE 1
ERR337   BC    15,CONVTERR             GO TO DATA CONVERT ERROR ROUTINE
         SPACE 1
ERR338   TM    25(UCBREG),X'02'        DID FILE PROTECT OCCUR ALSO.
         BC    1,FILEPROT              YES..GO TO FILE PROTECTED RTN.
         BC    14,COMREJ               NO...GO TO COMMAND REJECT RTN.
         SPACE 1
ERR339   BC    15,TAPELP               GO TO LOAD POINT ERROR RTN.
         SPACE 1
ERR340   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       *********************************************
*       *  FOLLOWING ROUTINES USED BY 1403 PRINTER  *
*       *********************************************
         SPACE 2
*    1403 TEST CHANNEL STATUS BYTES ROUTINE.
         SPACE 2
ERR400   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTORL CHECK
         DC    AL1(ERR401-ERR400-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR402-ERR400-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR403-ERR400-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-10)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-12)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-14)
         DC    X'1F'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-16)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR430-ERR400-18)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR405-ERR400-20)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR406-ERR400-22)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR407-ERR400-24)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR408-ERR400-26)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR409-ERR400-28)
         SPACE 2
*    1403 TEST CHANNEL SENSE BYTES ROUTINE.
         SPACE 1
ERR430   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'04'                   SHOULD NOT OCCUR
         DC    AL1(ERR431-ERR430-4)
         DC    X'05'                   SHOULD NOT OCCUR
         DC    AL1(ERR431-ERR430-6)
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR431-ERR430-8)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR432-ERR430-10)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR433-ERR430-12)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR434-ERR430-14)
         DC    X'07'                   CHANNEL 9
         DC    AL1(ERR435-ERR430-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR436-ERR430-18)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR437-ERR430-20)
ERR432   EQU   *
         CLI   UCBSYO,T3800            IS DEVICE 3800?         @Z40MSTT
         BNE   ERR432Y                 NO, GO TELL ABOUT PRT CK@Z40MSTT
         SPACE
*   3800  TEST EQUIPMENT CHECK ROUTINE                         @Z40MSTT
         SPACE
ERR432X  EQU   *                                               @Z40MSTT
         BAL   ERRLNK,ERRTEST          GO CHECK ERROR REASON.  @Z40MSTT
         DC    X'08'                   HARDWARE ERROR.         @Z40MSTT
         DC    AL1(ERR432A-ERR432X-4)                          @Z40MSTT
         DC    X'09'                   PERMANENT ERROR.        @Z40MSTT
         DC    AL1(ERR432B-ERR432X-6)                          @Z40MSTT
         DC    X'0A'                   ERROR LOG BUFFER FULL.  @Z40MSTT
         DC    AL1(ERR432C-ERR432X-8)                          @Z40MSTT
         DC    X'0B'                   CANCEL KEY.             @Z40MSTT
         DC    AL1(ERR435-ERR432X-10)                          @Z40MSTT
         DC    X'2F'                   END OF TEST.            @Z40MSTT
         DC    AL1(ERR437-ERR432X-12)                          @Z40MSTT
      SPACE 1
*    EXITS TO 1403 ERROR RECOVERY ROUTINES.
      SPACE 1
ERR401   BC    15,CHANERR              GO TO CHANNEL ERROR ROUTINE
         SPACE 1
ERR402   BC    15,INFCERR              GO TO INTERFACE ERROR ROUTINE
         SPACE 1
ERR403   BC    15,CHDATA               GO TO CHANNEL DATA ERROR ROUTINE
         SPACE 1
ERR404   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR405   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR406   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
         SPACE 1
ERR407   BC    15,SKIPTO1              GO TO CARRIAGE SKIP TO 1 ROUTINE
         SPACE 1
ERR408   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR409   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR431   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR432A  EQU   *                       HARDWARE ERROR.         @Z40MSTT
ERR432B  EQU   *                       PERMANENT ERROR.        @Z40MSTT
         B     EQPERR                  GO HANDLE EQUIPMENT ERR.@Z40MSTT
         SPACE
ERR432C  EQU   *                       LOG BUFFER FULL.        @Z40MSTT
         B     LOGERR                  GO HANDLE LOG BUFF FULL.@Z40MSTT
         SPACE
ERR432Y  EQU   *                                               @Z40MSTT
         LA    GR2,PRINTCHK            ADDR OF PRINT CK MSG    @Z40MSTT
         LA    GR1,59                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO PRINT OPERATOR MSG//WAIT//
         SPACE 1
ERR433   LA    GR7,UCBSYO              GET ADDRESS OF SYSOUT DEVICE.
         BAL   LINK15,UNITADDR         CONVERT HEX UNIT ADDRESS TO BCD.
         MVC   READYDEV(27),READYPRT   INSERT READYPRT//CLEAR CUU FIELD
         MVC   READYDEV+23(3),UNITBUF+1  INSERT DEVICE ADDR IN MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
         SPACE 1
ERR434   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT RTN.
         SPACE 1
ERR435   MVC   REGSV5(64),ERRSAV1      RESTORE ORIGINAL P/P REGISTERS.
         B     IORTRN                  CHANNEL NINE SENSED//RETURN
*                                       OR CANCEL KEY 3800 ONLY@Z40MSTT
         SPACE 1
ERR436   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
         SPACE 1
ERR437   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*        *****************************************************
*       *  FOLLOWING ROUTINES USED BY 1052,2150 I/O WRITERS  *
*        *****************************************************
         SPACE 2
*    1052 I/O WRITER TEST CHANNEL STATUS BYTES ROUTINE.
         SPACE 2
ERR500   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR501-ERR500-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR502-ERR500-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR503-ERR500-8)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR504-ERR500-10)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR504-ERR500-12)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR530-ERR500-14)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR505-ERR500-16)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR506-ERR500-18)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR507-ERR500-20)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR508-ERR500-22)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR509-ERR500-24)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR510-ERR500-26)
         SPACE 2
*    1052 I/O WRITER TEST CHANNEL SENSE BYTES ROUTINE.
         SPACE 2
ERR530   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'07'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-4)
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-6)
         DC    X'05'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-8)
         DC    X'04'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-10)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR532-ERR530-12)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR533-ERR530-14)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR534-ERR530-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR535-ERR530-18)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR536-ERR530-20)
         SPACE 1
*    EXIT TO 1052 I/O WRITER ERROR RECOVERY ROUTINES.
         SPACE 1
ERR501   BC    15,CHANERR              GO TO CHANNEL CONTROL ERROR RTN.
         SPACE 1
ERR502   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
         SPACE 1
ERR503   BC    15,CHDATA               GO TO CHANNEL DATA CHECK ROUTINE
         SPACE 1
ERR504   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR505   BC    15,CHAINCHK             GO TO CHAINING CHECK ROUTINE
         SPACE 1
ERR506   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR507   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
         SPACE 1
ERR508   LM    0,15,ERRSAV1            RESTORE REGS TO RETRY TYPER CCW.
         TM    EDJTSW,X'01'             IS END OF TASK SW ON
         BO    EDJTF                      YES, GO TO END OF JOB
         B     ATTN                    RETRY THE TYPERWRITER AGAIN.
         SPACE 1
ERR509   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR510   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR531   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR532   TM    8(UCBREG),X'01'         TYPER IN READ OR WRITE STATUS.
         BC    14,FAILREAD             READ STATUS--PRINT MESSAGE//WAIT
         BAL   LINK15,TWOTRY           WRITE STATUS--RETRY TYPER CCW.
         B     WAITTRY                 GO TO WAIT//RETRY CCW ROUTINE.
FAILREAD LA    GR2,TYPEFAIL            ADDR OF I/OWRITER READ ERROR MSG
         LA    GR1,72                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO TYPE MESSAGE//WAIT ROUTINE
         SPACE 1
ERR533   B     WAITTRY                 GO TO RETRY THE CCW.
         SPACE 1
ERR534   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT ROUTINE
         SPACE 1
ERR535   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
         SPACE 1
ERR536   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       * ******************************************
*       *  FOLLOWING ROUTINES USED BY 1402 READER  *
*       ********************************************
         SPACE 2
*    1402 TEST CHANNEL STATUS BYTES ROUTINE.
         SPACE 2
ERR600   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR601-ERR600-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR602-ERR600-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR603-ERR600-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR604-ERR600-10)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR604-ERR600-12)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR604-ERR600-14)
         DC    X'1F'                   SHOULD NOT OCCUR
         DC    AL1(ERR604-ERR600-16)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR630-ERR600-18)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR605-ERR600-20)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR606-ERR600-22)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR607-ERR600-24)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR608-ERR600-26)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR609-ERR600-28)
      SPACE 1
*    1402 TEST CHANNEL SENSE BYTES ROUTINE.
      SPACE 1
ERR630   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE TEST RTN.
         DC    X'05'                   SHOULD NOT OCCUR
         DC    AL1(ERR631-ERR630-4)
         DC    X'07'                   SHOULD NOT OCCUR
         DC    AL1(ERR631-ERR630-6)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR632-ERR630-8)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR633-ERR630-10)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR634-ERR630-12)
         DC    X'04'                   DATA CHECK
         DC    AL1(ERR635-ERR630-14)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR636-ERR630-16)
         DC    X'06'                   UNUSUAL COMMAND SEQUENCE
         DC    AL1(ERR637-ERR630-18)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR638-ERR630-20)
      SPACE 1
*    EXITS TO 1402 ERROR RECOVERY ROUTINES.
         SPACE 1
ERR601   BC    15,CHANERR              GO TO CHANNEL CONTROL ERROR RTN.
         SPACE 1
ERR602   BC    15,INFCERR              GO TO INTERFACE CONTROL ERROR
         SPACE 1
ERR603   BC    15,CHDATA               GO TO CHANNEL DATA ERROR ROUTINE
         SPACE 1
ERR604   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR605   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR606   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
         SPACE 1
ERR607   BC    15,UNITCEPT             GO TO UNIT EXCEPTION ROUTINE
         SPACE 1
ERR608   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR609   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR631   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR632   LA    GR2,READCHK             ADDRESS OF READER CHECK MESSAGE.
         LA    GR1,60                  LENGTH OF MESSAGE IN BYTES
         BC    15,TYPEWAIT             GO TO TYPE MESSAGE//WAIT ROUTINE
         SPACE 1
ERR633   BAL   LINK15,INTVREQ          LINK//INTERVENTION REQUIRED RTN.
         MVC   READYDEV(27),READYRDR   INSERT READYRDR/CLEAR CUU FIELD.
         MVC   READYDEV+22(3),IOCONV+1 SET DEVICE ADDR. IN OPR MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
         SPACE 1
ERR634   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT ROUTINE
         SPACE 1
ERR635   LA    GR2,INVALCRD            ADDRESS OF INVALID CARD CODE MSG
         LA    GR1,64                  LENGTH OF MESSAGE.
         BC    15,TYPEWAIT             GO TO TYPE MESSAGE//WAIT ROUTINE
         SPACE 1
ERR636   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
         SPACE 1
ERR637   BC    15,SEQERR               GO TO UNUSUAL COMMAND SEQ. RTN.
         SPACE 1
ERR638   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       ************************************************
*       *  FOLLOWING ROUTINE USED BY 2301 DASD DEVICE  *
*       ************************************************
         SPACE 2
*    2301 TEST CHANNEL SENSE BYTES ROUTINE.
         SPACE 2
ERR730   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'03'                    EQUIPMENT CHECK.
         DC    AL1(ERR732-ERR730-4)
         DC    X'0C'                    NO RECORD FOUND.
         DC    AL1(ERR741-ERR730-6)
         DC    X'07'                   INVALID ADDRESS.
         DC    AL1(ERR738-ERR730-8)
         DC    X'01'                    INTERVENTION REQUIRED.
         DC    AL1(ERR733-ERR730-10)
         DC    X'02'                    BUS OUT CHECK.
         DC    AL1(ERR734-ERR730-12)
         DC    X'04'                    DATA CHECK.
         DC    AL1(ERR735-ERR730-14)
         DC    X'05'                    OVERRUN.
         DC    AL1(ERR736-ERR730-16)
         DC    X'00'                    COMMAND REJECT.
         DC    AL1(ERR737-ERR730-18)
         DC    X'06'                    SHOULD NOT OCCUR.
         DC    AL1(ERR731-ERR730-20)
         DC    X'09'                    TRACK OVERRUN.
         DC    AL1(ERR739-ERR730-22)
         DC    X'0A'                    END OF CYLINDER.
         DC    AL1(ERR740-ERR730-24)
         DC    X'0D'                   FILE PROTECTED
         DC    AL1(ERR742-ERR730-26)
         DC    X'0F'                   OVERFLOW INCOMPLETE
         DC    AL1(ERR743-ERR730-28)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR744-ERR730-30)
         SPACE 2
*    EXITS TO 2301 ERROR RECOVERY ROUTINES.
         SPACE 2
ERR731   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR732   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,EQUIPCHK             SOLID ERROR-GO TO EQUIPCHK RTN.
         SPACE 1
ERR733   B     ERR133                  GO TO 2302 INTERVENTION REQ RTN.
         SPACE 1
ERR734   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT RTN.
         SPACE 1
ERR735   B     ERR135                  SAME AS 2311 DATA CHECK
         SPACE 1
ERR736   BAL   LINK15,SIXTRY           RETRY ERROR CCW LIST SIX TIMES.
         BC    15,OVRRUN               SOLID ERROR-GO TO OVRRUN ROUTINE
         SPACE 1
ERR737   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
         SPACE 1
ERR738   BC    15,INVLDADR             GO TO INVALID ADDRESS ROUTINE
         SPACE 1
ERR739   BC    15,TROVRRUN             GO TO TRACK OVERRUN ROUTINE
         SPACE 1
ERR740   BC    15,ENDOFCYL             GO TO END OF CYLINDER ROUTINE
         SPACE 1
ERR741   BC    15,NORECFND             GO TO RECORD FOUND ROUTINE
         SPACE 1
ERR742  BC     15,FILEPROT             GO TO FILE PROTECTED ROUTINE
         SPACE 1
ERR743   BC    15,OVRFLOW              GO TO OVERFLOW INCOMPLETE RTN.
         SPACE 1
ERR744   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       *********************************************
*       *  FOLLOWING ROUTINES USED BY 1443 PRINTER  *
*       *********************************************
         SPACE 2
*    1443 TEST CHANNEL STATUS BYTES ROUTINE.
         SPACE 2
ERR800   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR801-ERR800-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR802-ERR800-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR803-ERR800-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR804-ERR800-10)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR804-ERR800-12)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR804-ERR800-14)
         DC    X'1F'                   SHOULD NOT OCCUR
         DC    AL1(ERR804-ERR800-16)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR830-ERR800-18)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR805-ERR800-20)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR806-ERR800-22)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR807-ERR800-24)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR808-ERR800-26)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR809-ERR800-28)
         SPACE 2
*    1443 TEST CHANNEL SENSE BYTES ROUTINE.
         SPACE 2
ERR830   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR831-ERR830-4)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR832-ERR830-6)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR833-ERR830-8)
         DC    X'02'                   BUS OUT ON INITIAL SELECTION
         DC    AL1(ERR834-ERR830-10)
         DC    X'07'                   CHANNEL 9
         DC    AL1(ERR835-ERR830-12)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR836-ERR830-14)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR837-ERR830-16)
         SPACE 2
*    EXITS TO 1443 ERROR RECOVERY ROUTINES.
         SPACE 2
ERR801   BC    15,CHANERR              GO TO CHANNEL ERROR ROUTINE
         SPACE 1
ERR802   BC    15,INFCERR              GO TO INTERFACE ERROR ROUTINE
         SPACE 1
ERR803   BC    15,CHDATA               GO TO  CHANNEL DATA ERROR ROUTIN
         SPACE 1
ERR804   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR805   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
         SPACE 1
ERR806   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
         SPACE 1
ERR807   BC    15,SKIPTO1              GO TO CARRIAGE SKIP TO 1 ROUTINE
         SPACE 1
ERR808   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
         SPACE 1
ERR809   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR831   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR832   LA    GR2,PRINTCHK            ADDRESS OF PRINT CHECK MESSAGE.
         LA    GR1,59                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO PRINT OPERATOR MSG//WAIT//
         SPACE 1
ERR833   LA    GR7,UCBSYO              GET ADDRESS OF SYSOUT DEVICE.
         BAL   LINK15,UNITADDR         CONVERT HEX UNIT ADDRESS TO BCD.
         MVC   READYDEV(27),READYPRT   INSERT READYPRT//CLEAR CUU FIELD
         MVC   READYDEV+23(3),UNITBUF+1  INSERT DEVICE ADDR IN MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
         SPACE 1
ERR834   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT RTN
         SPACE 1
ERR835   MVC   REGSV5(64),ERRSAV1      RESTORE ORIGINAL P/P REGISTERS.
         B     IORTRN                  CHANNEL NINE SENSED//RETURN
         SPACE 1
ERR836   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
ERR837   B     ENDTEST
         EJECT
***********************************************************
*        FOLLOWING ROUTINES USED BY 3330 AND 2305          *
***********************************************************
ERRB00   CLI   L0(UCBREG),T3330         IS DEVICE A 3330         S20201
         BNE   ERRB01                   NO - CHECK 2305          S20201
ERRBB0   TM    TWOSIX(UCBREG),TEN       CHECK FOR ENV DATA      XL03145
         BO    ENVDATA                  BR IF PRESENT            S20201
         TM    FLGBYT1,H01             IS EMULATED DEVICE ?    @Z30RSHG
         BO    ERR130                  YES, BRANCH             @Z30RSHG
         B     ERRA00                   CHECK REST OF SENSE      S20201
ENVDATA  BAL   LINK15,TWOTRY            RETRY CCW TWO TIMES      S20201
         B     ERRA00                   CHECK REST OF SENSE      S20201
ERRB01   CLI  L0(UCBREG),T333C          IS DEVICE A 3330-C      XL03145
         BE   ERRBB0                    YES, CHECK ENV DATA     XL03145
         CLI   L0(UCBREG),T3350        IS DEV 3350 ?           @Z30RSHG
         BE    ERRBB0                  YES - CHECK ENV DATA    @Z30RSHG
         TM    TWOSIX(UCBREG),EIGHTY    CHECK FOR BUFLOG FULL    S20201
         BO    RDBUFLOG                 IF ON READ BUFFER LOG    S20201
         B     ERRA00                   CHECK REST OF SENSE      S20201
RDBUFLOG MVC   SAVECCW(L2),L6(UCBREG)   SAVE CCW IN ERROR        S20201
         LA    RCAW,BUFCCW              READ BUFFER LOG CCW      S20201
         BAL   LINK9,STARTIO            START THE IO             S20201
         MVC   L6(L2,UCBREG),SAVECCW    RESTORE CCW IN ERROR     S20201
         BAL   LINK15,TWOTRY            RETRY CCW TWO TIMES      S20201
ERRA00   BAL   ERRLNK,ERRTEST           LINK TO SENSE BYTE TEST  S20201
         DC    X'03'                    EQUIPMENT CHECK          S20201
         DC    AL1(ERRA01-ERRA00-4)     EQUIPMENT CHECK          S20201
         DC    X'0C'                    NO RECORD FOUND          S20201
         DC    AL1(ERRA02-ERRA00-6)     NO RECORD FOUND          S20201
         DC    X'01'                    INTERVENTION REQUIRED    S20201
         DC    AL1(ERRA03-ERRA00-8)     INTERVENTION REQUIRED    S20201
         DC    X'02'                    BUS OUT CHECK            S20201
         DC    AL1(ERRA04-ERRA00-10)    BUS OUT CHECK            S20201
         DC    X'05'                    OVERRUN                  S20201
         DC    AL1(ERRA06-ERRA00-12)    OVERRUN                  S20201
         DC    X'00'                    COMMAND REJECT           S20201
         DC    AL1(ERRA07-ERRA00-14)    COMMAND REJECT           S20201
         DC    X'0A'                    END OF CYLINDER          S20201
         DC    AL1(ERRA08-ERRA00-16)    END OF CYLINDER          S20201
         DC    X'0D'                    FILE PROTECT             S20201
         DC    AL1(ERRA09-ERRA00-18)    FILE PROTECT             S20201
         DC    X'0F'                    OPERATION INCOMPLETE     S20201
         DC    AL1(ERRA10-ERRA00-20)    OPERATION INCOMPLETE     S20201
         DC    X'04'                    DATA CHECK               S20201
         DC    AL1(ERRA05-ERRA00-22)    DATA CHECK               S20201
         DC    X'09'                    INVALID TRK FORMAT       S20201
         DC    AL1(ERRA12-ERRA00-24)    INVALID TRK FORMAT       S20201
         DC    X'2F'                    END OF TEST              S20201
         DC    AL1(ERRA13-ERRA00-26)    END OF TEST            @Z30RSHG
ERRA01   B     ERR131                   USE 2311 EQUIPCHK RTN    S20201
         SPACE 1
ERRA02   B     ERR132                   GO TO NOREC FND RTN      S20201
         SPACE 1
ERRA03   B     ERR133                   GO TO DASD INT REQ RTN   S20201
         SPACE 1
ERRA04   B     ERR134                   USE 2311 BUS OUT RTN     S20201
         SPACE 1
ERRA05   TM    25(UCBREG),X'80'         IS PERM ERROR ALSO       S20201
         BO    DATACHK                  YES,TERMINATE            S20201
         B     ERRPSD                   IGNORE CORRECTABLE ERROR  M4946
         SPACE 1
ERRA06   TM    25(UCBREG),X'80'         IS PERM ERROR ALSO       S20201
         BO    OVRRUN                   YES,BR TO TERMINATE      S20201
         B     ERR137                   USE 2311 OVERRUN RTN     S20201
         SPACE 1
ERRA07   B     ERR138                   USE 2311 COMMAND REJ RTN M0158
         SPACE 1
ERRA08   B     ENDOFCYL                 GO TO END OF CYL RTN     S20201
         SPACE 1
ERRA09   B     ERR143                   USE 2311 FILE PROT RTN   S20201
         SPACE 1
ERRA10   B     ERR144                   2311 DASD OVERFLOW RTN   S20201
         SPACE 1
ERRA12   B     INTRKFMT                 BR TO INVALID TRK FMT    S20201
         SPACE 1
ERRA13   B     ENDTEST                  BR TO END OF TEST RTN    S20201
         EJECT
*       *************************************************
*       *  FOLLOWING ROUTINES USED BY 2321 DASD DEVICE  *
*       *************************************************
         SPACE 2
*    2321 TEST CHANNEL SENSE BYTES ROUTINE
         SPACE 2
ERR900   BAL   ERRLNK,ERRTEST           LINK TO STATUS/SENSE BYTE TEST
         DC    X'03'                    EQUIPMENT CHECK
         DC    AL1(ERR901-ERR900-4)
         DC    X'0C'                    NO RECORD FOUND
         DC    AL1(ERR902-ERR900-6)
         DC    X'07'                    SEEK CHECK
         DC    AL1(ERR903-ERR900-8)
         DC    X'01'                    INTERVENTION REQUIRED
         DC    AL1(ERR904-ERR900-10)
         DC    X'02'                    BUSS OUT CHECK
         DC    AL1(ERR905-ERR900-12)
         DC    X'04'                    DATA CHECK
         DC    AL1(ERR906-ERR900-14)
         DC    X'05'                    OVERRUN
         DC    AL1(ERR907-ERR900-16)
         DC    X'0E'                    MISSING ADDRESS MARKER
         DC    AL1(ERR908-ERR900-18)
         DC    X'00'                    COMMAND REJECT
         DC    AL1(ERR909-ERR900-20)
         DC    X'06'                    TRACK CONDITION CHECK
         DC    AL1(ERR910-ERR900-22)
         DC    X'09'                    TRACK OVERRUN
         DC    AL1(ERR911-ERR900-24)
         DC    X'0A'                    END OF CYLINDER
         DC    AL1(ERR912-ERR900-26)
         DC    X'0D'                    FILE PROTECT
         DC    AL1(ERR913-ERR900-28)
         DC    X'2F'                    END OF TEST
         DC    AL1(ERR914-ERR900-30)
         SPACE 2
*    EXITS TO 2321 ERROR RECOVERY ROUTINES
         SPACE 2
ERR901   B     EQUIPCHK                 GO TO EQUIPCHK ROUTINE
         SPACE 1
ERR902   TM    25(UCBREG),X'02'         MISSING ADDRESS PRESENT ALSO
         BO    ACTVIII                   YES, CHECK MORE
         B     ACTIX                   NO
         SPACE 1
ERR903   TM    25(UCBREG),X'02'        MISSING ADDRESS MARKER ALSO
         BO    BALLAST                  YES, SEEKED BALLAST-SOLID ERROR
         B     ACTXI                   CHECK ON SEEK CHECK
         SPACE 1
ERR904   B     ERR133                   INTERV REQUIRED;AS IN 2311
         SPACE 1
ERR905   BAL   LINK15,TWOTRY           BUS OUT--TRY ONCE MORE.
         B     BUSOUT                  SOLID ERROR--TERMINATE.
         SPACE 1
ERR906   BAL   LINK14,ACTXII           DATA CHECK
         B     ALTE906
         SPACE 1
ERR907   BAL   LINK15,TENTRY
         B     OVRRUN
         SPACE 1
ERR908   BAL   LINK14,ACTXII           MISSING ADDRESS MARLER
         B     MISSMARK
         SPACE 1
ERR909   B     COMREJ
         SPACE 1
ERR910   CLC   UCBTO+17(3),ADERASE     OCCUR DURING ERASE.
         BH    IORTRN                  YES-RETURN//SEARCH ON BAD TRACK.
         B     TRACKCHK                NO--GO HANDLE.
         SPACE 1
ERR911   B     TROVRRUN
         SPACE 1
ERR912   B     ENDOFCYL
         SPACE 1
ERR913   B     ERR143                   FILE PROTECT
         SPACE 1
ERR914   B     ENDTEST
         EJECT
ACTVIII  TM    ACTXIISW,X'40'          ERROR CAUSED IN TEN TRY ROUTINE
         BO    TENTRY                     YES, TRY AGAIN IF NECESSARY
         BAL   LINK14,T3SEEK           RESTORE//RETRY 3 TIMES.
         L     REGD,ERRSAV1+12          GET CCW ADDRESS
         L     REGD,0(REGD)              GET SEEK ADDRESS
         MVC   STORSEEK(6),0(REGD)        MOVE IT
         XI    STORSEEK+5,X'01'        CHANGE TO ANOTHER TRACK CYLINDER
         MVI   ACTXIISW,X'10'           RETURN WITHOUT CHECKING ERROR
         LA    GR3,SOMEHOME            ADDRESS OF CCW LIST
         BAL   LINK9,STARTIO           SEEK;READ HA OF NEW TRACK
         CLC   STORSEEK+2(4),HOMEBUF+1 WAS THIS PROPER TRACK
         BE    ACTVIIIE                YES, RETRY ORIGINAL
         BAL   LINK9,STARTIO           NO, TRY AGAIN
         CLC   STORSEEK+2(4),HOMEBUF+1 WAS THIS PROPER TRACK
         BNE   ACTVIIID                NO--GO LOG AS BLANK TRACK.
ACTVIIIE MVI   ACTXIISW,X'40'          TELL ACTVIII WHERE WE ARE
         MVC   TENCTR(4),TENSET        RESET THE TENTRY COUNTER.
         BAL   LINK15,TENTRY            RETRY CCW LIST 10 TIMES
ACTVIIID MVI   ACTXIISW,X'00'            RESET SWITCH
         L     GR15,ERRSAV1+60          BLANK TRACK
ACTVIIIA IC    REGD,0(GR15)            INCRIMENT
         LA    REGD,1(REGD)              BLANK TRACK
         STC   REGD,0(GR15)                SWITCH
         MVI   ERRETRY,X'00'           TURN OFF THE ERROR SWITCH.
*        BAL   LINK14,BLKTRACK         LOG DATA FOR CE.
         BAL   LINK14,BLKTRCK1         LOG BLANK TRACK CONDITION.
         CLI   0(GR15),X'03'           THREE BLANK TRACKS
         BE    BLNKSTOP                  YES, PRINT MESSAGE - TERMIN
ACTVIIIF LM    0,15,ERRSAV1             RESTORE REGISTERS FOR RETUNR
         MVI   MFWANLX+4,X'20'         RESET WRITE CCW
         MVI   ACTXIISW,X'00'          TURN OFF ACTXIISW.
         C     GR15,ABLKTRK            BLANK TRACK
         BE    TRKBLK                    YES REWRITE TRACK
         ST    RTRKADR,SAVERTRK         WAS THIS ON
         CLC   SAVERTRK(2),L3050500      ALTERNATE STRIP
         BL    ACTVIIIG                NO--REWRITE CYL/STRIP/SUBCELL.
         MVI   STRTADR+1,X'01'         YES-RESET THE HA FLAG.
ACTVIIIG N     RTRKADR,FFFFFF00        AT LEAST REWRITE CYLINDER.
         C     GR15,ABLKSTRP           THIS A BLANK STRIP SITUATION.
         BH    WRITECT1                NO--BLANK CYLINDER.
         BE    ACTVIIIH                YES-GO REWRITE THIS STRIP.
         N     RTRKADR,FF000000        NO--BLANK SUBCELL.
         B     WRITECT1                GO REWRITE THIS SUBCELL.
ACTVIIIH N     RTRKADR,FFFF0000        SET TO REWRITE STRIP.
         B     WRITECT1                GO REWRITE THIS STRIP.
         SPACE 1
SOMEHOME CCW   7,STORSEEK,X'60',6
         CCW   X'1F',SETFMK,X'40',1
         CCW   X'1A',HOMEBUF,X'20',5
         SPACE 1
ACTIX    BAL   LINK15,CYLNCHK          READ HA- SEE IF COREECT CYL
         B     ACTIXA                    NO
         B     NORECFND                  YES - HARD ERROR
ACTIXA   BAL   LINK14,ACTX               SEEK ANOTHER STRIP
         B     NORECFND                HARD ERROR
         SPACE 1
ACTX     LA    GR3,RESEEKM             GET ADDRESS OF CCW LIST
         MVC   SEEK1X(2),SEEKADR         GET
         MVC   SEEK2X(2),SEEKADR           CELL ADDRESS
         MVC   SEEK1X+5(1),SEEKADR+5   GET THE HEAD ADDRESS.
         MVC   SEEK2X+5(1),SEEKADR+5   GET THE HEAD ADDRESS.
         XC    SEEK2X+2(3),SEEK1X+2    CHANGE SUBCELL/STRIP/CYLINDER.
         MVI   ACTXIISW,X'10'          SET SWITCH FOR DIRECT RETURN.
         BAL   LINK9,STARTIO           SEEK TO AN OFF ADDRESS.
         MVI   ACTXIISW,X'00'          RESET THE DIRECT RETURN SWITCH.
         BAL   LINK15,TENTRY            RETRY TEN TIMES
         BR    LINK14                    SOLID RETURN TO USER
         SPACE 1
RESEEKM  CCW   7,SEEK2X,X'40',6        SEEK DIFFERENT ADDRESS.
         CCW   7,SEEK1X,X'00',6        SEEK DIFFERENT ADDRESS.
SEEK1X   DC    X'0000010101010000'     AT LEAST ONE ADDRESS
SEEK2X   DC    X'000003030303'            DIFFERENT THAN ORIGINAL
         SPACE 1
ACTXI    TM    25(UCBREG),X'01'        OVERFLOW INCPMPLETE ALSO
         BZ    ACTXIA                    NO - CHECK FURTHER
         BAL   LINK14,TENSEEK           RESTORE, RETRY 10 TIMES
         B     SEEKCHK                  SOLID - SEEK CHECK ROUTINE
ACTXIA   TM    24(UCBREG),X'80'        COMMAND REJECT ALSO
         BO    SEEKCHK                    YES - SOLID
         BAL   LINK14,ACTX
         B     SEEKCHK                  SOLID
         EJECT
ACTXII   TM    ACTXIISW,X'20'           EXICUTE ORIG CCW LIST RETURN
         BO    TWOTRY                  RETURN TO TWOTRY ROUTINE.
         CLC   UCBTO+17(3),ADERASE     DATA CHECK DURING ERASE TIME.
         BNH   ACTXIID                 NO--
         MVI   ERASESW,X'FF'           YES-TURN ON ERASE SWITCH.
ACTXIID  MVI   ACTXIISW,X'21'          TURN ON FIRST ENTRY(01)ORIG(20).
         L     REGD,ERRSAV1+12          GET CAW
         L     REGD,0(REGD)              GET HALF OF SEEK CCW
         ST    REGD,SORIG               SAVE FOR SEEK ORIGINAL TRACK
         MVC   HIADR(4),0(REGD)          ADDRESS FOR SEEK HIGHEST
         L     REGE,HIADR                IN REGISTER TO MODIFY STRIP
         ST    REGE,LOWADR               SAVE FOR SEEK FIRST TRACK
         A     REGE,F1                   PREPARE FOR NEXT HIGHER STRIP
         CLC   UCBTO+17(3),AMFRAHA     DATA CHECK DURING ANALYSIS/2321?
         BL    ACTXIIB                 NO--DO NOT REWRITE.
         MVI   MFWANLX+4,X'60'         YES-REWRITE//REREAD.
         LA    GR7,MFWANAL             SET TO ALLOW WRITE
         ST    GR7,4(UCBREG)             THEN READ
ACTXIIB  CLI   HIADR+3,X'00'            IS THIS STRIP ZERO
         BE    ACTXIIA                   YES, USE NEXT HIGHER
         BCTR  REGE,0                    NO, GET
         BCTR  REGE,0                           NEXT LOWER STRIP
ACTXIIA  ST    REGE,NXTLOW               SAVE FOR SEEK NEXT LOWER
         BAL   LINK15,TWOTRY           RETRY ORIGINAL CCWS ONCE.
         LA    REGE,15                 15 PASSES THRU LOOP2X.
         LA    REGF,1                  1 PASS THRU LOOP2X AND LOOP3X.
         SPACE 1
LOOP2X   BAL   LINK15,EIGHTTRY         SEEK TO HIGH-LOW TRACKS 8 TIMES.
         NI    ACTXIISW,X'EF'          TURN OFF DIRECT RETURN BIT.
         BAL   LINK15,TWOTRY           RETRY ORIGINAL CCWS ONCE.
         BCT   REGE,LOOP2X             REPEAT SEQUENCE IF NECESSARY.
         LA    REGE,15                 RESET THE LOOP COUNTER.
         SPACE 1
LOOP3X   LA    GR3,SNXTLOW             SEEK COMMAND FOR NEXT LOWER.
         BAL   LINK9,STARTIO             OR STRIP ONE.
         BAL   LINK15,TWOTRY           RETRY ORIGINAL CCWS ONCE.
         BCT   REGF,LOOP2X             REPEAT SEQUENCE IF NECESSARY.
         XI    ACTXIISW,X'01'          RESET THE FIRST ENTRY SWITCH.
         TM    ACTXIISW,X'01'          FIRST PASS THRU BOTH LOOPS.
         BO    SDACTXII                NO--DONE--SOLID ERROR.
         LA    REGE,15                 15 PASSES THRU LOOP2X.
         LA    REGF,6                  6 PASSES OF LOOP2X AND LOOP3X.
         B     LOOP2X                  REPEAT UNTIL NO ERROR OR 113.
         SPACE 1
         EJECT
SDACTXII MVI   ACTXIISW,X'00'           TURN OFF SWITCHES
         MVI   MFWANLX+4,X'20'         RESET WRITE CCW
         MVI   ERRETRY,X'00'           INSURE ERROR SWITCH IS OFF.
         BR    LINK14                     SOLID ERROR - RETURN
         SPACE 2
EIGHTTRY LA    REGG,8                  SET FOR EIGHT HI-LOW SWEEPS.
         LA    CCWREG,HILOWCCW          GET CCW LIST-FIRST-LAST TRACKS
LOOP4X   BAL   LINK9,STARTIO
         BCT   REGG,LOOP4X              DONE TRYING
         BR    LINK15                    YES, GO ON
         SPACE 2
HILOWCCW CCW   7,HIADR,X'40',6          SEEK LAST TRACK OF STRIP
         CCW   7,LOWADR,X'00',6         SEEK FIRST TRACK OF STRIP
         SPACE 1
SNXTLOW  CCW   7,NXTLOW,X'40',6         SEEK NEXT LOWER STRIP
SORIG    CCW   7,SEEKADR,X'00',6        SEEK ORIGINAL STRIP
         SPACE 2
HIADR    DC    X'0000000004130000'      LAST  TRACK OF STRIP
LOWADR   DC    X'0000000000000000'      FIRST TRACK OF STRIP
NXTLOW   DC    X'000000000000'          NEXT STRIP LOWER
AMFRAHA  DC    AL3(MFRAHA)
ADERASE  DC    AL3(MFERASE)            ADDRESS OF 2321 ERASE CCWS.
         SPACE 2
* DETERMINE IF HA-R0 AREA IS DEFECTIVE HERE..2302,2311,2314,2321.
         SPACE 2
ALTE906  L     REGD,UCBTO+16           ADDRESS IN CSW.
         S     REGD,EIGHT              ADDRESS OF FAILING CCW.
         CLI   0(REGD),X'1A'           IS THIS A READ HA CCW.
         BE    ALTE2311                YES-GO CHECK DEVICE TYPES.
         TM    FLGDRUM,H04             IS IT A 2305              S20201
         BZ    ALTE907                 NO, TEST ERROR            S20201
         OI    FLGDRUM,H08             2305, TURN ALT-BIT ON     S20201
ALTE907  CLI   L0(REGD),H16            IS THIS A READ R0 CCW     S20201
         BNE   GETALT3                 NO--GO ASSIGN AN ALTERNATE TRACK
         CLI   UCBTO,T2321              IS THIS A 2321 DEVICE    S20201
         BE    ALTE2314                YES-ATTEMPT TO MOVE IN 800 BYTES
         LH    CSR1,TOTLCNTX           TRACK CAPACITY THIS DEVICE.
         S     CSR1,SIXTEEN            LESS AMOUNT FOR NORMAL R0.
         CH    CSR1,UCBTO+22           ERROR IN NORMAL R0 AREA.
         BNL   GETALT3                 NO--GO ASSIGN AN ALTERNATE TRACK
         SPACE 1
ALTE2311 CLI   UCBTO,T2314              THIS A 2314              S20201
         BE    ALTE2314                 YES, PROCESS BAD TRACK   S20201
         CLI   UCBTO,T3340              THIS A 3340             XL03130
         BE    SKIPDISP                 YES, RECOVER FROM HA/RO XL03130
         CLI   UCBTO,T3350             IS IT 3350 ?            @Z30RSHG
         BE    SKPDSP                  YES - TRY TO RECOVER    @Z30RSHG
         TM    FLGBYT1,H01              EMULATED 3330/3330-1?  @ZM42053
         BO    WRTHAGN                  REWITE ONCE            @ZM42053
         CLI   UCBTO,T2321              THIS A 2321              S20201
         BNE   TRACKBAD                 MUST BE 2302 OR 2311     S20201
ALTE2314 MVC   PRWD(28),HAROMSG        BAD HA-R0 MESSAGE.
         MVI   PRWD+6,C'I'             INDICATE INFORMATION MESSAGE.
         LA    CSR1,28                      COUNT OF MESSAGE
         BAL   LINK9,PRNT
         XI    ERR906SW,X'01'           FIST ATTEMPT TO
         TM    ERR906SW,X'01'             ASSIGN ALTERNATE
         BO    GETALT3                    YES, TRY
         BAL   LINK15,TRKPRNT1            NO, PRINT TRACK ADDRESS
         B     DATACHK                    TERMINATE
         SPACE 1
SKIPDISP LA    GR3,WINHA+K1             LOAD WINCHESTER HA ADDR XL03130
         ST    GR3,XXXWIN               STORE IN CCW            XL03130
         MVI   XXXWIN+L7,H07            HA LENGTH FIELD = 7     XL03130
         MVI   XXXWIN,HEX19             CCW WRITE HA            XL03130
         TM    SDSWITCH,X'02'           SECOND TIME THRU?      @ZA03390
         BO    TRACKBAD                 YES, QUIT PROCESSING   @ZA03390
         TM    SDSWITCH,X'01'           TRIED NORMAL HA        @ZA03390
         BNO   SETDISP                  NO, GO SET FOR NORMAL  @ZA03390
         MVI   SDSWITCH,X'02'           SET SECOND TIME TRIED  @ZA03390
         LA    GR3,HASD                 HA DISPLACEMENT = 110   XL03130
SET110   EQU   *                                               @ZA03390
         CLI   0(REGD),HEX1A            WAS ERROR ON READ HA    XL03130
         BE    WRTWIN                   YES                     XL03130
         LA    GR3,RZCSD                R0 COUNT DISP = 200     XL03130
         L     REGD,UCBTO+L16           CSW ADDRESS             XL03130
         CLI   REGD+L7,H08              RESIDUAL COUNT = 8      XL03130
         BE    WRTWIN                   YES                     XL03130
         LH    GR3,RZDSD                RO DATA DISP = 285     @Z30RSHG
WRTWIN   B     WRTMAD                  USE SAME CODE           @Z30RSHG
SKPDSP   EQU   *                                               @Z30RSHG
         MVC   XXXWIN(L8),WHAMAD       GET 3350 WRITE HA       @Z30RSHG
         MVI   XXXWIN+L4,H00           TURN OFF CHAIN          @Z30RSHG
         TM    SDSWITCH,X'02'           SECOND TIME THRU?      @ZA03390
         BO    TRACKBAD                 YES, QUIT PROCESSING   @ZA03390
         TM    SDSWITCH,X'01'           TRIED NORMAL HA        @ZA03390
         BNO   SETDISP                  NO, GO SET FOR NORMAL  @ZA03390
         MVI   SDSWITCH,X'02'           SET SECOND TIME TRIED  @ZA03390
         LH    GR3,HASDMD              HA DISP = 124           @Z30RSHG
SET124   EQU   *                                               @Z30RSHG
         CLI   0(REGD),HEX1A           WAS ERROR ON RD HA      @Z30RSHG
         BE    WRTMAD                  YES                     @Z30RSHG
         LH    GR3,RZCSDMD             R0 CNT DISP = 218       @Z30RSHG
WRTHAGN  MVC   XXXWIN,NOFLAG            MOVE IN 5-BYTE WHA     @ZM42053
         TM    SDSWITCH,X'01'           TRIED BEFORE?          @ZM42053
         BO    TRACKBAD                 YES,DONT TRY AGAIN     @ZM42053
         OI    SDSWITCH,X'01'           NO, SET SWT            @ZM42053
         L     REGD,UCBTO+L16          CSW ADDRESS             @Z30RSHG
         SR    GR3,GR3                  ZERO WORK REG          @ZM42053
         CLI   REGD+L7,H08             RESIDUAL COUNT = 8      @Z30RSHG
         B     WRTMAD                   GO REWRITE HA          @ZM42053
         BE    WRTMAD                  YES                     @Z30RSHG
         LH    GR3,RZDSDMD             R0 DATA DISP = 310      @Z30RSHG
WRTMAD   EQU   *                                               @Z30RSHG
         STH   GR3,MADHA+1           SD1,2=0, SD3=124/218/310  @Z30RSJB
         MVC   SKADHOLD(8),XXXSRCH     SAVE SEEK ARGUMENT      @ZA03390
         MVC   XXXSRCH(8),TICWIN       MAKE SRCH TIC TO WHA    @Z30RSHG
         MVI   STRTADR+1,X'02'          FLAG BAD               @ZA03390
         LA    UCBREG,UCBTO             ADDRESS OF UCB          XL03130
         LA    CCWREG,SPARZEUS          ADDRESS OF CCW LIST     XL03130
         BAL   LINK9,STARTIO            REWRITE HA/RO           XL03130
         MVC   XXXSRCH(8),SKADHOLD     RESET CCW CHAIN         @ZA03390
         MVI   SDSWITCH,X'00'          CLEAR SWITCH, GOOD      @ZA03390
         B     ASGNALT                  GO ASSIGN AN ALTERNATE  XL03130
SETDISP  EQU   *                                               @ZA03390
         MVI   SDSWITCH,X'01'           SET FIRST TIME SWITCH  @ZA03390
         L     GR3,CLEAR                SET TO NORMAL HA DISP  @ZA03390
         CLI   UCBTO,T3350             3350 ?                  @Z30RSHG
         BE    SET124                  3350 TRY NORMAL         @Z30RSHG
         B     SET110                   GO TRY NORMAL          @ZA03395
         EJECT
*       **************************************************
*       *  ROUTINES BELOW ARE COMMON TO DASD DEVICES     *
*       **************************************************
         SPACE 1
*    SEEKED TO CORRECT CYLINDER ROUTINE
         SPACE 1
CYLNCHK  L     GR7,4(UCBREG)           GET SEEK CCW LIST ADDR. FROM CSW
         L     GR3,L0(GR7)              GET ADDR OF BBCCHH       S20201
         MVC   STORSEEK(L4),L2(GR3)    SAVE SEEK ADDRESS         S20201
         LA    GR3,READHOME            GET ADDR. OF READ HOME ADDR. CCW
         BAL   LINK9,STARTIO           DO READ HOME ADDRESS OPERATION.
         CLC   HOMEBUF+1(4),STORSEEK   VERIFY SEEK TO PROPER CYLN. NUMB
         BCR   7,LINK15                INCORRECT CYLINDER-RESEEK HEADS
         BC    8,4(LINK15)             CORRECT CYLINDER- ERROR RETURN
         SPACE 1
STORSEEK DC    3H'0'                   SAVE AREA FOR SEEK TO CCHH FLD.
         SPACE 1
         DS    0D                      DOUBLE WORD BOUNDARY
READHOME DC    X'1A'                   READ HOME ADDRESS OP. CODE
         DC    AL3(HOMEBUF)            ADDRESS OF READIN BUFFER
         DC    X'20000005'             COUNT OF 5/////SILI BIT ON/////
               SPACE 1
HOMEBUF  DC    XL5'00'                 BUFFER FOR READ H/A FIVE BYTES
         SPACE 1
*    TEN RESEEK/RETRY ROUTINE
T3SEEK   LA    GR3,WIPEHEAD            ADDRESS OF RESTORE CCW.
         CLI   L0(UCBREG),T2302         IS THIS FOR 2302         S20201
         BNE   TWOSEEK1                  NO
         LA    GR3,SEEK2302              YES - SEEK SYLINDER 251
         MVI   ACTXIISW,X'10'          SET FOR DIRECT RETURN.
         BAL   LINK9,STARTIO           SEEK CE CYLINDER.
         MVI   ACTXIISW,X'00'          RESET DIRECT REURN SWITCH.
         LA    GR3,SEEKZERO            SEEK TO ZERO CCW.
TWOSEEK1 BAL   LINK9,STARTIO           PERFORM SEEK CCW LIST.
         BAL   LINK15,T3TRY            RETRY ERROR CCW LIST 3 TIMES.
         BR    LINK14                  SOLID ERROR//..//RETURN//....
         SPACE 1
TENSEEK  LA    GR3,WIPEHEAD            ADDRESS OF HEAD CLEAN CCW LIST
         CLI   L0(UCBREG),T2302         IS THIS FOR 2302         S20201
         BNE   TENSEEK1                   NO
         LA    GR3,SEEK2302               YES; SEEK CYLINDER 251
         MVI   ACTXIISW,X'10'          SET FOR DIRECT RETURN.
         BAL   LINK9,STARTIO           SEEK CE CYLINDER.
         MVI   ACTXIISW,X'00'          RESET DIRECT REURN SWITCH.
         LA    GR3,SEEKZERO            SEEK TO ZERO CCW.
TENSEEK1 BAL   LINK9,STARTIO           PERFORM SEEK CCW LIST.
         BAL   LINK15,TENTRY           RETRY ERROR CCW LIST 10 TIMES
         BR    LINK14                  SOLID ERROR//---//RETURN//---
         SPACE 1
         DS    0D
WIPEHEAD CCW   X'13',0,X'60',1         RESTORE COMMAND 2311
         CCW   X'17',0,X'20',1          2321
         SPACE 1
SEEK2302 CCW   7,SEEK251,X'00',6       SEEK CYLINDER 251.
SEEKZERO CCW   7,CLEAR,X'00',6         SEEK CYLINDER 0.
         SPACE 1
SEEK251  DC    X'000000FB0000'          SEEK TO CYL 251 BBCCHH FIELD
     SPACE 1
*    TRACK OVERRUN ERROR ROUTINE
         SPACE 1
TROVRRUN LA    ERREG1,EMES14           INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         EJECT
         SPACE 1
*    SURFACE ANALYSIS ERROR ENTRY COUNTER ROUTINE
         SPACE 1
SURCHECK TM    ENTRYTWO,X'0E'          IS 2ND ERROR ENTRY SWITCH ON
         BC    1,BADSURF               YES-GO TO BAD SURFACE EXIT.
         MVI   ENTRYTWO,X'0E'          SET SWITCH FOR 2ND ENTRY ERROR.
         LM    0,15,ERRSAV1            RESTORE REGISTERS FOR LINK9 RTN.
         ST    IOLOOP,ERRPASS          SAVE THE PASS COUNT.
         LA    IOLOOP,10               NO SET LOOP COUNTER TO TEN
         LA    CCWREG,ERRSEEK          CCW LIST FOR PROCESSING ERROR.
TENERR   BAL   LINK9,STARTIO           READ VERIFY HA/R0.
         BCT   IOLOOP,TENERR           REPEAT 10 TIMES IF NO ERROR.
         LA    CCWREG,WRTALT           NO ERROR//MUST FORMAT TRACK.
         BAL   LINK9,STARTIO           WRITE STANDARD HA-R0.
         MVI   ENTRYTWO,X'00'          RESET ERROR SWITCH.
         L     IOLOOP,ERRPASS          PICK UP THE PASS COUNT.
         B     TESTCNT                 RETRN TO ANALYSIS ROUTINE.
               SPACE 1
BADSURF  MVI   ENTRYTWO,X'00'          RESET ENTRY CTR. FOR BAD EXIT.
         LA    LINK15,ORGBAD1          RETURN FOR DRUM           S20201
         TM    FLGDRUM,H0B              DRUM OR 2305 W/O ALT     S20201
         BO    TRKPRNT1                YES, DO NOT ASSGN ALT     S20201
         B     ALTE906                 GO DETERMINE FIELD IN ERROR.
         SPACE 1
*    TRACK CHECK ERROR ROUTINE
         SPACE 1
TRACKCHK LA    GR3,SEEKIPLX             CCW LIST TO GET POINTER TO ALT
         MVI   ERRETRY,X'FF'           SWITCH - DO NOT DESTERB REGISTER
         CLI   DSCBSW,X'01'            ARE DSCBS BEING WRITTEN.
         BNE   TRACK1                  NO--GO GET POINTER TO ALTERNATE.
         LA    GR3,SEEKIPL1            YEX-SEEK TO PROPER TRACK.
TRACK1   B     STARTIO                 READ HA AND R0
R0EOF    LM    0,15,ERRSAV1            RESTORE THE REGISTERS.
         CLI   ERRETRY,X'FF'           TRACK CONDITION CHECK PRIOR.
         BCR   7,LINK9                 NO--TAKE NORMAL STARTIO RETURN.
         MVI   ERRETRY,X'00'           YES-TURN OFF THE ERROR SWITCH.
         CLI   NORCDSW,X'F0'           WERE WE LOOKING FOR VOLUME LABEL
         BC    7,TRCK2                 NO--CHECK ADDITIONAL.
         MVC   SEEKVOL+1(3),ALTCCWX+1  MODIFY SEEK CCW FOR ALTERNATE.
         B     RETALT                  GO READ LABEL ON ALTERNATE.
TRCK2    LA    GR3,ALTCCWX             CCW LIST TO SEEK TO ALTERNATE.
         CLI   DSCBSW,X'01'            ARE DSCBS BEING WRITTEN.
         BC    8,STARTIO               YES-GO WRITE DSCBS ON ALTERNATE.
         TM    XXXR0+L7,H08             WAS EOF JUST WRITTEN     S20201
         BNO   NTALFALT                NO                        S20201
         BR    LINK9                    TAKE NORMAL SIO EXIT     S20201
NTALFALT MVC   WRTZERTR+K1(K3),ALTCCWX+K1 NO SEEK FOR TRK 0      S20201
         LA    GR3,WRTZERTR            CCW LIST TO WRITR 0 ON ALTERNATE
         B     STARTIO                 WRITE TRACK 0 ON ALTERNATE.
         SPACE 1
*    DASD OVERFLOW ERROR ROUTINE
         SPACE 1
OVRFLOW  LA    ERREG1,EMES23           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    FILE PROTECTED ERROR ROUTINE
         SPACE 1
FILEPROT LA    ERREG1,EMES15            INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    INVALID ADDRESS ERROR ROUTINE
         SPACE 1
INVLDADR LA    ERREG1,EMES10           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    SEEK CHECK ROUTINE
         SPACE 1
SEEKCHK  LA    ERREG1,EMES30           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    NO RECORD FOUND ERROR ROUTINE
         SPACE 1
NORECFND CLI   NORCDSW,X'F0'           IS THIS A LABEL CHECK ERROR RTN.
         BC    7,NORECMSG              NO-GO TO PRINT ERROR MSG RTN.
         LM    0,15,ERRSAV1            YES-RESTORE REGISTERS FOR RETURN
         B     RCDRTN                  GO TO NO LABEL FOUND ROUTINE.
               SPACE 1
NORECMSG LA    ERREG1,EMES17           NO, GET INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    END OF CYLINDER ERROR ROUTINE
         SPACE 1
ENDOFCYL LA    ERREG1,EMES09           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    MISSING ADDRESS MARKER ERROR ROUTINE.
         SPACE 1
MISSMARK LA    ERREG1,EMES34           INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
*    INVALID TRACK FORMAT ERROR
INTRKFMT LA    ERREG1,EMES40            INDEX TO MSG TABLE       S20201
         B     ERROROUT                 PRINT ERROR MSG          S20201
         SPACE 1
BLNKSTOP STC   GR15,ACTXIISW            PREPARE TO ACCESS ADDRESS
         NI    ACTXIISW,X'03'          CLEAR HIGH ORDER BITS.
         LA    ERREG1,EMES35           SET UP FOR BLANK TRACKS
         TM    ACTXIISW,X'03'           BLANK TRACKS?
         BO    ERROROUT                   YES
         LA    ERREG1,EMES38            BLANK SUB CELLS?
         BZ    ERROROUT                   YES
         LA    ERREG1,EMES36            SET UP FOR BLANK CYLINDERS
         TM    ACTXIISW,X'01'           BLANK CYLINDERS?
         BZ    ERROROUT                   YES
         LA    ERREG1,EMES37              NO -
         B     ERROROUT                  THEN BLANK STRIPS
     EJECT
*       **************************************************
*       *  ROUTINES BELOW ARE COMMON TO TAPE DEVICES     *
*       **************************************************
         SPACE 2
*    TEST TAPE DATA CHECK==READ OR WRITE?
         SPACE 1
TAPEDATA TM    25(UCBREG),X'04'        TAPE IN READ OR WRITE STATUS?
         BC    14,NOISETST             READ STATUS-PERFORM NOISE CHECK
         BC    1,RITERROR              WRITE STATUS-GO TO WRITE ERROR
         SPACE 1
*    TAPE DATA CHECK ON WRITE ROUTINE
         SPACE 1
RITERROR BAL   LINK15,BACKSPC          BACKSPACE TAPE ONE RECORD
         BAL   LINK15,ERASE            ERASE ONE LONG GAP ON TAPE
         BAL   LINK15,TRETRY           RETRY ERROR CCW LIST THREE TIMES
         LA    ERREG1,EMES31           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    TAPE BACKSPACE ROUTINE
         SPACE 1
BACKSPC  LA    GR3,BSPACE              GET ADDRESS OF BACKSPACE CCW
         BAL   LINK9,STARTIO           PERFORM BACKSPACE OPERATION.
         BCR   15,LINK15               RETURN TO CALLING ROUTINE
         SPACE 1
         DS    0D                      DOUBLE WORD BOUNDARY
BSPACE   DC    X'27'                   OP CODE FOR BACKSPACE
         DC    X'00000020000001'       REMAINDER OF CCW
         SPACE 1
*    TAPE ERASE ONE LONG GAP ROUTINE
         SPACE 1
ERASE    LA    GR3,ERASEGAP            GET ADDRESS OF ERASE CCW LIST.
         BAL   LINK9,STARTIO           PERFORM ERASE OPERATION.
         BR    LINK15                  RETURN TO CALLING ROUTINE
         SPACE 1
         DS    0D
ERASEGAP DC    X'17'                   OP CODE FOR ERASE
         DC    X'00000020000001'       REMAINDER OF CCW
         SPACE 1
*    TAPE AT LOAD POINT ROUTINE
         SPACE 1
TAPELP   TM    LPSWITCH,X'EE'          LP OCCURED DURING TAPECLN RTN.
         BC    1,LPDATA                YES--GO TO DATA CHECK AT LP EXIT
         LA    ERREG1,EMES32           NO- INDEX TO THE MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
LPSWITCH DC    X'00'                   SWITCH AT 'EE'//DATA CHECK AT LP
         EJECT
*    TAPE READ DATA CHECK////NOISE RECORD ERROR ROUTINE.
         SPACE 1
NOISETST L     GR7,16(UCBREG)          LOAD ADDRESS OF NEXT CCW AFTER
         S     GR7,EIGHT               GET ADDRESS OF ERROR CCW
         MVC   TIECCW1(8),0(GR7)       LOAD ERROR CCW IN TIE CCW LIST
         LH    GR3,K6(GR7)             LOAD COUNT OF ERROR CCW   S20201
         SH    GR3,K22(UCBREG)         GET NUMBER OF BYTES READ  S20201
         CH    GR3,TWELVE              TEST FOR TWELVE BYTES     S20201
         BC    10,READTAPE             12 BYTES OR MORE RECORD LENGTH
         TM    25(UCBREG),X'80'        LESS THAN 12BYTE-CHECK NOISE BIT
         BC    8,NOISEREC              NOISE BIT OFF-GO TO NOISEREC RTN
         BC    7,READTAPE              NOISE BIT-GO TO READTAPE RTN.
         SPACE 1
NOISEREC LM    0,15,ERRSAV1            RESTORE REGISTERS FOR RETURN.
         B     STARTIO                 IGNORE NOISE REC.--GET NEXT RECD
         SPACE 1
READTAPE BAL   LINK15,BACKSPC          BACKSPACE TAPE ONE RECORD
         L     GR7,READTEN             SETUP COUNTER FOR READ RETRYS
         BCT   GR7,READLOOP            PERFORM 10 RETRYS IF ERROR CONTS
         TM    25(UCBREG),X'08'        IS THE TAPE AT LOAD POINT.
         BC    1,NOCLEAN               YES--BYPASS TAPE CLEANER ROUTINE
         MVI   LPSWITCH,X'EE'          SET LP SW ON TO DETECT BS TO LP.
         BAL   LINK15,TAPECLN          LINK TO TAPE CLEANER ROUTINE
         MVI   LPSWITCH,X'00'          RESET LP SWITCH TO OFF.
         SPACE 1
NOCLEAN  L     GR3,CLEANCTR             SETUP TAPE CLEANER       S20201
         BCT   GR3,CLEANLOP             ALLOW 10 RETRIES         S20201
         SPACE 1
LPDATA   MVC   READTEN(4),READSET      SOLID ERROR//RESET COUNTER TO 10
         MVC   CLEANCTR(4),CLEANSET    10TH ENTRY TO TAPE CLEANER/RESET
         MVI   LPSWITCH,X'00'          RESET LOAD POINT SWITCH OFF.
         LA    ERREG1,EMES12           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
CLEANLOP ST    GR3,CLEANCTR             SAVE NEW CTR VALUE       S20201
         L     GR7,READSET             10TH READ RETRY--RESET READTEN.
         SPACE 1
READLOOP ST    GR7,READTEN             SAVE DECREMENTED COUNTER VALUE
         MVC   TIEBYTE(1),26(UCBREG)   PUT SENSE BYTE 2 IN TIE CCW LIST
         MVI   ERRETRY,X'FF'           TURN ERROR RETRY SWITCH ON.
         LA    GR3,TIECCW              LOAD TRACK IN ERROR CCW LIST ADR
         BAL   LINK9,STARTIO           EXECUTE T.I.E. CCW LIST.
         MVC   READTEN(4),READSET      NO ERROR RETURN--RESET COUNTER.
         MVC   CLEANCTR(4),CLEANSET    NO ERROR RETURN--RESET COUNTER.
         B     ERRPSD                  TURN OFF SWITCHES AND RETURN
         SPACE 2
         DS    0F
READTEN  DC    X'0000000A'             COUNT OF RETRYS
READSET  DC    X'0000000A'             RESTORE VALUE
CLEANCTR DC    X'0000000A'             COUNT OF TAPE CLEANER ENTRYS
CLEANSET DC    X'0000000A'             RESTORE VALUE
         SPACE 1
         DS    0D
TIECCW   DC    X'1B'                   TRACK IN ERROR COMMAND CODE.
         DC    AL3(TIEBYTE)            ADDRESS OF TRACK IN ERROR BYTE
         DC    X'60000001'             CHAIN BIT ON//SLI BIT ON//
TIECCW1  DC    X'0000000000000000'     SPACE FOR INSERTING READ CCW .
         SPACE 1
TIEBYTE  DC    X'00'                   SPACE TO INSERT SENSE BYTE TWO.
         SPACE 1
         DS    0F                      FULL WORD ALIGNMENT
SIXTEEN  DC    1F'16'                  'SIXTEEN' ON FULL WORD BOUNDRY.
EIGHT    DC    F'08'                   FULL WORD OF 08
TWELVE   DC    H'12'                   HALF WORD OF 12
         SPACE 1
*    TAPE CLEANER ROUTINE
         SPACE 1
TAPECLN  LA    GR3,CLEANTP             GET ADDRESS OF TAPE CLEANER CCWS
         BAL   LINK9,STARTIO           PERFORM TAPE CLEANER ROUTINE.
         BR    LINK15                  RETURN TO CALLING ROUTINE
         SPACE 1
         DS    0D
CLEANTP  DC    X'27'                   BACKSPACE OP CODE
         DC    X'00000060000001'       CHAIN BIT ON///SLI BIT ON//
         DC    X'27'                   BACKSPACE OP CODE
         DC    X'00000060000001'       CHAIN BIT ON///SLI BIT ON//
         DC    X'37'                   FORWARD SPACE OP CODE
         DC    X'00000060000001'       CHAIN BIT ON///SLI BIT ON//
         DC    X'37'                   FORWARD SPACE OP CODE
         DC    X'00000020000001'       CHAIN BIT OFF//SLI BIT ON//
               EJECT
*      **************************************************
*      * ROUTINES BELOW USED FOR ALL I/O ERROR RETRYS.  *
*      **************************************************
         SPACE 1
*    TWO RETRYS OF ERROR CCW ROUTINE
         SPACE 1
TWOTRY   TM    TWOFLAG,X'02'           IS THIS SECOND ENTRY INTO TWOTRY
         BC    1,BADTRY                YES. GO TO PERMANENT ERROR EXIT.
         MVI   TWOFLAG,X'02'           NO...SET TWOFLAG TO ON.
         MVI   ERRETRY,X'FF'           TURN ERROR RETRY SWITCH ON.
         L     GR3,4(UCBREG)           GET ADDRESS OF START OF CCW LIST
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         CLI   UCBTO,X'04'              IS IT A 2321             A43889
         BE    RETR2321                 YES,RETRY TWICE MORE     A43889
GOODTEST MVI   TWOFLAG,X'00'            RETRY OK - TWOFLAG OFF   A43889
         SPACE 1
ERRPSD   MVI   ERRETRY,X'00'           TURN ERROR RETRY SWITCH OFF
         MVI   ACTXIISW,X'00'          TURN OFF ACTXII SWITCH
         MVC   REGSV5(64),ERRSAV1      RESTORE ORIGINAL P/P REGISTERS
         CLC   UCBTO+17(3),AMFRAHA     2321 ERROR DURING READ OR ERASE.
         BH    ACTVIIIF                YES-NEED TO REWRITE THIS TRACK.
         B     IORTRN                  CCW LIST EXECUTED//RETURN//
               SPACE 1
BADTRY   MVI   TWOFLAG,X'00'           PERMANENT ERROR//SET TWOFLAG OFF
         BR    LINK15                  SOLID ERROR----//RETURN//---
RETR2321 BAL   LINK9,STARTIO            RETRY 2321 CCW CHAIN     A43889
         BAL   LINK9,STARTIO            RETRY 2321 CCW CHAIN     A43889
         B     GOODTEST                 SUCCESSFUL - RETURN      A43889
         SPACE 1
TWOFLAG  DC    X'00'                   '00' EQUAL OFF/// '02' EQUAL ON.
     SPACE 1
ERRETRY  DC    X'00'                   ERROR RETRY SWITCH '00' IS OFF.
         SPACE 1
*    THREE ERROR RETRYS ROUTINE.
         SPACE 1
TRETRY   L     GR7,TRECTR              SETUP COUNTER FOR RETRY
         BCT   GR7,TRELOOP             BR--ALLOW UP TO THREE RETRYS--
         MVC   TRECTR(4),TRESET        3RD RETRY ERROR--RESET COUNTER
         BR    LINK15                  SOLID ERROR----//RETURN//----
         SPACE 1
TRELOOP  ST    GR7,TRECTR              SAVE DECREMENTED COUNTER TOTAL
         MVI   ERRETRY,X'FF'           TURN ERROR RETRY SWITCH ON.
         L     GR3,4(UCBREG)           GET ADDRESS OF START OF CCW LIST
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   TRECTR(4),TRESET        NO ERROR RETURN-SET COUNTER TO 3
         B     ERRPSD                  TURN OFF SWITCHES AND RETURN
         SPACE 1
         DS    0F
TRECTR   DC    X'00000003'             COUNT OF RETRYS.
TRESET   DC    X'00000003'             RESTORE VALUE
         EJECT
*    SIX ERROR RETRYS ROUTINE
         SPACE 1
SIXTRY   L     GR7,SIXCTR              SETUP COUNTER FOR RETRY
         BCT   GR7,SIXLOOP             BR--ALLOW UP TO FIVE RETRYS--
         MVC   SIXCTR(4),SIXSET        6TH ERROR--RESET COUNTER
         BR    LINK15                  SOLID ERROR----//RETURN//---
         SPACE 1
SIXLOOP  ST    GR7,SIXCTR              SAVE DECREMENTED COUNTER TOTAL
         MVI   ERRETRY,X'FF'           TURN ERROR RETRY SWITCH ON.
         L     GR3,4(UCBREG)           GET ADDRESS OF START OF CCW LIST
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   SIXCTR(4),SIXSET        NO ERROR RETURN-SET COUNTER TO 5
         B     ERRPSD                  TURN OFF SWITCHES AND RETURN
         SPACE 1
         DS    0F
SIXCTR   DC    X'00000005'             COUNT OF RETRYS
SIXSET   DC    X'00000005'             RESTORE VALUE
         SPACE 1
*    TEN RETRYS OF ERROR CCW LIST ROUTINE
         SPACE 1
TENTRY   L     GR7,TENCTR              SETUP COUNTER FOR RETRY
         BCT   GR7,TENLOOP             BR--ALLOW UP TO TEN RETRYS--
         MVC   TENCTR(4),TENSET        10TH ERROR--RESET COUNTER--
         BR    LINK15                  SOLID ERROR----//RETURN//---
         SPACE 1
TENLOOP  ST    GR7,TENCTR              SAVE DECREMENTED COUNTER TOTAL
         MVI   ERRETRY,X'FF'           TURN ERROR RETRY SWITCH ON.
         L     GR3,4(UCBREG)           GET ADDRESS OF START OF CCW LIST
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   TENCTR(4),TENSET        NO ERR. RETURN-SET COUNTER TO 10
         B     ERRPSD                  TURN OFF SWITCHES AND RETURN
         SPACE 1
         DS    0F
TENCTR   DC    X'0000000B'             COUNT OF RETRIES.
TENSET   DC    X'0000000B'             RESTORE VALUE.
         SPACE 1
*    THREE RETRIES OF ERROR LIST ROUTINE.
         SPACE 1
T3TRY    LH    GR7,T3CTR               SETUP COUNTER FOR RETRY.
         BCT   GR7,T3LOOP              ALLOW UP TO 3 RETRIES.
         MVC   T3CTR(2),T3SET          3RD ERROR//RESET COUNTER.
         BR    LINK15                  RETURN.
T3LOOP   STH   GR7,T3CTR               SAVE NEW COUNTER VALUE.
         MVI   ERRETRY,X'FF'           INDICATE ERROR PROCESSING.
         L     GR3,4(UCBREG)           ERROR CCW LIST.
         BAL LINK9,STARTIO             REPEAT THE FAILING OPERATION.
         MVC   T3CTR(2),T3SET          RESET COUNTER//NO ERROR.
         B     ERRPSD                  ERROR RECOVERY RETURN.
         SPACE 1
T3CTR    DC    H'4'                    COUNT OF RETRIES.
T3SET    DC    H'4'                    RESTORE VALUE.
         SPACE 1
*    SIXTEEN BY SIXTEEN ERROR RETRY ROUTINE.
         SPACE 1
SIXTTRY  LH    GR7,RECALCTR            PICK UP COUNTER VALUE.
         BCT   GR7,SIXTLOOP            RECALIBRATE AFTER 16 ENTRIES.
         LA    GR3,WIPEHEAD            RECALIBRATE CCW.
         CLI   L0(UCBREG),T2302         IS THIS A 2302           S20201
         BNE   SIXTEENS                NO--GO PERFORM RECALIBRATE.
         LA    GR3,SEEKZERO            YES-SET UP FOR SEEK TO ZERO.
SIXTEENS BAL   LINK9,STARTIO           POSITION DEVICE TO ZERO.
         LA    GR7,17                  VALUE TO RESET COUNTER.
SIXTLOOP STH   GR7,RECALCTR            STORE NEW COUNTER VALUE.
         LH    GR7,CTR16               PICK UP RETRY VALUE.
         BCT   GR7,S16LOOP             HAVE WE RETRIED 256 TIMES.
         MVC   CTR16(4),RESET          YES-SOLID ERROR/RESET COUNTERS.
         BR    LINK15                  RETURN TO CALLER.
S16LOOP  STH   GR7,CTR16               STORE NEW COUNTER VALUE.
         L     GR3,4(UCBREG)           CCW LIST IN ERROR.
         MVI   ERRETRY,X'FF'           INDICATE RETRYING ERROR.
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   CTR16(4),RESET          NO ERROR//RESET COUNTERS.
         B     ERRPSD                  TAKE ERROR RECOVERY RETURN.
CTR16    DC    H'257'                  COUNT OF RETRIES.
RECALCTR DC    H'17'                   RECALIBRATE COUNT.
RESET    DC    H'257'                  RESTORE VALUE.
         DC    H'17'                   RESTORE VALUE.
               EJECT
*      *****************************************************
*      * ROUTINES BELOW USED FOR OPERATOR ALERT ROUTINES.  *
*      *****************************************************
               SPACE 2
*    TYPE OPERATOR MESSAGE//WAIT ROUTINE
         SPACE 1
DEVWAIT  LA    GR1,50                  LENGTH OF MESSAGE IN BYTES.
         LA    GR2,READYDEV            ADDRESS OF READYDEV MESSAGE.
         SPACE 1
TYPEWAIT BAL   LINK15,OPPRNT           LINK TO I/O WRITER PRINT MESSAGE
         SPACE 1
WAITTRY  LA    GR7,STARTIO             SET UP TO MODIFY CONTINUE PSW.
         ST    GR7,CONTINUE+4          MODIFY CONTINUE REENTRY POINT
         LM    0,15,ERRSAV1            RESTORE REGS TO RETRY ORIG. CCW.
         LPSW  IOWAIT                  REENTER STARTIOX ON READY DEVICE
               SPACE 2
READYRDR DC    C'IBC154A  READY READER    . '
READCHK  DC    C'IBC159A  READER CHECK. CORRECT ERROR. DEPRESS '
               SPACE 1
         DC    C'INTERRUPT KEY.'
               SPACE 1
READYPRT DC    C'IBC155A READY PRINTER     .'
               SPACE 1
PRINTCHK DC    C'IBC160A  PRINT CHECK. CORRECT ERROR. DEPRESS '
         DC    C'INTERRUPT KEY.'
               SPACE 1
INVALCRD DC    C'IBC101W INVALID CARD CODE. CORRECT ERROR. '
         DC    C'DEPRESS INTERRUPT KEY.'
               SPACE 1
TYPEFAIL DC    C'IBC153A  TYPEWRITER FAILED TO READ LAST MESSAGE. '
         DC    C' DEPRESS INTERRUPT KEY.'
               SPACE 1
READYDEV DC    C'                            DEPRESS INTERRUPT KEY.'
               SPACE 1
DISKMSG  DC    C'IBC157A  READY DASD    .   '
               SPACE 1
TAPEMSG  DC    C'IBC156A  READY TAPE    .   '
GETCELL  DC    C'IBC167A  SEEKED BALLAST CELL. MOUNT PROPER CELL.'
         DC    C' DEPRESS INTERRUPT KEY.'
         SPACE
EQUP3800 EQU   *                                               @Z40MSTT
         DC    C'IBC169A PRINTER EQUIPMENT CHECK. CORRECT '    @Z40MSTT
         DC    C'ERROR. DEPRESS INTERRUPT KEY.'                @Z40MSTT
         SPACE
         EJECT
*    CONVERT UNIT INTERFACE ADDRESS TO EBDIC FOR PRINTING.
        SPACE 2
UNITADDR UNPK  UNITBUF(5),2(3,GR7)     UNPACK CHANNEL AND UNIT ADDRESS.
         TR    UNITBUF(4),IOTAB-240    TRANSULATE TO BCD.
         BR    LINK15                  RETURN TO USER.
         SPACE 2
UNITBUF  DS    1D                      BUFFER FOR EBDIC UNIT ADDRESS.
               SPACE 2
         EJECT
*       **************************************************
*       *  ROUTINES BELOW ARE COMMON TO ALL I/O DEVICES  *
*       **************************************************
         SPACE 2
*    PRINT ERROR MESSAGE AND TERMINATE ROUTINE.
     SPACE 1
ERROR0F  MVI   115,X'0F'                INDICATE I/O CHANNEL FAILURE
         B     SEREPEND                 GO TO ERROR END TERMINATE.
         SPACE 1
ERROROUT MVI   115,X'1F'                INDICATE IO DEVICE FAILURE
         SPACE 1
SEREPEND MVC   58(2),2(UCBREG)          PUT CHANNEL AND UNIT IN I/O PSW
         MVC   SEREPSAV(28),48         SAV OLD MC,IO PSW,CSW,CAW
         MVC   24(6),24(UCBREG)         SAVE SENSE BYTES FOR SEREP
         SPACE 1
         BAL   LINK9,IOPRNT
         LA    GR1,36                  LENGTH OF MESSAGE IN BYTES.
         MVC   PRWD(36),ENDMESS        ADDRESS OF I/O ERROR END MESSAGE
         BAL   LINK9,PRNT              PRINT I/O ERROR TERMINATE.
         SPACE 1
         MVC   48(28),SEREPSAV          RESTORE OLD MC,I/O PSW//CSW/CAW
         LM    0,15,ERRSAV1             RESTORE REGISTERS FOR SEREP
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
ENDMESS  DC    C'IBC249W  I/O ERROR.  JOB TERMINATED.'
     SPACE 1
*    START I/O ERROR ROUTINE
         SPACE 1
SIOERR   LA    ERREG1,EMES11           INDEX TO MESSAGE TABLE
         MVI   115,X'3F'                INDICATE DEVICE NOT OPERATIONSL
         MVI   UCBSYO,X'00'            FORCE MESSAGE TO CONSOLE.
         B     SEREPEND                 GO TO ERROR END TERMINATE
         SPACE 1
*   CHANNEL CONTROL CHECK ROUTINE
         SPACE 1
CHANERR  LA    ERREG1,EMES20           INDEX TO MESSAGE TABLE
         B     ERROR0F                  GO TO SEREP INTERFACE SET X'0F'
         SPACE 1
*   INTERFACE CONTROL CHECK ROUTINE
         SPACE 1
INFCERR  LA    ERREG1,EMES21           INDEX TO MESSAGE TABLE
         B     ERROR0F                  GO TO SEREP INTERFACE SET X'0F'
         SPACE 1
*   CHANNEL DATA CHECK ROUTINE
         SPACE 1
CHDATA   LA    ERREG1,EMES22           INDEX TO MESSAGE TABLE
         B     ERROR0F                  GO TO SEREP INTERFACE SET X'0F'
         SPACE 1
*   PROGRAM CHECK ROUTINE
         SPACE 1
PROCHK   LA    ERREG1,EMES24           INDEX TO MESSAGE TABLE
         B     ERROR0F                  GO TO SEREP INTERFACE SET X'0F'
         SPACE 1
*   PROTECTION CHECK ROUTINE
         SPACE 1
PTNCHK   LA    ERREG1,EMES25           INDEX TO MESSAGE TABLE
         B     ERROR0F                  GO TO SEREP INTERFACE SET X'0F'
         SPACE 1
*   UNIT EXCEPTION ROUTINE
         SPACE 1
UNITCEPT TM    EDJTSW,X'01'             IS END OF TASK SW ON
         BO    EDJTF                      YES, GO TO END OF JOB
         L     GR7,16(UCBREG)             NO, ADDRESS NEXT CCW AT INTRP
         S     GR7,EIGHT               ADDRESS OF CCW THAT CAUSED EOF.
         CLI   0(GR7),X'16'            WAS INTERRUPT BY A READ RO CCW.
         BC    8,R0EOF                   YES, RETURN TO ALT ROUTINE
         CL    UCBREG,INPUTR       WAS THE UNIT EXCPTN ON SYSIN    0243
         BE    ABSEQPRT            IF SO, GO PRNT CNTRL SEQ ERR    0243
UEERROR  LA    ERREG1,EMES26             NO, INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         EJECT
*   INCORRECT LENGTH
         SPACE 1
WLRERR   LA    ERREG1,EMES27           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*   CHAINING CHECK ROUTINE
         SPACE 1
CHAINCHK LA    ERREG1,EMES28           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    EQUIPMENT CHECK ROUTINE
         SPACE 1
EQUIPCHK LA    ERREG1,EMES04           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    DATA CHECK ROUTINE
         SPACE 1
DATACHK  LA    ERREG1,EMES05           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*   COMMAND REJECT ROUTINE
         SPACE 1
COMREJ   LA    ERREG1,EMES01           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*   WRITE INHIBIT ROUTINE                                         M4697
         SPACE 1
INHIBIT  LA    ERREG1,EMES43            GET MESSAGE INDEX         M4697
         B     ERROROUT                 PRINT MSG AND TERM        M4697
         SPACE 1
         SPACE 1
*   END OF TEST ROUTINE
         SPACE 1
ENDTEST  LA    ERREG1,EMES18           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*   SHOULD NOT OCCUR ROUTINE
         SPACE 1
NEVER    LA    ERREG1,EMES19           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    INTERVENTION REQUIRED ROUTINE
         SPACE 1
INTVREQ  LA    ERREG1,EMES02           INDEX TO MESSAGE TABLE
         BAL   LINK9,IOPRNT            LINK TO PRINT MESSAGE
         BR    LINK15                  WRITE MESSAGE EXECUTED//RETURN.
         EJECT
*    BUS OUT CHECK ROUTINE
         SPACE 1
BUSOUT   LA    ERREG1,EMES03           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    OVERRUN CHECK ROUTINE
         SPACE 1
OVRRUN   LA    ERREG1,EMES06           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    UNUSUAL COMMAND SEQUENCE ROUTINE
         SPACE 1
SEQERR   LA    ERREG1,EMES29           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    DATA CONVERTER CHECK ROUTINE
         SPACE 1
CONVTERR LA    ERREG1,EMES08           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    CARRIAGE SKIP TO ONE ROUTINE
         SPACE 1
SKIPTO1  LA    GR3,CARSKIP            ADDRESS OF CARRIAGE SKIP TO 1 CCW
         BAL   LINK9,STARTIO           PERFORM SKIP TO ONE CCW.
         MVC   REGSV5(64),ERRSAV1      RESTORE ORIGINAL P/P REGISTERS.
         B     IORTRN                  CCW EXECUTED//RETURN//
         SPACE 1
         DS    0D
CARSKIP  DC    X'8B'                   SKIP TO 1 COMMAND CODE
         DC    X'00000020000001'       SLI BIT ON//COUNT OF 1//
         SPACE 1
*  SEEKED BALLAST CELL
         SPACE 1
BALLAST  LA    GR2,GETCELL             SEEKED BALLAST MESSAGE.
         LA    GR1,71                  MESSAGE LENGTH.
         B     TYPEWAIT                PRINT MESSAGE//AWAIT INTERRUPT.
         SPACE 1
BLKTRCK1 LA    ERREG1,EMES39           INDEX TO MESSAGE TABLE.
         BAL   LINK9,IOPRNT            GIVE BLANK TRACK MESSAGE.
         BR    LINK14                  RETURN.
         SPACE
EQPERR   EQU   *                                               @Z40MSTT
         LA    GR2,EQUP3800            EQUIP CK ADDRESS.       @Z40MSTT
         LA    GR1,N70                 LENGTH OF MESSAGE.      @Z40MSTT
         B     TYPEWAIT                GO TYPE OPER MESSAGE.   @Z40MSTT
         SPACE
LOGERR   EQU   *                                               @Z40MSTT
         MVC   SAVECCW(L2),L6(UCBREG)  SAVE CCW.               @Z40MSTT
         LA    RCAW,LOGERCCW           SENSE BUFF LOG CCW.     @Z40MSTT
         BAL   LINK9,STARTIO                                   @Z40MSTT
         MVC   L6(L2,UCBREG),SAVECCW   RESTORE CCW.            @Z40MSTT
         B     IORTRN                  RETURN.                 @Z40MSTT
         EJECT
CTOEMASK DC    X'2020202020202020'
         SPACE 1
ALTTT    DC    X'0A0B0C0D0E0FDDDDDD'     TABLE TO CONVERT TO HEX
         DC    X'DDDDDDDDDDDD'
         DC    X'00010203040506070809'
         SPACE 1
ALTHOLD1 DC    F'0'
ALTHOLD  DC    F'0'
ALTCNTX  DC    F'0'
         SPACE 2
PROCBUFF DS    0F
ALTENDX  DC    X'00CA0009'        2311  CCHH; LAST ALTERNATE
BMPTK1   EQU   ALTENDX+2               SPECIAL LAST-TRACK        S20201
CNGCYLX  DC    X'0000FFF7'        2311  CONVERSION TO CHANGE CYLINDERS
M1PTRK   DC    X'FFFF000A'        2311  CONVERSION GIVE CC-1 HH+XX
ORIGENDX DC    X'00C70009'        2311  CCHH;LAST ORIGINAL
BMPTK    EQU   ORIGENDX+2               NUMBER OF TRACKS-1       S20201
         DC    H'30'              2311  TOTAL NUMBER OF ALTERNATES
DEVSIZEX DC    X'00CB'            2311  NO CYL (VTOC-FORMAT4-FIELD9)
TCTABLE  DC    H'10'              2311  TRACKS/CYLINDER
TOTLCNTX DC    X'0E29'            2311  TRACK CAPACITY
         DC    X'523714'          2311   RECORD OVERHEAD
VTOCFLG  DC    X'01'              2311  FLAG
         DC    X'0219'            2311   TOLERANCE
DSCBPRTK DC    X'10'              2311  DSCBS/TRACK
         DC    X'0A'              2311   DIR BLKS/TRACK
         SPACE 1
* CONTROL FOR 2311
         SPACE 1
         DC    X'00CA0009'        2311  CCHH LAST ALTERNATE
         DC    X'0000FFF7'        2311  CONVERSION TO CHANGE CYLINDERS
         DC    X'FFFF000A'        2311  CONVERSION GIVE CC-1 HH+XX
         DC    X'00C70009'        2311  CCHH LAST ORIGINAL
         DC    H'30'              2311  TOTAL NUMBER OF ALTERNATES
         DC    X'00CB'            2311  NO CYL (VTOC-FORMAT4-FIELD9)
         DC    H'10'              2311  TRACKS/CYLINDER
         DC    X'0E29'            2311  TRACK CAPACITY
         DC    X'511414'               2311  RECORD OVERHEAD
         DC    X'01'              2311  FLAG
         DC    X'0219'            2311  TOLERANCE
         DC    X'10'              2311  DSCBS/TRACK
         DC    X'0A'              2311  DIR BLKS/TRACK
         SPACE 1
* CONTROL FOR 2302
         SPACE 1
         DC    X'00F9002D'        2302  CCHH; LAST ALTERNATE
         DC    X'0000FFD3'        2302  CONVERSION CHANGE CYLINDERS
         DC    X'FFFF002E'       2302  CONVERSION GIVE CC-1 HH+46
         DC    X'00F5002D'        2302  CCHH; LAST ORIGINAL
         DC    H'184'             2302  NUMBER ALTERNATES
         DC    X'00FA'            2302  VTOC-FORMAT4-FIELD9 (NO CYL)
         DC    H'46'              2302    NO TRKS/CYL
         DC    X'1378'            2302    TRACK CAPACITY
         DC    X'511414'               2302    RECORD OVERHEAD
         DC    X'01'              2302    FLAG
         DC    X'0219'            2302    TOLERANCE
         DC    X'16'              2302    DSCBS/TRACK
         DC    X'0E'              2302    DIR BLKS/TRACK
         SPACE 1
* CONTROL FOR 2303
         SPACE 1
         DC    X'004F0009'        2303  CCHH LAST ALTERNATE
         DC    X'0000FFF7'        2303  CONVERSION CHANGE CYLINDERS
         DC    X'FFFF000A'        2303  CONVERSION GIVE CC-1 HH+XX
         DC    X'004F0009'        2303  CCHH  LAST ORIGINAL
         DC    H'0'               2303  NUMBER ALTERNATES
         DC    H'80'              2303  VTOC-FORMAT4-FIELD9 (NO CYL)
         DC    H'10'              2303  NO TRACKS/CYL
         DC    H'4892'            2303  TRACK CAPACITY
         DC    X'922626'               2303  RECORD OVERHEAD
         DC    X'00'              2303  FLAG.
         DC    H'512'             2303  TOLERANCE
         DC    X'11'          2303     DSCBS/TRACK
         DC    X'0C'          2303     DIR BLKS/TRACK
         SPACE 1
* CONTROL FOR 2321
         SPACE 1
         DC    X'13090413'        2321  CCHH LAST ALTERNATE
         DC    X'000000ED'        2321  CONVERSION CHANGE CYLINDERS
         DC    X'FFFF0014'             CONVERSION GIVE CC-1;HH+20
         DC    X'13050413'        2321  CCHH LAST ORIGINAL
         DC    H'400'             2321  NUMBER OF ALTERNATES
         DC    H'1000'            2321  VTOC-FORMAT4-FIELD9 (NO CYL)
         DC    H'20'              2321    NO TRKS/CYL
         DC    X'07D0'            2321    TRACK CAPACITY
         DC    X'641010'               2321    RECORD OVERHEAD.
         DC    X'03'             2321  FLAG
         DC    X'0219'            2321    TOLERANCE
         DC    X'08'              2321    DSCBS/TRACK
         DC    X'05'              2321    DIR BLKS/TRACK
         SPACE 1
* CONTROL FOR 2301
         SPACE 1
         DC    X'000000C7'        2301  CCHH LAST ALTERNATE (DUMMY)
         DC    X'00000001'       2301  CONVERSION; CHANGE CYL (SPEC)
         DC    X'FFFF0008'              CONVERSION GIVE CC-1; HH+8
         DC    X'000000C7'        2301  CCHH;LAST ORIGINAL
         DC    H'0'               2301  TOTAL NUMBER OF ALTERNATES
         DC    H'25'              2301  NO CYL
         DC    H'8'               2301  NO TRKS/CYL
         DC    H'20483'           2301  TRACK CAPACITY
         DC    X'BA3535'          2301  RECORD OVERHEAD
         DC    X'04'              2301  FLAG
         DC    H'512'             2301    TOLERANCE
         DC    X'3F'              2301    DSCBS/TRACK
         DC    X'2D'              2301    DIR BLKS/TRACK
         SPACE 1
* CONTROL FOR 2305 MODEL 1
         SPACE 1
         DC    X'00300000'              23A5 CCHH LAST ALT       S20201
         DC    X'0000FFF9'              23A5 CHANGE CYL CONV.    S20201
         DC    X'FFFF0008'              23A5 CC-1 HH+XX CONV.    S20201
         DC    X'002F0007'              23A5 CCHH LAST PRIMARY   S20201
         DC    H'1'                     23A5 TOTAL NO. ALTS.     S20201
         DC    H'48'                    23A5 VTOC-FMT4-FIELD9    S20201
         DC    H'8'                     23A5 NO. TRKS/CYLINDER   S20201
         DC    H'14568'                 23A5 TRACK CAPACITY      A56417
         DC    X'027ACA'                23A5 RECORD OVERHEAD     S20201
         DC    X'09'                    23A5 VTOC FLAG           S20201
         DC    H'512'                   23A5 TOLERANCE           S20201
         DC    X'12'                    23A5 DSCBS/TRK           S20201
         DC    X'10'                    23A5 DIRECT BLKS/TRK     A43208
         SPACE 1
* CONTROL FOR 2305 MODEL 2
         SPACE 1
         DC    X'00600000'              23C5 CCHH LAST ALT.      S20201
         DC    X'0000FFF9'              23C5 CHANGE CYL CONV.    S20201
         DC    X'FFFF0008'              23C5 CC-1 HH+XX CONV.    S20201
         DC    X'005F0007'              23C5 CCHH LAST ORIG.     S20201
         DC    H'1'                     23C5 TOT NO. OF ALTS.    S20201
         DC    H'96'                    23C5 VTOC-FMT4-FIELD9    S20201
         DC    H'8'                     23C5 NO TRKS/CYLINDER    S20201
         DC    H'14858'                 23C5 TRACK CAPACITY      A56417
         DC    X'01215B'                23C5 RECORD OVERHEAD     S20201
         DC    X'09'                    23C5 VTOC FLAG           S20201
         DC    H'512'                   23C5 TOLERANCE           S20201
         DC    X'22'                    23C5 DSCBS/TRACK         S20201
         DC    X'1A'                    23C5 DIRECT BLKS/TRK     S20201
* CONTROL FOR 2314
         SPACE 1
         DC    X'00CA0013'        2314  CCHH LAST ALTERNATE
         DC    X'0000FFED'        2314  CONVERSION CHANGE CYLINDERS
         DC    X'FFFF0014'        2314  CONVERSION GIVE CC-1 HH+XX
         DC    X'00C70013'        2314  CCHH LAST ORIGINAL
         DC    H'60'              2314  NUMBER ALTERNATES
         DC    X'00CB'            2314  VTOC-FORMAT4-FIELD9(NO CYL)
         DC    H'20'              2314  NO TRACKS/CYL
         DC    H'7294'            2314  TRACK CAPACITY
         DC    X'922D2D'          2314  RECORD OVERHEAD
         DC    X'01'              2314  FLAG
         DC    H'534'             2314  TOLERANCE
         DC    X'19'          2314     DSCBS/TRACK
         DC    X'11'              2314 DIRECTORY BLKS/TRK          6715
         SPACE 1
* CONTROL FOR 3330
         SPACE 1
         DC    X'019A0012'              3330 CCHH LAST ALT       S20201
         DC    X'0000FFEE'              3330 CYL CHANGE CONV.    S20201
         DC    X'FFFF0013'              3330 CC-1 HH+XX CONV.    S20201
         DC    X'01930012'              3330 CCHH LAST ORIG.     S20201
         DC    H'133'                   3330 NO. OF ALTERNATES   S20201
         DC    X'019B'                  3330 NO. OF CYLINDERS    S20201
         DC    H'19'                    3330 NO TRKS/CYLINDER    S20201
         DC    H'13165'                 3330 TRACK CAPACITY      A56417
         DC    X'BFBF38'                3330 RECORD OVERHEAD     A56417
         DC    X'01'                    3330 VTOC FLAG           S20201
         DC    H'512'                   3330 TOLERANCE           S20201
         DC    X'27'                    3330 DSCBS/TRACK         S20201
         DC    X'1C'                    3330 DIRECTORY BLKS/TRK  S20201
         SPACE 1
* CONTROL FOR 3340 MODEL 36MB
         SPACE 1
MODEL36  DC    X'015C000B'              3340 CCHH LAST ALT      XL03130
         DC    X'0000FFF5'              3340 CYL CHANGE CONV.   XL03130
         DC    X'FFFF000C'              3340 CC-1 HH+XX CONV.   XL03130
         DC    X'015B000B'              3340 CCHH LAST ORIG.    XL03130
         DC    H'12'                    3340 NO. OF ALTERNATES  XL03130
         DC    X'15D'                   3340 NO. OF CYLINDERS   XL03130
         DC    H'12'                    3340 NO TRKS/CYLINDER   XL03130
         DC    H'8535'                  3340 TRACK CAPACITY     XL03130
         DC    X'F2F24B'                3340 RECORD OVERHEAD    XL03130
         DC    X'01'                    3340 VTOC FLAG          XL03130
         DC    H'512'                   3340 TOLERANCE          XL03130
         DC    X'16'                    3340 DSCBS/TRACK        XL03130
         DC    X'10'                    3340 DIRECTORY BLKS/TRK XL03130
         SPACE 1
* CONTROL FOR 3340 MODEL 72MB
         SPACE 1
MODEL72  DC    X'02B9000B'              3340 CCHH LAST ALT      XL03130
         DC    X'0000FFF5'              3340 CYL CHANGE CONV.   XL03130
         DC    X'FFFF000C'              3340 CC-1 HH+XX CONV.   XL03130
         DC    X'02B7000B'              3340 CCHH LAST ORIG.    XL03130
         DC    H'24'                    3340 NO. OF ALTERNATES  XL03130
         DC    X'2BA'                   3340 NO. OF CYLINDERS   XL03130
         DC    H'12'                    3340 NO TRKS/CYLINDER   XL03130
         DC    H'8535'                  3340 TRACK CAPACITY     XL03130
         DC    X'F2F24B'                3340 RECORD OVERHEAD    XL03130
         DC    X'01'                    3340 VTOC FLAG          XL03130
         DC    H'512'                   3340 TOLERANCE          XL03130
         DC    X'16'                    3340 DSCBS/TRACK        XL03130
         DC    X'10'                    3340 DIRECTORY BLKS/TRK XL03130
         SPACE 1
* CONTROL FOR 3350                                             @Z30RSHG
         SPACE 1
         DC    X'022F001D'            CCHH OF LAST ALTERNATE   @Z30RSHG
         DC    X'0000FFE3'            3350 CYL CHANGE CONV.    @Z30RSHG
         DC    X'FFFF001E'            3350 CC-1 HH+XX CONV.    @Z30RSHG
         DC    X'022A001D'            3350 CCHH LAST ORIG.     @Z30RSHG
         DC    H'150'                 3350 NO. OF ALTERNATES   @Z30RSHG
         DC    H'560'                 3350 NO. OF CYLINDERS    @Z30RSHG
         DC    H'30'                  3350 NO TRKS/CYLINDER    @Z30RSHG
         DC    H'19254'               3350 TRACK CAPACITY      @ZM40445
         DC    X'010B52'              3350 RECORD OVERHEAD     @ZM40445
         DC    X'09'                  3350 VTOC FLAG           @Z30RSHG
         DC    H'512'                 3350 TOLERANCE           @Z30RSHG
         DC    X'2F'                  3350 DSCBS/TRACK         @AZ10913
         DC    X'24'                  3350 DIRECTORY BLKS/TRK  @Z30RSHG
* CONTROL FOR 3330 MODEL C
         SPACE 1
         DC    X'032E0012'            3330-C CCHH LAST ALT      XL03145
         DC    X'0000FFEE'            3330-C CYL CHANGE CONV.   XL03145
         DC    X'FFFF0013'            3330-C CC-1 HH+XX CONV.   XL03145
         DC    X'03270012'            3330-C CCHH LAST ORIG.    XL03145
         DC    H'133'                 3330-C NO. OF ALTERNATES  XL03145
         DC    X'032F'                3330-C NO. OF CYLINDERS   XL03145
         DC    H'19'                  3330-C NO TRKS/CYLINDER   XL03145
         DC    H'13165'               3330-C TRACK CAPACITY     XL03145
         DC    X'BFBF38'              3330-C RECORD OVERHEAD    XL03145
         DC    X'01'                  3330-C VTOC FLAG          XL03145
         DC    H'512'                 3330-C TOLERANCE          XL03145
         DC    X'27'                  3330-C DSCBS/TRACK        XL03145
         DC    X'1C'                  3330-C DIRECTORY BLKS/TRK XL03145
         SPACE 1
ADSCB    DC    AL3(DSCBS)
         EJECT
*                        **********************************************
*                        *        CTL STATEMENT ANALYSIS ROUTINES     *
*                        **********************************************
CLRSCAN  XC    SWITCHRD(118),SWITCHRD  CLEAR SCAN WORK AREA.       1095
         MVI   SYOCCW+7,X'80'          RESET SYOUT CCW
         XC    CVBCOM(ONE11),CVBCOM    CLEAR SWITCHES            S20201
         MVI   BBCCHH+K1,H00           CLEAR BIN NUMBER IF ANY   S20201
         MVI   ALTHOLD1+K3,H00           EVERYWHERE              S20201
         MVI   SEEKADR+K1,H00              SEEK                  S20201
         MVI   SEEKIPL+K1,H00                IS                  S20201
         MVI   VBUFFR0-K1,H00                  USED              S20201
         MVC   ADR13(4),ADR13A         RESET ADDRESS OF 131313 BUFFER
         MVC   TWENTY8H(2),TWENTY8A     RESET LENGTH OF ONE-THREE BUFF
         MVC   FIVEER0(8),W5E          RESET SURFACE ANALYSIS CCW LIST
         MVC   SETFMK,SAVEFMK          RESTORE FILE MASK         S20201
         MVI   EXTNTAB+7,X'00'          RESET TO TRACK 0
         XC    DSCBS+9(5),DSCBS+9      INSURE 2ND EXTENT IS CLEARED.
         MVC   PASSCTR(4),F1           REINITIALIZE FOR 1 PASS/TRACK.
         MVC   SRCHHA1(8),SRCHHA2      REINITIALIZE FOR FLAGTEST.
         LA    GR14,SRCHHA1            TIC ADDRESS//DEFAULT=FLAGTEST.
         STH   GR14,TICSCH+2           SET UP TIC FOR FLAGTEST.
TOSCAN   BAL   LINK14,RDCARD           LINK TO CTL CARD SCAN ROUTINE
SCANANL  TM    SWITCHRD,X'80'          IS SCAN ERROR BIT ON
         BO    SCANERR                 GIVE SCAN ERROR MESSAGE.
         TM    SWITCHRD,X'08'          IS THIS A COMMAND
         BC    1,CTLPRNT               GO TO CTL STATEMENT PRINT
         TM    SWITCHRD,X'04'          IS THIS A KEYWORD
         BC    1,KEYLUP                YES - PERFORM KEYWORD LOOKUP
         B     SCANERR                 SCAN ERROR
CTLPRNT  TM    SEQSW,X'02'             IS SYSOUT DEFINED
         BC    14,OPRLUP               PERFORM COMMAND LLOKUP.
         CLI   JOBSW,X'00'               YES, IS JOB STATEMENT PRINTED
         BC    7,OPRLUP                YES-BYPASS INITIAL PRINT ROUTINE
         CLI   UCBSYO,T3800            IS WRITER A 3800?       @Z40MSTT
         BNE   NO3800                  NO, SKIP 3800 CODE.     @Z40MSTT
         STM   R0,GR15,REGSV4          SAVE REGISTERS.         @Z40MSTT
         LA    GR2,UCBSYO              GET UCB ADDRESS.        @Z40MSTT
         LA    GR3,INITCCW             GET INITIALIZE CCW.     @Z40MSTT
         BAL   LINK9,STARTIO           ISSUE EODSET TO 3800.   @Z40MSTT
         LM    R0,GR15,REGSV4          RESTORE REGISTERS.      @Z40MSTT
NO3800   EQU   *                                               @Z40MSTT
         STM   SCANADR,LENGTH,REGSV1   SAVE SCAN REGS
         MVC   PRWD+20(11),OPRMSG+30   SET UP TO PRINT DASDI HEADER.
         LA    GR1,31                  LENGTH OF MESSAGE IN BYTES.
         BAL   LINK9,PRNT              PRINT HEADER MESSAGE.
         MVC   PRWD(80),JOBSAV         NO - PRINT JOB STM
         BAL   LINK9,WASH              CALL THE PRINT ROUTINE   49363
         MVC   PRWD(80),MODSAV         PRINT MOD STATEMENT
         BAL   LINK9,WASH              CALL THE PRINT ROUTINE   49363
         MVI   JOBSAV,C' '              CLEAR
         MVC   JOBSAV+1(159),JOBSAV        BUFFER
         MVI   JOBSW,X'01'              SET JOB SWITCH
         LM    SCANADR,LENGTH,REGSV1   RESTORE SCAN REGISTERS
*    OPERATOR LOOKUP ROUTINE
OPRLUP   LA    GR3,OPRTAB              START OF COMMAND TABLE.
         LA    GR5,OPRTAB1             END OF COMMAND TABLE.
SCANTBL  STC   LENGTH,SAVLGTH          SAVE LENGTH FROM SCAN.
         CLI   SAVLGTH,8               IS LENGTH MORE THAN 8.
         BH    SCANERR                 YES-CONTROL STATEMENT ERROR.
         LA    GR4,12                  TABLE INCREMENTING VALUE.
         MVI   SARG,BLANKCOL           CLEAR FIRST BYTE
         MVC   SARG+1(7),SARG          CLEAR REST SEARCH ARGUMENT AREA.
         BCTR  LENGTH,0                DECREMENT LENGTH FOR EXECUTE.
         EX    LENGTH,OPRLUP3          MOVE PARAMETER TO STORAGE AREA.
OPRCMP   CLC   SARG(8),0(CSR3)         TEST IF SEARCH ARGUMENT IN TABLE
         BNE   OPRLUP2                 NO--CONTINUE SCAN OF TABLE.
         LA    CSR3,8(CSR3)            ENTRY TO ROUTINE IN TABLE.
         BR    CSR3                    ENTER PROPER ROUTINE.
OPRLUP2  BXLE  CSR3,CSR4,OPRCMP        LOOP TO CONTINUE SEARCH.
         B     SCANERR                 INVALID OPERATOR
OPRLUP3  MVC   SARG(1),0(SCANADR)      MOVE IN SEARCH
*    KEYWORD LOOKUP ROUTINE
KEYLUP   LA    GR3,KEYTAB              START OF KEYWORD TABLE.
         LA    GR5,KEYTAB1             END OF KEYWORD TABLE.
         B     SCANTBL                 GO SEARCH FOR KEYWORD.
*
JOBANL   MVC   JOBSAV(80),SWITCHRD+1   SAVE JOB STATEMENT
         MVI   EDJTSW,X'00'             TURN OFF UNIT EXCP EOF SWITCH
         OI    SEQSW,X'01'             SET SEQUENCE SWITCH
         OI    SWITCHRD,X'40'          SET BYPASS SW ON
         B     TOSCAN                  RETURN TO SCAN
*
MODANL   MVC   MODSAV(80),SWITCHRD+1   SAVE MOD STATEMENT
         TM    SEQSW,X'01'             CHECK STATEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR ROUTINE
         OI    SEQSW,X'02'             SET SEQUENCE SWITCH
         B     TOSCAN                  RETURN TO SCAN
*
DFDANL   TM    SEQSW,X'03'             CHECK STATEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR
         OI    SEQSW,X'04'             SET SEQUENCE SWITCH
         MVI   PRNTSW,X'01'            SET SWITCH TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
*
ALTANL   TM    SEQSW,X'03'             CHECK STATEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR
         TM    SEQSW,X'04'             IS THIS A 2ND GETALT REQUEST
         BC    14,ALTANLZ                 NO
         MVC   JOBSAV(80),SWITCHRD+1       YES, SAVE 2ND GETALT STATEMT
         B     GETALTYZ                   AND PROCESS N-1 REQUEST
ALTANLZ  OI    SEQSW,X'1C'              SET SEQUENCE SWITCH
         MVI   GTALTSW,X'FF'           SET GETALT FUNCTION SW - ON
         MVI   PRNTSW,X'01'            SET SWITCH TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
ALTRTN   TM    SEQSW,X'20'             HAS END CARD BEEN RECEIVED
         BC    1,ENDJOBX                  YES - PRINT END CARD
         MVI   BYPASS,X'00'            CLEAR GETALT BYPASS SWITCH
         MVI   PRNTSW,X'01'            SET TO PRINT STATEMENT.
         B     TOSCAN                  NO - PROCESS NEXT CTL STATEMENT
         SPACE 1
ENDJOBX  MVC   PRWD(80),SWITCHRD+1      PRINT END STATEMENT
         BAL   LINK9,WASH               CALL THE PRINT          49363
         BC    15,EOJ                   PROCEED TO END OF JOB
VLDANL   TM    SEQSW,X'07'             CHECK STAGEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR
         OI    SEQSW,X'08'             SET RESTORE BIT IN SEQSW
         MVI   PRNTSW,X'01'            SET SWITCH TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
*
VTOCANL  TM    SEQSW,X'0F'             CHECK STAGEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR
         OI    SEQSW,X'10'             SET VTOCD SEQUENCE BIT
         MVI   PRNTSW,X'01'            SET SWITCH TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
*
ENDANL   TM    SEQSW,X'1F'             CHECK STATEMENT SEQUENCE
         BC    14,ABSEQERR             STATEMENT SEQUENCE ERROR
         OI    SEQSW,X'20'             SET END SEQUENCE BIT
ENDANLA  TM    BINSW,X'03'              WAS DEVICE 2321 AND BIN REQUEST
         BM    SCANERR                    NO ERROR
         TM    IPLSW,X'03'              WERE BOTH IPL REQ AND IPLTXT
         BM    SCANERR                   NO - ERROR
         CLI   UCBTO,T3330              IS TODEV A 3330         XL03145
         BL    SEEK400                  NO, SEEK TO CYL 400     XL03145
END400   CLI   GTALTSW,X'FF'            IS THIS A GET ALT REQUEST
         BC    8,GETALTYZ                 YES - PERFORM GETALT FUNCTION
         TM    FLGDRUM,H24              WAS 2305 AND MODEL SPEC  S20201
         BM    SCANERR                 NO - ERROR                S20201
         MVC   PRWD(80),SWITCHRD+1     SET UP
         LA    CSR1,80                  MESSAGE BYTE COUNT
         BAL   LINK9,WASH                AND PRINT "END STATEMENT"49363
         CLI   KEYSEQ,X'7F'            ARE ALL REQUIRED PARAMS IN
         BC    7,SCANERR               NO - CTL STATEMENT ERROR
         CLI   VOLCHKSW,X'FF'          IS VOL LABEL CHK BYPASS ON
         BC    8,GEN5E                 YES - BYPASS VOL CHK
         B     VOLCHK                  NO - PERFORM VOL LABEL CHK
LASTCARD MVC   PRWD(80),SWITCHRD+1     PRINT
         LA    CSR1,80                   LAST
         BAL   LINK9,WASH                  CARD                   49363
         B     EDJTF                    GO TO ENDOFJOB WAIT
SEEK400  LA    UCBREG,UCBTO             POINTER TO DASD UCB     XL03145
         LA    CCWREG,SKCYL400          POINTER TO CCW LIST     XL03145
         MVI   SEEKSWT,H01              SET SW FOR SEEKING 400  XL03145
         BAL   LINK9,STARTIO            STARTIO                 XL03145
         CLI   SEEKSWT,H01              IS SEEK TO 400 GOOD     XL03145
         MVI   SEEKSWT,H00              TURN SEEK SW OFF        XL03145
         BE    SCANPRT                  YES, ERROR-PRINT MSG    XL03145
         B    END400                   NO - LESS THAN 400 CYLYL XL03145
*
GETTEXT  TM    SEQSW,X'1F'
         BC    14,ABSEQERR
         OI    IPLSW,X'02'
         B     ENDANLA
         SPACE 1
SVMODEL  BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'01'            SET MSG TODEV INDICATOR ON
         MVC   SYOMDL(4),0(SCANADR)    SAVE MODEL NUMBER
         LA    CSR2,SYOMDL             ESTABLISH UCBSYO
         LA    CSR3,MODTAB             TABLE LIMITS START AND
         LA    CSR5,DEVTAB-5           END ADR RESPECTIVELY
         BAL   LINK9,DEVLUP
         MVC   UCBSYO(1),0(CSR3)       SET DEVICE TYPE CODE
         B     TOSCAN                  RETURN TO SCAN
         SPACE 1
SKCYL400 CCW   7,C400,X'20',6           CHANNEL COMMAND         XL03145
C400     DC    X'000001900000'          SEEK TO CYL 400         XL03145
SEEKSWT  DC    X'00'                    SWITCH FOR INITIAL SEEK XL03145
*
SVDEV    BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'02'            SET MSG TOADDR INDICATOR ON
         MVC   SYODEV(3),0(SCANADR)    SAVE DEVICE ADDRESS
         LA    CSR2,SYODEV
         BAL   LINK9,INTFCECK          CHECK INTERFACE ADR
         BC    15,SCANERR              GO TO SCAN ERROR ROUTINE
         STH   CSR1,UCBSYO+2           SET INTERFACE ADR
         B     TOSCAN                  RETURN TO SCAN
C2305    MVC   CK23A5+L2(K1),TOMDL+L5   MOVE MODEL              XL03145
         OI    FLGDRUM,H04              SET 2305 PARM           XL03145
         B     S2305M                   SET MODEL FOR 2305      XL03145
         SPACE 2
SVTOMDL  CLI   SEQSW,X'03'             IS THIS A MSG CTL STATEMENT
         BC    8,SVMODEL               YES - SAVE MSG TOADDR
         SPACE 2
         BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'04'            SET DADEF TODEV INDICATOR ON
         MVC   TOMDL(L6),L0(SCANADR)    SAVE TO MODEL NUMBER    XL03145
         CLC   CK2305,TOMDL            IS DEVICE 2305            S20201
         BNE   SVMOD                    NO,GET DEV TAB INFO      S20201
         CLC   CK23051(L6),TOMDL       IS DEVICE 2305-1         XL03145
         BE    C2305                   YES, SET MODEL           XL03145
         CLC   CK23052(L6),TOMDL       IS DEVICE 2305-2         XL03145
         BE    C2305                   YES, SET MODEL           XL03145
         OI    FLGDRUM,H04             SET 2305 PARAM.           S20201
         TM    FLGDRUM,H20             TEST FOR MODEL            S20201
         BZ    TOSCAN                  OFF IF NO MODEL PARAM.    S20201
SV2305   MVC   TOMDL,CK23A5            MOVE 2305 MODEL TO TOMDL  S20201
         MVC   SETFMK,INCR2             INHIBIT COMMAND RETRY    S20201
SVMOD    LA    CSR2,TOMDL              CHECK DASD MODEL          S20201
         MVI   DEVSW,H01                SET DEVICE SWITCH       XL03145
         LA    CSR3,DEVTAB             DEVICE TABLE LIMITS START ADR
         LA    CSR5,TABEND-5           AND END ADR RESPECTIVELY
         BAL   LINK9,DEVLUP            PERFORM C/U ADR CHECK
         MVI   DEVSW,H00               CLEAR DEVICE SWITCH      XL03145
         MVC   UCBTO(1),0(CSR3)        SETUP UCBTO
         TM    KEYSEQ,X'08'            DADEF TOADDR IND ON     @ZA01227
         BC    1,SETCBUF               YES-SET CONTROL BUFFER  @ZA01227
         B     TOSCAN                  RETURN
*
SVTODEV  CLI   SEQSW,X'03'             IS THIS A MSG CTL STATEMENT
         BC    8,SVDEV                 YES - SAVE MSG TODEV
         BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'08'            SET DADEF TOADDR INDICATOR ON
         MVC   TODEV(3),0(SCANADR)     SAVE TO DEVICE ADDRESS
         LA    CSR2,TODEV              CHECK DEVICE INTERFACE ADR
         BAL   LINK9,INTFCECK          CHECK DEVICE INTERFACE ADR
         B     SCANERR                 STATEMENT ERROR
         STH   CSR1,UCBTO+2            STORE DEVICE ADR IN UCB
SETCBUF  EQU   *
*
         SR    REGD,REGD                CLEAR REGISTER           S20201
         IC    REGD,UCBTO               PICK UP DEV TYPE CODE    S20201
         CLI   UCBTO,T2311              IS DEVICE 2311          XL03130
         BNE   PACK3340                 NO SENSE DEVICE TYPE    XL03130
         MVC   IPLTRK0+14(2),TOTLCNTX   MOVE SHORT LENGTH        A67547
         MVC   IPLADR+6(2),TOTLCNTX     OF IPL TEXT TO CCW       A67547
         MVC   STRTREAD+42(2),TOTLCNTX  FOR 2311 TRACKK = 'E29'  A67547
*                                                              @Z30RSHG
*    MUST ISSUE SENSE FOR 3330,333C,3340 TO SEE IF THEY ARE    @Z30RSHG
*    EMULATED, AND FOR 3340 TO DETERMINE 36MB OR 72MB MODULE   @Z30RSHG
*                                                              @Z30RSHG
PACK3340 CLI   UCBTO,T2314             DEV CODE 08 OR LESS     @Z30RSHG
         BNH   TEST3                   YES - NOT EMULATED      @Z30RSHG
         CLI   UCBTO,T3350             IS DEV CODE 0B ?        @Z30RSHG
         BE    MDRID                   YES - NOT EMULATED      @Z30RSHG
         LA    UCBREG,UCBTO             POINTER TO DASD UCB     XL03130
         LA    CCWREG,SENCCW            POINTER TO CCW LIST     XL03130
         BAL   LINK9,STARTIO            STARTIO - SENSE DEVTYPE XL03130
         NI    FLGBYT1,X'FF'-H01       TURN OFF EMULATE BIT    @Z30RSHG
         TM    IOSESV+L2,H08           IS DEVICE EMULATED      @Z30RSHG
         BNO   NOEMUL                  NO - SKIP SET FLAG      @Z30RSHG
         OI    FLGBYT1,H01             YES - SET FLAG          @Z30RSHG
NOEMUL   CLI   UCBTO,T3340             IS DEVICE 3340          @Z30RSHG
         BNE   TEST3                   NO - SKIP TEST MODULE   @Z30RSHG
         TM    IOSESV+L2,H01            36MB DATA MODULE        XL03130
         BO    TEST3                    YES - LOAD TABLE POS A  XL03130
MB72     TM    IOSESV+L2,H02            72MB DATA MODULE        XL03130
         BNO   SCANERR                  ERROR - WRONG DEVICE    XL03130
MDRID    EQU   *                        INCRE FOR 3350         @Z30RSHG
         LA    REGD,K1(REGD)            YES - LOAD TABLE POS B  XL03130
TEST3    SLL   REGD,L5                  INDEX TO PROCBUFF        S20201
         LA    REGD,PROCBUFF(REGD)      ADDR CONTROL BUFFER      S20201
         MVC   PROCBUFF(L32),L0(REGD)  SAVE CONTROL BUFFER       S20201
         CLI   UCBTO,T3330             IS DEVICE 3330            S20201
         BL    SVTOMDL1                 NO TEST FOR 2321       @Z30RSHG
         MVC   SETFMK,INCR1             YES,INHIBIT CMD RETRY    S20201
SV2321   CLI   UCBTO,T2321             IS DEVICE 2321            S20201
         BNE   SVDRUM1                 NO--SKIP BINSW SET        S20201
         OI    BINSW,H01                YES--EXPECT CELL PARM    S20201
SVDRUM1  CLI   UCBTO,T2301             IS DEVICE 2301            S20201
         BNE   SVDRUM2                 NO, TEST FOR 2303         S20201
         OI    FLGDRUM,H01             YES, SET FLAG             S20201
SVDRUM2  CLI   UCBTO,T2303             IS DEVICE 2303            S20201
         BNE   SVTOMDL1                NO                        S20201
         OI    FLGDRUM,H02             YES, SET FLAG             S20201
SVTOMDL1 XC    VOWNERID(L10),VOWNERID   RESET OWNER ID FIELD     S20201
         LM    REGG,REGH,ORIGENDX      MODIFY
         ST    REGG,STRTADR+2            ORIGENDX
         BAL   LINK9,MODIFYX1             FOR
         STM   REGG,REGH,ALTHOLD            BEGINNING OF ALTERNATES
         MVC   EXTNTAB+20,ALTHOLD
         MVC   EXTNTAB+16(4),ALTHOLD    SET END OF PACK
         LH    REGD,TOTLCNTX            PUT TOTAL COUNT (MAX)
         STH   REGD,ROMAX+6              IN  R0 COUNT FIELD
         STH   REGD,FIVEER0+6            AND
         STH   REGD,ONE3R0+6              ALL
         STH   REGD,FIVEER01+6             PROPER
         STH   REGD,READRO+6                CCWS
         STH   REGD,ERRSEEK1+6         SET UP ERROR RETRY CCW.
         B     TOSCAN                  RETURN
         SPACE 1
SV2305AC BAL   LINK5,GETPAR            GET MODEL PARAMETER       S20201
         MVC   CK23A5+L2(K1),L0(SCANADR) MOVE MODEL              S20201
S2305M   CLI   CK23A5+L2,CHAR1          IS MODEL EQUAL 1        XL03145
         BNE   SV2305C                 NO, SEE IF MODEL 2        S20201
         MVI   CK23A5+L2,CHARA         YES, MAKE MODEL 23A5      S20201
         B     SV2305RT                BRANCH TO RETURN          S20201
SV2305C  CLI   CK23A5+L2,CHAR2         IS DEVICE MODEL 2         S20201
         BNE   SCANERR                 NO, CARD IN ERROR         S20201
         MVI   CK23A5+L2,CHARC         YES, MAKE MODEL 23C5      S20201
SV2305RT OI    FLGDRUM,H20             SET MODEL SWITCH          S20201
         TM    FLGDRUM,H04             TEST FOR TODEV=2305       S20201
         BO    SV2305                  ON IF TODEV=2305          S20201
         B     TOSCAN                  ELSE READ NEXT PARAMETER  S20201
*
IPLANL   BAL   LINK5,GETPAR             GET PARAMETER
         CLC   0(3,SCANADR),YEA        IS IPL REQUESTED
         BNE   TOSCAN                   NO IPL - ASSUMED STATE
         MVI   IPLSW,X'01'              IPL IS REQUESTED
         B     TOSCAN                    RETURN
*
SVVOLID  BAL   LINK5,GETPAR             GET PARAMETER
         MVC   VOLLABEL(6),BLANK       CLEAR VOLID FIELD
         CLC   0(6,SCANADR),SCRATCH    IS THIS A SCRATCH VOLUME
         BC    8,SVVOLID2              YES - BYPASS VOL CHECK
         BCTR  LENGTH,0                REDUCE FIELD LENGTH BY 1
         EX    LENGTH,IDMOVE           EXECUTE MOVE OF VOLID
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD
SVVOLID2 MVI   VOLCHKSW,X'FF'          SET VOL CHK BYPASS SW ON
         B     TOSCAN                  PROCESS NEXT PARAMETER
IDMOVE   MVC   VOLLABEL(1),0(SCANADR)  STORE VOLID
*
TRACKANL BAL   LINK5,GETPAR             GET PARAMETER
         LA    REGF,8                  IS LENGTH
         CLR   REGF,LENGTH               8BYTES
         BC    7,SCANERR               NO - CONTROL STATEMENT ERROR
         LA    REGF,TRACKADR+4         RIGHT ADJUST FOR CHAR INSERTION
         SR    REGF,LENGTH             SUB LENGTH OF FIELD
         BCTR  LENGTH,0                REDUCE FIELD LENGTH BY 1
         EX    LENGTH,MOVE1            EXECUTE MOVE OF TRACKADR
         OC    TRACKADR-4(8),CTOEMASK  CHANGE ALL "C" ZONES TO "E"
*                                        ZONES TO SHORTEN CONVERT TABL
         TR    TRACKADR-4(8),ALTTT-225 CONVERT TO HEX
         PACK  TRACKADR(5),TRACKADR-4(9)  GET RID OF ZONE BITS
         CLC   TRACKADR(L2),ALTENDX    IS CC OF TRACK ADDR GOOD  S20201
         BH    SCANERR                  NO- STATEMENT ERROR      S20201
         CLC   TRACKADR+L2(L2),BMPTK    IS HH GOOD               S20201
         BH    SCANERR                  NO- STATEMENT ERROR      S20201
         CLC   TRACKADR(4),ALTENDX     IS TRACK ADDRESS VALID
         BH    SCANERR                    NO- CONTROL STATEMENT ERROR
         B     TOSCAN                  RETURN TO SCAN ROUTINE
*
GETBIN   BAL   LINK5,GETPAR             GET PARAMETER (BIN NUMBER)
         NI    0(SCANADR),X'0F'         CLEAR FLAG
         MVC   BBCCHH+1(1),0(SCANADR)   STORE BB
         MVC   ALTHOLD1+3(1),BBCCHH+1     EVERY WHERE
         MVC   SEEKADR(2),ALTHOLD1+2        SEEK
         MVC   SEEKIPL+1(1),BBCCHH+1          IS
         MVC   VBUFFR0-1(1),BBCCHH+1            USED
         OI    BINSW,X'02'
         B     TOSCAN
         SPACE 1
PASSANL  BAL   LINK5,GETPAR             GET PARAMETER
         CLC   0(3,SCANADR),YEA        IS BYPASS REQUESTED
         BC    8,PASSYES               YES
         MVI   BYPASS,X'00'            NO - BYPASS IS NOT REQUESTED
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD
PASSYES  MVI   BYPASS,X'FF'            BYPASS IS REQUESTED
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD
         SPACE 1
FLAGTEST BAL   LINK5,GETPAR            GET THE PARAMETER.
         CLC   0(2,SCANADR),NONE       IS PARAMETER EQUAL 'NO'.
         BNE   TOSCAN                  NO--FLAGTEST OPTION SPECIFIED.
         CLI   UCBTO,T3340             3340 DEVICE              AS15479
         BE    TOSCAN                  YES, SET OUR OWN WIRTEHA AS15479
         MVC   SRCHHA1(12),NOFLAG      YES-MUST WRITE HA.
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD.
         SPACE 1
PASSES   BAL   LINK5,GETPAR            GET THE PARAMETER.
         LA    REGF,3                  PUT 3 IN COMPARE REGISTER.
         CLR   LENGTH,REGF             IS LENGTH MORE THAN 3.
         BC    2,SCANERR               YES-CONTROL STATEMENT ERROR.
         XC    PASSCTR(8),PASSCTR      CLEAR THE COUNT BUFFER.
         LA    REGF,PASSCTR+8          END OF COUNT BUFFER.
         SR    REGF,LENGTH             SET UP TO RIGHT JUSTIFY.
         BCTR  LENGTH,0                SET UP FOR EXECUTING.
         EX    LENGTH,MOVE1            MOVE IN THE PASS COUNT.
         PACK  PASSCTR(8),PASSCTR+4(4) REMOVE THE ZONES.
         CVB   GR2,PASSCTR             CHANGE TO BINARY.
         ST    GR2,PASSCTR             SAVE THE PASS COUNT.
         CH    GR2,DEC255              IS THE COUNT MORE THAN 255.
         BC    2,SCANERR               YES-CONTROL STATEMENT ERROR.
         LTR   GR2,GR2                 IS THE COUNT ZERO.
         BZ    SCANCHK                  CHECK IF TODEV IS A 3330 A43889
         B     TOSCAN                  GO SCAN THE NEXT FIELD.
SCANCHK  CLI   UCBTO,T3330              IS DEVICE A 3330/3340   XL03130
         BNL   TOSCAN                   YES, PASSES=0 IS OK     XL03130
         B     SCANERR                  NO, SCAN ERROR- TERM     A43889
*
*    VOLUME LABEL STATEMENT ANALYZATION
*
*
*    VOLUME SERIAL NUMBER CHECK
*
VLSERNO  BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'10'            SET VLD NEWVOLID INDICATOR ON
         MVC   VOLSERNO(6),BLANK       CLEAR VOL SERIAL NO. FIELD
         BCTR  LENGTH,0                REDUCE FIELD LENGTH BY 1
         EX    LENGTH,VLMOVE           EXECUTE MOVE OV VOL LABEL
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD
VLMOVE   MVC   VOLSERNO(1),0(SCANADR)  STORE VOL SERIAL NUMBER
*
*    VOLUME SECURITY NUMBER CHECK
*
VLSECNO  BAL   LINK5,GETPAR             GET PARAMETER
         CLI   0(SCANADR),C'0'         IS SECURITY NUMBER ZERO
         BC    8,VLSECNO1              YES
         CLI   0(SCANADR),C'1'         IS SECURITY NUMBER ONE
         BC    7,SCANERR               NO - STATEMENT ERROR
VLSECNO1 MVC   VOLSECNO(1),0(SCANADR)  INSERT SEC NO IN VOL LABEL
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD
*
*    OWNER IDENTIFICATION CHECK
VLOWNER  BAL   LINK5,GETPAR             GET PARAMETER
         CLI   0(SCANADR),C' '         IS FIRST CHARACTER A BLANK
         BC    8,SCANERR               YES - STATEMENT ERROR
       LR      SCANREG,SCANADR         SAVE SCANADR
VLOWNER1 MVC   VOWNERID+9(1),0(SCANREG)  INSERT CHAR INTO VOL LABEL
         CLI   1(SCANREG),C','         IS NEXT CHARACTER A COMMA
         BC    8,TOSCAN                YES - END OF FIELD
         CLI   1(SCANREG),C' '         IS NEXT CHARACTER A BLANK
         BC    8,TOSCAN                YES - END OF FIELD - RETURN
         CLI   VOWNERID,0              IS FIELD LENGTH EXCEEDED
         BC    7,SCANERR               YES - STATEMENT ERROR
         MVC   VOWNERID(9),VOWNERID+1  SET UP FOR NEXT INSERTION
         LA    SCANREG,1(0,SCANREG)    INCREASE LOCATOR TO NEXT DIGIT
         BC    15,VLOWNER1             INSERT NEXT CHARACTER
*
*        USER LABEL SPACE CHECKING
*
VSPACE   BAL   LINK5,GETPAR             GET PARAMETER
         CLI   0(SCANADR),X'F1'        IS DIGIT LESS THAN 1
         BC    4,SCANERR               YES - STATEMENT ERROR
         CLI   0(SCANADR),X'F7'        IS DIGIT GREATER THAN 7
         BC    2,SCANERR               YES - STATEMENT ERROR
         MVN   SAVSPACE(1),0(SCANADR)  SAVE NUMBER FOR SPACE ALLOCATION
         B     TOSCAN                  RETURN TO SCAN NEXT FIELD
*
*        VOLUME TABLE OF CONTENTS DEFINITION STATEMENT ANALYZATION
*
*        VTOC ADDRESS CONVERSION AND ERROR CHECKING
VTOCDSTR BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'20'            SET VTOCD STRTADR INDICATOR ON
         LA    REGF,VTOCBGN+6           RIGHT ADJUST FOR CHAR INSERTION
         SR    REGF,LENGTH             SUBTRACT LENGTH OF FIELD
         BCTR  LENGTH,0                REDUCE LENGTH OF FIELD BY 1
         EX    LENGTH,MOVE1            EXECUTE MOVE OF VTOCBGN
         PACK  CVBCOM(8),VTOCBGN(6)     PACK RELATIVE VTOCBGN ADR
         CVB   CSR1,CVBCOM             CONVERT ADR TO BINARY
         LTR   CSR1,CSR1               IS VTOCBGN TRACK ZERO
         BC    8,VTOCERR               YES-IMPROPER TRACK ADDRESS.
         ST    CSR1,VTOCBGN            SAVE CONVERTED VTOCBGN
         LR    REGE,CSR1               CONVERT VTOCBGN TO CCHH FORM
         BAL   LINK9,ACTLADR           CONVERT VTOC END ADR TO CCHH
         MVC   EXTNTAB+8(4),ACTRACON   INSERT VTOC IN EXTENT TABLE
         MVC   VOLDSETD(4),ACTRACON    SET VTOC ADR IN VOL LABEL
         MVI   VOLDSETD+4,X'01'        INSERT VTOC RECORD NUMBER
         XC    CVBCOM(6),CVBCOM         CLEAR CVBCOM
         OI    VTOCHCK,X'F0'           INDICATE START ADR. PRESENT
         B     VTOCDCK                 CHECK IF BOTH PARMS PRESENT 1095
MOVE1    MVC   0(1,REGF),0(SCANADR)    SAVE VTOC BEGIN ADR
*
*        VTOCD EXTENT CHECKING
*
VTOCDEXT BAL   LINK5,GETPAR             GET PARAMETER
         OI    KEYSEQ,X'40'            SET VTOCD EXTENT INDICATOR ON
         LA    REGF,VTOCENDX+6          RIGHT ADJUST FOR CHAR INSERTION
         SR    REGF,LENGTH             SUBTRACT LENGTH OF FIELD
         BCTR  LENGTH,0                REDUCE LENGTH OF FIELD BY 1
         EX    LENGTH,MOVE1            EXECUTE MOVE OF VTOCD EXTENT
         PACK  CVBCOM(8),VTOCENDX(6)    PACK RELATIVE VTOCEND ADR
         CVB   CSR1,CVBCOM             CONVERT ADR TO BINARY
         ST    CSR1,VTOCEND            SAVE CONVERTED VTOCEND ADR
         XC    CVBCOM(6),CVBCOM         CLEAR CVBCOM
         OI    VTOCHCK,X'0F'           INDICATE EXTENT PRESENT
*
*        VTOCD SPACE CHECKING
*
VTOCDCK  TM    VTOCHCK,X'FF'           ARE BOTH PARAMETERS PRESENT
         BC    1,VTOCDCK1              YES
         B     TOSCAN                  SCAN NEXT FIELD             1095
VTOCDCK1 L     REGE,VTOCBGN            START ADR OF VTOC
         L     REGD,VTOCEND            END ADR OF VTOC
         BCTR  REGD,0                  END ADR OF VTOC - 1
         AR    REGE,REGD               COMPUTED VTOC END ADR
         BAL   LINK9,ACTLADR           CONVERT START ADR TO ACTUAL
         CLC   ACTRACON(4),ORIGENDX     IS VTOC WITHIN DASD LIMITS
         BC    2,SCANERR               NO--CONTROL STATEMENT ERROR.
         MVC   EXTNTAB+12(4),ACTRACON  INSERT VTOC INTO EXTENT TABLE
         B     TOSCAN                  SCAN NEXT FIELD
*
*    DEVICE TYPE LOOKUP ROUTINE
*
*    REG CSR2 CONTAINS FACTOR TO WHICH COMPARSION IS MADE
*    REG CSR3 CONTAINS BEGIN ADR OF DEVICE LOOKUP TABLE
*    REG CSR5 CONTAINS END ADR OF DEVICE LOOKUP TABLE
*
*    REG CSR3 CONTAINS DEVICE TYPE CODE UPON RETURN TO CALLER
         SPACE 2
DEVLUP   LA    CSR4,5                  INDEX THROUGH TABLE ENTRIES
DEVLUP1  CLC   0(4,CSR2),0(CSR3)       COMPARE ADR IN CSR2 TO DEVTAB
         BNE   DEVLUP2                 NO COMPARE
         CLI   L4(CSR2),C'-'           CHECK FOR MINUS          XL03145
         BE    DEVLUP2A                YES, MUST BE 6 CHAR DEV  XL03145
         LA    CSR3,4(0,CSR3)          RETURN  CSR3 = DEVICE TYPE CODE
         BR    LINK9
DEVLUP2  BXLE  CSR3,CSR4,DEVLUP1       CONTINUE SEARCH
DEVLUP2A LA    CSR3,DEVTAB1            DEVICE TABLE START       XL03145
         LA    CSR5,TABEND1-L7         DEVICE TABLE END         XL03145
DEVLP    LA    CSR4,L7                 INCEX THRU TABLE         XL03145
DEVLP1   CLC   L0(L6,CSR2),L0(CSR3)    COMPARE ADDR TO DEVICE   XL03145
         BNE   DEVLP2                  NO COMPARE               XL03145
         LA    CSR3,L6(L0,CSR3)        GET DEVICE CODE          XL03145
         BR    LINK9                   RETURN                   XL03145
DEVLP2   BXLE  CSR3,CSR4,DEVLP1        CONTINUE SEARCH          XL03145
         B     SCANERR                 ** ERROR
         SPACE 1
DEVSW    DC    X'00'                   TO MODEL SWITCH          XL03145
*
*    CHANNEL CHECK AND CONVERSION ROUTINE
*
*    REG CSR2 CONTAINS THE CHANNEL AND UNIT ON ENTRY
*    REG CSR1 CONTAINS CONVERTED C/U UPON EXIT
*
*
*    CHECK UNIT ADDRESS
*
INTFCECK LA    CSR3,3                   SET COUNTER FOR 3 DIGITS  M6371
INTFCE1  TM    0(CSR2),X'F0'           IS DIGIT A NUMBER
         BC    1,INTFCE2               YES
         CLI   0(CSR2),C'A'            IS DIGIT A HEX DIGIT
         BC    4,0(0,LINK9)            NO - ERROR RETURN TO CALLER
         CLI   0(CSR2),C'F'            DIGIT LESS THAN HEX F
         BC    2,0(0,LINK9)            NO - ERROR RETURN TO CALLER
         TR    0(1,CSR2),CONVTAB+57    YES - CONVERT TO HEX CHARACTER
INTFCE2  LA    CSR2,1(0,CSR2)          INCREASE LOCATOR BY 1
         BCT   CSR3,INTFCE1            ARE BOTH U DIGITS CHECKED
         SH    CSR2,CON03              RESET LOCATOR TO ORIGINAL POINT
         PACK  UNITADR(2),0(3,CSR2)    COMBINE CHANNEL AND UNIT ADR
         LH    CSR1,UNITADR            GET PACKED DEVICE ADR
         SLL   CSR1,16                  CLEAR HIGH ORDER BYTES    M6371
         SRL   CSR1,20                  CLEAR SIGN FROM PACKED    M6371
         BC    15,4(0,LINK9)           NORMAL RETURN TO CALLER
UNITADR  DS    2C                      CONVERTED DEVICE ADDRESS
CON03    DC    AL2(3)                  CONSTANT OF 3
*
SCANERR  TM    SWITCHRD,X'08'          THIS ERROR OCCUR ON A COMMAND.
         BC    14,SCANPRT              NO--HANDLE AS PRINTED STATEMENT.
         MVI   PRNTSW,X'01'            YES-FORCE PRINTING OF STATEMENT.
         BAL   GR14,RDCARD             GO TO PRINT BAD STATEMENT.
SCANPRT  MVC   PRWD(33),SCANMSG        LOAD SCAN ERROR MESSAGE.
         B     ERRPRINT                GO TO GIVE MESSAGE.
         SPACE 1
ABSEQERR TM    SWITCHRD,X'08'          THIS ERROR OCCUR ON A COMMAND.
         BC    14,ABSEQPRT             NO--HANDLE AS PRINTED STATEMENT.
         MVI   PRNTSW,X'01'            YES-FORCE PRINTING OF STATEMENT.
         BAL   GR14,RDCARD             GO TO PRINT BAD STATEMENT.
ABSEQPRT MVC   PRWD(34),SEQMSG         LOAD SEQUENCE ERROR MESSAGE.
ERRPRINT MVC   PRWD+38(17),QUITJOB     JOB TERMINATED PART OF MESSAGE.
         LA    GR1,54                  SIZE OF MESSAGE.
         BAL   LINK9,PRNT              CALL PRINT ROUTINE.
ERRWAIT  B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
         SPACE 1
GETPAR   BAL   GR14,RDCARD             SCAN FOR NEXT PARAMETER.
         TM    SWITCHRD,X'80'          IS SCAN ERROR SWITCH ON?
         BC    1,SCANERR               YES-EXIT TO SCAN ERROR ROUTINE.
         TM    SWITCHRD,X'02'          IS THIS A PARAMETER?
         BC    14,SCANERR              NO--EXIT TO SCAN ERROR ROUTINE.
         BR    LINK5                   RETURN.
VTOCERR  MVC   PRWD(37),VTOCMSG        IMPROPER TRACK ERROR MESSAGE.
         B     ERRPRINT
JOBSAV   DS    20F                     JOB CARD SAVE AREA
MODSAV   DS    20F                     MOD STATEMENT SAVE AREA
SEQMSG   DC    C'IBC103A  STATEMENT SEQUENCE ERROR.'
SCANMSG  DC    C'IBC102A  CONTROL STATEMENT ERROR.'
QUITJOB  DC    C'   JOB TERMINATED.  '
VTOCMSG  DC    C'IBC113W  IMPROPER VTOC BEGIN ADDRESS.'
CK2305   DC    C'2305'                 2305 DEVICE               S20201
CK23A5   DC    C'23A5'                 2305 MODEL 1 OR 2         S20201
CK23051  DC    C'2305-1'               2305 MODEL 1             XL03145
CK23052  DC    C'2305-2'               2305 MODEL 2             XL03145
     EJECT
*    COMMAND LOOKUP TABLE
*
         DS    0F
OPRTAB   DC    C'JOB     '
         B     JOBANL
         DC    C'MSG     '
         B     MODANL
         DC    C'DADEF   '
         B     DFDANL
         DC    C'VLD     '
         B     VLDANL
         DC    C'VTOCD   '
         B     VTOCANL
         DC    C'LASTCARD'
         B     LASTCARD
         DC    C'GETALT  '
         B     ALTANL
TEXTX    DC    C'IPLTXT  '
         B     GETTEXT
OPRTAB1  DC    C'END     '
         B     ENDANL
*    KEYWORD LOOKUP TABLE
*
KEYTAB   DC    C'TODEV   '
         B     SVTOMDL
         DC    C'TOADDR  '
         B     SVTODEV
         DC    C'IPL     '
         B     IPLANL
         DC    C'VOLID   '
         B     SVVOLID
         DC    C'NEWVOLID'
         B     VLSERNO
         DC    C'VOLPASS '
         B     VLSECNO
         DC    C'OWNERID '
         B     VLOWNER
         DC    C'ADDLABEL'
         B     VSPACE
         DC    C'STRTADR '
         B     VTOCDSTR
         DC    C'TRACK   '
         B     TRACKANL
         DC    C'BYPASS  '
         B     PASSANL
         DC    C'FLAGTEST'
         B     FLAGTEST
         DC    C'PASSES  '
         B     PASSES
         DC    C'BIN     '
         B     GETBIN
         DC    C'MODEL   '              MODEL PARAMETER          S20201
         B     SV2305AC                 BR TO CHECK MODEL TYPE   S20201
KEYTAB1  DC    C'EXTENT  '
         B     VTOCDEXT
*
*    DEVICE LOOKUP TABLE
*
*        EACH DEVICE SUPPORTED BY IBCDASDI IS ASSIGNED A UNIQUE
*        HEXADECIMAL CODE WHICH IS RETRIEVED FROM THE DEVICE LOOKUP
*        TABLE AND STORED IN THE APPROPRIATE UCB.  THE CHOICE OF
*        ONE-BYTE CODES IS RESTRICTED AS FOLLOWS:
*        *  ALL DASD DEVICES MUST RECEIVE A CODE VALUE LOWER THEN
*           THE LOWEST CODE ASSIGNED TO A UNIT RECORD OR TAPE
*           DEVICE.  THE LABEL 'DASDMAX' IS EQUATED TO THE HIGHEST
*           CODE ASSIGNED TO A DASD DEVICE AND FACILITATES
*           RECOGNITION OF DASD ERRORS.
         SPACE 2
SYINTAB  DC    C'1402'                  DEVICE TYPE              S20201
         DC    X'10'                    DEVICE CODE              S20201
         DC    C'2540'                  DEVICE TYPE              S20201
         DC    X'10'                    DEVICE CODE              S20201
         DC    C'3505'                  DEVICE TYPE             XL03145
         DC    X'10'                    DEVICE CODE             XL03145
         DC    C'1442'                  DEVICE TYPE              S20201
         DC    X'20'                    DEVICE CODE              S20201
         DC    C'2501'                  DEVICE TYPE               M5714
         DC    X'20'                    DEVICE CODE               M5714
         DC    C'2520'                  DEVICE TYPE               M5714
         DC    X'20'                    DEVICE CODE               M5714
         DC    C'2400'                  DEVICE TYPE              S20201
         DC    X'30'                    DEVICE CODE              S20201
         DC    C'3410'                  DEVICE TYPE              M1828
         DC    X'30'                    DEVICE CODE              M1828
         DC    C'3420'                  DEVICE TYPE              M1828
         DC    X'30'                    DEVICE CODE              M1828
MODTAB   DC    C'1403'                  DEVICE TYPE              S20201
         DC    X'40'                    DEVICE CODE              S20201
         DC    C'3211'                  DEVICE TYPE              S20201
         DC    X'40'                    DEVICE CODE              S20201
         DC    C'1443'                  DEVICE TYPE              S20201
         DC    X'50'                    DEVICE CODE              S20201
         DC    C'1052'                  DEVICE TYPE              S20201
         DC    X'60'                    DEVICE CODE              S20201
         DC    C'3210'                  DEVICE TYPE              S20201
         DC    X'60'                    DEVICE CODE              S20201
         DC    C'3215'                  DEVICE TYPE             XL03145
         DC    X'60'                    DEVICE CODE             XL03145
         DC    C'2400'                  DEVICE TYPE              S20201
         DC    X'30'                    DEVICE CODE              S20201
         DC    C'3410'                  DEVICE TYPE              M1828
         DC    X'30'                    DEVICE CODE              M1828
         DC    C'3420'                  DEVICE TYPE              M1828
         DC    X'30'                    DEVICE CODE              M1828
         DC    C'3800'                  DEVICE TYPE.           @Z40MSTT
         DC    X'70'                    DEVICE CODE.           @Z40MSTT
DEVTAB   DC    C'2311'                  DEVICE TYPE              S20201
         DC    X'01'                    DEVICE CODE              S20201
         DC    C'2302'                  DEVICE TYPE              S20201
         DC    X'02'                    DEVICE CODE              S20201
         DC    C'2303'                  DEVICE TYPE              S20201
         DC    X'03'                    DEVICE CODE              S20201
         DC    C'2321'                  DEVICE TYPE              S20201
         DC    X'04'                    DEVICE CODE              S20201
         DC    C'2301'                  DEVICE TYPE              S20201
         DC    X'05'                    DEVICE CODE              S20201
         DC    C'23A5'                 2305 MODEL 1              S20201
         DC    X'06'                    DEVICE CODE              S20201
         DC    C'23C5'                 2305 MODEL 2              S20201
         DC    X'07'                    DEVICE CODE              S20201
         DC    C'2314'                  DEVICE TYPE              S20201
         DC    X'08'                    DEVICE CODE              S20201
         DC    C'3330'                  DEVICE TYPE              S20201
         DC    X'09'                    DEVICE CODE              S20201
         DC    C'3340'                  DEVICE TYPE             XL03130
         DC    X'0A'                    DEVICE CODE             XL03130
         DC    C'3350'                  DEVICE TYPE            @Z30RSHG
         DC    X'0B'                    DEVICE CODE            @Z30RSHG
TABEND   DS    0F                                                S20201
DEVTAB1  DC    C'3330-1'                DEVICE TYPE             XL03145
         DC    X'0D'                    DEVICE CODE             XL03145
         DC    C'2305-1'                DEVICE TYPE             XL03145
         DC    X'06'                    DEVICE CODE             XL03145
         DC    C'2305-2'                DEVICE TYPE             XL03145
         DC    X'07'                    DEVICE CODE             XL03145
TABEND1  DS    0F                                               XL03145
*
*    DEVICE ID EQUATES
*
T2311    EQU   X'01'                    2311 INDEX               S20201
T2302    EQU   X'02'                    2302 INDEX               S20201
T2303    EQU   X'03'                    2303 INDEX               S20201
T2321    EQU   X'04'                    2321 INDEX               S20201
T2301    EQU   X'05'                    2301 INDEX               S20201
T23A5    EQU   X'06'                    305 MODEL 1              S20201
T23C5    EQU   X'07'                    305 MODEL 2              S20201
T2314    EQU   X'08'                    2314 INDEX               S20201
T3330    EQU   X'09'                    3330 INDEX               S20201
T3340    EQU   X'0A'                    3340 INDEX              XL03130
T3350    EQU   X'0B'                    3350 INDEX             @Z30RSHG
T333C    EQU   X'0D'                    3330 MODEL C INDEX      XL03145
         SPACE 1
T1402    EQU   X'10'                    1402 CODE                S20201
T2540    EQU   X'10'                    2540 CODE                S20201
T1442    EQU   X'20'                    1442 CODE                S20201
T2501    EQU   X'20'                    2501 CODE                 M5714
T2520    EQU   X'20'                    2520 CODE                 M5714
T2400    EQU   X'30'                    TAPE CODE                S20201
T1403    EQU   X'40'                    1403 CODE                S20201
T1443    EQU   X'50'                    1443 CODE                S20201
T1052    EQU   X'60'                    1052 CODE                S20201
T3800    EQU   X'70'                   3800 DEVICE CODE.       @Z40MSTT
         SPACE 1
DASDMAX  EQU   X'0D'                    HIGHEST DASD ID CODE    XL03145
         SPACE 2
EXTNTAB  DC    6F'0'                    EXTENTS  FOR FORMAT 5 DSCB
         EJECT
         SPACE 3
*        ROUTINE TO CALCULATE SEEK ADDRESS
         SPACE 2
ACTLADR  ST    REGE,ACTRACON            SAVE TRK ADDR INCASE 2301
         CLI   UCBTO,T2301             IS DEVICE 2301            S20201
         BCR   8,LINK9                    YES, FINISHED
         LH    REGC,TCTABLE            GET CONVERT FACTOR
         SR    REGD,REGD               CLEAR REGISTER
         DR    REGD,REGC               DVD RTA/TC REGD-HH REGE-CC
         ST    REGD,ACTRACON            CONTAINS HH
         CLI   UCBTO,T2321             IS DASD TYPE 2321         S20201
         BC    8,MOD2321               YES - CALCULATE 2321 ADDRESS
         STH   REGE,ACTRACON            NON 2321 CONTAINS CC      M4946
         BR    LINK9                    RETURN
MOD2321  SR    REGD,REGD                CLEAR FOR DEVIDE
         SRL   REGC,2                   NO CYL/STRIP (20/4)=5
         DR    REGD,REGC                DVD CYL/5 REGD=CYL;REGE=STRIP
         STC   REGD,ACTRACON+2         CONTAINS NUMBER CYLINDERS
         SR    REGD,REGD                CLEAR
         SLL   REGC,1                   NO STRIPS/SCELL (5X2)=10
         DR    REGD,REGC                DVD STRIP/10 REGD=STRIP REGE=SC
         STC   REGD,ACTRACON+1          NUMBER OF STRIPS
         STC   REGE,ACTRACON            NUMBER OF SUBCELLS
         BR    LINK9                    RETURN
         SPACE 3
         EJECT
MODIFYXZ CLC   STRTADR+2(4),ORIGENDX    FINISED WITH ORIGINALS
         BE    CONSTR1                 YES
         SPACE 1
MODIFYX1 L     REGG,STRTADR+2          GET CURRENT ADDRESS
         CLC   STRTADR+5(1),BMPTK+1     LAST TRACK OF CYLINDER
         BE    CHANGEX                    YES, CHANGE CYLINDERS
         A     REGG,F1                 NO - INCRIMENT
         B     CHANGEX1                 STORE AGAIN
         SPACE 1
CHANGEX  A     REGG,CNGCYLX             CHANGE CYLINDERS
         CLI   STRTADR+4,X'04'         2321 CYLINDER CHANGE NECESSARY
         BE    CKCYL21                   YES
CHANGEX1 ST    REGG,STRTADR+2           STORE AGAIN
         ST    REGG,SKADCCHH            SAVE CCHH VALUE        @ZA03395
         BR    LINK9                    RETURN
         SPACE 1
CKCYL21  AL    REGG,Z000FB00            UPDATE CYLINDER
         CLI   STRTADR+3,X'09'         END OF STRIP
         BC    7,CHANGEX1                 NO - RETURN
         AL    REGG,Z0F60000              YES - UPDATE SUBCELL
         B     CHANGEX1                 RETURN
         SPACE 1
F1       DC    F'1'                     INCRIMENT TO BUMP TRACK
F2       DC    F'2'                    COMPARISON CONSTANT.
Z000FB00 DC    X'0000FB00'              CHANGE STRIPS
Z0F60000 DC    X'00F60000'             CHANGE SUBCELLS
     EJECT
VOLCHK   BAL   LINK15,CKVOLLBL         PERFORM VOLUME LABEL CHECK
*
GEN5E    EQU   *                                               @Z30RSHG
         TM    FLGBYT1,H01             IS DEV EMULATED ?       @Z30RSHG
         BO    BLDPAT                  YES - BUILD PATTERN     @Z30RSHG
         CLI   UCBTO,T3330             IS THIS A 3330 TYPE DEV  AS15479
         BE    INTALT                  NO SURFACE ANAL ALLOWED  AS15479
         CLI   UCBTO,T333C             3330-1      DEVICE TYPE @Z30RSHG
         BE    INTALT                  NO SURFACE ANAL ALLOWED @Z30RSHG
BLDPAT   EQU   *                                               @Z30RSHG
         XC    HALF,HALF               CLEAR HALFWORD           AS15479
         LH    REGF,FIVEER0+6          GET TRACK CAPACITY       AS15479
         LA    GR8,K9                  FROM THE TRACK CAPACITY  AS15479
         SR    REGF,GR8                SUBTRACT 9 FOR ALGORTHYM AS15479
         STC   REGF,HALFWD+K1          SAVE LAST BYTE OF LENGTH AS15479
         SRL   REGF,L8                 SHIFT RIGHT 8 BITS       AS15479
         STC   REGF,HALF+K1            SAVE LOOP COUNTER        AS15479
         SPACE 1
         LM    GR8,GR9,ADR13           5E, 13 BASE REGS.        AS15479
         CLI   UCBTO,T3330             3330, 3C, 40, 50, TYPE  @Z30RSHG
         MVC   TAB5E(8),PATTERN        ALL OTHER  TEST PATTERN  AS15479
         BL    HEX55                   NO - USE HEX '55' ANAL  @Z30RSHG
         MVC   TAB5E(8),TEST3340       WORST CASE TEST PATTERN  AS15479
HEX55    L     REGE,ADR5E              ADDR WORST CASE BUFFER   AS15479
         LH    GR8,DEC255              MAX AMOUNT TO TRANSFER   AS15479
LOOP5E   EX    GR8,TRANSFER            EXECUTE MOVE 256 BYTES   AS15479
         LA    REGE,TWO56(REGE)        INCRIMENT BY 256         AS15479
         BCT   REGF,LOOP5E             LOOP TO FILL BUFFER      AS15479
         LH    GR8,HALFWD              GET REMAINING LENGTH     AS15479
         EX    GR8,TRANSFER            EXECUTE MOVE OF PATTERN  AS15479
         SPACE 1
         LH    REGF,HALF               GET TRACK CAPACITY       AS15479
         L     REGE,ADR13              ADR OF HEX 00 BUFFER     AS15479
         MVC   L0(L8,REGE),CLEAR       SETUP TO GEN X'00'       AS15479
         LH    GR8,DEC255              MAX AMOUNT TO TRANSFER   AS15479
LOOP13   EX    GR8,TRANSFER            EXECUTE MOVE 256 BYTES   AS15479
         LA    REGE,TWO56(REGE)        STEP REGE BY 256         AS15479
         BCT   REGF,LOOP13             LOOP,RETURN              AS15479
         LH    GR8,HALFWD              GET REMAINING LENGTH     AS15479
         EX    GR8,TRANSFER            EXECUTE MOVE OF PATTERN  AS15479
LOOP13A  CLI   GTALTSW,X'FF'           IS THIS A GETALT REQUEST AS15479
         BC    8,SEEK                  YES CHECK THE TRACK      AS15479
         B     INTALT                  END OF PATTERN SETUP     AS15479
TRANSFER MVC   L8(L0,REGE),L0(REGE)   MOVE 256 BYTES OF PATTERN AS15479
TEST3340 DC    XL8'76B3BD1FAAAAFFFF'   3340 WORST CASE  PATTERN AS15479
PATTERN  DC    XL8'5555555555555555'   OTHER DEVICE TEST PATRN  AS15479
HALF     DC    H'0'                    BUFFER OF 256BYTES/TRACK AS15479
HALFWD   DC    H'0'                    BUFFER FOR LOOP CTR.     AS15479
K9       EQU   9                       CONSTANT OF 9            AS15479
         SPACE 2
*        INITIALIZE ALTERNATE TRACKS ROUTINE
*
INTALT   MVC   SAVEVTOC+8(6),ALTHOLD    STORE BEGINNING ALT AND COUNT
         MVC   STRTADR(6),ALTHOLD-2     PREPARE TO CHECK ALTERNATES
         MVI   STRTADR+1,X'01'          SET ALTERNATE FLAG.
         MVC   SKADCCHH(4),STRTADR+2    SAVE SEEK VALUE        @ZA03395
         L     RTRKADR,ALTHOLD          SET REGISTER  FOR 2321
         CLI   UCBTO,T2321              IS THIS A 2321 DEVICE    S20201
         BE    WRITECTA                   YES
         CLI   UCBTO,T3330             IS THIS A 3330 DEVICE     S20201
         BL    FORM3330                YES, NO MORE CCW CHANGES XL03145
INTXX    MVI   ALTSW,H01                SWT FOR NEXT AVAILABLE  AS15479
         CLI   PASSCTR+3,X'00'          DOES PASSES=0           AS15479
         BE    INTXX1                   YES,DO QUICK DASDI      AS15479
         CLI   UCBTO,T3340             IS THIS A 3340 DEVICE    AS15479
         BE    FORM3330                YES, ALLOW SURFACE ANAL  AS15479
         MVI   BYPASS,X'FF'             SET BYPASS SWITCH        A43889
FORM3330 CLI   BYPASS,X'FF'             BYPASS SURFACE ANALYSIS  A43889
         BNE   TESTDRM                 NO--GO SEE IF THIS IS A DRUM.
         MVC   WRITHA(8),TICWR0        YES, SET CCW LIST TO DO SO
         MVC   SRCHHA1(8),SRCHHA2      INSURE FLAG IS TESTED.
         LA    GR15,SRCHHA1            TIC ADDRESS.
         STH   GR15,TICSCH+2           SET UP THE TIC.
TESTDRM  TM    FLGDRUM,H07             IS THIS A DRUM DEVICE     S20201
         BZ    INTALTR                 NO, MAY BE FLAGTEST       S20201
NOFLGTST MVC   SRCHHA1(L12),NOFLAG      SET FOR NO FLAG TEST     S20201
         CLI   BYPASS,X'FF'            IS THE BYPASS OPTION SPECIFIED.
         BNE   INTALTR                 NO--GO TO SURFACE ANALYSIS.
         MVC   TICSCH(8),TICWR0        YES-MOVE UP TIC TO FORMAT.
         SPACE 1
INTALTR  CLC   STRTADR+2(4),ALTENDX     LAST ALTERNATE
         BH    INTORG                     YES, CHECK ORIGINALS
         MVC   SEEKADR+2(4),STRTADR+2  ESTABLISH SEEK ADR
         TM    FLGDRUM,H04             IS DEVICE A 2305          S20201
         BNO   NTZEUS                  BRANCH IF NOT             S20201
         SPACE 1
         CLI   GTALTSW,X'FF'                 CHECK GETALT RTN    M0990
         BE    CONT1                                             M0990
         CLI   BYPASS,X'FF'       IS THE BYPASS OPTION SPECIFIED.M0990
         BE    ALTZEUS                 YES--DO NOT REMOVE ALT    M0990
CONT1    EQU   *
         MVI   STRTADR+K1,H02           SET BIT 6 TO REMOVE ALT  S20201
         MVI   XXXR0+L4,H20             SET CCW FOR 2305 SPARING S20201
NTZEUS   MVI   STRTADR+K1,H01           TURN OFF BIT 6         @ZM40038
         CLI   UCBTO,T3350              MADRID ?               @ZM40445
         BE    ALTFOK                   YES                    @ZM40445
         CLI   UCBTO,T3340              WINCHESTER ?           @ZM40445
         BE    ALTFOK                   YES, LEAVE             @ZM40445
         MVI   STRTADR+1,H00            TURN OFF BIT 6,7       @ZM40445
ALTFOK   BAL   LINK15,INITRK            DO TRACK CHECK         @ZM40445
         MVI   XXXR0+L4,H40            RESTORE CCW               S20201
         B     INTALTR                 RETURN TO PROCESS NEXT TRACK
*
ALTZEUS  BAL   LINK15,INITRK            DO TRACK CHECK           M0990
         MVI   ALTCNTX+1,H01     SET THE ALTERNATE COUNT TO ONE  M0990
INTORG   MVC   SAVEVTOC+8(6),ALTHOLD    RESTORE ALTERNATE COUNT
         MVC   STRTADR(6),CLEAR         CLEAR STARTING ADDRESS
         MVC   SKADCCHH(4),CLEAR        CLEAR SEEK HOLD AREA   @ZA03395
         SPACE 1
SEEK     MVC   SEEKADR+2(4),STRTADR+2   SEEK PROPER TRACK
         BAL   LINK15,INITRK            GO TO CHECK TRACK
         B     SEEK                     RETURN
         SPACE 2
INITRK   EQU   *                                               @Z30RSHG
         TM    FLGBYT1,H01             IS DEV EMULATED         @ZA27317
         BO    RMDRD                   YES - USE NORMAL CODE   @ZA27317
         CLI   UCBTO,T3350             IS IT REAL 3350         @ZA27317
         BE    RMDRD                   YES - USE NORMAL CODE   @ZA27317
         CLI   UCBTO,T3340             IS IT REAL 3340         @ZA27317
         BE    RMDRD                   YES - USE NORMAL CODE   @ZA27317
         B     NOPE                    SKIP IT                 @ZA27317
*                                                              @Z30RSHG
*    THE FOLLOWING CODE WILL READ AND WRITE BACK THE HOME      @Z30RSHG
*    ADDRESS ON EMULATED 3330 , 3330-1 AND 3340 ALSO ON        @ZA27317
*    REAL 3340 AND 3350                                        @ZA27317
*                                                              @Z30RSHG
RMDRD    EQU   *                                               @Z30RSHG
         LA    UCBREG,UCBTO            GET ADDRESS OF UCB      @Z30RSHG
         MVC   SEEKADR+2(L4),STRTADR+2 POINT TO NXT TRK        @Z30RSHG
         OI    SPIOSW,X'F0'            HNDL ERRORS             @Z30RSHG
         BAL   LINK9,SDCHECK           READ HA                 @ZA27317
*                                                              @Z30RSHG
         CLI   UCBTO,T3340             3340 DEVICE             @ZA27317
         BNE   HAGOOD                  NO - FORGETIT           @ZA27317
         CLC   SDCHCCHH(4),SKADCCHH    HA READ GOOD?           @ZA27317
         BE    HAGOOD                  YES..GO AROUND          @ZA27317
         MVC   PRWD(37),WRONGHA        MOVE MESSAGE IN         @ZA27317
         MVC   PRWD+36(31),VALUES      MOVE IN VALUES          @ZA27317
         UNPK  PRWD+42(9),SDCHCCHH(5)  MOVE IN READ VALUE      @ZA27317
         UNPK  PRWD+56(9),SKADCCHH(5)  MOVE IN S/B VALUE       @ZA27317
         TR    PRWD+42(8),CCTRTAB-240  TRANSLATE READ          @ZA27317
         TR    PRWD+56(8),CCTRTAB-240  TRANSLATE REAL          @ZA27317
         MVI   PRWD+51,C' '            CLEAR EXTRA BIT         @ZA27317
         LA    REG1,67                 LOAD PRINT VALUE        @ZA27317
         BAL   LINK9,PRNT              GO PRINT IT             @ZA27317
         MVC   SKADSAVE(4),SDCHCCHH    INSERT CURRENT CCHH     @ZA27317
         LA    GR3,SKADSAVE            POINT TO OLD CCHH       @ZA27317
         STH   GR3,SRCHHA1+2           SET UP CCW              @ZA27317
         B     DETERMOD                DETERMINE MODEL         @ZA27317
*
HAGOOD   MVC   ROCOUNT(L4),SEEKADR+2   CCHH TO R0 COUNT FIELD  @ZA27317
         LA    CCWREG,WRTALT           SET CCW POINTER         @Z30RSHG
         BAL   LINK9,STARTIO           RE-WRITE HA R0          @Z30RSHG
         TM    SDCHFLAG,H02            BAD TRACK ?             @ZA27277
         BZ    BUMP                    NO, UP SEEK ADDR        @XM08510
DETERMOD NI    STRTADR+1,FD            CLEAR FLAG BIT 6        @ZA27277
         CLI   UCBTO,T3340             IS IT 3340 ?            @ZA27317
         BE    SETWINHA                YES - USE WINCCW        @ZA27317
         CLI   UCBTO,T3350             IS IT 3350 ?            @Z30RSHG
         BNE   NOPE                    NO - MUST BE 333X       @Z30RSHG
         MVC   WRITHA(8),WHAMAD        SET 3350 WRITE HA       @Z30RSHG
         B     NOPE                    TRY TO RECLAIM TRACK    @Z30RSHG
SETWINHA MVC   WRITHA(8),WINCCW        SET 3340 WRITE HA       @ZA27317
         B     NOPE                    TRY TO RECLAIM TRACK    @ZA27317
*
RZDSDMD  DC    H'310'                  3350 R0 DATA SD VALUE   @Z30RSHG
RZCSDMD  DC    H'218'                  3350 R0 CNT SD VALUE    @Z30RSHG
HASDMD   DC    H'124'                  3350 HA SD VALUE        @Z30RSHG
*
NOPE     STM   0,15,REGSV8             SAVE REGS
         MVC   ROCOUNT(4),STRTADR+2    INSERT CURRENT CCHH IN ROCOUNT
         MVC   ROMAX(4),STRTADR+2      INSERT CURRENT CCHH IN ROMAX
         LM    GR8,GR9,ADR13           ESTABLISH 5E,13 BASE REGS S20201
         MVC   TAB5E(8),ROMAX          MOVE RO COUNT FIELD TO TAB5E
         MVC   L0(L8,GR8),ROMAX         MOVE R0 CNT FLD TO TAB13 S20201
         MVI   SPIOSW,X'F0'            SET TRACK CHECK SWITCH
         L     IOLOOP,PASSCTR          SET FOR NUMBER OF PASSES.
         CL    IOLOOP,F1               WILL THERE BE ONE PASS ONLY.
         BE    SEEKRTN                 YES-GO DO IT.
         MVC   SRCHHA3(8),XXXHA        NO--SET UP TO READ FLAG SOONER.
         MVI   SRCHHA3+4,X'00'         TURN OFF THE CHAIN BIT.
*
*        WRITE AND VERIFY HEX '55' BYTE PATTERNS.
*        WRITE AND VERIFY HEX '00' BYTE PATTERNS.
*
SEEKRTN  LA    UCBREG,UCBTO            POINTER TO DASD DEVICE UCB
         LA    CCWREG,WRITE5E          CCW LIST ADR WRITE 5E
         TM    FLGDRUM,H04             IS DEVICE A 2305          S20201
         BNO   NZEUS                   BRANCH IF NOT             S20201
         TM    STRTADR+K1,H02          REMOVE ALTERNATE SPARE    S20201
         BNO   NZEUS                   BRANCH IF NOT             S20201
         MVC   XXXSRCH(8),NOFLAG        SET WRITE HA FOR 2305   XL03130
         MVC   XXXSRCH+8(8),XXXWIN      TIC TO WRITE RO         XL03130
         LA    CCWREG,WRTALT           CCW LIST WRITE HA 2305  @ZA01227
NZEUS    MVI   FLAG,H00                 CLEAR FLAG AREA          S20201
         BAL   LINK9,STARTIO           ISSUE SIO
         TM    FLAG,X'02'              WAS THIS A DEFECTIVE TRACK.
         BO    GETALT3                 YES-FLAG BAD/ASSIGN ALTERNATE.
TESTCNT  CL    IOLOOP,F2               WILL THERE BE ONE MORE PASS.
         BNE   TESTLOOP                NO--DON'T MODIFY THE CCW LIST.
         MVC   SRCHHA3(8),SRCHHA2      REPEAT SEARCH ON HA CCW.
TESTLOOP BCT   IOLOOP,SEEKRTN          ERROR-RETRY TEN TIMES.
         LM    0,15,REGSV8             RESTORE REGS
BUMP     CLI   GTALTSW,X'FF'           IS THIS A GETALT REQUEST
         BC    8,GETALT2               RETURN TO GETALT ROUTINE
         BAL   LINK9,MODIFYXZ           INCRIMENT TRACK NUMBER
         BR    LINK15                  RETURN TO CALLER
         SPACE 2
*
*   CHECK ALTERNATE TRACKS ONLY - 3330
*
INTXX1   CLC   STRTADR+L2(L4),ALTENDX  LAST ALTERNATE            S20201
         BH    INTXX2                   YES,BUILD TRK 0          S20201
         MVC   SEEKADR+L2(L4),STRTADR+L2  ESTABLISH SEEK ADDR.   S20201
         MVI   SPIOSW,H00               SET TRK CHK SWITCH OFF   S20201
         MVI   HABUFR,H00              INSURE FLAG AREA CLEAR    S20201
         BAL   LINK14,GETHAR0          BRANCH TO READ HA AND R0  S20201
         TM    HABUFR,H02              WAS LAST A DEFECTIVE TRK  S20201
         BO    ALTDECR                  YES,DECREMENT ALT CNT    S20201
         CLC   VBUFFR0(L4),HABUFR+1    CCHH=CCHH               @Z30RSHG
         BNE   ALTDECR                 NO - ALT IS ASGND       @Z30RSHG
         NI    ALTSW,H00               TRACK AVAIL.,TURN SWT OFF S20201
         BAL   LINK9,MODIFYXZ          BUMP POINTER TO NEXT ALT  S20201
         B     INTXX1                  PROCESS NEXT TRACK        S20201
         SPACE 1
ALTDECR  BAL   LINK9,MODIFYXZ          BUMP PTR TO NEXT TRACK    S20201
         LH    REGE,ALTCNTX             GET CNT OF ALTS. LEFT    S20201
         BCTR  REGE,R0                 DECREMENT BY 1            S20201
         STH   REGE,ALTCNTX            STORE NEW COUNT           S20201
         TM    ALTSW,H01                ANY AVAILABLE ALTS.      S20201
         BZ    INTXX1                  YES, LEAVE NEXT-ALT PTR   S20201
         C     REGG,ALTENDX            3330 TRK ADDR EXCEEDED    S20201
         BH    INTXX2                  BRANCH YES                S20201
         ST    REGG,ALTHOLD             NO,BUMP PTR TO NEXT ALT  S20201
         B     INTXX1                  PROCESS NEXT ALTERNATE    S20201
         SPACE 1
INTXX2   MVC   SAVEVTOC+L8(K6),ALTHOLD  RESTORE ALTERNATE COUNT  S20201
         B     CONSTR1                 GO CONSTRUCT TRACK 0      S20201
         SPACE 3
ADR13    DC    A(TAB13)                 BASE REG FOR TAB13
ADR5E    DC    A(TAB5E)                 BASE REG FOR TAB5E
AD132301 DC    X'0000A000'              BASE REG FOR TAB13(2301)
TWENTY8H DC    H'28'                                             A30811
EIGHTY2H DC    H'82'
         SPACE 1
ADR13A   DC    A(TAB13)
TWENTY8A DC    H'28'                                             A30811
SKADCCHH DC    2F'0'                    SEEK ADDRESS HOLD AREA @ZA03395
SKADSAVE DC    F'0'                     OLD CCHH VALUE         @ZA03395
SKADHOLD DC    2F'0'                    SAVE SRCH ARG HERE     @ZA03390
WRONGHA  DC    C'IBC114I  INCORRECT HA HAS BEEN READ. '        @ZA03395
VALUES   DC    C'  WAS           S/B            '              @ZA03395
XWINTIC  CCW   8,XXXWIN,0,0             TIC TO WRITE HA        @ZA03390
     EJECT
*     CONSTRUCT AND WRITE TRACK ZERO
*
CONSTR1  SR    REGG,REGG               CLEAR REG
         L     GR9,ADR5E               RESTORE TAB5E BASE REG.   S20201
         MVC   SAVECCWS(250),WRTZERTR   SAVE CCWS AS IS TO MAKE
*                                         REINTERANT
         MVI   SPIOSW,X'00'            CLEAR SURFACE CHK SW
         IC    REGG,SAVSPACE           GET NUMBER OF USER LABELS
         LR    REGH,REGG               NUMBER OF ADDITIONAL LABELS
         LTR   REGH,REGH               USER LABELS SPECIFIED
         BC    7,YESUSER               YES--MODIFY COUNT ACCORDINGLY.
         SPACE 1
         LA    REGH,WRTVOLAB            R3 CCW LAST; SAVE ADDR
         B     NOUSER                   BYPASS USER CCW MODIFICATION
         SPACE 1
YESUSER  BCTR  REGH,0                  REDUCE COUNT BY 1.
         SLL   REGH,3                  MULTIPLY BY 8
         LA    REGH,LABELS(REGH)       GET ADR OF FLAG BYTE
NOUSER   LA    REGG,4(REGG)             IPL EXT RECORD NUMBER
         TM    IPLSW,X'03'              IPL TEXT REQUESTED
         BO    LOADA                     YES, GO GET IT
         MVI   4(REGH),X'00'              NO, SET CHAIN BIT OFF
         MVC   IPLNOCHG+1(3),AIPLABST+1 WRITE WAIT STATE IPL RECORD
         B     CONSTR2                 PREPARE TO WRITE TRACK ZERO.
         SPACE 1
VCKIPL   CLI   UCBTO,T2311              IS DEVICE 2311           S20201
         BE    VCKIPL1                   YES, WRITE IPL TXT ON TRACK 1
         CLI   UCBTO,T2302              IS DEVICE 2302           S20201
         BE    VCKIPL1                    YES, WRITE IPL TXT ON TRACK1
         CLI   UCBTO,T2303              IS DEVICE 2303           S20201
         BNE   TXT2301                    NO, WRITE IPLTEXT ON TRACK 0
VCKIPL1  MVI   4(REGH),X'00'            SET TRACK 0 CHAIN BIT OFF
         LA    REGD,SRCHADR             TRACK 1 TO BE USED
         MVC   SEEKADR+2(4),0(REGD)      STROE IN SEEK ADDRESS
         LA    UCBREG,UCBTO            ADR OF DASD UCB
         LA    CCWREG,SEEKIPLX         CCW LIST TO CHECK IF ALT TRACK
         BAL   LINK9,STARTIO           ISSUE SIO
         TM    HABUFR,X'02'            HOME ADR IND IF BAD TRK @ZA32972
         BZ    WRTIPL                  TRACK IS GOOD, WRT NRM  @ZA32972
         LA    REGD,VBUFFR0            LOAD ADDR OF ALT TRACK
*
WRTIPL   MVC   SEEKIPL+2(4),0(REGD)    INSERT IPL INIT CCHH IN SEEKIPL
         MVI   EXTNTAB+7,X'01'          IPL TXT ON TRACK 1
         LA    CCWREG,IPLSEEK          ADR OF CCW LIST
         BAL   LINK9,STARTIO           ISSUE SIO
CONSTR2  LA    UCBREG,UCBTO            POINTER TO DASD DEVICE UCB
         MVC   STRTADR(6),CLEAR        SET TO ZERO TO WRITE TRK ZERO
         MVC   SEEKADR+2(4),CLEAR       SET TO ZERO TO WRITE TRK ZERO
         MVC   SKADCCHH(4),CLEAR        CLEAR SEEK HOLD AREA   @ZA03395
         LA    CCWREG,WRTZERTR         CCW ADR FOR TRACK ZERO WRITE
         BAL   LINK9,STARTIO           ISSUE SIO
         L     GR9,ADR5E               RESTORE TAB5E BASE REG.   S20201
         MVC   WRTZERTR(250),SAVECCWS   RESTORE CCWS TO MAKE REINTERANT
        B     FMTVTOC                 FORMAT VTOC DSCBS
         SPACE 1
TXT2301  MVC   8(8,REGH),TIC2301        CHAIN IPLTEXT RECORD ON 0
         STC   REGG,IPLADR+4            SET R OF CCHHR
         XC    IPLADR(4),IPLADR         BE SURE TRACK 0
         MVC   SEEKIPL+2(4),IPLADR      RESET IPL ADDRESS
         MVC   SRCHADR(5),IPLADR          FOR BOOTSTRAP
         B     CONSTR2                  WRITE TRACK ZERO
         SPACE 1
SEEKIPLX CCW   7,SEEKADR,X'40',6
         CCW   X'1F',SETFMK,X'40',1
         CCW   X'1A',HABUFR,X'60',5
         CCW   X'16',VBUFFR0,X'20',16
SEEKIPL1 CCW   7,BBCCHH,X'40',6        SEEK DEFECTIVE TRACK.
         CCW   8,SEEKIPLX+8,0,0
         SPACE 1
VBUFFR0X DC    H'0'
         DC    H'0'
VBUFFR0  DS    4F
HABUFR   DC    X'0000000000'
ALTCCWX  CCW   7,VBUFFR0-2,X'60',6
         CCW   8,SETMASK,X'60',5
*    ABSOLUTE LOADER FOR IPL TXT INPUT
*
LOADA    MVC   IPLNOCHG+1(3),AIPLPRES+1  SET UP LOAD AND GO  PSW.
LOAD     LA    GR2,BF1                  ADDRESS OF IPL READ IN BUFFER
         BAL   LINK15,SYSIN            READ A CARD
         L     GR4,IPLCORE             ADDRESS OF IPL CORE RESIDENCE
         CLC   BF1(4),END              IS THIS AN END CARD     @ZA13758
         BC    8,ENDWRT1                 YES, PRINT IT
         CLC   BF1+1(3),TXT            IS THIS A TXT CARD
         BNE   LOAD                    NO% SKIP IT
         MVI   TEXTSW,X'01'            SET SWITCH TELLING A TEXT CARD
*                                        HAS BEEN WRITTEN
         B     LOAD1                   PROCESS THE CARD
         SPACE 1
ENDWRT1  CLI   TEXTSW,X'00'            WAS AT LEAST ONE TEXT CARD READ
         BE    ABSEQERR                NO - SEQUENCE ERROR
         MVC   PRWD(80),BF1            PRINT END STATEMENT
         LA    CSR1,80             LOAD LENGTH OF END CARD         1673
         BAL   LINK9,PRNT              CALL PRINT ROUTINE
         OI    SEQSW,X'20'
         B     VCKIPL
         SPACE 2
*    LOAD TXT CARD INTO CORE
*
LOAD1    LH    GR2,BYTE                GET BYTE COUNT
         BCTR  GR2,0                   REDUCE IT BY ONE
         STC   GR2,LOAD3+1              STORE INTO MOVE
         L     GR5,ADR                 GET TXT ADR
         AR    GR5,GR4                 INCREMENT ADR BY OFFSET 6000
LOAD3    MVC   0(1,GR5),TEXT           LOAD TEXT INTO CORE
         B     LOAD                    GO GET NEXT CARD
         SPACE 2
*    BUFFER FOR TXT INPUT READ
*
         DS    0D
BF1      DS    4C
ADR      DS    6C
BYTE     DS    6C
TEXT     DS    64C
TXT      DC    C'TXT'
END      DC    C' END'                                         @ZA13758
*
*    IPL INITIALIZATION PGM WRITE ROUTINE
*
EOJ      MVC   PRWD(20),EOJMSG         PRINT END OF JOB MESSAGE.
         LA    CSR1,20                 LENGTH OF MESSAGE IN BYTES.
         BAL   LINK9,PRNT              PRINT MESSAGE ROUTINE
EDJT     MVI   EDJTSW,X'01'             SET END OF TASK SWITCH
         B     CLRSCAN                  SEE IF STACKED JOBS
EDJTF    CLI   UCBSYO,T2400             IS SYSOUT TAPE           S20201
         BC    8,TAPEEOF               YES - WRITE TAPE EOF AND REWIND
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
TAPEEOF  LA    UCBREG,UCBSYO           ADR OF SYSOUT UCB
         LA    CCWREG,TAPECCW          ADR OF CCW LIST
         BAL   LINK9,STARTIO           ISSUE SIO
         LPSW  COWAIT                  EOJ TERMINATE WAIT
         SPACE 1
EOJMSG   DC    C'IBC163A  END OF JOB.'
         DS    0D
TAPECCW  CCW   X'1F',CLEAR,X'40',1     WRITE TAPE EOF
         CCW   X'07',CLEAR,X'20',1     REWIND AND UNLOAD
         EJECT
*                ***********************
*                * REGISTER ASSIGNMENT *
*                ***********************
         SPACE 2
RVTOCADD EQU   1
RUCBREG  EQU   2
RWRKREG5 EQU   2
RCCWREG  EQU   3
RBCNTRL  EQU   4
RSTOPB   EQU   5
RBUPDATE EQU   6
RWRKREG6 EQU   RBUPDATE
RWRKREG3 EQU   8                                                 S20201
RWRKREG4 EQU   7                                                 S20201
RLINK9   EQU   9
RWRKREG1 EQU   14                                                S20201
RWRKREG2 EQU   15
         SPACE 1
*               ****************
*               * HOUSEKEEPING *
*               ****************
         SPACE 2
WRTVTOC  MVI   DSCBSW,H01               ERROR WRITING DSCBS      S20201
         L     RLINK9,ADR5E            RESTORE TAB5E BASE REG.   S20201
         CLI   UCBTO,T2301             IS DEVICE 2301            S20201
         BNE   SET2305                 NO                        S20201
         MVC   BMPTK1+K1(K1),ORIGENDX+K3  YES,RESTORE LAST TRACK S20201
SET2305  TM    FLGDRUM,H04             IS DEVICE 2305            S20201
         BNO   SETCNTRL                NO                        S20201
         MVI   BMPTK1+K1,H00           YES, RESET LAST TRACK     S20201
         SPACE 1
SETCNTRL MVC   HH+2(2),FALSEKD          SET R OF CCHHR TO ZERO
         SPACE 1
         LA    RBUPDATE,WRTDSCB         PREPARE LOOP
         SR    RBCNTRL,RBCNTRL            TO BUILD
         IC    RBCNTRL,DSCBPRTK             CCWS
         SLL   RBCNTRL,4                      AND
         LA    RSTOPB,WRTDSCB-16             COUNT
         AR    RSTOPB,RBCNTRL                     FIELDS
         LA    RBCNTRL,16
         SPACE 1
         LA    RWRKREG1,CNTFIELD        GET ADDRESS OF COUNT FIELD
         O     RWRKREG1,WCKDFLG          AND PUT OPCODE FOR CCWS
         SPACE 1
         LA    RWRKREG2,1               PREPARE TO WRITE "R" OF CCHHR
         L     RWRKREG3,VTOCEND        GET VTOC TRACK EXTENT
         L     RWRKREG4,EXTNTAB+8      VTOC START ADR CCHH
         ST    RWRKREG4,DMMYCNTF        STORE CCHH IN COUNT FIELD
         ST    RWRKREG4,CCHH            STORE FOR SEARCH CCW
         ST    RWRKREG4,STRTADR+2       SAVE ADDRESS
         ST    RWRKREG4,SKADCCHH        SAVE SEEK VALUE        @ZA03395
         SPACE 1
         MVI   VTOCSW,X'01'             SET SWITCH TO TELL IF VTOC;DSCB
*                                        HAS BEEN WRITTEN
         SPACE 2
BLDLOOP  MVC   0(16,RBUPDATE),DMMYCCW  GET NEW SET OF CCWS
         MVC   0(8,RWRKREG1),DMMYCNTF   GET NEW COUNT
         ST    RWRKREG1,0(RBUPDATE)     UPDATE ADDRESS OF CCW
         STC   RWRKREG2,4(RWRKREG1)     UPDATE DSCB NUMBER
         LA    RWRKREG2,1(RWRKREG2)     INCRIMENT DSCB NUMBER
         AH    RWRKREG1,EIGHTX         INCREMENT CCW ADR FIELD
         BXLE  RBUPDATE,RBCNTRL,BLDLOOP LOOP UNTIL DONE, THEN WRITE
         SPACE 1
         SH    RBUPDATE,EIGHTX          TURN OFF
         MVI   4(RBUPDATE),X'20'           COMMAND-CHAIN FLAG
         LA    RBUPDATE,CNTFIELD        PREPARE LOOP
         LA    RBCNTRL,8                 TO
         LA    RSTOPB,CNTFIELD-8           MODIFY
         SR    RWRKREG1,RWRKREG1
         IC    RWRKREG1,DSCBPRTK
         SLL   RWRKREG1,3
         AR    RSTOPB,RWRKREG1                COUNT
         SPACE 1
         TM    VTOCSW,X'01'             HAVE VTOC AND DSCB BEEN READ
         BZ    WTDSCBTK                  YES
         SPACE 1
         SPACE 1
         MVC   WRTDSCB+25(3),ADSCB
         SPACE 1
         LA    RVTOCADD,VTOCS           GET ADDRESS OFVTOC FOR DEVICE
         O     RVTOCADD,WCKDFLG          KEEP OPCODE
         ST    RVTOCADD,WRTDSCB+8        STORE IN PROPER CCW
         SPACE 1
*    DETERMINE NUMBER OF DSCBS REMAINING
         SR    RWRKREG5,RWRKREG5       CLEAR REGISTER
         IC    RWRKREG5,DSCBPRTK       GET NUMBER OF DSCBS/TRACK/DASD
         MH    RWRKREG5,VTOCEND+2      MULT BY VTOC EXTENT
         BCTR  RWRKREG5,0              TWO ALREADY ASSIGNED
         BCTR  RWRKREG5,0
PROCEED1 STH   RWRKREG5,50(RVTOCADD)   STORE IN VTOC DSCB
         SPACE 1
WTDSCBTK LA    RUCBREG,UCBTO            WRITE
         LA    RCCWREG,CCWLIST            A TRACK
         BAL   RLINK9,STARTIO               OF  DUMMY DSCBS
          L     RLINK9,ADR5E            RESTORE TAB5E BASE REG.  S20201
         SPACE 1
         TM    VTOCSW,X'01'            WAS VTOC JUST WRITTEN
         BO    MODIFYX                   YES
         SPACE 1
UPDTTRK  BAL   RLINK9,MODIFYX1         UPDATE TRACK              S20201
         L     RLINK9,ADR5E            RESTORE TAB5E BASE REG.   S20201
         ST    RWRKREG4,CCHH            STORE FOR SEARCH ADDRESS
LOOP3B   ST    RWRKREG4,0(RBUPDATE)     MODIFY COUNT FIELD
         BXLE  RBUPDATE,RBCNTRL,LOOP3B  LOOP UNTIL DONE
         LA    RBUPDATE,CNTFIELD       REINITIALIZE COUNTFIELD
         BCT   RWRKREG3,WTDSCBTK        WRITE TRACKS UNTIL DONE
         B     EOJ                     INITIATE EOJ              S20201
         SPACE 2
MODIFYX  MVI   VTOCSW,X'00'            TURN OFF "WRITE VTOC" SWITCH
         MVC   WRTDSCB+8(4),DMMYCCW+8  CHANGE CCW LIST TO
         MVC   WRTDSCB+24(4),DMMYCCW+8   WRITE ONLY DUMMY DSCBS
         B     UPDTTRK                     AND RETURN
         EJECT
*                   ******************
*                   * DEVICE CONTROL *
*                   ******************
         SPACE 2
*  FULL WORDS.
SAVEREGS DS    16F
WCKDFLG  DC    X'1D000000'
EIGHTX   DC    H'8'
         DS    0D
DMMYCCW  CCW   X'1D',CNTFIELD,X'A0',8
         CCW   X'1D',FALSEKD,X'60',140
DMMYCNTF DS    F
         DC    X'002C0060'
FALSEKD  DC    35X'00000000'
CCWLIST  DS    0D
SEEKCCW  CCW   7,BBCCHH,X'60',6
SETMASK  CCW   X'1F',SETFMK,X'40',1                              S20201
SEARCCW  CCW   X'31',CCHH,X'40',5
SEARTIC  CCW   8,SEARCCW,X'60',150
         CCW   8,WRTDSCB,X'40',1       TIC TO CHAIN OF WRT CKDS
PASSCTR  DC    D'0'                    NUMBER OF PASSES /TRACK.
ERRPASS  DC    F'0'                    SAVE COUNT DURING 10 RETRIES.
DEC255   DC    H'255'                  COMPARE CONSTANT FOR PASSES.
         EJECT
GETALTYZ BAL   LINK15,CKVOLLBL          GET NUMBER OF ALTERNATES
         TM    BINSW,X'03'              WAS DEVICE 2321 AND BIN REQUEST
         BM    SCANERR                   NO - ERROR
         MVI   BINSW,X'00'               YES - CLEAR SWITCH
         TM    FLGDRUM,H24              WAS IT 2305 AND MODEL    S20201
         BM    SCANERR                 NO, ERROR                 S20201
         CLI   VOLCHKSW,X'FF'           VOL CHECK BYPASS ON
         BC    8,GETALTX               YES - BYPASS VOL LABEL CHK
         BAL   LINK15,CKVOLLBL         NO - CHECK VOLUME LABEL
         MVI   VOLCHKSW,X'FF'          SET VOL LABEL CHK BYPASS
GETALTX  MVC   STRTADR+2(4),TRACKADR   INSERT TRACK CCHH IN STRTADR
         MVC   SKADCCHH(4),TRACKADR     SET INTO HOLD          @ZA03395
         CLI   BYPASS,X'FF'            IS TRACK CHK BYPASS SW SET
         BC    8,GETALT3               SET UP ALT TRACK ASSIGNMENT
         TM    FLGBYT1,H01             IS DEVICE EMULATED ?    @Z30RSHG
         BO    DOSA                    YES, DO SURF. ANAL.     @Z30RSHG
         CLI   UCBTO,T3330             IS DEV. 3330 ?          @Z30RSHG
         BE    GETALT3                 YES, NO SURF. ANAL.     @Z30RSHG
         CLI   UCBTO,T333C             IS DEV. ICEBERG ?       @Z30RSHG
         BE    GETALT3                 YES, NO SURF. ANAL.     @Z30RSHG
DOSA     EQU   *                                               @Z30RSHG
         MVI   SPIOSW,X'F0'            SET TRACK CHECK SWITCH
         L     IOLOOP,PASSCTR          SET FOR NUMBER OF PASSES.
         B     GEN5E                   GENERATE TRACK CHK DATA
GETALT3  MVI   SPIOSW,X'00'             CLEAR TRACK CHECK SWITCH
         B     ASGNALT
GETALT4  MVC   CCHH(5),SAVALTCC        GET VTOC ADR POINTER
         LA    UCBREG,UCBTO            POINTER TO DASD UCB
         LA    CCWREG,UPVTOC           CCW LIST POINTER
         BAL   LINK9,STARTIO           ISSUE SIO
         B     ALTRTN                  RETURN TO GETALT ROUTINE
               SPACE 2
GETALT2  MVC   PRWD(43),GOODMSG         PRINT TRACK GOOD MESSAGE.
         LA    CSR1,43                 MESSAGE LENGTH IN BYTES.
         BAL   LINK9,PRNT               INK TO MESSAGE PRINT ROUTINE
         BAL   LINK9,PRNT              FORCE DOUBLE SPACE.
         B     ALTRTN                  RETURN - PROCESS NEXT STATEMENT
         SPACE 1
ALTALT   MVC   SEEKADR+2(4),STRTADR+2   SET UP SEEK ADDRESS
         BAL   LINK14,GETHAR0           GET HOME ADDRESS AND R0
         BAL   LINK14,ASGNALTB          FLAG THIS ALT BAD
         L     REG14,ADR5E             RESTORE BASE REGISTER FOR TAB5E.
         CLC   VBUFFR0(4),TRACKADR      WAS THIS ALT ASSIGNED
         BE    GETALT4                 GO UPDATE THE VTOC.
         MVC   TRACKADR(4),VBUFFR0      GET ADDRESS OF ORIGINAL
         B     ORGBAD                   ASSIGN ALT TO IT
         SPACE 1
GOODMSG  DC    C'IBC109I  TRACK CHK INDICATES TRACK IS GOOD.'
         SPACE 2
*    CCW LIST FOR VTOC UPDATE
UPVTOC   CCW   X'07',BBCCHH,X'40',6    SEEK VTOC
         CCW   X'1F',SETFMK,X'40',1    SET FILE MASK             S20201
SRCHVTOC CCW   X'31',CCHH,X'40',5      SEARCH VTOC DSCB RECORD
         CCW   8,SRCHVTOC,X'40',1      TIC
         CCW   5,SAVEVTOC,X'20',96     WRITE VTOC DSCB UPDATED DATA
         EJECT
*        ALTERNATE TRACK ASSIGNMENT ROUTINE
*
*        STRTADR CONTAINS CURRENT CCHH ON ENTRY TO ROUTINE
*        ALTADR CONTAINS CURRENT ALTERNATE ADDRESSON ENTRY TO ROUTINE
*
ASGNALT  MVC   TRACKADR(4),STRTADR+2    SAVE ORIGINAL TRACK ADDRESS
         CLC   ALTCNTX(2),CLEAR         ARE ALTERNATES DEPLETED
         BE    ALTERR                     YES, PRINT MESSAGE
         CLI   UCBTO,T3340             IS THIS A 3340           XL03130
         BNE   WINALT                  NO - PROCEED             XL03130
         MVC   XXXWIN(8),WINCCW        LOAD WIN CCW TO WRITE HA XL03130
WINALT   CLI   GTALTSW,X'FF'           IS THIS A GET ALT FUNCTION
         BC    8,ORGBAD                YES - ASSIGN ALT TRACK
         CLC   STRTADR+2(4),CLEAR      TRACK ZERO
         BC    8,TRKZERO               YES-PRINT MSG AND TERMINATE
ASGNALTC CLC   STRTADR+2(4),ORIGENDX    IS THIS AN ALTERNATE TRACK
         BNH   ORGBAD                  NO - THIS IS AN ORIGINAL
         LH    REGD,ALTCNTX             GET REMAINING ALT COUNT  S20201
         BCTR  REGD,R0                  DECREMENT THE COUNT      S20201
         STH   REGD,ALTCNTX             RESTORE THE COUNT        S20201
         MVC   SAVEVTOC+L12(L2),ALTCNTX MOVE ALT AVAIL TO VTOC   S20201
         SPACE 1
ASGNALTB MVI   STRTADR+1,X'03'          SET FLAG - ALT BAD
         TM    ERR906SW,X'01'          BAD HA OR R0 IN 2321
         BZ    ASGNALTD                  NO
         MVI   ERR906SW,X'00'          RESET BAD HA-R0 SWITCH.
         OI    STRTADR+1,X'40'             YES, SET IN 800 BYTES
ASGNALTD LA    UCBREG,UCBTO            POINTER TO DASD UCB
         LA    CCWREG,WRTALT           POINTER TO CCW LIST
         BAL   LINK9,SDCHECK           SAVE SD AND SET SRCH    @Z30RSHG
         BAL   LINK9,STARTIO           ISSUE SIO SEQUENCE
         BAL   LINK15,TRKPRNT1          PRINT MESSAGE TELLING BAD TRACK
         MVI   STRTADR+1,X'01'          RESET -GOOD ALT - FLAG
         CLI   GTALTSW,X'FF'            WAS THIS GET ALT FOR ALT
         BCR   8,LINK14                   YES, RETURN
         CLI   UCBTO,T2321             IS DEVICE 2321            S20201
         BE    MALTRTN                    YES, RETURN
         BAL   LINK9,MODIFYXZ          INCRIMENT TRACK ADDRESS
         B     INTALTR                  RETURN
         EJECT
*        FORMAT THE ALTERNATE TRACK
        SPACE 2
ORGBAD   DS    0H                                              @ZA03388
         MVC   XXXWIN(8),NOFLAG         LOAD NORMAL WRITE HA   @ZA03388
         CLC   TRACKADR(4),ORIGENDX     IS IT GET ALT FOR ALT  @Z30RSHG
         BH    ALTALT                     YES, GO TO SPECIAL ROUTINE
WRITEHA  MVC   SEEKADR+2(4),ALTHOLD     ENTER ADDRESS OF ALT TRK
         MVC   STRTADR+2(4),ALTHOLD     ENTER ADDRESS OF ALTERNATE TRK
         MVC   SKADCCHH(4),ALTHOLD      SET HOLD RIGHT         @ZA03395
         BAL   LINK14,GETHAR0           GET ALT'S HA AND R0
         L     REG14,ADR5E             RESTORE BASE REGISTER FOR TAB5E.
         TM    HABUFR,X'03'             WAS THIS A BAD ALT     @ZA32972
         BNO   AROUNDGT                   NO                   @ZA32972
         BAL   LINK9,MODIFYXZ           INCRIMENT IT
         ST    REGG,ALTHOLD            STORE IT
         B     ORGBAD
         SPACE 1
AROUNDGT MVI   STRTADR+1,X'01'          SET FLAG BIT ALT ASG
         MVC   ROCOUNT(4),TRACKADR     ENTER ORG TRACK ADR IN RO
         BAL   LINK9,SDCHECK           SAVE SD AND SET SRCH    @Z30RSHG
         LA    UCBREG,UCBTO             POINTER TO DASD UCB
         LA    CCWREG,WRTALT           POINTER TO CCW LIST
         BAL   LINK9,STARTIO           ISSUE SIO SEQUENCE
         SPACE 1
*        FORMAT ORIGINAL TRACK BAD
         SPACE 1
FZEUS    MVC   SEEKADR+L2(L4),TRACKADR ENTER ADDR OF ORIG. TRK   S20201
         MVC   STRTADR+2(4),TRACKADR    ENTER ADDRESS OF ORIGINAL TRACK
         MVC   SKADCCHH(4),TRACKADR     SET HOLD VALUE         @ZA03395
         MVI   STRTADR+1,X'02'          SET FLAG ORIGINAL BAD
         MVC   ROCOUNT(4),ALTHOLD       STORE ALTERNATE ADDRESS IN R0
         TM    ERR906SW,X'01'          BAD HA OR R0 IN IOIU
         BZ    ORGBADA                   NO
         MVI   ERR906SW,X'00'          RESET BAD HA-R0 SWITCH.
         OI    STRTADR+1,X'40'           YES, SET IN 800 BYTES
         MVC   XXXWIN(8),NOFLAG        LOAD NORMAL WRITE HA    @ZA01663
ORGBADA  EQU   *                                               @Z30RSHG
         LA    UCBREG,UCBTO                                    @Z30RSHG
         MVI   STRTADR+1,X'02'         SET FLAG ORIGIONAL BAD  @ZA03391
         BAL   LINK9,SDCHECK           GET SD AND SET CCW      @Z30RSHG
         LA    CCWREG,WRTALT           POINTER TO CCW LIST
         BAL   LINK9,STARTIO           ISSUE SIO SEQUENCE
         BAL   LINK15,TRKPRNT          PRINT BAD TRACK MSG
         LH    REGD,ALTCNTX             DECRIMENT
         BCTR  REGD,0                      ALT AVAILABLE
         STH   REGD,ALTCNTX                  COUNT
         MVC   STRTADR+2(4),ALTHOLD
         MVC   SKADCCHH(4),ALTHOLD      SET HOLD VALUE         @ZA03395
         BAL   LINK9,MODIFYX1          INCRIMENT "NEXTALT" ADDRESS
         ST    REGG,ALTHOLD              AND SAVE IT
         MVC   STRTADR+2(4),TRACKADR   RESTORE ORIGINAL ADDRESS
         MVC   SKADCCHH(4),TRACKADR     SET HOLD VALUE AGAIN   @ZA03395
         MVC   SAVEVTOC+8(6),ALTHOLD   SAVE THE UST ALT AND COUNT
         TM    FLGDRUM,H04             IS DEVICE A 2305          S20201
         BNO   ORGBAD1                 NO                        S20201
         MVI   SAVEVTOC+L11,H00         RESTORE LAST ALT. ADDR   S20201
ORGBAD1  CLI   GTALTSW,X'FF'            IS THIS A GET ALT  REQUEST
         BC    8,GETALT4               YES - RETURN TO GETALT ROUTINE
         CLI   UCBTO,T2321              IS DEVICE 2321           S20201
         BE    MALTRTN                    YES, RETURN
         BAL   LINK9,MODIFYXZ           INCRIMENT TRACK ADDRESS
         B     SEEK                     RETURN
GETHAR0  LA    CCWREG,SEEKIPLX          POINTER TO CCW LIST
         LA    UCBREG,UCBTO             POINTER TO DASD UCB
         BAL   LINK9,STARTIO            ISSUE SIO SEQUENCE
         BR    LINK14                   RETURN
         EJECT
TRACKBAD BAL   LINK15,TRKPRNT1         IDENTIFY THE LAST BAD TRACK.
         MVC   PRWD(28),HAROMSG        SET UP BAD HA-R0 MESSAGE.
         MVC   PRWD+28(17),JOBTERM     INSERT JOB TERMINATED MESSAGE.
         LA    CSR1,44                 MESSAGE LENGTH IN BYTES.
         BAL   LINK9,PRNT
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
HAROMSG  DC    C'IBC108A  HA OR RO FIELD BAD.'
         SPACE 1
JOBTERM  DC    C'  JOB TERMINATED.'
         SPACE 2
ALTERR   BAL   LINK15,TRKPRNT1         IDENTIFY THE LAST BAD TRACK.
         MVC   PRWD(29),ALTMSG         INSERT ALT TRACKS DEPLETED MSG.
         MVC   PRWD+29(17),JOBTERM     INSERT JOB TERMINATED MSG.
         LA    CSR1,45                  MESSAGE LENGTH IN BYTES.
         BAL   LINK9,PRNT              LINK TO PRNT ROUTINE
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
ALTMSG   DC    C'IBC112W  ALT TRACKS DEPLETED.'
         SPACE 2
TRKZERO  LA    CSR1,40                  LENGTH OF MESSAGE
         MVC   PRWD(24),ZEROMSG         INSERT TRACK ZERO BAD MESSAGE
         CLI   IPLSW,X'00'              IPL REQUESTED
         BNE   ZEROTERM                   YES, TERMINATE
         BAL   LINK9,PRNT                 NO, PRINT MESSAGE
         B     ASGNALTC                RETURN TO FINISH JOB.
ZEROTERM MVC   PRWD+24(17),JOBTERM     INSERT JOB TERMINATED MESSAGE
         BAL   LINK9,PRNT
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
ZEROMSG  DC    C'IBC107W  TRACK ZERO BAD.'
         EJECT
*        THE FOLLOWING ROUTINE PRINTS A BAD TRACK
*        MESSAGE DEPENDING ON THE DASD TYPE
TRKPRNT1 MVI   ALTALTSW,X'01'           GET ALT FOR ALT (NONE ASSIGNED)
TRKPRNT  STM   0,15,REGSV8             SAVE REGISTERS
         MVI   STRTADR+1,X'00'         CLEAR BAD TRACK FLAG BITS
         MVC   PRWD(18),BAD             INSERT BAD TRACK MESSAGE
         UNPK  PRWD+20(9),STRTADR+2(5)  INSERT ORIGINAL TRACK ADDRESS
         BAL   LINK9,FINSPRNT          FINISH
         SPACE 1
         MVC   PRWD(18),ALT             INSERT ALTERNATE MESSAGE
         CLI   ALTALTSW,X'01'           IS THIS GET ALT; ALT
         MVI   ALTALTSW,X'00'            CLEAR SWITCH
         BE    FINSPTA                   YES, PRINT BLANKS
         UNPK  PRWD+20(9),ALTHOLD(5)    INSERT ALTERNATE TRACK ADDRESS
         BAL   LINK9,FINSPRNT          FINISH
         SPACE 1
FINSPTB  BAL   LINK9,PRNT               FORCE DOUBLE SPACE
         LM    0,15,REGSV8             RESTORE REGISTERS
         BR    LINK15                  RETURN TO CALLER
         SPACE 1
FINSPRNT TR    PRWD+20(8),CCTRTAB-240   CONVERT TO PRINTABLE FORMAT
         MVI   PRWD+28,C' '             CLEAR UNPK GARBAGE
         LA    REG1,30
         B     PRNT
         SPACE 1
FINSPTA  MVC   PRWD+20(4),NONE          NO
         LA    REG1,30                    ALTS
         BAL   LINK9,PRNT                    ASSIGNED
         B     FINSPTB
         SPACE 1
NONE     DC    C'NONE'
         EJECT
*        SDCHECK - ENTER VIA BAL LINK9 PRIOR TO WRITING HOME   @Z30RSHG
*        ADDRESS IF SD BYTES ARE TO BE PRESERVED. IF UCBTO     @Z30RSHG
*        INDICATES A DEVICE WITH SD BYTES THEN SDCHECK WILL    @Z30RSHG
*        SEEK TO CCHH IN SEEKADR, READ HA INTO STRTADR+1,      @Z30RSHG
*        SENSE AND MOVE SD BYTES INTO MADHA-WINHA-STRTADR      @Z30RSHG
*        AREA,AND SET XXXWIN TO WHA FOR PROPER DEVICE TYPE.    @Z30RSHG
*        IF DEVICE TYPE HAS NO SD BYTES THEN SDCHECK MOVES     @Z30RSHG
*        NOFLAG TO XXXWIN. STRTADR+1(L5) IS SAVED AND          @Z30RSHG
*        RESTORED.                                             @Z30RSHG
*        THE FLAG AND CCHH READ BY READ HA ARE AVAILABLE IN    @Z30RSHG
*        SDCHFLAG-SDCHCCHH ON RETURN TO CALLER.                @Z30RSHG
*                                                              @Z30RSHG
SDCHECK  EQU   *                                               @Z30RSHG
         STM   UCBREG,CCWREG,SDCHSAVR  SAVE REGS               @Z30RSHG
         ST    LINK9,SDCHSAV9                                  @Z30RSHG
         MVC   SDCHSAVE(L5),STRTADR+1  SAVE FLAG-CCHH          @Z30RSHG
         MVC   XXXWIN(L8),NOFLAG       SET WHA                 @Z30RSHG
         LA    UCBREG,UCBTO                                    @Z30RSHG
         LA    CCWREG,WRTSD                                    @Z30RSHG
*
         CLI   UCBTO,T3350             IS IT 3350              @Z30RSHG
         BNE   SDCH50                  NO - TRY ANOTHER        @Z30RSHG
         MVC   XXXWIN(L8),WHAMAD       SET 3350 WHA            @Z30RSHG
         B     SDCHIO                  DO THE IO               @Z30RSHG
*                                                              @Z30RSHG
SDCH50   EQU   *                                               @Z30RSHG
         CLI   UCBTO,T3340             IS IT 3340              @Z30RSHG
         BNE   SDCHIO                  NOT THIS ONE EITHER     @Z30RSHG
         MVC   XXXWIN(L8),WINCCW       SET 3340 WHA            @Z30RSHG
*                                                              @Z30RSHG
SDCHIO   EQU   *                                               @Z30RSHG
         BAL   LINK9,STARTIO           ISSUE SEEK-RHA-SENSE    @Z30RSHG
         MVC   XXXSRCH(L8),SDCHSRCH    GET SEARCH HA CCW       @Z30RSHG
         MVC   SDCHFLAG(L5),STRTADR+1  SAVE FLAG-CCHH READ IN  @Z30RSHG
         MVC   MADHA(6),IOSESV+18      SAVE SD FOR RE-WRITE    @ZM40445
SDCHDONE EQU   *                                               @Z30RSHG
         MVC   STRTADR+1(L5),SDCHSAVE  RESTORE FLAG-CCHH       @Z30RSHG
         LM    UCBREG,CCWREG,SDCHSAVR  RESTORE REGS            @Z30RSHG
         L     LINK9,SDCHSAV9                                  @Z30RSHG
         BR    LINK9                   RETURN                  @Z30RSHG
*                                                              @Z30RSHG
SDCHFLAG DS    1C                      FLAG READ IN            @Z30RSHG
SDCHCCHH DS    4C                      CCHH READ IN            @Z30RSHG
SDCHSRCH CCW   X'39',SDCHCCHH,X'40',4  SRCH HA FOR XXXSRCH     @Z30RSHG
SDCHSAVR DS    2F                                              @Z30RSHG
SDCHSAV9 DS    1F                                              @Z30RSHG
SDCHSAVE DS    5C                                              @Z30RSHG
         EJECT
*     IPL RECORD ONE CONTENTS
*
         DS    0D
IPLPRES  DC    A(0)                    COUNT    CCHH
         DC    X'01'                   RECORD NUMBER
         DC    X'04'                   KEY LENGTH
         DC    AL2(24)                 DATA LENGTH
         DC    C'IPL1'                 KEY
         DC    XL8'00'                 DATA   PSW 1
         DC    X'06'                   CCW1  READ COMMAND
         DC    AL3(15000)              DATA ADDRESS
         DC    X'60'                   CC, SILI
         DC    X'00'                   FLAGS
         DC    AL2(96)                 COUNT
         DC    X'08'                   CCW2   TIC
         DC    AL3(15000)              TRANSFER ADDRESS
         DC    A(0)                    FLAGS AND COUNT
*
*     IPL RECORD ONE (IPL NOT REQUESTED)
*
         DS    0D
IPLABST  DC    A(0)                    COUNT   CCHH
         DC    X'01'                   RECORD NUMBER
         DC    X'04'                   KEY LENGTH
         DC    AL2(24)                 DATA LENGTH
         DC    C'IPL1'                 KEY
         DC    X'00'                   IPL PSW SYSTEM MASK--DISABLED
         DC    X'060000'               MACHINE CHECK-WAIT STATE
         DC    X'0000000F'             NO IPL RESIDENCE INDICATOR
         DC    X'03'                   CCW1 NOP BREAKS THE CHAIN
         DC    XL7'01'                 COUNT OF ONE
         DC    XL8'00'                 CCW2   DUMMY CCW
         SPACE 2
*    VOLUME LABEL MAKE-UP AREA
*
WRTSYLAB DC    A(0)                    COUNT  CCHH
         DC    X'03'                          RECORD THREE
         DC    X'04'                         KEY LENGTH
         DC    AL2(80)                       DATA LENGTH
         DC    C'VOL1'                       KEY FIELD
*
VOLABID  DC    C'VOL'                  INDICATE DASD VOLUME LABEL
VOLSEQNO DC    C'1'                    VOLUME SEQUENCE NO ASSUMED 1
VOLSERNO DC    6C' '                    VOLUME SERIAL NUMBER
VOLSECNO DC    X'F0'                   SECURITY NUMBER (ASSUMED ZERO)
VOLDSETD DC    10C' '                  VTOC POINTER (INSERTED)   S20201
         DC    10C' '                   MANUFACTOR NUMBER
         DC    10C' '                   ASA NUMBER
VOWNERID DC    XL10'00'                OWNER ID. (ASSUMED ZERO)
VOLUNUSE DC    29C' '                  UNUSED  (BLANKS)
         DC    A(24)
BUFFER   DS    1F
*    USER LABEL DUMMY AREAS
*
USERLAB1 DC    A(0)                    COUNT  CCHH
         DC    X'04'                          RECORD FOUR
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL2'                 KEY FIELD
         DC    C'VOL2'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
USERLAB2 DC    A(0)                    COUNT  CCHH
         DC    X'05'                          RECORD FIVE
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL3'                 KEY FIELD
         DC    C'VOL3'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
USERLAB3 DC    A(0)                    COUNT  CCHH
         DC    X'06'                          RECORD SIX
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL4'                 KEY FIELD
         DC    C'VOL4'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
USERLAB4 DC    A(0)                    COUNT  CCHH
         DC    X'07'                          RECORD SEVEN
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL5'                 KEY FIELD
         DC    C'VOL5'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
USERLAB5 DC    A(0)                    COUNT  CCHH
         DC    X'08'                          RECORD EIGTH
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL6'                 KEY FIELD
         DC    C'VOL6'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
USERLAB6 DC    A(0)                    COUNT  CCHH
         DC    X'09'                          RECORD NINE
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL7'                 KEY FIELD
         DC    C'VOL7'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
USERLAB7 DC    A(0)                    COUNT  CCHH
         DC    AL1(10)                        RECORD TEN
         DC    X'04'                          KEY LENGTH
         DC    AL2(80)                        DATA LENGTH
         DC    C'VOL8'                 KEY FIELD
         DC    C'VOL8'                 DATA FIELD                AS5695
         DC    XL76'00'                DATA FIELD
*
*     DADSM DSCB'S
         SPACE 2
*     DADSM DSCB FOR 2311
*
DSCBS    DS    0D
         DC    X'05050505'             KEY FIELD
         DC    X'0000'                 RELATIVE START ADR
         DC    XL2'0'                  NUMBER OF UNUSED CYLINDERS
         DC    X'00'                   ODD TRACKS REMAINING
         DC    XL35'00'                AVAILABLE EXTENTS IN KEY
         DC    X'F5'                   FORMAT ID
         DC    XL95'00'                DATA FIELD UNUSED
         EJECT
         SPACE 6
***********************************************************************
***********************************************************************
**                                                                   **
**       CCW LIST VARIATIONS FOR DISK AND DRUM INITIALIZATION.       **
**                                                                   **
***************                                         ***************
**                                                                   **
**         .  SA-FORMAT W/FT    .  ANALYSIS W/FT    .  FORMAT ONLY   **
** ADDRESS .    DISKS ONLY      .    DISKS ONLY     .    DISKS ONLY  **
**         .    PASS CNT=1      .    PASS COUNT     .                **
**         .                    .    GREATER 1      .                **
**...................................................................**
**         .                    .                   .                **
** WRITE5E .  SEEK              .  SEEK             .  SEEK          **
**         .  SET FILE MASK     .  SET FILE MASK    .  SET FILE MASK **
** SRCHHA1 .  SEARCH HA         .  SEARCH HA        .  SEARCH HA     **
** TICSCH  .  TIC *-8           .  TIC *-8          .  TIC *-8       **
** FIVEER0 .  WRT R0 (MAX)      .  WRT R0 (MAX)     .  TIC (XXXR0)   **
**         .  RD HA (SKIP)      .  RD HA (SKIP)     .                **
** FIVEER01.  RD R0 (SKIP)      .  RD R0 (SKIP)     .                **
** SRCHHA2 .  SEARCH HA         .  SEARCH HA        .                **
**         .  TIC *-8           .  TIC *-8          .                **
** ONE3R0  .  WRT R0 (MAX)      .  WRT R0 (MAX)     .                **
**         .  RD HA (SKIP)      .  RD HA (SKIP)     .                **
** READRO  .  RD R0 (SKIP)      .  RD R0 (SKIP)     .                **
** SRCHHA3 .  SEARCH HA         .  RD HA            .                **
**         .  TIC *-8           .                   .                **
**         .  TIC (XXXR0)       .                   .                **
**         .                    .                   .                **
** XXXR0   .  WRT R0 (STD)      .                   .  WRT R0 (STD)  **
** XXXHA   .  RD HA             .                   .  RD HA         **
**         .  RD R0 (SKIP)      .                   .  RD R0 (SKIP)  **
**         .                    .                   .                **
***************                 .                   .   ***************
**                              .                   .                **
         EJECT                                                       **
         SPACE 6
**                                                                   **
***************                                         ***************
**                                                                   **
**         .  SA-FORMAT W/O FT  .  ANALYSIS W/O FT  .  FORMAT ONLY   **
** ADDRESS .    DRUMS-DISK OPT  .    DRUMS-DISK OPT .    DRUMS       **
**         .    PASS CNT=1      .    PASS COUNT     .                **
**         .                    .    GREATER 1      .                **
**...................................................................**
**         .                    .                   .                **
** WRITE5E .  SEEK              .  SEEK             .  SEEK          **
**         .  SET FILE MASK     .  SET FILE MASK    .  SET FILE MASK **
** SRCHHA1 .  WRT HA            .  WRT HA           .  WRT HA        **
** TICSCH  .  TIC *+8           .  TIC *+8          .  TIC (XXXR0)   **
** FIVEER0 .  WRT R0 (MAX)      .  WRT R0 (MAX)     .                **
**         .  RD HA (SKIP)      .  RD HA (SKIP)     .                **
** FIVEER01.  RD R0 (SKIP)      .  RD R0 (SKIP)     .                **
** SRCHHA2 .  SEARCH HA         .  SEARCH HA        .                **
**         .  TIC *-8           .  TIC *-8          .                **
** ONE3R0  .  WRT R0 (MAX)      .  WRT R0 (MAX)     .                **
**         .  RD HA (SKIP)      .  RD HA (SKIP)     .                **
** READRO  .  RD R0 (SKIP)      .  RD R0 (SKIP)     .                **
** SRCHHA3 .  SEARCH HA         .  RD HA            .                **
**         .  TIC *-8           .                   .                **
**         .  TIC (XXR0)        .                   .                **
**         .                    .                   .                **
** XXXR0   .  WRT R0 (STD)      .                   .  WRT R0 (STD)  **
** XXXHA   .  RD HA             .                   .  RD HA         **
**         .  RD R0 (SKIP)      .                   .  RD R0 (SKIP)  **
**         .                    .                   .                **
**         .                    .                   .                **
***********************************************************************
***********************************************************************
         EJECT
         SPACE 6
***********************************************************************
***********************************************************************
**                                                                   **
**      CCW LIST VARIATIONS FOR 3330 INITIALIZATION                  **
**                                                                   **
**************                                          ***************
**          .                 .                                      **
**          .                 .                                      **
** ADDRESS  .  3330 ONLY      .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**...................................................................**
**          .                 .                                      **
** SEEKIPLX .  SEEK           .                                      **
**          .  SET FILE MASK  .                                      **
**          .  READ HA        .                                      **
**          .  READ R0 (STD)  .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
**          .                 .                                      **
***********************************************************************
***********************************************************************
            EJECT
***********************************************************************
*                                                                     *
*    CCW LIST FOR SURFACE ANALYSIS/FORMATTING--DISKS AND DRUMS ONLY.  *
*                                                                     *
***********************************************************************
         SPACE 1
WRITE5E  CCW   7,SEEKADR,X'40',6       SEEK.
         CCW   X'1F',SETFMK,X'40',1    SET FILE MASK.
SRCHHA1  CCW   X'39',STRTADR+2,X'40',4 SEARCH HA OR WRITE HA.
TICSCH   CCW   8,SRCHHA1,0,0           REPEAT UNTIL FOUND OR TIC NEXT.
WRITHA   CCW   8,FIVEER0,0,0           TIC NEXT / 3340 WRITE HA AS15479
FIVEER0  CCW   X'15',TAB5E,X'60',3625  WRITE MAXIMUM R0 RECORD.
         CCW   X'1A',BUFFER,X'70',5    VERIFY THE HOME ADDRESS.
FIVEER01 CCW   X'16',BUFFER,X'70',3660 VERIFY R0.
SRCHHA2  CCW   X'39',STRTADR+2,X'40',4 SEARCH HA.
         CCW   8,SRCHHA2,0,0           REPEAT UNTIL FOUND.
ONE3R0   CCW   X'15',TAB13,X'60',3625  WRITE MAXIMUM R0 RECORD.
         CCW   X'1A',BUFFER,X'70',5    VERIFY HA.
READRO   CCW   X'16',BUFFER,X'70',3625 VERIFY R0.
SRCHHA3  CCW   X'39',STRTADR+2,X'40',4 SEARCH HA.
         CCW   8,SRCHHA3,0,0           REPEAT UNTIL FOUND.
         CCW   8,XXXR0,0,0             GO WRITE STANDARD R0.   @Z30RSHG
         SPACE 1
***********************************************************************
*                                                                     *
*    CCW LIST USED FOR ASSIGNING ALTERNATE TRACKS.                    *
*    THIS LIST IS ALSO USED FOR WRITING A STANDARD R0, READING INTO   *
*    CORE THE HOME ADDRESS, AND VERIFYING RECORD ZERO.                *
*                                                                     *
***********************************************************************
         SPACE 1
WRTALT   CCW   7,SEEKADR,X'40',6       SEEK.
SPARZEUS CCW   X'1F',SETFMK,X'40',1    SET FILE MASK             S20201
XXXSRCH  CCW   X'39',STRTADR+2,X'40',4 SEARCH HOME ADDRESS.     XL03130
         CCW   8,XXXSRCH,0,0           REPEAT UNTIL FOUND.      XL03130
XXXWIN   CCW   8,XXXR0,0,0             WRITE HOME ADDRESS / TIC AS14404
XXXR0    CCW   X'15',ROCOUNT,X'40',16  WRITE STANDARD R0.
XXXHA    CCW   X'1A',FLAG,X'40',5      VERIFY AND READ IN HA.
         CCW   X'16',ROCOUNT,X'30',16  VERIFY R0.
         SPACE 1
WRTSD    CCW   7,SEEKADR,X'40',6       SEEK                     AS14404
         CCW   X'1A',STRTADR+1,X'40',5 READ HOME ADDRESS        AS14404
         CCW   4,IOSESV,X'60',24       GET SD BYTES / SENSE    @ZM42053
         CCW   X'16',ROCOUNT,X'30',16  VERIFY R0.              @ZM42053
*    CCW LIST FOR WRITING R1 TO R11
*
         DS    0D
WRTZERTR CCW   7,SEEKADR,X'40',6        SEEK TRACK ZERO
         CCW   X'1F',SETFMK,X'40',1
SEARCHRO CCW   X'31',STRTADR,X'40',5
         CCW   8,SEARCHRO,X'40',1
IPLNOCHG CCW   X'1D',IPLPRES,X'40',36   R1(IPL1)
         CCW   X'1D',STRTREAD,X'40',156 R2 (IPL2)
WRTVOLAB CCW   X'1D',WRTSYLAB,X'40',92  R3 (SYSTEM VOLUME LABEL)
LABELS   CCW   X'1D',USERLAB1,X'40',92  R4 (USER LABEL 1)
         CCW   X'1D',USERLAB2,X'40',92  R5 (USER LABEL 2)
         CCW   X'1D',USERLAB3,X'40',92  R6 (USER LABEL 3)
         CCW   X'1D',USERLAB4,X'40',92  R7 (USER LABEL 4)
         CCW   X'1D',USERLAB5,X'40',92  R8 (USER LABEL 5)
         CCW   X'1D',USERLAB6,X'40',92  R9 (USER LABEL 6)
         CCW   X'1D',USERLAB7,X'40',92  R10(USER LABEL 7)
TIC2301  CCW   8,IPLTRK0,X'40',1
         SPACE 1
*CCW LIST FOR WRITING IPL INITIALIZATINO PROGRAM
         SPACE 1
IPLSEEK  CCW   7,SEEKIPL,X'40',6        SEEK IPL TRACK
         CCW   X'1F',SETFMK,X'40',1         SET FILE MASK
IPLSRCH  CCW   X'31',SEEKIPL+2,X'40',5       SEARCH R0 EQUAL
         CCW   8,IPLSRCH,X'40',1
IPLTRK0  CCW   X'1D',IPLADR,X'A0',8          WRITE IPL COUNT
         CCW   X'1D',X'007000',X'20',6496   WRITE IPL DATA
         SPACE 2
IPLADR   DC    X'0000000101001960'
IPLCORE  DC    X'00007000'
         SPACE 2
*     RECORD TWO BOOTSTRAP CONTENTS
         SPACE 1
         DS    0D
         DC    F'0'
STRTREAD DC    X'0000000002'            COUNT
         DC    X'040090'                  FIELD
         DC    C'IPL2'                  KEY
*                          DATA
         CCW   X'07',15032,X'40',6      SEEK IPL TRACK
         CCW   X'31',15038,X'40',5      SEARCH IPL INIT RCD
         CCW   X'08',15008,X'00',1      TIC TO SEARCH CMD
         CCW   6,0,X'20',6496           READ IPL INIT DATA
         SPACE 1
SEEKIPL  DC    X'000000000001'          IPL INIT TRACK ADR
SRCHADR  DC    X'0000000101'            R1 ADR OF IPL INIT TRACK
         DC    XL101'00'                PAD OUT IPL BS RCD WITH ZEROS
FLAG     DC    5X'00'                  READ IN THE HOME ADDRESS HERE.
         SPACE 2
W5E      CCW   X'15',TAB5E,X'60',3625  SURFACE ANALYSIS REQUESTED
TICWR0   CCW   8,XXXR0,X'60',1         NO SURFACE ANALYSIS REQUESTED
NOFLAG   CCW   X'19',STRTADR+1,X'40',5 WRITE HOME ADDRESS.
         CCW   8,FIVEER0,0,0           USED WHEN FLAGTEST=NO.
WINCCW   CCW   X'19',WINHA+1,X'40',7   WRITE HOME ADDRESS.      AS14404
         SPACE 1
WHAMAD   CCW   X'19',MADHA,X'40',11    WRITE HOME ADDRESS.     @ZM40445
TICWIN   CCW   8,XXXWIN,0,0            GO TO WR HA             @Z30RSHG
ERRSEEK  CCW   7,SEEKADR,X'40',6       TRACK IN ERROR DURING ANALYSIS.
         CCW   X'1A',BUFFER,X'70',5    READ VERIFY THE HA.
ERRSEEK1 CCW   X'16',BUFFER,X'30',3625 READ VERIFY RECORD 0.
         SPACE
INITCCW  CCW   X'37',0,X'30',1         INITIALIZE PRINT CCW.   @Z40MSTT
LOGERCCW CCW   X'24',0,X'30',136       SENSE ERROR LOG.        @Z40MSTT
         SPACE
         EJECT
*        TABLES AND CONSTANTS
*
ACTRACON DS    1F                      COMPUTED ACTUAL ADDRESS
AIPLABST DC    A(IPLABST)              WAIT STATE PSW - NO IPL REQUEST
AIPLPRES DC    A(IPLPRES)              LOAD & GO PSW - IPL REQUESTED
         DS    1X                      ALIGNMENT PADDING       @ZM40445
MADHA    DS    3X'00'                  3350 SD BYTES           @ZM40445
WINHA    DC    H'0'
STRTADR  DC    3H'0'                    CONTAINS CURRENT CCHH VALUE
ROMAX    DC    XL8'00'                 USED BY SURFACE CHK
*                                      COUNT FIELD IS MODIFIED/ DASD
ROCOUNT  DC    XL8'08'                 RO COUNT FIELD CCHHRKLDLDL
RODATA   DC    XL8'0'                  RO DATA - 8 BYTES ZERO
         DC    H'0'
SEEKADR  DC    3H'0'                    CONTAINS UPDATED SEEK ADDRESS
         DS    0F
HASD     EQU    110                     HOME ADDR SKIP DISP.    XL03130
RZCSD    EQU    200                     REC ZERO CNT SKIP DISP. XL03130
RZDSD    DC    H'285'                  REC ZERO DATA SKIP DSP  @Z30RSHG
SAVSPACE DC    X'00'                   SAVE AREA FOR NO. OF USER LABELS
         SPACE 2
*THE FOLLOWING HAVE NO BOUNDARY REQUIREMENTS
*VARIOUS CONSTANTS
SETFMK  DC  X'C0'
INCR1    DC    X'C1'                   3330 FILE MASK (NO RETRY) S20201
INCR2    DC    X'C2'                   2305 FILE MASK (NO RETRY) S20201
SAVEFMK  DC    X'C0'                   FILE MASK RESTORE FORMAT  S20201
BAD      DC    C'IBC110I  BAD TRACK'
ALT      DC    C'IBC111I  ALTERNATE'
CCTRTAB  DC    C'0123456789ABCDEF'      CONVERT TO PRINTABLE  FORMAT
SCRATCH  DC    C'SCRATCH'
*
VTOCHCK  DC    X'00'                   USER SUPPLIED VTOC LOCATION IND.
CHAINSAV DS    1D                      SAVE CHAIN CONTENTS FOR TRACK 0
*     STANDARD VTOC DSCB'S
VTOCS    DS    0D
         DC    44X'04'                 KEY FIELD
*    VTOC DSCB DATA
         DC    C'4'                     FORMAT ID
VTOC1    DC    XL5'0'                   CCHHR FIRST AVAILABLE FORMAT 1
         DC    XL2'0'                  DSCB'S REMAINING
VTOC2    DC    X'00CA0009'              HIGHEST CCHH OF ALT TRACKS
         DC    H'30'
         DC    X'00'                   VTOC INDICATOR
         DC    X'01001E'               EXTENTS, NON USABLE TRACKS.
VTOC3    DC    X'00CB000A0E29'          DEVICE SIZE  TRACK LENGTH
         DC    X'523714'               RECORD OVERHEAD INFO
         DC    X'010219100A'           FLAGS-TOLERANCE-DSCB-DIRECTOR
         DC    XL29'00'                SPARE
         DC    X'0100'
VTOC4    DC    XL4'0'                   VTOC START CCHH
         DC    XL4'0'                  VTOC END CCHH
         DC    XL25'00'                SPARE
     EJECT
*
*    ROUTINE FORMATS THE TOTAL VTOC
*
*    ROUTINE TO INSERT VTOC EXTENTS
*
FMTVTOC  DS    0F
VTOCXTN  STM   0,15,REGSV8             SAVE REGISTERS
         MVC   VTOC1(4),EXTNTAB+8       INSERT CCHH OF VTOC
         MVI   VTOC1+4,X'03'            INSERT R OF ITS FORMAT 1
         MVC   VTOC2(6),SAVEVTOC+8      STORE FIRST ALT & COUNT
         MVC   VTOC3(14),DEVSIZEX       INSERT DEVICE SIZE ETC.
         MVC   VTOC4(8),EXTNTAB+8      INSERT VTOC EXTENTS IN VTOC
         MVC   VTOC2+8(2),ORIGENDX+4   DADSM EXTENT.
*
*    ROUTINE CALCULATES AND INSERTS EXTENTS IN DADSM DSCB
*
         LA    REGE,EXTNTAB             GET ADR OF EXTNT TABLE
         LA    REGD,DSCBS              POSITION TO DADSM EXTENT FIELDS
EXTNT2   MVC   CCHHB(4),4(REGE)        GET BGN ADR OF DATA SET
         MVC   CCHHE(4),8(REGE)        GET END ADR OF DATA SET
         CLC   CCHHB(4),ORIGENDX        HAVE ALL DATA SETS BEEN CHECKED
         BNL   EXTNT4                       YES, RETURN TO WRITE VTOC
         CLC   CCHHE(4),CCHHB          IS THERE ALLOCATABLE SPACE
         BC    8,EXTNT3                NO - GET NEXT DATA SET
         BAL   LINK15,GETXXYYZ         CONVERT TO XXYYZ FORMAT
         MVC   4(5,REGD),XXYYZ         INSERT EXTENT IN DADSM DSCB
         LA    REGD,5(REGD)            POINT TO NEXT EXTENT FIELD
EXTNT3   LA    REGE,8(REGE)            POINT TO NEXT DATA SET
         B     EXTNT2                  RETURN TO PROCESS DATA SET
EXTNT4   LM    0,15,REGSV8             RESTORE REGISTERS
         CLI   UCBTO,T2321              THIS A 2321 DEVICE       S20201
         BC    7,WRTVTOC               NO--GO WRITE VTOC.
         MVI   CNGCYLX+2,X'00'         YES - RESTORE UPDATE TRK FACTOR
         B     WRTVTOC                 PROCEED TO WRITE VTOC
*
*    CONVERSION ROUTINE CCHH TO XXYYZ FORMAT
*
GETXXYYZ STM   0,15,SAVEREGS
         CLI   UCBTO,T2321              THIS A 2321 DEVICE       S20201
         BC    8,SETCCMF               YES-GO CONVERT CYLINDER/TRACK.
         CLI   UCBTO,T2301              THIS A 2301 DEVICE       S20201
         BC    8,SETCC                 YES-GO SET UP TRACK ADDRESSES.
         SPACE 1
GETXX1   L     RWRKREG3,CCHHB           SET UP FOR REGISTER MANIPULATN
         CLC   CCHHB+K3(K1),BMPTK+K1   NEED TO CHANGE CYLINDERS  S20201
         BE    CNGCYLAA                   YES
         A     RWRKREG3,F1             NO, INCRIMENT TRACK ADDRESS
         SPACE 1
GO1      ST    RWRKREG3,CCHHB
         L     RWRKREG1,CCHHE           GET TRUE CCHHE
         SPACE 1
         CLC   CCHHB+2(2),CLEAR        DOES BEGIN ADDRESS REPRESENT
*                                        FULL CYLINDER
         BE    UNUSUAL                     YES
         SPACE 1
         CLR   RWRKREG1,RWRKREG3       IS BEGIN = END
         BE    RTURNX                    YES, NO SPACE;  RETURN
         SPACE 1
         CLC   CCHHE(2),CCHHB           IS BEG AND END ON SAME CYL
         BE    UNUSUAL                    YES
         SPACE 1
*                                      CYL/HEAD = CCE-CCB-1;HHE+10-HHB
         AL    RWRKREG1,M1PTRK          CYL - 1; HEAD + XX
         SPACE 1
UNUSUAL  SR    RWRKREG1,RWRKREG3       - (CCB;  HHB)
         STC   RWRKREG1,XXYYZ+4        STORE NUMBER OF ODD TRACKS
         SRL   RWRKREG1,16              STORE NUMBER
         STH   RWRKREG1,XXYYZ+2            OF FULL CYLINDERS
         BAL   RLINK9,CNVRTRTA          GO CONVERT BEG TO RTA
         SPACE 1
         STH   RWRKREG4,XXYYZ          STORE BEGINNING (RTA)     S20201
         LM    0,15,SAVEREGS            PREPARE TO RETURN
         BR    LINK15                   RETURN
         SPACE 2
CNGCYLAA A     RWRKREG3,CNGCYLX         CC=CC+1;HH=0
         B     GO1                      RETURN
         SPACE 1
RTURNX   LM    0,15,SAVEREGS
         B     EXTNT3                  NO SPACE RETURN
         SPACE 1
SETCC    MVC   CNGCYLX+2(2),FFF9       SET CYLINDER TO BE CCHH AS 2311.
         MVI   BMPTK1+K1,H07           SET INCREMENT VALUE       S20201
         L     RWRKREG3,CCHHB           RIGHT HALF=CCCCCHH (BITS)
         NI    CCHHB+3,X'07'              OF CCHHB
         SRL   RWRKREG3,3               ONLY CC INREG3
         STH   RWRKREG3,CCHHB           NOW CCHHB IN NORMAL CCHH FORMAT
         L     RWRKREG3,CCHHE           SAME
         NI    CCHHE+3,X'07'             FOR
         SRL   RWRKREG3,3                   CCHHE
         STH   RWRKREG3,CCHHE
         B     GETXX1                   RETURN
         SPACE 1
SETCCMF  LA    REGD,CCHHB               PREPARE TO CONVERT CYLINDER/TRK
         BAL   LINK9,MOVEBIG             GO TO CONVERT ROUTINE
         LA    REGD,CCHHE               PREPARE AGAIN
         BAL   LINK9,MOVEBIG             GO AGAIN
         MVI   CNGCYLX+2,X'FF'          MODIFY FOR CYL/TRK-NOT-SC/ST/CH
         B     GETXX1                   RETURN
         SPACE 1
MOVEBIG  MVC   BIGCCHH+1(1),0(REGD)
         MVC   BIGCCHH+3(1),1(REGD)       STRIP AND
         MVC   BIGCCHH+5(1),2(REGD)        CYLINDER ON HALF WORD BNDRY
         MVI   2(REGD),X'00'            CLEAR CYL OF CCHH(B)OR(E)
         LH    REGE,BIGCCHH             GET SUBCELLS
         MH    REGE,H10                   X10= STRIPS
         AH    REGE,BIGCCHH+2             +STRIPS=TOTAL STRIPS.
         MH    REGE,H05                   X5 =CYLINDERS
         AH    REGE,BIGCCHH+4             +CYLINDERS=TOTAL CYLINDERS
         STH   REGE,0(REGD)             SAVE IN CCHH(B)OR (END)
         BR    LINK9                      RETURN
         EJECT
*      CONVERT  FROM  CCHH  TO RELATIVE TRACK ADDRESS
         SPACE 2
*     UPON ENTERING
*        1) CCHH EXPECTED IN RWRKREG3
*        3) RLINK9 CONTAINS RETURN ADDRESS
         SPACE 1
*        4) THE RELATIVE TRACK ADDRESS WILL BE
*           STORED IN RWRKREG4 WHEN LEAVING
         SPACE 1
CNVRTRTA SR    RWRKREG6,RWRKREG6       CLEAR
         LR    RWRKREG4,RWRKREG3       TRANSFER CCHH TO ODD REG. S20201
         SLDL  RWRKREG6,16             GET CC OF CCHHB ISOLATED
         MH    RWRKREG6,TCTABLE         MULT BY NUMBER TRKS/CYL
         SRL   RWRKREG4,L16            PREPARE HH                S20201
         AR    RWRKREG4,RWRKREG6       ADD FOR TOTAL TRACKS      S20201
         BR    RLINK9                   RETURN
         SPACE 2
*  CONTROL AREA FOR  GETXXYYZ
         DS    0F                      GET XXYYZ ON FULL WORD BOUNDARY
CCHHB    DC    XL4'0'                  BWGIN CCHH
CCHHE    DC    XL4'0'                  END CCHH
XXYYZ    DC    XL5'00'                 CONVERTED FORMAT 5 EXTENT
         DC    H'0'
FFF9     DC    X'FFF9'
H05      DC    H'5'                     CYLINDERS/STRIP
H10      DC    H'10'                    STRIPS/SUBCELL
BIGCCHH  DC    3H'0'                    AREA FOR CCHH EXPANDED
         EJECT
*      ********************************************
*      * INDEXING FACTOR TO ERROR MESSAGE TABLE.  *
*      ********************************************
         SPACE 2
EMES01   EQU   0                       COMMAND REJECT.
EMES02   EQU   20                      INTERVENTION REQUIRED.
EMES03   EQU   40                      BUS OUT CHECK
EMES04   EQU   60                      EQUIPMENT CHECK.
EMES05   EQU   80                      DATA CHECK.
EMES06   EQU   100                     OVER RUN CHECK.
EMES07   EQU   120                     TRACK CONDITION CHECK.
EMES08   EQU   140                     DATA CONVERTER CHECK.
EMES09   EQU   160                     END OF CYLINDER.
EMES10   EQU   180                     INVALID ADDRESS ERROR.
EMES11   EQU   200                     NOT AVAILIABLE.
EMES12   EQU   220                     TAPE READ DATA CHECK
EMES13   EQU   240                     COUNT FIELD DATA CHECK.
EMES14   EQU   260                     TRACK OVERRUN ERROR.
EMES15   EQU   280                     FILE PROTECTED DEVICE.
EMES16   EQU   300                     DASD END OF FILE.
EMES17   EQU   320                     DASD NO RECORD FOUND.
EMES18   EQU   340                     END OF TEST TABLE REACHED.
EMES19   EQU   360                     SHOULD NEVER OCCUR MESSAGE.
EMES20   EQU   380                     CHANNEL CONTROL CHECK.
EMES21   EQU   400                     INTERFACE CONTROL CHECK.
EMES22   EQU   420                     CHANNEL DATA CHECK.
EMES23   EQU   440                     DASD OVERFLOW INCOMPLETE.
EMES24   EQU   460                     PROGRAM CHECK.
EMES25   EQU   480                     PROTECTION CHECK.
EMES26   EQU   500                     UNIT EXCEPTION.
EMES27   EQU   520                     INCORRECT LENGTH.
EMES28   EQU   540                     CHAINING CHECK.
EMES29   EQU   560                     INVALID COMMAND SEQUENCE.
EMES30   EQU   580                    SEEK CHECK ERROR.
EMES31   EQU   600                     TAPE WRITE DATA CHECK.
EMES32   EQU   620                     TAPE AT LOAD POINT.
EMES33   EQU   640                     TAPE NOISE RECORD.
EMES34   EQU   660                     MISSING ADDRESS MARKER.
EMES35   EQU   680                     3 BLANK TRACKS ON THIS CYLINDER
EMES36   EQU   700                     3 BLANK CYLINDERS ON THIS STRIP
EMES37   EQU   720                     3 BLANK STRIPS ON THIS SUBCELL
EMES38   EQU   740                     3 BLANK SUBC%LLS ON THIS CELL
EMES39   EQU   760                     BLANK TRACK MESSAGE.
EMES40   EQU   780                      INVALID TRK FMT          S20201
EMES43   EQU   800                      INHIBIT WRITE ON          M4697
         EJECT
*              **********************************
*              *  IOPRNT ERROR MESSAGE TABLE.   *
*              **********************************
         SPACE 2
ERRMSG   DC   C'01W COMMAND REJECT  '
         DC   C'02A INTERV. REQUIRED'
         DC   C'03W BUS OUT CHECK   '
         DC   C'04W EQUIPMENT CHECK '
         DC   C'05W DATA CHECK      '
         DC   C'06W OVER RUN        '
         DC   C'07W FLAGGED TRACK.  '
         DC   C'08W DATA CONV. CHECK'
         DC   C'09W END OF CYLINDER '
         DC   C'10W INVALID ADDRESS '
         DC   C'11W NOT AVAILABLE   '                          @ZA13756
         DC   C'12W READ DATA CHECK '
         DC   C'13W COUNT FIELD CHEK'
         DC   C'14W TRACK OVERRUN   '
         DC   C'15W FILE PROTECTED  '
         DC   C'16W DASD-END OF FILE'
         DC   C'17W NO RECORD FOUND '
         DC   C'18W  INVALID ERROR  '
         DC    C'19W  WRONG ERROR    '
         DC   C'20W CHAN. CTRL ERROR'
         DC   C'21W INTERFACE ERROR '
         DC   C'22W CHAN. DATA CHECK'
         DC   C'23W DASD OVERFLOW   '
         DC   C'24W PROGRAM CHECK   '
         DC   C'25W PROTECTION CHECK'
         DC   C'26W UNIT EXCEPTION  '
         DC   C'27W INCORRECT LENGTH'
         DC   C'28W CHAINING CHECK  '
         DC   C'29W COMMAND SEQ .ERR'
         DC   C'30W SEEK CHECK ERROR'
         DC   C'31W WRITE DATA CHECK'
         DC   C'32W TAPE--LOAD POINT'
         DC   C'33W NOISE RECORD    '
         DC   C'34W MISSING ADR-MARK'
         DC    C'39W 3 BLANK TRACKS  '
         DC    C'36W 3 BLANK CYLINDER'
         DC    C'37W 3 BLANK STRIPS  '
         DC    C'38W 3 BLANK SUB CELL'
BLKMES1  DC    C'35I  BLANK TRACK    '
         DC    C'42W INVALID TRK FMT '  INV TRK FMT          S20201
         DC    C'43W WRITE INHIBITED ' WRITE INHIBITED        M4697
         EJECT
*      *****************************************************
*      * COMMON COMPUTER INTERRUPT ROUTINES ON THIS PAGE.  *
*      *****************************************************
         SPACE 2
*    EXTERNAL INTERRUPT SUPERVISOR.
         SPACE 1
EXTINT   TM    A27,H40                  THIS A CONSOLE INTERRUPT S20201
         BC    8,EXTINT1               NO
         MVI   REQSW,X'FF'             TURN ON REQUEST SWITCH     49363
         LPSW  CONTINUE                YES - GO TO PRESET LOCATION
         SPACE 1
EXTINT1  LPSW  24                      RETURN TO INTRPT POINT
         SPACE 2
*    PROGRAM INTERRUPT SUPERVISOR.
         SPACE 1
PGMINT   STM   0,15,REGSV              SAVE REGISTERS.
         MVC   SVPSW(8),40             SAVE OLD PROGRAM INTERRUPT PSW.
         MVC   PRWD(27),PGIERR         LOAD ERROR MESSAGE IN PRINT FLD.
         MVC   PRWD+27(20),QUITJOB     LOAD JOB TERMINATED MESSAGE
         LA    GR1,47                  MESSAGE LENGTH IN BYTES.
         BAL   LINK9,PRNT              GO TO PRINT ROUTINE.
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
PGIERR   DC    C'IBC152W  PROGRAM INTERRUPT.'
         SPACE 2
*    SVC CALL INTERRUPT SUPERVISOR.
         SPACE 1
SVCINT   STM   0,15,REGSV              SAVE REGISTERS.
         MVC   SVPSW(8),32             SAVE OLD SVC INTERRUPT PSW.
         MVC   PRWD(23),ERRSVC         LOAD ERROR MESSAGE IN PRINT FLD.
         MVC   PRWD+23(20),QUITJOB     LOAD JOB TERMINATED MESSAGE.
         LA    GR1,43                  MESSAGE LENGTH IN BYTES.
         BAL   LINK9,PRNT              GO TO PRINT ROUTINE.
         B     SYO3800                 CK SYSOUT DEV.          @Z40MSTT
         SPACE 1
ERRSVC   DC    C'IBC104W  SVC INTERRUPT.'
         SPACE 2
     EJECT
         DS    0D                       HEX E5 BUFFER          @Z30RSHG
         SPACE 1
TAB5E    DC    XL8'0'                  TABLE OF HEX E5 FOR 2321.
*                                      TABLE OF HEX 55 FOR ALL OTHERS.
         DS    2D
WRTDSCB  DS    130D
CNTFIELD DS    65D
         SPACE 1
SAVECCWS DS    0D
        SPACE 2
         ORG   TAB5E+20000              HEX 00 BUFFER          @Z30RSHG
TAB13    DC    XL4'0'                  TABLE OF ZEROS FOR NON-2321.
        SPACE 2
         EJECT
* READY TO READ TRK 0 OF EACH CYLINDER OF A STRIP
         SPACE 1
CONTROL  NC    BLKTRKSW(4),FFFFFF00     RESET (TRK) BLANK SWITCH
         MVC   TRKCTRL(8),TRKHOLD       GET CONTROL CYL CNG/NO-CYL/ST
         LA    GR15,BLKTRKSW+2         CYLINDER CHECK
         N     RTRKADR,FFFF0000         CLEAR CYL/TRK FOR CYL CHECK
         BAL   RLINK4,READCT2           DO 30
         SPACE 1
* FINISHED WITH A STRIP
         SPACE 1
         NC    BLKTRKSW(4),FFFF0000     RESET (CYLINDER) BLANK SWITCH
         LA    GR15,BLKTRKSW+1         STRIP CHECK
         A     RTRKADR,Z000FB00         UPDATE STRIP ADDRESS
         ST    RTRKADR,SAVERTRK         GET TRK ADDR IN CORE
         CLC   SAVERTRK(2),L3050500     END OF ORIGINALS
         BE    LSTSCELL                   YES, SEEK 1ST TRK OF SUBCELLS
         CLI   BLKTRKSW+1,X'00'        REWRITE - BLANK ON STRIP
         BNE   CONTROL1                  YES - RECHECK STRIPS
         CLI   SAVERTRK+1,X'0A'          TO CHECK  STRIP NUMBER
         BL    WRITECT1                  NOT LAST; CHECK MORE TRACKS
         SPACE 1
         NC    BLKTRKSW(4),FF000000    RESET (STRIP) BLANK SWITCH
CONTROL1 MVC   TRKCTRL(8),TRKHOLD+8    LAST CHECK X,0,0,0
         LA    GR15,BLKTRKSW+1         STRIP CHECK.
         N     RTRKADR,FF000000         RESET STRP=0,CYL=0,TRK=0
         CLI   SAVERTRK,X'13'          LAST ALTERNATE STRIP
         BE    EALTS                   YES, GO GET ORIGINALS
         BAL   RLINK4,READCT2           GO FINISH UP
         SPACE 1
* FINISHED WITH ALL STRIPS OF A CELL
         SPACE 1
         CLI   BLKTRKSW,X'00'          REWRITE - BLANK ON SUBCELL
         BNE   LSTSCELL                  YES - RECHECK SUBCELLS
         A     RTRKADR,Z0F60000         UPDATE STRIP ADDRESS
         B     WRITECT1                WRITE SOME MORE SUBCELLS
         SPACE 1
EALTS    SR    RTRKADR,RTRKADR          END OF ALTERNATES
         MVI   STRTADR+1,X'00'         RESET FLAG FOR ORIGINALS
         B     WRITECT1                   START ON ORIGINALS
         SPACE 1
LSTSCELL MVC   TRKCTRL(8),TRKHOLD+16    SET UP FOR TRK0 OF SUBCELLS
         LA    GR15,BLKTRKSW           SUBCELL CHECK POINTER.
         SR    RTRKADR,RTRKADR           CLEAR ADDRESS TO CK
         BAL   RLINK4,READCT2            0,0,0,0 TO 19,0,0,0
         B     CONSTR1
         SPACE 1
WRITECTA LA    RCAW,CKBALLST           SEEK TO ZERO
         LA    RUCB,UCBTO                TO BE SURE
         MVC   SEEKADR+2(4),CLEAR         NOT BALLAST
         BAL   LINK9,STARTIO
         SPACE 1
* STATUS RTRKADR = X,X,X,0  (SC,S,C,T)
WRITECT1 LA    RCAW,MFWANAL             POINTER TO CCW LIST
         LA    RLOOPCTR,21              SET COUNTER FOR 20 TRKS/CYL
         LA    GR15,BLKTRKSW+3         TRACK CHECK
         BAL   RLINK9,BCT1              SET RETURN ADDRESS
         A     RTRKADR,F1               UPDATE TRACK ADDRESS
BCT1     BCT   RLOOPCTR,INITWRCY        UPDATE LOOP COUNTER
         B     READCT1                  DONE- GO TO READ ROUTINE
         SPACE 2
READCT1  LA    RCAW,MFRANAL             POINTER TO CCW LIST
         MVI   MFRAHA+4,X'40'          RESET CHAIN COMMAND FLAG
         IC    RTRKADR,CLEAR           RESET TRACK ADDRESS
         LA    RLOOPCTR,21
         BAL   RLINK9,BCT2              SET RETURN ADDRESS
BCT2A    CLC   STRTADR+2(4),CCHHCK+1   DOES READ HA AGREE WITH WRITE
         STM   0,15,ERRSAV1            STORE IN CASE OF ERROR
         BNE   ACTVIIIA                  NO - HANDLE ERROR
         A     RTRKADR,F1               UPDATE TRACK ADDRESS
BCT2     BCT   RLOOPCTR,INITWRCY        CHECK/UPDATE LOOP COUNTER
         LA    RCAW,MFERASE            POINTER TO CCW LIST
         LA    RLOOPCTR,21             SET COUNTER FOR TRACK
         IC    RTRKADR,CLEAR           RESET TRACK ADDRESS
         BAL   RLINK9,BCT2X            SET RETURN ADDRESS
         A     RTRKADR,F1              UPDATE TRACK ADDRESS
BCT2X    BCT   RLOOPCTR,INITWRCY       UPDATE LOOP COUNTER
         CLI   BLKTRKSW+2,X'00'         REWRITE -BLANK ON CYLINDER
         BNE   CONTROL                    YES - RECHECK CYLINDERS
         A     RTRKADR,FXEC             CHANGE CYLINDERS
         NC    BLKTRKSW(4),FFFFFF00    RESET BLANK TRACK SWITCH.
         ST    RTRKADR,SAVERTRK         LAST
         CLC   SAVERTRK+2(2),HALF500      CYLINDER
         BL    WRITECT1                   NO, WRITE SOME MORE
         B     CONTROL                    YES, CHECK STATUS
         SPACE 2
READCT2  LA    RCAW,MFRANAL             POINTER TO CCW LIST
         MVI   MFRAHA+4,X'00'             KILL READ BACK CHECK
         L     RLOOPCTR,TRKCTRL         SET COUNTER FOR CYL/STRIP/SUBC
         BAL   RLINK9,BCT3              SET RETURN ADDRESS
         CLC   STRTADR+2(4),CCHHCK+1    DOES READ HA AGREE WITH WRITE
         STM   0,15,ERRSAV1            STORE IN CASE OF ERROR
         BNE   ACTVIIIA                  NO - HANDLE ERROR
         A     RTRKADR,TRKCTRL+4        UPDATE TRACK ADDRESS
BCT3     BCT   RLOOPCTR,INITWRCY        CHECK ; UPDATE COUNTER; GO
         BR    RLINK4                   RETURN SOMEWHERE IN CONTROL
         SPACE 2
INITWRCY LA    RUCB,UCBTO               POINTER TO UCB
         STM   0,15,REGSV2             SAVE REGISTERS IN CASE OF ERROR.
         ST    RTRKADR,ROCOUNT
         ST    RTRKADR,XR1CNTMF            R1 COUNT FIELD
         ST    RTRKADR,SEEKADR+2        STORE TRACK ADDRESS IN SEEK
         ST    RTRKADR,STRTADR+2          HOME ADDRESS
         ST    RTRKADR,SKADCCHH         SET VALUE FOR HOLD     @ZA03395
         OI    CCHHCK+1,X'80'           RESET TO GUARANTEE GOT STRIP
         B     STARTIO
         SPACE 1
* RETURN HERE AFTER ASSIGNING AN ALTERNATE TRACK.
MALTRTN  LM    0,15,REGSV2             SET REGISTERS AS PRIOR TO ERROR.
         MVI   ERRETRY,X'00'           TURN OFF ERROR RETRY SWITCH.
         BR    LINK9                   RETURN AS NORMAL RETURN.
* CCW LISTS
TRKBLK   CLI   ERASESW,X'FF'           PREVIOUS DATA CHECK DURING ERASE
         MVI   ERASESW,X'00'           INSURE THAT SWITCH IS RESET.
         BC    8,INITWRCY              YES-REPEAT ERASE FOR THIS TRACK.
         LA    RCAW,MFWANAL            GET POINTER FOR WRITE.
         BAL   RLINK9,INITWRCY         REWRITE TRACK
         B     READCT1                 TRY READ AGAIN
         SPACE 1
         SPACE 2
* WRITE TRACK ANALYSIS CCW LIST
MFWANAL  CCW   7,SEEKADR,X'40',6        SEEK BIN/CYL
         CCW   X'1F',SETFMK,X'40',1     SET FILE MASK/ALLOW ALL WRITES
         CCW   X'19',STRTADR+1,X'40',5  WRITE HOME ADDRESS
         CCW   X'15',ROCOUNT,X'40',16   WRITE R0
         CCW   X'1D',XR1CNTMF,X'80',8   WRITE R1 COUNT FIELD
MFWANLX  CCW   X'1D',TAB5E,X'20',1992
         CCW   8,MFRAHA,X'60',1
* READ TRACK ANALYSIS CCW LIST
MFRANAL  CCW   7,SEEKADR,X'40',6        SEEK BIN/CYL
         CCW   31,SETFMK,X'40',1        SET FILE MASK/ALLOW ANYTHING
MFRAHA   CCW   X'1A',CCHHCK,X'40',5     READ HA
         CCW   X'16',ROCOUNT,X'50',16  READ BACK CHECK R0.
         CCW   X'1E',TAB5E,X'30',2000   READ BACK CHECK R1
* ERASE TRACK CCW LIST
MFERASE  CCW   7,SEEKADR,X'40',6       SEEK BIN/CYLINDER
         CCW   X'1F',SETFMK,X'40',1     ALLOW ANYTHING
MFES     CCW   X'31',ROCOUNT,X'40',5    SEARCH ON R0 COUNT
         CCW   8,MFES,X'40',1          TRANSFER UNTIL FOUND.
         CCW   X'11',CLEAR,X'20',8       ERASE REMAINDER OF TRACK
CKBALLST CCW   7,SEEKADR,X'20',6       SEEK TO FIRST TRACK OF BIN
XR1CNTMF DC    X'00000000010007C8'     COUNT FIELD FOR RECORD 1.
         EJECT
*   FULL WORD BOUNDARY
         SPACE 1
         DS    0F
         SPACE 1
ABLKTRK  DC    A(BLKTRKSW+3)
CCHHCK   DC    2F'0'
FXEC     DC    X'000000EC'               CHANGE CYLINDERS       2321
FFFF0000 DC    X'FFFF0000'               CLEAR CYLINDER/TRACK   2321
SAVERTRK DC    F'0'                      SAVE TRACK ADDRESS TO CK
TRKCTRL  DC    2F'0'                    WORK AREA TO CK,CYL,STRIP,SUBC
TRKHOLD  DC    F'6'                     CYL/STRIP - STOPING FACTOR
         DC    X'00000100'              INCRIMENT FACTOR  CYL  -2321
         DC    F'11'                    STP/SCELL - STOPING FACTOR
         DC    X'00010000'              INCRIMENT FACTOR  STP  -2321
         DC    F'21'                    SCELL/CELL - STOPING FACTOR
         DC    X'01000000'              INCRIMENT FACTOR  SCELL - 2321
FF000000 DC    X'FF000000'              CLEAR STP/CYL/TRK
L3050500 DC    X'13060000'             END OF ORIGINAL TRACKS.
BLKTRKSW DC    F'0'
FFFFFF00 DC    X'FFFFFF00'
ABLKSTRP DC    A(BLKTRKSW+1)
         EJECT
*   HALF WORD BOUNDARY
         DS    0H
HALF500  DC    X'0500'
         EJECT
*  NO BOUNDARY
         SPACE 1
BLKTRACK STM   0,15,REGSV3             SAVE
         MVC   PRWD(20),BLKMES1        HEADER MESSAGE.
         LA    1,75                    COUNT FOR LONGEST
         BAL   LINK9,PRNT              PRINT IT
         MVC   PRWD(74),BLKMES2        A BLANK TRACK; DISCRIPTOR
         BAL   LINK9,PRNT              PRINT IT
         UNPK  BLKSAV(9),STRTADR+2(5)  HOME ADDRESS EXPECTED
         UNPK  BLKSAV+8(9),CCHHCK+1(5) HOME ADDRESS GOTTEN
         UNPK  BLKSAV+16(9),BLKTRKSW(5)  SWITCH TELLS TR,CY,ST,OR SC
         UNPK  BLKSAV+24(9),16(5,UCBREG) CSW LEFT HALF
         UNPK  BLKSAV+32(9),20(5,UCBREG) CSW RIGHT HALF
         UNPK  BLKSAV+40(13),24(7,UCBREG) SENSE BYTES (6)
         TR    BLKSAV(48),IOTAB-240      MAKE PRINTABLE
         LM    0,5,BLKSAV              MOVE
         STM   0,1,PRWD                  HA EXPECTED
         STM   2,3,PRWD+12               HA GOTTEN
         STM   4,5,PRWD+24               SWITCH   ALL TO PRINT BUFFER
         LM    0,6,BLKSAV+24            MOVE
         STM   0,1,PRWD+36               CSW LEFT HALF
         STM   2,3,PRWD+48               CSW RIGHT HALF
         STM   4,6,PRWD+60               SENSE BYTES  ALL TO PRINT
         LA    1,75                    LENGTH OF LONGEST MESSAGE.
         BAL   LINK9,PRNT               PRINT INFORMATION
         BAL   LINK9,PRNT                SPACE A LINE
         LM    0,15,REGSV3              RESTORE REGISTERS
         BR    LINK14                     PRINT A LINE
         SPACE 1
BLKMES2  DC    C' SEEKED      FOUND      SCSTCYTR    CSW LEFT'
         DC    C'    CSW RIGHT    SENSE BYTES    '
         SPACE 1
BLKSAV   DC    7D'0'
RLINK4   EQU   4
RLINK5   EQU   5
RCAW     EQU   3
RUCB     EQU   2
RLOOPCTR EQU   6
RTRKADR  EQU   7
         SPACE 1
         END   START
