         TITLE 'ISTDCC31 - ANALYZER - (CONTROL LAYER)                  *
                        '
ISTDCC31 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTDCC31  75.128'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*CRRPTR=ADDR(CRRSPACE);                                            0295
         L     CRRPTR,RPHCRR(,RPHPTR)                              0295
         LA    CRRPTR,CRRSPACE+312(,CRRPTR)                        0295
*/*                                                                  */
*/*                        RPL RPL RPL RPL RPL                       */
*/*                        RPL RPL RPL RPL RPL                       */
*/*                        RPL RPL RPL RPL RPL                       */
*/*                    RPL RPL RPL RPL RPL RPL RPL                   */
*/*                        RPL RPL RPL RPL RPL                       */
*/*                            RPL RPL RPL                           */
*/*                                RPL                               */
*RPLPTR=CRRARPL;                       /*GET ADDR OF RPL FROM CRR    */
         L     RPLPTR,CRRARPL(,CRRPTR)                             0296
*RFY IFGRPL BASED(RPLPTR);             /*ESTAB ADDR FOR RPL          */
*/*                                                                  */
*/*                        LCCWLCCWLCCWLCCWLCCW                      */
*/*                        LCCWLCCWLCCWLCCWLCCW                      */
*/*                        LCCWLCCWLCCWLCCWLCCW                      */
*/*                    LCCWLCCWLCCWLCCWLCCWLCCWLCCW                  */
*/*                        LCCWLCCWLCCWLCCWLCCW                      */
*/*                            LCCWLCCWLCCW                          */
*/*                                LCCW                              */
*RFY ISTLCCW BASED(CRRCLCCW);          /*GET ADDR OF LCCW FROM CRR -
*                                        FEEDBACK START SHOULD HAVE SET
*                                        CRRCLCCW TO THE CURRENT LCCW*/
*/*                                                                  */
*/*                        LDO LDO LDO LDO LDO                       */
*/*                        LDO LDO LDO LDO LDO                       */
*/*                        LDO LDO LDO LDO LDO                       */
*/*                    LDO LDO LDO LDO LDO LDO LDO                   */
*/*                        LDO LDO LDO LDO LDO                       */
*/*                            LDO LDO LDO                           */
*/*                                LDO                               */
*RFY ISTLDO BASED(LDOPTR);             /*ESTAB ADDR FOR LDO        0299
*                                        LDO ADDRESSABILITY WILL   0299
*                                        BE ESTABLISHED IN THE CODE
*                                        BASED ON CRRCLDO (IN CRR) 0299
*                                        AND ON LDOADDR (LDO FORWARD
*                                        POINTER) WHEN LDO IS A    0299
*                                        JUMP LDO                    */
*/********************************************************************/
*/*                                                                  */
*/*                  MAINLINE CODE BEGINS                            */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* THERE ARE THREE MAIN ROUTES THROUGH MAINLINE:                    */
*/*                                                                  */
*/* 1. IF CRRFINI IS SET (FINISH REQUESTED), GET THE SID             */
*/*    OF REQUEST FINISH AND EXIT VIA TPDVTS.                        */
*/*                                                                  */
*/* 2. IF CRRREQP IS SET (REQUEST PROCESSING), CALL PROCESSA         */
*/*    TO LOCATE AND VALIDATE THE APPROPRIATE LDO, AND CALL          */
*/*    PROCESSC TO GET THE APPROPRIATE SID FOR THAT LDO,             */
*/*    AND EXIT VIA TPDVTS.                                          */
*/*                                                                  */
*/* 3. IF CRRREQP IS NOT SET (MEANING THAT THIS IS FEEDBACK          */
*/*    PROCESSING), GET THE APPROPRIATE FEEDBACK SID,                */
*/*    AND EXIT VIA TPDVTS.                                          */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* INPUT (FIELDS TESTED):                                           */
*/*                                                                  */
*/* CRRFINI, WHEN SET, INDICATES 'FINISH REQUESTED'                  */
*/* CRRREQP, WHEN SET, INDICATES 'REQUEST PROCESSOR'                 */
*/* LCCWTYPE AND LCCWCTL ARE TESTED TO DETERMINE LCCW TYPE           */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* OUTPUT (FIELDS SET):                                             */
*/*                                                                  */
*/* FIELD    WHEN        SET      DEPENDENT                          */
*/* NAME:    SET:        TO:      UPON:                              */
*/*                                                                  */
*/* CRRMAS   ALWAYS      ZERO     N/A                                */
*/* CRRM31   ALWAYS      ON       N/A                                */
*/* CRRC31   ALWAYS      ON       N/A                                */
*/*                                                                  */
*/********************************************************************/
*CRRMAS=CRRMAS&&CRRMAS;                /*CLEAR PREVIOUS MODULE TRAIL
*                                        SETTINGS                    */
         XC    CRRMAS(8,CRRPTR),CRRMAS(CRRPTR)                     0300
*CRRM31=ON;                            /*SET MODULE TRAIL SWITCH FOR
*                                        ANALYZER                    */
         OI    CRRM31(CRRPTR),B'00000010'                          0301
*CRRC31=ON;                            /*SET AUDIT TRAIL SWITCH FOR
*                                        ANALYZER                    */
         OI    CRRC31(CRRPTR),B'00000010'                          0302
*IF CRRFINI=ON THEN                    /*IF FINISH IS REQUESTED    0303
*                                        BY THE LAST PROCESSOR       */
         TM    CRRFINI(CRRPTR),B'00001000'                         0303
         BNO   @RF00303                                            0303
*   DVTNAME=ADDR(REQFIN);              /*GET SID OF REQUEST FINISH   */
         LA    DVTNAME,REQFIN                                      0304
*ELSE                                  /*IF FINISH NOT REQUESTED     */
*   DO;                                                            0305
         B     @RC00303                                            0305
@RF00303 DS    0H                                                  0306
*   IF CRRREQP=ON THEN                 /*IF THIS IS REQUEST        0306
*                                        PROCESSING (NOT FEEDBACK)   */
         TM    CRRREQP(CRRPTR),B'00000010'                         0306
         BNO   @RF00306                                            0306
*      DO;                                                         0307
*      CALL PROCESSA;                  /*PROCESSA PROCESSES LDO (MAY
*                                        CALL PROCESSB, WHICH WILL SET
*                                        CRRSW1 IF 'VALID LDO'):     */
         BAL   @14,PROCESSA                                        0308
*      CALL PROCESSC;                  /*PROCESSC GETS LDO SID IF  0309
*                                        CRRSW1 IS SET, OR FINISH SID
*                                        IF IT ISN'T SET(INVALID LDO)*/
         BAL   @14,PROCESSC                                        0309
*      END;                            /*END OF REQ PROC DO GROUP    */
*   ELSE                               /*IF NOT REQ PROCESSING(THIS IS
*                                        FEEDBACK PROCESSING)        */
*      DO;                                                         0311
         B     @RC00306                                            0311
@RF00306 DS    0H                                                  0312
*      IF LCCWTYPE=LWRITE ×            /*IF LCCW IS WRITE OR RESET   */
*         LCCWTYPE=LCNTRL THEN         /*WRT=01 OR 11 -- RESET=11    */
         L     @15,CRRCLCCW(,CRRPTR)                               0312
         TM    LCCWTYPE(@15),B'00000001'                           0312
         BNO   @GL00001                                            0312
         TM    LCCWTYPE(@15),B'00000010'                           0312
         BZ    @RT00312                                            0312
@GL00001 L     @15,CRRCLCCW(,CRRPTR)                               0312
         TM    LCCWTYPE(@15),B'00000011'                           0312
         BNO   @RF00312                                            0312
@RT00312 DS    0H                                                  0313
*         DO;                                                      0313
*         IF LCCWCTL=LRESET THEN       /*IF LCCW IS RESET            */
         L     @15,CRRCLCCW(,CRRPTR)                               0314
         TM    LCCWCTL(@15),B'00001011'                            0314
         BNO   @RF00314                                            0314
         TM    LCCWCTL(@15),B'00000100'                            0314
         BNZ   @RF00314                                            0314
*            DVTNAME=ADDR(RESETFBK);   /*GET SID OF RESET FDBK       */
         LA    DVTNAME,RESETFBK                                    0315
*         ELSE                                                     0316
*            DVTNAME=ADDR(WRITEFBK);   /*GET SID OF WRITE FDBK       */
         B     @RC00314                                            0316
@RF00314 LA    DVTNAME,WRITEFBK                                    0316
*         END;                         /*END WRITE OR RESET DO       */
*      ELSE                                                        0318
*         DVTNAME=ADDR(SOLRDFBK);      /*GET SID OF SOL/RD FDBK      */
         B     @RC00312                                            0318
@RF00312 LA    DVTNAME,SOLRDFBK                                    0318
*      END;                            /*END OF NOT-REQUEST DO GROUP */
@RC00312 DS    0H                                                  0320
*   END;                               /*END OF FINISH NOT REQ     0320
*                                        ELSE-DO GROUP               */
@RC00306 DS    0H                                                  0321
*/*  TPDVTS NAMEPTR(DVTNAME) */                                    0321
* DO;                                                              0321
*                                                                  0321
@RC00303 DS    0H                                                  0322
*/* ATBUILD (ISTRPH,ISTPAB,ISTDYPAB,ISTATCVT)  */                  0322
*              /* DYNAMIC PAB 1K633 */                             0322
* /* 1K0997 JAN 20, 1973  MB   */                                  0322
* /* 1K1142 MAR 03, 1973  MB   */                                  0322
* DCL 1 ISTDYPAB BDY(DWORD) BASED, /* LEVEL 1 DECLARE 1K633 */     0322
*       2  DYPTYPE CHAR(1), /* CONTROL BLOCK TYPE CODE 1K633 */    0322
*       2  DYPLNGTH PTR(8), /* CONTROL BLOCK LENGTH (BYTES)  1K633 */
*       2 DYPFLGS CHAR(2),     /* FLAGS 1K633 */                   0322
*       2 DYPCHAIN PTR(31),    /* CHAIN POINTER 1K633 */           0322
*       2 DYPTSKID PTR(31),    /* TASKID OR PTR TO PSS TABLES 1K633 */
*       2  DYPRSV01 PTR(31),   /* RESERVED TO PRESERVE ALIGNMENT   0322
*                                                             1K0997 */
*       2 DYPPAB CHAR(LENGTH(ISTPAB)) BDY(DWORD); /* LENGTH OF 1K0997
*                                                    PAB         */
*DCL DYTYP   BIT(8) CONSTANT ('11'X);   /* TYPE           1K1142 */
*/* LOCKWORD FORMAT DSECT                                            */
*/*  INITIAL LEVEL                                     001 05/24/74  */
*DCL 1 ISTLOK BDY(WORD) BASED,                                     0324
*     2  LOKCT CHAR(1) BDY(WORD),       /* COUNT OF LOCK OWNERS      */
*     2  LOKCHN PTR(24),                /* ADDR OF NEXT RPH WAITING
*                                          ON LOCK                   */
*        3  LOKCHNG CHAR(3),            /* CHAIN/FLAGS               */
*           4 *        CHAR(2),                                    0324
*           4 *        BIT(8),                                     0324
*             5 *        BIT(6),                                   0324
*             5  LOKPRY BIT(1),         /* PRIORITY FLAG, 1 = ON     */
*             5  LOKXCL BIT(1);         /* EXCLUSIVE FLAG, 1 = ON    */
*DCL LOKXCL1  BIT(32) CONSTANT('00000001'X); /* CONSTANT TO TURN LOKXCL
*                                          ON                        */
*DCL LOKPRY1  BIT(32) CONSTANT('00000002'X); /* CONSTANT TO TURN LOKPRY
*                                          ON                        */
*DCL LOKCHN1  BIT(32) CONSTANT('00FFFFFC'X); /* CONSTANT TO TURN LOKXCL
*                                          AND LOKPRY OFF            */
*DCL LOKCT1   BIT(32) CONSTANT('01000000'X); /* CONSTANT TO MAKE LOKCT
*                                          = 1                       */
*DCL LOKCT255 BIT(32) CONSTANT('FF000000'X); /* CONSTANT TO CHECK FOR
*                                          MAX LOKCT (255)           */
*/*  REVISIONS                                         011 04/25/75   *
*DCL ATCLCPTR PTR LOCATION(1032);      /* POINTER TO ATCVT            *
*DCL  1  ISTATCVT BDY(DWORD) BASED,                                0331
*        2  ATCCOM BDY(WORD),          /* SYSTEM INDEPENDENT FIELDS   *
*           3  ATCSTAT CHAR(4),        /* VTAM  STATUS INDICATORS     *
*              4  ATCSTAT1 CHAR(1),    /* VTAM  STATUS BYTE 1         *
*                 5  ATCSTART BIT(1),  /* VTAM  IS STARTING           *
*                 5  ATCACTIV BIT(1),  /* VTAM  IS ACTIVE             *
*                 5  ATCSNHLT BIT(1),  /* VTAM  SESSION HALT          *
*                 5  ATCQKHLT BIT(1),  /* VTAM  QUICK HALT            *
*                 5  ATCNETSL BIT(1),  /* NETSOL=YES SPECIFIED ON CMD *
*                 5  ATCINHLT BIT(1),  /* INTERNAL VTAM HALT QUICK    *
*                 5 * BIT(2),          /* RESERVED                    *
*              4  ATCSTFLG BIT(8),     /* STORAGE MANAGEMENT FLAGS    *
*                 5  ATCHSDMF BIT(1),  /* SYSTEM SLOW DOWN FLAG       *
*              4  ATCPOFLG BIT(8),     /* PROGRAM OPERATOR            *
*                                      /* INTERFACE FLAGS             *
*                 5 ATCPOUNS BIT(1),   /* APPLICATION AUTHORIZED TO   *
*                                      /* RECEIVE UNSOLICITED MESSAGES*
*                                      /* 1 = YES                     *
*                 5 *        BIT(7),   /* RESERVED                    *
*              4  ATCSTAT4 CHAR(1),    /* VTAM  STATUS BYTE 4         *
*                 5  ATCPRTAT BIT(1),  /* 1 = TRACE PRINT ACTIVE,  0331
*                                         0 = NOT ACTIVE              *
*                 5  ATCTPRT BIT(1),   /* WHEN 1, TPRINT IN PROCESS   *
*                 5  ATCMTST BIT(1),   /* WHEN 1, MODIFY TEST IN   0331
*                                         PROCESS                     *
*                 5  ATCNCSD BIT(1),   /* NCS QUIESCED DURING HALT    *
*                 5  ATCRSV04 BIT(4),  /* RESERVED                    *
*           3  ATCAPI PTR(31),         /* ADDR OF API ROUTINE         *
*           3  ATCDCFRR PTR(31),       /* POINTER TO FRR OF CONTROL
*                                         LAYER,INITIALIZED BY OPENDST*
*           3  ATCRDT PTR(31),         /* POINTER TO FIRST RDT        *
*           3  ATCSRT PTR(31),         /* POINTER TO SRT DIRECTORY    *
*           3  ATCASCHD PTR(31),       /* POINTER TO AP SCHEDULER     *
*           3  ATCECMOD CHAR(4),       /* ECB FOR MODIFY COMMAND PROC.*
*           3  ATCMODQ PTR(31),        /* POINTER FOR OUTPUT QUEUE    *
*                                      /* FOR MODIFY COMMAND          *
*           3  ATCECHLT CHAR(4),       /* ECB FOR HALT COMMAND        *
*           3  ATCHALTQ PTR(31),       /* POINTER TO OUTPUT QUEUE     *
*                                      /* FOR HALT COMMAND            *
*           3  ATCECVRY CHAR(4),       /* ECB FOR VARY COMMAND PROC.  *
*           3  ATCVARYQ PTR(31),       /* POINTER TO OUTPUT QUEUE     *
*                                      /* FOR VARY COMMAND            *
*           3  ATCECDSP CHAR(4),       /* ECB FOR DISPLAY COMMAND     *
*           3  ATCDSPLQ PTR(31),       /*  POINTER TO OUTPUT QUEUE    *
*                                      /* FOR DISPLAY COMMAND         *
*           3  ATCOCHA PTR(31),        /* POINTER TO OCT HEADER       *
*           3  ATCECSES CHAR(4),       /* ECB TO HALT SESSION MODE    *
*           3  ATCECVRQ CHAR(4),       /* ERP ECB FOR VARY REQ. INFO. *
*                                      /* REQUEST NOTIFICATION        *
*           3  ATCVPARM PTR(31),       /* ADDR OF VARY PARAMETERS     *
*           3  ATCECOPC CHAR(4),       /* ECB TOINDICATE OPERATOR     *
*                                      /* CONTROL PROCESSING COMPLETE *
*           3  ATCECNET CHAR(4),       /* ERP ECB FOR NETWORK         *
*                                      /* CONFIGURATION REQUEST       *
*           3  ATCECPRM PTR(31),       /* POINTER TO QAB FOR ERP'S    *
*                                      /* ECB PARAMETERS              *
*           3  ATCHLTMS PTR(31),       /* POINTER TO HALT COMMAND     *
*                                      /* OR HALT RETURN MESSAGE      *
*           3  ATCFSB PTR(31),         /* PTR TO FEEDBACK STATUS      *
*                                      /* BLOCK                       *
*           3  ATCFRSCH PTR(31),       /* POINTER TO FEEDBACK         *
*                                      /* ROUTINE SCHEDULER           *
*           3  ATCRDTH PTR(31),        /*  POINTER RDT HEADER         *
*           3  ATCACCTA PTR(31),       /* POINTER TO INSTALLATION     *
*                                      /* ACCOUNTING ROUTINE          *
*           3  ATCAUTHA PTR(31),       /* POINTER TO INSTALLATION     *
*                                      /* AUTHORISATION ROUTINE       *
*           3  ATCPTCHA PTR(31),       /* PTR TO VTAM PATCH AREA      *
*           3  ATCCONFT PTR(31),       /* POINTER TO VTAM             *
*                                      /* CONFIGURATION TABLE         *
*           3  ATCFDVT PTR(31),        /* PTR TO FIRST DVT FOR O/C    *
*           3  ATCFEPT PTR(31),        /* PTR TO FIRST EPT FOR O/C    *
*           3  ATCDVTPT PTR(31),       /* ADDR OF LOAD MOD FOR        *
*                                      /* TYPE=VTAM TRACING           *
*           3  ATCBPDA PTR(31),        /* PTR TO BUFFER POOL DIRECTORY*
*           3  ATCADD PTR(31),         /* POINTER TO ADD PROCEDURE    *
*           3  ATCREMOV PTR(31),       /* POINTER TO REMOVE PROCEDURE *
*           3  ATCIOTRC PTR(31),       /*  POINTER TO I/O TRACE       *
*                                      /* PROCEDURE                   *
*              4 ATCTHTRC PTR(31),     /* ADDR OF TH TRACE ROUTINE    *
*                5 ATCTPBUF PTR(31),   /* TPIOS BUFFER TRACE(ISTRARTP)*
*           3  ATCBFTRC PTR(31),       /* PTR TO BUFFER TRACE         *
*                                      /* PROCEDURE                   *
*           3  ATCFBRPH PTR(31),       /* ADDR OF FEEDBACK PROC RPH   *
*           3  ATCBLDLA PTR(31),       /* ADDR OF BLDL ROUTINE        *
*           3  ATCALOAD PTR(31),       /* ADDR OF ALOAD ROUTINE       *
*           3  ATCREADA PTR(31),       /* ADDR OF SOURCE READ ROUTINE *
*           3  ATCGTSTR PTR(31),       /* ADDR OF GETSTOR ROUTINE     *
*           3  ATCFRSTR PTR(31),       /* ADDR OF FREESTOR ROUTINE    *
*           3  ATCSTMA PTR(31),        /* ADDR OF SM INITIALIZATION   *
*                                      /* ROUTINE                     *
*           3  ATCACDA PTR(31),        /* ADDR OF FIRST ACDEB         *
*           3  ATCSMRQ PTR(31),        /* ADDR OF REQUEST STORAGE     *
*                                      /* ROUTINE                     *
*           3  ATCSMQU PTR(31),        /* ADDR OF QUEUE REQUEST RTNE
*                                         - DOS ONLY                  *
*           3  ATCSMRS PTR(31),        /* ADDR OF RELEASE STORAGE     *
*                                      /* ROUTINE                     *
*           3  ATCSMRC PTR(31),        /* ADDR OF RECOVER STORAGE     *
*                                      /* ROUTINE  - DOS ONLY         *
*           3  ATCSMBQ PTR(31),        /* PTR TO Q'ED REQ. SMS RTN.   *
*           3  ATCFIRA PTR(31),        /* ADDR OF FEEDBACK INITIATION *
*                                      /* RPH                         *
*           3  ATCSRTAD PTR(31),       /* PTR TO SRTADD ROUTINE       *
*           3  ATCSRTDF PTR(31),       /* PTR TO SRTDELE ROUTN        *
*           3  ATCDCC60 PTR(31),       /* PTR TO ISTDCC60 - CTL. LAYER
*                                         MOVE TO USER AREA           *
*           3  ATCDCC61 PTR(31),       /* PTR TO ISTDCC61 - CTL. LAYER
*                                         MOVE FIXED TO PAGABLE       *
*/*  BEGIN 'ANY' DVT                                                  *
*           3  ATCNERST PTR(31),       /* PTR TO ISTDCC00 - REQUEST-ST*
*           3  ATCNERCV PTR(31),       /* PTR TO ISTRCC21-RECEIVE OB  *
*           3  ATCNERNE PTR(31),      /* PTR TO ISTDCC25 - READ-ANY   *
*           3  ATCNERFN PTR(31),      /* PTR TO ISTDCC02 - REQUEST-FN *
*/*  END 'ANY' DVT                                                    *
*           3  ATCAPOST PTR(31),      /* PTR TO VTAM  POST ROUTINE    *
*           3  ATCVTMID CHAR(2),      /* HOST MAJOR NODE I.D.         *
*           3  ATCRSV11 CHAR(2),      /* RESERVED                     *
*           3 ATCRCC63 PTR(31),  /* HSKPANYQ POINTER                  *
*           3 ATCRCC26 PTR(31),  /* SEND RESPONSE POINTER             *
*           3 ATCRCC65 PTR(31),  /* SET RPL POINTER                   *
*           3  ATCNESAL PTR(31),      /* PTR TO ISTDCC24 - SOLICIT-ALL*
*           3  ATCNERAP PTR(31),       /* PTR TO ISTDCC85 - READ ANY
*                                         PURGE                       *
*           3 ATCACTRM FIXED(15),     /* COUNT OF ACTIVE TERMINALS    *
*           3 ATCCIDM BIT(16),        /* CID MASK                     *
*           3 ATCMSGSP BIT(8), /* RESERVED FOR MESAGE SURPRESSION     *
*         2 ATCMAXID PTR(8),   /* MAXIMUM NUMBER OF MAJOR NODES, 0 =
*                                 NUMBER OF ENTRIES IN THE MNT        *
*         2 ATCRSV16 CHAR(2),  /* NOT USED                            *
*         2 ATCMNT PTR(31),    /*PTR TO MAJOR NODE TABLE -SET BY SYS.
*                                DEF. REF. BY ISTSDCCB (CBDEF),    0331
*                                ISTSDCCI (CINDEXY)                   *
*         2 ATCCDADD PTR(31),  /*PTR TO CIDADD ROUTINE ISTSDCCA    0331
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCCDDEL PTR(31),  /*PTR TO CIDDEL ROUTINE ISTSDCCD    0331
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCCDFND PTR(31),  /*PTR TO CIDFND ROUTINE IATSDCCF    0331
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCESC01 PTR(31),  /*PTR TO ESC01                         *
*         2 ATCESC02 PTR(31),  /*PTR TO ESC02                         *
*         2 ATCCSMR PTR(31),        /* PTR TO CONNECTION SERVICES     *
*                                   /*  MASTER ROUTINE                *
*           3 ATCCSMA PTR(31),      /* PTR TO CONNECTION SERVICES  0331
*                                      MASTER ROUTINE                 *
*         2 ATCOCRT PTR(31),        /* PTR TO OPEN/CLOSE ROUTINE      *
*         2 ATCUEP  PTR(31),        /* POINTER TO USER EXIT           *
*         2 ATCSHRTN CHAR(8),       /* NAME OF VTAM  SHARED RTN       *
*                                   /*  TO BE LOADED                  *
*         2 ATCSHRFG BIT(8),        /* ATTRIBUTE FLAGS                *
*           3 ATCLAST BIT(1),       /* INDICATE HTIS IS LAST MODULE   *
*         2 ATCXRANG CHAR(1),       /* NUMBER OT BITS IN X-VALUE   0331
*                                       PORTION   OF CID              *
*         2 ATCSAF   CHAR(2),       /* SUB AREA ADDRESS FIELD         *
*         2 ATCEPA PTR(31),         /* ENTRY POINT ADDR OF LOADED     *
*         2 ATCALERT PTR(31),       /* POINTER TO ALERT-ROUTINE    0331
*                                      ISTSDCAL                       *
*         2 ATCDVLOD PTR(31),       /* PTR TO ISTSDCOD                *
*         2 ATCTRCPT PTR(31),       /* POINTER TO TRACE PARM LIST     *
*         2 ATCDVT   PTR(31),       /* POINTER TO FIRST DVT ON CHAIN  *
*         2 ATCEPT   PTR(31),       /* POINTER TO FIRST EPT ON CHAIN  *
*         2 ATCMSGP PTR(31),        /* POINTER TO TPMSG PROCESSOR     *
*         2 ATCMSGM PTR(31),        /* POINTER TO TPMSG - MESSAGE  0331
*                                      CSECT                          *
*         2 ATCTRPAB  PTR(31),      /* ADDRESS OF TRACE WRITER PAB    *
*         2 ATCVTLOD PTR(31),       /* ADDR OF VTAM LOAD LIST         *
*         2 ATCECPRT CHAR(4),       /* ECB FOR TRACE FILE PRINT       *
*         2 ATCZDVTB PTR(31),       /* ADDRESS OF ISTZCFBI            *
*         2 ATCECTLP CHAR(4),       /* TOLTEP ECB                     *
*         2 ATCRVCHS CHAR(8),       /* RESERVED                       *
*         2 ATCCRME  PTR(31),       /* VARY PSS CONTROL MECHANISM     *
*         2 ATCHPGM,                /* BUFFER INFORMATION            */
*           3 ATCHBFNO FIXED(15),   /* NUMBER OF BUFFS FOR CHANNEL   */
*           3 ATCHBSIZ FIXED(15),   /* BUFFER SIZE IN BYTES          */
*         2 ATCDEBCH PTR(31),       /* CLOSE DEB CHAIN PTR           */
*         2 ATCTODVT PTR(31),       /* THE TOLTEP DVT PTR POINTED  0331
*                                      TO BY 3RD WORD OF PAB         */
*         2 ATCADEL  PTR(31),       /* A DELETE ROUTINE ADDRESS      */
*         2 ATCCDPTR PTR(31),       /* PTR TO ISTOCCCD - DOS ONLY    */
*         2 ATCLDNCS PTR(31),       /* PTR TO NCSPL FOR LOAD/DUMP    */
*         2 ATCLDECB BIT(32),       /* ECB FOR LOAD/DUMP SUBTASK     */
*         2 ATCRSV99 CHAR(32),      /* RESERVED FOR LATER POINTERS   */
*         2 ATCAP33 PTR(31),        /* PTR TO ISTAPC33               */
*         2 ATCAP35 PTR(31),        /* PTR TO ISTAPC35               */
*         2 ATCAP36 PTR(31),        /* PTR TO ISTAPC36               */
*         2 ATCDVTLK CHAR(LENGTH(ISTLOK)), /* LOCK WORD FOR DVT LOCK */
*         2 ATCCDFIN PTR(31),       /* POINTER TO ISTSDCRR           */
*         2 ATCCDFDN PTR(31),       /* POINTER TO ISTSDCCN           */
*         2 ATCVOCLK CHAR(LENGTH(ISTLOK)), /* VOCLOCK LOCK           */
*         2 ATCRDTLK CHAR(LENGTH(ISTLOK)), /* RDTLOCK LOCK           */
*         2 ATCRSV97 PTR(31),              /* DWORD ALIGNMENT        */
*         2 ATCVPAB1 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB FOR VARY
*                                           UNDER PSS CONTROL        */
*         2 ATCPGPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* ERP PAB FOR
*                                      PURGE                         */
*         2 ATCDLRPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* DUMP LOAD &
*                                           RESTART PAB              */
*         2 ATCCCLAD PTR(31),       /* ADDRESS OF VARY ERP (ISTINCCL)*/
*         2 ATCCDLAD PTR(31),       /* ADDRESS OF VARY DUMP,LD RSTRT
*                                      (ISTINCDL)                    */
*         2 ATCOCCOB PTR(31),       /* ADDRESS ISTOCCOB              */
*         2 ATCOCCCB PTR(31),       /* ADDRESS ISTOCCCB              */
*         2 ATCTIPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0331
*                                           FOR ISTOLTP              */
*         2 ATCTCIPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0331
*                                           FOR TOLTEP CLIP          */
*         2 ATCVTIPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0331
*                                           FOR TOLTEP-VTAM INTERFACE*/
*         2 ATCTCLOM PTR(31),      /* ADDR TOLTEP CLOP PROC          */
*         2 ATCTCLIM PTR(31),      /* ADDR TOLTEP CLIP PROC          */
*         2 ATCVTINM PTR(31),      /* ADDR TOLTEP-VTAM INTF PROC     */
*         2 ATCTACB  PTR(31),      /* TOLTEP ACB                     */
*         2 ATCRSV10 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* RESERVED  */
*         2 ATCPTR00 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB     */
*         2 ATCCFEAD PTR(31),          /* ADDR OF ISTINCFE           */
*         2 ATCVLCNT CHAR(4) BDY(HWORD), /* VARY DEVICE ONLINE COUNTS*/
*           3 ATCRNCNT PTR(16),        /* 370X COUNT                 */
*           3 ATCLCLCT PTR(16),        /* 3270 COUNT                 */
*         2 ATCS49XI PTR(31),          /* ADDRESS OF ISTPICXI        */
*         2 ATCS49XL PTR(31),          /* ADDRESS OF ISTPICXL        */
*         2 ATCPODVT PTR(31),          /* PTR TO PROGRAM OPERATOR DVT*/
*         2 ATCPOIA  PTR(31),          /* PTR TO PROGRAM OPERATOR    */
*                                      /* INTERFACE AREA             */
*         2 ATCSOPD CHAR(8) BDY(WORD), /* SESSION CONTROL            */
*           3 ATCSEC01 PTR(31),        /* OUTBOUND PROCESSING        */
*           3 ATCSEC10 PTR(31),        /* DVT                        */
*         2 ATCSIPD CHAR(12) BDY(WORD),/* SESSION CONTROL            */
*           3 ATCSEC21 PTR(31),        /* INBOUND PROCESSING         */
*           3 ATCSEC30 PTR(31),        /* FEEDBACK                   */
*           3 ATCSEC40 PTR(31),        /* DVT                        */
*         2 ATCSECST CHAR(4) BDY(WORD),/* SESSION CONTROLSESS TERM   */
*           3 ATCSEC51 PTR(31),        /* RECOVERY DVT               */
*         2 ATCNMCTR FIXED(15),        /* NAME COUNTER               */
*         2 *        FIXED(15),        /* RESERVED                   */
*         2 ATCSRTAB PTR(31),          /* SEARCH LOGON MODE TABLE    */
*                                      /* RTN ADDRESS (ISTINCSH)     */
*         2 ATCUSSPT PTR(31),          /* DEFAULT USS DEFINITION     */
*                                      /* TABLE ADDRESS (ISTINCDT)   */
*         2 ATCMODTB PTR(31),          /* DEFAULT SYSTEM LOGON MODE  */
*                                      /* TABLE ADDRESS (ISTINCLM)   */
*         2 ATCINCW3 PTR(31),          /* ADDRESS OF ISTINCW3        */
*         2 ATCIOECB PTR(31),          /* ECB USED BY IOS -          */
*                                      /* POINTED TO BY IOBECBPT     */
* 2 ATCVDPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),                    0331
*                                    /* SSCP COMMAND PROCESSING PAB  */
* 2 ATCVFPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),                    0331
*                                    /* SSCP FRONT END PAB           */
* 2 ATCVDLOK CHAR(LENGTH(ISTLOK)),   /* SSCP SERIALIZATION LOCK      */
*/* END OF COMMON AREA                                               */
*/* VS1/VS2 COMMON CODE.                                             */
*        2  ATCRSVBB PTR(31),          /* RESERVED                    *
*        2  ATCAOSM BDY(DWORD),                                    0331
*/*                                                                   *
*           3  ATCSRBRT PTR(31),       /* POINTER TO ROUTINE UNDER    *
*                                      /* SRB CONTROL                 *
*           3  ATCGSRBQ PTR(31),       /* READY QUEUE FOR GLOBAL SRB'S*
*              4  ATCGSRBG BIT(8),     /* READY QUEUE GATE BYTE       *
*                 5  ATCGSRBF BIT(1),  /* READY QUEUE GATE BIT        *
*           3  ATCPRPH PTR(31),        /* PTR TO PREALLOCATED RPH     *
*           3  ATCCMTCB PTR(31),       /* PTR TO COMMUNICATIONS TASK  *
*                                      /* TCB                         *
*           3  ATCAP11 PTR(31),        /* PTR TO ISTAPC11             *
*           3  ATCAP12 PTR(31),        /* PTR TO ISTAPC12             *
*           3  ATCAP31 PTR(31),        /* PTR TO ISTAPC31             *
*           3  ATCAP32 PTR(31),        /* PTR TO ISTAPC32             *
*           3  ATCAP34 PTR(31),        /* PTR TO ISTAPC34             *
*           3  ATCAP52 PTR(31),        /* PTR TO ISTAPC52             *
*           3  ATCAP53 PTR(31),        /* PTR TO ISTAPC53             *
*           3  ATCAP54 PTR(31),        /* PTR TO ISTAPC54             *
*           3  ATCAP57 PTR(31),        /* PTR TO ISTAPC57             *
*           3  ATCAP58 PTR(31),        /* PTR TO ISTAPC58             *
*           3  ATCAP61 PTR(31),        /* PTR TO ISTAPC61             *
*           3  ATCAP63 PTR(31),        /* PTR TO ISTAPC63             *
*           3  ATCAP64 PTR(31),        /* PTR TO ISTAPC64             *
*           3  ATCZFSVT PTR(31),       /* TPIOS FIXED SRVICES VCTR TAB*
*           3  ATCZPSVT PTR(31),       /* TPIOS PAGBL SRVCES VCTR TABL*
*           3  ATCICNCB PTR(31),       /* HEAD OF ICNCB QUEUE         *
*           3  ATCZDVT1 PTR(31),       /* TPIOS SLODWN RECOVRY PRCSR  *
*           3  ATCZDVT3 PTR(31),       /* 370X FEEDBACK STAT CNTRL RTR*
*           3  ATCZDVT4 PTR(31),       /* OPERATOR MESSAGE SCHEDULER  *
*           3  ATCZDVT6 PTR(31),       /* DIALOGUE SCHEDULER (INBOUND)*
*           3  ATCAP65 PTR(31),        /* PTR TO ISTAPC65            */
*           3  ATCICAPP CHAR(20) BDY(WORD), /* 3705 APPENDAGE VECTOR  *
*              4  ATCCDRPH PTR(31),    /* ADDR CLOSE DEB RPH       0331
*                                         (DUMMY EOA APP.)           */
*              4  ATCZSIOA PTR(31),    /* ADDR 3705 SIO APPENDAGE    */
*              4  ATCCDTCB PTR(31),    /* VTAM TCB (DUMMY PCI APP.)  */
*              4  ATCZCEA PTR(31),     /* ADDR 3705 CHANNEL END    0331
*                                         APPENDAGE                  */
*              4  ATCZAEA PTR(31),     /* ADDR 3705 CHANNEL END    0331
*                                         APPENDAGE                  */
*           3  ATCLDAPP CHAR(20) BDY(WORD), /* LOCAL 3270 APPENDAGE
*                                         VECTOR                     */
*              4  ATCCDTID PTR(31),    /* TASK ID OF VTAM          0331
*                                         (DUMP EOE)                 */
*              4  ATCSMFRR PTR(31),    /* ADDR OF SMS FRR          0331
*                                         (DUMMY SIOA)               */
*              4  ATCRSV17 PTR(31),    /* RESERVED FOR ALIGNMENT     */
*              4  ATCZLCEA PTR(31),    /* ADDR 3270 CHANNEL END    0331
*                                         APPENDAGE                  */
*              4  ATCZLAEA PTR(31),    /* ADDR 3270 CHANNEL END    0331
*                                         APPENDAGE                  */
*           3  ATCDAPVT CHAR(24) BDY(WORD),  /* DUMMY APPENDAGE    0331
*                                         VECTOR TABLE FOR LOAD/DVMMY*/
*              4  ATCDEOEA PTR(31),    /* ADDRESS OF DUMMY END     0331
*                                         OF EXTENT APPENDAGE        */
*              4  ATCDSIOA PTR(31),    /* ADDRESS OF DUMMY END     0331
*                                         OF SIO APPENDAGE           */
*              4  ATCDPCIA PTR(31),    /* ADDRESS OF DUMMY PCI     0331
*                                         APPENDAGE                  */
*              4  ATCDCEA PTR(31),     /* ADDRESS OF CHANNEL END   0331
*                                         APPENDAGE                  */
*              4  ATCDXCEA PTR(31),    /* ADDRESS OF ABNORMAL      0331
*                                         END APPENDAGE              */
*              4  ATCDAPDG CHAR(2),    /* DUMMY APPENDAGE            */
*              4  ATCRSV56 CHAR(2),    /* RESERVED                   */
*           3  ATCZDVT7 PTR(31),       /* ADDR OF RESET CLEANUP    0331
*                                         (PHASE 1)                   *
*           3  ATCZDVT8 PTR(31),       /* 3270 LOCAL TEST AND CTL  0331
*                                         FEEDBACK ROUTER            */
*           3  ATCZDVT9 PTR(31),       /* ADDRESS OF ISTZDFKA        */
*           3  ATCZDVTA PTR(31),       /* ADDRESS OF ISTZCFIA        */
*           3  ATCZDVTX PTR(31),       /* ADDRESS OF TRUNK LINE    0331
*                                         DEACTIVATE ROUTINE         */
*           3  ATCZLPVT PTR(31),       /* ADDRESS OF ISTZPSVA        */
*           3  ATCZLFVT PTR(31),       /* TPIOS 3270 LOCAL FIXED   0331
*                                         SERVICES VECTOR TABLE      */
*           3  ATCZPAB1 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB FOR
*                                         TEST AND CTL FEEDBACK ROUTER*
*           3  ATCZPAB2 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* 370X 0331
*                                         STATUS AND FEEDBACK ROUTER
*                                         DYNAMIC PAB                */
*           3  ATCAP51  PTR(31),       /* PTR TO ISTAPC51            */
*           3  ATCZDFJ0 PTR(31),       /* ADDR OF ISTZDFJ0           */
*           3  ATCAP37  PTR(31),       /* PTR TO ISTAPC37            */
*           3  ATCAP38  PTR(31),       /* PTR TO ISTAPC38            */
*           3  ATCRPT11 PTR(31),       /* RESERVED                   */
*           3  ATCRPT12 PTR(31),       /* RESERVED                   */
*           3  ATCRPT13 PTR(31),       /* RESERVED                   */
*           3  ATCRPT14 PTR(31),       /* RESERVED                   */
*           3  ATCRPT15 PTR(31),       /* RESERVED                   */
*           3  ATCRPT16 PTR(31),       /* RESERVED                   */
*           3  ATCRPT17 PTR(31),       /* RESERVED                   */
*           3  ATCRPT18 PTR(31),       /* RESERVED                   */
*           3  ATCRPT19 PTR(31),       /* RESERVED                   */
*           3  ATCRPT20 PTR(31),       /* RESERVED                   */
*           3  ATCRPT21 PTR(31),       /* RESERVED                   */
*           3  ATCRPT22 PTR(31),       /* RESERVED                   */
*           3  ATCRPT23 PTR(31),       /* RESERVED                   */
*           3  ATCRPT24 PTR(31),       /* RESERVED                   */
*           3  ATCRPT25 PTR(31),       /* RESERVED                   */
*           3  ATCRPT26 PTR(31),       /* RESERVED                   */
*           3  ATCRPT27 PTR(31),       /* RESERVED                   */
*           3  ATCRPT28 PTR(31),       /* RESERVED                   */
*           3  ATCRPT29 PTR(31),       /* RESERVED                   */
*           3  ATCRPT30 PTR(31),       /* RESERVED                   */
*           3  ATCRPT31 PTR(31),       /* RESERVED                   */
*           3  ATCRPT32 PTR(31),       /* RESERVED                   */
*           3  ATCRPT33 PTR(31),       /* RESERVED                   */
*           3  ATCRPT34 PTR(31),       /* RESERVED                   */
*           3  ATCRPT35 PTR(31),       /* RESERVED                   */
*           3  ATCRPT36 PTR(31),       /* RESERVED                   */
*           3  ATCRPT37 PTR(31),       /* RESERVED                   */
*           3  ATCRPT38 PTR(31),       /* RESERVED                   */
*           3  ATCRPT39 PTR(31),       /* RESERVED                   */
*           3  ATCRPT40 PTR(31),       /* RESERVED                   */
*/* END OF VS1/VS2 COMMON CODE.                                      */
*/* START OF VS2 UNIQUE CODE.                                        */
*           3  ATCVTFLG BIT(32),                                   0331
*              4 ATCVTACT BIT(1),      /* VTT ACTIVE                 */
*              4 *        BIT(31),     /* RESERVED                   */
*           3  ATCHLTCB PTR(31),       /* ECB FOR HALTING VTAM       */
*           3  ATCATA10 PTR(31),       /* PTR TO ISTATM10            */
*           3  ATCZLAAB PTR(31),       /* PTR TO ISTZLFAB            */
*           3  ATCCACXA PTR(31),       /* PTR TO ISTCFCXA            */
*           3  ATCSMARA PTR(31),       /* PTR TO ISTORFRA            */
*           3  ATCSMAID PTR(31),       /* PTR TO ISTORFID            */
*           3  ATCTPWQA PTR(31),       /* WAIT Q ANCHOR FOR TPIOS    */
*           3  ATCSMAPR PTR(31),       /* PTR TO ISTORFPR            */
*           3  ATCSMABF PTR(31),       /* PTR TO ISTORFBF            */
*           3  ATCPSTA  PTR(31),       /* ACTIVE PST QUEUE           */
*           3  ATCTRMBP CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0331
*                                      /* PAB FOR VTAM TERM TASK     */
*           3  ATCTPSPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0331
*                                      /* PAB FOR TPIOS              */
*           3  ATCAP23  PTR(31),       /* PTR TO ISTAPC23            */
*           3  ATCAPC25 PTR(31),       /* PTR TO ISTAPC25            */
*           3  ATCAP41  PTR(31),       /* PTR TO ISTAPC41            */
*           3  ATCRCFY0 PTR(31),       /* PTR TO ISTRCFY0            */
*           3  ATCAP55  PTR(31),       /* PTR TO ISTAPC55            */
*           3  ATCAP56  PTR(31),       /* PTR TO ISTAPC56            */
*           3  ATCAPC59 PTR(31),       /* PTR TO ISTAPC59            */
*           3  ATCAP62  PTR(31),       /* PTR TO ISTAPC62            */
*           3  ATCAP66  PTR(31),       /* PTR TO ISTAPC66            */
*           3  ATCAP69  PTR(31),       /* PTR TO ISTAPM69            */
*           3  ATCAP82  PTR(31),       /* PTR TO ISTAPC82            */
*           3  ATCAP83  PTR(31),       /* PTR TO ISTAPC83            */
*           3  ATCAP84  PTR(31),       /* PTR TO ISTAPC84            */
*           3  ATCAP85  PTR(31),       /* PTR TO ISTAPC85            */
*           3  ATCAP86  PTR(31),       /* PTR TO ISTAPC86            */
*           3  ATCASCB  PTR(31),       /* PTR TO VTAM ASCB           */
*           3  ATCMPLTA  PTR(31),      /* PTR TO MPST LIST TABLE     */
*           3  ATCZR01  PTR(31),       /* PTR TO ISTZRM01            */
*           3  ATCAICTN PTR(31),       /* PTR TO ISTAICTN            */
*           3  ATCTPCP0 PTR(31),       /* PTR TO ISTZFSAV            */
*           3  ATCTPCP1 PTR(31),       /* PTR TO ISTZ19SV            */
*           3  ATCZFLAG BIT(8),        /* FLAG BYTE                  */
*              4 ATCZF001 BIT(1),      /* MDR RECORDING SUSPENDED    */
*              4 ATCRSV66 BIT(7),      /* RESERVED                   */
*           3  ATCRSV75 BIT(8),        /* RESERVED                   */
*           3  ATCSRBCT FIXED(16),     /* COUNT OF PREALLOCATED SRB'S*/
*           3  ATCCRACT FIXED(16),     /* COUNT OF PREALLOCATED CRA'S*/
*           3  ATCRPLCT FIXED(16),     /* COUNT OF PREALLOCATED CRPL */
*           3  ATCTPMPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /*TP MSG PAB
*                                                         FOR VS2    */
*           3  ATCTPMMI PTR(31),        /* PTR TO ISTCFMMI - MSG ISSUER
*                                          FOR SRB MODE ROUTINES     */
*           3  ATCVIOPM PTR(31),       /* PTR TO ISTVIOPM            */
*        2  ATCAOS CHAR(0) BDY(WORD);  /* VS2 ONLY FIELDS            */
*/* END OF ATBUILD */                                              0332
* RFY (GPR01P,GPR02P,GPR06P,GPR08P) RSTD;                          0332
* GEN REFS(GPR01P,GPR02P,GPR08P) SETS(RPHWORK)                     0333
* (STM   GPR02P,GPR08P,RPHWORK(GPR01P));                           0333
         STM   GPR02P,GPR08P,RPHWORK(GPR01P)
* RFY (GPR02P,GPR08P) UNRSTD;                                      0334
* RFY GPR00P RSTD;                                                 0335
* GPR00P = DVTNAME;                                                0336
         LR    GPR00P,DVTNAME                                      0336
* GPR01P -> RPHSRPRM = 0;                                          0337
         SLR   @15,@15                                             0337
         ST    @15,RPHSRPRM(,GPR01P)                               0337
* RFY GPR15P RSTD;                                                 0338
*                                                                  0338
* DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                    0339
*   GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                    0340
         L     GPR15P,ATCLCPTR                                     0340
* END; /*LISATCVT*/                                                0341
* GPR15P=GPR15P -> ATCESC02;                                       0342
         L     GPR15P,ATCESC02(,GPR15P)                            0342
* DCL FMZL0006 BASED(GPR15P) LABEL VALUERANGE(*);                  0343
* CALL FMZL0006;                                                   0344
         BALR  @14,@15                                             0344
* RFY (GPR00P,GPR15P) UNRSTD;                                      0345
* RFY (GPR02P,GPR08P) RSTD;                                        0346
* GEN REFS(RPHWORK) SETS(GPR02P,GPR08P)                            0347
* (LM    GPR02P,GPR08P,RPHWORK(GPR01P));                           0347
         LM    GPR02P,GPR08P,RPHWORK(GPR01P)
* RFY (GPR01P,GPR02P,GPR06P,GPR08P) UNRSTD;                        0348
* END;                                                             0349
*/***** END OF TPDVTS GENERATION *****/             /*ROUTE CONTROL TO
*                                                     SPECIFIED ROUTINE
*-                                                    DVTNAME POINTS TO
*ID OF                                                THE APPROPRIATE R
*UTINE     */                                                      0350
*/*VABEND COMPCODE(VTAM)REASCODE(ABNDCONT)DUMP(NO)*/               0350
* DO; /*****BEGIN VABEND GENERATION*****/                          0350
*                                                                  0350
* RFY (GPR01P,GPR15P) RSTD;              /* DECLARE AND RESTRICT REGS*/
*   GPR15F=ABNDCONT;                     /* PUT REASON CODE IN REG15 */
         L     GPR15F,@CF00813                                     0352
*   GPR01F='A9000'X;                     /* COMP CODE IN R1 BITS 8-19*/
         L     GPR01F,@CF02948                                     0353
*                                        /* INVOKE OS/VS ABEND MACRO */
*   GEN REFS(GPR01F);                                              0354
*                                                                  0354
         ABEND (1),,STEP
* RFY (GPR01P,GPR15P) UNRSTD;            /* UNRESTRICT REGS 1 AND 15 */
* END; /*****END OF VABEND GENERATION*****/ /* TPDVTS FAILED*/     0356
*GEN NOSETS NOREFS(EJECT);                                         0357
         EJECT
*/********************************************************************/
*/*                                                                  */
*/* ROUTINE NAME : PROCESSA - CHECK LDO                              */
*/*                                                                  */
*/* FUNCTION : THERE ARE TWO MAJOR PATHS THROUGH PROCESSA :          */
*/* 1. IF CRRFLDOS IS SET (FIRST LDO), SET POINTER TO LDO IN         */
*/*    CRR (CRRCLDO), SET THE LDO COUNT (CRRLDOCT) TO ZERO,          */
*/*    AND CALL PROCESSB(TO PUT THE LDO OPCODE IN A NEW LCCW).       */
*/*    RETURN TO MAINLINE                                            */
*/*                                                                  */
*/* 2. IF CRRFLDOS IS NOT SET (MEANING THAT THE CURRENT LDO IS       */
*/*    NOT THE FIRST LDO) THEN CHECK THE FOLLOWING :                 */
*/*      A.  IF THE LDO IS NOT COMMAND CHAINED, RETURN.              */
*/*      B. IF THE LDO IS COMMAND CHAINED,                           */
*/*         BUT THE MAXIMUM NUMBER OF LDOS HAS BEEN EXCEEDED(CRRLDOCT*/
*/*         >MAXLDO) - THE MAX IS 100 - SET ERROR CODES AND RETURN.  */
*/*      C. IF THE LDO IS COMMAND                                    */
*/*         CHAINED, AND THE LDO MAXIMUM IS NOT EXCEEDED,            */
*/*         GET ADDRESS OF NEXT LDO AND CALL PROCESSB TO             */
*/*         PUT ITS OP - CODE IN NEXT LCCW.                          */
*/*                                                                  */
*/* INPUT : SEE I/O TABLES BELOW                                     */
*/*                                                                  */
*/* OUTPUT : SEE I/O TABLE BELOW                                     */
*/*                                                                  */
*/* SUBROUTINES CALLED : PROCESSB                                    */
*/*                                                                  */
*/* MACROS USED : NONE                                               */
*/*                                                                  */
*/********************************************************************/
*/******************* I/O TABLE **************************************/
*/*                                                                  */
*/*  INPUT (FIELDS TESTED):                                          */
*/*                                                                  */
*/* CRRFLDOS, WHEN SET, INDICATES 'FIRST LDO'                        */
*/* LDOCMHN, WHEN SET, INDICATES 'LDO IS COMMAND CHAINED'            */
*/* CRRLDOCT CONTAINS A COUNT OF LDO'S                               */
*/* LDOADDR CONTAINS THE ADDRESS OF THE NEXT LDO ON THE LDO QUEUE    */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* OUTPUT (FIELDS SET):                                             */
*/*                                                                  */
*/* NAME OF  WHEN        SET      DEPENDENT                          */
*/* FIELD:   SET:        TO:      UPON:                              */
*/*                                                                  */
*/* CRRRTN1  ALWAYS      RETADDR  N/A                                */
*/* CRRSW1   ALWAYS      OFF      N/A                                */
*/* CRRCLDO  CONDITIONAL RPLAREA  CRRFLDOS=ON                        */
*/* CRRLDOCT CONDITIONAL CLEAR    CRRFLDOS=OFF                       */
*/* LDOADDR  CONDITIONAL CRRFLDO  CRRFLDOS=OFF                       */
*/* CRRM100  CONDITIONAL ON       CRRLDOCT>=MAXLDO &                 */
*/*                               LDOCMHN=ON &                       */
*/*                               RETCODE=CLEAR &                    */
*/*                               CRRFLDOS=OFF                       */
*/* LDOPTR   CONDITIONAL LDOADDR  CRRLDOCT<MAXLDO &                  */
*/*                               LDOCMHN=ON &                       */
*/*                               RETCODE=CLEAR &                    */
*/*                               CRRFLDOS=OFF                       */
*/* CRRRTNCD CONDITIONAL CRRLOGIC RETCODE^=CLEAR &                   */
*/*                               CRRFLDOS=OFF                       */
*/* CRRFDB2  CONDITIONAL CRRM100  RETCODE^=CLEAR &                   */
*/*                               CRRFLDOS=OFF                       */
*/* RETADDR  ALWAYS      CRRRTN1  N/A                                */
*/*                                                                  */
*/********************************************************************/
*PROCESSA: PROCEDURE OPTIONS (NOSAVE,NOSAVEAREA);                  0358
         B     @PB00002                                            0358
PROCESSA DS    0H                                                  0359
*CRRRTN1=RETADDR;                      /*SAVE RETURN ADDRESS TO    0359
*                                        RETURN TO MAINLINE          */
         ST    RETADDR,CRRRTN1(,CRRPTR)                            0359
* DO; /*MODESET  EXTKEY(ZERO)*/                                    0360
*   SPKA (0); /*SET PSW KEY*/                                      0361
         SLR   @15,@15                                             0361
         SPKA  0(@15)                                              0361
* END; /*MODESET  EXTKEY(ZERO)*/                 /* GET 0 KEY         Y
*0APCF*/                                                           0362
*CRRSW1=OFF;                           /*INIT SWITCH THAT MAY BE   0363
*                                        BE SET BY PROCESSB TO     0363
*                                        INDICATE 'VALID LDO'        */
         NI    CRRSW1(CRRPTR),B'10111111'                          0363
*IF CRRFLDOS=ON THEN                   /*IF 'FIRST LDO' IS IN-     0364
*                                        DICATED IN CRR(IT WOULD HAVE
*                                        BEEN SET BY REQUEST START)  */
         TM    CRRFLDOS(CRRPTR),B'01000000'                        0364
         BNO   @RF00364                                            0364
*  DO;                                                             0365
*  CRRLDOCT=CLEAR;                     /*SET LDO COUNT TO ZERO       */
         STH   @15,CRRLDOCT(,CRRPTR)                               0366
*  LDOPTR=CRRCLDO;                     /*ESTAB ADDR OF LDO FOR     0367
*                                        VALCHECK IN PROCESSB        */
         L     LDOPTR,CRRCLDO(,CRRPTR)                             0367
*  CALL PROCESSB;                      /*VALIDATE LDO ADDRESS AND  0368
*                                        OPCODE FOR FIRST LDO        */
         BAL   @14,PROCESSB                                        0368
*  END;                                /*END 'FIRST LDO' DO GROUP    */
*ELSE                                  /*IF 'FIRST LDO' NOT INDI-  0370
*                                        CATED IN CRR                */
*  DO;                                                             0370
         B     @RC00364                                            0370
@RF00364 DS    0H                                                  0371
*  LDOPTR=CRRCLDO;                     /*GET ADDR OF LDO FROM CRR    */
         L     LDOPTR,CRRCLDO(,CRRPTR)                             0371
*     IF LDOCMHN=ON THEN               /*IF LDO IS COMMAND CHAINED   */
         TM    LDOCMHN(LDOPTR),B'01000000'                         0372
         BNO   @RF00372                                            0372
*        IF CRRLDOCT>=MAXLDO THEN       /*IF LDO COUNT IS MAX(100)    *
         LH    @15,CRRLDOCT(,CRRPTR)                               0373
         C     @15,@CF02557                                        0373
         BL    @RF00373                                            0373
*           DO;                                                    0374
*           CRRRTNCD=CRRLOGIC;         /*INDICATE'LOGIC ERROR'IN CRR */
         MVI   CRRRTNCD(CRRPTR),X'08'                              0375
*           CRRFDB2=CRRM100;           /*SET'LDO MAX EXCEEDED'IN CRR */
         MVI   CRRFDB2(CRRPTR),X'1A'                               0376
*           END;                       /*END LDO COUNT IS MAX        */
*        ELSE                          /*IF LDO COUNT IS NOT MAX     */
*          DO;                                                     0378
         B     @RC00373                                            0378
@RF00373 DS    0H                                                  0379
*          LDOPTR=LDOPTR+8;            /*GET ADDR OF NEXT LDO        */
         AL    LDOPTR,@CF00039                                     0379
*          CALL PROCESSB;              /*VALIDATE LDO                */
         BAL   @14,PROCESSB                                        0380
*          END;                        /*END OF LDO COUNT NOT      0381
*                                        MAX DO GROUP                */
*     ELSE;                            /*IF LDO IS NOT COMMAND-    0382
*                                        CHAINED, FALL THROUGH       */
@RF00372 DS    0H                                                  0383
*  END;                                /*END 'FIRST LDO' NOT INDICATED
*                                        IN CRR DO GROUP             */
@RC00372 DS    0H                                                  0384
* DO; /*MODESET  EXTKEY(VTAM)*/                                    0384
@RC00364 DS    0H                                                  0385
*   SPKA (96); /*SET PSW KEY*/                                     0385
         LA    @15,96                                              0385
         SPKA  0(@15)                                              0385
* END; /*MODESET  EXTKEY(VTAM)*/                  /* VS30116       0386
*Y30APCF*/                                                         0386
*RETADDR=CRRRTN1;                      /*RESTORE RETURN ADDR (R14) 0387
*                                        SAVED ABOVE                 */
         L     RETADDR,CRRRTN1(,CRRPTR)                            0387
*END PROCESSA;                         /*RETURN TO MAINLINE          */
@EL00002 DS    0H                                                  0388
@EF00002 DS    0H                                                  0388
@ER00002 BR    @14                                                 0388
@PB00002 DS    0H                                                  0388
*GEN NOSETS NOREFS(EJECT);                                         0389
         EJECT
*/********************************************************************/
*/*                                                                  */
*/* ROUTINE NAME : PROCESSB - VALIDATE LDO                           */
*/*                                                                  */
*/* FUNCTION : PROCESSB CHECKS FOR TWO BASIC ERROR CONDITIONS :      */
*/*      1. JUMP LDO TO ANOTHER JUMP LDO                             */
*/*      2. INVALID OPCODE                                           */
*/*                                                                  */
*/* IF NO ERRORS ARE                                                 */
*/* FOUND, PROCESSB PUTS THE LDO OPCODE IN AN LCCW SLOT, PUTS THE    */
*/* ADDRESS OF THE CURRENT LDO IN CRR, UPDATES THE LDO COUNT, AND    */
*/* SETS A SWITCH INDICATING THAT THE LDO IS VALID.                  */
*/*                                                                  */
*/* THERE ARE THREE MAIN ROUTES THROUGH PROCESSB:                    */
*/*                                                                  */
*/* 1. IF  THIS IS NOT THE FIRST LDO  (CRRFLDOS ON) AND THIS IS A    */
*/*   JUMP LDO, SET ERROR CODES AND RETURN.                          */
*/*                                                                  */
*/* 2. IF THIS IS THE FIRST AND IS A JUMP AND THE NEXT LDO IS        */
*/*   JUMP ALSO, SET ERROR CODES AND RETURN.                         */
*/*                                                                  */
*/* 3. IF THIS IS A JUMP AND THE FOLLOWING LDO IS VALID (NOT A JUMP),*/
*/*   PUT THE LDO ADDRESS                                            */
*/*   OF THE CURRENT LDO IN CRR.  ONLY IF THE LDO IS NOT THE FIRST   */
*/*   LDO (CHECK CRRFLDOS), ADD 8 TO THE ADDRES OF LCCW IN CRR       */
*/*   (CRRCLCCW). THEN PUT THE OPCODE IN THE LCCW AND COMPARE IT WITH*/
*/*   VALID OPCODES IN THE TABLE.                                    */
*/*      A. IF OPCODE IS INVALID ,SET ERROR CODES AND RETURN         */
*/*      B. IF VALID ,SET CRRSW1( VALID OPCODE ) & ADD 1 TO LDO COUNT*/
*/*         IN THE CRR                                               */
*/*                                                                  */
*/* INPUT : SEE I/O TABLE BELOW                                      */
*/*                                                                  */
*/* OUTPUT : SEE I/O TABLE BELOW                                     */
*/*                                                                  */
*/* SUBROUTINES CALLED : NONE                                        */
*/*                                                                  */
*/* MACROS USED : NONE                                               */
*/*                                                                  */
*/********************************************************************/
*/************************** I/O TABLE *******************************/
*/*                                                                  */
*/* INPUT (FIELDS TESTED):                                           */
*/* LDOPTR ( REG 5 ) CONTAINS THE LDO ADDRESS TO BE VALIDATED        */
*/* LDOCMD INDICATES WHETHER THE LDO IS A JUMP LDO                   */
*/* CRRRTNCD SHOULD INDICATE WHETHER ERRORS WERE FOUND DURING JUMP   */
*/*          LDO PROCESSING IN THIS PROCEDURE                        */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* OUTPUT (FIELDS SET):                                             */
*/*                                                                  */
*/* FIELD    WHEN        SET      DEPENDENT                          */
*/* NAME:    SET:        TO:      UPON:                              */
*/*                                                                  */
*/* CRRFLDO  CONDITIONAL LDOPTR   RETCODE=CLEAR &                    */
*/*                               LDOCMD=LDOJUMP                     */
*/*                                 - OR -                           */
*/*                               RETCODE=CLEAR &                    */
*/*                               CRRRTNCD=CLEAR                     */
*/* LDOPTR   CONDITIONAL LDOADDR  RETCODE=CLEAR &                    */
*/*                               LDOCMD=LDOJUMP                     */
*/* CRRRTNCD CONDITIONAL CRRLOGIC LDOCMD=LDOJUMP OR                  */
*/*                               RETCODE^=CLEAR                     */
*/* CRRFDB2  CONDITIONAL CRRJTOJ  LDOCMD=LDOJUMP                     */
*/*  "           "       CRRILDOA RETCODE^=CLEAR                     */
*/*  "           "       CRRILDOP RETCODE^=CLEAR                     */
*/* CRRLDOCT CONDITIONAL CRRLDOCT+1 RETCODE=CLEAR &                  */
*/*                               CRRRTNCD=CLEAR                     */
*/* CRRSW1   CONDITIONAL ON       RETCODE=CLEAR &                    */
*/*                               CRRRTNCD=CLEAR                     */
*/*                                                                  */
*/********************************************************************/
*PROCESSB: PROCEDURE OPTIONS (NOSAVE,NOSAVEAREA);                  0390
         B     @PB00003                                            0390
PROCESSB DS    0H                                                  0391
*  IF LDOCMD=LDOJUMP THEN              /*IF THIS IS A JUMP LDO       */
         CLI   LDOCMD(LDOPTR),X'08'                                0391
         BNE   @RF00391                                            0391
*     IF CRRFLDOS=OFF THEN DO;         /* THIS FIRST LDO ? */      0392
         TM    CRRFLDOS(CRRPTR),B'01000000'                        0392
         BNZ   @RF00392                                            0392
*     CRRCLDO=LDOPTR;                  /*NO, PUT ADDR LDO IN CRR     */
         ST    LDOPTR,CRRCLDO(,CRRPTR)                             0394
*     LDOPTR=LDOADDR;                  /*GET ADDR NEXT LDO           */
         L     LDOPTR,LDOADDR(,LDOPTR)                             0395
*        IF LDOCMD=LDOJUMP THEN        /*BUT IF THIS IS A JUMP LDO   */
         CLI   LDOCMD(LDOPTR),X'08'                                0396
         BNE   @RF00396                                            0396
*           DO;                                                    0397
*           CRRRTNCD=CRRLOGIC;         /*INDICATE 'LOGIC ERROR'IN CRR*/
         MVI   CRRRTNCD(CRRPTR),X'08'                              0398
*           CRRFDB2=CRRJTOJ;           /*INDICATE 'JUMP LDO TO JUMP
*                                        LDO' ERROR IN CRR           */
         MVI   CRRFDB2(CRRPTR),X'19'                               0399
*           END;                       /*END JUMP LDO ERROR DO       */
*        END;                          /*END FIRST LDO CHECK    */ 0401
*     ELSE                             /*YES, FIRST LDO. SET ERROR */
*       DO;                                                        0402
         B     @RC00392                                            0402
@RF00392 DS    0H                                                  0403
*       CRRFDB2=CRRJTOJ;               /*INDICATE 'INVALID LDO ADDR'
*                                        IN CRR                      */
         MVI   CRRFDB2(CRRPTR),X'19'                               0403
*       CRRRTNCD=CRRLOGIC;             /*INDICATE 'LOGIC ERROR'IN CRR*/
         MVI   CRRRTNCD(CRRPTR),X'08'                              0404
*     END;                             /*END LDO IS JUMP LDO DO GROUP*/
*  IF CRRRTNCD=CLEAR THEN              /*IF NO ERROR CODE IN CRR (LDO
*                                        HAS NOT BEEN FOUND IN ERROR)*/
@RC00392 DS    0H                                                  0406
@RF00391 CLI   CRRRTNCD(CRRPTR),0                                  0406
         BNE   @RF00406                                            0406
*     DO;                                                          0407
*     CRRCLDO=LDOPTR;                  /*PUT ADDR LDO IN CRR         */
         ST    LDOPTR,CRRCLDO(,CRRPTR)                             0408
*     IF CRRFLDOS=ON THEN;             /*IF 'FIRST LDO' FLAG IS SET
*                                        IN CRR, DO NOTHING HERE     */
         TM    CRRFLDOS(CRRPTR),B'01000000'                        0409
         BO    @RT00409                                            0409
*     ELSE                             /*IF NOT 'FIRST LDO'          */
*        CRRCLCCW=CRRCLCCW+8;          /*UPDATE CURRENT LCCW ADDRESS
*                                        IN CRR                      */
         LA    @15,8                                               0411
         AL    @15,CRRCLCCW(,CRRPTR)                               0411
         ST    @15,CRRCLCCW(,CRRPTR)                               0411
*     LCCWOP=LDOCMD;                   /*PUT LDO OPCODE IN LCCW      */
@RT00409 L     @15,CRRCLCCW(,CRRPTR)                               0412
         MVC   LCCWOP(1,@15),LDOCMD(LDOPTR)                        0412
*     CRRRTN2=RPHPTR;                  /*SAVE POINTER TO RPH NOW CON-
*                                        TAINED IN REG 1: TRT WILL 0413
*                                        DESTROY REGS 1 AND 2        */
         ST    RPHPTR,CRRRTN2(,CRRPTR)                             0413
*     RPHPTR=CLEAR;                    /*ZERO REG 1: IF TRT RETURNS
*                                        AN ADDRESS IN REG 1 (RPHPTR)
*                                        FROM THE TABLE OF         0414
*                                        VALID LCCW OPCODES,       0414
*                                        THE LCCW OPCODE IS VALID    */
         SLR   RPHPTR,RPHPTR                                       0414
*     RFY TRTNEEDS RESTRICTED;         /*TRT WILL USE REG 2          */
*     TRT (LCCWOP,OPCTABLE);           /*TEST THE LCCW OPCODE FOR A
*                                        MATCH: TRT ADDS THE LCCW  0416
*                                        OPCODE NUMBER TO THE ADDRESS
*                                        OF THE TABLE.  IF THE BYTE
*                                        ADDRESSED BY THE SUM OF THE
*                                        TABLE ADDRESS+LCCW OPCODE IS
*                                        NONZERO (IN THIS CASE, IT 0416
*                                        MEANS THAT THE LCCW OPCODE IS
*                                        VALID) TRT WILL RETURN THE
*                                        ADDRESS OF THAT BYTE IN REG 1.
*                                        FOR THE PURPOSES OF THIS  0416
*                                        ROUTINE, A NONZERO VALUE  0416
*                                        RETURNED FROM TRT IN      0416
*                                        REG 1 SIGNIFIES A VALID LCCW*/
         L     @03,CRRCLCCW(,CRRPTR)                               0416
         TRT   LCCWOP(1,@03),OPCTABLE                              0416
*     RFY TRTNEEDS UNRSTD;             /*FREE R2 FOR USE BY PLS      */
*     IF RPHPTR=CLEAR THEN             /*IF LCCW OPCODE IS INVALID   */
         LTR   RPHPTR,RPHPTR                                       0418
         BNZ   @RF00418                                            0418
*        DO;                                                       0419
*        CRRRTNCD=CRRLOGIC;            /*INDICATE 'LOGIC ERROR'IN CRR*/
         MVI   CRRRTNCD(CRRPTR),X'08'                              0420
*        CRRFDB2=CRRILDOP;             /*INDICATE 'INVALID LDO OPCODE'
*                                        IN CRR                      */
         MVI   CRRFDB2(CRRPTR),X'06'                               0421
*        END;                          /*END LCCW INVALID DO GROUP   */
*     ELSE                             /*IF LCCW OPCODE IS VALID     */
*        DO;                                                       0423
         B     @RC00418                                            0423
@RF00418 DS    0H                                                  0424
*        CRRLDOCT=CRRLDOCT+1;          /*ADD ONE TO LDO COUNT IN CRR */
         LA    @15,1                                               0424
         AH    @15,CRRLDOCT(,CRRPTR)                               0424
         STH   @15,CRRLDOCT(,CRRPTR)                               0424
*        CRRSW1=ON;                    /*INDICATE 'VALID LDO' FOR USE
*                                        BY PROCESSC                 */
         OI    CRRSW1(CRRPTR),B'01000000'                          0425
*        END;                          /*END VALID LCCW OPCODE DO    */
*     RPHPTR=CRRRTN2;                  /*RESTORE RPHPTR (REG 1)      */
@RC00418 L     RPHPTR,CRRRTN2(,CRRPTR)                             0427
*     END;                             /*END CRRRTNCD=CLEAR DO GROUP */
*END PROCESSB;                         /*RETURN TO PROCESSA          */
@EL00003 DS    0H                                                  0429
@EF00003 DS    0H                                                  0429
@ER00003 BR    @14                                                 0429
@PB00003 DS    0H                                                  0429
*GEN NOSETS NOREFS(EJECT);                                         0430
         EJECT
*/********************************************************************/
*/*                                                                  */
*/* ROUTINE NAME : PROCESSC - GET THE CORRECT DVT                    */
*/*                                                                  */
*/* FUNCTION : DETERMINE THE SID FOR ROUTING CONTROL FOR FURTHER RE- */
*/* QUEST PROCESSING.                                                */
*/*                                                                  */
*/* THERE ARE TWO MAJOR ROUTES THROUGH PROCESSC:                     */
*/*                                                                  */
*/* 1. IF THE LCCW OPCODE IS INVALID (PROCESSB DID NOT SET CRRSW1),  */
*/*   GET THE SID OF REQUEST FINISH AND RETURN TO MAINLINE.          */
*/*                                                                  */
*/* 2. IF THE LCCW OPCODE IS VALID (CRRSW1 IS ON):                   */
*/*   A. CHECK FOR INDICATION OF WRITE/RESET OPCODE (LCCWTYPE        */
*/*      WOULD BE EQUAL TO X'01' OR X'11').                          */
*/*      IF WRITE/RESET IS INDICATED, CHECK FURTHER FOR RESET        */
*/*      (LCCWCTL = LRESET).  IF RESET IS INDICATED, GET THE SID     */
*/*      IF RESET REQUEST.  OTHERWISE, GET THE SID OF WRITE REQUEST. */
*/*   B. IF THE OPCODE IS NOT WRITE OR RESET, IT MUST BE READ OR     */
*/*      SOLICIT.  CHECK THE OPCODE FOR AN INDICATION OF READ        */
*/*      (LCCWTYPE = LREAD).  IF READ IS INDICATED, GET THE SID      */
*/*      OF READ REQUEST.  OTHERWISE, GET THE SID OF SOLICIT REQUEST.*/
*/*   RETURN TO MAINLINE.                                            */
*/*                                                                  */
*/* INPUT : SEE I/O TABLE BELOW                                      */
*/*                                                                  */
*/* OUTPUT : SEE I/O TABLE BELOW                                     */
*/*                                                                  */
*/* SUBROUTINES CALLED : NONE                                        */
*/*                                                                  */
*/* MACROS USED : NONE                                               */
*/*                                                                  */
*/********************************************************************/
*/**************************** I/O TABLE *****************************/
*/*                                                                  */
*/* INPUT (FIELDS TESTED):                                           */
*/*                                                                  */
*/* CRRSW1 SHOULD HAVE BEEN SET BY PROCESSB IF VALID LDO IS          */
*/*       TO BE PROCESSED                                            */
*/* LCCWTYPE AND LCCWCTL ARE TESTED TO DETERMINE                     */
*/*    THE LCCW (LDO) TYPE                                           */
*/********************************************************************/
*/*                                                                  */
*/* OUTPUT (FIELDS SET):                                             */
*/*                                                                  */
*/* FIELD    WHEN        SET      DEPENDENT                          */
*/* NAME:    SET:        TO:      UPON:                              */
*/*                                                                  */
*/* DVTNAME  CONDITIONAL REQFIN   CRRSW1=0                           */
*/*                                                                  */
*/* (THE FOLLOWING SETTINGS OF DVTNAME ARE DEPENDENT UPON CRRSW1=1)  */
*/*                                                                  */
*/* DVTNAME  CONDITIONAL RESETREQ LCCWCTL=LRESET                     */
*/*   "         "        WRITEREQ LCCWTYPE=LWRITE × LCNTRL BUT       */
*/*                               LCWCTL^=LRESET                     */
*/*   "         "        READREQ  LCCWTYPE=LREAD                     */
*/*   "         "        SOLICREQ LCCWTYPE^=LREAD                    */
*/*                                                                  */
*/********************************************************************/
*PROCESSC: PROCEDURE OPTIONS (NOSAVE,NOSAVEAREA);                  0431
         B     @PB00004                                            0431
PROCESSC DS    0H                                                  0432
*IF CRRSW1=ON THEN                     /*IF PROCESSB HAS INDICATED 0432
*                                        'VALID LDO'                 */
         TM    CRRSW1(CRRPTR),B'01000000'                          0432
         BNO   @RF00432                                            0432
*  DO;                                                             0433
*  IF LCCWTYPE=LWRITE ×                /*IF LCCW (LDO) IS WRITE/RESET*/
*     LCCWTYPE=LCNTRL THEN             /*WRT=01 OR 11 -- RESET=11    */
         L     @15,CRRCLCCW(,CRRPTR)                               0434
         TM    LCCWTYPE(@15),B'00000001'                           0434
         BNO   @GL00002                                            0434
         TM    LCCWTYPE(@15),B'00000010'                           0434
         BZ    @RT00434                                            0434
@GL00002 L     @15,CRRCLCCW(,CRRPTR)                               0434
         TM    LCCWTYPE(@15),B'00000011'                           0434
         BNO   @RF00434                                            0434
@RT00434 DS    0H                                                  0435
*     DO;                                                          0435
*     IF LCCWCTL=LRESET THEN           /*IF LCCW (LDO) IS RESET      */
         L     @15,CRRCLCCW(,CRRPTR)                               0436
         TM    LCCWCTL(@15),B'00001011'                            0436
         BNO   @RF00436                                            0436
         TM    LCCWCTL(@15),B'00000100'                            0436
         BNZ   @RF00436                                            0436
*        DVTNAME=ADDR(RESETREQ);       /*GET SID OF RESET REQUEST    */
         LA    DVTNAME,RESETREQ                                    0437
*     ELSE                             /*IF LCCW (LDO) IS NOT RESET  */
*        DVTNAME=ADDR(WRITEREQ);       /*GET SID OF WRITE REQUEST    */
         B     @RC00436                                            0438
@RF00436 LA    DVTNAME,WRITEREQ                                    0438
*     END;                             /*END WRITE-RESET DO          */
*  ELSE                                /*IF NOT WRITE OR RESET, CHECK
*                                        FOR READ OR SOLICIT         */
*     DO;                                                          0440
         B     @RC00434                                            0440
@RF00434 DS    0H                                                  0441
*     IF LCCWOP=LDOSLCT THEN           /*IF LCCW (LDO) IS SOLICIT    */
         L     @15,CRRCLCCW(,CRRPTR)                               0441
         CLI   LCCWOP(@15),X'F2'                                   0441
         BNE   @RF00441                                            0441
*        DVTNAME=ADDR(SOLICREQ);       /*GET SID OF SOLICIT REQUEST  */
         LA    DVTNAME,SOLICREQ                                    0442
*     ELSE                             /*IF LCCW (LDO) IS READ       */
*        DVTNAME=ADDR(READREQ);        /*GET SID OF READ REQUEST     */
         B     @RC00441                                            0443
@RF00441 LA    DVTNAME,READREQ                                     0443
*     END;                             /*END NOT-WRITE-OR-RESET DO   */
*  END;                                /*END VALID LDO DO GROUP      */
*ELSE                                  /*IF NO VALID LDO             */
*  DVTNAME=ADDR(REQFIN);               /*GET SID OF REQUEST FINISH   */
         B     @RC00432                                            0446
@RF00432 LA    DVTNAME,REQFIN                                      0446
*END PROCESSC;                         /*RETURN TO MAINLINE          */
@EL00004 DS    0H                                                  0447
@EF00004 DS    0H                                                  0447
@ER00004 BR    @14                                                 0447
@PB00004 DS    0H                                                  0447
*DCL 1 TABLE CHAR(256) STATIC LOCAL,   /*TABLE OF VALID OPCODES -- 0448
*                                        VALID OPCODES ARE INIT-   0448
*                                        IALIZED TO NONZERO VALUES   */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 02 (2) READ                */
*    2      *   FIXED(8) INIT(1),      /* 03 CONTACT                 */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 05 (5) WRTBLK              */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 09 (9) WLM                 */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 0B (11) RESTL              */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 0D (13) WLT                */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 0F (15) WRTHDR             */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 11 (17) EAU                */
*    2      *   FIXED(8) INIT(1),      /* 12 (18) READMOD            */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 16 (22) READBUF            */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 19 (25) ERASE MSG          */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 1B (27) RESETC             */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 1D (29) ERAST              */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 1F (31) RVI                */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 29 (41) COPY MSG           */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 2B (43) RESETU    */     0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 2D (45) COPYT              */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 2F (47) NR                 */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 3F (63) AR                 */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 5F (95) PLG                */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* 6F (111) NLG               */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(1),      /* F2 (242) SOLICIT           */
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0),                                  0448
*    2      *   FIXED(8) INIT(0);                                  0448
*                                                                  0448
*/* TPEPILOG   */                                                  0449
* GEN (PRINT OFF);                                                 0449
*                                                                  0449
         PRINT OFF
* GEN (PRINT ON);                                                  0450
         PRINT ON
*/* END OF TPEPILOG */                                             0451
*END ISTDCC31                                                      0451
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        *
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                        *
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*;                                                                 0451
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTDCC31 CSECT
         DS    0F
@CF00039 DC    F'8'
@CF02557 DC    F'100'
@CF02948 DC    XL4'A9000'
@CF00813 DC    XL4'7141'
@DATD    DSECT
         DS    0D
CVTPTR   DS    A
LCPBPTR  DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTDCC31 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
TABLE    DS    CL256
         ORG   TABLE
@NM00059 DC    AL1(0)
@NM00060 DC    AL1(0)
@NM00061 DC    AL1(1)
@NM00062 DC    AL1(1)
@NM00063 DC    AL1(0)
@NM00064 DC    AL1(1)
@NM00065 DC    AL1(0)
@NM00066 DC    AL1(0)
@NM00067 DC    AL1(0)
@NM00068 DC    AL1(1)
@NM00069 DC    AL1(0)
@NM00070 DC    AL1(1)
@NM00071 DC    AL1(0)
@NM00072 DC    AL1(1)
@NM00073 DC    AL1(0)
@NM00074 DC    AL1(1)
@NM00075 DC    AL1(0)
@NM00076 DC    AL1(1)
@NM00077 DC    AL1(1)
@NM00078 DC    AL1(0)
@NM00079 DC    AL1(0)
@NM00080 DC    AL1(0)
@NM00081 DC    AL1(1)
@NM00082 DC    AL1(0)
@NM00083 DC    AL1(0)
@NM00084 DC    AL1(1)
@NM00085 DC    AL1(0)
@NM00086 DC    AL1(1)
@NM00087 DC    AL1(0)
@NM00088 DC    AL1(1)
@NM00089 DC    AL1(0)
@NM00090 DC    AL1(1)
@NM00091 DC    AL1(0)
@NM00092 DC    AL1(0)
@NM00093 DC    AL1(0)
@NM00094 DC    AL1(1)
@NM00095 DC    AL1(0)
@NM00096 DC    AL1(0)
@NM00097 DC    AL1(0)
@NM00098 DC    AL1(0)
@NM00099 DC    AL1(0)
@NM00100 DC    AL1(1)
@NM00101 DC    AL1(0)
@NM00102 DC    AL1(1)
@NM00103 DC    AL1(0)
@NM00104 DC    AL1(1)
@NM00105 DC    AL1(0)
@NM00106 DC    AL1(1)
@NM00107 DC    AL1(0)
@NM00108 DC    AL1(0)
@NM00109 DC    AL1(0)
@NM00110 DC    AL1(0)
@NM00111 DC    AL1(0)
@NM00112 DC    AL1(0)
@NM00113 DC    AL1(0)
@NM00114 DC    AL1(0)
@NM00115 DC    AL1(0)
@NM00116 DC    AL1(0)
@NM00117 DC    AL1(0)
@NM00118 DC    AL1(0)
@NM00119 DC    AL1(0)
@NM00120 DC    AL1(0)
@NM00121 DC    AL1(0)
@NM00122 DC    AL1(1)
@NM00123 DC    AL1(0)
@NM00124 DC    AL1(0)
@NM00125 DC    AL1(0)
@NM00126 DC    AL1(0)
@NM00127 DC    AL1(0)
@NM00128 DC    AL1(0)
@NM00129 DC    AL1(0)
@NM00130 DC    AL1(0)
@NM00131 DC    AL1(0)
@NM00132 DC    AL1(0)
@NM00133 DC    AL1(0)
@NM00134 DC    AL1(0)
@NM00135 DC    AL1(0)
@NM00136 DC    AL1(0)
@NM00137 DC    AL1(0)
@NM00138 DC    AL1(0)
@NM00139 DC    AL1(0)
@NM00140 DC    AL1(0)
@NM00141 DC    AL1(0)
@NM00142 DC    AL1(0)
@NM00143 DC    AL1(0)
@NM00144 DC    AL1(0)
@NM00145 DC    AL1(0)
@NM00146 DC    AL1(0)
@NM00147 DC    AL1(0)
@NM00148 DC    AL1(0)
@NM00149 DC    AL1(0)
@NM00150 DC    AL1(0)
@NM00151 DC    AL1(0)
@NM00152 DC    AL1(0)
@NM00153 DC    AL1(0)
@NM00154 DC    AL1(1)
@NM00155 DC    AL1(0)
@NM00156 DC    AL1(0)
@NM00157 DC    AL1(0)
@NM00158 DC    AL1(0)
@NM00159 DC    AL1(0)
@NM00160 DC    AL1(0)
@NM00161 DC    AL1(0)
@NM00162 DC    AL1(0)
@NM00163 DC    AL1(0)
@NM00164 DC    AL1(0)
@NM00165 DC    AL1(0)
@NM00166 DC    AL1(0)
@NM00167 DC    AL1(0)
@NM00168 DC    AL1(0)
@NM00169 DC    AL1(0)
@NM00170 DC    AL1(1)
@NM00171 DC    AL1(0)
@NM00172 DC    AL1(0)
@NM00173 DC    AL1(0)
@NM00174 DC    AL1(0)
@NM00175 DC    AL1(0)
@NM00176 DC    AL1(0)
@NM00177 DC    AL1(0)
@NM00178 DC    AL1(0)
@NM00179 DC    AL1(0)
@NM00180 DC    AL1(0)
@NM00181 DC    AL1(0)
@NM00182 DC    AL1(0)
@NM00183 DC    AL1(0)
@NM00184 DC    AL1(0)
@NM00185 DC    AL1(0)
@NM00186 DC    AL1(0)
@NM00187 DC    AL1(0)
@NM00188 DC    AL1(0)
@NM00189 DC    AL1(0)
@NM00190 DC    AL1(0)
@NM00191 DC    AL1(0)
@NM00192 DC    AL1(0)
@NM00193 DC    AL1(0)
@NM00194 DC    AL1(0)
@NM00195 DC    AL1(0)
@NM00196 DC    AL1(0)
@NM00197 DC    AL1(0)
@NM00198 DC    AL1(0)
@NM00199 DC    AL1(0)
@NM00200 DC    AL1(0)
@NM00201 DC    AL1(0)
@NM00202 DC    AL1(0)
@NM00203 DC    AL1(0)
@NM00204 DC    AL1(0)
@NM00205 DC    AL1(0)
@NM00206 DC    AL1(0)
@NM00207 DC    AL1(0)
@NM00208 DC    AL1(0)
@NM00209 DC    AL1(0)
@NM00210 DC    AL1(0)
@NM00211 DC    AL1(0)
@NM00212 DC    AL1(0)
@NM00213 DC    AL1(0)
@NM00214 DC    AL1(0)
@NM00215 DC    AL1(0)
@NM00216 DC    AL1(0)
@NM00217 DC    AL1(0)
@NM00218 DC    AL1(0)
@NM00219 DC    AL1(0)
@NM00220 DC    AL1(0)
@NM00221 DC    AL1(0)
@NM00222 DC    AL1(0)
@NM00223 DC    AL1(0)
@NM00224 DC    AL1(0)
@NM00225 DC    AL1(0)
@NM00226 DC    AL1(0)
@NM00227 DC    AL1(0)
@NM00228 DC    AL1(0)
@NM00229 DC    AL1(0)
@NM00230 DC    AL1(0)
@NM00231 DC    AL1(0)
@NM00232 DC    AL1(0)
@NM00233 DC    AL1(0)
@NM00234 DC    AL1(0)
@NM00235 DC    AL1(0)
@NM00236 DC    AL1(0)
@NM00237 DC    AL1(0)
@NM00238 DC    AL1(0)
@NM00239 DC    AL1(0)
@NM00240 DC    AL1(0)
@NM00241 DC    AL1(0)
@NM00242 DC    AL1(0)
@NM00243 DC    AL1(0)
@NM00244 DC    AL1(0)
@NM00245 DC    AL1(0)
@NM00246 DC    AL1(0)
@NM00247 DC    AL1(0)
@NM00248 DC    AL1(0)
@NM00249 DC    AL1(0)
@NM00250 DC    AL1(0)
@NM00251 DC    AL1(0)
@NM00252 DC    AL1(0)
@NM00253 DC    AL1(0)
@NM00254 DC    AL1(0)
@NM00255 DC    AL1(0)
@NM00256 DC    AL1(0)
@NM00257 DC    AL1(0)
@NM00258 DC    AL1(0)
@NM00259 DC    AL1(0)
@NM00260 DC    AL1(0)
@NM00261 DC    AL1(0)
@NM00262 DC    AL1(0)
@NM00263 DC    AL1(0)
@NM00264 DC    AL1(0)
@NM00265 DC    AL1(0)
@NM00266 DC    AL1(0)
@NM00267 DC    AL1(0)
@NM00268 DC    AL1(0)
@NM00269 DC    AL1(0)
@NM00270 DC    AL1(0)
@NM00271 DC    AL1(0)
@NM00272 DC    AL1(0)
@NM00273 DC    AL1(0)
@NM00274 DC    AL1(0)
@NM00275 DC    AL1(0)
@NM00276 DC    AL1(0)
@NM00277 DC    AL1(0)
@NM00278 DC    AL1(0)
@NM00279 DC    AL1(0)
@NM00280 DC    AL1(0)
@NM00281 DC    AL1(0)
@NM00282 DC    AL1(0)
@NM00283 DC    AL1(0)
@NM00284 DC    AL1(0)
@NM00285 DC    AL1(0)
@NM00286 DC    AL1(0)
@NM00287 DC    AL1(0)
@NM00288 DC    AL1(0)
@NM00289 DC    AL1(0)
@NM00290 DC    AL1(0)
@NM00291 DC    AL1(0)
@NM00292 DC    AL1(0)
@NM00293 DC    AL1(0)
@NM00294 DC    AL1(0)
@NM00295 DC    AL1(0)
@NM00296 DC    AL1(0)
@NM00297 DC    AL1(0)
@NM00298 DC    AL1(0)
@NM00299 DC    AL1(0)
@NM00300 DC    AL1(0)
@NM00301 DC    AL1(1)
@NM00302 DC    AL1(0)
@NM00303 DC    AL1(0)
@NM00304 DC    AL1(0)
@NM00305 DC    AL1(0)
@NM00306 DC    AL1(0)
@NM00307 DC    AL1(0)
@NM00308 DC    AL1(0)
@NM00309 DC    AL1(0)
@NM00310 DC    AL1(0)
@NM00311 DC    AL1(0)
@NM00312 DC    AL1(0)
@NM00313 DC    AL1(0)
@NM00314 DC    AL1(0)
         ORG   TABLE+256
DVTNAMES DS    CL64
         ORG   DVTNAMES
WRITEFBK DC    CL8'IDWTLDFB'
RESETFBK DC    CL8'IDRTLDFB'
SOLRDFBK DC    CL8'IDSRLDFB'
WRITEREQ DC    CL8'IDWRTLDO'
RESETREQ DC    CL8'IDRSTLDO'
READREQ  DC    CL8'IDRDLDO'
SOLICREQ DC    CL8'IDSOLLDO'
REQFIN   DC    CL8'IDFINISH'
         ORG   DVTNAMES+64
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR06P   EQU   @06
GPR08P   EQU   @08
GPR15F   EQU   @15
GPR15P   EQU   @15
TRTNEEDS EQU   @02
CRRPTR   EQU   @13
LDOPTR   EQU   @05
RPLPTR   EQU   @06
DVTNAME  EQU   @07
RETADDR  EQU   @14
GPR00F   EQU   @00
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR07P   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
RETCODE  EQU   @15
ATCLCPTR EQU   1032
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTDCCRR EQU   0
CRRSPACE EQU   ISTDCCRR+12
CRRSAREA EQU   0
CRRMAS   EQU   CRRSAREA+148
CRRMAS1  EQU   CRRMAS
CRRMAS2  EQU   CRRMAS+1
CRRM31   EQU   CRRMAS2
CRRMAS3  EQU   CRRMAS+2
CRRMAS4  EQU   CRRMAS+3
CRRRMAS1 EQU   CRRMAS+4
CRRRMAS2 EQU   CRRMAS+5
CRRRMAS3 EQU   CRRMAS+6
CRRSMAS  EQU   CRRRMAS3
CRRATS   EQU   CRRSAREA+156
CRRATS1  EQU   CRRATS
CRRATS2  EQU   CRRATS+1
CRRC31   EQU   CRRATS2
CRRATS3  EQU   CRRATS+2
CRRATS4  EQU   CRRATS+3
CRRRATS1 EQU   CRRATS+4
CRRRATS2 EQU   CRRATS+5
CRRRATS3 EQU   CRRATS+6
CRRSATS  EQU   CRRRATS3
CRRFLGS1 EQU   CRRSAREA+164
CRRFLDOS EQU   CRRFLGS1
CRRFINI  EQU   CRRFLGS1
CRRREQP  EQU   CRRFLGS1
CRRFLGS2 EQU   CRRSAREA+165
CRRFLGS3 EQU   CRRSAREA+166
CRRFLGS4 EQU   CRRSAREA+167
CRRFLGS  EQU   CRRSAREA+168
CRRSW1   EQU   CRRFLGS
CRRRFLG1 EQU   CRRSAREA+169
CRRRTYPE EQU   CRRRFLG1
CRRFDBK1 EQU   CRRSAREA+170
CRRRTNCD EQU   CRRFDBK1
CRRFDB2  EQU   CRRFDBK1+1
CRRFDB3  EQU   CRRFDBK1+2
CRRFDBK2 EQU   CRRSAREA+176
CRRDSB   EQU   CRRFDBK2
CRRESR   EQU   CRRFDBK2+2
CRRCLCCW EQU   CRRSAREA+180
CRRCLDO  EQU   CRRSAREA+200
CRRTRBUF EQU   CRRSAREA+204
CRRARPL  EQU   CRRTRBUF+4
CRRRTN1  EQU   CRRSAREA+224
CRRRTN2  EQU   CRRSAREA+228
CRRBFLGS EQU   CRRSAREA+280
CRRLDOCT EQU   CRRSAREA+288
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWTYPE EQU   LCCWCTL
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLDO   EQU   0
LDOCMD   EQU   ISTLDO
LDOFLAGS EQU   ISTLDO+1
LDOCMHN  EQU   LDOFLAGS
LDOADDR  EQU   ISTLDO+4
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRALKACT EQU   CRABASIC+8
CRAPROCR EQU   ISTCRA+312
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTDYPAB EQU   0
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00053 EQU   LOKCHNG+2
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCESC02 EQU   ISTATCVT+292
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
FMZL0006 EQU   0
ISTRPL   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
OPCTABLE EQU   TABLE
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTEVERM EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
ATCAOS   EQU   ISTATCVT+1552
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMBP EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00058 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00057 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ISTATCVT+788
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00056 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00055 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
LOKXCL   EQU   @NM00053
LOKPRY   EQU   @NM00053
@NM00054 EQU   @NM00053
@NM00052 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
CRACRR   EQU   CRAHDR
@NM00051 EQU   ISTAPCRR+137
@NM00050 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00049 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00048 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00047 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00046 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00045 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00044 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00043 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00042 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00041 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00040 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00039 EQU   CVTFIX+248
@NM00038 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RPLSEQNO EQU   RPLOF60+6
@NM00037 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00036 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00035 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00034 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00033 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00032 EQU   RPLRESP
@NM00031 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00030 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00029 EQU   RPLVTFL1
@NM00028 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00027 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00026 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00025 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00024 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00023 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00022 EQU   RPLOPT12
@NM00021 EQU   RPLOPT12
@NM00020 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00019 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00018 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00017 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00016 EQU   RPLRBAR+3
@NM00015 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00014 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00013 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00012 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
LDOLEN   EQU   ISTLDO+2
LDOACHN  EQU   LDOFLAGS
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00011 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
CRRRVPT5 EQU   CRRSAREA+316
CRRRVPT4 EQU   CRRSAREA+312
CRRRVPT3 EQU   CRRSAREA+308
CRRRVPT2 EQU   CRRSAREA+304
CRRRVPT1 EQU   CRRSAREA+300
CRRRVCR2 EQU   CRRSAREA+292
CRRRVCR1 EQU   CRRSAREA+291
CRRXFNCD EQU   CRRSAREA+290
CRRBTLEN EQU   CRRSAREA+284
CRRBLEN  EQU   CRRSAREA+282
CRRBRTCD EQU   CRRSAREA+281
@NM00010 EQU   CRRBFLGS
CRRBFLG1 EQU   CRRBFLGS
CRRBLDAD EQU   CRRSAREA+276
CRRBARAD EQU   CRRSAREA+272
CRRRTN12 EQU   CRRSAREA+268
CRRRTN11 EQU   CRRSAREA+264
CRRRTN10 EQU   CRRSAREA+260
CRRRTN9  EQU   CRRSAREA+256
CRRRTN8  EQU   CRRSAREA+252
CRRRTN7  EQU   CRRSAREA+248
CRRRTN6  EQU   CRRSAREA+244
CRRRTN5  EQU   CRRSAREA+240
CRRRTN4  EQU   CRRSAREA+236
CRRRTN3  EQU   CRRSAREA+232
CRRRES1  EQU   CRRSAREA+222
CRRLCNT  EQU   CRRSAREA+220
CRRATCVT EQU   CRRSAREA+216
CRRVALCK EQU   CRRSAREA+212
CRRBIND  EQU   CRRTRBUF+3
CRRTRRES EQU   CRRTRBUF
CRRUECB  EQU   CRRSAREA+196
CRRLCPB  EQU   CRRSAREA+192
CRRCMDAD EQU   CRRSAREA+188
CRRFMCB  EQU   CRRSAREA+184
CRRESR2  EQU   CRRESR+1
CRRESR1  EQU   CRRESR
CRRDSB2  EQU   CRRDSB+1
CRRDSB1  EQU   CRRDSB
CRRDTACT EQU   CRRSAREA+174
CRRRSV99 EQU   CRRSAREA+173
CRRRDSOH EQU   CRRFDB3
CRRRLG   EQU   CRRFDB3
CRRLGFRC EQU   CRRFDB3
CRRRDEOT EQU   CRRFDB3
CRRRDEOM EQU   CRRFDB3
CRRRDEOB EQU   CRRFDB3
CRRUNUSD EQU   CRRFDB3
CRRUINPT EQU   CRRFDB3
CRRSTSAV EQU   CRRFDB2
CRRCUERR EQU   CRRFDB2
CRRDLGFL EQU   CRRFDB2
CRRIOERR EQU   CRRFDB2
CRRDVUNS EQU   CRRFDB2
CRRATND  EQU   CRRFDB2
CRRRVID  EQU   CRRFDB2
CRRERLK  EQU   CRRFDB2
CRRNSNA  EQU   CRRRTYPE
CRRDFSYN EQU   CRRRTYPE
CRRRESP  EQU   CRRRTYPE
CRRDFASY EQU   CRRRTYPE
CRRDBLCK EQU   CRRRFLG1
CRRRPSBD EQU   CRRRFLG1
CRRRPLOQ EQU   CRRRFLG1
CRRRPLS  EQU   CRRRFLG1
CRRSW7   EQU   CRRFLGS
CRRSW6   EQU   CRRFLGS
CRRSW5   EQU   CRRFLGS
CRRSW4   EQU   CRRFLGS
CRRSW3   EQU   CRRFLGS
CRRSW2   EQU   CRRFLGS
CRRSW0   EQU   CRRFLGS
CRRRSV04 EQU   CRRFLGS4
CRRDLCCW EQU   CRRFLGS3
CRRRESET EQU   CRRFLGS3
CRRSUBBK EQU   CRRFLGS3
CRRRSV08 EQU   CRRFLGS3
CRRDEBQ  EQU   CRRFLGS3
CRRSTSPR EQU   CRRFLGS3
CRRDREQ  EQU   CRRFLGS3
CRRDFDBK EQU   CRRFLGS3
CRRDFSB  EQU   CRRFLGS2
CRRDPROC EQU   CRRFLGS2
CRREXTS  EQU   CRRFLGS2
CRRELSRI EQU   CRRFLGS2
CRRPOST  EQU   CRRFLGS2
CRRENDLW EQU   CRRFLGS2
CRRPRGIP EQU   CRRFLGS2
CRRDEXP  EQU   CRRFLGS2
CRRSOLRQ EQU   CRRFLGS1
CRRCPROC EQU   CRRFLGS1
CRRPREIO EQU   CRRFLGS1
CRRINIO  EQU   CRRFLGS1
CRRDOCUR EQU   CRRFLGS1
CRRRATS4 EQU   CRRATS+7
@NM00009 EQU   CRRSATS
CRRASC51 EQU   CRRSATS
CRRASC40 EQU   CRRSATS
CRRASC30 EQU   CRRSATS
CRRASC21 EQU   CRRSATS
CRRASC10 EQU   CRRSATS
CRRASC01 EQU   CRRSATS
@NM00008 EQU   CRRRATS2
CRRPLIC  EQU   CRRRATS2
CRRRC81  EQU   CRRRATS2
CRRRC80  EQU   CRRRATS2
CRRRC65  EQU   CRRRATS2
CRRRC63  EQU   CRRRATS2
CRRRC55  EQU   CRRRATS2
CRRRC54  EQU   CRRRATS2
CRRRC53  EQU   CRRRATS1
CRRRC52  EQU   CRRRATS1
CRRRC51  EQU   CRRRATS1
CRRRC30  EQU   CRRRATS1
CRRRC26  EQU   CRRRATS1
CRRRC23  EQU   CRRRATS1
CRRRC22  EQU   CRRRATS1
CRRRC21  EQU   CRRRATS1
@NM00007 EQU   CRRATS4
CRRC3X   EQU   CRRATS4
CRRC85   EQU   CRRATS4
CRRC83   EQU   CRRATS4
CRRC82   EQU   CRRATS4
CRRC61   EQU   CRRATS4
CRRC60   EQU   CRRATS4
CRRC81   EQU   CRRATS3
CRRC80   EQU   CRRATS3
CRRC75   EQU   CRRATS3
CRRC51   EQU   CRRATS3
CRRC50   EQU   CRRATS3
CRRC42   EQU   CRRATS3
CRRC41   EQU   CRRATS3
CRRC40   EQU   CRRATS3
CRRC32   EQU   CRRATS2
CRRC30   EQU   CRRATS2
CRRC25   EQU   CRRATS2
CRRC24   EQU   CRRATS2
CRRC23   EQU   CRRATS2
CRRC22   EQU   CRRATS2
CRRC21   EQU   CRRATS2
CRRC20   EQU   CRRATS1
CRRC13   EQU   CRRATS1
CRRC12   EQU   CRRATS1
CRRC11   EQU   CRRATS1
CRRC10   EQU   CRRATS1
CRRC02   EQU   CRRATS1
CRRC01   EQU   CRRATS1
CRRC00   EQU   CRRATS1
CRRRMAS4 EQU   CRRMAS+7
@NM00006 EQU   CRRSMAS
CRRMSC51 EQU   CRRSMAS
CRRMSC40 EQU   CRRSMAS
CRRMSC30 EQU   CRRSMAS
CRRMSC21 EQU   CRRSMAS
CRRMSC10 EQU   CRRSMAS
CRRMSC01 EQU   CRRSMAS
@NM00005 EQU   CRRRMAS2
CRRRM81  EQU   CRRRMAS2
CRRRM80  EQU   CRRRMAS2
CRRRM65  EQU   CRRRMAS2
CRRRM63  EQU   CRRRMAS2
CRRRM55  EQU   CRRRMAS2
CRRRM54  EQU   CRRRMAS2
CRRRM53  EQU   CRRRMAS1
CRRRM52  EQU   CRRRMAS1
CRRRM51  EQU   CRRRMAS1
CRRRM30  EQU   CRRRMAS1
CRRRM26  EQU   CRRRMAS1
CRRRM23  EQU   CRRRMAS1
CRRRM22  EQU   CRRRMAS1
CRRRM21  EQU   CRRRMAS1
@NM00004 EQU   CRRMAS4
CRRM3X   EQU   CRRMAS4
CRRM85   EQU   CRRMAS4
CRRM83   EQU   CRRMAS4
CRRM82   EQU   CRRMAS4
CRRM61   EQU   CRRMAS4
CRRM60   EQU   CRRMAS4
CRRM81   EQU   CRRMAS3
CRRM80   EQU   CRRMAS3
CRRM75   EQU   CRRMAS3
CRRM51   EQU   CRRMAS3
CRRM50   EQU   CRRMAS3
CRRM42   EQU   CRRMAS3
CRRM41   EQU   CRRMAS3
CRRM40   EQU   CRRMAS3
CRRM32   EQU   CRRMAS2
CRRM30   EQU   CRRMAS2
CRRM25   EQU   CRRMAS2
CRRM24   EQU   CRRMAS2
CRRM23   EQU   CRRMAS2
CRRM22   EQU   CRRMAS2
CRRM21   EQU   CRRMAS2
CRRM20   EQU   CRRMAS1
CRRM13   EQU   CRRMAS1
CRRM12   EQU   CRRMAS1
CRRM11   EQU   CRRMAS1
CRRM10   EQU   CRRMAS1
CRRM02   EQU   CRRMAS1
CRRM01   EQU   CRRMAS1
CRRM00   EQU   CRRMAS1
CRRFSB   EQU   CRRSAREA+144
CRRSAVE1 EQU   CRRSAREA+72
CRRSAVE  EQU   CRRSAREA
CRRRSV22 EQU   ISTDCCRR+4
CRRCRR   EQU   ISTDCCRR
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00003 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00002 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00001 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00314 EQU   @RC00312
@RC00373 EQU   @RC00372
@RF00396 EQU   @RC00392
@RF00406 EQU   @EL00003
@RC00432 EQU   @EL00004
@RC00434 EQU   @RC00432
@RC00441 EQU   @RC00432
@RC00436 EQU   @RC00434
@ENDDATA EQU   *
         END   ISTDCC31,(C'PLS0212',0603,75128)
