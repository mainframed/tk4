         TITLE 'READ ANY MACRO PROCESSOR                               *
                        '
ISTDCC25 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTDCC25  77.320'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*   ;                                                              0417
*   DCL                                                            0418
*     ON BIT(1) CONSTANT('1'B);                                    0418
*   DCL                                                            0419
*     OFF BIT(1) CONSTANT('0'B);                                   0419
*   DCL                                                            0420
*     ZERO FIXED(31) CONSTANT(0);                                  0420
*   DCL                                                            0421
*     WAITCODE FIXED(31) CONSTANT(8);                              0421
*   DCL                                                            0422
*     GATEWRD BIT(32) CONSTANT('80000000'X);                       0422
*   DCL                                                            0423
*     FLGA2OFF BIT(32) CONSTANT('DFFFFFFF'X);                      0423
*   DCL                                                            0424
*     FLGA1ON BIT(32) CONSTANT('40000000'X);                       0424
*   DCL                                                            0425
*     FLGA3ON BIT(32) CONSTANT('10000000'X);                       0425
*   DCL                                                            0426
*     FLGA3OFF BIT(32) CONSTANT('EFFFFFFF'X);                      0426
*   DCL                                                            0427
*     FLGA5OFF BIT(32) CONSTANT('FBFFFFFF'X);/*              @ZA27850*/
*   RFY                                                            0428
*     ISTCRA BASED(RPHCRR);                                        0428
*   RFY                                                            0429
*     ISTDCCRR BASED(ADDR(CRAPROCR));                              0429
*   RESPECIFY                                                      0430
*     CRRSAREA BASED(CRRPTR);                                      0430
*   RESPECIFY                                                      0431
*     ISTACDEB BASED(RPHMAJCB);                                    0431
*   RESPECIFY                                                      0432
*     ISTDCLCP BASED(LCPBPTR);                                     0432
*   RESPECIFY                                                      0433
*     ISTLCPB BASED(ADDR(DCLLCPB));                                0433
*   RESPECIFY                                                      0434
*     ISTFSB BASED(FSBPTR);                                        0434
*   RESPECIFY                                                      0435
*     IFGRPL BASED(CRRARPL);                                       0435
*   RESPECIFY                                                      0436
*     ISTDNCB BASED(FMCDNCBA);                                     0436
*   RFY                                                            0437
*     ISTNCB BASED(ADDR(DNCNCB));                                  0437
*   RESPECIFY                                                      0438
*     ISTATCVT BASED(ATCVTPTR);                                    0438
*   RESPECIFY                                                      0439
*     ISTFDB BASED(FDBPTR);                                        0439
*   RESPECIFY                                                      0440
*     ISTPROCD BASED(ADDR(FMCPROCD));                              0440
*                                                                  0441
*/********************************************************************/
*/*                                                                  */
*/*   THE MAINLINE ROUTINE TRANSFERS CONTROL TO THE RDANY SUBROUTINE */
*/* IF A READ ANY HAS BEEN ISSUED AND THERE ARE NO ERROR INDICATORS  */
*/* SET IN THE CRR.                                                  */
*/*    IF THERE IS NO FMCB ON THE ACBDEB READ ANY  QUEUE, THE        */
*/* 'AWAITING PREVIOUS IO' SWITCH  IS SET IN THE CRR AND THE         */
*/* ROUTINE EXITS.                                                   */
*/*                                                                  */
*/*   INPUT TO THE ROUTINE IS REGISTER 1  POINTING TO THE RPH AND    */
*/* RPHMAJCB INITIALIZED TO THE ADDRESS OF THE  ACBDEB.              */
*/*                                                                  */
*/*    EXIT VIA  TPESC.                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0441
*   CRRPTR=ADDR(CRRSPACE);          /* ADDR OF CRR                   */
         L     CRRPTR,RPHCRR(,RPHPTR)                              0441
         LA    CRRPTR,CRRSPACE+312(,CRRPTR)                        0441
*   CRRMAS=CRRMAS&&CRRMAS;          /* ZERO MODULE AUDIT AND AUDIT 0442
*                                      TRAIL SWITCHES                */
         XC    CRRMAS(8,CRRPTR),CRRMAS(CRRPTR)                     0442
*   CRRC25=ON;                      /* SET AUDIT TRAIL               */
         OI    CRRC25(CRRPTR),B'00001000'                          0443
*   CRRM25=ON;                      /* SET MODULE AUDIT              */
         OI    CRRM25(CRRPTR),B'00001000'                          0444
*   FMCBPTR=CRRFMCB;                /* GET FMCB ADDRESS @DM8480NL    */
         L     FMCBPTR,CRRFMCB(,CRRPTR)                            0445
*   FSBPTR=CRRFSB;                  /* GET FSB ADDRESS @DM9062NL     */
         L     FSBPTR,CRRFSB(,CRRPTR)                              0446
*   IF(RPLREQ='1D'X×CRRNSNA=ON)&CRRRTNCD=ZERO THEN/* READ ANY, BASIC,
*                                      NO ERROR                      */
         L     @15,CRRARPL(,CRRPTR)                                0447
         CLI   RPLREQ(@15),29                                      0447
         BE    @GL00001                                            0447
         TM    CRRNSNA(CRRPTR),B'00000001'                         0447
         BNO   @RF00447                                            0447
@GL00001 CLI   CRRRTNCD(CRRPTR),0                                  0447
         BNE   @RF00447                                            0447
*     DO;                           /* READ ANY REQUEST AND NO ERR   */
*       IF CRRRPLS=ON THEN                                         0449
         TM    CRRRPLS(CRRPTR),B'10000000'                         0449
         BNO   @RF00449                                            0449
*         DO;                                                      0450
*           CRRSW3=OFF;             /* TURN OFF CONTROL SWITCH     0451
*                                      PROCESS READ ANY REQUEST      */
         NI    CRRSW3(CRRPTR),B'11101111'                          0451
*                                                                  0452
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : RDANY - PROCESS THE READ ANY REQUEST              */
*/*                                                                  */
*/* FUNCTION :                                                       */
*/*  THE RDANY  SUBROUTINE RECEIVES CONTROL FROM  THE MAINLINE       */
*/*  ROUTINE.   IF  THE 'CONTINUE ANY' SWITCH                        */
*/* IS  OFF IN THE  RPL, THE FMCB IS DEQUEUED FROM THE READ ANY      */
*/* QUEUE AND THE SATISTY SPECIFIC READ  SWITCH IS SET  IN THE FMCB. */
*/*  THE NIB AND CID FIELDS OF THE RPL ARE INITIALIZED AND           */
*/*  SUBROUTINE MOVEPROC IS CALLED TO  MOVE THE DATA AND PROCESS     */
*/* THE  FEEDBACK  FROM THE MOVE.                                    */
*/*                                                                  */
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT :  READ ANY RPL SATISFIED                                 */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/*                                                                  */
*/*  MACROS USED :  VMDESET, TPDEQ                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0452
*           IF RPLDLGIN^=OFF THEN   /* REQUEST FOR SPECIFIC MODE?    */
         L     @15,CRRARPL(,CRRPTR)                                0452
         TM    RPLDLGIN(@15),B'10000000'                           0452
         BZ    @RF00452                                            0452
*             DO;                   /* CHANGE KEY AND DEQUEUE FMCB 0453
*                                      FROM READ ANY Q               */
*               CALL DEQUE;                                        0454
         BAL   @14,DEQUE                                           0454
*               RFY                                                0455
*                (REG2,                                            0455
*                 REG3) RSTD;                                      0455
*CS1:                                                              0456
*               REG2=FMCCMPS2;      /* GET OLD FLAG VALUE            */
CS1      L     REG2,FMCCMPS2(,FMCBPTR)                             0456
*               REG3=REG2&FLGA2OFF; /* RESET FMCB ON READ ANY Q      */
         LR    REG3,REG2                                           0457
         N     REG3,@CF02885                                       0457
*               REG3=REG3×FLGA1ON;  /* SATISFY SPEC READ             */
         O     REG3,@CF02784                                       0458
*               CS(REG2,REG3,FMCCMPS2);/* SET NEW VALUE IN FMCB      */
         CS    REG2,@03,FMCCMPS2(FMCBPTR)                          0459
*               BC(7,CS1);          /* TRY AGAIN IF FAILURE          */
         BC    7,CS1                                               0460
*               RFY                                                0461
*                (REG2,                                            0461
*                 REG3) UNRSTD;                                    0461
*             END;                                                 0462
*           ELSE                                                   0463
*             ;                                                    0463
@RF00452 DS    0H                                                  0464
*           RPLSAF=FMCSAF;          /* SET SOURCE ID IN RPL          */
         L     @15,CRRARPL(,CRRPTR)                                0464
         LH    @11,FMCSAF(,FMCBPTR)                                0464
         N     @11,@CF04579                                        0464
         STH   @11,RPLSAF(,@15)                                    0464
*           RPLDAF=NCBDAF;          /* SET DESTINATION ID IN RPL     */
         L     @11,FMCDNCBA(,FMCBPTR)                              0465
         LH    @11,NCBDAF(,@11)                                    0465
         N     @11,@CF04579                                        0465
         STH   @11,RPLDAF(,@15)                                    0465
*           RPLNIB=OFF;             /* RPL NOW HAS CID               */
*                                                                  0466
         NI    RPLNIB(@15),B'11111011'                             0466
*           /*********************************************************/
*           /*                                                       */
*           /* MOVEPROC SEGMENT                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0467
*                                                                  0467
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : MOVEPROC - MOVE PROCESSING                        */
*/*                                                                  */
*/* FUNCTION :                                                       */
*/*  MOVEPROC FIRST CALLS SUBROUTINE PROCESSC TO MOVE THE  DATA.     */
*/* IF THE FMCB DATA QUEUE IS EMPTY ON RETURN FROM PROCESSC AND THE  */
*/* FMCB IS  ON THE READ ANY QUEUE, THE FMCB IS DEQUEUED.  OTHERWISE */
*/* THE SUBROUTINE RETURNS TO RDANY.                                 */
*/*                                                                  */
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT :    DATA MOVED TO USER'S AREA, FMCB HOUSEKEPT            */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/*                                                                  */
*/*  MACROS USED :  TPUNLOCK, VMDESET, TPDEQ                         */
*/*                                                                  */
*/********************************************************************/
*                                                                  0467
*                                                                  0467
*/****************************************************************** */
*/*                                                                  */
*/* SEGMENT NAME : PROCESSC - MOVE DATA                              */
*/*                                                                  */
*/*  PROCESSC IS CALLED BY MOVEPROC TO MOVE THE  DATA TO THE USERS'  */
*/* AREA.  THE LCPB ADDRESS IS MOVED FROM THE FSB TO THE CRR  AS     */
*/* INPUT FOR PROCESSD.  THE MOVE PARM LIST IS BUILT IN THE CRR      */
*/* FROM INFORMATION IN THE RPL AND ISTDCC60 IS CALLED TO MOVE THE   */
*/* DATA TO THE USERS' AREA.  IF THERE WAS NO ERROR  DURING THE MOVE */
*/* PROCESSA IS CALLED TO PROCESS MOVE DATA IF NECESSARY.            */
*/* IF THERE IS MORE DATA TO PROCESS, CRRSW0 WILL BE SET IN PROCESSD */
*/* AND THE MOVE LOGIC WILL BE REPEATED.  IF THERE IS NO MORE DATA   */
*/* THE  SUBROUTINE RETURNS TO MOVEPROC.                             */
*/*                                                                  */
*/********************************************************************/
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT : DATA MOVED TO USER'S AREA                               */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*           ISTDCC60 - INPUT BUFFER MOVE                           */
*/*                                                                  */
*/*                                                                  */
*/*  MACROS USED :  VMDESET, VSETLCK                                 */
*/*                                                                  */
*/********************************************************************/
*                                                                  0467
*           LCPBPTR=FSBLCPB;        /* GET LCPB ADR FROM FSB         */
         L     LCPBPTR,FSBLCPB(,FSBPTR)                            0467
*           CRRBARAD=RPLAREA;       /* BUILD MOVE PARM LIST          */
         L     @11,RPLAREA(,@15)                                   0468
         ST    @11,CRRBARAD(,CRRPTR)                               0468
*           CRRBLEN=RPLBUFL;        /* SET AREA ADDR AND LENGTH      */
         L     @15,RPLBUFL(,@15)                                   0469
         STH   @15,CRRBLEN(,CRRPTR)                                0469
*           CRRBTLEN=ZERO;          /* SET LENGTH MOVED EQ 0         */
         SLR   @15,@15                                             0470
         ST    @15,CRRBTLEN(,CRRPTR)                               0470
*           ATCVTPTR=CRRATCVT;      /* REFERENCE VTAM CVT            */
         L     ATCVTPTR,CRRATCVT(,CRRPTR)                          0471
*           CRRSW0=ON;              /* INITIALIZE LOOP CONTROL VALUE */
         OI    CRRSW0(CRRPTR),B'10000000'                          0472
*           DO WHILE CRRSW0=ON;     /* LOOP TO MOVE DATA             */
         B     @DE00473                                            0473
@DL00473 DS    0H                                                  0474
*                                                                  0474
*/*VMDESET  ((15),ZERO)                                              */
*                                                                  0474
*             DO;                   /* INVOKE MODESET MACRO          */
*               GEN;                                               0475
         MODESET EXTKEY=ZERO,WORKREG=2
*               RFY                                                0476
*                (GPR15P) RSTD;                                    0476
*               GPR15F=0;                                          0477
         SLR   GPR15F,GPR15F                                       0477
*               RFY                                                0478
*                (GPR15P) UNRSTD;   /* PUT RETURN CODE IN RCREG      */
*             END;                  /* VMDESET                       */
*/*VSETLCK  (15,OBTAIN,LOCAL,(LOCAL,ISTDCC25(UNLOCK)),)              */
*                                                                  0480
*LOCK:                                                             0480
*             DO;                   /* DECLARE AND RESTRICT REGS   0480
*                                      2,10,11,12,13,14, AND 15      */
LOCK     DS    0H                                                  0481
*               RFY                                                0481
*                (GPR02P,                                          0481
*                 GPR10P,                                          0481
*                 GPR11P,                                          0481
*                 GPR12P,                                          0481
*                 GPR13P,                                          0481
*                 GPR14P,                                          0481
*                 GPR15P) RSTD;     /* SAVE REGS 2 AND 10 THRU 14    */
*               GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*               GEN SETS(2);                                       0483
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*               GPR10P=GPR13P;      /* PUT SAVE AREA ADDR IN R 10  0484
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0484
*               GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);         0485
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(LOCAL,ISTDCC25(UNLOCK))
*               GPR15P=GPR13P;      /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0486
*               DO;                 /* RESTORE PSW PROTECTION KEY    */
*                 GEN SETS(2);                                     0488
         MODESET KEYADDR=(2),WORKREG=2
*               END;                /* RESTORE REGISTERS             */
*               GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F, 0490
*                   GPR13F,GPR14F,GPR02F);                         0490
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*               IF GPR15F=4 THEN                                   0491
         C     GPR15F,@CF00044                                     0491
         BNE   @RF00491                                            0491
*                 GPR15F=0;                                        0492
         SLR   GPR15F,GPR15F                                       0492
*               RFY                                                0493
*                (GPR02P,                                          0493
*                 GPR10P,                                          0493
*                 GPR11P,                                          0493
*                 GPR12P,                                          0493
*                 GPR13P,                                          0493
*                 GPR14P,                                          0493
*                 GPR15P) UNRSTD;                                  0493
@RF00491 DS    0H                                                  0494
*             END;                  /* LOCK:VSETLCK                  */
*             CRRSW0=OFF;                                          0495
         NI    CRRSW0(CRRPTR),B'01111111'                          0495
*             CRRPTR=ADDR(CRRSAVE1);/* SAVE AREA FORM MOVE ROUTINE   */
         LA    @15,CRRSAVE1(,CRRPTR)                               0496
         LR    CRRPTR,@15                                          0496
*             CALL ATCDCC60;        /* MOVE DATA TO USERS AREA       */
         L     @15,ATCDCC60(,ATCVTPTR)                             0497
         BALR  @14,@15                                             0497
*             CRRPTR=ADDR(CRRSPACE);/* REESTABLISH BASE              */
         L     CRRPTR,RPHCRR(,RPHPTR)                              0498
         LA    CRRPTR,CRRSPACE+312(,CRRPTR)                        0498
*             RPLRLEN=CRRBTLEN;     /* LENGTH OF DATA MOVED          */
         L     @15,CRRARPL(,CRRPTR)                                0499
         L     @11,CRRBTLEN(,CRRPTR)                               0499
         ST    @11,RPLRLEN(,@15)                                   0499
*/*VSETLCK  (15,RELEASE,LOCAL,(LOCAL,ISTDCC25(LOCK)),)               */
*                                                                  0500
*UNLOCK:                                                           0500
*             DO;                   /* DECLARE AND RESTRICT REGS   0500
*                                      2,10,11,12,13,14, AND 15      */
UNLOCK   DS    0H                                                  0501
*               RFY                                                0501
*                (GPR02P,                                          0501
*                 GPR10P,                                          0501
*                 GPR11P,                                          0501
*                 GPR12P,                                          0501
*                 GPR13P,                                          0501
*                 GPR14P,                                          0501
*                 GPR15P) RSTD;     /* SAVE REGS 2 AND 10 THRU 14    */
*               GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*               GEN SETS(2);                                       0503
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*               GPR10P=GPR13P;      /* PUT SAVE AREA ADDR IN R 10  0504
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0504
*               GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);         0505
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,ISTDCC25(LOCK))
*               GPR15P=GPR13P;      /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0506
*               DO;                 /* RESTORE PSW PROTECTION KEY    */
*                 GEN SETS(2);                                     0508
         MODESET KEYADDR=(2),WORKREG=2
*               END;                /* RESTORE REGISTERS             */
*               GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F, 0510
*                   GPR13F,GPR14F,GPR02F);                         0510
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*               IF GPR15F=4 THEN                                   0511
         C     GPR15F,@CF00044                                     0511
         BNE   @RF00511                                            0511
*                 GPR15F=0;                                        0512
         SLR   GPR15F,GPR15F                                       0512
*               RFY                                                0513
*                (GPR02P,                                          0513
*                 GPR10P,                                          0513
*                 GPR11P,                                          0513
*                 GPR12P,                                          0513
*                 GPR13P,                                          0513
*                 GPR14P,                                          0513
*                 GPR15P) UNRSTD;                                  0513
@RF00511 DS    0H                                                  0514
*             END;                  /* UNLOCK:VSETLCK                */
*/*VMDESET  ((15),ATCAM)                                             */
*                                                                  0515
*             DO;                   /* INVOKE MODESET MACRO          */
*               GEN;                                               0516
         MODESET EXTKEY=VTAM,WORKREG=2
*               RFY                                                0517
*                (GPR15P) RSTD;                                    0517
*               GPR15F=0;                                          0518
         SLR   GPR15F,GPR15F                                       0518
*               RFY                                                0519
*                (GPR15P) UNRSTD;   /* PUT RETURN CODE IN RCREG      */
*             END;                  /* VMDESET                       */
*             IF CRRBRTCD<CRRBEROR  /* MOVE COMPLETE                 */
*               THEN                                               0521
         CLI   CRRBRTCD(CRRPTR),8                                  0521
         BNL   @RF00521                                            0521
*                                                                  0522
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : PROCESSA - PROCESS MORE DATA                      */
*/*                                                                  */
*/* FUNCTION :                                                       */
*/*  PROCESSA IS CALLED BY PROCESSC TO HANDLE THE FEEDBACK FROM      */
*/* THE MOVE ROUTINE, ISTDCC60.  THE FEEDBACK STATUS IS FIRST MOVED  */
*/* FROM THE FSB TO THE CRR.                                         */
*/*  IF THERE WAS  A RETURN  CODE OF 4 FROM THE  MOVE AND THE        */
*/* TRUNCATE OPTION  IS SPECIFIED IN THE FMCB, PROCESSE IS CALLED    */
*/* TO FREE THE FSB AND FDBS.  THE TRUNCATE  INDICATORS ARE SET IN   */
*/* THE CRR.  IF TRUNCATE WAS NOT SPECIFIED, THE EOM, EOB, AND EOT   */
*/* FLAGS ARE TURNED OFF IN THE CRR.  THE  SUBROUTINE RETURNS TO     */
*/* PROCESSC.                                                        */
*/* IF THERE WAS A 0 RETURN CODE FROM THE MOVE AND A RESIDUAL        */
*/* LENGTH IN THE PARM, PROCESSD IS CALLED TO HANDLE SUBBLOCK        */
*/* PROCESSING.  IF PROCESSD FINDS MORE DATA, CRRSW0 IS SET ON       */
*/* RETURN, CAUSING PROCESSC TO RETURN TO PROCESSA UNTIL ALL THE     */
*/* DATA HAS BEEN HANDLED.                                           */
*/*  IF THERE WAS NO RESIDUAL LENGTH IN THE PARM, PROCESSE IS        */
*/* CALLED TO FREE THE FSB AND FDBS. IF SUBBLOCK MODE, PROCESSING    */
*/* IDENTICAL TO RETURN CODE 4 IS PERFORMED. IF NOT IN SUBBLOCK      */
*/* MODE, THE ROUTINE RETURNS TO PROCESSC.                           */
*/*                                                                  */
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT :  ADDITIONAL DATA PROCESSED                              */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/*              PROCESSE - FREE FSB/FDB BUFFERS                     */
*/*                                                                  */
*/*  MACROS USED :  NONE                                             */
*/*                                                                  */
*/********************************************************************/
*                                                                  0522
*               DO;                                                0522
*                 CRRSW2=OFF;       /* TURN OFF CONTROL SWITCH       */
         NI    CRRSW2(CRRPTR),B'11011111'                          0523
*/*      MOVE FEEDBACK STATUS FROM FSB TO   CRR                      */
*                                                                  0524
*                 CRRRTNCD=FSBSRCAT;/* MAJOR RETURN CODE             */
         MVC   CRRRTNCD(1,CRRPTR),FSBSRCAT(FSBPTR)                 0524
*                 CRRFDB2=FSBMNRCD; /* MINOR RETURN CODE             */
         MVC   CRRFDB2(1,CRRPTR),FSBMNRCD(FSBPTR)                  0525
*                 CRRFDB3=FSBERC;                                  0526
         MVC   CRRFDB3(1,CRRPTR),FSBERC(FSBPTR)                    0526
*                 CRRESR1=FSBSYSRS;                                0527
         MVC   CRRESR1(1,CRRPTR),FSBSYSRS(FSBPTR)                  0527
*                 CRRESR2=FSBEXTRS;                                0528
         MVC   CRRESR2(1,CRRPTR),FSBEXTRS(FSBPTR)                  0528
*                 IF CRRRTNCD=CRRPHYSC THEN/* IF PHYSICAL CONDITION  */
         CLI   CRRRTNCD(CRRPTR),X'0C'                              0529
         BNE   @RF00529                                            0529
*                   IF CRRSTSAV=ON  /* SENSE DATA AVAILABLE          */
*                     THEN                                         0530
         TM    CRRSTSAV(CRRPTR),B'00000001'                        0530
         BNO   @RF00530                                            0530
*                     CRRDSB=FSBDMGRS;                             0531
         MVC   CRRDSB(2,CRRPTR),FSBDMGRS(FSBPTR)                   0531
*                   ELSE                                           0532
*                     ;                                            0532
@RF00530 DS    0H                                                  0533
*                 ELSE                                             0533
*                   ;                                              0533
@RF00529 DS    0H                                                  0534
*                 IF CRRBRTCD^=CRRBMDAT/* RETURN CODE FROM MOVE      */
*                   THEN                                           0534
         CLI   CRRBRTCD(CRRPTR),4                                  0534
         BE    @RF00534                                            0534
*                   IF CRRBLEN=ZERO /* RESIDUAL LENGTH =0            */
*                     THEN                                         0535
         LH    @15,CRRBLEN(,CRRPTR)                                0535
         LTR   @15,@15                                             0535
         BNZ   @RF00535                                            0535
*                     DO;                                          0536
*                       CALL PROCESSE;                             0537
         BAL   @14,PROCESSE                                        0537
*                       IF(CRRRDEOB=OFF&/* SUB BLOCK MODE            */
*                           CRRRLG=OFF&/* LEADING GRAPHICS           */
*                           CRRRDSOH=OFF&/* START OF HEADER          */
*                           CRRRTNCD=FRNORM)&/* NO ERROR STATUS      */
*                           LCPBPTR^=ZERO THEN                     0538
         TM    CRRRDEOB(CRRPTR),B'00100011'                        0538
         BNZ   @RF00538                                            0538
         CLI   CRRRTNCD(CRRPTR),X'00'                              0538
         BNE   @RF00538                                            0538
         LTR   LCPBPTR,LCPBPTR                                     0538
         BZ    @RF00538                                            0538
*                         DO;                                      0539
*                           CRRSW7=ON;                             0540
*                           CRRSW2=ON;                             0541
         OI    CRRSW7(CRRPTR),B'00100001'                          0541
*                         END;                                     0542
*                       ELSE                                       0543
*                         ;                                        0543
@RF00538 DS    0H                                                  0544
*                     END;                                         0544
*                   ELSE                                           0545
*                                                                  0545
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESSD                                    */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0545
*                                                                  0545
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME : PROCESSD - PROCESS SUBBLOCKS                      */
*/*                                                                0545
*/* FUNCTION :                                                       */
*/*  PROCESSD IS CALLED BY PROCESSA TO HANDLE SUBBLOCK               */
*/* PROCESSING. IF SUBBLOCK IS INDICATED IN THE FSB, PROCESSE IS     */
*/* CALLED TO FREE THE FSB AND FDBS, TPFEL IS ISSUED TO GET THE NEXT */
*/* FSB ADDRESS. IF THERE IS ANOTHER FSB, ITS ADDRESS IS PTU INTO    */
*/* THE CRR AND THE ROUTINE RETURNS TO PROCESSA WITH CRRSW0 SET      */
*/* INDICATING MORE DATA. IF THERE IS NOT ANOTHER FSB AND THE FSB    */
*/* HAD POINTED TO AN LCPB, THE LCPB PARM LIST IS FILLED IN WITH     */
*/* INFO FROM THE CRR MOVE PARM LIST, THE RPL ADDRESS IS PUT IN THE  */
*/* LCPB AND THE AWAITING SUBBLOCK SWITCH IN THE CRR IS SET. THE     */
*/* SUBROUTINE RETURNS TO PROCESSA. IF THE FSB DID NOT POINT TO AN   */
*/* LCPB, THE SUBROUTINE RETURNS TO PROCESSA.                        */
*/*  IF THE FSB DOES NOT INDICATE SUBBLOCK MODE, PROCESSING          */
*/* IS IDENTICAL TO THAT PERFORMED IF THERE IS NOT ANOTHER FSB ON    */
*/* THE QUEUE.                                                       */
*/*                                                                  */
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT :     SUBBLOCK PROCESSED                                  */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*              PROCESSE - FREE FSB/FDB STORAGE                     */
*/*                                                                  */
*/*  MACROS USED :  TPFEL                                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0545
*                     DO;                                          0545
         B     @RC00535                                            0545
@RF00535 DS    0H                                                  0546
*                       CRRSW1=OFF;                                0546
         NI    CRRSW1(CRRPTR),B'10111111'                          0546
*                       IF(FSBEBI=OFF&/* SUB BLOCK OR EOB            */
*                           FSBLGI=OFF&/* NO LEADING GRAPHICS        */
*                           FSBSOHI=OFF&/* NO START OF HEADER        */
*                           FSBMJRCD=FRNORM&/* NORMAL RETURN CODE    */
*                           FSBLCPB^=ZERO)/* NOT UNSOLICITED DATA    */
*                         THEN                                     0547
         TM    FSBEBI(FSBPTR),B'00100011'                          0547
         BNZ   @RF00547                                            0547
         CLI   FSBMJRCD(FSBPTR),X'00'                              0547
         BNE   @RF00547                                            0547
         L     @15,FSBLCPB(,FSBPTR)                                0547
         LTR   @15,@15                                             0547
         BZ    @RF00547                                            0547
*                         CRRSW1=ON;                               0548
         OI    CRRSW1(CRRPTR),B'01000000'                          0548
*                       ELSE                                       0549
*                         ;                                        0549
@RF00547 DS    0H                                                  0550
*                       CALL PROCESSE;                             0550
         BAL   @14,PROCESSE                                        0550
*                       IF CRRSW1=ON THEN                          0551
         TM    CRRSW1(CRRPTR),B'01000000'                          0551
         BNO   @RF00551                                            0551
*                         DO;                                      0552
*                                                                  0552
*/* TPFEL (,FMCFBA) RETPTR(FSBPTR)                                   */
*                                                                  0553
*                           DO;     /* BEGIN TPFEL CODE GENERATION   */
*                             DCL                                  0554
*                               FMZCA017 BIT(32) CONSTANT('80000000'X);
*                             DCL                                  0555
*                               FMZCB017 BIT(32) CONSTANT('7FFFFFFF'X);
*                             RFY                                  0556
*                              (GPR00P,                            0556
*                               GPR01P,                            0556
*                               GPR14P,                            0556
*                               GPR15P) RSTD;                      0556
*                             RFY                                  0557
*                               ISTWKE;                            0557
*                             GPR15P=ADDR(FMCFBA);/* ADDRESS QUEUE 0558
*                                      POINTER                       */
         LA    GPR15P,FMCFBA(,FMCBPTR)                             0558
*                             GPR14P=GPR15P->PABWEQA×FMZCA017;     0559
         L     @11,@CF02782                                        0559
         L     GPR14P,PABWEQA(,GPR15P)                             0559
         OR    GPR14P,@11                                          0559
*                             IF GPR14P=FMZCA017 THEN              0560
         CLR   GPR14P,@11                                          0560
         BE    @RT00560                                            0560
*                               ;                                  0561
*                             ELSE                                 0562
*                               DO;                                0562
*                                 GPR00P=FMZCA017;/* INITIALIZE QUIT
*                                      FLAG                          */
         L     GPR00P,@CF02782                                     0563
*                                 DO WHILE(GPR00P^=GPR14P->WKECHAIN);
         B     @DE00564                                            0564
@DL00564 DS    0H                                                  0565
*                                   GPR14P=GPR14P->WKECHAIN;/* SEARCH
*                                      FOR END OF CHAIN              */
         L     GPR14P,WKECHAIN(,GPR14P)                            0565
*                                 END;                             0566
@DE00564 C     GPR00P,WKECHAIN(,GPR14P)                            0566
         BNE   @DL00564                                            0566
*                               END;                               0567
*                             GPR14P=GPR14P&FMZCB017;              0568
@RT00560 N     GPR14P,@CF02877                                     0568
*                             FSBPTR=GPR14P;                       0569
         LR    FSBPTR,GPR14P                                       0569
*                             RFY                                  0570
*                              (GPR00P,                            0570
*                               GPR01P,                            0570
*                               GPR14P,                            0570
*                               GPR15P) UNRSTD;                    0570
*                           END;    /* END TPFEL GENERATION          */
*                           IF FSBPTR=ZERO/* ADDR OF FSB FROM FMCB   */
*                             THEN                                 0572
         SLR   @15,@15                                             0572
         CR    FSBPTR,@15                                          0572
         BNE   @RF00572                                            0572
*                             IF LCPBPTR^=ZERO/* DID FSB POINT TO  0573
*                                      LCPB                          */
*                               THEN                               0573
         CR    LCPBPTR,@15                                         0573
         BE    @RF00573                                            0573
*                               IF CRRERLK=ON/* ERROR LOCK SET       */
*                                 THEN                             0574
         TM    CRRERLK(CRRPTR),B'10000000'                         0574
         BNO   @RF00574                                            0574
*                                 DCLRPLA=ZERO;/* ZERO RPL ADDR IN 0575
*                                      LCPB                          */
         ST    @15,DCLRPLA(,LCPBPTR)                               0575
*                               ELSE                               0576
*                                 DO;                              0576
         B     @RC00574                                            0576
@RF00574 DS    0H                                                  0577
*                                   DCLIOBUF=CRRBARAD;             0577
         L     @15,CRRBARAD(,CRRPTR)                               0577
         ST    @15,DCLIOBUF(,LCPBPTR)                              0577
*                                   DCLIOLEN=CRRBLEN;/* LENGTH FOR 0578
*                                      MOVE                          */
         LH    @15,CRRBLEN(,CRRPTR)                                0578
         STH   @15,DCLIOLEN(,LCPBPTR)                              0578
*                                   DCLBTLEN=CRRBTLEN;/* LEN       0579
*                                      REMAINING DATA                */
         L     @15,CRRBTLEN(,CRRPTR)                               0579
         ST    @15,DCLBTLEN(,LCPBPTR)                              0579
*                                   DCLRPLA=CRRARPL;/* PUT RPL ADDR
*                                      IN LCPB                       */
         L     @15,CRRARPL(,CRRPTR)                                0580
         ST    @15,DCLRPLA(,LCPBPTR)                               0580
*                                   DCLRQTP=DCLREAD;/* CHANGE SOL TO
*                                      READ                          */
         MVI   DCLRQTP(LCPBPTR),X'1D'                              0581
*                                   CRRSUBBK=ON;/* AWAITING SUB BLOCK*/
         OI    CRRSUBBK(CRRPTR),B'00000100'                        0582
*                                 END;                             0583
*                             ELSE                                 0584
*                               ;                                  0584
@RF00573 DS    0H                                                  0585
*                           ELSE                                   0585
*                             DO;                                  0585
         B     @RC00572                                            0585
@RF00572 DS    0H                                                  0586
*                               CRRFSB=FSBPTR;/* PUT ADDRESS OF FSB
*                                      IN CRR                        */
         ST    FSBPTR,CRRFSB(,CRRPTR)                              0586
*                               CRRSW0=ON;/* INDICATE MORE DATA      */
         OI    CRRSW0(CRRPTR),B'10000000'                          0587
*                             END;                                 0588
*                         END;                                     0589
*                     END;                                         0590
*                 ELSE                                             0591
*                   CRRSW2=ON;                                     0591
         B     @RC00534                                            0591
@RF00534 OI    CRRSW2(CRRPTR),B'00100000'                          0591
*                 IF CRRSW2=ON THEN                                0592
@RC00534 TM    CRRSW2(CRRPTR),B'00100000'                          0592
         BNO   @RF00592                                            0592
*                   IF PROTRUNC=ON  /* TRUNCATE OPTION               */
*                     THEN                                         0593
         TM    PROTRUNC+48(FMCBPTR),B'01000000'                    0593
         BNO   @RF00593                                            0593
*                     CALL PROCESSE;/* D31JKMQ                       */
         BAL   @14,PROCESSE                                        0594
*                   ELSE                                           0595
*                     DO;                                          0595
         B     @RC00593                                            0595
@RF00593 DS    0H                                                  0596
*                       CRRRDEOM=OFF;/* TRRN OFF EOB,EOM,EOT         */
*                       CRRRDEOB=OFF;/* INDICATORS IN CRR            */
*                       CRRRDEOT=OFF;                              0598
         NI    CRRRDEOM(CRRPTR),B'11000111'                        0598
*                     END;                                         0599
*               END;                /* END PROCESSA                  */
*             ELSE                                                 0601
*               ;                                                  0601
@RF00521 DS    0H                                                  0602
*           END;                                                   0602
@RC00521 DS    0H                                                  0602
@DE00473 TM    CRRSW0(CRRPTR),B'10000000'                          0602
         BO    @DL00473                                            0602
*           IF FMCFBA=ZERO×FMCFBA=GATEWRD THEN/* FMCB DATA Q EMPTY   */
         L     @15,FMCFBA(,FMCBPTR)                                0603
         LTR   @15,@15                                             0603
         BZ    @RT00603                                            0603
         CL    @15,@CF02782                                        0603
         BNE   @RF00603                                            0603
@RT00603 DS    0H                                                  0604
*             IF FMCFLGA2=ON        /* FMCB ON READ ANY Q            */
*               THEN                                               0604
         TM    FMCFLGA2(FMCBPTR),B'00100000'                       0604
         BNO   @RF00604                                            0604
*               DO;                                                0605
*                 CALL DEQUE;                                      0606
         BAL   @14,DEQUE                                           0606
*                 RFY                                              0607
*                  (REG2,                                          0607
*                   REG3) RSTD;                                    0607
*CS2:                                                              0608
*                 REG2=FMCCMPS2;    /* GET OLD FLAG VALUE            */
CS2      L     REG2,FMCCMPS2(,FMCBPTR)                             0608
*                 REG3=REG2&FLGA2OFF;/* RESET FMCB ON READ ANY Q     */
         LR    REG3,REG2                                           0609
         N     REG3,@CF02885                                       0609
*                 CS(REG2,REG3,FMCCMPS2);/* SET NEW VALUE IN FMCB    */
         CS    REG2,@03,FMCCMPS2(FMCBPTR)                          0610
*                 BC(7,CS2);        /* TRY AGAIN IF FAILURE          */
         BC    7,CS2                                               0611
*                 RFY                                              0612
*                  (REG2,                                          0612
*                   REG3) UNRSTD;                                  0612
*               END;                                               0613
*             ELSE                                                 0614
*               ;                                                  0614
@RF00604 DS    0H                                                  0615
*           ELSE                                                   0615
*             ;                                                    0615
@RF00603 DS    0H                                                  0616
*           CRRFMCLK=OFF;           /* OFF FMCB LOCK FLG     @D33SKD3*/
         NI    CRRFMCLK(CRRPTR),B'01111111'                        0616
*/*** START -TPUNLOCK (CTLLOCK)- **                                  */
*                                                                  0617
*           DO;                                                    0617
*                                                                  0617
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  0618
*             RFY                                                  0618
*              (GPR00P,                                            0618
*               GPR01P,                                            0618
*               GPR02P,                                            0618
*               GPR03P,                                            0618
*               GPR04P,                                            0618
*               GPR15P) RSTD;                                      0618
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK)
*                 ;                                                0619
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*             GPR02P=ADDR(FMCDCLOK);/* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,FMCDCLOK(,FMCBPTR)                           0620
*             GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0621
*             GPR00P=CRALMS08;      /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,128                                          0622
*             GPR03P=ADDR(GPR04P->CRAL8PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL8PTR(,GPR04P)                            0623
*             DO;                   /* LISATCVT                    0624
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0625
*             END;                  /* LISATCVT                      */
*             GPR15P=GPR15P->ATCAP33;                              0627
         L     GPR15P,ATCAP33(,GPR15P)                             0627
*             DCL                                                  0628
*               FMZL0021 BASED(GPR15P) LABEL VALUERANGE(*);        0628
*             CALL FMZL0021;                                       0629
         BALR  @14,@15                                             0629
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,
*                 GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                 GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,
*                 GPR15P);                                         0630
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*             RFY                                                  0631
*              (GPR00P,                                            0631
*               GPR01P,                                            0631
*               GPR02P,                                            0631
*               GPR03P,                                            0631
*               GPR04P,                                            0631
*               GPR15P) UNRSTD;                                    0631
*           END;                                                   0632
*                                                                  0632
*/*** END -TPUNLOCK (CTLLOCK)- **                                    */
*/*VMDESET  ((15),ZERO)                                              */
*                                                                  0633
*           DO;                     /* INVOKE MODESET MACRO          */
*             GEN;                                                 0634
         MODESET EXTKEY=ZERO,WORKREG=2
*             RFY                                                  0635
*              (GPR15P) RSTD;                                      0635
*             GPR15F=0;                                            0636
         SLR   GPR15F,GPR15F                                       0636
*             RFY                                                  0637
*              (GPR15P) UNRSTD;     /* PUT RETURN CODE IN RCREG      */
*           END;                    /* VMDESET SWITCH TO KEY ZERO    */
*           CRRDBLCK=OFF;           /* OFF DEB LOCK FLG      @D33SKD3*/
         NI    CRRDBLCK(CRRPTR),B'11101111'                        0639
*/*** START -TPUNLOCK (DEBLOCK)- **                                  */
*                                                                  0640
*           DO;                                                    0640
*                                                                  0640
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  0641
*             RFY                                                  0641
*              (GPR00P,                                            0641
*               GPR01P,                                            0641
*               GPR02P,                                            0641
*               GPR03P,                                            0641
*               GPR04P,                                            0641
*               GPR15P) RSTD;                                      0641
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK)
*                 ;                                                0642
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*             GPR02P=ADDR(ACDLOCK); /* SET PARAM - LOCKWORD PTR      */
         L     GPR02P,RPHMAJCB-1(,RPHPTR)                          0643
         LA    GPR02P,0(,GPR02P)                                   0643
         LA    GPR02P,ACDLOCK(,GPR02P)                             0643
*             GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              0644
*             GPR00P=CRALMS05;      /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,16                                           0645
*             GPR03P=ADDR(GPR04P->CRAL5PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL5PTR(,GPR04P)                            0646
*             DO;                   /* LISATCVT                    0647
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0648
*             END;                  /* LISATCVT                      */
*             GPR15P=GPR15P->ATCAP33;                              0650
         L     GPR15P,ATCAP33(,GPR15P)                             0650
*             DCL                                                  0651
*               FMZL0034 BASED(GPR15P) LABEL VALUERANGE(*);        0651
*             CALL FMZL0034;                                       0652
         BALR  @14,@15                                             0652
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,
*                 GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                 GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,
*                 GPR15P);                                         0653
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*             RFY                                                  0654
*              (GPR00P,                                            0654
*               GPR01P,                                            0654
*               GPR02P,                                            0654
*               GPR03P,                                            0654
*               GPR04P,                                            0654
*               GPR15P) UNRSTD;                                    0654
*           END;                                                   0655
*                                                                  0655
*/*** END -TPUNLOCK (DEBLOCK)- **                                    */
*                                                                  0656
*                                   /* LOCK THE DEB                  */
*/*VMDESET  ((15),ATCAM)                                             */
*                                                                  0656
*           DO;                     /* INVOKE MODESET MACRO          */
*             GEN;                                                 0657
         MODESET EXTKEY=VTAM,WORKREG=2
*             RFY                                                  0658
*              (GPR15P) RSTD;                                      0658
*             GPR15F=0;                                            0659
         SLR   GPR15F,GPR15F                                       0659
*             RFY                                                  0660
*              (GPR15P) UNRSTD;     /* PUT RETURN CODE IN RCREG      */
*           END;                    /* VMDESET BACK TO VTAM KEY      */
*         END;                                                     0662
*       ELSE                                                       0663
*         CRRSW3=ON;                /* RPL HAS BEEN SATISFIED        */
         B     @RC00449                                            0663
@RF00449 OI    CRRSW3(CRRPTR),B'00010000'                          0663
*       IF CRRSW3=ON THEN                                          0664
@RC00449 TM    CRRSW3(CRRPTR),B'00010000'                          0664
         BNO   @RF00664                                            0664
*         CRRPREIO=ON;              /* SET AWAITING PREVIOUS I/O   0665
*                                      SWITCH                        */
         OI    CRRPREIO(CRRPTR),B'00010000'                        0665
*       ELSE                                                       0666
*         ;                                                        0666
@RF00664 DS    0H                                                  0667
*     END;                                                         0667
*   ELSE                                                           0668
*     ;                                                            0668
*                                                                  0668
@RF00447 DS    0H                                                  0669
*/*TPESC                                                             */
*                                                                  0669
*   DO;                                                            0669
*                                                                  0669
*/* ATBUILD (ISTDYPAB,ISTAVT,ISTATCVT)                               */
*                                                                  0670
*/* VTAM ADDRESS VECTOR TABLE */                                   0670
*/*  REVISIONS                                         002 03/06/75  */
*DCL  1  ISTAVT BDY(WORD) BASED,                                   0670
*       2  ISTACVT PTR(31),            /* ADDR OF VTAM CVT           */
*       2  ISTAS49 PTR(31),            /* ADDR OF SVC 49 CODE        */
*          3  ISTAHIP BIT(1),          /* HALT IN PROGRESS           */
*       2  ISTAS53 PTR(31),            /* ADDR OF SVC 53 CODE        */
*       2  ISTAPSTA PTR(31),           /* ADDR OF APS TABLE          */
*       2  AVTASID FIXED(15),          /* VTAM ASID                  */
*       2  ISTVTTIK FIXED(15),         /* VTAMRP TASK ID             */
*       2  ISTAPSEX PTR(31),           /* ADDR OF APS EXIT           */
*       2  ISTPHNM CHAR(5),            /* PHASE NAME OF TRANSIENT    */
*       2  ISTX1 CHAR(1),              /* TEST FIELD                 */
*       2  ISTARID PTR(15),            /* ADDR OF RID                */
*       2  ISTATRT PTR(15),            /* ADDR OF VTAM GATES IN RETAB*/
*       2  ISTAGTWT PTR(15),           /* ADDR OF GATEWAIT ROUTINE   */
*       2  ISTVTTP  PTR(15),           /* ADDR OF CODE TO CHECK FOR  */
*                                      /* PENDING TIMER INTERRUPT    */
*       2  ISTAVR01 CHAR(2),           /* RESERVED                   */
*       2  ISTPDAVP PTR(31);           /* VECTOR FOR PDAIDS SMS TRACE*/
*                                                                  0671
*/* END OF ATBUILD                                                   */
*                                                                  0671
*     RFY                                                          0671
*       GPR15P RSTD;                                               0671
*     DO;                           /* LISATCVT                    0672
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0673
*     END;                          /* LISATCVT                      */
*     GPR15P=GPR15P->ATCESC01;                                     0675
         L     GPR15P,ATCESC01(,GPR15P)                            0675
*     DCL                                                          0676
*       FMZL0047 BASED(GPR15P) LABEL VALUERANGE(*);                0676
*     CALL FMZL0047;                                               0677
         BALR  @14,@15                                             0677
*     RESPECIFY                                                    0678
*       GPR15P UNRSTD;                                             0678
*   END;                            /* **** END OF TPESC             */
*                                                                  0680
*/********************************************************************/
*/*                                                                  */
*/* ROUTINE NAME : PROCESSE -FREE FSB/FDB BUFFERS                    */
*/*                                                                  */
*/* FUNCTION :                                                       */
*/*                                                                  */
*/*  PROCESSE IS CALLED TO FREE THE FSB AND FDBS.  THE               */
*/* SUBROUTINE IS ENTERED BY PROCESSA WITH CRRSW2 ON FOR SUBBLOCE    */
*/* PROCESSING. CRRSW2 IS TURNED OFF BY PROCESSE WHENEVER AN EOB     */
*/* IS FOUND, CAUSING THE SUBROUTINE TO RETURN TO THE CALLER.        */
*/*  IF THERE IS CONFIDENTIAL TEXT, THE RELSTORE IS ISSUED           */
*/* WITH THE CLEAR=YES OPTION, OTHERWISE THE BUFFER IS NOT CLEARED.  */
*/* WHEN THERE ARE NO MORE FSBS, THE FLUSH DATA INDICATOR IS SET IN  */
*/* THE FMCB AND IF THE DATA QUEUE IS ZERO, THE SUBROUTINE RETURNS TO*/
*/* THE CALLER. IF THE DATA QUEUE IS NOT ZERO, THE FLUSH BIT IS      */
*/* TURNED OFF AND PROCESSING CONTINUES.                             */
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT :   FSB/FDB STORAGE RELEASED                              */
*/*                                                                  */
*/* SUBROUTINES CALLED :                                             */
*/*                                                                  */
*/*                                                                  */
*/*  MACROS USED :  TPDEQ, RELSTORE                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0680
*PROCESSE:                                                         0680
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0680
         B     @PB00002                                            0680
PROCESSE DS    0H                                                  0681
*   CRRRTN6=RTNREG;                 /* SAVE RETURN REG               */
         ST    RTNREG,CRRRTN6(,CRRPTR)                             0681
*   CRRSW4=ON;                                                     0682
         OI    CRRSW4(CRRPTR),B'00001000'                          0682
*   DO WHILE CRRSW4=ON;                                            0683
*                                                                  0683
         B     @DE00683                                            0683
@DL00683 DS    0H                                                  0684
*/* TPDEQ (,FMCFBA) RETPTR(FSBPTR)                                   */
*                                                                  0684
*     DO;                           /* BEGIN TPDEQ CODE GENERATION   */
*       RFY                                                        0685
*        (GPR00P,                                                  0685
*         GPR01P,                                                  0685
*         GPR14P,                                                  0685
*         GPR15P) RSTD;                                            0685
*       GPR15P=ADDR(FMCFBA);        /* ADDRESS QUEUE POINTER         */
         LA    GPR15P,FMCFBA(,FMCBPTR)                             0686
*       GPR14P=GPR15P->PABWEQA×FMZCA017;                           0687
         L     @11,@CF02782                                        0687
         L     GPR14P,PABWEQA(,GPR15P)                             0687
         OR    GPR14P,@11                                          0687
*       IF GPR14P=FMZCA017 THEN                                    0688
         CLR   GPR14P,@11                                          0688
         BE    @RT00688                                            0688
*         ;                                                        0689
*       ELSE                                                       0690
*         DO;                                                      0690
*FMZL1055:                                                         0691
*           ;                                                      0691
FMZL1055 DS    0H                                                  0692
*           DO WHILE(GPR14P->WKECHAIN^=FMZCA017);                  0692
         B     @DE00692                                            0692
@DL00692 DS    0H                                                  0693
*             GPR15P=ADDR(GPR14P->WKECHAIN);                       0693
         LA    GPR15P,WKECHAIN(,GPR14P)                            0693
*             GPR14P=GPR15P->PABWEQA;                              0694
         L     GPR14P,PABWEQA(,GPR15P)                             0694
*           END;                                                   0695
@DE00692 L     @11,@CF02782                                        0695
         CL    @11,WKECHAIN(,GPR14P)                               0695
         BNE   @DL00692                                            0695
*           GPR00P=FMZCA017;                                       0696
         LR    GPR00P,@11                                          0696
*           CS(GPR14P,GPR00P,GPR15P->PABWEQA);                     0697
         CS    GPR14P,@00,PABWEQA(GPR15P)                          0697
*           BC(7,FMZL1055);                                        0698
         BC    7,FMZL1055                                          0698
*           GPR14P->WKECHAIN=0;                                    0699
         SLR   @11,@11                                             0699
         ST    @11,WKECHAIN(,GPR14P)                               0699
*         END;                                                     0700
*ISTA0055:                                                         0701
*       ;                                                          0701
@RT00688 DS    0H                                                  0701
ISTA0055 DS    0H                                                  0702
*       GPR14P=GPR14P&FMZCB017;                                    0702
         N     GPR14P,@CF02877                                     0702
*       FSBPTR=GPR14P;                                             0703
         LR    FSBPTR,GPR14P                                       0703
*       RFY                                                        0704
*        (GPR00P,                                                  0704
*         GPR01P,                                                  0704
*         GPR14P,                                                  0704
*         GPR15P) UNRSTD;                                          0704
*     END;                          /* END TPDEQ GENERATION          */
*     IF FSBPTR=ZERO×FSBPTR=GATEWRD THEN                           0706
         LTR   FSBPTR,FSBPTR                                       0706
         BZ    @RT00706                                            0706
         CL    FSBPTR,@CF02782                                     0706
         BNE   @RF00706                                            0706
@RT00706 DS    0H                                                  0707
*       DO;                                                        0707
*         RFY                                                      0708
*          (REG2,                                                  0708
*           REG3) RSTD;                                            0708
*CS3:                                                              0709
*         REG2=FMCCMPS2;            /* GET OLD FLAG VALUE            */
CS3      L     REG2,FMCCMPS2(,FMCBPTR)                             0709
*         REG3=REG2×FLGA3ON;        /* SET FLUSH INDICATOR           */
         LR    REG3,REG2                                           0710
         O     REG3,@CF02788                                       0710
*         CS(REG2,REG3,FMCCMPS2);   /* SET VALUE IN FMCB             */
         CS    REG2,@03,FMCCMPS2(FMCBPTR)                          0711
*         BC(7,CS3);                /* TRY AGAIN IF FAILURE          */
         BC    7,CS3                                               0712
*         RFY                                                      0713
*          (REG2,                                                  0713
*           REG3) UNRSTD;                                          0713
*         CRRSW2=OFF;               /* TURN OFF CONTROL SWITCH       */
         NI    CRRSW2(CRRPTR),B'11011111'                          0714
*       END;                                                       0715
*     ELSE                                                         0716
*       DO;                                                        0716
         B     @RC00706                                            0716
@RF00706 DS    0H                                                  0717
*         IF FSBEBI=ON THEN         /* EOB IN FSB                    */
         TM    FSBEBI(FSBPTR),B'00100000'                          0717
         BNO   @RF00717                                            0717
*           CRRSW2=OFF;                                            0718
         NI    CRRSW2(CRRPTR),B'11011111'                          0718
*         ELSE                                                     0719
*           IF(FSBLGI=ON×           /* LEADING GRAPHICS?             */
*               FSBSOHI=ON×         /* START OF HEADER               */
*               FSBMJRCD^=FRNORM×   /* ERROR CONDITION?              */
*               FSBLCPB=ZERO) THEN  /* IS UNSOLICITED DATA           */
         B     @RC00717                                            0719
@RF00717 TM    FSBLGI(FSBPTR),B'00000011'                          0719
         BNZ   @RT00719                                            0719
         CLI   FSBMJRCD(FSBPTR),X'00'                              0719
         BNE   @RT00719                                            0719
         L     @15,FSBLCPB(,FSBPTR)                                0719
         LTR   @15,@15                                             0719
         BNZ   @RF00719                                            0719
@RT00719 DS    0H                                                  0720
*             CRRSW2=OFF;           /* TREAT AS EOB                  */
         NI    CRRSW2(CRRPTR),B'11011111'                          0720
*           ELSE                                                   0721
*             ;                     /* SUBBLOCK                      */
@RF00719 DS    0H                                                  0722
*         IF FSBMNELI=ON THEN       /* ERROR LOCK SET IN FSB?        */
@RC00717 TM    FSBMNELI(FSBPTR),B'10000000'                        0722
         BNO   @RF00722                                            0722
*           DO;                                                    0723
*             CRRELSRI=ON;          /* INDICATE ERROR LOCK SET       */
         OI    CRRELSRI(CRRPTR),B'00001000'                        0724
*             CRRSW2=OFF;           /* ENDING CONDITION              */
         NI    CRRSW2(CRRPTR),B'11011111'                          0725
*           END;                                                   0726
*         ELSE                                                     0727
*           ;                       /* ERROR LOCK NOT SET            */
@RF00722 DS    0H                                                  0728
*         FDBPTR=ADDR(FSBFDB);      /* REFERENCE FIRST FDB           */
         LA    FDBPTR,FSBFDB(,FSBPTR)                              0728
*         RFY                                                      0729
*           COUNTER RSTD;                                          0729
*         COUNTER=0;                /* CLEAR BUFFER ACCUMULATOR      */
         SLR   COUNTER,COUNTER                                     0730
*         DO WHILE FDBPTR^=0;       /* LOOP THROUGH ALL FDB'S        */
         B     @DE00731                                            0731
@DL00731 DS    0H                                                  0732
*           COUNTER=COUNTER+1;      /* COUNT ALL BUFFERS             */
         AL    COUNTER,@CF00067                                    0732
*           FDBPTR=FDBFDBA;         /* REFERENCE NEXT FDB            */
         L     FDBPTR,FDBFDBA(,FDBPTR)                             0733
*         END;                                                     0734
@DE00731 LTR   FDBPTR,FDBPTR                                       0734
         BNZ   @DL00731                                            0734
*         RFY                                                      0735
*          (REG2,                                                  0735
*           REG3) RSTD;                                            0735
*CS5:                                                              0736
*         REG2=FMCCMPS1;            /* GET OLD COUNT                 */
CS5      L     REG2,FMCCMPS1(,FMCBPTR)                             0736
*         REG3=REG2-COUNTER;        /* DECREMENT BUFFER COUNT        */
         LR    REG3,REG2                                           0737
         SLR   REG3,COUNTER                                        0737
*         CS(REG2,REG3,FMCCMPS1);   /* SET NEW COUNT IN FMCB         */
         CS    REG2,@03,FMCCMPS1(FMCBPTR)                          0738
*         BC(7,CS5);                /* TRY AGAIN IF FAILURE          */
         BC    7,CS5                                               0739
*         RFY                                                      0740
*          (REG2,                                                  0740
*           REG3,                                                  0740
*           COUNTER) UNRSTD;                                       0740
*         FDBPTR=ADDR(FSBFDB);                                     0741
         LA    FDBPTR,FSBFDB(,FSBPTR)                              0741
*         FSBPTR=FDBPTR-FDBOFSET;   /* FDB ADR MINUS OFFSET          */
         LR    FSBPTR,FDBPTR                                       0742
         SH    FSBPTR,FDBOFSET(,FDBPTR)                            0742
*         FSBPTR->FDBFDBA=FDBFDBA;                                 0743
         L     @15,FDBFDBA(,FDBPTR)                                0743
         ST    @15,FDBFDBA(,FSBPTR)                                0743
*         IF PROCFTX=ON THEN        /* CONFIDENTIAL TEXT             */
*                                                                  0744
         TM    PROCFTX+48(FMCBPTR),B'00000001'                     0744
         BNO   @RF00744                                            0744
*           /*********************************************************/
*           /*                                                       */
*           /* RELSTORE BUFADDR(FSBPTR)CHAIN(YES)CLEAR(YES)          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0745
*           DO;                                                    0745
*                                                                  0745
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0746
*             RFY                                                  0746
*              (GPR02P,                                            0746
*               GPR03P,                                            0746
*               GPR04P,                                            0746
*               GPR15P) RSTD;                                      0746
*             RFY                                                  0747
*              (GPR01P,                                            0747
*               GPR13P) RSTD;                                      0747
*             GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);   0748
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  0749
*               GPR13P UNRSTD;                                     0749
*             GPR04P=FSBPTR×'80000000'X;                           0750
         LR    GPR04P,FSBPTR                                       0750
         O     GPR04P,@CF02782                                     0750
*             DCL                                                  0751
*               1 FMZA0059 FIXED(31) STATIC LOCAL,                 0751
*                2 * FIXED(8) INIT(80),                            0751
*                2 * PTR(24) INIT(0);                              0751
*             GPR03F=FMZA0059;                                     0752
         L     GPR03F,FMZA0059                                     0752
*             DO;                   /* LISATCVT                    0753
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0754
*             END;                  /* LISATCVT                      */
*             GPR02P=GPR15P->ATCBPDA;                              0756
         L     GPR02P,ATCBPDA(,GPR15P)                             0756
*             GPR15P=GPR15P->ATCSMRS;                              0757
         L     GPR15P,ATCSMRS(,GPR15P)                             0757
*             DCL                                                  0758
*               FMZL0059 BASED(GPR15P) LABEL VALUERANGE(*);        0758
*             CALL FMZL0059;                                       0759
         BALR  @14,@15                                             0759
*             RFY                                                  0760
*               GPR13P RSTD;                                       0760
*             GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);   0761
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  0762
*              (GPR01P,                                            0762
*               GPR13P) UNRSTD;                                    0762
*             RFY                                                  0763
*              (GPR02P,                                            0763
*               GPR03P,                                            0763
*               GPR04P,                                            0763
*               GPR15P) UNRSTD;                                    0763
*           END;                    /* *********END OF RELSTORE    0764
*                                      EXPANSION*********            */
*         ELSE                                                     0765
*                                                                  0765
*           /*********************************************************/
*           /*                                                       */
*           /* RELSTORE BUFADDR(FSBPTR)CHAIN(YES)                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0765
*           DO;                                                    0765
*                                                                  0765
         B     @RC00744                                            0765
@RF00744 DS    0H                                                  0766
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0766
*             RFY                                                  0766
*              (GPR02P,                                            0766
*               GPR03P,                                            0766
*               GPR04P,                                            0766
*               GPR15P) RSTD;                                      0766
*             RFY                                                  0767
*              (GPR01P,                                            0767
*               GPR13P) RSTD;                                      0767
*             GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);   0768
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  0769
*               GPR13P UNRSTD;                                     0769
*             GPR04P=FSBPTR;                                       0770
         LR    GPR04P,FSBPTR                                       0770
*             DCL                                                  0771
*               1 FMZA0075 FIXED(31) STATIC LOCAL,                 0771
*                2 * FIXED(8) INIT(80),                            0771
*                2 * PTR(24) INIT(0);                              0771
*             GPR03F=FMZA0075;                                     0772
         L     GPR03F,FMZA0075                                     0772
*             DO;                   /* LISATCVT                    0773
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0774
*             END;                  /* LISATCVT                      */
*             GPR02P=GPR15P->ATCBPDA;                              0776
         L     GPR02P,ATCBPDA(,GPR15P)                             0776
*             GPR15P=GPR15P->ATCSMRS;                              0777
         L     GPR15P,ATCSMRS(,GPR15P)                             0777
*             DCL                                                  0778
*               FMZL0075 BASED(GPR15P) LABEL VALUERANGE(*);        0778
*             CALL FMZL0075;                                       0779
         BALR  @14,@15                                             0779
*             RFY                                                  0780
*               GPR13P RSTD;                                       0780
*             GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);   0781
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*             RFY                                                  0782
*              (GPR01P,                                            0782
*               GPR13P) UNRSTD;                                    0782
*             RFY                                                  0783
*              (GPR02P,                                            0783
*               GPR03P,                                            0783
*               GPR04P,                                            0783
*               GPR15P) UNRSTD;                                    0783
*           END;                    /* *********END OF RELSTORE    0784
*                                      EXPANSION*********            */
*       END;                                                       0785
@RC00744 DS    0H                                                  0786
*     IF FMCBUFNB<FMCBUFLM THEN                                    0786
@RC00706 CLC   FMCBUFNB(2,FMCBPTR),FMCBUFLM(FMCBPTR)               0786
         BNL   @RF00786                                            0786
*       DO;                         /* TEST BUFFER THRESHOLD @ZA27850*/
*         RFY                                                      0788
*          (REG2,                                                  0788
*           REG3) RSTD;             /*                       @ZA27850*/
*CS4:                                                              0789
*         REG2=FMCCMPS2;            /* GET OLD FLAG VALUE            */
CS4      L     REG2,FMCCMPS2(,FMCBPTR)                             0789
*         REG3=REG2&FLGA5OFF;       /* TURN OFF THRESHOLD FLG        */
         LR    REG3,REG2                                           0790
         N     REG3,@CF02716                                       0790
*         CS(REG2,REG3,FMCCMPS2);   /* SET VALUE IN FMCB             */
         CS    REG2,@03,FMCCMPS2(FMCBPTR)                          0791
*         BC(7,CS4);                /* TRY AGAIN IF FAILURE          */
         BC    7,CS4                                               0792
*         RFY                                                      0793
*          (REG2,                                                  0793
*           REG3) UNRSTD;           /*                       @ZA27850*/
*       END;                        /* BUFFER THRESH EXCEEDED@ZA27850*/
*     IF CRRSW2=ON THEN                                            0795
@RF00786 TM    CRRSW2(CRRPTR),B'00100000'                          0795
         BNO   @RF00795                                            0795
*       CRRSW7=ON;                  /* SET MORE THAN ONCE SWITCH     */
         OI    CRRSW7(CRRPTR),B'00000001'                          0796
*     ELSE                                                         0797
*       CRRSW4=OFF;                 /* DONE PROCESSING FSB'S         */
         B     @RC00795                                            0797
@RF00795 NI    CRRSW4(CRRPTR),B'11110111'                          0797
*   END;                                                           0798
@RC00795 DS    0H                                                  0798
@DE00683 TM    CRRSW4(CRRPTR),B'00001000'                          0798
         BO    @DL00683                                            0798
*   IF(CRRELSRI=ON&                 /* ERROR LOCK SET?               */
*       CRRSW7=ON) THEN             /* MORE THAN ONE FSB TO FLUSH    */
         TM    CRRELSRI(CRRPTR),B'00001000'                        0799
         BNO   @RF00799                                            0799
         TM    CRRSW7(CRRPTR),B'00000001'                          0799
         BNO   @RF00799                                            0799
*                                                                  0800
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME :  LCPBINIT - INITIALIZE AN LCPB                    */
*/*                                                                  */
*/* FUNCTION :                                                       */
*/*    GET STORAGE FOR AND INITIALIZE AN LCPB WITH A RESET           */
*/*    ERROR LOCK OP CODE AND SCHEDULE IT.                           */
*/*                                                                  */
*/* INPUT :  FSBPTR (REG 10) - ADDRESS OF FSB                        */
*/*          FMCBPTR (REG 8) - ADDRESS OF FMCB                       */
*/*                                                                  */
*/* OUTPUT :  RESET ERROR LOCK SCHEDULED                             */
*/*                                                                  */
*/* SUBROUTINES CALLED : NONE                                        */
*/*                                                                  */
*/*  MACROS USED :  REQSTORE, TPWAIT, TPQUE                          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0800
*     DO;                                                          0800
*       RFY                                                        0801
*         R15 RSTD;                 /* RESTRICT RETURN CODE REG      */
*                                                                  0801
*       /*************************************************************/
*       /*                                                           */
*       /* REQSTORE CBID(DCLCP)CLEAR(YES)RPH(RPHPTR)SAVE(YES)        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0802
*       DO;                                                        0802
*                                                                  0802
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0803
*         RFY                                                      0803
*          (GPR02P,                                                0803
*           GPR03P,                                                0803
*           GPR04P,                                                0803
*           GPR15P) RSTD;                                          0803
*         RFY                                                      0804
*          (GPR01P,                                                0804
*           GPR13P) RSTD;                                          0804
*         GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);       0805
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0806
*          (GPR01P,                                                0806
*           GPR13P) UNRSTD;                                        0806
*         DO;                       /* LISATCVT                    0807
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0808
*         END;                      /* LISATCVT                      */
*         GPR02P=GPR15P->ATCBPDA×'80000000'X;                      0810
         L     GPR02P,ATCBPDA(,GPR15P)                             0810
         O     GPR02P,@CF02782                                     0810
*         DCL                                                      0811
*           1 FMZA0091 FIXED(31) STATIC LOCAL,                     0811
*            2 * FIXED(8) INIT(184),                               0811
*            2 * PTR(24) INIT(0);                                  0811
*         GPR03F=FMZA0091;                                         0812
         L     GPR03F,FMZA0091                                     0812
*         GPR04F=5;                                                0813
         LA    GPR04F,5                                            0813
*         GPR15P=GPR15P->ATCSMRQ;                                  0814
         L     GPR15P,ATCSMRQ(,GPR15P)                             0814
*         DCL                                                      0815
*           FMZL0091 BASED(GPR15P) LABEL VALUERANGE(*);            0815
*         CALL FMZL0091;                                           0816
         BALR  @14,@15                                             0816
*         RFY                                                      0817
*          (GPR13P) RSTD;                                          0817
*         GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);       0818
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY                                                      0819
*          (GPR13P) UNRSTD;                                        0819
*         RFY                                                      0820
*          (GPR02P,                                                0820
*           GPR03P,                                                0820
*           GPR04P,                                                0820
*           GPR15P) UNRSTD;                                        0820
*       END;                        /* ******** END OF REQSTORE    0821
*                                      EXPANSION                     */
*       IF R15=WAITCODE THEN        /* IF NO STARAGE WAIT            */
         C     R15,@CF00036                                        0822
         BNE   @RF00822                                            0822
*/*  TPWAIT                                                          */
*                                                                  0823
*         DO;                       /* BEGIN TPWAIT GENERATION       */
*           RFY                                                    0824
*            (GPR01P,                                              0824
*             GPR14P,                                              0824
*             GPR15P) RSTD;                                        0824
*           RFY                                                    0825
*            (GPR00P) RSTD;                                        0825
*           GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))               0826
*           REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);              0826
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    0827
*            (GPR00P) UNRSTD;                                      0827
*           GPR15P=ADDR(LHAA0110);                                 0828
         LA    GPR15P,LHAA0110                                     0828
*           GPR14P=0;                                              0829
         SLR   GPR14P,GPR14P                                       0829
*           GPR15P=GPR15P&'00FFFFFF'X;                             0830
         N     GPR15P,@CF04542                                     0830
*           GPR15P=GPR15P×RPHWT1;                                  0831
         O     GPR15P,@CF02714                                     0831
*           CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                    0832
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0832
*           BC(7,LHAB0110);                                        0833
*                                                                  0833
         BC    7,LHAB0110                                          0833
*/* TPEXIT  NONE                                                     */
*                                                                  0834
*           DO;                                                    0834
*             RESPECIFY                                            0835
*               GPR15P RSTD;                                       0835
*                                                                  0835
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0836
*             DO;                   /* LISATCVT                    0836
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0837
*             END;                  /* LISATCVT                      */
*             RESPECIFY                                            0839
*               GPR00F RSTD;                                       0839
*             GPR00F=0;             /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       0840
*             GPR15P=GPR15P->ATCAP31;                              0841
         L     GPR15P,ATCAP31(,GPR15P)                             0841
*             DCL                                                  0842
*               FMZL0115 BASED(GPR15P) LABEL VALUERANGE(*);        0842
*             CALL FMZL0115;                                       0843
         BALR  @14,@15                                             0843
*             RESPECIFY                                            0844
*              (GPR00F,                                            0844
*               GPR15P) UNRSTD;                                    0844
*           END;                    /* **** END OF TPEXIT            */
*LHAB0110:                                                         0846
*           ;                                                      0846
LHAB0110 DS    0H                                                  0847
*           GPR01P->RPHRESMA=0;                                    0847
         SLR   @11,@11                                             0847
         ST    @11,RPHRESMA(,GPR01P)                               0847
*           RFY                                                    0848
*            (GPR00P) RSTD;                                        0848
*LHAA0110:                                                         0849
*           ;                                                      0849
LHAA0110 DS    0H                                                  0850
*           GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))               0850
*           REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);              0850
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    0851
*            (GPR00P,                                              0851
*             GPR01P,                                              0851
*             GPR14P,                                              0851
*             GPR15P) UNRSTD;                                      0851
*         END;                      /* ****END OF TPWAIT             */
*       ELSE                                                       0853
*         ;                                                        0853
@RF00822 DS    0H                                                  0854
*       RFY                                                        0854
*         R15 UNRSTD;               /* FREE RETURN CODE REG          */
*       LCPBPTR=RPHSRPRM;           /* REFERENCE LCPB                */
         L     LCPBPTR,RPHSRPRM(,RPHPTR)                           0855
*       LCPTYPE=DCLTYPE;            /* CONTROL BLOCK ID              */
         MVI   LCPTYPE(LCPBPTR),X'12'                              0856
*       LCPLNGTH=LENGTH(ISTDCLCP);  /* CONTROL BLOCK LENGTH          */
         MVI   LCPLNGTH(LCPBPTR),X'64'                             0857
*       LCPSAF=FMCSAF;              /* SAF FROM FMCB                 */
         MVC   LCPSAF(2,LCPBPTR),FMCSAF(FMCBPTR)                   0858
*       LCPDAF=FMCDNCBA->NCBDAF;    /* DAF FROM NCB                  */
         L     @15,FMCDNCBA(,FMCBPTR)                              0859
         MVC   LCPDAF(2,LCPBPTR),NCBDAF(@15)                       0859
*       LCPNXLCW=ADDR(DCLLCCW2);    /* POINT TO LCCW FOR RESET       */
         LA    @15,DCLLCCW2(,LCPBPTR)                              0860
         ST    @15,LCPNXLCW(,LCPBPTR)                              0860
*       DCLRQTP=DCLRESET;           /* INDICATE RESET OPERATION      */
         MVI   DCLRQTP(LCPBPTR),X'12'                              0861
*       RFY                                                        0862
*         ISTLCCW BASED(LCPNXLCW);                                 0862
*       LCCWOP=LXEL;                /* RESET ERROR LOCK              */
         MVI   LCCWOP(@15),X'0B'                                   0863
*       DCLSRESW=ON;                /* INDICATE SPECIAL RESET        */
         OI    DCLSRESW(LCPBPTR),B'10000000'                       0864
*/*  TPQUE (LCPBPTR,FMCPAB3) RESET                                   */
*                                                                  0865
*       DO;                                                        0865
*         RFY                                                      0866
*          (GPR00P,                                                0866
*           GPR01P,                                                0866
*           GPR02P,                                                0866
*           GPR15P) RSTD;                                          0866
*         GEN REFS(GPR01P) SETS(RPHWORK)                           0867
*             (STM   GPR14P,GPR09P,RPHWORK(GPR01P));               0867
         STM   GPR14P,GPR09P,RPHWORK(GPR01P)
*         GPR00P=ADDR(FMCPAB3);                                    0868
         LA    GPR00P,FMCPAB3(,FMCBPTR)                            0868
*         GPR02P=LCPBPTR;                                          0869
         LR    GPR02P,LCPBPTR                                      0869
*         CALL ATCLCPTR->ATCAP34->ISTAPC34;                        0870
         L     @11,ATCLCPTR                                        0870
         L     @15,ATCAP34(,@11)                                   0870
         BALR  @14,@15                                             0870
*         GEN REFS(RPHWORK,GPR01P) NOSETS                          0871
*             (LM    GPR14P,GPR09P,RPHWORK(GPR01P));               0871
         LM    GPR14P,GPR09P,RPHWORK(GPR01P)
*         RFY                                                      0872
*          (GPR00P,                                                0872
*           GPR01P,                                                0872
*           GPR02P,                                                0872
*           GPR15P) UNRSTD;                                        0872
*       END;                        /* *** END OF TPQUE GENERATION 0873
*                                      SHIP RESET TO TPIOS           */
*     END;                          /* END LCPBINIT                  */
*   ELSE                                                           0875
*     CRRELSRI=OFF;                                                0875
         B     @RC00799                                            0875
@RF00799 NI    CRRELSRI(CRRPTR),B'11110111'                        0875
*   RTNREG=CRRRTN6;                 /* RETTORE RETURN REG            */
@RC00799 L     RTNREG,CRRRTN6(,CRRPTR)                             0876
*   END PROCESSE;                                                  0877
@EL00002 DS    0H                                                  0877
@EF00002 DS    0H                                                  0877
@ER00002 BR    @14                                                 0877
*DEQUE:                                                            0878
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0878
DEQUE    DS    0H                                                  0879
*   RFY                                                            0879
*     RTNREG RSTD;                                                 0879
*   CRRRTN7=RTNREG;                                                0880
         ST    RTNREG,CRRRTN7(,CRRPTR)                             0880
*   RFY                                                            0881
*     RTNREG UNRSTD;                                               0881
*                                                                  0881
*/*VMDESET  ((15),ZERO)                                              */
*                                                                  0882
*   DO;                             /* INVOKE MODESET MACRO          */
*     GEN;                                                         0883
         MODESET EXTKEY=ZERO,WORKREG=2
*     RFY                                                          0884
*      (GPR15P) RSTD;                                              0884
*     GPR15F=0;                                                    0885
         SLR   GPR15F,GPR15F                                       0885
*     RFY                                                          0886
*      (GPR15P) UNRSTD;             /* PUT RETURN CODE IN RCREG      */
*   END;                            /* VMDESET                       */
*/* TPDEQ (FMCBPTR,ACDRAFQ) CHAIN(FMCRAFM)                           */
*                                                                  0888
*   DO;                             /* BEGIN TPDEQ CODE GENERATION   */
*     RFY                                                          0889
*      (GPR00P,                                                    0889
*       GPR01P,                                                    0889
*       GPR14P,                                                    0889
*       GPR15P) RSTD;                                              0889
*     GPR15P=ADDR(ACDRAFQ);         /* ADDRESS QUEUE POINTER         */
         L     GPR15P,RPHMAJCB-1(,RPHPTR)                          0890
         LA    GPR15P,0(,GPR15P)                                   0890
         LA    GPR15P,ACDRAFQ(,GPR15P)                             0890
*     RFY                                                          0891
*      (GPR02P,                                                    0891
*       GPR03P) RSTD;                                              0891
*     STM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                    0892
         STM   GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0892
*     GPR03P=FMCBPTR×FMZCA017;                                     0893
         L     @11,@CF02782                                        0893
         LR    GPR03P,FMCBPTR                                      0893
         OR    GPR03P,@11                                          0893
*     GPR14P=FMZCA017;                                             0894
         LR    GPR14P,@11                                          0894
*     GPR15P=ADDR(GPR15P->PABWEQA);                                0895
*     GPR02P=GPR15P->PABWEQA×FMZCA017;                             0896
         O     @11,PABWEQA(,GPR15P)                                0896
         LR    GPR02P,@11                                          0896
*     DO WHILE(GPR02P^=GPR14P);                                    0897
         B     @DE00897                                            0897
@DL00897 DS    0H                                                  0898
*FMZL2134:                                                         0898
*       ;                                                          0898
FMZL2134 DS    0H                                                  0899
*       IF GPR02P=GPR03P THEN                                      0899
         CR    GPR02P,GPR03P                                       0899
         BNE   @RF00899                                            0899
*         DO;                                                      0900
*           GPR00P=GPR02P->FMCRAFM;                                0901
         L     GPR00P,FMCRAFM(,GPR02P)                             0901
*           CS(GPR02P,GPR00P,GPR15P->PABWEQA);                     0902
         CS    GPR02P,@00,PABWEQA(GPR15P)                          0902
*           BC(7,FMZL3134);                                        0903
         BC    7,FMZL3134                                          0903
*           GPR14P=GPR02P;                                         0904
         LR    GPR14P,GPR02P                                       0904
*           GPR14P->FMCRAFM=0;                                     0905
         SLR   @11,@11                                             0905
         ST    @11,FMCRAFM(,GPR14P)                                0905
*         END;                                                     0906
*       ELSE                                                       0907
*         DO;                                                      0907
         B     @RC00899                                            0907
@RF00899 DS    0H                                                  0908
*           IF(GPR02P->FMCRAFM)=GPR14P THEN                        0908
         L     @11,FMCRAFM(,GPR02P)                                0908
         CR    @11,GPR14P                                          0908
         BE    @RT00908                                            0908
*             GOTO ISTA0134;                                       0909
*           ELSE                                                   0910
*             DO;                                                  0910
*               GPR15P=ADDR(GPR02P->FMCRAFM);                      0911
         LA    GPR15P,FMCRAFM(,GPR02P)                             0911
*               GPR02P=GPR02P->FMCRAFM;                            0912
         LR    GPR02P,@11                                          0912
*               GOTO FMZL2134;                                     0913
         B     FMZL2134                                            0913
*             END;                                                 0914
*         END;                                                     0915
*FMZL3134:                                                         0916
*       ;                                                          0916
@RC00899 DS    0H                                                  0916
FMZL3134 DS    0H                                                  0917
*     END;                                                         0917
@DE00897 CR    GPR02P,GPR14P                                       0917
         BNE   @DL00897                                            0917
*ISTA0134:                                                         0918
*     ;                                                            0918
ISTA0134 DS    0H                                                  0919
*     LM(GPR02P,GPR03P,GPR01P->RPHWORK(5:12));                     0919
         LM    GPR02P,GPR03P,RPHWORK+4(GPR01P)                     0919
*     RFY                                                          0920
*      (GPR02P,                                                    0920
*       GPR03P) UNRSTD;                                            0920
*     GPR14P=GPR14P&FMZCB017;                                      0921
         N     GPR14P,@CF02877                                     0921
*     GPR01P->RPHWEA=GPR14P;                                       0922
         ST    GPR14P,RPHWEA(,GPR01P)                              0922
*     RFY                                                          0923
*      (GPR00P,                                                    0923
*       GPR01P,                                                    0923
*       GPR14P,                                                    0923
*       GPR15P) UNRSTD;                                            0923
*   END;                            /* END TPDEQ GENERATION          */
*/*VMDESET  ((15),ATCAM)                                             */
*                                                                  0925
*   DO;                             /* INVOKE MODESET MACRO          */
*     GEN;                                                         0926
         MODESET EXTKEY=VTAM,WORKREG=2
*     RFY                                                          0927
*      (GPR15P) RSTD;                                              0927
*     GPR15F=0;                                                    0928
         SLR   GPR15F,GPR15F                                       0928
*     RFY                                                          0929
*      (GPR15P) UNRSTD;             /* PUT RETURN CODE IN RCREG      */
*   END;                            /* VMDESET                       */
*   RFY                                                            0931
*     RTNREG RSTD;                                                 0931
*   RTNREG=CRRRTN7;                                                0932
         L     RTNREG,CRRRTN7(,CRRPTR)                             0932
*   RFY                                                            0933
*     RTNREG UNRSTD;                                               0933
*   RETURN;                                                        0934
@EL00003 DS    0H                                                  0934
@EF00003 DS    0H                                                  0934
@ER00003 BR    @14                                                 0934
*   END DEQUE;                                                     0935
*                                                                  0935
@PB00003 DS    0H                                                  0936
*/* TPEPILOG                                                         */
*                                                                  0936
*   GEN(PRINT OFF);                                                0936
         PRINT OFF
*/* TEMPLATE FOR CHAIN FIELD OF WORK ELEMENT */                    0937
*DCL  1  ISTWKE BDY(WORD) BASED(WKEPTR),                           0937
*        2  * CHAR(4),                 /* SPACE                       *
*        2  WKECHAIN PTR(31),          /* CHAIN POINTER               *
*           3 WKEFLAGS BIT(8),         /* FLAGS                       *
*             4 WKEGATE  BIT(1),       /* GATE BIT                    *
*             4 *        BIT(7),       /* RESERVED                    *
*           3 WKECHNGP PTR(24);        /* PTR ADDRESS                 *
*   DCL                                                            0938
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            0939
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                                 0940
*                                                                  0940
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0941
*   END ISTDCC25                                                   0941
*                                                                  0941
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*                                                                  0941
*       ;                                                          0941
@EL00001 DS    0H                                                  0941
@EF00001 DS    0H                                                  0941
@ER00001 BR    @14                                                 0941
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00067 DC    F'1'
@CF00044 DC    F'4'
@CF00036 DC    F'8'
@CF02714 DC    XL4'08000000'
@CF02716 DC    XL4'FBFFFFFF'
@CF02782 DC    XL4'80000000'
@CF02784 DC    XL4'40000000'
@CF02788 DC    XL4'10000000'
@CF02877 DC    XL4'7FFFFFFF'
@CF02885 DC    XL4'DFFFFFFF'
@CF04542 DC    XL4'00FFFFFF'
@CF04579 DC    XL4'0000FFFF'
         DS    0D
CVTPTR   DS    A
DNCBPTR  DS    A
FMZA0059 DS    FL4
         ORG   FMZA0059
@NM00118 DC    AL1(80)
@NM00119 DC    AL3(0)
         ORG   FMZA0059+4
FMZA0075 DS    FL4
         ORG   FMZA0075
@NM00120 DC    AL1(80)
@NM00121 DC    AL3(0)
         ORG   FMZA0075+4
FMZA0091 DS    FL4
         ORG   FMZA0091
@NM00122 DC    AL1(184)
@NM00123 DC    AL3(0)
         ORG   FMZA0091+4
WKEPTR   DS    A
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
BASE1    EQU   @12
LCPBPTR  EQU   @09
RPHPTR   EQU   @01
FMCBPTR  EQU   @08
FSBPTR   EQU   @10
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
CRRPTR   EQU   @13
REG2     EQU   @02
REG3     EQU   @03
FDBPTR   EQU   @05
ATCVTPTR EQU   @06
COUNTER  EQU   @11
R15      EQU   @15
RTNREG   EQU   @14
GPR01F   EQU   @01
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ATCLCPTR EQU   1032
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLSAF   EQU   RPLARG
RPLDAF   EQU   RPLARG+2
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLBUFL  EQU   RPLCOMN+52
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLDLGIN EQU   RPLOPT5
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLNIB   EQU   RPLEXTD1
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBVTEXT EQU   IFGACB+76
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTDCCRR EQU   0
CRRSPACE EQU   ISTDCCRR+12
CRRSAREA EQU   0
CRRSAVE1 EQU   CRRSAREA+72
CRRFSB   EQU   CRRSAREA+144
CRRMAS   EQU   CRRSAREA+148
CRRMAS1  EQU   CRRMAS
CRRMAS2  EQU   CRRMAS+1
CRRM25   EQU   CRRMAS2
CRRMAS3  EQU   CRRMAS+2
CRRMAS4  EQU   CRRMAS+3
CRRRMAS1 EQU   CRRMAS+4
CRRRMAS2 EQU   CRRMAS+5
CRRRMAS3 EQU   CRRMAS+6
CRRSMAS  EQU   CRRRMAS3
CRRATS   EQU   CRRSAREA+156
CRRATS1  EQU   CRRATS
CRRATS2  EQU   CRRATS+1
CRRC25   EQU   CRRATS2
CRRATS3  EQU   CRRATS+2
CRRATS4  EQU   CRRATS+3
CRRRATS1 EQU   CRRATS+4
CRRRATS2 EQU   CRRATS+5
CRRRATS3 EQU   CRRATS+6
CRRSATS  EQU   CRRRATS3
CRRFLGS1 EQU   CRRSAREA+164
CRRPREIO EQU   CRRFLGS1
CRRFLGS2 EQU   CRRSAREA+165
CRRELSRI EQU   CRRFLGS2
CRRFLGS3 EQU   CRRSAREA+166
CRRSUBBK EQU   CRRFLGS3
CRRFLGS4 EQU   CRRSAREA+167
CRRFMCLK EQU   CRRFLGS4
CRRFLGS  EQU   CRRSAREA+168
CRRSW0   EQU   CRRFLGS
CRRSW1   EQU   CRRFLGS
CRRSW2   EQU   CRRFLGS
CRRSW3   EQU   CRRFLGS
CRRSW4   EQU   CRRFLGS
CRRSW7   EQU   CRRFLGS
CRRRFLG1 EQU   CRRSAREA+169
CRRRPLS  EQU   CRRRFLG1
CRRDBLCK EQU   CRRRFLG1
CRRRTYPE EQU   CRRRFLG1
CRRNSNA  EQU   CRRRTYPE
CRRFDBK1 EQU   CRRSAREA+170
CRRRTNCD EQU   CRRFDBK1
CRRFDB2  EQU   CRRFDBK1+1
CRRERLK  EQU   CRRFDB2
CRRSTSAV EQU   CRRFDB2
CRRFDB3  EQU   CRRFDBK1+2
CRRRDEOB EQU   CRRFDB3
CRRRDEOM EQU   CRRFDB3
CRRRDEOT EQU   CRRFDB3
CRRRLG   EQU   CRRFDB3
CRRRDSOH EQU   CRRFDB3
CRRFDBK2 EQU   CRRSAREA+176
CRRDSB   EQU   CRRFDBK2
CRRESR   EQU   CRRFDBK2+2
CRRESR1  EQU   CRRESR
CRRESR2  EQU   CRRESR+1
CRRFMCB  EQU   CRRSAREA+184
CRRTRBUF EQU   CRRSAREA+204
CRRARPL  EQU   CRRTRBUF+4
CRRATCVT EQU   CRRSAREA+216
CRRRTN6  EQU   CRRSAREA+244
CRRRTN7  EQU   CRRSAREA+248
CRRBARAD EQU   CRRSAREA+272
CRRBFLGS EQU   CRRSAREA+280
CRRBRTCD EQU   CRRSAREA+281
CRRBLEN  EQU   CRRSAREA+282
CRRBTLEN EQU   CRRSAREA+284
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPTYPE  EQU   ISTLCPB
LCPLNGTH EQU   ISTLCPB+1
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPSAF   EQU   LCPCID
LCPDAF   EQU   LCPCID+2
LCPNXLCW EQU   ISTLCPB+20
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRALKACT EQU   CRABASIC+8
CRAL5PTR EQU   CRABASIC+28
CRAL8PTR EQU   CRABASIC+40
CRAPROCR EQU   ISTCRA+312
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROTRUNC EQU   PROPROC1
PROPROC2 EQU   PROPROC+1
PROCFTX  EQU   PROPROC2
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00091 EQU   LOKCHNG+2
ISTFMCB  EQU   0
FMCSAF   EQU   ISTFMCB+2
FMCDNCBA EQU   ISTFMCB+16
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCBUFLM EQU   FMCCMPS1
FMCBUFNB EQU   FMCCMPS1+2
FMCPROCD EQU   ISTFMCB+48
FMCPAB3  EQU   ISTFMCB+96
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCRAFM  EQU   FMCCLEXT+8
FMCDCLOK EQU   FMCCLEXT+12
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGA2 EQU   FMCFLGA
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTNCB   EQU   0
NCBDAF   EQU   ISTNCB+2
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTDYPAB EQU   0
ISTDNCB  EQU   0
DNCNCB   EQU   ISTDNCB
DNCOS    EQU   ISTDNCB+56
DNCZFLGS EQU   DNCOS
DNCBSCED EQU   DNCOS+2
ISTDCLCP EQU   0
DCLLCPB  EQU   ISTDCLCP
DCLLCCW2 EQU   ISTDCLCP+56
DCLRPLA  EQU   ISTDCLCP+72
DCLRTYPE EQU   ISTDCLCP+76
DCLRQTP  EQU   DCLRTYPE
DCLRFLG  EQU   DCLRTYPE+1
DCLFLAG1 EQU   ISTDCLCP+78
DCLSRESW EQU   DCLFLAG1
DCLIOBUF EQU   ISTDCLCP+84
DCLBTLEN EQU   ISTDCLCP+92
DCLIOLEN EQU   ISTDCLCP+96
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCDCC60 EQU   ATCCOM+212
ATCESC01 EQU   ISTATCVT+288
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00107 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00109 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTFDB   EQU   0
FDBFDBA  EQU   ISTFDB
FDBOFSET EQU   ISTFDB+10
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBMNELI EQU   FSBMNRCD
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBMJRCD EQU   FSBSRCAT
FSBERC   EQU   FSBNETRS+1
FSBEBI   EQU   FSBERC
FSBFBMI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBSOHI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
FSBFDB   EQU   ISTFSB+32
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDLOCK  EQU   ACDVTAM
ACDRAFQ  EQU   ACDVTAM+12
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ISTWKE   EQU   0
WKECHAIN EQU   ISTWKE+4
WKEFLAGS EQU   WKECHAIN
FMZL0021 EQU   0
FMZL0034 EQU   0
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
FMZL0047 EQU   0
FMZL0059 EQU   0
FMZL0075 EQU   0
FMZL0091 EQU   0
FMZL0115 EQU   0
ISTAPC34 EQU   0
ISTACB   EQU   0
ISTAPC37 EQU   0
ISTRPL   EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00116 EQU   FSBRQTAG
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FSBRT0B  EQU   @NM00116+1
FSBRT0A  EQU   @NM00116+1
FSBRT09  EQU   @NM00116+1
FSBRT08  EQU   @NM00116+1
FSBRT07  EQU   @NM00116
FSBRT06  EQU   @NM00116
FSBRT05  EQU   @NM00116
FSBRT04  EQU   @NM00116
FSBRT03  EQU   @NM00116
FSBRT02  EQU   @NM00116
FSBRT01  EQU   @NM00116
FSBRT00  EQU   @NM00116
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
WKECHNGP EQU   WKECHAIN+1
@NM00125 EQU   WKEFLAGS
WKEGATE  EQU   WKEFLAGS
@NM00124 EQU   ISTWKE
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
@NM00117 EQU   ACDSSFLG
ACDTSO   EQU   ACDSSFLG
ACDTPEND EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDTSKID EQU   ACDVTPRX+8
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00115 EQU   FSBSS2
@NM00114 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00113 EQU   FSBSS1
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBLATOP EQU   FSBSFLGS
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00112 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00111 EQU   ATCAOSM+333
@NM00110 EQU   @NM00109
ATCSNUF  EQU   @NM00109
ATCOPKL  EQU   @NM00109
ATCABEN  EQU   @NM00109
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00108 EQU   @NM00107
ATCVTMAB EQU   @NM00107
@NM00106 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00105 EQU   ISTATCVT+819
@NM00104 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00103 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00102 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00101 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DCLECHAR EQU   ISTDCLCP+98
DCLCLDOA EQU   ISTDCLCP+88
DCLLDO1  EQU   ISTDCLCP+80
DCLRSV03 EQU   ISTDCLCP+79
DCLRSV02 EQU   DCLFLAG1
DCLRPLS  EQU   DCLFLAG1
DCLBTEIS EQU   DCLFLAG1
DCLNODE  EQU   DCLFLAG1
DCLRSV04 EQU   DCLFLAG1
DCLBNSP  EQU   DCLRFLG
DCLCONV  EQU   DCLRFLG
DCLRSV01 EQU   DCLRFLG
DCLLCCW3 EQU   ISTDCLCP+64
DNCZC001 EQU   DNCOS+40
DNCLOCK  EQU   DNCOS+36
DNCZV005 EQU   DNCOS+32
DNCZV004 EQU   DNCOS+28
DNCZV003 EQU   DNCOS+24
DNCZV002 EQU   DNCOS+21
DNCZX001 EQU   DNCOS+20
DNCZV001 EQU   DNCOS+17
DNCZX003 EQU   DNCOS+16
DNCZV000 EQU   DNCOS+12
DNCSESCQ EQU   DNCOS+8
DNCSESIQ EQU   DNCOS+4
DNCACIP  EQU   DNCBSCED+1
DNCLICP  EQU   DNCBSCED
DNCZF008 EQU   DNCZFLGS+1
DNCZPSRD EQU   DNCZFLGS+1
DNCPSOL  EQU   DNCZFLGS+1
DNCZF007 EQU   DNCZFLGS+1
DNCZF006 EQU   DNCZFLGS+1
DNCZF005 EQU   DNCZFLGS+1
DNCZF004 EQU   DNCZFLGS+1
DNCZF003 EQU   DNCZFLGS
DNCZF002 EQU   DNCZFLGS
DNCZRSCH EQU   DNCZFLGS
DNCDISC  EQU   DNCZFLGS
DNCCONT  EQU   DNCZFLGS
DNCINVIT EQU   DNCZFLGS
DNCSESS  EQU   DNCZFLGS
DNCZF001 EQU   DNCZFLGS
DNCMODE  EQU   ISTDNCB+49
DNCBHSET EQU   ISTDNCB+48
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00100 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00099 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00098 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00097 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00096 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCDEBA  EQU   ISTFMCB+32
@NM00095 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00094 EQU   ISTFMCB+30
@NM00093 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
LOKXCL   EQU   @NM00091
LOKPRY   EQU   @NM00091
@NM00092 EQU   @NM00091
@NM00090 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROASYIP EQU   PROPROC1
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
CRACRR   EQU   CRAHDR
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00089 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00088 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00087 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
@NM00086 EQU   ISTAPCRR+137
@NM00085 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00084 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00083 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00082 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00081 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00080 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00079 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00078 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00077 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00076 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00075 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00074 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
CRRRVPT5 EQU   CRRSAREA+316
CRRRVPT4 EQU   CRRSAREA+312
CRRRVPT3 EQU   CRRSAREA+308
CRRRVPT2 EQU   CRRSAREA+304
CRRRVPT1 EQU   CRRSAREA+300
CRRRVCR2 EQU   CRRSAREA+292
CRRRVCR1 EQU   CRRSAREA+291
CRRXFNCD EQU   CRRSAREA+290
CRRLDOCT EQU   CRRSAREA+288
@NM00073 EQU   CRRBFLGS
CRRBFLG1 EQU   CRRBFLGS
CRRBLDAD EQU   CRRSAREA+276
CRRRTN12 EQU   CRRSAREA+268
CRRRTN11 EQU   CRRSAREA+264
CRRRTN10 EQU   CRRSAREA+260
CRRRTN9  EQU   CRRSAREA+256
CRRRTN8  EQU   CRRSAREA+252
CRRRTN5  EQU   CRRSAREA+240
CRRRTN4  EQU   CRRSAREA+236
CRRRTN3  EQU   CRRSAREA+232
CRRRTN2  EQU   CRRSAREA+228
CRRRTN1  EQU   CRRSAREA+224
CRRRES1  EQU   CRRSAREA+222
CRRLCNT  EQU   CRRSAREA+220
CRRVALCK EQU   CRRSAREA+212
CRRBIND  EQU   CRRTRBUF+3
CRRTRRES EQU   CRRTRBUF
CRRCLDO  EQU   CRRSAREA+200
CRRUECB  EQU   CRRSAREA+196
CRRLCPB  EQU   CRRSAREA+192
CRRCMDAD EQU   CRRSAREA+188
CRRCLCCW EQU   CRRSAREA+180
CRRDSB2  EQU   CRRDSB+1
CRRDSB1  EQU   CRRDSB
CRRDTACT EQU   CRRSAREA+174
CRRRSV99 EQU   CRRSAREA+173
CRRLGFRC EQU   CRRFDB3
CRRUNUSD EQU   CRRFDB3
CRRUINPT EQU   CRRFDB3
CRRCUERR EQU   CRRFDB2
CRRDLGFL EQU   CRRFDB2
CRRIOERR EQU   CRRFDB2
CRRDVUNS EQU   CRRFDB2
CRRATND  EQU   CRRFDB2
CRRRVID  EQU   CRRFDB2
CRRDFSYN EQU   CRRRTYPE
CRRRESP  EQU   CRRRTYPE
CRRDFASY EQU   CRRRTYPE
CRRRPSBD EQU   CRRRFLG1
CRRRPLOQ EQU   CRRRFLG1
CRRSW6   EQU   CRRFLGS
CRRSW5   EQU   CRRFLGS
CRRRSV04 EQU   CRRFLGS4
CRRDLCCW EQU   CRRFLGS3
CRRRESET EQU   CRRFLGS3
CRRRSV08 EQU   CRRFLGS3
CRRDEBQ  EQU   CRRFLGS3
CRRSTSPR EQU   CRRFLGS3
CRRDREQ  EQU   CRRFLGS3
CRRDFDBK EQU   CRRFLGS3
CRRDFSB  EQU   CRRFLGS2
CRRDPROC EQU   CRRFLGS2
CRREXTS  EQU   CRRFLGS2
CRRPOST  EQU   CRRFLGS2
CRRENDLW EQU   CRRFLGS2
CRRPRGIP EQU   CRRFLGS2
CRRDEXP  EQU   CRRFLGS2
CRRSOLRQ EQU   CRRFLGS1
CRRREQP  EQU   CRRFLGS1
CRRCPROC EQU   CRRFLGS1
CRRFINI  EQU   CRRFLGS1
CRRINIO  EQU   CRRFLGS1
CRRFLDOS EQU   CRRFLGS1
CRRDOCUR EQU   CRRFLGS1
CRRRATS4 EQU   CRRATS+7
@NM00072 EQU   CRRSATS
CRRASC51 EQU   CRRSATS
CRRASC40 EQU   CRRSATS
CRRASC30 EQU   CRRSATS
CRRASC21 EQU   CRRSATS
CRRASC10 EQU   CRRSATS
CRRASC01 EQU   CRRSATS
@NM00071 EQU   CRRRATS2
CRRPLIC  EQU   CRRRATS2
CRRRC81  EQU   CRRRATS2
CRRRC80  EQU   CRRRATS2
CRRRC65  EQU   CRRRATS2
CRRRC63  EQU   CRRRATS2
CRRRC55  EQU   CRRRATS2
CRRRC54  EQU   CRRRATS2
CRRRC53  EQU   CRRRATS1
CRRRC52  EQU   CRRRATS1
CRRRC51  EQU   CRRRATS1
CRRRC30  EQU   CRRRATS1
CRRRC26  EQU   CRRRATS1
CRRRC23  EQU   CRRRATS1
CRRRC22  EQU   CRRRATS1
CRRRC21  EQU   CRRRATS1
@NM00070 EQU   CRRATS4
CRRC3X   EQU   CRRATS4
CRRC85   EQU   CRRATS4
CRRC83   EQU   CRRATS4
CRRC82   EQU   CRRATS4
CRRC61   EQU   CRRATS4
CRRC60   EQU   CRRATS4
CRRC81   EQU   CRRATS3
CRRC80   EQU   CRRATS3
CRRC75   EQU   CRRATS3
CRRC51   EQU   CRRATS3
CRRC50   EQU   CRRATS3
CRRC42   EQU   CRRATS3
CRRC41   EQU   CRRATS3
CRRC40   EQU   CRRATS3
CRRC32   EQU   CRRATS2
CRRC31   EQU   CRRATS2
CRRC30   EQU   CRRATS2
CRRC24   EQU   CRRATS2
CRRC23   EQU   CRRATS2
CRRC22   EQU   CRRATS2
CRRC21   EQU   CRRATS2
CRRC20   EQU   CRRATS1
CRRC13   EQU   CRRATS1
CRRC12   EQU   CRRATS1
CRRC11   EQU   CRRATS1
CRRC10   EQU   CRRATS1
CRRC02   EQU   CRRATS1
CRRC01   EQU   CRRATS1
CRRC00   EQU   CRRATS1
CRRRMAS4 EQU   CRRMAS+7
@NM00069 EQU   CRRSMAS
CRRMSC51 EQU   CRRSMAS
CRRMSC40 EQU   CRRSMAS
CRRMSC30 EQU   CRRSMAS
CRRMSC21 EQU   CRRSMAS
CRRMSC10 EQU   CRRSMAS
CRRMSC01 EQU   CRRSMAS
@NM00068 EQU   CRRRMAS2
CRRRM81  EQU   CRRRMAS2
CRRRM80  EQU   CRRRMAS2
CRRRM65  EQU   CRRRMAS2
CRRRM63  EQU   CRRRMAS2
CRRRM55  EQU   CRRRMAS2
CRRRM54  EQU   CRRRMAS2
CRRRM53  EQU   CRRRMAS1
CRRRM52  EQU   CRRRMAS1
CRRRM51  EQU   CRRRMAS1
CRRRM30  EQU   CRRRMAS1
CRRRM26  EQU   CRRRMAS1
CRRRM23  EQU   CRRRMAS1
CRRRM22  EQU   CRRRMAS1
CRRRM21  EQU   CRRRMAS1
@NM00067 EQU   CRRMAS4
CRRM3X   EQU   CRRMAS4
CRRM85   EQU   CRRMAS4
CRRM83   EQU   CRRMAS4
CRRM82   EQU   CRRMAS4
CRRM61   EQU   CRRMAS4
CRRM60   EQU   CRRMAS4
CRRM81   EQU   CRRMAS3
CRRM80   EQU   CRRMAS3
CRRM75   EQU   CRRMAS3
CRRM51   EQU   CRRMAS3
CRRM50   EQU   CRRMAS3
CRRM42   EQU   CRRMAS3
CRRM41   EQU   CRRMAS3
CRRM40   EQU   CRRMAS3
CRRM32   EQU   CRRMAS2
CRRM31   EQU   CRRMAS2
CRRM30   EQU   CRRMAS2
CRRM24   EQU   CRRMAS2
CRRM23   EQU   CRRMAS2
CRRM22   EQU   CRRMAS2
CRRM21   EQU   CRRMAS2
CRRM20   EQU   CRRMAS1
CRRM13   EQU   CRRMAS1
CRRM12   EQU   CRRMAS1
CRRM11   EQU   CRRMAS1
CRRM10   EQU   CRRMAS1
CRRM02   EQU   CRRMAS1
CRRM01   EQU   CRRMAS1
CRRM00   EQU   CRRMAS1
CRRSAVE  EQU   CRRSAREA
CRRRSV22 EQU   ISTDCCRR+4
CRRCRR   EQU   ISTDCCRR
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00066 EQU   CVTFIX+248
@NM00065 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00064 EQU   ACBVTEXT+8
@NM00063 EQU   ACBVTEXT+6
ACBRTN   EQU   ACBVTEXT
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00062 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00061 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00060 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00059 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00058 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00057 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00056 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00055 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00054 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00053 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00052 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00051 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
RPLSEQNO EQU   RPLOF60+6
@NM00050 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00049 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00048 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00047 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00046 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00045 EQU   RPLRESP
@NM00044 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00043 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00042 EQU   RPLVTFL1
@NM00041 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00040 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00039 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00038 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00037 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00036 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00035 EQU   RPLOPT12
@NM00034 EQU   RPLOPT12
@NM00033 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00032 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00031 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
@NM00030 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00029 EQU   RPLRBAR+3
@NM00028 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00027 EQU   RPLOPT5
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00026 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00025 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00535 EQU   @RC00534
@RF00551 EQU   @RC00534
@RC00572 EQU   @RC00534
@RC00593 EQU   @RC00521
@RF00592 EQU   @RC00521
@PB00002 EQU   @PB00003
@RT00908 EQU   ISTA0134
@RC00573 EQU   @RC00572
@RC00574 EQU   @RC00573
@ENDDATA EQU   *
         END   ISTDCC25,(C'PLS1739',0603,77320)
