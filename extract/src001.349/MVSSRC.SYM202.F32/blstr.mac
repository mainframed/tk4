TR       TITLE 'BLSTR   --IPCS SERVICE ROUTINES TO DISPLAY REGISTERS   *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPLK                           */
*/*------------------------------------------------------------------*/
BLSTR    CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLSTR     78.068'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(12),0(@01)                                 0002
*   RETC=ZZZFLAGI;                  /* ASSUME SUCCESS                */
         SLR   RETC,RETC                                           0142
*   DEMINLEN=MAX(1,ESPADIM);        /* SET REGISTER ARRAY DEMENSION  */
         L     @14,@PC00001+4                                      0143
         L     DEMINLEN,ESPADIM(,@14)                              0143
         LA    @07,1                                               0143
         CLR   DEMINLEN,@07                                        0143
         BNL   *+6
         LR    DEMINLEN,@07                                        0143
*   IF ESPAAST='C ' THEN                                           0144
*                                                                  0144
         CLC   ESPAAST(2,@14),@CC00078                             0144
         BNE   @RF00144                                            0144
*     /***************************************************************/
*     /*                                                             */
*     /* AMDSADMP DUMP                                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0145
*     DO;                           /* AMDSADMP DUMP                 */
*       FROFF=ADDR(HSDCFPR)-ADDR(HSDCPSA);                         0146
         LA    FROFF,352                                           0146
*       GROFF=ADDR(HSDCGPR)-ADDR(HSDCPSA);                         0147
         LA    GROFF,384                                           0147
*       CROFF=ADDR(HSDCTLR)-ADDR(HSDCPSA);                         0148
         LA    CROFF,448                                           0148
*     END;                                                         0149
*   ELSE                                                           0150
*     IF ESPAAST='H ' THEN                                         0150
*                                                                  0150
         B     @RC00144                                            0150
@RF00144 L     @14,@PC00001+4                                      0150
         CLC   ESPAAST(2,@14),@CC00086                             0150
         BNE   @RF00150                                            0150
*       /*************************************************************/
*       /*                                                           */
*       /* VIRTUAL STORAGE DUMP                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0151
*       DO;                         /* VIRTUAL STORAGE DUMP          */
*         FROFF=ADDR(HSDHVFPR)-ADDR(HSDHV);                        0152
         LA    FROFF,120                                           0152
*         GROFF=ADDR(HSDHVGPR)-ADDR(HSDHV);                        0153
         LA    GROFF,152                                           0153
*         CROFF=ADDR(HSDHVCR)-ADDR(HSDHV);                         0154
         LA    CROFF,216                                           0154
*       END;                                                       0155
*     ELSE                                                         0156
*       GOTO EXITFMTB;              /* UNSUPPORTED SOURCE            */
*   IF ESPALAD+ESPADOF<GROFF THEN                                  0157
*                                                                  0157
@RC00144 L     @14,@PC00001+4                                      0157
         L     @06,ESPALAD(,@14)                                   0157
         AL    @06,ESPADOF(,@14)                                   0157
         CLR   @06,GROFF                                           0157
         BNL   @RF00157                                            0157
*     /***************************************************************/
*     /*                                                             */
*     /* POSSIBLY FLOATING POINT REGISTER(S)                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0158
*     DO;                           /* POSSIBLY FLOATING POINT       */
*       IF ESPALAD+ESPADOF+ESPADLE*DEMINLEN<=GROFF&ESPALAD+ESPADOF>=
*           FROFF&(ESPADLE=4×ESPADLE=8) THEN                       0159
*                                                                  0159
         L     @14,ESPADLE(,@14)                                   0159
         LR    @01,DEMINLEN                                        0159
         MR    @00,@14                                             0159
         ALR   @01,@06                                             0159
         CLR   @01,GROFF                                           0159
         BH    @RF00159                                            0159
         CLR   @06,FROFF                                           0159
         BL    @RF00159                                            0159
         CL    @14,@CF00047                                        0159
         BE    @RT00159                                            0159
         CL    @14,@CF00058                                        0159
         BNE   @RF00159                                            0159
@RT00159 DS    0H                                                  0160
*         /***********************************************************/
*         /*                                                         */
*         /* FLOATING POINTER REGISTER(S)                            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0160
*         DO;                       /* FLOATING POINT REGISTER(S)    */
*           FMTXP=ADDR(FMTB);       /* FORCED TYPE FOR NOW           */
         LA    @14,FMTB                                            0161
         ST    @14,FMTXP                                           0161
*           REGNUM=(ESPALAD+ESPADOF-FROFF)/4;                      0162
         L     @14,@PC00001+4                                      0162
         L     @00,ESPALAD(,@14)                                   0162
         AL    @00,ESPADOF(,@14)                                   0162
         SLR   @00,FROFF                                           0162
         SRL   @00,2                                               0162
         LR    REGNUM,@00                                          0162
*           REGLAST=REGNUM+(DEMINLEN-1)*2;                         0163
         LR    REGLAST,DEMINLEN                                    0163
         BCTR  REGLAST,0                                           0163
         ALR   REGLAST,REGLAST                                     0163
         ALR   REGLAST,REGNUM                                      0163
*           REGINCR=2;                                             0164
         MVC   REGINCR(4),@CF00075                                 0164
*           BLKINCR=8;                                             0165
         MVC   BLKINCR(4),@CF00058                                 0165
*           IF ESPADLE=4 THEN                                      0166
*                                                                  0166
         LA    @05,4                                               0166
         CL    @05,ESPADLE(,@14)                                   0166
         BNE   @RF00166                                            0166
*             /*******************************************************/
*             /*                                                     */
*             /* SINGLE PRECISION                                    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0167
*             DO;                   /* SINGLE PRECISION              */
*               REGTYPE='E';        /* REGISTER CODE                 */
         MVI   REGTYPE,C'E'                                        0168
*               PERLINE=4;          /* 4 PER LINE                    */
         LR    PERLINE,@05                                         0169
*             END;                                                 0170
*           ELSE                                                   0171
*                                                                  0171
*             /*******************************************************/
*             /*                                                     */
*             /* DOUBLE PRECISION                                    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0171
*             DO;                   /* DOUBLE PRECISION              */
         B     @RC00166                                            0171
@RF00166 DS    0H                                                  0172
*               REGTYPE='D';        /* REGISTER CODE                 */
         MVI   REGTYPE,C'D'                                        0172
*               PERLINE=2;          /* 2 PER LINE                    */
         LA    PERLINE,2                                           0173
*             END;                                                 0174
*           CALL FILLIN;                                           0175
@RC00166 BAL   @14,FILLIN                                          0175
*         END;                                                     0176
*       ELSE                                                       0177
*         GOTO EXITFMTB;            /* INVALID RANGE                 */
*     END;                                                         0178
*   ELSE                                                           0179
*     IF ESPALAD+ESPADOF>=CROFF THEN                               0179
*                                                                  0179
         B     @RC00157                                            0179
@RF00157 L     @14,@PC00001+4                                      0179
         L     @06,ESPALAD(,@14)                                   0179
         AL    @06,ESPADOF(,@14)                                   0179
         CLR   @06,CROFF                                           0179
         BL    @RF00179                                            0179
*       /*************************************************************/
*       /*                                                           */
*       /* POSSIBLY CONTROL REGISTER(S)                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0180
*       DO;                         /* POSSIBLY CONTROL REGISTER(S)  */
*         IF ESPALAD+ESPADOF+ESPADLE*DEMINLEN<=CROFF+64&ESPADLE=4 THEN
*                                                                  0181
         L     @14,ESPADLE(,@14)                                   0181
         LR    @03,DEMINLEN                                        0181
         MR    @02,@14                                             0181
         ALR   @06,@03                                             0181
         LA    @04,64                                              0181
         ALR   @04,CROFF                                           0181
         CLR   @06,@04                                             0181
         BH    @RF00181                                            0181
         CL    @14,@CF00047                                        0181
         BNE   @RF00181                                            0181
*           /*********************************************************/
*           /*                                                       */
*           /* CONTROL REGISTER(S)                                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0182
*           DO;                     /* CONTROL REGISTER(S)           */
*             DO;                   /* BLRSRCH(ESPADTY)            0183
*                                      ARRAY(INTYPE)SET(J2)          */
*               J2=0;               /* CURRENT POSITION              */
         SLR   J2,J2                                               0184
*               SCH0001G=DIM(INTYPE);/* PROBE DISTANCE               */
*                                                                  0185
         LA    SCH0001G,8                                          0185
*               /*****************************************************/
*               /*                                                   */
*               /* SEARCH SORTED ARRAY INTYPE FOR ESPADTY            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0186
*               DO WHILE(SCH0001G>0);/* SEARCH SORTED ARRAY          */
         B     @DE00186                                            0186
@DL00186 DS    0H                                                  0187
*                 SCH0001A=J2+SCH0001G;/* PROBE POSITION             */
         LR    SCH0001A,J2                                         0187
         ALR   SCH0001A,SCH0001G                                   0187
*                 IF SCH0001A>DIM(INTYPE) THEN/* PROBE BEYOND ARRAY  */
         CL    SCH0001A,@CF00058                                   0188
         BNH   @RF00188                                            0188
*                   IF SCH0001G=1 THEN/* ADJACENT ARRAY ENTRIES      */
*                                                                  0189
         CL    SCH0001G,@CF00050                                   0189
         BNE   @RF00189                                            0189
*                     /***********************************************/
*                     /*                                             */
*                     /* ESPADTY COLLATES HIGHER THAN                */
*                     /* INTYPE(DIM(INTYPE))                         */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0190
*                     DO;           /* ADJACENT ARRAY ENTRIES        */
*                       J2=0;       /* SEARCH IS UNSUCCESSFUL        */
         SLR   J2,J2                                               0191
*                       SCH0001G=0; /* SEARCH IS COMPLETE            */
         SLR   SCH0001G,SCH0001G                                   0192
*                     END;          /* ADJACENT ARRAY ENTRIES        */
*                   ELSE            /* INTERVENING ENTRY(IES)        */
*                     ;             /* NEW PROBE POSITION            */
@RF00189 DS    0H                                                  0195
*                 ELSE              /* PROBE POSITION IN ARRAY       */
*                   IF INTYPE(SCH0001A)<=ESPADTY THEN              0195
*                                                                  0195
         B     @RC00188                                            0195
@RF00188 L     @14,@PC00001+4                                      0195
         LA    @07,INTYPE-1(SCH0001A)                              0195
         CLC   0(1,@07),ESPADTY(@14)                               0195
         BH    @RF00195                                            0195
*                     /***********************************************/
*                     /*                                             */
*                     /* SEARCH HIGHER IN ARRAY                      */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0196
*                     DO;           /* CURRENT POSITION TOO LOW      */
*                       BC(7,SCH0001L);/* IF INTYPE(SCH0001A)=ESPADTY
*                                      THEN SEARCH IS SUCCESSFUL     */
         BC    7,SCH0001L                                          0197
*                       SCH0001G=0; /* SEARCH IS COMPLETE            */
         SLR   SCH0001G,SCH0001G                                   0198
*SCH0001L:                          /* ELSE CONTINUE THE SEARCH      */
*                       J2=SCH0001A;/* CURRENT POSITION              */
SCH0001L LR    J2,SCH0001A                                         0199
*                     END;          /* CURRENT POSITION TOO LOW      */
*                   ELSE            /* CURRENT POSITION HIGH ENOUGH  */
*                     IF SCH0001G=1 THEN/* ADJACENT ARRAY ENTRIES    */
*                                                                  0201
         B     @RC00195                                            0201
@RF00195 CL    SCH0001G,@CF00050                                   0201
         BNE   @RF00201                                            0201
*                       /*********************************************/
*                       /*                                           */
*                       /* ESPADTY COLLATES BETWEEN ENTRIES OR LOW   */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0202
*                       DO;         /* ADJACENT ARRAY ENTRIES        */
*                         J2=0;     /* SEARCH IS UNSUCCESSFUL        */
         SLR   J2,J2                                               0203
*                         SCH0001G=0;/* SEARCH IS COMPLETE           */
         SLR   SCH0001G,SCH0001G                                   0204
*                       END;        /* ADJACENT ARRAY ENTRIES        */
*                 SCH0001G=SCH0001G+1;/* PROBE DISTANCE              */
@RF00201 DS    0H                                                  0206
@RC00195 DS    0H                                                  0206
@RC00188 AL    SCH0001G,@CF00050                                   0206
*                 SRL(SCH0001G,1);  /* PROBE DISTANCE                */
         SRL   SCH0001G,1                                          0207
*               END;                /* SEARCH SORTED ARRAY           */
@DE00186 SLR   @14,@14                                             0208
         CLR   SCH0001G,@14                                        0208
         BH    @DL00186                                            0208
*             END;                  /* BLRSRCH(ESPADTY)            0209
*                                      ARRAY(INTYPE)SET(J2)          */
*             IF J2=0 THEN                                         0210
         CR    J2,@14                                              0210
         BNE   @RF00210                                            0210
*               FMTXP=ADDR(FMTB);   /* DEFAULT TYPE                  */
         LA    @14,FMTB                                            0211
         ST    @14,FMTXP                                           0211
*             ELSE                                                 0212
*               FMTXP=FMRTN(J2);    /* EXPLICIT TYPE                 */
         B     @RC00210                                            0212
@RF00210 LR    @14,J2                                              0212
         SLA   @14,2                                               0212
         L     @14,FMRTN-4(@14)                                    0212
         ST    @14,FMTXP                                           0212
*             REGTYPE='C';          /* CONTROL REGISTER              */
@RC00210 MVI   REGTYPE,C'C'                                        0213
*             REGNUM=(ESPALAD+ESPADOF-CROFF)/4;                    0214
         L     @14,@PC00001+4                                      0214
         L     @00,ESPALAD(,@14)                                   0214
         AL    @00,ESPADOF(,@14)                                   0214
         SLR   @00,CROFF                                           0214
         SRL   @00,2                                               0214
         LR    REGNUM,@00                                          0214
*             REGLAST=REGNUM+DEMINLEN-1;                           0215
         LR    REGLAST,REGNUM                                      0215
         ALR   REGLAST,DEMINLEN                                    0215
         BCTR  REGLAST,0                                           0215
*             REGINCR=1;                                           0216
         MVC   REGINCR(4),@CF00050                                 0216
*             BLKINCR=4;                                           0217
         LA    @14,4                                               0217
         ST    @14,BLKINCR                                         0217
*             PERLINE=4;                                           0218
         LR    PERLINE,@14                                         0218
*             CALL FILLIN;                                         0219
         BAL   @14,FILLIN                                          0219
*           END;                                                   0220
*         ELSE                                                     0221
*           GOTO EXITFMTB;          /* INVALID RANGE                 */
*       END;                                                       0222
*     ELSE                                                         0223
*                                                                  0223
*       /*************************************************************/
*       /*                                                           */
*       /* POSSIBLY GENERAL PURPOSE REGISTER(S)                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0223
*       DO;                         /* POSSIBLY GPR(S)               */
         B     @RC00179                                            0223
@RF00179 DS    0H                                                  0224
*         IF ESPALAD+ESPADOF+ESPADLE*DEMINLEN<=CROFF&ESPADLE=4 THEN
*                                                                  0224
         L     @14,@PC00001+4                                      0224
         L     @06,ESPALAD(,@14)                                   0224
         AL    @06,ESPADOF(,@14)                                   0224
         L     @14,ESPADLE(,@14)                                   0224
         LR    @03,DEMINLEN                                        0224
         MR    @02,@14                                             0224
         ALR   @06,@03                                             0224
         CLR   @06,CROFF                                           0224
         BH    @RF00224                                            0224
         CL    @14,@CF00047                                        0224
         BNE   @RF00224                                            0224
*           /*********************************************************/
*           /*                                                       */
*           /* GENERAL PURPOSE REGISTER(S)                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0225
*           DO;                     /* GENERAL PURPOSE REGISTER(S)   */
*             DO;                   /* BLRSRCH(ESPADTY)            0226
*                                      ARRAY(INTYPE)SET(J2)          */
*               J2=0;               /* CURRENT POSITION              */
         SLR   J2,J2                                               0227
*               SCH0002G=DIM(INTYPE);/* PROBE DISTANCE               */
*                                                                  0228
         LA    SCH0002G,8                                          0228
*               /*****************************************************/
*               /*                                                   */
*               /* SEARCH SORTED ARRAY INTYPE FOR ESPADTY            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0229
*               DO WHILE(SCH0002G>0);/* SEARCH SORTED ARRAY          */
         B     @DE00229                                            0229
@DL00229 DS    0H                                                  0230
*                 SCH0002A=J2+SCH0002G;/* PROBE POSITION             */
         LR    SCH0002A,J2                                         0230
         ALR   SCH0002A,SCH0002G                                   0230
*                 IF SCH0002A>DIM(INTYPE) THEN/* PROBE BEYOND ARRAY  */
         CL    SCH0002A,@CF00058                                   0231
         BNH   @RF00231                                            0231
*                   IF SCH0002G=1 THEN/* ADJACENT ARRAY ENTRIES      */
*                                                                  0232
         CL    SCH0002G,@CF00050                                   0232
         BNE   @RF00232                                            0232
*                     /***********************************************/
*                     /*                                             */
*                     /* ESPADTY COLLATES HIGHER THAN                */
*                     /* INTYPE(DIM(INTYPE))                         */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0233
*                     DO;           /* ADJACENT ARRAY ENTRIES        */
*                       J2=0;       /* SEARCH IS UNSUCCESSFUL        */
         SLR   J2,J2                                               0234
*                       SCH0002G=0; /* SEARCH IS COMPLETE            */
         SLR   SCH0002G,SCH0002G                                   0235
*                     END;          /* ADJACENT ARRAY ENTRIES        */
*                   ELSE            /* INTERVENING ENTRY(IES)        */
*                     ;             /* NEW PROBE POSITION            */
@RF00232 DS    0H                                                  0238
*                 ELSE              /* PROBE POSITION IN ARRAY       */
*                   IF INTYPE(SCH0002A)<=ESPADTY THEN              0238
*                                                                  0238
         B     @RC00231                                            0238
@RF00231 L     @14,@PC00001+4                                      0238
         LA    @06,INTYPE-1(SCH0002A)                              0238
         CLC   0(1,@06),ESPADTY(@14)                               0238
         BH    @RF00238                                            0238
*                     /***********************************************/
*                     /*                                             */
*                     /* SEARCH HIGHER IN ARRAY                      */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0239
*                     DO;           /* CURRENT POSITION TOO LOW      */
*                       BC(7,SCH0002L);/* IF INTYPE(SCH0002A)=ESPADTY
*                                      THEN SEARCH IS SUCCESSFUL     */
         BC    7,SCH0002L                                          0240
*                       SCH0002G=0; /* SEARCH IS COMPLETE            */
         SLR   SCH0002G,SCH0002G                                   0241
*SCH0002L:                          /* ELSE CONTINUE THE SEARCH      */
*                       J2=SCH0002A;/* CURRENT POSITION              */
SCH0002L LR    J2,SCH0002A                                         0242
*                     END;          /* CURRENT POSITION TOO LOW      */
*                   ELSE            /* CURRENT POSITION HIGH ENOUGH  */
*                     IF SCH0002G=1 THEN/* ADJACENT ARRAY ENTRIES    */
*                                                                  0244
         B     @RC00238                                            0244
@RF00238 CL    SCH0002G,@CF00050                                   0244
         BNE   @RF00244                                            0244
*                       /*********************************************/
*                       /*                                           */
*                       /* ESPADTY COLLATES BETWEEN ENTRIES OR LOW   */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0245
*                       DO;         /* ADJACENT ARRAY ENTRIES        */
*                         J2=0;     /* SEARCH IS UNSUCCESSFUL        */
         SLR   J2,J2                                               0246
*                         SCH0002G=0;/* SEARCH IS COMPLETE           */
         SLR   SCH0002G,SCH0002G                                   0247
*                       END;        /* ADJACENT ARRAY ENTRIES        */
*                 SCH0002G=SCH0002G+1;/* PROBE DISTANCE              */
@RF00244 DS    0H                                                  0249
@RC00238 DS    0H                                                  0249
@RC00231 AL    SCH0002G,@CF00050                                   0249
*                 SRL(SCH0002G,1);  /* PROBE DISTANCE                */
         SRL   SCH0002G,1                                          0250
*               END;                /* SEARCH SORTED ARRAY           */
@DE00229 SLR   @14,@14                                             0251
         CLR   SCH0002G,@14                                        0251
         BH    @DL00229                                            0251
*             END;                  /* BLRSRCH(ESPADTY)            0252
*                                      ARRAY(INTYPE)SET(J2)          */
*             IF J2=0 THEN                                         0253
         CR    J2,@14                                              0253
         BNE   @RF00253                                            0253
*               FMTXP=ADDR(FMTB);   /* DEFAULT TYPE                  */
         LA    @14,FMTB                                            0254
         ST    @14,FMTXP                                           0254
*             ELSE                                                 0255
*               FMTXP=FMRTN(J2);    /* EXPLICIT TYPE                 */
         B     @RC00253                                            0255
@RF00253 LR    @14,J2                                              0255
         SLA   @14,2                                               0255
         L     @14,FMRTN-4(@14)                                    0255
         ST    @14,FMTXP                                           0255
*             REGTYPE='R';          /* GENERAL PURPOSE REGISTERS     */
@RC00253 MVI   REGTYPE,C'R'                                        0256
*             REGNUM=(ESPALAD+ESPADOF-GROFF)/4;                    0257
         L     @14,@PC00001+4                                      0257
         L     @04,ESPALAD(,@14)                                   0257
         AL    @04,ESPADOF(,@14)                                   0257
         SLR   @04,GROFF                                           0257
         SRL   @04,2                                               0257
         LR    REGNUM,@04                                          0257
*             REGLAST=REGNUM+DEMINLEN-1;                           0258
         LR    REGLAST,REGNUM                                      0258
         ALR   REGLAST,DEMINLEN                                    0258
         BCTR  REGLAST,0                                           0258
*             REGINCR=1;                                           0259
         MVC   REGINCR(4),@CF00050                                 0259
*             BLKINCR=4;                                           0260
         LA    @14,4                                               0260
         ST    @14,BLKINCR                                         0260
*             PERLINE=4;                                           0261
         LR    PERLINE,@14                                         0261
*             CALL FILLIN;                                         0262
         BAL   @14,FILLIN                                          0262
*           END;                                                   0263
*         ELSE                                                     0264
*           GOTO EXITFMTB;          /* INVALID RANGE                 */
*       END;                                                       0265
*EXITCMN:                           /* COMMON EXIT PATH              */
*   RETURN CODE(RETC);              /* COMMON EXIT                   */
@RC00179 DS    0H                                                  0266
@RC00157 DS    0H                                                  0266
EXITCMN  L     @13,4(,@13)                                         0266
         L     @00,@SIZDATD                                        0266
         LR    @01,@11                                             0266
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@10                                             0266
         L     @14,12(,@13)                                        0266
         LM    @00,@12,20(@13)                                     0266
         BR    @14                                                 0266
*EXITFMTB:                          /* ERROR EXIT                    */
*   CALL BLSTB(ZZ2,ESPA,BLK);       /* FORMAT AS HEX STORAGE         */
EXITFMTB ST    R9,@AL00001                                         0267
         L     @14,@PC00001+4                                      0267
         ST    @14,@AL00001+4                                      0267
         L     @14,@PC00001+8                                      0267
         ST    @14,@AL00001+8                                      0267
         L     @08,ZZ2RVTP(,R9)                                    0267
         L     @15,RVTTBP(,@08)                                    0267
         LA    @01,@AL00001                                        0267
         BALR  @14,@15                                             0267
*   RETC=MAX(RF,RETC,ZZZFLAGW);     /* RETURN CODE                   */
         LR    @14,RETC                                            0268
         CR    @14,RF                                              0268
         BNL   *+6
         LR    @14,RF                                              0268
         LA    @08,4                                               0268
         CR    @14,@08                                             0268
         BNL   *+6
         LR    @14,@08                                             0268
         LR    RETC,@14                                            0268
*   GOTO EXITCMN;                   /* COMMON EXIT PATH              */
         B     EXITCMN                                             0269
*FILLIN:                                                           0270
*   PROCEDURE;                                                     0270
FILLIN   STM   @14,@12,@SA00002                                    0270
*   BLKINDEX=1;                                                    0271
*                                                                  0271
         LA    BLKINDEX,1                                          0271
*   /*****************************************************************/
*   /*                                                               */
*   /* DISPLAY REQUESTED REGISTERS                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   DO J1=DEMINLEN TO 1 BY-PERLINE; /* DISPLAY REQUESTED REGISTERS   */
         LR    J1,DEMINLEN                                         0272
         B     @DE00272                                            0272
@DL00272 DS    0H                                                  0273
*     MRBL=LENGTH(MRB);             /* INITIALIZE MESSAGE            */
         LA    @14,81                                              0273
         STH   @14,MRBL                                            0273
*     MRBT='';                                                     0274
         MVI   MRBT,C' '                                           0274
         MVC   MRBT+1(76),MRBT                                     0274
*     IF J1<PERLINE THEN                                           0275
         CR    J1,PERLINE                                          0275
         BNL   @RF00275                                            0275
*       MRBL=MRBL-(PERLINE-J1)*LENGTH(OLT);                        0276
         LR    @04,PERLINE                                         0276
         SLR   @04,J1                                              0276
         MH    @04,@CH01239                                        0276
         SLR   @14,@04                                             0276
         STH   @14,MRBL                                            0276
*     IF ESPADLE=4 THEN                                            0277
*                                                                  0277
@RF00275 L     @14,@PC00001+4                                      0277
         CLC   ESPADLE(4,@14),@CF00047                             0277
         BNE   @RF00277                                            0277
*       /*************************************************************/
*       /*                                                           */
*       /* FULLWORD REGISTER(S)                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0278
*       DO;                         /* FULLWORD REGISTER(S)          */
*         J3=PERLINE;                                              0279
         ST    PERLINE,J3                                          0279
*         BUMP=1;                                                  0280
         MVC   BUMP(4),@CF00050                                    0280
*       END;                                                       0281
*     ELSE                                                         0282
*                                                                  0282
*       /*************************************************************/
*       /*                                                           */
*       /* DOUBLEWORD REGISTER(S)                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0282
*       DO;                         /* DOUBLEWORD REGISTER(S)        */
         B     @RC00277                                            0282
@RF00277 DS    0H                                                  0283
*         J3=PERLINE*2;                                            0283
         LR    @14,PERLINE                                         0283
         ALR   @14,@14                                             0283
         ST    @14,J3                                              0283
*         BUMP=2;                                                  0284
         MVC   BUMP(4),@CF00075                                    0284
*       END;                                                       0285
*                                                                  0285
*     /***************************************************************/
*     /*                                                             */
*     /* BUILD ONE REGISTER DISPLAY LINE                             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0286
*     DO J2=1 TO J3 BY BUMP WHILE REGNUM<=REGLAST;                 0286
@RC00277 LA    J2,1                                                0286
         B     @DE00286                                            0286
@DL00286 CR    REGNUM,REGLAST                                      0286
         BH    @DC00286                                            0286
*       DO;                         /* BLRCNVUC(REGNUM) FROM(UNSIGNED
*                                      FIXED BINARY)TO(CHARACTER)SET(
*                                      OLT1(J2))PATTERN              */
*         CVD(REGNUM,PACKED);       /* UNSIGNED BINARY=>PACKED     0288
*                                      DECIMAL                       */
         CVD   REGNUM,PACKED                                       0288
*         ZONED='40404040402020202020202020202120'X;/* ED PATTERN    */
         MVC   ZONED(16),@CB01178                                  0289
*         ED(ZONED(5:16),PACKED(17:64));/* PACKED DECIMAL=>EBCDIC    */
         ED    ZONED+4(12),PACKED+2                                0290
*         OLT1(J2)=ZONED(17-LENGTH(OLT1(J2)):16);/* EBCDIC RESULT    */
         LR    @14,J2                                              0291
         MH    @14,@CH01239                                        0291
         LA    @04,OLT1-19(@14)                                    0291
         MVC   0(2,@04),ZONED+14                                   0291
*       END;                        /* BLRCNVUC(REGNUM) FROM(UNSIGNED
*                                      FIXED BINARY)TO(CHARACTER)SET(
*                                      OLT1(J2))PATTERN              */
*       OLT2(J2)=REGTYPE;                                          0293
         LA    @04,OLT2-19(@14)                                    0293
         MVC   0(1,@04),REGTYPE                                    0293
*       OLT3(J2)='=';                                              0294
         LA    @04,OLT3-19(@14)                                    0294
         MVI   0(@04),C'='                                         0294
*       CALL FMTX(OLT4(J2));                                       0295
         LA    @14,OLT4-19(@14)                                    0295
         ST    @14,@AL00001                                        0295
         L     @15,FMTXP                                           0295
         LA    @01,@AL00001                                        0295
         BALR  @14,@15                                             0295
*       REGNUM=REGNUM+REGINCR;                                     0296
         AL    REGNUM,REGINCR                                      0296
*       BLKINDEX=BLKINDEX+BLKINCR;                                 0297
         AL    BLKINDEX,BLKINCR                                    0297
*     END;                                                         0298
         AL    J2,BUMP                                             0298
@DE00286 C     J2,J3                                               0298
         BNH   @DL00286                                            0298
@DC00286 DS    0H                                                  0299
*     CALL BLSUPUTA(ZZ2,MRB);       /* TRANSMIT MR                   */
         ST    R9,@AL00001                                         0299
         LA    @14,MRB                                             0299
         ST    @14,@AL00001+4                                      0299
         L     @04,ZZ2BVTP(,R9)                                    0299
         L     @15,BVTPUTAP(,@04)                                  0299
         LA    @01,@AL00001                                        0299
         BALR  @14,@15                                             0299
*   END;                                                           0300
         LCR   @14,PERLINE                                         0300
         ALR   J1,@14                                              0300
@DE00272 LTR   J1,J1                                               0300
         BP    @DL00272                                            0300
*   END FILLIN;                                                    0301
*                                                                  0301
@EL00002 DS    0H                                                  0301
@EF00002 DS    0H                                                  0301
@ER00002 LM    @14,@12,@SA00002                                    0301
         BR    @14                                                 0301
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT AS HEXADECIMAL                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0302
*FMTB:                              /* FORMAT AS HEXADECIMAL         */
*   PROCEDURE(OUTB);                                               0302
FMTB     STM   @14,@12,12(@13)                                     0302
         MVC   @PC00003(4),0(@01)                                  0302
*   DECLARE                                                        0303
*     OUTB CHARACTER(18);           /* FORMATTED OUTPUT AREA         */
*   DO;                             /* BLRCNVXC(BLK(BLKINDEX:BLKINDEX
*                                      +3)) FROM(BS)TO(CHARACTER)SET(
*                                      OUTB(2:9))TR(ZZ1TRHEX)        */
*     CNVCH='0000000000000000'X;                                   0305
         MVC   CNVCH(8),@CB01190                                   0305
*     CNVCH(1:1+(BLKINDEX+3)-(BLKINDEX))=BLK(BLKINDEX:BLKINDEX+3);/*
*                                      LEFT-ALIGN SOURCE IN A      0306
*                                      DOUBLEWORD BUFFER             */
         LA    @14,4                                               0306
         ALR   @14,BLKINDEX                                        0306
         LR    @10,@14                                             0306
         SLR   @10,BLKINDEX                                        0306
         BCTR  @10,0                                               0306
         L     @08,@PC00001+8                                      0306
         LR    @04,@08                                             0306
         ALR   @04,BLKINDEX                                        0306
         BCTR  @04,0                                               0306
         EX    @10,@SM01240                                        0306
*     UNPK(ZONED(1:15),CNVCH);      /* BIT=>ZONED HEXADECIMAL        */
         UNPK  ZONED(15),CNVCH(8)                                  0307
*     ZONED(16:16)=CNVCH(8:8);      /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ZONED+15(1),CNVCH+7                                 0308
*     TR(ZONED,ZZ1TRHEX);           /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @10,ZZ2ZZ1P(,R9)                                    0309
         TR    ZONED(16),ZZ1TRHEX(@10)                             0309
*     OUTB(2:9)=ZONED(1:8);         /* EBCDIC RESULT                 */
         L     @04,@PC00003                                        0310
         MVC   OUTB+1(8,@04),ZONED                                 0310
*   END;                            /* BLRCNVXC(BLK(BLKINDEX:BLKINDEX
*                                      +3)) FROM(BS)TO(CHARACTER)SET(
*                                      OUTB(2:9))TR(ZZ1TRHEX)        */
*   IF ESPADLE=8 THEN                                              0312
         LA    @07,8                                               0312
         L     @06,@PC00001+4                                      0312
         CL    @07,ESPADLE(,@06)                                   0312
         BNE   @RF00312                                            0312
*     DO;                           /* BLRCNVXC(BLK(BLKINDEX+4:BLKIND
*                                      EX+7)) FROM(BS)TO(CHARACTER)SE
*                                      T(OUTB(11:18))TR(ZZ1TRHEX)    */
*       CNVCH='0000000000000000'X;                                 0314
         MVC   CNVCH(8),@CB01190                                   0314
*       CNVCH(1:1+(BLKINDEX+7)-(BLKINDEX+4))=BLK(BLKINDEX+4:BLKINDEX+7)
*           ;                       /* LEFT-ALIGN SOURCE IN A      0315
*                                      DOUBLEWORD BUFFER             */
         ALR   @07,BLKINDEX                                        0315
         SLR   @07,@14                                             0315
         BCTR  @07,0                                               0315
         ALR   @08,BLKINDEX                                        0315
         EX    @07,@SM01242                                        0315
*       UNPK(ZONED(1:15),CNVCH);    /* BIT=>ZONED HEXADECIMAL        */
         UNPK  ZONED(15),CNVCH(8)                                  0316
*       ZONED(16:16)=CNVCH(8:8);    /* FINAL ZONED HEXADECIMAL DIGIT */
         MVC   ZONED+15(1),CNVCH+7                                 0317
*       TR(ZONED,ZZ1TRHEX);         /* ZONED HEXADECIMAL=>EBCDIC     */
         TR    ZONED(16),ZZ1TRHEX(@10)                             0318
*       OUTB(11:18)=ZONED(1:8);     /* EBCDIC RESULT                 */
         MVC   OUTB+10(8,@04),ZONED                                0319
*     END;                          /* BLRCNVXC(BLK(BLKINDEX+4:BLKIND
*                                      EX+7)) FROM(BS)TO(CHARACTER)SE
*                                      T(OUTB(11:18))TR(ZZ1TRHEX)    */
*   END FMTB;                                                      0321
*                                                                  0321
@EL00003 DS    0H                                                  0321
@EF00003 DS    0H                                                  0321
@ER00003 LM    @14,@12,12(@13)                                     0321
         BR    @14                                                 0321
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT AS CHARACTER                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0322
*FMTC:                              /* FORMAT AS CHARACTER           */
*   PROCEDURE(OUTC);                                               0322
FMTC     STM   @14,@12,12(@13)                                     0322
         MVC   @PC00004(4),0(@01)                                  0322
*   DECLARE                                                        0323
*     OUTC CHARACTER(8);            /* FORMATTED OUTPUT AREA         */
*   OUTC(1:ESPADLE)=BLK(BLKINDEX:BLKINDEX+ESPADLE-1);              0324
         L     @14,@PC00004                                        0324
         L     @10,@PC00001+4                                      0324
         L     @10,ESPADLE(,@10)                                   0324
         BCTR  @10,0                                               0324
         L     @08,@PC00001+8                                      0324
         ALR   @08,BLKINDEX                                        0324
         BCTR  @08,0                                               0324
         EX    @10,@SM01244                                        0324
*   TR(OUTC,ZZ1TREBC);              /* BE SURE ITS CHARACTER         */
         L     @10,ZZ2ZZ1P(,R9)                                    0325
         TR    OUTC(8,@14),ZZ1TREBC(@10)                           0325
*   END FMTC;                                                      0326
*                                                                  0326
@EL00004 DS    0H                                                  0326
@EF00004 DS    0H                                                  0326
@ER00004 LM    @14,@12,12(@13)                                     0326
         BR    @14                                                 0326
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT AS SIGNED BINARY                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0327
*FMTF:                              /* FORMAT AS SIGNED BINARY       */
*   PROCEDURE(OUTF);                                               0327
FMTF     STM   @14,@12,@SA00005                                    0327
         MVC   @PC00005(4),0(@01)                                  0327
*   DECLARE                                                        0328
*     OUTF CHARACTER(14);           /* FORMATTED OUTPUT AREA         */
*   DO;                             /* BLRCNVSC(EVAL(ADDR(BLK(BLKINDE
*                                      X:BLKINDEX)))->F4) FROM(SIGNED
*                                      FIXED BINARY)TO(CHARACTER)SET(
*                                      OUTF)REMARK(CONVERT FULLWORD
*                                      SIGNED)OPTIONS(COMMAS)        */
*                                                                  0329
*     /***************************************************************/
*     /*                                                             */
*     /* CONVERT FULLWORD SIGNED                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0330
*     S0000001=EVAL(ADDR(BLK(BLKINDEX:BLKINDEX)))->F4;/* SOURCE    0330
*                                      EXPRESSION                    */
         L     @14,@PC00001+8                                      0330
         BCTR  @14,0                                               0330
         LA    @14,BLK(BLKINDEX,@14)                               0330
         L     S0000001,F4(,@14)                                   0330
*     CVD(S0000001,PACKED);         /* SIGNED BINARY=>PACKED DECIMAL */
         CVD   S0000001,PACKED                                     0331
*     ZONED='404020206B2020206B2020206B202120'X;/* EDMK PATTERN      */
         MVC   ZONED(16),@CB01207                                  0332
*     RESPECIFY                                                    0333
*      (GPR01P) RESTRICTED;                                        0333
*     GPR01P=ADDR(ZONED(16:16));    /* ->DIGIT FORCED SIGNIFICANT    */
         LA    GPR01P,ZONED+15                                     0334
*     GENERATE REFS(PACKED,ZONED) SETS(ZONED,GPR01P)/* PACKED      0335
*                                      DECIMAL=>EBCDIC               */
*         CODE(EDMK  ZONED+1(15),PACKED+2);                        0335
         EDMK  ZONED+1(15),PACKED+2
*     BC(11,L0000003);              /* IF S0000001<0 THEN DO         */
         BC    11,L0000003                                         0336
*     GPR01P=GPR01P-1;              /* ->MINUS SIGN DIGIT            */
         BCTR  GPR01P,0                                            0337
*     GPR01P->I001C='-';            /* INSERT MINUS SIGN             */
         MVI   I001C(GPR01P),C'-'                                  0338
*     ;                             /* END                           */
*L0000003:                          /* ELSE PLUS SIGN IS IMPLICIT    */
*     ;                             /* SIGN INDICATED                */
L0000003 DS    0H                                                  0341
*     RESPECIFY                                                    0341
*      (GPR01P) UNRESTRICTED;                                      0341
*     OUTF=ZONED(17-LENGTH(OUTF):16);/* EBCDIC RESULT                */
         L     @14,@PC00005                                        0342
         MVC   OUTF(14,@14),ZONED+2                                0342
*   END;                            /* BLRCNVSC(EVAL(ADDR(BLK(BLKINDE
*                                      X:BLKINDEX)))->F4) FROM(SIGNED
*                                      FIXED BINARY)TO(CHARACTER)SET(
*                                      OUTF)REMARK(CONVERT FULLWORD
*                                      SIGNED)OPTIONS(COMMAS)        */
*   END FMTF;                                                      0344
*                                                                  0344
@EL00005 DS    0H                                                  0344
@EF00005 DS    0H                                                  0344
@ER00005 LM    @14,@12,@SA00005                                    0344
         BR    @14                                                 0344
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT AS UNSIGNED BINARY                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0345
*FMTY:                              /* FORMAT AS UNSIGNED BINARY     */
*   PROCEDURE(OUTY);                                               0345
FMTY     STM   @14,@12,12(@13)                                     0345
         MVC   @PC00006(4),0(@01)                                  0345
*   DECLARE                                                        0346
*     OUTY CHARACTER(14);           /* FORMATTED OUTPUT AREA         */
*   DO;                             /* BLRCNVUC(EVAL(ADDR(BLK(BLKINDE
*                                      X:BLKINDEX)))->Y4)          0347
*                                      FROM(UNSIGNED FIXED BINARY)TO(
*                                      CHARACTER)SET(OUTY)REMARK(CONV
*                                      ERT UNSIGNED FIXED(32))PATTERN
*                                      OPTIONS(COMMAS,BINARY(32))    */
*                                                                  0347
*     /***************************************************************/
*     /*                                                             */
*     /* CONVERT UNSIGNED FIXED(32)                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0348
*     U0000002=EVAL(ADDR(BLK(BLKINDEX:BLKINDEX)))->Y4;/* SOURCE    0348
*                                      EXPRESSION                    */
         L     @14,@PC00001+8                                      0348
         BCTR  @14,0                                               0348
         LA    @14,BLK(BLKINDEX,@14)                               0348
         L     U0000002,Y4(,@14)                                   0348
*     U0000003=U0000002&'7FFFFFFF'X;/* CVD CAN HANDLE 31 BITS        */
         LR    U0000003,U0000002                                   0349
         N     U0000003,@CF01222                                   0349
*     CVD(U0000003,PACKED);         /* UNSIGNED BINARY=>PACKED     0350
*                                      DECIMAL                       */
         CVD   U0000003,PACKED                                     0350
*     IF U0000002^=U0000003 THEN                                   0351
         CLR   U0000002,U0000003                                   0351
         BE    @RF00351                                            0351
*       AP(PACKED,'02147483648C'X); /* ADD 2**32                     */
         AP    PACKED(8),@CB01224(6)                               0352
*     ZONED='404020206B2020206B2020206B202120'X;/* ED PATTERN        */
@RF00351 MVC   ZONED(16),@CB01207                                  0353
*     ED(ZONED(2:16),PACKED(17:64));/* PACKED DECIMAL=>EBCDIC        */
         ED    ZONED+1(15),PACKED+2                                0354
*     OUTY=ZONED(17-LENGTH(OUTY):16);/* EBCDIC RESULT                */
         L     @14,@PC00006                                        0355
         MVC   OUTY(14,@14),ZONED+2                                0355
*   END;                            /* BLRCNVUC(EVAL(ADDR(BLK(BLKINDE
*                                      X:BLKINDEX)))->Y4)          0356
*                                      FROM(UNSIGNED FIXED BINARY)TO(
*                                      CHARACTER)SET(OUTY)REMARK(CONV
*                                      ERT UNSIGNED FIXED(32))PATTERN
*                                      OPTIONS(COMMAS,BINARY(32))    */
*   END FMTY;                                                      0357
*                                                                  0357
@EL00006 DS    0H                                                  0357
@EF00006 DS    0H                                                  0357
@ER00006 LM    @14,@12,12(@13)                                     0357
         BR    @14                                                 0357
*/*BLSTPEND--DISPLAY FORMATTER                                       */
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0358
*   DECLARE                         /* DATA FOR AHB MACROS           */
*    (SCH0001A,                     /* PROBE INDEX FOR SEARCH        */
*     SCH0001G) UNSIGNED BINARY(32),/* PROBE DISTANCE FOR SEARCH     */
*    (SCH0002A,                     /* PROBE INDEX FOR SEARCH        */
*     SCH0002G) UNSIGNED BINARY(32),/* PROBE DISTANCE FOR SEARCH     */
*     PACKED BIT(64) BOUNDARY(DWORD),/* DATA CONVERSION WORK AREA    */
*     ZONED CHARACTER(16) BOUNDARY(DWORD),/* DATA CONVERSION WORK  0358
*                                      AREA                          */
*     CNVCH CHARACTER(8) BOUNDARY(DWORD),/* DATA CONVERSION WORK AREA
*                                      FOR CHARACTER DATA            */
*     S0000001 SIGNED BINARY(31),   /* DATA CONVERSION EXPRESSION  0358
*                                      HOLDER                        */
*     U0000003 UNSIGNED BINARY(32), /* 32-BIT DATA CONVERSION      0358
*                                      VARIABLE                      */
*     U0000002 UNSIGNED BINARY(31); /* DATA CONVERSION EXPRESSION  0358
*                                      HOLDER                        */
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01P PTR(31) REG(1);                                       0359
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0360
*     I031F FIXED(31) BASED,                                       0360
*     I031P PTR(31) BASED,                                         0360
*     I015F FIXED(15) BASED,                                       0360
*     I015P PTR(15) BASED,                                         0360
*     I008P PTR(8) BASED,                                          0360
*     I001C CHAR(1) BASED;                                         0360
*   GENERATE NODEFS NOREFS DATA;                                   0361
*   END BLSTR                       /* BLRPEND(BLSTR)                */
*                                                                  0362
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*/*%INCLUDE SYSLIB  (BLSRHSD )                                       */
*                                                                  0362
*       ;                                                          0362
@EL00001 L     @13,4(,@13)                                         0362
@EF00001 L     @00,@SIZDATD                                        0362
         LR    @01,@11                                             0362
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0362
         BR    @14                                                 0362
@DATA    DS    0H
@CH01239 DC    H'19'
@SM01240 MVC   CNVCH(0),BLK(@04)
@SM01242 MVC   CNVCH(0),BLK+3(@08)
@SM01244 MVC   OUTC(0,@14),BLK(@08)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@PC00003 DS    1F
@PC00004 DS    1F
@SA00005 DS    15F
@PC00005 DS    1F
@PC00006 DS    1F
@SA00002 DS    15F
@AL00001 DS    3A
BLSTR    CSECT
         DS    0F
@CF00050 DC    F'1'
@CF00075 DC    F'2'
@CF00047 DC    F'4'
@CF00058 DC    F'8'
@CF01222 DC    XL4'7FFFFFFF'
@DATD    DSECT
         DS    0D
REGINCR  DS    F
J3       DS    F
BUMP     DS    F
BLKINCR  DS    F
FMTXP    DS    A
MRB      DS    CL81
         ORG   MRB
MRBL     DS    FL2
@NM00110 DS    BL2
MRBT     DS    CL77
         ORG   MRBT
MRBT0    DS    CL1
MRBT1    DS    CL19
         ORG   MRBT1
MRBT10   DS    CL2
MRBT11   DS    CL1
MRBT12   DS    CL1
MRBT13   DS    CL14
MRBT14   DS    CL1
         ORG   MRBT+20
MRBT2    DS    CL19
         ORG   MRBT2
MRBT20   DS    CL2
MRBT21   DS    CL1
MRBT22   DS    CL1
MRBT23   DS    CL14
MRBT24   DS    CL1
         ORG   MRBT+39
MRBT3    DS    CL19
         ORG   MRBT3
MRBT30   DS    CL2
MRBT31   DS    CL1
MRBT32   DS    CL1
MRBT33   DS    CL14
MRBT34   DS    CL1
         ORG   MRBT+58
MRBT4    DS    CL19
         ORG   MRBT4
MRBT40   DS    CL2
MRBT41   DS    CL1
MRBT42   DS    CL1
MRBT43   DS    CL14
MRBT44   DS    CL1
         ORG   MRB+81
REGTYPE  DS    CL1
         DS    CL2
PACKED   DS    BL8
ZONED    DS    CL16
CNVCH    DS    CL8
BLSTR    CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00078 DC    C'C '
@CC00086 DC    C'H '
@CB01178 DC    X'40404040402020202020202020202120'
@CB01207 DC    X'404020206B2020206B2020206B202120'
@CB01190 DC    X'0000000000000000'
@CB01224 DC    X'02147483648C'
INTYPE   DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'F'
         DC    CL1'L'
         DC    CL1'M'
         DC    CL1'U'
         DC    CL1'Y'
         DS    CL2
FMRTN    DC    AL4(FMTB)
         DC    AL4(FMTB)
         DC    AL4(FMTC)
         DC    AL4(FMTF)
         DC    AL4(FMTB)
         DC    AL4(FMTB)
         DC    AL4(FMTB)
         DC    AL4(FMTY)
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLSTR    CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLSTR+19)/20+7)/8)CL8'BLSTR'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLSTR    CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
U0000003 EQU   @03
U0000002 EQU   @02
S0000001 EQU   @02
SCH0002A EQU   @05
SCH0002G EQU   @02
SCH0001A EQU   @06
SCH0001G EQU   @02
RETC     EQU   @10
PERLINE  EQU   @02
BLKINDEX EQU   @05
J2       EQU   @03
J1       EQU   @10
DEMINLEN EQU   @08
REGLAST  EQU   @07
REGNUM   EQU   @06
CROFF    EQU   @05
GROFF    EQU   @07
FROFF    EQU   @02
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
GPR01P   EQU   @01
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
HSD      EQU   0
ZZ1      EQU   0
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1TRHEX EQU   ZZ1+568
ZZ1TREBC EQU   ZZ1+824
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00025 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUPUTA EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DF    EQU   ZZ6D+92
ZZ6B     EQU   ZZ6+768
BLSTB    EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT03P  EQU   RVT+52
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
F4       EQU   0
Y4       EQU   0
FMTX     EQU   0
I001C    EQU   0
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRESGU EQU   0
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST03   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTC EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
F2       EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
Y1       EQU   0
Y2       EQU   0
Y3       EQU   0
PZ2      EQU   0
ESPA     EQU   0
ESPAAS   EQU   ESPA+60
ESPAAST  EQU   ESPAAS
ESPALAD  EQU   ESPA+76
ESPAD    EQU   ESPA+80
ESPADOF  EQU   ESPAD
ESPADLE  EQU   ESPAD+4
ESPADT   EQU   ESPAD+10
ESPADTY  EQU   ESPADT
ESPADIM  EQU   ESPAD+44
ESPADF   EQU   ESPAD+52
ESPAF    EQU   ESPA+161
ESPAFS   EQU   ESPAF
ESPAFC   EQU   ESPAF+1
ESPAR    EQU   ESPA+180
ESPART   EQU   ESPAR+2
BLK      EQU   0
OUTB     EQU   0
OUTC     EQU   0
OUTF     EQU   0
OUTY     EQU   0
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
HSDH     EQU   HSD
HSDHV    EQU   HSD
HSDHVFPR EQU   HSDHV+120
HSDHVGPR EQU   HSDHV+152
HSDHVCR  EQU   HSDHV+216
HSDHA    EQU   HSD
HSDC     EQU   HSD
HSDCSF   EQU   HSDC+2
HSDCPSA  EQU   HSDC+8
HSDCFPR  EQU   HSDCPSA+352
HSDCGPR  EQU   HSDCPSA+384
HSDCTLR  EQU   HSDCPSA+448
HSDS     EQU   HSD
OLT      EQU   MRBT1
OLT1     EQU   OLT
OLT2     EQU   OLT+2
OLT3     EQU   OLT+3
OLT4     EQU   OLT+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
OLT5     EQU   OLT+18
HSDSC    EQU   HSDS+8
HSDSP    EQU   HSDS+4
HSDSASI  EQU   HSDS+2
HSDSK2   EQU   HSDS+1
HSDSK1   EQU   HSDS
@NM00109 EQU   HSDCPSA+552
HSDCASCO EQU   HSDCPSA+548
HSDCASCN EQU   HSDCPSA+544
HSDCTCBO EQU   HSDCPSA+540
HSDCTCBN EQU   HSDCPSA+536
HSDCLCCR EQU   HSDCPSA+532
HSDCLCCV EQU   HSDCPSA+528
HSDCPCCR EQU   HSDCPSA+524
HSDCPCCV EQU   HSDCPSA+520
HSDCLADD EQU   HSDCPSA+518
HSDCPADD EQU   HSDCPSA+516
HSDCPSID EQU   HSDCPSA+512
HSDCADDR EQU   HSDCPSA+350
@NM00108 EQU   HSDCPSA+268
HSDCPREF EQU   HSDCPSA+264
HSDCLPSW EQU   HSDCPSA+256
@NM00107 EQU   HSDCPSA
HSDCSCPU EQU   HSDC+6
@NM00106 EQU   HSDC+4
@NM00105 EQU   HSDCSF
HSDCSFR  EQU   HSDCSF
HSDCSFI  EQU   HSDCSF
HSDCSFU  EQU   HSDCSF
HSDCCLA  EQU   HSDC+1
HSDCTYPE EQU   HSDC
@NM00104 EQU   HSDHA+132
HSDHACAW EQU   HSDHA+128
HSDHACSW EQU   HSDHA+120
@NM00103 EQU   HSDHA+20
@NM00102 EQU   HSDHA+12
@NM00101 EQU   HSDHA+4
@NM00100 EQU   HSDHA+2
@NM00099 EQU   HSDHA+1
@NM00098 EQU   HSDHA
@NM00097 EQU   HSDHV+292
HSDHVCVT EQU   HSDHV+288
HSDHVPSW EQU   HSDHV+280
@NM00096 EQU   HSDHV+20
@NM00095 EQU   HSDHV+12
@NM00094 EQU   HSDHV+4
@NM00093 EQU   HSDHV+2
@NM00092 EQU   HSDHV+1
@NM00091 EQU   HSDHV
@NM00090 EQU   HSDH+120
HSDHTITL EQU   HSDH+20
HSDHTOD  EQU   HSDH+12
HSDHPROG EQU   HSDH+4
HSDHASI  EQU   HSDH+2
HSDHCLA  EQU   HSDH+1
HSDHTYPE EQU   HSDH
CPPLCBUF EQU   CPPL
ESPA999  EQU   ESPA+694
ESPART1  EQU   ESPART
ESPARL   EQU   ESPAR
@NM00012 EQU   ESPA+168
ESPAABS  EQU   ESPA+164
@NM00011 EQU   ESPAF+2
@NM00010 EQU   ESPAFC
ESPAFCD  EQU   ESPAFC
ESPAFSS  EQU   ESPAFS
ESPAFSX  EQU   ESPAFS
ESPAFSR  EQU   ESPAFS
ESPAFSP  EQU   ESPAFS
ESPAFSA  EQU   ESPAFS
ESPAFSM  EQU   ESPAFS
ESPAFS2  EQU   ESPAFS
ESPAFSC  EQU   ESPAFS
ESPAKEY  EQU   ESPA+160
@NM00009 EQU   ESPA+144
ESPAMAD  EQU   ESPA+140
ESPAD99  EQU   ESPAD+60
@NM00008 EQU   ESPAD+56
@NM00007 EQU   ESPADF
ESPADFA  EQU   ESPADF
ESPADIL  EQU   ESPAD+48
ESPADT9  EQU   ESPADT+34
ESPADTE  EQU   ESPADT+33
ESPADTD  EQU   ESPADT+2
@NM00006 EQU   ESPADT+1
ESPADT0  EQU   ESPADT
ESPADLB  EQU   ESPAD+9
ESPADOB  EQU   ESPAD+8
ESPAD00  EQU   ESPAD
ESPAAS9  EQU   ESPAAS+16
@NM00005 EQU   ESPAAS+12
ESPAAS2  EQU   ESPAAS+8
ESPAAS1  EQU   ESPAAS+4
@NM00004 EQU   ESPAAS+2
ESPAAS0  EQU   ESPAAS
ESPARV1  EQU   ESPA+59
ESPAELK  EQU   ESPA+59
ESPASYM  EQU   ESPA+28
ESPARDX  EQU   ESPA+24
@NM00003 EQU   ESPA+16
@NM00002 EQU   ESPA+8
@NM00001 EQU   ESPA+2
ESPARID  EQU   ESPA
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVTTRP   EQU   RVT+228
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00088 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00087 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00086 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00085 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00084 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00083 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00082 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00081 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00080 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00079 EQU   UPT
@NM00078 EQU   ECT+52
@NM00077 EQU   ECT+48
@NM00076 EQU   ECT+44
@NM00075 EQU   ECTSWS2+1
@NM00074 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00073 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00072 EQU   PSCB+36
@NM00071 EQU   PSCB+32
@NM00070 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00069 EQU   PSCBATR1
@NM00068 EQU   PSCBATR1
@NM00067 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00066 EQU   ZZ2+7288
@NM00065 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00064 EQU   ZZ2ES
@NM00063 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00062 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00061 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00060 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00059 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00058 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00057 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00056 EQU   ZZ2+1504
@NM00055 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00054 EQU   ZZ2+1272
@NM00053 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00052 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00051 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00050 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00049 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00048 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00047 EQU   ZZ2A+224
@NM00046 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00045 EQU   ZZ2AQD+56
@NM00044 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00043 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00042 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00041 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00040 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00039 EQU   ZZ2A+24
@NM00038 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00037 EQU   ZZ2AF+3
ZZ2AFS   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AF$   EQU   ZZ2AF+2
@NM00036 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00035 EQU   ZZ2AF+2
@NM00034 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00033 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00032 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00031 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00030 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00029 EQU   ZZ2+264
@NM00028 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00027 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00026 EQU   @NM00025
ZZ2AMD2  EQU   @NM00025
ZZ2AMD1  EQU   @NM00025
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00024 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00023 EQU   ZZ1+1080
@NM00022 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00021 EQU   ZZ1F+1
@NM00020 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00019 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00018 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00017 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00016 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
ZZ1TLINE EQU   ZZ1+60
@NM00015 EQU   ZZ1+52
ZZ1DMCBP EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00014 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00013 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
@NM00089 EQU   HSD+2
HSDCLA   EQU   HSD+1
HSDTYPE  EQU   HSD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00150 EQU   EXITFMTB
@RF00159 EQU   EXITFMTB
@RF00181 EQU   EXITFMTB
@RF00224 EQU   EXITFMTB
@RF00312 EQU   @EL00003
@ENDDATA EQU   *
         END   BLSTR,(C'PLS0828',0701,78068)
