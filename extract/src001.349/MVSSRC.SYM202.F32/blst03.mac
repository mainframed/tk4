T03      TITLE 'BLST03  --IPCS BASIC HEADER MESSAGE ROUTINE            *
                        '
*/* CHANGE ACTIVITY -------------------------------------------------*/
*/*   THIS MODULE WAS WRITTEN FOR @G57LPLK                           */
*/*------------------------------------------------------------------*/
BLST03   CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'BLST03    78.059'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         BLSUALLS R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(8),0(@01)                                  0002
*   RETC=ZZZFLAGI;                  /* ANTICIPATE NORMAL COMPLETION  */
         SLR   RETC,RETC                                           0139
*   IF                              /* DISPLAY SYMBOL AND/OR REMARK  */
*       (ZZ2AFS='1'B&ESPASYM(1:1)^=' '&ESPASYM(1:2)^='X ')×/* DISPLAY
*                                      SYMBOL                        */
*       (ZZ2AF$='1'B&ESPARL>0) THEN /* DISPLAY REMARK                */
*                                                                  0140
         TM    ZZ2AFS(R9),B'00000001'                              0140
         BNO   @GL00001                                            0140
         L     @14,@PC00001+4                                      0140
         CLI   ESPASYM(@14),C' '                                   0140
         BE    @GL00001                                            0140
         CLC   ESPASYM(2,@14),@CC01058                             0140
         BNE   @RT00140                                            0140
@GL00001 TM    ZZ2AF$(R9),B'00001000'                              0140
         BNO   @RF00140                                            0140
         L     @14,@PC00001+4                                      0140
         CLC   ESPARL(2,@14),@CH00053                              0140
         BNH   @RF00140                                            0140
@RT00140 DS    0H                                                  0141
*     /***************************************************************/
*     /*                                                             */
*     /* DISPLAY SYMBOL AND/OR REMARK--MESSAGE MB                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0141
*     DO;                           /* DISPLAY SYMBOL AND/OR REMARK  */
*       MBO=0;                      /* INITIALIZE MB                 */
         SLR   @14,@14                                             0142
         STH   @14,MBO                                             0142
*       MBT0='0';                                                  0143
         MVI   MBT0,C'0'                                           0143
*       IF ZZ2AFS='1'B&ESPASYM(1:1)^=' '&ESPASYM(1:2)^='X ' THEN   0144
*                                                                  0144
         TM    ZZ2AFS(R9),B'00000001'                              0144
         BNO   @RF00144                                            0144
         L     @14,@PC00001+4                                      0144
         CLI   ESPASYM(@14),C' '                                   0144
         BE    @RF00144                                            0144
         CLC   ESPASYM(2,@14),@CC01058                             0144
         BE    @RF00144                                            0144
*         /***********************************************************/
*         /*                                                         */
*         /* DISPLAY SYMBOL                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0145
*         DO;                       /* DISPLAY SYMBOL                */
*           MBT1(1:LENGTH(ESPASYM))=ESPASYM;                       0146
         MVC   MBT1(31),ESPASYM(@14)                               0146
*           DO J1=LENGTH(ESPASYM)+5 TO 7 BY-1 WHILE(MB(J1:J1)=' ');
         LA    J1,36                                               0147
@DL00147 LA    @14,MB-1(J1)                                        0147
         CLI   0(@14),C' '                                         0147
         BNE   @DC00147                                            0147
*           END;                                                   0148
         BCTR  J1,0                                                0148
         C     J1,@CF00248                                         0148
         BNL   @DL00147                                            0148
@DC00147 DS    0H                                                  0149
*         END;                                                     0149
*       ELSE                                                       0150
*         J1=5;                     /* DISPLAY NO SYMBOL             */
         B     @RC00144                                            0150
@RF00144 LA    J1,5                                                0150
*       IF ESPARL>0 THEN                                           0151
*                                                                  0151
@RC00144 L     @14,@PC00001+4                                      0151
         CLC   ESPARL(2,@14),@CH00053                              0151
         BNH   @RF00151                                            0151
*         /***********************************************************/
*         /*                                                         */
*         /* DISPLAY REMARK                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0152
*         DO;                       /* DISPLAY REMARK                */
*           IF J1>5 THEN                                           0153
*                                                                  0153
         C     J1,@CF00155                                         0153
         BNH   @RF00153                                            0153
*             /*******************************************************/
*             /*                                                     */
*             /* SEPARATE SYMBOL AND REMARK WITH A DASH              */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0154
*             DO;                   /* SEPARATE SYMBOL AND REMARK    */
*               MB(J1+1:J1+3)=' - ';/* DASH BEFORE REMARK TEXT       */
         LA    @14,MB(J1)                                          0155
         MVC   0(3,@14),@CC01060                                   0155
*               J1=J1+3;            /* LENGTH INCLUDING DASH         */
         AL    J1,@CF00158                                         0156
*             END;                                                 0157
*           LEN=ESPARL;             /* LENGTH OF REMAINING TEXT      */
@RF00153 L     @14,@PC00001+4                                      0158
         LH    LEN,ESPARL(,@14)                                    0158
         N     LEN,@CF01081                                        0158
*           OFF=1;                  /* OFFSET WITHIN REMARK TEXT     */
         LA    OFF,1                                               0159
*           J4=MIN(LENGTH(MBT1),ZZ1TLINE)+5;/* LINE LENGTH LIMIT     */
*                                                                  0160
         L     @14,ZZ2ZZ1P(,R9)                                    0160
         L     J4,ZZ1TLINE(,@14)                                   0160
         LA    @14,120                                             0160
         CR    J4,@14                                              0160
         BNH   *+6
         LR    J4,@14                                              0160
         AL    J4,@CF00155                                         0160
*           /*********************************************************/
*           /*                                                       */
*           /* DISPLAY THE REMARK ON ONE OR MORE LINES               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0161
*           DO WHILE(LEN>0);        /* DISPLAY THE REMARK            */
         B     @DE00161                                            0161
@DL00161 DS    0H                                                  0162
*             J2=J4-J1;             /* LENGTH OF REMARK              */
         LR    J2,J4                                               0162
         SLR   J2,J1                                               0162
*             IF J2<LEN THEN                                       0163
*                                                                  0163
         CR    J2,LEN                                              0163
         BNL   @RF00163                                            0163
*               /*****************************************************/
*               /*                                                   */
*               /* TRUNCATE PARTIAL WORD                             */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0164
*               DO;                                                0164
*                 J5=J2-BKSTP;      /* SET MAXIMUM WORD SEACH RANGE  */
         LR    J5,J2                                               0165
         SL    J5,@CF00608                                         0165
*                 DO J2=J2 TO J5 BY-1 WHILE(ESPART(OFF+J2)^=' ');/*
*                                      TRUNCATE PARTIAL WORD         */
         B     @DE00166                                            0166
@DL00166 LR    @14,OFF                                             0166
         ALR   @14,J2                                              0166
         L     @02,@PC00001+4                                      0166
         ALR   @02,@14                                             0166
         CLI   ESPART-1(@02),C' '                                  0166
         BE    @DC00166                                            0166
*                 END;                                             0167
         BCTR  J2,0                                                0167
@DE00166 CR    J2,J5                                               0167
         BNL   @DL00166                                            0167
@DC00166 DS    0H                                                  0168
*                 IF J2=J5-1 THEN   /* NO WORDS FOUND                */
         LR    @14,J5                                              0168
         BCTR  @14,0                                               0168
         CR    J2,@14                                              0168
         BNE   @RF00168                                            0168
*                   J2=J5+BKSTP;    /* SET FOR MAXIMUM LENGTH        */
         LA    J2,10                                               0169
         ALR   J2,J5                                               0169
*                 ELSE                                             0170
*                   ;               /* SEPARATOR FOUND, USE J2 LENGTH*/
@RF00168 DS    0H                                                  0171
*               END;                                               0171
*             ELSE                                                 0172
*               J2=LEN;             /* LENGTH OF REMARK              */
         B     @RC00163                                            0172
@RF00163 LR    J2,LEN                                              0172
*             MB(J1+1:J1+J2)=ESPART(OFF:OFF+J2-1);/* INSERT REMARK 0173
*                                      TEXT                          */
@RC00163 LA    @14,MB(J1)                                          0173
         LR    @08,J2                                              0173
         BCTR  @08,0                                               0173
         L     @02,@PC00001+4                                      0173
         ALR   @02,OFF                                             0173
         EX    @08,@SM01082                                        0173
*             MBL=J1+J2;            /* LENGTH OF MB                  */
         LR    @14,J1                                              0174
         ALR   @14,J2                                              0174
         STH   @14,MBL                                             0174
*             CALL BLSUPUTA(ZZ2,MB);/* TRANSMIT MB                   */
         ST    R9,@AL00001                                         0175
         LA    @14,MB                                              0175
         ST    @14,@AL00001+4                                      0175
         L     @08,ZZ2BVTP(,R9)                                    0175
         L     @15,BVTPUTAP(,@08)                                  0175
         LA    @01,@AL00001                                        0175
         BALR  @14,@15                                             0175
*             RETC=MAX(RETC,RF);    /* RETURN CODE                   */
         CR    RETC,RF                                             0176
         BNL   *+6
         LR    RETC,RF                                             0176
*             IF ZZ2AF$='1'B THEN                                  0177
*                                                                  0177
         TM    ZZ2AF$(R9),B'00001000'                              0177
         BNO   @RF00177                                            0177
*               /*****************************************************/
*               /*                                                   */
*               /* DISPLAY OF REMARK REQUESTED                       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0178
*               DO;                 /* DISPLAY OF REMARK REQUESTED   */
*                 J1=5;             /* LENGTH OF NEXT LINE           */
         LA    J1,5                                                0179
*                 LEN=LEN-J2;       /* LENGTH OF REMAINING TEXT      */
         SLR   LEN,J2                                              0180
*                 OFF=OFF+J2;       /* OFFSET WITHIN REMARK TEXT     */
         ALR   OFF,J2                                              0181
*                 MBT0=' ';         /* SINGLE SPACE AFTER 1ST LINE   */
         MVI   MBT0,C' '                                           0182
*               END;                                               0183
*             ELSE                                                 0184
*               LEN=0;              /* SINGLE DISPLAY LINE           */
         B     @RC00177                                            0184
@RF00177 SLR   LEN,LEN                                             0184
*           END;                                                   0185
@RC00177 DS    0H                                                  0185
@DE00161 LTR   LEN,LEN                                             0185
         BP    @DL00161                                            0185
*         END;                                                     0186
*       ELSE                                                       0187
*                                                                  0187
*         /***********************************************************/
*         /*                                                         */
*         /* NO REMARK TO DISPLAY--DISPLAY SYMBOL ALONE              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0187
*         DO;                       /* NO REMARK TO DISPLAY          */
         B     @RC00151                                            0187
@RF00151 DS    0H                                                  0188
*           MBL=J1;                 /* LENGTH OF MB                  */
         STH   J1,MBL                                              0188
*           CALL BLSUPUTA(ZZ2,MB);  /* TRANSMIT MB                   */
         ST    R9,@AL00001                                         0189
         LA    @14,MB                                              0189
         ST    @14,@AL00001+4                                      0189
         L     @10,ZZ2BVTP(,R9)                                    0189
         L     @15,BVTPUTAP(,@10)                                  0189
         LA    @01,@AL00001                                        0189
         BALR  @14,@15                                             0189
*           RETC=MAX(RETC,RF);      /* RETURN CODE                   */
         CR    RETC,RF                                             0190
         BNL   *+6
         LR    RETC,RF                                             0190
*         END;                                                     0191
*       MLB=MLS;                    /* MESSAGE ML LITERAL TEXT       */
@RC00151 MVC   MLB(24),MLS                                         0192
*       MLBT0=' ';                  /* SINGLE SPACE MESSAGE ML       */
         MVI   MLBT0,C' '                                          0193
*     END;                                                         0194
*   ELSE                                                           0195
*     MLB=MLS;                      /* MESSAGE ML LITERAL TEXT       */
         B     @RC00140                                            0195
@RF00140 MVC   MLB(24),MLS                                         0195
*   IF ZZ2AFQ='1'B×ZZ2AFD='0'B THEN                                0196
*                                                                  0196
@RC00140 TM    ZZ2AFQ(R9),B'00000100'                              0196
         BNZ   @RT00196                                            0196
         TM    ZZ2AFD(R9),B'00000010'                              0196
         BO    @RF00196                                            0196
@RT00196 DS    0H                                                  0197
*     /***************************************************************/
*     /*                                                             */
*     /* DISPLAY REQUEST--A LIST SUBCOMMAND DESCRIBING THE STORAGE   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0197
*     DO;                           /* DISPLAY REQUEST               */
*       OLDN=4;                     /* INITIALIZE OLD                */
         MVC   OLDN(4),@CF00045                                    0198
*       OLDP(1)=ADDR(MLB);                                         0199
         LA    @14,MLB                                             0199
         ST    @14,OLDP                                            0199
*       OLDP(2)=ADDR(MA);                                          0200
         LA    @14,MA                                              0200
         ST    @14,OLDP+4                                          0200
*       OLDP(3)=ADDR(MC);                                          0201
         LA    @14,MC                                              0201
         ST    @14,OLDP+8                                          0201
*       OLDP(4)=ADDR(MD);                                          0202
         LA    @14,MD                                              0202
         ST    @14,OLDP+12                                         0202
*       DO;                         /* BLRCNVPC(ESPALAD) FROM(POINTER
*                                      )TO(CHARACTER)SET(MLBT20)REMAR
*                                      K(LOGICAL ADDRESS)TR(ZZ1TRHEX)*/
*                                                                  0203
*         /***********************************************************/
*         /*                                                         */
*         /* LOGICAL ADDRESS                                         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0204
*         PTRPTR=ESPALAD;           /* SOURCE TO BIT/POINTER       0204
*                                      INTERMEDIATE                  */
         L     @14,@PC00001+4                                      0204
         L     @10,ESPALAD(,@14)                                   0204
         ST    @10,PTRPTR                                          0204
*         UNPK(MLBT20(1:LENGTH(MLBT20)-1),PTRBIT);/* BIT=>ZONED    0205
*                                      HEXADECIMAL                   */
         UNPK  MLBT20(5),PTRBIT(4)                                 0205
*         MLBT20(LENGTH(MLBT20):LENGTH(MLBT20))=PTRBIT(25:32);/*   0206
*                                      FINAL ZONED HEXADECIMAL DIGIT */
         MVC   MLBT20+5(1),PTRBIT+3                                0206
*         TR(MLBT20,ZZ1TRHEX);      /* ZONED HEXADECIMAL=>EBCDIC     */
         L     @10,ZZ2ZZ1P(,R9)                                    0207
         TR    MLBT20(6),ZZ1TRHEX(@10)                             0207
*       END;                        /* BLRCNVPC(ESPALAD) FROM(POINTER
*                                      )TO(CHARACTER)SET(MLBT20)REMAR
*                                      K(LOGICAL ADDRESS)TR(ZZ1TRHEX)*/
*       IF ESPADOF^=0&ESPADTD=DTCOD THEN                           0209
         SLR   @10,@10                                             0209
         L     @08,ESPADOF(,@14)                                   0209
         CR    @08,@10                                             0209
         BE    @RF00209                                            0209
         CLC   ESPADTD(31,@14),DTCOD                               0209
         BNE   @RF00209                                            0209
*         DO;                       /* BLRCNVOC(ESPADOF) FROM(OFFSET)
*                                      TO(CHARACTER)SET(MLBT3)REMARK(
*                                      OFFSET)TR(ZZ1TRHEX)           */
*                                                                  0210
*           /*********************************************************/
*           /*                                                       */
*           /* OFFSET                                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0211
*           IF ESPADOF>=0 THEN                                     0211
*                                                                  0211
         CR    @08,@10                                             0211
         BL    @RF00211                                            0211
*             /*******************************************************/
*             /*                                                     */
*             /* POSITIVE OFFSET                                     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0212
*             DO;                   /* POSITIVE OFFSET               */
*               MLBT3(1:1)='+';     /* POSITIVE OFFSET               */
         MVI   MLBT3,C'+'                                          0213
*               PTRPTR=ESPADOF;     /* POINTER/BIT INTERMEDIATE      */
         ST    @08,PTRPTR                                          0214
*             END;                                                 0215
*           ELSE                                                   0216
*                                                                  0216
*             /*******************************************************/
*             /*                                                     */
*             /* NEGATIVE OFFSET                                     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0216
*             DO;                   /* NEGATIVE OFFSET               */
         B     @RC00211                                            0216
@RF00211 DS    0H                                                  0217
*               MLBT3(1:1)='-';     /* NEGATIVE OFFSET               */
         MVI   MLBT3,C'-'                                          0217
*               IF ESPADOF='80000000'X THEN                        0218
         L     @14,@CF00068                                        0218
         L     @10,@PC00001+4                                      0218
         CL    @14,ESPADOF(,@10)                                   0218
         BNE   @RF00218                                            0218
*                 PTRPTR='80000000'X;/* POINTER/BIT INTERMEDIATE     */
         ST    @14,PTRPTR                                          0219
*               ELSE                                               0220
*                 PTRPTR=-ESPADOF;  /* POINTER/BIT INTERMEDIATE      */
         B     @RC00218                                            0220
@RF00218 L     @14,@PC00001+4                                      0220
         L     @14,ESPADOF(,@14)                                   0220
         LCR   @14,@14                                             0220
         ST    @14,PTRPTR                                          0220
*             END;                                                 0221
@RC00218 DS    0H                                                  0222
*           UNPK(MLBT3(2:LENGTH(MLBT3)-1),PTRBIT);/* BIT=>ZONED    0222
*                                      HEXADECIMAL                   */
@RC00211 UNPK  MLBT3+1(5),PTRBIT(4)                                0222
*           MLBT3(LENGTH(MLBT3):LENGTH(MLBT3))=PTRBIT(25:32);/* FINAL
*                                      ZONED HEXADECIMAL DIGIT       */
         MVC   MLBT3+6(1),PTRBIT+3                                 0223
*           TR(MLBT3(2:LENGTH(MLBT3)),ZZ1TRHEX);/* ZONED           0224
*                                      HEXADECIMAL=>EBCDIC           */
         L     @14,ZZ2ZZ1P(,R9)                                    0224
         TR    MLBT3+1(6),ZZ1TRHEX(@14)                            0224
*         END;                      /* BLRCNVOC(ESPADOF) FROM(OFFSET)
*                                      TO(CHARACTER)SET(MLBT3)REMARK(
*                                      OFFSET)TR(ZZ1TRHEX)           */
*       ELSE                                                       0226
*         MLBL=LENGTH(MLB)-LENGTH(MLBT3);/* MESSAGE LENGTH           */
         B     @RC00209                                            0226
@RF00209 MVC   MLBL(2),@CH01079                                    0226
*       J3=MLBL-4;                  /* LENGTH OF MLBT                */
@RC00209 LH    J3,MLBL                                             0227
         N     J3,@CF01081                                         0227
         SL    J3,@CF00045                                         0227
*       CALL BLSRMSGA(ZZ2,MA,ESPAAS);/* DESCRIBE ADDRESS SPACE       */
         ST    R9,@AL00001                                         0228
         LA    @14,MA                                              0228
         ST    @14,@AL00001+4                                      0228
         L     @14,@PC00001+4                                      0228
         LA    @14,ESPAAS(,@14)                                    0228
         ST    @14,@AL00001+8                                      0228
         L     @10,ZZ2RVTP(,R9)                                    0228
         L     @15,RVTMSGAP(,@10)                                  0228
         LA    @01,@AL00001                                        0228
         BALR  @14,@15                                             0228
*       RETC=MAX(RETC,RF);          /* RETURN CODE                   */
         CR    RETC,RF                                             0229
         BNL   *+6
         LR    RETC,RF                                             0229
*       MAO=J3;                     /* TEXT INSERTION OFFSET         */
         STH   J3,MAO                                              0230
*       CALL BLSRMSGB(ZZ2,MC,ESPAD);/* DESCRIBE STORAGE ATTRIBUTES   */
         ST    R9,@AL00001                                         0231
         LA    @14,MC                                              0231
         ST    @14,@AL00001+4                                      0231
         L     @14,@PC00001+4                                      0231
         LA    @14,ESPAD(,@14)                                     0231
         ST    @14,@AL00001+8                                      0231
         L     @10,ZZ2RVTP(,R9)                                    0231
         L     @15,RVTMSGBP(,@10)                                  0231
         LA    @01,@AL00001                                        0231
         BALR  @14,@15                                             0231
*       RETC=MAX(RETC,RF);          /* RETURN CODE                   */
         CR    RETC,RF                                             0232
         BNL   *+6
         LR    RETC,RF                                             0232
*       MCO=J3;                     /* TEXT INSERTION OFFSET         */
         STH   J3,MCO                                              0233
*       CALL BLSRMSGD(ZZ2,MD,ESPADT);/* DESCRIBE DATA TYPE           */
         ST    R9,@AL00001                                         0234
         LA    @14,MD                                              0234
         ST    @14,@AL00001+4                                      0234
         L     @14,@PC00001+4                                      0234
         LA    @14,ESPADT(,@14)                                    0234
         ST    @14,@AL00001+8                                      0234
         L     @10,ZZ2RVTP(,R9)                                    0234
         L     @15,RVTMSGDP(,@10)                                  0234
         LA    @01,@AL00001                                        0234
         BALR  @14,@15                                             0234
*       RETC=MAX(RETC,RF);          /* RETURN CODE                   */
         CR    RETC,RF                                             0235
         BNL   *+6
         LR    RETC,RF                                             0235
*       MDO=J3;                     /* TEXT INSERTION OFFSET         */
         STH   J3,MDO                                              0236
*       CALL BLSUPUTC(ZZ2,OLD);     /* TRANSMIT MESSAGE              */
         ST    R9,@AL00001                                         0237
         LA    @14,OLD                                             0237
         ST    @14,@AL00001+4                                      0237
         L     @10,ZZ2BVTP(,R9)                                    0237
         L     @15,BVTPUTCP(,@10)                                  0237
         LA    @01,@AL00001                                        0237
         BALR  @14,@15                                             0237
*       RETC=MAX(RETC,RF);          /* RETURN CODE                   */
         CR    RETC,RF                                             0238
         BNL   *+6
         LR    RETC,RF                                             0238
*     END;                                                         0239
*   RETURN CODE(RETC);                                             0240
*                                                                  0240
@RF00196 L     @13,4(,@13)                                         0240
         L     @00,@SIZDATD                                        0240
         LR    @01,@11                                             0240
         BLSUFRES R,LV=(0),A=(1)
         LR    @15,@04                                             0240
         L     @14,12(,@13)                                        0240
         LM    @00,@12,20(@13)                                     0240
         BR    @14                                                 0240
*/*BLSTPEND--DISPLAY FORMATTER                                       */
*/*BLSRPEND--DEBUGGING MODULE                                        */
*/*BLSUPEND--MVS IPCS MODULE                                         */
*                                                                  0241
*   DECLARE                         /* DATA FOR AHB MACROS           */
*     PTRBIT BIT(32) BOUNDARY(WORD),/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*     PTRPTR POINTER DEFINED(PTRBIT);/* DATA CONVERSION WORK AREA FOR
*                                      POINTER DATA                  */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0242
*     I031F FIXED(31) BASED,                                       0242
*     I031P PTR(31) BASED,                                         0242
*     I015F FIXED(15) BASED,                                       0242
*     I015P PTR(15) BASED,                                         0242
*     I008P PTR(8) BASED,                                          0242
*     I001C CHAR(1) BASED;                                         0242
*   GENERATE NODEFS NOREFS DATA;                                   0243
*   END BLST03                      /* BLRPEND(BLST03)               */
*                                                                  0244
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (BLSRZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLSUZZZ )                                       */
*/*%INCLUDE SYSLIB  (BLRFULL )                                       */
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */
*/*%INCLUDE SYSLIB  (IKJPSCB )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (BLSUSERV)                                       */
*/*%INCLUDE SYSLIB  (BLRSERV )                                       */
*/*%INCLUDE SYSLIB  (BLRSERVD)                                       */
*/*%INCLUDE SYSLIB  (BLSRSERV)                                       */
*                                                                  0244
*       ;                                                          0244
@EL00001 L     @13,4(,@13)                                         0244
@EF00001 L     @00,@SIZDATD                                        0244
         LR    @01,@11                                             0244
         BLSUFRES R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0244
         BR    @14                                                 0244
@DATA    DS    0H
@CH00053 DC    H'0'
@CH01079 DC    H'17'
@SM01082 MVC   0(0,@14),ESPART-1(@02)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@AL00001 DS    3A
BLST03   CSECT
         DS    0F
@CF00158 DC    F'3'
@CF00045 DC    F'4'
@CF00155 DC    F'5'
@CF00248 DC    F'7'
@CF00608 DC    F'10'
@CF00068 DC    XL4'80000000'
@CF01081 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
OLD      DS    CL20
         ORG   OLD
OLDN     DS    FL4
OLDP     DS    4A
         ORG   OLD+20
MB       DS    CL125
         ORG   MB
MBL      DS    FL2
MBO      DS    FL2
MBT      DS    CL121
         ORG   MBT
MBT0     DS    CL1
MBT1     DS    CL120
         ORG   MB+125
         DS    CL1
MA       DS    CL124
         ORG   MA
MAL      DS    FL2
MAO      DS    FL2
MAT      DS    CL120
         ORG   MAT
MAT1     DS    CL120
         ORG   MA+124
MC       DS    CL124
         ORG   MC
MCL      DS    FL2
MCO      DS    FL2
MCT      DS    CL120
         ORG   MCT
MCT1     DS    CL120
         ORG   MC+124
MD       DS    CL124
         ORG   MD
MDL      DS    FL2
MDO      DS    FL2
MDT      DS    CL120
         ORG   MDT
MDT1     DS    CL120
         ORG   MD+124
         DS    CL2
PTRBIT   DS    BL4
BLST03   CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC01060 DC    C' - '
@CC01058 DC    C'X '
         DS    CL1
DTCO     DS    CL34
         ORG   DTCO
DTCO0    DS    0C
DTCOY    DC    CL1'U'
@NM00089 DC    X'00'
DTCOD    DC    CL31'                               '
DTCOE    DC    CL1' '
DTCO9    DS    0C
         ORG   DTCO+34
MLS      DS    CL24
         ORG   MLS
MLSL     DC    AL2(24)
@NM00090 DC    X'0000'
MLST     DS    CL20
         ORG   MLST
MLST0    DC    CL1'0'
MLST1    DC    CL5'LIST '
MLST2    DS    CL7
         ORG   MLST2
MLST20   DC    CL6'000000'
MLST21   DC    CL1'.'
         ORG   MLST+13
MLST3    DC    CL7'+000000'
         ORG   MLS+24
@DATD    DSECT
         SPACE 2
***********************************************************************
* THE FOLLOWING AREA, BLRPATCH, IS RESERVED FOR PATCH APPLICATION     *
* TO OBTAIN PATCH ROOM IN THE @DATD AUTOMATIC STORAGE AREA, MODIFY    *
* CONSTANT @SIZDATD TO REFLECT THE DESIRED @DATD SIZE                 *
***********************************************************************
         SPACE
BLST03   CSECT
         ORG
         DS    0D
BLRPATCH DC    CL8'ZAPAREA',(((*-BLST03+19)/20+7)/8)CL8'BLST03'
@DATD    DSECT
         DS    0H
@DATD    DSECT
         SPACE 2
***********************************************************************
* ALIGN END OF DATA ON A DOUBLEWORD BOUNDARY                          *
***********************************************************************
         SPACE
         DS    0D
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
BLST03   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETC     EQU   @04
OFF      EQU   @07
LEN      EQU   @06
J5       EQU   @08
J4       EQU   @10
J3       EQU   @03
J2       EQU   @03
J1       EQU   @05
R9       EQU   @09
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
RB       EQU   @11
RD       EQU   @13
RE       EQU   @14
RF       EQU   @15
RA       EQU   @10
RC       EQU   @12
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
ZZ1      EQU   0
ZZ1TLINE EQU   ZZ1+60
ZZ1ATTN  EQU   ZZ1+360
ZZ1EVE   EQU   ZZ1ATTN+4
ZZ1F     EQU   ZZ1+368
ZZ1TRHEX EQU   ZZ1+568
ZZ1N     EQU   ZZ1+1116
ZZ2      EQU   0
ZZ2AMD   EQU   ZZ2
@NM00025 EQU   ZZ2AMD+7
ZZ2PRT   EQU   ZZ2+138
ZZ2PRTT  EQU   ZZ2PRT+4
ZZ2PRTT1 EQU   ZZ2PRTT+1
ZZ2A     EQU   ZZ2+272
ZZ2AF    EQU   ZZ2A+16
ZZ2AF$   EQU   ZZ2AF+2
ZZ2AFQ   EQU   ZZ2AF+2
ZZ2AFD   EQU   ZZ2AF+2
ZZ2AFS   EQU   ZZ2AF+2
ZZ2APID  EQU   ZZ2A+64
ZZ2AD    EQU   ZZ2A+74
ZZ2ADD   EQU   ZZ2AD
ZZ2ADDT  EQU   ZZ2ADD+2
ZZ2ADM   EQU   ZZ2AD+46
ZZ2ADMT  EQU   ZZ2ADM+2
ZZ2ADP   EQU   ZZ2AD+56
ZZ2ADPT  EQU   ZZ2ADP+2
ZZ2AZZ6P EQU   ZZ2A+140
ZZ2AQAS  EQU   ZZ2A+144
ZZ2AQD   EQU   ZZ2A+160
ZZ2AQDT  EQU   ZZ2AQD+10
ZZ2AQDF  EQU   ZZ2AQD+52
ZZ2STG   EQU   ZZ2+960
ZZ2ALLOP EQU   ZZ2+992
ZZ2FREEP EQU   ZZ2+996
ZZ2FF19P EQU   ZZ2+1000
ZZ2FRE1P EQU   ZZ2+1004
ZZ2FF18P EQU   ZZ2+1008
ZZ2DYNAP EQU   ZZ2+1012
ZZ2ZZ2CP EQU   ZZ2+1016
ZZ2ZZ2DP EQU   ZZ2+1020
ZZ2STAIP EQU   ZZ2+1024
ZZ2FF02P EQU   ZZ2+1028
ZZ2GETLP EQU   ZZ2+1032
ZZ2PARSP EQU   ZZ2+1036
ZZ2PTGTP EQU   ZZ2+1040
ZZ2PUTLP EQU   ZZ2+1044
ZZ2SCANP EQU   ZZ2+1048
ZZ2STCKP EQU   ZZ2+1052
ZZ2TRMOP EQU   ZZ2+1064
ZZ2TRMVP EQU   ZZ2+1068
ZZ2PUTNP EQU   ZZ2+1084
ZZ2TRMNP EQU   ZZ2+1088
ZZ2ZZ1P  EQU   ZZ2+1264
ZZ2BVTP  EQU   ZZ2+1280
ZZ2RVTP  EQU   ZZ2+1284
ZZ2CPPL  EQU   ZZ2+1292
ZZ2CPPLC EQU   ZZ2CPPL
ZZ2ITR   EQU   ZZ2+2840
ZZ2ITRE  EQU   ZZ2ITR+16
ZZ2ITSE  EQU   ZZ2+2864
ZZ2ES    EQU   ZZ2+2872
ZZ2AMDX  EQU   ZZ2+7160
ZZ2AXO   EQU   ZZ2+7934
ZZ2AXOT  EQU   ZZ2AXO+2
CMD      EQU   0
CMDT     EQU   CMD+4
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ECT      EQU   0
ECTSWS   EQU   ECT+28
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
UPT      EQU   0
UPTSWS   EQU   UPT+12
SA       EQU   0
SA1      EQU   SA
SAR      EQU   SA+12
SAR1     EQU   SAR+12
BLSUPUTA EQU   0
BLSUPUTC EQU   0
BVT      EQU   0
BVTPUTLP EQU   BVT+4
BVTPUTOP EQU   BVT+12
BVTPUTTP EQU   BVT+16
BVTPUTVP EQU   BVT+20
BVTPUTAP EQU   BVT+24
BVTPRTTP EQU   BVT+28
BVTPRTAP EQU   BVT+32
BVTPUTDP EQU   BVT+36
BVTMONP  EQU   BVT+40
BVTMON2P EQU   BVT+44
BVTVSARP EQU   BVT+48
BVTVSENP EQU   BVT+64
BVTVSERP EQU   BVT+68
BVTVSGEP EQU   BVT+72
BVTVSGUP EQU   BVT+76
BVTVSPOP EQU   BVT+80
BVTVSPUP EQU   BVT+84
BVTMPKNP EQU   BVT+104
BVTMONLP EQU   BVT+108
BVTPUTCP EQU   BVT+132
BVTMPK1P EQU   BVT+136
BVTZZ2RP EQU   BVT+140
BVTPGMRP EQU   BVT+144
BVTMONAP EQU   BVT+148
BVTBLDDP EQU   BVT+152
BVTBLDLP EQU   BVT+156
BVTPGMCP EQU   BVT+160
BVTPGMDP EQU   BVT+164
BVTPGMLP EQU   BVT+168
BVTMONCP EQU   BVT+180
BVTMONDP EQU   BVT+184
BVTMONTP EQU   BVT+188
BVTPARIP EQU   BVT+192
BVTPARUP EQU   BVT+196
BVTPRTNP EQU   BVT+204
BVTVSCRP EQU   BVT+208
BVTVSMRP EQU   BVT+212
BVTMONXP EQU   BVT+216
BVTTRMAP EQU   BVT+228
ZZ6      EQU   0
ZZ6D     EQU   ZZ6+128
ZZ6DD    EQU   ZZ6D+8
ZZ6DDT   EQU   ZZ6DD+4
ZZ6DQA   EQU   ZZ6D+68
ZZ6DF    EQU   ZZ6D+92
ZZ6B     EQU   ZZ6+768
BLSRMSGA EQU   0
BLSRMSGB EQU   0
BLSRMSGD EQU   0
RVT      EQU   0
RVTADDRP EQU   RVT
RVTT01P  EQU   RVT+4
RVTTAP   EQU   RVT+8
RVTTBP   EQU   RVT+12
RVTTCP   EQU   RVT+16
RVTTFP   EQU   RVT+24
RVTTYP   EQU   RVT+40
RVTT02P  EQU   RVT+48
RVTT04P  EQU   RVT+56
RVTACCLP EQU   RVT+60
RVTRACCP EQU   RVT+64
RVTTLP   EQU   RVT+68
RVTTMP   EQU   RVT+72
RVTTUP   EQU   RVT+80
RVTESGEP EQU   RVT+84
RVTESGUP EQU   RVT+88
RVTESARP EQU   RVT+92
RVTRAARP EQU   RVT+96
RVTRAGEP EQU   RVT+100
RVTADDPP EQU   RVT+104
RVTACCQP EQU   RVT+108
RVTSAGUP EQU   RVT+124
RVTSAGEP EQU   RVT+128
RVTESCKP EQU   RVT+132
RVTMSGAP EQU   RVT+136
RVTMSGDP EQU   RVT+140
RVTADDTP EQU   RVT+160
RVTADDUP EQU   RVT+164
RVTADD1P EQU   RVT+176
RVTADD2P EQU   RVT+180
RVTRSAGP EQU   RVT+184
RVTMSGBP EQU   RVT+188
RVTADDSP EQU   RVT+192
RVTADD3P EQU   RVT+196
RVTT05P  EQU   RVT+200
RVTPADSP EQU   RVT+204
RVTTRP   EQU   RVT+228
RVTADD4P EQU   RVT+232
RVTSAPCP EQU   RVT+236
RVTSAARP EQU   RVT+240
RVTSAGNP EQU   RVT+244
RVTT06P  EQU   RVT+248
RVTSAGCP EQU   RVT+252
RVTSAGQP EQU   RVT+256
RVTESGCP EQU   RVT+260
RVTESGQP EQU   RVT+264
RVTDUCKP EQU   RVT+276
RVTDUCCP EQU   RVT+280
BLSRACC  EQU   0
BLSRACCL EQU   0
BLSRACCQ EQU   0
BLSRADDP EQU   0
BLSRADDR EQU   0
BLSRADDS EQU   0
BLSRADDT EQU   0
BLSRADDU EQU   0
BLSRADD1 EQU   0
BLSRADD2 EQU   0
BLSRADD3 EQU   0
BLSRADD4 EQU   0
BLSRDUCC EQU   0
BLSRDUCK EQU   0
BLSRESAR EQU   0
BLSRESCK EQU   0
BLSRESGC EQU   0
BLSRESGE EQU   0
BLSRESGQ EQU   0
BLSRESGU EQU   0
BLSRPADS EQU   0
BLSRRAAR EQU   0
BLSRRAGE EQU   0
BLSRSAAR EQU   0
BLSRSAG  EQU   0
BLSRSAGC EQU   0
BLSRSAGE EQU   0
BLSRSAGN EQU   0
BLSRSAGQ EQU   0
BLSRSAGU EQU   0
BLSRSAPC EQU   0
BLSTA    EQU   0
BLSTB    EQU   0
BLSTC    EQU   0
BLSTF    EQU   0
BLSTL    EQU   0
BLSTM    EQU   0
BLSTR    EQU   0
BLSTU    EQU   0
BLSTY    EQU   0
BLST01   EQU   0
BLST02   EQU   0
BLST04   EQU   0
BLST05   EQU   0
BLST06   EQU   0
BLSUALLO EQU   0
BLSUBLDD EQU   0
BLSUBLDL EQU   0
BLSUDYNA EQU   0
BLSUFREE EQU   0
BLSUFRE1 EQU   0
BLSUMON  EQU   0
BLSUMONA EQU   0
BLSUMONC EQU   0
BLSUMOND EQU   0
BLSUMONL EQU   0
BLSUMONT EQU   0
BLSUMONX EQU   0
BLSUMON2 EQU   0
BLSUMPKN EQU   0
BLSUMPK1 EQU   0
BLSUPARI EQU   0
BLSUPARU EQU   0
BLSUPGMC EQU   0
BLSUPGMD EQU   0
BLSUPGML EQU   0
BLSUPGMR EQU   0
BLSUPRTA EQU   0
BLSUPRTN EQU   0
BLSUPRTT EQU   0
BLSUPUTD EQU   0
BLSUPUTL EQU   0
BLSUPUTN EQU   0
BLSUPUTO EQU   0
BLSUPUTT EQU   0
BLSUPUTV EQU   0
BLSUSTAI EQU   0
BLSUTRMA EQU   0
BLSUTRMN EQU   0
BLSUTRMO EQU   0
BLSUTRMV EQU   0
BLSUVSAR EQU   0
BLSUVSCR EQU   0
BLSUVSEN EQU   0
BLSUVSER EQU   0
BLSUVSGE EQU   0
BLSUVSGU EQU   0
BLSUVSMR EQU   0
BLSUVSPO EQU   0
BLSUVSPU EQU   0
BLSUZZ2C EQU   0
BLSUZZ2D EQU   0
BLSUZZ2R EQU   0
IKJEFF02 EQU   0
IKJEFF18 EQU   0
IKJEFF19 EQU   0
IKJGETL  EQU   0
IKJPARS  EQU   0
IKJPTGT  EQU   0
IKJPUTL  EQU   0
IKJSCAN  EQU   0
IKJSTCK  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PZ2      EQU   0
ESPA     EQU   0
ESPASYM  EQU   ESPA+28
ESPAAS   EQU   ESPA+60
ESPALAD  EQU   ESPA+76
ESPAD    EQU   ESPA+80
ESPADOF  EQU   ESPAD
ESPADT   EQU   ESPAD+10
ESPADTD  EQU   ESPADT+2
ESPADF   EQU   ESPAD+52
ESPAF    EQU   ESPA+161
ESPAFS   EQU   ESPAF
ESPAFC   EQU   ESPAF+1
ESPAR    EQU   ESPA+180
ESPARL   EQU   ESPAR
ESPART   EQU   ESPAR+2
CPPL     EQU   ZZ2CPPL
CPPLUPT  EQU   CPPL+4
CPPLPSCB EQU   CPPL+8
CPPLECT  EQU   CPPL+12
MLB      EQU   MB
MLBL     EQU   MLB
MLBT     EQU   MLB+4
MLBT0    EQU   MLBT
MLBT2    EQU   MLBT+6
MLBT20   EQU   MLBT2
MLBT3    EQU   MLBT+13
PTRPTR   EQU   PTRBIT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
MLBT21   EQU   MLBT2+6
MLBT1    EQU   MLBT+1
@NM00091 EQU   MLB+2
CPPLCBUF EQU   CPPL
ESPA999  EQU   ESPA+694
ESPART1  EQU   ESPART
@NM00012 EQU   ESPA+168
ESPAABS  EQU   ESPA+164
@NM00011 EQU   ESPAF+2
@NM00010 EQU   ESPAFC
ESPAFCD  EQU   ESPAFC
ESPAFSS  EQU   ESPAFS
ESPAFSX  EQU   ESPAFS
ESPAFSR  EQU   ESPAFS
ESPAFSP  EQU   ESPAFS
ESPAFSA  EQU   ESPAFS
ESPAFSM  EQU   ESPAFS
ESPAFS2  EQU   ESPAFS
ESPAFSC  EQU   ESPAFS
ESPAKEY  EQU   ESPA+160
@NM00009 EQU   ESPA+144
ESPAMAD  EQU   ESPA+140
ESPAD99  EQU   ESPAD+60
@NM00008 EQU   ESPAD+56
@NM00007 EQU   ESPADF
ESPADFA  EQU   ESPADF
ESPADIL  EQU   ESPAD+48
ESPADIM  EQU   ESPAD+44
ESPADT9  EQU   ESPADT+34
ESPADTE  EQU   ESPADT+33
@NM00006 EQU   ESPADT+1
ESPADTY  EQU   ESPADT
ESPADT0  EQU   ESPADT
ESPADLB  EQU   ESPAD+9
ESPADOB  EQU   ESPAD+8
ESPADLE  EQU   ESPAD+4
ESPAD00  EQU   ESPAD
ESPAAS9  EQU   ESPAAS+16
@NM00005 EQU   ESPAAS+12
ESPAAS2  EQU   ESPAAS+8
ESPAAS1  EQU   ESPAAS+4
@NM00004 EQU   ESPAAS+2
ESPAAST  EQU   ESPAAS
ESPAAS0  EQU   ESPAAS
ESPARV1  EQU   ESPA+59
ESPAELK  EQU   ESPA+59
ESPARDX  EQU   ESPA+24
@NM00003 EQU   ESPA+16
@NM00002 EQU   ESPA+8
@NM00001 EQU   ESPA+2
ESPARID  EQU   ESPA
RVT99999 EQU   RVT+384
RVT0096P EQU   RVT+380
RVT0095P EQU   RVT+376
RVT0094P EQU   RVT+372
RVT0093P EQU   RVT+368
RVT0092P EQU   RVT+364
RVT0091P EQU   RVT+360
RVT0090P EQU   RVT+356
RVT0089P EQU   RVT+352
RVT0088P EQU   RVT+348
RVT0087P EQU   RVT+344
RVT0086P EQU   RVT+340
RVT0085P EQU   RVT+336
RVT0084P EQU   RVT+332
RVT0083P EQU   RVT+328
RVT0082P EQU   RVT+324
RVT0081P EQU   RVT+320
RVT0080P EQU   RVT+316
RVT0079P EQU   RVT+312
RVT0078P EQU   RVT+308
RVT0077P EQU   RVT+304
RVT0076P EQU   RVT+300
RVT0075P EQU   RVT+296
RVT0074P EQU   RVT+292
RVT0073P EQU   RVT+288
RVT0072P EQU   RVT+284
RVTDTUTP EQU   RVT+272
RVTDTMTP EQU   RVT+268
RVT0057P EQU   RVT+224
RVT0056P EQU   RVT+220
RVT0055P EQU   RVT+216
RVT0054P EQU   RVT+212
RVT0053P EQU   RVT+208
RVT0044P EQU   RVT+172
RVT0043P EQU   RVT+168
RVT0040P EQU   RVT+156
RVT0039P EQU   RVT+152
RVT0038P EQU   RVT+148
RVT0037P EQU   RVT+144
RVT0031P EQU   RVT+120
RVT0030P EQU   RVT+116
RVT0029P EQU   RVT+112
RVT0020P EQU   RVT+76
RVTT03P  EQU   RVT+52
RVT0012P EQU   RVT+44
RVT0010P EQU   RVT+36
RVT0009P EQU   RVT+32
RVT0008P EQU   RVT+28
RVT0006P EQU   RVT+20
ZZ69999  EQU   ZZ6+1792
ZZ6BRB   EQU   ZZ6B+12
ZZ6BRC   EQU   ZZ6B+8
@NM00088 EQU   ZZ6B+6
ZZ6BFL   EQU   ZZ6B+4
ZZ6BDA   EQU   ZZ6B
@NM00087 EQU   ZZ6+540
ZZ6BUFI  EQU   ZZ6+536
ZZ6BUFP  EQU   ZZ6+532
ZZ6FILE  EQU   ZZ6+524
ZZ6BUFB  EQU   ZZ6+520
ZZ6BUFL  EQU   ZZ6+518
ZZ6BUFN  EQU   ZZ6+516
ZZ6ZZ6P  EQU   ZZ6+512
@NM00086 EQU   ZZ6+256
ZZ6D999  EQU   ZZ6D+128
@NM00085 EQU   ZZ6D+116
ZZ6DCAP  EQU   ZZ6D+112
ZZ6DPRP  EQU   ZZ6D+108
ZZ6DDA2  EQU   ZZ6D+104
ZZ6DDA1  EQU   ZZ6D+100
@NM00084 EQU   ZZ6DF
ZZ6DFSU  EQU   ZZ6DF
ZZ6DFST  EQU   ZZ6DF
ZZ6DFAB  EQU   ZZ6DF
ZZ6DFMP  EQU   ZZ6DF
ZZ6DFDU  EQU   ZZ6DF
ZZ6DFBS  EQU   ZZ6DF
ZZ6DQ2   EQU   ZZ6D+88
ZZ6DQ1   EQU   ZZ6D+84
ZZ6DQA9  EQU   ZZ6DQA+16
@NM00083 EQU   ZZ6DQA+12
ZZ6DQA2  EQU   ZZ6DQA+8
ZZ6DQA1  EQU   ZZ6DQA+4
@NM00082 EQU   ZZ6DQA+2
ZZ6DQAT  EQU   ZZ6DQA
ZZ6DQA0  EQU   ZZ6DQA
ZZ6DRDX  EQU   ZZ6D+64
ZZ6DELK  EQU   ZZ6D+64
ZZ6DMEM  EQU   ZZ6D+56
ZZ6DDT1  EQU   ZZ6DDT
ZZ6DDO   EQU   ZZ6DD+2
ZZ6DDL   EQU   ZZ6DD
@NM00081 EQU   ZZ6D+2
ZZ6DRID  EQU   ZZ6D
ZZ6RDCB  EQU   ZZ6
ZZ60000  EQU   ZZ6
BVT99999 EQU   BVT+256
BVT0064P EQU   BVT+252
BVT0063P EQU   BVT+248
BVT0062P EQU   BVT+244
BVT0061P EQU   BVT+240
BVT0060P EQU   BVT+236
BVT0059P EQU   BVT+232
BVT0057P EQU   BVT+224
BVT0056P EQU   BVT+220
BVTSTBLP EQU   BVT+200
BVT0045P EQU   BVT+176
BVT0044P EQU   BVT+172
BVT0033P EQU   BVT+128
BVT0032P EQU   BVT+124
BVT0031P EQU   BVT+120
BVT0030P EQU   BVT+116
BVT0029P EQU   BVT+112
BVT0026P EQU   BVT+100
BVT0025P EQU   BVT+96
BVT0024P EQU   BVT+92
BVT0023P EQU   BVT+88
BVT0016P EQU   BVT+60
BVT0015P EQU   BVT+56
BVT0014P EQU   BVT+52
BVT0003P EQU   BVT+8
BVT0001P EQU   BVT
SA99     EQU   SA+72
SARC     EQU   SAR+56
SARB     EQU   SAR+52
SARA     EQU   SAR+48
SAR9     EQU   SAR+44
SAR8     EQU   SAR+40
SAR7     EQU   SAR+36
SAR6     EQU   SAR+32
SAR5     EQU   SAR+28
SAR4     EQU   SAR+24
SAR3     EQU   SAR+20
SAR2     EQU   SAR+16
SAR0     EQU   SAR+8
SARF     EQU   SAR+4
SARE     EQU   SAR
SAFWD    EQU   SA+8
SABAK    EQU   SA+4
SA1L     EQU   SA1+1
SA1P     EQU   SA1
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00080 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00079 EQU   UPT
@NM00078 EQU   ECT+52
@NM00077 EQU   ECT+48
@NM00076 EQU   ECT+44
@NM00075 EQU   ECTSWS2+1
@NM00074 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00073 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTIOWA  EQU   ECT+4
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00072 EQU   PSCB+36
@NM00071 EQU   PSCB+32
@NM00070 EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00069 EQU   PSCBATR1
@NM00068 EQU   PSCBATR1
@NM00067 EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
CMDT1    EQU   CMDT
CMDO     EQU   CMD+2
CMDL     EQU   CMD
ZZ299999 EQU   ZZ2+8192
ZZ2AXOT1 EQU   ZZ2AXOT
ZZ2AXOL  EQU   ZZ2AXO
@NM00066 EQU   ZZ2+7288
@NM00065 EQU   ZZ2AMDX+4
ZZ2AMDXC EQU   ZZ2AMDX
ZZ2HSD   EQU   ZZ2+3056
@NM00064 EQU   ZZ2ES
@NM00063 EQU   ZZ2+2868
ZZ2ITSEC EQU   ZZ2ITSE+1
@NM00062 EQU   ZZ2ITSE
ZZ2ITSEP EQU   ZZ2ITSE
ZZ2ITSEW EQU   ZZ2ITSE
@NM00061 EQU   ZZ2ITR+20
ZZ2ITREC EQU   ZZ2ITRE+1
@NM00060 EQU   ZZ2ITRE
ZZ2ITREP EQU   ZZ2ITRE
ZZ2ITREW EQU   ZZ2ITRE
@NM00059 EQU   ZZ2ITR+9
ZZ2ITRRC EQU   ZZ2ITR+8
ZZ2ITR2P EQU   ZZ2ITR+4
ZZ2ITRPP EQU   ZZ2ITR
@NM00058 EQU   ZZ2+1544
ZZ2PGM   EQU   ZZ2+1536
@NM00057 EQU   ZZ2+1526
ZZ2CW    EQU   ZZ2+1524
@NM00056 EQU   ZZ2+1504
@NM00055 EQU   ZZ2+1352
ZZ2FFSYP EQU   ZZ2+1348
ZZ2SASYP EQU   ZZ2+1344
ZZ2RDSYP EQU   ZZ2+1340
ZZ2RASYP EQU   ZZ2+1336
ZZ2PHSYP EQU   ZZ2+1332
ZZ2ESSYP EQU   ZZ2+1328
ZZ200SYP EQU   ZZ2+1324
ZZ2SCWP  EQU   ZZ2+1320
ZZ2TTLP  EQU   ZZ2+1316
ZZ2LOADP EQU   ZZ2+1312
ZZ2VRESP EQU   ZZ2+1308
ZZ2CPPLE EQU   ZZ2CPPL+12
ZZ2CPPLP EQU   ZZ2CPPL+8
ZZ2CPPLU EQU   ZZ2CPPL+4
ZZ2VRSAP EQU   ZZ2+1288
ZZ2DVTP  EQU   ZZ2+1276
@NM00054 EQU   ZZ2+1272
@NM00053 EQU   ZZ2+1268
ZZ2RPLP  EQU   ZZ2+1260
ZZ2TCBP  EQU   ZZ2+1256
@NM00052 EQU   ZZ2+1252
ZZ2ZZ2P  EQU   ZZ2+1248
@NM00051 EQU   ZZ2+1112
ZZ2FPDRP EQU   ZZ2+1108
ZZ2FDSDP EQU   ZZ2+1104
ZZ2APDRP EQU   ZZ2+1100
ZZ2ADSDP EQU   ZZ2+1096
ZZ2ENQ0P EQU   ZZ2+1092
@NM00050 EQU   ZZ2+1080
ZZ2MSG0P EQU   ZZ2+1076
ZZ2FT25P EQU   ZZ2+1072
ZZ2MSGSP EQU   ZZ2+1060
ZZ2ALOCP EQU   ZZ2+1056
@NM00049 EQU   ZZ2+976
ZZ2TOD   EQU   ZZ2+968
ZZ2STGN  EQU   ZZ2STG+4
ZZ2STGP  EQU   ZZ2STG
@NM00048 EQU   ZZ2+952
ZZ2SCMDE EQU   ZZ2+944
ZZ2SCMDN EQU   ZZ2+936
ZZ2IDENT EQU   ZZ2+928
ZZ2A9999 EQU   ZZ2A+656
@NM00047 EQU   ZZ2A+224
@NM00046 EQU   ZZ2A+220
ZZ2AQD99 EQU   ZZ2AQD+60
@NM00045 EQU   ZZ2AQD+56
@NM00044 EQU   ZZ2AQDF
ZZ2AQDFA EQU   ZZ2AQDF
ZZ2AQDIL EQU   ZZ2AQD+48
ZZ2AQDIM EQU   ZZ2AQD+44
ZZ2AQDT9 EQU   ZZ2AQDT+34
ZZ2AQDTE EQU   ZZ2AQDT+33
ZZ2AQDTD EQU   ZZ2AQDT+2
@NM00043 EQU   ZZ2AQDT+1
ZZ2AQDTY EQU   ZZ2AQDT
ZZ2AQDT0 EQU   ZZ2AQDT
ZZ2AQDLB EQU   ZZ2AQD+9
ZZ2AQDOB EQU   ZZ2AQD+8
ZZ2AQDLE EQU   ZZ2AQD+4
ZZ2AQDOF EQU   ZZ2AQD
ZZ2AQD00 EQU   ZZ2AQD
ZZ2AQAS9 EQU   ZZ2AQAS+16
@NM00042 EQU   ZZ2AQAS+12
ZZ2AQAS2 EQU   ZZ2AQAS+8
ZZ2AQAS1 EQU   ZZ2AQAS+4
@NM00041 EQU   ZZ2AQAS+2
ZZ2AQAST EQU   ZZ2AQAS
ZZ2AQAS0 EQU   ZZ2AQAS
ZZ2ADPTA EQU   ZZ2ADPT
ZZ2ADPL  EQU   ZZ2ADP
ZZ2ADMTA EQU   ZZ2ADMT
ZZ2ADML  EQU   ZZ2ADM
ZZ2ADDTA EQU   ZZ2ADDT
ZZ2ADDL  EQU   ZZ2ADD
@NM00040 EQU   ZZ2A+72
ZZ2APIDB EQU   ZZ2APID+3
ZZ2APIDA EQU   ZZ2APID
@NM00039 EQU   ZZ2A+24
@NM00038 EQU   ZZ2AF+5
ZZ2AFX   EQU   ZZ2AF+5
@NM00037 EQU   ZZ2AF+3
@NM00036 EQU   ZZ2AF+2
ZZ2AFM   EQU   ZZ2AF+2
@NM00035 EQU   ZZ2AF+2
@NM00034 EQU   ZZ2AF+1
ZZ2AFV   EQU   ZZ2AF+1
@NM00033 EQU   ZZ2AF+1
ZZ2AFC   EQU   ZZ2AF+1
@NM00032 EQU   ZZ2AF
ZZ2AFFS  EQU   ZZ2AF
ZZ2AFT   EQU   ZZ2AF
ZZ2AFP   EQU   ZZ2AF
@NM00031 EQU   ZZ2A+8
ZZ2ALINE EQU   ZZ2A+4
@NM00030 EQU   ZZ2A+3
ZZ2ASE   EQU   ZZ2A+2
ZZ2ACH   EQU   ZZ2A
@NM00029 EQU   ZZ2+264
@NM00028 EQU   ZZ2+263
ZZ2PRTT0 EQU   ZZ2PRTT
ZZ2PRTO  EQU   ZZ2PRT+2
ZZ2PRTL  EQU   ZZ2PRT
@NM00027 EQU   ZZ2AMD+56
ZZ2AMDXP EQU   ZZ2AMD+52
ZZ2AMDD  EQU   ZZ2AMD+48
ZZ2AMDL  EQU   ZZ2AMD+44
ZZ2AMDU  EQU   ZZ2AMD+28
ZZ2AMDF  EQU   ZZ2AMD+24
ZZ2AMDS  EQU   ZZ2AMD+20
ZZ2AMDC  EQU   ZZ2AMD+16
ZZ2AMDP  EQU   ZZ2AMD+12
ZZ2AMDB  EQU   ZZ2AMD+8
@NM00026 EQU   @NM00025
ZZ2AMD2  EQU   @NM00025
ZZ2AMD1  EQU   @NM00025
ZZ2AMD0  EQU   ZZ2AMD+6
ZZ2AMDA  EQU   ZZ2AMD+4
ZZ2AMDT  EQU   ZZ2AMD
ZZ199999 EQU   ZZ1+3072
@NM00024 EQU   ZZ1+2160
ZZ1TRTAS EQU   ZZ1+1904
ZZ1TRUPC EQU   ZZ1+1648
ZZ1TRCTX EQU   ZZ1+1392
ZZ1NASID EQU   ZZ1N+274
ZZ1NSTRL EQU   ZZ1N+272
ZZ1NOFF  EQU   ZZ1N+268
ZZ1NBDY  EQU   ZZ1N+264
ZZ1NADE  EQU   ZZ1N+260
ZZ1NADB  EQU   ZZ1N+256
ZZ1NSTR  EQU   ZZ1N
@NM00023 EQU   ZZ1+1080
ZZ1TREBC EQU   ZZ1+824
@NM00022 EQU   ZZ1+377
ZZ1USTAE EQU   ZZ1+376
@NM00021 EQU   ZZ1F+1
@NM00020 EQU   ZZ1F
ZZ1FM    EQU   ZZ1F
ZZ1FX    EQU   ZZ1F
ZZ1FU    EQU   ZZ1F
ZZ1EVEC  EQU   ZZ1EVE+1
@NM00019 EQU   ZZ1EVE
ZZ1EVEP  EQU   ZZ1EVE
ZZ1EVEW  EQU   ZZ1EVE
ZZ1ACMP  EQU   ZZ1ATTN
@NM00018 EQU   ZZ1+144
ZZ1FPP   EQU   ZZ1+140
ZZ1ZZ6P  EQU   ZZ1+136
@NM00017 EQU   ZZ1+84
ZZ1PLINE EQU   ZZ1+80
ZZ1PGSZ  EQU   ZZ1+76
ZZ1PCNT  EQU   ZZ1+72
@NM00016 EQU   ZZ1+68
ZZ1TPAGE EQU   ZZ1+64
@NM00015 EQU   ZZ1+48
ZZ1DSDP  EQU   ZZ1+44
ZZ1PDRP  EQU   ZZ1+40
ZZ1ZZ2P  EQU   ZZ1+36
ZZ1327WP EQU   ZZ1+32
ZZ1ACBP  EQU   ZZ1+28
@NM00014 EQU   ZZ1+24
ZZ1PDCBP EQU   ZZ1+20
ZZ1BLRBL EQU   ZZ1+16
@NM00013 EQU   ZZ1+12
ZZ1PNULL EQU   ZZ1+8
ZZ1NULL  EQU   ZZ1+4
ZZ1IDE   EQU   ZZ1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   BLST03,(C'PLS1927',0701,78059)
