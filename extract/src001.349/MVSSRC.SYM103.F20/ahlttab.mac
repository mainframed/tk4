         TITLE 'AHLTTAB          FILTER TABLE CONVERT ROUTINE          *
                       '
AHLTTAB  CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'AHLTTAB   73.241'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                                                  0030
*/********************************************************************/
*/*                                                                  */
*/* EXECUTABLE CODE                                                  */
*/*                                                                  */
*/* INITIALIZATION                                                   */
*/*                                                                  */
*/********************************************************************/
*/********************************************************************/
*/*                                                                  */
*/* CHECK FOR AN IO DEVICE TABLE TO BE CONVERTED INTO A FILTER TABLE */
*/*                                                                  */
*/********************************************************************/
*                                                                  0030
*   IF GTFIOP='1'B                  /* IS THERE AN IO DEVICE ADDRESS
*                                      TABLE TO BE CONVERTED?  Y02014*/
*     THEN                          /* YES                           */
         L     @05,INITPTR(,PCTPTR)                                0030
         TM    GTFIOP(@05),B'00000001'                             0030
         BNO   @RF00030                                            0030
*     DO;                           /* YES THERE IS                  */
*       PATHSW=0;                   /* SET THIS SWITCH TO INDICATE TO
*                                      THE COMMON CODE THAT IT IS THE
*                                      IO TABLE NOT THE SIO BEING  0032
*                                      CONVERTED                     */
         SR    PATHSW,PATHSW                                       0032
*       OPPTR=IOTAB;                /* PUT THE ADDRESS OF THE IO   0033
*                                      TABLE INTO THE COMMON PTR   0033
*                                                              Y02014*/
         L     @09,INITPTR(,PCTPTR)                                0033
         L     OPPTR,IOTAB(,@09)                                   0033
*       GO TO CNVT02;               /* BRANCH TO THE COMMON CODE     */
         B     CNVT02                                              0034
*     END;                                                         0035
*                                                                  0035
*/********************************************************************/
*/*                                                                  */
*/* CHECK FOR AN SIO DEVICE TABLE TO BE CONVERTED INTO A FILTER TABLE*/
*/*                                                                  */
*/********************************************************************/
*                                                                  0036
*CNVT01:                            /* FALL THROUGH TO HERE IF THERE
*                                      IS NO IO TABLE TO BE DONE, OR
*                                      IF THE IO TABLE HAS BEEN DONE
*                                      AND THE IO=SIO BIT ISN'T ON 0036
*                                                              Y02014*/
*   IF GTFSIOP='0'B                 /* IS THERE AN SIO DEVICE TABLE
*                                      TO BE CONVERTED?        Y02014*/
*     THEN                          /* NO                            */
@RF00030 DS    0H                                                  0036
CNVT01   L     @05,INITPTR(,PCTPTR)                                0036
         TM    GTFSIOP(@05),B'00010000'                            0036
         BZ    @RT00036                                            0036
*     GO TO CNVT07;                 /* NO THEN SKIP TO THE NEXT    0037
*                                      CONVERTION                    */
*   OPPTR=SIOTAB;                   /* YES THERE IS AN SIO TABLE SO
*                                      SET THE COMMON POINTER TO IT
*                                                              Y02014*/
         L     @09,INITPTR(,PCTPTR)                                0038
         L     OPPTR,SIOTAB(,@09)                                  0038
*   PATHSW=1;                       /* AND SET THIS SWITCH TO      0039
*                                      INDICATE TO THE COMMON CODE 0039
*                                      THAT THE SIO TABLE IS BEING 0039
*                                      DONE                          */
         LA    PATHSW,1                                            0039
*                                                                  0040
*/********************************************************************/
*/*                                                                  */
*/* THIS IS THE COMMON CODE THAT CONVERTS IO &/OR SIO DEVICE TABLES  */
*/* INTO FILTER TABLES                                               */
*/* FIRST CALCULATE THE AMOUNT OF CORE NEEDED FOR THE TABLE          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0040
*CNVT02:                            /* THIS LOOP GOES THROUGH THE IO
*                                      OR SIO TABLE AND COUNTS THE 0040
*                                      EXACT AMOUNT OF CORE THAT WILL
*                                      BE NEEDED FOR THE           0040
*                                      CORRESPONDING FILTER TABLE    */
*   I=1;                            /* START AT THE BEGINNING OF THE
*                                      IO OR SIO DEVICE TABLE        */
CNVT02   LA    I,1                                                 0040
*   FLTRLEN=22;                     /* SET ASIDE 16 BYTES FOR THE  0041
*                                      CHANNEL DISPLACEMENT TABLE  0041
*                                      THAT GOES AT THE HEAD OF THE
*                                      FILTER TABLE PLUS 4 BYTES FOR
*                                      THE FIRST & LAST ENTRIES OF 0041
*                                      'FFFF'X PLUS 2 BYTES FOR THE
*                                      LNG FIELD               Y02014*/
         MVC   FLTRLEN(4),@CF00344                                 0041
*   CHANLSAV=CHANL(I);              /* SAVE THE CHANNEL DIGIT FROM 0042
*                                      THE FIRST UNIT ADDR IN THE TBL*/
         LR    @09,I                                               0042
         MH    @09,@CH00069                                        0042
         AL    @09,@CF00375                                        0042
         SR    CHANLSAV,CHANLSAV                                   0042
         IC    CHANLSAV,CHANL(@09,OPPTR)                           0042
*CNVT03:                            /* BRANCH HERE TO CONTINUE THE 0043
*                                      COUNT                         */
*   IF CHANL(I)=CHANLSAV            /* IS THE CHANNEL DIGIT OF THIS
*                                      UNIT ADDRESS THE SAME AS THE
*                                      ONE BEFORE IT IN THE TABLE?   */
*     THEN                          /* YES IT IS SO IT WILL ONLY   0043
*                                      REQUIRE ONE ENTRY             */
CNVT03   LR    @09,I                                               0043
         MH    @09,@CH00069                                        0043
         AL    @09,@CF00375                                        0043
         SR    @06,@06                                             0043
         IC    @06,CHANL(@09,OPPTR)                                0043
         CR    CHANLSAV,@06                                        0043
         BNE   @RF00043                                            0043
*     FLTRLEN=FLTRLEN+2;            /* 2 BYTES                       */
         LA    @09,2                                               0044
         A     @09,FLTRLEN                                         0044
         ST    @09,FLTRLEN                                         0044
*   ELSE                            /* NO                            */
*     DO;                           /* NO IT IS DIFFERENT SO WE ARE
*                                      GOING TO NEED A 'FFFF'X ENTRY
*                                      TO SHOW END OF THE GROUP      */
         B     @RC00043                                            0045
@RF00043 DS    0H                                                  0046
*       FLTRLEN=FLTRLEN+4;          /* TWO ENTRIES 4 BYTES           */
         LA    @09,4                                               0046
         A     @09,FLTRLEN                                         0046
         ST    @09,FLTRLEN                                         0046
*       CHANLSAV=CHANL(I);          /* NOW THAT WE ARE INTO A NEW  0047
*                                      GROUP OF CHANNELS UPDATE THE
*                                      DIGIT BEING COMPARED          */
         LR    @09,I                                               0047
         MH    @09,@CH00069                                        0047
         AL    @09,@CF00375                                        0047
         SR    CHANLSAV,CHANLSAV                                   0047
         IC    CHANLSAV,CHANL(@09,OPPTR)                           0047
*     END;                                                         0048
*   I=I+1;                          /* INCREMENT THE LOOP INDEX      */
@RC00043 AH    I,@CH00039                                          0049
*   IF ENTRX(I)^=ENDLST1            /* IS THIS THE DEVICE TABLE END? */
*     THEN                          /* NO                            */
         LR    @09,I                                               0050
         MH    @09,@CH00069                                        0050
         ALR   @09,OPPTR                                           0050
         AL    @09,@CF00375                                        0050
         CLC   ENTRX(3,@09),ENDLST1                                0050
         BNE   @RT00050                                            0050
*     GO TO CNVT03;                 /* NO, SO THEN CONTINUE THE LOOP */
*   RFY                                                            0052
*     RETCODE RSTD;                 /* RESTRICT REGISTER 15    Y02014*/
*   GEN;                                                           0053
*                                   /* YES # OF BYTS IS IN FLTRLEN   */
        L  0,FLTRLEN
        GETMAIN EC,LV=(0),A=GETFREE,SP=245
*                                   /* GET THE FILTER TABLE CORE
*                                                              Y02014*/
*                                   /* SAVE THE ADDR OF THE CORE JUST
*                                      GOTTEN AS THE FILTER TABLE  0054
*                                      ADDRESS                       */
*   IF RETCODE^=0                   /* CHECK FOR NONZERO RET CODE    */
*     THEN                          /* NONZERO                       */
         SR    @14,@14                                             0054
         CR    RETCODE,@14                                         0054
         BNE   @RT00054                                            0054
*     GO TO CNVT14;                 /* GETMAIN ERROR WRITE GO MSG    */
*   RFY                                                            0056
*     RETCODE UNRSTD;               /* UNRESTRICT REGISTER 15  Y02014*/
*   FLTRAD=GETFREE;                 /* PUT THE ADDRESS OF THE GOTTEN
*                                      CORE IN A REG                 */
         L     FLTRAD,GETFREE                                      0057
*   LNGTAB=FLTRLEN;                 /* PLACE LENGTH OF TABLE IN 1ST
*                                      BYTE                    Y02014*/
         MVC   LNGTAB(2,FLTRAD),FLTRLEN+2                          0058
*                                                                  0059
*/********************************************************************/
*/*                                                                  */
*/* CONVERT THE DEVICE TABLE ENTRIES INTO BINARY AND BUILD THE FILTER*/
*/* TABLE IN THE CORE JUST OBTAINED                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0059
*   UNITADD=0;                      /* INITIALIZE THE UNIT ADDRESS TO
*                                      ZERO                          */
         ST    @14,UNITADD                                         0059
*   OFST=OFST&&OFST;                /* ZERO CHANNEL DISPLACEMENT     */
         XC    OFST(16,FLTRAD),OFST(FLTRAD)                        0060
*                                   /* BYTES                   Y02014*/
*   K=1;                            /* INITIALIZE THE INDEX FOR THE
*                                      FILTER TABLE ENTRIES          */
         LA    @09,1                                               0061
         LR    K,@09                                               0061
*   I=1;                            /* INITIALIZE THE INDEX FOR THE
*                                      DEVICE TABLE ENTRIES          */
         LR    I,@09                                               0062
*   CHANLSAV='FF'X;                 /* INITIALIZE THE CHANNEL DIGIT
*                                      TO ONE THAT WILL NEVER BE THE
*                                      SAME AS THE ONE FOR THE FIRST
*                                      UNIT ADDRESS IN THE TABLE SO
*                                      THAT ON THE FIRST TIME THROUGH
*                                      THE LOOP A 'FFFF'X ENTRY WILL
*                                      BE MADE                       */
         LA    CHANLSAV,255                                        0063
*CNVT04:                                                           0064
*                                                                  0064
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THIS THE END OF THE DEVICE TABLE?                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0064
*   IF ENTRX(I)=ENDLST1 THEN        /* YES                           */
CNVT04   LR    @09,I                                               0064
         MH    @09,@CH00069                                        0064
         ST    @09,@TF00001                                        0064
         ALR   @09,OPPTR                                           0064
         AL    @09,@CF00375                                        0064
         CLC   ENTRX(3,@09),ENDLST1                                0064
         BE    @RT00064                                            0064
*     GO TO CNVT06;                 /* YES THEN LEAVE THE LOOP       */
*   UNITADD(1:3)=ENTRX(I);          /* PUT THE ENTRY TO BE CONVERTED
*                                      INTO THE FIRST THREE BYTES OF
*                                      A WORK SPACE                  */
         LR    @09,OPPTR                                           0066
         AL    @09,@TF00001                                        0066
         AL    @09,@CF00375                                        0066
         MVC   UNITADD(3),ENTRX(@09)                               0066
*   GEN;                                                           0067
*                                                                  0067
*                                   /* CONVERT IT                    */
T3       EQU   3
T4       EQU   4
         TR    UNITADD(T3),TRANTAB
         PACK  PKENT(T3),UNITADD(T4)
*   /*****************************************************************/
*   /*                                                               */
*   /* SEE IF THE CHANNEL DIGIT IS THE SAME AS THE ONE BEFORE        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0068
*   IF CHANL(I)=CHANLSAV THEN       /* YES                           */
         LR    @09,I                                               0068
         MH    @09,@CH00069                                        0068
         AL    @09,@CF00375                                        0068
         SR    @15,@15                                             0068
         IC    @15,CHANL(@09,OPPTR)                                0068
         CR    @15,CHANLSAV                                        0068
         BE    @RT00068                                            0068
*     GO TO CNVT05;                 /* YES IT IS SO SKIP PUTTING THE
*                                      'FFFF'X ENTRY IN              */
*   CHANLSAV=CHANL(I);              /* THEY ARE DIFFERENT SO SAVE THE
*                                      NEW CHANNELL DIGIT            */
         LR    CHANLSAV,@15                                        0070
*   DVADFT(K)=ENDLST1(1:2);         /* PUT A 'FFFF' ENTRY INTO THE 0071
*                                      FILTER TABLE                  */
         LR    @09,K                                               0071
         AR    @09,@09                                             0071
         ALR   @09,FLTRAD                                          0071
         MVC   DVADFT-2(2,@09),ENDLST1                             0071
*   K=K+1;                          /* INCREMENT THE INDEX TO THE  0072
*                                      NEXT FILTER TABLE ENTRY       */
*                                                                  0072
         AH    K,@CH00039                                          0072
*   /*****************************************************************/
*   /*                                                               */
*   /* CALCULATE THE DISPLACEMENT TO THE NEXT FILTER TABLE ENTRY FROM*/
*   /* THE BEGINNING OF THE TABLE ENTRIES, AND STORE IT IN THE OFFSET*/
*   /* PORTION OF THE TABLE                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0073
*   OFFSET(PKCHAN+1)=ADDR(DVADFT(K))-ADDR(DVADFT(1));              0073
         SR    @09,@09                                             0073
         IC    @09,PKCHAN                                          0073
         LR    @15,K                                               0073
         AR    @15,@15                                             0073
         LA    @15,DVADFT-2(@15,FLTRAD)                            0073
         LA    @14,DVADFT(,FLTRAD)                                 0073
         SR    @15,@14                                             0073
         STC   @15,OFFSET(@09,FLTRAD)                              0073
*CNVT05:                            /* BRANCH HERE IF UNIT IS VALID  */
*   DVADFT(K)=PKDA;                 /* STORE THE UNIT ADDRESS INTO 0074
*                                      THE FILTER TABLE              */
CNVT05   LR    @09,K                                               0074
         AR    @09,@09                                             0074
         ALR   @09,FLTRAD                                          0074
         MVC   DVADFT-2(2,@09),PKDA                                0074
*   K=K+1;                          /* INCREMENT THIS INDEX TO THE 0075
*                                      NEXT FILTER TABLE ENTRY       */
         LA    @09,1                                               0075
         AR    K,@09                                               0075
*   I=I+1;                          /* INCREMENT THIS INDEX TO THE 0076
*                                      NEXT DEVICE TABLE ENTRY       */
         AR    I,@09                                               0076
*   GO TO CNVT04;                   /* GO SEE IF THIS IS THE END OF
*                                      THE TABLE                     */
         B     CNVT04                                              0077
*CNVT06:                            /* BRANCH HERE WHEN THE LAST   0078
*                                      ENTRY HAS BEEN CONVERTED      */
*   DVADFT(K)=ENDLST1(1:2);         /* STORE A 'FFFF'X TO SHOW THIS
*                                      IS THE END OF THE ENTRIES FOR
*                                      THE LAST CHANNEL              */
*                                                                  0078
CNVT06   LR    @09,K                                               0078
         AR    @09,@09                                             0078
         ALR   @09,FLTRAD                                          0078
         MVC   DVADFT-2(2,@09),ENDLST1                             0078
*/********************************************************************/
*/*                                                                  */
*/* FREE THE CORE USED BY THE OLD DEVICE TABLE NOW THAT A FILTER     */
*/* TABLE IS BUILT AND CHECK TO SEE IF THERE IS ANOTHER DEVICE TABLE */
*/* TO BE CONVERTED                                                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0079
*   ENTBLN=153;                     /* PUT THE LENGTH OF THE IO/SIO
*                                      DEVICE TABLE INTO REG 0       */
         LA    ENTBLN,153                                          0079
*   ENTBLAD=OPPTR;                  /* AND ITS ADDRESS INTO REG 1    */
         LR    ENTBLAD,OPPTR                                       0080
*   GEN;                                                           0081
*                                                                  0081
*                                   /* THEN FREE IT                  */
        FREEMAIN R,LV=(0),A=(1)
*   /*****************************************************************/
*   /*                                                               */
*   /* WAS THIS THE SIO TABLE THAT WAS BEING CONVERTED               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0082
*   IF PATHSW=1 THEN                /* YES                           */
         CH    PATHSW,@CH00039                                     0082
         BNE   @RF00082                                            0082
*     DO;                           /* YES SO                        */
*       SIOTAB=0;                   /* ZERO EBCDIC TABLE PTR         */
         L     @05,INITPTR(,PCTPTR)                                0084
         SR    @03,@03                                             0084
         ST    @03,SIOTAB(,@05)                                    0084
*       GTFSIOFT=FLTRAD;            /* STORE THE FILTER TABLE ADDRESS
*                                      IN GTFPCT               Y02014*/
         ST    FLTRAD,GTFSIOFT(,PCTPTR)                            0085
*       GO TO CNVT07;               /* AND SKIP TO THE NEXT        0086
*                                      CONVERTION                    */
         B     CNVT07                                              0086
*     END;                                                         0087
*   IF GTFIOSIO='0'B                /* MEANING ONE TABLE FOR BOTH?   */
*                                                                  0088
*   /*****************************************************************/
*   /*                                                               */
*   /* IT WASN'T SIO SO IT MUST HAVE BEEN IO, IS THE IOEQ BIT ON     */
*   /*                                                         Y02014*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0088
*     THEN                          /* NO                            */
@RF00082 L     @05,INITPTR(,PCTPTR)                                0088
         TM    GTFIOSIO(@05),B'00000001'                           0088
         BNZ   @RF00088                                            0088
*     DO;                           /* NO THEN                       */
*       IOTAB=0;                    /* ZERO EBCDIC TABLE PTR   Y02014*/
         SR    @03,@03                                             0090
         ST    @03,IOTAB(,@05)                                     0090
*       GTFIOFT=FLTRAD;             /* JUST STORE THE FILTER TABLE 0091
*                                      ADDRESS IN GTFPCT FOR IO    0091
*                                      FILTER TABLE            Y02014*/
         ST    FLTRAD,GTFIOFT(,PCTPTR)                             0091
*       GO TO CNVT01;               /* AND THEN GO BACK AND SEE IF 0092
*                                      THERE IS ANY SIO TABLE        */
         B     CNVT01                                              0092
*     END;                                                         0093
*   IOTAB=0;                        /* ZERO EBCDIC PTRS        Y02014*/
@RF00088 SR    @05,@05                                             0094
         L     @03,INITPTR(,PCTPTR)                                0094
         ST    @05,IOTAB(,@03)                                     0094
*   SIOTAB=0;                       /* ZERO EBCDIC PTRS        Y02014*/
         ST    @05,SIOTAB(,@03)                                    0095
*   GTFIOFT=FLTRAD;                 /* OTHERWISE IF THE IOEQ BIT IS
*                                      ON STORE THE TABLE ADDRESS IN
*                                      THE PCT AS BOTH IO      Y02014*/
         ST    FLTRAD,GTFIOFT(,PCTPTR)                             0096
*   GTFSIOFT=FLTRAD;                /* AND SIO                 Y02014*/
         ST    FLTRAD,GTFSIOFT(,PCTPTR)                            0097
*                                                                  0098
*/********************************************************************/
*/*                                                                  */
*/* CHECK TO SEE IF THERE IS A PI TABLE TO BE CONVERTED AND BUILD    */
*/* A FILTER TABLE IF THERE IS                                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0098
*CNVT07:                            /* COME HERE WHEN BOTH IO AND SIO
*                                      ARE TAKEN CARE OF             */
*   IF GTFPIP='0'B                  /* IS THERE A PI TABLE TO BE   0098
*                                      CONVERTED?              Y02014*/
*     THEN                          /* NO                            */
CNVT07   L     @05,INITPTR(,PCTPTR)                                0098
         TM    GTFPIP(@05),B'00000100'                             0098
         BZ    @RT00098                                            0098
*     GO TO CNVT10;                 /* NO THEN SKIP TO THE NEXT    0099
*                                      CONVERTION                    */
*   RFY                                                            0100
*     RETCODE RSTD;                 /* RESTRICT REGISTER 15    Y02014*/
*   GEN;                                                           0101
*                                   /* YES GET FILTER TABLE CORE     */
*                                   /*                         Y02014*/
        GETMAIN EC,LV=8,A=GETFREE,SP=245
*                                   /* STORE THE ADDRESS OF THE CORE
*                                      JUST GOTTEN AS THE PTR TO THE
*                                      FILTER TABLE                  */
*                                                                  0102
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK THE RETURN CODE FOR A NONZERO NUMBER                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0102
*   IF RETCODE^=0 THEN              /* NONZERO                       */
         LTR   RETCODE,RETCODE                                     0102
         BNZ   @RT00102                                            0102
*     GO TO CNVT14;                 /* GETMAIN ERROR WRITE GO MSG    */
*   RFY                                                            0104
*     RETCODE UNRSTD;               /* UNRESTRICT REG 15       Y02014*/
*   FLTRAD=GETFREE;                 /* PUT THE ADDRESS OF THE GOTTEN
*                                      CORE IN A REG                 */
         L     FLTRAD,GETFREE                                      0105
*   LNGTAB=8;                       /* PUT LENGTH IN TABLE     Y02014*/
         MVC   LNGTAB(2,FLTRAD),@CH00036                           0106
*   OPPTR=PITAB;                    /* LOAD THE ADDRESS OF THE PI  0107
*                                      TABLE TO BE CONVERTED FROM THE
*                                      PCT                     Y02014*/
         L     @15,INITPTR(,PCTPTR)                                0107
         L     OPPTR,PITAB(,@15)                                   0107
*   SVPIFLTB(1:6)=SVPIFLTB(1:6)&&SVPIFLTB(1:6);/* ZERO OUT THE PI  0108
*                                      FILTER TABLE            Y02014*/
         XC    SVPIFLTB(6,FLTRAD),SVPIFLTB(FLTRAD)                 0108
*   I=1;                            /* INITIALIZE THIS INDEX TO THE
*                                      BEGINNING OF THE TABLE TO BE
*                                      CONVERTED                     */
         LA    I,1                                                 0109
*CNVT08:                            /* END CHECK FOR LOOP            */
*   IF ENTRX(I)=ENDLST1             /* IS THIS THE END OF THE PI   0110
*                                      TABLE?                        */
*     THEN                                                         0110
CNVT08   LR    @15,I                                               0110
         MH    @15,@CH00069                                        0110
         ST    @15,@TF00001                                        0110
         ALR   @15,OPPTR                                           0110
         AL    @15,@CF00375                                        0110
         CLC   ENTRX(3,@15),ENDLST1                                0110
         BE    @RT00110                                            0110
*     GO TO CNVT09;                 /* YES IT IS SO GO TO THE NEXT 0111
*                                      CONVERSION                    */
*   FLTREG=ADDR(ENTRX(I));          /* NO THEN PUT THE ADDRESS OF THE
*                                      NEXT ENTRY TO BE CONVERTED  0112
*                                      INTO A REG                    */
         L     FLTREG,@TF00001                                     0112
         AL    FLTREG,@CF00375                                     0112
         LA    FLTREG,ENTRX(FLTREG,OPPTR)                          0112
*                                                                  0113
*/********************************************************************/
*/*                                                                  */
*/* THIS BAL CODE CONVERTS THE EBCDIC PI NUMBER TO BINARY THEN SETS  */
*/* UP A MASK WITH THE BIT FOR THAT PI ON AND ORS IT IN TO THE PI    */
*/* FILTER TABLE                                                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0113
*   GEN;                                                           0113
*                                   /* CONVERT IT                    */
T8      EQU   8
OTE     EQU   128
        PACK  PKENT(T8),0(T3,FLTREG)
        CVB   BYTEREG,PKENT
        SRDL  BYTEREG,3                DIVIDE BY 8
        SRL   MOVNUM,29                GET REMAINDER
        AR    BYTEREG,FLTRAD           ADD QUO TO GET PROPER BYTE
        LA    BYTEREG,2(BYTEREG)       BYPASS LENGTH FIELD       Y02014
        LA    MASKREG,OTE              GET BIT AT BEGINNING OF BYTE
        SRL   MASKREG,0(MOVNUM)        SHIFT BIT BY REMAINDER
        EX    MASKREG,BITON            OI   0(BYTEREG),0
*   I=I+1;                          /* INCREMENT THE INDEX TO POINT
*                                      TO THE NEXT ENTRY             */
         AH    I,@CH00039                                          0114
*   GO TO CNVT08;                   /* AND GO SEE IF THIS IS THE END
*                                      OF THE TABLE                  */
         B     CNVT08                                              0115
*CNVT09:                            /* BRANCH HERE WHEN THE PI TABLE
*                                      HAS BEEN CONVERTED            */
*   PITAB=0;                        /* ZERO EBCDIC TABLE PTR   Y02014*/
CNVT09   L     @03,INITPTR(,PCTPTR)                                0116
         SR    @15,@15                                             0116
         ST    @15,PITAB(,@03)                                     0116
*   ENTBLN=60;                      /* PUT THE LENGTH OF THE OLD PI
*                                      TABLE IN REG 0                */
         LA    ENTBLN,60                                           0117
*   ENTBLAD=OPPTR;                  /* PUT THE ADDRESS OF THE OLD PI
*                                      TABLE INTO REG 1              */
         LR    ENTBLAD,OPPTR                                       0118
*   GEN;                                                           0119
*                                   /* THEN FREE THE OLD PI TABLE    */
        FREEMAIN R,LV=(0),A=(1)
*   GTFPIFT=FLTRAD;                 /* STORE THE NEW PI FILTER TABLE
*                                      ADDRESS INTO THE PCT    Y02014*/
         ST    FLTRAD,GTFPIFT(,PCTPTR)                             0120
*                                                                  0121
*/********************************************************************/
*/*                                                                  */
*/* CHECK TO SEE IF THERE IS A SVC TABLE TO BE CONVERTED AND BUILD   */
*/* A FILTER TABLE IF THERE IS                                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0121
*CNVT10:                            /* BRANCH HERE AFTER THE PI TABLE
*                                      IS CONVERTED OR IF THERE IS NO
*                                      PI TABLE                      */
*                                                                  0121
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THERE AN SVC TABLE TO BE CONVERTED?                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0121
*   IF GTFSVCP='0'B THEN            /* NO                            */
CNVT10   L     @05,INITPTR(,PCTPTR)                                0121
         TM    GTFSVCP(@05),B'01000000'                            0121
         BZ    @RT00121                                            0121
*     GO TO CNVT13;                 /* NO THEN ITS ALL DONE,RETURN   */
*   RFY                                                            0123
*     RETCODE RSTD;                 /* RESTRICT REGISTER 15    Y02014*/
*   GEN;                                                           0124
*                                                                  0124
*                                   /* YES GET CORE FOR SVC TABLE    */
        GETMAIN EC,LV=40,A=GETFREE,SP=245
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE THE ADDRESS AS THE ADDRESS OF THE NEW FILTER TABLE       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0125
*   IF RETCODE^=0                   /* CHECK THE RETURN CODE FOR A 0125
*                                      NONZERO NUMBER                */
*     THEN                                                         0125
         LTR   RETCODE,RETCODE                                     0125
         BNZ   @RT00125                                            0125
*     GO TO CNVT14;                 /* GETMAIN ERROR WRITE GO MSG    */
*   RFY                                                            0127
*     RETCODE UNRSTD;               /* UNRESTRICT REG 15       Y02014*/
*   FLTRAD=GETFREE;                 /* PUT THE ADDRESS OF THE GOTTEN
*                                      CORE IN A REG                 */
         L     FLTRAD,GETFREE                                      0128
*   LNGTAB=40;                      /*                         Y02014*/
         MVC   LNGTAB(2,FLTRAD),@CH00367                           0129
*   OPPTR=SVCTAB;                   /* GET THE ADDRESS OF THE OLD SCV
*                                      TABLE TO BE CONVERTED   Y02014*/
         L     @15,INITPTR(,PCTPTR)                                0130
         L     OPPTR,SVCTAB(,@15)                                  0130
*   SVPIFLTB(1:38)=SVPIFLTB(1:38)&&SVPIFLTB(1:38);/* ZERO OUT FILTER
*                                      TABLE                   Y02014*/
         XC    SVPIFLTB(38,FLTRAD),SVPIFLTB(FLTRAD)                0131
*   I=1;                            /* SET THIS INDEX TO THE       0132
*                                      BEGINNING OF THE TABLE TO BE
*                                      CONVERTED                     */
         LA    I,1                                                 0132
*CNVT11:                                                           0133
*                                                                  0133
*   /*****************************************************************/
*   /*                                                               */
*   /* IS THIS THE END OF THE OLD SVC TABLE?                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*   IF ENTRX(I)=ENDLST1 THEN        /* YES                           */
CNVT11   LR    @15,I                                               0133
         MH    @15,@CH00069                                        0133
         ST    @15,@TF00001                                        0133
         ALR   @15,OPPTR                                           0133
         AL    @15,@CF00375                                        0133
         CLC   ENTRX(3,@15),ENDLST1                                0133
         BE    @RT00133                                            0133
*     GO TO CNVT12;                 /* YES THEN GO FREE THE CORE FOR
*                                      THE OLD SVC TABLE             */
*   FLTREG=ADDR(ENTRX(I));          /* NO GET THE ADDRESS OF THE NEXT
*                                      ENTRY TO BE CONVERTED         */
         L     FLTREG,@TF00001                                     0135
         AL    FLTREG,@CF00375                                     0135
         LA    FLTREG,ENTRX(FLTREG,OPPTR)                          0135
*                                                                  0136
*/********************************************************************/
*/*                                                                  */
*/* THIS BAL CODE CONVERTS THE EBCDIC SVC NUMBER TO BINARY THEN SETS */
*/* UP A MASK WITH THE BIT FOR THAT SVC ON AND ORS IT IN TO THE SVC  */
*/* FILTER TABLE                                                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0136
*   GEN;                                                           0136
*                                   /* CONVERT THE ENTRY             */
        PACK  PKENT(T8),0(T3,FLTREG)
        CVB   BYTEREG,PKENT
        SRDL  BYTEREG,3                DIVIDE BY 8
        SRL   MOVNUM,29                GET REMAINDER
        AR    BYTEREG,FLTRAD           ADD QUO TO GET PROPER BYTE
        LA    BYTEREG,2(BYTEREG)       BYPASS LENGTH FIELD       Y02014
        LA    MASKREG,OTE              GET BIT AT BEGINNING OF BYTE
        SRL   MASKREG,0(MOVNUM)        SHIFT BIT BY REMAINDER
        EX    MASKREG,BITON            OI    0(BYTEREG),0
*   I=I+1;                          /* INCREMENT INDEX TO THE NEXT 0137
*                                      ENTRY IN THE TABLE            */
         AH    I,@CH00039                                          0137
*   GO TO CNVT11;                   /* AND GO SEE IF THIS IS THE END
*                                      OF THE TABLE                  */
         B     CNVT11                                              0138
*CNVT12:                            /* BRANCH HERE WHEN THE SVC TABLE
*                                      CONVERTION IS DONE            */
*   SVCTAB=0;                       /* ZERO OUT PTR TO EBCDIC TABLE
*                                                              Y02014*/
CNVT12   L     @03,INITPTR(,PCTPTR)                                0139
         SR    @15,@15                                             0139
         ST    @15,SVCTAB(,@03)                                    0139
*   ENTBLN=153;                     /* PUT THE LENGTH OF THE OLD SCV
*                                      TABLE IN REG 0                */
         LA    ENTBLN,153                                          0140
*   ENTBLAD=OPPTR;                  /* GET THE ADDRESS OF THE OLD SCV
*                                      TABLE IN REG 1                */
         LR    ENTBLAD,OPPTR                                       0141
*   GEN;                                                           0142
*                                   /* FREE THE OLD SVC TABLE        */
        FREEMAIN R,LV=(0),A=(1)
*   GTFSVCFT=FLTRAD;                /* STORE THE ADDRESS OF THE NEW
*                                      FILTER TABLE INTO THE GTFPCT
*                                                              Y02014*/
         ST    FLTRAD,GTFSVCFT(,PCTPTR)                            0143
*CNVT13:                            /* BRANCH HERE IF THERE IS NO SVC
*                                      TABLE TO BE CONVERTED         */
*   SAREG15=0;                      /* SET A SUCCESSFUL RETURN CODE
*                                      IN REG 15                     */
CNVT13   L     @05,BAKSAPTR(,SAPTR)                                0144
         SR    @03,@03                                             0144
         ST    @03,SAREG15(,@05)                                   0144
*   RETURN;                                                        0145
@EL00001 L     @13,4(,@13)                                         0145
@EF00001 DS    0H                                                  0145
@ER00001 LM    @14,@12,12(@13)                                     0145
         BR    @14                                                 0145
*CNVT14:                            /* BRANCH HERE IF A GETMAIN GIVES
*                                      A NONZERO RETCODE             */
*   ICTMSGX=28;                     /* SET THE MSG INDEX TO MSG    0146
*                                      AHL130I                       */
CNVT14   L     @05,INITPTR(,PCTPTR)                                0146
         MVI   ICTMSGX(@05),X'1C'                                  0146
*   ICTIOTYP=2;                     /* INDICATE A WTO IS TO BE DONE  */
         MVI   ICTIOTYP(@05),X'02'                                 0147
*   CALL AHLTIO;                    /* GO DO THE IO                  */
         L     @15,@CV00317                                        0148
         BALR  @14,@15                                             0148
*   SAREG15=8;                      /* SET AN UNSUCCESSFUL RETURN  0149
*                                      CODE IN REG 15                */
         L     @05,BAKSAPTR(,SAPTR)                                0149
         MVC   SAREG15(4,@05),@CF00036                             0149
*   END                                                            0150
*                                                                  0150
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (GTFPCT  )                                       */
*/*%INCLUDE SYSLIB  (INITDATA)                                       */
*/*%INCLUDE SYSLIB  (SAVEAREA)                                       */
*                                                                  0150
*       ;                                                          0150
         B     @EL00001                                            0150
@DATA    DS    0H
@CH00039 DC    H'1'
@CH00069 DC    H'3'
@CH00367 DC    H'40'
         DS    0F
@SA00001 DS    18F
@TF00001 DS    F
         DS    0F
@CF00375 DC    F'-3'
@CF00036 DC    F'8'
@CH00036 EQU   @CF00036+2
@CF00344 DC    F'22'
@CV00317 DC    V(AHLTIO)
         DS    0D
FLTRLEN  DS    AL4
         ORG   FLTRLEN
SUBPLNUM DS    AL1
@NM00011 DS    AL3
         ORG   FLTRLEN+4
GETFREE  DS    A
ENDLST1  DC    X'FFFFFF'
         DS    CL5
PKENT    DS    CL8
         ORG   PKENT
PKDA     DS    AL2
         ORG   PKDA
PKCHAN   DS    AL1
         ORG   PKENT+8
UNITADD  DS    CL4
PATCH    DC    CL150'AHLTTAB AHLTTAB AHLTTAB AHLTTAB PATCH AREA'
AHLTTAB  CSECT
*                                   /* TABLE FOR TR INSTRUCTION      */
BITON    OI    0(BYTEREG),0
TRANTAB  DS    193XL1
         DC    X'FAFBFCFDFEFF'
         DS    41XL1
         DC    X'F0F1F2F3F4F5F6F7F8F9'
AHLTTAB  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CHANLSAV EQU   @07
PATHSW   EQU   @08
I        EQU   @03
K        EQU   @06
OPPTR    EQU   @05
PCTPTR   EQU   @02
SAPTR    EQU   @13
ENTBLN   EQU   @00
ENTBLAD  EQU   @01
FLTREG   EQU   @01
FLTRAD   EQU   @04
RETCODE  EQU   @15
BYTEREG  EQU   @14
MASKREG  EQU   @09
MOVNUM   EQU   @15
GTFPCT   EQU   0
GTFSTAT  EQU   GTFPCT+8
GTFOPTS  EQU   GTFPCT+12
GTFOPTS1 EQU   GTFOPTS
GTFOPTS2 EQU   GTFOPTS+1
GTFOPTS3 EQU   GTFOPTS+2
GTFOPTS4 EQU   GTFOPTS+3
PCTCATF  EQU   GTFPCT+16
GTFSIOFT EQU   GTFPCT+20
GTFIOFT  EQU   GTFPCT+28
GTFSVCFT EQU   GTFPCT+36
GTFPIFT  EQU   GTFPCT+44
INITPTR  EQU   GTFPCT+60
NEXTBLOK EQU   GTFPCT+180
WRTRCOM  EQU   GTFPCT+204
TRMWRIT  EQU   GTFPCT+212
WRTRERR  EQU   GTFPCT+216
GTFSSRB  EQU   GTFPCT+220
QLOCKWRD EQU   GTFPCT+236
QLOCKECB EQU   GTFPCT+240
AUDITFLG EQU   GTFPCT+296
INITDATA EQU   0
ICT      EQU   INITDATA+16
ICTMSGX  EQU   ICT
ICTIOTYP EQU   ICT+1
ICTFLAGS EQU   ICT+2
GTFOPIND EQU   INITDATA+152
GTFOPT1  EQU   GTFOPIND
GTFOPT2  EQU   GTFOPIND+1
GTFSVCP  EQU   GTFOPT2
GTFSIOP  EQU   GTFOPT2
GTFPIP   EQU   GTFOPT2
GTFIOP   EQU   GTFOPT2
GTFOPT3  EQU   GTFOPIND+2
GTFIOSIO EQU   GTFOPT3
GTFOPT4  EQU   GTFOPIND+3
IOTAB    EQU   INITDATA+156
SIOTAB   EQU   INITDATA+160
SVCTAB   EQU   INITDATA+164
PITAB    EQU   INITDATA+168
TWT      EQU   INITDATA+176
BAKSAPTR EQU   4
SAVEAREA EQU   0
SAREG15  EQU   SAVEAREA+16
ENTRYTBL EQU   0
ENTRX    EQU   ENTRYTBL
CHANL    EQU   ENTRX
LNGTAB   EQU   0
IOSIOFT  EQU   2
OFST     EQU   IOSIOFT
OFFSET   EQU   OFST
DVADFT   EQU   IOSIOFT+16
SVPIFLTB EQU   2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UNIT     EQU   ENTRX+1
SAREG12  EQU   SAVEAREA+68
SAREG11  EQU   SAVEAREA+64
SAREG10  EQU   SAVEAREA+60
SAREG9   EQU   SAVEAREA+56
SAREG8   EQU   SAVEAREA+52
SAREG7   EQU   SAVEAREA+48
SAREG6   EQU   SAVEAREA+44
SAREG5   EQU   SAVEAREA+40
SAREG4   EQU   SAVEAREA+36
SAREG3   EQU   SAVEAREA+32
SAREG2   EQU   SAVEAREA+28
SAREG1   EQU   SAVEAREA+24
SAREG0   EQU   SAVEAREA+20
SAREG14  EQU   SAVEAREA+12
SAFORPTR EQU   SAVEAREA+8
SABAKPTR EQU   SAVEAREA+4
SAVACANT EQU   SAVEAREA
TWTBUF   EQU   TWT+40
TWTWORK  EQU   TWT+8
@NM00010 EQU   TWT+4
@NM00009 EQU   TWT
RANGPTR  EQU   INITDATA+172
GTFTIME  EQU   GTFOPT4
GTFRES3  EQU   GTFOPT4
GTFRES2  EQU   GTFOPT3
GTFRR    EQU   GTFOPT3
GTFSRM   EQU   GTFOPT3
GTFRNIO  EQU   GTFOPT3
GTFEXT   EQU   GTFOPT3
GTFIO    EQU   GTFOPT2
GTFPI    EQU   GTFOPT2
GTFSIO   EQU   GTFOPT2
GTFSVC   EQU   GTFOPT2
GTFPCI   EQU   GTFOPT1
GTFRES1  EQU   GTFOPT1
GTFDSP   EQU   GTFOPT1
GTFTRC   EQU   GTFOPT1
GTFUSR   EQU   GTFOPT1
GTFSYS   EQU   GTFOPT1
GTFSYSP  EQU   GTFOPT1
GTFSYSM  EQU   GTFOPT1
MSGREPLY EQU   INITDATA+28
WTORECB  EQU   INITDATA+24
PARMDCB  EQU   INITDATA+20
ICTRESV  EQU   ICTFLAGS
ICTSTOP  EQU   ICTFLAGS
ICTTRCIN EQU   ICTFLAGS
ICTRETRY EQU   ICTFLAGS
ICTEOD   EQU   ICTFLAGS
ICTIOERR EQU   ICTFLAGS
ICTPLIB  EQU   ICTFLAGS
EXECPTR  EQU   INITDATA+12
CIBPTR   EQU   INITDATA+8
INITID   EQU   INITDATA
PCTWTOMD EQU   GTFPCT+312
PCTDMPMD EQU   GTFPCT+308
TRANSMAX EQU   GTFPCT+304
GTFASCB  EQU   GTFPCT+300
@NM00008 EQU   AUDITFLG+3
AFSLEBLD EQU   AUDITFLG+3
WSERFG06 EQU   AUDITFLG+3
WSERFG05 EQU   AUDITFLG+3
WSERFG04 EQU   AUDITFLG+3
WSERFG03 EQU   AUDITFLG+3
WSERFG02 EQU   AUDITFLG+2
WSERFLAG EQU   AUDITFLG+2
TERMFLAG EQU   AUDITFLG+2
AFXWRIT  EQU   AUDITFLG+2
AFQLWAIT EQU   AUDITFLG+2
AFSLEGET EQU   AUDITFLG+2
AFBUFGET EQU   AUDITFLG+2
AFFEOB   EQU   AUDITFLG+2
AFBLKFIX EQU   AUDITFLG+1
AFEQFIX  EQU   AUDITFLG+1
AFPGRLSE EQU   AUDITFLG+1
AFWRAP   EQU   AUDITFLG+1
AFBUFOFF EQU   AUDITFLG+1
AFLDFX   EQU   AUDITFLG+1
AFCLOSE  EQU   AUDITFLG+1
AFOPEN   EQU   AUDITFLG+1
AFGMBLOK EQU   AUDITFLG
AFGMSRB  EQU   AUDITFLG
AFWAIT   EQU   AUDITFLG
AFTERM   EQU   AUDITFLG
AFINIT   EQU   AUDITFLG
AFWWRIT  EQU   AUDITFLG
AFCWRIT  EQU   AUDITFLG
AFIWRIT  EQU   AUDITFLG
EQSHORT  EQU   GTFPCT+292
SLEMAX   EQU   GTFPCT+288
SLECNT   EQU   GTFPCT+284
RQPURGE  EQU   GTFPCT+280
RQTOTAL  EQU   GTFPCT+276
WRTDLST  EQU   GTFPCT+272
NUMOFBUF EQU   GTFPCT+268
SBUFDISA EQU   GTFPCT+264
SLESUSED EQU   GTFPCT+260
EQMIN    EQU   GTFPCT+256
EQLENGTH EQU   GTFPCT+252
WQMAX    EQU   GTFPCT+248
WQLENGTH EQU   GTFPCT+244
QLECBP   EQU   QLOCKECB
@NM00007 EQU   QLOCKECB
@NM00006 EQU   QLOCKWRD+3
SCHEDBUF EQU   QLOCKWRD+2
POSTWRIT EQU   QLOCKWRD+1
QLOCK    EQU   QLOCKWRD
WRITERDD EQU   GTFPCT+228
GTFLOSTR EQU   GTFPCT+224
SRBAVAIL EQU   GTFSSRB
WRTRERRP EQU   WRTRERR
@NM00005 EQU   WRTRERR
TRMWRITP EQU   TRMWRIT
@NM00004 EQU   TRMWRIT
GTFCMECB EQU   GTFPCT+208
WRTRCOMP EQU   WRTRCOM
@NM00003 EQU   WRTRCOM
TRANSCNT EQU   GTFPCT+200
AHLRDPLQ EQU   GTFPCT+196
SFEOBRTN EQU   GTFPCT+192
SBLOKRTN EQU   GTFPCT+188
CURRBLOK EQU   GTFPCT+184
GBCDS    EQU   NEXTBLOK
WSMODEND EQU   GTFPCT+176
WSMODBEG EQU   GTFPCT+172
BCBPAGE  EQU   GTFPCT+156
SLEPAGE  EQU   GTFPCT+152
SAVECNT  EQU   GTFPCT+148
SLQHEAD  EQU   GTFPCT+144
HQLENGTH EQU   GTFPCT+140
QTAIL    EQU   GTFPCT+136
HQHEAD   EQU   GTFPCT+132
WQHEAD   EQU   GTFPCT+128
RQHEAD   EQU   GTFPCT+124
EQHEAD   EQU   GTFPCT+120
WPOSTSRB EQU   GTFPCT+116
WTSKTCBA EQU   GTFPCT+112
WRTRTCBA EQU   GTFPCT+108
TRMWTASK EQU   GTFPCT+104
WTSKATTH EQU   GTFPCT+100
WTSKINIT EQU   GTFPCT+96
WTASKECB EQU   GTFPCT+92
WMTABPTR EQU   GTFPCT+88
ATTCHECB EQU   GTFPCT+84
AHLECB   EQU   GTFPCT+80
STOPECBA EQU   GTFPCT+76
ECBADRLT EQU   GTFPCT+72
FIXLEN   EQU   GTFPCT+68
FIXPTR   EQU   GTFPCT+64
MCQEPTR  EQU   GTFPCT+56
GTFEIDL  EQU   GTFPCT+52
GTFPIBL  EQU   GTFPCT+48
GTFSVCBL EQU   GTFPCT+40
GTFIOBL  EQU   GTFPCT+32
GTFSIOBL EQU   GTFPCT+24
@NM00002 EQU   PCTCATF+1
PCTPIF   EQU   PCTCATF+1
PCTSIOF  EQU   PCTCATF+1
PCTIOF   EQU   PCTCATF+1
PCTSVCF  EQU   PCTCATF+1
PCTRR    EQU   PCTCATF+1
PCTSRM   EQU   PCTCATF+1
PCTRNIO  EQU   PCTCATF+1
PCTUSR   EQU   PCTCATF
PCTPI    EQU   PCTCATF
@NM00001 EQU   PCTCATF
PCTDSP   EQU   PCTCATF
PCTSIO   EQU   PCTCATF
PCTIO    EQU   PCTCATF
PCTEXT   EQU   PCTCATF
PCTSVC   EQU   PCTCATF
OPTTIME  EQU   GTFOPTS4
OPTRES3  EQU   GTFOPTS4
OPTIOSIO EQU   GTFOPTS3
OPTRES2  EQU   GTFOPTS3
OPTRR    EQU   GTFOPTS3
OPTSRM   EQU   GTFOPTS3
OPTRNIO  EQU   GTFOPTS3
OPTEXT   EQU   GTFOPTS3
OPTIOP   EQU   GTFOPTS2
OPTIO    EQU   GTFOPTS2
OPTPIP   EQU   GTFOPTS2
OPTPI    EQU   GTFOPTS2
OPTSIOP  EQU   GTFOPTS2
OPTSIO   EQU   GTFOPTS2
OPTSVCP  EQU   GTFOPTS2
OPTSVC   EQU   GTFOPTS2
OPTPCI   EQU   GTFOPTS1
OPTRES1  EQU   GTFOPTS1
OPTDSP   EQU   GTFOPTS1
OPTTRC   EQU   GTFOPTS1
OPTUSR   EQU   GTFOPTS1
OPTSYS   EQU   GTFOPTS1
OPTSYSP  EQU   GTFOPTS1
OPTSYSM  EQU   GTFOPTS1
GTFRESV  EQU   GTFSTAT
GTFDEBUG EQU   GTFSTAT
GTFMODE  EQU   GTFSTAT
GTFPCTID EQU   GTFPCT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00036 EQU   CNVT07
@RT00050 EQU   CNVT03
@RT00054 EQU   CNVT14
@RT00064 EQU   CNVT06
@RT00068 EQU   CNVT05
@RT00098 EQU   CNVT10
@RT00102 EQU   CNVT14
@RT00110 EQU   CNVT09
@RT00121 EQU   CNVT13
@RT00125 EQU   CNVT14
@RT00133 EQU   CNVT12
@ENDDATA EQU   *
         END   AHLTTAB,(C'PL/S-II',0502,73241)
