         TITLE 'IOEDKPUT - 3540 PUT MODULE                             *
                        '
IOEDKPUT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IOEDKPUT  78.107'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                      WORKAREA              @Y30OE95*/
*   DCBPTR=REG1;                    /* SET POINTER TO DCB    @Y30OE95*/
         LR    DCBPTR,REG1                                         0080
*   AMWKAPTR=DCBAMWKA;              /* GET PTR TO A.M. WKA   @Y30OE95*/
         L     AMWKAPTR,DCBAMWKA+15(,DCBPTR)                       0081
         LA    AMWKAPTR,0(,AMWKAPTR)                               0081
*   RFY                                                            0082
*     DEBPTR RSTD;                  /* RESTRICT DEB PTR      @Y30OE95*/
*   DEBPTR=DCBDEBAD;                /* SET POINTER TO DEB    @Y30OE95*/
         L     DEBPTR,DCBDEBAD+40(,DCBPTR)                         0083
*   UCBPTR=DEBSUCBA;                /* SET POINTER TO UCB    @Y30OEAC*/
         L     UCBPTR,DEBSUCBA(,DEBPTR)                            0084
*   RFY                             /*                       @Y30OE95*/
*    (DEBPTR,                       /*                       @Y30OE95*/
*     REG1) UNRSTD;                 /* RELEASE REGISTERS     @Y30OE95*/
*   RPLRTN=ZERO;                    /* CLEAR ERROR FLAGS     @X04AAAC*/
*                                                                  0086
         SLR   @09,@09                                             0086
         STCM  @09,7,RPLRTN(AMWKAPTR)                              0086
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS USER DATA                                     @Y30OEAC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0087
*   IF AMWDSOPN=OFF                 /* FIRST PUT ?           @Y30OE95*/
*     THEN                          /*                       @Y30OEAC*/
         TM    AMWDSOPN(AMWKAPTR),B'01000000'                      0087
         BNZ   @RF00087                                            0087
*     DO;                           /*                       @Y30OEAC*/
*       SETDOPCD=OPEN;              /* SET OP CODE FOR OPEN  @Y30OE95*/
         MVI   SETDOPCD(AMWKAPTR),X'01'                            0089
*       CALL CALLOUT;               /* PREPARE FOR OPEN      @Y30OEAC*/
         BAL   @14,CALLOUT                                         0090
*     END;                          /* OUTPUT PROCESSING     @Y30OEAC*/
*   IF RTNCD^=SYNADCCD              /* ERROR FREE OPEN ?     @Y30OEAC*/
*     THEN                          /*                       @Y30OEAC*/
@RF00087 CLI   RTNCD(AMWKAPTR),X'0C'                               0092
         BE    @RF00092                                            0092
*     IF RPLEODS=ON                 /* END-OF-DATA SET ?     @Y30OEAC*/
*       THEN                        /*                       @Y30OEAC*/
         TM    RPLEODS(AMWKAPTR),B'10000000'                       0093
         BNO   @RF00093                                            0093
*       DO;                         /*                       @Y30OEAC*/
*                                                                  0094
*         /***********************************************************/
*         /*                                                         */
*         /* START SEGMENT...END-OF-DATA PROCESSING          @Y30OEAC*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0095
*         PARM=QUIESCE;             /* QUIESCE MODE          @Y30OEAC*/
         NI    PARM(AMWKAPTR),B'01111111'                          0095
*         CALL PUTIO;               /* CALL PUTIO SUBROUTINE @Y30OEAC*/
         BAL   @14,PUTIO                                           0096
*         IF RTNCD^=SYNADCCD        /* ERROR FREE PUTIO ?    @Y30OEAC*/
*           THEN                    /*                       @Y30OEAC*/
         CLI   RTNCD(AMWKAPTR),X'0C'                               0097
         BE    @RF00097                                            0097
*           DO;                     /*                       @Y30OEAC*/
*             ACBVSSER=UCBVLSER;    /* SAVE VOL-SER IN ACB   @Y30OEAC*/
         L     @09,UCBXTADR(,UCBPTR)                               0099
         MVC   ACBVSSER(6,AMWKAPTR),UCBVLSER(@09)                  0099
*             SETDOPCD=CLOSE;       /* SET OP CODE FOR CLOSE @Y30OE95*/
         MVI   SETDOPCD(AMWKAPTR),X'03'                            0100
*             CALL CALLOUT;         /* PREPARE FOR CLOSE     @Y30OEAC*/
         BAL   @14,CALLOUT                                         0101
*           END;                    /* OUTPUT PROCESSING     @Y30OEAC*/
*                                                                  0102
*         /***********************************************************/
*         /*                                                         */
*         /* END SEGMENT...END-OF-DATA PROCESSING            @Y30OEAC*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0103
*       END;                        /*                       @Y30OEAC*/
*     ELSE                          /* NOT END-OF-DATA SET   @Y30OEAC*/
*       DO;                         /*                       @Y30OEAC*/
         B     @RC00093                                            0104
@RF00093 DS    0H                                                  0105
*         IF CCWPTR=IOBSTRTB+CHPGMLN/* BUFFER FULL ?         @Y30OEAC*/
*           THEN                    /*                       @Y30OEAC*/
         L     @09,IOBPTR-1(,AMWKAPTR)                             0105
         LA    @09,0(,@09)                                         0105
         LA    @07,224                                             0105
         L     @02,IOBSTRTB-1(,@09)                                0105
         LA    @02,0(,@02)                                         0105
         ALR   @07,@02                                             0105
         L     @02,CCWPTR-1(,AMWKAPTR)                             0105
         LA    @02,0(,@02)                                         0105
         CR    @07,@02                                             0105
         BNE   @RF00105                                            0105
*           DO;                     /*                       @Y30OEAC*/
*                                                                  0106
*             /*******************************************************/
*             /*                                                     */
*             /* START SEGMENT...END-OF-BLOCK PROCESSING     @Y30OEAC*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0107
*             IF IOBSKTT=LASTTRK    /* END-OF-VOLUME ?       @Y30OEAC*/
*               THEN                /*                       @Y30OEAC*/
         CLI   IOBSKTT(@09),73                                     0107
         BNE   @RF00107                                            0107
*               DO;                 /*                       @Y30OEAC*/
*                 PARM=QUIESCE;     /* QUIESCE MODE          @Y30OEAC*/
         NI    PARM(AMWKAPTR),B'01111111'                          0109
*                 CALL PUTIO;       /* CALL PUTIO SUBROUTINE @Y30OEAC*/
         BAL   @14,PUTIO                                           0110
*                 IF RTNCD^=SYNADCCD/* ERROR FREE PUTIO ?    @Y30OEAC*/
*                   THEN            /*                       @Y30OEAC*/
         CLI   RTNCD(AMWKAPTR),X'0C'                               0111
         BE    @RF00111                                            0111
*                   DO;             /*                       @Y30OEAC*/
*                     ACBVSSER=UCBVLSER;/* SAVE VOL-SER IN ACB     0113
*                                                            @Y30OEAC*/
         L     @09,UCBXTADR(,UCBPTR)                               0113
         MVC   ACBVSSER(6,AMWKAPTR),UCBVLSER(@09)                  0113
*                     SETDOPCD=EOV; /* SET OP CODE FOR EOV   @Y30OE95*/
         MVI   SETDOPCD(AMWKAPTR),X'02'                            0114
*                     CALL CALLOUT; /* PREPARE FOR EOV       @Y30OEAC*/
         BAL   @14,CALLOUT                                         0115
*                     IF SETDRTNC=EOVIOERR/* I/O ERR ON NEXT VOL ? 0116
*                                                            @Y30OEAC*/
*                       THEN        /*                       @Y30OEAC*/
         CLC   SETDRTNC(2,AMWKAPTR),@CH01453                       0116
         BNE   @RF00116                                            0116
*                       CNDCD2=IOERRQL;/* SET CONDITION CODE 2     0117
*                                                            @Y30OEAC*/
         MVI   CNDCD2(AMWKAPTR),X'04'                              0117
*                   END;            /* OUTPUT PROCESSING     @Y30OEAC*/
*               END;                /*                       @Y30OEAC*/
*             ELSE                  /* NOT END-OF-VOLUME     @Y30OEAC*/
*               DO;                 /*                       @Y30OEAC*/
         B     @RC00107                                            0120
@RF00107 DS    0H                                                  0121
*                 PARM=SWITCH;      /* SWITCH MODE           @Y30OEAC*/
         OI    PARM(AMWKAPTR),B'10000000'                          0121
*                 CALL PUTIO;       /* CALL PUTIO SUBROUTINE @Y30OEAC*/
         BAL   @14,PUTIO                                           0122
*               END;                /*                       @Y30OEAC*/
*                                                                  0123
*             /*******************************************************/
*             /*                                                     */
*             /* END SEGMENT...END-OF-BLOCK PROCESSING       @Y30OEAC*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0124
*           END;                    /*                       @Y30OEAC*/
@RC00107 DS    0H                                                  0125
*         IF RTNCD^=SYNADCCD        /* ERROR FREE EOB ?      @Y30OEAC*/
*           THEN                    /*                       @Y30OEAC*/
*                                                                  0125
@RF00105 CLI   RTNCD(AMWKAPTR),X'0C'                               0125
         BE    @RF00125                                            0125
*           /*********************************************************/
*           /*                                                       */
*           /* PASS DATA                                     @Y30OEAC*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0126
*           DO;                     /*                       @Y30OEAC*/
*             IF RPLRLEN>=ACBLRECL  /* USERAREA >= BUFFER    @Y30OEAC*/
*               THEN                /* AREA ?                @Y30OEAC*/
         LH    @09,ACBLRECL(,AMWKAPTR)                             0127
         C     @09,RPLRLEN(,AMWKAPTR)                              0127
         BH    @RF00127                                            0127
*               BUFRAREA(1:ACBLRECL)=/*                      @Y30OEAC*/
*                   USERAREA(1:ACBLRECL);/* MOVE DATA        @Y30OEAC*/
         L     @07,CCWPTR-1(,AMWKAPTR)                             0128
         L     @07,CCWDATAD-1(,@07)                                0128
         BCTR  @09,0                                               0128
         L     @02,RPLAREA(,AMWKAPTR)                              0128
         EX    @09,@SM01478                                        0128
*             ELSE                  /* USERAREA < BUFFER     @Y30OEAC
*                                      AREA                  @Y30OEAC*/
*               BUFRAREA=           /* MOVE DATA AND PAD     @Y30OEAC*/
*                   USERAREA(1:RPLRLEN);/* WITH BLANKS       @Y30OEAC*/
         B     @RC00127                                            0129
@RF00127 L     @09,CCWPTR-1(,AMWKAPTR)                             0129
         L     @09,CCWDATAD-1(,@09)                                0129
         MVI   BUFRAREA+1(@09),C' '                                0129
         MVC   BUFRAREA+2(126,@09),BUFRAREA+1(@09)                 0129
         L     @07,RPLRLEN(,AMWKAPTR)                              0129
         BCTR  @07,0                                               0129
         L     @02,RPLAREA(,AMWKAPTR)                              0129
         EX    @07,@SM01480                                        0129
*             CCWPTR=CCWPTR+        /* BUMP CCW POINTER      @Y30OEAC*/
*                 LENGTH(JAMCCW);   /*                       @Y30OEAC*/
@RC00127 LA    @09,8                                               0130
         L     @07,CCWPTR-1(,AMWKAPTR)                             0130
         LA    @07,0(,@07)                                         0130
         ALR   @09,@07                                             0130
         STCM  @09,7,CCWPTR(AMWKAPTR)                              0130
*           END;                    /*                       @Y30OEAC*/
*       END;                        /*                       @Y30OEAC*/
*                                                                  0132
@RF00125 DS    0H                                                  0133
*   /*****************************************************************/
*   /*                                                               */
*   /* NORMAL AND ERROR EXITS                                @Y30OEAC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*   RPLFDBK=RPLRTN;                 /* SET ERROR CODE IN RPL @Y30OEAC*/
@RC00093 DS    0H                                                  0133
@RF00092 MVC   RPLFDBK(3,AMWKAPTR),RPLRTN(AMWKAPTR)                0133
*   RFY                                                            0134
*     REXADDR RSTD;                 /* RESTRICT REXADDR      @Y30OEAC*/
*   IF RTNCD^=GOODRTN               /* RETURN CODE NOT ZERO? @Y30OEAC*/
*     THEN                          /*                       @Y30OEAC*/
         CLI   RTNCD(AMWKAPTR),X'00'                               0135
         BE    @RF00135                                            0135
*     DO;                           /*                       @Y30OEAC*/
*       IF RTNCD=SYNADCCD           /* I/O OR SETDISKT       @Y30OEAC*/
*         THEN                      /* ERRORS ?              @Y30OEAC*/
         CLI   RTNCD(AMWKAPTR),X'0C'                               0137
         BNE   @RF00137                                            0137
*         DO;                       /*                       @Y30OEAC*/
*           IF ERTNCDE=ENDDSKT      /* END OF DISKETTE?      @Y30OE95*/
*             THEN                  /*                       @Y30OE95*/
         CLI   ERTNCDE(AMWKAPTR),20                                0139
         BNE   @RF00139                                            0139
*             RPLFDB2=SYNADEDK;     /* SET CODE IN RPL       @Y30OE95*/
         MVI   RPLFDB2(AMWKAPTR),X'04'                             0140
*           ELSE                    /* NOT END OF DISKETTE   @Y30OE95*/
*             RPLFDB2=SYNADCCD;     /* SET CONDITION CODE    @Y30OEAC
*                                      IN RPL                @Y30OEAC*/
         B     @RC00139                                            0141
@RF00139 MVI   RPLFDB2(AMWKAPTR),X'0C'                             0141
*           REXADDR=EXLSYNP;        /* LOAD REG 15 WITH      @Y30OEAC
*                                      SYNAD ROUTINE ADDRESS @Y30OEAC*/
@RC00139 L     REXADDR,EXLSYNP(,AMWKAPTR)                          0142
*         END;                      /*                       @Y30OEAC*/
*       ELSE                        /* SUCCESSFUL PUT WITH   @Y30OEAC
*                                      VOL-SER PASSBACK      @Y30OEAC*/
*         REXADDR=EXLEODP;          /* LOAD REG 15 WITH      @Y30OEAC
*                                      EODAD ROUTINE ADDR    @Y30OEAC*/
         B     @RC00137                                            0144
@RF00137 L     REXADDR,EXLEODP(,AMWKAPTR)                          0144
*       RFY                                                        0145
*         SAVREG RSTD;              /* RESTRICT SAVREG       @Y30OE95*/
@RC00137 DS    0H                                                  0146
*       SAVREG=ADDR(REGSAVE);       /* GET PTR TO MY SAVAREA @Y30OE95*/
         LA    SAVREG,REGSAVE(,AMWKAPTR)                           0146
*       GEN;                                                       0147
*                                                         /*@Y30OEAC*/
         ST    SAVREG,0(,@13)          SAVE PTR TO MY REGS    @Y30OE95
         STM   @14,@12,0(SAVREG)       SAVE MY REGISTERS      @Y30OE95
REG2DISP EQU   28                      DISPLACEMENT TO REG 2  @Y30OEAC
*                                      IN SAVE AREA           @Y30OEAC
         LM    @02,@12,REG2DISP(@13)   RESTORE CALLER'S REGS  @Y30OEAC
         BALR  @14,REXADDR             BRANCH TO EXIT ROUTINE @Y30OEAC
************************************************************* @Y30OEAC
*                                                             @Y30OEAC
* CALLER'S ERROR ROUTINE TO OPTIONALLY RETURN HERE.           @Y30OEAC
* REGISTER 13 MUST STILL POINT TO CALLER'S SAVE AREA.         @Y30OEAC
*                                                             @Y30OEAC
************************************************************* @Y30OEAC
         STM   @02,@12,REG2DISP(@13)   SAVE CALLER'S REGS     @Y30OEAC
         L     SAVREG,0(,@13)          RESTORE POINTER TO MY  @Y30OE95
*                                      REGISTERS              @Y30OE95
         LM    @14,@12,0(SAVREG)       RESTORE MY REGISTERS   @Y30OE95
*     END;                          /*                       @Y30OEAC*/
*   RFY                                                            0149
*    (SAVREG,                                                      0149
*     REXADDR) UNRSTD;              /* RELEASE REGISTERS     @Y30OEAC*/
*/********************************************************** @Y30OE95*/
*/*                                                          @Y30OEAC*/
*/* IF PUT IS SUCCESSFUL AND THERE IS NO VOL-SER PASSBACK,   @Y30OEAC*/
*/* RETURN TO CALLER'S NEXT SEQUENTIAL INSTRUCTION           @Y30OEAC*/
*/*                                                          @Y30OEAC*/
*/********************************************************** @Y30OEAC*/
*                                                                  0150
*                                                                  0150
*   /*****************************************************************/
*   /*                                                               */
*   /* PUTIO SUBROUTINE                                      @Y30OEAC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*PUTIO:                             /*                       @Y30OEAC*/
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30OEAC*/
@EL00001 DS    0H                                                  0150
@EF00001 DS    0H                                                  0150
@ER00001 LM    @14,@12,12(@13)                                     0150
         BR    @14                                                 0150
PUTIO    DS    0H                                                  0151
*   RFY                             /*                       @Y30OEAC*/
*     REG14 RSTD;                   /* RESTRICT REGISTER     @Y30OEAC*/
*   ECB=ZERO;                       /* CLEAR THE ECB         @Y30OEAC*/
         SLR   @15,@15                                             0152
         L     @09,IOBPTR-1(,AMWKAPTR)                             0152
         LA    @09,0(,@09)                                         0152
         L     @07,IOBECBPB-1(,@09)                                0152
         ST    @15,ECB(,@07)                                       0152
*   IF CCWPTR^=IOBSTRTB+CHPGMLN     /* BUFFER NOT FULL ?     @Y30OEAC*/
*     THEN                          /*                       @Y30OEAC*/
         L     @07,CCWPTR-1(,AMWKAPTR)                             0153
         LA    @07,0(,@07)                                         0153
         LA    @02,224                                             0153
         L     @11,IOBSTRTB-1(,@09)                                0153
         LA    @11,0(,@11)                                         0153
         LR    @10,@11                                             0153
         ALR   @10,@02                                             0153
         CR    @07,@10                                             0153
         BE    @RF00153                                            0153
*     DO;                           /*                       @Y30OEAC*/
*                                                                  0154
*       /*************************************************************/
*       /*                                                           */
*       /* PREPARE THE CCW CHAIN                             @Y30OEAC*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0155
*       JAMCCW=JAMCCW&&NOOPCCW;     /* PLACE LAST NOOP AT    @Y30OEAC*/
         L     @09,IOBSTART(,@09)                                  0155
         ALR   @02,@09                                             0155
         XC    JAMCCW(8,@07),NOOPCCW(@02)                          0155
*       NOOPCCW=NOOPCCW&&JAMCCW;    /* CURRENT END OF        @Y30OEAC*/
         XC    NOOPCCW(8,@02),JAMCCW(@07)                          0156
*       JAMCCW=JAMCCW&&NOOPCCW;     /* CHAIN                 @Y30OEAC*/
*                                                                  0157
         XC    JAMCCW(8,@07),NOOPCCW(@02)                          0157
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD DEFINE OPS CCW AT BEGINNING OF CHAIN        @Y30OEAC*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0158
*       CCWCNT=(CCWPTR-IOBSTRTB)/LENGTH(JAMCCW)-/* POINT TO  @Y30OEAC*/
*           OFFSET2;                /* FIRST CCW             @Y30OEAC*/
         LR    @00,@07                                             0158
         SLR   @00,@11                                             0158
         SRDA  @00,32                                              0158
         D     @00,@CF00054                                        0158
         BCTR  @01,0                                               0158
         BCTR  @01,0                                               0158
         STC   @01,CCWCNT(,AMWKAPTR)                               0158
*       ALLOWOPS=WRTCMD;            /* SET WRITE OPERATION   @Y30OEAC*/
         MVI   ALLOWOPS(AMWKAPTR),X'40'                            0159
*       RLENGTH=ZERO;               /* CLEAR RECORD LENGTH   @Y30OEAC*/
         STH   @15,RLENGTH(,AMWKAPTR)                              0160
*       RFY                         /*                       @Y30OEAC*/
*         JAMCCW BASED(IOBSTART);   /* SET CCW POINTER       @Y30OEAC*/
*       CCWCMDCD=DFNCMDCD;          /* DEFINE OPS COMMAND    @Y30OEAC
*                                      CODE                  @Y30OEAC*/
         MVI   CCWCMDCD(@09),X'2F'                                 0162
*       CCWDATAD=ADDR(DFNOPS);      /* SET CCW DATA ADDR     @Y30OEAC*/
         LA    @15,DFNOPS(,AMWKAPTR)                               0163
         STCM  @15,7,CCWDATAD(@09)                                 0163
*       CCWCOUNT=WRITECNT;          /* SET CCW COUNT         @Y30OEAC*/
         MVC   CCWCOUNT(2,@09),@CH00052                            0164
*       RFY                         /*                       @Y30OEAC*/
*         JAMCCW BASED(CCWPTR);     /* RESTORE CCW PTR       @Y30OEAC*/
*     END;                          /*                       @Y30OEAC*/
*                                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* EXCP CURRENT BUFFER                                   @Y30OEAC*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0167
*   RFY                             /*                       @Y30OEAC*/
*    (RWRK1,                        /*                       @Y30OEAC*/
*     RWRK2) RSTD;                  /* RESTRICT REGISTERS    @Y30OEAC*/
@RF00153 DS    0H                                                  0168
*   RWRK1=IOBPTR;                   /* POINTER TO CURRENT    @Y30OEAC
*                                      IOB                   @Y30OEAC*/
         L     RWRK1,IOBPTR-1(,AMWKAPTR)                           0168
         LA    RWRK1,0(,RWRK1)                                     0168
*   GEN(EXCP (RWRK1));              /* ISSUE EXCP            @Y30OEAC*/
         EXCP (RWRK1)
*   IF PARM=SWITCH                  /* SWITCH MODE ?         @Y30OEAC*/
*     THEN                          /*                       @Y30OEAC*/
         TM    PARM(AMWKAPTR),B'10000000'                          0170
         BNO   @RF00170                                            0170
*     DO;                           /*                       @Y30OEAC*/
*                                                                  0171
*       /*************************************************************/
*       /*                                                           */
*       /* SWITCH TO NEXT BUFFER/IOB                         @Y30OEAC*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0172
*       IOBPTR=IOBNIOBB+LENGTH(IOBORG01);/* POINT TO NEXT    @Y30OEAC
*                                      IOB                   @Y30OEAC*/
         LA    @15,16                                              0172
         L     @09,IOBPTR-1(,AMWKAPTR)                             0172
         LA    @09,0(,@09)                                         0172
         SLR   @09,@15                                             0172
         LA    @07,8                                               0172
         L     @09,IOBNIOBB-1(,@09)                                0172
         LA    @09,0(,@09)                                         0172
         ALR   @07,@09                                             0172
         STCM  @07,7,IOBPTR(AMWKAPTR)                              0172
*       CCWPTR=IOBSTRTB+            /* GET ADDRESS OF FIRST  @Y30OEAC*/
*           OFFSET2*LENGTH(JAMCCW); /* CCW                   @Y30OEAC*/
         L     @09,IOBSTRTB-1(,@07)                                0173
         LA    @09,0(,@09)                                         0173
         ALR   @15,@09                                             0173
         STCM  @15,7,CCWPTR(AMWKAPTR)                              0173
*     END;                          /*                       @Y30OEAC*/
*   IF ECBCOMP^=ON                  /* ECB NOT POSTED ?      @Y30OEAC*/
*     THEN                          /*                       @Y30OEAC*/
@RF00170 L     @15,IOBPTR-1(,AMWKAPTR)                             0175
         L     @15,IOBECBPB-1(,@15)                                0175
         LA    @15,0(,@15)                                         0175
         TM    ECBCOMP(@15),B'01000000'                            0175
         BO    @RF00175                                            0175
*     DO;                           /*                       @Y30OEAC*/
*       RWRK2=IOBECBPB;             /* GET ADDRESS OF ECB    @Y30OEAC*/
         LR    RWRK2,@15                                           0177
*       GEN(WAIT ECB=(RWRK2));      /* ISSUE WAIT            @Y30OEAC*/
         WAIT ECB=(RWRK2)
*     END;                          /*                       @Y30OEAC*/
*   IF PARM=SWITCH                  /* SWITCH MODE           @ZA31583*/
*     THEN                          /*                       @ZA31583*/
@RF00175 TM    PARM(AMWKAPTR),B'10000000'                          0180
         BNO   @RF00180                                            0180
*     IOBSKTT=IOBSKTT+IOBNO;        /* UPDATE TRACK NUMBER   @ZA31583*/
         L     @15,IOBPTR-1(,AMWKAPTR)                             0181
         LA    @15,0(,@15)                                         0181
         SLR   @09,@09                                             0181
         IC    @09,IOBSKTT(,@15)                                   0181
         SLR   @07,@07                                             0181
         IC    @07,IOBNO(,AMWKAPTR)                                0181
         ALR   @09,@07                                             0181
         STC   @09,IOBSKTT(,@15)                                   0181
*   IF ECBCMPL1^=ECBSCCD            /* ERROR COMPLETION      @Y30OEAC*/
*     THEN                          /* CODE ?                @Y30OEAC*/
@RF00180 L     @15,IOBPTR-1(,AMWKAPTR)                             0182
         L     @15,IOBECBPB-1(,@15)                                0182
         CLI   ECBCMPL1(@15),127                                   0182
         BE    @RF00182                                            0182
*     RTNCD=SYNADCCD;               /* SET ERROR CODE        @Y30OEAC*/
         MVI   RTNCD(AMWKAPTR),X'0C'                               0183
*   RFY                             /*                       @Y30OEAC*/
*    (RWRK1,                        /*                       @Y30OEAC*/
*     RWRK2,                        /*                       @Y30OEAC*/
*     REG14) UNRSTD;                /* RELEASE REGISTERS     @Y30OEAC*/
*   END PUTIO;                      /*                       @Y30OEAC*/
@EL00002 DS    0H                                                  0185
@EF00002 DS    0H                                                  0185
@ER00002 BR    @14                                                 0185
*                                                                  0186
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINE USED TO CALL SETDISKT OUTPUT SERVICES      @Y30OE95*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*CALLOUT:                           /*                       @Y30OE95*/
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @Y30OEAC*/
CALLOUT  DS    0H                                                  0187
*   RFY                             /*                       @Y30OE95*/
*    (REG13,                        /*                       @Y30OEAC*/
*     REG14,                        /*                       @Y30OEAC*/
*     RSETD) RSTD;                  /* RESTRICT REGISTERS    @Y30OEAC*/
*   SETDDCB=DCBPTR;                 /* SET PTR TO DCB IN LST @Y30OE95*/
         ST    DCBPTR,SETDDCB(,AMWKAPTR)                           0188
*   SETDDSID=ACBDSID;               /* GET THE DSID          @Y30OE95*/
         MVC   SETDDSID(8,AMWKAPTR),ACBDSID(AMWKAPTR)              0189
*   RSETD=ADDR(SETDLIST);           /* GET ADDRESS OF        @Y30OE95
*                                      SETDISKT PARM LIST    @Y30OE95*/
         LA    RSETD,SETDLIST(,AMWKAPTR)                           0190
*   STM(REG13,REG14,SAVEREGS);      /* SAVE REGS 13 AND 14   @Y30OEAC*/
         STM   REG13,REG14,SAVEREGS(AMWKAPTR)                      0191
*   REG13=ADDR(REGSAVE);            /* PTR TO REG SAVE AREA  @Y30OEAC*/
         LA    REG13,REGSAVE(,AMWKAPTR)                            0192
*   CALL IOESDKTO;                  /* CALL OUTPUT SERVICES  @Y30OE95*/
         L     @15,@CV01420                                        0193
         BALR  @14,@15                                             0193
*   IF ERTNCDE^=GOODRTN             /* ERRORS FROM OUTPUT    @Y30OEAC*/
*     THEN                          /* SERVICES ?            @Y30OEAC*/
         CLI   ERTNCDE(AMWKAPTR),0                                 0194
         BE    @RF00194                                            0194
*     RTNCD=SYNADCCD;               /* SET ERROR CODE        @Y30OEAC*/
         MVI   RTNCD(AMWKAPTR),X'0C'                               0195
*   ELSE                            /* ERROR FREE RETURN     @Y30OEAC*/
*     IF SETDOPCD^=OPEN             /* OP = EOV OR CLOSE ?   @Y30OEAC*/
*       THEN                        /*                       @Y30OEAC*/
         B     @RC00194                                            0196
@RF00194 CLI   SETDOPCD(AMWKAPTR),1                                0196
         BE    @RF00196                                            0196
*       RTNCD=EODADCCD;             /* SET EODAD CODE        @Y30OEAC*/
         MVI   RTNCD(AMWKAPTR),X'08'                               0197
*   LM(REG13,REG14,SAVEREGS);       /* RESTORE REG 13 AND 14 @Y30OEAC*/
@RF00196 DS    0H                                                  0198
@RC00194 LM    REG13,REG14,SAVEREGS(AMWKAPTR)                      0198
*   RFY                             /*                       @Y30OEAC*/
*    (REG13,                        /*                       @Y30OEAC*/
*     REG14,                        /*                       @Y30OEAC*/
*     RSETD) UNRSTD;                /* RELEASE REGISTERS     @Y30OEAC*/
*   END CALLOUT;                    /*                       @Y30OE95*/
@EL00003 DS    0H                                                  0200
@EF00003 DS    0H                                                  0200
@ER00003 BR    @14                                                 0200
*   END IOEDKPUT                    /*                       @Y30OE95*/
*                                                                  0201
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (MAINPGM )                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSUT5  (PUTEOD  )                                       */
*/*%INCLUDE SYSUT5  (PUTEOB  )                                       */
*/*%INCLUDE SYSUT5  (PUTIO   )                                       */
*/*%INCLUDE SYSUT5  (CALLOUT )                                       */
*                                                                  0201
*       ;                                                          0201
@DATA    DS    0H
@CH00052 DC    H'4'
@CH01453 DC    XL2'1004'
@SM01478 MVC   BUFRAREA(0,@07),USERAREA(@02)
@SM01480 MVC   BUFRAREA(0,@09),USERAREA(@02)
@DATD    DSECT
         DS    0F
IOEDKPUT CSECT
         DS    0F
@CF00054 DC    F'8'
@DATD    DSECT
         DS    0D
IOBPRPTR DS    A
IOBSTPTR DS    A
DEBDAPTR DS    A
DEBEXPTR DS    A
DEBSBPTR DS    A
UCBDCPTR DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IOEDKPUT CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01420 DC    V(IOESDKTO)
         DS    0D
MT3540AR DC    CL72' '
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RSETD    EQU   @01
REG1     EQU   @01
DCBPTR   EQU   @03
RWRK1    EQU   @04
RWRK2    EQU   @05
AMWKAPTR EQU   @06
DEBPTR   EQU   @07
UCBPTR   EQU   @08
SAVREG   EQU   @09
REG13    EQU   @13
REG14    EQU   @14
REXADDR  EQU   @15
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00025 EQU   IHADCS40+12
DCBEROPT EQU   @NM00025
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCYCCK EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBECBPB EQU   IOBECBPT+1
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTART EQU   IOBSTDRD+16
IOBSTRTB EQU   IOBSTART+1
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00036 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBVLSER EQU   UCB3540X
UCBDKBYT EQU   UCB3540X+6
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
AMWORKAR EQU   0
JAMWKAR  EQU   AMWORKAR+4
IOBNO    EQU   JAMWKAR
IOBPTR   EQU   JAMWKAR+1
CCWPTR   EQU   JAMWKAR+5
WORKAREA EQU   JAMWKAR+16
REGSAVE  EQU   WORKAREA+28
AMW3540E EQU   AMWORKAR+120
AMWEAMFG EQU   AMW3540E+3
AMWDSOPN EQU   AMWEAMFG
AMWEOD   EQU   AMW3540E+12
AMWBOE   EQU   AMWEOD
AMWEODRV EQU   AMWBOE
AMWEODTT EQU   AMWBOE+1
AMWEOD0  EQU   AMWBOE+2
AMWEODSS EQU   AMWBOE+3
ACB35EXT EQU   AMWORKAR+136
ACBDSID  EQU   ACB35EXT
ACBVSSER EQU   ACB35EXT+16
ACB35IND EQU   ACB35EXT+22
ACBLRECL EQU   AMWORKAR+162
EXLIST   EQU   AMWORKAR+164
EXLSYNP  EQU   EXLIST
EXLEODP  EQU   EXLIST+4
RPLFIELD EQU   AMWORKAR+172
RPLRLEN  EQU   RPLFIELD
RPLAREA  EQU   RPLFIELD+4
PRLOPTBT EQU   RPLFIELD+8
RPLEODS  EQU   PRLOPTBT
RPLFDBK  EQU   RPLFIELD+9
RPLFDB2  EQU   RPLFDBK+1
SETDLIST EQU   AMWORKAR+184
SETDOPCD EQU   SETDLIST
SETDRTNC EQU   SETDLIST+2
ERTNCDE  EQU   SETDRTNC
SETDDCB  EQU   SETDLIST+4
SETDDSID EQU   SETDLIST+8
SETDWORK EQU   AMWORKAR+200
SAVEREGS EQU   SETDWORK+392
JAMCCW   EQU   0
CCWCMDCD EQU   JAMCCW
CCWDATAD EQU   JAMCCW+1
CCWFLAGS EQU   JAMCCW+4
CCWCOUNT EQU   JAMCCW+6
USERAREA EQU   0
BUFRAREA EQU   0
NOOPCCW  EQU   0
ECB      EQU   0
ECBCMPL1 EQU   ECB
ECBCOMP  EQU   ECBCMPL1
UCBBGN   EQU   0
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBNIOBB EQU   IOBNIOBA+1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
IOBSKTT  EQU   IOBSKADR+1
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00035 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
DCBAMWRK EQU   DCBIOBAD
@NM00049 EQU   DCBAMWRK
DCBAMWKA EQU   DCBAMWRK+1
GETPUTWK EQU   WORKAREA
PARM     EQU   GETPUTWK
RPLRTN   EQU   GETPUTWK+1
RTNCD    EQU   RPLRTN
CNDCD2   EQU   RPLRTN+2
DFNOPS   EQU   GETPUTWK+8
CCWCNT   EQU   DFNOPS
ALLOWOPS EQU   DFNOPS+1
RLENGTH  EQU   DFNOPS+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00052 EQU   GETPUTWK+4
CNDCD1   EQU   RPLRTN+1
@NM00051 EQU   GETPUTWK
DCBAMOUT EQU   @NM00049
DCBAMIN  EQU   @NM00049
DCB3540A EQU   @NM00049
@NM00050 EQU   @NM00049
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00035
UCBSKPFG EQU   @NM00035
UCBRIPND EQU   @NM00035
UCBRTIAC EQU   @NM00035
UCBRSV79 EQU   @NM00035
UCBRSV78 EQU   @NM00035
UCBRSV77 EQU   @NM00035
UCBOLTEP EQU   @NM00035
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00034 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBM     EQU   IOBSEEK
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBPRTOV EQU   IOBNFLG1
ECBCMPL2 EQU   ECB+1
ECBCMPCD EQU   ECBCMPL1
ECBWAIT  EQU   ECBCMPL1
@NM00048 EQU   JAMCCW+5
@NM00047 EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSKIP  EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWCD    EQU   CCWFLAGS
BUFFER2  EQU   AMWORKAR+4488
CCWS2    EQU   AMWORKAR+4256
IOB2     EQU   AMWORKAR+4208
BUFFER1  EQU   AMWORKAR+880
CCWS1    EQU   AMWORKAR+648
IOB1     EQU   AMWORKAR+600
R14SAVE  EQU   SAVEREGS+4
R13SAVE  EQU   SAVEREGS
@NM00046 EQU   SETDWORK
ERTNCDQL EQU   SETDRTNC+1
SETDVERY EQU   SETDLIST+1
@NM00045 EQU   RPLFDBK+2
@NM00044 EQU   RPLFDBK
@NM00043 EQU   PRLOPTBT
@NM00042 EQU   AMWORKAR+160
@NM00041 EQU   ACB35IND
ACBSECUR EQU   ACB35IND
ACBFEED  EQU   ACB35IND
ACBJOBID EQU   ACB35EXT+8
AMWBOESS EQU   AMWEODSS
AMWBOE0  EQU   AMWEOD0
AMWBOETT EQU   AMWEODTT
AMWBOERV EQU   AMWEODRV
AMWDSID  EQU   AMW3540E+4
@NM00040 EQU   AMWEAMFG
AMWVAMSG EQU   AMWEAMFG
AMWMULTI EQU   AMWEAMFG
AMWVSEQU EQU   AMW3540E+2
AMWDSSQL EQU   AMW3540E+1
AMWVOLAC EQU   AMW3540E
WORKBSL  EQU   WORKAREA
IOBBFLN  EQU   JAMWKAR+13
@NM00039 EQU   JAMWKAR+12
IOB1ADDR EQU   JAMWKAR+9
@NM00038 EQU   JAMWKAR+8
@NM00037 EQU   JAMWKAR+4
AMWLEN   EQU   AMWORKAR
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00036
UCBHALI  EQU   @NM00036
UCBRSV09 EQU   @NM00036
UCBRSV08 EQU   @NM00036
UCBRSV07 EQU   @NM00036
UCBRSV06 EQU   @NM00036
UCBRSV05 EQU   @NM00036
UCBRSV04 EQU   @NM00036
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00033 EQU   UCB
DEBXRV40 EQU   DEBXTN+28
DEBXRV39 EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXRV42 EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBRSV19 EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00032 EQU   DEBACS08+12
@NM00031 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00030 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00029 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSIOCC EQU   IOBSTART
IOBSTBYT EQU   IOBIOCSW+3
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBMSG   EQU   IOBFL3
IOBCNC   EQU   IOBFL3
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBCC EQU   IOBECBPT
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBUNREL EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00028 EQU   IHADCS40+16
@NM00027 EQU   @NM00025+1
@NM00026 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00024 EQU   IHADCS40+10
@NM00023 EQU   IHADCS40+9
@NM00022 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00021 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00020 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00019 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00018 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00017 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00016 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00015 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00014 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
@NM00013 EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00012 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00011 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00010 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00009 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00008 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00007 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00006 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00005 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00004 EQU   IHADCS01+5
@NM00003 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00002 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00001 EQU   IHADCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00097 EQU   @RC00093
@RF00111 EQU   @RC00107
@RF00116 EQU   @RC00107
@RF00182 EQU   @EL00002
@PB00003 EQU   @EL00001
@PB00002 EQU   @PB00003
@RF00135 EQU   @PB00002
@ENDDATA EQU   *
         END   IOEDKPUT,(C'PLS1443',0701,78107)
