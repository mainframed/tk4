         TITLE 'IOEDKRDR-3540 DISKETTE READER                          *
                        '
IOEDKRDR CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IOEDKRDR  75.308'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         LA    @09,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         USING @PSTART+12285,@09                                   0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*                                                                  0110
*   /*****************************************************************/
*   /*                                                               */
*   /* START SEGMENT-SETUP & INITIALIZE                      @Y30OE78*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0110
*   IF PARMLEN>ZERO THEN            /* IF JCL PARM IS        @Y30OE78*/
         L     @08,PARMADDR(,PARMPTR)                              0110
         ICM   @03,3,PARMLEN(@08)                                  0110
         BNP   @RF00110                                            0110
*     DO;                           /* SPECIFIED, PROCESS IT @Y30OE78*/
*       DO I=1 TO PARMLEN;          /* SCAN PARM TEXT FOR    @Y30OE78*/
         LA    I,1                                                 0112
         B     @DE00112                                            0112
@DL00112 DS    0H                                                  0113
*         IF PARMTXT(I)<'0'×        /* NON-NUMERIC(INVALID)  @Y30OE78*/
*             PARMTXT(I)>'9' THEN   /* CHARACTERS            @Y30OE78*/
         L     @08,PARMADDR(,PARMPTR)                              0113
         LR    @05,@08                                             0113
         ALR   @05,I                                               0113
         CLI   PARMTXT-1(@05),C'0'                                 0113
         BL    @RT00113                                            0113
         ALR   @08,I                                               0113
         CLI   PARMTXT-1(@08),C'9'                                 0113
         BNH   @RF00113                                            0113
@RT00113 DS    0H                                                  0114
*           BADPARM=ON;             /* SET BAD CHAR SWITCH   @Y30OE78*/
         OI    BADPARM,B'01000000'                                 0114
*       END;                        /*                       @Y30OE78*/
@RF00113 AH    I,@CH00061                                          0115
@DE00112 L     @08,PARMADDR(,PARMPTR)                              0115
         CH    I,PARMLEN(,@08)                                     0115
         BNH   @DL00112                                            0115
*       IF BADPARM=ON×              /* IF BAD CHAR FOUND,    @Y30OE78*/
*           PARMLEN>MAXPLEN THEN    /* OR PARM TOO BIG,      @Y30OE78*/
         TM    BADPARM,B'01000000'                                 0116
         BO    @RT00116                                            0116
         L     @08,PARMADDR(,PARMPTR)                              0116
         LH    @08,PARMLEN(,@08)                                   0116
         CH    @08,@CH00066                                        0116
         BNH   @RF00116                                            0116
@RT00116 DS    0H                                                  0117
*         DO;                       /* PREPARE TO EXIT       @Y30OE78*/
*           RTNCODE=TERMERR;        /* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0118
*           MSGIDEX=M552;           /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'02'                                       0119
*           MSGTYPE=MTYPWTO;        /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0120
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARM LIST    @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0121
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0122
         BALR  @14,@15                                             0122
*         END;                      /*                       @Y30OE78*/
*       ELSE                        /*                       @Y30OE78*/
*         DO;                       /*                       @Y30OE78*/
         B     @RC00116                                            0124
@RF00116 DS    0H                                                  0125
*           I=MAXPLEN-PARMLEN+1;    /* SET INDEX TO FIRST    @Y30OE78
*                                      CHAR IN WORKAREA TO   @Y30OE78
*                                      BE REPLACED BY PARM   @Y30OE78*/
         LA    @08,6                                               0125
         L     @03,PARMADDR(,PARMPTR)                              0125
         LR    I,@08                                               0125
         SH    I,PARMLEN(,@03)                                     0125
         AH    I,@CH00061                                          0125
*           WORKB(I:6)=PARMTXT(1:PARMLEN);/* MOVE PARM VAL   @Y30OE78
*                                      INTO WORKAREA RIGHT   @Y30OE78
*                                      JUSTIFIED             @Y30OE78*/
         LA    @05,WORKB-1(I)                                      0126
         SLR   @08,I                                               0126
         EX    @08,@SM01648                                        0126
*           PACK(WORKA,WORKB);      /* PACK PARM VALUE       @Y30OE78*/
         PACK  WORKA(8),WORKB(6)                                   0127
*           CVB(ADS#,WORKA);        /* CONVERT PARM VALUE    @Y30OE78
*                                      TO BINARY & PLACE     @Y30OE78
*                                      IN ADS#               @Y30OE78*/
         CVB   @08,WORKA                                           0128
         ST    @08,ADS#                                            0128
*         END;                      /*                       @Y30OE78*/
*     END;                          /*                       @Y30OE78*/
@RC00116 DS    0H                                                  0131
*   IF RTNCODE=NOERR THEN           /* IF ERROR, ALL DONE    @Y30OE78*/
@RF00110 CLI   RTNCODE,0                                           0131
         BNE   @RF00131                                            0131
*     DO;                           /*                       @Y30OE78*/
*       GEN REFS(EXTANS)            /* GET TIOT & COMM ADDR  @Y30OE78*/
*           (EXTRACT EXTANS,FIELDS=(TIOT,COMM));/*           @Y30OE78*/
         EXTRACT EXTANS,FIELDS=(TIOT,COMM)
*       IF CIBPTR^=ZERO&            /* IF CMD PARAMETER WAS  @ZA04463*/
*           CIBDATLN>ZERO THEN      /* SPECIFIED             @ZA04463*/
         SLR   @08,@08                                             0134
         L     @03,COMMADDR                                        0134
         L     @03,CIBPTR(,@03)                                    0134
         CR    @03,@08                                             0134
         BE    @RF00134                                            0134
         LH    @15,CIBDATLN(,@03)                                  0134
         CR    @15,@08                                             0134
         BNH   @RF00134                                            0134
*         DO;                       /* SPECIFIED, PROCESS IT @Y30OE78*/
*           STARTJOB=ON;            /* SET SWITCH TO CAUSE   @Y30OE78
*                                      STARTJOB SCAN         @Y30OE78*/
         OI    STARTJOB,B'10000000'                                0136
*           I=MIN(CIBDATLN,LENGTH(SJOBNAME));/* GET LENGTH   @Y30OE78
*                                      TO BE USED            @Y30OE78*/
         LA    I,8                                                 0137
         CR    @15,I                                               0137
         BNH   *+6
         LR    @15,I                                               0137
         LR    I,@15                                               0137
*           SJOBNAME=CIBDATA(1:I);  /* MOVE SCAN             @Y30OE78
*                                      NAME TO LOCAL AREA    @Y30OE78*/
         MVI   SJOBNAME+1,C' '                                     0138
         MVC   SJOBNAME+2(6),SJOBNAME+1                            0138
         LR    @08,I                                               0138
         BCTR  @08,0                                               0138
         EX    @08,@SM01651                                        0138
*         END;                      /*                       @Y30OE78*/
*       TIOTPTR=TIOTADDR;           /* GET FIRST TIOT ENTRY  @Y30OE78*/
@RF00134 L     TIOTPTR,TIOTADDR                                    0140
*       DO WHILE(TIOELNGH^=ZERO);   /* SCAN TO END OF TIOT   @Y30OE78*/
         B     @DE00141                                            0141
@DL00141 DS    0H                                                  0142
*         DO I=RDER TO UT3;         /* CHECK FOR VALID DDNM  @Y30OE78*/
         LA    I,1                                                 0142
@DL00142 DS    0H                                                  0143
*           IF TIOEDDNM=DDNAME(I)&  /* IF VALID NAME FOUND,& @Y30OE78*/
*               DFOUND(I)=OFF THEN  /* NOT FOUND PREVIOUSLY, @Y30OE78*/
         LR    @08,I                                               0143
         MH    @08,@CH00032                                        0143
         LA    @05,DDNAME-12(@08)                                  0143
         CLC   TIOEDDNM(8,TIOTPTR),0(@05)                          0143
         BNE   @RF00143                                            0143
         LA    @05,DFOUND-12(@08)                                  0143
         TM    0(@05),B'10000000'                                  0143
         BNZ   @RF00143                                            0143
*             DO;                   /* PROCESS IT            @Y30OE78*/
*               DFOUND(I)=ON;       /* MARK ENTRY FOUND      @Y30OE78*/
         LA    @05,DFOUND-12(@08)                                  0145
         OI    0(@05),B'10000000'                                  0145
*               IF TIOESSDS=ON THEN /* IF SUBSYS DATA SET,   @Y30OE78*/
         TM    TIOESSDS(TIOTPTR),B'00000010'                       0146
         BNO   @RF00146                                            0146
*                 DSSDS(I)=ON;      /* MARK AS SUCH          @Y30OE78*/
         LA    @05,DSSDS-12(@08)                                   0147
         OI    0(@05),B'01000000'                                  0147
*               ELSE                /* OTHERWISE,            @Y30OE78*/
*                 DEVPTR(I)=TIOEFSRT;/* SAVE UCB ADDRESS     @Y30OE78*/
         B     @RC00146                                            0148
@RF00146 LR    @08,I                                               0148
         MH    @08,@CH00032                                        0148
         LA    @05,DEVPTR-12(@08)                                  0148
         MVC   0(3,@05),TIOEFSRT(TIOTPTR)                          0148
*             END;                  /*                       @Y30OE78*/
@RC00146 DS    0H                                                  0150
*         END;                      /*                       @Y30OE78*/
@RF00143 AH    I,@CH00061                                          0150
         CH    I,@CH00056                                          0150
         BNH   @DL00142                                            0150
*         TIOTPTR=TIOTPTR+TIOELNGH; /* GET NEXT ENTRY        @Y30OE78*/
         SLR   @08,@08                                             0151
         IC    @08,TIOELNGH(,TIOTPTR)                              0151
         ALR   TIOTPTR,@08                                         0151
*       END;                        /*                       @Y30OE78*/
@DE00141 CLI   TIOELNGH(TIOTPTR),0                                 0152
         BNE   @DL00141                                            0152
*       IF DFOUND(RDER)=OFF THEN    /* IF NOT FOUND,         @Y30OE78*/
         TM    DFOUND,B'10000000'                                  0153
         BNZ   @RF00153                                            0153
*         DO;                       /* PROCESS AS ERROR      @Y30OE78*/
*           RTNCODE=TERMERR;        /* SET ERROR CODE        @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0155
*           MSGIDEX=M543;           /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'01'                                       0156
*           MSGTYPE=MTYPWTO;        /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0157
*           DDNK=DDNV;              /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0158
*           DDN=DDNAME(RDER);       /* SET DD NAME VALUE     @Y30OE78*/
         MVC   DDN(8),DDNAME                                       0159
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARM LIST    @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0160
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0161
         BALR  @14,@15                                             0161
*           DDNK=SKIPV;             /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0162
*         END;                      /*                       @Y30OE78*/
*       ELSE                        /*                       @Y30OE78*/
*         IF DEVPTR(RDER)^=ZERO&    /* IF RDER DEVICE IS     @Y30OE78*/
*             DEVPTR(RDER)->UCBTYP(3:4)=TYPE3540 THEN/* A    @Y30OE78
*                                      3540,                 @Y30OE78*/
         B     @RC00153                                            0164
@RF00153 SLR   @08,@08                                             0164
         ICM   @08,7,DEVPTR                                        0164
         LTR   @08,@08                                             0164
         BZ    @RF00164                                            0164
         CLC   UCBTYP+2(2,@08),@CB00165                            0164
         BNE   @RF00164                                            0164
*           DO;                     /*                       @Z30OE78*/
*             RDER3540=ON;          /* SET INDICATOR         @Z30OE78*/
         OI    RDER3540,B'00100000'                                0166
*             RDEV=DEVPTR(RDER);    /* PUT ADDR OF 3540 UCB  @Z30OE78
*                                      IN ESTAE PARAMETERS   @Z30OE78*/
         ST    @08,RDEV                                            0167
*           END;                    /*                       @Z30OE78*/
*       IF DSSDS(UT2)=OFF THEN      /* IF UT2 IS NOT A SUB-  @Y30OE78*/
@RF00164 DS    0H                                                  0169
@RC00153 TM    DSSDS+24,B'01000000'                                0169
         BNZ   @RF00169                                            0169
*         DO;                       /* SYSTEM DATA SET,      @Y30OE78*/
*           RTNCODE=TERMERR;        /* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0171
*           MSGIDEX=M543;           /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'01'                                       0172
*           MSGTYPE=MTYPWTO;        /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0173
*           DDNK=DDNV;              /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0174
*           DDN=DDNAME(UT2);        /* SET DD NAME VALUE     @Y30OE78*/
         MVC   DDN(8),DDNAME+24                                    0175
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARM LIST    @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0176
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0177
         BALR  @14,@15                                             0177
*           DDNK=SKIPV;             /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0178
*         END;                      /*                       @Y30OE78*/
*       IF ADS#^=ZERO THEN          /* DIRECT MODE-> DONE    @Y30OE78*/
@RF00169 ICM   @08,15,ADS#                                         0180
         BZ    @RF00180                                            0180
*         DO;                       /*                       @Y30OE78*/
*           IF DEVPTR(UT3)=ZERO×    /* MUST HAVE UT3 DD      @Y30OE78*/
*               DEVPTR(UT3)->UCB3DACC=OFF THEN/* DESCRIBING  @Y30OE78
*                                      A DASD FILE           @Y30OE78*/
         SLR   @08,@08                                             0182
         ICM   @08,7,DEVPTR+36                                     0182
         LTR   @08,@08                                             0182
         BZ    @RT00182                                            0182
         TM    UCB3DACC(@08),B'00100000'                           0182
         BNZ   @RF00182                                            0182
@RT00182 DS    0H                                                  0183
*             DO;                   /* OR DO ERROR PROCESS   @Y30OE78*/
*               RTNCODE=TERMERR;    /* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0184
*               MSGIDEX=M543;       /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'01'                                       0185
*               MSGTYPE=MTYPWTO;    /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0186
*               DDNK=DDNV;          /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0187
*               DDN=DDNAME(UT3);    /* SET DD NAME VALUE     @Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    0188
*               PARMPTR=ADDR(MSGINT);/* POINT TO PARM LIST   @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0189
*               CALL IOEDKMSG;      /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0190
         BALR  @14,@15                                             0190
*               DDNK=SKIPV;         /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0191
*             END;                  /*                       @Y30OE78*/
*           IF DEVPTR(DATA)^=ZERO&  /* IF DATA DD IS         @Z30OE78*/
*               DEVPTR(DATA)->UCBTYP(3:4)=TYPE3540 THEN/*    @Z30OE78
*                                      DESCRIBING A 3540     @Y30OE78*/
@RF00182 SLR   @08,@08                                             0193
         ICM   @08,7,DEVPTR+12                                     0193
         LTR   @08,@08                                             0193
         BZ    @RF00193                                            0193
         CLC   UCBTYP+2(2,@08),@CB00165                            0193
         BNE   @RF00193                                            0193
*             DDEV=DEVPTR(DATA);    /* PUT ADDR OF 3540 UCB  @Z30OE78
*                                      IN ESTAE PARAMETERS   @Z30OE78*/
         ST    @08,DDEV                                            0194
*           ELSE                    /* IF NOT 3540,          @Z30OE78*/
*             DO;                   /* DO ERROR PROCESS      @Z30OE78*/
         B     @RC00193                                            0195
@RF00193 DS    0H                                                  0196
*               RTNCODE=TERMERR;    /* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0196
*               MSGIDEX=M543;       /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'01'                                       0197
*               MSGTYPE=MTYPWTO;    /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0198
*               DDNK=DDNV;          /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0199
*               DDN=DDNAME(DATA);   /* SET DDNAME VALUE      @Y30OE78*/
         MVC   DDN(8),DDNAME+12                                    0200
*               PARMPTR=ADDR(MSGINT);/* POINT TO PARM LIST   @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0201
*               CALL IOEDKMSG;      /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0202
         BALR  @14,@15                                             0202
*               DDNK=SKIPV;         /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0203
*             END;                  /*                       @Y30OE78*/
*           IF RTNCODE=NOERR THEN   /* IF STILL ERROR FREE,  @Y30OE78*/
@RC00193 CLI   RTNCODE,0                                           0205
         BNE   @RF00205                                            0205
*             DO;                   /* GET DSN TABLE         @Y30OE78*/
*               GETMNLV=ADS#*LENGTH(DSNENTRY)+/* CALCULATE   @Y30OE78*/
*                   LENGTH(DSNENTRY)+/* SPACE REQUIRED FOR   @Y30OE78*/
*                   LENGTH(DSNHDR); /* DSN TABLE             @Y30OE78*/
         L     @08,ADS#                                            0207
         MH    @08,@CH01204                                        0207
         AH    @08,@CH00680                                        0207
         STCM  @08,7,GETMNLV                                       0207
*               GEN REFS(GETMNLA,GETMNA)/*                   @Y30OE78*/
*                   (GETMAIN LC,LA=GETMNLA,A=GETMNA);/*      @Y30OE78*/
         GETMAIN LC,LA=GETMNLA,A=GETMNA
*               RFY                                                0209
*                 RTNCDREG RSTD;    /*                       @Y30OE78*/
*               IF RTNCDREG=ZERO THEN/* IF GETMAIN SUCCESS,  @Y30OE78*/
         SLR   @14,@14                                             0210
         CR    RTNCDREG,@14                                        0210
         BNE   @RF00210                                            0210
*                 DO;               /*                       @Y30OE78*/
*                   RFY                                            0212
*                     RTNCDREG UNRSTD;/*                     @Y30OE78*/
*                   DSNELN=LENGTH(DSNENTRY);/* SET LENGTH OF @Y30OE78
*                                      ENTRY IN HEADER       @Y30OE78*/
         LA    @08,40                                              0213
         L     @03,GETMNA                                          0213
         STH   @08,DSNELN(,@03)                                    0213
*                   DSNPTRJ=ADDR(DSNENT1);/* GET JCL ENTRY OF      0214
*                                                            @Y30OE78
*                                      DSNTABLE              @Y30OE78*/
         LA    @03,DSNENT1(,@03)                                   0214
         ST    @03,DSNPTRJ                                         0214
*                   MEMNAME='JCLMEMBR';/* SET JCL MEMBER     @Y30OE78
*                                      NAME IN 1ST DSNTAB    @Y30OE78
*                                      ENTRY                 @Y30OE78*/
         MVC   MEMNAME(8,@03),@CC01449                             0215
*                   TTR0=ZERO;      /* CLEAR RELATIVE TRACK  @Y30OE78
*                                      ADDRESS FOR THIS MEM  @Y30OE78*/
         ST    @14,TTR0(,@03)                                      0216
*                   JOBERR=OFF;     /* INIT ERROR SWITCH     @Y30OE78*/
         NI    JOBERR(@03),B'11101111'                             0217
*                   DSNPTRJ=DSNPTRJ+LENGTH(DSNENTRY);/* SET  @Y30OE78
*                                      POINTER TO            @Y30OE78
*                                      FIRST ENTRY AVAILABLE @Y30OE78
*                                      FOR ADS               @Y30OE78*/
         ALR   @03,@08                                             0218
         ST    @03,DSNPTRJ                                         0218
*                   FRSTADSN=DSNPTRJ;/* SAVE ADDR OF 1ST ADS @Y30OE78
*                                      ENTRY IN DSNTAB       @Y30OE78*/
         ST    @03,FRSTADSN                                        0219
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF GETMAIN FAILED,    @Y30OE78*/
*                 DO;               /* ERROR EXIT            @Y30OE78*/
         B     @RC00210                                            0221
@RF00210 DS    0H                                                  0222
*                   RTNCODE=TERMERR;/* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0222
*                   MSGIDEX=M553;   /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'03'                                       0223
*                   MSGTYPE=MTYPWTO;/* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0224
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARMS   @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0225
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0226
         BALR  @14,@15                                             0226
*                 END;              /*                       @Y30OE78*/
*             END;                  /*                       @Y30OE78*/
@RC00210 DS    0H                                                  0229
*         END;                      /*                       @Y30OE78*/
@RF00205 DS    0H                                                  0230
*     END;                          /*                       @Y30OE78*/
*                                                                  0230
@RF00180 DS    0H                                                  0231
*   /*****************************************************************/
*   /*                                                               */
*   /* END SEGMENT-SETUP & INITIALIZE                        @Y30OE78*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0231
*   IF RTNCODE=NOERR THEN           /* IF ERROR, ALL DONE    @Y30OE78*/
@RF00131 CLI   RTNCODE,0                                           0231
         BNE   @RF00231                                            0231
*     DO;                           /*                       @Y30OE78*/
*                                                                  0232
*       /*************************************************************/
*       /*                                                           */
*       /* START SEGMENT-INPUT JCL                           @Y30OE78*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0233
*       BLKPTR=ADDR(IOEESTAE);      /* GET ADDR OF ESTAE     @Z30OE78
*                                      EXIT ROUTINE          @Z30OE78*/
         L     BLKPTR,@CV00046                                     0233
*       GEN REFS(BLKPTR,STAEPARM);                                 0234
*                                  /* HOOK UP ESTAE EXIT    @Z30OE78*/
        ESTAE (BLKPTR),PARAM=STAEPARM,PURGE=HALT,ASYNCH=NO,   @Z30OE78CC
               TERM=YES                                       @Z30OE78
*       OPENPTR=ADDR(OPENLST);      /* INITIALIZE POINTER TO @Y30OE78
*                                      FIRST OPEN LIST       @Y30OE78*/
         LA    @08,OPENLST                                         0235
         ST    @08,OPENPTR                                         0235
*       IF ADS#=ZERO THEN           /* IF DIRECT MODE, BUMP  @Y30OE78*/
         ICM   @03,15,ADS#                                         0236
         BNZ   @RF00236                                            0236
*         OPENPTR=OPENPTR+          /* PAST FIRST TWO LISTS  @Y30OE78*/
*             2*LENGTH(OPNLST);     /*                       @Y30OE78*/
         AH    @08,@CH00164                                        0237
         ST    @08,OPENPTR                                         0237
*       IF RDER3540=OFF THEN        /* IF RDER IS 3540, BUMP @Y30OE78*/
@RF00236 TM    RDER3540,B'00100000'                                0238
         BNZ   @RF00238                                            0238
*         OPENPTR=OPENPTR+          /* PAST ONE MORE LIST    @Y30OE78*/
*             LENGTH(OPNLST);       /*                       @Y30OE78*/
         LA    @08,8                                               0239
         AL    @08,OPENPTR                                         0239
         ST    @08,OPENPTR                                         0239
*       PARMPTR=OPENPTR;            /* PASS OPENPTR          @Y30OE78*/
@RF00238 L     PARMPTR,OPENPTR                                     0240
*       GEN REFS(PARMPTR)           /* OPEN REQUIRED DCBS    @Y30OE78*/
*           (OPEN  MF=(E,(PARMPTR)));/*                      @Y30OE78*/
         OPEN  MF=(E,(PARMPTR))
*       DCBPTR=INDCBAD;             /* GET INPUT DCB         @Y30OE78*/
         L     @08,OPENPTR                                         0242
         SLR   @03,@03                                             0242
         ICM   @03,7,INDCBAD(@08)                                  0242
         ST    @03,DCBPTR                                          0242
*       IF DCBOFOPN^=ON THEN        /* IF INPUT OPEN FAILED  @Y30OE78*/
         TM    DCBOFOPN+40(@03),B'00010000'                        0243
         BO    @RF00243                                            0243
*         DO;                       /* PREPARE ERROR EXIT    @Y30OE78*/
*           RTNCODE=TERMERR;        /* SET BAD RETURN CODE   @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0245
*           MSGIDEX=M549;           /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0246
*           MSGTYPE=MTYPWTO;        /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0247
*           DDNK=DDNV;              /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0248
*           DDN=DDNAME(RDER);       /* SET DD NAME VALUE     @Y30OE78*/
         MVC   DDN(8),DDNAME                                       0249
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARM LIST    @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0250
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0251
         BALR  @14,@15                                             0251
*           DDNK=SKIPV;             /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0252
*         END;                      /*                       @Y30OE78*/
*       DCBPTR=OUTDCBAD;            /* GET OUTPUT DCB        @Y30OE78*/
@RF00243 L     @08,OPENPTR                                         0254
         SLR   @03,@03                                             0254
         ICM   @03,7,OUTDCBAD(@08)                                 0254
         ST    @03,DCBPTR                                          0254
*       IF DCBOFOPN^=ON THEN        /* IF OUTPUT OPEN FAILED @Y30OE78*/
         TM    DCBOFOPN+40(@03),B'00010000'                        0255
         BO    @RF00255                                            0255
*         DO;                       /* PREPARE ERROR EXIT    @Y30OE78*/
*           RTNCODE=TERMERR;        /* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0257
*           MSGIDEX=M549;           /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0258
*           MSGTYPE=MTYPWTO;        /* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0259
*           DDNK=DDNV;              /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0260
*           IF ADS#^=ZERO THEN      /* IF MERGE MODE,        @Y30OE78*/
         ICM   @08,15,ADS#                                         0261
         BZ    @RF00261                                            0261
*             DDN=DDNAME(UT3);      /* SET DDN TO SYSUT3     @Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    0262
*           ELSE                    /* IF DIRECT MODE,       @Y30OE78*/
*             DDN=DDNAME(UT2);      /* SET DDN TO SYSUT2     @Y30OE78*/
         B     @RC00261                                            0263
@RF00261 MVC   DDN(8),DDNAME+24                                    0263
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARM LIST    @Y30OE78*/
@RC00261 LA    PARMPTR,MSGINT                                      0264
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0265
         BALR  @14,@15                                             0265
*           DDNK=SKIPV;             /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0266
*         END;                      /*                       @Y30OE78*/
*       IF RTNCODE=NOERR THEN       /* IF ERROR FREE,CONTINU @Y30OE78*/
@RF00255 CLI   RTNCODE,0                                           0268
         BNE   @RF00268                                            0268
*         DO;                       /*                       @Y30OE78*/
*           IF RDER3540=ON THEN     /* IF RDER WAS 3540      @Y30OE78*/
         TM    RDER3540,B'00100000'                                0270
         BNO   @RF00270                                            0270
*             DO;                   /* MUST OPEN DEVICE      @Y30OE78*/
*               DCBPTR=ADDR(RDEREX);/* PASS DCB PTR          @Y30OE78*/
         LA    @08,RDEREX                                          0272
         ST    @08,DCBPTR                                          0272
*               DCBAMIN=ON;         /* OPEN FOR INPUT        @Y30OE78*/
         OI    DCBAMIN+16(@08),B'00000010'                         0273
*               PARMPTR=DCBPTR;     /* POINT TO DCB          @Y30OE78*/
         LR    PARMPTR,@08                                         0274
*               CALL IOEDKOPN;      /* CALL 3540 DEVICE OPEN @Y30OE78*/
         L     @15,@CV00051                                        0275
         BALR  @14,@15                                             0275
*               RFY                                                0276
*                 RTNCDREG RSTD;    /*                       @Y30OE78*/
*               IF RTNCDREG=ZERO THEN/* IF SUCCESSFUL,       @Y30OE78*/
         LTR   RTNCDREG,RTNCDREG                                   0277
         BNZ   @RF00277                                            0277
*                 DO;               /* PREPARE AMWORKAR      @Y30OE78*/
*                   RFY                                            0279
*                     RTNCDREG UNRSTD;/*                     @Y30OE78*/
*                   EXLSYNP=ADDR(RDERSYN);/* SET SYNAD ADDRESS     0280
*                                                            @Y30OE78*/
         L     @08,DCBPTR                                          0280
         SLR   @03,@03                                             0280
         ICM   @03,7,DCBAMWKA+16(@08)                              0280
         LA    @08,RDERSYN                                         0280
         ST    @08,EXLSYNP(,@03)                                   0280
*                   EXLEODP=ADDR(RDEREOD);/* SET EODAD ADDRESS     0281
*                                                            @Y30OE78*/
         LA    @08,RDEREOD                                         0281
         ST    @08,EXLEODP(,@03)                                   0281
*                   RPLAREA=ADDR(RECJCL);/* SET ADDRESS OF   @Y30OE78
*                                      RECORD WORK AREA      @Y30OE78*/
         LA    @08,RECJCL                                          0282
         ST    @08,RPLAREA(,@03)                                   0282
*                   ACBLRECL=LENGTH(RECJCL);/* SET REC LENGTH      0283
*                                                            @Y30OE78*/
         MVC   ACBLRECL(2,@03),@CH00248                            0283
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF ERROR,             @Y30OE78*/
*                 DO;               /* PREPARE ERROR EXIT    @Y30OE78*/
         B     @RC00277                                            0285
@RF00277 DS    0H                                                  0286
*                   RTNCODE=TERMERR;/* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0286
*                   MSGIDEX=M549;   /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0287
*                   MSGTYPE=MTYPWTO;/* SET MSG TYPE          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0288
*                   DDNK=DDNV;      /* SET DDN KEY           @Y30OE78*/
         MVI   DDNK,X'07'                                          0289
*                   DDN=DDNAME(RDER);/* SET DDN TO IEFRDER   @Y30OE78*/
         MVC   DDN(8),DDNAME                                       0290
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARM LIST     0291
*                                                            @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0291
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0292
         BALR  @14,@15                                             0292
*                   DDNK=SKIPV;     /* RESET DDN KEY TO SKIP @Y30OE78*/
         MVI   DDNK,X'00'                                          0293
*                 END;              /*                       @Y30OE78*/
*             END;                  /*                       @Y30OE78*/
*           ELSE                    /* RDER WILL USE QSAM    @Z30OE78*/
*             RABEX=ADDR(RDERABEX); /* CAUSE ANY EOV ABEND   @Z30OE78
*                                      TO BE REGARDED AS AN  @Z30OE78
*                                      I/O ERROR             @Z30OE78*/
         B     @RC00270                                            0296
@RF00270 LA    @08,RDERABEX                                        0296
         STCM  @08,7,RABEX                                         0296
*           IF RTNCODE=NOERR THEN   /* IF ERROR FREE,        @Y30OE78*/
@RC00270 CLI   RTNCODE,0                                           0297
         BNE   @RF00297                                            0297
*             DO;                   /* CONTINUE PROCESSING   @Y30OE78*/
*               IF ADS#^=ZERO THEN  /* IF MERGE MODE,        @Y30OE78*/
         ICM   @08,15,ADS#                                         0299
         BZ    @RF00299                                            0299
*                 DO;               /* MUST PREPARE BUFFERS  @Y30OE78*/
*                   UABEX=ADDR(UT3OABEX);/* CAUSE ANY EOV    @Z30OE78
*                                      ABEND TO BE REGARDED  @Z30OE78
*                                      AS AN I/O ERROR       @Z30OE78*/
         LA    @08,UT3OABEX                                        0301
         STCM  @08,7,UABEX                                         0301
*                   BUFCBPTR=ADDR(BUFCB1);/* GET BUF CNTRL AREA    0302
*                                                            @Y30OE78*/
         LA    @08,BUFCB1                                          0302
         ST    @08,BUFCBPTR                                        0302
*                   DO I=1 TO 2;    /* PROCESS BOTH BUFFERS  @Y30OE78*/
         LA    I,1                                                 0303
@DL00303 DS    0H                                                  0304
*                     GEN REFS(UT3BPOUT,PARMPTR)/* GET BUFFER      0304
*                                                            @Y30OE78*/
*                         (GETBUF UT3BPOUT,PARMPTR);/* POINTER     0304
*                                                            @Y30OE78*/
         GETBUF UT3BPOUT,PARMPTR
*                     BUFPTR=PARMPTR;/* SAVE BUFFER PTR IN   @Y30OE78
*                                      CONTROL ELEMENT       @Y30OE78*/
         L     @08,BUFCBPTR                                        0305
         L     @05,BUFELPTR(,@08)                                  0305
         ST    PARMPTR,BUFPTR(,@05)                                0305
*                     BLKLEN=LENGTH(BDW);/* INITIALIZE BLK LEN     0306
*                                                            @Y30OE78*/
         L     @03,BUFCBPTR                                        0306
         L     @03,BUFELPTR(,@03)                                  0306
         L     @03,BUFPTR(,@03)                                    0306
         MVC   BLKLEN(2,@03),@CH00056                              0306
*                     WRIND=NOTWRIT;/* INDICATE BUFFER NOT   @Y30OE78
*                                      WRITTEN YET           @Y30OE78*/
         MVC   WRIND(2,@03),@CH00193                               0307
*                     BUFELPTR=BUFELNXT;/* GET NEXT BUFFR ELMNT    0308
*                                                            @Y30OE78*/
         L     @05,BUFELNXT(,@05)                                  0308
         ST    @05,BUFELPTR(,@08)                                  0308
*                   END;            /*                       @Y30OE78*/
         AH    I,@CH00061                                          0309
         CH    I,@CH00135                                          0309
         BNH   @DL00303                                            0309
*                   RECPTR=ADDR(RECAREA);/* SET RECPTR TO FIRST    0310
*                                                            @Y30OE78
*                                      RECORD SLOT IN FIRST  @Y30OE78
*                                      BUFFER                @Y30OE78*/
         L     @08,BUFCBPTR                                        0310
         L     @03,BUFELPTR(,@08)                                  0310
         L     @03,BUFPTR(,@03)                                    0310
         LA    @03,RECAREA(,@03)                                   0310
         ST    @03,RECPTR(,@08)                                    0310
*                 END;              /*                       @Y30OE78*/
*               DO WHILE(IJSCERR=OFF&/* IF NO ERRORS AND     @Y30OE78*/
*                     INERR=OFF&    /*                       @Y30OE78*/
*                     INEOF=OFF&    /* EOD NOT HIT,PROCESS   @Y30OE78*/
*                     UT2SYNI=OFF&  /* THE                   @Y30OE78*/
*                     UT3SYN=OFF);  /* NEXT JCL RECORD       @Y30OE78*/
*                                                                  0312
@RF00299 B     @DE00312                                            0312
@DL00312 DS    0H                                                  0313
*                 /***************************************************/
*                 /*                                                 */
*                 /* START SEGMENT-GET/WRITE JCL             @Y30OE78*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0313
*                 IF RDER3540=ON THEN/* IF RDER IS 3540,     @Y30OE78*/
         TM    RDER3540,B'00100000'                                0313
         BNO   @RF00313                                            0313
*                   DO;             /* MUST USE DISKETTE GET @Y30OE78*/
*                     PARMPTR=ADDR(RDEREX);/* POINT TO DCB   @Y30OE78*/
         LA    PARMPTR,RDEREX                                      0315
*                     CALL IOEDKGET;/* DO DISKETTE GET       @Y30OE78*/
         L     @15,@CV00049                                        0316
         BALR  @14,@15                                             0316
*                   END;            /*                       @Y30OE78*/
*                 ELSE              /* IF RDER IS NOT 3540,  @Y30OE78*/
*                   GEN REFS(RDERQS,RECA)/* USE QSAM GET     @Y30OE78*/
*                       (GET   RDERQS,RECA);/*               @Y30OE78*/
         B     @RC00313                                            0318
@RF00313 DS    0H                                                  0318
         GET   RDERQS,RECA
*                 GO TO IJGETCHK;   /* BRANCH PAST EOD ENTRY @Y30OE78*/
         B     IJGETCHK                                            0319
*RDEREOD:                           /* READER EODAD EXIT     @Y30OE78*/
*                 IF RDER3540=ON THEN/* IF INPUT DEV IS 3540 @Y30OE78*/
RDEREOD  TM    RDER3540,B'00100000'                                0320
         BNO   @RF00320                                            0320
*                   DO;             /*                       @Y30OE78*/
*                     DCBPTR=ADDR(RDEREX);/* GET AMWORKAR    @Y30OE78
*                                      ADDRESSIBILITY        @Y30OE78*/
         LA    @08,RDEREX                                          0322
         ST    @08,DCBPTR                                          0322
*                     IF RPLFDBK=GOODEOD THEN/* IF VALID EOD @Y30OE78*/
         SLR   @03,@03                                             0323
         ICM   @03,7,DCBAMWKA+16(@08)                              0323
         CLC   RPLFDBK(3,@03),@CF00363+1                           0323
         BNE   @RF00323                                            0323
*                       INEOF=ON;   /* SET EOD INDICATOR     @Y30OE78*/
         OI    INEOF,B'00010000'                                   0324
*                     ELSE          /* IF EOD WITH ERROR     @Y30OE78*/
*                       INERR=ON;   /* SET ERROR INDICATOR   @Y30OE78*/
         B     @RC00323                                            0325
@RF00323 OI    INERR,B'00001000'                                   0325
*                   END;            /*                       @Y30OE78*/
*                 ELSE              /* OTHERWISE,            @Y30OE78*/
*                   INEOF=ON;       /* SET EOD INDICATOR     @Y30OE78*/
         B     @RC00320                                            0327
@RF00320 OI    INEOF,B'00010000'                                   0327
*IJGETCHK:                          /* NORMAL PROCESSING     @Y30OE78
*                                      AFTER GET RESUMES     @Y30OE78*/
*                 IF INEOF=OFF&     /* IF NO INPUT           @Y30OE78*/
*                     INERR=OFF THEN/* ERROR ENCOUNTERED,    @Y30OE78*/
@RC00320 DS    0H                                                  0328
IJGETCHK TM    INEOF,B'00011000'                                   0328
         BNZ   @RF00328                                            0328
*                   DO;             /* SCAN JCL RECORD       @Y30OE78*/
*                                                                  0329
*                     /***********************************************/
*                     /*                                             */
*                     /* START SEGMENT - PROCESS JCL RECORD  @Y30OE78*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0330
*                     RECSCAN=OFF;  /* INITIALIZE SCAN       @Y30OE78
*                                      SWITCH TO OFF         @Y30OE78*/
         NI    RECSCAN,B'11101111'                                 0330
*                     RDWLNA=LENGTH(RECJCL)+/* INITIALIZE RDW LENGTH
*                                                            @Y30OE78*/
*                         LENGTH(RDWA);/* FOR JCL RECORD WITH      0331
*                                                            @Y30OE78
*                                      NO CONTROL INFO       @Y30OE78*/
         MVC   RDWLNA(2),@CH01598                                  0331
*                     IF ISDMODE=OFF THEN/* IF NOT IN INSTREAM     0332
*                                                            @Y30OE78
*                                      DATA MODE,            @Y30OE78*/
         TM    ISDMODE,B'10000000'                                 0332
         BNZ   @RF00332                                            0332
*                       RECSCAN=ON; /* MUST SCAN RECORD      @Y30OE78*/
         OI    RECSCAN,B'00010000'                                 0333
*                     ELSE          /* OTHERWISE,            @Y30OE78*/
*                       DO;         /* CHECK DELIMITERS      @Y30OE78*/
         B     @RC00332                                            0334
@RF00332 DS    0H                                                  0335
*                         IF RECJCL(1:2)=CURDLM THEN/* IF COL 1 & 2
*                                      IS DLM,               @Y30OE78*/
         CLC   RECJCL(2),CURDLM                                    0335
         BNE   @RF00335                                            0335
*                           ISDMODE=OFF;/* GET OUT OF INSTREAM     0336
*                                                            @Y30OE78
*                                      DATA MODE             @Y30OE78*/
         NI    ISDMODE,B'01111111'                                 0336
*                         ELSE      /* OTHERWISE CHECK FOR   @Y30OE78
*                                      DELIMIT BY JCL        @Y30OE78*/
*                           IF JCLINDAT=OFF&/* IF JCL NOT ALLOWED IN
*                                                            @Y30OE78
*                                      DATA &                @Y30OE78*/
*                               RECJCL(1:2)=SLASHES THEN/* THIS    0337
*                                      RECORD IS JCL         @Y30OE78*/
         B     @RC00335                                            0337
@RF00335 TM    JCLINDAT,B'01000000'                                0337
         BNZ   @RF00337                                            0337
         CLC   RECJCL(2),@CC00281                                  0337
         BNE   @RF00337                                            0337
*                             DO;   /* TREAT AS DELIMITER    @Y30OE78*/
*                               ISDMODE=OFF;/* GET OUT OF ISD MODE 0339
*                                                            @Y30OE78*/
*                               RECSCAN=ON;/* ALSO SCAN JCL STMT   0340
*                                                            @Y30OE78*/
         OI    RECSCAN,B'00010000'                                 0340
         NI    ISDMODE,B'01111111'                                 0340
*                             END;  /*                       @Y30OE78*/
*                       END;        /*                       @Y30OE78*/
@RF00337 DS    0H                                                  0342
@RC00335 DS    0H                                                  0343
*                     IF RECSCAN=ON THEN/* IF RECORD MUST BE @Y30OE78*/
@RC00332 TM    RECSCAN,B'00010000'                                 0343
         BNO   @RF00343                                            0343
*                       DO;         /* SCANNED, DO IT        @Y30OE78*/
*                                                                  0344
*                         /*******************************************/
*                         /*                                         */
*                         /* START SEGMENT - SCAN JCL RECORD @Y30OE78*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0345
*                         NAMELEN=ZERO;/* INITIALIZE NULL NAME     0345
*                                                            @Y30OE78*/
         SLR   @04,@04                                             0345
         LR    NAMELEN,@04                                         0345
*                         OPNDPTR=ZERO;/* INIT NO OPERAND    @Y30OE78*/
         LR    OPNDPTR,@04                                         0346
*                         VERBPTR=ZERO;/* INIT NO VERB       @Y30OE78*/
         LR    VERBPTR,@04                                         0347
*                         CMCONT=OFF;/* RESET SWITCHES THAT  @Y30OE78*/
*                         OPCONT=OFF;/* HAVE MEANING ON A    @Y30OE78*/
*                         NULL=OFF; /* JCL RECORD BASIS      @Y30OE78*/
*                         JCL=OFF;  /*                       @Y30OE78*/
*                         ATOPND=OFF;/*                      @Y30OE78*/
*                         COMMENT=OFF;/*                     @Y30OE78*/
         NI    CMCONT,B'00000110'                                  0353
*                         BYPVERB=OFF;/*                     @Y30OE78*/
*                         QUOTE=OFF;/*                       @Y30OE78*/
         NI    BYPVERB,B'11110110'                                 0355
*                         IF RECJCL(1:2)=SLASHES THEN/* IF RECORD IS
*                                      A JCL                 @Y30OE78*/
         CLC   RECJCL(2),@CC00281                                  0356
         BNE   @RF00356                                            0356
*                           DO;     /* RECORD, SCAN FOR      @Y30OE78
*                                      NAME FIELD            @Y30OE78*/
*                             JCL=ON;/* SET JCL INDICATOR    @Y30OE78*/
         OI    JCL,B'00100000'                                     0358
*                             IF RECJCL(3)=CSTAR THEN/* CHECK FOR  0359
*                                      COMMENT               @Y30OE78*/
         CLI   RECJCL+2,C'*'                                       0359
         BNE   @RF00359                                            0359
*                               DO; /* JCL STATEMENT         @Y30OE78*/
*                                 COMMENT=ON;/* SET COMMENT SWITCH 0361
*                                                            @Y30OE78*/
         OI    COMMENT,B'00001000'                                 0361
*                                 RECSCAN=OFF;/* INDICATE SCAN DONE
*                                                            @Y30OE78*/
         NI    RECSCAN,B'11101111'                                 0362
*                               END;/*                       @Y30OE78*/
*                             ELSE  /* IF NOT COMMENT        @Y30OE78*/
*                               CALL NAMESCAN;/* SCAN FOR NAME     0364
*                                                            @Y30OE78*/
         B     @RC00359                                            0364
@RF00359 BAL   @14,NAMESCAN                                        0364
*                           END;    /*                       @Y30OE78*/
*                         ELSE      /* IF NOT JCL STMT,      @Y30OE78*/
*                           DO;     /* RESET JCL STATUS      @Y30OE78*/
         B     @RC00356                                            0366
@RF00356 DS    0H                                                  0367
*                             CMCONTEX=OFF;/* SWITCHES       @Y30OE78*/
*                             OPCONTEX=OFF;/*                @Y30OE78*/
         NI    CMCONTEX,B'11111001'                                0368
*                             RECSCAN=OFF;/* END SCAN OF STMT      0369
*                                                            @Y30OE78*/
         NI    RECSCAN,B'11101111'                                 0369
*                           END;    /*                       @Y30OE78*/
*                         IF RECSCAN=ON&/* IF SCAN IS TO BE  @Y30OE78*/
*                             BYPVERB=OFF THEN/* CONTINUED AND VERB
*                                                            @Y30OE78
*                                      IS TO SCANNED,        @Y30OE78*/
@RC00356 TM    RECSCAN,B'00010000'                                 0371
         BNO   @RF00371                                            0371
         TM    BYPVERB,B'00001000'                                 0371
         BNZ   @RF00371                                            0371
*                           DO;     /* VERBSCAN PROCESSING   @Y30OE78*/
*                             DO K=MIN(K,LASTCOL) TO LASTCOL WHILE/*
*                                      SCAN TO NON-          @Y30OE78*/
*                                   RECJCL(K)=BLANK;/* BLANK AFTER 0373
*                                      NAME                  @Y30OE78*/
         L     @04,K                                               0373
         LA    @03,71                                              0373
         CR    @04,@03                                             0373
         BNH   *+6
         LR    @04,@03                                             0373
         B     @DE00373                                            0373
@DL00373 LA    @03,RECJCL-1(@04)                                   0373
         CLI   0(@03),C' '                                         0373
         BNE   @DC00373                                            0373
*                             END;  /*                       @Y30OE78*/
         AH    @04,@CH00061                                        0374
@DE00373 ST    @04,K                                               0374
         CH    @04,@CH00200                                        0374
         BNH   @DL00373                                            0374
@DC00373 DS    0H                                                  0375
*                             VERBPTR=K;/* SAVE VERB POINTER @Y30OE78*/
         L     @04,K                                               0375
         LR    VERBPTR,@04                                         0375
*                             DO K=MIN(K,LASTCOL) TO LASTCOL WHILE/*
*                                      SCAN PAST             @Y30OE78*/
*                                   RECJCL(K)^=BLANK;/* VERB @Y30OE78*/
         LA    @00,71                                              0376
         CR    @04,@00                                             0376
         BNH   *+6
         LR    @04,@00                                             0376
         B     @DE00376                                            0376
@DL00376 LA    @15,RECJCL-1(@04)                                   0376
         CLI   0(@15),C' '                                         0376
         BE    @DC00376                                            0376
*                             END;  /*                       @Y30OE78*/
         AH    @04,@CH00061                                        0377
@DE00376 ST    @04,K                                               0377
         CH    @04,@CH00200                                        0377
         BNH   @DL00376                                            0377
@DC00376 DS    0H                                                  0378
*                             DO K=MIN(K,LASTCOL) TO LASTCOL WHILE/*
*                                      SCAN TO               @Y30OE78*/
*                                   RECJCL(K)=BLANK;/* OPERAND     0378
*                                                            @Y30OE78*/
         L     @04,K                                               0378
         LA    @00,71                                              0378
         CR    @04,@00                                             0378
         BNH   *+6
         LR    @04,@00                                             0378
         B     @DE00378                                            0378
@DL00378 LA    @15,RECJCL-1(@04)                                   0378
         CLI   0(@15),C' '                                         0378
         BNE   @DC00378                                            0378
*                             END;  /*                       @Y30OE78*/
         AH    @04,@CH00061                                        0379
@DE00378 ST    @04,K                                               0379
         CH    @04,@CH00200                                        0379
         BNH   @DL00378                                            0379
@DC00378 DS    0H                                                  0380
*                             IF K<=LASTCOL THEN/* IF OPERAND FOUND,
*                                                            @Y30OE78*/
         L     @04,K                                               0380
         CH    @04,@CH00200                                        0380
         BH    @RF00380                                            0380
*                               ATOPND=ON;/* SET SWITCH TO   @Y30OE78
*                                      INDICATE OPND FOUND   @Y30OE78*/
         OI    ATOPND,B'00000001'                                  0381
*                           END;    /*                       @Y30OE78*/
@RF00380 DS    0H                                                  0383
*                         IF RECSCAN=ON THEN/* IF SCAN IS TO BE CON-
*                                                            @Y30OE78
*                                      TINUED, THEN          @Y30OE78*/
@RF00371 TM    RECSCAN,B'00010000'                                 0383
         BNO   @RF00383                                            0383
*                           CALL OPNDSCAN;/* SCAN OPERAND    @Y30OE78*/
*                                                                  0384
         BAL   @14,OPNDSCAN                                        0384
*                         /*******************************************/
*                         /*                                         */
*                         /* END SEGMENT - SCAN JCL RECORD   @Y30OE78*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0385
*                         IF VERBPTR=ZERO×/* IF NO VERB FOUND,     0385
*                                                            @Y30OE78*/
*                             VERBPTR>LASTCOL THEN/*         @Y30OE78*/
@RF00383 LTR   VERBPTR,VERBPTR                                     0385
         BZ    @RT00385                                            0385
         CH    VERBPTR,@CH00200                                    0385
         BNH   @RF00385                                            0385
@RT00385 DS    0H                                                  0386
*                           DO;     /* CHECK FOR CONTIN      @Y30OE78*/
*                             IF JOBCONT=ON THEN/* IF JOB          0387
*                                      CONTINUATION,         @Y30OE78*/
         TM    JOBCONT,B'00000100'                                 0387
         BNO   @RF00387                                            0387
*                               CALL JOBPROC;/* PROCESS IT   @Y30OE78*/
         BAL   @14,JOBPROC                                         0388
*                             ELSE  /* OTHERWISE CHECK       @Y30OE78*/
*                               IF DDCONT=ON THEN/* FOR DD         0389
*                                      CONTINUATION          @Y30OE78*/
         B     @RC00387                                            0389
@RF00387 TM    DDCONT,B'00000010'                                  0389
         BNO   @RF00389                                            0389
*                                 CALL DDPROC;/* PROCESS IT  @Y30OE78*/
         BAL   @14,DDPROC                                          0390
*                           END;    /*                       @Y30OE78*/
*                         ELSE      /* OTHERWISE, CHECK VERB @Y30OE78*/
*                           IF RECJCL(VERBPTR:VERBPTR+LENGTH(JOBVERB)-1
*                               )=  /*                       @Y30OE78*/
*                               JOBVERB THEN/* IF VERB IS JOB      0392
*                                                            @Y30OE78*/
         B     @RC00385                                            0392
@RF00385 LA    @04,RECJCL-1(VERBPTR)                               0392
         CLC   0(4,@04),@CC00323                                   0392
         BNE   @RF00392                                            0392
*                             CALL JOBPROC;/* PROCESS JOB VERB     0393
*                                                            @Y30OE78*/
         BAL   @14,JOBPROC                                         0393
*                           ELSE    /* CHECK OTHER VERBS     @Y30OE78*/
*                             IF RECJCL(VERBPTR:VERBPTR+LENGTH(DDVERB)-
*                                 1)=/*                      @Y30OE78*/
*                                 DDVERB THEN/* IF VERB IS DD      0394
*                                                            @Y30OE78*/
         B     @RC00392                                            0394
@RF00392 LA    @08,RECJCL-1(VERBPTR)                               0394
         CLC   0(3,@08),@CC00321                                   0394
         BNE   @RF00394                                            0394
*                               CALL DDPROC;/* PROCESS DD VERB     0395
*                                                            @Y30OE78*/
         BAL   @14,DDPROC                                          0395
*                       END;        /*                       @Y30OE78*/
*                                                                  0396
@RF00394 DS    0H                                                  0396
@RC00392 DS    0H                                                  0396
@RC00385 DS    0H                                                  0397
*                     /***********************************************/
*                     /*                                             */
*                     /* END SEGMENT - PROCESS JCL RECORD    @Y30OE78*/
*                     /*                                             */
*                     /***********************************************/
*                                                                  0397
*                     IF STARTJOB=OFF THEN/* IF NOT SCANNING TO    0397
*                                                            @Z30OE78
*                                      JOBNAME               @Z30OE78*/
@RF00343 TM    STARTJOB,B'10000000'                                0397
         BNZ   @RF00397                                            0397
*                       DO;         /* WRITE JCL RECORD      @Y30OE78*/
*                         IF ADS#=ZERO THEN/* IF DIRECT MODE,      0399
*                                                            @Y30OE78*/
         ICM   @08,15,ADS#                                         0399
         BNZ   @RF00399                                            0399
*                           DO;     /*                       @Y30OE78*/
*                             BDWLNA=RDWLNA+LENGTH(BDWA);/* SET BDW
*                                      LENGTH                @Y30OE78*/
         LA    @08,4                                               0401
         AH    @08,RDWLNA                                          0401
         STH   @08,BDWLNA                                          0401
*                             GEN REFS(DECB7);                     0402
*                                  /* USE BSAM       WRITE  @Y30OE78*/
              WRITE DECB7,SF,MF=E        WRITE RECORD         @Y30OE78
              CHECK DECB7                WAIT FOR COMPLETION  @Y30OE78
*                           END;    /*                       @Y30OE78*/
*                         ELSE      /* OTHERWISE USE BPAMPUT @Y30OE78*/
*                           CALL BPAMPUT;/* ROUTINE TO BLOCK AND   0404
*                                                            @Y30OE78
*                                      WRITE IF NECESSARY    @Y30OE78*/
         B     @RC00399                                            0404
@RF00399 BAL   @14,BPAMPUT                                         0404
*                       END;        /*                       @Y30OE78*/
@RC00399 DS    0H                                                  0406
*                   END;            /*                       @Y30OE78*/
*                                                                  0406
@RF00397 DS    0H                                                  0407
*                 /***************************************************/
*                 /*                                                 */
*                 /* END SEGMENT-GET/WRITE JCL               @Y30OE78*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0407
*               END;                /*                       @Y30OE78*/
@RF00328 DS    0H                                                  0407
@DE00312 TM    IJSCERR,B'00011111'                                 0407
         BZ    @DL00312                                            0407
*               IF INERR=ON THEN    /* IF ERRORS HAPPENED,   @Y30OE78*/
         TM    INERR,B'00001000'                                   0408
         BNO   @RF00408                                            0408
*                 DO;               /*                       @Y30OE78*/
*                   JOBDEL=ON;      /* INDICATE TO DELETE    @Z30OE78
*                                      LAST JOB IN STREAM    @Z30OE78*/
         OI    JOBDEL,B'00100000'                                  0410
*                   RTNCODE=PARTERR;/* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'04'                                       0411
*                   MSGIDEX=M548;   /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'0A'                                       0412
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0413
*                   DDDK=DDDV;      /* SET DEV ADDR KEY      @Y30OE78*/
         MVI   DDDK,X'08'                                          0414
*                   IF DSSDS(RDER)=ON THEN/* IF SUBSYSTEM DS,      0415
*                                                            @Y30OE78*/
         TM    DSSDS,B'01000000'                                   0415
         BNO   @RF00415                                            0415
*                     DDD='JES';    /* INDICATE JES DEVICE   @Y30OE78*/
         MVC   DDD(3),@CC01462                                     0416
*                   ELSE            /* OTHERWISE,            @Y30OE78*/
*                     DDD=DEVPTR(RDER)->UCBNAME;/* GET DEV ADDR    0417
*                                                            @Y30OE78*/
         B     @RC00415                                            0417
@RF00415 SLR   @08,@08                                             0417
         ICM   @08,7,DEVPTR                                        0417
         MVC   DDD(3),UCBNAME(@08)                                 0417
*                   JJJK=JJJV;      /* SET JOBNAME KEY       @Y30OE78*/
@RC00415 MVI   JJJK,X'0B'                                          0418
*                   JJJ=CURJOBNM;   /* GET JOBNAME           @Y30OE78*/
         MVC   JJJ(8),CURJOBNM                                     0419
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARAMETERS    0420
*                                                            @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0420
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0421
         BALR  @14,@15                                             0421
*                   DDDK=SKIPV;     /* RESET DEV ADDR KEY    @Y30OE78*/
         MVI   DDDK,X'00'                                          0422
*                   JJJK=SKIPV;     /* RESET JOBNAME KEY     @Y30OE78*/
         MVI   JJJK,X'00'                                          0423
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* NOT AN INPUT ERROR    @Z30OE78*/
*                 IF IJSCERR=ON THEN/* IF SCAN ERROR,        @Z30OE78*/
         B     @RC00408                                            0425
@RF00408 TM    IJSCERR,B'00000100'                                 0425
         BNO   @RF00425                                            0425
*                   JOBDEL=ON;      /* INDICATE TO DELETE    @Z30OE78
*                                      LAST JOB              @Z30OE78*/
         OI    JOBDEL,B'00100000'                                  0426
*               IF ADS#^=ZERO THEN  /* IF MERGE MODE         @Y30OE78*/
@RF00425 DS    0H                                                  0427
@RC00408 SLR   @08,@08                                             0427
         C     @08,ADS#                                            0427
         BE    @RF00427                                            0427
*                 DO;               /* MUST FLUSH BUFFERS    @Y30OE78*/
*                   IF UT3SYN=OFF THEN/* IF UT3 IS ERROR FREE,     0429
*                                                            @Y30OE78*/
         TM    UT3SYN,B'00000001'                                  0429
         BNZ   @RF00429                                            0429
*                     DO;           /* FLUSH BUFFERS         @Y30OE78*/
*                       IF BLKLEN>LENGTH(BDW) THEN/* IF RECORD HAS 0431
*                                                            @Y30OE78
*                                      BEEN PLACED IN BUFFER @Y30OE78*/
         L     @03,BUFCBPTR                                        0431
         L     @03,BUFELPTR(,@03)                                  0431
         L     @15,BUFPTR(,@03)                                    0431
         LH    @00,BLKLEN(,@15)                                    0431
         CH    @00,@CH00056                                        0431
         BNH   @RF00431                                            0431
*                         DO;       /* WRITE THE BLOCK       @Y30OE78*/
*                           WRIND=ZERO;/* INDICATE WRITE WAS @Z30OE78
*                                      ISSUED TO BUFFER      @Z30OE78*/
         STH   @08,WRIND(,@15)                                     0433
*                           PARMPTR=DECBPTR;/* GET DECBPTR   @Y30OE78*/
         L     PARMPTR,DECBPTR(,@03)                               0434
*                           BLKPTR=BUFPTR;/* GET PTR TO BUFFER     0435
*                                                            @Y30OE78*/
         LR    BLKPTR,@15                                          0435
*                           GEN REFS(PARMPTR,BLKPTR)/* WRITE BUFFER
*                                                            @Y30OE78*/
*                               (WRITE (PARMPTR),SF,,(BLKPTR),MF=E);
         WRITE (PARMPTR),SF,,(BLKPTR),MF=E
*                                   /*                       @Y30OE78*/
*                         END;      /*                       @Y30OE78*/
*                       LASTADSN=DSNPTRJ-LENGTH(DSNENTRY);/* SAVE  0438
*                                                            @Y30OE78
*                                      ADDR OF LAST ENTRY    @Y30OE78*/
@RF00431 L     @08,DSNPTRJ                                         0438
         LA    @15,40                                              0438
         LR    @00,@08                                             0438
         SLR   @00,@15                                             0438
         ST    @00,LASTADSN                                        0438
*                       J=DSNPTRJ-ADDR(DSNENT1);/* CALCULATE @Y30OE78*/
         L     @14,GETMNA                                          0439
         LA    J,DSNENT1(,@14)                                     0439
         SLR   @08,J                                               0439
         LR    J,@08                                               0439
*                       DSNE#=J/LENGTH(DSNENTRY);/* NUMBER OF      0440
*                                                            @Y30OE78
*                                      COMPLETED DSNTAB      @Y30OE78
*                                      ENTRIES               @Y30OE78*/
         LR    @04,J                                               0440
         SRDA  @04,32                                              0440
         DR    @04,@15                                             0440
         STH   @05,DSNE#(,@14)                                     0440
*                       IF JBJCLERR=ON THEN/* IF LAST JOB HAD      0441
*                                                            @Y30OE78
*                                      JCL ERROR,            @Y30OE78*/
         TM    JBJCLERR,B'01000000'                                0441
         BNO   @RF00441                                            0441
*                         DO DSNPTRJ=LASTADSN TO FRSTADSN/*  @Y30OE78*/
*                               BY-LENGTH(DSNENTRY) WHILE/*  @Y30OE78*/
*                               JOBNO=CURJNUM;/* MARK DSNTAB @Y30OE78*/
         ST    @00,DSNPTRJ                                         0442
         B     @DE00442                                            0442
@DL00442 LR    @08,@00                                             0442
         CLC   JOBNO(4,@08),CURJNUM                                0442
         BNE   @DC00442                                            0442
*                           JOBERR=ON;/* ENTRIES AS ERROR    @Y30OE78*/
         LR    @08,@00                                             0443
         OI    JOBERR(@08),B'00010000'                             0443
*                         END;      /*                       @Y30OE78*/
         AH    @00,@CH01601                                        0444
         ST    @00,DSNPTRJ                                         0444
@DE00442 C     @00,FRSTADSN                                        0444
         BNL   @DL00442                                            0444
@DC00442 DS    0H                                                  0445
*                       DO I=1 TO 2 WHILE UT3SYN=OFF;/*      @ZA00784
*                                      WAIT ON BOTH BUFFERS  @ZA00784*/
@RF00441 LA    I,1                                                 0445
@DL00445 TM    UT3SYN,B'00000001'                                  0445
         BNZ   @DC00445                                            0445
*                         BUFELPTR=BUFELNXT;/* GET OTHER BUFFER    0446
*                                                            @Y30OE78*/
         L     @08,BUFCBPTR                                        0446
         L     @05,BUFELPTR(,@08)                                  0446
         L     @05,BUFELNXT(,@05)                                  0446
         ST    @05,BUFELPTR(,@08)                                  0446
*                         IF WRIND=ZERO THEN/* IF BUF WAS WRITTEN  0447
*                                                            @Y30OE78*/
         L     @08,BUFPTR(,@05)                                    0447
         ICM   @03,3,WRIND(@08)                                    0447
         BNZ   @RF00447                                            0447
*                           DO;     /* WAIT FOR COMPLETION   @Y30OE78*/
*                             PARMPTR=DECBPTR;/* GET DECB PTR      0449
*                                                            @Y30OE78*/
         L     PARMPTR,DECBPTR(,@05)                               0449
*                             GEN REFS(PARMPTR)/* WAIT       @Y30OE78*/
*                                 (CHECK (PARMPTR));/*       @Y30OE78*/
         CHECK (PARMPTR)
*                           END;    /*                       @Y30OE78*/
*                       END;        /*                       @Y30OE78*/
@RF00447 AH    I,@CH00061                                          0452
         CH    I,@CH00135                                          0452
         BNH   @DL00445                                            0452
@DC00445 DS    0H                                                  0453
*                     END;          /*                       @Y30OE78*/
*                   IF UT3SYN=OFF THEN/* IF NO ERRORS        @Y30OE78*/
@RF00429 TM    UT3SYN,B'00000001'                                  0454
         BNZ   @RF00454                                            0454
*                     DO;           /*                       @Y30OE78*/
*                       BLKPTR=ADDR(DSNENT1);/* GET          @Y30OE78
*                                      ENTRY WHICH IS USED   @Y30OE78
*                                      FOR JCL MEMBER        @Y30OE78*/
         L     BLKPTR,GETMNA                                       0456
         LA    BLKPTR,DSNENT1(,BLKPTR)                             0456
*                       RFY                                        0457
*                         RTNCDREG RSTD;/*                   @Y30OE78*/
*                       GEN REFS(UT3BPOUT,BLKPTR)/* STOW JCL @Y30OE78*/
*                           (STOW  UT3BPOUT,(BLKPTR));/* MEMBER    0458
*                                                            @Y30OE78*/
         STOW  UT3BPOUT,(BLKPTR)
*                       IF RTNCDREG^=ZERO THEN/* IF STOW ERROR,    0459
*                                                            @Y30OE78*/
         LTR   RTNCDREG,RTNCDREG                                   0459
         BZ    @RF00459                                            0459
*                         DO;       /*                       @Y30OE78*/
*                           RTNCODE=TERMERR;/* SET RETURN CODE     0461
*                                                            @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0461
*                           MSGIDEX=M555;/* SET MSG INDEX    @Y30OE78*/
         MVI   MSGIDEX,X'12'                                       0462
*                           MSGTYPE=MTYPWTO;/* INDICATE WTO  @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0463
*                           PARMPTR=ADDR(MSGINT);/* POINT TO PARM  0464
*                                                            @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0464
*                           CALL IOEDKMSG;/* HAVE MSG WRITTEN      0465
*                                                            @Y30OE78*/
         L     @15,@CV00048                                        0465
         BALR  @14,@15                                             0465
*                         END;      /*                       @Y30OE78*/
*                       RFY                                        0467
*                         RTNCDREG UNRSTD;/*                 @Y30OE78*/
@RF00459 DS    0H                                                  0468
*                     END;          /*                       @Y30OE78*/
*                   ELSE            /* IF UT3 ERROR          @Y30OE78*/
*                     DO;           /* ISSUE MSG             @Y30OE78*/
         B     @RC00454                                            0469
@RF00454 DS    0H                                                  0470
*                       RTNCODE=TERMERR;/* SET RETURN CODE   @Y30OE78*/
         MVI   RTNCODE,X'08'                                       0470
*                       MSGIDEX=M554;/* SET MSG INDEX        @Y30OE78*/
         MVI   MSGIDEX,X'0C'                                       0471
*                       MSGTYPE=MTYPWTO;/* MSG TYPE IS WTO   @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0472
*                       DDNK=DDNV;  /* SET DDNAME KEY        @Y30OE78*/
         MVI   DDNK,X'07'                                          0473
*                       DDN=DDNAME(UT3);/* SET NAME TO SYSUT3      0474
*                                                            @Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    0474
*                       JJJK=JOBLOP;/* DELETE JOB NAME       @Y30OE78*/
         MVI   JJJK,X'8B'                                          0475
*                       PARMPTR=ADDR(MSGINT);/* POINT TO PARMS     0476
*                                                            @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0476
*                       CALL IOEDKMSG;/* HAVE MSG WRITTEN    @Y30OE78*/
         L     @15,@CV00048                                        0477
         BALR  @14,@15                                             0477
*                       DDNK=SKIPV; /* RESET DDN KEY         @Y30OE78*/
         MVI   DDNK,X'00'                                          0478
*                       JJJK=SKIPV; /* RESET JOBNAME KEY     @Y30OE78*/
         MVI   JJJK,X'00'                                          0479
*                     END;          /*                       @Y30OE78*/
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF DIRECT MODE        @Y30OE78*/
*                 IF UT2SYNI=ON THEN/* IF UT2 ERROR,         @Y30OE78*/
         B     @RC00427                                            0482
@RF00427 TM    UT2SYNI,B'00000010'                                 0482
         BNO   @RF00482                                            0482
*                   DO;             /* PROCESS IT            @Y30OE78*/
*                     RTNCODE=PARTERR;/* SET RETURN CODE     @Y30OE78*/
         MVI   RTNCODE,X'04'                                       0484
*                     MSGIDEX=M554; /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'0C'                                       0485
*                     MSGTYPE=MTYPWTO;/* INDICATE WTO        @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0486
*                     DDNK=DDNV;    /* SET DDNAME KEY        @Y30OE78*/
         MVI   DDNK,X'07'                                          0487
*                     DDN=DDNAME(UT2);/* SET DDNAME TO SYSUT2      0488
*                                                            @Y30OE78*/
         MVC   DDN(8),DDNAME+24                                    0488
*                     JJJK=JJJV;    /* SET JOBNAME KEY       @Y30OE78*/
         MVI   JJJK,X'0B'                                          0489
*                     JJJ=CURJOBNM; /* SET JOB NAME          @Y30OE78*/
         MVC   JJJ(8),CURJOBNM                                     0490
*                     PARMPTR=ADDR(MSGINT);/* POINT TO PARMS @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0491
*                     CALL IOEDKMSG;/* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0492
         BALR  @14,@15                                             0492
*                     DDNK=SKIPV;   /* RESET KEYS FOR DDNAME @Y30OE78*/
         MVI   DDNK,X'00'                                          0493
*                     JJJK=SKIPV;   /* AND JOB NAME          @Y30OE78*/
         MVI   JJJK,X'00'                                          0494
*                   END;            /*                       @Y30OE78*/
*                 ELSE              /*                       @Z30OE78*/
*                   IF JOBDEL=ON THEN/* IF LAST JOB IS TO BE @Z30OE78*/
         B     @RC00482                                            0496
@RF00482 TM    JOBDEL,B'00100000'                                  0496
         BNO   @RF00496                                            0496
*                     DO;           /* DELETED               @Z30OE78*/
*                       RECJCL=DELCARD;/* PUT DEL CNTRL CARD @Z30OE78
*                                      IN BUFFER             @Z30OE78*/
         MVI   RECJCL+5,C' '                                       0498
         MVC   RECJCL+6(74),RECJCL+5                               0498
         MVC   RECJCL(5),DELCARD                                   0498
*                       RDWLNA=LENGTH(RECJCL)+LENGTH(RDWA);/*      0499
*                                                            @Z30OE78*/
         LA    @08,84                                              0499
         STH   @08,RDWLNA                                          0499
*                       BDWLNA=RDWLNA+LENGTH(BDWA);/*        @Z30OE78*/
         AH    @08,@CH00056                                        0500
         STH   @08,BDWLNA                                          0500
*                       GEN REFS(DECB7);                           0501
*                                                         /*@Z30OE78*/
        WRITE DECB7,SF,MF=E                                   @Z30OE78
        CHECK DECB7                                           @Z30OE78
*                     END;          /*                       @Z30OE78*/
*               IF RDER3540=ON THEN /* IF 3540 READER DEVICE #Y30OE78*/
@RF00496 DS    0H                                                  0503
@RC00482 DS    0H                                                  0503
@RC00427 TM    RDER3540,B'00100000'                                0503
         BNO   @RF00503                                            0503
*                 DO;               /*                       @Y30OE78*/
*                   PARMPTR=ADDR(RDEREX);/* POINT TO DCB     @Y30OE78*/
         LA    PARMPTR,RDEREX                                      0505
*                   CALL IOEDKCLS;  /* CLOSE 3540 DEVICE     @Y30OE78*/
         L     @15,@CV00050                                        0506
         BALR  @14,@15                                             0506
*                 END;              /*                       @Y30OE78*/
*             END;                  /*                       @Y30OE78*/
@RF00503 DS    0H                                                  0509
*           IF ADS#^=ZERO THEN      /* IF MERGE MODE, CLOSE  @Y30OE78
*                                      RDER FILE ONLY        @Y30OE78*/
@RF00297 ICM   @08,15,ADS#                                         0509
         BZ    @RF00509                                            0509
*             LSTEND=ON;            /* SET LIST DELIMITER AT @Y30OE78
*                                      RDER ENTRY            @Y30OE78*/
         L     @08,OPENPTR                                         0510
         OI    LSTEND(@08),B'10000000'                             0510
*           PARMPTR=OPENPTR;        /* PASS OPEN LIST PTR    @Y30OE78*/
@RF00509 L     PARMPTR,OPENPTR                                     0511
*           GEN REFS(PARMPTR)       /* CLOSE FILE(S)         @Y30OE78*/
*               (CLOSE MF=(E,(PARMPTR)));/*                  @Y30OE78*/
         CLOSE MF=(E,(PARMPTR))
*         END;                      /*                       @Y30OE78*/
*                                                                  0513
*       /*************************************************************/
*       /*                                                           */
*       /* END SEGMENT-INPUT JCL                             @Y30OE78*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0514
*       IF RTNCODE^=TERMERR&        /* NO TERMINATE ERR &    @Y30OE78*/
*           ADS#^=ZERO THEN         /* IN MERGE MODE,        @Y30OE78*/
@RF00268 CLI   RTNCODE,8                                           0514
         BE    @RF00514                                            0514
         ICM   @08,15,ADS#                                         0514
         BZ    @RF00514                                            0514
*         DO;                       /* CONTINUE PROCESSING   @Y30OE78*/
*                                                                  0515
*           /*********************************************************/
*           /*                                                       */
*           /* START SEGMENT - INPUT ADS                     @Y30OE78*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0516
*           OPENPTR=ADDR(IALIST);   /* POINT TO IA OPEN LIST @Y30OE78*/
         LA    @08,IALIST                                          0516
         ST    @08,OPENPTR                                         0516
*           DO DSNPTRJ=FRSTADSN TO LASTADSN/* COUNT DATA SET NAME  0517
*                                                            @Y30OE78*/
*                 BY LENGTH(DSNENTRY);/* TABLE ENTRIES       @Y30OE78*/
         L     @08,FRSTADSN                                        0517
         ST    @08,DSNPTRJ                                         0517
         B     @DE00517                                            0517
@DL00517 DS    0H                                                  0518
*             IF JOBERR=OFF THEN    /* THAT MUST BE PROCESSD @Y30OE78*/
         TM    JOBERR(@08),B'00010000'                             0518
         BNZ   @RF00518                                            0518
*               DSCNT=DSCNT+1;      /* BY IA ROUTINES        #Y30OE78*/
         LA    @08,1                                               0519
         AL    @08,DSCNT                                           0519
         ST    @08,DSCNT                                           0519
*           END;                    /*                       #Y30OE78*/
@RF00518 LA    @08,40                                              0520
         AL    @08,DSNPTRJ                                         0520
         ST    @08,DSNPTRJ                                         0520
@DE00517 C     @08,LASTADSN                                        0520
         BNH   @DL00517                                            0520
*           IF DSCNT=ZERO THEN      /* IF NO ADS TO READ     #Y30OE78*/
         ICM   @08,15,DSCNT                                        0521
         BNZ   @RF00521                                            0521
*             LSTEND=ON;            /* INDICATE ONLY UT3 TO  #Y30OE78
*                                      BE CLOSED             #Y30OE78*/
         L     @08,OPENPTR                                         0522
         OI    LSTEND(@08),B'10000000'                             0522
*           ELSE                    /* IF ADS TO READ        #Y30OE78*/
*             DO;                   /* PROCESS THEM          #Y30OE78*/
         B     @RC00521                                            0523
@RF00521 DS    0H                                                  0524
*               GEN REFS(DATAEX)    /* OPEN DATA DCB         #Y30OE78*/
*                   (OPEN  (DATAEX));/*                      #Y30OE78*/
         OPEN  (DATAEX)
*               DCBPTR=ADDR(DATAEX);/* POINT TO DATA DCB     #Y30OE78
*                                      TO PROVIDE ADDRESSI-  #Y30OE78
*                                      BILITY TO DCB AND     #Y30OE78
*                                      AMWORKAREA FOR PRO-   #Y30OE78
*                                      CESSING ALL ADS       #Y30OE78*/
         LA    @08,DATAEX                                          0525
         ST    @08,DCBPTR                                          0525
*               IF DCBOFOPN^=ON THEN/* IF OPEN FAILED,       #Y30OE78*/
         TM    DCBOFOPN+40(@08),B'00010000'                        0526
         BO    @RF00526                                            0526
*                 DO;               /*                       #Y30OE78*/
*                   RTNCODE=TERMERR;/* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       0528
*                   LSTEND=ON;      /* INDICATE ONLY UT3 TO  #Y30OE78
*                                      BE CLOSED             #Y30OE78*/
         L     @08,OPENPTR                                         0529
         OI    LSTEND(@08),B'10000000'                             0529
*                   MSGIDEX=M549;   /* SET INDEX OF MSG      #Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0530
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0531
*                   DDNK=DDNV;      /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          0532
*                   DDN=DDNAME(DATA);/* SET DDNAME TO SYSDATA      0533
*                                                            #Y30OE78*/
         MVC   DDN(8),DDNAME+12                                    0533
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARAMETERS    0534
*                                                            #Y30OE78*/
         LA    PARMPTR,MSGINT                                      0534
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        0535
         BALR  @14,@15                                             0535
*                   DDNK=SKIPV;     /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          0536
*                 END;              /*                       #Y30OE78*/
*               ELSE                /* OPEN WAS SUCCESSFUL   #Y30OE78*/
*                 DO;               /*                       #Y30OE78*/
         B     @RC00526                                            0538
@RF00526 DS    0H                                                  0539
*                   DCBAMIN=ON;     /* SET INPUT INDICATOR   #Y30OE78*/
         L     @08,DCBPTR                                          0539
         OI    DCBAMIN+16(@08),B'00000010'                         0539
*                   PARMPTR=DCBPTR; /* POINT TO DCB          #Y30OE78*/
         LR    PARMPTR,@08                                         0540
*                   CALL IOEDKOPN;  /* CALL 3540 DEVICE OPEN @Y30OE78*/
         L     @15,@CV00051                                        0541
         BALR  @14,@15                                             0541
*                   EXLSYNP=ADDR(RDERSYN);/* SET SYNAD ADDR  @Y30OE78*/
         L     @08,DCBPTR                                          0542
         SLR   @03,@03                                             0542
         ICM   @03,7,DCBAMWKA+16(@08)                              0542
         LA    @08,RDERSYN                                         0542
         ST    @08,EXLSYNP(,@03)                                   0542
*                   EXLEODP=ADDR(DATAEOD);/* SET EODAD ADDR  @Y30OE78*/
         LA    @08,DATAEOD                                         0543
         ST    @08,EXLEODP(,@03)                                   0543
*                   RPLAREA=ADDR(RECA);/* POINT TO RECORD WORKA    0544
*                                                            @Y30OE78*/
         LA    @08,RECA                                            0544
         ST    @08,RPLAREA(,@03)                                   0544
*                   CALL ADSANAL;   /* PROCESS PASSBACK FROM @Y30OE78
*                                      SETDIXKT IN DEV OPEN  @Y30OE78*/
         BAL   @14,ADSANAL                                         0545
*                   DO WHILE IADONE=OFF;/* PROCESS ADS INPUT @Y30OE78*/
         B     @DE00546                                            0546
@DL00546 DS    0H                                                  0547
*                     CALL READDSKT;/* PROCESS INPUT FROM A  @Y30OE78
*                                      SINGLE DISKETTE       @Y30OE78*/
         BAL   @14,READDSKT                                        0547
*                     CALL ADSANAL; /* SEE IF FINISHED       @Y30OE78*/
         BAL   @14,ADSANAL                                         0548
*                   END;            /*                       @Y30OE78*/
@DE00546 TM    IADONE,B'10000000'                                  0549
         BZ    @DL00546                                            0549
*                   PARMPTR=ADDR(DATAEX);/*                  @Y30OE78*/
         LA    PARMPTR,DATAEX                                      0550
*                   CALL IOEDKCLS;  /* DEVICE CLOSE DATAEX   @Y30OE78*/
         L     @15,@CV00050                                        0551
         BALR  @14,@15                                             0551
*                 END;              /*                       @Y30OE78*/
*             END;                  /*                       @Y30OE78*/
@RC00526 DS    0H                                                  0554
*           PARMPTR=ADDR(UT3BPOUT); /* GET OUTPUT DCB        @Y30OE78*/
@RC00521 LA    PARMPTR,UT3BPOUT                                    0554
*           DO I=1 TO 2;            /* PROCESS TWO BUFFERS   @Y30OE78*/
         LA    I,1                                                 0555
@DL00555 DS    0H                                                  0556
*             BLKPTR=BUFPTR;        /* GET ADDR OF BUFFER    @Y30OE78*/
         L     @08,BUFCBPTR                                        0556
         L     @08,BUFELPTR(,@08)                                  0556
         L     BLKPTR,BUFPTR(,@08)                                 0556
*             GEN REFS(PARMPTR,BLKPTR)/* FREE ONE BUFFER     @Y30OE78*/
*                 (FREEBUF (PARMPTR),(BLKPTR));/*            @Y30OE78*/
         FREEBUF (PARMPTR),(BLKPTR)
*             BUFELPTR=BUFELNXT;    /* GET TO OTHER BUFFER   @Y30OE78*/
         L     @08,BUFCBPTR                                        0558
         L     @05,BUFELPTR(,@08)                                  0558
         L     @05,BUFELNXT(,@05)                                  0558
         ST    @05,BUFELPTR(,@08)                                  0558
*           END;                    /*                       @Y30OE78*/
         AH    I,@CH00061                                          0559
         CH    I,@CH00135                                          0559
         BNH   @DL00555                                            0559
*           PARMPTR=ADDR(IALIST);   /* POINT TO LIST TO      @Y30OE78
*                                      CLOSE IA FILES        @Y30OE78*/
         LA    PARMPTR,IALIST                                      0560
*           GEN REFS(PARMPTR)       /* CLOSE DATA AND UT3    @Y30OE78*/
*               (CLOSE MF=(E,(PARMPTR)));/* FILES            @Y30OE78*/
*                                                                  0561
         CLOSE MF=(E,(PARMPTR))
*           /*********************************************************/
*           /*                                                       */
*           /* END SEGMENT - INPUT ADS                       @Y30OE78*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0562
*           IF RTNCODE^=TERMERR THEN/* IF NO BAD ERROR       @Y30OE78*/
         CLI   RTNCODE,8                                           0562
         BE    @RF00562                                            0562
*             DO;                   /*                       @Y30OE78*/
*                                                                  0563
*               /*****************************************************/
*               /*                                                   */
*               /* START SEGMENT - MERGE AND SPOOL           #Y30OE78*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0564
*               UABEX=ADDR(OPENABEX);/* RESET EXIT LIST TO   @Z30OE78
*                                      IGNORE OPEN ABENDS    @Z30OE78*/
         LA    @08,OPENABEX                                        0564
         STCM  @08,7,UABEX                                         0564
*               PARMPTR=ADDR(MSLIST);/* GET OPEN LIST FOR M&S      0565
*                                                            #Y30OE78*/
         LA    PARMPTR,MSLIST                                      0565
*               GEN REFS(PARMPTR)   /* FILES                 #Y30OE78*/
*                   (OPEN  MF=(E,(PARMPTR)));/* OPEN FILES   #Y30OE78*/
         OPEN  MF=(E,(PARMPTR))
*               DCBPTR=ADDR(UT3BPINJ);/* GET DCB FOR JCL INPUT     0567
*                                                            #Y30OE78*/
         LA    @08,UT3BPINJ                                        0567
         ST    @08,DCBPTR                                          0567
*               IF DCBOFOPN^=ON THEN/* IF OPEN FAILED,       #Y30OE78*/
         TM    DCBOFOPN+40(@08),B'00010000'                        0568
         BO    @RF00568                                            0568
*                 DO;               /* PROCESS ERROR         #Y30OE78*/
*                   RTNCODE=TERMERR;/* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       0570
*                   MSGIDEX=M549;   /* SET INDEX OF MSG      #Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0571
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0572
*                   DDNK=DDNV;      /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          0573
*                   DDN=DDNAME(UT3);/* SET DDNAME TO SYSUT3  #Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    0574
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARAMETERS    0575
*                                                            #Y30OE78*/
         LA    PARMPTR,MSGINT                                      0575
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        0576
         BALR  @14,@15                                             0576
*                   DDNK=SKIPV;     /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          0577
*                 END;              /*                       #Y30OE78*/
*               DCBPTR=ADDR(UT3BPINA);/* GET DCB FOR ADS INPUT     0579
*                                                            #Y30OE78*/
@RF00568 LA    @08,UT3BPINA                                        0579
         ST    @08,DCBPTR                                          0579
*               IF DCBOFOPN^=ON THEN/* IF OPEN FAILED,       #Y30OE78*/
         TM    DCBOFOPN+40(@08),B'00010000'                        0580
         BO    @RF00580                                            0580
*                 DO;               /* PROCESS ERROR         #Y30OE78*/
*                   RTNCODE=TERMERR;/* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       0582
*                   MSGIDEX=M549;   /* SET INDEX OF MSG      #Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0583
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0584
*                   DDNK=DDNV;      /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          0585
*                   DDN=DDNAME(UT3);/* SET DDNAME TO SYSUT3  #Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    0586
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARAMETERS    0587
*                                                            #Y30OE78*/
         LA    PARMPTR,MSGINT                                      0587
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        0588
         BALR  @14,@15                                             0588
*                   DDNK=SKIPV;     /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          0589
*                 END;              /*                       #Y30OE78*/
*               DCBPTR=ADDR(UT2BS); /* GET DCB FOR OUTPUT    #Y30OE78*/
@RF00580 LA    @08,UT2BS                                           0591
         ST    @08,DCBPTR                                          0591
*               IF DCBOFOPN^=ON THEN/* IF OPEN FAILED,       #Y30OE78*/
         TM    DCBOFOPN+40(@08),B'00010000'                        0592
         BO    @RF00592                                            0592
*                 DO;               /* PROCESS ERROR         #Y30OE78*/
*                   RTNCODE=TERMERR;/* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       0594
*                   MSGIDEX=M549;   /* SET INDEX OF MSG      #Y30OE78*/
         MVI   MSGIDEX,X'04'                                       0595
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0596
*                   DDNK=DDNV;      /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          0597
*                   DDN=DDNAME(UT2);/* SET DDNAME TO SYSUT2  #Y30OE78*/
         MVC   DDN(8),DDNAME+24                                    0598
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARAMETERS    0599
*                                                            #Y30OE78*/
         LA    PARMPTR,MSGINT                                      0599
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        0600
         BALR  @14,@15                                             0600
*                   DDNK=SKIPV;     /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          0601
*                 END;              /*                       #Y30OE78*/
*               IF RTNCODE^=TERMERR THEN/* IF NO CATASTROPHIC      0603
*                                                            #Y30OE78*/
@RF00592 CLI   RTNCODE,8                                           0603
         BE    @RF00603                                            0603
*                 DO;               /* ERRORS, CONTINUE      #Y30OE78*/
*                   UABEX=ADDR(UT3IABEX);/* CAUSE EOV/CLOSE  @Z30OE78
*                                      ABENDS TO BE REGARDED @Z30OE78
*                                      AS AN I/O ERROR       @Z30OE78*/
         LA    @08,UT3IABEX                                        0605
         STCM  @08,7,UABEX                                         0605
*                   DSNPTRJ=FRSTADSN;/* GET 1ST ADS ENTRY    #Y30OE78*/
         MVC   DSNPTRJ(4),FRSTADSN                                 0606
*                   DO WHILE DSNPTRJ<=LASTADSN;/* CLEAN UP DSN TABLE
*                                                            #Y30OE78*/
         B     @DE00607                                            0607
@DL00607 DS    0H                                                  0608
*                     SETJBERR=OFF; /* RESET FLAG INDICATOR  #Y30OE78*/
         NI    SETJBERR,B'11111011'                                0608
*                     RFY                                          0609
*                       DSNENTRY BASED(DSNPTRI);/* USE TEMP DSNPTR 0609
*                                                            #Y30OE78*/
*                     DO DSNPTRI=DSNPTRJ TO LASTADSN/* CHECK ENTRIES
*                                                            #Y30OE78*/
*                           BY LENGTH(DSNENTRY) WHILE/* FOR ONE JOB
*                                                            #Y30OE78*/
*                           JOBNO=DSNPTRJ->JOBNO;/* AT A TIME      0610
*                                                            #Y30OE78*/
         L     DSNPTRI,DSNPTRJ                                     0610
         B     @DE00610                                            0610
@DL00610 L     @08,DSNPTRJ                                         0610
         CLC   JOBNO(4,DSNPTRI),JOBNO(@08)                         0610
         BNE   @DC00610                                            0610
*                       IF JOBERR=OFF&/* IF NO PREVIOUS ERROR      0611
*                                                            #Y30OE78*/
*                           ADSSAT=OFF THEN/* BUT ADS NOT READ,    0611
*                                                            #Y30OE78*/
         TM    JOBERR(DSNPTRI),B'00010100'                         0611
         BNZ   @RF00611                                            0611
*                         DO;       /*                       #Y30OE78*/
*                           JCLMSG=ON;/* SET JCL COMMENT MSG #Y30OE78
*                                      TO BE INSERTED        #Y30OE78*/
         OI    JCLMSG(DSNPTRI),B'00001000'                         0613
*                           ERRCODE=CDMISS;/* SET MSG CODE   #Y30OE78*/
         MVC   ERRCODE(3,DSNPTRI),@CC00337                         0614
*                           SETJBERR=ON;/* INDICATE JOB ERROR      0615
*                                                            #Y30OE78*/
         OI    SETJBERR,B'00000100'                                0615
*                         END;      /*                       #Y30OE78*/
*                     END;          /*                       #Y30OE78*/
@RF00611 AH    DSNPTRI,@CH01204                                    0617
@DE00610 C     DSNPTRI,LASTADSN                                    0617
         BNH   @DL00610                                            0617
@DC00610 DS    0H                                                  0618
*                     RFY                                          0618
*                       DSNENTRY BASED(DSNPTRJ);/* RESET TO NORM PTR
*                                                            #Y30OE78*/
*                     IF SETJBERR=ON THEN/* IF ERROR DETECTED,     0619
*                                                            #Y30OE78*/
         TM    SETJBERR,B'00000100'                                0619
         BNO   @RF00619                                            0619
*                       DO WHILE DSNPTRJ<DSNPTRI;/* MARK ALL DSNTAB
*                                                            #Y30OE78*/
         B     @DE00620                                            0620
@DL00620 DS    0H                                                  0621
*                         JOBERR=ON;/* ENTRIES FOR JOB       #Y30OE78*/
         L     @08,DSNPTRJ                                         0621
         OI    JOBERR(@08),B'00010000'                             0621
*                         DSNPTRJ=DSNPTRJ+LENGTH(DSNENTRY);/* GET  0622
*                                      NEXT                  #Y30OE78*/
         AH    @08,@CH01204                                        0622
         ST    @08,DSNPTRJ                                         0622
*                       END;        /*                       #Y30OE78*/
@DE00620 C     DSNPTRI,DSNPTRJ                                     0623
         BH    @DL00620                                            0623
*                     DSNPTRJ=DSNPTRI;/* BUMP TO FIRST ENTRY #Y30OE78
*                                      FOR NEXT JOB          #Y30OE78*/
@RF00619 ST    DSNPTRI,DSNPTRJ                                     0624
*                   END;            /*                       #Y30OE78*/
@DE00607 CLC   DSNPTRJ(4),LASTADSN                                 0625
         BNH   @DL00607                                            0625
*                   BLKPTR=GETMNA;  /* GET ADDRESS OF DATA   #Y30OE78*/
         L     BLKPTR,GETMNA                                       0626
*                   GEN REFS(UT3BPINJ,BLKPTR)/* SET NAME TABLE HEADER
*                                                            #Y30OE78*/
*                       (BLDL  UT3BPINJ,(BLKPTR));/* DO BLDL TO GET
*                                      TTRS                  #Y30OE78*/
         BLDL  UT3BPINJ,(BLKPTR)
*                   DO DSNPTRJ=ADDR(DSNENT1) TO LASTADSN/* SCAN    0628
*                                      DSNTAB                #Y30OE78*/
*                         BY LENGTH(DSNENTRY) WHILE/* FOR ENTRY    0628
*                                                            #Y30OE78*/
*                         BLDLERR=OFF;/* WHERE BLDL FAILED   #Y30OE78*/
         L     @08,GETMNA                                          0628
         LA    @08,DSNENT1(,@08)                                   0628
         ST    @08,DSNPTRJ                                         0628
         B     @DE00628                                            0628
@DL00628 TM    BLDLERR,B'00000010'                                 0628
         BNZ   @DC00628                                            0628
*                     IF JOBERR=OFF&/* IF NO ERROR BEFORE    #Y30OE78*/
*                         RECADDR=ZERO THEN/* BUT BLDL FAILED,     0629
*                                                            #Y30OE78*/
         TM    JOBERR(@08),B'00010000'                             0629
         BNZ   @RF00629                                            0629
         CLI   RECADDR(@08),0                                      0629
         BNE   @RF00629                                            0629
*                       BLDLERR=ON; /* SET ERROR INDICATOR   #Y30OE78*/
         OI    BLDLERR,B'00000010'                                 0630
*                   END;            /*                       #Y30OE78*/
@RF00629 LA    @08,40                                              0631
         AL    @08,DSNPTRJ                                         0631
         ST    @08,DSNPTRJ                                         0631
@DE00628 C     @08,LASTADSN                                        0631
         BNH   @DL00628                                            0631
@DC00628 DS    0H                                                  0632
*                   IF BLDLERR=ON THEN/* IF BLDL FAILED,     #Y30OE78*/
         TM    BLDLERR,B'00000010'                                 0632
         BNO   @RF00632                                            0632
*                     DO;           /* WRITE MESSAGE         #Y30OE78*/
*                       RTNCODE=TERMERR;/* SET RETURN CODE   #Y30OE78*/
         MVI   RTNCODE,X'08'                                       0634
*                       MSGIDEX=M555;/* SET MSG INDEX        #Y30OE78*/
         MVI   MSGIDEX,X'12'                                       0635
*                       MSGTYPE=MTYPWTO;/* INDICATE WTO      #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0636
*                       PARMPTR=ADDR(MSGINT);/* POINT TO PARMS     0637
*                                                            #Y30OE78*/
         LA    PARMPTR,MSGINT                                      0637
*                       CALL IOEDKMSG;/* HAVE MSG WRITTEN    #Y30OE78*/
         L     @15,@CV00048                                        0638
         BALR  @14,@15                                             0638
*                     END;          /*                       #Y30OE78*/
*                   ELSE            /* NO BLDL ERRORS,       #Y30OE78*/
*                     DO;           /*                       #Y30OE78*/
         B     @RC00632                                            0640
@RF00632 DS    0H                                                  0641
*                       BUFCBPTR=ADDR(BUFCB2);/* POINT TO ADS BUFFER
*                                                            #Y30OE78
*                                      CONTROL BLOCK         #Y30OE78*/
         LA    @08,BUFCB2                                          0641
         ST    @08,BUFCBPTR                                        0641
*                       DO I=1 TO 2;/* INITIALIZE BUFFER PTR #Y30OE78*/
         LA    I,1                                                 0642
@DL00642 DS    0H                                                  0643
*                         GEN REFS(UT3BPINA,PARMPTR)/* WITH OPEN   0643
*                                      ACQUIRED              #Y30OE78*/
*                             (GETBUF UT3BPINA,PARMPTR);/* BUFFERS 0643
*                                                            #Y30OE78*/
         GETBUF UT3BPINA,PARMPTR
*                         BUFPTR=PARMPTR;/* SAVE BUFFER ADDR #Y30OE78*/
         L     @08,BUFCBPTR                                        0644
         L     @05,BUFELPTR(,@08)                                  0644
         ST    PARMPTR,BUFPTR(,@05)                                0644
*                         BUFELPTR=BUFELNXT;/* GET OTHER ELEMENT   0645
*                                                            #Y30OE78*/
         L     @05,BUFELNXT(,@05)                                  0645
         ST    @05,BUFELPTR(,@08)                                  0645
*                       END;        /*                       #Y30OE78*/
         AH    I,@CH00061                                          0646
         CH    I,@CH00135                                          0646
         BNH   @DL00642                                            0646
*                       BUFCBPTR=ADDR(BUFCB1);/* INITIALIZE BUFFER 0647
*                                                            #Y30OE78
*                                      BLOCK1 FOR JCL INPUT  #Y30OE78*/
         LA    @08,BUFCB1                                          0647
         ST    @08,BUFCBPTR                                        0647
*                       DO I=1 TO 2;/* PROCESS TWO BUFFERS   #Y30OE78*/
         LA    I,1                                                 0648
@DL00648 DS    0H                                                  0649
*                         GEN REFS(UT3BPINJ,PARMPTR)/* GET BUFFER  0649
*                                      ADDRESS               #Y30OE78*/
*                             (GETBUF UT3BPINJ,PARMPTR);/* AND SAVE
*                                      IT IN                 #Y30OE78*/
         GETBUF UT3BPINJ,PARMPTR
*                         BUFPTR=PARMPTR;/* BUFFER CNTRL ELEMENT   0650
*                                                            #Y30OE78*/
         L     @08,BUFCBPTR                                        0650
         L     @05,BUFELPTR(,@08)                                  0650
         ST    PARMPTR,BUFPTR(,@05)                                0650
*                         BLKLEN=LENGTH(BDW);/* INITIALIZE BLOCK   0651
*                                                            #Y30OE78
*                                      LENGTH                #Y30OE78*/
         L     @03,BUFCBPTR                                        0651
         L     @03,BUFELPTR(,@03)                                  0651
         L     @03,BUFPTR(,@03)                                    0651
         MVC   BLKLEN(2,@03),@CH00056                              0651
*                         BUFELPTR=BUFELNXT;/* GET OTHER BUF ELEMENT
*                                                            #Y30OE78*/
         L     @05,BUFELNXT(,@05)                                  0652
         ST    @05,BUFELPTR(,@08)                                  0652
*                       END;        /*                       #Y30OE78*/
         AH    I,@CH00061                                          0653
         CH    I,@CH00135                                          0653
         BNH   @DL00648                                            0653
*                       DECBPT1=ADDR(DECB3);/* MODIFY DECB POINTERS
*                                                            #Y30OE78*/
         LA    @08,DECB3                                           0654
         ST    @08,DECBPT1                                         0654
*                       DECBPT2=ADDR(DECB4);/* TO USE FOR INPUT    0655
*                                                            #Y30OE78*/
         LA    @08,DECB4                                           0655
         ST    @08,DECBPT2                                         0655
*                       DSNPTRJ=ADDR(DSNENT1);/* POINT TO 1ST ENTRY
*                                                            #Y30OE78*/
         L     @08,GETMNA                                          0656
         LA    @08,DSNENT1(,@08)                                   0656
         ST    @08,DSNPTRJ                                         0656
*                       BLKPTR=ADDR(TTR0);/* GET TTR OF JCL  #Y30OE78*/
         LA    BLKPTR,TTR0(,@08)                                   0657
*                       GEN REFS(UT3BPINJ,BLKPTR)/* MEMBER   #Y30OE78*/
*                           (FIND  UT3BPINJ,(BLKPTR),C);/* ISSUE FIND
*                                      TO                    #Y30OE78
*                                      PREPARE DCB TO READ   #Y30OE78*/
         FIND  UT3BPINJ,(BLKPTR),C
*                       PARMPTR=DECBPTR;/* GET ADDR OF DECB  #Y30OE78*/
         L     @08,BUFCBPTR                                        0659
         L     @08,BUFELPTR(,@08)                                  0659
         L     PARMPTR,DECBPTR(,@08)                               0659
*                       BLKPTR=BUFPTR;/* GET BUFFER ADDR     #Y30OE78*/
         L     BLKPTR,BUFPTR(,@08)                                 0660
*                       GEN REFS(PARMPTR,BLKPTR)/* PRIME 1ST BUFFER
*                                                            #Y30OE78*/
*                           (READ  (PARMPTR),SF,,(BLKPTR),MF=E);/* 0661
*                                                            #Y30OE78*/
         READ  (PARMPTR),SF,,(BLKPTR),MF=E
*                       BUFELPTR=BUFELNXT;/* POINT TO OTHER BUFFER 0662
*                                                            #Y30OE78
*                                      SO THAT FIRST BPAMGET #Y30OE78
*                                      WILL RESULT IN BUFFER #Y30OE78
*                                      SWITCH AND SET RECPTR #Y30OE78*/
         L     @08,BUFCBPTR                                        0662
         L     @03,BUFELPTR(,@08)                                  0662
         L     @03,BUFELNXT(,@03)                                  0662
         ST    @03,BUFELPTR(,@08)                                  0662
*                       CALL PROCSTRM;/* CALL ROUTINE TO     #Y30OE78
*                                      PROCESS INPUT STREAM  #Y30OE78*/
         BAL   @14,PROCSTRM                                        0663
*                       DO I=1 TO 2;/* FREE JCL BUFFERS      #Y30OE78*/
         LA    I,1                                                 0664
@DL00664 DS    0H                                                  0665
*                         BLKPTR=BUFPTR;/* GET ADDR OF BUFFER      0665
*                                                            #Y30OE78*/
         L     @08,BUFCBPTR                                        0665
         L     @08,BUFELPTR(,@08)                                  0665
         L     BLKPTR,BUFPTR(,@08)                                 0665
*                         GEN REFS(BLKPTR,UT3BPINJ)/* FREE EACH    0666
*                                      BUFFER                #Y30OE78*/
*                             (FREEBUF UT3BPINJ,(BLKPTR));/* #Y30OE78*/
         FREEBUF UT3BPINJ,(BLKPTR)
*                         BUFELPTR=BUFELNXT;/* GET OTHER BUFFER    0667
*                                                            #Y30OE78*/
         L     @08,BUFCBPTR                                        0667
         L     @05,BUFELPTR(,@08)                                  0667
         L     @05,BUFELNXT(,@05)                                  0667
         ST    @05,BUFELPTR(,@08)                                  0667
*                       END;        /*                       #Y30OE78*/
         AH    I,@CH00061                                          0668
         CH    I,@CH00135                                          0668
         BNH   @DL00664                                            0668
*                       BUFCBPTR=ADDR(BUFCB2);/* GET ADS CONTROL   0669
*                                      BLOCK                 #Y30OE78*/
         LA    @08,BUFCB2                                          0669
         ST    @08,BUFCBPTR                                        0669
*                       DO I=1 TO 2;/* FREE ADS BUFFERS      #Y30OE78*/
         LA    I,1                                                 0670
@DL00670 DS    0H                                                  0671
*                         BLKPTR=BUFPTR;/* GET ADDR OF BUFFER      0671
*                                                            #Y30OE78*/
         L     @08,BUFCBPTR                                        0671
         L     @08,BUFELPTR(,@08)                                  0671
         L     BLKPTR,BUFPTR(,@08)                                 0671
*                         GEN REFS(BLKPTR)/* DO FREEBUF      #Y30OE78*/
*                             (FREEBUF UT3BPINA,(BLKPTR));/* #Y30OE78*/
         FREEBUF UT3BPINA,(BLKPTR)
*                         BUFELPTR=BUFELNXT;/* GET OTHER BUFFER    0673
*                                                            #Y30OE78*/
         L     @08,BUFCBPTR                                        0673
         L     @05,BUFELPTR(,@08)                                  0673
         L     @05,BUFELNXT(,@05)                                  0673
         ST    @05,BUFELPTR(,@08)                                  0673
*                       END;        /*                       #Y30OE78*/
         AH    I,@CH00061                                          0674
         CH    I,@CH00135                                          0674
         BNH   @DL00670                                            0674
*                     END;          /*                       #Y30OE78*/
*                   PARMPTR=ADDR(MSLIST);/* GET LIST TO CLOSE      0676
*                                                            #Y30OE78*/
@RC00632 LA    PARMPTR,MSLIST                                      0676
*                   GEN REFS(PARMPTR)/* CLOSE M&S FILES      #Y30OE78*/
*                       (CLOSE MF=(E,(PARMPTR)));/*          #Y30OE78*/
         CLOSE MF=(E,(PARMPTR))
*                 END;              /*                       #Y30OE78*/
*                                                                  0678
*               /*****************************************************/
*               /*                                                   */
*               /* END SEGMENT - MERGE AND SPOOL             #Y30OE78*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0679
*             END;                  /*                       @Y30OE78*/
@RF00603 DS    0H                                                  0680
*         END;                      /*                       @Y30OE78*/
@RF00562 DS    0H                                                  0681
*     END;                          /*                       @Y30OE78*/
@RF00514 DS    0H                                                  0682
*   RETURN CODE(RTNCODE);           /* RETURN TO CALLER      @Y30OE78*/
@RF00231 SLR   @15,@15                                             0682
         IC    @15,RTNCODE                                         0682
         L     @13,4(,@13)                                         0682
         L     @14,12(,@13)                                        0682
         LM    @00,@12,20(@13)                                     0682
         BR    @14                                                 0682
*                                                                  0683
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    NAMESCAN                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    CALLED BY SEGMENT(SCAN JCL RECORD) TO DETERMINE IF    @Y30OE78*/
*/*    A JCL RECORD HAS A NAME FIELD AND SET STATUS SWITCHES @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    RECORD WORK AREA(RECJCL) CONTAINS RECORD BEING        @Y30OE78*/
*/*    CONSIDERED                                            @Y30OE78*/
*/*    STATUS SWITCHES- CONTINUATION EXPECTED SWITCHES       @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    IF NAME WAS FOUND-                                    @Y30OE78*/
*/*      NAMELEN CONTAINS LENGTH OF NAME                     @Z30OE78*/
*/*      RECORD INDEX(K) POINTS TO BLANK AFTER NAME          @Z30OE78*/
*/*    IF NAME NOT FOUND-                                    #Y30OE78*/
*/*      STATUS SWITCHES INDICATE IF CONTINUATIONS ARE       @Z30OE78*/
*/*      BEING PROCESSED, IF SCAN IS TO CONTINUE AND IF      @Z30OE78*/
*/*      VERB IS TO BE BYPASSED IN SCAN                      @Z30OE78*/
*/*      RECORD INDEX(K) POINTS TO NON-BLANK AFTER NAME      @Z30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINES CALLED-                                         #Y30OE78*/
*/*    NONE                                                  #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* MACROS-                                                  #Y30OE78*/
*/*    NONE                                                  #Y30OE78*/
*/*                                                          #Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  0683
*NAMESCAN:                          /* ROUTINE TO SCAN NAME  @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG),NOSAVEAREA);/* ON JCL STMT     @Y30OE78*/
@EL00001 L     @13,4(,@13)                                         0683
@EF00001 DS    0H                                                  0683
@ER00001 LM    @14,@12,12(@13)                                     0683
         BR    @14                                                 0683
NAMESCAN ST    @14,12(,@13)                                        0683
*   DO K=NAMECOL TO LASTCOL WHILE   /* SCAN NAME FIELD FOR   @Y30OE78*/
*         RECJCL(K)^=BLANK;         /* BLANK                 @Y30OE78*/
         LA    @04,3                                               0684
         ST    @04,K                                               0684
@DL00684 LA    @15,RECJCL-1(@04)                                   0684
         CLI   0(@15),C' '                                         0684
         BE    @DC00684                                            0684
*   END;                            /*                       @Y30OE78*/
         AH    @04,@CH00061                                        0685
         ST    @04,K                                               0685
         CH    @04,@CH00200                                        0685
         BNH   @DL00684                                            0685
@DC00684 DS    0H                                                  0686
*   IF K>NAMECOL THEN               /* IF NAME WAS PRESENT   @Y30OE78*/
         L     @04,K                                               0686
         LA    @15,3                                               0686
         CR    @04,@15                                             0686
         BNH   @RF00686                                            0686
*     NAMELEN=K-NAMECOL;            /* SET LENGTH OF NAME    @Y30OE78*/
         SLR   @04,@15                                             0687
         LR    NAMELEN,@04                                         0687
*   ELSE                            /* IF NO NAME PRESENT,   @Y30OE78*/
*     IF RECJCL(K+1:LASTCOL)=       /* CHECK FOR NULL STMT   @Y30OE78*/
*         RECJCL(K:LASTCOL-1) THEN  /* IF A NULL STMT,       @Y30OE78*/
         B     @RC00686                                            0688
@RF00686 L     @04,K                                               0688
         LA    @15,70                                              0688
         SLR   @15,@04                                             0688
         LA    @14,RECJCL(@04)                                     0688
         LA    @07,RECJCL-1(@04)                                   0688
         EX    @15,@SC01662                                        0688
         BNE   @RF00688                                            0688
*       DO;                         /*                       @Y30OE78*/
*         NULL=ON;                  /* SET NULL INDICATOR    @Y30OE78*/
         OI    NULL,B'00010000'                                    0690
*         IF CMCONTEX=ON THEN       /* IF COMMENT CONTIN     @Y30OE78
*                                      EXPECTED,             @Y30OE78*/
         TM    CMCONTEX,B'00000100'                                0691
         BNO   @RF00691                                            0691
*           CMCONT=ON;              /* SET COMMENT CONTIN    @Y30OE78*/
         OI    CMCONT,B'10000000'                                  0692
*         IF OPCONTEX=ON THEN       /* IF OPERAND CONTIN     @Y30OE78*/
@RF00691 TM    OPCONTEX,B'00000010'                                0693
         BNO   @RF00693                                            0693
*           OPCONT=ON;              /* EXPECTED, SET SWITCH  @Y30OE78*/
         OI    OPCONT,B'01000000'                                  0694
*         CMCONTEX=OFF;             /* RESET CONTINUATION    @Y30OE78*/
@RF00693 DS    0H                                                  0696
*         OPCONTEX=OFF;             /* EXPECTED SWITCHES     @Y30OE78*/
         NI    CMCONTEX,B'11111001'                                0696
*         RECSCAN=OFF;              /* SUPPRESS FURTHER SCAN @Y30OE78*/
         NI    RECSCAN,B'11101111'                                 0697
*       END;                        /*                       @Y30OE78*/
*     ELSE                          /* NOT NULL RECORD,      @Y30OE78*/
*       IF CMCONTEX=ON×             /* IF NO CONTIN EXPECTED @Y30OE78*/
*           OPCONTEX=ON THEN        /* DONE WITH NAMESCAN    @Y30OE78*/
         B     @RC00688                                            0699
@RF00688 TM    CMCONTEX,B'00000110'                                0699
         BZ    @RF00699                                            0699
*         DO;                       /*                       @Y30OE78*/
*           CMCONT=ON;              /* AT LEAST A COMMENT    @Y30OE78
*                                      CONTINUATION          @Y30OE78*/
         OI    CMCONT,B'10000000'                                  0701
*           IF OPCONTEX=ON THEN     /* IF EXPECT OPND CONTIN @Y30OE78*/
         TM    OPCONTEX,B'00000010'                                0702
         BNO   @RF00702                                            0702
*             DO;                   /* SEE IF CONTINUED      @Y30OE78*/
*               DO K=K TO LASTCOL WHILE/* SCAN TO NON-BLANK  @Y30OE78*/
*                     RECJCL(K)=BLANK;/*                     @Y30OE78*/
         L     @04,K                                               0704
         B     @DE00704                                            0704
@DL00704 LA    @15,RECJCL-1(@04)                                   0704
         CLI   0(@15),C' '                                         0704
         BNE   @DC00704                                            0704
*               END;                /*                       @Y30OE78*/
         AH    @04,@CH00061                                        0705
         ST    @04,K                                               0705
@DE00704 CH    @04,@CH00200                                        0705
         BNH   @DL00704                                            0705
@DC00704 DS    0H                                                  0706
*               IF K>16 THEN        /* IF ALL BLANK THRU COL @Y30OE78*/
         L     @04,K                                               0706
         CH    @04,@CH00164                                        0706
         BNH   @RF00706                                            0706
*                 DO;               /* 16, PROCESS AS COMENT @Y30OE78
*                                      CONTINUATION ONLY     @Y30OE78*/
*                   CMCONTEX=OFF;   /* RESET CONTIN SWITCHES @Y30OE78*/
*                   OPCONTEX=OFF;   /*                       @Y30OE78*/
         NI    CMCONTEX,B'11111001'                                0709
*                   IF RECJCL(CONTCOL)^=BLANK THEN/* CHECK   @Y30OE78*/
         CLI   RECJCL+71,C' '                                      0710
         BE    @RF00710                                            0710
*                     CMCONTEX=ON;  /* IF CONTINUED          @Y30OE78*/
         OI    CMCONTEX,B'00000100'                                0711
*                   RECSCAN=OFF;    /* SUPPRESS FURTHER SCAN @Y30OE78*/
@RF00710 NI    RECSCAN,B'11101111'                                 0712
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* NON-BLANK HIT BEFORE  @Y30OE78*/
*                 DO;               /* COLUMN 17             @Y30OE78*/
         B     @RC00706                                            0714
@RF00706 DS    0H                                                  0715
*                   OPCONT=ON;      /* INDICATE OPND CONTIN  @Y30OE78*/
         OI    OPCONT,B'01000000'                                  0715
*                   BYPVERB=ON;     /* INDICATE BYPASS VERB  @Y30OE78*/
         OI    BYPVERB,B'00001000'                                 0716
*                   ATOPND=ON;      /* INDICATE THAT OPERAND @Y30OE78
*                                      FOUND                 @Y30OE78*/
         OI    ATOPND,B'00000001'                                  0717
*                 END;              /*                       @Y30OE78*/
*             END;                  /*                       @Y30OE78*/
*           ELSE                    /* IF COMMENT CONTIN     @Y30OE78*/
*             DO;                   /* EXPECTED, HANDLE IT   @Y30OE78*/
         B     @RC00702                                            0720
@RF00702 DS    0H                                                  0721
*               CMCONTEX=OFF;       /* RESET CONTIN SWITCHES @Y30OE78*/
*               OPCONTEX=OFF;       /*                       @Y30OE78*/
         NI    CMCONTEX,B'11111001'                                0722
*               IF RECJCL(CONTCOL)^=BLANK THEN/* CHECK IF    @Y30OE78*/
         CLI   RECJCL+71,C' '                                      0723
         BE    @RF00723                                            0723
*                 CMCONTEX=ON;      /* CONTINUED             @Y30OE78*/
         OI    CMCONTEX,B'00000100'                                0724
*               RECSCAN=OFF;        /* SUPPRESS FURTHER SCAN @Y30OE78*/
@RF00723 NI    RECSCAN,B'11101111'                                 0725
*             END;                  /*                       @Y30OE78*/
*         END;                      /*                       @Y30OE78*/
*   END NAMESCAN;                   /*                       @Y30OE78*/
@EL00002 DS    0H                                                  0728
@EF00002 DS    0H                                                  0728
@ER00002 L     @14,12(,@13)                                        0728
         BR    @14                                                 0728
*                                                                  0729
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    OPNDSCAN                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    CALLED BY SEGMENT(SCAN JCL RECORD) TO SCAN PAST ALL   @Y30OE78*/
*/*    OPERANDS IN A JCL RECORD AND DETERMINE IF STATE-      @Y30OE78*/
*/*    MENT IS CONTINUED                                     @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    RECORD WORK AREA(RECJCL) CONTAINS RECORD TO BE        @Y30OE78*/
*/*    CONSIDERED                                            @Y30OE78*/
*/*    JCL RECORD INDEX(K) POINTING TO FIRST CHARACTER       @Y30OE78*/
*/*    OF OPERANDS                                           @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    STATUS SWITCHES TO INDICATE IF OPERAND CONTINUATION   @Y30OE78*/
*/*    (OPCONTEX) OR COMMENT CONTINUATION(CMCONTEX) ARE TO   @Y30OE78*/
*/*    BE EXPECTED FOLLOWING THIS JCL RECORD                 @Y30OE78*/
*/*    OPNDPTR POINTING TO FIRST OPERAND PARAMETER           @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  0729
*OPNDSCAN:                          /*                       @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG),NOSAVEAREA);/*                 @Y30OE78*/
OPNDSCAN ST    @14,12(,@13)                                        0729
*   OPNDPTR=K;                      /* SET OPERAND POINTER   @Y30OE78*/
         L     @15,K                                               0730
         LR    OPNDPTR,@15                                         0730
*   CMCONTEX=OFF;                   /* RESET CONTIN SWITCHES @Y30OE78*/
*   OPCONTEX=OFF;                   /*                       @Y30OE78*/
         NI    CMCONTEX,B'11111001'                                0732
*   QUOTE=OFF;                      /* INITIALIZE QUOTE SW   @Y30OE78*/
         NI    QUOTE,B'11111110'                                   0733
*   DO K=MIN(K,LASTCOL) TO LASTCOL WHILE/* SCAN TO BLANK     @Y30OE78*/
*         ^(RECJCL(K)=BLANK&        /* OUTSIDE OF QUOTES     @Y30OE78*/
*         QUOTE=OFF);               /*                       @Y30OE78*/
         LA    @04,71                                              0734
         CR    @15,@04                                             0734
         BNH   *+6
         LR    @15,@04                                             0734
         B     @DE00734                                            0734
@DL00734 LA    @04,RECJCL-1(@15)                                   0734
         CLI   0(@04),C' '                                         0734
         BNE   @DB00734                                            0734
         TM    QUOTE,B'00000001'                                   0734
         BZ    @DC00734                                            0734
@DB00734 DS    0H                                                  0735
*     IF RECJCL(K)=CQUOTE THEN      /* IF QUOTE IS HIT,      @Y30OE78*/
         L     @04,K                                               0735
         LA    @15,RECJCL-1(@04)                                   0735
         CLI   0(@15),C''''                                        0735
         BNE   @RF00735                                            0735
*       IF QUOTE=OFF THEN           /* FLIP QUOTE SWITCH     @Y30OE78*/
         TM    QUOTE,B'00000001'                                   0736
         BNZ   @RF00736                                            0736
*         QUOTE=ON;                 /* TO OPPOSITE           @Y30OE78*/
         OI    QUOTE,B'00000001'                                   0737
*       ELSE                        /* VALUE                 @Y30OE78*/
*         QUOTE=OFF;                /*                       @Y30OE78*/
         B     @RC00736                                            0738
@RF00736 NI    QUOTE,B'11111110'                                   0738
*   END;                            /*                       @Y30OE78*/
@RC00736 DS    0H                                                  0739
@RF00735 LA    @15,1                                               0739
         AL    @15,K                                               0739
@DE00734 ST    @15,K                                               0739
         CH    @15,@CH00200                                        0739
         BNH   @DL00734                                            0739
@DC00734 DS    0H                                                  0740
*   IF RECJCL(K-1)=CCOMMA THEN      /* PREVIOUS CHAR WAS ,   @Y30OE78*/
         L     @04,K                                               0740
         LA    @15,RECJCL-2(@04)                                   0740
         CLI   0(@15),C','                                         0740
         BNE   @RF00740                                            0740
*     OPCONTEX=ON;                  /* OPND CONTIN EXPECTED  @Y30OE78*/
         OI    OPCONTEX,B'00000010'                                0741
*   ELSE                            /* NOT OPND CONTINUATION @Y30OE78*/
*     IF RECJCL(CONTCOL)^=BLANK THEN/* CHECK FOR CONTIN IND  @Y30OE78*/
         B     @RC00740                                            0742
@RF00740 CLI   RECJCL+71,C' '                                      0742
         BE    @RF00742                                            0742
*       CMCONTEX=ON;                /* SET COMMENT CONTIN SW @Y30OE78*/
         OI    CMCONTEX,B'00000100'                                0743
*   END OPNDSCAN;                   /*                       @Y30OE78*/
@EL00003 DS    0H                                                  0744
@EF00003 DS    0H                                                  0744
@ER00003 L     @14,12(,@13)                                        0744
         BR    @14                                                 0744
*                                                                  0745
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    JOBPROC                                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    PROCESS JOB STATEMENTS IN JCL STREAM AS FOLLOWS       @Y30OE78*/
*/*      FLAG DSN TABLE ENTRIES FOR PRECEDING JOB IF THAT    @Y30OE78*/
*/*        JOB HAD A JCL ERROR DETECTED BY DKRDR             @Y30OE78*/
*/*      VALIDITY CHECK JOBNAME                              @Y30OE78*/
*/*      CHECK THAT NUMBER OF JOBS IS WITHIN UPPER LIMIT OF  @Y30OE78*/
*/*        9999 AND IF NOT, SET UP ERROR MESSAGE             @Y30OE78*/
*/*      APPEND CONTROL INFORMATION TO END OF RECORD TO      @Y30OE78*/
*/*        MINIMIZE RECORD SCANNING IN LATER PROCESSING      @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    RECORD WORK AREA(RECJCL) CONTAINS RECORD BEING        @Y30OE78*/
*/*      PROCESSED                                           @Y30OE78*/
*/*    DATA SET NAME TABLE(DSNTAB) IF IN MERGE MODE          @Y30OE78*/
*/*    STATUS SWITCHES INDICATING                            @Y30OE78*/
*/*      (JBJCLERR) JOB JCL ERROR                            @Y30OE78*/
*/*      (STARTJOB) SCANNING TO JOB SPECIFIED IN START CMD   @Y30OE78*/
*/*      (CMCONTEX & OPCONTEX) CONTINUATIONS OF THIS STMT    @Y30OE78*/
*/*        ARE EXPECTED                                      @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    CONTROL INFORMATION(RECNTRLA) CONSTRUCTED IN RECORD   @Y30OE78*/
*/*      WORK AREA                                           @Y30OE78*/
*/*    DATA SET NAME TABLE UPDATED IF PRECEDING JOB HAD      @Y30OE78*/
*/*      ERRORS                                              @Y30OE78*/
*/*    STATUS SWITCHES(JBJCLERR) RESET FOR NEW JOB, SET      @Y30OE78*/
*/*      IF INVALID JOBNAME                                  @Y30OE78*/
*/*    CURRENT JOB NAME(CURJOBNM) IS SAVED                   @Y30OE78*/
*/*    MESSAGE WRITER PARMLIST IF MESSAGE NEEDED             @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    IOEDKMSG(MESSAGE WRITER) IF MSG IEB550 IS NEEDED      @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  0745
*JOBPROC:                           /* JOB PROCESSOR         @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /*                       @Y30OE78*/
JOBPROC  ST    @14,@SA00004                                        0745
*   CNTRLSW=CNTRLSWI;               /* CLEAR CNTRL SWITCHES  @Y30OE78*/
         MVI   CNTRLSW,X'C0'                                       0746
*   IF JOBCONT=ON THEN              /* IF JOB STMT CONTINUA- @Y30OE78
*                                      TION WAS EXPECTED,    @Y30OE78*/
         TM    JOBCONT,B'00000100'                                 0747
         BNO   @RF00747                                            0747
*     DO;                           /*                       @Y30OE78*/
*       JOBCONT=OFF;                /* RESET CONTIN SWITCH   @Y30OE78*/
         NI    JOBCONT,B'11111011'                                 0749
*       IF JCL=OFF THEN             /* IF NON-JCL CONTIN,    @Y30OE78*/
         TM    JCL,B'00100000'                                     0750
         BNZ   @RF00750                                            0750
*         JBJCLERR=ON;              /* SET ERROR INDICATOR   @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                0751
*     END;                          /*                       @Y30OE78*/
*   ELSE                            /* JOB VERB WAS HIT      @Y30OE78*/
*     DO;                           /*                       @Y30OE78*/
         B     @RC00747                                            0753
@RF00747 DS    0H                                                  0754
*       RFY                                                        0754
*         DSNENTRY BASED(DSNPTRI);  /* USE TEMPORARY PTR     @Y30OE78*/
*       IF JBJCLERR=ON&             /* IF LAST JOB HAD JCL   @Y30OE78
*                                      ERRORS AND            @Y30OE78*/
*           ADS#^=ZERO THEN         /* IN MERGE MODE,        @Y30OE78*/
         TM    JBJCLERR,B'01000000'                                0755
         BNO   @RF00755                                            0755
         ICM   @03,15,ADS#                                         0755
         BZ    @RF00755                                            0755
*         DO DSNPTRI=DSNPTRJ-LENGTH(DSNENTRY)/* FLAG         @Y30OE78*/
*               TO FRSTADSN         /* ENTRIES               @Y30OE78*/
*               BY-LENGTH(DSNENTRY) WHILE/* IN               @Y30OE78*/
*               JOBNO=CURJNUM;      /* DSN TABLE WHICH       @Y30OE78*/
         L     DSNPTRI,DSNPTRJ                                     0756
         SH    DSNPTRI,@CH01204                                    0756
         B     @DE00756                                            0756
@DL00756 CLC   JOBNO(4,DSNPTRI),CURJNUM                            0756
         BNE   @DC00756                                            0756
*           JOBERR=ON;              /* RELATE TO JOB WITH    @Y30OE78
*                                      JCL ERROR             @Y30OE78*/
         OI    JOBERR(DSNPTRI),B'00010000'                         0757
*         END;                      /* JOB                   @Y30OE78*/
         AH    DSNPTRI,@CH01601                                    0758
@DE00756 C     DSNPTRI,FRSTADSN                                    0758
         BNL   @DL00756                                            0758
@DC00756 DS    0H                                                  0759
*       RFY                                                        0759
*         DSNENTRY BASED(DSNPTRJ);  /*                       @Y30OE78*/
@RF00755 DS    0H                                                  0760
*       JBJCLERR=OFF;               /* RESET JCL ERROR       #Y30OE78
*                                      SWITCH FOR NEW JOB    #Y30OE78*/
         NI    JBJCLERR,B'10111111'                                0760
*       HYPHTAB=BLANK;              /* MAKE HYPHEN INVALID   #Y30OE78*/
         MVI   HYPHTAB,C' '                                        0761
*       LBRCTAB=BLANK;              /* AND LEFT BRACE IN-    #Y30OE78
*                                      VALID IN TRT TABLE    @Y30OE78*/
         MVI   LBRCTAB,C' '                                        0762
*       CHARHIT=ZERO;               /* INITIALIZE END VALUE  #Y30OE78*/
         SLR   CHARHIT,CHARHIT                                     0763
*       TRT(RECJCL(NAMECOL:NAMECOL+LENGTH(CURJOBNM)),TRTTAB);/*    0764
*                                                            @Y30OE78*/
         TRT   RECJCL+2(9),TRTTAB                                  0764
*       IF CHARHIT=ZERO×            /* IF NO END HIT OR      #Y30OE78*/
*           CHARHIT^=SPACE×         /* BAD CHARACTER HIT OR  #Y30OE78*/
*           HITADDR=ADDR(RECJCL(NAMECOL))×/* NO GOOD CHAR    #Y30OE78
*                                      WAS FOUND OR          #Y30OE78*/
*           RECJCL(NAMECOL)>=CZERO THEN/* 1ST CHAR NUMERIC,  #Y30OE78*/
         CH    CHARHIT,@CH00053                                    0765
         BE    @RT00765                                            0765
         CH    CHARHIT,@CH00375                                    0765
         BNE   @RT00765                                            0765
         LA    @03,RECJCL+2                                        0765
         CR    HITADDR,@03                                         0765
         BE    @RT00765                                            0765
         CLI   RECJCL+2,C'0'                                       0765
         BL    @RF00765                                            0765
@RT00765 DS    0H                                                  0766
*         JBJCLERR=ON;              /* INDICATE ERROR        #Y30OE78*/
         OI    JBJCLERR,B'01000000'                                0766
*       I=MIN(NAMELEN,LENGTH(CURJOBNM));/* GET LENGTH OF     #Y30OE78
*                                      NAME TO USE           #Y30OE78*/
@RF00765 LA    I,8                                                 0767
         CR    I,NAMELEN                                           0767
         BNH   *+6
         LR    I,NAMELEN                                           0767
*       CURJOBNM=RECJCL(NAMECOL:NAMECOL+I);/* SAVE NAME      #Y30OE78*/
         MVI   CURJOBNM+1,C' '                                     0768
         MVC   CURJOBNM+2(6),CURJOBNM+1                            0768
         EX    I,@SM01666                                          0768
*       IF STARTJOB=ON&             /* IF SCANNING TO START  #Y30OE78
*                                      AT SPECIFIC JOB AND   #Y30OE78*/
*           CURJOBNM=SJOBNAME THEN  /* THIS IS THE JOB,      #Y30OE78*/
         TM    STARTJOB,B'10000000'                                0769
         BNO   @RF00769                                            0769
         CLC   CURJOBNM(8),SJOBNAME                                0769
         BNE   @RF00769                                            0769
*         STARTJOB=OFF;             /* RESET INDICATOR       #Y30OE78*/
         NI    STARTJOB,B'01111111'                                0770
*       IF STARTJOB=OFF THEN        /* IF NOT SCANNING TO    #Y30OE78*/
@RF00769 TM    STARTJOB,B'10000000'                                0771
         BNZ   @RF00771                                            0771
*         DO;                       /* JOB, PROCESS NEW JOB  #Y30OE78*/
*           ADSNUM=ZERO;            /* RESET ADS NUMBER      #Y30OE78*/
         SLR   @08,@08                                             0773
         STH   @08,ADSNUM                                          0773
*           JOBNUM=JOBNUM+1;        /* BUMP JOB NUMBER       #Y30OE78*/
         LA    @08,1                                               0774
         AH    @08,JOBNUM                                          0774
         STH   @08,JOBNUM                                          0774
*           IF JOBNUM>9999 THEN     /* IF JOB NUM IS TOO BIG #Y30OE78*/
         CH    @08,@CH01482                                        0775
         BNH   @RF00775                                            0775
*             DO;                   /*                       #Y30OE78*/
*               IJSCERR=ON;         /* SET SCAN ERR SWITCH   #Y30OE78*/
         OI    IJSCERR,B'00000100'                                 0777
*               RTNCODE=PARTERR;    /* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'04'                                       0778
*               MSGIDEX=M550;       /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'05'                                       0779
*               MSGTYPE=MTYPWTO;    /* MSG TYPE IS WTO       #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0780
*               DDDK=DDDV;          /* SET DEV ADDR KEY      #Y30OE78*/
         MVI   DDDK,X'08'                                          0781
*               IF DSSDS(RDER)=ON THEN/* IF SUBSYSTEM DS,    @Y30OE78*/
         TM    DSSDS,B'01000000'                                   0782
         BNO   @RF00782                                            0782
*                 DDD='JES';        /* INDICATE JES DEVICE   @Y30OE78*/
         MVC   DDD(3),@CC01462                                     0783
*               ELSE                /* OTHERWISE,            @Y30OE78*/
*                 DDD=DEVPTR(RDER)->UCBNAME;/* GET DEV ADDR  @Y30OE78*/
         B     @RC00782                                            0784
@RF00782 SLR   @08,@08                                             0784
         ICM   @08,7,DEVPTR                                        0784
         MVC   DDD(3),UCBNAME(@08)                                 0784
*               JJJK=JJJV;          /* SET JOBNAME KEY       @Y30OE78*/
@RC00782 MVI   JJJK,X'0B'                                          0785
*               JJJ=CURJOBNM;       /* SET JOB NAME          @Y30OE78*/
         MVC   JJJ(8),CURJOBNM                                     0786
*               PARMPTR=ADDR(MSGINT);/* POINT TO PARMS       @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0787
*               CALL IOEDKMSG;      /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0788
         BALR  @14,@15                                             0788
*               DDDK=SKIPV;         /* RESET DEV ADDR KEY    @Y30OE78*/
         MVI   DDDK,X'00'                                          0789
*               JJJK=SKIPV;         /* AND JOBNAME KEY       @Y30OE78*/
         MVI   JJJK,X'00'                                          0790
*             END;                  /*                       @Y30OE78*/
*         END;                      /*                       @Y30OE78*/
@RF00775 DS    0H                                                  0793
*       FIRST=ON;                   /* SET FIRST RECORD IN   @Y30OE78
*                                      JOB STMT INDICATOR    @Y30OE78*/
@RF00771 OI    FIRST,B'00000100'                                   0793
*     END;                          /*                       @Y30OE78*/
*   IF OPCONTEX=ON×                 /* IF CONTIN EXPECTED    @Y30OE78*/
*       CMCONTEX=ON THEN            /* ON JOB RECORD,        @Y30OE78*/
@RC00747 TM    OPCONTEX,B'00000110'                                0795
         BZ    @RF00795                                            0795
*     DO;                           /*                       @Y30OE78*/
*       JOBCONT=ON;                 /* SET INDICATOR THAT    @Y30OE78
*                                      JOB CONTIN EXPECTED   @Y30OE78*/
         OI    JOBCONT,B'00000100'                                 0797
*       CONTIN=ON;                  /* SET CONTIN INDICATOR  @Y30OE78
*                                      IN CNTRL INFO         @Y30OE78*/
         OI    CONTIN,B'00000010'                                  0798
*     END;                          /*                       @Y30OE78*/
*   ELSE                            /* IF NO CONTIN EXPECTED @Y30OE78*/
*     LAST=ON;                      /* SET LAST INDICATOR    @Y30OE78
*                                      IN CNTRL INFO         @Y30OE78*/
         B     @RC00795                                            0800
@RF00795 OI    LAST,B'00000001'                                    0800
*   IF ADS#^=ZERO THEN              /* IF IN MERGE MODE,     @Y30OE78*/
@RC00795 ICM   @08,15,ADS#                                         0801
         BZ    @RF00801                                            0801
*     DO;                           /* COMPLETE CNTRL INFO   @Y30OE78*/
*       CVD(JOBNUM,WORKA);          /* GET CURRENT JOB NUM   @Y30OE78*/
         LH    @08,JOBNUM                                          0803
         CVD   @08,WORKA                                           0803
*       UNPK(CURJNUM,WORKA(6:8));   /* IN EBCDIC             @Y30OE78*/
         UNPK  CURJNUM(4),WORKA+5(3)                               0804
*       MVZ(CURJNUM(4),ZONE);       /*                       @Y30OE78*/
         MVZ   CURJNUM+3(1),@CB00080                               0805
*       CTRLJOB#=CURJNUM;           /* PUT IT IN CNTRL INFO  @Y30OE78*/
         MVC   CTRLJOB#(4),CURJNUM                                 0806
*       CJOB=ON;                    /* INDICATE JOB CARD     @Y30OE78*/
         OI    CJOB,B'00100000'                                    0807
*       RDWLNA=LENGTH(RDWA)+        /* SET RDW LENGTH TO     @Y30OE78*/
*           LENGTH(RECJCL)+         /* WRITE LONG RECORD     @Y30OE78*/
*           LENGTH(RECNTRLA);       /* WITH CNTRL INFO       @Y30OE78*/
         MVC   RDWLNA(2),@CH01603                                  0808
*     END;                          /*                       @Y30OE78*/
*   END JOBPROC;                    /*                       @Y30OE78*/
@EL00004 DS    0H                                                  0810
@EF00004 DS    0H                                                  0810
@ER00004 L     @14,@SA00004                                        0810
         BR    @14                                                 0810
*                                                                  0811
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    DDPROC                                                @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    PROCESS DD STATEMENTS IN THE JCL STREAM AS FOLLOWS    @Y30OE78*/
*/*      IF DD STMT IS DD * OR DATA DO SYSIN SCANNING        @Y30OE78*/
*/*        (SEGMENT - SYSIN SCAN)                            @Y30OE78*/
*/*        SCAN RECORD FOR DSID, VOL=SER, AND DLM KEYWORDS   @Y30OE78*/
*/*        WHEN ONE OF THESE KEYWORDS IS FOUND, CALL         @Y30OE78*/
*/*        SUBROUTINES TO PROCESS IT                         @Y30OE78*/
*/*        WHEN ALL OF SYSIN STMT HAS BEEN PROCESSED ENTER   @Y30OE78*/
*/*        INSTREAM DATA MODE OR BUILD DSNTAB ENTRY AND      @Y30OE78*/
*/*        APPEND CONTROL INFORMATION TO JCL RECORD IN       @Y30OE78*/
*/*        PREPARATION TO RETRIEVE ASSOCIATED DATA SET(ADS)  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    RECORD WORK AREA(RECJCL) CONTAINS RECORD BEING        @Y30OE78*/
*/*      PROCESSED                                           @Y30OE78*/
*/*    STATUS SWITCHES INDICATE IF CONTINUATION IS BEING     @Y30OE78*/
*/*      PROCESSED AND IF MORE CONTINUATIONS ARE EXPECTED    @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    CONTROL INFORMATION(RECNTRLA) CONSTRUCTED IN RECORD   @Y30OE78*/
*/*      WORK AREA                                           @Y30OE78*/
*/*    DSNTAB UPDATED WITH NEW ENTRY IF ADS REQUEST WAS      @Y30OE78*/
*/*      FOUND                                               @Y30OE78*/
*/*    STATUS SWITCH AND DELIMITER VALUE SET                 @Y30OE78*/
*/*    MESSAGE WRITER PARMLIST TO WRITE MSG IEB544 IF        @Y30OE78*/
*/*      DSNTAB COULD NOT CONTAIN ANOTHER ENTRY              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    PARMSCAN- TO FIND BEGINNING OF NEXT OPERAND IN A      @Y30OE78*/
*/*      JCL RECORD                                          @Y30OE78*/
*/*    DSIDSCAN- TO PROCESS DSID PARAMETER VALUE             @Y30OE78*/
*/*    VOLSCAN- TO PROCESS VOL PARAMETER VALUE               @Y30OE78*/
*/*    DLMSCAN- TO PROCESS DLM PARAMTER VALUE                @Y30OE78*/
*/*    IOEDKMSG- WRITE MSG IEB544 OR IEB556 IF NEEDED        @Z30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  0811
*DDPROC:                            /* DD PROCESSOR          @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /*                       @Y30OE78*/
DDPROC   ST    @14,@SA00005                                        0811
*   IF DDCONT=ON THEN               /* IF A CONTINUATION,    @Y30OE78*/
         TM    DDCONT,B'00000010'                                  0812
         BNO   @RF00812                                            0812
*     DO;                           /*                       @Y30OE78*/
*       DDCONT=OFF;                 /* RESET INDICATOR       @Y30OE78*/
         NI    DDCONT,B'11111101'                                  0814
*       IF JCL=OFF THEN             /* IF NON-JCL CONTIN,    @Y30OE78*/
         TM    JCL,B'00100000'                                     0815
         BNZ   @RF00815                                            0815
*         JBJCLERR=ON;              /* SET ERROR INDICATOR   @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                0816
*     END;                          /*                       @Y30OE78*/
*   ELSE                            /* IF NOT CONTINUATION,  @Y30OE78*/
*     IF ATOPND=OFF THEN            /* IF NO OPERAND BEFORE  @Y30OE78*/
         B     @RC00812                                            0818
@RF00812 TM    ATOPND,B'00000001'                                  0818
         BNZ   @RF00818                                            0818
*       DO;                         /* LAST COLUMN,          @Y30OE78*/
*         JBJCLERR=ON;              /* SET ERROR FLAG        @Y30OE78*/
*         DDREJCT=ON;               /* SCAN NO FURTHER ON    @Y30OE78*/
         OI    JBJCLERR,B'01100000'                                0821
*       END;                        /* THIS DD STATEMENT     @Y30OE78*/
*     ELSE                          /* OPND BEFORE COL 72    @Y30OE78*/
*       DO;                         /* PROCESS NEW DD STMT   @Y30OE78*/
         B     @RC00818                                            0823
@RF00818 DS    0H                                                  0824
*         DDREJCT=OFF;              /* INIT REJECT SWITCH    @Y30OE78*/
         NI    DDREJCT,B'11011111'                                 0824
*         QUOTE=OFF;                /* INIT QUOTE SWITCH     @Y30OE78*/
         NI    QUOTE,B'11111110'                                   0825
*         OSCSW=ZERO;               /* INIT FLAGS AND VALID- @Y30OE78
*                                      ITY SWITCHES FOR SYS- @Y30OE78
*                                      IN SCAN WORKAREA      @Y30OE78*/
         SLR   @04,@04                                             0826
         ST    @04,OSCSW                                           0826
*         OVOLSER=BLANK;            /* CLEAR VOL SER FIELD   @Y30OE78*/
         MVI   OVOLSER+1,C' '                                      0827
         MVC   OVOLSER+2(4),OVOLSER+1                              0827
         MVI   OVOLSER,C' '                                        0827
*         CALL PARMSCAN;            /* SCAN POSITIONAL PARM  @Y30OE78*/
         BAL   @14,PARMSCAN                                        0828
*         IF RECJCL(OPNDPTR)=CSTAR THEN/* IF DD *, PROCESS   @Y30OE78*/
         LA    @04,RECJCL-1(OPNDPTR)                               0829
         CLI   0(@04),C'*'                                         0829
         BNE   @RF00829                                            0829
*           DO;                     /*                       @Y30OE78*/
*             JCLINDAT=OFF;         /* INDICATE JCL NOT      @Y30OE78
*                                      ALLOWED IN SYSIN      @Y30OE78*/
         NI    JCLINDAT,B'10111111'                                0831
*             OPNDPTR=NXTOPND;      /* BUMP TO NEXT OPERAND  @Y30OE78*/
         LR    OPNDPTR,NXTOPND                                     0832
*           END;                    /*                       @Y30OE78*/
*         ELSE                      /* OTHERWISE CHECK MORE  @Y30OE78*/
*           IF RECJCL(OPNDPTR:OPNDPTR+3)=CDATA THEN/* IF     @Y30OE78*/
         B     @RC00829                                            0834
@RF00829 LA    @04,RECJCL-1(OPNDPTR)                               0834
         CLC   0(4,@04),@CC00317                                   0834
         BNE   @RF00834                                            0834
*             DO;                   /* DD DATA, PROCESS      @Y30OE78*/
*               JCLINDAT=ON;        /* INDICATE JCL ALLOWED  @Y30OE78*/
         OI    JCLINDAT,B'01000000'                                0836
*               OPNDPTR=NXTOPND;    /* BUMP TO NEXT OPERAND  @Y30OE78*/
         LR    OPNDPTR,NXTOPND                                     0837
*             END;                  /*                       @Y30OE78*/
*           ELSE                    /* OTHERWISE REJECT DD   @Y30OE78*/
*             DDREJCT=ON;           /* SET REJECT INDICATOR  @Y30OE78*/
         B     @RC00834                                            0839
@RF00834 OI    DDREJCT,B'00100000'                                 0839
*       END;                        /*                       @Y30OE78*/
@RC00834 DS    0H                                                  0840
@RC00829 DS    0H                                                  0841
*   IF DDREJCT=OFF THEN             /* IF INTERESTING DD,    @Y30OE78*/
@RC00818 DS    0H                                                  0841
@RC00812 TM    DDREJCT,B'00100000'                                 0841
         BNZ   @RF00841                                            0841
*     DO;                           /* PROCESS IT            @Y30OE78*/
*                                                                  0842
*       /*************************************************************/
*       /*                                                           */
*       /* START SEGMENT- SYSIN SCAN                         @Y30OE78*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0843
*       DO WHILE ATOPND=ON;         /* SCAN ALL OPERANDS OF  @Y30OE78
*                                      A SYSIN DD RECORD     @Y30OE78*/
         B     @DE00843                                            0843
@DL00843 DS    0H                                                  0844
*         CALL PARMSCAN;            /* FIND ONE PARAMETER    @Y30OE78*/
         BAL   @14,PARMSCAN                                        0844
*         IF DSIDCONT=ON THEN       /* IF DSID PARAMETER     @Y30OE78
*                                      CONTIN IS EXPECTED,   @Y30OE78*/
         TM    DSIDCONT,B'00000010'                                0845
         BNO   @RF00845                                            0845
*           CALL DSIDSCAN;          /* PROCESS IT            @Y30OE78*/
         BAL   @14,DSIDSCAN                                        0846
*         ELSE                      /* CONTINUE              @Y30OE78*/
*           IF VOLCONT=ON THEN      /* IF VOLUME PARAMETER   @Y30OE78
*                                      CONTIN IS EXPECTED,   @Y30OE78*/
         B     @RC00845                                            0847
@RF00845 TM    VOLCONT,B'00000100'                                 0847
         BNO   @RF00847                                            0847
*             CALL VOLSCAN;         /* PROCESS IT            @Y30OE78*/
         BAL   @14,VOLSCAN                                         0848
*           ELSE                    /* CONTINUE              @Y30OE78*/
*             IF RECJCL(OPNDPTR:OPNDPTR+LENGTH(KDSID)-1)=/*  @Y30OE78*/
*                 KDSID THEN        /* IF DSID FOUND,        @Y30OE78*/
         B     @RC00847                                            0849
@RF00847 LA    @04,RECJCL-1(OPNDPTR)                               0849
         CLC   0(5,@04),@CC00306                                   0849
         BNE   @RF00849                                            0849
*               DO;                 /* PROCESS IT            @Y30OE78*/
*                 OPNDPTR=OPNDPTR+LENGTH(KDSID);/* BUMP PAST IT    0851
*                                                            @Y30OE78*/
         AH    OPNDPTR,@CH00301                                    0851
*                 CALL DSIDSCAN;    /* PROCESS IT            @Y30OE78*/
         BAL   @14,DSIDSCAN                                        0852
*               END;                /*                       @Y30OE78*/
*             ELSE                  /* CHECK FOR OTHERS      @Y30OE78*/
*               IF RECJCL(OPNDPTR:OPNDPTR+LENGTH(KVOL)-1)=/* @Y30OE78*/
*                   KVOL THEN       /* IF KEYWORD IS VOL=    @Y30OE78*/
         B     @RC00849                                            0854
@RF00849 LA    @04,RECJCL-1(OPNDPTR)                               0854
         CLC   0(4,@04),@CC00308                                   0854
         BNE   @RF00854                                            0854
*                 DO;               /*                       @Y30OE78*/
*                   OPNDPTR=OPNDPTR+LENGTH(KVOL);/* BUMP PAST      0856
*                                                            @Y30OE78*/
         AH    OPNDPTR,@CH00056                                    0856
*                   CALL VOLSCAN;   /* PROCESS VOL PARAMETER @Y30OE78*/
         BAL   @14,VOLSCAN                                         0857
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* CHECK FOR OTHERS      @Y30OE78*/
*                 IF RECJCL(OPNDPTR:OPNDPTR+LENGTH(KVOLU)-1)=/*    0859
*                                                            @Y30OE78*/
*                     KVOLU THEN    /* KEYWORD IS VOLUME=,   @Y30OE78*/
         B     @RC00854                                            0859
@RF00854 LA    @04,RECJCL-1(OPNDPTR)                               0859
         CLC   0(7,@04),@CC00311                                   0859
         BNE   @RF00859                                            0859
*                   DO;             /*                       @Y30OE78*/
*                     OPNDPTR=OPNDPTR+LENGTH(KVOLU);/* BUMP BY     0861
*                                                            @Y30OE78*/
         AH    OPNDPTR,@CH00310                                    0861
*                     CALL VOLSCAN; /* PROCESS VOL KEYWORD   @Y30OE78*/
         BAL   @14,VOLSCAN                                         0862
*                   END;            /*                       @Y30OE78*/
*                 ELSE              /* CHECK OTHERS          @Y30OE78*/
*                   IF RECJCL(OPNDPTR:OPNDPTR+LENGTH(KDLM)-1)=/*   0864
*                                                            @Y30OE78*/
*                       KDLM THEN   /* IF KEYWORD IS DLM=,   @Y30OE78*/
         B     @RC00859                                            0864
@RF00859 LA    @04,RECJCL-1(OPNDPTR)                               0864
         CLC   0(4,@04),@CC00313                                   0864
         BNE   @RF00864                                            0864
*                     DO;           /*                       @Y30OE78*/
*                       OPNDPTR=OPNDPTR+LENGTH(KDLM);/* BUMP BY    0866
*                                                            @Y30OE78*/
         AH    OPNDPTR,@CH00056                                    0866
*                       CALL DLMSCAN;/* PROCESS IT           @Y30OE78*/
         BAL   @14,DLMSCAN                                         0867
*                     END;          /*                       @Y30OE78*/
*                   ELSE                                           0869
*                     ;             /*                       @Y30OE78*/
@RF00864 DS    0H                                                  0870
*         OPNDPTR=NXTOPND;          /* GET NEXT OPERAND      @Y30OE78*/
@RC00859 DS    0H                                                  0870
@RC00854 DS    0H                                                  0870
@RC00849 DS    0H                                                  0870
@RC00847 DS    0H                                                  0870
@RC00845 LR    OPNDPTR,NXTOPND                                     0870
*       END;                        /*                       @Y30OE78*/
*                                                                  0871
@DE00843 TM    ATOPND,B'00000001'                                  0871
         BO    @DL00843                                            0871
*       /*************************************************************/
*       /*                                                           */
*       /* END SEGMENT - SYSIN SCAN                          @Y30OE78*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0872
*       IF OPCONTEX=ON×             /* IF CONTINUATIONS      @Y30OE78*/
*           CMCONTEX=ON THEN        /* ARE EXPECTED,         @Y30OE78*/
         TM    OPCONTEX,B'00000110'                                0872
         BZ    @RF00872                                            0872
*         DDCONT=ON;                /* SET CONTIN SWITCH     @Y30OE78*/
         OI    DDCONT,B'00000010'                                  0873
*       ELSE                        /* PROCESS THE STMT      @Y30OE78*/
*         DO;                       /*                       @Y30OE78*/
         B     @RC00872                                            0874
@RF00872 DS    0H                                                  0875
*           IF DLMF=ON THEN         /* IF DLM WAS FOUND      @Y30OE78*/
         TM    DLMF,B'01000000'                                    0875
         BNO   @RF00875                                            0875
*             IF DLME=ON THEN       /* IF VALUE ERROR,       @Y30OE78*/
         TM    DLME,B'00001000'                                    0876
         BNO   @RF00876                                            0876
*               DO;                 /* SET DEFAULT CONDITION @Y30OE78*/
*                 CURDLM='/*';      /* DEFAULT DLM VALUE     @Y30OE78*/
         MVC   CURDLM(2),@CC01493                                  0878
*                 JCLINDAT=OFF;     /* DEFAULT DD *          @Y30OE78*/
         NI    JCLINDAT,B'10111111'                                0879
*               END;                /*                       @Y30OE78*/
*             ELSE                  /* IF GOOD VALUE FOUND   @Y30OE78*/
*               CURDLM=ODLM;        /* MAKE IT THE CURRENT   @Y30OE78
*                                      DELIMITER             @Y30OE78*/
         B     @RC00876                                            0881
@RF00876 MVC   CURDLM(2),ODLM                                      0881
*           ELSE                    /* OTHERWISE SET DEFAULT @Y30OE78*/
*             CURDLM='/*';          /* DELIMITER             @Y30OE78*/
         B     @RC00875                                            0882
@RF00875 MVC   CURDLM(2),@CC01493                                  0882
*           IF DSIDF=OFF×           /* IF DSID NOT FOUND     @Y30OE78*/
*               DSIDNULL=ON THEN    /* OR WAS NULL,          @Y30OE78*/
@RC00875 TM    DSIDF,B'10000000'                                   0883
         BZ    @RT00883                                            0883
         TM    DSIDNULL,B'00010000'                                0883
         BNO   @RF00883                                            0883
@RT00883 DS    0H                                                  0884
*             ISDMODE=ON;           /* START INSTREAM DATA   @Y30OE78
*                                      MODE                  @Y30OE78*/
         OI    ISDMODE,B'10000000'                                 0884
*           ELSE                    /* IF DSID FOUND,        @Y30OE78
*                                      IT IS ADS REQUEST     @Y30OE78*/
*             IF STARTJOB=OFF THEN  /* IF NOT SKIPPING TO    @Z30OE78
*                                      START JOB,            @Z30OE78*/
         B     @RC00883                                            0885
@RF00883 TM    STARTJOB,B'10000000'                                0885
         BNZ   @RF00885                                            0885
*               IF ADS#=ZERO THEN   /* IF DIRECT MODE,       @Y30OE78*/
         ICM   @08,15,ADS#                                         0886
         BNZ   @RF00886                                            0886
*                 DO;               /* PROCESS AS ERROR      @Y30OE78*/
*                   IJSCERR=ON;     /* SET SCAN ERROR SW     @Y30OE78*/
         OI    IJSCERR,B'00000100'                                 0888
*                   RTNCODE=PARTERR;/* SET RETURN CODE       @Y30OE78*/
         MVI   RTNCODE,X'04'                                       0889
*                   MSGIDEX=M556;   /* SET MSG INDEX         @Y30OE78*/
         MVI   MSGIDEX,X'1F'                                       0890
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0891
*                   JJJK=JJJV;      /* SET JOBNAME KEY       @Y30OE78*/
         MVI   JJJK,X'0B'                                          0892
*                   JJJ=CURJOBNM;   /* GET JOBNAME           @Y30OE78*/
         MVC   JJJ(8),CURJOBNM                                     0893
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARMS   @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0894
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      @Y30OE78*/
         L     @15,@CV00048                                        0895
         BALR  @14,@15                                             0895
*                   JJJK=SKIPV;     /* RESET JOBNAME KEY     @Y30OE78*/
         MVI   JJJK,X'00'                                          0896
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* PROCESS AS ADS REQ    @Y30OE78*/
*                 DO;               /*                       @Y30OE78*/
         B     @RC00886                                            0898
@RF00886 DS    0H                                                  0899
*                   J=DSNPTRJ-FRSTADSN;/* CALCULATE TOTAL    @Y30OE78*/
         L     J,DSNPTRJ                                           0899
         SL    J,FRSTADSN                                          0899
*                   J=J/LENGTH(DSNENTRY);/* NO OF ADS        @Y30OE78*/
         LR    @04,J                                               0900
         SRDA  @04,32                                              0900
         D     @04,@CF01204                                        0900
         LR    J,@05                                               0900
*                   IF ADSNUM>999×  /* IF NUMBER OF ADS PER  @Y30OE78
*                                      JOB IS TOO BIG OR     @Y30OE78*/
*                       J^<ADS# THEN/* TOTAL NUMBER OF ADS   @Y30OE78
*                                      IS TOO BIG            @Y30OE78*/
         LH    @08,ADSNUM                                          0901
         CH    @08,@CH01494                                        0901
         BH    @RT00901                                            0901
         C     J,ADS#                                              0901
         BL    @RF00901                                            0901
@RT00901 DS    0H                                                  0902
*                     DO;           /*                       @Y30OE78*/
*                       JBJCLERR=ON;/* INDICATE JOB ERROR    @Y30OE78
*                                      OCCURRED              @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                0903
*                       ENDJNUM=CURJNUM;/* SET END JOB NUM-  @Y30OE78
*                                      BER TO DELIMIT JOBS   @Y30OE78
*                                      PASSED TO SYSUT2 IN   @Y30OE78
*                                      MERGE MODE            @Y30OE78*/
         MVC   ENDJNUM(4),CURJNUM                                  0904
*                       RTNCODE=PARTERR;/* SET RTN CODE      @Y30OE78*/
         MVI   RTNCODE,X'04'                                       0905
*                       IJSCERR=ON; /* SET SCAN ERROR SWITCH @Y30OE78*/
         OI    IJSCERR,B'00000100'                                 0906
*                       MSGIDEX=M544;/* SET MSG INDEX        @Y30OE78*/
         MVI   MSGIDEX,X'06'                                       0907
*                       MSGTYPE=MTYPWTO;/* TYPE IS WTO       @Y30OE78*/
         MVI   MSGTYPE,X'01'                                       0908
*                       DDDK=DDDV;  /* SET DEV ADDR KEY      @Y30OE78*/
         MVI   DDDK,X'08'                                          0909
*                       IF DSSDS(RDER)=ON THEN/* IF SUBSYS   @Y30OE78
*                                      DATA SET, INDICATE    @Y30OE78*/
         TM    DSSDS,B'01000000'                                   0910
         BNO   @RF00910                                            0910
*                         DDD='JES';/* JES DEVICE            @Y30OE78*/
         MVC   DDD(3),@CC01462                                     0911
*                       ELSE        /* OTHERWISE,            @Y30OE78*/
*                         DDD=DEVPTR(RDER)->UCBNAME;/* GET   @Y30OE78
*                                      DEVICE ADDRESS        @Y30OE78*/
         B     @RC00910                                            0912
@RF00910 SLR   @08,@08                                             0912
         ICM   @08,7,DEVPTR                                        0912
         MVC   DDD(3),UCBNAME(@08)                                 0912
*                       JJJK=JJJV;  /* SET JOBNAME KEY       @Y30OE78*/
@RC00910 MVI   JJJK,X'0B'                                          0913
*                       JJJ=CURJOBNM;/* SET JOBNAME          @Y30OE78*/
         MVC   JJJ(8),CURJOBNM                                     0914
*                       PARMPTR=ADDR(MSGINT);/* POINT TO     @Y30OE78
*                                      PARAMETER LIST        @Y30OE78*/
         LA    PARMPTR,MSGINT                                      0915
*                       CALL IOEDKMSG;/* WRITE MSG           @Y30OE78*/
         L     @15,@CV00048                                        0916
         BALR  @14,@15                                             0916
*                       DDDK=SKIPV; /* RESET DEV ADDR KEY    @Y30OE78*/
         MVI   DDDK,X'00'                                          0917
*                       JJJK=SKIPV; /* AND JOBNAME KEY       @Y30OE78*/
         MVI   JJJK,X'00'                                          0918
*                     END;          /*                       @Y30OE78*/
*                   ELSE            /* OTHERWISE BUILD CNTRL @Y30OE78*/
*                     DO;           /* INFO FOR ADS REQUEST  @Y30OE78
*                                      AND DSNTAB ENTRY      @Y30OE78*/
         B     @RC00901                                            0920
@RF00901 DS    0H                                                  0921
*                       CNTRLSW=CNTRLSWI;/* INIT CNTRL SW    @Y30OE78*/
         MVI   CNTRLSW,X'C0'                                       0921
*                       CDD=ON;     /* SET DD INDICATOR      @Y30OE78*/
*                       LAST=ON;    /* SET LAST RECORD IN    @Y30OE78
*                                      STMT INDICATOR        @Y30OE78*/
         OI    CDD,B'00010001'                                     0923
*                       CTRLJOB#=CURJNUM;/* PUT CURRENT JOB  @Y30OE78
*                                      NUMBER IN CNTRL INFO  @Y30OE78*/
         MVC   CTRLJOB#(4),CURJNUM                                 0924
*                       CVD(ADSNUM,WORKA);/* GET ADS NUM     @Y30OE78*/
         LH    @08,ADSNUM                                          0925
         CVD   @08,WORKA                                           0925
*                       UNPK(CTRLADS#,WORKA(7:8));/* IN      @Y30OE78*/
         UNPK  CTRLADS#(3),WORKA+6(2)                              0926
*                       MVZ(CTRLADS#(3),ZONE);/* EBCDIC      @Y30OE78*/
         MVZ   CTRLADS#+2(1),@CB00080                              0927
*                       RDWLNA=LENGTH(RDWA)+/* INDICATE      @Y30OE78*/
*                           LENGTH(RECJCL)+/* CNTRL INFO IS  @Y30OE78*/
*                           LENGTH(RECNTRLA);/* IS TO BE     @Y30OE78
*                                      WRITTEN WITH RECORD   @Y30OE78*/
         MVC   RDWLNA(2),@CH01603                                  0928
*                       MEMNAME=RECNTRLA;/* PUT JOBNUM &     @Y30OE78
*                                      ADSNUM IN MEMBER NAME @Y30OE78
*                                      OF DSNTAB ENTRY       @Y30OE78*/
         L     @08,DSNPTRJ                                         0929
         MVC   MEMNAME(8,@08),RECNTRLA                             0929
*                       Z='Z';      /* MAKE 1ST CHAR OF      @Y30OE78
*                                      MEMNAME A Z           @Y30OE78*/
         MVI   Z(@08),C'Z'                                         0930
*                       TTR0=ZERO;  /* INIT TTR0             @Y30OE78*/
         SLR   @03,@03                                             0931
         ST    @03,TTR0(,@08)                                      0931
*                       JOBNM=CURJOBNM;/* PUT JOB NAME       @Y30OE78
*                                      IN DSNTAB ENTRY       @Y30OE78*/
         MVC   JOBNM(8,@08),CURJOBNM                               0932
*                       JVALS=OVALUES;/* MOVE DSID,          @Y30OE78
*                                      VOLSER TO ENTRY       @Y30OE78*/
         MVC   JVALS(14,@08),OVALUES                               0933
*                       DLM=CURDLM; /* SAVE DELIMETER        @Y30OE78
*                                      VALUE FOR DATA SET    @Y30OE78*/
         MVC   DLM(2,@08),CURDLM                                   0934
*                       DSNFLG=ZERO;/* INITIALIZE FLAG       @Y30OE78*/
         MVI   DSNFLG(@08),X'00'                                   0935
*                       IF DSVERIFY=ON THEN/* IF VERIFY WAS  @Y30OE78*/
         TM    DSVERIFY,B'01000000'                                0936
         BNO   @RF00936                                            0936
*                         JCLVERF=ON;/* SPECIFIED, SET       @Y30OE78*/
         OI    JCLVERF(@08),B'01000000'                            0937
*                       IF VOLSERF=ON&/* IF VOLSER WAS       @Y30OE78*/
*                           SERNULL=OFF THEN/* FOUND AND     @Y30OE78*/
@RF00936 TM    VOLSERF,B'00100000'                                 0938
         BNO   @RF00938                                            0938
         TM    SERNULL,B'00001000'                                 0938
         BNZ   @RF00938                                            0938
*                         VSERPRES=ON;/* NOT NULL, INDICATE  @Y30OE78*/
         L     @08,DSNPTRJ                                         0939
         OI    VSERPRES(@08),B'00100000'                           0939
*                       IF JCLINDAT=ON THEN/* IF A DD DATA   @Y30OE78*/
@RF00938 TM    JCLINDAT,B'01000000'                                0940
         BNO   @RF00940                                            0940
*                         JCLALLOW=ON;/* IND IN DSNTAB       @Y30OE78*/
         L     @08,DSNPTRJ                                         0941
         OI    JCLALLOW(@08),B'10000000'                           0941
*                       IF VOLSERE=ON THEN/* IF BAD VOLSER,  @Y30OE78*/
@RF00940 TM    VOLSERE,B'00010000'                                 0942
         BNO   @RF00942                                            0942
*                         DO;       /* INDICATE ERROR        @Y30OE78*/
*                           JCLMSG=ON;/*                     @Y30OE78*/
         L     @08,DSNPTRJ                                         0944
         OI    JCLMSG(@08),B'00001000'                             0944
*                           ERRCODE=CDSERE;/*                @Y30OE78*/
         MVC   ERRCODE(3,@08),@CC00351                             0945
*                         END;      /*                       @Y30OE78*/
*                       DSNPTRJ=DSNPTRJ+LENGTH(DSNENTRY);/*  @Y30OE78
*                                      POINT TO NEXT ENTRY   @Y30OE78*/
@RF00942 LA    @08,40                                              0947
         AL    @08,DSNPTRJ                                         0947
         ST    @08,DSNPTRJ                                         0947
*                       ADSNUM=ADSNUM+1;/* BUMP ADS PER JOB  @Y30OE78*/
         LA    @08,1                                               0948
         AH    @08,ADSNUM                                          0948
         STH   @08,ADSNUM                                          0948
*                     END;          /*                       @Y30OE78*/
*                 END;              /*                       @Y30OE78*/
*         END;                      /*                       @Y30OE78*/
*     END;                          /*                       @Y30OE78*/
*   END DDPROC;                     /*                       @Y30OE78*/
@EL00005 DS    0H                                                  0953
@EF00005 DS    0H                                                  0953
@ER00005 L     @14,@SA00005                                        0953
         BR    @14                                                 0953
*                                                                  0954
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    PARMSCAN                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    SCAN PAST THE CURRENT PARAMETER AND DETERMINE IF      @Y30OE78*/
*/*    IT IS CONTINUED                                       @Y30OE78*/
*/*    DETERMINE IF THERE ARE MORE PARAMETERS TO BE SCANNED  @Y30OE78*/
*/*    SAVE POINTER TO NEXT OPERAND                          @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    OPNDPTR POINTS TO CURRENT PARAMETER IN THE JCL        @Y30OE78*/
*/*    RECORD IN THE RECORD WORK AREA                        @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    NXTOPND POINTS TO NEXT PARAMETER OR BLANK AFTER       @Y30OE78*/
*/*      CURRENT PARAMETER                                   @Y30OE78*/
*/*    STATUS SWITCHES(ATOPND) INDICATES IF ANY PARAMTERS    @Y30OE78*/
*/*      FOLLOW THE CURRENT PARAMETER                        @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  0954
*PARMSCAN:                          /* SCAN OPERANDS OF DD   @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG),NOSAVEAREA);/*                 @Y30OE78*/
PARMSCAN ST    @14,12(,@13)                                        0954
*   PSCEND=OFF;                     /* SET LOOP CONTROL      @Y30OE78*/
*   PCONT=OFF;                      /* INDICATE NO CONTINUED @Y30OE78
*                                      PARAMETERS            @Y30OE78*/
         NI    PSCEND,B'11100111'                                  0956
*   QUOTE=OFF;                      /* INIT QUOTE INDICATOR  @Y30OE78*/
         NI    QUOTE,B'11111110'                                   0957
*   DO I=OPNDPTR TO CONTCOL WHILE   /* PROCESS ONE PARAMETER @Y30OE78*/
*         PSCEND=OFF;               /* ON A JCL RECORD       @Y30OE78*/
         LR    I,OPNDPTR                                           0958
         B     @DE00958                                            0958
@DL00958 TM    PSCEND,B'00010000'                                  0958
         BNZ   @DC00958                                            0958
*     IF RECJCL(I)=BLANK×           /* IF HIT BLANK DELIMITR @Y30OE78*/
*         I>LASTCOL THEN            /* OR DONE WITH RECORD,  @Y30OE78*/
         LA    @08,RECJCL-1(I)                                     0959
         CLI   0(@08),C' '                                         0959
         BE    @RT00959                                            0959
         CH    I,@CH00200                                          0959
         BNH   @RF00959                                            0959
@RT00959 DS    0H                                                  0960
*       DO;                         /* PROCESS AS DELIMITED  @Y30OE78*/
*         IF QUOTE=ON THEN          /* IF IN QUOTE STRING,   @Y30OE78*/
         TM    QUOTE,B'00000001'                                   0961
         BNO   @RF00961                                            0961
*           IF I>LASTCOL THEN       /* AND PAST END OF REC,  @Y30OE78*/
         CH    I,@CH00200                                          0962
         BNH   @RF00962                                            0962
*             DO;                   /*                       @Y30OE78*/
*               JBJCLERR=ON;        /* JOB JCL ERROR         @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                0964
*               ATOPND=OFF;         /* INDICATE END OF OPND  @Y30OE78*/
         NI    ATOPND,B'11111110'                                  0965
*             END;                  /*                       @Y30OE78*/
*           ELSE                                                   0967
*             ;                     /*                       @Y30OE78*/
@RF00962 DS    0H                                                  0968
*         ELSE                      /* NOT IN QUOTE STRING   @Y30OE78*/
*           DO;                     /*                       @Y30OE78*/
         B     @RC00961                                            0968
@RF00961 DS    0H                                                  0969
*             PSCEND=ON;            /* DONE SCANNING         @Y30OE78*/
         OI    PSCEND,B'00010000'                                  0969
*             ATOPND=OFF;           /* NO MORE OPND          @Y30OE78*/
         NI    ATOPND,B'11111110'                                  0970
*             IF PRENCNT^=ZERO THEN /* IF WITHIN A PARAMETER @Y30OE78*/
         ICM   @08,3,PRENCNT                                       0971
         BZ    @RF00971                                            0971
*               IF RECJCL(I-1)=CCOMMA THEN/* AND LAST CHAR   @Y30OE78
*                                      WAS COMMA,            @Y30OE78*/
         LA    @08,RECJCL-2(I)                                     0972
         CLI   0(@08),C','                                         0972
         BNE   @RF00972                                            0972
*                 PCONT=ON;         /* INDICATE PARM CONTIN  @Y30OE78*/
         OI    PCONT,B'00001000'                                   0973
*               ELSE                /* NO COMMA, ERROR       @Y30OE78*/
*                 JBJCLERR=ON;      /* SET ERROR SWITCH      @Y30OE78*/
         B     @RC00972                                            0974
@RF00972 OI    JBJCLERR,B'01000000'                                0974
*           END;                    /*                       @Y30OE78*/
*       END;                        /*                       @Y30OE78*/
*     ELSE                          /* CHECK OTHER CHAR      @Y30OE78*/
*       IF RECJCL(I)=CCOMMA THEN    /* IF COMMA, PROCESS     @Y30OE78*/
         B     @RC00959                                            0977
@RF00959 LA    @08,RECJCL-1(I)                                     0977
         CLI   0(@08),C','                                         0977
         BNE   @RF00977                                            0977
*         IF QUOTE=OFF&             /* IGNORE COMMA IN QUOTE @Y30OE78*/
*             PRENCNT=ZERO THEN     /* STRING OR MIDDLE OF   @Y30OE78
*                                      PARAMETER             @Y30OE78*/
         TM    QUOTE,B'00000001'                                   0978
         BNZ   @RF00978                                            0978
         ICM   @08,3,PRENCNT                                       0978
         BNZ   @RF00978                                            0978
*           PSCEND=ON;              /* OTHERWISE IT DELIMIT  @Y30OE78*/
         OI    PSCEND,B'00010000'                                  0979
*         ELSE                                                     0980
*           ;                       /*                       @Y30OE78*/
@RF00978 DS    0H                                                  0981
*       ELSE                        /* NOT COMMA CHECK OTHER @Y30OE78*/
*         IF RECJCL(I)=CLPREN&      /* IF LEFT PAREN OUTSIDE @Y30OE78*/
*             QUOTE=OFF THEN        /* OF QUOTES,            @Y30OE78*/
         B     @RC00977                                            0981
@RF00977 LA    @08,RECJCL-1(I)                                     0981
         CLI   0(@08),C'('                                         0981
         BNE   @RF00981                                            0981
         TM    QUOTE,B'00000001'                                   0981
         BNZ   @RF00981                                            0981
*           PRENCNT=PRENCNT+1;      /* COUNT IT              @Y30OE78*/
         LA    @08,1                                               0982
         AH    @08,PRENCNT                                         0982
         STH   @08,PRENCNT                                         0982
*         ELSE                      /* CHECK OTHER CHARS     @Y30OE78*/
*           IF RECJCL(I)=CRPREN&    /* IF RIGHT PAREN OUTSID @Y30OE78*/
*               QUOTE=OFF THEN      /* OF QUOTES,            @Y30OE78*/
         B     @RC00981                                            0983
@RF00981 LA    @08,RECJCL-1(I)                                     0983
         CLI   0(@08),C')'                                         0983
         BNE   @RF00983                                            0983
         TM    QUOTE,B'00000001'                                   0983
         BNZ   @RF00983                                            0983
*             IF PRENCNT>ZERO THEN  /* AND RIGHT PAREN IS    @Y30OE78
*                                      EXPECTED,             @Y30OE78*/
         LH    @08,PRENCNT                                         0984
         LTR   @08,@08                                             0984
         BNP   @RF00984                                            0984
*               PRENCNT=PRENCNT-1;  /* DECREMENT PAREN COUNT @Y30OE78*/
         BCTR  @08,0                                               0985
         STH   @08,PRENCNT                                         0985
*             ELSE                  /* IF NONE EXPECTED      @Y30OE78*/
*               JBJCLERR=ON;        /* INDICATE ERROR        @Y30OE78*/
         B     @RC00984                                            0986
@RF00984 OI    JBJCLERR,B'01000000'                                0986
*           ELSE                    /* CHECK FOR OTHER CHAR  @Y30OE78*/
*             IF RECJCL(I)=CQUOTE THEN/* IF HIT QUOTE,       @Y30OE78*/
         B     @RC00983                                            0987
@RF00983 LA    @08,RECJCL-1(I)                                     0987
         CLI   0(@08),C''''                                        0987
         BNE   @RF00987                                            0987
*               IF QUOTE=ON THEN    /* FLIP QUOTE SWITCH     @Y30OE78*/
         TM    QUOTE,B'00000001'                                   0988
         BNO   @RF00988                                            0988
*                 QUOTE=OFF;        /*                       @Y30OE78*/
         NI    QUOTE,B'11111110'                                   0989
*               ELSE                /*                       @Y30OE78*/
*                 QUOTE=ON;         /*                       @Y30OE78*/
         B     @RC00988                                            0990
@RF00988 OI    QUOTE,B'00000001'                                   0990
*   END;                            /*                       @Y30OE78*/
@RC00988 DS    0H                                                  0991
@RF00987 DS    0H                                                  0991
@RC00983 DS    0H                                                  0991
@RC00981 DS    0H                                                  0991
@RC00977 DS    0H                                                  0991
@RC00959 AH    I,@CH00061                                          0991
@DE00958 CH    I,@CH00202                                          0991
         BNH   @DL00958                                            0991
@DC00958 DS    0H                                                  0992
*   NXTOPND=I;                      /* SAVE POINTER TO NEXT  @Y30OE78*/
         LR    NXTOPND,I                                           0992
*   END PARMSCAN;                   /*                       @Y30OE78*/
@EL00006 DS    0H                                                  0993
@EF00006 DS    0H                                                  0993
@ER00006 L     @14,12(,@13)                                        0993
         BR    @14                                                 0993
*                                                                  0994
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    DSIDSCAN                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    DETECT DUPLICATE DSID KEYWORD SPECIFICATIONS          @Y30OE78*/
*/*    VALIDITY CHECK THE VALUE SPECIFIED WITH THE           @Y30OE78*/
*/*      DSID KEYWORD FOUND IN SYSIN SCAN SEGMENT OR THE     @Y30OE78*/
*/*      CONTINUATION OF SUCH A VALUE                        @Y30OE78*/
*/*    SAVE VALID DSID VALUE IN SYSIN SCAN WORK AREA         @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    OPNDPTR POINTS TO BEGINNING OF VALUE SPECIFIED ON     @Y30OE78*/
*/*      DSID KEYWORD                                        @Y30OE78*/
*/*    STATUS SWITCH(DSIDCONT) INDICATES IF A VALUE          @Y30OE78*/
*/*      CONTINUATION IS TO BE PROCESSED                     @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    STATUS SWITCH(DSIDCONT) INDICATES IF VALUE IS         @Y30OE78*/
*/*      CONTINUED                                           @Y30OE78*/
*/*    SYSIN SCAN WORK AREA(SYSCWK)                          @Y30OE78*/
*/*      DSVERIFY INDICATES IF VERIFY WAS REQUESTED          @Y30OE78*/
*/*      DSIDE INDICATES DSID VALUE ERROR                    @Y30OE78*/
*/*      DSIDNULL INDICATES DSID VALUE WAS NULL              @Y30OE78*/
*/*      ODSID CONTAINS DSID VALUE IF VALID VALUE WAS FOUND  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  0994
*DSIDSCAN:                          /* ROUTINE TO SCAN DSID  @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG),NOSAVEAREA);/*                 @Y30OE78*/
DSIDSCAN ST    @14,12(,@13)                                        0994
*   IF DSIDCONT=ON THEN             /* IF PROCESSING CONTIN, @Y30OE78*/
         TM    DSIDCONT,B'00000010'                                0995
         BNO   @RF00995                                            0995
*     DO;                           /*                       @Y30OE78*/
*       DSIDCONT=OFF;               /* RESET CONTIN INDICATR @Y30OE78*/
         NI    DSIDCONT,B'11111101'                                0997
*       IF RECJCL(OPNDPTR:OPNDPTR+LENGTH(DSIDEND)-1)=/* IF   @Y30OE78*/
*           DSIDEND THEN            /* CONTIN IS VALID,      @Y30OE78*/
         LA    @04,RECJCL-1(OPNDPTR)                               0998
         CLC   0(2,@04),@CC00319                                   0998
         BNE   @RF00998                                            0998
*         DSVERIFY=ON;              /* INDICATE VERIFY REQD  @Y30OE78*/
         OI    DSVERIFY,B'01000000'                                0999
*       ELSE                        /* INVALID CONTINUATION, @Y30OE78*/
*         DSIDE=ON;                 /* INDICATE ERROR        @Y30OE78*/
         B     @RC00998                                            1000
@RF00998 OI    DSIDE,B'00100000'                                   1000
*     END;                          /*                       @Y30OE78*/
*   ELSE                            /* NOT A DSID CONTIN,    @Y30OE78*/
*     IF DSIDF=ON THEN              /* IF DSID ALREADY FOUND @Y30OE78*/
         B     @RC00995                                            1002
@RF00995 TM    DSIDF,B'10000000'                                   1002
         BNO   @RF01002                                            1002
*       DSIDE=ON;                   /* INDICATE ERROR        @Y30OE78*/
         OI    DSIDE,B'00100000'                                   1003
*     ELSE                          /* IF NOT FOUND BEFORE,  @Y30OE78*/
*       DO;                         /* PROCESS IT            @Y30OE78*/
         B     @RC01002                                            1004
@RF01002 DS    0H                                                  1005
*         DSIDF=ON;                 /* INDICATE DSID FOUND   @Y30OE78*/
         OI    DSIDF,B'10000000'                                   1005
*         L=OPNDPTR;                /* GET FIRST CHARACTER   @Y30OE78*/
         LR    L,OPNDPTR                                           1006
*         IF RECJCL(L)=BLANK×       /* IF NULL DSID WAS      @Y30OE78*/
*             RECJCL(L)=CCOMMA THEN /* SPECIFIED,            @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1007
         CLI   0(@15),C' '                                         1007
         BE    @RT01007                                            1007
         LA    @15,RECJCL-1(L)                                     1007
         CLI   0(@15),C','                                         1007
         BNE   @RF01007                                            1007
@RT01007 DS    0H                                                  1008
*           DSIDNULL=ON;            /* SET INDICATOR         @Y30OE78*/
         OI    DSIDNULL,B'00010000'                                1008
*         ELSE                      /* A DSID WAS FOUND,     @Y30OE78*/
*           DO;                     /* SCAN IT               @Y30OE78*/
         B     @RC01007                                            1009
@RF01007 DS    0H                                                  1010
*             IF RECJCL(L)=CLPREN THEN/* IF 1ST CHAR IS (,   @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1010
         CLI   0(@15),C'('                                         1010
         BNE   @RF01010                                            1010
*               DO;                 /*                       @Y30OE78*/
*                 PRENHIT=ON;       /* SET INDICATOR &       @Y30OE78*/
         OI    PRENHIT,B'00000100'                                 1012
*                 L=L+1;            /* BUMP PAST IT          @Y30OE78*/
         AH    L,@CH00061                                          1013
*               END;                /*                       @Y30OE78*/
*             ELSE                  /* IF NOT (,             @Y30OE78*/
*               PRENHIT=OFF;        /* SET INDICATOR         @Y30OE78*/
         B     @RC01010                                            1015
@RF01010 NI    PRENHIT,B'11111011'                                 1015
*             HYPHTAB=TZERO;        /* MAKE HYPHEN VALID     @Y30OE78*/
@RC01010 MVI   HYPHTAB,X'00'                                       1016
*             LBRCTAB=TZERO;        /* MAKE LEFT BRACE VALID @Y30OE78*/
         MVI   LBRCTAB,X'00'                                       1017
*             CHARHIT=ZERO;         /* INITIALIZE TRT PASSBK @Y30OE78*/
         SLR   CHARHIT,CHARHIT                                     1018
*             TRT(RECJCL(L:L+LENGTH(ODSID)),TRTTAB);/* SCAN 9      1019
*                                                            @Y30OE78
*                                      CHARS OF DSID VALUE   @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1019
         TRT   0(9,@15),TRTTAB                                     1019
*             IF CHARHIT=ZERO×      /* IF NO DELIMITER HIT   @Y30OE78*/
*                 HITADDR=ADDR(RECJCL(L))×/* OR NO GOOD CHAR @Y30OE78
*                                      FOUND OR              @Y30OE78*/
*                 RECJCL(L)=CHYPHEN×/* 1ST CHAR IS HYPHEN OR @Y30OE78*/
*                 RECJCL(L)=CLBRACE×/* LEFT BRACE OR         @Y30OE78*/
*                 RECJCL(L)>=CZERO THEN/* NUMERIC,           @Y30OE78*/
         CH    CHARHIT,@CH00053                                    1020
         BE    @RT01020                                            1020
         LA    @00,RECJCL-1(L)                                     1020
         CR    HITADDR,@00                                         1020
         BE    @RT01020                                            1020
         LA    @15,RECJCL-1(L)                                     1020
         CLI   0(@15),C'-'                                         1020
         BE    @RT01020                                            1020
         LA    @15,RECJCL-1(L)                                     1020
         CLI   0(@15),X'C0'                                        1020
         BE    @RT01020                                            1020
         LA    @15,RECJCL-1(L)                                     1020
         CLI   0(@15),C'0'                                         1020
         BL    @RF01020                                            1020
@RT01020 DS    0H                                                  1021
*               DSIDE=ON;           /* INDICATE ERROR        @Y30OE78*/
         OI    DSIDE,B'00100000'                                   1021
*             ELSE                  /* IF GOOD DSID VALUE,   @Y30OE78*/
*               DO;                 /*                       @Y30OE78*/
         B     @RC01020                                            1022
@RF01020 DS    0H                                                  1023
*                 DO I=L TO L+LENGTH(ODSID) WHILE/* BUMP I TO      1023
*                                                            @Y30OE78*/
*                       ADDR(RECJCL(I+1))<HITADDR;/* LAST VALID    1023
*                                                            @Y30OE78*/
         LR    I,L                                                 1023
         B     @DE01023                                            1023
@DL01023 LA    @05,RECJCL(I)                                       1023
         CR    @05,HITADDR                                         1023
         BNL   @DC01023                                            1023
*                 END;              /* CHAR OF DSID VALUE    @Y30OE78*/
         AH    I,@CH00061                                          1024
@DE01023 LA    @05,8                                               1024
         ALR   @05,L                                               1024
         CR    I,@05                                               1024
         BNH   @DL01023                                            1024
@DC01023 DS    0H                                                  1025
*                 ODSID=RECJCL(L:I);/* SAVE DSID IN WORKAREA @Y30OE78*/
         MVI   ODSID+1,C' '                                        1025
         MVC   ODSID+2(6),ODSID+1                                  1025
         LR    @05,I                                               1025
         SLR   @05,L                                               1025
         LA    @15,RECJCL-1(L)                                     1025
         EX    @05,@SM01670                                        1025
*                 IF CHARHIT=SPACE THEN/* IF DELIMIT BY BLANK      1026
*                                                            @Y30OE78*/
         CH    CHARHIT,@CH00375                                    1026
         BNE   @RF01026                                            1026
*                   IF PRENHIT=ON THEN/* INSIDE PARENS,      @Y30OE78*/
         TM    PRENHIT,B'00000100'                                 1027
         BNO   @RF01027                                            1027
*                     DSIDE=ON;     /* INDICATE ERROR        @Y30OE78*/
         OI    DSIDE,B'00100000'                                   1028
*                   ELSE                                           1029
*                     ;             /*                       @Y30OE78*/
@RF01027 DS    0H                                                  1030
*                 ELSE              /* NOT DELIMIT BY BLANK  @Y30OE78*/
*                   IF CHARHIT=CRPREN THEN/* DELIMIT BY RIGHT      1030
*                                                            @Y30OE78*/
         B     @RC01026                                            1030
@RF01026 CH    CHARHIT,@CH00295                                    1030
         BNE   @RF01030                                            1030
*                     IF PRENHIT=OFF THEN/* PAREN AFTER NO LEFT    1031
*                                                            @Y30OE78*/
         TM    PRENHIT,B'00000100'                                 1031
         BNZ   @RF01031                                            1031
*                       DSIDE=ON;   /* PAREN, ERROR          @Y30OE78*/
         OI    DSIDE,B'00100000'                                   1032
*                     ELSE                                         1033
*                       ;           /* GOOD AFTER LEFT PAREN @Y30OE78*/
@RF01031 DS    0H                                                  1034
*                   ELSE            /* NOT DELIMIT BY RPAREN @Y30OE78*/
*                     IF CHARHIT^=CCOMMA THEN/* IF DELIMITER IS    1034
*                                                            @Y30OE78*/
         B     @RC01030                                            1034
@RF01030 CH    CHARHIT,@CH00287                                    1034
         BE    @RF01034                                            1034
*                       DSIDE=ON;   /* NOT COMMA, ERROR      @Y30OE78*/
         OI    DSIDE,B'00100000'                                   1035
*                     ELSE          /* IT IS COMMA           @Y30OE78*/
*                       IF PRENHIT=ON THEN/* AFTER LEFT PAREN,     1036
*                                                            @Y30OE78*/
         B     @RC01034                                            1036
@RF01034 TM    PRENHIT,B'00000100'                                 1036
         BNO   @RF01036                                            1036
*                         DO;       /* CHECK FOR CONTIN      @Y30OE78*/
*                           IF PCONT=ON THEN/* IF PARM CONTIN,     1038
*                                                            @Y30OE78*/
         TM    PCONT,B'00001000'                                   1038
         BNO   @RF01038                                            1038
*                             DO;   /* GOOD, SET INDICATORS  @Y30OE78*/
*                               PCONT=OFF;/*                 @Y30OE78*/
         NI    PCONT,B'11110111'                                   1040
*                               DSIDCONT=ON;/*               @Y30OE78*/
         OI    DSIDCONT,B'00000010'                                1041
*                             END;  /*                       @Y30OE78*/
*                           ELSE    /* IF NOT CONTINUED,     @Y30OE78*/
*                             IF RECJCL(I+2:I+1+LENGTH(DSIDEND))=/*
*                                                            @Y30OE78*/
*                                 DSIDEND THEN/* IF CHARS AFTER ,  1043
*                                                            @Y30OE78
*                                      ARE VERIFY PARAMETER, @Y30OE78*/
         B     @RC01038                                            1043
@RF01038 LA    @05,RECJCL+1(I)                                     1043
         CLC   0(2,@05),@CC00319                                   1043
         BNE   @RF01043                                            1043
*                               DSVERIFY=ON;/* SET INDICATOR @Y30OE78*/
         OI    DSVERIFY,B'01000000'                                1044
*                             ELSE  /* OTHERWISE             @Y30OE78*/
*                               DSIDE=ON;/* SET ERROR INDICATOR    1045
*                                                            @Y30OE78*/
         B     @RC01043                                            1045
@RF01043 OI    DSIDE,B'00100000'                                   1045
*                         END;      /*                       @Y30OE78*/
@RC01043 DS    0H                                                  1046
@RC01038 DS    0H                                                  1047
*               END;                /*                       @Y30OE78*/
@RF01036 DS    0H                                                  1047
@RC01034 DS    0H                                                  1047
@RC01030 DS    0H                                                  1047
@RC01026 DS    0H                                                  1048
*           END;                    /*                       @Y30OE78*/
@RC01020 DS    0H                                                  1049
*       END;                        /*                       @Y30OE78*/
@RC01007 DS    0H                                                  1050
*   IF DSIDE=ON THEN                /* IF ERROR IN DSID,     @Y30OE78*/
@RC01002 DS    0H                                                  1050
@RC00995 TM    DSIDE,B'00100000'                                   1050
         BNO   @RF01050                                            1050
*     JBJCLERR=ON;                  /* INDICATE JOB JCL ERR  @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                1051
*   END DSIDSCAN;                   /*                       @Y30OE78*/
@EL00007 DS    0H                                                  1052
@EF00007 DS    0H                                                  1052
@ER00007 L     @14,12(,@13)                                        1052
         BR    @14                                                 1052
*                                                                  1053
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    DLMSCAN                                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    DETECT DUPLICATE DLM  KEYWORD SPECIFICATIONS          @Y30OE78*/
*/*    VALIDITY CHECK THE VALUE SPECIFIED WITH THE           @Y30OE78*/
*/*      DLM  KEYWORD FOUND IN SYSIN SCAN SEGMENT            @Y30OE78*/
*/*    SAVE VALID DLM  VALUE IN SYSIN SCAN WORK AREA         @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    OPNDPTR POINTS TO BEGINNING OF VALUE SPECIFIED ON     @Y30OE78*/
*/*      DLM  KEYWORD                                        @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    SYSIN SCAN WORK AREA(SYSCWK)                          @Y30OE78*/
*/*      DSIDE INDICATES DSID VALUE ERROR                    @Y30OE78*/
*/*      ODLM  CONTAINS DLM  VALUE IF VALID VALUE WAS FOUND  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  1053
*DLMSCAN:                           /* ROUTINE TO SCAN DLM   @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG),NOSAVEAREA);/*                 @Y30OE78*/
DLMSCAN  ST    @14,12(,@13)                                        1053
*   IF DLMF=ON THEN                 /* IF DLM= ALREADY FOUND @Y30OE78*/
         TM    DLMF,B'01000000'                                    1054
         BNO   @RF01054                                            1054
*     DLME=ON;                      /* MARK ERROR CONDITION  @Y30OE78*/
         OI    DLME,B'00001000'                                    1055
*   ELSE                            /* IF NOT FOUND BEFORE,  @Y30OE78*/
*     DO;                           /* PROCESS IT            @Y30OE78*/
         B     @RC01054                                            1056
@RF01054 DS    0H                                                  1057
*       DLMF=ON;                    /* DLM FOUND             @Y30OE78*/
         OI    DLMF,B'01000000'                                    1057
*       L=OPNDPTR;                  /* GET 1ST CHARACTER     @Y30OE78*/
         LR    L,OPNDPTR                                           1058
*       IF RECJCL(L)=CQUOTE THEN    /* IF DLM IN QUOTES,     @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1059
         CLI   0(@15),C''''                                        1059
         BNE   @RF01059                                            1059
*         DO;                       /*                       @Y30OE78*/
*           L=L+1;                  /* BUMP PAST OPEN QUOTE  @Y30OE78*/
         LA    @15,1                                               1061
         ALR   L,@15                                               1061
*           DO I=1 TO LENGTH(ODLM) WHILE/* PROCESS DLM VALUE @Y30OE78*/
*                 DLME=OFF;         /* CONTAINING ANY CHAR & @Y30OE78
*                                      HANDLING DOUBLE QUOTE @Y30OE78
*                                      AND AMPERSAND         @Y30OE78*/
         LR    I,@15                                               1062
@DL01062 TM    DLME,B'00001000'                                    1062
         BNZ   @DC01062                                            1062
*             IF RECJCL(L)=CQUOTE THEN/* IF QUOTE HIT,       @Y30OE78*/
         LA    @05,RECJCL-1(L)                                     1063
         CLI   0(@05),C''''                                        1063
         BNE   @RF01063                                            1063
*               IF RECJCL(L+1)=CQUOTE THEN/* FOLLOWED BY 2ND @Y30OE78*/
         LA    @05,RECJCL(L)                                       1064
         CLI   0(@05),C''''                                        1064
         BNE   @RF01064                                            1064
*                 DO;               /* QUOTE                 @Y30OE78*/
*                   L=L+1;          /* BUMP PAST 1ST QUOTE   @Y30OE78*/
         AH    L,@CH00061                                          1066
*                   ODLM(I)=RECJCL(L);/* MOVE 2ND TO SAVEAREA      1067
*                                                            @Y30OE78*/
         LA    @05,ODLM-1(I)                                       1067
         LA    @15,RECJCL-1(L)                                     1067
         MVC   0(1,@05),0(@15)                                     1067
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF NOT FOLLOWED BY    @Y30OE78*/
*                 DLME=ON;          /* 2ND QUOTE IT IS AN    @Y30OE78
*                                      ERRONEOUS DELIMITER   @Y30OE78*/
         B     @RC01064                                            1069
@RF01064 OI    DLME,B'00001000'                                    1069
*             ELSE                  /* NOT QUOTE, CHECK &    @Y30OE78*/
*               IF RECJCL(L)=CAMPRSND THEN/* IF AMPERSAND HIT,     1070
*                                                            @Y30OE78*/
         B     @RC01063                                            1070
@RF01063 LA    @05,RECJCL-1(L)                                     1070
         CLI   0(@05),C'&&'                                        1070
         BNE   @RF01070                                            1070
*                 DO;               /* SEE IF IT IS          @Y30OE78*/
*                   IF RECJCL(L+1)=CAMPRSND THEN/* FOLLOWED BY     1072
*                                                            @Y30OE78
*                                      2ND AMPERSAND,        @Y30OE78*/
         LA    @05,RECJCL(L)                                       1072
         CLI   0(@05),C'&&'                                        1072
         BNE   @RF01072                                            1072
*                     L=L+1;        /* BUMP PAST 1ST AMPRSND @Y30OE78*/
         AH    L,@CH00061                                          1073
*                   ODLM(I)=RECJCL(L);/* MOVE & TO SAVEAREA  @Y30OE78*/
@RF01072 LA    @05,ODLM-1(I)                                       1074
         LA    @15,RECJCL-1(L)                                     1074
         MVC   0(1,@05),0(@15)                                     1074
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF NOT QUOTE OR AMP,  @Y30OE78*/
*                 ODLM(I)=RECJCL(L);/* MOVE CHAR TO SAVEAREA @Y30OE78*/
         B     @RC01070                                            1076
@RF01070 LA    @05,ODLM-1(I)                                       1076
         LA    @15,RECJCL-1(L)                                     1076
         MVC   0(1,@05),0(@15)                                     1076
*             L=L+1;                /* GET NEXT INPUT CHAR   @Y30OE78*/
@RC01070 DS    0H                                                  1077
@RC01063 AH    L,@CH00061                                          1077
*           END;                    /*                       @Y30OE78*/
         AH    I,@CH00061                                          1078
         CH    I,@CH00135                                          1078
         BNH   @DL01062                                            1078
@DC01062 DS    0H                                                  1079
*           IF DLME=OFF THEN        /* IF NO ERROR YET       @Y30OE78*/
         TM    DLME,B'00001000'                                    1079
         BNZ   @RF01079                                            1079
*             IF^(RECJCL(L)=CQUOTE& /* CHECK THAT VALUE IS   @Y30OE78*/
*                 (RECJCL(L+1)=BLANK×/* ENDED CORRECTLY      @Y30OE78*/
*                 RECJCL(L+1)=CCOMMA)) THEN/*                @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1080
         CLI   0(@15),C''''                                        1080
         BNE   @RT01080                                            1080
         LA    @15,RECJCL(L)                                       1080
         CLI   0(@15),C' '                                         1080
         BE    @RF01080                                            1080
         LA    @15,RECJCL(L)                                       1080
         CLI   0(@15),C','                                         1080
         BE    @RF01080                                            1080
@RT01080 DS    0H                                                  1081
*               DLME=ON;            /* IF NOT, ERROR         @Y30OE78*/
         OI    DLME,B'00001000'                                    1081
*         END;                      /*                       @Y30OE78*/
*       ELSE                        /* IF DLM VALUE NOT IN   @Y30OE78*/
*         DO;                       /* QUOTES,               @Y30OE78*/
         B     @RC01059                                            1083
@RF01059 DS    0H                                                  1084
*           HYPHTAB=BLANK;          /* MAKE HYPHEN INVALID   @Y30OE78*/
         MVI   HYPHTAB,C' '                                        1084
*           LBRCTAB=BLANK;          /* MAKE LEFT BRACE INVAL @Y30OE78*/
         MVI   LBRCTAB,C' '                                        1085
*           CHARHIT=ZERO;           /* INIT CHAR HIT VALUE   @Y30OE78*/
         SLR   CHARHIT,CHARHIT                                     1086
*           TRT(RECJCL(L:L+LENGTH(ODLM)),TRTTAB);/* SCAN TO  @Y30OE78
*                                      END OF DLM VALUE      @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1087
         TRT   0(3,@15),TRTTAB                                     1087
*           IF CHARHIT=ZERO×        /* IF NO END HIT OR      @Y30OE78*/
*               HITADDR^=ADDR(RECJCL(L+LENGTH(ODLM)))×/* LENGTH    1088
*                                                            @Y30OE78
*                                      IS WRONG              @Y30OE78*/
*               ^(CHARHIT=CCOMMA×   /* OR END CHAR IS        @Y30OE78*/
*               CHARHIT=SPACE) THEN /* INVALID,              @Y30OE78*/
         CH    CHARHIT,@CH00053                                    1088
         BE    @RT01088                                            1088
         LA    @00,RECJCL+1(L)                                     1088
         CR    HITADDR,@00                                         1088
         BNE   @RT01088                                            1088
         CH    CHARHIT,@CH00287                                    1088
         BE    @RF01088                                            1088
         CH    CHARHIT,@CH00375                                    1088
         BE    @RF01088                                            1088
@RT01088 DS    0H                                                  1089
*             DLME=ON;              /* SET ERROR INDICATOR   @Y30OE78*/
         OI    DLME,B'00001000'                                    1089
*           ELSE                    /* IF GOOD VALUE,        @Y30OE78*/
*             ODLM=RECJCL(L:L-1+LENGTH(ODLM));/* SAVE IT     @Y30OE78*/
         B     @RC01088                                            1090
@RF01088 LA    @15,RECJCL-1(L)                                     1090
         MVC   ODLM(2),0(@15)                                      1090
*         END;                      /*                       @Y30OE78*/
@RC01088 DS    0H                                                  1092
*     END;                          /*                       @Y30OE78*/
@RC01059 DS    0H                                                  1093
*   IF DLME=ON THEN                 /* IF BAD DLM VALUE,     @Y30OE78*/
@RC01054 TM    DLME,B'00001000'                                    1093
         BNO   @RF01093                                            1093
*     JBJCLERR=ON;                  /* FOUND, JOB JCL ERR    @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                1094
*   END DLMSCAN;                    /*                       @Y30OE78*/
@EL00008 DS    0H                                                  1095
@EF00008 DS    0H                                                  1095
@ER00008 L     @14,12(,@13)                                        1095
         BR    @14                                                 1095
*                                                                  1096
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    VOLSCAN                                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    DETECT DUPLICATE VOL= KEYWORD SPECIFICATIONS          @Y30OE78*/
*/*    VALIDITY CHECK THE VALUE SPECIFIED WITH THE           @Y30OE78*/
*/*      VOL=SER  KEYWORD FOUND IN SYSIN SCAN SEGMENT OR THE @Y30OE78*/
*/*      CONTINUATION OF SUCH A VALUE                        @Y30OE78*/
*/*    SAVE VALID VOL=SER VALUE IN SYSIN SCAN WORK AREA      @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    OPNDPTR POINTS TO BEGINNING OF VALUE SPECIFIED ON     @Y30OE78*/
*/*      VOL= KEYWORD                                        @Y30OE78*/
*/*    STATUS SWITCH(VOLCONT) INDICATES IF A VALUE           @Y30OE78*/
*/*      CONTINUATION IS TO BE PROCESSED                     @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    STATUS SWITCH(VOLCONT) INDICATES IF VALUE IS          @Y30OE78*/
*/*      CONTINUED                                           @Y30OE78*/
*/*    SYSIN SCAN WORK AREA(SYSCWK)                          @Y30OE78*/
*/*      VOLSERE INDICATES VOL=SER VALUE ERROR               @Y30OE78*/
*/*      SERNULL INDICATES VOL=SER VALUE WAS NULL            @Y30OE78*/
*/*      OVOLSER CONTAINS VALID DSID VALUE IF ONE WAS FOUND  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/********************************************************** @Y30OE78*/
*                                                                  1096
*VOLSCAN:                           /* ROUTINE TO SCAN VOL   @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG),NOSAVEAREA);/*                 @Y30OE78*/
VOLSCAN  ST    @14,12(,@13)                                        1096
*   IF VOLCONT=ON THEN              /* IF VOL CONTINUATION,  @Y30OE78*/
         TM    VOLCONT,B'00000100'                                 1097
         BNO   @RF01097                                            1097
*     VOLCONT=OFF;                  /* RESET INDICATOR       @Y30OE78*/
         NI    VOLCONT,B'11111011'                                 1098
*   ELSE                            /* IF VOL= KEYWORD HIT,  @Y30OE78*/
*     IF VOLF=ON THEN               /* CHECK FOR PREVIOUS    @Y30OE78*/
         B     @RC01097                                            1099
@RF01097 TM    VOLF,B'00000001'                                    1099
         BNO   @RF01099                                            1099
*       VOLE=ON;                    /* HIT - ERROR           @Y30OE78*/
         OI    VOLE,B'10000000'                                    1100
*     ELSE                          /* NO PREVIOUS HIT,      @Y30OE78*/
*       VOLF=ON;                    /* INDICATE VOL= FOUND   @Y30OE78*/
         B     @RC01099                                            1101
@RF01099 OI    VOLF,B'00000001'                                    1101
*   IF VOLE=ON THEN                 /* IF VOL KEYWD ERROR    @Y30OE78*/
@RC01099 DS    0H                                                  1102
@RC01097 TM    VOLE,B'10000000'                                    1102
         BNO   @RF01102                                            1102
*     JBJCLERR=ON;                  /* INDICATE JCL ERROR    @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                1103
*   ELSE                            /* IF NO ERROR LOOK FOR  @Y30OE78*/
*     DO;                           /* SER SUBPARAMETER      @Y30OE78*/
         B     @RC01102                                            1104
@RF01102 DS    0H                                                  1105
*       DO L=OPNDPTR TO NXTOPND WHILE/* SCAN TO SER KEYWORD  @Y30OE78*/
*             RECJCL(L:L-1+LENGTH(KSER))^=KSER;/*            @Y30OE78*/
         LR    L,OPNDPTR                                           1105
         B     @DE01105                                            1105
@DL01105 LA    @04,RECJCL-1(L)                                     1105
         CLC   0(4,@04),@CC00315                                   1105
         BE    @DC01105                                            1105
*       END;                        /*                       @Y30OE78*/
         AH    L,@CH00061                                          1106
@DE01105 CR    L,NXTOPND                                           1106
         BNH   @DL01105                                            1106
@DC01105 DS    0H                                                  1107
*       IF L>=NXTOPND THEN          /* IF SER KEYWORD NOT    @Y30OE78*/
         CR    L,NXTOPND                                           1107
         BL    @RF01107                                            1107
*         IF PCONT=ON THEN          /* FOUND AND PARM CONTIN @Y30OE78*/
         TM    PCONT,B'00001000'                                   1108
         BNO   @RF01108                                            1108
*           DO;                     /* SET INDICATORS TO     @Y30OE78*/
*             PCONT=OFF;            /* CONTINUE SCAN ON NEXT @Y30OE78*/
         NI    PCONT,B'11110111'                                   1110
*             VOLCONT=ON;           /* RECORD                @Y30OE78*/
         OI    VOLCONT,B'00000100'                                 1111
*           END;                    /*                       @Y30OE78*/
*         ELSE                      /* IF NOT FOUND,         @Y30OE78*/
*           ;                       /* IGNORE VOL PARAMETER  @Y30OE78*/
@RF01108 DS    0H                                                  1114
*       ELSE                        /* IF SER KEYWORD FOUND, @Y30OE78*/
*         DO;                       /*                       @Y30OE78*/
         B     @RC01107                                            1114
@RF01107 DS    0H                                                  1115
*           VOLSERF=ON;             /* INDICATE FOUND        @Y30OE78*/
         OI    VOLSERF,B'00100000'                                 1115
*           L=L+LENGTH(KSER);       /* BUMP PAST KEYWORD     @Y30OE78*/
         AH    L,@CH00056                                          1116
*           IF RECJCL(L)=BLANK×     /* IF NULL VOLSER WAS    @Y30OE78*/
*               RECJCL(L)=CCOMMA THEN/* SPECIFIED,           @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1117
         CLI   0(@15),C' '                                         1117
         BE    @RT01117                                            1117
         LA    @15,RECJCL-1(L)                                     1117
         CLI   0(@15),C','                                         1117
         BNE   @RF01117                                            1117
@RT01117 DS    0H                                                  1118
*             SERNULL=ON;           /* SET INDICATOR         @Y30OE78*/
         OI    SERNULL,B'00001000'                                 1118
*           ELSE                    /* A VOLSER WAS FOUND,   @Y30OE78*/
*             DO;                   /* SCAN IT               @Y30OE78*/
         B     @RC01117                                            1119
@RF01117 DS    0H                                                  1120
*               IF RECJCL(L)=CLPREN THEN/* IF 1ST CHAR IS LEFT     1120
*                                                            @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1120
         CLI   0(@15),C'('                                         1120
         BNE   @RF01120                                            1120
*                 L=L+1;            /* PAREN, BUMP PAST IT   @Y30OE78*/
         AH    L,@CH00061                                          1121
*               IF RECJCL(L)=CQUOTE THEN/* IF VOLSER IN QUOTES,    1122
*                                                            @Y30OE78*/
@RF01120 LA    @15,RECJCL-1(L)                                     1122
         CLI   0(@15),C''''                                        1122
         BNE   @RF01122                                            1122
*                 DO;               /*                       @Y30OE78*/
*                   QUOTE=ON;       /* INDICATE IN QUOTES    @Y30OE78*/
         OI    QUOTE,B'00000001'                                   1124
*                   L=L+1;          /* BUMP PAST QUOTE       @Y30OE78*/
         AH    L,@CH00061                                          1125
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF NOT IN QUOTES      @Y30OE78*/
*                 QUOTE=OFF;        /* IND NOT IN QUOTES     @Y30OE78*/
         B     @RC01122                                            1127
@RF01122 NI    QUOTE,B'11111110'                                   1127
*               HYPHTAB=BLANK;      /* MAKE HYPHEN INVALID   @Y30OE78*/
@RC01122 MVI   HYPHTAB,C' '                                        1128
*               LBRCTAB=BLANK;      /* MAKE LEFT BRACE INVAL @Y30OE78*/
         MVI   LBRCTAB,C' '                                        1129
*               NAT$=BLANK;         /* MAKE NATIONAL CHARS   @Y30OE78*/
         MVI   NAT$,C' '                                           1130
*               NAT#=BLANK;         /* INVALID               @Y30OE78*/
         MVI   NAT#,C' '                                           1131
*               NAT@=BLANK;         /*                       @Y30OE78*/
         MVI   NAT@,C' '                                           1132
*               CHARHIT=ZERO;       /* INIT STOP CHAR        @Y30OE78*/
         SLR   CHARHIT,CHARHIT                                     1133
*               TRT(RECJCL(L:L+LENGTH(OVOLSER)),TRTTAB);/* SCAN    1134
*                                                            @Y30OE78
*                                      CHARS FOR VALID SER   @Y30OE78*/
         LA    @15,RECJCL-1(L)                                     1134
         TRT   0(7,@15),TRTTAB                                     1134
*               NAT$=TZERO;         /* MAKE NATIONAL CHARS   @Y30OE78*/
         MVI   NAT$,X'00'                                          1135
*               NAT#=TZERO;         /* VALID FOR ALL OTHER   @Y30OE78*/
         MVI   NAT#,X'00'                                          1136
*               NAT@=TZERO;         /* PARAMETERS            @Y30OE78*/
         MVI   NAT@,X'00'                                          1137
*               IF CHARHIT=ZERO×    /* IF NO DELIMITER HIT   @Y30OE78*/
*                   HITADDR=ADDR(RECJCL(L))×/* OR NO GOOD CHAR     1138
*                                                            @Y30OE78*/
*                   ^(CHARHIT=SPACE×/* FOUND OR AN INVALID   @Y30OE78*/
*                   CHARHIT=CRPREN× /* DELIMITER             @Y30OE78*/
*                   CHARHIT=CQUOTE× /* WAS                   @Y30OE78*/
*                   CHARHIT=CCOMMA) THEN/* FOUND             @Y30OE78*/
         CH    CHARHIT,@CH00053                                    1138
         BE    @RT01138                                            1138
         LA    @00,RECJCL-1(L)                                     1138
         CR    HITADDR,@00                                         1138
         BE    @RT01138                                            1138
         CH    CHARHIT,@CH00375                                    1138
         BE    @RF01138                                            1138
         CH    CHARHIT,@CH00295                                    1138
         BE    @RF01138                                            1138
         CH    CHARHIT,@CH00289                                    1138
         BE    @RF01138                                            1138
         CH    CHARHIT,@CH00287                                    1138
         BE    @RF01138                                            1138
@RT01138 DS    0H                                                  1139
*                 DO;               /*                       @Y30OE78*/
*                   VOLSERE=ON;     /* INDICATE VOLSER ERROR @Y30OE78*/
         OI    VOLSERE,B'00010000'                                 1140
*                   JBJCLERR=ON;    /* INDICATE JCL ERROR    @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                1141
*                 END;              /*                       @Y30OE78*/
*               ELSE                /* IF GOOD SO FAR,       @Y30OE78*/
*                 IF QUOTE=ON&      /* IF OPEN QUOTE IS NOT  @Y30OE78*/
*                     CHARHIT^=CQUOTE THEN/* FOLLOWED BY CLOSING   1143
*                                                            @Y30OE78*/
         B     @RC01138                                            1143
@RF01138 TM    QUOTE,B'00000001'                                   1143
         BNO   @RF01143                                            1143
         CH    CHARHIT,@CH00289                                    1143
         BE    @RF01143                                            1143
*                   DO;             /*                       @Y30OE78*/
*                     VOLSERE=ON;   /* QUOTE, VOLSER ERROR   @Y30OE78*/
         OI    VOLSERE,B'00010000'                                 1145
*                     JBJCLERR=ON;  /* INDICATE JCL ERROR    @Y30OE78*/
         OI    JBJCLERR,B'01000000'                                1146
*                   END;            /*                       @Y30OE78*/
*                 ELSE              /* OTHERWISE GOOD VOLSER @Y30OE78*/
*                   DO;             /*                       @Y30OE78*/
         B     @RC01143                                            1148
@RF01143 DS    0H                                                  1149
*                     DO I=L TO L+LENGTH(OVOLSER) WHILE/* BUMP I TO
*                                                            @Y30OE78*/
*                           ADDR(RECJCL(I+1))<HITADDR;/* LAST VALID
*                                                            @Y30OE78*/
         LR    I,L                                                 1149
         B     @DE01149                                            1149
@DL01149 LA    @05,RECJCL(I)                                       1149
         CR    @05,HITADDR                                         1149
         BNL   @DC01149                                            1149
*                     END;          /* CHAR IN VOLSER        @Y30OE78*/
         AH    I,@CH00061                                          1150
@DE01149 LA    @05,6                                               1150
         ALR   @05,L                                               1150
         CR    I,@05                                               1150
         BNH   @DL01149                                            1150
@DC01149 DS    0H                                                  1151
*                     OVOLSER=RECJCL(L:I);/* SAVE VOLSER     @Y30OE78*/
         MVI   OVOLSER+1,C' '                                      1151
         MVC   OVOLSER+2(4),OVOLSER+1                              1151
         LR    @05,I                                               1151
         SLR   @05,L                                               1151
         LA    @15,RECJCL-1(L)                                     1151
         EX    @05,@SM01673                                        1151
*                   END;            /*                       @Y30OE78*/
*             END;                  /*                       @Y30OE78*/
*         END;                      /*                       @Y30OE78*/
*     END;                          /*                       @Y30OE78*/
*   END VOLSCAN;                    /*                       @Y30OE78*/
@EL00009 DS    0H                                                  1156
@EF00009 DS    0H                                                  1156
@ER00009 L     @14,12(,@13)                                        1156
         BR    @14                                                 1156
*                                                                  1157
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    BPAMPUT                                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    BUILD BLOCKS OF RECORDS TO BE PLACED IN SYSUT3 FILE   @Y30OE78*/
*/*    WHEN A BLOCK IS COMPLETE WRITE IT AND WAIT FOR        @Y30OE78*/
*/*      COMPLETION OF I/O ON OTHER BUFFER SO IT CAN BE      @Y30OE78*/
*/*      REFILLED                                            @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    A DCB OPENED FOR OUTPUT TO SYSUT3                     @Y30OE78*/
*/*    BUFCBPTR POINTING TO A BUFFER CONTROL BLOCK(BUFCB)    @Y30OE78*/
*/*      PROVIDED BY CALLER                                  @Y30OE78*/
*/*    BUFCB AND ITS ASSOCIATED BUFFER ELEMENTS(BUFEL)       @Y30OE78*/
*/*      WERE INITIALIZED BEFORE FIRST CALL OF THIS ROUTINE  @Y30OE78*/
*/*    RECORD WORK AREA(RWORK) CONTAINS RECORD TO BE BLOCKED @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    BLOCK OF DATA WRITTEN TO SYSUT3 FILE IF THE BLOCK     @Y30OE78*/
*/*      CANNOT CONTAIN ANOTHER RECORD                       @Y30OE78*/
*/*    INPUT RECORD PLACED IN OUTPUT BLOCK                   @Y30OE78*/
*/*    BUFFER CONTROL BLOCK IS UPDATED TO POINT TO NEXT      @Y30OE78*/
*/*      OPEN SLOT IN AN OUTPUT BLOCK                        @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    WRITE                                                 @Y30OE78*/
*/*    CHECK                                                 @Y30OE78*/
*/*                                                          @Y30OE78*/
*/*********************************************************  @Y30OE78*/
*                                                                  1157
*BPAMPUT:                           /* BPAM INTERFACE ROUTIN @Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /*                       @ZA00784*/
BPAMPUT  ST    @14,@SA00010                                        1157
*   RFY                             /* SET ADDRESSIBILITY    @Y30OE78*/
*     IHADCB BASED(ADDR(UT3BPOUT)); /* TO DCB                @Y30OE78*/
*   IF BLKLEN+RDWLNA>DCBBLKSI THEN  /* IF BUFFER CANNOT HOLD @Y30OE78
*                                      NEXT RECORD,          @Y30OE78*/
         L     @08,BUFCBPTR                                        1159
         L     @08,BUFELPTR(,@08)                                  1159
         L     @04,BUFPTR(,@08)                                    1159
         LH    @03,BLKLEN(,@04)                                    1159
         AH    @03,RDWLNA                                          1159
         LA    @15,UT3BPOUT                                        1159
         CH    @03,DCBBLKSI+52(,@15)                               1159
         BNH   @RF01159                                            1159
*     DO;                           /* DO EOB PROCESSING     @Y30OE78*/
*       WRIND=ZERO;                 /* INDICATE WRITE WAS    @Y30OE78
*                                      ISSUED FOR BUFFER     @Y30OE78*/
         SLR   @03,@03                                             1161
         STH   @03,WRIND(,@04)                                     1161
*       PARMPTR=DECBPTR;            /* GET DECB POINTER      @Y30OE78*/
         L     PARMPTR,DECBPTR(,@08)                               1162
*       BLKPTR=BUFPTR;              /* GET BUFFER PTR        @Y30OE78*/
         LR    BLKPTR,@04                                          1163
*       GEN REFS(PARMPTR,BLKPTR)    /* WRITE BUFFER          @Y30OE78*/
*           (WRITE (PARMPTR),SF,,(BLKPTR),MF=E);/*           @Y30OE78*/
         WRITE (PARMPTR),SF,,(BLKPTR),MF=E
*       BUFELPTR=BUFELNXT;          /* GET OTHER BUFFER      @Y30OE78*/
         L     @08,BUFCBPTR                                        1165
         L     @04,BUFELPTR(,@08)                                  1165
         L     @04,BUFELNXT(,@04)                                  1165
         ST    @04,BUFELPTR(,@08)                                  1165
*       RECPTR=ADDR(RECAREA);       /* SET SLOT POINTER TO   @Y30OE78
*                                      FIRST SLOT IN NEW     @Y30OE78
*                                      BUFFER                @Y30OE78*/
         L     @03,BUFPTR(,@04)                                    1166
         LA    @00,RECAREA(,@03)                                   1166
         ST    @00,RECPTR(,@08)                                    1166
*       IF WRIND=ZERO THEN          /* IF WRITE HAS BEEN     @Y30OE78*/
         ICM   @08,3,WRIND(@03)                                    1167
         BNZ   @RF01167                                            1167
*         DO;                       /* ISSUED, MUST WAIT     @Y30OE78*/
*           PARMPTR=DECBPTR;        /* GET DECB POINTER      @Y30OE78*/
         L     PARMPTR,DECBPTR(,@04)                               1169
*           GEN REFS(PARMPTR)       /* WAIT FOR COMPLETION   @Y30OE78*/
*               (CHECK (PARMPTR));  /*                       @Y30OE78*/
         CHECK (PARMPTR)
*           BLKLEN=LENGTH(BDW);     /* RESET LENGTH TO THAT  @Y30OE78
*                                      OF EMPTY BUFFER       @Y30OE78*/
         L     @08,BUFCBPTR                                        1171
         L     @08,BUFELPTR(,@08)                                  1171
         L     @08,BUFPTR(,@08)                                    1171
         MVC   BLKLEN(2,@08),@CH00056                              1171
*         END;                      /*                       @Y30OE78*/
*     END;                          /*                       @Y30OE78*/
@RF01167 DS    0H                                                  1174
*   IF UT3SYN=OFF THEN              /* IF NO ERROR ENCOUNTRD @Y30OE78*/
@RF01159 TM    UT3SYN,B'00000001'                                  1174
         BNZ   @RF01174                                            1174
*     DO;                           /* MOVE RECORD           @Y30OE78*/
*       SLOT(1:RDWLNA)=RWORK;       /* MOVE DATA FROM RECORD @Y30OE78
*                                      WORKAREA TO BUFFER    @Y30OE78*/
         L     @08,BUFCBPTR                                        1176
         L     @04,RECPTR(,@08)                                    1176
         LH    @03,RDWLNA                                          1176
         LR    @15,@03                                             1176
         BCTR  @15,0                                               1176
         EX    @15,@SM01675                                        1176
*       BLKLEN=BLKLEN+RDWLNA;       /* UPDATE BLOCK LENGTH   @Y30OE78*/
         L     @15,BUFELPTR(,@08)                                  1177
         L     @15,BUFPTR(,@15)                                    1177
         LH    @00,BLKLEN(,@15)                                    1177
         ALR   @00,@03                                             1177
         STH   @00,BLKLEN(,@15)                                    1177
*       RECPTR=RECPTR+RDWLNA;       /* UPDATE SLOT POINTER   @Y30OE78*/
         ALR   @04,@03                                             1178
         ST    @04,RECPTR(,@08)                                    1178
*     END;                          /*                       @Y30OE78*/
*   RFY                             /* RESET                 @Y30OE78*/
*     IHADCB BASED(DCBPTR);         /* DCB ADDRESSIBILITY    @Y30OE78*/
*   END BPAMPUT;                    /*                       @Y30OE78*/
@EL00010 DS    0H                                                  1181
@EF00010 DS    0H                                                  1181
@ER00010 L     @14,@SA00010                                        1181
         BR    @14                                                 1181
*                                                                  1182
*/********************************************************** @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    ADSANAL                                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    CALLED BY SEGMENT INPUT ADS AFTER 3540 DEVICE OPEN    @Y30OE78*/
*/*    AND AFTER EACH DISKETTE HAS BEEN SCANNED TO DETERMINE @Y30OE78*/
*/*    IF ALL REQUESTED ADS'S HAVE BEEN RETRIEVED OR MARKED  @Y30OE78*/
*/*    NOT AVAILABLE.  IF SOME MUST STILL BE RETRIEVED, USE  @Y30OE78*/
*/*    NEWDISKT ROUTINE TO GET NEW DISKETTE.  IF DELIMITER   @Y30OE78*/
*/*    DISKETTE IS ENCOUNTERED ISSUE READER RECOVERY         @Y30OE78*/
*/*    MESSAGES.                                             @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    DATA SET NAME TABLE(DSNTAB)                           @Y30OE78*/
*/*    STATUS SWITCHES INDICATE IF INPUT ADS PROCESSING IS   @Y30OE78*/
*/*    TO BE ENDED OF IF A DELIMITER DISKETTE WAS            @Y30OE78*/
*/*    ENCOUNTERED WHILE READING A MULTIVOLUME DATA SET      @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    NEXT DISKETTE POSITIONED IN THE 3540 DRIVE            @Y30OE78*/
*/*    READER RECOVERY MESSAGES IEB545, IEB546, IEB547 IF    @Y30OE78*/
*/*      RECOVERY IS ATTEMPTED                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    NEWDISKT                                              @Y30OE78*/
*/*    IOEDKMSG                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1182
*ADSANAL:                           /* ANALYZE DSNTAB        #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /*                       #Y30OE78*/
ADSANAL  ST    @14,@SA00011                                        1182
*   IF DSCNT=ZERO THEN              /* IF ALL ADS PROCESSED  #Y30OE78*/
         ICM   @08,15,DSCNT                                        1183
         BNZ   @RF01183                                            1183
*     IADONE=ON;                    /* MARK IA PROCESS DONE  #Y30OE78*/
         OI    IADONE,B'10000000'                                  1184
*   IF IADONE=OFF THEN              /* MORE ADS PROCESSING   #Y30OE78*/
@RF01183 TM    IADONE,B'10000000'                                  1185
         BNZ   @RF01185                                            1185
*     IF DKDLM=ON THEN              /* IF DELIMITER DISKETTE #Y30OE78
*                                      HIT WHILE READING,    #Y30OE78*/
         TM    DKDLM,B'00000010'                                   1186
         BNO   @RF01186                                            1186
*       IARECOV=ON;                 /* SET RECOVERY SWITCH   #Y30OE78*/
         OI    IARECOV,B'01000000'                                 1187
*     ELSE                          /* IF PERM I/O ERROR ON  #Y30OE78
*                                      DSKT OR VOL1 INVALID  #Y30OE78
*                                      OR NORMAL END OF SCAN #Y30OE78*/
*       CALL NEWDSKT;               /* GET NEXT DISKETTE     #Y30OE78*/
         B     @RC01186                                            1188
@RF01186 BAL   @14,NEWDSKT                                         1188
*   DO WHILE IARECOV=ON&            /* DO RECOVERY PROCESS   #Y30OE78*/
*         IADONE=OFF;               /* IF IT IS VIABLE       #Y30OE78*/
@RC01186 DS    0H                                                  1189
@RF01185 B     @DE01189                                            1189
@DL01189 DS    0H                                                  1190
*     DKDLM=OFF;                    /* RESET DLM HIT IND     #Y30OE78*/
*     IARECOV=OFF;                  /* RESET RECOVERY SWITCH #Y30OE78*/
         NI    DKDLM,B'10111101'                                   1191
*     MSGIDEX=M545;                 /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'07'                                       1192
*     MSGTYPE=MTYPWTO;              /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1193
*     DDDK=DDDV;                    /* SET DEVICE ADDR KEY   #Y30OE78*/
         MVI   DDDK,X'08'                                          1194
*     DDD=DEVPTR(DATA)->UCBNAME;    /* PUT DEV ADDR IN MSG   #Y30OE78*/
         SLR   @08,@08                                             1195
         ICM   @08,7,DEVPTR+12                                     1195
         MVC   DDD(3),UCBNAME(@08)                                 1195
*     PARMPTR=ADDR(MSGINT);         /* POINT TO PARAMETERS   #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1196
*     CALL IOEDKMSG;                /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1197
         BALR  @14,@15                                             1197
*     DDDK=SKIPV;                   /* RESET DEV ADDR KEY    #Y30OE78*/
         MVI   DDDK,X'00'                                          1198
*     MSGIDEX=M546;                 /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'08'                                       1199
*     MSGTYPE=MTYPWTO;              /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1200
*     DSNK=DSNV;                    /* SET DSNAME KEY        #Y30OE78*/
         MVI   DSNK,X'06'                                          1201
*     JJJK=JJJV;                    /* SET JOBNAME KEY       #Y30OE78*/
         MVI   JJJK,X'0B'                                          1202
*     DO DSNPTRJ=FRSTADSN TO LASTADSN/* ISSUE MSG 546        #Y30OE78*/
*           BY LENGTH(DSNENTRY);    /* FOR EACH              #Y30OE78
*                                      OUTSTANDING ADS       #Y30OE78*/
         L     @08,FRSTADSN                                        1203
         ST    @08,DSNPTRJ                                         1203
         B     @DE01203                                            1203
@DL01203 DS    0H                                                  1204
*       IF JOBERR=OFF&              /* IF JCL ERROR OR       #Y30OE78*/
*           JCLMSG=OFF&             /* TYPRUN=SCAN OR        #Y30OE78*/
*           ADSSAT=OFF THEN         /* ADS WAS READ, NO MSG  #Y30OE78*/
         TM    JOBERR(@08),B'00011100'                             1204
         BNZ   @RF01204                                            1204
*         DO;                       /* OTHERWISE WRITE MSG   #Y30OE78*/
*           DSN=DSID;               /* PUT DSID IN MSG       #Y30OE78*/
         MVC   DSN(8),DSID(@08)                                    1206
*           JJJ=JOBNM;              /* PUT JOBNAME IN MSG    #Y30OE78*/
         MVC   JJJ(8),JOBNM(@08)                                   1207
*           IF VSERPRES=ON THEN     /* IF VOLSER SPECIFIED,  #Y30OE78*/
         TM    VSERPRES(@08),B'00100000'                           1208
         BNO   @RF01208                                            1208
*             DO;                   /*                       #Y30OE78*/
*               VSERK=VSER1V;       /* SET VOLSER KEY        #Y30OE78*/
         MVI   VSERK,X'01'                                         1210
*               VSER=VOLSER;        /* PUT VOLSER IN MSG     #Y30OE78*/
         MVC   VSER(6),VOLSER(@08)                                 1211
*             END;                  /*                       #Y30OE78*/
*           ELSE                    /* NO VOLSER SPECIFIED,  #Y30OE78*/
*             VSERK=VOLLOP;         /* LOP VOLSER FROM MSG   #Y30OE78*/
         B     @RC01208                                            1213
@RF01208 MVI   VSERK,X'81'                                         1213
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARAMETERS   #Y30OE78*/
@RC01208 LA    PARMPTR,MSGINT                                      1214
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1215
         BALR  @14,@15                                             1215
*         END;                      /*                       #Y30OE78*/
*     END;                          /*                       #Y30OE78*/
@RF01204 LA    @08,40                                              1217
         AL    @08,DSNPTRJ                                         1217
         ST    @08,DSNPTRJ                                         1217
@DE01203 C     @08,LASTADSN                                        1217
         BNH   @DL01203                                            1217
*     DSNK=SKIPV;                   /* RESET DSNAME KEY      #Y30OE78*/
         MVI   DSNK,X'00'                                          1218
*     JJJK=SKIPV;                   /* RESET JOBNAME KEY     #Y30OE78*/
         MVI   JJJK,X'00'                                          1219
*     VSERK=SKIPV;                  /* RESET VOLSER KEY      #Y30OE78*/
         MVI   VSERK,X'00'                                         1220
*     MSGIDEX=M547;                 /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'09'                                       1221
*     MSGTYPE=MTYPWTOR;             /* INDICATE WTOR         #Y30OE78*/
         MVI   MSGTYPE,X'02'                                       1222
*     PARMPTR=ADDR(MSGINT);         /* POINT TO PARAMETERS   #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1223
*     CALL IOEDKMSG;                /* HAVE MSG WRITTEN AND  #Y30OE78
*                                      REPLY PASSED BACK     #Y30OE78*/
         L     @15,@CV00048                                        1224
         BALR  @14,@15                                             1224
*     DO WHILE^(REPLY(1:LENGTH(RETRY))=RETRY×/* IF REPLY     #Y30OE78*/
*           REPLY(1:LENGTH(GO))=GO);/* WAS INVALID,          #Y30OE78*/
         B     @DE01225                                            1225
@DL01225 DS    0H                                                  1226
*       PARMPTR=ADDR(MSGINT);       /* POINT TO PARAMETERS   #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1226
*       CALL IOEDKMSG;              /* REISSUE REQUEST FOR   #Y30OE78*/
         L     @15,@CV00048                                        1227
         BALR  @14,@15                                             1227
*     END;                          /* REPLY                 #Y30OE78*/
@DE01225 L     @08,MSGREP                                          1228
         CLC   REPLY(5,@08),@CC00302                               1228
         BE    @DC01225                                            1228
         CLC   REPLY(2,@08),@CC00304                               1228
         BNE   @DL01225                                            1228
@DC01225 DS    0H                                                  1229
*     IF REPLY(1:LENGTH(GO))=GO THEN/* IF REPLY WAS GO       #Y30OE78*/
         L     @08,MSGREP                                          1229
         CLC   REPLY(2,@08),@CC00304                               1229
         BNE   @RF01229                                            1229
*       IADONE=ON;                  /* INDICATE IA PROCESS   #Y30OE78
*                                      TO BE DISCONTINUED    #Y30OE78*/
         OI    IADONE,B'10000000'                                  1230
*     ELSE                          /* REPLY WAS RETRY       #Y30OE78*/
*       CALL NEWDSKT;               /* GET NEW DISKETTE      #Y30OE78*/
         B     @RC01229                                            1231
@RF01229 BAL   @14,NEWDSKT                                         1231
*   END;                            /*                       #Y30OE78*/
@RC01229 DS    0H                                                  1232
@DE01189 TM    IARECOV,B'01000000'                                 1232
         BNO   @DC01189                                            1232
         TM    IADONE,B'10000000'                                  1232
         BZ    @DL01189                                            1232
@DC01189 DS    0H                                                  1233
*   END ADSANAL;                    /*                       #Y30OE78*/
@EL00011 DS    0H                                                  1233
@EF00011 DS    0H                                                  1233
@ER00011 L     @14,@SA00011                                        1233
         BR    @14                                                 1233
*                                                                  1234
*/********************************************************** #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    READDSKT                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    SCAN DATA SET NAME TABLE(DSNTAB) TO FIND UNSATISFIED  @Y30OE78*/
*/*    ENTRIES AND RETRIEVE THE REQUESTED DATA SETS FROM     @Y30OE78*/
*/*    THE CURRENT DISKETTE IF POSSIBLE.                     @Y30OE78*/
*/*    TWO SCANS OF THE DSNTAB ARE PERFORMED.  THE FIRST     @Y30OE78*/
*/*    IS TO PROCESS ENTRIES THAT MUST BE SATISFIED ON A     @Y30OE78*/
*/*    SPECIFIC VOLUME,  THE SECOND IS TO PROCESS ENTRIES    @Y30OE78*/
*/*    THAT DID NOT SPECIFY VOL=SER IN JCL.  SCAN OF THE     @Y30OE78*/
*/*    DSNTAB MUST BE RESTARTED IF THE DISKETTE IN THE       @Y30OE78*/
*/*    3540 DRIVE IS CHANGED DURING EOV PROCESSING OF A      @Y30OE78*/
*/*    MULTIVOLUME DATA SET.                                 @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    DATA SET NAME TABLE(DSNTAB)                           @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    UPDATED DSNTAB                                        @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    GETADS                                                @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1234
*READDSKT:                          /* READ ADS ON A DISKETT #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /*                       #Y30OE78*/
READDSKT ST    @14,@SA00012                                        1234
*   UCBPTR=DEVPTR(DATA);            /* SET UCB PTR TO        #Y30OE78
*                                      SYSDATA DEVICE        #Y30OE78*/
         SLR   UCBPTR,UCBPTR                                       1235
         ICM   UCBPTR,7,DEVPTR+12                                  1235
*   DKCHNGD=ON;                     /* INIT DSKT CHANGED SW  #Y30OE78*/
         OI    DKCHNGD,B'00000100'                                 1236
*   DO WHILE DKCHNGD=ON&            /* PROCESS TIL DUAL SCAN #Y30OE78*/
*         IADONE=OFF;               /* SCAN COMPLETES ON A   #Y30OE78
*                                      DISKETTE              #Y30OE78*/
         B     @DE01237                                            1237
@DL01237 DS    0H                                                  1238
*     DKCHNGD=OFF;                  /* RESET DSKT CHANGED SW #Y30OE78*/
*     DKFEED=OFF;                   /* RESET FEED SW         #Y30OE78*/
         NI    DKCHNGD,B'11110011'                                 1239
*     DO K=1 TO 2 WHILE             /* TAKE 2 PASSES AT      #Y30OE78*/
*           DKFEED=OFF&             /* DSNTAB WHILE NO ERROR #Y30OE78*/
*           DKCHNGD=OFF&            /* DELIMITS SCANS        #Y30OE78*/
*           IADONE=OFF;             /*                       #Y30OE78*/
         LA    @08,1                                               1240
         ST    @08,K                                               1240
@DL01240 TM    DKFEED,B'10001100'                                  1240
         BNZ   @DC01240                                            1240
*       DO DSNPTRJ=FRSTADSN TO LASTADSN/* LOOK AT EACH       #Y30OE78*/
*             BY LENGTH(DSNENTRY) WHILE/* DSN TABLE          #Y30OE78*/
*             DKFEED=OFF&           /* ENTRY WHILE NO ERROR  #Y30OE78*/
*             DKCHNGD=OFF&          /* DELIMITS SCAN         #Y30OE78*/
*             IADONE=OFF;           /*                       #Y30OE78*/
         L     @08,FRSTADSN                                        1241
         ST    @08,DSNPTRJ                                         1241
         B     @DE01241                                            1241
@DL01241 TM    DKFEED,B'10001100'                                  1241
         BNZ   @DC01241                                            1241
*         IF JOBERR=OFF&            /* PROCESS ENTRIES THAT  #Y30OE78*/
*             JCLMSG=OFF&           /* HAVE NOT ALREADY BEEN #Y30OE78*/
*             ADSSAT=OFF THEN       /* PROCESSED             #Y30OE78*/
         TM    JOBERR(@08),B'00011100'                             1242
         BNZ   @RF01242                                            1242
*           IF K=1 THEN             /* IF 1ST PASS,          #Y30OE78*/
         CLC   K(4),@CF00061                                       1243
         BNE   @RF01243                                            1243
*             IF VSERPRES=ON&       /* PROCESS ENTRIES WITH  #Y30OE78*/
*                 VOLSER=UCBVLSER THEN/*                     #Y30OE78*/
         TM    VSERPRES(@08),B'00100000'                           1244
         BNO   @RF01244                                            1244
         L     @04,UCBXTADR(,UCBPTR)                               1244
         CLC   VOLSER(6,@08),UCBVLSER(@04)                         1244
         BNE   @RF01244                                            1244
*               CALL GETADS;        /* VOLSER SPECIFIED      #Y30OE78*/
         BAL   @14,GETADS                                          1245
*             ELSE                                                 1246
*               ;                   /*                       #Y30OE78*/
@RF01244 DS    0H                                                  1247
*           ELSE                    /* IF 2ND PASS           #Y30OE78*/
*             IF VSERPRES=OFF THEN  /* PROCESS ENTRIES       #Y30OE78*/
         B     @RC01243                                            1247
@RF01243 L     @08,DSNPTRJ                                         1247
         TM    VSERPRES(@08),B'00100000'                           1247
         BNZ   @RF01247                                            1247
*               CALL GETADS;        /* WITHOUT VOLSER        #Y30OE78*/
         BAL   @14,GETADS                                          1248
*       END;                        /*                       #Y30OE78*/
@RF01247 DS    0H                                                  1249
@RC01243 DS    0H                                                  1249
@RF01242 LA    @08,40                                              1249
         AL    @08,DSNPTRJ                                         1249
         ST    @08,DSNPTRJ                                         1249
@DE01241 C     @08,LASTADSN                                        1249
         BNH   @DL01241                                            1249
@DC01241 DS    0H                                                  1250
*     END;                          /*                       #Y30OE78*/
         LA    @08,1                                               1250
         AL    @08,K                                               1250
         ST    @08,K                                               1250
         CH    @08,@CH00135                                        1250
         BNH   @DL01240                                            1250
@DC01240 DS    0H                                                  1251
*   END;                            /*                       #Y30OE78*/
@DE01237 TM    DKCHNGD,B'00000100'                                 1251
         BNO   @DC01237                                            1251
         TM    IADONE,B'10000000'                                  1251
         BZ    @DL01237                                            1251
@DC01237 DS    0H                                                  1252
*   END READDSKT;                   /*                       #Y30OE78*/
@EL00012 DS    0H                                                  1252
@EF00012 DS    0H                                                  1252
@ER00012 L     @14,@SA00012                                        1252
         BR    @14                                                 1252
*                                                                  1253
*/********************************************************** #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    NEWDISKT                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    FEED A NEW DISKETTE INTO THE 3540 DRIVE EXCEPT ON     @Y30OE78*/
*/*      FIRST ENTRY AFTER DEVICE OPEN                       @Y30OE78*/
*/*    ANALYZE PASSBACK FROM FEED REQUEST.  IN CASE OF FIRST @Y30OE78*/
*/*      I/O ERROR RETRY FEED.                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    STATUS SWITCH INDICATES IF FIRST ENTRY AFTER DEVICE   @Y30OE78*/
*/*      OPEN                                                @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    NEW DISKETTE IN 3540 DRIVE                            @Y30OE78*/
*/*    STATUS SWITCHES INDICATE IF ERROR DETECTED            @Y30OE78*/
*/*    MESSAGE IEB548 IF SECOND CONSECUTIVE I/O ERROR WAS    @Y30OE78*/
*/*      ENCOUNTERED                                         @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    IOESDKTI                                              @Y30OE78*/
*/*    IOEDKMSG                                              @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    NONE                                                  @Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1253
*NEWDSKT:                           /* ROUTINE TO GET NEXT   #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /* DISKETTE FROM HOPPER  #Y30OE78*/
NEWDSKT  ST    @14,@SA00013                                        1253
*   DKFEED=ON;                      /* SET FEED NEEDED       #Y30OE78*/
         OI    DKFEED,B'00001000'                                  1254
*   DO WHILE DKFEED=ON;             /* FEED TIL GOT VALID    #Y30OE78
*                                      DSKT OR ERRORS CAUSE  #Y30OE78
*                                      SHUTDOWN              #Y30OE78*/
         B     @DE01255                                            1255
@DL01255 DS    0H                                                  1256
*     IF DOPENCHK=ON THEN           /* IF DUMMY OPEN CHECKED #Y30OE78*/
         TM    DOPENCHK,B'00000001'                                1256
         BNO   @RF01256                                            1256
*       DO;                         /* GET NEXT DSKT         #Y30OE78*/
*         SETDOPCD=OPFEED;          /* PREPARE SETDISKT      #Y30OE78*/
         L     @08,DCBPTR                                          1258
         SLR   @03,@03                                             1258
         ICM   @03,7,DCBAMWKA+16(@08)                              1258
         MVI   SETDOPCD(@03),X'04'                                 1258
*         SETDDCB=ADDR(DATAEX);     /* PARMLIST TO DO A      #Y30OE78*/
         LA    @08,DATAEX                                          1259
         ST    @08,SETDDCB(,@03)                                   1259
*         PARMPTR=ADDR(SETDLIST);   /* FEED                  #Y30OE78*/
         LA    PARMPTR,SETDLIST(,@03)                              1260
*         CALL IOESDKTI;            /* CALL SETDISKT SERVICE #Y30OE78*/
         L     @15,@CV00047                                        1261
         BALR  @14,@15                                             1261
*       END;                        /*                       #Y30OE78*/
*     ELSE                          /* IF CHECKING DUMMY     #Y30OE78*/
*       DOPENCHK=ON;                /* OPEN, SET INDICATOR   #Y30OE78*/
         B     @RC01256                                            1263
@RF01256 OI    DOPENCHK,B'00000001'                                1263
*     DKFEED=OFF;                   /* RESET NEED TO FEED    #Y30OE78*/
@RC01256 NI    DKFEED,B'11110111'                                  1264
*     IF SETDRTN1=R1PIO THEN        /* IF I/O ERROR,         #Y30OE78*/
         L     @08,DCBPTR                                          1265
         SLR   @03,@03                                             1265
         ICM   @03,7,DCBAMWKA+16(@08)                              1265
         CLI   SETDRTN1(@03),X'10'                                 1265
         BNE   @RF01265                                            1265
*       IF PIO1=ON THEN             /* IF ALREADY HAVE I/O   #Y30OE78*/
         TM    PIO1,B'00100000'                                    1266
         BNO   @RF01266                                            1266
*         DO;                       /*                       #Y30OE78*/
*           IADONE=ON;              /* ERROR, THIS IS 2ND    #Y30OE78
*                                      ONE - QUIT            #Y30OE78*/
         OI    IADONE,B'10000000'                                  1268
*           RTNCODE=TERMERR;        /* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       1269
*           MSGIDEX=M548;           /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'0A'                                       1270
*           MSGTYPE=MTYPWTO;        /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1271
*           DDDK=DDDV;              /* SET DEVICE ADDR KEY   #Y30OE78*/
         MVI   DDDK,X'08'                                          1272
*           DDD=DEVPTR(DATA)->UCBNAME;/* PUT DEV ADDR IN     #Y30OE78*/
         SLR   @08,@08                                             1273
         ICM   @08,7,DEVPTR+12                                     1273
         MVC   DDD(3),UCBNAME(@08)                                 1273
*           JJJK=JOBLOP;            /* INDICATE JOBNAME LOP  #Y30OE78*/
         MVI   JJJK,X'8B'                                          1274
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARMS        #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1275
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1276
         BALR  @14,@15                                             1276
*           DDDK=SKIPV;             /* RESET DEV ADDR KEY    #Y30OE78*/
         MVI   DDDK,X'00'                                          1277
*           JJJK=SKIPV;             /* RESET JOBNAME KEY     #Y30OE78*/
         MVI   JJJK,X'00'                                          1278
*         END;                      /*                       #Y30OE78*/
*       ELSE                        /* IF 1ST I/O ERROR, GET #Y30OE78*/
*         DO;                       /* NEXT DISKETTE AND TRY #Y30OE78*/
         B     @RC01266                                            1280
@RF01266 DS    0H                                                  1281
*           PIO1=ON;                /* ONCE MORE             #Y30OE78*/
*           DKFEED=ON;              /*                       #Y30OE78*/
         OI    PIO1,B'00101000'                                    1282
*         END;                      /*                       #Y30OE78*/
*     ELSE                          /* IF NOT I/O ERROR,     #Y30OE78*/
*       DO;                         /* CHECK OTHER RTN CODES #Y30OE78*/
         B     @RC01265                                            1284
@RF01265 DS    0H                                                  1285
*         PIO1=OFF;                 /* RESET I/O ERROR SW    #Y30OE78*/
         NI    PIO1,B'11011111'                                    1285
*         IF SETDRTN1=R1GOOD×       /* IF GOOD RETURN OR     #Y30OE78*/
*             SETDRTN1=R1NOACC THEN /* DS NONACCESSIBLE,     #Y30OE78*/
         L     @08,DCBPTR                                          1286
         SLR   @03,@03                                             1286
         ICM   @03,7,DCBAMWKA+16(@08)                              1286
         CLI   SETDRTN1(@03),X'00'                                 1286
         BE    @RT01286                                            1286
         CLI   SETDRTN1(@03),X'04'                                 1286
         BNE   @RF01286                                            1286
@RT01286 DS    0H                                                  1287
*           IARECOV=OFF;            /* NO NEED FOR RECOVERY  #Y30OE78*/
         NI    IARECOV,B'10111111'                                 1287
*         ELSE                      /* CHECK OTHER PASSBACK  #Y30OE78*/
*           IF SETDRTN1=R1DLM THEN  /* IF DLM DSKT IN DRIVE  #Y30OE78*/
         B     @RC01286                                            1288
@RF01286 L     @08,DCBPTR                                          1288
         SLR   @03,@03                                             1288
         ICM   @03,7,DCBAMWKA+16(@08)                              1288
         CLI   SETDRTN1(@03),X'14'                                 1288
         BNE   @RF01288                                            1288
*             IARECOV=ON;           /* INDICATE RECOVERY     #Y30OE78*/
         OI    IARECOV,B'01000000'                                 1289
*           ELSE                    /* CHECK OTHER PASSBACK  #Y30OE78*/
*             DKFEED=ON;            /* INDICATE REFEED       #Y30OE78*/
         B     @RC01288                                            1290
@RF01288 OI    DKFEED,B'00001000'                                  1290
*       END;                        /*                       #Y30OE78*/
@RC01288 DS    0H                                                  1291
@RC01286 DS    0H                                                  1292
*   END;                            /*                       #Y30OE78*/
@RC01265 DS    0H                                                  1292
@DE01255 TM    DKFEED,B'00001000'                                  1292
         BO    @DL01255                                            1292
*   END NEWDSKT;                    /*                       #Y30OE78*/
@EL00013 DS    0H                                                  1293
@EF00013 DS    0H                                                  1293
@ER00013 L     @14,@SA00013                                        1293
         BR    @14                                                 1293
*                                                                  1294
*/********************************************************** #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINE NAME-                                            @Y30OE78*/
*/*    GETADS                                                @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* FUNCTION-                                                @Y30OE78*/
*/*    ISSUE DATA SET OPEN FOR AN ADS DESCRIBED IN DATA SET  @Y30OE78*/
*/*      NAME TABLE(DSNTAB) ENTRY AND ANALYZE PASSBACK       @Y30OE78*/
*/*    IF DATA SET NOT FOUND ON SPECIFIED VOLSER OR IF DATA  @Y30OE78*/
*/*      SET RELATED OPEN ERROR, MARK DSNTAB ENTRIES FOR     @Y30OE78*/
*/*      JOB AS NOT AVAILABLE                                @Y30OE78*/
*/*    IF DISKETTE RELATED ERROR SET FEED INDICATOR AND EXIT @Y30OE78*/
*/*    IF SUCCESSFUL OPEN, READ ADS FROM SYSDATA DEVICE AND  @Y30OE78*/
*/*      WRITE IT AS A NEW MEMBER IN THE PARTITIONED DATA    @Y30OE78*/
*/*      SET ON SYSUT3                                       @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* INPUT-                                                   @Y30OE78*/
*/*    DATA SET NAME TABLE(DSNTAB)                           @Y30OE78*/
*/*    DSNPTRJ POINTING TO DSNTAB ENTRY TO BE OPENED         @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* OUTPUT-                                                  @Y30OE78*/
*/*    UPDATED DSNTAB                                        @Y30OE78*/
*/*    CONDITIONALLY UPDATED SYSUT3 DATA SET                 @Y30OE78*/
*/*    POSSIBLE ERROR MESSAGES TO CONSOLE(IEB548,IEB554,     @Y30OE78*/
*/*      IEB555)                                             @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* ROUTINES CALLED-                                         @Y30OE78*/
*/*    IOEDKMSG                                              @Y30OE78*/
*/*    IOESDKTI                                              @Y30OE78*/
*/*    IOEDKGET                                              @Y30OE78*/
*/*    BPAMPUT                                               @Y30OE78*/
*/*                                                          @Y30OE78*/
*/* MACROS-                                                  @Y30OE78*/
*/*    WRITE                                                 @Y30OE78*/
*/*    CHECK                                                 @Y30OE78*/
*/*    STOW                                                  @Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1294
*GETADS:                            /* ATTEMPT TO SATISFY    #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /* A DSNTAB ENTRY        #Y30OE78*/
GETADS   ST    @14,@SA00014                                        1294
*   SETDOPCD=OPOPEN;                /* PREPARE PARAMETERS    #Y30OE78*/
         L     @08,DCBPTR                                          1295
         SLR   @04,@04                                             1295
         ICM   @04,7,DCBAMWKA+16(@08)                              1295
         MVI   SETDOPCD(@04),X'01'                                 1295
*   IF JCLVERF=ON THEN              /* TO ISSUE SETDISKT     #Y30OE78*/
         L     @08,DSNPTRJ                                         1296
         TM    JCLVERF(@08),B'01000000'                            1296
         BNO   @RF01296                                            1296
*     SETDVERF=ON;                  /* OPEN FOR ADS DESCRIBD #Y30OE78*/
         OI    SETDVERF(@04),B'10000000'                           1297
*   ELSE                            /* IN THE DSNTAB ENTRY   #Y30OE78*/
*     SETDVERF=OFF;                 /*                       #Y30OE78*/
         B     @RC01296                                            1298
@RF01296 L     @08,DCBPTR                                          1298
         SLR   @04,@04                                             1298
         ICM   @04,7,DCBAMWKA+16(@08)                              1298
         NI    SETDVERF(@04),B'01111111'                           1298
*   SETDDCB=ADDR(DATAEX);           /*                       #Y30OE78*/
@RC01296 L     @08,DCBPTR                                          1299
         SLR   @04,@04                                             1299
         ICM   @04,7,DCBAMWKA+16(@08)                              1299
         LA    @08,DATAEX                                          1299
         ST    @08,SETDDCB(,@04)                                   1299
*   SETDDSID=DSID;                  /*                       #Y30OE78*/
         L     @08,DSNPTRJ                                         1300
         MVC   SETDDSID(8,@04),DSID(@08)                           1300
*   ACBJOBID=JOBNM;                 /* MAKE JOBNAME AVAIL-   @Z30OE78
*                                      ABLE TO IOESDKTI      @Z30OE78*/
         MVC   ACBJOBID(8,@04),JOBNM(@08)                          1301
*   PARMPTR=ADDR(SETDLIST);         /*                       #Y30OE78*/
         LA    PARMPTR,SETDLIST(,@04)                              1302
*   CALL IOESDKTI;                  /* ISSUE SETDISKT OPEN   #Y30OE78*/
         L     @15,@CV00047                                        1303
         BALR  @14,@15                                             1303
*   IF SETDRTN1^=R1GOOD THEN        /* IF BAD RETURN CODE    #Y30OE78*/
         L     @08,DCBPTR                                          1304
         SLR   @04,@04                                             1304
         ICM   @04,7,DCBAMWKA+16(@08)                              1304
         CLI   SETDRTN1(@04),X'00'                                 1304
         BE    @RF01304                                            1304
*     IF SETDRTNC=R12DKTIO THEN     /* IF DSKT I/O ERROR,    #Y30OE78*/
         CLC   SETDRTNC(2,@04),@CH00509                            1305
         BNE   @RF01305                                            1305
*       IF PIO1=ON THEN             /* AND AN I/O OCCURRED   #Y30OE78*/
         TM    PIO1,B'00100000'                                    1306
         BNO   @RF01306                                            1306
*         DO;                       /* PREVIOUSLY,           #Y30OE78*/
*           IADONE=ON;              /* DONE WITH IA PROCESS  #Y30OE78*/
         OI    IADONE,B'10000000'                                  1308
*           RTNCODE=TERMERR;        /* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       1309
*           MSGIDEX=M548;           /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'0A'                                       1310
*           MSGTYPE=MTYPWTO;        /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1311
*           DDDK=DDDV;              /* SET DEV ADDR KEY      #Y30OE78*/
         MVI   DDDK,X'08'                                          1312
*           DDD=DEVPTR(DATA)->UCBNAME;/* GET DEV ADDR        #Y30OE78*/
         SLR   @08,@08                                             1313
         ICM   @08,7,DEVPTR+12                                     1313
         MVC   DDD(3),UCBNAME(@08)                                 1313
*           JJJK=JOBLOP;            /* INDICATE NO JOBNAME   #Y30OE78*/
         MVI   JJJK,X'8B'                                          1314
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARMS        #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1315
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1316
         BALR  @14,@15                                             1316
*           DDDK=SKIPV;             /* RESET DEV ADDR KEY    #Y30OE78*/
         MVI   DDDK,X'00'                                          1317
*           JJJK=SKIPV;             /* RESET JOBNAME KEY     #Y30OE78*/
         MVI   JJJK,X'00'                                          1318
*         END;                      /*                       #Y30OE78*/
*       ELSE                        /* THIS IS 1ST I/O ERROR #Y30OE78*/
*         DO;                       /*                       #Y30OE78*/
         B     @RC01306                                            1320
@RF01306 DS    0H                                                  1321
*           PIO1=ON;                /* SET ERROR SW          #Y30OE78*/
*           DKFEED=ON;              /*                       #Y30OE78*/
         OI    PIO1,B'00101000'                                    1322
*         END;                      /*                       #Y30OE78*/
*     ELSE                          /* CHECK OTHER ERRORS    #Y30OE78*/
*       DO;                         /*                       #Y30OE78*/
         B     @RC01305                                            1324
@RF01305 DS    0H                                                  1325
*         PIO1=OFF;                 /* RESET I/O ERROR SW    #Y30OE78*/
         NI    PIO1,B'11011111'                                    1325
*         IF SETDRTNC=R12DSNF×      /* IF DATA SET NOT       @Z30OE78*/
*             SETDRTNC=R12BLNKD THEN/* FOUND,                @Z30OE78*/
         L     @08,DCBPTR                                          1326
         SLR   @04,@04                                             1326
         ICM   @04,7,DCBAMWKA+16(@08)                              1326
         CLC   SETDRTNC(2,@04),@CH00513                            1326
         BE    @RT01326                                            1326
         CLC   SETDRTNC(2,@04),@CH00503                            1326
         BNE   @RF01326                                            1326
@RT01326 DS    0H                                                  1327
*           DO;                     /*                       @Z30OE78*/
*             IF K=1 THEN           /* IF IN VOLSER PASS     @Z30OE78*/
         CLC   K(4),@CF00061                                       1328
         BNE   @RF01328                                            1328
*               DO;                 /*                       @Z30OE78*/
*                 JCLMSG=ON;        /* INDICATE JCL MSG      @Z30OE78*/
         L     @08,DSNPTRJ                                         1330
         OI    JCLMSG(@08),B'00001000'                             1330
*                 ERRCODE=CDWSER;   /* SET MSG CODE          @Z30OE78*/
         MVC   ERRCODE(3,@08),@CC00335                             1331
*                 DSNPTRK=DSNPTRJ;  /* POINT TO ERROR ENTRY  @Z30OE78*/
         LR    DSNPTRK,@08                                         1332
*                 CALL JOBCLEAN;    /* MARK OTHER ENTRIES    @Z30OE78
*                                      IN SAME JOB           @Z30OE78*/
         BAL   @14,JOBCLEAN                                        1333
*               END;                /*                       @Z30OE78*/
*             IF SETDRTNC=R12BLNKD THEN/* IF DSKT HAS        @Z30OE78
*                                      NO DATA SETS,         @Z30OE78*/
@RF01328 L     @08,DCBPTR                                          1335
         SLR   @04,@04                                             1335
         ICM   @04,7,DCBAMWKA+16(@08)                              1335
         CLC   SETDRTNC(2,@04),@CH00503                            1335
         BNE   @RF01335                                            1335
*               DO;                 /*                       @Z30OE78*/
*                 DKFEED=ON;        /* GET NEW DISKETTE      @Z30OE78*/
         OI    DKFEED,B'00001000'                                  1337
*                 DO DSNPTRK=DSNPTRJ TO LASTADSN/* MARK      @Z30OE78*/
*                       BY LENGTH(DSNENTRY);/* OTHER REQUESTS      1338
*                                                            @Z30OE78
*                                      FOR SAME VOLUME WITH  @Z30OE78
*                                      ERROR INDICATOR       @Z30OE78*/
         L     DSNPTRK,DSNPTRJ                                     1338
         B     @DE01338                                            1338
@DL01338 DS    0H                                                  1339
*                   RFY                                            1339
*                     DSNENTRY BASED(DSNPTRK);/*             @Z30OE78*/
*                   IF JOBERR=OFF&  /* IF ENTRY HAS NOT      @Z30OE78*/
*                       ADSSAT=OFF& /* BEEN PROCESSED YET,   @Z30OE78*/
*                       VSERPRES=ON&/* AND SPECIFICALLY      @Z30OE78*/
*                       VOLSER=UCBVLSER THEN/* REQUESTS THIS @Z30OE78
*                                      VOLUME                @Z30OE78*/
         TM    VSERPRES(DSNPTRK),B'00100000'                       1340
         BNO   @RF01340                                            1340
         TM    JOBERR(DSNPTRK),B'00010100'                         1340
         BNZ   @RF01340                                            1340
         L     @08,UCBXTADR(,UCBPTR)                               1340
         CLC   VOLSER(6,DSNPTRK),UCBVLSER(@08)                     1340
         BNE   @RF01340                                            1340
*                     DO;           /*                       @Z30OE78*/
*                       ERRCODE=CDWSER;/* SET WRONG SER CODE @Z30OE78*/
         MVC   ERRCODE(3,DSNPTRK),@CC00335                         1342
*                       JCLMSG=ON;  /* INDICATE JCL MESSAGE  @Z30OE78*/
         OI    JCLMSG(DSNPTRK),B'00001000'                         1343
*                       CALL JOBCLEAN;/* MARK OTHER ENTRIES  @Z30OE78
*                                      FOR SAME JOB          @Z30OE78*/
         BAL   @14,JOBCLEAN                                        1344
*                     END;          /*                       @Z30OE78*/
*                   RFY                                            1346
*                     DSNENTRY BASED(DSNPTRJ);/*             @Z30OE78*/
@RF01340 DS    0H                                                  1347
*                 END;              /*                       @Z30OE78*/
         AH    DSNPTRK,@CH01204                                    1347
@DE01338 C     DSNPTRK,LASTADSN                                    1347
         BNH   @DL01338                                            1347
*               END;                /*                       @Z30OE78*/
*           END;                    /*                       @Z30OE78*/
*         ELSE                      /* DATA SET FOUND- ERROR @Z30OE78*/
*           DO;                     /*                       #Y30OE78*/
         B     @RC01326                                            1350
@RF01326 DS    0H                                                  1351
*             JCLMSG=ON;            /* INDICATE JCL COMMENT  #Y30OE78*/
         L     @08,DSNPTRJ                                         1351
         OI    JCLMSG(@08),B'00001000'                             1351
*             DSNPTRK=DSNPTRJ;      /* POINT TO ENTRY WITH   @Z30OE78
*                                      ERROR                 @Z30OE78*/
         LR    DSNPTRK,@08                                         1352
*             CALL JOBCLEAN;        /* MARK OTHER ENTRIES    @Z30OE78
*                                      FOR SAME JOB          @Z30OE78*/
         BAL   @14,JOBCLEAN                                        1353
*             IF SETDRTNC=R12SECDS THEN/* IF SECURE DS,      @Z30OE78*/
         L     @08,DCBPTR                                          1354
         SLR   @04,@04                                             1354
         ICM   @04,7,DCBAMWKA+16(@08)                              1354
         CLC   SETDRTNC(2,@04),@CH00505                            1354
         BNE   @RF01354                                            1354
*               ERRCODE=CDSECE;     /* SET SECURE DS CD      @Z30OE78*/
         L     @08,DSNPTRJ                                         1355
         MVC   ERRCODE(3,@08),@CC00325                             1355
*             ELSE                  /* IF NOT SECURE DS,     @Z30OE78*/
*               IF SETDRTNC=R12SECVL THEN/* IF SECURE VOL,   @Z30OE78*/
         B     @RC01354                                            1356
@RF01354 L     @08,DCBPTR                                          1356
         SLR   @04,@04                                             1356
         ICM   @04,7,DCBAMWKA+16(@08)                              1356
         CLC   SETDRTNC(2,@04),@CH00507                            1356
         BNE   @RF01356                                            1356
*                 DO;               /*                       @Z30OE78*/
*                   ERRCODE=CDSECV; /* SET SECURE VOL CODE   @Z30OE78*/
         L     @08,DSNPTRJ                                         1358
         MVC   ERRCODE(3,@08),@CC00327                             1358
*                   DKFEED=ON;      /* INDICATE DSKT FEED    @Z30OE78*/
         OI    DKFEED,B'00001000'                                  1359
*                   DO DSNPTRK=DSNPTRJ TO LASTADSN/* MARK    @Z30OE78*/
*                         BY LENGTH(DSNENTRY);/* OTHER REQUESTS    1360
*                                                            @Z30OE78
*                                      FOR SAME VOLUME WITH  @Z30OE78
*                                      ERROR INDICATOR       @Z30OE78*/
         LR    DSNPTRK,@08                                         1360
         B     @DE01360                                            1360
@DL01360 DS    0H                                                  1361
*                     RFY                                          1361
*                       DSNENTRY BASED(DSNPTRK);/*           @Z30OE78*/
*                     IF JOBERR=OFF&/* IF ENTRY HAS NOT      @Z30OE78*/
*                         ADSSAT=OFF&/* BEEN PROCESSED YET,  @Z30OE78*/
*                         VSERPRES=ON&/* AND SPECIFICALLY    @Z30OE78*/
*                         VOLSER=UCBVLSER THEN/* REQUESTS THIS     1362
*                                                            @Z30OE78
*                                      VOLUME                @Z30OE78*/
         TM    VSERPRES(DSNPTRK),B'00100000'                       1362
         BNO   @RF01362                                            1362
         TM    JOBERR(DSNPTRK),B'00010100'                         1362
         BNZ   @RF01362                                            1362
         L     @08,UCBXTADR(,UCBPTR)                               1362
         CLC   VOLSER(6,DSNPTRK),UCBVLSER(@08)                     1362
         BNE   @RF01362                                            1362
*                       DO;         /*                       @Z30OE78*/
*                         ERRCODE=CDSECV;/* SET SECURE VOL CODE    1364
*                                                            @Z30OE78*/
         MVC   ERRCODE(3,DSNPTRK),@CC00327                         1364
*                         JCLMSG=ON;/* INDICATE JCL MESSAGE  @Z30OE78*/
         OI    JCLMSG(DSNPTRK),B'00001000'                         1365
*                         CALL JOBCLEAN;/* MARK OTHER ENTRIES      1366
*                                                            @Z30OE78
*                                      FOR SAME JOB          @Z30OE78*/
         BAL   @14,JOBCLEAN                                        1366
*                       END;        /*                       @Z30OE78*/
*                     RFY                                          1368
*                       DSNENTRY BASED(DSNPTRJ);/*           @Z30OE78*/
@RF01362 DS    0H                                                  1369
*                   END;            /*                       @Z30OE78*/
         AH    DSNPTRK,@CH01204                                    1369
@DE01360 C     DSNPTRK,LASTADSN                                    1369
         BNH   @DL01360                                            1369
*                 END;              /*                       @Z30OE78*/
*               ELSE                /* IF NOT SECURE VOLUME  @Z30OE78*/
*                 IF SETDRTN1=R1IHDR1 THEN/* IF BAD HDR1,    #Y30OE78*/
         B     @RC01356                                            1371
@RF01356 L     @08,DCBPTR                                          1371
         SLR   @04,@04                                             1371
         ICM   @04,7,DCBAMWKA+16(@08)                              1371
         CLI   SETDRTN1(@04),X'0C'                                 1371
         BNE   @RF01371                                            1371
*                   ERRCODE=CDHDRE; /* SET CODE FOR HDR ERR  #Y30OE78*/
         L     @08,DSNPTRJ                                         1372
         MVC   ERRCODE(3,@08),@CC00329                             1372
*                 ELSE              /* I/O OR VOL SEQ ERROR  #Y30OE78*/
*                   IF SETDRTN1=R1SEQ THEN/* IF SEQ ERROR,   #Y30OE78*/
         B     @RC01371                                            1373
@RF01371 L     @08,DCBPTR                                          1373
         SLR   @04,@04                                             1373
         ICM   @04,7,DCBAMWKA+16(@08)                              1373
         CLI   SETDRTN1(@04),X'18'                                 1373
         BNE   @RF01373                                            1373
*                     ERRCODE=CDOSEQ;/* SET VOL SEQ CODE     #Y30OE78*/
         L     @08,DSNPTRJ                                         1374
         MVC   ERRCODE(3,@08),@CC00333                             1374
*                   ELSE            /* MUST BE AN I/O ERROR  #Y30OE78*/
*                     ERRCODE=CDPIO;/* SET I/O ERROR CODE    #Y30OE78*/
         B     @RC01373                                            1375
@RF01373 L     @08,DSNPTRJ                                         1375
         MVC   ERRCODE(3,@08),@CC00331                             1375
*           END;                    /*                       #Y30OE78*/
*       END;                        /*                       @Z30OE78*/
*   ELSE                            /* SETDISKT RETURN GOOD  #Y30OE78*/
*     DO;                           /*                       #Y30OE78*/
         B     @RC01304                                            1378
@RF01304 DS    0H                                                  1379
*       PIO1=OFF;                   /* RESET I/O ERROR SW    #Y30OE78*/
         NI    PIO1,B'11011111'                                    1379
*       IF SETDRTN2=R2LAST THEN     /* IF THIS IS LAST DATA  #Y30OE78
*                                      SET ON DSKT, SET      #Y30OE78*/
         L     @08,DCBPTR                                          1380
         SLR   @04,@04                                             1380
         ICM   @04,7,DCBAMWKA+16(@08)                              1380
         CLI   SETDRTN2(@04),X'04'                                 1380
         BNE   @RF01380                                            1380
*         DO;                       /*                       @Z30OE78*/
*           DKFEED=ON;              /* FEED INDICATOR        @Z30OE78*/
         OI    DKFEED,B'00001000'                                  1382
*           DO DSNPTRK=DSNPTRJ TO LASTADSN/* MARK            @Z30OE78*/
*                 BY LENGTH(DSNENTRY);/* OTHER REQUESTS      @Z30OE78
*                                      FOR SAME VOLUME WITH  @Z30OE78
*                                      ERROR INDICATOR       @Z30OE78*/
         L     DSNPTRK,DSNPTRJ                                     1383
         B     @DE01383                                            1383
@DL01383 DS    0H                                                  1384
*             RFY                                                  1384
*               DSNENTRY BASED(DSNPTRK);/*                   @Z30OE78*/
*             IF JOBERR=OFF&        /* IF ENTRY HAS NOT      @Z30OE78*/
*                 ADSSAT=OFF&       /* BEEN PROCESSED YET,   @Z30OE78*/
*                 VSERPRES=ON&      /* AND SPECIFICALLY      @Z30OE78*/
*                 VOLSER=UCBVLSER&  /* REQUESTS THIS         @Z30OE78
*                                      VOLUME FOR A          @Z30OE78*/
*                 DSID^=DSNPTRJ->DSID THEN/* DIFFERENT       @Z30OE78
*                                      DATA SET              @Z30OE78*/
         TM    VSERPRES(DSNPTRK),B'00100000'                       1385
         BNO   @RF01385                                            1385
         TM    JOBERR(DSNPTRK),B'00010100'                         1385
         BNZ   @RF01385                                            1385
         L     @08,UCBXTADR(,UCBPTR)                               1385
         CLC   VOLSER(6,DSNPTRK),UCBVLSER(@08)                     1385
         BNE   @RF01385                                            1385
         L     @08,DSNPTRJ                                         1385
         CLC   DSID(8,DSNPTRK),DSID(@08)                           1385
         BE    @RF01385                                            1385
*               DO;                 /*                       @Z30OE78*/
*                 ERRCODE=CDWSER;   /* SET WRONG SER CODE    @Z30OE78*/
         MVC   ERRCODE(3,DSNPTRK),@CC00335                         1387
*                 JCLMSG=ON;        /* INDICATE JCL MESSAGE  @Z30OE78*/
         OI    JCLMSG(DSNPTRK),B'00001000'                         1388
*                 CALL JOBCLEAN;    /* MARK OTHER ENTRIES    @Z30OE78
*                                      FOR SAME JOB          @Z30OE78*/
         BAL   @14,JOBCLEAN                                        1389
*               END;                /*                       @Z30OE78*/
*             RFY                                                  1391
*               DSNENTRY BASED(DSNPTRJ);/*                   @Z30OE78*/
@RF01385 DS    0H                                                  1392
*           END;                    /*                       @Z30OE78*/
         AH    DSNPTRK,@CH01204                                    1392
@DE01383 C     DSNPTRK,LASTADSN                                    1392
         BNH   @DL01383                                            1392
*         END;                      /*                       @Z30OE78*/
*                                                                  1393
*       /*************************************************************/
*       /*                                                           */
*       /* START SEGMENT - READ ADS                          @Z30OE78*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1394
*       DO I=1 TO 2;                /* PREPARE 2 BUFFERS     #Y30OE78*/
@RF01380 LA    I,1                                                 1394
@DL01394 DS    0H                                                  1395
*         BLKLEN=LENGTH(BDW);       /* INIT BLOCK LENGTH     #Y30OE78*/
         L     @08,BUFCBPTR                                        1395
         L     @03,BUFELPTR(,@08)                                  1395
         L     @15,BUFPTR(,@03)                                    1395
         MVC   BLKLEN(2,@15),@CH00056                              1395
*         WRIND=NOTWRIT;            /* INIT WRITTEN SWITCH   #Y30OE78*/
         MVC   WRIND(2,@15),@CH00193                               1396
*         BUFELPTR=BUFELNXT;        /* GET OTHER BUFFER      #Y30OE78*/
         L     @03,BUFELNXT(,@03)                                  1397
         ST    @03,BUFELPTR(,@08)                                  1397
*       END;                        /*                       #Y30OE78*/
         AH    I,@CH00061                                          1398
         CH    I,@CH00135                                          1398
         BNH   @DL01394                                            1398
*       RECPTR=ADDR(RECAREA);       /* POINT TO 1ST SLOT IN  #Y30OE78
*                                      FIRST BUFFER          #Y30OE78*/
         L     @08,BUFCBPTR                                        1399
         L     @04,BUFELPTR(,@08)                                  1399
         L     @04,BUFPTR(,@04)                                    1399
         LA    @04,RECAREA(,@04)                                   1399
         ST    @04,RECPTR(,@08)                                    1399
*       RDWLNA=ACBLRECL+LENGTH(RDWA);/* SET RECORD LENGTH DE-      1400
*                                                            #Y30OE78
*                                      TERMINED BY SDKT OPEN #Y30OE78*/
         L     @08,DCBPTR                                          1400
         SLR   @04,@04                                             1400
         ICM   @04,7,DCBAMWKA+16(@08)                              1400
         LA    @03,4                                               1400
         AH    @03,ACBLRECL(,@04)                                  1400
         STH   @03,RDWLNA                                          1400
*       DLMHIT=OFF;                 /* INIT DLM INDICATOR    #Y30OE78*/
         NI    DLMHIT,B'11101111'                                  1401
*       INEOF=OFF;                  /* RESET EOF SWITCH      #Y30OE78*/
*       INERR=OFF;                  /* RESET ERROR SWITCH    #Y30OE78*/
         NI    INEOF,B'11100111'                                   1403
*       PARMPTR=DCBPTR;             /* POINT TO DCB          #Y30OE78*/
         LR    PARMPTR,@08                                         1404
*       CALL IOEDKGET;              /* GET ADS RECORD        #Y30OE78*/
         L     @15,@CV00049                                        1405
         BALR  @14,@15                                             1405
*       IF RPLFDBK=EOVGET THEN      /* IF EOV OCCURRED,      #Y30OE78*/
         L     @08,DCBPTR                                          1406
         SLR   @04,@04                                             1406
         ICM   @04,7,DCBAMWKA+16(@08)                              1406
         CLC   RPLFDBK(3,@04),@CF00357+1                           1406
         BNE   @RF01406                                            1406
*         DKCHNGD=ON;               /* INDICATE DSKT CHANGE  #Y30OE78*/
         OI    DKCHNGD,B'00000100'                                 1407
*       DO WHILE INEOF=OFF&         /* PUT/GET RECORDS WHILE #Y30OE78*/
*             INERR=OFF&            /* NOT AT EOD AND NO     #Y30OE78*/
*             UT3SYN=OFF;           /* ERRORS HAVE OCCURRED  #Y30OE78*/
@RF01406 B     @DE01408                                            1408
@DL01408 DS    0H                                                  1409
*         IF RECA(1:LENGTH(DLM))=DLM THEN/* IF RECORD GOTTEN #Y30OE78*/
         L     @08,DSNPTRJ                                         1409
         CLC   RECA(2),DLM(@08)                                    1409
         BNE   @RF01409                                            1409
*           DO;                     /* IS DELIMITER,         #Y30OE78*/
*             INEOF=ON;             /* INDICATE EOD          #Y30OE78*/
         OI    INEOF,B'00010000'                                   1411
*             DLMHIT=ON;            /* INDICATE DLM HIT      #Y30OE78*/
         OI    DLMHIT,B'00010000'                                  1412
*           END;                    /*                       #Y30OE78*/
*         ELSE                      /* IF DLM VALUE NOT HIT  #Y30OE78*/
*           IF JCLALLOW=OFF&        /* CHECK FOR JCL RECORD  #Y30OE78*/
*               RECA(1:LENGTH(SLASHES))=SLASHES THEN/* AS    #Y30OE78
*                                      DELIMITER             #Y30OE78*/
         B     @RC01409                                            1414
@RF01409 L     @08,DSNPTRJ                                         1414
         TM    JCLALLOW(@08),B'10000000'                           1414
         BNZ   @RF01414                                            1414
         CLC   RECA(2),@CC00281                                    1414
         BNE   @RF01414                                            1414
*             DO;                   /*                       #Y30OE78*/
*               INEOF=ON;           /* INDICATE EOD          #Y30OE78*/
         OI    INEOF,B'00010000'                                   1416
*               DLMHIT=ON;          /* INDICATE DLM HIT      #Y30OE78*/
         OI    DLMHIT,B'00010000'                                  1417
*             END;                  /*                       #Y30OE78*/
*           ELSE                                                   1419
*             ;                     /*                       #Y30OE78*/
@RF01414 DS    0H                                                  1420
*         IF DLMHIT=OFF THEN        /* IF NOT DLM RECORD,    #Y30OE78*/
@RC01409 TM    DLMHIT,B'00010000'                                  1420
         BNZ   @RF01420                                            1420
*           DO;                     /*                       #Y30OE78*/
*             CALL BPAMPUT;         /* PUT RECORD TO UT3     #Y30OE78*/
         BAL   @14,BPAMPUT                                         1422
*             PARMPTR=DCBPTR;       /* POINT TO DCB          #Y30OE78*/
         L     PARMPTR,DCBPTR                                      1423
*             CALL IOEDKGET;        /* GET NEXT RECORD       #Y30OE78*/
         L     @15,@CV00049                                        1424
         BALR  @14,@15                                             1424
*             IF RPLFDBK=EOVGET THEN/* IF EOV OCCURRED,      #Y30OE78*/
         L     @08,DCBPTR                                          1425
         SLR   @04,@04                                             1425
         ICM   @04,7,DCBAMWKA+16(@08)                              1425
         CLC   RPLFDBK(3,@04),@CF00357+1                           1425
         BNE   @RF01425                                            1425
*               DKCHNGD=ON;         /* INDICATE DSKT CHANGE  #Y30OE78*/
         OI    DKCHNGD,B'00000100'                                 1426
*           END;                    /*                       #Y30OE78*/
@RF01425 DS    0H                                                  1428
*       END;                        /*                       #Y30OE78*/
@RF01420 DS    0H                                                  1428
@DE01408 TM    INEOF,B'00011001'                                   1428
         BZ    @DL01408                                            1428
*       IF UT3SYN=ON THEN           /* IF UT3 ERROR,         #Y30OE78*/
         TM    UT3SYN,B'00000001'                                  1429
         BNO   @RF01429                                            1429
*         DO;                       /*                       #Y30OE78*/
*           IADONE=ON;              /* INDICATE SHUTDOWN     #Y30OE78*/
         OI    IADONE,B'10000000'                                  1431
*           RTNCODE=TERMERR;        /* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       1432
*           MSGIDEX=M554;           /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'0C'                                       1433
*           MSGTYPE=MTYPWTO;        /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1434
*           DDNK=DDNV;              /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          1435
*           DDN=DDNAME(UT3);        /* GET DDNAME            #Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    1436
*           JJJK=JOBLOP;            /* DELETE JOBNAME        #Y30OE78*/
         MVI   JJJK,X'8B'                                          1437
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARMS        #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1438
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1439
         BALR  @14,@15                                             1439
*           DDNK=SKIPV;             /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          1440
*           JJJK=SKIPV;             /* RESET JOBNAME KEY     #Y30OE78*/
         MVI   JJJK,X'00'                                          1441
*         END;                      /*                       #Y30OE78*/
*       ELSE                        /* IF NO OUTPUT ERROR,   #Y30OE78*/
*         DO;                       /* FLUSH BUFFERS         #Y30OE78*/
         B     @RC01429                                            1443
@RF01429 DS    0H                                                  1444
*           IF BLKLEN>LENGTH(BDW) THEN/* IF DATA IN BUFFER,  #Y30OE78*/
         L     @08,BUFCBPTR                                        1444
         L     @08,BUFELPTR(,@08)                                  1444
         L     @04,BUFPTR(,@08)                                    1444
         LH    @03,BLKLEN(,@04)                                    1444
         CH    @03,@CH00056                                        1444
         BNH   @RF01444                                            1444
*             DO;                   /* WRITE IT              #Y30OE78*/
*               WRIND=ZERO;         /* INDICATE WRITE WAS    @Z30OE78
*                                      ISSUED TO BUFFER      @Z30OE78*/
         SLR   @03,@03                                             1446
         STH   @03,WRIND(,@04)                                     1446
*               PARMPTR=DECBPTR;    /* POINT TO DECB         #Y30OE78*/
         L     PARMPTR,DECBPTR(,@08)                               1447
*               BLKPTR=BUFPTR;      /* POINT TO BUFFER       #Y30OE78*/
         LR    BLKPTR,@04                                          1448
*               GEN REFS(PARMPTR,BLKPTR)/* WRITE LAST BUFFER #Y30OE78*/
*                   (WRITE (PARMPTR),SF,,(BLKPTR),MF=E);/*   #Y30OE78*/
         WRITE (PARMPTR),SF,,(BLKPTR),MF=E
*             END;                  /*                       #Y30OE78*/
*           DO I=1 TO 2;            /* WAIT FOR COMPLETION   #Y30OE78*/
@RF01444 LA    I,1                                                 1451
@DL01451 DS    0H                                                  1452
*             BUFELPTR=BUFELNXT;    /* GET OTHER BUFFER      #Y30OE78*/
         L     @08,BUFCBPTR                                        1452
         L     @03,BUFELPTR(,@08)                                  1452
         L     @03,BUFELNXT(,@03)                                  1452
         ST    @03,BUFELPTR(,@08)                                  1452
*             IF WRIND=ZERO THEN    /* IF BUFFER WAS WRITTEN #Y30OE78*/
         L     @08,BUFPTR(,@03)                                    1453
         ICM   @00,3,WRIND(@08)                                    1453
         BNZ   @RF01453                                            1453
*               DO;                 /*                       #Y30OE78*/
*                 PARMPTR=DECBPTR;  /* POINT TO DECB         #Y30OE78*/
         L     PARMPTR,DECBPTR(,@03)                               1455
*                 GEN REFS(PARMPTR) /* WAIT                  #Y30OE78*/
*                     (CHECK (PARMPTR));/*                   #Y30OE78*/
         CHECK (PARMPTR)
*               END;                /*                       #Y30OE78*/
*           END;                    /*                       #Y30OE78*/
@RF01453 AH    I,@CH00061                                          1458
         CH    I,@CH00135                                          1458
         BNH   @DL01451                                            1458
*           IF UT3SYN=ON THEN       /* IF UT3 ERROR DETECTED #Y30OE78*/
         TM    UT3SYN,B'00000001'                                  1459
         BNO   @RF01459                                            1459
*             DO;                   /* DURING BUFFER FLUSH,  #Y30OE78*/
*               IADONE=ON;          /* INDICATE SHUTDOWN     #Y30OE78*/
         OI    IADONE,B'10000000'                                  1461
*               RTNCODE=TERMERR;    /* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       1462
*               MSGIDEX=M554;       /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'0C'                                       1463
*               MSGTYPE=MTYPWTO;    /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1464
*               DDNK=DDNV;          /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          1465
*               DDN=DDNAME(UT3);    /* GET DDNAME            #Y30OE78*/
         MVC   DDN(8),DDNAME+36                                    1466
*               JJJK=JOBLOP;        /* DELETE JOBNAME        #Y30OE78*/
         MVI   JJJK,X'8B'                                          1467
*               PARMPTR=ADDR(MSGINT);/* POINT TO PARMS       #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1468
*               CALL IOEDKMSG;      /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1469
         BALR  @14,@15                                             1469
*               DDNK=SKIPV;         /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          1470
*               JJJK=SKIPV;         /* RESET JOBNAME KEY     #Y30OE78*/
         MVI   JJJK,X'00'                                          1471
*             END;                  /*                       #Y30OE78*/
*           ELSE                    /* IF GOOD FLUSH,        #Y30OE78*/
*             DO;                   /* STOW ADS              #Y30OE78*/
         B     @RC01459                                            1473
@RF01459 DS    0H                                                  1474
*               BLKPTR=ADDR(DSNENTRY);/* POINT TO DIRECTORY  #Y30OE78*/
         L     BLKPTR,DSNPTRJ                                      1474
*               RFY                                                1475
*                 RTNCDREG RSTD;    /* DATA IN DSNTAB        #Y30OE78*/
*               GEN REFS(UT3BPOUT,BLKPTR)/* STOW             #Y30OE78*/
*                   (STOW  UT3BPOUT,(BLKPTR));/*             #Y30OE78*/
         STOW  UT3BPOUT,(BLKPTR)
*               IF RTNCDREG^=ZERO THEN/* IF STOW ERROR       #Y30OE78*/
         LTR   RTNCDREG,RTNCDREG                                   1477
         BZ    @RF01477                                            1477
*                 DO;               /*                       #Y30OE78*/
*                   RFY                                            1479
*                     RTNCDREG UNRSTD;/*                     #Y30OE78*/
*                   IADONE=ON;      /* INDICATE SHUTDOWN     #Y30OE78*/
         OI    IADONE,B'10000000'                                  1480
*                   RTNCODE=TERMERR;/* SET RETURN CODE       #Y30OE78*/
         MVI   RTNCODE,X'08'                                       1481
*                   MSGIDEX=M555;   /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'12'                                       1482
*                   MSGTYPE=MTYPWTO;/* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1483
*                   PARMPTR=ADDR(MSGINT);/* POINT TO PARMS   #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1484
*                   CALL IOEDKMSG;  /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1485
         BALR  @14,@15                                             1485
*                 END;              /*                       #Y30OE78*/
*               ELSE                /* IF GOOD STOW          #Y30OE78*/
*                 IF DLMHIT=ON×     /* IF DLM HIT OR         #Y30OE78*/
*                     RPLFDBK=GOODEOD×/* GOOD EOD OCCURRED,  #ZA04466*/
*                     RPLFDBK=EOVEOD THEN/* EOV AND EOD OCCURRED   1487
*                                                            @ZA04466*/
         B     @RC01477                                            1487
@RF01477 TM    DLMHIT,B'00010000'                                  1487
         BO    @RT01487                                            1487
         L     @08,DCBPTR                                          1487
         SLR   @04,@04                                             1487
         ICM   @04,7,DCBAMWKA+16(@08)                              1487
         CLC   RPLFDBK(3,@04),@CF00363+1                           1487
         BE    @RT01487                                            1487
         CLC   RPLFDBK(3,@04),@CF00359+1                           1487
         BNE   @RF01487                                            1487
@RT01487 DS    0H                                                  1488
*                   DO;             /*                       #Y30OE78*/
*                     DSCNT=DSCNT-1;/* DECREMENT DS COUNT    #Y30OE78*/
         L     @08,DSCNT                                           1489
         BCTR  @08,0                                               1489
         ST    @08,DSCNT                                           1489
*                     ADSSAT=ON;    /* SET ADS SATISFIED     #Y30OE78*/
         L     @08,DSNPTRJ                                         1490
         OI    ADSSAT(@08),B'00000100'                             1490
*                   END;            /*                       #Y30OE78*/
*                 ELSE              /* IF SYSDATA SYNAD ERR  #Y30OE78*/
*                   DO;             /* OR EOD WITH DATA SET  #Y30OE78
*                                      CANCEL, MUST PUT ERR  #Y30OE78
*                                      CODE IN DSNTAB ENTRY  #Y30OE78
*                                      AND MARK OTHER EN-    #Y30OE78
*                                      TRIES FOR SAME JOB    #Y30OE78
*                                      WITH JOB ERROR IND    #Y30OE78*/
         B     @RC01487                                            1492
@RF01487 DS    0H                                                  1493
*                     RFY                                          1493
*                       DSNENTRY BASED(DSNPTRI);/*           #Y30OE78*/
*                     DO DSNPTRI=DSNPTRJ TO FRSTADSN/* GET TO FIRST
*                                                            #Y30OE78*/
*                           BY-LENGTH(DSNENTRY) WHILE/* DSNTAB ENTRY
*                                                            #Y30OE78*/
*                           (DSNPTRI-LENGTH(DSNENTRY))->JOBNO=JOBNO;
         L     DSNPTRI,DSNPTRJ                                     1494
         B     @DE01494                                            1494
@DL01494 LR    @08,DSNPTRI                                         1494
         AL    @08,@CF01677                                        1494
         CLC   JOBNO-1(4,@08),JOBNO(DSNPTRI)                       1494
         BNE   @DC01494                                            1494
*                                   /*                       #Y30OE78*/
*                     END;          /* FOR THIS JOB          #Y30OE78*/
         AH    DSNPTRI,@CH01601                                    1495
@DE01494 C     DSNPTRI,FRSTADSN                                    1495
         BNL   @DL01494                                            1495
@DC01494 DS    0H                                                  1496
*                     DO DSNPTRI=DSNPTRI TO LASTADSN/* MARK EACH   1496
*                                                            #Y30OE78*/
*                           BY LENGTH(DSNENTRY) WHILE/* ENTRY FOR JOB
*                                                            #Y30OE78*/
*                           JOBNO=DSNPTRJ->JOBNO;/*          #Y30OE78*/
         B     @DE01496                                            1496
@DL01496 L     @08,DSNPTRJ                                         1496
         CLC   JOBNO(4,DSNPTRI),JOBNO(@08)                         1496
         BNE   @DC01496                                            1496
*                       JOBERR=ON;  /* WITH ERROR INDICATOR  #Y30OE78*/
         OI    JOBERR(DSNPTRI),B'00010000'                         1497
*                       IF ADSSAT=OFF THEN/* IF DSCNT NOT DECREMNT 1498
*                                                            #Y30OE78*/
         TM    ADSSAT(DSNPTRI),B'00000100'                         1498
         BNZ   @RF01498                                            1498
*                         DSCNT=DSCNT-1;/* BEFORE, DO IT NOW #Y30OE78*/
         L     @08,DSCNT                                           1499
         BCTR  @08,0                                               1499
         ST    @08,DSCNT                                           1499
*                     END;          /*                       #Y30OE78*/
@RF01498 AH    DSNPTRI,@CH01204                                    1500
@DE01496 C     DSNPTRI,LASTADSN                                    1500
         BNH   @DL01496                                            1500
@DC01496 DS    0H                                                  1501
*                     RFY                                          1501
*                       DSNENTRY BASED(DSNPTRJ);/*           #Y30OE78*/
*                     JCLMSG=ON;    /* SET JCL COMMENT MSG   #Y30OE78
*                                      INDICATOR             #Y30OE78*/
         L     @08,DSNPTRJ                                         1502
         OI    JCLMSG(@08),B'00001000'                             1502
*                     IF INERR=ON THEN/* IF SYSDATA SYNAD ERR,     1503
*                                                            #Y30OE78*/
         TM    INERR,B'00001000'                                   1503
         BNO   @RF01503                                            1503
*                       DO;         /*                       #Y30OE78*/
*                         ERRCODE=CDPIOR;/* SET ERRCODE FOR MSG    1505
*                                                            #Y30OE78*/
         MVC   ERRCODE(3,@08),@CC00345                             1505
*                         IF RPLFDBK=DKTSYNAD THEN/* IF DSKT-RELATED
*                                                            #Y30OE78
*                                      I/O ERROR             #Y30OE78*/
         L     @08,DCBPTR                                          1506
         SLR   @04,@04                                             1506
         ICM   @04,7,DCBAMWKA+16(@08)                              1506
         CLC   RPLFDBK(3,@04),@CF00353+1                           1506
         BNE   @RF01506                                            1506
*                           DKFEED=ON;/* INDICATE FEED       #Y30OE78*/
         OI    DKFEED,B'00001000'                                  1507
*                       END;        /*                       #Y30OE78*/
*                     ELSE          /* IF BAD EOD EXIT       #Y30OE78*/
*                       IF RPLFDBK=DLMEOD THEN/* IF DLM DSKT HIT   1509
*                                      WHILE                 #Y30OE78*/
         B     @RC01503                                            1509
@RF01503 L     @08,DCBPTR                                          1509
         SLR   @04,@04                                             1509
         ICM   @04,7,DCBAMWKA+16(@08)                              1509
         CLC   RPLFDBK(3,@04),@CF00355+1                           1509
         BNE   @RF01509                                            1509
*                         DO;       /* READING DATA SET      #Y30OE78*/
*                           DKFEED=ON;/* INDICATE FEED       @ZA00792*/
*                           DKDLM=ON;/* INDICATE DLM HIT     #Y30OE78*/
         OI    DKFEED,B'00001010'                                  1512
*                           ERRCODE=CDDLM;/* SET ERROR CODE  #Y30OE78*/
         L     @08,DSNPTRJ                                         1513
         MVC   ERRCODE(3,@08),@CC00347                             1513
*                         END;      /*                       #Y30OE78*/
*                       ELSE        /* CHECK OTHER PASSBACK  #Y30OE78*/
*                         DO;       /*                       @ZA00792*/
         B     @RC01509                                            1515
@RF01509 DS    0H                                                  1516
*                           DKCHNGD=ON;/* INDICATE DISKETTE WAS    1516
*                                                            @ZA00792
*                                      CHANGED WHILE ATTEMPT @ZA00792
*                                      ING EOV               @ZA00792*/
         OI    DKCHNGD,B'00000100'                                 1516
*                           IF SETDRTN1=R1IVOL1 THEN/* IF BAD VOL1,
*                                                            #Y30OE78*/
         L     @08,DCBPTR                                          1517
         SLR   @04,@04                                             1517
         ICM   @04,7,DCBAMWKA+16(@08)                              1517
         CLI   SETDRTN1(@04),X'08'                                 1517
         BNE   @RF01517                                            1517
*                             ERRCODE=CDEVOL;/* SET BAD VOL1 CODE  1518
*                                                            #Y30OE78*/
         L     @08,DSNPTRJ                                         1518
         MVC   ERRCODE(3,@08),@CC00341                             1518
*                           ELSE    /* CHECK OTHER PASSBACK  #Y30OE78*/
*                             IF SETDRTN1=R1IHDR1 THEN/* IF INVALID
*                                      HDR1,                 #Y30OE78*/
         B     @RC01517                                            1519
@RF01517 L     @08,DCBPTR                                          1519
         SLR   @04,@04                                             1519
         ICM   @04,7,DCBAMWKA+16(@08)                              1519
         CLI   SETDRTN1(@04),X'0C'                                 1519
         BNE   @RF01519                                            1519
*                               ERRCODE=CDEHDR;/* SET BAD HDR CODE 1520
*                                                            #Y30OE78*/
         L     @08,DSNPTRJ                                         1520
         MVC   ERRCODE(3,@08),@CC00343                             1520
*                             ELSE  /* CHECK OTHER PASSBACK  #Y30OE78*/
*                               IF SETDRTN1=R1SEQ THEN/* IF OPERATOR
*                                      CANCEL                #Y30OE78*/
         B     @RC01519                                            1521
@RF01519 L     @08,DCBPTR                                          1521
         SLR   @04,@04                                             1521
         ICM   @04,7,DCBAMWKA+16(@08)                              1521
         CLI   SETDRTN1(@04),X'18'                                 1521
         BNE   @RF01521                                            1521
*                                 ERRCODE=CDSEQ;/* OF SEQUENCE ERROR,
*                                                            #Y30OE78
*                                      SET SEQ ERROR CODE    #Y30OE78*/
         L     @08,DSNPTRJ                                         1522
         MVC   ERRCODE(3,@08),@CC00349                             1522
*                               ELSE/* TREAT AS NONSPECIFIC  #Y30OE78*/
*                                 ERRCODE=CDEOV;/* SET ERROR CODE  1523
*                                                            #Y30OE78*/
         B     @RC01521                                            1523
@RF01521 L     @08,DSNPTRJ                                         1523
         MVC   ERRCODE(3,@08),@CC00339                             1523
*                         END;      /*                       #Y30OE78*/
@RC01521 DS    0H                                                  1524
@RC01519 DS    0H                                                  1524
@RC01517 DS    0H                                                  1525
*                   END;            /*                       #Y30OE78*/
@RC01509 DS    0H                                                  1525
@RC01503 DS    0H                                                  1526
*             END;                  /*                       #Y30OE78*/
@RC01487 DS    0H                                                  1526
@RC01477 DS    0H                                                  1527
*         END;                      /*                       #Y30OE78*/
*                                                                  1527
@RC01459 DS    0H                                                  1528
*       /*************************************************************/
*       /*                                                           */
*       /* END SEGMENT - READ ADS                            @Z30OE78*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1528
*       SETDOPCD=OPCLOSE;           /* SET UP FOR SETDISKT   #Y30OE78*/
@RC01429 L     @08,DCBPTR                                          1528
         SLR   @04,@04                                             1528
         ICM   @04,7,DCBAMWKA+16(@08)                              1528
         MVI   SETDOPCD(@04),X'03'                                 1528
*       PARMPTR=ADDR(SETDLIST);     /* CLOSE                 #Y30OE78*/
         LA    PARMPTR,SETDLIST(,@04)                              1529
*       CALL IOESDKTI;              /* OF ADS                #Y30OE78*/
         L     @15,@CV00047                                        1530
         BALR  @14,@15                                             1530
*     END;                          /*                       #Y30OE78*/
*   END GETADS;                     /*                       #Y30OE78*/
@EL00014 DS    0H                                                  1532
@EF00014 DS    0H                                                  1532
@ER00014 L     @14,@SA00014                                        1532
         BR    @14                                                 1532
*                                                                  1533
*/********************************************************** @Z30OE78*/
*/*                                                          @Z30OE78*/
*/* ROUTINE NAME-                                            @Z30OE78*/
*/*    JOBCLEAN                                              @Z30OE78*/
*/*                                                          @Z30OE78*/
*/* FUNCTION-                                                @Z30OE78*/
*/*    MARK ALL DSNTAB ENTRIES FOR A JOB TO INDICATE A JOB   @Z30OE78*/
*/*      ERROR HAS BEEN DETECTED                             @Z30OE78*/
*/*    IF DATA SET HAS NOT YET BEEN PROCESSED, DECREMENT     @Z30OE78*/
*/*      DATA SET COUNT SINCE NO FURTHER ATTEMPT WILL BE     @Z30OE78*/
*/*      MADE TO RETRIEVE IT                                 @Z30OE78*/
*/*                                                          @Z30OE78*/
*/* INPUT-                                                   @Z30OE78*/
*/*    DSNPTRK POINTING TO DSNTAB ENTRY FOR WHICH AN ERROR   @Z30OE78*/
*/*      OCCURRED                                            @Z30OE78*/
*/*    DATA SET NAME TABLE                                   @Z30OE78*/
*/*                                                          @Z30OE78*/
*/* OUTPUT-                                                  @Z30OE78*/
*/*    UPDATED DATA SET COUNT                                @Z30OE78*/
*/*    UPDATED DSNTAB                                        @Z30OE78*/
*/*                                                          @Z30OE78*/
*/* ROUTINES CALLED-                                         @Z30OE78*/
*/*    NONE                                                  @Z30OE78*/
*/*                                                          @Z30OE78*/
*/* MACROS-                                                  @Z30OE78*/
*/*    NONE                                                  @Z30OE78*/
*/*                                                          @Z30OE78*/
*/********************************************************** @Z30OE78*/
*                                                                  1533
*JOBCLEAN:                          /* SUBROUTINE TO CLEAN   @Z30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /* UP DSNTAB ENTRIES FOR @Z30OE78
*                                      A JOB THAT CANNOT RUN @Z30OE78*/
JOBCLEAN ST    @14,12(,@13)                                        1533
*   RFY                                                            1534
*     DSNENTRY BASED(DSNPTRI);      /*                       @Z30OE78*/
*   DO DSNPTRI=DSNPTRK TO FRSTADSN  /* GET TO FIRST          @Z30OE78*/
*         BY-LENGTH(DSNENTRY) WHILE /* DSNTAB ENTRY          @Z30OE78*/
*         (DSNPTRI-LENGTH(DSNENTRY))->JOBNO=/*               @Z30OE78*/
*         JOBNO;                    /*                       @Z30OE78*/
         LR    DSNPTRI,DSNPTRK                                     1535
         B     @DE01535                                            1535
@DL01535 LR    @08,DSNPTRI                                         1535
         AL    @08,@CF01677                                        1535
         CLC   JOBNO-1(4,@08),JOBNO(DSNPTRI)                       1535
         BNE   @DC01535                                            1535
*   END;                            /* FOR THIS JOB          @Z30OE78*/
         AH    DSNPTRI,@CH01601                                    1536
@DE01535 C     DSNPTRI,FRSTADSN                                    1536
         BNL   @DL01535                                            1536
@DC01535 DS    0H                                                  1537
*   DO DSNPTRI=DSNPTRI TO LASTADSN  /* MARK EACH             @Z30OE78*/
*         BY LENGTH(DSNENTRY) WHILE /* ENTRY FOR JOB         @Z30OE78*/
*         JOBNO=DSNPTRK->JOBNO;     /*                       @Z30OE78*/
         B     @DE01537                                            1537
@DL01537 CLC   JOBNO(4,DSNPTRI),JOBNO(DSNPTRK)                     1537
         BNE   @DC01537                                            1537
*     JOBERR=ON;                    /* WITH ERROR INDICATOR  @Z30OE78*/
         OI    JOBERR(DSNPTRI),B'00010000'                         1538
*     IF ADSSAT=OFF THEN            /* IF NOT ALREADY DONE   @Z30OE78*/
         TM    ADSSAT(DSNPTRI),B'00000100'                         1539
         BNZ   @RF01539                                            1539
*       DSCNT=DSCNT-1;              /* DECREMENT DS COUNT    @Z30OE78*/
         L     @08,DSCNT                                           1540
         BCTR  @08,0                                               1540
         ST    @08,DSCNT                                           1540
*   END;                            /*                       @Z30OE78*/
@RF01539 AH    DSNPTRI,@CH01204                                    1541
@DE01537 C     DSNPTRI,LASTADSN                                    1541
         BNH   @DL01537                                            1541
@DC01537 DS    0H                                                  1542
*   RFY                                                            1542
*     DSNENTRY BASED(DSNPTRJ);      /*                       @Z30OE78*/
*   END JOBCLEAN;                   /*                       @Z30OE78*/
@EL00015 DS    0H                                                  1543
@EF00015 DS    0H                                                  1543
@ER00015 L     @14,12(,@13)                                        1543
         BR    @14                                                 1543
*                                                                  1544
*/********************************************************** #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINE NAME-                                            #Y30OE78*/
*/*    PROCSTRM                                              #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* FUNCTION-                                                #Y30OE78*/
*/*    READ JCL RECORDS AND ADS'S FROM SYSUT3 FILE AND WRITE #Y30OE78*/
*/*    THEM TO THE SYSUT2(INTRDR) FILE WITH ADS RECORDS      #Y30OE78*/
*/*    MERGED INTO THE JOBSTREAM AS INSTREAM DATA.  THIS     #Y30OE78*/
*/*    ROUTINE PROVIDES DELIMITER RECORDS FOR THE MERGED     #Y30OE78*/
*/*    ASSOCIATED DATA SETS                                  #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* INPUT-                                                   #Y30OE78*/
*/*    RECORDS FROM JCL MEMBER OF THE SYSUT3 DATA SET        #Y30OE78*/
*/*      INCLUDING THE CONTROL INFORMATION APPENDED IN       #Y30OE78*/
*/*      EARLIER PARTS OF DISKETTE READER TO INDICATE        #Y30OE78*/
*/*      WHERE AN ADS IS TO BE MERGED IN THE JCL STREAM      #Y30OE78*/
*/*    RECORDS FROM ADS MEMBERS OF THE SYSUT3 DATA SET       #Y30OE78*/
*/*    DATA SET NAME TABLE(DSNTAB)                           #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* OUTPUT-                                                  #Y30OE78*/
*/*    STREAM OF RECORDS CREATED BY MERGING ADS RECORDS      #Y30OE78*/
*/*      INTO JCL STREAM IS PASSED TO SYSUT2(INTRDR) FILE    #Y30OE78*/
*/*    MESSAGE IEB554 IF ERROR OCCURS                        #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINES CALLED-                                         #Y30OE78*/
*/*    BPAMGET                                               #Y30OE78*/
*/*    PUTADS                                                #Y30OE78*/
*/*    IOEDKMSG                                              #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* MACROS-                                                  #Y30OE78*/
*/*    WRITE                                                 #Y30OE78*/
*/*    CHECK                                                 #Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1544
*PROCSTRM:                          /* ROUTINE TO READ JCL   #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /* & MERGE ADS           #Y30OE78*/
PROCSTRM ST    @14,@SA00016                                        1544
*   UT3IJEOD=OFF;                   /* INITIALIZE STATUS     #Y30OE78*/
*   UT3IJSYN=OFF;                   /* INDICATORS            #Y30OE78*/
         NI    UT3IJEOD,B'00111111'                                1546
*   CURJOBNM=BLANK;                 /* CLEAR CURRENT         @ZA00784
*                                      JOB NAME              @ZA00784*/
         MVI   CURJOBNM+1,C' '                                     1547
         MVC   CURJOBNM+2(6),CURJOBNM+1                            1547
         MVI   CURJOBNM,C' '                                       1547
*   DSNPTRJ=FRSTADSN;               /* POINT TO 1ST ADS ENT  #Y30OE78*/
         MVC   DSNPTRJ(4),FRSTADSN                                 1548
*   CALL BPAMGET;                   /* GET 1ST JCL RECORD    #Y30OE78*/
         BAL   @14,BPAMGET                                         1549
*   DO WHILE UT2SYNI=OFF&           /* PROCESS JCL TIL END   #Y30OE78*/
*         UT3IASYN=OFF&             /* OF                    #Y30OE78*/
*         UT3IJEOD=OFF&             /* INPUT                 #Y30OE78*/
*         UT3IJSYN=OFF;             /* OR ERROR ENCOUNTERED  #Y30OE78*/
         B     @DE01550                                            1550
@DL01550 DS    0H                                                  1551
*     IF RDWLNA>LENGTH(RECJCL)+LENGTH(RDWA) THEN/* IF CNTRL  #Y30OE78
*                                      INFO ON THIS RECORD,  #Y30OE78*/
         LH    @08,RDWLNA                                          1551
         CH    @08,@CH01598                                        1551
         BNH   @RF01551                                            1551
*       CNTRLSCN=ON;                /* SET INDICATOR         #Y30OE78*/
         OI    CNTRLSCN,B'00000001'                                1552
*     ELSE                          /* IF NOT PRESENT,       #Y30OE78*/
*       CNTRLSCN=OFF;               /* UNSET INDICATOR       #Y30OE78*/
         B     @RC01551                                            1553
@RF01551 NI    CNTRLSCN,B'11111110'                                1553
*     RDWLNA=LENGTH(RECJCL)+LENGTH(RDWA);/* SET RDW LENGTH   #Y30OE78*/
@RC01551 LA    @08,84                                              1554
         STH   @08,RDWLNA                                          1554
*     BDWLNA=RDWLNA+LENGTH(BDWA);   /*                       #Y30OE78*/
         AH    @08,@CH00056                                        1555
         STH   @08,BDWLNA                                          1555
*     GEN REFS(DECB7);                                             1556
*                                                         /*#Y30OE78*/
      WRITE DECB7,SF,MF=E                                     @Y30OE78
      CHECK DECB7                                             @Y30OE78
*     IF CNTRLSCN=ON&               /* IF JCL RECORD         #Y30OE78
*                                      HAS CNTRL INFO        #Y30OE78*/
*         UT2SYNI=OFF THEN          /* AND NO PUT ERROR,     #Y30OE78
*                                      PROCESS CNTRL INFO    #Y30OE78*/
         TM    CNTRLSCN,B'00000001'                                1557
         BNO   @RF01557                                            1557
         TM    UT2SYNI,B'00000010'                                 1557
         BNZ   @RF01557                                            1557
*       IF CJOB=ON THEN             /* IF JOB RECORD,        #Y30OE78*/
         TM    CJOB,B'00100000'                                    1558
         BNO   @RF01558                                            1558
*         DO;                       /* PROCESS JOB STMT      #Y30OE78*/
*           IF FIRST=ON THEN        /* IF FIRST RECORD       #Y30OE78*/
         TM    FIRST,B'00000100'                                   1560
         BNO   @RF01560                                            1560
*             DO;                   /* SAVE JOB NAME         #Y30OE78*/
*               DO I=NAMECOL TO NAMECOL+LENGTH(CURJOBNM)/*   #Y30OE78*/
*                     WHILE RECJCL(I)^=BLANK;/* FIND END OF  #Y30OE78*/
         LA    I,3                                                 1562
@DL01562 LA    @08,RECJCL-1(I)                                     1562
         CLI   0(@08),C' '                                         1562
         BE    @DC01562                                            1562
*               END;                /* JOBNAME               #Y30OE78*/
         AH    I,@CH00061                                          1563
         CH    I,@CH00033                                          1563
         BNH   @DL01562                                            1563
@DC01562 DS    0H                                                  1564
*               CURJOBNM=RECJCL(NAMECOL:I-1);/* SAVE JOBNM   #Y30OE78*/
         MVI   CURJOBNM+1,C' '                                     1564
         MVC   CURJOBNM+2(6),CURJOBNM+1                            1564
         LR    @08,I                                               1564
         SH    @08,@CH00056                                        1564
         EX    @08,@SM01666                                        1564
*             END;                  /*                       #Y30OE78*/
*           IF LAST=ON THEN         /* IF LAST OF JOB STMT,  #Y30OE78*/
@RF01560 TM    LAST,B'00000001'                                    1566
         BNO   @RF01566                                            1566
*             DO;                   /* CHECK IF SCAN CONTROL #Y30OE78*/
*               SCANPUT=OFF;        /* CARD SHOULD BE INSERT #Y30OE78*/
         NI    SCANPUT,B'11110111'                                 1568
*               RFY                                                1569
*                 DSNENTRY BASED(DSNPTRI);/*                 #Y30OE78*/
*               DO DSNPTRI=DSNPTRJ TO LASTADSN/* CHECK ALL   #Y30OE78*/
*                     BY LENGTH(DSNENTRY) WHILE/* DSNTAB     #Y30OE78*/
*                     CTRLJOB#=JOBNO&/* ENTRIES FOR JOB TO   #Y30OE78*/
*                     SCANPUT=OFF;  /* FIND IF JCL COMMENT   #Y30OE78
*                                      MSG TO BE WRITTEN     #Y30OE78*/
         L     DSNPTRI,DSNPTRJ                                     1570
         B     @DE01570                                            1570
@DL01570 CLC   CTRLJOB#(4),JOBNO(DSNPTRI)                          1570
         BNE   @DC01570                                            1570
         TM    SCANPUT,B'00001000'                                 1570
         BNZ   @DC01570                                            1570
*                 IF JCLMSG=ON THEN /* IF SUCH ENTRY IS      #Y30OE78*/
         TM    JCLMSG(DSNPTRI),B'00001000'                         1571
         BNO   @RF01571                                            1571
*                   DO;             /* FOUND, INSERT SCAN    #Y30OE78*/
*                     SCANPUT=ON;   /* INDICATE SCAN INSERT  #Y30OE78*/
         OI    SCANPUT,B'00001000'                                 1573
*                     RECJCL=SCANCARD;/* PUT SCAN IN BUFFER  #Y30OE78*/
         MVI   RECJCL+6,C' '                                       1574
         MVC   RECJCL+7(73),RECJCL+6                               1574
         MVC   RECJCL(6),SCANCARD                                  1574
*                     GEN REFS(DECB7);                             1575
*                                     /* WRITE RECORD       #Y30OE78*/
                      WRITE DECB7,SF,MF=E                     @Y30OE78
                      CHECK DECB7                             @Y30OE78
*                   END;            /*                       #Y30OE78*/
*               END;                /*                       #Y30OE78*/
@RF01571 AH    DSNPTRI,@CH01204                                    1577
@DE01570 C     DSNPTRI,LASTADSN                                    1577
         BNH   @DL01570                                            1577
@DC01570 DS    0H                                                  1578
*               RFY                                                1578
*                 DSNENTRY BASED(DSNPTRJ);/*                 #Y30OE78*/
*             END;                  /*                       #Y30OE78*/
*         END;                      /*                       #Y30OE78*/
*       ELSE                        /* NOT A JOB RECORD      #Y30OE78*/
*         CALL PUTADS;              /* PROCESS ADS           #Y30OE78*/
         B     @RC01558                                            1581
@RF01558 BAL   @14,PUTADS                                          1581
*     CALL BPAMGET;                 /* GET NEXT JCL RECORD   #Y30OE78*/
@RC01558 DS    0H                                                  1582
@RF01557 BAL   @14,BPAMGET                                         1582
*   END;                            /*                       #Y30OE78*/
@DE01550 TM    UT2SYNI,B'00000010'                                 1583
         BNZ   @DC01550                                            1583
         TM    UT3IASYN,B'01000000'                                1583
         BNZ   @DC01550                                            1583
         TM    UT3IJEOD,B'11000000'                                1583
         BZ    @DL01550                                            1583
@DC01550 DS    0H                                                  1584
*   IF(JOBDEL=ON×                   /* IF LAST JOB IN STREAM @Z30OE78*/
*       UT3IASYN=ON×                /* IS TO BE DELETED,     @Z30OE78*/
*       UT3IJSYN=ON)&               /* AND                   @Z30OE78*/
*       UT2SYNI=OFF THEN            /* NO OUTPUT ERRORS      @Z30OE78*/
         TM    JOBDEL,B'00100000'                                  1584
         BO    @GL00056                                            1584
         TM    UT3IASYN,B'01000000'                                1584
         BO    @GL00056                                            1584
         TM    UT3IJSYN,B'01000000'                                1584
         BNO   @RF01584                                            1584
@GL00056 TM    UT2SYNI,B'00000010'                                 1584
         BNZ   @RF01584                                            1584
*     DO;                           /*                       @Z30OE78*/
*       RECJCL=DELCARD;             /* PUT DELETE CARD IN    @Z30OE78
*                                      BUFFER                @Z30OE78*/
         MVI   RECJCL+5,C' '                                       1586
         MVC   RECJCL+6(74),RECJCL+5                               1586
         MVC   RECJCL(5),DELCARD                                   1586
*       RDWLNA=LENGTH(RECJCL)+      /* SET RECORD LENGTH     @Z30OE78*/
*           LENGTH(RDWA);           /*                       @Z30OE78*/
         LA    @08,84                                              1587
         STH   @08,RDWLNA                                          1587
*       BDWLNA=RDWLNA+LENGTH(BDWA); /* AND BLOCK LENGTH      @Z30OE78*/
         AH    @08,@CH00056                                        1588
         STH   @08,BDWLNA                                          1588
*       GEN REFS(DECB7);                                           1589
*                                  /* WRITE CONTROL RECORD  @Z30OE78*/
        WRITE DECB7,SF,MF=E                                   @Z30OE78
        CHECK DECB7                                           @Z30OE78
*     END;                          /*                       @Z30OE78*/
*   IF UT2SYNI=ON×                  /* IF I/O ERRORS         #Y30OE78*/
*       UT3IASYN=ON×                /* DETECTED,             #Y30OE78*/
*       UT3IJSYN=ON THEN            /* WRITE DIAGNOSTIC      #Y30OE78*/
@RF01584 TM    UT2SYNI,B'00000010'                                 1591
         BO    @RT01591                                            1591
         TM    UT3IASYN,B'01000000'                                1591
         BO    @RT01591                                            1591
         TM    UT3IJSYN,B'01000000'                                1591
         BNO   @RF01591                                            1591
@RT01591 DS    0H                                                  1592
*     DO;                           /* MESSAGE               #Y30OE78*/
*       RTNCODE=PARTERR;            /* SET RETURN CODE       @Z30OE78*/
         MVI   RTNCODE,X'04'                                       1593
*       MSGIDEX=M554;               /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'0C'                                       1594
*       MSGTYPE=MTYPWTO;            /* INDICATE WTO          #Y30OE78*/
         MVI   MSGTYPE,X'01'                                       1595
*       DDNK=DDNV;                  /* SET DDNAME KEY        #Y30OE78*/
         MVI   DDNK,X'07'                                          1596
*       IF UT2SYNI=ON THEN          /* PUT CORRECT DDNAME    #Y30OE78*/
         TM    UT2SYNI,B'00000010'                                 1597
         BNO   @RF01597                                            1597
*         DDN=DDNAME(UT2);          /* IN MESSAGE            #Y30OE78*/
         MVC   DDN(8),DDNAME+24                                    1598
*       ELSE                        /* TEXT                  #Y30OE78*/
*         DDN=DDNAME(UT3);          /*                       #Y30OE78*/
         B     @RC01597                                            1599
@RF01597 MVC   DDN(8),DDNAME+36                                    1599
*       JJJK=JJJV;                  /* SET JOBNAME KEY       #Y30OE78*/
@RC01597 MVI   JJJK,X'0B'                                          1600
*       JJJ=CURJOBNM;               /* SET JOBNAME IN TEXT   #Y30OE78*/
         MVC   JJJ(8),CURJOBNM                                     1601
*       PARMPTR=ADDR(MSGINT);       /* POINT TO PARMS        #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1602
*       CALL IOEDKMSG;              /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1603
         BALR  @14,@15                                             1603
*       DDNK=SKIPV;                 /* RESET DDNAME KEY      #Y30OE78*/
         MVI   DDNK,X'00'                                          1604
*       JJJK=SKIPV;                 /* RESET JOBNAME KEY     #Y30OE78*/
         MVI   JJJK,X'00'                                          1605
*     END;                          /*                       #Y30OE78*/
*   END PROCSTRM;                   /*                       #Y30OE78*/
@EL00016 DS    0H                                                  1607
@EF00016 DS    0H                                                  1607
@ER00016 L     @14,@SA00016                                        1607
         BR    @14                                                 1607
*                                                                  1608
*/********************************************************** #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINE NAME-                                            #Y30OE78*/
*/*    PUTADS                                                #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* FUNCTION-                                                #Y30OE78*/
*/*    WRITE RECORDS OF ADS TO SYSUT2(INTRDR) FILE IF ADS'S  #Y30OE78*/
*/*      FOR THE JOB WERE RETRIEVED SUCCESSFULLY             #Y30OE78*/
*/*    WRITE JCL COMMENT MESSAGE IEB551 TO SYSUT2(INTRDR)    #Y30OE78*/
*/*      FILE IF ADS WAS NOT RETRIEVED BECAUSE OF DISKETTE   #Y30OE78*/
*/*      READER-DETECTED ERROR                               #Y30OE78*/
*/*    WRITE ADS DELIMITER RECORD TO SYSUT2(INTRDR) FILE     #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* INPUT-                                                   #Y30OE78*/
*/*    CONTROL INFORMATION ON JCL RECORD INDICATING ADS IS   #Y30OE78*/
*/*      TO BE INSERTED AT THIS POINT IN JCL STREAM          #Y30OE78*/
*/*    DSNTAB ENTRY CORRESPONDING TO CONTROL INFORMATION     #Y30OE78*/
*/*      NUMBER                                              #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* OUTPUT-                                                  #Y30OE78*/
*/*    ADS RECORDS, MESSAGE IEB551 AND DATA DELIMITER        #Y30OE78*/
*/*      RECORDS WRITTEN TO SYSUT2(INTRDR) FILE              #Y30OE78*/
*/*    DSNPTRJ UPDATED TO POINT TO NEXT DSNTAB ENTRY         #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINES CALLED-                                         #Y30OE78*/
*/*    IOEDKMSG                                              #Y30OE78*/
*/*    BPAMGET                                               #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* MACROS-                                                  #Y30OE78*/
*/*    WRITE                                                 #Y30OE78*/
*/*    CHECK                                                 #Y30OE78*/
*/*    FIND                                                  #Y30OE78*/
*/*    READ - BUFFER INITIALIZE                              #Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1608
*PUTADS:                            /* PROCESS AN ADS WHILE  #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /* MERGING ADS INTO JCL  #Y30OE78*/
PUTADS   ST    @14,@SA00017                                        1608
*   IF JOBERR=ON THEN               /* IF JOB ERROR ,DATA    #Y30OE78*/
         L     @08,DSNPTRJ                                         1609
         TM    JOBERR(@08),B'00010000'                             1609
         BNO   @RF01609                                            1609
*     DO;                           /* WAS NOT RETRIEVED     #Y30OE78*/
*       RECJCL=DLMCARD;             /* GET DLM RECORD IMAGE  #Y30OE78*/
         MVC   RECJCL(80),DLMCARD                                  1611
*       RECJCL(1:2)=DLM;            /* GET DELIMITER FOR DS  #Y30OE78*/
         MVC   RECJCL(2),DLM(@08)                                  1612
*       GEN REFS(DECB7);                                           1613
*                                  /* WRITE DELIMITER       #Y30OE78*/
        WRITE DECB7,SF,MF=E                                   @Y30OE78
        CHECK DECB7                                           @Y30OE78
*       IF JCLMSG=ON&               /* IF JCL COMMENT MSG    #Y30OE78
*                                      IS TO BE WRITTEN AND  #Y30OE78*/
*           UT2SYNI=OFF THEN        /* NO ERROR HAS OCCURRED #Y30OE78*/
         L     @08,DSNPTRJ                                         1614
         TM    JCLMSG(@08),B'00001000'                             1614
         BNO   @RF01614                                            1614
         TM    UT2SYNI,B'00000010'                                 1614
         BNZ   @RF01614                                            1614
*         DO;                       /*                       #Y30OE78*/
*           MSGIDEX=M551;           /* SET MSG INDEX         #Y30OE78*/
         MVI   MSGIDEX,X'0B'                                       1616
*           MSGTYPE=MTYPPUT;        /* INDICATE WRITE/CHECK  #Y30OE78*/
         MVI   MSGTYPE,X'03'                                       1617
*           DDDK=CCCV;              /* SET MSG CODE KEY      #Y30OE78*/
         MVI   DDDK,X'0D'                                          1618
*           DDD=ERRCODE;            /* SET MSG CODE          #Y30OE78*/
         MVC   DDD(3),ERRCODE(@08)                                 1619
*           PARMPTR=ADDR(MSGINT);   /* POINT TO PARMS        #Y30OE78*/
         LA    PARMPTR,MSGINT                                      1620
*           CALL IOEDKMSG;          /* HAVE MSG WRITTEN      #Y30OE78*/
         L     @15,@CV00048                                        1621
         BALR  @14,@15                                             1621
*           DDDK=SKIPV;             /* RESET CODE KEY        #Y30OE78*/
         MVI   DDDK,X'00'                                          1622
*         END;                      /*                       #Y30OE78*/
*     END;                          /*                       #Y30OE78*/
*   ELSE                            /* ADS WAS SUCCESSFULLY  #Y30OE78*/
*     DO;                           /* RETRIEVED, PUT IT     #Y30OE78*/
         B     @RC01609                                            1625
@RF01609 DS    0H                                                  1626
*       BUFCBPTR=ADDR(BUFCB2);      /* POINT TO BUFFER CNTRL #Y30OE78
*                                      BLOCK FOR ADS READ    #Y30OE78*/
         LA    @08,BUFCB2                                          1626
         ST    @08,BUFCBPTR                                        1626
*       UT3IAEOD=OFF;               /* RESET STATUS SWITCHES #Y30OE78*/
*       UT3IASYN=OFF;               /*                       #Y30OE78*/
         NI    UT3IAEOD,B'00111111'                                1628
*       DO I=1 TO 2;                /* RESET                 #Y30OE78*/
         LA    I,1                                                 1629
@DL01629 DS    0H                                                  1630
*         BLKLEN=LENGTH(BDW);       /* BUFFERS FOR NEW DS    #Y30OE78*/
         L     @08,BUFCBPTR                                        1630
         L     @05,BUFELPTR(,@08)                                  1630
         L     @03,BUFPTR(,@05)                                    1630
         MVC   BLKLEN(2,@03),@CH00056                              1630
*         BUFELPTR=BUFELNXT;        /* GET OTHER BUFFER      #Y30OE78*/
         L     @05,BUFELNXT(,@05)                                  1631
         ST    @05,BUFELPTR(,@08)                                  1631
*       END;                        /*                       #Y30OE78*/
         AH    I,@CH00061                                          1632
         CH    I,@CH00135                                          1632
         BNH   @DL01629                                            1632
*       BLKPTR=ADDR(TTR0);          /* POINT TO FIND LIST    #Y30OE78*/
         L     BLKPTR,DSNPTRJ                                      1633
         LA    BLKPTR,TTR0(,BLKPTR)                                1633
*       GEN REFS(UT3BPINA,BLKPTR)   /* DO FIND FOR MEMBER    #Y30OE78*/
*           (FIND  UT3BPINA,(BLKPTR),C);/*                   #Y30OE78*/
         FIND  UT3BPINA,(BLKPTR),C
*       PARMPTR=DECBPTR;            /* GET PARMS FOR 1ST     #Y30OE78*/
         L     @08,BUFCBPTR                                        1635
         L     @08,BUFELPTR(,@08)                                  1635
         L     PARMPTR,DECBPTR(,@08)                               1635
*       BLKPTR=BUFPTR;              /* READ-BUFFER PRIME     #Y30OE78*/
         L     BLKPTR,BUFPTR(,@08)                                 1636
*       GEN REFS(PARMPTR,BLKPTR)    /* ISSUE 1ST READ        #Y30OE78*/
*           (READ  (PARMPTR),SF,,(BLKPTR),MF=E);/*           #Y30OE78*/
         READ  (PARMPTR),SF,,(BLKPTR),MF=E
*       BUFELPTR=BUFELNXT;          /* POINT TO OTHER BUFFER #Y30OE78
*                                      SO 1ST BPAMGET WILL   #Y30OE78
*                                      CAUSE BUFFER SWITCH   #Y30OE78
*                                      AND SET RECPTR        #Y30OE78*/
         L     @08,BUFCBPTR                                        1638
         L     @03,BUFELPTR(,@08)                                  1638
         L     @03,BUFELNXT(,@03)                                  1638
         ST    @03,BUFELPTR(,@08)                                  1638
*       CALL BPAMGET;               /* GET 1ST RECORD        #Y30OE78*/
         BAL   @14,BPAMGET                                         1639
*       DO WHILE UT3IAEOD=OFF&      /* WHILE NOT AT EOD AND  #Y30OE78*/
*             UT3IASYN=OFF&         /* NO SYNAD ERRORS,      #Y30OE78*/
*             UT2SYNI=OFF;          /*                       #Y30OE78*/
         B     @DE01640                                            1640
@DL01640 DS    0H                                                  1641
*         BDWLNA=RDWLNA+LENGTH(BDWA);/* SET BDW LENGTH       #Y30OE78*/
         LA    @08,4                                               1641
         AH    @08,RDWLNA                                          1641
         STH   @08,BDWLNA                                          1641
*         GEN REFS(DECB7);                                         1642
*                                  /* WRITE A RECORD        #Y30OE78*/
          WRITE DECB7,SF,MF=E                                 @Y30OE78
          CHECK DECB7                                         @Y30OE78
*         CALL BPAMGET;             /* GET NEXT RECORD       #Y30OE78*/
         BAL   @14,BPAMGET                                         1643
*       END;                        /*                       #Y30OE78*/
@DE01640 TM    UT3IAEOD,B'11000000'                                1644
         BNZ   @DC01640                                            1644
         TM    UT2SYNI,B'00000010'                                 1644
         BZ    @DL01640                                            1644
@DC01640 DS    0H                                                  1645
*       IF UT2SYNI=OFF THEN         /* IF NO OUTPUT ERROR,   #Y30OE78*/
         TM    UT2SYNI,B'00000010'                                 1645
         BNZ   @RF01645                                            1645
*         DO;                       /* WRITE DELIMITER       #Y30OE78*/
*           RECA=DLMCARD;           /* GET DLM RECORD IMAGE  #Y30OE78*/
         MVI   RECA+80,C' '                                        1647
         MVC   RECA+81(47),RECA+80                                 1647
         MVC   RECA(80),DLMCARD                                    1647
*           RECA(1:2)=DLM;          /* GET DLM FOR DS        #Y30OE78*/
         L     @08,DSNPTRJ                                         1648
         MVC   RECA(2),DLM(@08)                                    1648
*           RDWLNA=LENGTH(RECJCL)+LENGTH(RDWA);/* SET RDW    #Y30OE78*/
         LA    @08,84                                              1649
         STH   @08,RDWLNA                                          1649
*           BDWLNA=RDWLNA+LENGTH(BDWA);/* SET BDW LENGTH     #Y30OE78*/
         AH    @08,@CH00056                                        1650
         STH   @08,BDWLNA                                          1650
*           GEN REFS(DECB7);                                       1651
*                                  /* WRITE DLM RECORD      #Y30OE78*/
            WRITE DECB7,SF,MF=E                               @Y30OE78
            CHECK DECB7                                       @Y30OE78
*         END;                      /*                       #Y30OE78*/
*       BUFCBPTR=ADDR(BUFCB1);      /* RESET BUFFER CNTRL    #Y30OE78
*                                      FOR JCL READING       #Y30OE78*/
@RF01645 LA    @08,BUFCB1                                          1653
         ST    @08,BUFCBPTR                                        1653
*     END;                          /*                       #Y30OE78*/
*   DSNPTRJ=DSNPTRJ+LENGTH(DSNENTRY);/* BUMP TO NEXT ENTRY   #Y30OE78
*                                      IN DSNTAB             #Y30OE78*/
@RC01609 LA    @08,40                                              1655
         AL    @08,DSNPTRJ                                         1655
         ST    @08,DSNPTRJ                                         1655
*   END PUTADS;                     /*                       #Y30OE78*/
@EL00017 DS    0H                                                  1656
@EF00017 DS    0H                                                  1656
@ER00017 L     @14,@SA00017                                        1656
         BR    @14                                                 1656
*                                                                  1657
*/********************************************************** #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINE NAME-                                            #Y30OE78*/
*/*    BPAMGET                                               #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* FUNCTION-                                                #Y30OE78*/
*/*    PASSES ONE LOGICAL RECORD FROM VARIABLE BLOCKED BPAM  #Y30OE78*/
*/*      SYSUT3 FILE TO CALLERS RECORD WORK AREA             #Y30OE78*/
*/*    DOES DEBLOCKING AND ISSUES I/O REQUESTS TO KEEP       #Y30OE78*/
*/*      BUFFERS FULL                                        #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* INPUT-                                                   #Y30OE78*/
*/*    OPENED DCB FOR SYSUT3 FILE                            #Y30OE78*/
*/*    FIRST BUFFER FILLED BEFORE FIRST CALL OF THIS ROUTINE #Y30OE78*/
*/*    BUFCBPTR POINTING TO AN INTERNALLY CONSTRUCTED        #Y30OE78*/
*/*      BUFFER CONTROL BLOCK                                #Y30OE78*/
*/*    BUFFER ELEMENTS(BUFEL) INITIALIZED FOR EACH BUFFER    #Y30OE78*/
*/*      TO BE USED                                          #Y30OE78*/
*/*    BLOCKS OF DATA FROM SYSUT3 FILE                       #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* OUTPUT-                                                  #Y30OE78*/
*/*    A LOGICAL RECORD PLACED IN RECORD WORK AREA(RWORK)    #Y30OE78*/
*/*    STATUS SWITCHES INDICATING ERROR IF ONE OCCURS        #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* ROUTINES CALLED-                                         #Y30OE78*/
*/*    NONE                                                  #Y30OE78*/
*/*                                                          #Y30OE78*/
*/* MACROS-                                                  #Y30OE78*/
*/*    READ                                                  #Y30OE78*/
*/*    CHECK                                                 #Y30OE78*/
*/*                                                          #Y30OE78*/
*/*********************************************************  #Y30OE78*/
*                                                                  1657
*BPAMGET:                           /* BPAM BLOCKING ROUTINE #Y30OE78*/
*   PROC OPTIONS(SAVE(RTNREG));     /* FOR INPUT             @ZA00784*/
BPAMGET  ST    @14,@SA00018                                        1657
*   IF BLKLEN=LENGTH(BDW) THEN      /* IF BLOCK IS EMPTY, DO #Y30OE78*/
         L     @08,BUFCBPTR                                        1658
         L     @08,BUFELPTR(,@08)                                  1658
         L     @03,BUFPTR(,@08)                                    1658
         CLC   BLKLEN(2,@03),@CH00056                              1658
         BNE   @RF01658                                            1658
*     DO;                           /* END-OF-BLOCK PROCESS  #Y30OE78*/
*       PARMPTR=DECBPTR;            /* GET ADDR OF DECB      #Y30OE78*/
         L     PARMPTR,DECBPTR(,@08)                               1660
*       BLKPTR=BUFPTR;              /* GET ADDR OF BUFFER    #Y30OE78*/
         LR    BLKPTR,@03                                          1661
*       GEN REFS(PARMPTR,BLKPTR)    /* READ NEXT BLOCK OF    #Y30OE78*/
*           (READ  (PARMPTR),SF,,(BLKPTR),MF=E);/* DATA      #Y30OE78*/
         READ  (PARMPTR),SF,,(BLKPTR),MF=E
*       BUFELPTR=BUFELNXT;          /* GET OTHER BUFFER      #Y30OE78*/
         L     @08,BUFCBPTR                                        1663
         L     @03,BUFELPTR(,@08)                                  1663
         L     @03,BUFELNXT(,@03)                                  1663
         ST    @03,BUFELPTR(,@08)                                  1663
*       RECPTR=ADDR(RECAREA);       /* POINT TO 1ST RECORD   #Y30OE78
*                                      IN NEW BUFFER         #Y30OE78*/
         L     @15,BUFPTR(,@03)                                    1664
         LA    @00,RECAREA(,@15)                                   1664
         ST    @00,RECPTR(,@08)                                    1664
*       PARMPTR=DECBPTR;            /* GET DECB ADDRESS      #Y30OE78*/
         L     PARMPTR,DECBPTR(,@03)                               1665
*       GEN REFS(PARMPTR)           /* WAIT FOR COMPLETION   #Y30OE78*/
*           (CHECK (PARMPTR));      /* OF READ ON NEW BUFFER #Y30OE78*/
         CHECK (PARMPTR)
*       GO TO BPINCHK;              /* BRANCH PAST EODAD     #Y30OE78
*                                      CODE                  #Y30OE78*/
         B     BPINCHK                                             1667
*UT3EOD:                                                           1668
*       EODHIT=ON;                  /* SET EOD INDICATOR     #Y30OE78*/
UT3EOD   L     @08,BUFCBPTR                                        1668
         OI    EODHIT(@08),B'10000000'                             1668
*BPINCHK:                           /* LABEL TO BYPASS EODAD #Y30OE78*/
*     END;                          /*                       #Y30OE78*/
BPINCHK  DS    0H                                                  1670
*   IF EODHIT=OFF&                  /* IF NOT AT EOD         #Y30OE78*/
*       SYNHIT=OFF THEN             /* AND NO ERROR,         #Y30OE78*/
@RF01658 L     @08,BUFCBPTR                                        1670
         TM    EODHIT(@08),B'11000000'                             1670
         BNZ   @RF01670                                            1670
*     DO;                           /* MOVE A DATA RECORD    #Y30OE78*/
*       RECLEN=RECLENG;             /* GET RECORD LENGTH     #Y30OE78*/
         L     @15,RECPTR(,@08)                                    1672
         SLR   RECLEN,RECLEN                                       1672
         ICM   RECLEN,3,RECLENG(@15)                               1672
*       RWORK(1:RECLEN)=SLOT(1:RECLEN);/*                    #Y30OE78*/
         LR    @14,RECLEN                                          1673
         BCTR  @14,0                                               1673
         EX    @14,@SM01678                                        1673
*       BLKLEN=BLKLEN-RECLEN;       /* DECREMENT BLOCK LENG  #Y30OE78*/
         L     @14,BUFELPTR(,@08)                                  1674
         L     @14,BUFPTR(,@14)                                    1674
         LH    @00,BLKLEN(,@14)                                    1674
         SLR   @00,RECLEN                                          1674
         STH   @00,BLKLEN(,@14)                                    1674
*       RECPTR=RECPTR+RECLEN;       /* BUMP RECPTR           #Y30OE78*/
         ALR   @15,RECLEN                                          1675
         ST    @15,RECPTR(,@08)                                    1675
*     END;                          /*                       #Y30OE78*/
*   END BPAMGET;                    /*                       #Y30OE78*/
@EL00018 DS    0H                                                  1677
@EF00018 DS    0H                                                  1677
@ER00018 L     @14,@SA00018                                        1677
         BR    @14                                                 1677
*RDERABEX:                          /* RDER ABEND EXIT       @Z30OE78*/
*   PROC OPTIONS(NOSAVE);           /*                       #Y30OE78*/
RDERABEX DS    0H                                                  1679
*   IF OKIGNORE=ON THEN             /* IF ABEND CAN BE       @Z30OE78
*                                      IGNORED,              @Z30OE78*/
         TM    OKIGNORE(PARMPTR),B'00000100'                       1679
         BNO   @RF01679                                            1679
*     OPMASK=IGNORE;                /* SET IGNORE OPTION     @Z30OE78*/
         MVI   OPMASK(PARMPTR),X'04'                               1680
*RDERSYN:                                                          1681
*   ENTRY;                          /* SYNAD ENTRY POINT     @Z30OE78*/
         B     @EC01681                                            1681
RDERSYN  DS    0H                                                  1681
@EC01681 DS    0H                                                  1682
*   INERR=ON;                       /* SET ERROR INDICATOR   #Y30OE78*/
         OI    INERR,B'00001000'                                   1682
*   END RDERABEX;                   /*                       @Z30OE78*/
@EL00019 DS    0H                                                  1683
@EF00019 DS    0H                                                  1683
@ER00019 BR    @14                                                 1683
*DATAEOD:                           /* EODAD EXIT FOR READ   #Y30OE78*/
*   PROC OPTIONS(NOSAVE);           /* ING ADS FROM DSKT     #Y30OE78*/
DATAEOD  DS    0H                                                  1685
*   INEOF=ON;                       /* SET EOD INDICATOR     #Y30OE78*/
         OI    INEOF,B'00010000'                                   1685
*   IF RPLFDBK2=GOODEOV             /* SIGNIFY THAT          @ZA04466*/
*     THEN                          /* DISKETTE HAS BEEN     @ZA04466*/
         L     @08,DCBPTR                                          1686
         SLR   @03,@03                                             1686
         ICM   @03,7,DCBAMWKA+16(@08)                              1686
         CLI   RPLFDBK2(@03),X'10'                                 1686
         BNE   @RF01686                                            1686
*     DKCHNGD=ON;                   /* CHANGED               @ZA04466*/
         OI    DKCHNGD,B'00000100'                                 1687
*   END DATAEOD;                    /*                       #Y30OE78*/
@EL00020 DS    0H                                                  1688
@EF00020 DS    0H                                                  1688
@ER00020 BR    @14                                                 1688
*UT2SYN:                            /* UT2 SYSAD EXIT        #Y30OE78*/
*   PROC OPTIONS(NOSAVE);           /*                       #Y30OE78*/
UT2SYN   DS    0H                                                  1690
*   UT2SYNI=ON;                     /* SET ERROR INDICATOR   #Y30OE78*/
         OI    UT2SYNI,B'00000010'                                 1690
*   END UT2SYN;                     /*                       #Y30OE78*/
@EL00021 DS    0H                                                  1691
@EF00021 DS    0H                                                  1691
@ER00021 BR    @14                                                 1691
*UT3OABEX:                          /* UT3 OUTPUT ABEND EXIT @Z30OE78*/
*   PROC OPTIONS(NOSAVE);           /*                       #Y30OE78*/
UT3OABEX DS    0H                                                  1693
*   IF OKIGNORE=ON THEN             /* IF ABEND MAY BE       @Z30OE78
*                                      IGNORED,              @Z30OE78*/
         TM    OKIGNORE(PARMPTR),B'00000100'                       1693
         BNO   @RF01693                                            1693
*     OPMASK=IGNORE;                /* SET IGNORE OPTION     @Z30OE78*/
         MVI   OPMASK(PARMPTR),X'04'                               1694
*UT3OSYN:                                                          1695
*   ENTRY;                          /* SYNAD ENTRY POINT     @Z30OE78*/
         B     @EC01695                                            1695
UT3OSYN  DS    0H                                                  1695
@EC01695 DS    0H                                                  1696
*   UT3SYN=ON;                      /* SET ERROR INDICATOR   #Y30OE78*/
         OI    UT3SYN,B'00000001'                                  1696
*   END UT3OABEX;                   /*                       @Z30OE78*/
@EL00022 DS    0H                                                  1697
@EF00022 DS    0H                                                  1697
@ER00022 BR    @14                                                 1697
*UT3IABEX:                          /* UT3 INPUT ABEND       @Z30OE78
*                                      EXIT                  @Y30OE78*/
*   PROC OPTIONS(NOSAVE);           /*                       @Y30OE78*/
UT3IABEX DS    0H                                                  1699
*   IF OKIGNORE=ON THEN             /* IF ABEND MAY BE       @Z30OE78
*                                      IGNORED,              @Z30OE78*/
         TM    OKIGNORE(PARMPTR),B'00000100'                       1699
         BNO   @RF01699                                            1699
*     OPMASK=IGNORE;                /* SET IGNORE OPTION     @Z30OE78*/
         MVI   OPMASK(PARMPTR),X'04'                               1700
*UT3ISYN:                                                          1701
*   ENTRY;                          /* SYNAD ENTRY POINT     @Z30OE78*/
         B     @EC01701                                            1701
UT3ISYN  DS    0H                                                  1701
@EC01701 DS    0H                                                  1702
*   IF EODHIT=OFF THEN              /* IF NOT IN EOD QUIESCE @Y30OE78*/
         L     @08,BUFCBPTR                                        1702
         TM    EODHIT(@08),B'10000000'                             1702
         BNZ   @RF01702                                            1702
*     SYNHIT=ON;                    /* SET SYNAD INDICATOR   @Y30OE78*/
         OI    SYNHIT(@08),B'01000000'                             1703
*   END UT3IABEX;                   /*                       @Z30OE78*/
@EL00023 DS    0H                                                  1704
@EF00023 DS    0H                                                  1704
@ER00023 BR    @14                                                 1704
*RDREXIT:                           /*                       @Y30OE78*/
*   PROC OPTIONS(NOSAVE);           /*                       @Y30OE78*/
RDREXIT  DS    0H                                                  1706
*   RFY                                                            1706
*     RTNREG RSTD;                  /*                       @Y30OE78*/
*   RFY                                                            1707
*     IHADCB BASED(EXDCBPTR);       /*                       @Y30OE78*/
*   IF DCBBLKSI=ZERO THEN           /* IF BLKSIZE NOT YET    @Y30OE78
*                                      SPECIFIED,            @Y30OE78*/
         LA    @15,52                                              1708
         ALR   @15,EXDCBPTR                                        1708
         ICM   @08,3,DCBBLKSI(@15)                                 1708
         BNZ   @RF01708                                            1708
*     DCBBLKSI=DCBLRECL;            /* SET EQUAL TO LRECL    @Y30OE78*/
         MVC   DCBBLKSI(2,@15),DCBLRECL+72(EXDCBPTR)               1709
*   END RDREXIT;                    /*                       @Y30OE78*/
@EL00024 DS    0H                                                  1710
@EF00024 DS    0H                                                  1710
@ER00024 BR    @14                                                 1710
*UT3EXIT:                           /*                       @Y30OE78*/
*   PROC OPTIONS(NOSAVE);           /*                       @Y30OE78*/
UT3EXIT  DS    0H                                                  1712
*   IF DCBBLKSI=ZERO THEN           /* IF BLKSIZE NOT YET    @Y30OE78
*                                      SPECIFIED,            @Y30OE78*/
         LA    @15,52                                              1712
         ALR   @15,EXDCBPTR                                        1712
         ICM   @08,3,DCBBLKSI(@15)                                 1712
         BNZ   @RF01712                                            1712
*     DCBBLKSI=DFLTBLKS;            /* SET DEFAULT BLKSIZE   @Y30OE78*/
         MVC   DCBBLKSI(2,@15),@CH00194                            1713
*   IF DCBBLKSI<MINBLKSI THEN       /* IF BLKSIZE IS LESS    @ZA00784
*                                      THEN MINIMUM          @ZA00784*/
@RF01712 LA    @15,96                                              1714
         LA    @08,52                                              1714
         ALR   @08,EXDCBPTR                                        1714
         CH    @15,DCBBLKSI(,@08)                                  1714
         BNH   @RF01714                                            1714
*     DCBBLKSI=MINBLKSI;            /* SET IT TO MINIMUM     @ZA00784*/
         STH   @15,DCBBLKSI(,@08)                                  1715
*   RFY                                                            1716
*     RTNREG;                       /*                       @Y30OE78*/
*   RFY                                                            1717
*     IHADCB BASED(DCBPTR);         /*                       @Y30OE78*/
*   END UT3EXIT;                    /*                       @Y30OE78*/
@EL00025 DS    0H                                                  1718
@EF00025 DS    0H                                                  1718
@ER00025 BR    @14                                                 1718
*OPENABEX:                          /* DCB ABEND EXIT TO     @Z30OE78*/
*   PROC OPTIONS(NOSAVE);           /* IGNORE ABEND          @Z30OE78*/
OPENABEX DS    0H                                                  1720
*   IF OKIGNORE=ON THEN             /* IF ABEND MAY BE       @Z30OE78
*                                      IGNORED,              @Z30OE78*/
         TM    OKIGNORE(PARMPTR),B'00000100'                       1720
         BNO   @RF01720                                            1720
*     OPMASK=IGNORE;                /* SET IGNORE OPTION     @Z30OE78*/
         MVI   OPMASK(PARMPTR),X'04'                               1721
*   END OPENABEX;                   /*                       @Z30OE78*/
@EL00026 DS    0H                                                  1722
@EF00026 DS    0H                                                  1722
@ER00026 BR    @14                                                 1722
*   END IOEDKRDR                    /*                       @Y30OE78*/
*                                                                  1723
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (MAINPGM )                                       */
*/*%INCLUDE SYSUT5  (TOPROLOG)                                       */
*/*%INCLUDE SYSUT5  (DREGS1  )                                       */
*/*%INCLUDE SYSUT5  (DINTDAT1)                                       */
*/*%INCLUDE SYSUT5  (DINTDATD)                                       */
*/*%INCLUDE SYSUT5  (DINTMAP1)                                       */
*/*%INCLUDE SYSUT5  (DMACMAP1)                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*/*%INCLUDE SYSLIB  (IEZCIB  )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSUT5  (SETINIT )                                       */
*/*%INCLUDE SYSUT5  (INPUTJCL)                                       */
*/*%INCLUDE SYSUT5  (GWJCL   )                                       */
*/*%INCLUDE SYSUT5  (PROCJCL )                                       */
*/*%INCLUDE SYSUT5  (SCANREC )                                       */
*/*%INCLUDE SYSUT5  (INPUTADS)                                       */
*/*%INCLUDE SYSUT5  (MERGSPOL)                                       */
*/*%INCLUDE SYSUT5  (NAMESCAN)                                       */
*/*%INCLUDE SYSUT5  (OPNDSCAN)                                       */
*/*%INCLUDE SYSUT5  (JOBPROC )                                       */
*/*%INCLUDE SYSUT5  (DDPROC  )                                       */
*/*%INCLUDE SYSUT5  (SYINSCAN)                                       */
*/*%INCLUDE SYSUT5  (PARMSCAN)                                       */
*/*%INCLUDE SYSUT5  (DSIDSCAN)                                       */
*/*%INCLUDE SYSUT5  (DLMSCAN )                                       */
*/*%INCLUDE SYSUT5  (VOLSCAN )                                       */
*/*%INCLUDE SYSUT5  (BPAMPUT )                                       */
*/*%INCLUDE SYSUT5  (ADSANAL )                                       */
*/*%INCLUDE SYSUT5  (READDSKT)                                       */
*/*%INCLUDE SYSUT5  (NEWDSKT )                                       */
*/*%INCLUDE SYSUT5  (GETADS  )                                       */
*/*%INCLUDE SYSUT5  (READADS )                                       */
*/*%INCLUDE SYSUT5  (PROCSTRM)                                       */
*/*%INCLUDE SYSUT5  (PUTADS  )                                       */
*/*%INCLUDE SYSUT5  (BPAMGET )                                       */
*/*%INCLUDE SYSUT5  (RDERSYN )                                       */
*/*%INCLUDE SYSUT5  (UT2SYN  )                                       */
*/*%INCLUDE SYSUT5  (UT3OSYN )                                       */
*/*%INCLUDE SYSUT5  (UT3ISYN )                                       */
*/*%INCLUDE SYSUT5  (DCBEXIT )                                       */
*                                                                  1723
*       ;                                                          1723
@DATA    DS    0H
@CH00053 DC    H'0'
@CH00135 DC    H'2'
@CH00056 DC    H'4'
@CH00301 DC    H'5'
@CH00066 DC    H'6'
@CH00310 DC    H'7'
@CH00033 DC    H'11'
@CH00032 DC    H'12'
@CH00193 DC    H'15'
@CH00164 DC    H'16'
@CH00680 DC    H'48'
@CH00200 DC    H'71'
@CH00202 DC    H'72'
@CH00248 DC    H'80'
@CH01598 DC    H'84'
@CH01603 DC    H'92'
@CH01494 DC    H'999'
@CH00194 DC    H'1984'
@CH01482 DC    H'9999'
@CH01601 DC    H'-40'
@CH00503 DC    XL2'0404'
@CH00505 DC    XL2'0408'
@CH00507 DC    XL2'040C'
@CH00509 DC    XL2'1000'
@CH00513 DC    XL2'0400'
@CH00375 DC    XL2'FF'
@CH00287 DC    XL1'0'
         DC    C','
@CH00289 DC    XL1'0'
         DC    C''''
@CH00295 DC    XL1'0'
         DC    C')'
@SM01648 MVC   0(0,@05),PARMTXT(@03)
@SM01651 MVC   SJOBNAME(0),CIBDATA(@03)
@SC01662 CLC   0(0,@14),0(@07)
@SM01666 MVC   CURJOBNM(0),RECJCL+2
@SM01670 MVC   ODSID(0),0(@15)
@SM01673 MVC   OVOLSER(0),0(@15)
@SM01675 MVC   SLOT(0,@04),RWORK
@SM01678 MVC   RWORK(0),SLOT(@15)
         DS    0F
@SA00001 DS    18F
@SA00005 DS    1F
@SA00010 DS    1F
@SA00011 DS    1F
@SA00012 DS    1F
@SA00016 DS    1F
@SA00014 DS    1F
@SA00018 DS    1F
@SA00017 DS    1F
@SA00013 DS    0F
@SA00004 DS    0F
         DS    1F
         DS    0F
@CF00061 DC    F'1'
@CH00061 EQU   @CF00061+2
@CF01204 DC    F'40'
@CH01204 EQU   @CF01204+2
@CF01677 DC    F'-39'
@CF00353 DC    XL4'0C0000'
@CF00355 DC    XL4'080404'
@CF00357 DC    XL4'001000'
@CF00359 DC    XL4'081000'
@CF00363 DC    XL4'080000'
@CV00046 DC    V(IOEESTAE)
@CV00047 DC    V(IOESDKTI)
@CV00048 DC    V(IOEDKMSG)
@CV00049 DC    V(IOEDKGET)
@CV00050 DC    V(IOEDKCLS)
@CV00051 DC    V(IOEDKOPN)
         DS    0D
K        DS    F
DSNPTRJ  DS    A
FRSTADSN DS    A
LASTADSN DS    A
ADS#     DC    F'0'
BUFCBPTR DS    A
OPENPTR  DS    A
DCBPTR   DS    A
DSCNT    DC    F'0'
JOBNUM   DC    H'0'
ADSNUM   DC    H'0'
RTNCODE  DC    AL1(0)
@CC01449 DC    C'JCLMEMBR'
@CC00311 DC    C'VOLUME='
@CC00302 DC    C'RETRY'
@CC00306 DC    C'DSID='
@CC00308 DC    C'VOL='
@CC00313 DC    C'DLM='
@CC00315 DC    C'SER='
@CC00317 DC    C'DATA'
@CC00323 DC    C'JOB '
@CC00321 DC    C'DD '
@CC00325 DC    C'204'
@CC00327 DC    C'202'
@CC00329 DC    C'212'
@CC00331 DC    C'216'
@CC00333 DC    C'224'
@CC00335 DC    C'228'
@CC00337 DC    C'132'
@CC00339 DC    C'300'
@CC00341 DC    C'310'
@CC00343 DC    C'312'
@CC00345 DC    C'316'
@CC00347 DC    C'320'
@CC00349 DC    C'324'
@CC00351 DC    C'408'
@CC01462 DC    C'JES'
@CC00281 DC    C'//'
@CC00304 DC    C'GO'
@CC00319 DC    C'V)'
@CC01493 DC    C'/*'
@CB00165 DC    X'0844'
@CB00080 DC    X'F0'
         DS    CL7
WORKA    DS    CL8
WORKB    DC    CL6'000000'
         DS    CL2
EXTANS   DS    CL8
         ORG   EXTANS
TIOTADDR DS    AL4
COMMADDR DS    AL4
         ORG   EXTANS+8
SCSW0    DC    X'00'
         ORG   SCSW0
STARTJOB DS    BL1
BADPARM  EQU   SCSW0+0
RDER3540 EQU   SCSW0+0
@NM00001 EQU   SCSW0+0
SCANPUT  EQU   SCSW0+0
SETJBERR EQU   SCSW0+0
BLDLERR  EQU   SCSW0+0
CNTRLSCN EQU   SCSW0+0
         ORG   SCSW0+1
SCSW1    DC    X'00'
         ORG   SCSW1
@NM00002 DS    BL1
INEOF    EQU   SCSW1+0
INERR    EQU   SCSW1+0
IJSCERR  EQU   SCSW1+0
UT2SYNI  EQU   SCSW1+0
UT3SYN   EQU   SCSW1+0
         ORG   SCSW1+1
SCSW2    DC    X'00'
         ORG   SCSW2
ISDMODE  DS    BL1
JCLINDAT EQU   SCSW2+0
JOBDEL   EQU   SCSW2+0
RECSCAN  EQU   SCSW2+0
BYPVERB  EQU   SCSW2+0
JOBCONT  EQU   SCSW2+0
DDCONT   EQU   SCSW2+0
QUOTE    EQU   SCSW2+0
         ORG   SCSW2+1
SCSW3    DC    X'00'
         ORG   SCSW3
CMCONT   DS    BL1
OPCONT   EQU   SCSW3+0
JCL      EQU   SCSW3+0
NULL     EQU   SCSW3+0
COMMENT  EQU   SCSW3+0
CMCONTEX EQU   SCSW3+0
OPCONTEX EQU   SCSW3+0
ATOPND   EQU   SCSW3+0
         ORG   SCSW3+1
SCSW4    DC    X'00'
         ORG   SCSW4
OPNDEND  DS    BL1
JBJCLERR EQU   SCSW4+0
DDREJCT  EQU   SCSW4+0
PSCEND   EQU   SCSW4+0
PCONT    EQU   SCSW4+0
PRENHIT  EQU   SCSW4+0
@NM00003 EQU   SCSW4+0
         ORG   SCSW4+1
IASW1    DC    X'00'
         ORG   IASW1
IADONE   DS    BL1
IARECOV  EQU   IASW1+0
PIO1     EQU   IASW1+0
DLMHIT   EQU   IASW1+0
DKFEED   EQU   IASW1+0
DKCHNGD  EQU   IASW1+0
DKDLM    EQU   IASW1+0
DOPENCHK EQU   IASW1+0
         ORG   IASW1+1
SJOBNAME DS    CL8
         DS    CL2
STAEPARM DS    CL8
         ORG   STAEPARM
RDEV     DC    A(0)
DDEV     DC    A(0)
         ORG   STAEPARM+8
GETPARMS DS    CL8
         ORG   GETPARMS
GETMNLA  DS    FL4
         ORG   GETMNLA
@NM00004 DC    X'80'
GETMNLV  DC    AL3(0)
         ORG   GETPARMS+4
GETMNA   DC    A(0)
         ORG   GETPARMS+8
RDREXLST DS    CL8
         ORG   RDREXLST
@NM00005 DC    X'11'
RABEX    DC    AL3(OPENABEX)
@NM00006 DC    X'85'
@NM00007 DC    AL3(RDREXIT)
         ORG   RDREXLST+8
UT3EXLST DS    CL8
         ORG   UT3EXLST
@NM00008 DC    X'11'
UABEX    DC    AL3(OPENABEX)
@NM00009 DC    X'85'
@NM00010 DC    AL3(UT3EXIT)
         ORG   UT3EXLST+8
OPEXLST  DS    CL4
         ORG   OPEXLST
@NM00011 DC    X'91'
@NM00012 DC    AL3(OPENABEX)
         ORG   OPEXLST+4
BUFCB1   DS    CL36
         ORG   BUFCB1
UT3STAT  DS    BL1
         ORG   UT3STAT
UT3IJEOD DS    BL1
UT3IJSYN EQU   UT3STAT+0
         ORG   BUFCB1+1
@NM00013 DS    AL3
@NM00014 DS    AL4
@NM00015 DC    AL4(EL11)
EL11     DS    CL12
         ORG   EL11
@NM00016 DS    AL4
DECBPT1  DC    AL4(DECB1)
@NM00017 DC    AL4(EL12)
         ORG   BUFCB1+24
EL12     DS    CL12
         ORG   EL12
@NM00018 DS    AL4
DECBPT2  DC    AL4(DECB2)
@NM00019 DC    AL4(EL11)
         ORG   BUFCB1+36
BUFCB2   DS    CL36
         ORG   BUFCB2
@NM00020 DC    X'00'
         ORG   @NM00020
UT3IAEOD DS    BL1
UT3IASYN EQU   @NM00020+0
         ORG   BUFCB2+1
@NM00021 DS    AL3
@NM00022 DS    AL4
@NM00023 DC    AL4(EL21)
EL21     DS    CL12
         ORG   EL21
@NM00024 DS    AL4
@NM00025 DC    AL4(DECB5)
@NM00026 DC    AL4(EL22)
         ORG   BUFCB2+24
EL22     DS    CL12
         ORG   EL22
@NM00027 DS    AL4
@NM00028 DC    AL4(DECB6)
@NM00029 DC    AL4(EL21)
         ORG   BUFCB2+36
RWORKAR  DS    CL136
         ORG   RWORKAR
BDWA     DS    CL4
         ORG   BDWA
BDWLNA   DS    FL2
BDWFILA  DC    H'0'
         ORG   RWORKAR+4
RWORK    DS    CL132
         ORG   RWORK
RDWA     DS    CL4
         ORG   RDWA
RDWLNA   DS    FL2
RDWFILA  DC    H'0'
         ORG   RWORK+4
RECA     DS    CL128
         ORG   RECA
RECJCL   DS    CL80
RECNTRLA DS    CL8
         ORG   RECNTRLA
CNTRLSW  DC    X'00'
         ORG   CNTRLSW
@NM00030 DS    BL1
CJOB     EQU   CNTRLSW+0
CDD      EQU   CNTRLSW+0
@NM00031 EQU   CNTRLSW+0
FIRST    EQU   CNTRLSW+0
CONTIN   EQU   CNTRLSW+0
LAST     EQU   CNTRLSW+0
         ORG   RECNTRLA+1
CTRLJOB# DC    CL4'0000'
CTRLADS# DC    CL3'000'
         ORG   RWORKAR+136
ENDJNUM  DC    X'FFFFFFFF'
CURJNUM  DC    CL4'0000'
CURJOBNM DC    CL8' '
CURDLM   DS    CL2
DELCARD  DC    CL5'/*DEL'
SCANCARD DC    CL6'/*SCAN'
DLMCARD  DC    CL80'   INSERTED DELIMITER'
TRTTAB   DS    CL256
         ORG   TRTTAB
@NM00032 DC    CL64' '
@NM00033 DC    X'FF'
@NM00034 DC    CL26' '
NAT$     DC    X'00'
@NM00035 DC    CL1' '
@NM00036 DC    CL1')'
@NM00037 DC    CL2' '
HYPHTAB  DS    CL1
@NM00038 DC    CL10' '
@NM00039 DC    CL1','
@NM00040 DC    CL15' '
NAT#     DC    X'00'
NAT@     DC    X'00'
@NM00041 DC    CL1''''
@NM00042 DC    CL66' '
LBRCTAB  DS    CL1
@NM00043 DC    X'00'
         DC    XL8'0'
@NM00044 DC    CL7' '
@NM00045 DC    X'00'
         DC    XL8'0'
@NM00046 DC    CL8' '
@NM00047 DC    X'00'
         DC    XL7'0'
@NM00048 DC    CL6' '
@NM00049 DC    X'00'
         DC    XL9'0'
@NM00050 DC    CL6' '
         ORG   TRTTAB+256
         DS    CL3
MSGINT   DS    CL57
         ORG   MSGINT
MSGIDEX  DS    FL1
MSGTYPE  DS    FL1
@NM00051 DS    BL2
MSGDECB  DC    AL4(DECB7)
MSGREP   DS    AL4
MSGMOD   DS    CL45
         ORG   MSGMOD
@NM00052 DC    AL1(10)
DDNK     DC    AL1(0)
DDN      DS    CL8
@NM00053 DC    AL1(5)
DDDK     DC    AL1(0)
DDD      DS    CL3
@NM00054 DC    AL1(10)
JJJK     DC    AL1(0)
JJJ      DS    CL8
@NM00055 DC    AL1(10)
DSNK     DC    AL1(0)
DSN      DS    CL8
@NM00056 DC    AL1(8)
VSERK    DC    AL1(0)
VSER     DS    CL6
@NM00057 DC    AL1(2)
@NM00058 DC    AL1(127)
         ORG   MSGINT+57
         DS    CL3
SYSCWK   DS    CL20
         ORG   SYSCWK
OSCSW    DS    FL4
         ORG   OSCSW
OSCSW1   DS    BL1
         ORG   OSCSW1
VOLE     DS    BL1
DSVERIFY EQU   OSCSW1+0
VOLSERF  EQU   OSCSW1+0
DSIDNULL EQU   OSCSW1+0
SERNULL  EQU   OSCSW1+0
@NM00059 EQU   OSCSW1+0
         ORG   OSCSW+1
@NM00060 DS    BL1
         ORG   @NM00060
DSIDF    DS    BL1
DLMF     EQU   @NM00060+0
DSIDE    EQU   @NM00060+0
VOLSERE  EQU   @NM00060+0
DLME     EQU   @NM00060+0
VOLCONT  EQU   @NM00060+0
DSIDCONT EQU   @NM00060+0
VOLF     EQU   @NM00060+0
         ORG   OSCSW+2
PRENCNT  DS    FL2
         ORG   SYSCWK+4
OVALUES  DS    CL14
         ORG   OVALUES
ODSID    DS    CL8
OVOLSER  DS    CL6
         ORG   SYSCWK+18
ODLM     DS    CL2
         ORG   SYSCWK+20
DEVTAB   DS    CL12
         ORG   DEVTAB+0
DDNAME   DC    CL8'IEFRDER '
DSTAT    DC    X'00'
         ORG   DSTAT+0
DFOUND   DS    BL1
DSSDS    EQU   DSTAT+0
         ORG   DEVTAB+9
DEVPTR   DC    AL3(0)
         ORG   DEVTAB+12
         ORG   DEVTAB+12
         DC    CL8'SYSDATA '
         DC    X'00'
         DC    AL3(0)
         ORG   DEVTAB+24
         ORG   DEVTAB+24
         DC    CL8'SYSUT2  '
         DC    X'00'
         DC    AL3(0)
         ORG   DEVTAB+36
         ORG   DEVTAB+36
         DC    CL8'SYSUT3  '
         DC    X'00'
         DC    AL3(0)
         ORG   DEVTAB+48
IOEDKRDR CSECT
*                                                         /*#Y30OE78*/
RDEREX  DCB   DDNAME=IEFRDER,MACRF=(E),DSORG=PS,DEVD=RD,      @Y30OE78CC
               XENDA=VV,EXLST=OPEXLST                         @Z30OE78
RDERQS  DCB   DDNAME=IEFRDER,DSORG=PS,EODAD=RDEREOD,LRECL=80, @Y30OE78CC
               MACRF=(GM),SYNAD=RDERSYN,RECFM=FB,EROPT=ACC,   @Y30OE78CC
               EXLST=RDREXLST                                 @Y30OE78
DATAEX  DCB   DDNAME=SYSDATA,MACRF=(E),DSORG=PS,DEVD=RD,      @Y30OE78CC
               XENDA=VV,EXLST=OPEXLST                         @Z30OE78
UT2BS   DCB   DDNAME=SYSUT2,DSORG=PS,LRECL=132,MACRF=(W),     @Y30OE78CC
               SYNAD=UT2SYN,RECFM=V,BLKSIZE=136,EXLST=OPEXLST @Y30OE78
UT3BPOUT DCB  DDNAME=SYSUT3,BUFNO=2,DSORG=PO,MACRF=(W),NCP=2, @Y30OE78CC
               RECFM=VB,SYNAD=UT3OSYN,EXLST=UT3EXLST          @Y30OE78
UT3BPINJ DCB  DDNAME=SYSUT3,BUFNO=2,DSORG=PO,MACRF=(R),NCP=2, @Y30OE78CC
               RECFM=VB,SYNAD=UT3ISYN,EODAD=UT3EOD,           @Y30OE78CC
               EXLST=UT3EXLST                                 @Y30OE78
UT3BPINA DCB  DDNAME=SYSUT3,BUFNO=2,DSORG=PO,MACRF=(R),NCP=2, @Y30OE78CC
               RECFM=VB,SYNAD=UT3ISYN,EODAD=UT3EOD,           @Y30OE78CC
               EXLST=UT3EXLST                                 @Y30OE78
IOEDKRDR CSECT
*                                                         /*@Y30OE78*/
OPENLST OPEN  (RDEREX,,UT3BPOUT,(OUTPUT)),MF=L                @Y30OE78
        OPEN  (RDERQS,,UT3BPOUT,(OUTPUT)),MF=L                @Y30OE78
        OPEN  (RDEREX,,UT2BS,(OUTPUT)),MF=L                   @Y30OE78
        OPEN  (RDERQS,,UT2BS,(OUTPUT)),MF=L                   @Y30OE78
IALIST  OPEN  (UT3BPOUT,(OUTPUT),DATAEX),MF=L                 @Y30OE78
MSLIST  OPEN  (UT3BPINJ,,UT3BPINA,,UT2BS,(OUTPUT)),MF=L       @Y30OE78
IOEDKRDR CSECT
*                                                         /*@Y30OE78*/
        WRITE DECB1,SF,UT3BPOUT,MF=L                          @Y30OE78
        WRITE DECB2,SF,UT3BPOUT,MF=L                          @Y30OE78
        READ  DECB3,SF,UT3BPINJ,MF=L                          @Y30OE78
        READ  DECB4,SF,UT3BPINJ,MF=L                          @Y30OE78
        READ  DECB5,SF,UT3BPINA,MF=L                          @Y30OE78
        READ  DECB6,SF,UT3BPINA,MF=L                          @Y30OE78
        WRITE DECB7,SF,UT2BS,RWORKAR,MF=L                     @Y30OE78
IOEDKRDR CSECT
*                                  /* SERVICE PATCH AREA    @Y30OE78*/
MT3540AR DC   150F'-1'             PATCH AREA                 @Y30OE78
IOEDKRDR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RECLEN   EQU   @03
OPNDPTR  EQU   @05
NXTOPND  EQU   @08
VERBPTR  EQU   @03
NAMELEN  EQU   @08
TIOTPTR  EQU   @03
UCBPTR   EQU   @05
DSNPTRK  EQU   @04
DSNPTRI  EQU   @03
I        EQU   @04
J        EQU   @03
L        EQU   @03
CHARHIT  EQU   @02
BLKPTR   EQU   @02
RTNREG   EQU   @14
EXDCBPTR EQU   @01
RTNCDREG EQU   @15
HITADDR  EQU   @01
PARMPTR  EQU   @01
PARMADDR EQU   0
PARM     EQU   0
PARMLEN  EQU   PARM
PARMTXT  EQU   PARM+2
DSNHDR   EQU   0
DSNE#    EQU   DSNHDR
DSNELN   EQU   DSNHDR+2
DSNENT1  EQU   DSNHDR+4
DSNENTRY EQU   0
MEMNAME  EQU   DSNENTRY
Z        EQU   MEMNAME
JOBNO    EQU   MEMNAME+1
TTR0     EQU   DSNENTRY+8
RECADDR  EQU   TTR0+2
JOBNM    EQU   DSNENTRY+12
JVALS    EQU   DSNENTRY+20
DSID     EQU   JVALS
VOLSER   EQU   JVALS+8
DLM      EQU   DSNENTRY+34
DSNFLG   EQU   DSNENTRY+36
JCLALLOW EQU   DSNFLG
JCLVERF  EQU   DSNFLG
VSERPRES EQU   DSNFLG
JOBERR   EQU   DSNFLG
JCLMSG   EQU   DSNFLG
ADSSAT   EQU   DSNFLG
ERRCODE  EQU   DSNENTRY+37
CSCOMM   EQU   0
CIBPTR   EQU   CSCOMM+4
OPNLST   EQU   0
@NM00064 EQU   OPNLST
LSTEND   EQU   @NM00064
INDCBAD  EQU   OPNLST+1
OUTDCBAD EQU   OPNLST+5
BUFCB    EQU   0
IOSTAT   EQU   BUFCB
EODHIT   EQU   IOSTAT
SYNHIT   EQU   IOSTAT
RECPTR   EQU   BUFCB+4
BUFELPTR EQU   BUFCB+8
BUFEL    EQU   0
BUFPTR   EQU   BUFEL
DECBPTR  EQU   BUFEL+4
BUFELNXT EQU   BUFEL+8
BLOCK    EQU   0
BDW      EQU   BLOCK
BLKLEN   EQU   BDW
WRIND    EQU   BDW+2
RECAREA  EQU   BLOCK+4
SLOT     EQU   0
RECLENG  EQU   SLOT
REPLY    EQU   0
ABEXPARM EQU   0
OPMASK   EQU   ABEXPARM+3
OKIGNORE EQU   OPMASK
AMWORKAR EQU   0
JAMWKAR  EQU   AMWORKAR+4
WORKAREA EQU   JAMWKAR+16
AMW3540E EQU   AMWORKAR+120
AMWEAMFG EQU   AMW3540E+3
AMWEOD   EQU   AMW3540E+12
AMWBOE   EQU   AMWEOD
AMWEODRV EQU   AMWBOE
AMWEODTT EQU   AMWBOE+1
AMWEOD0  EQU   AMWBOE+2
AMWEODSS EQU   AMWBOE+3
ACB35EXT EQU   AMWORKAR+136
ACBJOBID EQU   ACB35EXT+8
ACB35IND EQU   ACB35EXT+22
ACBLRECL EQU   AMWORKAR+162
EXLIST   EQU   AMWORKAR+164
EXLSYNP  EQU   EXLIST
EXLEODP  EQU   EXLIST+4
RPLFIELD EQU   AMWORKAR+172
RPLAREA  EQU   RPLFIELD+4
PRLOPTBT EQU   RPLFIELD+8
RPLFDBK  EQU   RPLFIELD+9
RPLFDBK2 EQU   RPLFDBK+1
SETDLIST EQU   AMWORKAR+184
SETDOPCD EQU   SETDLIST
SETDVERY EQU   SETDLIST+1
SETDVERF EQU   SETDVERY
SETDRTNC EQU   SETDLIST+2
SETDRTN1 EQU   SETDRTNC
SETDRTN2 EQU   SETDRTNC+1
SETDDCB  EQU   SETDLIST+4
SETDDSID EQU   SETDLIST+8
TIOT1    EQU   0
CIBNAME  EQU   0
CIBASID  EQU   CIBNAME+10
CIBDATLN EQU   CIBNAME+14
CIBDATA  EQU   CIBNAME+16
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBNAME  EQU   UCBOB+13
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00084 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBVLSER EQU   UCB3540X
UCBDKBYT EQU   UCB3540X+6
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBBLKSI EQU   IHADCS36+10
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBLRECL EQU   IHADCS38+10
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00109 EQU   IHADCS40+12
DCBEROPT EQU   @NM00109
UCBBGN   EQU   0
TIOENTRY EQU   TIOT1+24
TIOELNGH EQU   TIOENTRY
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
TIOEFSRT EQU   TIOENTRY+17
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00083 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
DCBAMWRK EQU   DCBIOBAD
DCBAMFLG EQU   DCBAMWRK
DCBAMIN  EQU   DCBAMFLG
DCBAMWKA EQU   DCBAMWRK+1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DCBAMOUT EQU   DCBAMFLG
@NM00113 EQU   DCBAMFLG
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00083
UCBSKPFG EQU   @NM00083
UCBRIPND EQU   @NM00083
UCBRTIAC EQU   @NM00083
UCBRSV79 EQU   @NM00083
UCBRSV78 EQU   @NM00083
UCBRSV77 EQU   @NM00083
UCBOLTEP EQU   @NM00083
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00082 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00078 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00077 EQU   POOLSTAR
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
DCBEOB   EQU   IHADCS40+20
DCBPRECL EQU   IHADCS40+18
@NM00112 EQU   IHADCS40+16
@NM00111 EQU   @NM00109+1
@NM00110 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00108 EQU   IHADCS40+10
@NM00107 EQU   IHADCS40+9
@NM00106 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00105 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
@NM00104 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00103 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00102 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00101 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00100 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00099 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00098 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
@NM00097 EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00096 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00095 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00094 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00093 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00092 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00091 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00090 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00089 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00088 EQU   IHADCS01+5
@NM00087 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00086 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00085 EQU   IHADCB
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00084
UCBHALI  EQU   @NM00084
UCBRSV09 EQU   @NM00084
UCBRSV08 EQU   @NM00084
UCBRSV07 EQU   @NM00084
UCBRSV06 EQU   @NM00084
UCBRSV05 EQU   @NM00084
UCBRSV04 EQU   @NM00084
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00081 EQU   UCB
@NM00080 EQU   CIBNAME+13
CIBCONID EQU   CIBNAME+12
CIBTJID  EQU   CIBASID
@NM00079 EQU   CIBNAME+6
CIBLEN   EQU   CIBNAME+5
CIBVERB  EQU   CIBNAME+4
CIBNEXT  EQU   CIBNAME
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
BUFFER2  EQU   AMWORKAR+4488
CCWS2    EQU   AMWORKAR+4256
IOB2     EQU   AMWORKAR+4208
BUFFER1  EQU   AMWORKAR+880
CCWS1    EQU   AMWORKAR+648
IOB1     EQU   AMWORKAR+600
SETDWORK EQU   AMWORKAR+200
RPLFDBK1 EQU   RPLFDBK
@NM00076 EQU   PRLOPTBT
RPLEODS  EQU   PRLOPTBT
RPLRLEN  EQU   RPLFIELD
@NM00075 EQU   AMWORKAR+160
@NM00074 EQU   ACB35IND
ACBSECUR EQU   ACB35IND
ACBFEED  EQU   ACB35IND
ACBVSSER EQU   ACB35EXT+16
ACBDSID  EQU   ACB35EXT
AMWBOESS EQU   AMWEODSS
AMWBOE0  EQU   AMWEOD0
AMWBOETT EQU   AMWEODTT
AMWBOERV EQU   AMWEODRV
AMWDSID  EQU   AMW3540E+4
@NM00073 EQU   AMWEAMFG
AMWVAMSG EQU   AMWEAMFG
AMWDSOPN EQU   AMWEAMFG
AMWMULTI EQU   AMWEAMFG
AMWVSEQU EQU   AMW3540E+2
AMWDSSQL EQU   AMW3540E+1
AMWVOLAC EQU   AMW3540E
REGSAVE  EQU   WORKAREA+28
WORKBSL  EQU   WORKAREA
IOBBFLN  EQU   JAMWKAR+13
@NM00072 EQU   JAMWKAR+12
IOB1ADDR EQU   JAMWKAR+9
@NM00071 EQU   JAMWKAR+8
CCWPTR   EQU   JAMWKAR+5
@NM00070 EQU   JAMWKAR+4
IOBPTR   EQU   JAMWKAR+1
IOBNO    EQU   JAMWKAR
AMWLEN   EQU   AMWORKAR
@NM00069 EQU   OPMASK
@NM00068 EQU   OPMASK
@NM00067 EQU   ABEXPARM
@NM00066 EQU   BUFCB+1
@NM00065 EQU   OPNLST+4
@NM00063 EQU   CSCOMM
@NM00062 EQU   DSNFLG
@NM00061 EQU   TTR0
ADSNO    EQU   MEMNAME+5
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00277 EQU   @RC00270
@RC00313 EQU   IJGETCHK
@RC00323 EQU   @RC00320
@RC00359 EQU   @RC00356
@RF00389 EQU   @RC00385
@RC00387 EQU   @RC00385
@RC00454 EQU   @RC00427
@RF00699 EQU   @EL00002
@RC00688 EQU   @EL00002
@RC00686 EQU   @EL00002
@RC00702 EQU   @EL00002
@RF00742 EQU   @EL00003
@RC00740 EQU   @EL00003
@RF00750 EQU   @RC00747
@RF00801 EQU   @EL00004
@RF00815 EQU   @RC00812
@RC00876 EQU   @RC00875
@RF00841 EQU   @EL00005
@RC00872 EQU   @EL00005
@RC00886 EQU   @EL00005
@RF00885 EQU   @EL00005
@RC00883 EQU   @EL00005
@RC00901 EQU   @EL00005
@RC00961 EQU   @RC00959
@RC00972 EQU   @RC00959
@RF00971 EQU   @RC00959
@RC00984 EQU   @RC00983
@RC00998 EQU   @RC00995
@RF01050 EQU   @EL00007
@RC01064 EQU   @RC01063
@RF01080 EQU   @RC01059
@RF01079 EQU   @RC01059
@RF01093 EQU   @EL00008
@RC01102 EQU   @EL00009
@RC01107 EQU   @EL00009
@RC01117 EQU   @EL00009
@RC01143 EQU   @EL00009
@RC01138 EQU   @EL00009
@RF01174 EQU   @EL00010
@RC01266 EQU   @RC01265
@RF01506 EQU   @RC01503
@RC01304 EQU   @EL00014
@RF01566 EQU   @RC01558
@RF01591 EQU   @EL00016
@RF01614 EQU   @RC01609
@RF01670 EQU   @EL00018
@RF01679 EQU   @EC01681
@RF01686 EQU   @EL00020
@RF01693 EQU   @EC01695
@RF01699 EQU   @EC01701
@RF01702 EQU   @EL00023
@RF01708 EQU   @EL00024
@RF01714 EQU   @EL00025
@RF01720 EQU   @EL00026
@RC00706 EQU   @RC00702
@RC01305 EQU   @RC01304
@RC01326 EQU   @RC01304
@RC01373 EQU   @RC01304
@RC01371 EQU   @RC01304
@RC01356 EQU   @RC01304
@RC01354 EQU   @RC01304
@RC01306 EQU   @RC01305
@RF01335 EQU   @RC01326
@ENDDATA EQU   *
         END   IOEDKRDR,(C'PLS1357',0603,75308)
