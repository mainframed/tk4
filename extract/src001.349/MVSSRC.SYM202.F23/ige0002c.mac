         TITLE 'IGE0002C, 3540 OS/VS2  ERROR RECOVERY PROCEDURE        *
                        '
IGE0002C CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IGE0002C  78.100'                                 0001
         DROP  @15
@PROLOG  BALR  @06,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@06                                         0001
*                                                                  0107
*/* *******************************************************  @Y30OEAD*/
*/*  TOPSEGMT SEGMENT-OVERVIEW OF LOGIC FLOW THRU            @Y30OEAD*/
*/*    DETERMINES TYPE OF CHAINING AND IF ERP CAN RECOVER    @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*/*   MAIN FLOW                                              @Y30OEAD*/
*                                                                  0107
*   STCPPTR=IOSVST;                 /* PTR TO CCW CHAIN      @Y30OEAD*/
         L     STCPPTR,IOSVST(,IOSBPTR)                            0107
*   EWAPTR=IOSERP;                  /* PRT ERP WORK AREA     @Y30OEAD*/
         L     EWAPTR,IOSERP(,IOSBPTR)                             0108
*   UCBPTR=IOSUCB;                  /* INIT PTR TO UCB       @Y30OEAD*/
         L     UCBPTR,IOSUCB(,IOSBPTR)                             0109
*   IOSERR=ON;                      /* INDICATE ERP IN       @Y30OEAD
*                                      CONTROL               @Y30OEAD*/
*   IOSEX=ON;                       /* INDICATE              @Y30OEAD
*                                      EXCEPTIONAL COND      @Y30OEAD
*                                      NON RETRY COND        @Y30OEAD*/
         OI    IOSERR(IOSBPTR),B'00100100'                         0111
*   EWADCNT=LENVLSER;               /* LNGTH VOL SER         @Z30OEAD*/
         MVI   EWADCNT(EWAPTR),X'06'                               0112
*   EWADDISP=ADDR(UCBVLSER);        /* PNT TO VOL SER        @Z30OEAD*/
         MVC   EWADDISP(3,EWAPTR),UCBXTADR+1(UCBPTR)               0113
*   IF(IOSDCHN=ON&IOSCCHN=ON)×      /* MIXED CHAINING        @Y30OEAD*/
*       (IOSDCHN=ON)×               /* DATA CHAINING ON      @Y30OEAD*/
*       (CMDADR=CCWADR0&            /* NO CCW ADDR IN        @Y30OEAD
*                                      CSW FOR RETRY &       @Y30OEAD*/
*       IOBS0B1=BOFF)×              /* INTERV NOT ON         @Y30OEAD*/
*       (CMDADR=CCWADR0)            /* NO CCW ADDR           @Y30OEAD*/
*     THEN                          /* YES                   @Y30OEAD*/
         TM    IOSDCHN(IOSBPTR),B'11000000'                        0114
         BO    @RT00114                                            0114
         TM    IOSDCHN(IOSBPTR),B'10000000'                        0114
         BO    @RT00114                                            0114
         L     @15,CMDADR-1(,IOSBPTR)                              0114
         LA    @15,0(,@15)                                         0114
         LTR   @15,@15                                             0114
         BNZ   @GL00001                                            0114
         TM    IOBS0B1(IOSBPTR),B'01000000'                        0114
         BZ    @RT00114                                            0114
@GL00001 L     @15,CMDADR-1(,IOSBPTR)                              0114
         LA    @15,0(,@15)                                         0114
         LTR   @15,@15                                             0114
         BNZ   @RF00114                                            0114
@RT00114 DS    0H                                                  0115
*     DO;                           /*                       @Y30OEAD*/
*       IOSMSG=ON;                  /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0116
*       IOSERR=BOFF;                /* IND PERM ERROR        @Y30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0117
*       IF STBYT2B5=ON×             /* CCC OR                @Y30OEAD*/
*           STBYT2B6=ON             /* ICC                   @Y30OEAD*/
*         THEN                      /*                       @Y30OEAD*/
         TM    STBYT2B5(IOSBPTR),B'00000110'                       0118
         BZ    @RF00118                                            0118
*         ERPIB=ERPIB&&ERPIB;       /* ZERO OUT ENTRY        @Y30OEAD*/
         XC    ERPIB(8,EWAPTR),ERPIB(EWAPTR)                       0119
*     END;                          /*                       @Y30OEAD*/
*   ELSE                            /*                       @Y30OEAD*/
*     DO;                           /*                       @Y30OEAD*/
         B     @RC00114                                            0121
@RF00114 DS    0H                                                  0122
*       CCWREG=CMDADR-CCWLEN;       /* PNT TO FAIL'G CCW     @Y30OEAD*/
         L     CCWREG,CMDADR-1(,IOSBPTR)                           0122
         LA    CCWREG,0(,CCWREG)                                   0122
         SL    CCWREG,@CF00062                                     0122
*/* *******************************************************  @Y30OEAD*/
*/*   GET ADDRESS OF REAL CHANNEL PROGRAM                    @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0123
*       WK3PTR=CCWREG;              /* PNT TO LAST CCW       @Y30OEAD*/
         LR    WK3PTR,CCWREG                                       0123
*       GEN(LRA WK3PTR,0(WK3PTR));  /* PNT TO REAL ADDR      @Y30OEAD*/
         LRA WK3PTR,0(WK3PTR)
*/* ******************************************************** @Y30OEAD*/
*/*   GET VIRTUAL ADDRESS FOR SEEK                           @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0125
*       EWCSAVE=IOSBPTR;            /* SAVE IOSB PTR         @Y30OEAD*/
         ST    IOSBPTR,EWCSAVE(,EWAPTR)                            0125
*       TRANSREG=CCW2ADDR;          /* SETUP REAL ADDR       @Z30OEAD*/
         L     @15,CCW2ADDR-1(,STCPPTR)                            0126
         LA    @15,0(,@15)                                         0126
         LR    TRANSREG,@15                                        0126
*       REALSEEK=CCW2ADDR;          /* SAVE REAL ADDR        @Y30OEAD*/
         STCM  @15,7,REALSEEK(EWAPTR)                              0127
*       CALL TRNRTN;                /* TRANS ROUTINE         @Y30OEAD*/
         L     @15,CVTPTR                                          0128
         L     @15,CVTPTRV(,@15)                                   0128
         BALR  @14,@15                                             0128
*       VIRTSEEK=IOSBPTR;           /* SAVE VIRTUAL ADDR     @Y30OEAD*/
         STCM  IOSBPTR,7,VIRTSEEK(EWAPTR)                          0129
*       TRANSREG=EWCSAVE;           /* RESTORE IOSB PTR      @Y30OEAD*/
         L     TRANSREG,EWCSAVE(,EWAPTR)                           0130
*/* ******************************************************** @Y30OEAD*/
*/*    REBUILD CCW IF REQUIRED                               @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0131
*       IF TICBUILD=ON              /* ERP BUILT TIC         @Z30OEAD*/
*         THEN                      /* YES,                  @Y30OEAD*/
         TM    TICBUILD(EWAPTR),B'00100000'                        0131
         BNO   @RF00131                                            0131
*         DO;                       /*                       @Y30OEAD*/
*           CCW3=SAVECCW;           /* RESTORE CCW           @Y30OEAD*/
         MVC   CCW3(8,STCPPTR),SAVECCW(EWAPTR)                     0133
*           IOBSKADR=SAVESEEK;      /* RESTORE SEEK          @Y30OEAD*/
         L     @15,VIRTSEEK-1(,EWAPTR)                             0134
         LA    @15,0(,@15)                                         0134
         MVC   IOBSKADR(4,@15),SAVESEEK(EWAPTR)                    0134
*         END;                      /*                       @Y30OEAD*/
*       ELSE                                                       0136
*         ;                         /*                       @Y30OEAD*/
@RF00131 DS    0H                                                  0137
*       IF IOBERE=ON&               /* ERP ENTERED           @Y30OEAD
*                                      PREVIOUSLY            @Y30OEAD*/
*           CCWREG=IOBRESTR         /* DID THE SAME          @Y30OEAD
*                                      COMMAND FAILED        @Y30OEAD*/
*         THEN                      /* YES                   @Y30OEAD*/
         TM    IOBERE(EWAPTR),B'00010000'                          0137
         BNO   @RF00137                                            0137
         CL    CCWREG,IOBRESTR(,EWAPTR)                            0137
         BNE   @RF00137                                            0137
*/* ******************************************************** @Y30OEAD*/
*/*    UPDATE RETRY COUNTERS FOR                             @Y30OEAD*/
*/*    EQUIP CK,BUSOUT,OR DATA CK                            @Y30OEAD*/
*/*    IF ENTERED PREVIOUSLY                                 @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0138
*         DO;                       /*                       @Y30OEAD*/
*           IF IOBEQ=ON             /* EQUIP CHK             @Y30OEAD*/
*             THEN                  /* YES                   @Y30OEAD*/
         TM    IOBEQ(EWAPTR),B'00010000'                           0139
         BNO   @RF00139                                            0139
*             IF RETRYCTR^=MAXRTY   /* RETRIED TEN TIMES     @Z30OEAD*/
*               THEN                /* NO                    @Y30OEAD*/
         CLI   RETRYCTR(EWAPTR),10                                 0140
         BE    @RF00140                                            0140
*               RETRYCTR=RETRYCTR+ONE;/* ADD 1 TO CTR        @Y30OEAD*/
         LA    @15,1                                               0141
         SLR   @00,@00                                             0141
         IC    @00,RETRYCTR(,EWAPTR)                               0141
         ALR   @15,@00                                             0141
         STC   @15,RETRYCTR(,EWAPTR)                               0141
*             ELSE                  /*                       @Y30OEAD*/
*               DO;                 /*                       @Y30OEAD*/
         B     @RC00140                                            0142
@RF00140 DS    0H                                                  0143
*                 IOSMSG=ON;        /* PERM ERR MSG          @Y30OEAD*/
*                 IOSLOG=ON;        /* OBR REQ'D             @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0144
*               END;                /*                       @Y30OEAD*/
*           ELSE                    /*                       @Y30OEAD*/
*             IF IOBBOC=ON          /* BUSOUT CHK            @Y30OEAD*/
*               THEN                /* YES                   @Y30OEAD*/
         B     @RC00139                                            0146
@RF00139 TM    IOBBOC(EWAPTR),B'00100000'                          0146
         BNO   @RF00146                                            0146
*               IF RETRYCTR^=MAXRTY /* RETRIED TEN TIMES     @Z30OEAD*/
*                 THEN              /* NO                    @Y30OEAD*/
         CLI   RETRYCTR(EWAPTR),10                                 0147
         BE    @RF00147                                            0147
*                 RETRYCTR=RETRYCTR+ONE;/* ADD 1 TO CTR      @Y30OEAD*/
         LA    @15,1                                               0148
         SLR   @00,@00                                             0148
         IC    @00,RETRYCTR(,EWAPTR)                               0148
         ALR   @15,@00                                             0148
         STC   @15,RETRYCTR(,EWAPTR)                               0148
*               ELSE                /*                       @Y30OEAD*/
*                 DO;               /*                       @Y30OEAD*/
         B     @RC00147                                            0149
@RF00147 DS    0H                                                  0150
*                   IOSMSG=ON;      /* PERM ERR MSG          @Y30OEAD*/
*                   IOSLOG=ON;      /* OBR REQ'D             @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0151
*                 END;              /*                       @Y30OEAD*/
*             ELSE                  /*                       @Y30OEAD*/
*               IF IOBDATA=ON       /* DATA CHK              @Y30OEAD*/
*                 THEN              /* YES                   @Y30OEAD*/
         B     @RC00146                                            0153
@RF00146 TM    IOBDATA(EWAPTR),B'00000010'                         0153
         BNO   @RF00153                                            0153
*                 IF RETRYCTR^=MAXRTY/* RETRIED TEN TIMES    @Z30OEAD*/
*                   THEN            /* NO                    @Y30OEAD*/
         CLI   RETRYCTR(EWAPTR),10                                 0154
         BE    @RF00154                                            0154
*                   RETRYCTR=RETRYCTR+ONE;/* ADD 1 TO CTR    @Y30OEAD*/
         LA    @15,1                                               0155
         SLR   @00,@00                                             0155
         IC    @00,RETRYCTR(,EWAPTR)                               0155
         ALR   @15,@00                                             0155
         STC   @15,RETRYCTR(,EWAPTR)                               0155
*                 ELSE              /*                       @Y30OEAD*/
*                   DO;             /*                       @Y30OEAD*/
         B     @RC00154                                            0156
@RF00154 DS    0H                                                  0157
*                     IOSMSG=ON;    /* PERM ERR MSG          @Y30OEAD*/
*                     IOSLOG=ON;    /* OBR REQ'D             @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0158
*                   END;            /*                       @Y30OEAD*/
*               ELSE                /*                       @Y30OEAD*/
*                 IF IOBICCE=BOFF&  /* RTY FOR ICC ON        @Z30OEAD*/
*                     IOBCCCE=BOFF& /* RTY FOR CCC ON        @Z30OEAD*/
*                     IOBCDCE=BOFF  /* RTY FOR CDC ON        @Z30OEAD*/
*                   THEN            /*                       @Z30OEAD*/
         B     @RC00153                                            0160
@RF00153 TM    IOBICCE(EWAPTR),B'10001100'                         0160
         BNZ   @RF00160                                            0160
*                   DO;             /*                       @Y30OEAD*/
*                     IOSEX=BOFF;   /* ERROR CORRECTED       @Y30OEAD*/
*                     IOSERR=BOFF;  /* ERR RTN NOT IN        @Y30OEAD
*                                      CONTROL               @Y30OEAD*/
         NI    IOSEX(IOSBPTR),B'11011011'                          0163
*                     EWAFLG3=HEX0; /* IOB FLAG AND          @Z30OEAD*/
         MVI   EWAFLG3(EWAPTR),X'00'                               0164
*                     IOBCNT=HEX0;  /* ERROR COUNTERS        @Y30OEAD*/
         MVI   IOBCNT+1(EWAPTR),X'00'                              0165
         MVI   IOBCNT(EWAPTR),X'00'                                0165
*                   END;            /*                       @Y30OEAD*/
*         END;                      /*                       @Y30OEAD*/
*       ELSE                        /* SAME CMD FAILED       @Y30OEAD
*                                      NO ACTION             @Y30OEAD
*                                      NO, ERP NOT ENTER     @Y30OEAD*/
*         DO;                       /*                       @Y30OEAD*/
         B     @RC00137                                            0168
@RF00137 DS    0H                                                  0169
*           IOBERE=ON;              /* IND ERP ENTERED       @Y30OEAD*/
         OI    IOBERE(EWAPTR),B'00010000'                          0169
*           IOBRESTR=CCWREG;        /* LOAD RESTART ADDR     @Y30OEAD*/
         ST    CCWREG,IOBRESTR(,EWAPTR)                            0170
*           IOBRSTRT=ON;            /* SET ON RSTRT FLAG     @Y30OEAD*/
         OI    IOBRSTRT(EWAPTR),B'00000010'                        0171
*           RETRYCTR=ZERO;          /* ZERO RETRY CTR        @Y30OEAD*/
         MVI   RETRYCTR(EWAPTR),X'00'                              0172
*         END;                      /*                       @Y30OEAD*/
*       IF IOSMSG=ON&               /* ERROR NOT             @ZA18894*/
*           IOSLOG=ON THEN          /* CORRECTED             @ZA18894*/
@RC00137 TM    IOSMSG(IOSBPTR),B'00000101'                         0174
         BNO   @RF00174                                            0174
*         DO;                       /*                       @ZA18894*/
*           IOSERR=BOFF;            /* ERR IN CNTRL OFF      @ZA18894*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0176
*           EWAFLG3=HEX0;           /* RESET IOB FLAGS       @ZA18894*/
         MVI   EWAFLG3(EWAPTR),X'00'                               0177
*           IOBCNT=HEX0;            /* AND ERROR CTRS        @ZA18894*/
         MVI   IOBCNT+1(EWAPTR),X'00'                              0178
         MVI   IOBCNT(EWAPTR),X'00'                                0178
*         END;                      /*                       @ZA18894*/
*       ELSE                        /*                       @ZA18894*/
*         DO;                       /*                       @ZA18894*/
         B     @RC00174                                            0180
@RF00174 DS    0H                                                  0181
*                                                                  0181
*/* *******************************************************  @Y30OEAD*/
*/*  STSNCHCK SEGMENT-PRIORITY CHECK FOR STATUS BYTE UP      @Y30OEAD*/
*/*           TO UNIT CHECK                                  @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0181
*           IF STBYT2B5=ON×         /* CCC OR                @Y30OEAD*/
*               STBYT2B6=ON         /* ICC                   @Y30OEAD*/
*             THEN                  /* YES,                  @Y30OEAD*/
         TM    STBYT2B5(IOSBPTR),B'00000110'                       0181
         BZ    @RF00181                                            0181
*             DO;                   /* ATTEMPT RETRY         @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*/*  CCCICC SEGMENT-SET UP ACTION TO BE TAKEN FOR CHANNEL    @Y30OEAD*/
*/*   CONTROL CHECK AND INTERFACE CONTROL CHECK STATUS ERROR @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0183
*               IOSMSG=ON;          /* INDICATE PERM ERR     @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0183
*               IOSERR=BOFF;        /* ERR CNTRL OFF         @Z30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0184
*/* ******************************************************** @Y30OEAD*/
*/*    CKECK SEQUENCE CODES                                  @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0185
*               IF IBSEQ=SQC111     /* SEQ CODE SEVEN        @Y30OEAD*/
*                 THEN              /*                       @Y30OEAD*/
         TM    IBSEQ(EWAPTR),B'00000111'                           0185
         BNO   @RF00185                                            0185
*                 DO;               /*                       @Y30OEAD*/
*                   IOSMSG=BOFF;    /* PERM ERR OFF          @Y30OEAD*/
         NI    IOSMSG(IOSBPTR),B'11111011'                         0187
*                   IOSEX=BOFF;     /* EXCP COND OFF         @Z30OEAD*/
         NI    IOSEX(IOSBPTR),B'11111011'                          0188
*                   IOBRSTRT=BOFF;  /* TURN OFF RESTART      @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0189
*                   IOSCOD=GDCOMPL; /* IND GOOD COMP         @Y30OEAD*/
         MVI   IOSCOD(IOSBPTR),X'7F'                               0190
*                 END;              /*                       @Y30OEAD*/
*               ELSE                /*                       @Y30OEAD*/
*                 DO;               /*                       @Y30OEAD*/
         B     @RC00185                                            0192
@RF00185 DS    0H                                                  0193
*                   IF IOSCOD^=INTRECPT/* INTERCEPT          @Y30OEAD
*                                      COMPLETION CODE       @Y30OEAD*/
*                     THEN          /* NO, DO RECOVERY       @Y30OEAD*/
         CLI   IOSCOD(IOSBPTR),X'7E'                               0193
         BE    @RF00193                                            0193
*                     DO;           /* ACTION                @Y30OEAD*/
*                       IF(COMMAND^=TIO&/* TEST ALL RETRY    @Y30OEAD*/
*                           IBSEQ=SQC001×/* CONDITIONS       @Y30OEAD*/
*                           IBSEQ=SQC010×/* FOR THE          @Y30OEAD*/
*                           IBSEQ=SQC011×/* CHANNEL CONTROL  @Y30OEAD*/
*                           IBSEQ=SQC100×/* OR INTERFACE     @Y30OEAD*/
*                           IBSEQ=SQC101)/* CONTROL CHECK    @Y30OEAD*/
*                         THEN      /* ONE OF THE ABOVE      @Y30OEAD
*                                      TEST                  @Y30OEAD*/
         CLI   COMMAND(CCWREG),X'00'                               0195
         BE    @GL00009                                            0195
         TM    IBSEQ(EWAPTR),B'00000001'                           0195
         BNO   @GL00009                                            0195
         TM    IBSEQ(EWAPTR),B'00000110'                           0195
         BZ    @RT00195                                            0195
@GL00009 TM    IBSEQ(EWAPTR),B'00000010'                           0195
         BNO   @GL00008                                            0195
         TM    IBSEQ(EWAPTR),B'00000101'                           0195
         BZ    @RT00195                                            0195
@GL00008 TM    IBSEQ(EWAPTR),B'00000011'                           0195
         BNO   @GL00007                                            0195
         TM    IBSEQ(EWAPTR),B'00000100'                           0195
         BZ    @RT00195                                            0195
@GL00007 TM    IBSEQ(EWAPTR),B'00000100'                           0195
         BNO   @GL00006                                            0195
         TM    IBSEQ(EWAPTR),B'00000011'                           0195
         BZ    @RT00195                                            0195
@GL00006 TM    IBSEQ(EWAPTR),B'00000101'                           0195
         BNO   @RF00195                                            0195
         TM    IBSEQ(EWAPTR),B'00000010'                           0195
         BNZ   @RF00195                                            0195
@RT00195 DS    0H                                                  0196
*                         DO;       /*                       @Z30OEAD*/
*                           IOSERR=ON;/* ERR CNTRL ON        @Z30OEAD*/
         OI    IOSERR(IOSBPTR),B'00100000'                         0197
*                           IOSMSG=BOFF;/* LET RETRY OCCUR   @Y30OEAD*/
         NI    IOSMSG(IOSBPTR),B'11111011'                         0198
*                         END;      /*                       @Z30OEAD*/
*                       ELSE                                       0200
*                         ;         /* NULL ELSE             @Y30OEAD*/
@RF00195 DS    0H                                                  0201
*                       IF STBYT2B6=ON/* ICC                 @Y30OEAD*/
*                         THEN      /* YES                   @Y30OEAD*/
         TM    STBYT2B6(IOSBPTR),B'00000010'                       0201
         BNO   @RF00201                                            0201
*                         IF IOBICCE=ON/* ICC BEEN RETRIED   @Y30OEAD*/
*                           THEN    /* YES                   @Y30OEAD*/
         TM    IOBICCE(EWAPTR),B'00001000'                         0202
         BNO   @RF00202                                            0202
*                           DO;     /*                       @Z30OEAD*/
*                             IOSMSG=ON;/* PERM ERR MSG      @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0204
*                             IOSERR=BOFF;/* ERR CNTRL OFF   @Z30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0205
*                           END;    /*                       @Z30OEAD*/
*                         ELSE      /* NO                    @Y30OEAD*/
*                           IOBICCE=ON;/* ALLOW 1 RETRY      @Y30OEAD*/
         B     @RC00202                                            0207
@RF00202 OI    IOBICCE(EWAPTR),B'00001000'                         0207
*                       ELSE        /* NO                    @Y30OEAD*/
*                         IF IOBCCCE=ON/* CCC BEEN RETRIED   @Y30OEAD*/
*                           THEN    /* YES                   @Y30OEAD*/
         B     @RC00201                                            0208
@RF00201 TM    IOBCCCE(EWAPTR),B'00000100'                         0208
         BNO   @RF00208                                            0208
*                           DO;     /*                       @Z30OEAD*/
*                             IOSMSG=ON;/* PERM ERR NO RETRY @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0210
*                             IOSERR=BOFF;/* ERR CNTRL OFF   @Z30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0211
*                           END;    /*                       @Z30OEAD*/
*                         ELSE      /* NO                    @Y30OEAD*/
*                           IOBCCCE=ON;/* ALLOW 1 RETRY      @Y30OEAD*/
         B     @RC00208                                            0213
@RF00208 OI    IOBCCCE(EWAPTR),B'00000100'                         0213
*                     END;          /*                       @Y30OEAD*/
*                   ELSE                                           0215
*                     ;             /* NULL ELSE             @Y30OEAD*/
@RF00193 DS    0H                                                  0216
*                   ERPIB=ERPIB&&ERPIB;/* CLEAR OUT ERPIB    @Y30OEAD*/
@RC00193 XC    ERPIB(8,EWAPTR),ERPIB(EWAPTR)                       0216
*                 END;              /*                       @Y30OEAD*/
*             END;                  /*                       @Y30OEAD*/
*           ELSE                    /* NEITHER CCC / ICC     @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*/*   CHANNEL DATA CHECK                                     @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0219
*             IF STBYT2B4=ON        /* CDC                   @Y30OEAD*/
*               THEN                /* YES                   @Y30OEAD*/
         B     @RC00181                                            0219
@RF00181 TM    STBYT2B4(IOSBPTR),B'00001000'                       0219
         BNO   @RF00219                                            0219
*               IF IOBCDCE=ON       /* CDC BEEN RETRIED      @Y30OEAD*/
*                 THEN              /* YES                   @Y30OEAD*/
         TM    IOBCDCE(EWAPTR),B'10000000'                         0220
         BNO   @RF00220                                            0220
*                 DO;               /*                       @Z30OEAD*/
*                   IOSMSG=ON;      /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0222
*                   IOSERR=BOFF;    /* ERROR CNTRL OFF       @Z30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0223
*                 END;              /*                       @Z30OEAD*/
*               ELSE                /* NO                    @Y30OEAD*/
*                 IOBCDCE=ON;       /* IND RETRY ATTEMPT     @Y30OEAD*/
         B     @RC00220                                            0225
@RF00220 OI    IOBCDCE(EWAPTR),B'10000000'                         0225
*             ELSE                  /* NOT CCC,ICC / CDC     @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*/*   SHOULD NOT OCCUR OR UNIT EXCEPTION                     @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0226
*               IF STBYT1B0=ON×     /* IS A SHOULD           @Y30OEAD*/
*                   STBYT1B1=ON×    /* NOT OCCUR             @Y30OEAD*/
*                   STBYT1B2=ON×    /* STATUS BIT ON         @Y30OEAD*/
*                   STBYT1B7=ON     /* UNIT EXCEPTION ON     @Y30OEAD*/
*                 THEN              /*                       @Y30OEAD*/
         B     @RC00219                                            0226
@RF00219 TM    STBYT1B0(IOSBPTR),B'11100001'                       0226
         BZ    @RF00226                                            0226
*                 IOSMSG=ON;        /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0227
*               ELSE                /* NOT CHAN ERR OR       @Y30OEAD
*                                      SHOULD NOT OCCUR      @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    CHECK IF UNIT CHECK CONDITION                         @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0228
*                 IF STBYT1B6=ON    /* UNIT CHECK            @Y30OEAD*/
*                   THEN            /* YES,CHECK SENSE       @Y30OEAD*/
         B     @RC00226                                            0228
@RF00226 TM    STBYT1B6(IOSBPTR),B'00000010'                       0228
         BNO   @RF00228                                            0228
*                   IF UCBVLVER=ON& /* SPEC PROC I/R         @Z30OEAD*/
*                       IOBS0B1=ON& /* INTER REQ             @Z30OEAD*/
*                       IOBS1B3=ON  /* RTY AFTR INT DONE     @Z30OEAD*/
*                     THEN          /* YES                   @Z30OEAD*/
         L     @15,UCBXTADR(,UCBPTR)                               0229
         TM    UCBVLVER(@15),B'01000000'                           0229
         BNO   @RF00229                                            0229
         TM    IOBS0B1(IOSBPTR),B'01000000'                        0229
         BNO   @RF00229                                            0229
         TM    IOBS1B3(IOSBPTR),B'00010000'                        0229
         BNO   @RF00229                                            0229
*                     DO;           /*                       @Z30OEAD*/
*                       IOSERR=BOFF;/* ERP CNTRL OFF         @Z30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0231
*                       IOSMSG=BOFF;/* INTER REQ MSG         @Z30OEAD*/
         NI    IOSMSG(IOSBPTR),B'11111011'                         0232
*                       IOBIRM=ON;  /* IND INTER REQ         @Z30OEAD*/
         OI    IOBIRM(EWAPTR),B'00000100'                          0233
*                     END;          /*                       @Z30OEAD*/
*                   ELSE            /*                       @Z30OEAD*/
*                     IF UCBDKAMX^=ON&/* AMX BIT NOT ON &    @Y30OEAD*/
*                         (COMMAND=READ×/* FAILING COMMAND   @Y30OEAD
*                                      A READ OR             @Y30OEAD*/
*                         COMMAND=WRITE)/* FAILING COMMAND   @Y30OEAD
*                                      A WRITE               @Y30OEAD*/
*                       THEN        /* YES                   @Y30OEAD*/
         B     @RC00229                                            0235
@RF00229 L     @15,UCBXTADR(,UCBPTR)                               0235
         TM    UCBDKAMX(@15),B'10000000'                           0235
         BO    @RF00235                                            0235
         CLI   COMMAND(CCWREG),X'06'                               0235
         BE    @RT00235                                            0235
         CLI   COMMAND(CCWREG),X'05'                               0235
         BNE   @RF00235                                            0235
@RT00235 DS    0H                                                  0236
*                       IF(IOBS0B1=ON&/* INTERV REQ'D        @Y30OEAD*/
*                           IOBS1B3=ON)×/* RTY AFTR INT DONE @Y30OEAD*/
*                           (IOBS0B4=ON&/* DATA CHECK AND    @Y30OEAD*/
*                           IOBS1B4=ON)/* SPEC REC TRANS     @Y30OEAD*/
*                         THEN      /* YES                   @Y30OEAD*/
         TM    IOBS0B1(IOSBPTR),B'01000000'                        0236
         BNO   @GL00015                                            0236
         TM    IOBS1B3(IOSBPTR),B'00010000'                        0236
         BO    @RT00236                                            0236
@GL00015 TM    IOBS0B4(IOSBPTR),B'00001000'                        0236
         BNO   @RF00236                                            0236
         TM    IOBS1B4(IOSBPTR),B'00001000'                        0236
         BNO   @RF00236                                            0236
@RT00236 DS    0H                                                  0237
*                         DO;       /*                       @Y30OEAD*/
*                           IOSERR=BOFF;/* ERR CNTRL OFF     @Y30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0238
*                           IOSMSG=ON;/* IND PERM ERROR      @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0239
*                         END;      /*                       @Y30OEAD*/
*                       ELSE        /*                       @Y30OEAD*/
*                         DO;       /*                       @Y30OEAD*/
         B     @RC00236                                            0241
@RF00236 DS    0H                                                  0242
*                           IOSLOG=ON;/* INDICATE OBR        @Y30OEAD*/
*                           IOSMSG=ON;/* IND PERM ERR        @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0243
*                           IOSERR=BOFF;/* ERR CNTRL OFF     @Y30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0244
*                         END;      /*                       @Y30OEAD*/
*                     ELSE          /*                       @Y30OEAD*/
*                       CALL UNITCHK;/*                      @Y30OEAD*/
         B     @RC00235                                            0246
@RF00235 BAL   @14,UNITCHK                                         0246
*                 ELSE              /* NONE OF ABOVE         @Y30OEAD*/
*                   DO;             /* CHECK REMAINING       @Y30OEAD
*                                      STATUS                @Y30OEAD*/
         B     @RC00228                                            0247
@RF00228 DS    0H                                                  0248
*/* *******************************************************  @Y30OEAD*/
*/*  STATUSCHK SEGMENT-COMPLETES THE PRIORITY CHECK BY       @Y30OEAD*/
*/*  TESTING FOR THE STATUS ERRORS-CHAINING CHECK            @Y30OEAD*/
*/*  PROGRAM CHECK,PROTECTION CHECK AND                      @Y30OEAD*/
*/*   INCORRECT LENGTH. IF NONE ON THEN ERROR IS CORRECTED   @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0248
*                     IF STBYT2B7=ON×/* CHAINING CHECK OR    @Y30OEAD*/
*                         STBYT2B2=ON×/* PROGRAM CHECK OR    @Y30OEAD*/
*                         STBYT2B3=ON×/* PROTECTION CHK OR   @Y30OEAD*/
*                         STBYT2B1=ON/* INCORRECT LENGTH     @Y30OEAD*/
*                       THEN        /* YES                   @Y30OEAD*/
         TM    STBYT2B7(IOSBPTR),B'01110001'                       0248
         BZ    @RF00248                                            0248
*                       DO;         /*                       @Z30OEAD*/
*                         IOSMSG=ON;/* PERM ERR MSG          @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0250
*                         IOSERR=BOFF;/* ERR CNTRL OFF       @Z30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011111'                         0251
*                       END;        /*                       @Z30OEAD*/
*                     ELSE          /* ERROR CORRECTED       @Y30OEAD*/
*                       DO;         /*                       @Y30OEAD*/
         B     @RC00248                                            0253
@RF00248 DS    0H                                                  0254
*                         IOSERR=BOFF;/* ERRRTN NOT IN       @Y30OEAD
*                                      CONTROL               @Y30OEAD*/
*                         IOSEX=BOFF;/* ERROR CORRECTED      @Y30OEAD*/
         NI    IOSERR(IOSBPTR),B'11011011'                         0255
*                         IOBIRM=BOFF;/* INTER BIT OFF       @Z30OEAD*/
*                         IOBRSTRT=BOFF;/* TURN OFF RESTART  @Y30OEAD
*                                      FLAG                  @Y30OEAD*/
         NI    IOBIRM(EWAPTR),B'11111001'                          0257
*                         EWAFLG3=HEX0;/* ZERO OUT FLAG 3    @Z30OEAD*/
         MVI   EWAFLG3(EWAPTR),X'00'                               0258
*                         IOBCNT=HEX0;/* ZERO OUT RETRY      @Y30OEAD
*                                      COUNTERS              @Y30OEAD*/
         MVI   IOBCNT+1(EWAPTR),X'00'                              0259
         MVI   IOBCNT(EWAPTR),X'00'                                0259
*                         IOBRESTR=AZERO;/* ZERO RESTART ADDR      0260
*                                                            @Y30OEAD*/
         SLR   @15,@15                                             0260
         ST    @15,IOBRESTR(,EWAPTR)                               0260
*                         EWASTUP=ZERO;/* ZERO SDR TABLE     @Y30OEAD
*                                      INDEX                 @Y30OEAD*/
         STH   @15,EWASTUP(,EWAPTR)                                0261
*                       END;        /*                       @Y30OEAD*/
*                   END;            /*                       @Y30OEAD*/
@RC00248 DS    0H                                                  0264
*         END;                      /*                       @Y30OEAD*/
@RC00228 DS    0H                                                  0264
@RC00226 DS    0H                                                  0264
@RC00219 DS    0H                                                  0264
@RC00181 DS    0H                                                  0265
*     END;                          /*                       @ZA18894*/
@RC00174 DS    0H                                                  0266
*/* ******************************************************** @Y30OEAD*/
*/*  RETRY SEGMENT-DETERMINE IF A READ OR WRITE COMMAND      @Y30OEAD*/
*/*    RESTART CHAIN AT FAILING CCW IF A READ                @Y30OEAD*/
*/*    RESTART COMPLETE CHAIN IF A WRITE                     @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0266
*   IF IOBRTY=ON                    /* RETRY NEEDED          @Y30OEAD*/
*     THEN                          /* YES,                  @Y30OEAD*/
@RC00114 TM    IOBRTY(EWAPTR),B'00001000'                          0266
         BNO   @RF00266                                            0266
*     DO;                           /*                       @Y30OEAD*/
*       IF COMMAND=TIO×             /* IS IT TEST I/O        @Y30OEAD*/
*           COMMAND=READIPL×        /* IS IT READ IPL        @Y30OEAD*/
*           COMMAND=SEEK×           /* IS IT A SEEK          @Y30OEAD*/
*           COMMAND=FEED×           /* IS IT A FEED          @Y30OEAD*/
*           COMMAND=DFNOPS×         /* IS IT DEFINE OPS      @Y30OEAD*/
*           COMMAND=NOOP            /* IS IT A NO OP         @Y30OEAD*/
*         THEN                      /*                       @Y30OEAD*/
         CLI   COMMAND(CCWREG),X'00'                               0268
         BE    @RT00268                                            0268
         CLI   COMMAND(CCWREG),X'02'                               0268
         BE    @RT00268                                            0268
         CLI   COMMAND(CCWREG),X'07'                               0268
         BE    @RT00268                                            0268
         CLI   COMMAND(CCWREG),X'17'                               0268
         BE    @RT00268                                            0268
         CLI   COMMAND(CCWREG),X'2F'                               0268
         BE    @RT00268                                            0268
         CLI   COMMAND(CCWREG),X'03'                               0268
         BNE   @RF00268                                            0268
@RT00268 DS    0H                                                  0269
*         DO;                       /*                       @Z30OEAD*/
*           IOSRST=WK3PTR;          /* SET RESTART ADDR      @Z30OEAD*/
         ST    WK3PTR,IOSRST(,IOSBPTR)                             0270
*           IOSVST=CCWREG;          /* SET RESTART ADDR      @Z30OEAD*/
         ST    CCWREG,IOSVST(,IOSBPTR)                             0271
*           TICBUILD=BOFF;          /* RESET CHAIN           @ZA04476*/
         NI    TICBUILD(EWAPTR),B'11011111'                        0272
*         END;                      /*                       @Z30OEAD*/
*       ELSE                        /*                       @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    SET UP TO RETRY A READ                                @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0274
*         IF COMMAND=READ           /* YES ITS A READ        @Y30OEAD*/
*           THEN                    /* YES,                  @Y30OEAD*/
         B     @RC00268                                            0274
@RF00268 CLI   COMMAND(CCWREG),X'06'                               0274
         BNE   @RF00274                                            0274
*           DO;                     /*                       @Y30OEAD*/
*             IF CCW1OP=FEED&       /* 1ST CMD A FEED        @Y30OEAD*/
*                 CCW2OP=TIC        /* 2ND CMD A TIC         @Y30OEAD*/
*               THEN                /* YES                   @Y30OEAD*/
         CLI   CCW1OP(STCPPTR),X'17'                               0276
         BNE   @RF00276                                            0276
         CLI   CCW2OP(STCPPTR),X'08'                               0276
         BNE   @RF00276                                            0276
*               DO;                 /*                       @Y30OEAD*/
*                 IOSVST=IOSVST+CCWLEN;/* SET VIRT START     @ZA29140*/
         LA    @15,8                                               0278
         L     @00,IOSVST(,IOSBPTR)                                0278
         ALR   @00,@15                                             0278
         ST    @00,IOSVST(,IOSBPTR)                                0278
*                 IOSRST=IOSRST+CCWLEN;/* SET REAL START     @ZA29140*/
         AL    @15,IOSRST(,IOSBPTR)                                0279
         ST    @15,IOSRST(,IOSBPTR)                                0279
*                 TICBUILD=BOFF;    /* RESET CHAIN           @ZA29140*/
         NI    TICBUILD(EWAPTR),B'11011111'                        0280
*               END;                /*                       @Y30OEAD*/
*             ELSE                  /*                       @ZA29140*/
*/* *******************************************************  @Y30OEAD*/
*/*   THE FIRST CCW IS SAVED AND A TIC CCW IS BUILT TO       @Y30OEAD*/
*/*   POINT TO THE CCW THAT FAILED, IF SPEC RECORD THE       @Y30OEAD*/
*/*   TIC CCW POINTS TO THE FAILING CCW PLUS 1               @Y30OEAD*/
*/*   THE CURRENT SEEK ADDR IS SAVED AND A NEW SEEK          @Y30OEAD*/
*/*   ADDR IS BUILT TO POINT TO THE FAILING RECORD           @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0282
*               IF CCWREG=STCPPTR+CCWTWO/* 3RD CCW FAIL      @Y30OEAD*/
*                 THEN              /*                       @Y30OEAD*/
         B     @RC00276                                            0282
@RF00276 LA    @15,16                                              0282
         ALR   @15,STCPPTR                                         0282
         CR    CCWREG,@15                                          0282
         BNE   @RF00282                                            0282
*                 IOBRSTRT=BOFF;    /* IND START NEEDED      @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0283
*               ELSE                /*                       @Y30OEAD*/
*                 DO;               /*                       @Y30OEAD*/
         B     @RC00282                                            0284
@RF00282 DS    0H                                                  0285
*                   SAVECCW=CCW3;   /* SAVE 3RD CCW          @Y30OEAD*/
         MVC   SAVECCW(8,EWAPTR),CCW3(STCPPTR)                     0285
*                   SAVESEEK=IOBSKADR;/* SAVE SEEK ADDR      @Y30OEAD*/
         L     @15,VIRTSEEK-1(,EWAPTR)                             0286
         LA    @15,0(,@15)                                         0286
         MVC   SAVESEEK(4,EWAPTR),IOBSKADR(@15)                    0286
*                   IOBSKSS=IOBSENS5;/* GET ERROR SEEK       @Y30OEAD*/
         IC    @00,IOBSENS5(,EWAPTR)                               0287
         STC   @00,IOBSKSS(,@15)                                   0287
*                   TICBUILD=ON;    /* IND ERP BUILT TIC     @Z30OEAD*/
         OI    TICBUILD(EWAPTR),B'00100000'                        0288
*                   CCW3OP=TIC;     /* COMMAND TO TIC        @Y30OEAD*/
         MVI   CCW3OP(STCPPTR),X'08'                               0289
*                   CCW3ADDR=WK3PTR;/* ADDR FAILING CCW      @Y30OEAD*/
         STCM  WK3PTR,7,CCW3ADDR(STCPPTR)                          0290
*                   IOBRSTRT=BOFF;  /* INDICATE START        @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0291
*                 END;              /*                       @Y30OEAD*/
*           END;                    /*                       @Y30OEAD*/
*         ELSE                      /*                       @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*/*   IS THE FAILING CCW IN THE CHAIN A TIC                  @Y30OEAD*/
*/* *******************************************************  @Y30OEAD*/
*                                                                  0294
*           IF COMMAND=TIC          /* FAILING CCW A TIC     @Y30OEAD*/
*             THEN                  /* YES                   @Y30OEAD*/
         B     @RC00274                                            0294
@RF00274 CLI   COMMAND(CCWREG),X'08'                               0294
         BNE   @RF00294                                            0294
*             DO;                   /*                       @Y30OEAD*/
*               SAVECCW=CCW3;       /* SAVE 3RD CCW          @Y30OEAD*/
         MVC   SAVECCW(8,EWAPTR),CCW3(STCPPTR)                     0296
*               SAVESEEK=IOBSKADR;  /* SAVE SEEK ADDR        @Y30OEAD*/
         L     @15,VIRTSEEK-1(,EWAPTR)                             0297
         LA    @15,0(,@15)                                         0297
         MVC   SAVESEEK(4,EWAPTR),IOBSKADR(@15)                    0297
*               IOBSKSS=IOBSENS5;   /* GET ERROR SEEK        @Y30OEAD*/
         IC    @00,IOBSENS5(,EWAPTR)                               0298
         STC   @00,IOBSKSS(,@15)                                   0298
*               TICBUILD=ON;        /* IND ERP BUILT TIC     @Z30OEAD*/
         OI    TICBUILD(EWAPTR),B'00100000'                        0299
*               CCW3OP=TIC;         /* COMMAND TO TIC        @Y30OEAD*/
         MVI   CCW3OP(STCPPTR),X'08'                               0300
*               CCW3ADDR=DATADDR;   /* ADDR FROM TIC CCW     @Y30OEAD*/
         MVC   CCW3ADDR(3,STCPPTR),DATADDR(CCWREG)                 0301
*               IOBRSTRT=BOFF;      /* INDICATE START        @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0302
*             END;                  /*                       @Y30OEAD*/
*           ELSE                    /*                       @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    SET UP TO RETRY A WRITE                               @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0304
*             IF COMMAND=WRITE×     /* IS IT A WRITE         @Y30OEAD*/
*                 COMMAND=WRITECTL  /* IS IT A WRITECTL      @Y30OEAD*/
*               THEN                /* YES,                  @Y30OEAD*/
         B     @RC00294                                            0304
@RF00294 CLI   COMMAND(CCWREG),X'05'                               0304
         BE    @RT00304                                            0304
         CLI   COMMAND(CCWREG),X'21'                               0304
         BNE   @RF00304                                            0304
@RT00304 DS    0H                                                  0305
*               IOBRSTRT=BOFF;      /* INDICATE START        @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0305
*             ELSE                                                 0306
*               ;                   /* NULL ELSE             @Y30OEAD*/
@RF00304 DS    0H                                                  0307
*     END;                          /*                       @Y30OEAD*/
@RC00294 DS    0H                                                  0307
@RC00274 DS    0H                                                  0307
@RC00268 DS    0H                                                  0308
*/* ******************************************************** @Y30OEAD*/
*/*  EXITCODE SEGMENT                                        @Y30OEAD*/
*/*    A. WTO MODULE FOR MSG AND POSSABLE LOGOUT             @Y30OEAD*/
*/*    B. SDR MODULE TO UP DATE CTR'S AND RETRY              @Y30OEAD*/
*/*    C. OBR MODULE FOR LOGOUT                              @Y30OEAD*/
*/*    D. IOS FOR RETRY OR ERROR CORRECTED                   @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0308
*   IF IOSLOG=ON                    /* OBR UPDATE NEED       @Y30OEAD*/
*     THEN                          /* YES                   @Y30OEAD*/
@RF00266 TM    IOSLOG(IOSBPTR),B'00000001'                         0308
         BNO   @RF00308                                            0308
*     XCTLPR=LOGOBR;                /* OBR RTN FOR XCTL      @Y30OEAD*/
         LA    XCTLPR,256                                          0309
*/* ******************************************************** @Y30OEAD*/
*/*    SET UP FOR SDR UPDATE                                 @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0310
*   IF IOBSDR=ON                    /* SDR UPDATE NEED       @Y30OEAD*/
*     THEN                          /* YES,                  @Y30OEAD*/
@RF00308 TM    IOBSDR(EWAPTR),B'00000001'                          0310
         BNO   @RF00310                                            0310
*     DO;                           /*                       @Y30OEAD*/
*       STTPTR=CVTSTB;              /* GET POINTER TO        @Y30OEAD
*                                      STATISTIC TAB         @Y30OEAD*/
         L     @15,CVTPTR                                          0312
         L     STTPTR,CVTSTB(,@15)                                 0312
*       WK2PTR=STTPTR;              /* USE REG AS INDEX      @Y30OEAD
*                                      THRU TAB              @Y30OEAD*/
         LR    WK2PTR,STTPTR                                       0313
*       WK4PTR=UCBSTI;              /* STAT TAB INDEX        @Y30OEAD*/
         L     @15,UCBEXTPT(,UCBPTR)                               0314
         SLR   WK4PTR,WK4PTR                                       0314
         IC    WK4PTR,UCBSTI(,@15)                                 0314
*       DO WHILE(IOSUCB>STUCBPTR&   /* CORRECT SECTION       @O30AEAD
*                                      OF TAB FOUND          @Y30OEAD*/
*             WK2PTR^=SDREND);      /* IS IT TBLE END        @O30AEAD*/
         B     @DE00315                                            0315
@DL00315 DS    0H                                                  0316
*         WK4PTR=WK4PTR+STIND;      /* INCR INDEX +256       @O30AEAD*/
         AL    WK4PTR,@CF00159                                     0316
*         WK2PTR=WK2PTR+CTENLEN;    /* INCR INDEX +2         @Y30OEAD*/
         AL    WK2PTR,@CF00141                                     0317
*       END;                        /*                       @O30AEAD*/
@DE00315 LH    @15,STUCBPTR(,WK2PTR)                               0318
         N     @15,@CF01649                                        0318
         C     @15,IOSUCB(,IOSBPTR)                                0318
         BNL   @DC00315                                            0318
         C     WK2PTR,@CF00164                                     0318
         BNE   @DL00315                                            0318
@DC00315 DS    0H                                                  0319
*       IF WK2PTR^=SDREND           /* IS IT TBLE END        @O30AEAD*/
*         THEN                      /* NO                    @O30AEAD*/
         C     WK2PTR,@CF00164                                     0319
         BE    @RF00319                                            0319
*         DO;                       /*                       @O30AEAD*/
*           STTPTR=STTPTR+(WK4PTR*VAL10);/* GET STAT TAB     @O30AEAD
*                                      FOR THIS DEVICE       @O30AEAD*/
         LR    @15,WK4PTR                                          0321
         MH    @15,@CH00161                                        0321
         ALR   STTPTR,@15                                          0321
*           EWASSTAT=SDRNOUPD;      /* UPDATE CTR NO         @O30AEAD*/
         MVC   EWASSTAT(2,EWAPTR),SDRNOUPD(EWAPTR)                 0322
*           XCTLPR=LOGSDR;          /* SDR RTN FOR XCTL      @O30AEAD*/
         LA    XCTLPR,254                                          0323
*         END;                      /*                       @O30AEAD*/
*       ELSE                        /*                       @O30AEAD*/
*         IOBSDR=BOFF;              /* NO SDR COUNT          @O30AEAD*/
         B     @RC00319                                            0325
@RF00319 NI    IOBSDR(EWAPTR),B'11111110'                          0325
*     END;                          /*                       @Y30OEAD*/
@RC00319 DS    0H                                                  0327
*   IF IOSMSG=ON×                   /* WTO ROUTINE NEED      @Y30OEAD*/
*       IOBIRM=ON                   /*                       @Y30OEAD*/
*     THEN                          /* YES                   @Y30OEAD*/
@RF00310 TM    IOSMSG(IOSBPTR),B'00000100'                         0327
         BO    @RT00327                                            0327
         TM    IOBIRM(EWAPTR),B'00000100'                          0327
         BNO   @RF00327                                            0327
@RT00327 DS    0H                                                  0328
*     XCTLPR=WTORTN;                /* LOAD XCTL RTN NUM     @Y30OEAD*/
         LA    XCTLPR,253                                          0328
*   IF IOSMSG=ON×                   /* PERM ERR MSG          @Y30OEAD*/
*       IOBIRM=ON×                  /* INTERV REQ'D          @Y30OEAD*/
*       IOSLOG=ON×                  /* OBR NEEDED            @Y30OEAD*/
*       IOBSDR=ON                   /* SDR NEEDED            @Y30OEAD*/
*     THEN                          /*                       @Y30OEAD*/
@RF00327 TM    IOSMSG(IOSBPTR),B'00000100'                         0329
         BO    @RT00329                                            0329
         TM    IOBIRM(EWAPTR),B'00000100'                          0329
         BO    @RT00329                                            0329
         TM    IOSLOG(IOSBPTR),B'00000001'                         0329
         BO    @RT00329                                            0329
         TM    IOBSDR(EWAPTR),B'00000001'                          0329
         BNO   @RF00329                                            0329
@RT00329 DS    0H                                                  0330
*     XCTLRG=ADDR(XCTL);            /* BRANCH TO XCTL        @Y30OEAD
*                                      ROUTINE               @Y30OEAD*/
         L     @15,CVTPTR                                          0330
         L     XCTLRG,CVTXTLER(,@15)                               0330
*   ELSE                            /*                       @Y30OEAD*/
*     DO;                           /*                       @Y30OEAD*/
         B     @RC00329                                            0331
@RF00329 DS    0H                                                  0332
*       GENERATE;                                                  0332
*                                                          /*@Y30OEAD*/
       SVC 15                           ERR EXCP             @Y30OEAD
       SVC 3                            RETURN TO CALLER     @Y30OEAD
*     END;                          /*                       @Y30OEAD*/
*UNITCHK:                                                          0334
*   PROCEDURE OPTIONS(NOSAVE,NOSAVEAREA);/*                  @ZA04476*/
@EL00001 DS    0H                                                  0334
@EF00001 DS    0H                                                  0334
@ER00001 BR    @14                                                 0334
UNITCHK  DS    0H                                                  0335
*   SAVE14=REG14;                   /* SAVE REG 14           @ZA04476*/
         ST    REG14,SAVE14(,EWAPTR)                               0335
*/* ******************************************************** @Y30OEAD*/
*/*  UNITCHK SEGMENT-PERFORMS PRIORITY CHECK FOR SENSE BITS  @Y30OEAD*/
*/*          AND INCLUDES SEGMENTS TO SETUP ACTIONS          @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0336
*   IF IOBS0B5=ON×                  /* NOT USED SNS BIT      @Y30OEAD*/
*       IOBS0B6=ON×                 /* NOT USED SNS BIT      @Y30OEAD*/
*       IOBS0B7=ON×                 /* NOT USED SNS BIT      @Y30OEAD*/
*       IOBS1B5=ON×                 /* NOT USED SNS BIT      @Y30OEAD*/
*       IOBS1B6=ON×                 /* NOT USED SNS BIT      @Y30OEAD*/
*       IOBS1B7=ON                  /* NOT USED SNS BIT      @Y30OEAD*/
*     THEN                          /*                       @Y30OEAD*/
         TM    IOBS0B5(IOSBPTR),B'00000111'                        0336
         BNZ   @RT00336                                            0336
         TM    IOBS1B5(IOSBPTR),B'00000111'                        0336
         BZ    @RF00336                                            0336
@RT00336 DS    0H                                                  0337
*     DO;                           /*                       @Y30OEAD*/
*       IOSLOG=ON;                  /* INDICATE OBR NEED     @Y30OEAD*/
*       IOSMSG=ON;                  /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0339
*     END;                          /*                       @Y30OEAD*/
*   ELSE                            /*                       @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*  UNITCHK2 SEGMENT-PERFORMS PRIORITY CHECK FOR SENSE BITS @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0341
*     DO;                           /*                       @Y30OEAD*/
         B     @RC00336                                            0341
@RF00336 DS    0H                                                  0342
*/* ******************************************************** @Y30OEAD*/
*/*    EQUIPMENT CHECK                                       @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0342
*       IF IOBS0B3=ON               /* EQUIP CHECK           @Y30OEAD*/
*         THEN                      /* YES,                  @Y30OEAD*/
         TM    IOBS0B3(IOSBPTR),B'00010000'                        0342
         BNO   @RF00342                                            0342
*         IF IOBS1B0=ON×            /* PERMANENT ERR OR      @Y30OEAD*/
*             IOBS1B3=ON×           /* RETRY AFTER           @Y30OEAD
*                                      INTERV DONE           @Y30OEAD*/
*             IOBS1B2=ON            /* MOTION MALF           @Y30OEAD*/
*           THEN                    /*                       @Y30OEAD*/
         TM    IOBS1B0(IOSBPTR),B'10110000'                        0343
         BZ    @RF00343                                            0343
*           DO;                     /*                       @Y30OEAD*/
*             IOSLOG=ON;            /* INDICATE OBR NEED     @Y30OEAD*/
*             IOSMSG=ON;            /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0346
*           END;                    /*                       @Y30OEAD*/
*         ELSE                      /*                       @Y30OEAD*/
*           DO;                     /*                       @Y30OEAD*/
         B     @RC00343                                            0348
@RF00343 DS    0H                                                  0349
*/* ******************************************************** @Y30OEAD*/
*/*   EQUIPCHK SEGMENT-SETS UP ACTIONS TO BE TAKEN FOR       @Y30OEAD*/
*/*       EQUIPMENT CHECK                                    @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0349
*             IF IOBSENS1=SNSUTCK   /* UNIT CHECK ON         @Y30OEAD
*                                      SENSE COMMAND         @Y30OEAD
*                                      WHEN EQUIP CHK        @Y30OEAD*/
*               THEN                /* YES,                  @Y30OEAD*/
         CLI   IOBSENS1(IOSBPTR),X'FE'                             0349
         BNE   @RF00349                                            0349
*               DO;                 /*                       @Y30OEAD*/
*                 IOSMSG=ON;        /* INDICATE PERM ERR     @Y30OEAD*/
*                 IOSLOG=ON;        /* INDICATE OBR NEED     @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0352
*               END;                /*                       @Y30OEAD*/
*             ELSE                  /*                       @Y30OEAD*/
*               DO;                 /*                       @Y30OEAD*/
         B     @RC00349                                            0354
@RF00349 DS    0H                                                  0355
*/* ******************************************************** @Y30OEAD*/
*/*    EQUIPMENT WITH AUTO RETRY                             @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0355
*                 IF IOBS1B1=ON     /* AUTO RETRY ON         @Y30OEAD*/
*                   THEN            /* YES,                  @Y30OEAD*/
         TM    IOBS1B1(IOSBPTR),B'01000000'                        0355
         BNO   @RF00355                                            0355
*                   DO;             /*                       @Y30OEAD*/
*                     IF IOBSENS2=SDRCK0/* NRF WITH ID       @Y30OEAD
*                                      CRC ERR               @Y30OEAD*/
*                       THEN        /* YES,                  @Y30OEAD*/
         CLI   IOBSENS2(EWAPTR),X'E1'                              0357
         BNE   @RF00357                                            0357
*                       SDRUPD1=SIX;/* UPDATE CTR SIX        @Y30OEAD*/
         MVI   SDRUPD1(EWAPTR),X'04'                               0358
*                     ELSE          /*                       @Y30OEAD*/
*                       DO;         /*                       @Y30OEAD*/
         B     @RC00357                                            0359
@RF00357 DS    0H                                                  0360
*                         IF IOBSENS2=SDRCK1/* NRF W-OUT ID CRC    0360
*                                                            @Y30OEAD*/
*                           THEN    /* YES,                  @Y30OEAD*/
         CLI   IOBSENS2(EWAPTR),X'E2'                              0360
         BNE   @RF00360                                            0360
*                           SDRUPD1=SEVEN;/* UPDATE CTR SEVEN      0361
*                                                            @Y30OEAD*/
         MVI   SDRUPD1(EWAPTR),X'02'                               0361
*                         ELSE      /*                       @04XAAAD*/
*                           DO;     /*                       @Z30OEAD*/
         B     @RC00360                                            0362
@RF00360 DS    0H                                                  0363
*                             IF IOBSENS2=SDRCK2/* FAST / SLOW INDEX
*                                                            @Y30OEAD*/
*                               THEN/* YES                   @Y30OEAD*/
         CLI   IOBSENS2(EWAPTR),X'E3'                              0363
         BNE   @RF00363                                            0363
*                               SDRUPD1=EIGHT;/* UPDATE CTR EIGHT  0364
*                                                            @Y30OEAD*/
         MVI   SDRUPD1(EWAPTR),X'01'                               0364
*                             ELSE  /*                       @Y30OEAD*/
*                               DO; /*                       @Z30OEAD*/
         B     @RC00363                                            0365
@RF00363 DS    0H                                                  0366
*                                 IF IOBSENS2=SDRCK3/* ADDR MARK ID
*                                      FAIL                  @Z30OEAD*/
*                                   THEN/* YES,              @Z30OEAD*/
         CLI   IOBSENS2(EWAPTR),X'E6'                              0366
         BNE   @RF00366                                            0366
*                                   SDRUPD2=NINE;/* UPDATE CTR NINE
*                                                            @Z30OEAD*/
         MVI   SDRUPD2(EWAPTR),X'80'                               0367
*                                 ELSE/*                     @Z30OEAD*/
*                                   DO;/*                    @Z30OEAD*/
         B     @RC00366                                            0368
@RF00366 DS    0H                                                  0369
*                                    IF IOBSENS2=SDRCK4/* DATA AM  0369
*                                      INCORRECT             @Z30OEAD*/
*                                      THEN/* YES,           @Z30OEAD*/
         CLI   IOBSENS2(EWAPTR),X'E5'                              0369
         BNE   @RF00369                                            0369
*                                     SDRUPD2=TEN;/* UPDATE CTR TEN
*                                                            @Z30OEAD*/
         MVI   SDRUPD2(EWAPTR),X'40'                               0370
*                                    ELSE/*                  @Z30OEAD*/
*                                     IF IOBSENS2=SDRCK6/* CNTRL UNIT
*                                      OVERUN                @Z30OEAD*/
*                                       THEN/* YES,          @Z30OEAD*/
         B     @RC00369                                            0371
@RF00369 CLI   IOBSENS2(EWAPTR),X'E4'                              0371
         BNE   @RF00371                                            0371
*                                      SDRUPD2=TWELVE;/* UPDATE CTR
*                                      TWELVE                @Z30OEAD*/
         MVI   SDRUPD2(EWAPTR),X'10'                               0372
*                                     ELSE/*                 @Z30OEAD*/
*                                      DO;/*                 @Y30OEAD*/
         B     @RC00371                                            0373
@RF00371 DS    0H                                                  0374
*                                       IOSMSG=ON;/* PERM ERR MSG  0374
*                                                            @Y30OEAD*/
*                                       IOSLOG=ON;/* INDICATE OBR  0375
*                                      NEED                  @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0375
*                                      END;/*                @Y30OEAD*/
*                                   END;/*                   @Z30OEAD*/
@RC00371 DS    0H                                                  0377
@RC00369 DS    0H                                                  0378
*                               END;/*                       @Z30OEAD*/
@RC00366 DS    0H                                                  0379
*                           END;    /*                       @Z30OEAD*/
@RC00363 DS    0H                                                  0380
*                       END;        /*                       @Y30OEAD*/
@RC00360 DS    0H                                                  0381
*                     IF IOSMSG^=ON /* PERM ERR ON           @Y30OEAD*/
*                       THEN        /*                       @Y30OEAD*/
@RC00357 TM    IOSMSG(IOSBPTR),B'00000100'                         0381
         BO    @RF00381                                            0381
*                       DO;         /*                       @Y30OEAD*/
*                         IOBEQ=ON; /* RETRY ON              @Y30OEAD*/
         OI    IOBEQ(EWAPTR),B'00010000'                           0383
*                         IOBSDR=ON;/* INDICATE SDR NEED     @Y30OEAD*/
*                         IOBRTY=ON;/* IND RETRY             @Y30OEAD*/
         OI    IOBSDR(EWAPTR),B'00001001'                          0385
*                       END;        /*                       @Y30OEAD*/
*                     ELSE                                         0387
*                       ;           /* NULL ELSE             @Y30OEAD*/
@RF00381 DS    0H                                                  0388
*                   END;            /*                       @Y30OEAD*/
*                 ELSE              /*                       @Y30OEAD*/
*                   DO;             /*                       @Y30OEAD*/
         B     @RC00355                                            0389
@RF00355 DS    0H                                                  0390
*                     IOSMSG=ON;    /* PERM ERR MSG          @Y30OEAD*/
*                     IOSLOG=ON;    /* INDICATE OBR NEED     @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0391
*                   END;            /*                       @Y30OEAD*/
*               END;                /*                       @Y30OEAD*/
*           END;                    /*                       @Y30OEAD*/
*       ELSE                        /* NO,CONTINUE           @Y30OEAD
*                                      PRIORITY CHK          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    INTERVENTION REQUIRED                                 @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0395
*         IF(IOBS0B1=ON&            /* INTERV REQ'D AND      @Y30OEAD*/
*             IOBS1B0=ON)           /* PERMANENT ERR         @Y30OEAD*/
*           THEN                    /*                       @Y30OEAD*/
         B     @RC00342                                            0395
@RF00342 TM    IOBS0B1(IOSBPTR),B'01000000'                        0395
         BNO   @RF00395                                            0395
         TM    IOBS1B0(IOSBPTR),B'10000000'                        0395
         BNO   @RF00395                                            0395
*           DO;                     /*                       @Y30OEAD*/
*             IOSLOG=ON;            /* INDICATE OBR NEED     @Y30OEAD*/
*             IOSMSG=ON;            /* PERM ERRMSG           @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0398
*           END;                    /*                       @Y30OEAD*/
*         ELSE                      /*                       @Y30OEAD*/
*           IF IOBS0B1=ON           /* INTERV REQ'D          @Y30OEAD*/
*             THEN                  /* YES, PROCESS          @Y30OEAD
*                                      INTERV REQ'D          @Y30OEAD*/
         B     @RC00395                                            0400
@RF00395 TM    IOBS0B1(IOSBPTR),B'01000000'                        0400
         BNO   @RF00400                                            0400
*             DO;                   /*                       @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    INTREQ SEGMENT-SET UP ACTIONS TO BE TAKEN FOR THE     @Y30OEAD*/
*/*       INTERVENTION REQUIRED SENSE BIT SETTINGS           @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0402
*               IF(IOBS1B2=ON&      /* MOTION                @Y30OEAD
*                                      MALFUNCTION           @Y30OEAD*/
*                   IOBS1B3=ON)     /* AND RETRY AFTER       @Y30OEAD
*                                      INTERV COMPLETE       @Y30OEAD*/
*                 THEN              /*                       @Y30OEAD*/
         TM    IOBS1B2(IOSBPTR),B'00110000'                        0402
         BNO   @RF00402                                            0402
*                 DO;               /*                       @Y30OEAD*/
*                   IOSMSG=BOFF;    /* INTER REQ'D           @ZA04249*/
*                   IOSLOG=ON;      /* INDICATE OBR NEED     @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000001'                         0405
         NI    IOSMSG(IOSBPTR),B'11111011'                         0405
*                   IOBIRM=ON;      /* IND INTER REQ'D       @ZA04249*/
*                   IOBRTY=ON;      /* INDICATE RETRY        @ZA04249*/
         OI    IOBIRM(EWAPTR),B'00001100'                          0407
*                   IOBIR=ON;       /* RETRY ON              @ZA04249*/
         OI    IOBIR(EWAPTR),B'00000001'                           0408
*                 END;              /*                       @Y30OEAD*/
*               ELSE                /*                       @Y30OEAD*/
*                 IF IOBS1B3=ON     /* RETRY AFTER INTER     @Y30OEAD*/
*                   THEN            /* COMPLETE ON           @Y30OEAD*/
         B     @RC00402                                            0410
@RF00402 TM    IOBS1B3(IOSBPTR),B'00010000'                        0410
         BNO   @RF00410                                            0410
*                   DO;             /*                       @Y30OEAD*/
*                     IF IOSCOD=INTRECPT/* INTERCEPT COND    @Y30OEAD*/
*                       THEN        /*                       @Y30OEAD*/
         CLI   IOSCOD(IOSBPTR),X'7E'                               0412
         BNE   @RF00412                                            0412
*                       DO;         /*                       @Y30OEAD*/
*                         IOSCOD=GDCOMPL;/* INDICATE ERROR   @Y30OEAD
*                                      INTERCEPT             @Y30OEAD*/
         MVI   IOSCOD(IOSBPTR),X'7F'                               0414
*                         IOBRSTRT=BOFF;/* INDICATE NO START @Y30OEAD
*                                      OR RESTART            @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0415
*                         IOSMSG=ON;/* PERM ERR MSG          @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0416
*                       END;        /*                       @Y30OEAD*/
*                     ELSE          /*                       @Y30OEAD*/
*                       IF IOCC3540=NOTOPER/* SIOCC IS NOT   @Y30OEAD
*                                      OPERATIONAL           @Y30OEAD*/
*                         THEN      /* YES,USE START ADR     @Y30OEAD*/
         B     @RC00412                                            0418
@RF00412 TM    IOCC3540(IOSBPTR),B'00110000'                       0418
         BNO   @RF00418                                            0418
*                         DO;       /*                       @Y30OEAD*/
*                           IOBRSTRT=BOFF;/* RESTART ADDRESS @Y30OEAD
*                                      MAY BE BAD            @Y30OEAD*/
         NI    IOBRSTRT(EWAPTR),B'11111101'                        0420
*                           IOSMSG=ON;/* PERM ERR MSG        @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0421
*                         END;      /*                       @Y30OEAD*/
*                       ELSE        /*                       @Y30OEAD*/
*                         DO;       /*                       @Y30OEAD*/
         B     @RC00418                                            0423
@RF00418 DS    0H                                                  0424
*                           IOBIR=ON;/* RETRY ON             @Y30OEAD*/
         OI    IOBIR(EWAPTR),B'00000001'                           0424
*                           IOSMSG=BOFF;/* INTER REQ MSG     @Y30OEAD*/
         NI    IOSMSG(IOSBPTR),B'11111011'                         0425
*                           IOBIRM=ON;/* IND INTER REQ       @Y30OEAD*/
*                           IOBRTY=ON;/* IND RETRY           @Y30OEAD*/
         OI    IOBIRM(EWAPTR),B'00001100'                          0427
*                         END;      /*                       @Y30OEAD*/
*                   END;            /*                       @Y30OEAD*/
*                 ELSE              /*                       @Y30OEAD*/
*                   DO;             /*                       @Y30OEAD*/
         B     @RC00410                                            0430
@RF00410 DS    0H                                                  0431
*                     IOSLOG=ON;    /* INDICATE OBR NEED     @Y30OEAD*/
*                     IOSMSG=ON;    /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0432
*                   END;            /*                       @Y30OEAD*/
*             END;                  /*                       @Y30OEAD*/
*           ELSE                    /* NO,CONTINUE           @Y30OEAD
*                                      PRIORITY CHK          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    BUSOUT CHECK                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0435
*             IF IOBS0B2=ON         /* BUSOUT CHECK          @Y30OEAD*/
*               THEN                /* YES,                  @Y30OEAD*/
         B     @RC00400                                            0435
@RF00400 TM    IOBS0B2(IOSBPTR),B'00100000'                        0435
         BNO   @RF00435                                            0435
*               IF IOBS1B0=ON×      /* PERMANENT ERR OR      @Y30OEAD*/
*                   IOBS1B3=ON×     /* RETRY AFTER           @Y30OEAD
*                                      INTERV DONE           @Y30OEAD*/
*                   IOBS1B2=ON      /* MOTION MALF           @Y30OEAD*/
*                 THEN              /*                       @Y30OEAD*/
         TM    IOBS1B0(IOSBPTR),B'10110000'                        0436
         BZ    @RF00436                                            0436
*                 DO;               /*                       @Y30OEAD*/
*                   IOSLOG=ON;      /* INDICATE OBR NEED     @Y30OEAD*/
*                   IOSMSG=ON;      /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0439
*                 END;              /*                       @Y30OEAD*/
*               ELSE                /*                       @Y30OEAD*/
*                 DO;               /*                       @Y30OEAD*/
         B     @RC00436                                            0441
@RF00436 DS    0H                                                  0442
*/* ******************************************************** @Y30OEAD*/
*/*  BUSOUT SEGMENT-SETS UP ACTION FOR BUSOUT SENSE          @Y30OEAD*/
*/*     INDICATION                                           @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0442
*                   IF IOBS1B1=ON   /* AUTO RETRY ON         @Y30OEAD*/
*                     THEN          /* YES,                  @Y30OEAD*/
         TM    IOBS1B1(IOSBPTR),B'01000000'                        0442
         BNO   @RF00442                                            0442
*                     DO;           /*                       @Y30OEAD*/
*                       IOBBOC=ON;  /* RETRY ON              @Y30OEAD*/
         OI    IOBBOC(EWAPTR),B'00100000'                          0444
*                       IOBSDR=ON;  /* INDICATE SDR NEED     @Y30OEAD*/
*                       IOBRTY=ON;  /* IND RETRY             @Y30OEAD*/
         OI    IOBSDR(EWAPTR),B'00001001'                          0446
*                       SDRUPD1=TWO;/* UPDATE CTR FOUR       @Y30OEAD*/
         MVI   SDRUPD1(EWAPTR),X'20'                               0447
*                     END;          /*                       @Y30OEAD*/
*                   ELSE            /*                       @Y30OEAD*/
*                     DO;           /*                       @Y30OEAD*/
         B     @RC00442                                            0449
@RF00442 DS    0H                                                  0450
*                       IOSLOG=ON;  /* INDICATE OBR NEED     @Y30OEAD*/
*                       IOSMSG=ON;  /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0451
*                     END;          /*                       @Y30OEAD*/
*                 END;              /*                       @Y30OEAD*/
*             ELSE                  /* NO, CONTINUE          @Y30OEAD
*                                      PRIORITY CHK          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    DATA CHECK                                            @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0454
*               IF IOBS0B4=ON       /* DATA CHECK            @Y30OEAD*/
*                 THEN              /* YES,                  @Y30OEAD*/
         B     @RC00435                                            0454
@RF00435 TM    IOBS0B4(IOSBPTR),B'00001000'                        0454
         BNO   @RF00454                                            0454
*                 IF IOBS1B0=ON×    /* PERMANENT ERR OR      @Y30OEAD*/
*                     IOBS1B3=ON×   /* RETRY AFTER           @Y30OEAD
*                                      INTERV DONE           @Y30OEAD*/
*                     IOBS1B2=ON    /* MOTION MALF           @Y30OEAD*/
*                   THEN            /*                       @Y30OEAD*/
         TM    IOBS1B0(IOSBPTR),B'10110000'                        0455
         BZ    @RF00455                                            0455
*                   DO;             /*                       @Y30OEAD*/
*                     IOSLOG=ON;    /* INDICATE OBR NEED     @Y30OEAD*/
*                     IOSMSG=ON;    /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0458
*                   END;            /*                       @Y30OEAD*/
*                 ELSE              /*                       @Y30OEAD*/
*                   DO;             /*                       @Y30OEAD*/
         B     @RC00455                                            0460
@RF00455 DS    0H                                                  0461
*/* ******************************************************** @Y30OEAD*/
*/*  DATACHK SEGMENT-SETS UP ACTIONS TO BE TAKEN FOR         @Y30OEAD*/
*/*        DATA CHECKS                                       @Y30OEAD*/
*/*                                                          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    DATA CHECK WITH AUTO RETRY                            @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0461
*                     IF IOBS1B1=ON /* AUTO RETRY ON         @Y30OEAD*/
*                       THEN        /* YES,                  @Y30OEAD*/
         TM    IOBS1B1(IOSBPTR),B'01000000'                        0461
         BNO   @RF00461                                            0461
*                       DO;         /*                       @Y30OEAD*/
*                         IF IOBSENS2=SDRCK5/* DATA CRC ERROR      0463
*                                                            @Y30OEAD*/
*                           THEN    /* YES,                  @Y30OEAD*/
         CLI   IOBSENS2(EWAPTR),X'D3'                              0463
         BNE   @RF00463                                            0463
*                           SDRUPD2=ELEVEN;/* UPDATE CTR ELEVEN    0464
*                                                            @Y30OEAD*/
         MVI   SDRUPD2(EWAPTR),X'20'                               0464
*                         ELSE      /*                       @Y30OEAD*/
*                           DO;     /*                       @Y30OEAD*/
         B     @RC00463                                            0465
@RF00463 DS    0H                                                  0466
*                             IOSMSG=ON;/* PERM ERR MSG      @Y30OEAD*/
*                             IOSLOG=ON;/* INDICATE OBR NEED @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000101'                         0467
*                           END;    /*                       @Y30OEAD*/
*                         IF IOSMSG^=ON/* PERM ERR ON        @Y30OEAD*/
*                           THEN    /*                       @Y30OEAD*/
@RC00463 TM    IOSMSG(IOSBPTR),B'00000100'                         0469
         BO    @RF00469                                            0469
*                           DO;     /*                       @Y30OEAD*/
*                             IOBDATA=ON;/* RETRY ON         @Y30OEAD*/
         OI    IOBDATA(EWAPTR),B'00000010'                         0471
*                             IOBSDR=ON;/* INDICATE SDR NEED @Y30OEAD*/
*                             IOBRTY=ON;/* IND RETRY         @Y30OEAD*/
         OI    IOBSDR(EWAPTR),B'00001001'                          0473
*                           END;    /*                       @Y30OEAD*/
*                         ELSE                                     0475
*                           ;       /*                       @Y30OEAD*/
@RF00469 DS    0H                                                  0476
*                       END;        /*                       @Y30OEAD*/
*                     ELSE          /*                       @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    DATA CHECK AND SPECIAL RECORD TRANSFERED              @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0477
*                       IF(IOBS1B4=ON&/* SPECIAL REC TRANS   @Y30OEAD*/
*                           IOBSENS2=SPECHAR)/* INDICATION   @Y30OEAD*/
*                         THEN      /* YES,                  @Y30OEAD*/
         B     @RC00461                                            0477
@RF00461 TM    IOBS1B4(IOSBPTR),B'00001000'                        0477
         BNO   @RF00477                                            0477
         CLI   IOBSENS2(EWAPTR),X'D0'                              0477
         BNE   @RF00477                                            0477
*                         DO;       /*                       @Y30OEAD*/
*/* ******************************************************** @Z30OEAD*/
*/*   CHECK IF INDIRECT ADDRESSING HAS OCCURED               @Z30OEAD*/
*/*    AT THE CCW THAT FAILED                                @Z30OEAD*/
*/* ******************************************************** @Z30OEAD*/
*                                                                  0479
*                           IF IDA=ON/* INDIRECT ADDR ON     @Z30OEAD*/
*                             THEN  /* YES                   @Z30OEAD*/
         TM    IDA(CCWREG),B'00000100'                             0479
         BNO   @RF00479                                            0479
*/* ******************************************************** @Z30OEAD*/
*/*   GET DATA RECORD IF IDA BIT IS ON IN THE CCW            @Z30OEAD*/
*/*   CCW ADDRESS POINTS TO TABLE ADDRESS                    @Z30OEAD*/
*/*   TABLE POINTS TO THE DATA RECORD                        @Z30OEAD*/
*/* ******************************************************** @Z30OEAD*/
*/*  TRANSLATE ADDRESS IN CCW TO VIRTUAL                     @Z30OEAD*/
*                                                                  0480
*                             DO;   /*                       @Z30OEAD*/
*                               EWCSAVE=IOSBPTR;/* SAVE IOSB PTR   0481
*                                                            @Z30OEAD*/
         ST    IOSBPTR,EWCSAVE(,EWAPTR)                            0481
*                               TRANSREG=DATADDR;/* SETUP FOR TRANS
*                                                            @Z30OEAD*/
         L     TRANSREG,DATADDR-1(,CCWREG)                         0482
         LA    TRANSREG,0(,TRANSREG)                               0482
*                               CALL TRNRTN;/* GO TRANSLATE  @Z30OEAD*/
         L     @15,CVTPTR                                          0483
         L     @15,CVTPTRV(,@15)                                   0483
         BALR  @14,@15                                             0483
*                               IDAPTR=TRANSREG;/* SAVE VIRT ADDR  0484
*                                                            @Z30OEAD*/
         STCM  TRANSREG,7,IDAPTR(EWAPTR)                           0484
*/*  TRANSLATE TABLE ADDRESS TO VIRTUAL                      @Z30OEAD*/
*                                                                  0485
*                               TRANSREG=IDADATAP;/* PNT TO DATA   0485
*                                                            @Z30OEAD*/
         L     @15,IDAPTR-1(,EWAPTR)                               0485
         LA    @15,0(,@15)                                         0485
         L     TRANSREG,IDADATAP-1(,@15)                           0485
         LA    TRANSREG,0(,TRANSREG)                               0485
*                               CALL TRNRTN;/* GO TRANSLATE  @Z30OEAD*/
         L     @15,CVTPTR                                          0486
         L     @15,CVTPTRV(,@15)                                   0486
         BALR  @14,@15                                             0486
*                               ADDRSAVE=TRANSREG;/* SAVE VIRT ADDR
*                                                            @Z30OEAD*/
         STCM  TRANSREG,7,ADDRSAVE(EWAPTR)                         0487
*                               IOSBPTR=EWCSAVE;/* RESTORE IOSB PTR
*                                                            @Z30OEAD*/
         L     IOSBPTR,EWCSAVE(,EWAPTR)                            0488
*                             END;  /*                       @Z30OEAD*/
*                           ELSE    /*                       @Z30OEAD*/
*                             DO;   /*                       @Z30OEAD*/
         B     @RC00479                                            0490
@RF00479 DS    0H                                                  0491
*/* ******************************************************** #Y30OEAD*/
*/*   TRANSLATE DATA ADDRESS OF SPECIAL RECORD CCW           #Y30OEAD*/
*/*   FROM REAL TO VIRTUAL                                   #Y30OEAD*/
*/* ******************************************************** #Y30OEAD*/
*                                                                  0491
*                               EWCSAVE=IOSBPTR;/* SAVE IOSB PTR   0491
*                                                            #Y30OEAD*/
         ST    IOSBPTR,EWCSAVE(,EWAPTR)                            0491
*                               ADDRSAVE=DATADDR;/* SAVE DATA ADDR 0492
*                                                            #Y30OEAD*/
         L     @15,DATADDR-1(,CCWREG)                              0492
         LA    @15,0(,@15)                                         0492
         STCM  @15,7,ADDRSAVE(EWAPTR)                              0492
*                               TRANSREG=ADDRSAVE;/* SET UP REAL ADDR
*                                                            @Z30OEAD*/
         LR    TRANSREG,@15                                        0493
*                               CALL TRNRTN;/* TRANSLATE RTN @Z30OEAD*/
         L     @15,CVTPTR                                          0494
         L     @15,CVTPTRV(,@15)                                   0494
         BALR  @14,@15                                             0494
*                               ADDRSAVE=TRANSREG;/* SAVE TRNS ADDR
*                                                            @Z30OEAD*/
         STCM  TRANSREG,7,ADDRSAVE(EWAPTR)                         0495
*                               IOSBPTR=EWCSAVE;/* RESTORE IOSBPTR 0496
*                                                            #Y30OEAD*/
         L     IOSBPTR,EWCSAVE(,EWAPTR)                            0496
*                             END;  /*                       @Z30OEAD*/
*/* ******************************************************** #Y30OEAD*/
*/*   TEST FIRST CHARACTER FOR TYPE OF RECORD                #Y30OEAD*/
*/* ******************************************************** #Y30OEAD*/
*                                                                  0498
*                           IF DATAREA(1)=SRELREC1×/* SEQUENTIAL   0498
*                                                            #Y30OEAD*/
*                               DATAREA(1)=SRELREC2×/* RELOCATED   0498
*                                      RECORD                @Y30OEAD*/
*                               DATAREA(1)=SDELREC1×/* SEQUENTIAL  0498
*                                                            @Y30OEAD*/
*                               DATAREA(1)=SDELREC2/* DELETED RECORD
*                                                            @Y30OEAD*/
*                             THEN  /*                       @Y30OEAD*/
@RC00479 L     @15,ADDRSAVE-1(,EWAPTR)                             0498
         LA    @15,0(,@15)                                         0498
         CLI   DATAREA(@15),X'C6'                                  0498
         BE    @RT00498                                            0498
         CLI   DATAREA(@15),X'46'                                  0498
         BE    @RT00498                                            0498
         CLI   DATAREA(@15),X'C4'                                  0498
         BE    @RT00498                                            0498
         CLI   DATAREA(@15),X'44'                                  0498
         BNE   @RF00498                                            0498
@RT00498 DS    0H                                                  0499
*                             DO;   /*                       @Y30OEAD*/
*                               SPECREC=ON;/* INDICATE SPEC REC    0500
*                                                            @Y30OEAD*/
         OI    SPECREC(CCWREG),B'10000000'                         0500
*/* ******************************************************** @Y30OEAD*/
*/*   FIND CCW THAT FAILED IN THE VIRTUAL CHAIN              @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0501
*                               WK1PTR=ADDR(IOBSKADR)+DISP;/*      0501
*                                                            @Y30OEAD
*                                      PNT VIRT CHAIN        @Y30OEAD*/
         LA    WK1PTR,8                                            0501
         L     @15,VIRTSEEK-1(,EWAPTR)                             0501
         LA    @15,0(,@15)                                         0501
         ALR   WK1PTR,@15                                          0501
*                               DO I=1 TO 29 WHILE/* CORRECT VIRT CCW
*                                                            @Y30OEAD*/
*                                     VIRTADDR^=ADDRSAVE;/*  @Y30OEAD*/
         LA    @15,1                                               0502
         ST    @15,I(,EWAPTR)                                      0502
@DL00502 CLC   VIRTADDR(3,WK1PTR),ADDRSAVE(EWAPTR)                 0502
         BE    @DC00502                                            0502
*                                 WK1PTR=WK1PTR+CCWLEN;/* PNT TO NEXT
*                                      CCW                   @Y30OEAD*/
         AL    WK1PTR,@CF00062                                     0503
*                               END;/*                       @Y30OEAD*/
         LA    @15,1                                               0504
         AL    @15,I(,EWAPTR)                                      0504
         ST    @15,I(,EWAPTR)                                      0504
         C     @15,@CF01616                                        0504
         BNH   @DL00502                                            0504
@DC00502 DS    0H                                                  0505
*                               VSPECREC=ON;/* IND SPEC REC VIRT   0505
*                                                            @Y30OEAD*/
         OI    VSPECREC(WK1PTR),B'10000000'                        0505
*                               IOBSENS5=IOBSENS5+ONE;/* GET NEXT  0506
*                                      SECTOR                @Y30OEAD*/
         LA    @15,1                                               0506
         SLR   @00,@00                                             0506
         IC    @00,IOBSENS5(,EWAPTR)                               0506
         ALR   @15,@00                                             0506
         STC   @15,IOBSENS5(,EWAPTR)                               0506
*                               IOBRTY=ON;/* IND RETRY       @Y30OEAD*/
         OI    IOBRTY(EWAPTR),B'00001000'                          0507
*                               CCWREG=CCWREG+CCWLEN;/* POS AT VIRT
*                                      CCW                   @Y30OEAD*/
         LA    @15,8                                               0508
         ALR   CCWREG,@15                                          0508
*                               WK3PTR=WK3PTR+CCWLEN;/* POS AT REAL
*                                      CCW                   @Y30OEAD*/
         ALR   WK3PTR,@15                                          0509
*                               IF COMMAND=NOOP/* LAST CMD IN CHAIN
*                                                            @Y30OEAD*/
*                                 THEN/* YES                 @Y30OEAD*/
         CLI   COMMAND(CCWREG),X'03'                               0510
         BNE   @RF00510                                            0510
*                                 DO;/*                      @Y30OEAD*/
*                                   IOSRST=WK3PTR;/* SET RESTART ADDR
*                                                            @Y30OEAD*/
         ST    WK3PTR,IOSRST(,IOSBPTR)                             0512
*                                   IOSVST=CCWREG;/* SET RESTART ADDR
*                                                            @Y30OEAD*/
         ST    CCWREG,IOSVST(,IOSBPTR)                             0513
*                                 END;/*                     @Y30OEAD*/
*                               ELSE                               0515
*                                 ; /*                       @Y30OEAD*/
@RF00510 DS    0H                                                  0516
*                             END;  /*                       @Y30OEAD*/
*                           ELSE    /*                       @Y30OEAD*/
*                             IOSMSG=ON;/* PERM ERR MSG      @Y30OEAD*/
         B     @RC00498                                            0517
@RF00498 OI    IOSMSG(IOSBPTR),B'00000100'                         0517
*                         END;      /*                       @Y30OEAD*/
*                       ELSE        /*                       @Y30OEAD*/
*                         IOSMSG=ON;/* PERM ERR MSG          @Y30OEAD*/
         B     @RC00477                                            0519
@RF00477 OI    IOSMSG(IOSBPTR),B'00000100'                         0519
*                   END;            /*                       @Y30OEAD*/
*               ELSE                /* NO, CONTINUE          @Y30OEAD
*                                      PRIORITY CHK          @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*/*    COMMAND REJECT OR NO SENSE                            @Y30OEAD*/
*/* ******************************************************** @Y30OEAD*/
*                                                                  0521
*                 IF IOBS0B0=ON     /* COMMAND REJECT        @Y30OEAD*/
*                   THEN            /* YES                   @Y30OEAD*/
         B     @RC00454                                            0521
@RF00454 TM    IOBS0B0(IOSBPTR),B'10000000'                        0521
         BNO   @RF00521                                            0521
*                   DO;             /*                       @Y30OEAD*/
*                     IOSMSG=ON;    /* PERM ERR MSG          @Y30OEAD*/
*                     IOSLOG=BOFF;  /* OBR NOT NEEDED        @Y30OEAD*/
         OI    IOSMSG(IOSBPTR),B'00000100'                         0524
         NI    IOSLOG(IOSBPTR),B'11111110'                         0524
*                   END;            /*                       @Y30OEAD*/
*                 ELSE              /* UNIT CHK NO SENSE     @Y30OEAD*/
*                   DO;             /*                       @Y30OEAD*/
         B     @RC00521                                            0526
@RF00521 DS    0H                                                  0527
*                     IOSLOG=ON;    /* INDICATE OBR NEED     @Y30OEAD*/
*                     IOSMSG=ON;    /* PERM ERR MSG          @Y30OEAD*/
         OI    IOSLOG(IOSBPTR),B'00000101'                         0528
*                   END;            /*                       @Y30OEAD*/
*     END;                          /* END OF SENSE          @Y30OEAD
*                                      PRIORITY CHECK        @Y30OEAD*/
@RC00521 DS    0H                                                  0530
@RC00454 DS    0H                                                  0530
@RC00435 DS    0H                                                  0530
@RC00400 DS    0H                                                  0530
@RC00395 DS    0H                                                  0530
@RC00342 DS    0H                                                  0531
*   REG14=SAVE14;                   /* RESTORE REG 14        @ZA04476*/
@RC00336 L     REG14,SAVE14(,EWAPTR)                               0531
*   END UNITCHK;                    /*                       @Y30OEAD*/
@EL00002 DS    0H                                                  0532
@EF00002 DS    0H                                                  0532
@ER00002 BR    @14                                                 0532
*   END IGE0002C                    /*                       @Y30OEAD*/
*                                                                  0533
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (TOPSEGMT)                                       */
*/*%INCLUDE SYSUT5  (PROLOGUE)                                       */
*/*%INCLUDE SYSUT5  (DECLARES)                                       */
*/*%INCLUDE SYSUT5  (DCLREG  )                                       */
*/*%INCLUDE SYSUT5  (DCLCONST)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSUT5  (IOBUCBOL)                                       */
*/*%INCLUDE SYSUT5  (STSNCHCK)                                       */
*/*%INCLUDE SYSUT5  (CCCICC  )                                       */
*/*%INCLUDE SYSUT5  (STATUSCK)                                       */
*/*%INCLUDE SYSUT5  (EXITCODE)                                       */
*/*%INCLUDE SYSUT5  (RETRY   )                                       */
*/*%INCLUDE SYSUT5  (UNITCHK2)                                       */
*/*%INCLUDE SYSUT5  (EQUIPCHK)                                       */
*/*%INCLUDE SYSUT5  (INTREQ  )                                       */
*/*%INCLUDE SYSUT5  (BUSOUT  )                                       */
*/*%INCLUDE SYSUT5  (DATACHK )                                       */
*                                                                  0533
*       ;                                                          0533
@DATA    DS    0H
@CH00161 DC    XL2'0A'
         DS    0F
         DS    0F
@CF00141 DC    F'2'
@CF00062 DC    F'8'
@CF01616 DC    F'29'
@CF00159 DC    F'256'
@CF01649 DC    XL4'0000FFFF'
@CF00164 DC    XL4'FFFF'
         DS    0D
UCBDCPTR DS    A
MT3540AR DC    CL100'LEVEL=00 DATE=03-00-74'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TRANSREG EQU   @01
IOSBPTR  EQU   @01
WK1PTR   EQU   @02
STTPTR   EQU   @03
WK2PTR   EQU   @04
CCWREG   EQU   @05
ERPBRG   EQU   @07
UCBPTR   EQU   @08
STCPPTR  EQU   @09
WK4PTR   EQU   @10
WK3PTR   EQU   @11
EWAPTR   EQU   @12
XCTLPR   EQU   @13
REG14    EQU   @14
XCTLRG   EQU   @14
BASEREG  EQU   @06
CVTPTR   EQU   16
CVTMAP   EQU   0
CVTXTLER EQU   CVTMAP+44
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTSTB   EQU   CVTMAP+112
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTPTRV  EQU   CVTMAP+288
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBSTI   EQU   UCBCMEXT+1
UCBATI   EQU   UCBCMEXT+3
@NM00006 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBVLSER EQU   UCB3540X
UCBDKBYT EQU   UCB3540X+6
UCBDKAMX EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSDCHN  EQU   IOSACHN
IOSCCHN  EQU   IOSACHN
IOSERR   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSMSG   EQU   IOSFLB
IOSLOG   EQU   IOSFLB
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSCOD   EQU   IOSB+13
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
IOSUCB   EQU   IOSB+16
@NM00008 EQU   IOSB+20
IOSCC    EQU   @NM00008
IOSCSW   EQU   @NM00008+1
IOSTATUS EQU   IOSCSW+3
IOSSNS   EQU   IOSB+42
IOSIPIB  EQU   IOSB+44
IOSERP   EQU   IOSB+52
IOSRST   EQU   IOSB+72
IOSVST   EQU   IOSB+76
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
EWA      EQU   0
EWAHDR   EQU   EWA
EWAFLAGS EQU   EWA+4
EWAFLG1  EQU   EWAFLAGS
EWASCCD  EQU   EWAFLG1
EWASCC3  EQU   EWASCCD
EWAFLG2  EQU   EWAFLAGS+1
EWAFLG3  EQU   EWAFLAGS+2
EWASNSCT EQU   EWAFLAGS+3
EWASSTAT EQU   EWA+8
EWACNTRS EQU   EWA+10
EWACNTR3 EQU   EWACNTRS+2
EWASTUP  EQU   EWA+14
EWAERPIB EQU   EWA+16
EWARGFG1 EQU   EWAERPIB+4
EWARGFG2 EQU   EWAERPIB+5
EWAXCSW1 EQU   EWAERPIB+6
EWAXCSW2 EQU   EWAERPIB+7
EWADCNT  EQU   EWA+28
EWADDISP EQU   EWA+29
EWAIERP  EQU   EWA+32
XCTL     EQU   0
TRNRTN   EQU   0
IOBSKADR EQU   0
IOBSKSS  EQU   IOBSKADR+3
STUCBPTR EQU   0
STATTB   EQU   0
FAILCCW  EQU   0
COMMAND  EQU   FAILCCW
SPECREC  EQU   COMMAND
DATADDR  EQU   FAILCCW+1
CCWFLAG  EQU   FAILCCW+4
IDA      EQU   CCWFLAG
VIRTCCW  EQU   0
VCOMMAND EQU   VIRTCCW
VSPECREC EQU   VCOMMAND
VIRTADDR EQU   VIRTCCW+1
DATAREA  EQU   0
IDATBL   EQU   0
IDADATAP EQU   IDATBL+1
CPROG    EQU   0
CCW1     EQU   CPROG
CCW1OP   EQU   CCW1
CCW1BYTE EQU   CCW1+6
CCW2     EQU   CPROG+8
CCW2OP   EQU   CCW2
CCW2ADDR EQU   CCW2+1
CCW2BYTE EQU   CCW2+6
CCW3     EQU   CPROG+16
CCW3OP   EQU   CCW3
CCW3ADDR EQU   CCW3+1
CCWFLAG3 EQU   CCW3+4
CCW3BYTE EQU   CCW3+6
UCBBGN   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00005 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBOBS09 EQU   UCBDEV
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
EWADDIOS EQU   EWAIERP
ERPIB    EQU   EWAERPIB
IBEXCSW2 EQU   ERPIB+7
IBSEQ    EQU   IBEXCSW2
EWAFLG   EQU   EWAFLG3
TICBUILD EQU   EWAFLG
IOBERE   EQU   EWAFLG
IOBRTY   EQU   EWAFLG
IOBIRM   EQU   EWAFLG
IOBRSTRT EQU   EWAFLG
IOBSDR   EQU   EWAFLG
IOBCSWXX EQU   IOSCSW
CMDADR   EQU   IOBCSWXX
STATBYT1 EQU   IOBCSWXX+3
STBYT1B0 EQU   STATBYT1
STBYT1B1 EQU   STATBYT1
STBYT1B2 EQU   STATBYT1
STBYT1B6 EQU   STATBYT1
STBYT1B7 EQU   STATBYT1
STATBYT2 EQU   IOBCSWXX+4
STBYT2B1 EQU   STATBYT2
STBYT2B2 EQU   STATBYT2
STBYT2B3 EQU   STATBYT2
STBYT2B4 EQU   STATBYT2
STBYT2B5 EQU   STATBYT2
STBYT2B6 EQU   STATBYT2
STBYT2B7 EQU   STATBYT2
IOBCNT   EQU   EWACNTR3
IOBCDCE  EQU   IOBCNT
IOBBOC   EQU   IOBCNT
IOBEQ    EQU   IOBCNT
IOBICCE  EQU   IOBCNT
IOBCCCE  EQU   IOBCNT
IOBDATA  EQU   IOBCNT
IOBIR    EQU   IOBCNT
RETRYCTR EQU   IOBCNT+1
SDRNOUPD EQU   EWASTUP
SDRUPD1  EQU   SDRNOUPD
SDRUPD2  EQU   SDRNOUPD+1
SIOC3540 EQU   IOSCC
IOCC3540 EQU   SIOC3540
SNSBYTES EQU   IOSSNS
IOBSENS0 EQU   SNSBYTES
IOBS0B0  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B6  EQU   IOBSENS0
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   SNSBYTES+1
IOBS1B0  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B7  EQU   IOBSENS1
EWC      EQU   EWAIERP
EXTSNSBY EQU   EWC
IOBSENS2 EQU   EXTSNSBY+2
IOBSENS5 EQU   EXTSNSBY+5
SAVECCW  EQU   EWC+8
SAVESEEK EQU   EWC+16
EWCSAVE  EQU   EWC+20
ADDRSAVE EQU   EWC+25
IOBRESTR EQU   EWC+28
REALSEEK EQU   EWC+33
VIRTSEEK EQU   EWC+37
IDAPTR   EQU   EWC+45
SAVE14   EQU   EWC+48
I        EQU   EWC+52
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00036 EQU   EWC+44
CHAINST  EQU   EWC+41
@NM00035 EQU   EWC+40
@NM00034 EQU   EWC+36
@NM00033 EQU   EWC+32
@NM00032 EQU   EWC+24
IOBSENS4 EQU   EXTSNSBY+4
IOBSENS3 EQU   EXTSNSBY+3
@NM00031 EQU   EXTSNSBY
@NM00030 EQU   SIOC3540
@NM00029 EQU   SIOC3540
@NM00028 EQU   IOBCNT
@NM00027 EQU   STATBYT2
STBYT1B5 EQU   STATBYT1
STBYT1B4 EQU   STATBYT1
@NM00026 EQU   STATBYT1
INDADDR  EQU   EWAFLG
@NM00025 EQU   EWAFLG
@NM00024 EQU   IBEXCSW2
IBTERM   EQU   IBEXCSW2
@NM00023 EQU   ERPIB+4
IBUCB    EQU   ERPIB+1
IBEND    EQU   ERPIB
EWAEND   EQU   EWADDIOS+71
EWASCSW  EQU   EWADDIOS+64
EWASNS   EQU   EWADDIOS
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00013 EQU   IOSPCISC+4
@NM00012 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00011 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBCTCF1 EQU   UCBOBS08+4
UCBCTCAD EQU   UCBOBS08
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00005
UCBSKPFG EQU   @NM00005
UCBRIPND EQU   @NM00005
UCBRTIAC EQU   @NM00005
UCBRSV79 EQU   @NM00005
UCBRSV78 EQU   @NM00005
UCBRSV77 EQU   @NM00005
UCBOLTEP EQU   @NM00005
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBRV038 EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00004 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRV028 EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTRV610 EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTRV608 EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CCW4     EQU   CPROG+24
CCWB3YT2 EQU   CCW3BYTE+1
CCW3BYT1 EQU   CCW3BYTE
CCW3FL2  EQU   CCWFLAG3+1
CCW3FL1  EQU   CCWFLAG3
CCW2BYT2 EQU   CCW2BYTE+1
CCW2BYT1 EQU   CCW2BYTE
@NM00046 EQU   CCW2+4
CCW1BYT2 EQU   CCW1BYTE+1
CCW1BYT1 EQU   CCW1BYTE
@NM00045 EQU   CCW1+4
CCW1ADDR EQU   CCW1+1
@NM00044 EQU   IDATBL
@NM00043 EQU   VIRTCCW+4
@NM00042 EQU   VCOMMAND
@NM00041 EQU   FAILCCW+6
@NM00040 EQU   CCWFLAG
@NM00039 EQU   CCWFLAG
@NM00038 EQU   COMMAND
@NM00037 EQU   STATTB+10
SDRCTRNO EQU   STATTB+8
SDRZERO  EQU   STATTB
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
EWACPU   EQU   EWA+27
@NM00022 EQU   EWA+26
EWACHA   EQU   EWA+24
EWACSEQ  EQU   EWAXCSW2
EWACDIN  EQU   EWAXCSW2
@NM00021 EQU   EWAXCSW2
EWACTEC  EQU   EWAXCSW2
EWACDAV  EQU   EWAXCSW1
EWACCHV  EQU   EWAXCSW1
EWACCMD  EQU   EWAXCSW1
EWACUNS  EQU   EWAXCSW1
EWACSQV  EQU   EWAXCSW1
@NM00020 EQU   EWAXCSW1
EWACITF  EQU   EWAXCSW1
@NM00019 EQU   EWARGFG2
EWACCUE  EQU   EWARGFG2
EWACSTG  EQU   EWARGFG2
EWACSCU  EQU   EWARGFG2
EWACCHA  EQU   EWARGFG2
EWACCPU  EQU   EWARGFG2
EWANORTY EQU   EWARGFG1
EWACCNT  EQU   EWARGFG1
EWACSNS  EQU   EWARGFG1
@NM00018 EQU   EWARGFG1
EWACHIO  EQU   EWARGFG1
EWACTIO  EQU   EWARGFG1
EWACINT  EQU   EWARGFG1
EWACSIO  EQU   EWARGFG1
EWAUCB   EQU   EWAERPIB+1
@NM00017 EQU   EWAERPIB
EWACNTR4 EQU   EWACNTRS+3
EWACNTR2 EQU   EWACNTRS+1
EWACNTR1 EQU   EWACNTRS
EWASCTMX EQU   EWASNSCT
@NM00016 EQU   EWASNSCT
@NM00015 EQU   EWAFLG2
EWADIR   EQU   EWAFLG2
EWACOVF  EQU   EWAFLG2
EWAWTEMP EQU   EWAFLG2
EWAMDR   EQU   EWAFLG2
EWABDSNS EQU   EWAFLG1
EWADDMSG EQU   EWAFLG1
EWASCC1  EQU   EWASCC3
EWASCC2  EQU   EWASCC3
@NM00014 EQU   EWAFLG1
EWASLIS  EQU   EWAFLG1
EWAEXT   EQU   EWAHDR
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00010 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00009 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSPCHN  EQU   IOSB+48
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00007 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSGLC5  EQU   IOSFLC
IOSFLC4  EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSBDCST EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSFLB1  EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBRSV50 EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBRV034 EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBRV032 EQU   UCBFLP1
UCBRV031 EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00006
UCBHALI  EQU   @NM00006
UCBRSV09 EQU   @NM00006
UCBRSV08 EQU   @NM00006
UCBRSV07 EQU   @NM00006
UCBRSV06 EQU   @NM00006
UCBRSV05 EQU   @NM00006
UCBRSV04 EQU   @NM00006
UCBDTI   EQU   UCBCMEXT+2
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBFLB7  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBRSV02 EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBRV002 EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00003 EQU   UCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00118 EQU   @RC00114
@RF00160 EQU   @RC00137
@RC00153 EQU   @RC00137
@RC00146 EQU   @RC00137
@RC00139 EQU   @RC00137
@RC00208 EQU   @RC00193
@RC00201 EQU   @RC00193
@RC00185 EQU   @RC00181
@RC00220 EQU   @RC00219
@RC00235 EQU   @RC00228
@RC00229 EQU   @RC00228
@RC00282 EQU   @RC00274
@RC00276 EQU   @RC00274
@RC00343 EQU   @RC00342
@RC00349 EQU   @RC00342
@RC00355 EQU   @RC00342
@RC00410 EQU   @RC00400
@RC00402 EQU   @RC00400
@RC00436 EQU   @RC00435
@RC00442 EQU   @RC00435
@RC00455 EQU   @RC00454
@RC00477 EQU   @RC00454
@RC00461 EQU   @RC00454
@PB00002 EQU   @EL00001
@RC00140 EQU   @RC00139
@RC00147 EQU   @RC00146
@RC00154 EQU   @RC00153
@RC00202 EQU   @RC00201
@RC00236 EQU   @RC00235
@RC00329 EQU   @PB00002
@RC00418 EQU   @RC00410
@RC00412 EQU   @RC00410
@RC00498 EQU   @RC00477
@ENDDATA EQU   *
         END   IGE0002C,(C'PLS0829',0701,78100)
