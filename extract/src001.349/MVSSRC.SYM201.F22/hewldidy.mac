IDEN  TITLE 'IDENTIFICATION MODULE FOR VS LOADER'
***********************************************************************
*                                                                     *
*TITLE 'HEWLIDEN'- IDENTIFICATION MODULE FOR THE VS LOADER            *
*                                                                     *
*STATUS -CHANGE LEVEL 0                                               *
*                                                                     *
*FUNCTION/OPERATION - THIS MODULE PERFORMS THE FOLLOWING -            *
*   1. BUILDS MINI-CESD OF SD'S AND CM'S FOLLOWING PROGRAM IF TSO     *
*      FLAG IS ON AND SPACE IS AVAILABLE.                             *
*   2. BUILDS EXTENT LIST FOR IDENTIFY MACRO. FIRST EXTENT DEFINES    *
*      LOADER-LOADED TEXT. SECOND EXTENT DEFINES MINI-CESD. REMAINING *
*      EXTENTS DEFINE COMPILER.LOADED TEXT AS DESCRIBED ON MOD        *
*      RECORDS.                                                       *
*   3. ISSUES IDENTIFY MACRO                                          *
*                                                                     *
*ENTRY POINTS - HEWLIDEN                                              *
*                                                                     *
*INPUT - REGISTER 13 - ADDR OF SAVE AREA                              *
*        REGISTER 14 - RETURN ADDRESS                                 *
*        REGISTER 11 - ADDR OF COMMUNICATIONS AREA                    *
*                                                                     *
*OUTPUT - MINI-CESD MAY BE BUILT                                      *
*         PROGRAM WILL BE IDENTIFIED                                  *
*                                                                     *
*EXTERNAL ROUTINES -                                                  *
*                                                                     *
*  'HEWERROR' - LOG ERROR MESSAGES                                    *
*                                                                     *
*EXITS - NORMAL- TO CALLER                                            *
*        ERROR - TO HEWERROR                                          *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*  'HEWLDCOM' - ALL COMMUNICATION INFORMATION                         *
*  'IDPARM'   - PARAMETER LIST FOR IDENTIFY ROUTINE                   *
*  'MINICESD' - UNORDERED THREE WORD ENTRIES OF FORMAT                *
*                  0     4    8 9                                     *
*                  *****************                                  *
*                  *    *    *S*   * WHERE BYTE 8 WILL BE 00 FOR SD   *
*                  *CSECTNAME*D*ADR*                     05 FOR CM    *
*                  *****************                                  *
*                                                                     *
*ATTRIBUTES - REFRESHABLE,REENTRANT,REUSABLE                          *
*                                                                     *
*NOTES - NONE                                                         *
*                                                                     *
***********************************************************************
         EJECT
HEWLIDEN CSECT
R0       EQU   0   WORK REGISTER
R1       EQU   1   WORK REGISTER
R2       EQU   2   WORK REGISTER
R3       EQU   3   WORK REGISTER
R4       EQU   4   WORK REGISTER
R5       EQU   5   WORK REGISTER
R6       EQU   6   WORK REGISTER
R7       EQU   7   IDENTIFY PARAMETER DSECT
*   CAUTION - REGISTER 7 CHANGES AS EXTENT LIST CREATED
R8       EQU   8   WORK REGISTER
R9       EQU   9   WORK REGISTER
R10      EQU   10  WORK REGISTER
R11      EQU   11  COMMUNICATIONS AREA
R12      EQU   12  BASE REGISTER
R13      EQU   13  SAVE AREA REGISTER
R14      EQU   14  LINKAGE REGISTER
R15      EQU   15  LINKAGE REGISTER
*
*        HOUSEKEEPING
*
         USING *,R15
         SAVE  (14,12),,*
         LR    R12,R15
         DROP  R15
         USING HEWLIDEN,R12            BASE REGISTER
         USING HEWLDCOM,R11            COMMUNICATIONS AREA
         USING ERCODES,0           ERROR CODE DSECT
         L     R13,8(R13)          SAVE AREA CHAIN
*
*        GET SPACE FOR IDENTIFY PARAMETER LIST
*
         LH    R8,CMNUMXS          PICK UP NO. EXTENTS ON MOD CARDS
         LTR   R8,R8               WERE THERE ANY
         BNZ   ID5                 YES. BRANCH
         TM    CMFLAG3,CQTS        NO. HOW ABOUT MINICESD
         BZ    ID6                 NO. DON'T WANT IT. BRANCH
ID5      LA    R8,1(R8)            EXTENT FOR MINI-CESD
ID6      LA    R8,1(R8)            EXTENT FOR LOADER LOADED TEXT
         STH   R8,CMNUMXS          SAVE NO. OF EXTENTS
         SLL   R8,3                2 WORDS PER EXTENT PLUS
         LA    R8,20(R8)           FIXED PORTION OF IDENTIFY PAEAMETER
*                                    LIST GIVES TOTAL SPACE NEEDED
         L     R7,CMLOWTBL         GET LOWEST TABLE ADDRESS
         SR    R7,R8               WILL THE PARM LIST FIT
         TM    CMFLAG4,CQCOMMON    WAS COMMON ALLOC
         BNO   ID7                 NO. BRANCH
         C     R7,CMTOPCOD         YES. WE CAN OVLAP COMMON
         BNL   ID8
         B     IDTOOBIG            CAN'T OVERLAY TEXT
ID7      C     R7,CMNXTTXT         SEE IF THERE'S ROOM
         BL    IDTOOBIG            NO. BRANCH
ID8      ST    R7,CMLOWTBL         STORE NEW LOWEST TABLE ADDRESS
*
*        MOVE IN ENTRY POINT AND PROGRAM NAME
*
         USING IDPARM,R7
         MVC   IDEP(4),CMEPADDR    MOVE ENTRY POINT
         MVC   IDNAM(8),CMPGMNM    MOVE PROGRAM NAME
*
*        INITIALIZE EXTENT LIST
*
         LH    R9,CMNUMXS          STORE NO OF EXTENTS
         ST    R9,IDNOXS
         SLL   R9,3                MULTIPLY BY 8
         LA    R9,8(R9)            ADD 8
         ST    R9,IDXLEN           STORE LENGTH OF EXTENT LIST
         LH    R9,CMNUMXS          GET NUMBER OF EXTENTS AGAIN
         LR    R3,R9
         SLL   R9,2                NO. EXTENTS TIMES FOUR IS DIFFERENCE
*                                    BETWEEN LENGTH AND ADDRESS FIELDS
*                                    IN EXTENT LIST
*
*        FIRST EXTENT IS LOADER LOADED TEXT
*
         L     R5,CMMAINPT         FIRST EXTENT ADDRESS IN R5
         L     R6,CMNXTTXT         LENGTH OF FIRST EXTENT
         SR    R6,R5               IN REGISTER 6
         BAL   R14,IDENTER         MAKE ENTRY IN EXTENT LIST
*
*        SECOND EXTENT IS MINI-CESD
*
         AR    R5,R6               GET ADDRESS OF MINI-CESD IN R5
         L     R10,CMLOWTBL        GET UPPER LIMIT FOR MINI-CESD
         BAL   R14,IDMINI          GO CONSTRUCT IT
         TM    CMFLAG4,CQMINI      WAS IT BUILT
         BO    IDMINBLT            YES
         L     R5,CMMAINPT         NO. USE VALID DUMMY ADDRESS
         SR    R6,R6               SET LENGTH OF EXTENT =0
         B     ID9                 GO ENTER EXTENT
IDMINBLT LA    R6,7(R6)            ROUND UP TO DOUBLE WORD
         N     R6,DBLMASK
         ST    R6,CMNXTTXT         SAVE LAST TEXT ADDRESS
         SR    R6,R5               GET LENGTH
ID9      BAL   R14,IDENTER         ENTER MINI-CESD EXTENT
*
*        REMAINING EXTENTS ARE COMPILER-LOADED TEXT
*
         L     R8,CMXLCHN          NOW DO MOD EXTENTS
IDMODS   L     R5,4(R8)            GET ADDRESS
         L     R6,8(R8)            GET LENGTH
         BAL   R14,IDENTER         GO ENTER EXTENT
         L     R8,0(R8)            GET NEXT IN CHAIN
         B     IDMODS
*
*        ENTER EXTENT ADDRESS AND LENGTH IN EXTENT LIST
*
IDENTER  ST    R6,IDXTNT           STORE LENGTH
         ST    R5,IDXTNT(R9)       STORE ADDRESS
         BCT   R3,IDENTOUT         ARE WE THRU WITH EXTENT LIST
         MVI   IDXTNT,X'80'        YES. FLAG LAST ENTRY
         B     IDID                GO DO IDENTIFY
IDENTOUT LA    R7,4(R7)
         BR    R14                 NO. RETURN TO GET ANOTHER EXTENT
*
*        ISSUE IDENTIFY MACRO
*
IDID     L     R1,CMLOWTBL         POINT TO PARAMETER LIST
         IDENTIFY    MF=(E,(1))    IDENTIFY LOADED PROGRAM
         LTR   R15,R15             OKAY
         BNZ   IDBAD               ERROR CODE REC'D FROM IDENTIFY
         OI    CMFLAG4,CQIDONE     SHOW IDENTIFICATION ACCOMPLISHED
*
*        RETURN TO CALLER
*
IDOUT    L     R13,4(R13)          RETURN
         RETURN (14,12),T
*
*        ERROR CONDITIONS
*
IDBAD    LA    R1,8                ERROR CODE FROM IDENTIFY
         LA    R0,ERIDEN1          LOAD ERROR CODE
         CR    R15,R1              WAS THIS DUPLICATE NAME
         BE    IDERR               YES.
         LA    R0,ERIDEN2          LOAD ERROR CODE
IDERR    LA    R1,CMPGMNM          PRINT OUT NAME AND RETURN CODE
         B     IDERROR
IDTOOBIG LA    R0,ERSIZE2          PROGRAM TOO LARGE
IDERROR  L     R15,ADRERROR        GO TO LOG ERROR
         BALR  R14,R15
         B     IDOUT               AND LEAVE
*
*        THIS ROUTINE CONSTRUCTS MINI-CESD FOR TEST PACKAGE IF
*        TSO IS OPERATING
*        IT EXPECTS - R5=STARTING ADDR FOR MINI-CESD
*                     R10=UPPER LIMIT OF CORE AVAILABLE
*        IT RETURNS - R5=AS IS
*                     R6=LENGTH OF EXTENT
*                     R10,R1,R2=DESTROYED
*                     FLAG 'CQMINI' IN 'CMFLAG4' SET IF BUILD OK
*        SEE IEWLRELO FOR CHAIN SETUP
*
IDMINI   TM    CMFLAG3,CQTS        IS THIS TSO
         BZ    IDNOMINI            NO. DON'T CONSTRUCT MINI-CESD
         LA    R2,12               ADJUST REGISTER 10(UPPER LIMIT)
         SR    R10,R2              TO MAKE OVERFLOW CHECK EASIER
         LR    R6,R5               GET STARTING ADDRESS
         LA    R2,MINITYPE         TYPES TO GO IN MINI-CESD
IDMINI3  IC    R1,0(R2)            GET FIRST TYPE
         N     R1,TYPEONLY         GET ITS INDEX INTO CHAIN TABLE
         SLL   R1,2
         LA    R1,CMTYPCHN(R1)     GET POINTER TO ITS CHAIN
IDMINI4  L     R1,0(R1)            MOVE UP IN CHAIN
         LTR   R1,R1               ARE WE AT END OF CHAIN
         BNZ   IDMINI5             NO. PROCESS THIS ENTRY
         TM    0(R2),X'80'         YES. IS THERE ANOTHER TYPE
         BO    IDMINI6             NO. WE'RE DONE
         LA    R2,1(R2)            YES. POINT TO NEXT TYPE
         B     IDMINI3
IDMINI5  CR    R6,R10              WILL THIS ENTRY FIT
         BH    IDNOMINI            NO. ABORT MINI-CESD
         MVC   0(12,R6),4(R1)      YES. MOVE IN NAME,TYPE AND ADDR
         NI    8(R6),X'07'         AND OUT ALL FLAGS BUT TYPE
         LA    R6,12(R6)           MOVE UP IN MINICESD
         B     IDMINI4             UP TABLE ADDRESS
IDMINI6  OI    CMFLAG4,CQMINI      SET FLAG 'MINI BUILT'
IDNOMINI BR    R14                 RETURN
         DS    0F
DBLMASK  DC    X'FFFFFFF8'         TO ROUND TO DOUBLEWORD
TYPEONLY DC    F'00000007'         TO ISOLATE TYPE IN CESD
MINITYPE DC    X'0085'             SD AND CM WANTED FOR MINI-CESD
ADRERROR DC    V(HEWERROR)         ADDRESS OF ERROR ROUTINE
*
HEWLDDEF CSECT
DDNAMES  EQU   *
SYSPRINT DC    CL8'SYSLOUT' DIAG MSG DATA SET                   YM05852
SYSLIN   DC    CL8'SYSLIN' PRIMARY INPUT DATA SET
SYSLIB   DC    CL8'SYSLIB' AUTO-CALL LIBRARY DATA SET
SIZE     DC    F'307200'   DEFAULT SIZE                         YM04615
FLAG     DC    B'00010101'
RESERVE  DC    B'00000000'
*        IDENTIFY PARAMETER LIST
*
IDPARM   DSECT                     IDENTIFY PARAMETER LIST DSECT
IDEP     DS    F                   ENTRY POINT ADDRESS
IDNAM    DS    CL8                 PROGRAM NAME
IDXLEN   DS    F                   EXTENT LIST LENGTH
IDNOXS   DS    F                   NUMBER OF EXTENTS
IDXTNT   EQU   *                   EXTENT LENGTHS AND ADDRESSES
PATCH    DS    10F                 MAINTENANCE AREA
         EJECT
         HEWLDCOM
         END
