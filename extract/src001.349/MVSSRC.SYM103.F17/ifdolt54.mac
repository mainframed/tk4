         TITLE ' RETAIN/370 INITIALIZATION IFDOLT54'
         TITLE 'RETAIN/370 INITIALIZATION IFDOLT54'
         LCLA  &T,&SPN                                            0002
.@001    ANOP                                                     0002
IFDOLT54 CSECT ,                                                  0002
         BC    15,24(0,@F)
         DC    C'IFDOLT54 15 APR 74'                             0002
         STM   @E,@C,12(@D)                                       0002
         BALR  @B,0                                               0002
@PSTART  DS    0H                                                 0002
         USING @PSTART+00000,@B                                   0002
         ST    @D,@SAV001+4                                       0002
         LA    @F,@SAV001                                         0002
         ST    @F,8(0,@D)                                         0002
         LR    @D,@F                                              0002
*         GEN(USING  CHASCT,2);
         USING  CHASCT,2
         DS    0H
*  GENERATE DATA;
*  /*******************************************************************
*  /*     CCW BREAK DOWN                                              *
*  /*******************************************************************
*         DCL CCWENABL    CHAR(8) BDY(DWORD) GENERATED;
*         DCL CCWPREP    CHAR(8) BDY(DWORD) GENERATED;
*         DCL CCWREADD CHAR(8) BDY(DWORD) GENERATED;
*         DCL 1 READCP CHAR(8) BASED(ADDR(CCWREADD)),
*              2 OP BIT(8),
*              2 BUFADR PTR(24),
*              2 FLG BIT(8),
*              2 * BIT(8),
*              2 BYTECNT BIT(16);
*         DCL CCWWRPOS CHAR(8) BDY(DWORD) GENERATED;
*         DCL 1 WRPOS CHAR(8) BASED(ADDR(CCWWRPOS)),
*              2 OP1 BIT(8),
*              2 BUFADR1 PTR(24),
*              2 FLG1 BIT(8),
*              2 * BIT(8),
*              2 BYTECNT1 BIT(16);
*         DCL CCWRDEOT CHAR(8) BDY(DWORD) GENERATED;
*         DCL 1 RDEOT CHAR(8) BASED(ADDR(CCWRDEOT)),
*              2 OP2 BIT(8),
*              2 BUFADR2 PTR(24),
*              2 FLG2 BIT(8),
*              2 * BIT(8),
*              2 BYTECNT2 BIT(16);
*         DCL POS CHAR(1) INIT('76'X);  /*                      X02008*
*         DCL RESPONSE CHAR(5);         /* EOT BUFFER                 *
*  /*******************************************************************
*  /*     REGISTERS                                                   *
*  /*******************************************************************
*         DCL R0 REG(0) PTR;
*         DCL R1 REG(1) PTR;
*         DCL R2 REG(2) PTR;
*         DCL R3 REG(3);
*         DCL R4 REG(4);
*         DCL R5 REG(5);
*         DCL R6 REG(6);
*         DCL R7 REG(7);
*         DCL R8 REG(8);
*         DCL R9 REG(9);
*         DCL R10 REG(10);
*         DCL R11 REG(11);
*         DCL R12 REG(12);
*         DCL R13 REG(13);
*         DCL R14 REG(14);
*         DCL R15 REG(15);
*  /*******************************************************************
*  /* FOR PWTO'S                                                      *
*  /*******************************************************************
*  /*                                                                 *
*         DCL  1 * BASED(R1),
*               2 LENGTH CHAR(1),       /* LENGTH OF MESSAGE          *
*               2 BUFAD PTR(24),        /* ADDR OF RESP BUFFER        *
*               2 MECBAD PTR;           /* ECB ADDRESS                *
*         DCL IFDMSG54 LABEL NONLOCAL EXTERNAL;
*         DCL MSGPTR PTR INIT(ADDR(IFDMSG54));
*         DCL 1 * BASED(MSGPTR),
*               3 IFD163 PTR(31),        /* PTR TO MESSAGE            *
*               3 IFD164 PTR(31),        /* PTR TO MESSAGE            *
*               3 IFD168 PTR(31),
*               3 IFD137 PTR(31),
*               3 IFD140 PTR(31);        /* PTR TO VARY-OFF MSG Y02008*
*         DCL 1 ERRMSG CHAR(47) BASED(IFD137),
*              3 * CHAR(4),              /*USED BY PWTO               *
*              3 * CHAR(14),            /*                      S21051*
*              3 MSGCSW CHAR(14),       /*                      S21051*
*              3 * CHAR(5),             /*                      S21051*
*              3 MSGSNS CHAR(12);       /*                      S21051*
*         DCL 1 LINKMSG CHAR(68) BASED(IFD164),
*           3 * CHAR(40),
*           3 LINKTEXT CHAR(32);
*         DCL 1 MSGTEXT CHAR(106),      /* NO HOOKUP EXPLANATIONX03008*
*           3 NOUCBTXT CHAR(23) INIT('NO UCB SYSGEND FOR 2955'),
*           3 NAVAILTXT CHAR(28) INIT('2955 CU NOT FREE FOR TESTING'),
*           3 TOUTTXT CHAR(31) INIT('INITIAL REMOTE RESPONSE TIMEOUT'),
*           3 RIWTOTXT CHAR(28) INIT('TIMEOUT ON READ INITIAL WAIT'),
*           3 EQMPTTXT CHAR(24) INIT('HARDWARE/INTERFACE ERROR');
*
*         DCL 1 MSG140 BASED(IFD140) CHAR(20),
*              3 * CHAR(12),             /* N. A.               Y02008*
*              3 MSG140DV CHAR(8);       /* DEV VARIED OFFLINE  Y02008*
*
*         DCL 1 INBUF CHAR(18),          /* MACRO OUTPUT              *
*              3 SNSIN CHAR(4),          /* SENSE IN EBCDIC           *
*              3 CSWIN CHAR(14);         /* CSW IN EBCDIC             *
*         DCL 1 OUTBUFR CHAR(9),         /* MACRO INPUT               *
*              3 SNSOUT CHAR(2),         /* SENSE IN HEX              *
*              3 CSWOUT CHAR(7);        /* CSW OUTPUT                 *
*         DCL CNVRT CHAR(14) GENERATED; /*CALLING SEQUENCE            *
*         DCL TAB28 PTR(31) GENERATED;  /* POINTER TO CONVERT MACRO   *
*  /*******************************************************************
*  /* CONTROL BLOCK POINTERS                                          *
*  /*******************************************************************
*         DCL AVTPTR PTR GENERATED;      /* I/O APPENDAGE VECTOR TABLE*
*         DCL DEVTBPTR PTR GEND;         /* DEV TAB PTR IN C A  X03008*
*         DCL REIUCB PTR GENERATED;      /* 2955 UCB ADDRESS          *
*         DCL TSTDEBAD PTR GENERATED;    /* TEST DEB ADDRESS (SP254)  *
*         /************************************************************
*         /*               SVC PARAMETER LIST                         *
*         /************************************************************
*         DCL ROPT CHAR(8) GENERATED;
*         DCL ROPTMIN2 CHAR(2) BASED(ADDR(ROPT)-2);
*         DCL 1 SVCPLIST BASED(ADDR(ROPT)),   /* SVC PARAMETER LIST   *
*               3 ROPT0 PTR(31),         /* FROM ADDRESS              *
*               3 ROPT4 PTR(31),         /* TO ADDRESS                *
*               3 ROPT8 PTR(31);         /* IOSGEN WKAREA       X03008*
*  /*******************************************************************
*  /*     STIMER MACRO DATA                                           *
*  /*******************************************************************
*         DCL (TIMEOUT) INTERNAL ENTRY; /* TIME OUT EXIT ROUTINE      *
*         DCL TIME2 CHAR(8) BDY(DWORD)  /* TEN MINUTES ON WAIT        *
*           INIT('F0F0F1F0F0F0F0C0'X);
*         DCL 1 UCB2955 BASED(REIUCB) CHAR(16), /* REI UCB     X03008*/
*           3 * CHAR(4),                /* N.A.                X03008*/
*           3 UCBDEVAD CHAR(2),         /* UCB DEVICE ADDRESS  X03008*/
*             5 UCBCHNAD CHAR(1),       /* CHANNEL ADDR OF DEV X03008*/
*             5 UCBUADR CHAR(1),        /* UCB UNIT ADDR CU,U  X03008*/
*           3 * CHAR(7),                /* N.A.                Y02008*/
*           3 UCBNAME CHAR(3);          /* DEV NAME IN EBCDIC  Y02008*/
*         DCL ONEDEV FIXED INIT('00000001'X);  /* 1 DEVICE     X03008*/
*         DCL 1 DEVTAB54(36) CHAR(1) INIT((36)'00'X),/*REI DVTBX03008*/
*           3 * CHAR(8),                /* NA                  X03008*/
*           3 DEVUCB PTR,               /* DEV UCB ADDR        X03008*/
*           3 DEVFLGS CHAR(4),          /* DEV TAB FLAGS       X03008*/
*             5 * CHAR(2),              /* NA                  X03008*/
*             5 FLAG3 CHAR(1),          /* FLAG FIELD 3        X03008*/
*               7 * BIT(7),             /* NA                  X03008*/
*               7 PSEUDODVTAB BIT(1),   /* PSEUDO DEV TAB FOR  X03008*/
*                                       /* REI DEVICE          X03008*/
*             5 FLAG4 CHAR(1),          /* NA                  X03008*/
*               7 * BIT(4),             /* N. A.               Y02008*/
*               7 DEVVAR BIT(1),        /* DEV VARY OFF BY US  Y02008*/
*           3 * CHAR(16),               /* NA                  X03008*/
*           3 CDSDEVAD CHAR(4),         /* CDS DEVICE ADDR     X03008*/
*             5 * CHAR(2),              /* N.A.                X03008*/
*             5 DEVADDR CHAR(2),        /* HEX DEV ADDR        X03008*/
*               7 CHANADR CHAR(1);      /* CHANNEL ADDR        X03008*/
*
*         /************************************************************
*         /*  ADDRESS OF CVT
*         DCL CVTADPTR PTR INIT(16);
*         DCL CVTADDR PTR BASED(CVTADPTR);
*         DCL   1 CVT BASED(CVTADDR),    /* CVT
*                3 * CHAR(40),
*                3 CVTILK2 PTR,          /* PTR TO UCB LOOKUP TABLE  */
*                3 * CHAR(284),          /* N.A. IN CVT         X03008*
*                3 CVTEXT2 PTR;          /* PTR TO CVT EXTENSIONX03008*
*         DCL CVTOLTEP BASED(CVTEXT2+28) PTR; /* OLTEP PTR,CVT  X03008*
*         DCL 1 OLTEPTAB CHAR(24) BASED(CVTOLTEP), /* OLTEP TAB X03008*
*                3 DIEHEAD CHAR(4),     /* HEAD OF DIE MODULE   Y02008*
*                3 REIDEBAD PTR,        /* PTR OLTEPS REI DEB   Y02008*
*                3 * CHAR(20),          /* PTRS FOR DIE USE     Y02008*
*                3 OLTEPUCB PTR,        /* OLTEP UCBS FOR TEST  X03008*
*                3 REIUCBAD PTR,        /* DEV UCB ADDRESS      X03008*
*                3 * CHAR(4),           /* N A                  Y02008*
*                3 IOSGENTBL (18) FIXED;/* IOS WORK AREA        X03008*
*         /************************************************************
*         /*                    REI DEB                               *
*         /************************************************************
*         DCL 1 REIDEB CHAR(48) BDY(WORD),
*           3 *(4) CHAR(1) INIT((4) '00'X), /* NA INIT TO 0    YA01378*
*           3 NXTDEBAD PTR(31),             /* NEXT DEB ADDRESSYA01378*
*           3 *(8) CHAR(1) INIT((8) '00'X), /* NA INIT TO 0    YA01378*
*               3 NEXTS CHAR(1) INIT('00'X),  /* NUMBER OF EXTENTS    *
*               3 *(7) CHAR(1) INIT((7)'00'X),     /* NA              *
*               3 DEBID CHAR(1) INIT('0F'X),    /* DEB IDENTIFIER     *
*               3 DEBDCBAD PTR(24),           /* DCB ADDRESS          *
*               3 RDEB28C CHAR(1) INIT('02'X),  /*  EXTENT CODE       *
*               3 RDEB28 PTR(24),             /* I/O APPENDAGE TAB AD *
*               3 RUCBAD PTR(31),             /* UCB ADDRESS          *
*               3 *(12) CHAR(1) INIT((12)'00'X);   /* NA              *
*         /************************************************************
*         /*                    REI DCB                               *
*         /************************************************************
*         DCL REIDCBPT PTR GENERATED;   /* POINTER TO REMOTE DCB      *
*         DCL 1 REIDCB CHAR(72) BASED(REIDCBPT),   /* REI DCB         *
*              2 *(18) FIXED,                                   /*5035*
*               3 * CHAR(44),                      /* NA              *
*               3 RDCB44 PTR(31),                  /* PTR TO DEB      *
*                5 RDCB44C CHAR(1),     /* FLAGS                 M4502*
*              2 ADRTABLE(5) FIXED;     /*VECTOR TABLE           M4502*
*  /*******************************************************************
*  /*     REI IOB                                                     *
*  /*******************************************************************
*         DCL REIOBPTR PTR GENERATED;   /* POINTER TO REMOTE IOB      *
*         DCL 1 IOB CHAR(40) BASED(REIOBPTR),     /* BREAK DOWN IOB   *
*             2 IOB1 CHAR(32),          /* USED BY EXCP               *
*              3 FLAGS BIT(8),                    /*                  *
*               5 DCH BIT(1),                     /* DATA CHAINING BIT*
*               5 CCH BIT(1),                     /*  CCW CHAINING BIT*
*               5 * BIT(6),                       /*                  *
*              3 * CHAR(1),
*              3 SENSE CHAR(2),         /* SENSE                      *
*              3 ECBC BIT(8),                     /* ECB CODE         *
*              3 ECBA PTR(24),                    /* ECB ADDRESS      *
*              3 * CHAR(1),
*              3 CSW CHAR(7),           /* CSW                        *
*              3 * BIT(8),
*              3 CPA PTR(24),                     /* CHANNEL PROG.ADDR*
*              3 * BIT(8),                        /*                  *
*              3 DCBA PTR(24),                    /* DCB ADDRESS      *
*              3 *(4) FIXED;                      /*                  *
*  /*******************************************************************
*  /*     REI COMMON AREA SWITCHES                                    *
*  /*******************************************************************
*         DCL CHASCT CHAR(116) GENERATED;    /* COMMON AREA           *
*         DCL CESWTR CHAR(1) GENERATED; /* COMMON AREA SWITCHES       *
*        DCL 1 * BASED(ADDR(CESWTR)),    /*                           *
*              3 RETAINAC BIT(1),        /* REI ACTIVE SWITCH         *
*              3 REMERR BIT(1),          /* PERMANENT ERROR SWITCH    *
*              3 REMNOMSG BIT(1),       /*  REMOTE NO MESSAGE SWITCH  *
*              3 * BIT(5);
*        DCL 1 * BASED(ADDR(CHASCT)),    /*                           *
*             3 * (9) FIXED,             /*                           *
*             3 * FIXED,                 /*                           *
*               5 * BIT(2),              /*                           *
*               5 RETSWT BIT(1),         /* ANOTHER REI ACTIVE SWITCH *
*               5 * BIT(29);             /*                           *
*  /*******************************************************************
*  /* REI BUFFERS AND ECBS                                            *
*  /*******************************************************************
*         DCL REIECB GENERATED;         /* REMOTE ECB                 *
*        DCL RECB BASED(ADDR(REIECB));   /*                           *
*  /*                                                                 *
*         DCL 1 ENECB CHAR(4) BDY(WORD),     /* ENABLE ECB            *
*               3 ENCODE CHAR(1),            /* COMPLETION CODE       *
*               3 * CHAR(1),
*               3 * CHAR(1),
*                5 * BIT(7),
*                5 SELFPOST BIT(1),     /* TIMEOUT BIT                *
*               3 * CHAR(1);
*  /*                                                                 *
*         DCL RINBUF PTR GENERATED;     /* INPUT BUFFER POINTER       *
*        DCL REIBUF CHAR(80) BASED(RINBUF);
*  /*                                                                 *
*         DCL RTALKBUF PTR GENERATED;   /* TALK BUFFER ADDRESS        *
*         DCL TALKBUF CHAR(72) BASED(RTALKBUF);   /* TALK BUFFER      *
*         DCL TALKECB FIXED GENERATED;  /* TALK ECB                   *
*         RESTRICT(R1);
*  /*******************************************************************
*  /* CHECK FOR RETAIN ALREADY ACTIVE                                 *
*  /*******************************************************************
*  /*                                                                 *
*         IOB1=IOB1&&IOB1;                   /* ZERO IOB              *
         L     @C,REIOBPTR                                        0080
         XC    0(32,@C),0(@C)                                     0080
*         ENECB=0;                      /* ZERO-ENABLE ECB      S21051*
         MVC   ENECB(4),@D1                                       0081
*         IF RETAINAC='1'B THEN          /* IS REI ACTIVE.            *
         TM    A00034,B'10000000'                                 0082
*           RETURN;                      /* YES. RETURN.              *
         BC    03,@EL01                                           0083
*         IF REIUCB=0 THEN              /* NO REI UCB?         X03008*/
@9FF     SR    @F,@F                                              0084
         C     @F,REIUCB                                          0084
         BC    07,@9FE                                            0084
*          DO;                          /* NO REI UCB,SEND     X03008*/
*           R1=IFD164;                  /* ADDRESS MSG IFD164I X03008*/
         L     @8,MSGPTR                                          0086
         L     @1,4(0,@8)                                         0086
*           LINKTEXT=LINKTEXT&&LINKTEXT;
         L     @9,MSGPTR                                          0087
         L     @9,4(0,@9)          A00004                         0087
         XC    40(32,@9),40(@9)                                   0087
*           LINKTEXT=NOUCBTXT;          /* NO 2955 UCB IN SYS  X03008*/
         MVC   40(23,@9),MSGTEXT                                  0088
         MVI   63(@9),C' '                                        0088
         MVC   64(8,@9),63(@9)                                    0088
*           GO TO NOUCBMSG;             /* PRINT MESSAGE       X03008*/
         BC    15,NOUCBMSG                                        0089
*          END;
*         DEVADDR=UCBDEVAD;             /* GET UCB DEV ADDR    X03008*/
@9FE     L     @C,REIUCB                                          0091
         MVC   DEVTAB54+34(2),4(@C)                               0091
*         CHANADR=CHANADR&'3F'X;        /* IGNORE ALT PATHBITS X03008*/
         NI    DEVTAB54+34,X'3F'                                  0092
*         PSEUDODVTAB='1'B;             /* SET BIT FOR SVC59   X03008*/
         OI    DEVTAB54+14,B'00000001'                            0093
*         ROPT0=ADDR(DEVTAB54);         /* ADDRESS DEVTABS IN  X03008*/
         LA    @F,DEVTAB54                                        0094
         ST    @F,SVCPLIST                                        0094
*         ROPT4=ONEDEV;                 /* ONE DEV TO LOOKUP  XM04008*/
         MVC   SVCPLIST+4(4),ONEDEV                               0095
*         ROPT8=ADDR(IOSGENTBL);        /* IOS WORK AREA       X03008*/
         L     @8,CVTADPTR                                        0096
         L     @8,0(0,@8)          CVTADDR                        0096
         L     @8,328(0,@8)        CVT                            0096
         L     @8,28(0,@8)         CVTOLTEP                       0096
         LA    @F,40(0,@8)                                        0096
         ST    @F,SVCPLIST+8                                      0096
*         R1=64;                        /* UCB LOOK UP FNCTN   X03008*/
         LA    @1,64                                              0097
*         R0=ADDR(ROPT);                /* ADDR SVC PARM LIST  X03008*/
         LA    @0,ROPT                                            0098
*         GEN(SVC 59);                  /* ISSUE UCB LOOKUP    X03008*/
         SVC 59
         DS    0H
*         IF REIUCBAD=0 THEN            /* IF NO 2955 UCB      X03008*/
         SR    @F,@F                                              0100
         MVC   @TEMP4(4),32(@8)                                   0100
         C     @F,@TEMP4                                          0100
         BC    07,@9FD                                            0100
*          DO;                       /* SET UP MESSAGE IFD164I  X03008*
*           R1=IFD164;               /* ADDRESS MESSAGE         X03008*
         L     @9,MSGPTR                                          0102
         L     @1,4(0,@9)                                         0102
*           LINKTEXT=LINKTEXT&&LINKTEXT;
         L     @6,MSGPTR                                          0103
         L     @6,4(0,@6)          A00004                         0103
         XC    40(32,@6),40(@6)                                   0103
*                                    /* CLEAR VARIABLE IN MSG   X03008*
*           LINKTEXT=NAVAILTXT;      /* NO NO 2955 CU IN SYS    X03008*
         MVC   40(28,@6),MSGTEXT+23                               0104
         MVI   68(@6),C' '                                        0104
         MVC   69(3,@6),68(@6)                                    0104
*
* NOUCBMSG:
*
*         R1=IFD164I;                /* ADDRESS MSG IFD164I     Y02008*
NOUCBMSG L     @1,IFD164I                                         0105
*         GEN( PWTO REG=(1));        /* ISSUE MESSAGE           Y02008*
          PWTO REG=(1)
         DS    0H
*         RETURN;                                          /*  Y02008*/
         BC    15,@EL01                                           0107
*          END;                      /*                         X03008*
*
*         /*  OUTPUT MSG IFD140I IF OLTEP VARIED 2955 OFFLINE   Y02008*
*
*         IF DEVVAR='1'B             /* DEV VARY BIT ON BY SVC? Y02008*
*          THEN                                              /* Y02008*
@9FD     TM    DEVTAB54+15,B'00001000'                            0109
         BC    12,@9FC                                            0109
*           DO;                      /* OUTPUT IFD140I MSG      Y02008*
*            RESTRICT(R1);           /* RESTRICT REG FOR MSG    Y02008*
*            R1=IFD140;              /* ADDRESS MSG IN IFDOLT54 Y02008*
         L     @C,MSGPTR                                          0112
         L     @1,16(0,@C)                                        0112
*            MSG140DV(6:8)=UCBNAME;  /* PUT DEV NAME IN MSG     Y02008*
         L     @8,REIUCB                                          0113
         L     @9,MSGPTR                                          0113
         L     @9,16(0,@9)         A00004                         0113
         MVC   17(3,@9),13(@8)                                    0113
*            GEN (PWTO REG=(1));     /* ISSUE MSG TO SYSTEM     Y02008*
         PWTO REG=(1)
         DS    0H
*            DEVVAR='0'B;            /* ZERO DEV VARY BIT       Y02008*
         NI    DEVTAB54+15,B'11110111'                            0115
*           END;                                             /* Y02008*
*         /************************************************************
*         /*                   BUILD DEB AND DCB                      *
*         /************************************************************
*         ROPT4=TSTDEBAD;                /* DEB ADDRESS         Y02008*
@9FC     MVC   SVCPLIST+4(4),TSTDEBAD                             0117
*         ROPT0=ADDR(REIDEB);
         LA    @F,REIDEB                                          0118
         ST    @F,SVCPLIST                                        0118
*         DEBDCBAD=REIDCBPT;             /* PUT DCB ADDRESS IN DEB    *
         MVC   REIDEB+25(3),REIDCBPT+1                            0119
*         RDEB28=ADDR(ADRTABLE);        /* PUT ADDR OF I/O APPENDAGE  *
         L     @C,REIDCBPT                                        0120
         LA    @F,72(0,@C)                                        0120
         ST    @F,@TEMP4                                          0120
         MVC   REIDEB+29(3),@TEMP4+1                              0120
*                                       /*                       M4502*
*                                        /* VECTOR TABLE IN DEB       *
*         RUCBAD=REIUCB;                 /* PUT UCB ADDRESS IN DEB    *
         MVC   REIDEB+32(4),REIUCB                                0121
*         RDCB44= ROPT4;                 /* DEB ADDRESS IN SP254      *
         MVC   44(4,@C),SVCPLIST+4                                0122
*         RDCB44C='00'X;                 /* SET DCB FLAGS FOR NO ERP  *
         MVI   44(@C),X'00'                                       0123
*         NXTDEBAD=0;                    /* ZERO ADR OF NXT DEBXA01050*
         SR    @F,@F                                              0124
         ST    @F,REIDEB+4                                        0124
*         /************************************************************
*         /*                   MOVE DEB                               *
*         /************************************************************
*         ROPTMIN2='54';                 /* PUT ID IN SVC PARMLIST    *
         MVC   ROPTMIN2(2),@C5                                    0125
*         R1='48'X;                      /* PUT ONE DEB MOVE CALLING  *
         LA    @1,X'48'                                           0126
*                                       /* PARAMETER IN R1            *
*         R0=ADDR(ROPT);                 /* PUT ADDR OF SVC PARAMETER *
         LA    @0,ROPT                                            0127
*                                        /* LIST IN R0                *
*         GEN(SVC  59);                  /* MOVE DEB                  *
         SVC  59
         DS    0H
*  /*******************************************************************
*  /* ENABLE 2955 AND TRY TO ESTABLISH CONTACT                        *
*  /*******************************************************************
*         FLAGS = '42'X;                     /* INDICATE CCW CHAINING *
         L     @8,REIOBPTR                                        0129
         MVI   0(@8),X'42'                                        0129
*         ECBA = ADDR(ENECB);                /* ADDR OF ECB FOR IOB   *
         LA    @F,ENECB                                           0130
         ST    @F,@TEMP4                                          0130
         MVC   5(3,@8),@TEMP4+1                                   0130
*         CPA = ADDR(CCWENABL);              /* ADDR OF CHAN PROG     *
         LA    @F,CCWENABL                                        0131
         ST    @F,@TEMP4                                          0131
         MVC   17(3,@8),@TEMP4+1                                  0131
*         DCBA = REIDCBPT;                   /* DCB ADDRESS           *
         MVC   21(3,@8),REIDCBPT+1                                0132
*         BUFADR=RINBUF;            /* ADDRESS OF BUFR INTO CCW       *
         MVC   READCP+1(3),RINBUF+1                               0133
*         R1=REIOBPTR;                  /* ADDRESS OF IOB IN REG 1    *
         L     @1,REIOBPTR                                        0134
*         GEN;
CONTACT  EXCP  (1)                     *ENABLE 2955&CONTACT RAC
STRTCLCK STIMER REAL,TIMEOUT,DINTVL=TIME2
WAITENBL WAIT  ECB=ENECB                     * WAIT FOR COMPLETION
STOPCLCK TTIMER CANCEL
         DS    0H
*
*         IF SELFPOST^='1'B THEN GOTO CHKECB; /*TIMEOUT ?             *
         TM    ENECB+2,B'00000001'                                0136
         BC    12,CHKECB                                          0137
*
*         R1=IFD164;                    /* ADDR MESSAGE IFD164  X03008*
         L     @9,MSGPTR                                          0138
         L     @1,4(0,@9)                                         0138
*         LINKTEXT=LINKTEXT&&LINKTEXT;
         L     @6,MSGPTR                                          0139
         L     @6,4(0,@6)          A00004                         0139
         XC    40(32,@6),40(@6)                                   0139
*         LINKTEXT=TOUTTXT;            /* TIMEOUT MESSAGE       X03008*
         MVC   40(31,@6),MSGTEXT+51                               0140
         MVI   71(@6),C' '                                        0140
*         GOTO FAILED;
         BC    15,FAILED                                          0141
*  CHKECB:
*         IF ENCODE^='7F'X THEN        /* I/O NOT DONE          X03008*
CHKECB   CLI   ENECB,X'7F'                                        0142
         BC    08,@9FB                                            0142
*          DO;                         /* HARDWARE/INTERFACE    X03008*
*          R1=IFD164;                  /* ADDR MESSAGE          X03008*
         L     @C,MSGPTR                                          0144
         L     @1,4(0,@C)                                         0144
*          LINKTEXT=LINKTEXT&&LINKTEXT;  /* CLEAR VARIABLE MSG  X03008*
         L     @8,MSGPTR                                          0145
         L     @8,4(0,@8)          A00004                         0145
         XC    40(32,@8),40(@8)                                   0145
*          LINKTEXT=EQMPTTXT;          /* HDWRE/INTRFC ERR      X03008*
         MVC   40(24,@8),MSGTEXT+110                              0146
         MVI   64(@8),C' '                                        0146
         MVC   65(7,@8),64(@8)                                    0146
*          GO TO FAILED;               /* GO PRINT MESSAGE      X03008*
         BC    15,FAILED                                          0147
*         END;                         /*                       X03008*
*  /*******************************************************************
*  /* CONTACT ESTABLISHED,WRITE POSITIVE RESPONSE TO REMOTE           *
*  /*******************************************************************
*  WRTRSP:ENECB=0;                      /* ZERO THE ECB               *
@9FB     EQU   *                                                  0149
WRTRSP   MVC   ENECB(4),@D1                                       0149
*         IOB1=IOB1&&IOB1;                   /* ZERO IOB              *
         L     @C,REIOBPTR                                        0150
         XC    0(32,@C),0(@C)                                     0150
*         FLAGS='42'X;                  /* INDICATE CCW CHAINING      *
         MVI   0(@C),X'42'                                        0151
*         ECBA=ADDR(ENECB);             /* ADDRESS OF ECB IN IOB      *
         LA    @F,ENECB                                           0152
         ST    @F,@TEMP4                                          0152
         MVC   5(3,@C),@TEMP4+1                                   0152
*         CPA=ADDR(CCWWRPOS);           /* CHAN PROG ADDR IN IOB      *
         LA    @F,CCWWRPOS                                        0153
         ST    @F,@TEMP4                                          0153
         MVC   17(3,@C),@TEMP4+1                                  0153
*         BUFADR1=ADDR(POS);            /* ADDRESS OF DATA INTO CCW   *
         LA    @F,POS                                             0154
         ST    @F,@TEMP4                                          0154
         MVC   WRPOS+1(3),@TEMP4+1                                0154
*         BUFADR2=ADDR(RESPONSE);       /*ADDRESS OF RECEIVE BUF IN CC*
         LA    @F,RESPONSE                                        0155
         ST    @F,@TEMP4                                          0155
         MVC   RDEOT+1(3),@TEMP4+1                                0155
*         DCBA=REIDCBPT;                /*ADDRESS OF DCB INTO IOB     *
         MVC   21(3,@C),REIDCBPT+1                                0156
*         R1=REIOBPTR;                  /* ADDRESS OF IOB IN REG 1    *
         L     @1,REIOBPTR                                        0157
*         GEN;
WRITRESP EXCP  (1)                     *WRITE Y READ EOT
STRTCLK1 STIMER REAL,TIMEOUT,DINTVL=TIME2   *                     M4502
WAITRESP WAIT  ECB=ENECB
STOPCLK1 TTIMER CANCEL                      *                     M4502
         TM    ENECB,X'7F'
         BO    ESTABL                                          X02008
         DS    0H
*         R1=IFD164;                   /* ADDRESS MESSAGE       X03008*
         L     @8,MSGPTR                                          0159
         L     @1,4(0,@8)                                         0159
*         LINKTEXT=LINKTEXT&&LINKTEXT; /* CLEAR MESSAGE         X03008*
         L     @9,MSGPTR                                          0160
         L     @9,4(0,@9)          A00004                         0160
         XC    40(32,@9),40(@9)                                   0160
*         LINKTEXT=RIWTOTXT;           /* ADDR READ INIT WAIT   X03008*
         MVC   40(28,@9),MSGTEXT+82                               0161
         MVI   68(@9),C' '                                        0161
         MVC   69(3,@9),68(@9)                                    0161
*  /*******************************************************************
*  /* FAILED TO ESTABLISH CONTACT TELL ON-SITE VIA PWTO              */
*  /*******************************************************************
*  FAILED:R1 = IFD164;                  /* ADDRESS OF ERROR MESSAGE   *
FAILED   L     @C,MSGPTR                                          0162
         L     @1,4(0,@C)                                         0162
*         GEN(PWTO  REG=(1));           /* ISSUE IT                   *
         PWTO  REG=(1)
         DS    0H
*         IF SELFPOST^='1'B             /* WAS THERE TIME OUT  X03008*/
*          THEN                         /* IN INTERFACE ?      X03008*/
         TM    ENECB+2,B'00000001'                                0164
*           GO TO AA1;                  /* NO, PRNT OUT SENSE  X03008*/
*         RETURN;
         BC    03,@EL01                                           0166
*     AA1:SNSOUT=SENSE;                 /* GET SENSE BYTES            *
AA1      L     @C,REIOBPTR                                        0167
         MVC   OUTBUFR(2),2(@C)                                   0167
*         CSWOUT=CSW;                   /* GET CSW BYTES              *
         MVC   OUTBUFR+2(7),9(@C)                                 0168
*         R1=ADDR(CNVRT);               /* POINT TO CALLING SEQUENCE  *
         LA    @1,CNVRT                                           0169
*         R15=TAB28;                    /* POINT TO CONVERT MACRO     *
         L     @F,TAB28                                           0170
*         GEN(BALR R14,R15);            /* CONVERT SNS&CSW TO EBCDIC  *
         BALR R14,R15
         DS    0H
*         R1=IFD137;                    /* SET UP FOR PWTO            *
         L     @8,MSGPTR                                          0172
         L     @1,12(0,@8)                                        0172
*         MSGSNS=SNSIN;                 /* PUT IN SENSE DATA          *
         L     @9,MSGPTR                                          0173
         L     @9,12(0,@9)         A00004                         0173
         MVC   37(4,@9),INBUF                                     0173
         MVI   41(@9),C' '                                        0173
         MVC   42(7,@9),41(@9)                                    0173
*         MSGCSW=CSWIN;                 /* PUT IN CSW DATA            *
         MVC   18(14,@9),INBUF+4                                  0174
*         GEN(PWTO REG=(1));            /* WRITE IT                   *
         PWTO REG=(1)
         DS    0H
*         R1=REIUCB;                    /* YES                        *
         L     @1,REIUCB                                          0176
*         GEN;                          /* SETUP TO PURGE EXCP        *
HIOENABL SVC   33                      * PURGE
         DS    0H
*         RETURN;
         BC    15,@EL01                                           0178
*  /*******************************************************************
*  /* CONNECTION IS CONFIRMED TELL ON-SITE,ISSUE OUTSTANDING          *
*  /* COMMUNICATIONS WTOR,SET APPROPRIATE SWITCHES AND ISSUE READ     *
*  /* INITIAL CHANNEL PROGRAM BEFORE RETURNING                        *
*  /*******************************************************************
*  ESTABL:R1=IFD163;
ESTABL   L     @C,MSGPTR                                          0179
         L     @1,0(0,@C)                                         0179
*         RETAINAC = '1'B;                   /* SET RETAIN ACTIVE SWT *
         OI    A00034,B'10000000'                                 0180
*         RETSWT = '1'B;                     /* ANOTHER ACTIVE SWT    *
         OI    A00036+36,B'00100000'                              0181
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          *
         OI    A00034,B'00100000'                                 0182
*         GEN(PWTO   REG=(1));
         PWTO   REG=(1)
         DS    0H
*         REMNOMSG='0'B;                /* RESET FLAG                 *
         NI    A00034,B'11011111'                                 0184
*         R1=IFD168;                    /* ADDR OF MSG TO R1          *
         L     @1,8(0,@C)                                         0185
*         BUFAD=RTALKBUF;               /* ADDR OF RESPONSE BUFFER    *
         MVC   1(3,@1),RTALKBUF+1                                 0186
*         TALKBUF(1)=' ';                /*                      M5842*
         L     @8,RTALKBUF                                        0187
         MVI   0(@8),C' '                                         0187
*         TALKBUF(2:72)=TALKBUF(1:71);   /*                      M5842*
         MVC   1(71,@8),0(@8)                                     0188
*         LENGTH='48'X;                 /* LENGTH OF BUFFER           *
         MVI   0(@1),X'48'                                        0189
*         TALKECB=0;                    /* ZERO ECB                   *
         SR    @F,@F                                              0190
         ST    @F,TALKECB                                         0190
*         MECBAD=ADDR(TALKECB);         /* ADDR OF ECB                *
         LA    @F,TALKECB                                         0191
         ST    @F,4(0,@1)                                         0191
*         REMNOMSG='1'B;                /* DONT SEND TO REMOTE        *
         OI    A00034,B'00100000'                                 0192
*         GEN(PWTOR  REG=(1),WAIT=NO);   /* ISSUE WTOR                *
         PWTOR  REG=(1),WAIT=NO
         DS    0H
*         REMNOMSG='0'B;                 /*ZERO REMNOMSG FLAG         *
         NI    A00034,B'11011111'                                 0194
*         REIBUF=REIBUF&&REIBUF;    /* ZERO REMOTE INPUT BUFFER       *
         L     @9,RINBUF                                          0195
         XC    0(80,@9),0(@9)                                     0195
*         IOB1=IOB1&&IOB1;                   /* ZERO IOB              *
         L     @6,REIOBPTR                                        0196
         XC    0(32,@6),0(@6)                                     0196
*         FLAGS='42'X;                  /* CCW CHAINING IN IOB        *
         MVI   0(@6),X'42'                                        0197
*         RECB = 0;                          /* ZERO REMOTE ECB       *
         SR    @F,@F                                              0198
         ST    @F,RECB                                            0198
*         ECBA = ADDR(RECB);                 /* ADDR OF REMOTE ECB    *
         LA    @F,RECB                                            0199
         ST    @F,@TEMP4                                          0199
         MVC   5(3,@6),@TEMP4+1                                   0199
*         CPA = ADDR(CCWPREP);               /* ADDR OF READ INIT CP  *
         LA    @F,CCWPREP                                         0200
         ST    @F,@TEMP4                                          0200
         MVC   17(3,@6),@TEMP4+1                                  0200
*         DCBA = REIDCBPT;                   /* DCB ADDRESS           *
         MVC   21(3,@6),REIDCBPT+1                                0201
*         R1=REIOBPTR;                  /* ADDRESS OF IOB IN REG 1    *
         L     @1,REIOBPTR                                        0202
*         GEN;
READINIT EXCP  (1)
         DS    0H
*         RETURN;
*  /*******************************************************************
*  /* STIMER EXIT ROUTINE-2 MINUTE INTERUPT                           *
*  /*******************************************************************
*  TIMEOUT:PROCEDURE;
@EL01    L     @D,4(0,@D)                                         0205
         LM    @E,@C,12(@D)                                       0205
         BCR   15,@E                                              0205
TIMEOUT  STM   @E,@C,12(@D)                                       0205
         ST    @D,@SAV002+4                                       0205
         LA    @F,@SAV002                                         0205
         ST    @F,8(0,@D)                                         0205
         LR    @D,@F                                              0205
*         GENERATE;
* POST 100 COMPLETION CODE
POSTECB  POST  ENECB,256
         DS    0H
*         RETURN;
*         END TIMEOUT;
@EL02    L     @D,4(0,@D)                                         0208
         LM    @E,@C,12(@D)                                       0208
         BCR   15,@E                                              0208
*         END IFDOLT54;
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    F'0'
         DS    0F
@C5      DC    C'54'
         DS    0D
@DATA    EQU   *
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD
         ORG   @DATA+00000072
POS      EQU   *                   1 BYTE(S)
         DC    X'76'
RESPONSE EQU   @DATA+00000073      5 BYTE(S)
R0       EQU   00000000            FULLWORD POINTER REGISTER
R1       EQU   00000001            FULLWORD POINTER REGISTER
R2       EQU   00000002            FULLWORD POINTER REGISTER
R3       EQU   00000003            FULLWORD INTEGER REGISTER
R4       EQU   00000004            FULLWORD INTEGER REGISTER
R5       EQU   00000005            FULLWORD INTEGER REGISTER
R6       EQU   00000006            FULLWORD INTEGER REGISTER
R7       EQU   00000007            FULLWORD INTEGER REGISTER
R8       EQU   00000008            FULLWORD INTEGER REGISTER
R9       EQU   00000009            FULLWORD INTEGER REGISTER
R10      EQU   00000010            FULLWORD INTEGER REGISTER
R11      EQU   00000011            FULLWORD INTEGER REGISTER
R12      EQU   00000012            FULLWORD INTEGER REGISTER
R13      EQU   00000013            FULLWORD INTEGER REGISTER
R14      EQU   00000014            FULLWORD INTEGER REGISTER
R15      EQU   00000015            FULLWORD INTEGER REGISTER
A00003   EQU   00000000            8 BYTE(S) ON WORD
LENGTH   EQU   A00003+00000000     1 BYTE(S)
BUFAD    EQU   A00003+00000001     3  BYTE  POINTER ON WORD+1
MECBAD   EQU   A00003+00000004     FULLWORD POINTER
         ORG   @DATA+00000080
MSGPTR   EQU   *                   FULLWORD POINTER
         DC    VL4(IFDMSG54)
A00004   EQU   00000000            20 BYTE(S) ON WORD
IFD163   EQU   A00004+00000000     FULLWORD POINTER
IFD164   EQU   A00004+00000004     FULLWORD POINTER
IFD168   EQU   A00004+00000008     FULLWORD POINTER
IFD137   EQU   A00004+00000012     FULLWORD POINTER
IFD140   EQU   A00004+00000016     FULLWORD POINTER
ERRMSG   EQU   00000000            47 BYTE(S)
A00005   EQU   ERRMSG+00000000     4 BYTE(S)
A00006   EQU   ERRMSG+00000004     14 BYTE(S)
MSGCSW   EQU   ERRMSG+00000018     14 BYTE(S)
A00007   EQU   ERRMSG+00000032     5 BYTE(S)
MSGSNS   EQU   ERRMSG+00000037     12 BYTE(S)
LINKMSG  EQU   00000000            68 BYTE(S)
A00008   EQU   LINKMSG+00000000    40 BYTE(S)
LINKTEXT EQU   LINKMSG+00000040    32 BYTE(S)
MSGTEXT  EQU   @DATA+00000084      106 BYTE(S)
NOUCBTXT EQU   *                   23 BYTE(S)
         DC    C'NO UCB SYSGEND FOR 2955'
NAVAILTX EQU   *                   28 BYTE(S)
         DC    C'2955 CU NOT FREE FOR TESTING'
TOUTTXT  EQU   *                   31 BYTE(S)
         DC    C'INITIAL REMOTE RESPONSE TIMEOUT'
RIWTOTXT EQU   *                   28 BYTE(S)
         DC    C'TIMEOUT ON READ INITIAL WAIT'
EQMPTTXT EQU   *                   24 BYTE(S)
         DC    C'HARDWARE/INTERFACE ERROR'
MSG140   EQU   00000000            20 BYTE(S)
A00009   EQU   MSG140+00000000     12 BYTE(S)
MSG140DV EQU   MSG140+00000012     8 BYTE(S)
INBUF    EQU   @DATA+00000218      18 BYTE(S)
SNSIN    EQU   INBUF+00000000      4 BYTE(S)
CSWIN    EQU   INBUF+00000004      14 BYTE(S)
OUTBUFR  EQU   @DATA+00000236      9 BYTE(S)
SNSOUT   EQU   OUTBUFR+00000000    2 BYTE(S)
CSWOUT   EQU   OUTBUFR+00000002    7 BYTE(S)
         ORG   @DATA+00000248
TIME2    EQU   *                   8 BYTE(S) ON DWORD
         DC    X'F0F0F1F0F0F0F0C0'
UCB2955  EQU   00000000            16 BYTE(S)
A00010   EQU   UCB2955+00000000    4 BYTE(S)
UCBDEVAD EQU   UCB2955+00000004    2 BYTE(S)
UCBCHNAD EQU   UCB2955+00000004    1 BYTE(S)
UCBUADR  EQU   UCB2955+00000005    1 BYTE(S)
A00011   EQU   UCB2955+00000006    7 BYTE(S)
UCBNAME  EQU   UCB2955+00000013    3 BYTE(S)
ONEDEV   EQU   *                   FULLWORD INTEGER
         DC    XL4'00000001'
DEVTAB54 EQU   *                   36*1 BYTE(S)
         DC    00036X'00'
A00012   EQU   DEVTAB54+00000000   8 BYTE(S)
DEVUCB   EQU   DEVTAB54+00000008   4  BYTE  POINTER
DEVFLGS  EQU   DEVTAB54+00000012   4 BYTE(S)
A00013   EQU   DEVTAB54+00000012   2 BYTE(S)
FLAG3    EQU   DEVTAB54+00000014   1 BYTE(S)
A00014   EQU   DEVTAB54+00000014   7 BIT(S)
PSEUDODV EQU   DEVTAB54+00000014   1 BIT(S)
FLAG4    EQU   DEVTAB54+00000015   1 BYTE(S)
A00015   EQU   DEVTAB54+00000015   4 BIT(S)
DEVVAR   EQU   DEVTAB54+00000015   1 BIT(S)
A00016   EQU   DEVTAB54+00000016   16 BYTE(S)
CDSDEVAD EQU   DEVTAB54+00000032   4 BYTE(S)
A00017   EQU   DEVTAB54+00000032   2 BYTE(S)
DEVADDR  EQU   DEVTAB54+00000034   2 BYTE(S)
CHANADR  EQU   DEVTAB54+00000034   1 BYTE(S)
         ORG   @DATA+00000332
CVTADPTR EQU   *                   FULLWORD POINTER
         DC    AL4(16)
CVTADDR  EQU   00000000            FULLWORD POINTER
CVT      EQU   00000000            332 BYTE(S) ON WORD
A00018   EQU   CVT+00000000        40 BYTE(S)
CVTILK2  EQU   CVT+00000040        FULLWORD POINTER
A00019   EQU   CVT+00000044        284 BYTE(S)
CVTEXT2  EQU   CVT+00000328        FULLWORD POINTER
CVTOLTEP EQU   00000028            FULLWORD POINTER
OLTEPTAB EQU   00000000            24 BYTE(S)
DIEHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)
REIDEBAD EQU   OLTEPTAB+00000004   4  BYTE  POINTER
A00020   EQU   OLTEPTAB+00000008   20 BYTE(S)
OLTEPUCB EQU   OLTEPTAB+00000028   4  BYTE  POINTER
REIUCBAD EQU   OLTEPTAB+00000032   4  BYTE  POINTER
A00021   EQU   OLTEPTAB+00000036   4 BYTE(S)
IOSGENTB EQU   OLTEPTAB+00000040   18*4  BYTE  INTEGER
REIDEB   EQU   @DATA+00000336      48 BYTE(S) ON WORD
A00022   EQU   *                   4*1 BYTE(S)
         DC    00004X'00'
NXTDEBAD EQU   REIDEB+00000004     FULLWORD POINTER
         ORG   REIDEB+00000008
A00023   EQU   *                   8*1 BYTE(S)
         DC    00008X'00'
NEXTS    EQU   *                   1 BYTE(S)
         DC    X'00'
A00024   EQU   *                   7*1 BYTE(S)
         DC    00007X'00'
DEBID    EQU   *                   1 BYTE(S)
         DC    X'0F'
DEBDCBAD EQU   REIDEB+00000025     3  BYTE  POINTER ON WORD+1
         ORG   REIDEB+00000028
RDEB28C  EQU   *                   1 BYTE(S)
         DC    X'02'
RDEB28   EQU   REIDEB+00000029     3  BYTE  POINTER ON WORD+1
RUCBAD   EQU   REIDEB+00000032     FULLWORD POINTER
         ORG   REIDEB+00000036
A00025   EQU   *                   12*1 BYTE(S)
         DC    00012X'00'
REIDCB   EQU   00000000            72 BYTE(S)
A00026   EQU   REIDCB+00000000     18*4  BYTE  INTEGER
A00027   EQU   REIDCB+00000000     44 BYTE(S)
RDCB44   EQU   REIDCB+00000044     4  BYTE  POINTER
RDCB44C  EQU   REIDCB+00000044     1 BYTE(S)
ADRTABLE EQU   REIDCB+00000072     5*4  BYTE  INTEGER
IOB      EQU   00000000            40 BYTE(S)
IOB1     EQU   IOB+00000000        32 BYTE(S)
FLAGS    EQU   IOB+00000000        8 BIT(S)
DCH      EQU   IOB+00000000        1 BIT(S)
CCH      EQU   IOB+00000000        1 BIT(S)
A00028   EQU   IOB+00000000        6 BIT(S)
A00029   EQU   IOB+00000001        1 BYTE(S)
SENSE    EQU   IOB+00000002        2 BYTE(S)
ECBC     EQU   IOB+00000004        8 BIT(S)
ECBA     EQU   IOB+00000005        3  BYTE  POINTER
A00030   EQU   IOB+00000008        1 BYTE(S)
CSW      EQU   IOB+00000009        7 BYTE(S)
A00031   EQU   IOB+00000016        8 BIT(S)
CPA      EQU   IOB+00000017        3  BYTE  POINTER
A00032   EQU   IOB+00000020        8 BIT(S)
DCBA     EQU   IOB+00000021        3  BYTE  POINTER
A00033   EQU   IOB+00000024        4*4  BYTE  INTEGER
ENECB    EQU   @DATA+00000384      4 BYTE(S) ON WORD
ENCODE   EQU   ENECB+00000000      1 BYTE(S)
A00041   EQU   ENECB+00000001      1 BYTE(S)
A00042   EQU   ENECB+00000002      1 BYTE(S)
A00043   EQU   ENECB+00000002      7 BIT(S)
SELFPOST EQU   ENECB+00000002      1 BIT(S)
A00044   EQU   ENECB+00000003      1 BYTE(S)
REIBUF   EQU   00000000            80 BYTE(S)
TALKBUF  EQU   00000000            72 BYTE(S)
IFD164I  EQU   @DATA+00000388      FULLWORD INTEGER
@SAV002  EQU   @DATA+00000392      72 BYTE(S) ON WORD
         ORG   @DATA
         DS    00000464C
@TEMPS   DS    0F
@TEMP4   DC    F'0'
CCWENABL CCW   39,0,96,1
CCWPREP  CCW   6,0,96,1
CCWREADD CCW   2,0,32,78
CCWWRPOS CCW   1,0,96,1                                        X02008
CCWRDEOT CCW   2,0,32,1                                        X02008
         SPACE
CNVRT    DC    B'00000000'
         DC    AL1(2)
         DC    CL2'41'
         DC    A(OUTBUFR)
         DC    A(INBUF)
         DC    AL2(9+32768)
RACINIT  IFDCOM
READCP   EQU   CCWREADD+00000000   8 BYTE(S)
OP       EQU   READCP+00000000     8 BIT(S)
BUFADR   EQU   READCP+00000001     3  BYTE  POINTER
FLG      EQU   READCP+00000004     8 BIT(S)
A00000   EQU   READCP+00000005     8 BIT(S)
BYTECNT  EQU   READCP+00000006     16 BIT(S)
WRPOS    EQU   CCWWRPOS+00000000   8 BYTE(S)
OP1      EQU   WRPOS+00000000      8 BIT(S)
BUFADR1  EQU   WRPOS+00000001      3  BYTE  POINTER
FLG1     EQU   WRPOS+00000004      8 BIT(S)
A00001   EQU   WRPOS+00000005      8 BIT(S)
BYTECNT1 EQU   WRPOS+00000006      16 BIT(S)
RDEOT    EQU   CCWRDEOT+00000000   8 BYTE(S)
OP2      EQU   RDEOT+00000000      8 BIT(S)
BUFADR2  EQU   RDEOT+00000001      3  BYTE  POINTER
FLG2     EQU   RDEOT+00000004      8 BIT(S)
A00002   EQU   RDEOT+00000005      8 BIT(S)
BYTECNT2 EQU   RDEOT+00000006      16 BIT(S)
ROPTMIN2 EQU   ROPT-00000002       2 BYTE(S)
SVCPLIST EQU   ROPT+00000000       12 BYTE(S) ON WORD
ROPT0    EQU   SVCPLIST+00000000   FULLWORD POINTER
ROPT4    EQU   SVCPLIST+00000004   FULLWORD POINTER
ROPT8    EQU   SVCPLIST+00000008   FULLWORD POINTER
A00034   EQU   CESWTR+00000000     1 BYTE(S) ON WORD
RETAINAC EQU   A00034+00000000     1 BIT(S)
REMERR   EQU   A00034+00000000     1 BIT(S)
REMNOMSG EQU   A00034+00000000     1 BIT(S)
A00035   EQU   A00034+00000000     5 BIT(S)
A00036   EQU   CHASCT+00000000     40 BYTE(S) ON WORD
A00037   EQU   A00036+00000000     9*FULLWORD INTEGER
A00038   EQU   A00036+00000036     FULLWORD INTEGER
A00039   EQU   A00036+00000036     2 BIT(S)
RETSWT   EQU   A00036+00000036     1 BIT(S)
A00040   EQU   A00036+00000036     29 BIT(S)
RECB     EQU   REIECB+00000000     FULLWORD INTEGER
@DATEND  EQU   *
         END   IFDOLT54
