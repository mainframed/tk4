         TITLE '     IFDOLT13--CECOM  WTO/R INTERFACE.'
         TITLE '        IFDOLT13--CECOM  WTO/R INTERFACE.'
         LCLA  &T,&SPN                                            0002
.@001    ANOP                                                     0002
IFDOLT13 CSECT ,                                                  0002
         BC    15,24(0,@F)
         DC    C'IFDOLT13 14 SEP 73'                             0002
         ST    @E,12(0,@D)                                        0002
         STM   @0,@C,20(@D)                                       0002
         BALR  @B,0                                               0002
@PSTART  DS    0H                                                 0002
         USING @PSTART+00000,@B                                   0002
         ST    @D,@SAV001+4                                       0002
         LA    @F,@SAV001                                         0002
         ST    @F,8(0,@D)                                         0002
         LR    @D,@F                                              0002
*         GEN   (USING CHASCT,2);
         USING CHASCT,2
         DS    0H
*         GENERATE DATA;
*         RESTRICT(2,5);                 /* REGISTERS USED BY PROGRAM *
*         DCL R0 REG(0) PTR;
*         DCL R1 REG(1) PTR;             /* ADDRESS OF PARAMETER LIST *
*         DCL R5 REG(5) PTR;             /* ADDRESS OF IN MSG.        *
*         DCL R14 REG(14) PTR;           /* RETURN REGISTER           *
*         DCL R15 REG(15) PTR;           /* RETURN CODE REGISTER      *
*   GEN(EJECT);
         EJECT
         DS    0H
*         /************************************************************
*         /* THE FOLLOWING MAP DESCRIBES THE PARAMETER LIST PASSED    *
*         /* TO IFDOLT13. REGISTER 1 WILL CONTAIN THE LIST ADDRESS.   *
*         /************************************************************
*         DECLARE
*             1 * BASED(R1),
*               2 OUTMSGAD PTR,          /* ADDRESS OF OUT MESSAGE    *
*               2 OUTCNTAD PTR,          /* ADDRESS OF OUT MESSAGE    *
*                                        /* COUNT                     *
*               2 INMSGAD PTR,           /* ADDRESS OF IN MESSAGE     *
*               2 INCNTAD PTR;           /* ADDRESS OF IN MESSAGE     *
*                                        /* COUNT                     *
*   GEN(EJECT);
         EJECT
         DS    0H
*         /************************************************************
*         /* THE FOLLOWING MAPS DESCRIBE THE AREAS USED DURING THE    *
*         /* PROCESSING OF MESSAGES.                                  *
*         /************************************************************
*         DCL OUTCNT CHAR(1) BASED(OUTCNTAD);    /* OUT MESSAGE COUNT *
*         DCL INCNT CHAR(1) BASED(INCNTAD);      /* IN MESSAGE COUNT  *
*         DCL OUTMSG CHAR(61) BASED(OUTMSGAD);   /* OUT MESSAGE       *
*         DCL INBUFR CHAR(72) GENERATED; /* WTOR REPLY BUFFER         *
*         DCL ECB13 FIXED INIT(0);       /* ECB USED BY WTOR AND WAIT *
*         DCL IFDMSG13 EXT ENTRY;       /* IFDOLT13'S MESSAGE MODULE  *
*         DCL MSGMOD13 PTR INIT(ADDR(IFDMSG13));       /* ADDRESS OF  *
*                                                      /* IFDMSG13    *
*  /* THE FOLLOWING BITS ARE OLTEP'S ROUTING & DESCRIPTOR CODES       *
*         DCL ROUTCD BIT(32) INIT('00000010000000000000000001000000'B);
*   GEN(EJECT);
         EJECT
         DS    0H
*         /************************************************************
*         /* THE FOLLOWING MAP DESCRIBES THE POINTERS TO THE LIST     *
*         /* FORM OF MESSAGES IN MODULE IFDMSG13.                     *
*         /************************************************************
*         DECLARE
*             1 * BASED(MSGMOD13),
*               2 WTOPTR PTR,            /* ADDRESS OF WTO IFD100I    *
*               2 WTORPTR PTR;           /* ADDRESS OF WTOR IFD101D   *
*   GEN(EJECT);
         EJECT
         DS    0H
*         /************************************************************
*         /* THE FOLLOWING MAP DESCRIBES THE AREAS CONTAINED WITHIN   *
*         /* THE LIST FORM OF THE MESSAGES IN MODULE IFDMSG13.        *
*         /************************************************************
*         DECLARE
*             1 * BASED(WTOPTR),         /* LIST FORM OF WTO          *
*               2 WTOLEN PTR(15),        /* MESSAGE LENGTH            *
*               2 * CHAR(10),            /* MESSAGE ID                *
*               2 MSAGE CHAR(63);        /* MESSAGE AREA              *
*         DECLARE
*             1 * BASED(WTORPTR),        /* LIST FORM OF WTOR         *
*               2 REPLYCNT CHAR(1),      /* WTOR REPLY COUNT          *
*               2 INBUFRAD PTR(24),      /* ADDRESS OF REPLY BUFFER   *
*               2 ECB13ADR PTR,          /* ADDRESS OF WTOR ECB       *
*               2 WTORLEN PTR(15),       /* MESSAGE LENGTH            *
*               2 * CHAR(10),            /* MESSAGE ID                *
*               2 WRMSAGE CHAR(63);      /* WTOR MESSAGE AREA         *
*         DCL OLTBUF CHAR(61) BASED(R5);         /* OLT REPLY BUFFER  *
*         DCL OUTCNT13 CHAR(1);          /* THE OUT MESSAGE LENGTH    *
*         DCL INCNT13 CHAR(1);           /* THE IN MESSAGE LENGTH     *
*   GEN(EJECT);
         EJECT
         DS    0H
*         /************************************************************
*         /* THE FOLLOWING CODE WILL PERFORM THE FUNCTIONS PROVIDED   *
*         /* BY CECOM (IFDOLT13).                                     *
*         /************************************************************
*         IF OUTCNT = '00'X THEN        /* IF COUNT IS ZERO           *
         L     @3,4(0,@1)          
         CLI   0(@3),X'00'                                        0031
         BC    07,@9FF                                            0031
*           DO;                         /* DO THE FOLLOWING:          *
*           OUTCNT13 = '01'X;           /* SET COUNT TO 1             *
         MVI   OUTCNT13,X'01'                                     0033
*           GO TO CHKWTOR;              /* BRANCH TO WTOR CHECK       *
         BC    15,CHKWTOR                                         0034
*           END;                        /* END OUT COUNT TEST         *
*         IF OUTCNT > '3D'X THEN         /* SET LIMIT ON LENGTH OF    *
@9FF     L     @3,4(0,@1)          
         CLI   0(@3),X'3D'                                        0036
         BC    12,@9FE                                            0036
*           OUTCNT13 = '3D'X;            /* OUT MESSAGE TO 61         *
         MVI   OUTCNT13,X'3D'                                     0037
         BC    15,@9FD                                            0038
*         ELSE                           /* HONOR ALL REQUESTS THAT   *
*           OUTCNT13 = OUTCNT;           /* ARE LESS THAN 61          *
@9FE     MVC   OUTCNT13(1),0(@3)                                  0038
* CHKWTOR:
*         IF R0 = '000001E6'X THEN       /* IF TWO-WAY COMMUNICATIONS *
@9FD     EQU   *                                                  0039
CHKWTOR  C     @0,@X4                                             0039
*           GO TO SETWTO;                /* IS NOT REQUESTED BRANCH   *
         BC    08,SETWTO                                          0040
*                                        /* TO SETUP FOR ONE-WAY      *
*                                        /* COMMUNICATIONS.           *
*         ELSE                           /* ELSE-SETUP FOR TWO-WAY    *
*           DO;                          /* COMMUNICATIONS.           *
*         R5 = INMSGAD;                  /* SET REG 5 TO OLTBUF ADDR  *
         L     @5,8(0,@1)                                         0042
*           IF INCNT = '00'X THEN       /* IF REPLY COUNT IS ZERO     *
         L     @3,12(0,@1)         
         CLI   0(@3),X'00'                                        0043
         BC    07,@9FC                                            0043
*             DO;                       /* DO THE FOLLOWING:          *
*             INCNT13 = '01'X;          /* SET CECOM IN COUNT TO 1    *
         MVI   INCNT13,X'01'                                      0045
*             REPLYCNT = '01'X;         /* SET WTOR REPLY COUNT TO 1  *
         L     @4,MSGMOD13                                        0046
         L     @4,4(0,@4)          A00001                         0046
         MVI   0(@4),X'01'                                        0046
*             GO TO SETUP;              /* BRANCH TO SETUP            *
         BC    15,SETUP                                           0047
*             END;                      /* END OF COUNT ZERO CHECK    *
*           IF INCNT > '3D'X THEN        /* SET LIMIT OF REPLY LENGTH *
@9FC     L     @3,12(0,@1)         
         CLI   0(@3),X'3D'                                        0049
         BC    12,@9FB                                            0049
*             DO;                        /* TO 61                     *
*             REPLYCNT = '3D'X;          /* SET REPLY LENGTH IN WTOR  *
         L     @4,MSGMOD13                                        0051
         L     @4,4(0,@4)          A00001                         0051
         MVI   0(@4),X'3D'                                        0051
*                                        /* PARAMETER LIST            *
*             INCNT13 = '3D'X;           /* RECORD LENGTH IN CECOM.   *
         MVI   INCNT13,X'3D'                                      0052
         BC    15,@9FA                                            0054
*             END;
*           ELSE                         /* ELSE- SET REPLY LENGTH IN *
*             DO;                        /* WTOR PARAMETER LIST TO    *
*             INCNT13 = INCNT;           /* REQUESTED LENGTH, AND     *
@9FB     L     @3,12(0,@1)         
         MVC   INCNT13(1),0(@3)                                   0055
*             REPLYCNT = INCNT;          /* RECORD LENGTH IN CECOM.   *
         L     @4,MSGMOD13                                        0056
         L     @4,4(0,@4)          A00001                         0056
         MVC   0(1,@4),0(@3)                                      0056
*             END;
*           END;
@9FA     EQU   *                                                  0058
* SETUP:
*         ECB13ADR = ADDR(ECB13);        /* SET WTOR PARAMETER LIST   *
SETUP    LA    @F,ECB13                                           0059
         L     @3,MSGMOD13                                        0059
         L     @3,4(0,@3)          A00001                         0059
         ST    @F,4(0,@3)                                         0059
*                                        /* ECB ADDRESS               *
*         INBUFRAD = ADDR(INBUFR);       /* SET WTOR PARAMETER LIST   *
         LA    @F,INBUFR                                          0060
         ST    @F,@TEMP4                                          0060
         MVC   1(3,@3),@TEMP4+1                                   0060
*                                        /* REPLY BUFFER ADDRESS      *
*         WRMSAGE(1:OUTCNT13) = OUTMSG(1:OUTCNT13);     /* MOVE WTOR  *
         L     @4,0(0,@1)          
         LR    @E,@4                                              0061
         SR    @C,@C                                              0061
         IC    @C,OUTCNT13                                        0061
         BCTR  @C,0                                               0061
         LA    @A,20(0,@3)                                        0061
         EX    @C,@MVC                                            0061
*                                        /* MESSAGE INTO WTOR LIST    *
*         WRMSAGE(OUTCNT13+1:OUTCNT13+5)=ROUTCD; /* SET ROUT & DESC   *
         LA    @E,ROUTCD                                          0062
         LA    @C,5                                               0062
         SR    @0,@0                                              0062
         IC    @0,OUTCNT13                                        0062
         AR    @C,@0                                              0062
         LA    @8,1                                               0062
         IC    @0,OUTCNT13                                        0062
         AR    @8,@0                                              0062
         SR    @C,@8                                              0062
         LA    @A,19(@8,@3)                                       0062
         EX    @C,@MVC                                            0062
*         WTORLEN = OUTCNT13 + 12;       /* SET WTOR OUT MESSAGE LEN. *
         LA    @F,12                                              0063
         IC    @0,OUTCNT13                                        0063
         AR    @F,@0                                              0063
         STH   @F,8(0,@3)                                         0063
*         INBUFR = INBUFR && INBUFR;     /* SET REPLY BUFFER TO ZERO  *
         XC    INBUFR(72),INBUFR                                  0064
*         ECB13 = 0 ;                    /* SET ECB TO ZERO           *
         SR    @F,@F                                              0065
         ST    @F,ECB13                                           0065
*         R1 = WTORPTR;                  /* SET REG.1 TO ADDRESS OF   *
         L     @9,MSGMOD13                                        0066
         L     @1,4(0,@9)                                         0066
*                                        /* WTOR                      *
*   GEN(  PWTOR REG=(1),WAIT=YES); /* INVOKE PARALLEL PRINT ROUTINE   *
           PWTOR REG=(1),WAIT=YES
         DS    0H
*         OLTBUF(1:INCNT13) = INBUFR(1:INCNT13);   /* MOVE REPLY TO   *
         LA    @E,INBUFR                                          0068
         SR    @4,@4                                              0068
         IC    @4,INCNT13                                         0068
         BCTR  @4,0                                               0068
         LR    @A,@5                                              0068
         EX    @4,@MVC                                            0068
*                                                  /* OLT AREA        *
*         GO TO FINISH;                  /* BRANCH TO END ROUTINE     *
         BC    15,FINISH                                          0069
*   GEN(EJECT);
         EJECT
         DS    0H
*         /************************************************************
*         /* THE FOLLOWING CODE WILL PROVIDE ONE-WAY COMMUNICATION.   *
*         /************************************************************
* SETWTO:
*         WTOLEN = OUTCNT13 + 12 ;       /* SET OUT MESSAGE LENGTH IN *
SETWTO   LA    @F,12                                              0071
         SR    @0,@0                                              0071
         IC    @0,OUTCNT13                                        0071
         AR    @F,@0                                              0071
         L     @3,MSGMOD13                                        0071
         L     @3,0(0,@3)          A00001                         0071
         STH   @F,0(0,@3)                                         0071
*                                        /* WTO PARAMETER LIST        *
*         MSAGE(1:OUTCNT13) = OUTMSG(1:OUTCNT13);  /* MOVE OUT MESSAGE*
         L     @4,0(0,@1)          
         LR    @E,@4                                              0072
         SR    @C,@C                                              0072
         IC    @C,OUTCNT13                                        0072
         BCTR  @C,0                                               0072
         LA    @A,12(0,@3)                                        0072
         EX    @C,@MVC                                            0072
*                                        /* INTO WTO PARAMETER LIST   *
*           MSAGE(OUTCNT13+1:OUTCNT13+5)=ROUTCD; /* SET ROUT & DESC   *
         LA    @E,ROUTCD                                          0073
         LA    @C,5                                               0073
         IC    @0,OUTCNT13                                        0073
         AR    @C,@0                                              0073
         LA    @8,1                                               0073
         IC    @0,OUTCNT13                                        0073
         AR    @8,@0                                              0073
         SR    @C,@8                                              0073
         LA    @A,11(@8,@3)                                       0073
         EX    @C,@MVC                                            0073
*         R1 = WTOPTR;                   /* SET REG.1 TO WTO ADDRESS  *
         L     @9,MSGMOD13                                        0074
         L     @1,0(0,@9)                                         0074
*   GEN(  PWTO  REG=(1));           /* INVOKE PARALLEL PRINT ROUTINE  *
           PWTO  REG=(1)
         DS    0H
* FINISH:                                /* END ROUTINE               *
*         R15 = '00'X;                   /* SET REG.15 TO ZERO        *
FINISH   LA    @F,X'00'                                           0076
*         RETURN;                        /* RETURN TO CALLER          *
*         END   IFDOLT13;                /* END OF IFDOLT13 MODULE    *
@EL01    L     @D,4(0,@D)                                         0078
         L     @E,12(0,@D)                                        0078
         LM    @0,@C,20(@D)                                       0078
         BCR   15,@E                                              0078
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@MVC     MVC   0(1,@A),0(@E)
         DS    0F
@X4      DC    X'000001E6'
         DS    0D
@DATA    EQU   *
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD
X        EQU   00000000            FULLWORD INTEGER
R0       EQU   00000000            FULLWORD POINTER REGISTER
R1       EQU   00000001            FULLWORD POINTER REGISTER
R5       EQU   00000005            FULLWORD POINTER REGISTER
R14      EQU   00000014            FULLWORD POINTER REGISTER
R15      EQU   00000015            FULLWORD POINTER REGISTER
A00000   EQU   00000000            16 BYTE(S) ON WORD
OUTMSGAD EQU   A00000+00000000     FULLWORD POINTER
OUTCNTAD EQU   A00000+00000004     FULLWORD POINTER
INMSGAD  EQU   A00000+00000008     FULLWORD POINTER
INCNTAD  EQU   A00000+00000012     FULLWORD POINTER
OUTCNT   EQU   00000000            1 BYTE(S)
INCNT    EQU   00000000            1 BYTE(S)
OUTMSG   EQU   00000000            61 BYTE(S)
         ORG   @DATA+00000072
ECB13    EQU   *                   FULLWORD INTEGER
         DC    FL4'0'
MSGMOD13 EQU   *                   FULLWORD POINTER
         DC    VL4(IFDMSG13)
ROUTCD   EQU   *                   32 BIT(S) ON BYTE
         DC    B'00000010000000000000000001000000'
A00001   EQU   00000000            8 BYTE(S) ON WORD
WTOPTR   EQU   A00001+00000000     FULLWORD POINTER
WTORPTR  EQU   A00001+00000004     FULLWORD POINTER
A00002   EQU   00000000            75 BYTE(S) ON WORD
WTOLEN   EQU   A00002+00000000     HALFWORD POINTER
A00003   EQU   A00002+00000002     10 BYTE(S)
MSAGE    EQU   A00002+00000012     63 BYTE(S)
A00004   EQU   00000000            83 BYTE(S) ON WORD
REPLYCNT EQU   A00004+00000000     1 BYTE(S)
INBUFRAD EQU   A00004+00000001     3  BYTE  POINTER ON WORD+1
ECB13ADR EQU   A00004+00000004     FULLWORD POINTER
WTORLEN  EQU   A00004+00000008     HALFWORD POINTER
A00005   EQU   A00004+00000010     10 BYTE(S)
WRMSAGE  EQU   A00004+00000020     63 BYTE(S)
OLTBUF   EQU   00000000            61 BYTE(S)
OUTCNT13 EQU   @DATA+00000084      1 BYTE(S)
INCNT13  EQU   @DATA+00000085      1 BYTE(S)
         ORG   @DATA
         DS    00000086C
@TEMPS   DS    0F
@TEMP4   DC    F'0'
DSECT13  IFDCOM
@DATEND  EQU   *
         END   IFDOLT13
