         TITLE 'IFDOLT21 GRAB MODULE'
         TITLE 'IFDOLT21 GRAB MODULE'
         MACRO
&NAME    GRAB  &CTRL=,&CLASS=,&TYPE=,&CDSADR=,&MAP=NO,&LSTNAME=,&MF=
.*
         GBLB  &EXECUTV,&E536454
         LCLA  &FLAGS,&COUNT,&A
         LCLC  &C,&T,&F,&Z,&CHAR
.*
         AIF   ('&MAP' EQ 'YES').MAP1
         AGO   .EXIT
.MAP1    ANOP
GRABMAP  DSECT
&Z       SETC  '$'
         AIF   (&E536454).ZIPPER
           DC  XL1'0' .            CONTROL PROGRAM FLAGS
           DC  XL1'0' .            MACRO LEVEL
           DC  XL2'0' .            MACRO ID
         AGO   .ZIPPED
.ZIPPER  ANOP
&Z.GRBTRMG DC  XL1'0' .            CONTROL PROGRAM FLAGS
&Z.GRBLEVL DC  XL1'0' .            MACRO LEVEL
&Z.GRBIDNT DC  XL2'0' .            MACRO ID
.ZIPPED  ANOP
&Z.GRABCDS DC  A(0) .              ADDRESS OF AREA TO RECEIVE CDS INFO
&Z.GRABFLG DC  XL1'0' .            FLAGS
&Z.GRABCLS DC  XL1'0' .            CLASS
&Z.GRABTYP DC  XL1'0' .            TYPE
&Z.GRABCNT DC  XL1'0' .            # OF CDS BYTES.
.EXIT    MEND
         EJECT
         LCLA  &T,&SPN                                            0003
.@001    ANOP                                                     0003
IFDOLT21 CSECT ,                                                  0003
         BC    15,24(0,@F)
         DC    C'IFDOLT21 29 MAR 74'                             0003
         ST    @E,12(0,@D)                                        0003
         STM   @0,@C,20(@D)                                       0003
         BALR  @B,0                                               0003
@PSTART  DS    0H                                                 0003
         USING @PSTART+00000,@B                                   0003
         ST    @D,@SAV001+4                                       0003
         LA    @F,@SAV001                                         0003
         ST    @F,8(0,@D)                                         0003
         LR    @D,@F                                              0003
         USING GRABMAP,1
         USING CHASCT,2
         DS    0H
*  GRBCTL='1'B;                          /* GRAB ACTIVE          M4506*
         OI    A00008,B'00010000'                                 0059
*         GRAB10=ADDR(GRAB10A);          /* ADDRESS IN PROGRAM   M4506*
         LA    @9,GRAB10A                                         0060
*         DUMMYCTR=UNICTR;          /* FIND NUMBER OF DEVICES */
         MVC   UNITCTR+3(1),UNICTR                                0061
*                                   /* IN DEVTABLE.           */
*         R4=PRIDVPTR;              /* GET PRIMARY DEVICE POINTER. */
         L     @4,PRIDVPTR                                        0062
*         IF MACROLVL^='02'X×       /* FACILITY DOES NOT EXIST IN */
*             CDSPTR=0×                                        /*21051*
*               NDR='1'B THEN       /* THIS OPERATING ENVIRONMENT */
         CLI   MACROLVL,X'02'                                     0063
         BC    07,@9FF                                            0063
         SR    @F,@F                                              0063
         C     @F,CDSPTR                                          0063
         BC    08,@9FE                                            0063
         TM    OLTEPSW2,B'00000100'                               0063
         BC    12,@9FD                                            0063
*           DO;                     /* RETURN TO CALLER WITH      */
@9FE     EQU   *                                                  0064
*           RC=4;                   /* RETURN CODE 04.            */
@9FF     LA    @F,4                                               0065
*           GO TO GRAB28;
         BC    15,GRAB28                                          0066
*           END;
*         IF UNICTR='01'X THEN      /* ENTRY LIST CONTAINED ONLY */
@9FD     CLI   UNICTR,X'01'                                       0068
         BC    07,@9FC                                            0068
*           DO;                     /* ONE DEVICE. RETURN TO     */
*           RC=12;                  /* CALLER WITH RETURN CODE 0C*/
         LA    @F,12                                              0070
*           GO TO GRAB28;
         BC    15,GRAB28                                          0071
*           END;
*         ENDOFTAB=DEVTBPTR+(UNITCTR-1)*TABLNGTH;  /* ESTABLISH X03008*
@9FC     L     @F,UNITCTR                                         0073
         BCTR  @F,0                                               0073
         MH    @F,TABLNGTH                                        0073
         A     @F,DEVTBPTR                                        0073
         ST    @F,ENDOFTAB                                        0073
*                                                 /* DEVTABLE ADDRESS *
*         IF SECDVPTR=0 THEN        /* IS THIS THE INITIAL GRAB. */
         SR    @F,@F                                              0074
         C     @F,SECDVPTR                                        0074
         BC    07,@9FB                                            0074
*           DO;
*         R5=PRIDVPTR+TABLNGTH;    /* YES, SET POINTER TO ENTRY X03008*
         LH    @5,TABLNGTH                                        0076
         A     @5,PRIDVPTR                                        0076
*           GO TO GRAB01;           /* FOLLOWING PRIMARY ENTRY */
         BC    15,GRAB01                                          0077
*           END;
*         R5=SECDVPTR+TABLNGTH;    /* NO, SET POINTER TO ENTRY  X03008*
@9FB     LH    @5,TABLNGTH                                        0079
         A     @5,SECDVPTR                                        0079
*                                   /* FOLLOWING LAST ACTIVE    */
*                                   /*    SECONDARY ENTRY       */
* GRAB01:
*         /************************************************************
*         /*                START SEARCH FOR DEVICE                   *
*         /************************************************************
*         SEARCHED=0;               /* INITIALIZE SEARCHED COUNTER. */
GRAB01   SR    @3,@3                                              0080
* GRAB02:
*         /************************************************************
*         /*   LOOK AT EACH DEVICE IN DEVTABLE UNTIL DEVICE FOUND     *
*         /************************************************************
*         DO COUNTER=1 TO UNITCTR;
GRAB02   LA    @6,1                                               0081
         BC    15,@DO9F9                                          0081
*           IF R5>ENDOFTAB THEN     /* HAS THE END OF THE TABLE BEEN */
@DO9FA   C     @5,ENDOFTAB                                        0082
         BC    12,@9F6                                            0082
*         R5=DEVTBPTR;              /* REACHED. YES, SEARCH FROM 21051*
         L     @5,DEVTBPTR                                        0083
*                                   /* BEGINNING OF THE DEVTABLE */
*           SEARCHED=SEARCHED+1;    /* INCREMENT SEARCHED COUNTER */
@9F6     LA    @3,1(0,@3)                                         0084
*         IF SOSPRUN='SOSP' THEN
         CLC   SOSPRUN(4),@C4                                     0085
*           GO TO GRAB02A;         /* SOSP UTILITY IS IN SYSTEM  21051*
         BC    08,GRAB02A                                         0086
*           IF GRABBED='1'B ×       /* HAS THE DEVICE ALREADY BEEN  */
*             PRIMARY='1'B THEN     /* GRABBED OR IS IT THE PRIMARY   *
         TM    12(@5),B'00000100'                                 0087
         BC    01,@9F5                                            0087
         TM    12(@5),B'01000000'                                 0087
         BC    12,@9F4                                            0087
*                                                             /*X03008*
*             GO TO GRAB10;         /* DEVICE. YES, UPDATE AND TRY  */
@9F5     BCR   15,@9                                              0088
*                                   /* ANOTHER DEVICE.              */
* GRAB02A:
* GRAB02B:                                                    /*XM0099*
*         IF FLAGS='03'X THEN           /* GRAB FOR NEXT DEVICE XM0099*
@9F4     EQU   *                                                  0089
GRAB02A  EQU   *                                                  0089
GRAB02B  CLI   FLAGS,X'03'                                        0089
*             GO TO GRAB20;         /* DEVICE ON THE LIST. YES, GO */
         BC    08,GRAB20                                          0090
*                                   /* AND DO DATA PROTECTION */
*           IF FLAGS<'03'X THEN     /* IS THE GRAB ACCORDING TO */
         CLI   FLAGS,X'03'                                        0091
*             GO TO GRAB08;         /* CLASS AND OR TYPE ONLY */
         BC    04,GRAB08                                          0092
*                                   /* YES, GO TO CLASS DECODE */
*         /************************************************************
*         /*                                                          *
*         /*                     CHANNEL DECODE                       *
*         /*                                                          *
*         /************************************************************
*           IF CHANCODE='00'B THEN  /* DOES USER CARE ABOUT THE CHAN */
         TM    FLAGS,B'11000000'                                  0093
*             GO TO GRAB04;         /* NO, GO TO CONTROL UNIT DECODE.*/
         BC    08,GRAB04                                          0094
*           IF DCH='1'B THEN        /* IS IT A REQUEST FOR A DIFF.CH.*/
         TM    FLAGS,B'10000000'                                  0095
*             GO TO GRAB03;         /* YES, GET DIFFERENT CHANNEL.*/
         BC    01,GRAB03                                          0096
*           IF PRICHAN=SECCHAN THEN /* NO, FIND DEV.AD WITH SAME CHAN *
         CLC   5(1,@4),5(@5)                                      0097
*             GO TO GRAB04;         /* FOUND, GO LOOK AT CU REQUEST.*/
         BC    08,GRAB04                                          0098
*           GO TO GRAB10;           /* LOOK AT NEXT ENTRY IN DEVTABLE.*
         BCR   15,@9                                              0099
* GRAB03:
*         /************************************************************
*         /*             REQUEST FOR DIFFERENT CHANNEL                *
*         /************************************************************
*           IF PRICHAN=SECCHAN THEN /* IS IT A DIFFERENT CHANNEL.*/
GRAB03   CLC   5(1,@4),5(@5)                                      0100
*             GO TO GRAB10;         /* YES, LOOK AT CU REQUEST. NO, */
         BCR   08,@9                                              0101
*                                   /* LOOK AT NEXT ENTRY IN DEVTABLE *
* GRAB04:
*         /************************************************************
*         /*                                                          *
*         /*                  CONTROL UNIT DECODE                     *
*         /*                                                          *
*         /************************************************************
*           IF CUCODE='00'B THEN    /* DOES USER CARE ABOUT THE CU.*/
GRAB04   TM    FLAGS,B'00110000'                                  0102
*             GO TO GRAB06;         /* NO, GO TO DEVICE DECODE. */
         BC    08,GRAB06                                          0103
*           IF DCU='1'B THEN        /* IS IT A REQUEST FOR A DIFF.CU. *
         TM    FLAGS,B'00100000'                                  0104
*           GO TO GRAB05;           /* YES, GET DIFFERENT CU. */
         BC    01,GRAB05                                          0105
*           IF PRICU=SECCU THEN     /* NO, FIND DEV.AD WITH SAME CU */
         CLC   6(1,@4),6(@5)                                      0106
*             GO TO GRAB06;         /* FOUND, GO LOOK AT DEV REQUEST.*/
         BC    08,GRAB06                                          0107
*           GO TO GRAB10;           /* LOOK AT NEXT ENTRY IN DEVTABLE.*
         BCR   15,@9                                              0108
* GRAB05:
*         /************************************************************
*         /*           REQUEST FOR DIFFERENT CONTROL UNIT             *
*         /************************************************************
*           IF PRICU=SECCU THEN     /* IS IT A DIFFERENT CU. */
GRAB05   CLC   6(1,@4),6(@5)                                      0109
*             GO TO GRAB10;         /* YES, LOOK AT DEVICE REQUEST. NO*
         BCR   08,@9                                              0110
*                                   /* LOOK AT NEXT ENTRY IN DEVTABLE *
* GRAB06:
*         /************************************************************
*         /*                                                          *
*         /*                      DEVICE DECODE                       *
*         /*                                                          *
*         /************************************************************
*           IF DEVCODE='00'B THEN   /* DOES USER CARE ABOUT DEVICE. */
GRAB06   TM    FLAGS,B'00001100'                                  0111
*             GO TO GRAB08;         /* NO, GO TO CLASS DECODE. */
         BC    08,GRAB08                                          0112
*           IF DDV='1'B THEN        /* IS IT A REQUEST FOR A DIFF.DEV.*
         TM    FLAGS,B'00001000'                                  0113
*             GO TO GRAB07;         /* YES, GET DIFFERENT DEVICE. */
         BC    01,GRAB07                                          0114
*           IF PRIDEV=SECDEV THEN   /* NO,FIND DEV.AD WITH SAME DEVICE*
         CLC   7(1,@4),7(@5)                                      0115
*             GO TO GRAB08;         /* FOUND, GO LOOK AT CLASS REQUEST*
         BC    08,GRAB08                                          0116
*           GO TO GRAB10;           /* LOOK AT NEXT ENTRY IN DEVTABLE.*
         BCR   15,@9                                              0117
* GRAB07:
*         /************************************************************
*         /*              REQUEST FOR DIFFERENT DEVICE                *
*         /************************************************************
*           IF PRIDEV=SECDEV THEN   /* IS IT A DIFFERENT DEVICE. */
GRAB07   CLC   7(1,@4),7(@5)                                      0118
*             GO TO GRAB10;         /* YES, LOOK AT CLASS REQUEST. NO,*
         BCR   08,@9                                              0119
*                                   /* LOOK AT NEXT ENTRY IN DEVTABLE *
* GRAB08:
*         /************************************************************
*         /*                                                          *
*         /*                      CLASS DECODE                        *
*         /*                                                          *
*         /************************************************************
*           IF CLAS='1'B THEN       /* IS CLASS APPLICABLE. */
GRAB08   TM    FLAGS,B'00000010'                                  0120
*             GO TO GRAB09;         /* NO, GO TO TYPE DECODE. */
         BC    01,GRAB09                                          0121
*           IF CLASS^=CDSCLASS THEN /* IS IT SAME CLASS AS SPECIFIED.*/
         CLC   CLASS(1),38(@5)                                    0122
*             GO TO GRAB10;         /* NO, LOOK AT NEXT ENTRY */
         BCR   07,@9                                              0123
*                                   /* IN DEVTABLE.           */
* GRAB09:
*         /************************************************************
*         /*                                                          *
*         /*                      TYPE DECODE                         *
*         /*                                                          *
*         /************************************************************
*           IF TYP='1'B THEN        /* IS TYPE APPLICABLE. */
GRAB09   TM    FLAGS,B'00000001'                                  0124
*             GO TO GRAB20;         /* NO, GO TO DATA PROTECTION. */
         BC    01,GRAB20                                          0125
*           IF TYPE=CDSTYPE THEN    /* IS IT SAME TYPE AS SPECIFIED */
         CLC   TYPE(1),39(@5)                                     0126
*             GO TO GRAB20;         /* YES, GO TO DATA PROTECTION. */
         BC    08,GRAB20                                          0127
*  GRAB10A:
*         /************************************************************
*         /*                                                          *
*         /*            UPDATE TO NEXT ENTRY IN DEVTABLE              *
*         /*                                                          *
*         /************************************************************
*         R5=R5+TABLNGTH;           /* UPDATE DEV TAB POINTER   X03008*
GRAB10A  AH    @5,TABLNGTH                                        0128
*           IF SEARCHED=UNITCTR THEN/* HAVE ALL ENTRIES BEEN EXAMINED *
         C     @3,UNITCTR                                         0129
         BC    07,@9F3                                            0129
*             DO;                   /* YES, SET RETURN CODE OF 8 AND  *
*             RC=8;                 /*        RETURN TO CALLER.       *
         LA    @F,8                                               0131
*             GO TO GRAB28;
         BC    15,GRAB28                                          0132
*             END;
*         END;
* GRAB20:
*         /************************************************************
*         /*                                                          *
*         /* CHECK FOR GRAB OF SAME DEVICE DIFFERENT CHANNEL          *
*         /*                                                          *
*         /************************************************************
*         LOOPPTR = DEVTBPTR;       /* POINTER TO START         YM5417*
@9F3     AH    @6,@D1                                             0134
@DO9F9   C     @6,UNITCTR                                         0134
         BC    12,@DO9FA                                          0134
GRAB20   MVC   LOOPPTR(4),DEVTBPTR                                0135
*         SUM = UNICTR;             /* NUMBER OF DEVICES        YM5417*
         MVC   SUM+1(1),UNICTR                                    0136
         MVI   SUM,X'00'                                          0136
*         DO Z=1 TO SUM BY +1;      /* SCAN ALL DEV ENTRIES     YM7636*
         LA    @F,1                                               0137
         BC    15,@DO9F1                                          0137
*           IF SECUCBAD = UCBADRX THEN /*IS UCB SAME            YM5417*
@DO9F2   L     @C,LOOPPTR                                         0138
         MVC   @TEMP4(4),8(@C)                                    0138
         L     @F,@TEMP4                                          0138
         C     @F,8(0,@5)                                         0138
         BC    07,@9EE                                            0138
*             DO;                   /* YES, IS THE DEVICE       YM5417*
*               IF PRIMX='1'B THEN       /* A PRIMARY, GO UPDATEYM7636*
         TM    12(@C),B'01000000'                                 0140
*                 GO TO GRAB10A;         /* DEVTAB PTR-TRY AGAINYM7636*
         BC    01,GRAB10A                                         0141
*               IF GRABEDX='1'B THEN     /* A GRABBED DEVICE    YM7636*
         TM    12(@C),B'00000100'                                 0142
         BC    12,@9ED                                            0142
*                 DO;                    /* YES,                YM7636*
*                 IF SOSPRUN^='SOSP' THEN /* IS THIS SOSP       YM7636*
         CLC   SOSPRUN(4),@C4                                     0144
*                   GO TO GRAB10A;       /* YES, OK. NO, GO     YM7636*
         BC    07,GRAB10A                                         0145
*                                        /* UPDATE PTR AND TRY  YM7636*
*                   END;                 /* AGAIN               YM7636*
*             END;                  /* NO, OK TO GRAB           YM5417*
@9ED     EQU   *                                                  0147
*           LOOPPTR=LOOPPTR+TABLNGTH; /* NO, CHECK NEXT DEVICE  YM5417*
@9EE     LH    @F,TABLNGTH                                        0148
         A     @F,LOOPPTR                                         0148
         ST    @F,LOOPPTR                                         0148
*         END;                      /* END OF SCAN              YM5417*
*         /************************************************************
*         /*                                                          *
*         /*                PERFORM DATA PROTECTION                   *
*         /*                                                          *
*         /************************************************************
*         SAVE=SECDVPTR;            /* SAVE POINTER TO LAST GRABBED   *
         MVC   @TEMP2+2(2),Z                                      0149
         L     @F,@TEMP2                                          0149
         AH    @F,@D1                                             0149
@DO9F1   STH   @F,Z                                               0149
         MVC   @TEMP2+2(2),SUM                                    0149
         C     @F,@TEMP2                                          0149
         BC    12,@DO9F2                                          0149
         MVC   SAVE(4),SECDVPTR                                   0150
*                                   /* DEVICE.                        *
*         SECDVPTR=R5;              /* PUT POINTER TO POSSIBLE        *
         ST    @5,SECDVPTR                                        0151
*                                   /* SECONDARY DEVICE IN SECDVPTR   *
*                                   /* FOR D.P. MODULE.               *
*         IF DPDONE='0'B THEN       /* HAS DATA PROTECTION BEEN DONE  *
         TM    12(@5),B'00100000'                                 0152
         BC    05,@9EC                                            0152
*                                   /* ON THIS DEVICE.                *
*           DO;                     /* NO,                            *
*           PROTECT='1'B;           /* SET FLAG TO INDICATE TO D.P.   *
         OI    OLTEPSW,B'01000000'                                0154
*                                   /* MODULE THAT THIS IS FOR A      *
*                                   /* SECONDARY DEVICE.              *
*           R15=DATPTR;             /* PUT POINTER TO D.P. MODULE IN  *
         L     @F,DATPTR                                          0155
*                                   /* REGISTER 15.                   *
*           GEN(BALR  R14,R15);     /* GO TO DATA PROTECTION.         *
         BALR  R14,R15
         DS    0H
*           PROTECT='0'B;           /* CLEAR TYPE OF PROTECTION FLAG. *
         NI    OLTEPSW,B'10111111'                                0157
*           IF DPDONE='0'B THEN     /* WAS DATA PROTECTION DONE       *
         TM    12(@5),B'00100000'                                 0158
         BC    05,@9EB                                            0158
*                                   /* SUCCESSFULLY.                  *
*             DO;                   /* NO,                            *
*         R5=R5+TABLNGTH;           /* UPDATE DEV TAB POINTER   X03008*
         AH    @5,TABLNGTH                                        0160
*             SECDVPTR=SAVE;        /* RESTORE ADDRESS OF LAST GRABBED*
         MVC   SECDVPTR(4),SAVE                                   0161
*                                   /* DEVICE.                        *
*             GO TO GRAB02;         /* CONTINUE SEARCH.               *
         BC    15,GRAB02                                          0162
*             END;
*           END;
@9EB     EQU   *                                                  0164
*         R7=CDSPTR;                /* GET POINTER TO CDS AREA WITHIN *
@9EC     L     @7,CDSPTR                                          0165
*                                   /* THE OLT.                       *
*         R8=GRABCNT;               /* GET GRAB CNT.                  *
         SR    @8,@8                                              0166
         IC    @8,GRABCNT                                         0166
*         IF CDSDSCRT=0 THEN DO;   /* ARE CDS DEV DSCRPTRS = 0?  21050*
         CLC   36(4,@5),@D2                                       0167
         BC    07,@9EA                                            0167
*         RC='10'X;                /* YES, SET RET CODE AND RETURN21050
         LA    @F,X'10'                                           0169
*           GO TO GRAB27;                                      /*21050*
         BC    15,GRAB27                                          0170
*           END;                                               /*21050*
*         RC=0;
@9EA     SR    @F,@F                                              0172
*         IF GRABCNT<'0C'X &        /* DOES OLT WANT EXT SIG MASK     *
*           EXTSGMSK='1'B THEN      /* BUT SPECIFY SMALL BUFFER,      *
         CLI   GRABCNT,X'0C'                                      0173
         BC    10,@9E9                                            0173
         TM    41(@5),B'00010000'                                 0173
         BC    12,@9E8                                            0173
*           RC='14'X;               /* YES, SET RET CODE  & GO ON     *
         LA    @F,X'14'                                           0174
*         IF GRABCNT<'14'X &        /* DOES OLT WANT SYM NAME BUT     *
*           SYMNMFLG='1'B THEN      /* BUFFER TOO SMALL, YES,         *
@9E8     EQU   *                                                  0175
@9E9     CLI   GRABCNT,X'14'                                      0175
         BC    10,@9E7                                            0175
         TM    41(@5),B'00001000'                                 0175
         BC    12,@9E6                                            0175
*           RC='14'X;               /* GIVE RET CODE & GO ON.         *
         LA    @F,X'14'                                           0176
*         CDSAREA(1:R8)=SECCDS(1:R8); /* LOAD OLT CDS AREA       21050*
@9E6     EQU   *                                                  0177
@9E7     LA    @E,32(0,@5)                                        0177
         LR    @C,@8                                              0177
         BCTR  @C,0                                               0177
         LR    @A,@7                                              0177
         EX    @C,@MVC                                            0177
*         IF FPMODE='1'B THEN       /* IS DEVICE FILE PROTECTED.      *
         TM    12(@5),B'00000010'                                 0178
         BC    12,@9E5                                            0178
*           FILEPRT='1'B;           /* YES, SET FILE PROTECT FLAG ON  *
         OI    9(@7),B'10000000'                                  0179
*                                   /* IN THIS AREA.                  *
*         IF SHARED='1'B THEN       /* IS THIS A SHARED DEVICE.       *
@9E5     L     @C,8(0,@5)          
         TM    17(@C),B'00100000'                                 0180
         BC    12,@9E4                                            0180
*           UNITSHRD='1'B;          /* YES, SET SHARED DEVICE FLAG ON *
         OI    9(@7),B'01000000'                                  0181
*                                   /* IN THIS AREA.                  *
*         IF CEVOLUME='1'B THEN     /* IS THIS A C.E. VOLUME. YES, SET*
@9E4     TM    13(@5),B'00100000'                                 0182
         BC    12,@9E3                                            0182
*           UNITCEVL='1'B;          /* C.E. VOLUME FLAG ON IN THIS    *
         OI    9(@7),B'00100000'                                  0183
*                                   /* AREA.                          *
* GRAB27:
*         /************************************************************
*         /*  SUCCESSFUL COMPLETION, DEVICE DESCRIPTORS NOT AVAILABLE *
*         /************************************************************
*         GRABBED='1'B;             /* SET GRABBED INDICATOR ON */
@9E3     EQU   *                                                  0184
GRAB27   OI    12(@5),B'00000100'                                 0184
*                                   /* IN THIS ENTRY.           */
* GRAB28:
*         /************************************************************
*         /*         RESTORE REGISTERS AND RETURN TO CALLER           *
*         /************************************************************
*  GRBCTL='0'B;                          /* GRAB COMPLETE        M4506*
GRAB28   NI    A00008,B'11101111'                                 0185
*         RETURN;
*         END;
@EL01    L     @D,4(0,@D)                                         0187
         L     @E,12(0,@D)                                        0187
         LM    @0,@C,20(@D)                                       0187
         BCR   15,@E                                              0187
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D2      DC    F'0'
@D1      DC    H'1'
@MVC     MVC   0(1,@A),0(@E)
         DS    0F
@C4      DC    C'SOSP'
         DS    0D
@DATA    EQU   *
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD
PL       EQU   00000001            FULLWORD POINTER REGISTER
R1       EQU   00000001            FULLWORD POINTER REGISTER
R2       EQU   00000002            FULLWORD POINTER REGISTER
R3       EQU   00000003            FULLWORD POINTER REGISTER
SEARCHED EQU   00000003            3  BYTE  POINTER REGISTER
R4       EQU   00000004            FULLWORD POINTER REGISTER
R5       EQU   00000005            FULLWORD POINTER REGISTER
COUNTER  EQU   00000006            3  BYTE  POINTER REGISTER
R7       EQU   00000007            FULLWORD POINTER REGISTER
R8       EQU   00000008            FULLWORD POINTER REGISTER
GRAB10   EQU   00000009            FULLWORD POINTER REGISTER
R14      EQU   00000014            FULLWORD POINTER REGISTER
R15      EQU   00000015            FULLWORD POINTER REGISTER
RC       EQU   00000015            3  BYTE  POINTER REGISTER
CDS      EQU   00000000            256 BYTE(S)
CDSAREA  EQU   00000000            20 BYTE(S) ON WORD
A00000   EQU   CDSAREA+00000000    2 BYTE(S)
UNITADDR EQU   CDSAREA+00000002    2 BYTE(S)
UNITDSCP EQU   CDSAREA+00000004    4 BYTE(S)
CDSLNGTH EQU   CDSAREA+00000008    1 BYTE(S)
UNITFLGS EQU   CDSAREA+00000009    1 BYTE(S)
FILEPRT  EQU   CDSAREA+00000009    1 BIT(S)
UNITSHRD EQU   CDSAREA+00000009    1 BIT(S)
UNITCEVL EQU   CDSAREA+00000009    1 BIT(S)
A00001   EQU   CDSAREA+00000010    2 BYTE(S)
CDSSYMNM EQU   CDSAREA+00000012    8 BYTE(S)
Z        EQU   @DATA+00000072      HALFWORD POINTER
SUM      EQU   @DATA+00000074      HALFWORD POINTER
LOOPPTR  EQU   @DATA+00000076      FULLWORD POINTER
A00002   EQU   00000000            56 BYTE(S)
A00003   EQU   A00002+00000000     8 BYTE(S)
UCBADRX  EQU   A00002+00000008     4  BYTE  POINTER
A00004   EQU   A00002+00000012     1 BYTE(S)
A00005   EQU   A00002+00000012     1 BIT(S)
PRIMX    EQU   A00002+00000012     1 BIT(S)
A00006   EQU   A00002+00000012     3 BIT(S)
GRABEDX  EQU   A00002+00000012     1 BIT(S)
ENDOFTAB EQU   @DATA+00000080      FULLWORD POINTER
PRIDEV1  EQU   00000000            8 BYTE(S) ON WORD
A00012   EQU   PRIDEV1+00000000    8 BYTE(S)
A00013   EQU   PRIDEV1+00000000    5 BYTE(S)
PRICHAN  EQU   PRIDEV1+00000005    1 BYTE(S)
PRICU    EQU   PRIDEV1+00000006    1 BYTE(S)
PRIDEV   EQU   PRIDEV1+00000007    1 BYTE(S)
SECDEV2  EQU   00000000            52 BYTE(S) ON WORD
A00014   EQU   SECDEV2+00000000    8 BYTE(S)
A00015   EQU   SECDEV2+00000000    5 BYTE(S)
SECCHAN  EQU   SECDEV2+00000005    1 BYTE(S)
SECCU    EQU   SECDEV2+00000006    1 BYTE(S)
SECDEV   EQU   SECDEV2+00000007    1 BYTE(S)
SECUCBAD EQU   SECDEV2+00000008    FULLWORD POINTER
FLG1X    EQU   SECDEV2+00000012    1 BYTE(S)
A00016   EQU   SECDEV2+00000012    1 BIT(S)
PRIMARY  EQU   SECDEV2+00000012    1 BIT(S)
DPDONE   EQU   SECDEV2+00000012    1 BIT(S)
A00017   EQU   SECDEV2+00000012    2 BIT(S)
GRABBED  EQU   SECDEV2+00000012    1 BIT(S)
FPMODE   EQU   SECDEV2+00000012    1 BIT(S)
FLG2X    EQU   SECDEV2+00000013    1 BYTE(S)
A00018   EQU   SECDEV2+00000013    1 BIT(S)
A00019   EQU   SECDEV2+00000013    1 BIT(S)
CEVOLUME EQU   SECDEV2+00000013    1 BIT(S)
STDLABL  EQU   SECDEV2+00000013    1 BIT(S)
A00020   EQU   SECDEV2+00000014    18 BYTE(S)
SECCDS   EQU   SECDEV2+00000032    20 BYTE(S)
SECDEVPT EQU   SECDEV2+00000032    4 BYTE(S)
CDSDSCRT EQU   SECDEV2+00000036    4 BYTE(S)
A00021   EQU   SECDEV2+00000036    2 BYTE(S)
CDSCLASS EQU   SECDEV2+00000038    1 BYTE(S)
CDSTYPE  EQU   SECDEV2+00000039    1 BYTE(S)
CDSSIZE  EQU   SECDEV2+00000040    1 BYTE(S)
CDSFLAGS EQU   SECDEV2+00000041    1 BYTE(S)
A00022   EQU   SECDEV2+00000041    3 BIT(S)
EXTSGMSK EQU   SECDEV2+00000041    1 BIT(S)
SYMNMFLG EQU   SECDEV2+00000041    1 BIT(S)
A00023   EQU   SECDEV2+00000041    1 BIT(S)
REMFILE  EQU   SECDEV2+00000041    1 BIT(S)
A00024   EQU   SECDEV2+00000042    2 BYTE(S)
SYMNAME  EQU   SECDEV2+00000044    8 BYTE(S)
UCBDVDSC EQU   00000016            4 BYTE(S)
A00025   EQU   UCBDVDSC+00000000   1 BYTE(S)
FEATURES EQU   UCBDVDSC+00000001   1 BYTE(S)
A00026   EQU   UCBDVDSC+00000001   2 BIT(S)
SHARED   EQU   UCBDVDSC+00000001   1 BIT(S)
         ORG   @DATA+00000084
UNITCTR  EQU   *                   FULLWORD INTEGER
         DC    FL4'0'
A00027   EQU   UNITCTR+00000000    3 BYTE(S)
DUMMYCTR EQU   UNITCTR+00000003    1 BYTE(S)
SAVE     EQU   @DATA+00000088      FULLWORD POINTER
MODNAME  EQU   @DATA+00000092      8 BYTE(S)
         ORG   MODNAME+00000000
TCDS0    EQU   *                   5 BYTE(S)
         DC    C'G0000'
CDSDEV   EQU   MODNAME+00000005    3 BYTE(S)
TABLEADR EQU   @DATA+00000100      FULLWORD POINTER
GRABDEVS EQU   00000000            14 BYTE(S)
A00028   EQU   GRABDEVS+00000000   8 BYTE(S)
COMPUCB  EQU   GRABDEVS+00000008   4  BYTE  POINTER
COMPFLAG EQU   GRABDEVS+00000012   8 BIT(S)
A00029   EQU   GRABDEVS+00000012   5 BIT(S)
A00030   EQU   GRABDEVS+00000012   1 BIT(S)
         ORG   @DATA
         DS    00000104C
@TEMPS   DS    0F
@TEMP2   DC    F'0'
@TEMP4   DC    F'0'
         GLOBAL
GRAB     IFDCOM
         GRAB  MAP=YES
CDSPTR   EQU   $GRABCDS
GRABFLG  EQU   $GRABFLG
CLASS    EQU   $GRABCLS
TYPE     EQU   $GRABTYP
MACROLVL EQU   $GRBLEVL
GRABCNT  EQU   $GRABCNT
SOSPRUN  EQU   SECLST+00000003     4 BYTE(S)
FLAGS    EQU   GRABFLG+00000000    1 BYTE(S)
CHANCODE EQU   FLAGS+00000000      2 BIT(S)
DCH      EQU   FLAGS+00000000      1 BIT(S)
CH       EQU   FLAGS+00000000      1 BIT(S)
CUCODE   EQU   FLAGS+00000000      2 BIT(S)
DCU      EQU   FLAGS+00000000      1 BIT(S)
CU       EQU   FLAGS+00000000      1 BIT(S)
DEVCODE  EQU   FLAGS+00000000      2 BIT(S)
DDV      EQU   FLAGS+00000000      1 BIT(S)
DV       EQU   FLAGS+00000000      1 BIT(S)
CLAS     EQU   FLAGS+00000000      1 BIT(S)
TYP      EQU   FLAGS+00000000      1 BIT(S)
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S)
A00007   EQU   OLTEPSW2+00000000   5 BIT(S)
NDR      EQU   OLTEPSW2+00000000   1 BIT(S)
A00008   EQU   CESWT3+00000000     1 BYTE(S)
A00009   EQU   A00008+00000000     3 BIT(S)
GRBCTL   EQU   A00008+00000000     1 BIT(S)
A00010   EQU   A00008+00000000     1 BIT(S)
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)
A00011   EQU   OLTEPSW+00000000    1 BIT(S)
PROTECT  EQU   OLTEPSW+00000000    1 BIT(S)
@DATEND  EQU   *
         END
