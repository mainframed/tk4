FD35    TITLE '***  IFDOLT35 - OLTEP AR-145 EXIO. BASE MODULE  ***'
IFDOLT35 START
*A000000,999999                                                 @Y02008
*D-392000             VS 2-2 PTM YM08623                       @YM08623
         SPACE 3
***********************************************************************
*                                                                     *
*MODULE NAME: IFDOLT35                                                *
*                                                                     *
*DESCRIPTIVE NAME: OLTEP AR-145 EXIO                                  *
*                                                                     *
*COPYRIGHT: NONE                                                      *
*                                                                     *
*STATUS: RECODED IN BAL FOR OS-VS/2 RELEASE 2 VERSION 0               *
*                                                                     *
*FUNCTION: THIS MODULE RECIEVES CONTROL FROM AN AR-145 LEVEL OLT VIA  *
*   THE OLTEP TRANSIENT MANAGER. UPON ENTRY REGISTER ONE CONTAINS THE *
*   ADDRESS OF A PARAMETER LIST FROM THE OLT. THIS PARAMETER LIST     *
*   CONTAINS POINTERS TO THE DEVICE, THE TECB, THE CCW'S; A COUNT OF  *
*   THE CCW'S; A FLAG BYTE; AND A MACRO CALL LEVEL NUMBER.            *
*      FIRST THE VALIDITY OF THE REQUEST IS CHECKED.                  *
*         1.ALL NECESSARY PARAMETERS PASSED AND VALID.                *
*         2.IS DEVICE IN DEVTAB, EITHER PRIMARY OR SECONDARY, AND NOT *
*          ACTIVE.                                                    *
*      NEXT A CHECK IS MADE FOR A REMOTE DEVICE WHICH REQUIRES LINE   *
*     CONNECTION. IF SO, IFDOLT73 IS GIVEN CONTROL TO PERFORM THIS    *
*     OPERATION. IF IFDOLT73 IS SUCCESSFUL OR NOT REQUIRED THE I/O    *
*     EFFECTOR CONTROL BLOCK, EFCTRCB, IS FILLED WITH THE APPROPRIATE *
*     INFORMATION. IF THE DEVICE IS A DIRECT ACCESS TYPE THE CCW'S ARE*
*     SCANNED FOR VIOLATIONS WHEN THE DEVICE IS FILE PROTECTED OR     *
*     ALLOCATED.                                                      *
*                                                                     *
* I/O EFFECTOR: THE I/O EFFECTOR IS A CLOSED SUBROUTINE RESIDING IN   *
*   THE IFDOLT35 CSECT. IT CAN BE CALLED BY ANY OLTEP MODULE WISHING  *
*   AN I/O EVENT TO BE STARTED. IT IS PASSED ALL NECESSARY PARAMETERS *
*   IN THE I/O EFFECTOR CONTROL BLOCK, RESIDING IN THE OLTEP COMMON   *
*   AREA. THE EFFECTOR BUILDS A BASIC IOSB AND IOS USE CONTROL BLOCK, *
*   IOSUSECB, IN THE COMMON AREA. IT THEN SETS THE FIRST WORD OF ROPT *
*   TO POINT TO THE IOSB AND THE SECOND WORD OF ROPT WITH THE ADDRESS *
*   OF THE DEVTAB ENTRY FOR THIS I/O REQUEST. IT THEN ISSUES OLTEP'S  *
*   SVC-59, CALL X'5C' TO FIND A IOSCB (SRB/IOSB/IOSUSECB/OECB SET)   *
*   FOR THE I/O EVENT, MOVE THE IOSB/IOSUSECB PASSED TO THE AVAILABLE *
*   IOSCB IN SUBPOOL 245, FILL IN THE REMAINING FIELDS IN THE IOSCB,  *
*   LINK TO THE IOS CCW TRANSLATOR IF THE CCW'S ARE VIRTUAL, AND ISSUE*
*   THE IOS 'STARTIO' MACRO. SVC-59 THEN RETURNS TO THE I/O EFFECTOR. *
*                                                                     *
*NOTES: SEE BELOW                                                     *
*                                                                     *
*  DEPENDENCIES: THIS MODULE HAS NO HARDWARE DEPENDENCIES.            *
*                                                                     *
*  RESTRICTIONS: NOT COMPATABLE FOR VS/1.                             *
*                                                                     *
*  REGISTER CONVENTIONS:                                              *
*    ENTRY: ALL REGISTERS ARE SAVED UPON ENTRY TO BOTH IFDOLT35 AND   *
*   THE I/O EFFECTOR.                                                 *
*      FOR IFDOLT35:                                                  *
*         REG  1 = POINTER TO OLT'S EXIO PARAMETER LIST.              *
*         REG  2 = POINTER TO OLTEP COMMON AREA.                      *
*         REG 12 = BASE REGISTER FOR THIS ENTRY POINT                 *
*         REG 13 = POINTER TO OLT'S SAVE AREA:                        *
*         REG 14 = RETURN POINT IN OLT.                               *
*      FOR I/O EFFECTOR:                                              *
*         REG  2 = POINTER TO OLTEP COMMON AREA.                      *
*         REG 13 = POINTER TO CALLERS SAVE AREA.                      *
*         REG 14 = RETURN POINT IN CALLER.                            *
*                                                                     *
*         REG 15 = ENTRY POINT OF I/O EFFECTOR                        *
*                                                                     *
*    EXIT:                                                            *
*      FOR IFDOLT35:                                                  *
*         REG 15 = 00        STARTIO ISSUED                           *
*                = 04        MACRO LEVEL NOT 2 OR 3                   *
*                = 08        DEVICE NOT PRIMARY,GRABBED,OR DATA       *
*                             PROTECTED.DEVICE ALREADY ACTIVE.DEVICE  *
*                             NOT IN DEVTAB.NO IOSCB AVAILABLE FOR    *
*                             USE.(ALREADY TWO OUTSTANDING ACTIVE I/O)*
*                = 0C        CCW CHAIN VIOLATES DATA PROTECTION MODE. *
*                = 10        SENSE = NO NOT PROCESSED.                *
*                = 14        TP LINE CONNECTION FAILED.               *
*                                                                     *
*      FOR THE I/O EFFECTOR:                                          *
*         REG 15 = 00        STARTIO ISSUED.                          *
*                = 04        NO IOSB AVAILABLE FOR THIS REQUEST.      *
*                = 08        NOT USED.                                *
*                = 0C        RETURNED TO INTERNAL CALLERS (TP LINE    *
*                             CONNECT,DATA PROTECTION) IF CCW'S ARE   *
*                             VIRTUAL AND IOS CCW TRANSLATOR FAILS.   *
*                                                                     *
*    SEE REGISTER EQUATES FOR SYMBOLS OF REGISTERS USED IN THIS       *
*    MODULE.                                                          *
*                                                                     *
*  PATCH-LABEL: PATCH35                                               *
*                                                                     *
*MODULE TYPE: PROCEDURE                                               *
*                                                                     *
*  PROCESSOR: OS/VS ASSEMBLER                                         *
*                                                                     *
*  MODULE SIZE: APPROXIMATELY 2K                                      *
*                                                                     *
*  ATTRIBUTES: SERIALLY REUSEABLE                                     *
*                                                                     *
*ENTRY POINTS:                                                        *
*                                                                     *
*  EXIO (AR-145): IFDOLT35                                            *
*                                                                     *
*     PURPOSE: TO PROVIDE OLT'S CODED TO THE AR-145 INTERFACE A METHOD*
*      OF INITIATING AN I/O OPERATION.                                *
*                                                                     *
*     LINKAGE: MACRO CALL TO OLTEP TRANSIENT MANAGER FOR BRANCH AND   *
*      LINKAGE.                                                       *
*                                                                     *
*  I/O EFFECTOR: IOEFFCTR                                             *
*                                                                     *
*     PURPOSE: TO ACCEPT A PARAMETER LIST FROM THE CALLER AND INITIATE*
*      AN I/O EVENT THROUGH THE SVC-59 STARTIO FUNCTION.              *
*                                                                     *
*     LINKAGE: BRANCH AND LINK WITH NORMAL LINKAGE CONVENTIONS. THE   *
*      ADDRESS OF THIS ENTRY POINT EXISTS IN OLTEP'S COMMON AREA      *
*      AT 'IORTNADR'.                                                 *
*                                                                     *
*                                                                     *
*INPUT:                                                               *
*                                                                     *
*  EXIO:                                                              *
*       A PARAMETER LIST FROM THE OLT POINTED TO BY REGISTER 1 WHICH  *
*   CONTAINS THE ADDRESSES OF THE DEVICE CDS FOR THIS REQUEST,THE CCW *
*   CHAIN,THE TECB,AND A BYTE OF FLAGS.                               *
*  I/O EFFECTOR:                                                      *
*                                                                     *
*       A PARAMETER LIST RESIDING IN THE COMMON AREA AT 'EFCTRCB'.    *
*   THE PARAMETER LIST CONTAINS POINTERS TO THE CCW CHAIN, THE DEVTAB *
*   ENTRY FOR THIS REQUEST, AND THE TECB. IT ALSO CONTAINS TWO FLAG   *
*   BYTES FOR THE CALLER TO INDICATE WHAT SPECIAL FUNCTIONS (CE/DE    *
*   SEPARATION,BYPASS PREFIX,SPECIFIC EXPOSURE) ARE REQUIRED. THE TWO *
*   REMAINING BYTES ARE FOR THE FILE MASK/MODE SET COMMAND AND THE    *
*   EXPECTED NUMBER OF SENSE BYTES ON UNIT CHECK.                     *
*                                                                     *
*OUTPUT:                                                              *
*                                                                     *
*  EXIO:                                                              *
*       NO SPECIFIC OUTPUT                                            *
*                                                                     *
*  I/O EFFECTOR:                                                      *
*       NO SPECIFIC OUTPUT                                            *
*                                                                     *
*EXITS: NORMAL                                                        *
*                                                                     *
*  EXIO:                                                              *
*       RETURN TO THE OLT                                             *
*                                                                     *
*  I/O EFFECTOR                                                       *
*       RETURN TO CALLER ON REGISTER 14 + 0                           *
*                                                                     *
*EXITS: ABNORMAL                                                      *
*                                                                     *
*  EXIO:                                                              *
*       N/A                                                           *
*                                                                     *
*  I/O EFFECTOR:                                                      *
*       TO SCHEDULER (IFDOLT48) WITH 'OLTTERM' BIT IN CE SWITCHES ON  *
*        TO TERMINATE THE OLT IF THE CCW TRANSLATOR FAILS FOR AN OLT  *
*        CALL.                                                        *
*                                                                     *
*EXTERNAL REFERENCES:                                                 *
*                                                                     *
*  ROUTINES:                                                          *
*     EXIO: IFDOLT73                                                  *
*                                                                     *
*     I/O EFFECTOR: SVC-59 (STARTIO FUNCTION)                         *
*                                                                     *
*  DATA AREAS:                                                        *
*     EXIO: DEVTAB                                                    *
*           EFCTRCB                                                   *
*                                                                     *
*     I/O EFFECTOR: EFCTRCB                                           *
*                   DEVTAB                                            *
*                   ROPT                                              *
*                                                                     *
*  CONTROL BLOCKS:                                                    *
*     EXIO: NONE                                                      *
*                                                                     *
*     I/O EFFECTOR: IOSCB                                             *
*                                                                     *
*TABLES: NONE                                                         *
*                                                                     *
*MACROS: NONE                                                         *
*                                                                     *
*CHANGE ACTIVITY:                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*              REGISTER EQUATES FOR IFDOLT35 EXIO                     *
***********************************************************************
         SPACE
PLISTPTR EQU   1                  OLT PARAMETER LIST POINTER
COMPTREG EQU   2                  COMMON AREA POINTER
WORKREG3 EQU   3                  WORK REG #3
CDSPTREG EQU   4                  CDS POINTER REGISTER
DVTBCNTR EQU   5                  REG TO CONTROL DEVTAB SCAN
TECBPREG EQU   6                  TECB POINTER REG
WORKREG2 EQU   7                  WORKING GPR # 2
LSTCCWAD EQU   7                  POINTER TO LAST CCW IN CHAIN FOR SCAN
LINKREG  EQU   10                 INTERNAL LINKAGE REGISTER
CCWPTREG EQU   11                 REG USED TO POINT TO CCW LIST
BASEREG  EQU   12                 BASE REGISTER FOR THIS CSECT
REG15    EQU   15                 NAME FOR REG 15
***********************************************************************
*              MISC EQUATES FOR IFDOLT35 EXIO                         *
***********************************************************************
         SPACE
CCWCOMND EQU   0                  DISPLACEMENT INTO CCW FOR OP-CODE
SENSELOC EQU   2                  DISPLACEMENT INTO TECB FOR SENSE
*                                  FIELD SIZE
THREE    EQU   3                  NAME FOR NUMERIC 3
RETHEX04 EQU   4                  VALUE OF 4 FOR RETURN CODE
L4       EQU   4                  CCHH LENGTH OF SEEK ADDRESS
L6       EQU   6                  SEEK ADDRESS LENGTH OF 6
DEC16    EQU   16                 VALUE OF 16 FOR CONSTANT
WRT      EQU   X'01'              WRITE BIT
RD       EQU   X'02'              READ BIT
NOOP     EQU   X'03'              NO-OP OP CODE
SENSE    EQU   X'04'              SENSE OP CODE
U2305TY1 EQU   X'06'              2305 TYPE 1 UNIT TYPE CODE
U2305TY2 EQU   X'07'              2305 TYPE 2 UNIT TYPE CODE
TIC      EQU   X'08'              TIC OP-CODE
BITS45   EQU   X'0C'              NAME FOR THESE BITS
FRMTWRT  EQU   X'10'              MASK FOR FORMATED WRITE BIT
RESTORE  EQU   X'17'              RESTORE CCW OP CODE
SFM      EQU   X'1F'              SET FILE MASK COMMAND CODE
MAXSNSCT EQU   X'23'              THE MAX SIZE FOR SENSE INFO
TAPE     EQU   X'80'              CLASS CODE FOR TAPE DEVICES
MULTITRK EQU   X'80'              MULTI TRACK BIT IN CCW COMMAND
         EJECT
***********************************************************************
*                   ESTABLISH ADDRESSABILITY AND PERFORM STANDARD     *
*                   LINKAGE                                           *
***********************************************************************
         SPACE
         SAVE  (14,12),,IFDOLT35&SYSDATE    SAVE CALLER'S REGS
         LR    BASEREG,ENTRYREG   SET UP BASE REG
         USING IFDOLT35,BASEREG   ESTABLISH ADDRESSABILITY FOR CSECT
         ST    SAVEREG,SAVEARE1+4 SAVE CALLERS SAVE AREA ADDRESS IN ME
         LA    REG15,SAVEARE1     GET MY SAVE AREA ADDRESS
         ST    REG15,8(SAVEREG)   PUT IT INTO CALLER'S SAVEAREA
         LR    SAVEREG,REG15      PUT MY SAVE AREA ADDRESS INTO SAVEREG
         USING EXIOPLST,PLISTPTR  ESTABLISH OLT PARM LIST,DEVTAB,AND
         USING TECB,TECBPREG       TECB ADDRESSABILITY
         USING DEVTABMP,DVTABPTR
         USING CHASCT,2
         USING DEVTABMP,DVTABPTR  SET ADDRESSABILITY TO DEVTAB
         MVI   IFD35SW1,X'00'     ZERO THIS MODULE'S SWITCH BYTE
***********************************************************************
*                   CHECK VALIDITY OF MACRO CALL                      *
***********************************************************************
         SPACE
         CLI   OEXIOLVL,THREE     IS EXIO LEVEL 3
         BNH   IFD35000           IF 3 OR LESS GO PROCESS
         LA    RETCODER,RETHEX04  IF MORE THAN 3 GIVE RETURN OF 4
         B     IFD35200           GO RESTORE REGS AND RETURN
IFD35000 EQU   *
         ICM   CDSPTREG,B'1111',OCDSADR     GET CDS ADDRESS FROM OLT'S
*                                 PARAMETER LIST AND SEE IF IT'S ZEROES
         BNZ   IFD35010           GO SET-UP AND SEARCH DEVICE TABLE
*                                  USING PASSED CDS ADDRESS.
         L     DVTABPTR,PRIDVPTR  HERE BECAUSE OLT DEFAULTS TO PRIMARY
*                                  DEVICE
         B     IFD35060           GO PROCESS ON
IFD35010 EQU   *
         L     DVTABPTR,DEVTBPTR  GET ADDRESS OF 1ST DEVTAB ENTRY
         USING CDSMAP,CDSPTREG    SET ADDRESSABILITY TO CDS
         LA    DVTBCNTR,DEC16     SET DEVICE ENTRY COUNTER TO 16
IFD35020 EQU   *
         TM    CDEVFLAG,CSYMBIT   IS THIS CDS A SYMBOLIC NAMED ONE
         BO    IFD35030           YES-GO COMPARE CDS/DEVTAB SYMBOLIC
*                                  DEVICE NAMES
         CLC   DEVAD,CDEVADDR+2   DO HEX DEVICE ADDRESSES MATCH
         BE    IFD35060           YES-GOCHECK IF PRIMARY OR SECONDARY
         B     IFD35040           NO-GO UPDATE POINTER TO NEXT DEVTAB
IFD35030 EQU   *
         CLC   DEVSYMAM,CDSYMNAM  DO SYMBOLIC NAMES MATCH
         BE    IFD35060           YES-GO CHECK IF PRIMARY OR SECONDARY
IFD35040 EQU   *
         LA    DVTABPTR,DVTABEND-DEVTABMP(DVTABPTR) POINT TO NEXT ENTRY
         CLI   DEVEBCAD,X'00'     IS THERE AN ENTRY HERE (NOT HEX 00)
         BE    IFD35050           NO-IT'S ZEROES-GO GIVE BAD RETURN =8
         BCT   DVTBCNTR,IFD35020  GO CHECK NEXT ENTRY IF IT EXISTS
IFD35050 EQU   *                  IF NOT- RETURN TO OLT WITH CODE OF 8
         B     IFD35170
         SPACE 2
IFD35060 EQU   *
         TM    DEVFLAG1,PRIMARY+GRABED IS THIS DEVICE ASSIGNED AS PRI-
*                                       MARY OR SECONDARY
         BZ    IFD35050           NO-NEITHER ONE- GO GIVE ERROR RETURN
         NI    DEVFLAG2,ALL-HIODONE    TURN OFF HALT I/O DONE BIT
         ICM   TECBPREG,B'1111',OTECBADR    GET TECB ADDR AND CHECK IF
*                                 IT'S ZEROES
         BZ    IFD35050           YES-IT'S ZEROES- GO GIVE RETURN OF 8
         TM    CDSFLAG1,CDSLNCON  IS THIS A REMOTE DEVICE
         BNO   IFD35080           NO-GO CHECK FOR DASD. BYPASS CALL-73
         ICM   CDSPTREG,B'1111',OCDSADR     GET CDS ADDRESS AND CHECK
*                                 FOR ZERO
         BZ    IFD35070           IF ZERO-GO STRAIGHT TO CALL-73
         TM    CDEVFLAG,CLCRREQ   IS THIS A LINE CONNECTION REQUEST
         BNO   IFD35080           NO-BYPASS CALL-73
         SPACE
IFD35070 EQU   *                  CALL-73
         ST    CDSPTREG,C73PCDSP  PUT CDS ADDR INTO CALL-73 PARM LIST
         ST    DVTABPTR,C73PDVTB  PUT DEVTAB ADDR INTO CALL-73 PARMLIST
         LR    WORKREG1,PLISTPTR  SAVE OLT EXIO PARM LIST PTR
         SPACE
         IFDMOD CALL='73',LIST=C73PLIST     CALL IFDOLT73
         SPACE
         LR    PLISTPTR,WORKREG1  RESTORE OLT EXIO PARM LIST PTR
         LTR   RETCODER,RETCODER  DID IFDOLT73 GIVE RETURN CODE = 0
         BNZ   IFD35200           NO-GO RETURN TO OLT
         EJECT
IFD35080 EQU   *
         XC    EFCTRCB,EFCTRCB    ZERO I/O EFFECTOR PARM LIST
         ICM   CCWPTREG,B'1111',OCCWPTR     GET CCW ADDR FROM OLT PLIST
         BZ    IFD35050           IF ZEROES- GO GIVE BAD RETURN
         ST    CCWPTREG,CCWPTR    PUT CCW POINTER INTO EFECTR PARM LIST
         ST    TECBPREG,TECBPTRX  PUT TECB POINTER INTO IOEFFECTOR LIST
         ST    DVTABPTR,DVTPTR    PUT DEVTAB POINTER INTO IOEFFCTR LIST
         SR    WORKREG1,WORKREG1  ZERO WORK REG 1
         LH    WORKREG1,SENSELOC(TECBPREG)  GET SENSE FIELD SIZE FROM
*                                  TECB
         LA    WORKREG2,THREE     SET A CONSTANT OF 3
         SR    WORKREG1,WORKREG2  SUBTRACT DEVICE ADDRESS FIELD SIZE
*                                  FROM SENSE FIELD SIZE.
         LA    WORKREG2,MAXSNSCT  SET MAX SENSE SIZE
         CR    WORKREG1,WORKREG2  IS SENSE SIZE > MAX ALLOWED
         BNH   IFD35090           NO-IT'S OK-GO MOVE IT
         LR    WORKREG1,WORKREG2  IT'S > THAN 35- SO SET IT TO 35
         SPACE
IFD35090 EQU   *
         STC   WORKREG1,SNSCNT    SET SENSE COUNT IN EFFECTOR PARM LIST
         CLI   DEVCLASS,DASD      IS THIS A DIRECT ACCESS DEVICE
         BNE   IFD35120           NO-GO CHECK FOR TAPE
         TM    DEVFLAG1,ALOCATED+FILEPRT    IS DEVICE EITHER ALOCATED
*                                  OR FILE PROTECTED?
         BZ    IFD35100           NEITHER ONE - GO CHECK IF 2305
         BAL   LINKREG,IFD35400   GO TO SCAN CCW
         BNZ   IFD35180           OLT CCW CHAIN IN ERROR-SO GO RETURN
*                                  WITH RET CODE = 12
         SPACE
***********************************************************************
*                                                                     *
*  THIS ROUTINE SET THE APPROPRIATE BITS FOR THE I/O EFFECTOR TO START*
*AN I/O OPERATION. THE BITS ARE SET IN THE 'EFCTRCB' RESIDING IN THE  *
*COMMON AREA. BITS ARE SET AS FOLLOWS:                                *
*                                                                     *
*     1.) BYPASS PREFIX                                               *
*            SET IF DEVICE IS TAPE OR DASD                            *
*     2.) CE/DE SEPARATION                                            *
*            SET IF 'ATTN' NOT REQUESTED FOR ALL DEVICES              *
*     3.) ATTN                                                        *
*            SET FOR ALL DEVICES IF REQUESTED BY THE OLT TO ALLOW ONE *
*          MORE INTERRUPT AFTER CE/DE                                 *
*     4.) SPECIFIC EXPOSURE                                           *
*            SET FOR ALL I/O REQUESTS TO A 2305 TYPE DASD             *
*     5.) GDP                                                         *
*            SET FOR ALL I/O REQUESTS THROUGH THIS MODULE             *
*                                                                     *
***********************************************************************
         SPACE 2
IFD35100 EQU   *
         CLI   DEVUNTYP,U2305TY1  IS THIS DASD A 2305 TYPE 1
         BE    IFD35110           GO SET SPECIFIC EXPOSURE BIT FOR I/O
*                                 EFFECTOR
         CLI   DEVUNTYP,U2305TY2  IS DEVICE A 2305 TYPE 2
         BNE   IFD35130           GO SET BYPASS PREFIX BIT
IFD35110 EQU   *
         OI    FLGA,SPEXPOS       SET 2305 SPECIFIC EXPOSURE BIT
         B     IFD35130           GO SET BYPASS PREFIX BIT
         SPACE
IFD35120 EQU   *
         CLI   DEVCLASS,TAPE      IS THIS A TAPE DEVICE
         BNE   IFD35140           GO CHECK FOR ATTN REQUEST
IFD35130 EQU   *
         OI    FLGA,BYPASPFX      SET TO BYPASS PREFIX
IFD35140 EQU   *
         TM    OEXIOFLG,ATTNREQ   CHECK IF ATTN REQUESTED
         BNO   IFD35150           GO SET UP FOR CE/DE POSTING
         OI    IFD35SW1,SCANFNCT  SET SCAN RTN SW FOR NO-OP/SENSE SCAN
         BAL   LINKREG,IFD35400   GO SCAN FOR NO-OP/SENSE AT LAST CCW
         BNZ   IFD35170           INVALID CHAIN -GO RETURN WITH RC = 8
         OI    FLGB,ATTNIN        SET BIT TO ALLOW EXTRA INTERRUPT
IFD35150 EQU   *
         OI    FLGA,CEDEPOST      ALLOW FOR CE/DE SEPARATE POSTING
IFD35160 EQU   *
         OI    FLGA,GDP           SET FOR GUARENTEED DEVICE PATH
         TM    DEVFLAG1,ACTIVE    IS THIS DEVTAB ACTIVE
         BO    IFD35170           YES-GO GIVE BAD RETURN TO OLT
         NI    DEVFLAG2,ALL-EXIOLVL3   SET THE EXIO LEVEL=3 BIT OFF
         CLI   OEXIOLVL,THREE     IS THIS EXIO CALL A LEVEL 3
         BNE   IFD35165           NO-GO PROCESS FOR NON-LEVEL=3
         OI    DEVFLAG2,EXIOLVL3  IT'S A LEVEL 3,SO SET EXIO LEVEL=3
         SPACE 3
IFD35165 EQU   *
         NI    TBFLAGS,ALL-TBSIONOG    SET BIT = 0 FOR INDI-
*                                  CATION TO DPRINT IF WAITIO FINDS SIO
*                                  DIDN'T GO. THAT IS TECB IS EMPTY
         L     R15,IORTNADR       GET I/O EFFECTOR ENTRY ADDRESS
         BALR  R14,R15            GO TO I/O EFFECTOR TO ISSUE STARTIO
         LTR   RETCODER,RETCODER  IS RETURN CODE = 0
         BZ    IFD35190           ALL IS OK - GO RESTORE REGS AND RETRN
         SPACE
IFD35170 EQU   *
         LA    RETCODER,RETHEX8   GIVE RETURN CODE OF 8 TO OLT
         B     IFD35200
         SPACE
IFD35180 EQU   *
         LA    RETCODER,RETHEXC
         B     IFD35200
IFD35190 EQU   *
         TM    OEXIOFLG,SNSEQNO   IS THIS EXIO FOR SENSE = NO AFTER
*                                  UNIT CHECK
         BNO   IFD35200           GO RESTORE CALLERS REGS
         LA    RETCODER,RETHEX10  SET REG 15 = X'10'
IFD35200 EQU   *
         L     SAVEREG,SAVEARE1+4   GET HIS SAVEAREA POINTER
         L     REG14,12(SAVEREG)  RESTORE REG UJ
         LM    REG0,REG12,20(SAVEREG)  RESTORE REGS 0 - 12
         BR    REG14              RETURN TO CALLER
         EJECT
***********************************************************************
*                   SCAN SUBROUTINE                                   *
*   THIS ROUTINE PERFORMS TWO FUNCTIONS BASED ON SCAN FUNCTION FLAG   *
* IN IFD35SW1,SCANFNCT.                                               *
*        1. IF SCANFNCT = 0 DO:                                       *
*          SCAN CCW'S POINTED TO BY 'CCWPTREG' TO DETERMINE IF OLT IS *
*        VIOLATING THE FILE PROTECTED OR ALLOCATED DIRACT ACCESS      *
*        DEVICE.                                                      *
*        2. IF SCANFUCT = 1 DO:                                       *
*          SCAN TO END OF CCW CHAIN POINTED TO BY 'CCWPTREG' TO SEE   *
*        IF THE OLT TERMINATES THE CCW CHAIN WITH A 'NO-OP' OR 'SENSE'*
*        COMMAND. THIS IS REQUIRED IF THE OLT WISHES THE 'ATTENTION'  *
*        FUNCTION INVOKED FOR THIS REQUEST.                           *
*   THIS ROUTINE SETS THE CONDITION TO ZERO IF THE CCW CHAIN IS OK.   *
* IT SETS THE CONDITION CODE TO NOT-ZERO IF A VIOLATION IS FOUND.     *
*                                                                     *
***********************************************************************
         SPACE 3
IFD35400 EQU   *
         XC    FILMSKSV,FILMSKSV  ZERO THE FILE MASK SAVE AREA
         SR    WORKREG1,WORKREG1  ZERO WORK REG # 1
         IC    WORKREG1,OCCWCNT   GET CCW COUNT
         BCTR  WORKREG1,0         SUBTRACT 1 FROM THE COUNT
         SLL   WORKREG1,THREE     MULTIPLY CCW COUNT-1 BY 8 TO GET
*                                  DISPLACEMENT TO LAST CCW
         LA    LSTCCWAD,0(WORKREG1,CCWPTREG)     POINT TO LAST CCW IN
*                                  THIS CHNL PROGRAM.
         LR    WORKREG1,CCWPTREG  GET COPY OF 1ST CCW ADDRESS
IFD35410 EQU   *                  SCAN LOOP START
         MVC   CCWCOPY1,0(WORKREG1)    GET A COPY OF THIS CCW
         TM    IFD35SW1,SCANFNCT       IS REQUEST TO SEARCH FOR
*                                       CHAIN END OF NO-OP/SENSE
         BO    IFD35430                YES-GO CHECK FOR TIC
         TM    CCWCOPY1+CCWCOMND,TICFILL    IS THIS A 'TIC' CCW
         BZ    IFD35430           YES- GO TO TIC CHECKING RTN
         NI    CCWCOPY1+CCWCOMND,ALL-MULTITRK    ZERO MULTI TRACK BIT
         CLI   CCWCOPY1+CCWCOMND,SFM   IS COMMAND A SET FILE MASK
         BNE   IFD35420           NO-GO AROUND FILE MASK SAVE
         L     WORKREG3,CCWCOPY1  GET FILE MASK ADDRESS FROM SFM CCW
         LA    WORKREG3,0(WORKREG3)    ZERO HIGH ORDER BYTE
         MVC   FILMSKSV,0(WORKREG3)    SAVE FILE MASK
IFD35420 EQU   *
         BNL   IFD35440                IF COMMAND > X'1E' WRITE COUNT,
*                                       KEY,DATA -THEN COMMAND DOESN'T
*                                       NEED CHECKING-GO CHECK CHAINING
         TM    CCWCOPY1+CCWCOMND,RD+WRT     IS READ OR WRITE BIT ON
         BM    IFD35510           YES-ONE IS.SO GO CHECK WHICH
         BZ    IFD35430           NEITHER ARE-GO LOOK FOR TIC OR SENSE
         TM    CCWCOPY1+CCWCOMND,BITS45     ARE BITS 4 AND 5 ON OR OFF
         BNM   IFD35440           EITHER ALL ON OR OFF - GO CHECK NEXT
         CLI   CCWCOPY1+CCWCOMND,RESTORE    IS IT A RESTORE
         BE    IFD35440           YES-GO TO NEXT CCW
         SPACE 2
*  HERE BECAUSE CCW IS A SEEK - DO EXTENT CHECKING
         SPACE
         L     WORKREG3,CCWCOPY1  GET SEEK ADDRESS POINTER
         LA    WORKREG3,0(WORKREG3)    ZERO HIGH ORDER BYTE
         CLC   0(L6,WORKREG3),DEVLOEXT IS SEEK LOWER THAN LOWEST VALID
         BL    IFD35530           YES-GO GIVE ERROR RETURN
         CLC   2(L4,WORKREG3),DEVHIEXT IS SEEK HIGHER THAN HIGHEST VAL
         BH    IFD35530           YES-GO GIVE ERROR RETURN
IFD35430 EQU   *
         NI    CCWCOPY1+CCWCOMND,LOBITS     ZERO TIC MODIFIERS
         CLI   CCWCOPY1+CCWCOMND,TIC   IS THIS A 'TIC'
         BNE   IFD35440           NO-GO CHECK CHAINING FLAGS
         L     WORKREG3,CCWCOPY1+CCWCOMND   GET TIC TO ADDRESS
         LA    WORKREG3,0(WORKREG3)    ZERO HI ORDER BYTE
         CR    WORKREG3,CCWPTREG  IS TIC 'TO' ADDRESS LESS THAN START
         BL    IFD35530           YES-GO GIVE ERROR RETURN
         CR    WORKREG3,LSTCCWAD  IS TIC 'TO' ADDRESS MORE THAN END
         BH    IFD35530           YES-GO GIVE ERROR RETURN
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW
         CR    WORKREG1,LSTCCWAD  DOES SCAN CCW POINDER POINT PAST LAST
         BNH   IFD35410           NO-GO CHECK THE NEXT CCW
         B     IFD35470           PAST CHAIN-GO SEE IF OK TO END IN TIC
         SPACE 2
*  CHECK CCW CHAINING FLAGS
         SPACE
IFD35440 EQU   *
         TM    CCWCOPY1+CCWFLAGS,DATACHAN+CMNDCHAN    ARE ANY CHAINING
*                                  BITS ON
         BZ    IFD35490           NO-GO SEE IF END OF CCW LIST
         TM    CCWCOPY1+CCWFLAGS,CMNDCHAN   IS IT COMMAND CHAINING
         BO    IFD35500           YES-GO UPDATE TO NEXT CCW ADDR
IFD35450 EQU   *
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW
         TM    CCWFLAGS(WORKREG1),DATACHAN  DOES THIS SHOW DATA CHAIN
         BO    IFD35450           YES-GO UPDATE AND CHECK NEXT
IFD35460 EQU   *
         CR    WORKREG1,LSTCCWAD  HAS SCAN POINTER GONE PAST LAST CCW
         BH    IFD35530           YES-GO GIVE ERROR
         BL    IFD35410           IT'S LOW-GO SCAN THIS CCW
IFD35470 EQU   *
         TM    IFD35SW1,SCANFNCT  IS ONLY NO-OP/SENSE SCAN WANTED
         BZ    IFD35480           NO-GO GIVE OK CONDITION
         CLI   CCWCOPY1+CCWCOMND,NOOP  IS IT A NO-OP
         BE    IFD35480           YES-GO GIVE OK CONDITION
         CLI   CCWCOPY1+CCWCOMND,SENSE IS IT A SENSE
         BNE   IFD35530           NO-GO GIVE NON-ZERO RETURN CODE
IFD35480 EQU   *
         CR    LSTCCWAD,LSTCCWAD  SET CC = 0
         BR    LINKREG            RETURN TO CALLER
         SPACE
IFD35490 EQU   *
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW
         CR    WORKREG1,LSTCCWAD  END OF CHAIN
         BNH   IFD35410           NO-GO CHECK THIS CCW
         B     IFD35470           YES-GO SEE IF LAST CCW OK
         SPACE
IFD35500 EQU   *
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW
         CR    WORKREG1,LSTCCWAD  IS IT PAST LAST CCW
         BNH   IFD35410           NO-GO SCAN THIS CCW
         B     IFD35530           YES-GO GIVE ERROR RETURN
         SPACE 3
*  CHECK FOR READ/WRITE OP CODES
         SPACE
IFD35510 EQU   *
         TM    CCWCOPY1+CCWCOMND,RD+MULTITRK ON
         BNZ   IFD35440           YES-GO CHECK CHAINING FLAGS
         TM    DEVFLAG1,FILEPRT   IS DEVICE FILE PROTECTED
         BO    IFD35520           YES-GO CHECK IF 3340 FOR OK WRITE
         TM    DEVFLAG1,ALOCATED  IS DEVICE ALLOCATED
         BNO   IFD35440           NO-GO CHECK CHAINING FLAGS
         TM    CCWCOPY1+CCWCOMND,FRMTWRT    IS IT A FORMATED WRITE
         BNO   IFD35440           NO-GO CHECK CHAINING FLAGS
         TM    CCWCOPY1+CCWCOMND,BITS45    (REST OF FORMATED WRITE BITS
         BO    IFD35440           WRITE IS OK-GO CHECK FLAGS
IFD35520 EQU   *
IFD35530 EQU   *
         LTR   LSTCCWAD,LSTCCWAD  SET CC = NOT 0
         BR    LINKREG            RETURN TO CALLER
         TITLE '***  IFDOLT35 - OLTEP AR-145 EXIO. I/O EFFECTOR  ***'
         EJECT
         ENTRY IOEFFCTR           ENTRY POINT TO I/O EFFECTOR
IOEFFCTR DS    0H
         SPACE
***********************************************************************
*                                                                     *
*                I/O EFFECTOR                                         *
*                                                                     *
*   THIS ROUTINE IS ENTERED BY A BRANCH AND LINK INTERFACE FROM       *
*  ANY OLTEP MODULE THAT WISHES A STARTIO ISSUED TO A DEVICE.         *
*  THE ENTRY POINT TO THIS MODULE EXISTS IN THE OLTEP COMMON          *
*  AREA POINTED TO BY REGISTER 2. THE LABEL IN THE COMMON AREA        *
*  IS 'IORTNADR'.                                                     *
*   UPON ENTRY THIS MODULE EXPECTS THE I/O EFFECTOR CONTROL           *
*  BLOCK TO BE INITIALIZED. THIS CONTROL BLOCK RESIDES IN THE         *
*  OLTEP COMMON AREA AND IS MAPPED THERE BEGINNING AT THE LABEL       *
*  'EFCTRCB'. IF THE CCW, DEVICE TABLE, OR TECB POINTERS OR THE       *
*  SENSE COUNT IS ZEROES A RETURN OF X'10' IS RETURNED TO THE         *
*  CALLER. TRYING TO START AN ACTIVE DEVICE RESULTS IN A RETURN       *
*  CODE OF X'8'. IF NO IOSB CONTROL BLOCK SET IS AVAILABLE TO         *
*  INIATE THE I/O EVENT A RETURN CODE OF X'4' IS PASSED FROM          *
*  SVC-59 TO THE CALLER. IF THE CCW TRANSLATOR FAILS, A MESSAGE       *
*  IS OUTPUTTED FROM THIS ROUTINE AND A RETURN CODE OF X'C' IS        *
*  RETURNED TO THE CALLER IF IT IS AN INTERNAL CALL, E.G. DATA        *
*  PROTECTION. IF NOT AN INTERNAL CALL THE TERMINATE OLT BIT IS       *
*  SET AND OLTEP'S SCHEDULER'S REG ARE RESTORED AND RETURN IS         *
*  MADE TO THE SCHEDULER.                                             *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                   REGISTER EQUATES
***********************************************************************
         SPACE
REG0     EQU   0                  NAME FOR REG 0
REG1     EQU   1                  NAME FOR REG 1
R1       EQU   1                  NAME FOR REG 1
SVCALLRG EQU   1                  SVC-59 CALL CODE REG = 1
IOSBREG  EQU   5                  POINTER TO MODEL IOSB
WORKREG1 EQU   8                  A WORKING GPR # 1
DVTABPTR EQU   9                  DEVTAB ENTRY POINTER
CHARPTR  EQU   12                 REG POINTS TO CONVERT CHAR
REG12    EQU   12                 NAME FOR REG 12
SAVEREG  EQU   13                 SAVE AREA POINTER REG
R14      EQU   14                 NAME FOR REG 14
REG14    EQU   14                 NAME FOR REG 14
RETCODER EQU   15                 NAME FOR RETURN CODE REG 15
R15      EQU   15                 NAME FOR REG 15
ENTRYREG EQU   15                 THIS REG CONTAINS THE ENTRY POINT
         EJECT
***********************************************************************
*                  MISC EQUATES                                       *
***********************************************************************
         SPACE
L1       EQU   1                  VALUE FOR LENGTH OF 1
CCWFLAGS EQU   4                  DISPLACEMENT INTO CCW FOR FLAG
FOUR     EQU   4                  A DECIMAL VALUE OF 4
SEEKLGN  EQU   6                  SEEK ADDRESS CHARACTER LENGTH
L4WDS    EQU   16                 NAME FOR A LENGTH OF 4 WORDS
OLTEPSVC EQU   59                 OLTEP'S SVC NUMBER
OLTTERM  EQU   X'01'               VALUE FOR THE OLT TERM SWITCH IN
*                                  CE SWITCH 9
VIRTSPC  EQU   X'02'              MASK FOR 'OLTEP IN VIRTUAL' BIT IN
*                                  CESWT7 IN COMMON AREA
SEEKOP   EQU   X'07'              SEEK CCW OP CODE
TICFILL  EQU   X'07'              TIC CCW LOW ORDER BITS
TICBIT   EQU   X'08'              TIC CCW OP CODE BIT
RETHEX8  EQU   X'08'              VALUE FOR A RETURN CODE OF 8
RETHEX10 EQU   X'10'              VALUE FOR A RETURN CODE OF 16
DASD     EQU   X'20'              DIRECT ACCESS DEVICE CLASS
CMNDCHAN EQU   X'40'              CCW FLAG COMMAND CHAINING BIT
DATACHAN EQU   X'80'              CCW FLAG DATA CHAINING BIT
SVCSIOCD EQU   X'5C'              SVC-59 SIO CALL CODE
LOBITS   EQU   X'0F'              VALUE FOR CONVERTING RET CODES
HIBITS   EQU   X'F0'              VALUE FOR CONVERTING RET CODES
ALL      EQU   X'FF'              VALUE FOR ALL FLAG BITS
RETHEXC  EQU   X'0C'              VALUE FOR A RETURN CODE OF 12
*                                  FOR VIRTUAL CCW XLATION ERROR
*                                  ON INTERNAL CALLS
BYTEZERO EQU   X'00'              A HEX BYTE OF ZERO
         EJECT
         USING IOSB,IOSBREG       SET MODEL IOSB ADDRESSABILITY       *
         STM   REG14,REG12,12(SAVEREG) SAVE CALLERS REGS IN HIS
*                                  SAVE AREA
         LR    BASEREG,ENTRYREG   GET ENTRY POINT VALUE
         LA    ENTRYREG,IOEFFCTR-IFDOLT35   VALUE TO ADJUST ENTRY POINT
*                                            FOR ADDRESSABILITY
         SR    BASEREG,ENTRYREG   ADJUST ENTRY POINT FOR MODULE
*                                  ADDRESSABILITY
         SPACE 3
         ST    SAVEREG,SAVEAREA+4 SAVE CALLERS SAVE AREA POINTER
         LA    REG14,SAVEAREA     GET MY SAVE AREA ADDRESS
         ST    REG14,8(SAVEREG)   PUT MY SAVE AREA POINTER INTO
*                                  CALLERS SAVE AREA
         LR    SAVEREG,REG14      PUT MY SAVE AREA ADDRESS INTO
*                                  SAVE AREA REG
         LA    IOSBREG,MODIOSB    GET MODEL IOSB ADDRESS
         ICM   DVTABPTR,B'1111',DVTPTR GET DEVTAB ENTRY ADDRESS
*                                 IS POINTER ZEROES
         BZ    EFF35160           YES-GO ERROR RETURN CODE X'10'
         TM    DEVFLAG1,ACTIVE    IS THIS DEVICE ALREADY ACTIVE
         BO    EFF35150           YES-GO ERROR RETURN CODE X'08'
         OI    DEVFLAG1,ACTIVE    NO-SET IT ACTIVE
         NI    DEVFLAG2,ALL-PCIIND   SET THE PIC INDICATOR BIT OFF
         XC    IOSCB,IOSCB        ZERO THE MODEL IOSB AND IOSUSE
*                                  CONTROL BLOCKS IN THE COMMON
*                                  AREA
         ICM   WORKREG1,B'1111',TECBPTRX     GET TECB POINTER
*                                  FROM EFFECTOR CONTROL BLOCK
         BZ    EFF35160           IT'S ZERO-GO GIVE RETURN OF 16
         ST    WORKREG1,TECBPTR   PUT TECB POINTER INTO MODEL
*                                  IOS USE CONTROL BLOCK
         LA    WORKREG1,IODEVTAB  GET ADDRESS OF 1ST IODEVTAB
         ST    WORKREG1,IODVTBPT  PUT IT INTO I/O USE CTRL BLK
         SPACE 3
         TM    FLGB,INTERNAL      IS INTERNAL CALL BIT ON
         BNO   EFF35000           NO-GO CHECK NEXT BIT
         OI    USEFLAGA,INTRNLCB  SET USE CB BIT ON FOR INTERNAL
         SPACE
EFF35000 EQU   *                   CALL
         TM    FLGB,ATTNIN        IS ATTENTION REQUESTED
         BNO   EFF35010           NO-GO CHECK NEXT BIT
         OI    USEFLAGA,ATTN      TURN ON USE CB ATTN BIT
         SPACE
EFF35010 EQU   *
         TM    CESWT7,VIRTSPC     CHECK IF OLTEP/OLT ARE VIRTUAL FOR
*                                  SETTING THE VIRTUAL CCW BIT
         BNO   EFF35020           NO-GO CHECK NEXT BIT
         OI    USEFLAGA,VIRTCCW   TURN ON USE CB VIRTUAL CCW BIT
         SPACE
EFF35020 EQU   *
         TM    FLGB,OLDTECBX      IS THIS FOR A P3116 TECB
         BNO   EFF35030           NO-DON'T TURN ON OLD TECB BIT
         OI    USEFLAGA,OLDTECB   SET USE CB OLD TECB BIT ON
         SPACE
EFF35030 EQU   *
         TM    FLGA,BYPASPFX      IS BYPASS IOS CCW PREFIX ON
         BNO   EFF35040           NO-GO CHECK NEXT FUNCTION
         OI    IOSOPT,IOSBYP      TURN ON BYPASS BIT IN IOSB
         SPACE
EFF35040 EQU   *
         TM    FLGA,CEDEPOST      IS CHNL END/DEVICE END POSTING
*                                  REQUESTED
         BNO   EFF35050           GO CHECK NEXT BIT
         OI    IOSOPT,IOSDEP      TURN ON IOSB CE/DE POST BIT
         SPACE
EFF35050 EQU   *
         OI    IOSPATH,IOSGDP     SET IOSB GDP BIT
EFF35060 EQU   *
         TM    FLGA,SPEXPOS       IS SPECIFIC EXPOSURE REQUESTED
         BNO   EFF35070           NO-GO AROUND SETTING BIT
         OI    IOSPATH,IOSEXP     SET SPECIFIC EXPOSURE BIT-IOSB
         SPACE 3
EFF35070 EQU   *
         OI    IOSOPT,IOSNERP+IOSTSLL    SET 'NO ERP' AND NO LOCAL
*                                     LOCK ON TERM RTN IN IOSB
         OC    IOSPATH,DEVAD      MOVE HEX DEVICE ADDRESS TO
*                                  IOSB FROM DEVTAB
         MVC   IOSPCI(L4WDS),PCIEXIT   MOVE PCI, NORMAL, ABNOR-
*                                  MAL,AND DISABLED INTERRUPT
*                                  ADDRESSES FROM COMMON AREA TO
*                                  IOSB
         ICM   WORKREG1,B'1111',CCWPTR GET CCW POINTER
         BZ    EFF35160           IF ZERO GO EXIT-BAD-RETCODE=16
         ST    WORKREG1,IOSVST    PUT CCW ADDRESS INTO IOSB
         MVC   IOSUCB,DEVUCBAD    MOVE UCB ADDRESS FROM DEVTAB
*                                  TO IOSB
         CLI   DEVCLASS,DASD      IS THE DEVICE A DIRECT ACCESS
         BNE   EFF35130           NO-BYPASS MOVING SEEK ADDR
         ICM   WORKREG2,B'1111',SEEKPTR     GET SEEK ADDRESS PTR IF
*                                  CALL IS FOR OLD 'P3116' OLT
         BZ    EFF35090           CALL NOT FROM OLD OLT . GO PROCESS
*                                  FOR NEW CHAINS
         MVC   IOSSKBB(SEEKLGN),0(WORKREG2)      MOVE SEEK ADDR TO
*                                  IOSB
         B     EFF35130           GO FINISH IOSB
         SPACE
EFF35090 EQU   *
         CLI   0(WORKREG1),SEEKOP IS THIS CCW A SEEK
         BE    EFF35120           YES-GO MOVE SEEK ADDRESS
         CLI   0(WORKREG1),X'13'    IS THIS CCW A RECALIBRATE  @UZ00852
         BE    EFF35120             YES GO MOVE CCW            @UZ00852
         TM    0(WORKREG1),TICBIT IS TIC BIT ON
         BNO   EFF35100           NO-CHECK FOR CHAINING
         TM    0(WORKREG1),TICFILL IS THIS A REAL TIC
         BNZ   EFF35100           NO-GO CHECK FOR CHAINING
         ICM   WORKREG1,B'0111',1(WORKREG1) GET TICKED-TO CCW
*                                  ADDRESS
         B     EFF35090           CONTINUE
EFF35100 EQU   *
         TM    CCWFLAGS(WORKREG1),CMNDCHAN WANT COMMAND CHAINING
         BNZ   EFF35110           YES-GO INCREMENT AND CONTINUE
         TM    CCWFLAGS(WORKREG1),DATACHAN WANT DATA CHAINING
         BNO   EFF35130           NO-END CHAIN
         LA    WORKREG1,8(WORKREG1) ADD 8 TO CCW INCREMENTER REG
         B     EFF35100           GO CHECK CHAINING FLAGS
         SPACE 2
EFF35110 EQU   *
         LA    WORKREG1,8(WORKREG1) ADD 8 TO CCW INCREMENTER REG
         B     EFF35090           GO CONTINUE SCAN
         SPACE 2
EFF35120 EQU   *
         ICM   WORKREG1,B'0111',1(WORKREG1) GET SEEK ADDRESS PTR
         MVC   IOSSKBB(SEEKLGN),0(WORKREG1) MOVE BBCCHH TO IOSB
         SPACE
EFF35130 EQU   *
         ST    IOSBREG,ROPT       PUT MODEL IOSB ADDR INTO SVC59
*                                  PARM LIST WORD 1.
         ST    DVTABPTR,ROPT+4    PUT DEVTAB ENTRY POINTER INTO
*                                  SVC-59 PARM LIST
         XR    WORKREG1,WORKREG1  ZERO WORKREG1
         ICM   WORKREG1,B'0001',SNSCNT GET THE PASSED SENSE CNT
         BZ    EFF35160           IS IT ZERO
         STC   WORKREG1,OECBSNSC  NO-PUT EXPECTED SENSE COUNT
*                                  INTO MODEL OECB WORD 1
         MVC   IOSFMSK(L'FILEMSK),FILEMSK GET FILEMASK/MODESET
*                                   FOR THIS REQUEST
         MVI   DEVINTPT,BYTEZERO  SET DEVTAB INTERRUPT COUNTER TO
*                                 ZEROES
*                                   FOR THIS REQUEST
         LA     SVCALLRG,SVCSIOCD PUT START IO CALL CODE INTO
*                                  SVC-59 CALL CODE REG
         LA    REG0,ROPT          PUT ADDR OF ROPT INTO REG 0 FOR SVC-
         SPACE
         SVC   OLTEPSVC           ISSUE SVC-59 FOR A STARTI0
         SPACE 2
         LTR   RETCODER,RETCODER  IS RETURN CODE = 0
         BZ    EFF35190           YES-GO RESTORE REGS AND RETURN
         SPACE
         LA    WORKREG1,FOUR      SET A REG = 4 TO COMPARE RETCD
         CR    RETCODER,WORKREG1  IS RETURN CODE = 4
         BE    EFF35180           HERE BECAUSE SVC-59 SAYS NO IOSB.
*                                  SO GO TURN OFF ACTIVE BIT IN DEVTAB
*                                  AND RETURN TO CALLER
         SPACE 2
EFF35140 EQU   *
         NI    DEVFLAG1,ALL-ACTIVE   TURN OFF ACTIVE BIT
         LA    WORKREG1,LOBITS    GET 'AND' MASK FOR LOW BITS ON
         NR    WORKREG1,RETCODER  'AND' OUT HIGH BITS
         LA    CHARPTR,CONVCHAR(WORKREG1)   POINT TO EBCDIC CHAR
*                                            FOR LOW CHAR BITS
         MVC   MSGCODE+1(L1),0(CHARPTR)     PUT LOW ORDER OF RET
*                                            CODE INTO MSG
         LA    WORKREG1,HIBITS    MASK FOR HIGH ORDER RETURNCODE
         NR    WORKREG1,RETCODER  ZERO LOW ORDER RET CDE BITS
         LA    CHARPTR,CONVCHAR(WORKREG1)   GET ADDR OF EBCDIC
*                                  RETURN CODE HIGH ORDER BITS
         MVC   MSGCODE(L1),0(CHARPTR)  MOVE HIGH ORDER RET CODE
*                                  BITS TO MESSAGE
         LA    REG1,IFD310        GET MESSAGE ADDRESS
         PWTO  REG=(REG1)         OUTPUT MSG3101
         SPACE 3
         TM    FLGB,INTERNAL      WAS IT AN INTERNAL CALL
         BE    EFF35170           YES-GO RETURN TO CALLER
         OI    CESWT9,OLTTERM     NO-SET TERMINATE OLT SW ON
         L     SAVEREG,SCHEDSA    GET ADDRESS OF SCHEDULER'S
*                                  SAVE AREA
         LM    REG14,REG12,12(SAVEREG) RESTORE SCHEDULERS REGS
         BR    REG14              RETURN TO SCHEDULER
         SPACE 2
EFF35150 EQU   *
         LA    RETCODER,RETHEX8   SET RETURN CODE OF 8
         B     EFF35190           GO RESTORE REGS AND RETURN
         SPACE 3
EFF35160 EQU   *
         LA    RETCODER,RETHEX10  SET RETURN CODE OF 16
         B     EFF35180           GO RESTORE REGS AND RETURN
         SPACE 3
EFF35170 EQU   *
         LA    RETCODER,RETHEXC   SET RETURN CODE OF 12
EFF35180 EQU   *
         NI    DEVFLAG1,ALL-ACTIVE     SET DEVTAB ACTIVE BIT OFF
EFF35190 EQU   *
         L     SAVEREG,SAVEAREA+4 GET ADDRESS OF CALLERS SAVE AREA
         L     REG14,12(SAVEREG)  RESTORE REG 14
         LM    REG0,REG12,20(SAVEREG)  RESTORE REST OF REGS AND
         BR    REG14               RETURN TO CALLER
         TITLE '***  IFDOLT35 - OLTEP AR-145 EXIO. BASE MODULE  ***'
         EJECT
***********************************************************************
*                   MISC CONSTANTS AND DATA AREAS                     *
***********************************************************************
         SPACE
         SPACE
SAVEAREA DC    18F'0'             I/O EFFECTOR SAVE AREA
SAVEARE1 DC    18F'0'             IFDOLT35 SAVE AREA
CCWCOPY1 DC    XL8'00'            SCAN ROUTINE WORK AREA
         SPACE
C73PLIST DS    2F                 PARAMETER LIST FOR IFDOLT73 LINE
*                                  CONNECTION REQUEST
C73PDVTB EQU   C73PLIST+0         DEVTAB POINTER FOR IFDOLT73
C73PCDSP EQU   C73PLIST+4         CDS ADDRESS IN OLT FOR IFDOLT73
CT3340   DC    XL2'200C'          CONSTANT FOR 3340 CLASS AND TYPE
CT3350   DC    XL2'200B'          CONSTANT FOR 3350 CLASS/TYPE @Z30RSAG
IFD35SW1 DC    XL1'00'            IFDOLT35 SWITCH BYTE # 1
FILMSKSV DC    XL1'00'            SAVE AREA FOR SCAN CCW FILEMASK
CETRKWRT EQU   X'04'              3340 FILE MASK FOR CE TRACK WRTS ONLY
*  BIT NAMES FOR 'IFD35SW1'
SCANFNCT EQU   X'80'              CCW SCAN SEARCH CHAIN END-NO-OP/SENSE
*        EQU   X'40'              UNUSED
*        EQU   X'20'              UNUSED
*        EQU   X'10'              UNUSED
*        EQU   X'08'              UNUSED
*        EQU   X'04'              UNUSED
*        EQU   X'02'              UNUSED
*        EQU   X'01'              UNUSED
CONVCHAR DC    C'0123456789ABCDEF'     CHARACTERS TO CONVERT IOS
*                                  CCW XLATOR ERROR CODE
*                                  FOR MSG IFD310I
         EJECT
***********************************************************************
*                   MESSAGES                                          *
***********************************************************************
         SPACE
*  MESSAGE TO NOTIFY OPERATOR OF IOS CCW XLATOR ERRORS
IFD310   WTO   'IFD310I OLT VIRTUAL CCW TRANSLATION ERROR - XX',MF=L,ROX
               UTCDE=10,DESC=7
MSGCODE  EQU   IFD310+44          DISPLACEMENT INTO MSG 310I FOR
*                                  THE RETURN CODE FROM XLATOR
         EJECT
***********************************************************************
*                   DSECTS                                            *
***********************************************************************
         SPACE
*  OLTEP COMMON AREA MACRO
COM      IFDCOM
         SPACE 5
         IECDIOSB
         SPACE 5
*  DESCT FOR OLTEP'S IOSB USER CONTROL BLOCK AND EVENT CONTROL BLOCK
         SPACE 2
IOSUSECB EQU   *
USERCB   DS    0CL24              START OF IOSB USER CONTROL BLOCK
OECBPTR  DS    F                  POINTER TO OLTEP EVENT CONTROL BLOCK
TECBPTR  DS    F                  OLT'S TECB POINTER FOR THIS EVENT
IODVTBPT DS    F                  POINTER TO 3 WORDS IN OLTEP COMMON
*                                   AREA WHICH HAVE:
*                                       0   DEVTAB ENTRY POINTER
*                                       4   POINTER TO THIS IOSB
*                                       8   THE ECB FOR THIS EVENT
TCCWPTR  DS    F                  POINTER TO THE TCCW SYSTEM CONTROL
*                                    BLOCK FOR THE CCW TRANSLATOR
USEFLAGS DS    0F                 A WORD OF FLAGS
USEFLAGA DS    1C                 FIRST FLAG BYTE FOR THIS CB SET
INUSE    EQU   X'80'              THIS IOSB IS IN USE
ATTN     EQU   X'40'              ATTENTION=YES REQUEST (OFF IF DONE)
VIRTCCW  EQU   X'20'              THE CCW'S ARE IN VIRTUAL
OLDTECB  EQU   X'10'              OLD TECB TO BE POSTED
INTRNLCB EQU   X'08'              REQUEST IS INTERNAL (LINE CONNECT,DP)
PURGED   EQU   X'04'              THIS I/O EVENT IS PURGED
PCIENTRY EQU   X'02'              PCI EXIT OPERATING
USEFLAGB DS    1C                 UNUSED
USEFLAGC DS    1C                 UNUSED
USEFLAGD DS    1C                 UNUSED
USERSVD  DS    F                  RESERVED FOR FUTURE
         SPACE
OECB     DS    0CL64              START OF OLTEP'S EVENT CONTROL BLOCK
OSNSCNT  DS    CL1                OLT'S SENSE BYTES REQUESTED COUNT
OINCNT   DS    CL1                NUMBER OF INTERRUPTS IN OECB
UNUSED   DS    CL2                NOT USED
OCSW1    DS    0CL8               FIRST INTERRUPT POSTED IN OECB
OCSWCC1  DS    CL1                IOS SIO CONDITION CODE
OCSWCMD1 DS    CL3                CSW COMMAND ADDRESS
OCSWSTS1 DS    0CL2               CSW1 STATUS BYTES
OCSWSTA1 DS    CL1                CSW1 STATUS BYTE A
OCSWSTB1 DS    CL1                CSW1 STATUS BYTE B
OCSWBYT1 DS    CL2                CSW1 RESIDUAL BYTE COUNT
OCSW2    DS    0CL8               SECOND INTERRUPT POSTED IN OECB
OCSWCC2  DS    CL1                IOS SIO CONDITION CODE
OCSWCMD2 DS    CL3                CSW COMMAND ADDRESS
OCSWSTS2 DS    0CL2               CSW2 STATUS BYTES
OCSWSTA2 DS    CL1                CSW2 STATUS BYTESA
OCSWSTB2 DS    CL1                CSW2 STATUS BYTESB
OCSWBYT2 DS    CL2                CSW2 RESIDUAL BYTE COUNT
OCSW3    DS    0CL8               THIRD INTERRUPT POSTED IN OECB
OCSWCC3  DS    CL1                IOS SIO CONDITION CODE
OCSWCMD3 DS    CL3                CSW COMMAND ADDRESS
OCSWSTS3 DS    0CL2               CSW3 STATUS BYTES
OCSWSTA3 DS    CL1                CSW3 STATUS BYTESA
OCSWSTB3 DS    CL1                CSW3 STATUS BYTESB
OCSWBYT3 DS    CL2                CSW3 RESIDUAL BYTE COUNT
OSNS1    DS    CL36               SENSE SAVE AREA FOR UNIT CHECK ON
*                                   THIS REQUEST
*  OLTEP DEVICE TABLE ENTRY MAP MACRO
         IFDEVTAB
DVTABEND EQU   *
         SPACE 5
*  OLT TEST EVENT CONTROL BLOCK MAP
TECB     DSECT
TBFLDCNT DS    CL1
TBFLDSZE DS    CL1
TBSNSIZE DS    CL2
TBFLAGS  DS    CL1
TBSIONOG EQU   X'80'
TBSNSCNT DS    CL1
TBSNSPST DS    CL1
TBEVTPST DS    CL1
TECBDATA EQU   *                  START OF TECB DATA FIELDS
         SPACE 5
*  OLT EXIO PARAMETER LIST MAP
EXIOPLST DSECT
OPLSTFLG DS    CL1                CONTROL PROGRAM FLAG
OEXIOLVL DS    CL1
OMACROID DS    CL2
OTECBADR DS    A
OCDSADR  DS    A
OCCWPTR  DS    A
OCCWCNT  DS    CL1
OEXIOFLG DS    CL1
ATTNREQ  EQU   X'80'
SNSEQNO  EQU   X'40'
         SPACE 5
*  MAP OF A BASIC CDS (CONFIGURATION DATA SET ENTRY)
CDSMAP   DSECT
CDEVADDR DS    CL4                CDS DEVICE ADDRESS IN HEX
CDEVDISC DS    0CL4               WORD OF DEVICE DESCRIPTORS
CDEVMODL DS    CL1                DEVICE MODEL
CDEVFEAT DS    CL1                DEVICE FEATURES
CDEVCLAS DS    CL1                DEVICE CLASS
CDEVUNIT DS    CL1                DEVICE UNIT TYPE
CDEVBCNT DS    CL1                CDS ENTRY BYTE COUNT
CDEVFLAG DS    CL2                CDS FLAGS
CSYMBIT  EQU   X'08'              BIT SAYS CDS IS SYMBOLIC NAMED
CLCRREQ  EQU   X'01'              LINE CONNECTION ROUTINE REQUIRED
CDEVEXTM DS    CL1                CDS EXTERNAL SIGNAL MASK AREA
CDSYMNAM DS    CL8                CDS DEVICE SYMBOLIC NAME FIELD
         END
