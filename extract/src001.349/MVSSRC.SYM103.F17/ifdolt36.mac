         TITLE 'IFDOLT36 - WAITIO MODULE                               *
                        '
IFDOLT36 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IFDOLT36  77.111'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         EJECT
         EJECT
         EJECT
         EJECT
         EJECT
*   R14=R13;                        /* PUT SVPTR IN R14              */
         LR    R14,R13                                             0104
*   R13=ADDR(SAVE1);                /* POINT TO MY SVAREA            */
         LA    R13,SAVE1                                           0105
*   BACKSAVE(3)=R13;                /* SAVE MINE IN HIS              */
         ST    R13,BACKSAVE+8(,R14)                                0106
*   SAVE1(2)=R14;                   /* SAVE HIS IN MINE              */
         ST    R14,SAVE1+4                                         0107
*   SAVE3=COMMAPT;                  /* SAVE COMMON AREA PTR          */
*                                                                  0108
         ST    COMMAPT,SAVE3                                       0108
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION & PARAMETER LIST VALIDITY CHECK                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0109
*   WAITPTR=R1;                     /* SAVE WAITIO PARMPTR           */
         LR    WAITPTR,R1                                          0109
*   SAVEPARM=R1;                    /* SAVE PARM ADDR        @ZA00442*/
         LR    SAVEPARM,R1                                         0110
*   SWITCHES=0;                     /* CLEAR THEM                    */
         MVI   SWITCHES,X'00'                                      0111
*   TIMEPARM=0;                     /* CLEAR IT                      */
         LA    @15,THIRTY                                          0112
         SLR   @14,@14                                             0112
         ST    @14,@TF00001                                        0112
         MVC   TIMEPARM(4,@15),@TF00001                            0112
*   TEMPCC=0;                       /* CLEAR IT                      */
         MVI   TEMPCC,X'00'                                        0113
*LVLCHK:                            /*                               */
*   IF WTIOLVL<2×                   /* INCORRECT MACRO               */
*       WTIOLVL>3×                  /* LEVELS OR                     */
*       WTIOLVL=2&                  /* TIME ONLY REQ ON              */
*       TECBADR=0                   /* LVL 2                         */
*     THEN                          /* GETS                          */
LVLCHK   CLI   WTIOLVL(WAITPTR),2                                  0114
         BL    @RT00114                                            0114
         CLI   WTIOLVL(WAITPTR),3                                  0114
         BH    @RT00114                                            0114
         CLI   WTIOLVL(WAITPTR),2                                  0114
         BNE   @RF00114                                            0114
         L     @15,TECBADR(,WAITPTR)                               0114
         LTR   @15,@15                                             0114
         BZ    @RT00114                                            0114
*     GOTO SET04;                   /* RETCODE 04                    */
*TIMECK:                            /*                               */
*   IF WTIOLVL=3&                   /* MACRO LEVEL 3 AND             */
*       TECBADR=0                   /* TIME ONLY REQ                 */
*     THEN                          /* HANDLED                       */
@RF00114 DS    0H                                                  0116
TIMECK   CLI   WTIOLVL(WAITPTR),3                                  0116
         BNE   @RF00116                                            0116
         L     @15,TECBADR(,WAITPTR)                               0116
         LTR   @15,@15                                             0116
         BZ    @RT00116                                            0116
*     GOTO SETIMER;                 /* AT SETIMER.                   */
*VALRQCK:                           /*                               */
*   IF DERQ='1'B×                   /* WAITDE OR WAITANY             */
*       ANYRQ='1'B×                 /* OR                            */
*       WAITRQ='0'B&                /* NONE OF VALID                 */
*       POLLRQ='0'B&                /* WAITIO REQUESTS               */
*       PURGRQ='0'B                 /* GETS                          */
*     THEN                          /* RETCODE 04                    */
@RF00116 DS    0H                                                  0118
VALRQCK  TM    DERQ(WAITPTR),B'00011000'                           0118
         BNZ   @RT00118                                            0118
         TM    WAITRQ(WAITPTR),B'11100000'                         0118
         BZ    @RT00118                                            0118
*     GOTO SET04;                   /*                               */
*                                                                  0119
*   /*****************************************************************/
*   /*                                                               */
*   /* GET WAITIO DEVICE ADDRESS                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0120
*DEVCK:                             /*                               */
*   DEVTABPT=DEVTBPTR;              /* GET DEV TABLE PTR             */
@RF00118 DS    0H                                                  0120
DEVCK    MVC   DEVTABPT(4),DEVTBPTR(COMMAPT)                       0120
*   DO I=1 TO 16;                   /* SEARCH DEVTAB                 */
         LA    I,1                                                 0121
@DL00121 DS    0H                                                  0122
*     IF CDSADR=0                   /* FOR PRIMARY                   */
*       THEN                        /* DEVICE IF                     */
         L     @07,CDSADR(,WAITPTR)                                0122
         LTR   @07,@07                                             0122
         BNZ   @RF00122                                            0122
*       DO;                         /* OLT DOES NOT                  */
*         IF PRIMARY='1'B           /* GIVE                          */
*           THEN                    /* CDSADR                        */
         L     @07,DEVTABPT                                        0124
         TM    PRIMARY(@07),B'01000000'                            0124
         BO    @RT00124                                            0124
*           GOTO TECBCK;            /* ADDRESS.                      */
*         GOTO BUMPI;               /*                               */
         B     BUMPI                                               0126
*       END;                        /*                               */
*     IF SYMBOLIC='1'B              /* IF CDSADR ADDRESS             */
*       THEN                        /* IS GIVEN, SEARCH              */
@RF00122 L     @07,CDSADR(,WAITPTR)                                0128
         TM    SYMBOLIC(@07),B'00001000'                           0128
         BNO   @RF00128                                            0128
*       DO;                         /* ON BASIS OF                   */
*         IF CDSSYMNE=CDSYMNAM      /* SYMBOLIC OR                   */
*           THEN                    /* HEX ADDRESS                   */
         L     @01,DEVTABPT                                        0130
         CLC   CDSSYMNE(8,@07),CDSYMNAM(@01)                       0130
         BE    @RT00130                                            0130
*           GOTO TECBCK;            /* AS DEFINED                    */
*         GOTO BUMPI;               /* AT                            */
         B     BUMPI                                               0132
*       END;                        /* CDSADR.                       */
*     IF CDSDAD=DEVHEXAD            /* WHEN FOUND, GO TO             */
*       THEN                        /* CHECK TECB ADDRESS            */
@RF00128 L     @07,CDSADR(,WAITPTR)                                0134
         L     @01,DEVTABPT                                        0134
         CLC   CDSDAD(4,@07),DEVHEXAD(@01)                         0134
         BE    @RT00134                                            0134
*       GOTO TECBCK;                /* IF NOT FOUND,                 */
*BUMPI:                             /* GO                            */
*     DEVTABPT=DEVTABPT+56;         /* BUMP SEARCH PTR               */
BUMPI    LA    @07,56                                              0136
         AL    @07,DEVTABPT                                        0136
         ST    @07,DEVTABPT                                        0136
*   END;                            /* RETURN                        */
         AH    I,@CH00055                                          0137
         CH    I,@CH00167                                          0137
         BNH   @DL00121                                            0137
*   GOTO SET0C;                     /* CODE 0C.                      */
*                                                                  0138
         B     SET0C                                               0138
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR CORRECT TECB ADDRESS AND DEVICE ACTIVE              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*TECBCK:                            /*                               */
*   DO J=1 TO 3;                    /*                               */
TECBCK   LA    @15,1                                               0139
         ST    @15,J                                               0139
@DL00139 DS    0H                                                  0140
*     IF IODEV1(J)=DEVTABPT         /* IF TECB ADDRESSES ARE         */
*       THEN                        /* THE SAME, GO CHECK IF         */
         MH    @15,@CH00033                                        0140
         L     @14,IODEV1-12(@15,COMMAPT)                          0140
         C     @14,DEVTABPT                                        0140
         BNE   @RF00140                                            0140
*       DO;                         /* DEVICE IS                     */
*         IOSBPTR=IOSBPTR1(J);      /* ACTIVE                        */
         L     IOSBPTR,IOSBPTR1-12(@15,COMMAPT)                    0142
*         ROPT=IOSBPTR;             /* IOSB PTR TO SVC 59 PARM LIST  */
         ST    IOSBPTR,ROPT(,COMMAPT)                              0143
*         IF TECBADR=TECBPTR        /*                               */
*           THEN                    /*                               */
         L     @05,IOSUSE(,IOSBPTR)                                0144
         CLC   TECBADR(4,WAITPTR),TECBPTR(@05)                     0144
         BE    @RT00144                                            0144
*           GOTO ACTVCK;            /* IF TECB ADDRESSES             */
*       END;                        /* ARE NOT                       */
*BUMPJ:                             /* THE SAME,                     */
*   END;                            /* GIVE                          */
@RF00140 DS    0H                                                  0147
BUMPJ    LA    @15,1                                               0147
         AL    @15,J                                               0147
         ST    @15,J                                               0147
         CH    @15,@CH00124                                        0147
         BNH   @DL00139                                            0147
*   GOTO SET0C;                     /* RETURN CODE 0C.               */
         B     SET0C                                               0148
*ACTVCK:                            /*                               */
*   IF ACTIVE='1'B                  /* IF DEVICE                     */
*     THEN                          /* IS ACTIVE, GO                 */
ACTVCK   L     @05,DEVTABPT                                        0149
         TM    ACTIVE(@05),B'00010000'                             0149
         BO    @RT00149                                            0149
*     GOTO PURGCK;                  /* CHK FOR PURGE REQ.            */
*   IF HIODONE='1'B                 /* IF NOT ACTIVE,                */
*     THEN                          /* CHK IF HIO ISSUED.            */
         TM    HIODONE(@05),B'00001000'                            0151
         BO    @RT00151                                            0151
*     GOTO OINCTCK;                 /* IF SO,GO CHK INTRPS           */
*   GOTO SET0C;                     /* IF NOT,RETCODE 0C.            */
*                                                                  0153
         B     SET0C                                               0153
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WAITIO REQUESTED FUNCTION                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0154
*PURGCK:                            /*                               */
*   IF PURGRQ='1'B                  /* IF PURGE REQUEST,             */
*     THEN                          /*                               */
PURGCK   TM    PURGRQ(WAITPTR),B'00100000'                         0154
         BO    @RT00154                                            0154
*     GOTO PURGRTN;                 /* GO DO IT.                     */
*WAITCK:                            /*                               */
*   IF WAITRQ='1'B                  /* IF WAIT REQUEST,              */
*     THEN                          /*                               */
WAITCK   TM    WAITRQ(WAITPTR),B'10000000'                         0156
         BO    @RT00156                                            0156
*     GOTO WAITRTN;                 /* GO DO IT.                     */
*                                                                  0157
*   /*****************************************************************/
*   /*                                                               */
*   /* HANDLE POLL REQUEST                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*POLLRTN:                           /*                               */
*   IF POSTBIT(J)='1'B              /* IF ECB POSTED COMPLETE        */
*     THEN                          /*                               */
POLLRTN  L     @05,J                                               0158
         MH    @05,@CH00033                                        0158
         ALR   @05,COMMAPT                                         0158
         TM    POSTBIT-12(@05),B'01000000'                         0158
         BO    @RT00158                                            0158
*     GOTO SET00A;                  /* GIVE RETCODE 00.        YM5409*/
*PCICHK:                            /*                               */
*   IF PCIIND='1'B                  /* IF PCI OCCURRED,              */
*     THEN                          /* TURN OFF BIT                  */
PCICHK   L     @05,DEVTABPT                                        0160
         TM    PCIIND(@05),B'00000010'                             0160
         BNO   @RF00160                                            0160
*     DO;                           /* AND                           */
*       PCIIND='0'B;                /* GIVE                          */
         NI    PCIIND(@05),B'11111101'                             0162
*       GOTO SET10;                 /* RETCODE 10.                   */
         B     SET10                                               0163
*     END;                          /*                               */
*                                                                  0164
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR INTERUPTS                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*OINCTCK:                           /*                               */
*   WAITPOST='1'B;                  /* TELL NAPA I'M HERE            */
@RF00160 DS    0H                                                  0165
OINCTCK  L     @05,DEVTABPT                                        0165
         OI    WAITPOST(@05),B'00000010'                           0165
*   IF OINCNT^=0                    /* IF INTRPTS OCCURRED           */
*     THEN                          /*                               */
         L     @05,IOSUSE(,IOSBPTR)                                0166
         L     @05,OECBPTR(,@05)                                   0166
         CLI   OINCNT(@05),0                                       0166
         BNE   @RT00166                                            0166
*     GOTO PSTDCK;                  /* CHK IF POSTED                 */
*   TEMPCC=IOSCC&CCMSK;                                            0168
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0168
         NC    TEMPCC(1),CCMSK                                     0168
*   IF CCZ=TEMPCC THEN              /* IF IOSCC=0,                   */
         CLC   CCZ(1),TEMPCC                                       0169
         BE    @RT00169                                            0169
*     GOTO DONECK;                  /* GO WRAP UP                    */
*   DO K=20 TO 1 BY-1;              /* WAIT FOR DEFERRED CC          */
         LA    K,20                                                0171
@DL00171 DS    0H                                                  0172
*     TEMPCC=IOSCC&CCMSK;                                          0172
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0172
         NC    TEMPCC(1),CCMSK                                     0172
*     IF CC0^=TEMPCC THEN           /* IF IOSCC NOT 40,              */
         CLC   CC0(1),TEMPCC                                       0173
         BNE   @RT00173                                            0173
*       GOTO CKCC1;                 /* CONTINUE. DEFERRED CC IN      */
*   END;                                                           0175
         BCTR  K,0                                                 0175
         LTR   K,K                                                 0175
         BP    @DL00171                                            0175
*   GOTO PSTDCKA;                   /* DEFERRED CC = 0, GO POST      */
         B     PSTDCKA                                             0176
*CKCC1:                                                            0177
*   IF CC1^=TEMPCC THEN             /* IF IOSCC NOT 50,              */
CKCC1    CLC   CC1(1),TEMPCC                                       0177
         BNE   @RT00177                                            0177
*     GOTO CKCC2;                   /* GO CHECK FOR CC 2             */
*   IF OINCNT^=0                    /* IF CU AND DEVICE NOT BUSY,    */
*     THEN                                                         0179
         L     @05,IOSUSE(,IOSBPTR)                                0179
         L     @05,OECBPTR(,@05)                                   0179
         CLI   OINCNT(@05),0                                       0179
         BNE   @RT00179                                            0179
*     GOTO PSTDCKA;                 /* ERROR, GO POST                */
*   GOTO DONECK;                    /* IF BUSY, WRAP UP              */
         B     DONECK                                              0181
*CKCC2:                                                            0182
*   IF CC2^=TEMPCC THEN             /* IF IOSCC NOT 60,              */
CKCC2    CLC   CC2(1),TEMPCC                                       0182
         BNE   @RT00182                                            0182
*     GOTO PSTDCKA;                 /* IT IS CC 3. GO POST           */
*DONECK:                            /*                               */
*   WAITPOST='0'B;                  /* TURN OFF NAPA FLAG            */
DONECK   L     @03,DEVTABPT                                        0184
         NI    WAITPOST(@03),B'11111101'                           0184
*   IF RET08='1'B THEN              /* IF '08' RETURN        @ZA00442*/
         TM    RET08,B'01000000'                                   0185
         BO    @RT00185                                            0185
*     GOTO SET08;                   /* GO SET IT             @ZA00442*/
*   IF HIODONE='1'B THEN            /* IF HIO ISSUED           YM5409*/
         TM    HIODONE(@03),B'00001000'                            0187
         BO    @RT00187                                            0187
*     GOTO SET00;                   /* GO RETCODE 00.          YM5409*/
*   IF POSTBIT(J)='1'B              /* EVENT COMPLETE          YM5409*/
*     THEN                          /* POSTED,                       */
         L     @03,J                                               0189
         MH    @03,@CH00033                                        0189
         ALR   @03,COMMAPT                                         0189
         TM    POSTBIT-12(@03),B'01000000'                         0189
         BO    @RT00189                                            0189
*     GOTO SET00A;                  /* GO RETCODE 00.          YM5409*/
*   IF RET10='1'B                   /* IF SWITCH IS ON,              */
*     THEN                          /* GO RETCODE 10,                */
         TM    RET10,B'10000000'                                   0191
         BO    @RT00191                                            0191
*     GOTO SET10;                   /* OTHERWISE                     */
*   GOTO SET08;                     /* GO RETCODE 08.                */
         B     SET08                                               0193
*PSTDCK:                            /*                               */
*   IF OINCNT^>DEVINTPT             /* IF ALL IS POSTED              */
*     THEN                          /* TO TECB,                      */
PSTDCK   L     @05,IOSUSE(,IOSBPTR)                                0194
         L     @05,OECBPTR(,@05)                                   0194
         L     @01,DEVTABPT                                        0194
         CLC   OINCNT(1,@05),DEVINTPT(@01)                         0194
         BNH   @RT00194                                            0194
*     GOTO DONECK;                  /* GO WRAP IT UP.                */
*PSTDCKA:                           /*                               */
*   TEMPCC=IOSCC&'30'X;             /* TURN OFF ALL BUT      @ZA16992*/
*                                                                  0196
PSTDCKA  MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0196
         NI    TEMPCC,X'30'                                        0196
*   /*****************************************************************/
*   /*                                                               */
*   /* SIO CC CODE                                           @ZA16992*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0197
*   TEMPCC=TEMPCC/16;               /* SHIFT TO LOW ORDER BITS     0197
*                                                            @ZA16992*/
         SLR   @15,@15                                             0197
         IC    @15,TEMPCC                                          0197
         SRL   @15,4                                               0197
         STC   @15,TEMPCC                                          0197
*   TEMPCC=TEMPCC×'F0'X;            /* GET CC INTO PRINTABLE FORM    */
         OI    TEMPCC,X'F0'                                        0198
*   EVFLDPTR=TECBADR                /* SET UP POINTER                */
*       +8                          /* TO AVAILABLE                  */
*       +FLDSZE*CNTINT;             /* TECB EVENT FIELD.             */
         L     @15,TECBADR(,WAITPTR)                               0199
         LA    EVFLDPTR,8                                          0199
         ALR   EVFLDPTR,@15                                        0199
         SLR   @01,@01                                             0199
         IC    @01,CNTINT(,@15)                                    0199
         MVC   @ZT00003+3(1),FLDSZE(@15)                           0199
         M     @00,@ZT00003                                        0199
         ALR   EVFLDPTR,@01                                        0199
*   IF EXIOLVL3^='1'B               /* IF EXIO NOT LEVEL3,           */
*     THEN                          /* SKIP CC0 POSTING.             */
         L     @14,DEVTABPT                                        0200
         TM    EXIOLVL3(@14),B'00000100'                           0200
         BNO   @RT00200                                            0200
*     GOTO PSTTECB;                 /*                               */
*   EXIOLVL3='0'B;                  /* TURN OFF THE FLAG.            */
         NI    EXIOLVL3(@14),B'11111011'                           0202
*   IF FLDCNT^>CNTINT               /* IF NO TECB ROOM               */
*     THEN                          /* TO POST, GO CHK               */
         CLC   FLDCNT(1,@15),CNTINT(@15)                           0203
         BNH   @RT00203                                            0203
*     GOTO EVTCTCK;                 /* EVENT COUNT.                  */
*   IF TEMPCC='F0'X×                /* IF CC IS 0 OR 3,              */
*       TEMPCC='F3'X                /*                               */
*     THEN                          /* PUT CC AND                    */
         CLI   TEMPCC,X'F0'                                        0205
         BE    @RT00205                                            0205
         CLI   TEMPCC,X'F3'                                        0205
         BNE   @RF00205                                            0205
@RT00205 DS    0H                                                  0206
*     DO;                           /* DEVICE ADDR IN                */
*       CCFLG=TEMPCC;               /* TECB AND                      */
         MVC   CCFLG(1,EVFLDPTR),TEMPCC                            0207
*       EVDAD=DEVAD;                /* GO BUMP                       */
         L     @01,DEVTABPT                                        0208
         MVC   EVDAD(2,EVFLDPTR),DEVAD(@01)                        0208
*       GOTO BUMPEVT;               /* TECB EVENT COUNT.             */
         B     BUMPEVT                                             0209
*     END;                          /*                               */
*   GOTO PSTDCK;                    /*                               */
         B     PSTDCK                                              0211
*EVTCTCK:                           /*                               */
*   IF CNTINT='FF'X                 /* IF TECB EVENT COUNT           */
*     THEN                          /* IS FULL, DONT                 */
EVTCTCK  L     @05,TECBADR(,WAITPTR)                               0212
         CLI   CNTINT(@05),X'FF'                                   0212
         BNE   @RF00212                                            0212
*     DO;                           /* BUMP IT, SET FLG              */
*       RET10='1'B;                 /* FOR RETCODE 10                */
         OI    RET10,B'10000000'                                   0214
*       GOTO DONECK;                /* AND GO WRAP UP.               */
         B     DONECK                                              0215
*     END;                          /*                               */
*BUMPEVT:                           /*                               */
*   CNTINT=CNTINT+1;                /* BUMP TECB EVENT               */
@RF00212 DS    0H                                                  0217
BUMPEVT  L     @05,TECBADR(,WAITPTR)                               0217
         LA    @15,1                                               0217
         MVC   @ZT00003+3(1),CNTINT(@05)                           0217
         AL    @15,@ZT00003                                        0217
         STC   @15,CNTINT(,@05)                                    0217
*   RET10='1'B;                     /* COUNT AND SET FLG             */
         OI    RET10,B'10000000'                                   0218
*   GOTO PSTDCK;                    /* FOR RETCODE 10.               */
*                                                                  0219
         B     PSTDCK                                              0219
*   /*****************************************************************/
*   /*                                                               */
*   /* POST CC, CSW, SENSE AND DEVICE ADDRESS                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0220
*PSTTECB:                           /*                               */
*   IF OINCNT=0×                    /* IF NO INTRPTS OR              */
*       OINCNT=DEVINTPT             /* ALL HAVE BEEN                 */
*     THEN                          /* POSTED IN TECB,               */
PSTTECB  L     @01,IOSUSE(,IOSBPTR)                                0220
         L     @15,OECBPTR(,@01)                                   0220
         CLI   OINCNT(@15),0                                       0220
         BE    @RT00220                                            0220
         L     @14,DEVTABPT                                        0220
         CLC   OINCNT(1,@15),DEVINTPT(@14)                         0220
         BE    @RT00220                                            0220
*     GOTO DONECK;                  /* GO WRAP UP.                   */
*   IF FLDCNT^>CNTINT               /* IF NO ROOM TO POST            */
*     THEN                          /* IN TECB,                      */
         L     @15,TECBADR(,WAITPTR)                               0222
         CLC   FLDCNT(1,@15),CNTINT(@15)                           0222
         BH    @RF00222                                            0222
*     DO;                           /* BUMP                          */
*       DEVINTPT=                   /* EVENT HANDLED                 */
*           DEVINTPT+1;             /* COUNT AND GO CHK              */
         LA    @05,1                                               0224
         MVC   @ZT00003+3(1),DEVINTPT(@14)                         0224
         AL    @05,@ZT00003                                        0224
         STC   @05,DEVINTPT(,@14)                                  0224
*       GOTO EVTCTCK;               /* TECB EVENT COUNT.             */
         B     EVTCTCK                                             0225
*     END;                                                         0226
*   OCSWPTR=ADDR(OCSWA)+8*(DEVINTPT);/* GET OCSW PTR                 */
@RF00222 L     @01,IOSUSE(,IOSBPTR)                                0227
         L     OCSWPTR,OECBPTR(,@01)                               0227
         LA    OCSWPTR,OCSWA(,OCSWPTR)                             0227
         L     @01,DEVTABPT                                        0227
         SLR   @00,@00                                             0227
         IC    @00,DEVINTPT(,@01)                                  0227
         SLA   @00,3                                               0227
         ALR   OCSWPTR,@00                                         0227
*   CCFLG=TEMPCC;                   /* CC IN TECB.                   */
         MVC   CCFLG(1,EVFLDPTR),TEMPCC                            0228
*   IF TEMPCC='F0'X                 /* IF CC IS 0,                   */
*     THEN                          /* PUT FF IN TECB,               */
         CLI   TEMPCC,X'F0'                                        0229
         BNE   @RF00229                                            0229
*     CCFLG='FF'X;                  /* OTHERWISE PUT                 */
         MVI   CCFLG(EVFLDPTR),X'FF'                               0230
*   EVDAD=DEVAD;                    /* PUT DEV ADDR AND              */
@RF00229 L     @07,DEVTABPT                                        0231
         MVC   EVDAD(2,EVFLDPTR),DEVAD(@07)                        0231
*   EVCSWST=OCSW1;                  /* CSW IN TECB                   */
         MVC   EVCSWST(7,EVFLDPTR),OCSW1(OCSWPTR)                  0232
*   IF VIRT='0'B                    /* IF REAL STORAGE,              */
*     THEN                                                         0233
         L     @07,IOSUSE(,IOSBPTR)                                0233
         TM    VIRT(@07),B'00100000'                               0233
         BZ    @RT00233                                            0233
*     GOTO REALCCW;                 /* DON'T TRANSLATE               */
*   IF OCSWCMD=0                    /* IF COMMAND ADDRESS IS 0,      */
*     THEN                                                         0235
         MVC   @ZT00001+1(3),OCSWCMD(OCSWPTR)                      0235
         L     @07,@ZT00001                                        0235
         LTR   @07,@07                                             0235
         BZ    @RT00235                                            0235
*     GOTO REALCCW;                 /* DON'T TRANSLATE               */
*   IF CHCTRBIT='1'B×UNITCHK='1'B   /* IF CHANNEL OR INTRFACE CONTROL*/
*     THEN                                                         0237
         TM    CHCTRBIT(OCSWPTR),B'00000110'                       0237
         BNZ   @RT00237                                            0237
*     GOTO REALCCW;                 /* CHECK, DON'T TRANSLATE        */
*   WKSVC(9)=0;                     /* CLEAR UPPER BYTE              */
         MVI   WKSVC+8(COMMAPT),X'00'                              0239
*   WKSVC(10:12)=OCSWCMD-1;         /* CSW CMD ADDR-1 TO PARM LIST 0240
*                                                            @ZA04299*/
         MVC   @ZT00001+1(3),OCSWCMD(OCSWPTR)                      0240
         L     @07,@ZT00001                                        0240
         BCTR  @07,0                                               0240
         ST    @07,@TF00001                                        0240
         MVC   WKSVC+9(3,COMMAPT),@TF00001+1                       0240
*   R0=ADDR(ROPT);                  /* PARM LIST PTR                 */
         LA    R0,ROPT(,COMMAPT)                                   0241
*   R1='4C'X;                       /* CALL CODE 4C                  */
         LA    R1,76                                               0242
*   GEN(SVC 59);                    /* REQUEST CCW XLATE FUNCTION    */
         SVC 59
*   CSWCOMAD=R0;                    /* TRANSLATED ADDRESS TO TECB    */
         ST    R0,@TF00001                                         0244
         MVC   CSWCOMAD(3,EVFLDPTR),@TF00001+1                     0244
*REALCCW:                           /* BUMP INTERUPT                 */
*   DEVINTPT=DEVINTPT+1;            /* HANDLED COUNT.                */
REALCCW  L     @07,DEVTABPT                                        0245
         LA    @05,1                                               0245
         MVC   @ZT00003+3(1),DEVINTPT(@07)                         0245
         AL    @05,@ZT00003                                        0245
         STC   @05,DEVINTPT(,@07)                                  0245
*   IF UNITCHK^='1'B                /* IF UNIT CHECK IS              */
*     THEN                          /* NOT IN STATUS,GO              */
         TM    UNITCHK(OCSWPTR),B'00000010'                        0246
         BNO   @RT00246                                            0246
*     GOTO BUMPEVT;                 /* BUMP TECB EVNTOT.             */
*   IF SNSCT^>CNTSNS                /* IF NO ROOM TO POST            */
*     THEN                          /* SNS DATA, GO BUMP             */
         L     @05,TECBADR(,WAITPTR)                               0248
         CLC   SNSCT(1,@05),CNTSNS(@05)                            0248
         BNH   @RT00248                                            0248
*     GOTO BUMPSNS;                 /* SNS EVNT COUNT.               */
*   SNSFLDPT=TECBADR                /* FIND AVAILABLE TECB           */
*       +8                          /* SENSE FIELD.                  */
*       +FLDSZE*FLDCNT              /*                               */
*       +SNSIZE*CNTSNS;             /*                               */
         L     @06,TECBADR(,WAITPTR)                               0250
         LA    SNSFLDPT,8                                          0250
         ALR   SNSFLDPT,@06                                        0250
         SLR   @01,@01                                             0250
         IC    @01,FLDCNT(,@06)                                    0250
         MVC   @ZT00003+3(1),FLDSZE(@06)                           0250
         M     @00,@ZT00003                                        0250
         ALR   SNSFLDPT,@01                                        0250
         SLR   @01,@01                                             0250
         IC    @01,CNTSNS(,@06)                                    0250
         MVC   @ZT00002+2(2),SNSIZE(@06)                           0250
         M     @00,@ZT00002                                        0250
         ALR   SNSFLDPT,@01                                        0250
*   SNDAD=DEVAD;                    /* PUT IN DEV ADDR               */
         MVC   SNDAD(2,SNSFLDPT),DEVAD(@07)                        0251
*   SNFLD=OSNS1(1:OSNSCNT);         /* PUT IN SENSE DATA             */
         MVI   SNFLD+1(SNSFLDPT),C' '                              0252
         MVC   SNFLD+2(34,SNSFLDPT),SNFLD+1(SNSFLDPT)              0252
         L     @01,IOSUSE(,IOSBPTR)                                0252
         L     @15,OECBPTR(,@01)                                   0252
         SLR   @14,@14                                             0252
         IC    @14,OSNSCNT(,@15)                                   0252
         BCTR  @14,0                                               0252
         EX    @14,@SM00892                                        0252
*BUMPSNS:                           /*                               */
*   CNTSNS=CNTSNS+1;                /* BUMP TECB SNS COUNT           */
BUMPSNS  L     @05,TECBADR(,WAITPTR)                               0253
         LA    @15,1                                               0253
         MVC   @ZT00003+3(1),CNTSNS(@05)                           0253
         AL    @15,@ZT00003                                        0253
         STC   @15,CNTSNS(,@05)                                    0253
*   GOTO BUMPEVT;                   /* GO BUMP EVENT COUNT           */
*                                                                  0254
         B     BUMPEVT                                             0254
*   /*****************************************************************/
*   /*                                                               */
*   /* HANDLE WAIT REQUEST                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0255
*WAITRTN:                           /*                               */
*   WTQ='0'B;                       /* RESET INTERUPT FLAGS          */
WAITRTN  DS    0H                                                  0256
*   DBSY='0'B;                                                     0256
*   CBSY='0'B;                                                     0257
         NI    WTQ,B'11000111'                                     0257
*   DO K=600 TO 1 BY-1;                                            0258
         LA    K,600                                               0258
@DL00258 DS    0H                                                  0259
*     TEMPCC=IOSCC&CCMSK;           /* IF I/O IN QUEUE,              */
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0259
         NC    TEMPCC(1),CCMSK                                     0259
*     IF CCZ=TEMPCC THEN            /* SET QUEUED FLAG,              */
         CLC   CCZ(1),TEMPCC                                       0260
         BNE   @RF00260                                            0260
*       DO;                                                        0261
*         WTQ='1'B;                 /* AND WAIT                      */
         OI    WTQ,B'00100000'                                     0262
*         GOTO WTIME;               /* 1/10 SECOND                   */
         B     WTIME                                               0263
*       END;                                                       0264
*     DO I=20 TO 1 BY-1;            /* WAIT FOR              @ZA12060*/
@RF00260 LA    I,20                                                0265
@DL00265 DS    0H                                                  0266
*       TEMPCC=IOSCC&CCMSK;                                        0266
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0266
         NC    TEMPCC(1),CCMSK                                     0266
*       IF CC0^=TEMPCC THEN         /* DEFERRED                      */
         CLC   CC0(1),TEMPCC                                       0267
         BNE   @RT00267                                            0267
*         GOTO CKCC1W;              /* CC                            */
*     END;                                                         0269
         BCTR  I,0                                                 0269
         LTR   I,I                                                 0269
         BP    @DL00265                                            0269
*CKCC1W:                                                           0270
*     IF CC1^=TEMPCC THEN           /* IF NOT CC 1,                  */
CKCC1W   CLC   CC1(1),TEMPCC                                       0270
         BNE   @RT00270                                            0270
*       GOTO CKCC2W;                /* GO CHECK FOR CC 2             */
*     IF OINCNT^=0                  /* IF NOT BUSY                   */
*       THEN                                                       0272
         L     @01,IOSUSE(,IOSBPTR)                                0272
         L     @01,OECBPTR(,@01)                                   0272
         CLI   OINCNT(@01),0                                       0272
         BNE   @RT00272                                            0272
*       GOTO SETIMER;               /* DO REQUESTED WAIT             */
*     IF WTQ='1'B×CBSY='1'B         /* IF I/O QUEUED OR CHANNEL BUSY,*/
*       THEN                                                       0274
         TM    WTQ,B'00101000'                                     0274
         BNZ   @RT00274                                            0274
*       GOTO WAITRTN;               /* START OVER                    */
*     DBSY='1'B;                    /* DEVICE BUSY                   */
         OI    DBSY,B'00010000'                                    0276
*     GOTO WTIME;                   /* WAIT 1/10 SECOND              */
         B     WTIME                                               0277
*CKCC2W:                                                           0278
*     IF CC2^=TEMPCC THEN           /* IF NOT CC 2, THEN CC3         */
CKCC2W   CLC   CC2(1),TEMPCC                                       0278
         BNE   @RT00278                                            0278
*       GOTO SETIMER;               /* GO DO REQUESTED WAIT          */
*     IF WTQ='1'B×DBSY='1'B         /* IF I/O QUEUED OR DEVICE BUSY, */
*       THEN                                                       0280
         TM    WTQ,B'00110000'                                     0280
         BNZ   @RT00280                                            0280
*       GOTO WAITRTN;               /* START OVER                    */
*     CBSY='1'B;                    /* CHANNEL BUSY                  */
         OI    CBSY,B'00001000'                                    0282
*WTIME:                                                            0283
*     GEN(STIMER  WAIT,DINTVL=TENTHSEC);                           0283
WTIME    STIMER  WAIT,DINTVL=TENTHSEC
*   END;                                                           0284
         BCTR  K,0                                                 0284
         LTR   K,K                                                 0284
         BP    @DL00258                                            0284
*   SIOQUEUE='1'B;                  /* TURN ON FLG IN TECB           */
         L     @01,TECBADR(,WAITPTR)                               0285
         OI    SIOQUEUE(@01),B'10000000'                           0285
*   RET08='1'B;                     /* SET X'08' RETURN      @ZA00442*/
         OI    RET08,B'01000000'                                   0286
*   GOTO PURGRTN;                   /* TO TELL DPRINT WE             */
*                                                                  0287
         B     PURGRTN                                             0287
*   /*****************************************************************/
*   /*                                                               */
*   /* HANDLE TIME REQUEST                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0288
*SETIMER:                           /* TIMED OUT IN QUEU             */
*   IF WTIOTIME>1800                /* OLT WAITTIME GETS             */
*     THEN                          /* RETCODE 0C.                   */
SETIMER  CLC   WTIOTIME(2,WAITPTR),@CH00850                        0288
         BH    @RT00288                                            0288
*     GOTO SET0C;                   /*                               */
*   TIME=WTIOTIME;                  /*                               */
         MVC   @ZT00002+2(2),WTIOTIME(WAITPTR)                     0290
         L     TIME,@ZT00002                                       0290
*   IF WTIOTIME=0                   /* OLT WAITTIME OF 0             */
*     THEN                          /* DEFAULTS TO 30                */
         MVC   @ZT00002+2(2),WTIOTIME(WAITPTR)                     0291
         L     @05,@ZT00002                                        0291
         LTR   @05,@05                                             0291
         BNZ   @RF00291                                            0291
*     TIME=30;                      /* SECONDS.                      */
         LA    TIME,30                                             0292
*   DO T=30 TO 1                    /* GET THE TIME TO               */
*         BY-1;                     /* WAIT                          */
@RF00291 LA    T,30                                                0293
@DL00293 DS    0H                                                  0294
*     IF TIME<60                    /* INTO                          */
*       THEN                        /* ELEMENTS OF                   */
         LA    @15,60                                              0294
         CR    TIME,@15                                            0294
         BL    @RT00294                                            0294
*       GOTO SETSEC;                /* 10 MIN MULTIPLES,             */
*     TIME=TIME-60;                 /* AND MINUTES,                  */
         SLR   TIME,@15                                            0296
*     DO;                           /*                               */
*       IF MIN=9                    /*                               */
*         THEN                      /*                               */
         LA    @15,THIRTY                                          0298
         CLI   MIN(@15),9                                          0298
         BNE   @RF00298                                            0298
*         DO;                       /*                               */
*           TMIN=TMIN+1;            /*                               */
         LA    @14,1                                               0300
         MVC   @ZT00003+3(1),TMIN(@15)                             0300
         AL    @14,@ZT00003                                        0300
         STC   @14,TMIN(,@15)                                      0300
*           MIN=0;                  /*                               */
         MVI   MIN(@15),X'00'                                      0301
*         END;                      /*                               */
*       GOTO BUMPM;                 /*                               */
         B     BUMPM                                               0303
*     END;                          /*                               */
*BUMPM:                             /* AND                           */
*     MIN=MIN+1;                    /*                               */
BUMPM    LA    @15,THIRTY                                          0305
         LA    @14,1                                               0305
         MVC   @ZT00003+3(1),MIN(@15)                              0305
         AL    @14,@ZT00003                                        0305
         STC   @14,MIN(,@15)                                       0305
*   END;                            /*                               */
         BCTR  T,0                                                 0306
         LTR   T,T                                                 0306
         BP    @DL00293                                            0306
*SETSEC:                            /*                               */
*   DO T=6 TO 1                     /* 10 SEC MULTIPLES,             */
*         BY-1;                     /* AND SECONDS.                  */
SETSEC   LA    T,6                                                 0307
@DL00307 DS    0H                                                  0308
*     IF TIME<10                    /*                               */
*       THEN                        /* THEN GO SET                   */
         CH    TIME,@CH00750                                       0308
         BNL   @RF00308                                            0308
*       DO;                         /* CORRECT FORM.                 */
*         SEC=TIME;                 /*                               */
         LA    @05,THIRTY                                          0310
         STC   TIME,SEC(,@05)                                      0310
*         GOTO FORMREQ;             /*                               */
         B     FORMREQ                                             0311
*       END;                        /*                               */
*     TIME=TIME-10;                 /*                               */
@RF00308 SH    TIME,@CH00750                                       0313
*     TSEC=TSEC+1;                  /*                               */
         LA    @15,THIRTY                                          0314
         LA    @14,1                                               0314
         MVC   @ZT00003+3(1),TSEC(@15)                             0314
         AL    @14,@ZT00003                                        0314
         STC   @14,TSEC(,@15)                                      0314
*   END;                            /*                               */
         BCTR  T,0                                                 0315
         LTR   T,T                                                 0315
         BP    @DL00307                                            0315
*FORMREQ:                           /*                               */
*   TIMEPARM=TIMEPARM×              /* SET CORRECT FORM              */
*       'F0F0F0F0'X;                /* FOR STIMER.                   */
FORMREQ  LA    @15,THIRTY                                          0316
         OC    TIMEPARM(4,@15),@CB00859                            0316
*   IF TECBADR=0                    /* IF THIS IS TIME               */
*     THEN                          /* ONLY REQ,                     */
         L     @15,TECBADR(,WAITPTR)                               0317
         LTR   @15,@15                                             0317
         BNZ   @RF00317                                            0317
*     DO;                           /* JUST STALL.                   */
*       GEN(STIMER  WAIT,DINTVL=THIRTY);                           0319
         STIMER  WAIT,DINTVL=THIRTY
*       GOTO SET08;                 /* GO RETCODE 08                 */
         B     SET08                                               0320
*     END;                          /*                               */
*   GEN(STIMER  REAL,TMEOUT,DINTVL=THIRTY);                        0322
@RF00317 DS    0H                                                  0322
         STIMER  REAL,TMEOUT,DINTVL=THIRTY
*   IF POSTBIT(J)^='1'B             /* IF ECB IS NOT POSTED,         */
*     THEN                          /* WAIT                          */
         L     @03,J                                               0323
         MH    @03,@CH00033                                        0323
         ST    @03,@TF00001                                        0323
         ALR   @03,COMMAPT                                         0323
         TM    POSTBIT-12(@03),B'01000000'                         0323
         BO    @RF00323                                            0323
*     DO;                           /* FOR                           */
*       R1=ADDR(IOECB1(J));         /* IT.                           */
         L     R1,@TF00001                                         0325
         LA    R1,IOECB1-12(R1,COMMAPT)                            0325
*       GEN(WAIT  ,ECB=(1));        /*                               */
         WAIT  ,ECB=(1)
*     END;                          /*                               */
*   IF WTCMPCD(J)='100'X            /* IF WAITIO POSTED              */
*     THEN                          /* IT,                           */
@RF00323 L     @03,J                                               0328
         MH    @03,@CH00033                                        0328
         ALR   @03,COMMAPT                                         0328
         MVC   @TS00001(2),WTCMPCD-12(@03)                         0328
         NC    @TS00001(2),@CB00898                                0328
         CLC   @TS00001(2),@CB00900                                0328
         BNE   @RF00328                                            0328
*     DO;                           /*                               */
*       RET08='1'B;                 /* SET FLG FOR CODE 08           */
         OI    RET08,B'01000000'                                   0330
*       GOTO PURGRTN;               /* AND GO PURGE                  */
         B     PURGRTN                                             0331
*     END;                          /*                               */
*   GEN(TTIMER CANCEL);             /*                               */
@RF00328 DS    0H                                                  0333
         TTIMER CANCEL
*   GOTO SET00A;                    /* FREE CONTROL BLOCKS     YM5409*/
*                                                                  0334
         B     SET00A                                              0334
*   /*****************************************************************/
*   /*                                                               */
*   /* TIMEOUT ROUTINE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0335
*TMEOUT:                            /* FROM SCP ON TIMEOUT     YM3329*/
*   PROC OPTIONS(NOSAVEAREA,NOSAVE(15));/*                     YM3329*/
TMEOUT   ST    @14,12(,@13)                                        0335
         STM   @00,@12,20(@13)                                     0335
*   GEN(BALR  12,0);                /* ESTABLISH                     */
         BALR  12,0
*   GEN(LA    15,TMEOUT-IFDOLT36-22);/* ADDRESSABILITY               */
         LA    15,TMEOUT-IFDOLT36-22
*   GEN(SR    12,15);               /*                               */
         SR    12,15
*   R14=R13;                        /* PUT SVPTR IN R14              */
         LR    R14,R13                                             0339
*   R13=ADDR(SAVE2);                /* POINT TO MY SVAREA            */
         LA    R13,SAVE2                                           0340
*   BACKSAVE(3)=R13;                /* SAVE MINE IN HIS              */
         ST    R13,BACKSAVE+8(,R14)                                0341
*   SAVE2(2)=R14;                   /* SAVE HIS IN MINE              */
         ST    R14,SAVE2+4                                         0342
*   COMMAPT=SAVE3;                  /* RESTORE COMMON AREA PTR       */
         L     COMMAPT,SAVE3                                       0343
*   IF POSTBIT(J)^='1'B             /* IF ECB IS NOT                 */
*     THEN                          /*                               */
         L     @03,J                                               0344
         MH    @03,@CH00033                                        0344
         ST    @03,@TF00001                                        0344
         ALR   @03,COMMAPT                                         0344
         TM    POSTBIT-12(@03),B'01000000'                         0344
         BO    @RF00344                                            0344
*     DO;                           /* GET                           */
*       R1=ADDR(IOECB1(J));         /* IT                            */
         L     R1,@TF00001                                         0346
         LA    R1,IOECB1-12(R1,COMMAPT)                            0346
*       R0=256;                     /* POSTED.                       */
         LA    R0,256                                              0347
*       GEN(POST (1),(0));          /*                               */
         POST (1),(0)
*     END;                          /*                               */
*   R13=SAVE2(2);                   /* GO BACK TO CALLER.            */
@RF00344 L     R13,SAVE2+4                                         0350
*   END TMEOUT;                     /*                         Y02906*/
*                                                                  0351
@EL00002 DS    0H                                                  0351
@EF00002 DS    0H                                                  0351
@ER00002 L     @14,12(,@13)                                        0351
         LM    @00,@12,20(@13)                                     0351
         BR    @14                                                 0351
*   /*****************************************************************/
*   /*                                                               */
*   /* PURGE ROUTINE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0352
*PURGRTN:                           /*                               */
*   R0=ADDR(ROPT);                  /* PARAMETER LIST POINTER        */
PURGRTN  LA    R0,ROPT(,COMMAPT)                                   0352
*   R1=80;                          /* CALL CODE = X'50'             */
         LA    R1,80                                               0353
*   WKSVC(9)='00'X;                 /* SVC 16                        */
         MVI   WKSVC+8(COMMAPT),X'00'                              0354
*SVC33:                                                            0355
*   GEN(SVC 59);                    /* SVC 59                        */
SVC33    SVC 59
*   IF RET08='0'B                   /* RETURN CODE 8?          YM4985*/
*     THEN                                                         0356
         TM    RET08,B'01000000'                                   0356
         BZ    @RT00356                                            0356
*     GOTO SET00;                   /* NO, GIVE RETURN CODE 0  YM4985*/
*   ACTIVE='0'B;                    /* YES, RESET ACTIVE FLAG  YM4985*/
         L     @03,DEVTABPT                                        0358
         NI    ACTIVE(@03),B'11101111'                             0358
*   GOTO SET08;                     /* GO RETURN CODE 8      @ZA05492*/
*                                                                  0359
         B     SET08                                               0359
*   /*****************************************************************/
*   /*                                                               */
*   /* SET RETURN CODE, RETURN TO CALLER                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0360
*SET00A:                            /*                         YM5409*/
*   R0=ADDR(ROPT);                  /* PARAMETER LIST POINTER  YM5409*/
SET00A   LA    R0,ROPT(,COMMAPT)                                   0360
*   R1='8050'X;                     /* CALL CODE = X'8050'     YM5409*/
         L     R1,@CF00872                                         0361
*   GEN(SVC 59);                    /* SVC 59                  YM5409*/
         SVC 59
*SET00:                             /*                               */
*   ACTIVE='0'B;                    /* TURN OFF ACTIVE FLG           */
SET00    L     @03,DEVTABPT                                        0363
         NI    ACTIVE(@03),B'11101111'                             0363
*   R15='00'X;                      /* SET RETCODE 00                */
         SLR   R15,R15                                             0364
*   GOTO RETRN1;                    /* AND GO RETURN.                */
         B     RETRN1                                              0365
*SET04:                             /*                               */
*   R15='04'X;                      /* SET RETCODE 04                */
SET04    LA    R15,4                                               0366
*   GOTO RETRN1;                    /* AND GO RETURN.                */
         B     RETRN1                                              0367
*SET08:                             /*                               */
*   R15='08'X;                      /* SET RETCODE 08                */
SET08    LA    R15,8                                               0368
*   GOTO RETRN1;                    /* AND GO RETURN.                */
         B     RETRN1                                              0369
*SET0C:                             /*                               */
*   R15='0C'X;                      /* SET RETCODE 0C                */
SET0C    LA    R15,12                                              0370
*   GOTO RETRN1;                    /* AND GO RETURN.                */
         B     RETRN1                                              0371
*SET10:                             /*                               */
*   R15='10'X;                      /* SET RETCODE 10 AND            */
SET10    LA    R15,16                                              0372
*RETRN1:                            /*                               */
*   R13=SAVE1(2);                   /* RETURN TO CALLER.             */
RETRN1   L     R13,SAVE1+4                                         0373
*   RETURN;                         /*                               */
@EL00001 DS    0H                                                  0374
@EF00001 DS    0H                                                  0374
@ER00001 L     @14,12(,@13)                                        0374
         LM    @00,@12,20(@13)                                     0374
         BR    @14                                                 0374
*   END IFDOLT36                                                   0375
*                                                                  0375
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFDPF1  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IFDEVTAB)                                       */
*                                                                  0375
*       ;                                                          0375
@DATA    DS    0H
@CH00055 DC    H'1'
@CH00124 DC    H'3'
@CH00750 DC    H'10'
@CH00033 DC    H'12'
@CH00167 DC    H'16'
@CH00850 DC    H'1800'
@SM00892 MVC   SNFLD(0,SNSFLDPT),OSNS1(@15)
         DS    0F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00001 DC    F'0'
@ZT00002 DC    F'0'
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
         DS    0F
@CF00872 DC    XL4'8050'
         DS    0D
DEVTABPT DS    A
SAVE3    DS    F
J        DS    F
TEN      DC    H'10'
@TS00001 DS    CL2
@CB00859 DC    X'F0F0F0F0'
@CB00898 DC    B'0000111111111111'
@CB00900 DC    B'0000000100000000'
THIRTY   DC    X'F0F0F0F0F3F0F0C0'
TENTHSEC DC    X'F0F0F0F0F0F0F1C0'
TEMPCC   DS    CL1
TELCOMM  DC    X'40'
TELCOMN  DC    X'42'
TELCONM  DC    X'10'
SWITCHES DS    CL1
         ORG   SWITCHES
RET10    DS    BL1
RET08    EQU   SWITCHES+0
WTQ      EQU   SWITCHES+0
DBSY     EQU   SWITCHES+0
CBSY     EQU   SWITCHES+0
         ORG   SWITCHES+1
CCZ      DC    X'00'
CC0      DC    X'40'
CC1      DC    X'50'
CC2      DC    X'60'
CCMSK    DC    X'70'
         DS    CL2
SAVE1    DS    18F
SAVE2    DS    18F
IFDOLT36 CSECT
*                /*
        IFDPATCH
IFDOLT36 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
T        EQU   @05
K        EQU   @05
I        EQU   @06
SAVEPARM EQU   @04
TIME     EQU   @04
SNSFLDPT EQU   @05
OCSWPTR  EQU   @06
EVFLDPTR EQU   @05
IOSBPTR  EQU   @04
WAITPTR  EQU   @03
R1       EQU   @01
R0       EQU   @00
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
COMMAPT  EQU   @02
BACKSAVE EQU   0
COMMAP   EQU   0
CHASCT   EQU   COMMAP
MSSSTAT  EQU   CHASCT+71
IOSCB    EQU   COMMAP+512
OECBWRD1 EQU   IOSCB+132
EFCTRCB  EQU   COMMAP+648
FLGA     EQU   EFCTRCB+8
FLGB     EQU   EFCTRCB+9
IODEVTAB EQU   COMMAP+672
IODEV1   EQU   IODEVTAB
IOSBPTR1 EQU   IODEVTAB+4
IOECB1   EQU   IODEVTAB+8
CMPLT    EQU   IOECB1
POSTBIT  EQU   CMPLT
@NM00013 EQU   IOECB1+2
WTCMPCD  EQU   @NM00013
DEVTBPTR EQU   COMMAP+856
CESWT9   EQU   COMMAP+862
CESWT10  EQU   COMMAP+863
MCT      EQU   COMMAP+888
WKSVC    EQU   COMMAP+1100
ROPT     EQU   WKSVC+4
OLTTAB   EQU   COMMAP+1116
CESWITCH EQU   COMMAP+1456
CESWT    EQU   CESWITCH
CESWT1   EQU   CESWITCH+1
CESWT2   EQU   CESWITCH+2
CESWT3   EQU   CESWITCH+3
CESWT4   EQU   CESWITCH+4
CESWT5   EQU   CESWITCH+5
CESWT6   EQU   CESWITCH+6
CESWT7   EQU   CESWITCH+7
CESWT8   EQU   CESWITCH+8
CESWTR   EQU   COMMAP+1532
CESWTR1  EQU   COMMAP+1533
CESWTR2  EQU   COMMAP+1534
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00042 EQU   IOSB+20
IOSCC    EQU   @NM00042
IOSCSW   EQU   @NM00042+1
IOSTATUS EQU   IOSCSW+3
IOSUSE   EQU   IOSB+32
IOSIPIB  EQU   IOSB+44
IOSDIE   EQU   IOSB+68
IOSDIEFG EQU   IOSDIE
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
DEVTABMP EQU   0
DEVFLAG1 EQU   DEVTABMP+12
PRIMARY  EQU   DEVFLAG1
ACTIVE   EQU   DEVFLAG1
DEVFLAG2 EQU   DEVTABMP+13
HIODONE  EQU   DEVFLAG2
EXIOLVL3 EQU   DEVFLAG2
PCIIND   EQU   DEVFLAG2
DEVFLAG3 EQU   DEVTABMP+14
WAITPOST EQU   DEVFLAG3
DEVFLAG4 EQU   DEVTABMP+15
DEVLOEXT EQU   DEVTABMP+16
DEVHIEXT EQU   DEVTABMP+22
DEVHEXAD EQU   DEVTABMP+32
DEVAD    EQU   DEVHEXAD+2
DEVDESCR EQU   DEVTABMP+36
DEVCDSFG EQU   DEVTABMP+41
CDSFLAG1 EQU   DEVCDSFG
CDSFLAG2 EQU   DEVCDSFG+1
CDSYMNAM EQU   DEVTABMP+44
DEVINTPT EQU   DEVTABMP+53
IOSUSECB EQU   0
USERCB   EQU   IOSUSECB
OECBPTR  EQU   USERCB
TECBPTR  EQU   USERCB+4
USEFLAGS EQU   USERCB+16
USEFLAGA EQU   USEFLAGS
VIRT     EQU   USEFLAGA
OECB     EQU   0
OSNSCNT  EQU   OECB
OINCNT   EQU   OECB+1
OCSWA    EQU   OECB+4
OSNS1    EQU   OECB+28
OCSW     EQU   0
OCSW1    EQU   OCSW+1
OCSWCMD  EQU   OCSW1
OCSWSTS  EQU   OCSW1+3
OCSWSTB  EQU   OCSWSTS+1
CHCTRBIT EQU   OCSWSTB
UNITCHK  EQU   OCSWSTB
WAITLIST EQU   0
WTIOLVL  EQU   WAITLIST+1
TECBADR  EQU   WAITLIST+4
CDSADR   EQU   WAITLIST+8
WAITFLAG EQU   WAITLIST+12
WAITRQ   EQU   WAITFLAG
POLLRQ   EQU   WAITFLAG
PURGRQ   EQU   WAITFLAG
DERQ     EQU   WAITFLAG
ANYRQ    EQU   WAITFLAG
WTIOTIME EQU   WAITLIST+13
TECBLIST EQU   0
FLDCNT   EQU   TECBLIST
FLDSZE   EQU   TECBLIST+1
SNSIZE   EQU   TECBLIST+2
TECBFL   EQU   TECBLIST+4
SIOQUEUE EQU   TECBFL
SNSCT    EQU   TECBLIST+5
CNTSNS   EQU   TECBLIST+6
CNTINT   EQU   TECBLIST+7
EVFLDS   EQU   0
CCFLG    EQU   EVFLDS
EVDAD    EQU   EVFLDS+2
EVCSW    EQU   EVFLDS+4
EVCSWST  EQU   EVCSW+1
CSWCOMAD EQU   EVCSWST
SNSFLDS  EQU   0
SNDAD    EQU   SNSFLDS+1
SNFLD    EQU   SNSFLDS+3
CDS      EQU   0
CDSDAD   EQU   CDS
CDSFLG   EQU   CDS+9
SYMBOLIC EQU   CDSFLG
CDSSYMNE EQU   CDS+12
@NM00076 EQU   0
TIMEPARM EQU   @NM00076+2
TMIN     EQU   TIMEPARM
MIN      EQU   TIMEPARM+1
TSEC     EQU   TIMEPARM+2
SEC      EQU   TIMEPARM+3
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00047 EQU   IOSPCISC+4
@NM00046 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00045 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
@NM00078 EQU   @NM00076+6
@NM00077 EQU   @NM00076
@NM00075 EQU   CDS+10
@NM00074 EQU   CDSFLG
@NM00073 EQU   CDS+8
@NM00072 EQU   CDS+4
@NM00071 EQU   SNSFLDS
@NM00070 EQU   EVCSWST+3
EVCSWB1  EQU   EVCSW
@NM00069 EQU   EVFLDS+1
@NM00068 EQU   WAITLIST+2
@NM00067 EQU   WAITLIST
OCSWBYT  EQU   OCSW1+5
@NM00066 EQU   OCSWSTB
@NM00065 EQU   OCSWSTB
OCSWSTA  EQU   OCSWSTS
OCSWCC   EQU   OCSW
UNUSED   EQU   OECB+2
USEFLAGD EQU   USEFLAGS+3
USEFLAGC EQU   USEFLAGS+2
USEFLAGB EQU   USEFLAGS+1
@NM00064 EQU   USEFLAGA
PCIENTRY EQU   USEFLAGA
PURGED   EQU   USEFLAGA
INTRNLCB EQU   USEFLAGA
OLDTECB  EQU   USEFLAGA
ATTN     EQU   USEFLAGA
INUSE    EQU   USEFLAGA
TCCWPTR  EQU   USERCB+12
IODVTBPT EQU   USERCB+8
DEVEXPAN EQU   DEVTABMP+54
SAVMDMSK EQU   DEVTABMP+52
CDSEXTSG EQU   DEVTABMP+43
@NM00063 EQU   CDSFLAG2
@NM00062 EQU   CDSFLAG2
@NM00061 EQU   CDSFLAG2
@NM00060 EQU   CDSFLAG2
@NM00059 EQU   CDSFLAG2
@NM00058 EQU   CDSFLAG2
@NM00057 EQU   CDSFLAG2
CDSNOPRI EQU   CDSFLAG2
CDSLNCON EQU   CDSFLAG1
CDSREMDV EQU   CDSFLAG1
CDS2CHSW EQU   CDSFLAG1
CDSYMBLC EQU   CDSFLAG1
CDSEXMSK EQU   CDSFLAG1
CDSCEMNT EQU   CDSFLAG1
CDSSHRED EQU   CDSFLAG1
CDSFILPT EQU   CDSFLAG1
DEVCDSCT EQU   DEVTABMP+40
DEVUNTYP EQU   DEVDESCR+3
DEVCLASS EQU   DEVDESCR+2
DEVFEATR EQU   DEVDESCR+1
DEVMODEL EQU   DEVDESCR
DEVADDR  EQU   DEVAD+1
DEVCTRLU EQU   DEVAD+1
DEVCHANL EQU   DEVAD
@NM00056 EQU   DEVAD
DEVADPAD EQU   DEVHEXAD
DEVEXPOS EQU   DEVTABMP+31
DEVMODE  EQU   DEVTABMP+30
@NM00055 EQU   DEVTABMP+29
TAPELABL EQU   DEVTABMP+28
HIEXTHH  EQU   DEVHIEXT+4
HIEXTCC  EQU   DEVHIEXT+2
HIEXTBB  EQU   DEVHIEXT
LOEXTHH  EQU   DEVLOEXT+4
LOEXTCC  EQU   DEVLOEXT+2
LOEXTBB  EQU   DEVLOEXT
@NM00054 EQU   DEVFLAG4
@NM00053 EQU   DEVFLAG4
@NM00052 EQU   DEVFLAG4
@NM00051 EQU   DEVFLAG4
RESERVD2 EQU   DEVFLAG4
RESERVD1 EQU   DEVFLAG4
DEVREMEA EQU   DEVFLAG4
DEVREMDA EQU   DEVFLAG4
REISPEUD EQU   DEVFLAG3
DEVALC   EQU   DEVFLAG3
NOTEST   EQU   DEVFLAG3
TAPEBIT  EQU   DEVFLAG3
@NM00050 EQU   DEVFLAG3
@NM00049 EQU   DEVFLAG3
ANRNOTST EQU   DEVFLAG3
@NM00048 EQU   DEVFLAG2
STANDLBL EQU   DEVFLAG2
CEVOLUMN EQU   DEVFLAG2
SHARED   EQU   DEVFLAG2
DSNAME   EQU   DEVFLAG2
SYMBSSID EQU   DEVFLAG1
FILEPRT  EQU   DEVFLAG1
GRABED   EQU   DEVFLAG1
ALOCATED EQU   DEVFLAG1
DPDONE   EQU   DEVFLAG1
ONLINE   EQU   DEVFLAG1
DEVUCBAD EQU   DEVTABMP+8
DEVEBCAD EQU   DEVTABMP
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00044 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00043 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSNOTRS EQU   IOSDIEFG
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00041 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSCTCNR EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
DEVTAB   EQU   COMMAP+2020
THIRDMCT EQU   COMMAP+1812
NEXTMCT  EQU   COMMAP+1604
@NM00040 EQU   COMMAP+1596
VRSIZE   EQU   COMMAP+1592
CORERSLT EQU   COMMAP+1584
PGFXOLT  EQU   COMMAP+1576
PARTITEM EQU   COMMAP+1564
PGFXLIST EQU   COMMAP+1548
SYMPTR   EQU   COMMAP+1544
EXPAND1  EQU   COMMAP+1540
@NM00039 EQU   COMMAP+1538
ZUESUCB  EQU   COMMAP+1536
CESWTR3  EQU   COMMAP+1535
DPMSGREI EQU   CESWTR2
@NM00038 EQU   CESWTR2
OPTERR   EQU   CESWTR2
WAIT     EQU   CESWTR2
COMLOOP  EQU   CESWTR2
ONCOMM   EQU   CESWTR2
@NM00037 EQU   CESWTR2
REPLY00  EQU   CESWTR2
REIENTRY EQU   CESWTR1
EDOTMSG  EQU   CESWTR1
REMANS   EQU   CESWTR1
RETRIEVE EQU   CESWTR1
INFOMSG  EQU   CESWTR1
CECOMANS EQU   CESWTR1
EXECANS  EQU   CESWTR1
ILLRESP  EQU   CESWTR1
@NM00036 EQU   CESWTR
EXECOUT  EQU   CESWTR
IMRESP   EQU   CESWTR
TRANSMSG EQU   CESWTR
CENOMSG  EQU   CESWTR
REMONMSG EQU   CESWTR
REMERR   EQU   CESWTR
RETAINAC EQU   CESWTR
REIUCB   EQU   COMMAP+1528
RESPBUF  EQU   COMMAP+1524
TALKECB  EQU   COMMAP+1520
REIECB   EQU   COMMAP+1516
REIOBPTR EQU   COMMAP+1512
REIDCBPT EQU   COMMAP+1508
RINBUF   EQU   COMMAP+1504
RTALKBUF EQU   COMMAP+1500
MHRPTR   EQU   COMMAP+1496
ENDJOB   EQU   COMMAP+1492
MSGMOD   EQU   COMMAP+1488
RDCBPTR  EQU   COMMAP+1484
READDMOD EQU   COMMAP+1480
@NM00035 EQU   COMMAP+1477
READDSV  EQU   COMMAP+1471
CNT37    EQU   COMMAP+1470
DPLEVEL  EQU   COMMAP+1469
UNITUSE  EQU   COMMAP+1468
UNICTR   EQU   COMMAP+1467
SECTUSE  EQU   COMMAP+1466
DYNCOM   EQU   COMMAP+1465
TALKHERE EQU   CESWT8
SNEWRUN  EQU   CESWT8
SUTMSG   EQU   CESWT8
OLTINVV  EQU   CESWT8
READDCHK EQU   CESWT8
@NM00034 EQU   CESWT8
@NM00033 EQU   CESWT8
LISTFIX  EQU   CESWT8
GOTINPUT EQU   CESWT7
VIRTUAL  EQU   CESWT7
@NM00032 EQU   CESWT7
@NM00031 EQU   CESWT7
@NM00030 EQU   CESWT7
REMOTE   EQU   CESWT7
RETTO31  EQU   CESWT7
INCLST   EQU   CESWT7
RTSTAE   EQU   CESWT6
SECRUN   EQU   CESWT6
NORUN    EQU   CESWT6
CODE5    EQU   CESWT6
PFPMSG   EQU   CESWT6
EOFBIT   EQU   CESWT6
ATM      EQU   CESWT6
UTSCAL   EQU   CESWT6
PRNTOPTN EQU   CESWT5
SYMBFLG  EQU   CESWT5
PCEMSG   EQU   CESWT5
PFEMSG   EQU   CESWT5
FCEFLG   EQU   CESWT5
FFEFLG   EQU   CESWT5
RSLTFLG  EQU   CESWT5
HDRFLG   EQU   CESWT5
WTOFLG   EQU   CESWT4
RPLYFLG  EQU   CESWT4
WTORFLG  EQU   CESWT4
@NM00029 EQU   CESWT4
WRTFLG   EQU   CESWT4
WAITFLG  EQU   CESWT4
DPRFLG   EQU   CESWT4
RSTRFLG  EQU   CESWT4
NODP     EQU   CESWT3
CDEXIST  EQU   CESWT3
TP1419   EQU   CESWT3
SUSDEL   EQU   CESWT3
GRBCNTL  EQU   CESWT3
BYPDEV   EQU   CESWT3
BYPALDEV EQU   CESWT3
TALKVERB EQU   CESWT3
@NM00028 EQU   CESWT2
TAPEHDR  EQU   CESWT2
NDR      EQU   CESWT2
INITENT  EQU   CESWT2
@NM00027 EQU   CESWT2
FECOND   EQU   CESWT2
@NM00026 EQU   CESWT2
NDCFO    EQU   CESWT2
TPFLAG   EQU   CESWT1
ONLINEOK EQU   CESWT1
@NM00025 EQU   CESWT1
FILMSK   EQU   CESWT1
WAITFG   EQU   CESWT1
@NM00024 EQU   CESWT1
SKTST    EQU   CESWT1
RTNFLD   EQU   CESWT1
@NM00023 EQU   CESWT
FERINT   EQU   CESWT
REINT    EQU   CESWT
LEGALDEV EQU   CESWT
NUTS     EQU   CESWT
OUTS     EQU   CESWT
SECDEV   EQU   CESWT
LEGALTST EQU   CESWT
SAVENT   EQU   COMMAP+1452
@NM00022 EQU   COMMAP+1450
SAVECNT  EQU   COMMAP+1448
HRTSEL   EQU   COMMAP+1446
TLCOUNT  EQU   COMMAP+1444
TPSAVE   EQU   COMMAP+1440
MSGAD37  EQU   COMMAP+1436
REPLY37  EQU   COMMAP+1364
ECB37    EQU   COMMAP+1360
ADSVAREA EQU   COMMAP+1356
NEXTREC  EQU   COMMAP+1352
COMMINT  EQU   COMMAP+1348
REDEFINE EQU   COMMAP+1344
SECDVPTR EQU   COMMAP+1340
PRIDVPTR EQU   COMMAP+1336
DPRDEBAD EQU   COMMAP+1332
EXTBUF   EQU   COMMAP+1276
UTCOM    EQU   COMMAP+1212
ECB3     EQU   COMMAP+1208
TSTDEBAD EQU   COMMAP+1204
TUCBAD2  EQU   COMMAP+1200
TUCBAD1  EQU   COMMAP+1196
REGX     EQU   COMMAP+1192
PLKMOR   EQU   COMMAP+1176
SATAB    EQU   COMMAP+1164
SCHEDSA  EQU   COMMAP+1160
LOGADR   EQU   COMMAP+1156
@NM00021 EQU   OLTTAB+32
TAB28    EQU   OLTTAB+28
@NM00020 EQU   OLTTAB
@NM00019 EQU   WKSVC+8
@NM00018 EQU   WKSVC
MCT1ADR  EQU   COMMAP+1096
@NM00017 EQU   MCT+168
PARPRADR EQU   MCT+164
@NM00016 EQU   MCT
UTCOMAD  EQU   COMMAP+884
TABAD    EQU   COMMAP+880
DEVDEPAD EQU   COMMAP+876
PSCT     EQU   COMMAP+872
OPEN3    EQU   COMMAP+868
OPEN2    EQU   COMMAP+864
VERBCALL EQU   CESWT10
AFFNSET  EQU   CESWT10
MPSYS    EQU   CESWT10
@NM00015 EQU   CESWT9
VRCAP    EQU   CESWT9
RESTBENT EQU   CESWT9
CDSEQU   EQU   CESWT9
TABLNGTH EQU   COMMAP+860
XXXXXXXX EQU   COMMAP+712
CHARAFFN EQU   COMMAP+710
SELAFFN  EQU   COMMAP+708
@NM00014 EQU   @NM00013
PSUDPOST EQU   @NM00013
@NM00012 EQU   IOECB1+1
CMPLCODE EQU   CMPLT
WAITBIT  EQU   CMPLT
IOEFTRAD EQU   COMMAP+668
SEEKPTR  EQU   EFCTRCB+16
TECBPTRX EQU   EFCTRCB+12
SNSCNT   EQU   EFCTRCB+11
FILEMSK  EQU   EFCTRCB+10
@NM00011 EQU   FLGB
@NM00010 EQU   FLGB
@NM00009 EQU   FLGB
@NM00008 EQU   FLGB
OLDTECBX EQU   FLGB
VIRTCCWS EQU   FLGB
ATTNIN   EQU   FLGB
INTIRNAL EQU   FLGB
@NM00007 EQU   FLGA
@NM00006 EQU   FLGA
@NM00005 EQU   FLGA
@NM00004 EQU   FLGA
SPEXPOS  EQU   FLGA
GDP      EQU   FLGA
CEDEPOST EQU   FLGA
BYPASPFX EQU   FLGA
DVTPTR   EQU   EFCTRCB+4
CCWPTR   EQU   EFCTRCB
OECBX    EQU   OECBWRD1+2
OECBINCT EQU   OECBWRD1+1
OECBSNSC EQU   OECBWRD1
MODUSECB EQU   IOSCB+108
MODIOSB  EQU   IOSCB
DIEPTR   EQU   COMMAP+508
ABNMEXIT EQU   COMMAP+504
NORMEXIT EQU   COMMAP+500
PCIEXIT  EQU   COMMAP+496
SECLST   EQU   COMMAP+358
PGMTAB   EQU   COMMAP+350
DATIND   EQU   COMMAP+348
DATPTR   EQU   COMMAP+344
UTENT    EQU   COMMAP+340
SECPTR   EQU   COMMAP+336
PRTBUFR  EQU   COMMAP+212
INBUFR   EQU   COMMAP+140
INBUFPTR EQU   COMMAP+136
LGWRTCT  EQU   COMMAP+96
DOLT00PT EQU   COMMAP+92
@NM00003 EQU   CHASCT+78
CPUID    EQU   CHASCT+73
@NM00002 EQU   CHASCT+72
INITSW   EQU   MSSSTAT
DINITSW  EQU   MSSSTAT
FINITSW  EQU   MSSSTAT
@NM00001 EQU   CHASCT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00114 EQU   SET04
@RT00116 EQU   SETIMER
@RT00118 EQU   SET04
@RT00124 EQU   TECBCK
@RT00130 EQU   TECBCK
@RT00134 EQU   TECBCK
@RT00144 EQU   ACTVCK
@RT00149 EQU   PURGCK
@RT00151 EQU   OINCTCK
@RT00154 EQU   PURGRTN
@RT00156 EQU   WAITRTN
@RT00158 EQU   SET00A
@RT00166 EQU   PSTDCK
@RT00169 EQU   DONECK
@RT00173 EQU   CKCC1
@RT00177 EQU   CKCC2
@RT00179 EQU   PSTDCKA
@RT00182 EQU   PSTDCKA
@RT00185 EQU   SET08
@RT00187 EQU   SET00
@RT00189 EQU   SET00A
@RT00191 EQU   SET10
@RT00194 EQU   DONECK
@RT00200 EQU   PSTTECB
@RT00203 EQU   EVTCTCK
@RF00205 EQU   PSTDCK
@RT00220 EQU   DONECK
@RT00233 EQU   REALCCW
@RT00235 EQU   REALCCW
@RT00237 EQU   REALCCW
@RT00246 EQU   BUMPEVT
@RT00248 EQU   BUMPSNS
@RT00267 EQU   CKCC1W
@RT00270 EQU   CKCC2W
@RT00272 EQU   SETIMER
@RT00274 EQU   WAITRTN
@RT00278 EQU   SETIMER
@RT00280 EQU   WAITRTN
@RT00288 EQU   SET0C
@RT00294 EQU   SETSEC
@RF00298 EQU   BUMPM
@RT00356 EQU   SET00
@ENDDATA EQU   *
         END   IFDOLT36,(C'PLS2046',0701,77111)
