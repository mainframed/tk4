         TITLE ' RETAIN/370 MESSAGE HANDLER IFDOLT55'
         TITLE 'RETAIN/370 MESSAGE HANDLER IFDOLT55'
         LCLA  &T,&SPN                                            0002
.@001    ANOP                                                     0002
IFDOLT55 CSECT ,                                                  0002
         BC    15,24(0,@F)
         DC    C'IFDOLT55 15 APR 74'                             0002
         STM   @E,@C,12(@D)                                       0002
         BALR  @B,0                                               0002
@PSTART  DS    0H                                                 0002
         USING @PSTART+00000,@B                                   0002
         ST    @D,@SAV001+4                                       0002
         LA    @F,@SAV001                                         0002
         ST    @F,8(0,@D)                                         0002
         LR    @D,@F                                              0002
*         GEN(USING  CHASCT,2);
         USING  CHASCT,2
         DS    0H
*  GENERATE DATA;
*         DCL CCWWRIN CHAR(8) GENERATED;
*         DCL 1 WWRIN CHAR(8) BASED(ADDR(CCWWRIN)),
*              3 * CHAR(6),
*              3 DISP PTR(15);          /* CCW CHARACTER COUNT        *
*         DCL CCWWREOT CHAR(8) GENERATED;
*         DCL CCWRDI CHAR(8) GENERATED;
*         DCL CCWWRRSP CHAR(8) GENERATED;
*  GEN(EJECT);
         EJECT
         DS    0H
*  /*******************************************************************
*  /*              REGISTERS                                          *
*  /*******************************************************************
*         DCL R0 REG(0) PTR;
*         DCL R1 REG(1) PTR;
*         DCL R2 REG(2) PTR;
*         DCL R3 REG(3);
*         DCL R4 REG(4);
*         DCL R5 REG(5);
*         DCL R6 REG(6);
*         DCL R7 REG(7);
*         DCL R8 REG(8) PTR;
*         DCL R9 REG(9);
*         DCL R10 REG(10);
*         DCL R11 REG(11);
*         DCL R12 REG(12);
*         DCL R13 REG(13);
*         DCL R14 REG(14);
*         DCL R15 REG(15);
*         RESTRICT (2,3,4,5,6,7,8,9);
*         DCL R1SAVE PTR;               /* REG 1 SAVE AREA            *
*  /*******************************************************************
*  /* LABELS AND POINTERS FOR INDIRECT ADDRESSING OF THE FREE PWTOR   *
*  /* SECTION AND THE EXCP SECTION                                    *
*  /*******************************************************************
*         DCL OUTSTD LABEL;             /* OUTSTANDING PWTOR'S        *
*         DCL RPLIMD LABEL;             /* IMMEDIATE PWTOR'S          *
*         DCL FREEPTR PTR;              /* RETURN AREA POINTER        *
*         DCL FREERTRN LABEL BASED(FREEPTR); /*RETURN LABEL           *
*  /*                                                                 *
*         DCL AA LABEL;                  /* RETURN LABEL              *
*         DCL BB LABEL;                  /* RETURN LABEL              *
*         DCL CONTEN LABEL;             /* RETURN LABEL               *
*         DCL EXCPPTR PTR;               /* RETURN LABEL POINTER      *
*         DCL EXCPRTRN LABEL BASED(EXCPPTR); /* ADDR OF RETURN LABEL  *
*  /*******************************************************************
*  /*                RETAIN/370 IOB                                   *
*  /*******************************************************************
*         GEN(ENTRY REIOB);
         ENTRY REIOB
         DS    0H
*         DCL 1 REIOB CHAR(52) BDY(WORD), /* IOB                      *
*             2 REIOB1 CHAR(32),
*              3 FLAGS BIT(8),
*               5 DCH BIT(1),           /* DATA CHAINING              *
*               5 CCH BIT(1),           /* COMMAND CHAINING           *
*               5 * BIT(6),             /*                            *
*              3 * BIT(24),             /*                            *
*              3 ECBC BIT(8),           /* ECB CODE                   *
*              3 ECBA PTR(24),          /* ECB ADDRESS                *
*              3 CSW BIT(64),           /* CSW                        *
*               5 * BIT(32),            /*                            *
*               5 CEDEUE BIT(8),        /*                            *
*                7 CE BIT(1),           /* CHANNEL END BIT            *
*                7 DE BIT(1),           /* DEVICE  END BIT            *
*                7 * BIT(1),            /*                            *
*                7 UE BIT(1),           /* UNIT EXCEPTION BIT         *
*                7 * BIT(4),            /*                            *
*               5 * BIT(24),            /*                            *
*              3 * BIT(8),              /*                            *
*              3 CPA PTR(24),           /* CHANNEL PROGRAM ADDRESS    *
*              3 * BIT(8),              /*                            *
*              3 DCBA PTR(24),          /* DCB ADDRESS                *
*              3 * BIT(8),
*              3 * CHAR(8),
*             2 ERPWORK PTR(31) INIT(ADDR(CCWWORK)),  /* ERP WORK AREA*
*             2 EOTRESP PTR(31) INIT(ADDR(EOT)), /*PTR TO END OF TRANS*
*             2 NEGRESP PTR(31) INIT(ADDR(NEG)), /*PTR TO NEGATIVE RSP*
*             2 REMINPTR PTR(31) INIT(ADDR(REMINBUF)); /*IN BUFFER PTR*
*  /*******************************************************************
*  /* ERP'S CCW WORK AREA                                             *
*  /*******************************************************************
*       DCL 1 CCWWORK CHAR(48) BDY(DWORD),   /*                  M4502*
*            2 CCWS(6) CHAR(8) INIT((6)'0000000000000000'X);   /*M4502*
*  /*******************************************************************
*  /*     RETAIN/370 DCB                                              *
*  /*******************************************************************
*         GEN(ENTRY REIDCB);
         ENTRY REIDCB
         DS    0H
*         DCL 1 REIDCB BDY(WORD),
*               3 *(18) FIXED INIT((18)0),   /*                  M4502*
*               3 *(5) FIXED,                /*                  M4502*
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502*
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502*
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502*
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502*
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502*
*               3 RETRN CHAR(2) INIT('07FE'X); /*                M4502*
*  /*******************************************************************
*  /*     RETAIN/370 UCB                                              *
*  /*******************************************************************
*         DCL REIUCB PTR GENERATED;     /* UCB                        *
*  /*******************************************************************
*  /*  E B C D I C  TO  TRANSMISSION CODE TRANSLATE TABLE             *
*  /*******************************************************************
*  DECLARE               /* 0 1 2 3 4 5 6 7 8 9 A B C D E F           *
*  OUTTBL  BIT(128)  INIT('81E2E4E7E8EBEDEEF0F3A0768493E187'X),  /* C *
*  OUTTBL1 BIT(128)  INIT('61C3C5C6C9CACCCFD1D2D757909587F6'X),  /* D *
*  OUTTBL2 BIT(128)  INIT('4023A5A6A9AAACAFB1B281378BC08EA3'X),  /* E *
*  OUTTBL3 BIT(128)  INIT('15020407080B0D0E10138816208D8296'X);  /* F *
*  /*******************************************************************
*  /*  TRANSMISSION CODE TO E B C D I C  TRANSLATE TABLE              *
*  /*******************************************************************
*  DECLARE
*   INTBL  CHAR(16)  INIT(' 1234567890#    '),
*   INTBL1 CHAR(16)  INIT('@/STUVWXYZ ,    '),
*   INTBL2 CHAR(16)  INIT('-JKLMNOPQR $    '),
*   INTBL3 CHAR(16)  INIT('&ABCDEFGHI .    '),
*   INTBL4 CHAR(16)  INIT(' =<;:% >*()"    '),
*   INTBL5 CHAR(16)  INIT(' ?STUVWXYZ ×    '),
*   INTBL6 CHAR(16)  INIT('_JKLMNOPQR      '),
*   INTBL7 CHAR(16)  INIT('+ABCDEFGHI ^    ');
*  /*******************************************************************
*  /* DEDICATED BUFFER FOR ONSITE TO REMOTE COMMUNICATIONS            *
*  /*******************************************************************
*         GEN(ENTRY DEDBUF);
         ENTRY DEDBUF
         DS    0H
*         DCL DEDBUF CHAR(72) BDY(WORD) INIT((72)'40'X);
*  /*******************************************************************
*  /* BUFFER FOR RECEIVING IMMEDIATE RESPONSES FROM REMOTE            *
*  /*******************************************************************
*         DCL   RESPBUF PTR GENERATED;
*         DCL 1 RSPBUF CHAR(4) BASED(ADDR(RESPBUF)),
*              3 RSPCNT CHAR(1),
*              3 RSPADR CHAR(3);
*  /*******************************************************************
*  /*     REMOTE ECB                                                  *
*  /*******************************************************************
*         DCL   REIECB FIXED GENERATED; /* REMOTE ECB                 *
*         DCL 1 RECB FIXED BASED(ADDR(REIECB)), /* REMOTE ECB         *
*              3 COMPCODE BIT(8),               /* COMPLETION CODE    *
*              3 * BIT(24);
*  /*******************************************************************
*  /* BUFFER FOR OUTPUTTING MESSAGES TO REMOTE                        *
*  /*******************************************************************
*         DCL 1 ROUTBUF CHAR(130) BDY(WORD), /*OUTPUT BUFFER     M1373*
*              3 EOA CHAR(1) INIT('16'X),       /* END OF ADDRESS     *
*              3 OUTTEXT CHAR(125);          /*TEXT              M1373*
*  /*******************************************************************
*  /* FOLLOWING IS THE '*0X '  IN TRANSMISSION CODE,TO BE ATTACHED    *
*  /* TO MESSAGES REQUIRING A REPLY.'X'WILL CONTAIN THE CODE (0-4)    *
*  /*******************************************************************
*         DCL 1 SENDCODE CHAR(4) INIT('90158181'X),  /*ATTACHED TO    *
*                                       /*                       M4502*
*              3 * CHAR(2),                     /* REPLY TYPE MESSAGES*
*                                       /*                       M4502*
*              3 SCD CHAR(1),                   /* REPLY CODE         *
*              3 * CHAR(1);
*  /*******************************************************************
*  /* 2955 LINE CONTROL CHARACTERS                                    *
*  /*******************************************************************
*  /*                                                                 *
*         DCL EOT CHAR(1) INIT('1F'X);  /* END OF TRANS      X02008*/
*         DCL POS CHAR(1) INIT('76'X);  /* POSITIVE RESPONSE   X02008
*         DCL NEG CHAR(1) INIT('40'X);  /* NEGATIVE RESPONSE   X02008
*  /*******************************************************************
*  /* MESSAGE FOR REMOTE INDICATING ILLEGAL REPLY CODE                *
*  /*******************************************************************
*         DCL 1 ILLRPL CHAR(29) BDY(WORD)  /* MSG FOR REMOTE INDICAT- *
*                                        /*                      M5049*
*         INIT('IFD173I REPLY    NOT VERIFIED'), /* ING ILLEGAL  M5049*
*               5 * CHAR(14),            /* REPLY CODE           M5049*
*              5 ILRC CHAR(2),
*              5 * CHAR(13);
*
*         /*    PURGE PARAMETER LIST FOR SVC 16                 Y02008*
*
*         DCL 1 PURGELST CHAR(16) BDY(WORD), /* PURGE PARMLST   Y02008*
*           3 PPLDSID CHAR(4),         /* DSID INFORMATION      Y02008*
*             5 PPLOPT1 CHAR(1) INIT('E4'X),  /* OPTION BYTE    Y02008*
*             5 PPLDSIDA PTR(24),      /* ADDR OF REI DEB       Y02008*
*           3 * CHAR(12);              /* N A                   Y02008*
*
*
*  /*******************************************************************
*  /* ON-SITE ECBS ASSOCIATED WITH OUTSTANDING OLT AND OLTEP MESSAGES *
*  /* ALSO BUFFERS AND COUNTS ASSOCIATED WITH SAME                    *
*  /*******************************************************************
*         DCL   ECB3 FIXED GENERATED;              /*ECB FOR OUTSTAND-*
*         DCL 1 RECB3 FIXED BASED(ADDR(ECB3)),     /*ING OLTEP MESSAGE*
*              2 ECB3C CHAR(1),          /* COMPLETION CODE           *
*              2 * CHAR(3);              /* NA                        *
*         DCL   DYNCOM CHAR(1) GENERATED;          /*BUFFER FOR SAME  *
*         DCL   RDYNCOM CHAR(1) BASED(ADDR(DYNCOM));
*  /*                                                                 *
*         DCL   ECB37 FIXED GENERATED;             /*ECB FOR OUTSTAND-*
*         DCL 1 RECB37 FIXED BASED(ADDR(ECB37)),   /*ING CECOM MESSAGE*
*              2 ECB37C CHAR(1),         /* COMPLETION CODE           *
*              2 * CHAR(3);             /* NA                         *
*         DCL   REPLY37 CHAR(72)  GENERATED;       /*BUFFER FOR SAME  *
*         DCL   RREPLY37 CHAR(72)  BASED(ADDR(REPLY37));
*         DCL   CNT37 CHAR(1) GENERATED;           /*BYTE COUNT FOR   *
*         DCL   RCNT37 CHAR(1) BASED(ADDR(CNT37)); /* SAME            *
*  /*                                                                 *
*         DCL 1 ECB01 FIXED BASED(R1SAVE), /*ECB FOR LOCAL D/T/O/ MSG *
*              2 ECB01C CHAR(1),         /* COMPLETION CODE           *
*              2 * CHAR(3);              /* NA                        *
*  /*******************************************************************
*  /* SVC 59 CALLING SEQUENCE FOR FREEING OUTSTANDING LOCAL ECBS      *
*  /*******************************************************************
*         DCL   WKSVC PTR GENERATED;
*         DCL   ROPT CHAR(8)  GENERATED;
*         DCL  1 * BASED(ADDR(ROPT)),              /*SVC 59 CALLING   *
*               3 ROPT4 PTR,                       /* SEQUENCE        *
*               3 ROPT8 PTR;
*         DCL   MODID BASED(ADDR(WKSVC));
*         DCL   MSGMOD PTR GENERATED;    /* MESSAGE MODULE ADDRESS    *
*         DCL 1 * BASED(MSGMOD),
*               3 *(19) PTR(31),         /* SPACE TO APPROPRIATE MSGS.*
*               3 WTORANS  PTR(31);      /*REMOTE HAS RESPONDED TO MSG*
*         DCL 1 * BASED(WTORANS),        /*REMOTE HAS RESPONDED TO XX *
*               3 * CHAR(4),            /* USED BY WTO                *
*               3 * CHAR(16),            /*                           *
*               3 MID CHAR(2);           /* MESSAGE ID FOR ANSWERED   *
*                                        /* MESSAGE.                  *
*         DCL 1 WKWDID CHAR(4) BDY(WORD),/* RETURN ID WORK AREA       *
*               3 * CHAR(2),             /*                           *
*               3 DUMID CHAR(2);         /* SYSTEM ASSIGNED ID        *
*  /*******************************************************************
*  /* STIMER MACRO CALLING SEQUENCE                                   *
*  /*******************************************************************
*         DCL TIMEOUT PTR GENERATED;
*         DCL SAVE2(18) FIXED;          /* TIMEOUT SAVEAREA           *
*         DCL TIME10 CHAR(8) BDY(DWORD) /* TEN MINUTES ON WAIT        *
*           INIT('F0F0F1F0F0F0F0C0'X);
*  /*******************************************************************
*  /* REMOTE INPUT BUFFER AND SETUP FOR WTO                           *
*  /*******************************************************************
*         GEN(ENTRY REMINBUF);
         ENTRY REMINBUF
         DS    0H
*         DCL 1 WTOBUF CHAR(130) BDY(WORD),  /* WRITE TO OP  X02008   *
*              2 WTOCNT CHAR(2),        /* WTO COUNT                  *
*              2 WTOFLG BIT(16) INIT('1000000000000000'B),/* WTO FLAGS*
*              2 MSGID CHAR(122),       /* MSG ID            X02008   *
*               3 * CHAR(2),            /* NA                         *
*               3 REMINBUF CHAR(120),   /* REMOTE IN BUF     X02008   *
*                5 REPLY CHAR(4),       /* REPLY CODE R XX            *
*                 7 * CHAR(3),          /* R X PORTION                *
*                 7 CODE CHAR(1),       /* X PORTION                  *
*                5 * CHAR(2),           /* COMMA AND APOSTROPHE       *
*                5 INTEXT CHAR(72),     /* MESSAGE TEXT               *
*              2 RTEDSC CHAR(4) INIT('02000040'X); /* RTE&DSC CODES   *
*  /*                                                                 *
*         DCL WTOID CHAR(8) INIT('IFD255I '); /*COMMUNICATION MSG ID  *
*  /*                                                                 *
*         DCL 1 WRKCNT CHAR(4) BDY(WORD), /* WTO COUNT WORK AREA      *
*              3 * CHAR(2),             /* NA                         *
*              3 COUNT CHAR(2);         /*  WTO COUNT                 *
*  /*******************************************************************
*  /* COMMON AREA AND COMMON AREA SWITCHES FOR RETAIN                 *
*  /*******************************************************************
*         DCL   CHASCT CHAR(116) GENERATED;
*  /*                                                                 *
*         DCL   CESWTR BIT(8) GENERATED; /* RETAIN SWITCHES           *
*         DCL 1 SWTR BIT(8) BASED(ADDR(CESWTR)),
*              3 RETAINAC BIT(1),   /* INTERFACE ACTIVE      N/A      *
*              3 REMERR BIT(1),     /* PERMANENT ERROR                *
*              3 REMNOMSG BIT(1),   /* DATA PROTECTION       N/A      *
*              3 CENOMSG BIT(1),    /* CE DOES NOT GET MSG            *
*              3 PRTNOMSG BIT(1),   /* MSG. NOT PRINTED               *
*              3 IMRESP BIT(1),     /* IMMEDIATE RESPONSE MSG. ISSUED *
*              3 EXECOUT BIT(1),    /* FORCE COMMUNICATIONS MSG.ISSUED*
*              3 CECOMOUT BIT(1);   /* OUTSTANDING MSG. ISSUED        *
*  /*                                                                 *
*         DCL   CESWTR1 BIT(8) GENERATED; /*RETAIN SWITCHES           *
*         DCL 1 SWTR1 BIT(8) BASED(ADDR(CESWTR1)),
*              3 ILLRESP BIT(1),    /* ILLEGAL RESPONSE               *
*              3 EXECANS BIT(1),    /* FORCE COMMUNICATION RESPONSE   *
*              3 CECOMANS BIT(1),   /* OUSTANDING MSG. RESPONSE       *
*              3 INFOMSG BIT(1),    /* 'TALK' RESPONSE                *
*              3 RETRIEVE BIT(1),   /* 1=RETRIEVE MSG, 0=SEND MSG     *
*              3 REMANS BIT(1),     /*                                *
*              3 EDTOMSG BIT(1),
*              3 MSGHND BIT(1);         /* IFDOLT55 IN CONTROL SWTCH  *
*  /*                                                                 *
*         DCL   CESWTR2 BIT(8) GENERATED;    /* RETAIN SWITCHES       *
*         DCL 1 SWTR2 BIT(8) BASED(ADDR(CESWTR2)),
*              3 REPLY00 BIT(1),             /*TYPE OF MSG=DEV/TEST/OP*
*              3 REPLY02 BIT(1),             /*TYPE OF MSG=OUTST CECOM*
*              3 ONCOMM BIT(1),             /*ONSITE WILL ANSWER D/T/O*
*              3 COMMLOOP BIT(1),        /*E D/T/O/ MSG NO REPLY CODE *
*              3 WAIT3 BIT(1),          /* N/A               X02008   *
*              3 OPTERR BIT(1),         /* N/A               X02008   *
*              3 PRTONLY BIT(1),        /* PRINT ONLY FLG    X02008   *
*              3 DPMSG BIT(1);     /*DP MESSAGE FLAG            X02008*
*  /*                                                                 *
*         DCL PRTBUFR CHAR(120) GENERATED;         /* PRINT BUFFER    *
*  /*                                                                 *
*         DCL 1 SWTSAVE BIT(8),         /* SWITCH SAVE AREA      M4502*
*              2 SWT1 BIT(1),           /*                       M4502*
*              2 SWT2 BIT(1),           /*                       M4502*
*              2 SWT3 BIT(1),           /*                       M4502*
*              2 SWT4 BIT(1),           /*                       M4502*
*              2 SWT5 BIT(1),           /*                       M4502*
*              2 SWT6 BIT(1),           /*                       M4502*
*              2 SWT7 BIT(1),           /*                       M4502*
*              2 SWT8 BIT(1);           /*                       M4502*
*
*
*         /************************************************************
*         /*  ADDRESS OF CVT
*         DCL CVTADPTR PTR INIT(16);
*         DCL CVTADDR PTR BASED(CVTADPTR);
*         DCL   1 CVT BASED(CVTADDR),    /* CVT
*                3 * CHAR(40),
*                3 CVTILK2 PTR,          /* PTR TO UCB LOOKUP TABLE  */
*                3 * CHAR(284),          /* N.A. IN CVT         X03008*
*                3 CVTEXT2 PTR;          /* PTR TO CVT EXTENSIONX03008*
*         DCL CVTOLTEP BASED(CVTEXT2+28) PTR; /* OLTEP PTR,CVT  X03008*
*         DCL 1 OLTEPTAB CHAR(24) BASED(CVTOLTEP), /* OLTEP TAB X03008*
*                3 DIEHEAD CHAR(4),     /* HEAD OF DIE MODULE   Y02008*
*                3 REIDEBAD PTR,        /* PTR OLTEPS REI DEB   Y02008*
*                3 * CHAR(20),          /* PTRS FOR DIE USE     Y02008*
*                3 OLTEPUCB PTR,        /* OLTEP UCBS FOR TEST  X03008*
*                3 REIUCBAD PTR,        /* DEV UCB ADDRESS      X03008*
*                3 * CHAR(4),           /* N A                  Y02008*
*                3 IOSGENTBL (18) FIXED;/* IOS WORK AREA        X03008*
*  /*******************************************************************
*  /* DETERMINE IF SEND OR RECEIVE OPERATION                          *
*  /*******************************************************************
*         R1SAVE=R1;                    /* SAVE REG 1                 *
         ST    @1,R1SAVE                                          0100
*         GEN(TTIMER CANCEL);           /* CANCEL TIMER               *
         TTIMER CANCEL
         DS    0H
*         MSGHND='1'B;                  /*SET IFDOLT55 IN CTRL SWT ON *
         OI    SWTR1,B'00000001'                                  0102
*         SWTSAVE=CESWTR;               /* SAVE SWITCHES         M5049*
         MVC   SWTSAVE(1),CESWTR                                  0103
*         IF RETRIEVE='1'B THEN GOTO RECEIVE;/* GO IF RECIEVE OPER.   *
         TM    SWTR1,B'00001000'                                  0104
         BC    01,RECEIVE                                         0105
*
*         PPLDSIDA=REIDEBAD;            /* ADDRESS DEB FOR CHKS Y02008*
         L     @1,CVTADPTR                                        0106
         L     @1,0(0,@1)          CVTADDR                        0106
         L     @1,328(0,@1)        CVT                            0106
         L     @1,28(0,@1)         CVTOLTEP                       0106
         MVC   PURGELST+1(3),5(@1)                                0106
*         R1=ADDR(PURGELST);       /* ADDRESS PURGE PARM LIST   Y02008*
         LA    @1,PURGELST                                        0107
*         GEN;                     /* PURGE READ INIT. CHANNEL PROG   *
HIORDINT SVC   16                 * HIO ON READ INITIAL CHANNEL PROG
         DS    0H
*         R7=ADDR(PRTBUFR)+1;           /* GET ADDRESS OF MESSAGE     *
         LA    @7,PRTBUFR+1                                       0109
*  /*******************************************************************
*  /* DETERMINE REPLY CODE TO ATTACH TO MESSAGE                       *
*  /*******************************************************************
*  CHKRPL:R6 = ADDR(OUTTEXT);       /* ADDRESS OF OUTPUT BUFFER       *
CHKRPL   LA    @6,ROUTBUF+1                                       0110
*         IF REMANS = '0'B THEN GOTO CHKRP1;/*ONSITE WILL ANSWER      *
         TM    SWTR1,B'00000100'                                  0111
         BC    08,CHKRP1                                          0112
*         IF COMMLOOP='1'B THEN GOTO CHKRP1; /* COMM   MSG NO REPLY CD*
         TM    SWTR2,B'00010000'                                  0113
         BC    01,CHKRP1                                          0114
*         IF DPMSG='1'B THEN       /*IS THIS A DP MESSAGE       X02008*
         TM    SWTR2,B'00000001'                                  0115
*           GOTO CHKRP1;           /* YES                       X02008*
         BC    01,CHKRP1                                          0116
*         IF REPLY00 = '1'B THEN    /* TO FORCE COMMUNICATIONS MSG ?  *
         TM    SWTR2,B'10000000'                                  0117
         BC    12,@9FF                                            0117
*                                       /*                       M4502*
*           DO;                     /* YES                       M4502*
*         SCD = '15'X;                  /* REPLY CODE = 0 ADDAPTER CD *
         MVI   SENDCODE+2,X'15'                                   0119
*                                       /*                       M4502*
*         GOTO BCDCN;               /* CONVERT IT                M4502*
         BC    15,BCDCN                                           0120
*         END;                          /*                       M4502*
*           ELSE;                       /*                       M4502*
@9FF     EQU   *                                                  0122
*         IF ONCOMM='1'B THEN GOTO CHKRP1; /*ONSITE WILL ANSWER D/T/O/*
@9FE     TM    SWTR2,B'00100000'                                  0123
         BC    01,CHKRP1                                          0124
*         IF EDTOMSG = '1'B THEN        /*ENTER D/T/O MSG ?      M5049*
         TM    SWTR1,B'00000010'                                  0125
         BC    12,@9FD                                            0125
*           DO;                         /* YES                   M5049*
*         SCD = '02'X;                  /* REPLY CODE = 1 ADDAPTER CD *
         MVI   SENDCODE+2,X'02'                                   0127
*         GOTO BCDCN;               /* CONVERT IT                     *
         BC    15,BCDCN                                           0128
*         END;
*           ELSE;
@9FD     EQU   *                                                  0130
*         IF IMRESP = '1'B THEN     /* IMMEDIATE RESPONSE MESSAGE     *
@9FC     TM    SWTR,B'00000100'                                   0131
         BC    12,@9FB                                            0131
*           DO;                     /* YES                            *
*         SCD = '08'X;                  /* REPLY CODE = 4 ADDAPTER CD *
         MVI   SENDCODE+2,X'08'                                   0133
*         GOTO BCDCN;               /* CONVERT IT                     *
         BC    15,BCDCN                                           0134
*         END;
*           ELSE;
@9FB     EQU   *                                                  0136
*         IF REPLY02 = '1'B THEN    /* OUTSTANDING OLT MESSAGE ?      *
@9FA     TM    SWTR2,B'01000000'                                  0137
         BC    12,@9F9                                            0137
*           DO;                     /* YES                            *
*         SCD = '04'X;                  /* REPLY CODE = 2 ADDAPTER CD *
         MVI   SENDCODE+2,X'04'                                   0139
*         GOTO  BCDCN;              /* CONVERT IT                     *
         BC    15,BCDCN                                           0140
*         END;
*           ELSE;
@9F9     EQU   *                                                  0142
*  CHKRP1:R8=1;                         /* NO REPLY CODE TO ATTACH    *
@9F8     EQU   *                                                  0143
CHKRP1   LA    @8,1                                               0143
*                                       /*                       M4502*
*         GEN(MVI  OUTTEXT,X'81');      /* MOVE IN BLANK FOR OFFSET   *
         MVI  OUTTEXT,X'81'
         DS    0H
*                                       /*                       M4502*
*         GOTO BCDCN1;                  /* CONVERT MESSAGE            *
         BC    15,BCDCN1                                          0145
*  /*******************************************************************
*  /* MOVE REPLY CODE ON MESSAGE AND CONVERT MESSAGE TO TRANS CODE    *
*  /*******************************************************************
*   BCDCN:OUTTEXT(1:4) = SENDCODE(1:4); /* MOVE REPLY CODE ON MESSAGE *
BCDCN    MVC   ROUTBUF+1(4),SENDCODE                              0146
*                                       /*                       M4502*
*         R8=4;                         /* DISPLACMENT FOR REPLY CODE *
         LA    @8,4                                               0147
*                                       /*                       M4502*
*  BCDCN1:R6=R6+R8;                     /* ADD DISPLACEMENT TO ADDR   *
BCDCN1   AR    @6,@8                                              0148
*         R1=R1SAVE;                    /* RESTORE REG 1              *
         L     @1,R1SAVE                                          0149
*         IF R1 > 120 THEN R1 = 120;    /* MAX OF 120 CHARS ALLOWED   *
         CH    @1,@D1                                             0150
         BC    12,@9F7                                            0150
         LA    @1,120                                             0151
*         R3=R1-1;                      /* MINUS 1 FOR EXECUTE        *
@9F7     LH    @3,@D2                                             0152
         AR    @3,@1                                              0152
*         GEN;
         MVI   0(R6),X'3F'              MOVE TO FIRST BYTE IN OUTPUT
         EX    R3,BCDCN2                * PROPAGATE IT
         EX    R3,BCDCN3                * AND OFF 0&1 BITS FROM INPUT
         EX    R3,BCDCN4                * TRANSLATE TO TRANS  CODE
         B     BCDCN5                   * SET UP TO SEND MESSAGE
BCDCN2   MVC   1(0,R6),0(R6)           * PROPAGATE
BCDCN3   NC    0(0,R6),0(R7)           * AND OFF 0&1 BITS
BCDCN4   TR    0(0,R6),OUTTBL          * TRANSLATE
         DS    0H
*  BCDCN5:R8=R8+R1+1;                   /* 1ST BYTE FOLLOWING DATA    *
BCDCN5   LA    @F,1                                               0154
         AR    @F,@1                                              0154
         AR    @8,@F                                              0154
*         OUTTEXT(R8)='3D'X;            /*MOVE EOB ON MSG        M1373*
         LR    @1,@8                                              0155
         LA    @A,ROUTBUF(@1)                                     0155
         MVI   0(@A),X'3D'                                        0155
*         DISP=R8+1;                    /*ADD EOA CCW CNT    X02008
         LA    @F,1                                               0156
         AR    @F,@8                                              0156
         ST    @F,@TEMP4                                          0156
         MVC   WWRIN+6(2),@TEMP4+2                                0156
*  /*******************************************************************
*  /* WRITE MESSAGE AND                                               *
*  /* BRING READ INITIAL BACK UP                                      *
*  /*******************************************************************
*         REIOB1=REIOB1&&REIOB1;        /* INITIALIZE IOB             *
         XC    REIOB(32),REIOB                                    0157
*         RECB=0;                       /* AND THE ECB                *
         SR    @F,@F                                              0158
         ST    @F,RECB                                            0158
*         FLAGS='42'X;                  /* INDICATE CCW CHAINING      *
         MVI   REIOB,X'42'                                        0159
*         CPA=ADDR(CCWWRIN);            /* WRITE INITIAL              *
         LA    @F,CCWWRIN                                         0160
         ST    @F,@TEMP4                                          0160
         MVC   REIOB+17(3),@TEMP4+1                               0160
*         EXCPPTR=ADDR(AA);              /* RETURN TO ADDRESS         *
         LA    @F,AA                                              0161
         ST    @F,EXCPPTR                                         0161
*         GOTO CPINIT;                   /* EXCP                      *
         BC    15,CPINIT                                          0162
*      AA:CPA=ADDR(CCWWREOT);           /* WRITE EOT                  *
AA       LA    @F,CCWWREOT                                        0163
         ST    @F,@TEMP4                                          0163
         MVC   REIOB+17(3),@TEMP4+1                               0163
*         FLAGS='42'X;               /* UNRELATED,CMND-CHN CCWS Y02008*
         MVI   REIOB,X'42'                                        0164
*         EXCPPTR=ADDR(CONTEN);         /* RETURN TO ADDRESS          *
         LA    @F,CONTEN                                          0165
         ST    @F,EXCPPTR                                         0165
*         GOTO CPINIT;                   /* EXCP                      *
         BC    15,CPINIT                                          0166
*  CONTEN:CPA=ADDR(CCWRDI);             /* READ INITIAL               *
CONTEN   LA    @F,CCWRDI                                          0167
         ST    @F,@TEMP4                                          0167
         MVC   REIOB+17(3),@TEMP4+1                               0167
*         FLAGS='42'X;                  /*INDICATE CCW CHAINING       *
         MVI   REIOB,X'42'                                        0168
*         ECBA = ADDR(RECB);            /* ADDRESS OF ECB INTO IOB    *
         LA    @F,RECB                                            0169
         ST    @F,@TEMP4                                          0169
         MVC   REIOB+5(3),@TEMP4+1                                0169
*         DCBA = ADDR(REIDCB);          /* LIKEWISE THE DCB ADDR      *
         LA    @F,REIDCB                                          0170
         ST    @F,@TEMP4                                          0170
         MVC   REIOB+21(3),@TEMP4+1                               0170
*         GEN;
RDINITRS EXCP  REIOB
STRTCLOK STIMER REAL,TIMEOUT,DINTVL=TIME10
         DS    0H
*    FINI:IF SWT3='1'B THEN REMNOMSG='1'B; /* RESTORE REMNOMSG SWT    *
FINI     TM    SWTSAVE,B'00100000'                                0172
         BC    12,@9F6                                            0172
         OI    SWTR,B'00100000'                                   0173
*                                       /*                       M4502*
*         MSGHND='0'B;                  /* TURN OFF '55' IN CONTROL SW*
@9F6     NI    SWTR1,B'11111110'                                  0174
*                                       /*                       M4502*
*         RETURN;
         BC    15,@EL01                                           0175
*  /*******************************************************************
*  /* RECEIVE OPERATION,TRANSLATE REMOTE RESPONSE                     *
*  /*******************************************************************
*  RECEIVE:IF COMPCODE^='7F'X THEN GOTO ERROR; /*ERROR ON READ?       *
RECEIVE  CLI   RECB,X'7F'                                         0176
         BC    07,ERROR                                           0177
*         R3=0;                         /* ZERO REG                   *
         SR    @3,@3                                              0178
*         R5=120;                       /* TOTAL SIZE        X02008   *
         LA    @5,120                                             0179
*         R4=ADDR(REMINBUF);            /* ADDRESS OF INPUT AND OUTPUT*
         LA    @4,WTOBUF+6                                        0180
*         R4=R4+R5-1;                   /* END OF BUFFER ADDRESS      *
         LH    @F,@D2                                             0181
         AR    @F,@5                                              0181
         AR    @4,@F                                              0181
*         GEN;
SHIFT1   IC    R3,0(R4)                 * GET A CHARACTER
         SRL   R3,1                     * SHIFT OFF 'C' BIT
         STC   R3,0(R4)                 * PUT IT BACK
         BCTR  R4,0                     * DECREMENT DATA ADDRESS
         BCT   R5,SHIFT1                * DECR COUNT,LOOP TILL DONE
         DS    0H
*         GEN(TR    REMINBUF(120),INTBL); /*TRANS MSG        X02008   *
         TR    REMINBUF(120),INTBL
         DS    0H
*  /*******************************************************************
*  /* THE FOLLOWING CHECKS THE REPLY CODE AND DETERMINES LEGALITY     *
*  /* AS WELL AS PERFORMING ANY PRELIMINARY FUNCTIONS                 *
*  /*******************************************************************
*         IF REMINBUF(1)='7B'X THEN     /* CHECK FOR EOA CHAR IN      *
         CLI   WTOBUF+6,X'7B'                                     0184
         BC    07,@9F5                                            0184
*                                       /*                       M4502*
*           REMINBUF(1:119)=REMINBUF(2:120); /*ADJUST MSG    X02008   *
         MVC   WTOBUF+6(119),WTOBUF+7                             0185
*         IF REMINBUF(1)='@' THEN            /* PRINT ONLY?  X02008   *
@9F5     CLI   WTOBUF+6,C'@'                                      0186
         BC    07,@9F4                                            0186
*           DO;                              /* YES          X02008   *
*              WTOBUF(5:124)=REMINBUF(1:120);/* MOVE TO PRT  X02008   *
         MVC   WTOBUF+4(120),WTOBUF+6                             0188
*              WTOBUF(125:128)=RTEDSC(1:4);  /* RTE&DSC      X02008   *
         MVC   WTOBUF+124(4),WTOBUF+126                           0189
*              INFOMSG='1'B;                 /*INFO MSG      X02008   *
         OI    SWTR1,B'00010000'                                  0190
*              PRTONLY='1'B;                 /*PRT ONLY      X02008   *
         OI    SWTR2,B'00000010'                                  0191
*              R9=120;                       /*MSG SIZE      X02008   *
         LA    @9,120                                             0192
*              GOTO MOVIT3;                  /*MOVE MSG      X02008   *
         BC    15,MOVIT3                                          0193
*              END;                          /*              X02008   *
*                                       /*                       M4502*
*         IF REMINBUF(3)^='0'           /*CHK 1ST CHAR RPLY CODE FOR 0*
*            × REMINBUF(5)^=',' THEN    /*CHK 5TH CHAR FOR COMMA      *
@9F4     CLI   WTOBUF+8,C'0'                                      0195
         BC    07,@9F3                                            0195
         CLI   WTOBUF+10,C','                                     0195
         BC    08,@9F2                                            0195
*         GOTO UNVER;                   /* UNVERIFIED RESPONSE        *
         BC    07,UNVER                                           0196
*         IF REMANS='0'B THEN GOTO RPLCD3; /*IF YES ONLY 03 ACCEPTED  *
@9F2     TM    SWTR1,B'00000100'                                  0197
         BC    08,RPLCD3                                          0198
*         IF EDTOMSG ='1'B THEN GOTO RPLCD1;  /*DO WE EXPECT D/T/O MSG*
         TM    SWTR1,B'00000010'                                  0199
         BC    01,RPLCD1                                          0200
*         IF IMRESP='1'B THEN GOTO RPLCD4;    /*NO,HOW ABOUT AN IMMED *
         TM    SWTR,B'00000100'                                   0201
         BC    01,RPLCD4                                          0202
*         IF CODE^='0' THEN GOTO RPLCD2; /*OUTSTANDING OLTEP RESPONSE?*
         CLI   WTOBUF+9,C'0'                                      0203
         BC    07,RPLCD2                                          0204
*         IF EXECOUT^='1'B THEN GOTO UNVER; /*YES,CAN WE ACCEPT IT ?  *
         TM    SWTR,B'00000010'                                   0205
         BC    12,UNVER                                           0206
*         IF ECB3C='40'X THEN GOTO UNVER; /*YES,HAS CE ANSWERED IT?   *
         CLI   RECB3,X'40'                                        0207
         BC    08,UNVER                                           0208
*         ROPT4=ADDR(ECB3);             /*NO,SETUP TO FREE LOCAL ECB  *
         LA    @F,ECB3                                            0209
         ST    @F,A00027                                          0209
*         FREEPTR=ADDR(OUTSTD);         /* RETURN ADDRESS             *
         LA    @F,OUTSTD                                          0210
         ST    @F,FREEPTR                                         0210
*         GOTO FREE;                    /* FREE PWTOR                 *
         BC    15,FREE                                            0211
*  OUTSTD:EXECANS='1'B;                 /*SET FLAG FOR OUTST OLTEP RSP*
OUTSTD   OI    SWTR1,B'01000000'                                  0212
*         R3=1;                         /*CHAR COUNT OF EXPECTED MSG  *
         LA    @3,1                                               0213
*         R4=ADDR(DYNCOM);              /*ADDR OF APPROPRIATE OLTEP BF*
         LA    @4,DYNCOM                                          0214
*         GOTO MOVIT;                   /*MOVE TO BUFR & WRITE TO CE  *
         BC    15,MOVIT                                           0215
*  RPLCD1:IF CODE^='1' THEN GOTO RPLCD2; /*ENTER DEV/TEST/OPT MESSAGE?*
RPLCD1   CLI   WTOBUF+9,C'1'                                      0216
         BC    07,RPLCD2                                          0217
*  CHKECB:IF ECB01C='40'X THEN GOTO UNVER; /* HAS CE ANSWERED MSG     *
CHKECB   L     @1,R1SAVE                                          0218
         CLI   0(@1),X'40'                                        0218
         BC    08,UNVER                                           0219
*                                       /*                       M4502*
*         ROPT4=R1SAVE;                 /* NO,SETUP TO FREE LOCAL ECB *
         MVC   A00027(4),R1SAVE                                   0220
*         FREEPTR=ADDR(RPLIMD);         /* RETURN ADDRESS             *
         LA    @F,RPLIMD                                          0221
         ST    @F,FREEPTR                                         0221
*         GOTO FREE;                    /* FREE PWTOR                 *
         BC    15,FREE                                            0222
*  RPLIMD:R3=RSPCNT;                     /*YES,GET EXPECTED CHAR COUNT*
RPLIMD   SR    @3,@3                                              0223
         IC    @3,RSPBUF                                          0223
*         R4=RSPADR;                     /*ADDRESS OF OLTEP RESP BUFF *
         MVC   @TEMP3+1(3),RSPBUF+1                               0224
         L     @4,@TEMP3                                          0224
*         GOTO MOVIT;                    /*MOVE TO BUFR & WRITE TO CE *
         BC    15,MOVIT                                           0225
*  RPLCD2:IF CODE^='2' THEN GOTO RPLCD3; /*OUTSTANDING OLT MESSAGE ?  *
RPLCD2   CLI   WTOBUF+9,C'2'                                      0226
         BC    07,RPLCD3                                          0227
*         IF CECOMOUT^='1'B THEN GOTO UNVER; /*CAN WE ACCEPT IT       *
         TM    SWTR,B'00000001'                                   0228
         BC    12,UNVER                                           0229
*         IF ECB37C='40'X THEN GOTO UNVER; /*YES,HAS CE ANSWERED MSG  *
         CLI   RECB37,X'40'                                       0230
         BC    08,UNVER                                           0231
*         CECOMANS='1'B;                 /*SET FLAG FOR OUTST CECOM AN*
         OI    SWTR1,B'00100000'                                  0232
*         R3=RCNT37;                     /*GET EXPECTED CHAR COUNT    *
         SR    @3,@3                                              0233
         IC    @3,RCNT37                                          0233
*         R4=ADDR(RREPLY37);             /*ADDR OF REPLY BUFFER       *
         LA    @4,RREPLY37                                        0234
*         GOTO MOVIT;                    /*MOVE TO BUFR & WRITE TO CE *
         BC    15,MOVIT                                           0235
*  RPLCD3:IF CODE^='3' THEN GOTO UNVER;  /* COMMUNICATIONS RESPONSE?  *
RPLCD3   CLI   WTOBUF+9,C'3'                                      0236
         BC    07,UNVER                                           0237
*         INFOMSG='1'B;                  /*YES,SET FLAG FOR OLTEP     *
         OI    SWTR1,B'00010000'                                  0238
*         GOTO  MOVIT1;                  /*WRITE MESSAGE TO CE        *
         BC    15,MOVIT1                                          0239
*  RPLCD4:IF CODE^= '4' THEN GOTO RPLCD3;/* IMMEDIATE OLT RESPONSE ?  *
RPLCD4   CLI   WTOBUF+9,C'4'                                      0240
         BC    07,RPLCD3                                          0241
*                                       /*                       M4502*
*         IF DPMSG='0'B &               /* NOT DP MOD MSG       YM2273*
*           REMNOMSG='0'B THEN          /* NO MSG TO REMOTE     YM2273*
         TM    SWTR2,B'00000001'                                  0242
         BC    05,@9F1                                            0242
         TM    SWTR,B'00100000'                                   0242
*           GO TO CHKECB;               /* CHECK ECB FOR CMPLTN YM2273*
         BC    10,CHKECB                                          0243
*
*                                       /*                       M4502*
*   UNVER:ILLRPL(15:16)=REMINBUF(3:4);  /*ILL REP CODE TO MSG    M5049*
@9F0     EQU   *                                                  0244
@9F1     EQU   *                                                  0244
UNVER    MVC   ILLRPL+14(2),WTOBUF+8                              0244
*         ILLRESP='1'B;                  /*SET ILL RESP FLAG FOR OLTEP*
         OI    SWTR1,B'10000000'                                  0245
*         GOTO INITIN;                   /*GO TELL REMOTE             *
         BC    15,INITIN                                          0246
*  /*******************************************************************
*  /* THIS SECTION FREES LOCAL 'UNANSWERED' PWTOR'S WHEN ANSWERED BY  *
*  /* REMOTE                                                          *
*  /*******************************************************************
*    FREE:WKSVC='F0F0'X;                /* MODULE ID                  *
FREE     MVC   WKSVC(4),@X19                                      0247
*         R1 = '00'X;                    /* SET CALL CODE PARM  Y02008*
         LA    @1,X'00'                                           0248
*         R0 = ADDR(ROPT);               /* SET PARAMETER LIST ADDRESS*
         LA    @0,ROPT                                            0249
*     GEN(SVC   59);                     /* FREE WTOR                 *
         SVC   59
         DS    0H
*         WKWDID=R0;                    /* SAVE ID                    *
         ST    @0,WKWDID                                          0251
*         MID=DUMID;                     /* SET ID IN MESSAGE         *
         L     @1,MSGMOD                                          0252
         L     @1,76(0,@1)         A00028                         0252
         MVC   20(2,@1),WKWDID+2                                  0252
*         R1=WTORANS;                    /* ADDRESS OF MESSAGE        *
         L     @C,MSGMOD                                          0253
         L     @1,76(0,@C)                                        0253
*         REMNOMSG='1'B;                 /* REMOTE DOES NOT GET MSG   *
         OI    SWTR,B'00100000'                                   0254
*         GEN(PWTO  REG=(1));
         PWTO  REG=(1)
         DS    0H
*         REMNOMSG='0'B;                 /* RESTORE SWITCH            *
         NI    SWTR,B'11011111'                                   0256
*         GOTO FREERTRN;                /* RETURN                     *
         L     @1,FREEPTR                                         0257
         BCR   15,@1                                              0257
*  /*******************************************************************
*  /* MOVE MESSAGE TO APPROPRIATE OLTEP BUFFER                        *
*  /*******************************************************************
*   MOVIT:GEN;
MOVIT    EQU   *                                                  0258
         BCTR  R3,0                    * SUB ONE FROM COUNT FOR EXECUTE
         LA    R5,INTEXT(R3)           GET A INPUT BYTE         SA52876
         CLI   0(R5),X'40'             IS IT A BLANK            SA52876
         BE    MOVIT                   YES,GET NEXT BYTE        SA52876
         EX    R3,MOVE                 * MOVE DATA TO BUFFER
         B     INITIN
MOVE     MVC   0(0,R4),INTEXT          * MOVE DATA FROM INPUT BUFFER
         DS    0H
*  /*******************************************************************
*  /* COMMUNICATION MESSAGE SET UP FOR WTO                            *
*  /*******************************************************************
*  MOVIT1:DO R9=84 BY -1 TO 1;
MOVIT1   LA    @9,84                                              0259
*         IF WTOBUF(R9)^=' ' THEN       /*SCAN FOR END OF MESSAGE     *
@DO9EF   LR    @1,@9                                              0260
         LA    @A,WTOBUF-1(@1)                                    0260
         CLI   0(@A),C' '                                         0260
         BC    08,@9EB                                            0260
*           DO;
*  MOVIT2:MSGID(1:8)=WTOID(1:8);        /* MOVE WTO ID ON MESSAGE     *
MOVIT2   MVC   WTOBUF+4(8),WTOID                                  0262
*         WTOBUF(R9+1:R9+4)=            /* MOVE ROUTING AND DESCRIPTOR*
*         RTEDSC(1:4);                  /* CODES ON MESSAGE FOR PWTO  *
         LA    @E,WTOBUF+126                                      0263
         LA    @1,4                                               0263
         AR    @1,@9                                              0263
         LA    @C,1                                               0263
         AR    @C,@9                                              0263
         SR    @1,@C                                              0263
         LA    @A,WTOBUF-1(@C)                                    0263
         EX    @1,@MVC                                            0263
*  MOVIT3:                              /*                   X02008   *
*  MOVIT3:                              /*                   X02008   *
*         WRKCNT=R9;                    /* MOVE COUNT INTO WORK AREA  *
MOVIT3   ST    @9,WRKCNT                                          0264
*         WTOCNT=COUNT;                 /* COUNT INTO WTO             *
         MVC   WTOBUF(2),WRKCNT+2                                 0265
*         REMNOMSG='1'B;                /* REMOTE DOES NOT GET MSG    *
         OI    SWTR,B'00100000'                                   0266
*         R1=ADDR(WTOBUF);              /* POINT TO MESSAGE           *
         LA    @1,WTOBUF                                          0267
*         GEN(PWTO  REG=(1));           /* ISSUE MESSAGE              *
         PWTO  REG=(1)
         DS    0H
*         REMNOMSG='0'B;                /* RESTORE SWITCH             *
         NI    SWTR,B'11011111'                                   0269
*         PRTONLY='0'B;                 /*PRT FLG OFF        X02008   *
         NI    SWTR2,B'11111101'                                  0270
*         GOTO  INITIN;
         BC    15,INITIN                                          0271
*         END;
*           ELSE;
@9EB     EQU   *                                                  0273
*         END MOVIT1;
*  /*******************************************************************
*  /* WRITE RESPONSE TO REMOTE                                        *
*  /* SET UP TO WRITE Y AND READ EOT                                  *
*  /*******************************************************************
*  INITIN:REMINBUF=REMINBUF&&REMINBUF;  /* ZERO THE INPUT BUFFER      *
@9EA     BCT   @9,@DO9EF                                          0274
INITIN   XC    WTOBUF+6(120),WTOBUF+6                             0275
*         FLAGS='42'X;                  /*SET IOB FLAGS FOR CCW CHAIN *
         MVI   REIOB,X'42'                                        0276
*         CPA=ADDR(CCWWRRSP);           /* WRITE Y READ EOT           *
         LA    @F,CCWWRRSP                                        0277
         ST    @F,@TEMP4                                          0277
         MVC   REIOB+17(3),@TEMP4+1                               0277
*         EXCPPTR=ADDR(BB);              /* RETURN TO ADDRESS         *
         LA    @F,BB                                              0278
         ST    @F,EXCPPTR                                         0278
*         GOTO CPINIT;                   /* EXCP                      *
         BC    15,CPINIT                                          0279
*      BB:IF ILLRESP^='1'B THEN              /*IF RESPONSE OK,GO BACK *
BB       TM    SWTR1,B'10000000'                                  0280
*         GOTO CONTEN;
         BC    12,CONTEN                                          0281
*  /*******************************************************************
*  /* RESPONSE ILLEGAL SEND REMOTE THE MESSAGE                        *
*  /*******************************************************************
*         R6=ADDR(OUTTEXT);             /* ADDRESS OF TRANSMIT BUFFER *
         LA    @6,ROUTBUF+1                                       0282
*         R1SAVE=29;                    /*CHAR COUNT OF MSG      M5049*
         LA    @F,29                                              0283
         ST    @F,R1SAVE                                          0283
*         R7=ADDR(ILLRPL);              /* ADDRESS OF ERROR MESSAGE   *
         LA    @7,ILLRPL                                          0284
*         GOTO CHKRP1;                  /* SEND MESSAGE               *
         BC    15,CHKRP1                                          0285
*  /*******************************************************************
*  /*THIS  SECTION  ISSUES THE EXCP AND WAIT,CHECK FOR PERMANENT ERROR*
*  /*AND REINITIALIZES BLOCKS ASSOCIATED WITH THE EXCP MACRO          *
*  /*******************************************************************
*  CPINIT:ECBA = ADDR(RECB);                  /*ADDR OF ECB INTO IOB  *
CPINIT   LA    @F,RECB                                            0286
         ST    @F,@TEMP4                                          0286
         MVC   REIOB+5(3),@TEMP4+1                                0286
*         DCBA = ADDR(REIDCB);                /*LIKEWISE THE DCB      *
         LA    @F,REIDCB                                          0287
         ST    @F,@TEMP4                                          0287
         MVC   REIOB+21(3),@TEMP4+1                               0287
*         GEN;
EXECUTE  EXCP  REIOB
STRTCLK1 STIMER REAL,TIMEOUT,DINTVL=TIME10  *                     M4502
WAITCP   WAIT  ECB=RECB
STOPCLK1 TTIMER CANCEL
         DS    0H
*         IF COMPCODE='7F'X THEN GOTO CONTIN; /* GO IF SUCCESSFUL     *
         CLI   RECB,X'7F'                                         0289
         BC    08,CONTIN                                          0290
*   ERROR:REMERR='1'B;                        /* SET PERM ERROR FLAG  *
ERROR    OI    SWTR,B'01000000'                                   0291
*         GEN;
         IFDMOD CALL='56'
         IFDMOD DELETE='56'
         DS    0H
*         GOTO FINI;                          /* GO BACK TO OLTEP     *
         BC    15,FINI                                            0293
*  CONTIN:REIOB1=REIOB1&&REIOB1;        /* INITIALIZE IOB             *
CONTIN   XC    REIOB(32),REIOB                                    0294
*         RECB=0;                             /* ZERO THE ECB         *
         SR    @F,@F                                              0295
         ST    @F,RECB                                            0295
*         GOTO EXCPRTRN;                 /* RETURN                    *
         L     @1,EXCPPTR                                         0296
         BCR   15,@1                                              0296
*  /*******************************************************************
*  /* STIMER EXIT ROUTINE-10 MINUTE INTERRUPT                    M4502*
*  /*******************************************************************
*         GENERATE;
TIMEOUT  STM   R14,R12,12(R13)         * SAVE CALLERS REGS
         BALR  R11,0                   * SET
         LA    R15,TIMEOUT-IFDOLT55    *     UP
         SR    R11,R15                 *        BASE REGISTER
         ST    R13,SAVE2+4             * SAVE @ OF CALLERS SAVEAREA
         LA    R15,SAVE2               * GET @ OF OWN SAVEAREA
         ST    R15,8(R13)              * SAVE IN CALLERS SAVEAREA
         LR    R13,R15                 * PUT IT IN SAVE REG (13)
POSTECB  POST  RECB,256                *POST 100 COMPLETION CODE
         DS    0H
*         RETURN;
*         END IFDOLT55;
@EL01    L     @D,4(0,@D)                                         0299
         LM    @E,@C,12(@D)                                       0299
         BCR   15,@E                                              0299
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    H'120'
@D2      DC    H'-1'
@MVC     MVC   0(1,@A),0(@E)
         DS    0F
@X19     DC    X'0000F0F0'
         DS    0D
@DATA    EQU   *
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD
R0       EQU   00000000            FULLWORD POINTER REGISTER
R1       EQU   00000001            FULLWORD POINTER REGISTER
R2       EQU   00000002            FULLWORD POINTER REGISTER
R3       EQU   00000003            FULLWORD INTEGER REGISTER
R4       EQU   00000004            FULLWORD INTEGER REGISTER
R5       EQU   00000005            FULLWORD INTEGER REGISTER
R6       EQU   00000006            FULLWORD INTEGER REGISTER
R7       EQU   00000007            FULLWORD INTEGER REGISTER
R8       EQU   00000008            FULLWORD POINTER REGISTER
R9       EQU   00000009            FULLWORD INTEGER REGISTER
R10      EQU   00000010            FULLWORD INTEGER REGISTER
R11      EQU   00000011            FULLWORD INTEGER REGISTER
R12      EQU   00000012            FULLWORD INTEGER REGISTER
R13      EQU   00000013            FULLWORD INTEGER REGISTER
R14      EQU   00000014            FULLWORD INTEGER REGISTER
R15      EQU   00000015            FULLWORD INTEGER REGISTER
R1SAVE   EQU   @DATA+00000072      FULLWORD POINTER
FREEPTR  EQU   @DATA+00000076      FULLWORD POINTER
EXCPPTR  EQU   @DATA+00000080      FULLWORD POINTER
REIOB    EQU   @DATA+00000084      52 BYTE(S) ON WORD
REIOB1   EQU   REIOB+00000000      32 BYTE(S)
FLAGS    EQU   REIOB+00000000      8 BIT(S)
DCH      EQU   REIOB+00000000      1 BIT(S)
CCH      EQU   REIOB+00000000      1 BIT(S)
A00001   EQU   REIOB+00000000      6 BIT(S)
A00002   EQU   REIOB+00000001      24 BIT(S)
ECBC     EQU   REIOB+00000004      8 BIT(S)
ECBA     EQU   REIOB+00000005      3  BYTE  POINTER
CSW      EQU   REIOB+00000008      64 BIT(S)
A00003   EQU   REIOB+00000008      32 BIT(S)
CEDEUE   EQU   REIOB+00000012      8 BIT(S)
CE       EQU   REIOB+00000012      1 BIT(S)
DE       EQU   REIOB+00000012      1 BIT(S)
A00004   EQU   REIOB+00000012      1 BIT(S)
UE       EQU   REIOB+00000012      1 BIT(S)
A00005   EQU   REIOB+00000012      4 BIT(S)
A00006   EQU   REIOB+00000013      24 BIT(S)
A00007   EQU   REIOB+00000016      8 BIT(S)
CPA      EQU   REIOB+00000017      3  BYTE  POINTER
A00008   EQU   REIOB+00000020      8 BIT(S)
DCBA     EQU   REIOB+00000021      3  BYTE  POINTER
A00009   EQU   REIOB+00000024      8 BIT(S)
A00010   EQU   REIOB+00000025      8 BYTE(S)
         ORG   REIOB+00000032
ERPWORK  EQU   *                   FULLWORD POINTER
         DC    AL4(CCWWORK)
EOTRESP  EQU   *                   FULLWORD POINTER
         DC    AL4(EOT)
NEGRESP  EQU   *                   FULLWORD POINTER
         DC    AL4(NEG)
REMINPTR EQU   *                   FULLWORD POINTER
         DC    AL4(REMINBUF)
CCWWORK  EQU   @DATA+00000136      48 BYTE(S) ON DWORD
         ORG   CCWWORK+00000000
CCWS     EQU   *                   6*8 BYTE(S)
         DC    00006X'0000000000000000'
REIDCB   EQU   @DATA+00000184      108 BYTE(S) ON WORD
A00011   EQU   *                   18*FULLWORD INTEGER
         DC    00018FL4'0'
A00012   EQU   REIDCB+00000072     5*FULLWORD INTEGER
A00013   EQU   *                   FULLWORD POINTER
         DC    AL4(RETRN)
A00014   EQU   *                   FULLWORD POINTER
         DC    AL4(RETRN)
A00015   EQU   *                   FULLWORD POINTER
         DC    AL4(RETRN)
A00016   EQU   *                   FULLWORD POINTER
         DC    AL4(RETRN)
A00017   EQU   *                   FULLWORD POINTER
         DC    AL4(RETRN)
RETRN    EQU   *                   2 BYTE(S)
         DC    X'07FE'
         ORG   @DATA+00000292
OUTTBL   EQU   *                   128 BIT(S) ON BYTE
         DC    X'81E2E4E7E8EBEDEEF0F3A0768493E187'
OUTTBL1  EQU   *                   128 BIT(S) ON BYTE
         DC    X'61C3C5C6C9CACCCFD1D2D757909587F6'
OUTTBL2  EQU   *                   128 BIT(S) ON BYTE
         DC    X'4023A5A6A9AAACAFB1B281378BC08EA3'
OUTTBL3  EQU   *                   128 BIT(S) ON BYTE
         DC    X'15020407080B0D0E10138816208D8296'
INTBL    EQU   *                   16 BYTE(S)
         DC    C' 1234567890#    '
INTBL1   EQU   *                   16 BYTE(S)
         DC    C'@/STUVWXYZ ,    '
INTBL2   EQU   *                   16 BYTE(S)
         DC    C'-JKLMNOPQR $    '
INTBL3   EQU   *                   16 BYTE(S)
         DC    C'&&ABCDEFGHI .    '
INTBL4   EQU   *                   16 BYTE(S)
         DC    C' =<;:% >*()"    '
INTBL5   EQU   *                   16 BYTE(S)
         DC    C' ?STUVWXYZ ×    '
INTBL6   EQU   *                   16 BYTE(S)
         DC    C'_JKLMNOPQR      '
INTBL7   EQU   *                   16 BYTE(S)
         DC    C'+ABCDEFGHI ^    '
DEDBUF   EQU   *                   72 BYTE(S) ON WORD
&T       SETA  00001
.L099997 ANOP
         DC    X'40'
         DC    00071X'40'
ROUTBUF  EQU   @DATA+00000556      130 BYTE(S) ON WORD
EOA      EQU   *                   1 BYTE(S)
         DC    X'16'
OUTTEXT  EQU   ROUTBUF+00000001    125 BYTE(S)
         ORG   @DATA+00000686
SENDCODE EQU   *                   4 BYTE(S)
         DC    X'90158181'
A00019   EQU   SENDCODE+00000000   2 BYTE(S)
SCD      EQU   SENDCODE+00000002   1 BYTE(S)
A00020   EQU   SENDCODE+00000003   1 BYTE(S)
EOT      EQU   *                   1 BYTE(S)
         DC    X'1F'
POS      EQU   *                   1 BYTE(S)
         DC    X'76'
NEG      EQU   *                   1 BYTE(S)
         DC    X'40'
         ORG   @DATA+00000696
ILLRPL   EQU   *                   29 BYTE(S) ON WORD
         DC    C'IFD173I REPLY    NOT VERIFIED'
A00021   EQU   ILLRPL+00000000     14 BYTE(S)
ILRC     EQU   ILLRPL+00000014     2 BYTE(S)
A00022   EQU   ILLRPL+00000016     13 BYTE(S)
PURGELST EQU   @DATA+00000728      16 BYTE(S) ON WORD
PPLDSID  EQU   PURGELST+00000000   4 BYTE(S)
         ORG   PURGELST+00000000
PPLOPT1  EQU   *                   1 BYTE(S)
         DC    X'E4'
PPLDSIDA EQU   PURGELST+00000001   3  BYTE  POINTER
A00023   EQU   PURGELST+00000004   12 BYTE(S)
ECB01    EQU   00000000            FULLWORD INTEGER
ECB01C   EQU   ECB01+00000000      1 BYTE(S)
A00026   EQU   ECB01+00000001      3 BYTE(S)
A00028   EQU   00000000            80 BYTE(S) ON WORD
A00029   EQU   A00028+00000000     19*FULLWORD POINTER
WTORANS  EQU   A00028+00000076     FULLWORD POINTER
A00030   EQU   00000000            22 BYTE(S) ON WORD
A00031   EQU   A00030+00000000     4 BYTE(S)
A00032   EQU   A00030+00000004     16 BYTE(S)
MID      EQU   A00030+00000020     2 BYTE(S)
WKWDID   EQU   @DATA+00000744      4 BYTE(S) ON WORD
A00033   EQU   WKWDID+00000000     2 BYTE(S)
DUMID    EQU   WKWDID+00000002     2 BYTE(S)
SAVE2    EQU   @DATA+00000748      18*FULLWORD INTEGER
         ORG   @DATA+00000824
TIME10   EQU   *                   8 BYTE(S) ON DWORD
         DC    X'F0F0F1F0F0F0F0C0'
WTOBUF   EQU   @DATA+00000832      130 BYTE(S) ON WORD
WTOCNT   EQU   WTOBUF+00000000     2 BYTE(S)
         ORG   WTOBUF+00000002
WTOFLG   EQU   *                   16 BIT(S) ON BYTE
         DC    B'1000000000000000'
MSGID    EQU   WTOBUF+00000004     122 BYTE(S)
A00034   EQU   WTOBUF+00000004     2 BYTE(S)
REMINBUF EQU   WTOBUF+00000006     120 BYTE(S)
REPLY    EQU   WTOBUF+00000006     4 BYTE(S)
A00035   EQU   WTOBUF+00000006     3 BYTE(S)
CODE     EQU   WTOBUF+00000009     1 BYTE(S)
A00036   EQU   WTOBUF+00000010     2 BYTE(S)
INTEXT   EQU   WTOBUF+00000012     72 BYTE(S)
         ORG   WTOBUF+00000126
RTEDSC   EQU   *                   4 BYTE(S)
         DC    X'02000040'
WTOID    EQU   *                   8 BYTE(S)
         DC    C'IFD255I '
WRKCNT   EQU   @DATA+00000972      4 BYTE(S) ON WORD
A00037   EQU   WRKCNT+00000000     2 BYTE(S)
COUNT    EQU   WRKCNT+00000002     2 BYTE(S)
SWTSAVE  EQU   @DATA+00000976      8 BIT(S) ON BYTE
SWT1     EQU   SWTSAVE+00000000    1 BIT(S)
SWT2     EQU   SWTSAVE+00000000    1 BIT(S)
SWT3     EQU   SWTSAVE+00000000    1 BIT(S)
SWT4     EQU   SWTSAVE+00000000    1 BIT(S)
SWT5     EQU   SWTSAVE+00000000    1 BIT(S)
SWT6     EQU   SWTSAVE+00000000    1 BIT(S)
SWT7     EQU   SWTSAVE+00000000    1 BIT(S)
SWT8     EQU   SWTSAVE+00000000    1 BIT(S)
         ORG   @DATA+00000980
CVTADPTR EQU   *                   FULLWORD POINTER
         DC    AL4(16)
CVTADDR  EQU   00000000            FULLWORD POINTER
CVT      EQU   00000000            332 BYTE(S) ON WORD
A00038   EQU   CVT+00000000        40 BYTE(S)
CVTILK2  EQU   CVT+00000040        FULLWORD POINTER
A00039   EQU   CVT+00000044        284 BYTE(S)
CVTEXT2  EQU   CVT+00000328        FULLWORD POINTER
CVTOLTEP EQU   00000028            FULLWORD POINTER
OLTEPTAB EQU   00000000            24 BYTE(S)
DIEHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)
REIDEBAD EQU   OLTEPTAB+00000004   4  BYTE  POINTER
A00040   EQU   OLTEPTAB+00000008   20 BYTE(S)
OLTEPUCB EQU   OLTEPTAB+00000028   4  BYTE  POINTER
REIUCBAD EQU   OLTEPTAB+00000032   4  BYTE  POINTER
A00041   EQU   OLTEPTAB+00000036   4 BYTE(S)
IOSGENTB EQU   OLTEPTAB+00000040   18*4  BYTE  INTEGER
         ORG   @DATA
         DS    00000984C
@TEMPS   DS    0F
@TEMP3   DC    F'0'
@TEMP4   DC    F'0'
* WRITE INITIAL
CCWWRIN  CCW   1,ROUTBUF,X'60',0       * WRITE DATA               M4502
CCWWRIN1 CCW   2,REMINBUF,X'20',1           * READ RESPONSE   X02008
         SPACE
* WRITE END OF TRANSMISSION (C)                                   M4502
CCWWREOT CCW   1,EOT,X'20',1                * WRITE EOT       X02008
         SPACE
* READ INITIAL                                                    M4502
CCWRDI   CCW   6,0,X'60',1             * PREPARE                  M4502
CCWRDI1  CCW   2,REMINBUF,X'20',120         * READ DATA       X02008
         SPACE
* WRITE Y READ EOT                                                M4502
CCWWRRSP CCW   1,POS,X'60',1                * WRITE RESPONSE  X02008
CCWRDEOT CCW   2,REMINBUF,X'20',1           * READ EOT        X02008
OPTCOMM  IFDCOM
IFDOLT55 CSECT
WWRIN    EQU   CCWWRIN+00000000    8 BYTE(S)
A00000   EQU   WWRIN+00000000      6 BYTE(S)
DISP     EQU   WWRIN+00000006      2  BYTE  POINTER
RSPBUF   EQU   RESPBUF+00000000    4 BYTE(S)
RSPCNT   EQU   RSPBUF+00000000     1 BYTE(S)
RSPADR   EQU   RSPBUF+00000001     3 BYTE(S)
RECB     EQU   REIECB+00000000     FULLWORD INTEGER
COMPCODE EQU   RECB+00000000       8 BIT(S)
A00018   EQU   RECB+00000001       24 BIT(S)
RECB3    EQU   ECB3+00000000       FULLWORD INTEGER
ECB3C    EQU   RECB3+00000000      1 BYTE(S)
A00024   EQU   RECB3+00000001      3 BYTE(S)
RDYNCOM  EQU   DYNCOM+00000000     1 BYTE(S)
RECB37   EQU   ECB37+00000000      FULLWORD INTEGER
ECB37C   EQU   RECB37+00000000     1 BYTE(S)
A00025   EQU   RECB37+00000001     3 BYTE(S)
RREPLY37 EQU   REPLY37+00000000    72 BYTE(S)
RCNT37   EQU   CNT37+00000000      1 BYTE(S)
A00027   EQU   ROPT+00000000       8 BYTE(S) ON WORD
ROPT4    EQU   A00027+00000000     FULLWORD POINTER
ROPT8    EQU   A00027+00000004     FULLWORD POINTER
MODID    EQU   WKSVC+00000000      FULLWORD INTEGER
SWTR     EQU   CESWTR+00000000     8 BIT(S) ON BYTE
RETAINAC EQU   SWTR+00000000       1 BIT(S)
REMERR   EQU   SWTR+00000000       1 BIT(S)
REMNOMSG EQU   SWTR+00000000       1 BIT(S)
CENOMSG  EQU   SWTR+00000000       1 BIT(S)
PRTNOMSG EQU   SWTR+00000000       1 BIT(S)
IMRESP   EQU   SWTR+00000000       1 BIT(S)
EXECOUT  EQU   SWTR+00000000       1 BIT(S)
CECOMOUT EQU   SWTR+00000000       1 BIT(S)
SWTR1    EQU   CESWTR1+00000000    8 BIT(S) ON BYTE
ILLRESP  EQU   SWTR1+00000000      1 BIT(S)
EXECANS  EQU   SWTR1+00000000      1 BIT(S)
CECOMANS EQU   SWTR1+00000000      1 BIT(S)
INFOMSG  EQU   SWTR1+00000000      1 BIT(S)
RETRIEVE EQU   SWTR1+00000000      1 BIT(S)
REMANS   EQU   SWTR1+00000000      1 BIT(S)
EDTOMSG  EQU   SWTR1+00000000      1 BIT(S)
MSGHND   EQU   SWTR1+00000000      1 BIT(S)
SWTR2    EQU   CESWTR2+00000000    8 BIT(S) ON BYTE
REPLY00  EQU   SWTR2+00000000      1 BIT(S)
REPLY02  EQU   SWTR2+00000000      1 BIT(S)
ONCOMM   EQU   SWTR2+00000000      1 BIT(S)
COMMLOOP EQU   SWTR2+00000000      1 BIT(S)
WAIT3    EQU   SWTR2+00000000      1 BIT(S)
OPTERR   EQU   SWTR2+00000000      1 BIT(S)
PRTONLY  EQU   SWTR2+00000000      1 BIT(S)
DPMSG    EQU   SWTR2+00000000      1 BIT(S)
@DATEND  EQU   *
@9F3     EQU   UNVER
         END   IFDOLT55
