         TITLE 'IFDOLT50 PROMPTING MODULE'
         TITLE 'IFDOLT50 PROMPTING MODULE'
         LCLA  &T,&SPN                                            0002
.@001    ANOP                                                     0002
IFDOLT50 CSECT ,                                                  0002
         BC    15,24(0,@F)
         DC    C'IFDOLT50 14 SEP 73'                             0002
         STM   @E,@C,12(@D)                                       0002
         BALR  @B,0                                               0002
@PSTART  DS    0H                                                 0002
         USING @PSTART+00000,@B                                   0002
         ST    @D,@SAV001+4                                       0002
         LA    @F,@SAV001                                         0002
         ST    @F,8(0,@D)                                         0002
         LR    @D,@F                                              0002
*         GEN(USING CHASCT,2);
         USING CHASCT,2
         DS    0H
*         GENERATE DATA;
*         /************************************************************
*         /*                                                          *
*         /*                        DECLARES                          *
*         /*                                                          *
*         /************************************************************
*         DCL R1 REG(1) PTR(31);
*         DCL R2 REG(2) PTR(31);
*         DCL LINEPTR REG(5) PTR(31);
*         DCL I REG(6) PTR(24);
*         DCL R7 REG(7) PTR(31);
*         DCL R8 REG(8) PTR(31);
*         DCL R14 REG(14) PTR(31);
*         DCL R15 REG(15) PTR(31);
*         DCL 1 MSSGE BASED(R8),
*               3 MESLNGTH CHAR(2),
*               3 MCSFLAGS CHAR(2),
*               3 MSGID CHAR(8),
*               3 MESSAGE CHAR(51);
*         DCL LINE CHAR(51) BASED(LINEPTR);
*         DCL 1 MSGPTR BASED(R7),
*               3 MSGPTR47 PTR(31),
*               3 ADDRDMSG PTR(31),
*               3 MSGPTR48 PTR(31),
*               3 ADDRTMSG PTR(31),
*               3 MSGPTR49 PTR(31),
*               3 ADDROMSG PTR(31),
*               3 MSGPTR46 PTR(31);
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCHES S20203*
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203*
*           3 RETAINAC BIT(1),           /* REI ACTIVE          S20203*
*           3 * BIT(1),                  /*                     S20203*
*           3 REMNOMSG BIT(1),           /* REMOTE NO MSG       S20203*
*           3 * BIT(5);                  /*                     S20203*
*         DCL INBUFR GENERATED;
*         DCL INPUTBUF CHAR(8) BASED(ADDR(INBUFR));
*         DCL IFDMSG50 LABEL NONLOCAL EXTERNAL;
*         RESTRICT(1,2,5,6,7,8);
*         R7=ADDR(IFDMSG50);        /* FIND ADDRESS OF MESSAGE MODULE.*
         L     @3,@V1              ADDRESS OF IFDMSG50            0022
         LR    @7,@3                                              0022
*         /************************************************************
*         /*                 IS PROMPT ALL SPECIFIED                  *
*         /************************************************************
*         IF INPUTBUF(8)='A' THEN   /* IS PROMPT ALL SPECIFIED. */
         CLI   INPUTBUF+7,C'A'                                    0023
*           GO TO PROMPT01;         /* YES, PERFORM ALL PROMPTING.*/
         BC    08,PROMPT01                                        0024
*         /************************************************************
*         /*                 IS PROMPT DEV SPECIFIED                  *
*         /************************************************************
*         IF INPUTBUF(8)^='D' THEN  /* IS PROMPT DEV SPECIFIED. */
         CLI   INPUTBUF+7,C'D'                                    0025
*           GO TO PROMPT02;         /* NO, WHAT IS SPECIFIED.   */
         BC    07,PROMPT02                                        0026
* PROMPT01:
*         /************************************************************
*         /*                                                          *
*         /*                PERFORM PROMPTING FOR DEV                 *
*         /*                                                          *
*         /************************************************************
*         LINEPTR=ADDRDMSG;         /* INITIALIZE LINE POINTER. */
PROMPT01 L     @5,4(0,@7)                                         0027
*         R8=MSGPTR47;              /* GET POINTER TO MESSAGE IFD147I *
         L     @8,0(0,@7)                                         0028
*                                   /* IN THE MESSAGE MODULE.         *
*         DO I=7 TO 1 BY -1;
         LA    @6,7                                               0029
*         MESSAGE=LINE;             /* DEV PROMPTING.                */
@DO9FF   MVC   12(51,@8),0(@5)                                    0030
*         R1=MSGPTR47;              /* PRINT LINE. */
         L     @1,0(0,@7)                                         0031
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 *
         PWTO  REG=(1)
         DS    0H
*         LINEPTR=LINEPTR+51;       /* UPDATE LINE POINTER TO POINT */
         AH    @5,@D1                                             0033
*                                   /* TO NEXT LINE OF MESSAGE AND  */
*         END;                      /* CONTINUE DEV PROMPTING.      */
*         IF INPUTBUF(8)='A' THEN   /* IS PROMPT ALL SPECIFIED. */
         BCT   @6,@DO9FF                                          0034
         CLI   INPUTBUF+7,C'A'                                    0035
*           GO TO PROMPT03;         /* YES, CONTINUE PROMPTING. */
         BC    08,PROMPT03                                        0036
*         GO TO PROMPT06;           /* GO TO FINISH UP ROUTINE. */
         BC    15,PROMPT06                                        0037
* PROMPT02:
*         /************************************************************
*         /*                 IS PROMPT TEST SPECIFIED                 *
*         /************************************************************
*         IF INPUTBUF(8)^='T' THEN  /* IS PROMPT TEST SPECIFIED. */
PROMPT02 CLI   INPUTBUF+7,C'T'                                    0038
*           GO TO PROMPT04;         /* NO, WHAT IS SPECIFIED. */
         BC    07,PROMPT04                                        0039
* PROMPT03:
*         /************************************************************
*         /*                                                          *
*         /*                PERFORM PROMPTING FOR TEST                *
*         /*                                                          *
*         /************************************************************
*         LINEPTR=ADDRTMSG;         /* INITIALIZE LINE POINTER. */
PROMPT03 L     @5,12(0,@7)                                        0040
*         R8=MSGPTR48;              /* GET POINTER TO MESSAGE IFD148I *
         L     @8,8(0,@7)                                         0041
*                                   /* IN THE MESSAGE MODULE.         *
*         DO I=8 TO 1 BY -1;       /* ISSUE 8 LINES OF PROMPT FOR21051*
         LA    @6,8                                               0042
*         MESSAGE=LINE;             /* TEST PROMPTING.               */
@DO9FB   MVC   12(51,@8),0(@5)                                    0043
*         R1=MSGPTR48;              /* PRINT LINE. */
         L     @1,8(0,@7)                                         0044
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 *
         PWTO  REG=(1)
         DS    0H
*         LINEPTR=LINEPTR+51;       /* UPDATE LINE POINTER TO POINT */
         AH    @5,@D1                                             0046
*                                   /* TO NEXT LINE OF MESSAGE AND  */
*         END;                      /* CONTINUE PROMPTING.          */
*         IF INPUTBUF(8)='A' THEN   /* IS PROMPT ALL SPECIFIED. */
         BCT   @6,@DO9FB                                          0047
         CLI   INPUTBUF+7,C'A'                                    0048
*           GO TO PROMPT05;         /* YES, CONTINUE PROMPTING. */
         BC    08,PROMPT05                                        0049
*         GO TO PROMPT06;           /* NO, GO TO FINISH ROUTINE. */
         BC    15,PROMPT06                                        0050
* PROMPT04:
*         /************************************************************
*         /*                 IS PROMPT OPT SPECIFIED                  *
*         /************************************************************
*         IF INPUTBUF(8)^='O' THEN  /* IS PROMPT OPT SPECIFIED. */
PROMPT04 CLI   INPUTBUF+7,C'O'                                    0051
*           GO TO PROMPT06;         /* NO, SEE SRL.             */
         BC    07,PROMPT06                                        0052
* PROMPT05:
*         /************************************************************
*         /*                                                          *
*         /*                PERFORM PROMPTING FOR OPT                 *
*         /*                                                          *
*         /************************************************************
*         LINEPTR=ADDROMSG;         /* INITIALIZE LINE POINTER. */
PROMPT05 L     @5,20(0,@7)                                        0053
*         R8=MSGPTR49;              /* GET POINTER TO MESSAGE IFD149I *
         L     @8,16(0,@7)                                        0054
*                                   /* IN THE MESSAGE MODULE.         *
*
*         DO I=21 TO 1 BY -1;       /* ISSUE 21 PROMPT LINES    X02008*
         LA    @6,21                                              0055
*         MESSAGE=LINE;             /* FOR OPT PROMPTING.          */
@DO9F7   MVC   12(51,@8),0(@5)                                    0056
*         R1=MSGPTR49;              /* PRINT LINE. */
         L     @1,16(0,@7)                                        0057
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 *
         PWTO  REG=(1)
         DS    0H
*         LINEPTR=LINEPTR+51;       /* UPDATE LINE POINTER TO POINT */
         AH    @5,@D1                                             0059
*                                   /* TO NEXT LINE OF MESSAGE AND  */
*         END;                      /* CONTINUE PROMPTING.          */
* PROMPT06:
*         /************************************************************
*         /*                                                          *
*         /*                   GIVE SRL REFERENCE                     *
*         /*                                                          *
*         /************************************************************
*         R1=MSGPTR46;              /* TELL USER OF SRL REFERENCE. */
         BCT   @6,@DO9F7                                          0060
PROMPT06 L     @1,24(0,@7)                                        0061
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 *
         PWTO  REG=(1)
         DS    0H
*         RETURN;                   /* RETURN TO CALLER. */
*         END;
@EL01    L     @D,4(0,@D)                                         0064
         LM    @E,@C,12(@D)                                       0064
         BCR   15,@E                                              0064
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    H'51'
@V1      DC    V(IFDMSG50)
         DS    0F
         DS    0D
@DATA    EQU   *
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD
R1       EQU   00000001            FULLWORD POINTER REGISTER
R2       EQU   00000002            FULLWORD POINTER REGISTER
LINEPTR  EQU   00000005            FULLWORD POINTER REGISTER
I        EQU   00000006            3  BYTE  POINTER REGISTER
R7       EQU   00000007            FULLWORD POINTER REGISTER
R8       EQU   00000008            FULLWORD POINTER REGISTER
R14      EQU   00000014            FULLWORD POINTER REGISTER
R15      EQU   00000015            FULLWORD POINTER REGISTER
MSSGE    EQU   00000000            63 BYTE(S) ON WORD
MESLNGTH EQU   MSSGE+00000000      2 BYTE(S)
MCSFLAGS EQU   MSSGE+00000002      2 BYTE(S)
MSGID    EQU   MSSGE+00000004      8 BYTE(S)
MESSAGE  EQU   MSSGE+00000012      51 BYTE(S)
LINE     EQU   00000000            51 BYTE(S)
MSGPTR   EQU   00000000            28 BYTE(S) ON WORD
MSGPTR47 EQU   MSGPTR+00000000     FULLWORD POINTER
ADDRDMSG EQU   MSGPTR+00000004     FULLWORD POINTER
MSGPTR48 EQU   MSGPTR+00000008     FULLWORD POINTER
ADDRTMSG EQU   MSGPTR+00000012     FULLWORD POINTER
MSGPTR49 EQU   MSGPTR+00000016     FULLWORD POINTER
ADDROMSG EQU   MSGPTR+00000020     FULLWORD POINTER
MSGPTR46 EQU   MSGPTR+00000024     FULLWORD POINTER
         DS    00000072C
@TEMPS   DS    0F
PRMPTCOM IFDCOM
A00000   EQU   CESWTR+00000000     1 BYTE(S)
RETAINAC EQU   A00000+00000000     1 BIT(S)
A00001   EQU   A00000+00000000     1 BIT(S)
REMNOMSG EQU   A00000+00000000     1 BIT(S)
A00002   EQU   A00000+00000000     5 BIT(S)
INPUTBUF EQU   INBUFR+00000000     8 BYTE(S)
@DATEND  EQU   *
         END
