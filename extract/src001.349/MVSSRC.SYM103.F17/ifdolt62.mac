         TITLE 'IFDOLT62 CPU AFFINITY                                  *
                        '
IFDOLT62 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IFDOLT62  74.033'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @05,@SA00001                                        0001
         ST    @05,8(,@13)                                         0001
         LR    @13,@05                                             0001
*                                                                    */
*                                                                  0020
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0020
*   INTAL='00'X;                    /* CLEAR INTERNAL SWITHES        */
         MVI   INTAL,X'00'                                         0020
*   LOOPCNT='00'X;                  /* SET LOOP CONTROL TO ZERO      */
         SLR   LOOPCNT,LOOPCNT                                     0021
*   SELDEFLP='0'B;                  /* SET DEFAULT CPU 0 LOOP        */
         NI    SELDEFLP,B'01111111'                                0022
*   IF VERBCALL='1'B THEN           /* IS THIS A VERB FROM 105D      */
         TM    VERBCALL(COMMAPT),B'00100000'                       0023
         BO    @RT00023                                            0023
*     GOTO CPUAFN5A;                /* YES, PROCESS IFD105D REPLY    */
*CPUAFN01:                          /* NO.                           */
*                                                                  0025
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP SELECT CPU 0 AFN                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0025
*   SELAFFN='8000'X;                /* SET AFFINITY TO MASK CPU'S    */
CPUAFN01 MVC   SELAFFN(2,COMMAPT),@CB00361                         0025
*   CHARAFFN='00';                  /* SET CHARACTER FOR PRINT       */
         MVC   CHARAFFN(2,COMMAPT),@CC00363                        0026
*   LOOPCNT=LOOPCNT+'01'X;          /* ADD ONE TO LOOP CONTROL       */
         AH    LOOPCNT,@CH00364                                    0027
*CPUAFN02:                                                         0028
*                                                                  0028
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP SVC 59 CALL AFFNITY                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0028
*   R0=ADDR(ROPT);                  /* SET POINTER TO PARM LIST      */
CPUAFN02 LA    R0,ROPT(,COMMAPT)                                   0028
*   R1='60'X;                       /* SET FUNCTION CALL CODE        */
         LA    R1,96                                               0029
*   ROPT=ADDR(SELAFFN);             /* SET POINTER TO CPU IN LIST    */
         LA    @05,SELAFFN(,COMMAPT)                               0030
         ST    @05,ROPT(,COMMAPT)                                  0030
*   GEN(SVC   59);                  /* ISSUE SVC 59                  */
         SVC   59
*   IF RETCODE='00'X THEN           /* HAS CPU AFFINITY BEEN SET     */
         LTR   RETCODE,RETCODE                                     0032
         BZ    @RT00032                                            0032
*     GOTO CPUAFN09;                /* YES, READY TO EXIT            */
*   IF RETCODE='04'X THEN           /* NO, WAS CPU NOT AVAILABLE     */
         CH    RETCODE,@CH00369                                    0034
         BE    @RT00034                                            0034
*     GOTO CPUAFN03;                /* YES,PROCESS FOR MSG           */
*   IF RETCODE='08'X THEN           /* NO, WAS VARY CPU/CHAN IN      */
         CH    RETCODE,@CH00371                                    0036
         BE    @RT00036                                            0036
*     GOTO CPUAFN05;                /* YES, PROCESS SYS RES MSG      */
*   GOTO CPUAFN05;                  /* NO, PROCESS OTHER RETURN    0038
*                                                                    */
         B     CPUAFN05                                            0038
*CPUAFN03:                                                         0039
*                                                                  0039
*   /*****************************************************************/
*   /*                                                               */
*   /* CPU SELECTED NOT AVAILABLE                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0039
*   IF VERBCALL='1'B THEN           /* WAS THIS A SELECTED AFFN      */
CPUAFN03 TM    VERBCALL(COMMAPT),B'00100000'                       0039
         BNO   @RF00039                                            0039
*     DO;                           /* YES, ISSUE CPU NOT AVAIL      */
*       R1=IFD262I;                 /* GET ADDR MSG IFD262I          */
         LA    @05,IFDMSG62                                        0041
         L     R1,IFD262I(,@05)                                    0041
*       R15=PARPRADR;               /* GET PARALLEL PRINT ADDR       */
         L     R15,PARPRADR(,COMMAPT)                              0042
*       R15=6+R15;                  /* ENTRY POINT TO DPRINT         */
         AH    R15,@CH00112                                        0043
*       GEN(BALR  14,15);           /* LINK TO MODULE                */
         BALR  14,15
*       GOTO CPUAFN08;              /* NOW ISSUE REQUEST FOR AFFN    */
         B     CPUAFN08                                            0045
*     END;                          /* OR DEFAULT                    */
*   IF SELDEFLP='1'B THEN           /* IS THIS DEFAULT LOOP CPU1     */
@RF00039 TM    SELDEFLP,B'10000000'                                0047
         BNO   @RF00047                                            0047
*     DO;                           /* YES                           */
*       IF LOOPCNT>'0020'X THEN     /* HAS LOOP COUNT REACHED MAX    */
         CL    LOOPCNT,@CF00375                                    0049
         BNH   @RF00049                                            0049
*         DO;                       /* YES                           */
*           R1=IFD899I;             /* GET ADDR MSG IFD262I          */
         LA    @03,IFDMSG62                                        0051
         L     R1,IFD899I(,@03)                                    0051
*           MSGRETCD='05';          /* SET RETURN CODE FOR MSG       */
         MVC   MSGRETCD(2,R1),@CC00376                             0052
*           R15=PARPRADR;           /* GET PARALLEL PRINT ADDR       */
         L     R15,PARPRADR(,COMMAPT)                              0053
*           R15=6+R15;              /* ENTRY POINT TO DPRINT         */
         AH    R15,@CH00112                                        0054
*           GEN(BALR  14,15);       /* LINK TO MODULE                */
         BALR  14,15
*           R0=ADDR(ROPT);          /* SET POINTER TO PARMLIST       */
         LA    R0,ROPT(,COMMAPT)                                   0056
*           R1='14'X;               /* SET SVC CALL FUNCTION         */
         LA    R1,20                                               0057
*           GEN(SVC 59);            /* ISSUE SVC 59 FOR CLEAN-UP     */
         SVC 59
*           AFFNSET='0'B;           /* INDICATE NO AFFINITY SET      */
         NI    AFFNSET(COMMAPT),B'10111111'                        0059
*           GOTO CPUAFN10;          /* EXIT THIS FUNCTION            */
         B     CPUAFN10                                            0060
*         END;                      /* YES                           */
*       SELDEFLP='0'B;              /* SET DEFAULT LOOP CPU 0        */
@RF00049 NI    SELDEFLP,B'01111111'                                0062
*       GOTO CPUAFN01;              /* SET UP FOR AFFINITY CPU 0     */
         B     CPUAFN01                                            0063
*     END;                          /* NO                            */
*CPUAFN04:                                                         0065
*                                                                  0065
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP FOR CPU 1 AFFINITY                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0065
*   SELAFFN='4000'X;                /* SET CPU AFFN MASK CPU 1       */
@RF00047 DS    0H                                                  0065
CPUAFN04 MVC   SELAFFN(2,COMMAPT),@CB00380                         0065
*   CHARAFFN='01';                  /* SET CHARACTER FOR PRINT       */
         MVC   CHARAFFN(2,COMMAPT),@CC00382                        0066
*   SELDEFLP='1'B;                  /* SET DEFAULT LOOP CPU 1        */
         OI    SELDEFLP,B'10000000'                                0067
*   LOOPCNT=LOOPCNT+'01'X;          /* ADD ONE TO LOOP CONTROL       */
         AH    LOOPCNT,@CH00364                                    0068
*   GOTO CPUAFN02;                  /* ISSUE SVC 59 TO SET AFFN    0069
*                                                                    */
         B     CPUAFN02                                            0069
*CPUAFN05:                                                         0070
*                                                                  0070
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM RESOURCE IN USE                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0070
*   ECB=ECB&&ECB;                   /* CLEAR ECB FOR WTOR            */
CPUAFN05 XC    ECB(4),ECB                                          0070
*   RPLYBUF(1)=' ';                 /* CLEAR INPUT MSG AREA WITH     */
         MVI   RPLYBUF,C' '                                        0071
*   RPLYBUF(2:12)=RPLYBUF(1);       /* THIS CODE               YM7207*/
         MVI   RPLYBUF+2,C' '                                      0072
         MVC   RPLYBUF+3(9),RPLYBUF+2                              0072
         MVC   RPLYBUF+1(1),RPLYBUF                                0072
*   R1=IFD264D;                     /* SET PTR TO MSG IFD264D        */
         LA    @05,IFDMSG62                                        0073
         L     R1,IFD264D(,@05)                                    0073
*   IF RETAINAC='1'B THEN           /* IF REI IS ACTIVE              */
         TM    RETAINAC(COMMAPT),B'10000000'                       0074
         BNO   @RF00074                                            0074
*     DPMSGREI='1'B;                /* NO REI REPLY ALLOWED          */
         OI    DPMSGREI(COMMAPT),B'00000001'                       0075
*   R15=PARPRADR;                   /* GET PP ADDRESS                */
@RF00074 L     R15,PARPRADR(,COMMAPT)                              0076
*   R15=24+R15;                     /* ENTRY POINT TO DPRINT         */
         AH    R15,@CH00068                                        0077
*   GEN(BALR  14,15);               /* LINK TO MODULE                */
         BALR  14,15
*   RBUFPTR=BUFPTR62;               /* SET MAP BASE POINTER          */
         L     RBUFPTR,BUFPTR62                                    0079
*   IF VERBS(1:3)='CAN' THEN        /* IS THE REPLY CAN              */
         CLC   VERBS(3,RBUFPTR),@CC00385                           0080
         BNE   @RF00080                                            0080
*     DO;                           /* YES,SET UP TO CLEAN UP        */
*       R0=ADDR(ROPT);              /* SET POINTER TO PARMLIST       */
         LA    R0,ROPT(,COMMAPT)                                   0082
*       R1='14'X;                   /* SET SVC CALL FUNCTION         */
         LA    R1,20                                               0083
*       GEN(SVC 59);                /* ISSUE SVC 59 FOR CLEAN-UP     */
         SVC 59
*       AFFNSET='0'B;               /* INDICATE NO AFFINITY SET      */
         NI    AFFNSET(COMMAPT),B'10111111'                        0085
*       GOTO CPUAFN10;              /* EXIT THIS FUNCTION            */
         B     CPUAFN10                                            0086
*     END;                          /* NO                            */
*   IF VERBS='CPUAFFN=' THEN        /* WAS THE REPLY AN AFFN RE-     */
@RF00080 CLC   VERBS(8,RBUFPTR),@CC00386                           0088
         BNE   @RF00088                                            0088
*     DO;                           /* QUEST, YES                    */
*       VERBCALL='1'B;              /* INDICATE THIS AFFN REQUEST    */
         OI    VERBCALL(COMMAPT),B'00100000'                       0090
*       GOTO CPUAFN06;              /* GO TEST WHAT CPUID            */
         B     CPUAFN06                                            0091
*     END;                          /* NO                            */
*   IF VERBS(1:4)='NONE' THEN       /* WAS THE REPLY NONE FOR DE-    */
@RF00088 CLC   VERBS(4,RBUFPTR),@CC00388                           0093
         BNE   @RF00093                                            0093
*     DO;                           /* FAULT, YES                    */
*       VERBCALL='0'B;              /* SET FOR DEFAULT PROCESS       */
         NI    VERBCALL(COMMAPT),B'11011111'                       0095
*       SELDEFLP='0'B;              /* SET DEFAULT LOOP CPU 0        */
         NI    SELDEFLP,B'01111111'                                0096
*       GOTO CPUAFN01;              /* SET CPU AFFN FOR CPU 0        */
         B     CPUAFN01                                            0097
*     END;                          /* NO                            */
*   GOTO CPUAFN05;                  /* INPUT NO GOOD REISSUE MSG   0099
*                                                                    */
         B     CPUAFN05                                            0099
*CPUAFN5A:                                                         0100
*                                                                  0100
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS IFD105D REPLY                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0100
*   RBUFPTR=INBUFPTR;               /* OVERLAY MAP INPUT AREA        */
CPUAFN5A L     RBUFPTR,INBUFPTR(,COMMAPT)                          0100
*CPUAFN5B:                                                         0101
*                                                                  0101
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST CPUID IN MSG REPLY                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0101
*   IF CPUID='NONE' THEN            /* WAS THE ID EQ TO NONE         */
CPUAFN5B CLC   CPUID(4,RBUFPTR),@CC00388                           0101
         BNE   @RF00101                                            0101
*     DO;                           /* YES                           */
*       SELDEFLP='0'B;              /* SET DEFAULT LOOP CPU 0        */
         NI    SELDEFLP,B'01111111'                                0103
*       VERBCALL='0'B;              /* INDICATE THIS DEFAULT         */
         NI    VERBCALL(COMMAPT),B'11011111'                       0104
*       GOTO CPUAFN01;              /* SET UP CPU AFFN CPU 0         */
         B     CPUAFN01                                            0105
*     END;                          /* NO                          0106
*                                                                    */
*CPUAFN06:                                                         0107
*                                                                  0107
*   /*****************************************************************/
*   /*                                                               */
*   /* CPU ID PROCESS                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0107
*   IF CPUID(2)=' ' THEN            /* IS THIS A 1 CHAR CPUID        */
@RF00101 DS    0H                                                  0107
CPUAFN06 CLI   CPUID+1(RBUFPTR),C' '                               0107
         BNE   @RF00107                                            0107
*     DO;                           /* YES                           */
*       IF CPUID(1)='0' THEN        /* IS THIS REQUEST FOR CPU 0     */
         CLI   CPUID(RBUFPTR),C'0'                                 0109
         BE    @RT00109                                            0109
*         GOTO CPUAFN01;            /* YES, GO PROCESS               */
*       IF CPUID(1)='1' THEN        /* IS THIS REQUEST FOR CPU 1     */
         CLI   CPUID(RBUFPTR),C'1'                                 0111
         BE    @RT00111                                            0111
*         GOTO CPUAFN04;            /* YES, GO PROCESS               */
*CPUAFN07:                          /* NO.                           */
*                                                                  0113
*       /*************************************************************/
*       /*                                                           */
*       /* ERROR IN CPUID                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0113
*       R1=IFD261I;                 /* GET PTR TO IFD261I MSG        */
CPUAFN07 LA    @05,IFDMSG62                                        0113
         L     R1,IFD261I(,@05)                                    0113
*       R15=PARPRADR;               /* GET PARALLEL PRINT ADDR       */
         L     R15,PARPRADR(,COMMAPT)                              0114
*       R15=6+R15;                  /* ENTRY POINT TO DPRINT         */
         AH    R15,@CH00112                                        0115
*       GEN(BALR  14,15);           /* LINK TO MODULE                */
         BALR  14,15
*CPUAFN08:                                                         0117
*                                                                  0117
*       /*************************************************************/
*       /*                                                           */
*       /* REQUEST WITH IFD263D                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0117
*       ECB=ECB&&ECB;               /* CLEAR ECB TO ZERO             */
CPUAFN08 XC    ECB(4),ECB                                          0117
*       RPLYBUF(1)=' ';             /* CLEAR INPUT AREA WITH THIS    */
         MVI   RPLYBUF,C' '                                        0118
*       RPLYBUF(2:12)=RPLYBUF(1);   /* CODE                    YM7207*/
         MVI   RPLYBUF+2,C' '                                      0119
         MVC   RPLYBUF+3(9),RPLYBUF+2                              0119
         MVC   RPLYBUF+1(1),RPLYBUF                                0119
*       R1=IFD263D;                 /* GET PTR TO MSG IFD263D        */
         LA    @05,IFDMSG62                                        0120
         L     R1,IFD263D(,@05)                                    0120
*       IF RETAINAC='1'B THEN       /* IF REI IS ACTIVE              */
         TM    RETAINAC(COMMAPT),B'10000000'                       0121
         BNO   @RF00121                                            0121
*         DPMSGREI='1'B;            /* NO REI REPLY ALLOWED          */
         OI    DPMSGREI(COMMAPT),B'00000001'                       0122
*       R15=PARPRADR;               /* GET PP ADDRESS          YM7207*/
@RF00121 L     R15,PARPRADR(,COMMAPT)                              0123
*       R15=24+R15;                 /* ENTRY POINT TO DPRT     YM7207*/
         AH    R15,@CH00068                                        0124
*       GEN(BALR  14,15);           /* LINK TO MODULE          YM7207*/
         BALR  14,15
*       RBUFPTR=BUFPTR62;           /* SET OVERLAY AREA MAP BASE     */
         L     RBUFPTR,BUFPTR62                                    0126
*       IF VERBS='CPUAFFN=' THEN    /* WAS THE REPLY FOR AFFINITY    */
         CLC   VERBS(8,RBUFPTR),@CC00386                           0127
         BE    @RT00127                                            0127
*         GOTO CPUAFN5B;            /* YES, GO PROCESS CPU ID        */
*       GOTO CPUAFN08;              /* NO ERROR ON INPUT REQUEST     */
         B     CPUAFN08                                            0129
*     END;                          /* NO                            */
*   IF CPUID(3)^=' ' THEN           /* IS THIS ERROR RPLY      YM7207*/
@RF00107 CLI   CPUID+2(RBUFPTR),C' '                               0131
         BNE   @RT00131                                            0131
*     GOTO CPUAFN07;                /* YES,OUTPUT ERROR MSGYM7207    */
*   IF CPUID(1:2)='00' THEN         /* IS THIS 2 CHAR CPU 00         */
         CLC   CPUID(2,RBUFPTR),@CC00363                           0133
         BE    @RT00133                                            0133
*     GOTO CPUAFN01;                /* YES GO PROCESS                */
*   IF CPUID(1:2)='01' THEN         /* NO,IS THIS 2 CHAR CPU 01      */
         CLC   CPUID(2,RBUFPTR),@CC00382                           0135
         BE    @RT00135                                            0135
*     GOTO CPUAFN04;                /* YES, GO PROCESS               */
*   GOTO CPUAFN07;                  /* NO, INVALID CPUID ERRMSG    0137
*                                                                    */
         B     CPUAFN07                                            0137
*CPUAFN09:                                                         0138
*                                                                  0138
*   /*****************************************************************/
*   /*                                                               */
*   /* SET CPU AFFINITY INDICATOR AND EXIT                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*   AFFNSET='1'B;                   /* INDICATE SETTING TO CALLER    */
CPUAFN09 OI    AFFNSET(COMMAPT),B'01000000'                        0138
*CPUAFN10:                                                         0139
*                                                                  0139
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR EXIT LABEL EXIT FUNCTION CPU AFFINITY                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*   RETURN;                                                        0139
@EL00001 L     @13,4(,@13)                                         0139
@EF00001 DS    0H                                                  0139
@ER00001 LM    @14,@12,12(@13)                                     0139
         BR    @14                                                 0139
*   END                             /* END SECTION                 0140
*                                                                    */
*                                                                  0140
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFDPF1  )                                       */
*                                                                  0140
*       ;                                                          0140
         B     @EL00001                                            0140
@DATA    DS    0H
@CH00112 DC    H'6'
@CH00068 DC    H'24'
@CH00364 DC    XL2'01'
@CH00369 DC    XL2'04'
@CH00371 DC    XL2'08'
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00375 DC    XL4'0020'
         DS    0D
BUFPTR62 DC    AL4(RPLYBUF)
@CC00363 DC    C'00'
@CC00376 DC    C'05'
@CC00382 DC    C'01'
@CC00385 DC    C'CAN'
@CC00388 DC    C'NONE'
@CC00386 DC    C'CPUAFFN='
@CB00361 DC    X'8000'
@CB00380 DC    X'4000'
RPLYBUF  DS    CL12
INTAL    DS    CL1
         ORG   INTAL
SELDEFLP DS    BL1
@NM00038 EQU   INTAL+0
         ORG   INTAL+1
         DS    CL2
ECB      DS    CL4
IFDOLT62 CSECT
*                                       /* CPU AFFINITY MESSAGES     */
IFDMSG62 DS    0F
         DC    A(MSG261I)                * MESSAGE ADDRESS  MSG261I   *
         DC    A(MSG262I)                * MESSAGE ADDRESS  MSG262I   *
         DC    A(MSG263D)                * MESSAGE ADDRESS  MSG263D   *
         DC    A(MSG264D)                * MESSAGE ADDRESS  MSG264D   *
         DC    A(MSG899I)                * MESSAGE ADDRESS  MSG899I   *
MSG261I  WTO   'IFD261I INVALID CPU ID ENTERED',ROUTCDE=10,DESC=7,MF=L
MSG262I  WTO   'IFD262I SELECTED CPU NOT AVAILABLE',ROUTCDE=10,DESC=7,MX
               F=L
MSG263D  DS    0F
         DC    X'0C'                                           *YM05405
         DC    AL3(RPLYBUF)
         DC    AL4(ECB)
         WTO   'IFD263D REPLY CPUAFFN=X OR NONE, X=CPUID, NONE FOR DEFAX
               ULT',ROUTCDE=10,DESC=7,MF=L
MSG264D  DS    0F
         DC    X'0A'
         DC    AL3(RPLYBUF)
         DC    AL4(ECB)
         WTO   'IFD264D SYSTEM RESOURCE NOT AVAILABLE,REPLY CPUAFFN=/CAX
               N/NONE',ROUTCDE=10,DESC=7,MF=L
MSG899I  WTO   'IFD899I OLTEP INITIALIZATION CONFLICTS, OLTEP MUST TERMX
               INATE-05',MF=L,ROUTCDE=10,DESC=7
         IFDPATCH                                              *YM03337
IFDOLT62 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LOOPCNT  EQU   @04
RBUFPTR  EQU   @03
COMMAPT  EQU   @02
RETCODE  EQU   @15
R0       EQU   @00
R1       EQU   @01
R14      EQU   @14
R15      EQU   @15
COMMAP   EQU   0
INBUFPTR EQU   COMMAP+136
IOSCB    EQU   COMMAP+512
OECBWRD1 EQU   IOSCB+132
EFCTRCB  EQU   COMMAP+648
FLGA     EQU   EFCTRCB+8
FLGB     EQU   EFCTRCB+9
IODEVTAB EQU   COMMAP+672
IOECB1   EQU   IODEVTAB+8
CMPLT    EQU   IOECB1
@NM00010 EQU   IOECB1+2
SELAFFN  EQU   COMMAP+708
CHARAFFN EQU   COMMAP+710
CESWT9   EQU   COMMAP+862
CESWT10  EQU   COMMAP+863
AFFNSET  EQU   CESWT10
VERBCALL EQU   CESWT10
MCT      EQU   COMMAP+888
PARPRADR EQU   MCT+164
WKSVC    EQU   COMMAP+1100
ROPT     EQU   WKSVC+4
OLTTAB   EQU   COMMAP+1116
CESWITCH EQU   COMMAP+1456
CESWT    EQU   CESWITCH
CESWT1   EQU   CESWITCH+1
CESWT2   EQU   CESWITCH+2
CESWT3   EQU   CESWITCH+3
CESWT4   EQU   CESWITCH+4
CESWT5   EQU   CESWITCH+5
CESWT6   EQU   CESWITCH+6
CESWT7   EQU   CESWITCH+7
CESWT8   EQU   CESWITCH+8
CESWTR   EQU   COMMAP+1532
RETAINAC EQU   CESWTR
CESWTR1  EQU   COMMAP+1533
CESWTR2  EQU   COMMAP+1534
DPMSGREI EQU   CESWTR2
REPLYMAP EQU   0
VERBS    EQU   REPLYMAP
CPUID    EQU   REPLYMAP+8
@NM00039 EQU   0
IFD261I  EQU   @NM00039
IFD262I  EQU   @NM00039+4
IFD263D  EQU   @NM00039+8
IFD264D  EQU   @NM00039+12
IFD899I  EQU   @NM00039+16
@NM00040 EQU   0
MSGRETCD EQU   @NM00040+65
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00041 EQU   @NM00040
DEVTAB   EQU   COMMAP+2020
THIRDMCT EQU   COMMAP+1812
NEXTMCT  EQU   COMMAP+1604
@NM00037 EQU   COMMAP+1596
VRSIZE   EQU   COMMAP+1592
CORERSLT EQU   COMMAP+1584
PGFXOLT  EQU   COMMAP+1576
PARTITEM EQU   COMMAP+1564
PGFXLIST EQU   COMMAP+1548
SYMPTR   EQU   COMMAP+1544
EXPAND1  EQU   COMMAP+1540
@NM00036 EQU   COMMAP+1538
ZUESUCB  EQU   COMMAP+1536
CESWTR3  EQU   COMMAP+1535
@NM00035 EQU   CESWTR2
OPTERR   EQU   CESWTR2
WAIT     EQU   CESWTR2
COMLOOP  EQU   CESWTR2
ONCOMM   EQU   CESWTR2
@NM00034 EQU   CESWTR2
REPLY00  EQU   CESWTR2
REIENTRY EQU   CESWTR1
EDOTMSG  EQU   CESWTR1
REMANS   EQU   CESWTR1
RETRIEVE EQU   CESWTR1
INFOMSG  EQU   CESWTR1
CECOMANS EQU   CESWTR1
EXECANS  EQU   CESWTR1
ILLRESP  EQU   CESWTR1
@NM00033 EQU   CESWTR
EXECOUT  EQU   CESWTR
IMRESP   EQU   CESWTR
TRANSMSG EQU   CESWTR
CENOMSG  EQU   CESWTR
REMONMSG EQU   CESWTR
REMERR   EQU   CESWTR
REIUCB   EQU   COMMAP+1528
RESPBUF  EQU   COMMAP+1524
TALKECB  EQU   COMMAP+1520
REIECB   EQU   COMMAP+1516
REIOBPTR EQU   COMMAP+1512
REIDCBPT EQU   COMMAP+1508
RINBUF   EQU   COMMAP+1504
RTALKBUF EQU   COMMAP+1500
MHRPTR   EQU   COMMAP+1496
ENDJOB   EQU   COMMAP+1492
MSGMOD   EQU   COMMAP+1488
RDCBPTR  EQU   COMMAP+1484
READDMOD EQU   COMMAP+1480
@NM00032 EQU   COMMAP+1477
READDSV  EQU   COMMAP+1471
CNT37    EQU   COMMAP+1470
DPLEVEL  EQU   COMMAP+1469
UNITUSE  EQU   COMMAP+1468
UNICTR   EQU   COMMAP+1467
SECTUSE  EQU   COMMAP+1466
DYNCOM   EQU   COMMAP+1465
TALKHERE EQU   CESWT8
SNEWRUN  EQU   CESWT8
SUTMSG   EQU   CESWT8
OLTINVV  EQU   CESWT8
READDCHK EQU   CESWT8
@NM00031 EQU   CESWT8
@NM00030 EQU   CESWT8
LISTFIX  EQU   CESWT8
GOTINPUT EQU   CESWT7
VIRTUAL  EQU   CESWT7
@NM00029 EQU   CESWT7
@NM00028 EQU   CESWT7
@NM00027 EQU   CESWT7
REMOTE   EQU   CESWT7
RETTO31  EQU   CESWT7
INCLST   EQU   CESWT7
RTSTAE   EQU   CESWT6
SECRUN   EQU   CESWT6
NORUN    EQU   CESWT6
CODE5    EQU   CESWT6
PFPMSG   EQU   CESWT6
EOFBIT   EQU   CESWT6
ATM      EQU   CESWT6
UTSCAL   EQU   CESWT6
PRNTOPTN EQU   CESWT5
SYMBFLG  EQU   CESWT5
PCEMSG   EQU   CESWT5
PFEMSG   EQU   CESWT5
FCEFLG   EQU   CESWT5
FFEFLG   EQU   CESWT5
RSLTFLG  EQU   CESWT5
HDRFLG   EQU   CESWT5
WTOFLG   EQU   CESWT4
RPLYFLG  EQU   CESWT4
WTORFLG  EQU   CESWT4
@NM00026 EQU   CESWT4
WRTFLG   EQU   CESWT4
WAITFLG  EQU   CESWT4
DPRFLG   EQU   CESWT4
RSTRFLG  EQU   CESWT4
NODP     EQU   CESWT3
CDEXIST  EQU   CESWT3
TP1419   EQU   CESWT3
SUSDEL   EQU   CESWT3
GRBCNTL  EQU   CESWT3
BYPDEV   EQU   CESWT3
BYPALDEV EQU   CESWT3
TALKVERB EQU   CESWT3
@NM00025 EQU   CESWT2
TAPEHDR  EQU   CESWT2
NDR      EQU   CESWT2
INITENT  EQU   CESWT2
@NM00024 EQU   CESWT2
FECOND   EQU   CESWT2
@NM00023 EQU   CESWT2
NDCFO    EQU   CESWT2
TPFLAG   EQU   CESWT1
ONLINEOK EQU   CESWT1
@NM00022 EQU   CESWT1
FILMSK   EQU   CESWT1
WAITFG   EQU   CESWT1
@NM00021 EQU   CESWT1
SKTST    EQU   CESWT1
RTNFLD   EQU   CESWT1
@NM00020 EQU   CESWT
FERINT   EQU   CESWT
REINT    EQU   CESWT
LEGALDEV EQU   CESWT
NUTS     EQU   CESWT
OUTS     EQU   CESWT
SECDEV   EQU   CESWT
LEGALTST EQU   CESWT
SAVENT   EQU   COMMAP+1452
@NM00019 EQU   COMMAP+1450
SAVECNT  EQU   COMMAP+1448
HRTSEL   EQU   COMMAP+1446
TLCOUNT  EQU   COMMAP+1444
TPSAVE   EQU   COMMAP+1440
MSGAD37  EQU   COMMAP+1436
REPLY37  EQU   COMMAP+1364
ECB37    EQU   COMMAP+1360
ADSVAREA EQU   COMMAP+1356
NEXTREC  EQU   COMMAP+1352
COMMINT  EQU   COMMAP+1348
REDEFINE EQU   COMMAP+1344
SECDVPTR EQU   COMMAP+1340
PRIDVPTR EQU   COMMAP+1336
DPRDEBAD EQU   COMMAP+1332
EXTBUF   EQU   COMMAP+1276
UTCOM    EQU   COMMAP+1212
ECB3     EQU   COMMAP+1208
TSTDEBAD EQU   COMMAP+1204
TUCBAD2  EQU   COMMAP+1200
TUCBAD1  EQU   COMMAP+1196
REGX     EQU   COMMAP+1192
PLKMOR   EQU   COMMAP+1176
SATAB    EQU   COMMAP+1164
SCHEDSA  EQU   COMMAP+1160
LOGADR   EQU   COMMAP+1156
@NM00018 EQU   OLTTAB+32
TAB28    EQU   OLTTAB+28
@NM00017 EQU   OLTTAB
@NM00016 EQU   WKSVC+8
@NM00015 EQU   WKSVC
MCT1ADR  EQU   COMMAP+1096
@NM00014 EQU   MCT+168
@NM00013 EQU   MCT
UTCOMAD  EQU   COMMAP+884
TABAD    EQU   COMMAP+880
DEVDEPAD EQU   COMMAP+876
PSCT     EQU   COMMAP+872
OPEN3    EQU   COMMAP+868
OPEN2    EQU   COMMAP+864
MPSYS    EQU   CESWT10
@NM00012 EQU   CESWT9
VRCAP    EQU   CESWT9
RESTBENT EQU   CESWT9
CDSEQU   EQU   CESWT9
TABLNGTH EQU   COMMAP+860
DEVTBPTR EQU   COMMAP+856
XXXXXXXX EQU   COMMAP+712
WTCMPCD  EQU   @NM00010
@NM00011 EQU   @NM00010
PSUDPOST EQU   @NM00010
@NM00009 EQU   IOECB1+1
CMPLCODE EQU   CMPLT
POSTBIT  EQU   CMPLT
WAITBIT  EQU   CMPLT
IOSBPTR1 EQU   IODEVTAB+4
IODEV1   EQU   IODEVTAB
IOEFTRAD EQU   COMMAP+668
SEEKPTR  EQU   EFCTRCB+16
TECBPTRX EQU   EFCTRCB+12
SNSCNT   EQU   EFCTRCB+11
FILEMSK  EQU   EFCTRCB+10
@NM00008 EQU   FLGB
@NM00007 EQU   FLGB
@NM00006 EQU   FLGB
@NM00005 EQU   FLGB
OLDTECBX EQU   FLGB
VIRTCCWS EQU   FLGB
ATTNIN   EQU   FLGB
INTIRNAL EQU   FLGB
@NM00004 EQU   FLGA
@NM00003 EQU   FLGA
@NM00002 EQU   FLGA
@NM00001 EQU   FLGA
SPEXPOS  EQU   FLGA
GDP      EQU   FLGA
CEDEPOST EQU   FLGA
BYPASPFX EQU   FLGA
DVTPTR   EQU   EFCTRCB+4
CCWPTR   EQU   EFCTRCB
OECBX    EQU   OECBWRD1+2
OECBINCT EQU   OECBWRD1+1
OECBSNSC EQU   OECBWRD1
MODUSECB EQU   IOSCB+108
MODIOSB  EQU   IOSCB
DIEPTR   EQU   COMMAP+508
ABNMEXIT EQU   COMMAP+504
NORMEXIT EQU   COMMAP+500
PCIEXIT  EQU   COMMAP+496
SECLST   EQU   COMMAP+358
PGMTAB   EQU   COMMAP+350
DATIND   EQU   COMMAP+348
DATPTR   EQU   COMMAP+344
UTENT    EQU   COMMAP+340
SECPTR   EQU   COMMAP+336
PRTBUFR  EQU   COMMAP+212
INBUFR   EQU   COMMAP+140
LGWRTCT  EQU   COMMAP+96
DOLT00PT EQU   COMMAP+92
CHASCT   EQU   COMMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00023 EQU   CPUAFN5A
@RT00032 EQU   CPUAFN09
@RT00034 EQU   CPUAFN03
@RT00036 EQU   CPUAFN05
@RF00093 EQU   CPUAFN05
@RT00109 EQU   CPUAFN01
@RT00111 EQU   CPUAFN04
@RT00127 EQU   CPUAFN5B
@RT00131 EQU   CPUAFN07
@RT00133 EQU   CPUAFN01
@RT00135 EQU   CPUAFN04
CPUAFN10 EQU   @EL00001
@ENDDATA EQU   *
         END   IFDOLT62
