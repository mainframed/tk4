         TITLE 'CUTEST SVC IGC0905I'
         LCLA  &T,&SPN                                            0001
.@001    ANOP                                                     0001
IGC0905I CSECT ,                                                  0001
         BC    15,24(0,@F)
         DC    C'IGC0905I 26 APR 78'                             0001
         BALR  @B,0                                               0001
@PSTART  DS    0H                                                 0001
         USING @PSTART+00000,@B                                   0001
         LR    @C,@1                                              0001
         L     @0,@SIZ001                                         0001
         GETMAIN  R,LV=(0)                                        0001
         XR    @C,@1                                              0001
         XR    @1,@C                                              0001
         XR    @C,@1                                              0001
         USING @DATD+00000,@C                                     0001
         XC    @TEMPS(@L),@TEMPS                                  0001
         TITLE 'CUTEST SVC IGC0905I'
         USING CVTMAP,CVTREG           ADDRESSABILITY TO CVT   Y02008
         DS    0H
*         SAVER14=R14;                 /* SAVE RETURN ADDRESS        */
         ST    @E,SAVER14                                         0052
*         CVTREG=CVTADDR;                /* ADDR CVT FOR USE    Y02008*
         L     @2,CVTADPTR                                        0053
         L     @8,0(0,@2)                                         0053
*         IF R1=CODE0C THEN              /* VARY DSID REQ ?   @Y30LPAW*
         SR    @F,@F                                              0054
         IC    @F,CODE0C                                          0054
         CR    @F,@1                                              0054
*            GOTO VARYDSID;              /* YES-GO AROUND     @Y30LPAW*
         BC    08,VARYDSID                                        0055
*         IF R1=CODE10 THEN              /* STORE SSID?       @Y30LPAW*
         SR    @F,@F                                              0056
         IC    @F,CODE10                                          0056
         CR    @F,@1                                              0056
*            GOTO STORSSID;              /*  YES-GO AROUND    @Y30LPAW*
         BC    08,STORSSID                                        0057
*         R3=8;                          /* INITIALIZE MSG PTR
         LA    @3,8                                               0058
*         R6=EXTENT;                     /* GET EXTENT
         LH    @6,4(0,@9)                                         0059
*         /* CHECK UCB                                                *
*   UCBCHK:
*         FLAGS='00'X;                  /* CLEAR INTERNAL FLAGS Y02008*
UCBCHK   MVI   FLAGS,X'00'                                        0060
*         RESTRICT(R7,R13);
*         R7=R7&&R7;                      /* FREE ROR IOS USE    X03008
         XR    @7,@7                                              0062
*         R13=ADDR(IOSGENTBL);            /* ADDRESS IOS WK AREA X03008
         L     @2,CVTEXT2                                         0063
         L     @2,28(0,@2)         CVTOLTP                        0063
         LA    @D,40(0,@2)                                        0063
*         EXTENT=R6;                      /* NUM DEVS ON C-UNIT  X03008
         STH   @6,4(0,@9)                                         0064
*         R6=BASEADDR;                    /* DEVICE ADDRESS      X03008
         L     @6,0(0,@9)                                         0065
*         GEN;
REG13    EQU   13
IOSGEN09 IOSGEN  UCBLOOK,REG13                                  Y02008
         DS    0H
*         R6=EXTENT;                      /* RESTORE EXTENT CNT  X03008
         LH    @6,4(0,@9)                                         0067
*         IF R15^=4                       /* IF UCB ADDR FOUND   X03008
*          THEN                           /* GO TO UCB FOR DEV   X03008
         CH    @F,@D1                                             0068
*           GO TO UCBCHK01;               /* AND CHK FLAGS       X03008
         BC    07,UCBCHK01                                        0069
* UCBCHK00:
*         R6=R6-1;                        /* DECREMENT DEV CNTR  X03008
UCBCHK00 BCTR  @6,0                                               0070
*         BASEADDR=BASEADDR+1;            /* NEXT DEV ADDR ON CU X03008
         LA    @F,1                                               0071
         A     @F,0(0,@9)                                         0071
         ST    @F,0(0,@9)                                         0071
*         IF R6=0                         /* NO MORE DEVS TO CHK X03008
*          THEN                           /* ON CNTRL UNIT, SO,  X03008
         LTR   @6,@6                                              0072
*           GO TO CLEANUP;                /* RESTORE VALUES,EXIT X03008
         BC    08,CLEANUP                                         0073
*         GO TO UCBCHK;                   /* MORE DEVS, GET NEXT X03008
         BC    15,UCBCHK                                          0074
*
* UCBCHK01:
*         RELEASE(R13);
*         IF UNITDEV^=CNTUNDEV THEN       /* MATCH UCB AND DEV  X03008*
UCBCHK01 CLC   3(1,@9),5(@7)                                      0076
*           GO TO UCBCHK00;               /* ADDR. MATCH MEANS  X03008*
         BC    07,UCBCHK00                                        0077
*                                         /* VALID UCB FOR DEV  X03008*
*
*         IF SYSIN='1'B ×                 /* IS THIS SYSIN DEV YA00884*
*            SYSOUT='1'B ×                /* IS IT SYSOUT DEV?  Y02008*
*             UCBSYSR='1'B                /* IS IT SYS CONSOLE? Y02008*
*          THEN                           /* YES,              YA00884*
         TM    12(@7),B'10000000'                                 0078
         BC    01,@9FF                                            0078
         TM    12(@7),B'01000000'                                 0078
         BC    01,@9FE                                            0078
         TM    3(@7),B'00000010'                                  0078
         BC    12,@9FD                                            0078
*           GO TO NOTEST;                 /* DON'T TEST THIS DEV.     *
         BC    03,NOTEST                                          0079
*
*           IF UCBONLI='0'B &           /* IS DEVICE OFFLINE ANDY02008*
*              UCBALOC='0'B             /* NOT ALLOCATED?       Y02008*
*          THEN                           /* NO,               YA00884*
@9FD     TM    3(@7),B'10000000'                                  0080
         BC    05,@9FC                                            0080
         TM    3(@7),B'00001000'                                  0080
*           GO TO UCBCHK02;               /* DEV FREE FOR OLTEP.      *
         BC    10,UCBCHK02                                        0081
*          ELSE                           /* CHK BTAM DEV,REQST.YA00884
*           GO TO UCBCHK03;
         BC    15,UCBCHK03                                        0082
*
* UCBCHK02:
*
*            EXTENT=R6;                  /* SAVE EXTENT VALUE   Y02008*
UCBCHK02 STH   @6,4(0,@9)                                         0083
*            RESTRICT(R4,R5);
*            GEN ( BAL R6,UCBCHK08);     /* SEARCH UCB/BITMASK  Y02008*
          BAL R6,UCBCHK08
         DS    0H
*            R6=EXTENT;                  /* RESTORE EXTENT  REG Y02008*
         LH    @6,4(0,@9)                                         0086
*         RELEASE (R4,R5);
*
*         IF OKTEST='1'B                 /* IF DEV OK TO TEST   Y02008*
*          THEN
         TM    FLAGS,B'01000000'                                  0088
*           GO TO DECREXT;               /* LOOK AT NEST DEV    Y02008*
         BC    01,DECREXT                                         0089
*          ELSE                          /* DEV NOT OK TO TEST  Y02008*
*           GO TO NOTEST;                /* PUT IN OUTPUT MSG   Y02008*
         BC    15,NOTEST                                          0090
*
* UCBCHK08:
*
*         /* THE FOLLOWING CODE WILL ISOLATE AN OLTEP BITMASK BITY02008
*
*      RESTRICT(R10);
UCBCHK08 EQU   *                                                  0091
*         GEN( USING CVTMAP,CVTREG);      /* ADDRESS CVT DATA    Y02008
          USING CVTMAP,CVTREG
         DS    0H
*         R10=CVTILK2;                    /* ADDRESS UCB ADR TAB X03008
         L     @A,CVTILK2                                         0093
* UCBCHK2A: GEN;
UCBCHK2A EQU   *                                                  0094
         CLM   R7,B'0011',0(R10)            LOOKING AT CUTEST   X03008
         BC    08,UCBCHK2B                  UCBIN LOOKUP TABLE? X03008
         DS    0H
*                                         /* NO, NOT CUTEST UCB  X03008
*            IF UCBCHAR^='FF'X            /* IS THIS END OF TABLEX03008
*             THEN                        /* NO, THEN ADDR NEXT  X03008
         CLI   1(@A),X'FF'                                        0095
         BC    08,@9FA                                            0095
*              DO;
*               R10=R10+2;                /* UCB TABLE ENTRY     X03008
         AH    @A,@D2                                             0097
*               GO TO UCBCHK2A;           /* CHECK NEXT UCB ADDR X03008
         BC    15,UCBCHK2A                                        0098
*              END;
*             ELSE                        /* NOW AT END OF TABLE,X03008
*              DO;
*               RELEASE (R4,R5);
*               DONOTEST='1'B;           /* DONOT TEST THIS DEV Y02008*
@9FA     OI    FLAGS,B'10000000'                                  0102
*               GEN ( BR R6 );           /* RETURN TO MAIN LINE Y02008*
          BR R6
         DS    0H
*              END;
*
*  UCBCHK2B:
*         RESTRICT(R4,R4);
@9F9     EQU   *                                                  0105
*         R4=((R10-CVTILK2)+2)/2;       /* NUM UCBS LOOKED AT   X03008*
UCBCHK2B LR    @F,@A                                              0106
         S     @F,CVTILK2                                         0106
         AH    @F,@D2                                             0106
         LR    @E,@F                                              0106
         SRDA  @E,32                                              0106
         LA    @0,2                                               0106
         DR    @E,@0                                              0106
         LR    @4,@F                                              0106
*         R5=(R4/8)+1;                  /* GET BYTE NUM IN TAB  X03008*
         LR    @E,@4                                              0107
         SRA   @E,3                                               0107
         AH    @E,@D3                                             0107
         LR    @5,@E                                              0107
*         R4=(R4//8);                   /* GET BIT IN BYTE      X03008*
         LR    @E,@4                                              0108
         SRDA  @E,32                                              0108
         LA    @0,8                                               0108
         DR    @E,@0                                              0108
         LR    @4,@E                                              0108
*         IF R4=0                       /* LAST BIT IN BYTE?    X03008*
*          THEN                         /* YES, RESET REGS      X03008*
         LTR   @4,@4                                              0109
         BC    07,@9F8                                            0109
*           DO;                         /* TO ADDR CORRECT BIT  X03008*
*            R5=R5-1;                   /* ADDR PROPER BYTE     X03008*
         BCTR  @5,0                                               0111
*            R4=8;                      /* ADDR PROPER BIT      X03008*
         LA    @4,8                                               0112
*           END;
*         IF UCBNALOC='1'B                /* IS DEV OWNED BY ANOTHER
*          THEN                           /* USER?  YES, CAN   YA00884
@9F8     TM    1(@7),B'00000100'                                  0114
         BC    12,@9F7                                            0114
*           DO;
*         IOSGENTBL(1)=UCBBITS(R5);     /* ISOLATE UCBBIT BYTE  X03008*
         LR    @2,@5                                              0116
         BCTR  @2,0                                               0116
         L     @5,CVTEXT2                                         0116
         L     @5,28(0,@5)         CVTOLTP                        0116
         MVC   @TEMP4(4),28(@5)                                   0116
         L     @5,@TEMP4           OLTEPTAB                       0116
         LA    @E,4(@2,@5)                                        0116
         L     @2,CVTEXT2                                         0116
         L     @2,28(0,@2)         CVTOLTP                        0116
         MVC   40(1,@2),0(@E)                                     0116
*         IOSGENTBL(1)=IOSGENTBL(1)&BITMASK(R4); /* GET UCB BIT Y02008*
         LR    @5,@4                                              0117
         LA    @E,BITMASK-1(@5)                                   0117
         NC    40(1,@2),0(@E)                                     0117
*
*         IF IOSGENTBL(1)='00'X         /* DO WE OWN DEVICE?    Y02008*
*          THEN
         CLI   40(@2),X'00'                                       0118
         BC    07,@9F6                                            0118
*          DO;                          /* NOT  GOOD DEV        Y02008*
*           DONOTEST='1'B;              /* NOT TESTABLE DEVICE  Y02008*
         OI    FLAGS,B'10000000'                                  0120
*           GEN( BR R6);                /* RET TO MAIN FLOW     Y02008*
          BR R6
         DS    0H
*          END;
*         OKTEST='1'B;                  /* DEV OK TO TEST       Y02008*
@9F6     OI    FLAGS,B'01000000'                                  0123
*         GEN ( BR R6 );                 /* RETURN TO MAIN FLOW Y02008*
          BR R6
         DS    0H
*         END;
*
*         UCBBITS(R5)=UCBBITS(R5)×BITMASK(R4);   /* TURN ON BIT Y02008*
@9F7     LR    @2,@4                                              0126
         LA    @E,BITMASK-1(@2)                                   0126
         BCTR  @5,0                                               0126
         L     @2,CVTEXT2                                         0126
         L     @2,28(0,@2)         CVTOLTP                        0126
         MVC   @TEMP4(4),28(@2)                                   0126
         L     @2,@TEMP4           OLTEPTAB                       0126
         LA    @A,4(@5,@2)                                        0126
         OC    0(1,@A),0(@E)                                      0126
*
* UCBCHK8A:
*
*         IF UCBNALOC='1'B               /* IF UCBNALOC IS ON   Y02008*
*          THEN                          /* DEV IS NOT TESTABLE Y02008*
UCBCHK8A TM    1(@7),B'00000100'                                  0127
         BC    12,@9F5                                            0127
*           DO;                          /* MUST SET ON FLAG    Y02008*
*            DONOTEST='1'B;              /* FOR NOT TESTABLE DEVY02008*
         OI    FLAGS,B'10000000'                                  0129
*            GEN ( BR R6 );              /* RET TO MAIN FLOW    Y02008*
          BR R6
         DS    0H
*           END;
*
*         /* THE FOLLOWING CODE WILL COMPARE THE UCBNALOC BIT INY02008*
*         /* THE UCB, AND SET IT ON IF IT IS NOT ON.  IF IT IS  Y02008*
*         /* ALREADY ON (BY ANOTHER USER) WE WILL NOT TURN IT ONY02008*
*
*         R4=UNALMASK;                   /* MASK FOR UCBNALOC BIT IN
*                                                CURRENT UCB    Y02008*
@9F5     L     @4,UNALMASK                                        0132
*         R5=UCBOB;                      /* ADDRESS HEAD OF UCB Y02008*
         L     @5,0(0,@7)                                         0133
*         R4=R4×R5;                      /* PUT 1ST WORD OF UCB Y02008*
         OR    @4,@5                                              0134
*                                        /* IN REG, UCBNALOC ON Y02008*
*         GEN ( CS  R5,R4,UCBOB(R7));    /* TRY TO SET UCBNALOC Y02008*
          CS  R5,R4,UCBOB(R7)
         DS    0H
*         GEN ( BNE UCBCHK8A);           /* NO GO, TRY AGAIN    Y02008*
          BNE UCBCHK8A
         DS    0H
*
*         OKTEST='1'B;                   /* UCBNALOC SET ON,DEV Y02008*
         OI    FLAGS,B'01000000'                                  0137
*         GEN( BR R6);                   /* TO TEST, RET TO MAINY02008*
          BR R6
         DS    0H
* UCBCHK03:
*
*         /*          OLTEP VARY DEVICE OFFLINE ROUTINE               *
*
*         IF UCB3COMM='1'B ×            /* IS DEVICE TELE-COMM  Y02008*
*            UCB3DISP='1'B ×            /* OR GRAPHICS/DISPLAY  Y02008*
*
*            UCB3UREC='1'B              /* OR UNIT RECORD ?     Y02008*
*           THEN                        /* YES, ENQ ON UCB FOR  Y02008*
UCBCHK03 TM    18(@7),B'01000000'                                 0139
         BC    01,@9F4                                            0139
         TM    18(@7),B'00010000'                                 0139
         BC    01,@9F3                                            0139
         TM    18(@7),B'00001000'                                 0139
         BC    12,@9F2                                            0139
*             DO;                       /* ONLINE--OFFLINE VARY Y02008*
@9F3     EQU   *                                                  0140
*               RESTRICT(R4);           /*                      Y02008*
*               R4=10;                  /* INITIALIZE COUNTER   Y02008*
@9F4     LA    @4,10                                              0142
*             END;
*           ELSE
*            GO TO NOTEST;              /* DEV MUST BE OFFLINE  Y02008*
*
*         /* THE FOLLOWING BTAM CHECK IS MADE FOR ONLINE DEVS   Y02008*
*
*         IF UCBATI='1C'X &              /* IS DEV BTAM'S      YA00884*
*            CDE='01'X                   /* BTAM REQUEST?      YA00884*
*          THEN                          /* YES, THEN,USE IT.  YA00884*
@9F1     MVC   @TEMP3+1(3),21(@7)                                 0145
         L     @2,@TEMP3           
         CLI   3(@2),X'1C'                                        0145
         BC    07,@9F0                                            0145
         CLI   7(@9),X'01'                                        0145
         BC    07,@9EF                                            0145
*          DO;
*           UCBOLTEX='1'B;               /* OLTEP-BTAM FLAG    YA00884*
         OI    27(@7),B'10000000'                                 0147
*           OKTEST='1'B;                 /* DEV OK TO TEST      Y02008*
         OI    FLAGS,B'01000000'                                  0148
*           GO TO UCBCHK07;              /* SET ON BITMASK BIT  Y02008*
         BC    15,UCBCHK07                                        0149
*         END;
*
*
* UCBCHK04:
*         /* THE FOLLOWING CODE WILL ENQ ON THE UCB FOR THE     Y02008*
*         /* CURRENT CU TEST DEVICE. TEN 5-SECOND STIMERS ARE   Y02008*
*         /* ISSUED UNTIL OLTEP GAINS CONTROL OF THE UCB. IF    Y02008*
*         /* OLTEP CANNOT GAIN CONTROL OF THE UCB, THE DEVICE   Y02008*
*         /* IS LISTED IN MSG IFD244I. THE OPERATOR/CE MUST     Y02008*
*         /* VARY THIS DEVICE OFFLINE AND RE ISSUE THE $CUTEST  Y02008*
*         /* REQUEST.                                           Y02008*
*
*          R5=ADDR(ENQAREA);                                /*@ZA12059*
@9EF     EQU   *                                                  0151
@9F0     EQU   *                                                  0151
UCBCHK04 LA    @5,ENQAREA                                         0151
* GENERATE;                                                     @ZA1205
          MVC   0(12,R5),ENQUCB           MOVE LIST TO EX      @ZA12059
         DS    0H
* UCBCHK4A:                                                 /*@ZA12052*
* GEN;                                                      /*@ZA12052*
UCBCHK4A EQU   *                                                  0153
          ENQ   ,MF=(E,(R5))                               /*@ZA12052*/
         DS    0H
*         IF R15 = 0 THEN GO TO UCBCHK05; /* CHECK THE RETURN @ZA12055*
         LTR   @F,@F                                              0154
         BC    08,UCBCHK05                                        0155
*         IF ENQRC = '08'X THEN           /* CODES FROM THE   @ZA12055*
         CLI   3(@F),X'08'                                        0156
*                     GO TO UCBCHK05;     /* ENQ MACRO        @ZA12055*
         BC    08,UCBCHK05                                        0157
*         GEN;
         STIMER WAIT,DINTVL=FIVE                               Y02008
         DS    0H
*         R4=R4-1;                      /*DECREMENT COUNTER BY 1Y02008*
         BCTR  @4,0                                               0159
*         IF R4 > 0 THEN                  /* LOOP UNTIL ENQ   @ZA12055*
         LTR   @4,@4                                              0160
*            GO TO UCBCHK4A;              /* WORKS OR GIVE UP @ZA12055*
         BC    02,UCBCHK4A                                        0161
*         DONOTEST='1'B;                  /* BECAUSE DEVICE   @ZA12055*
         OI    FLAGS,B'10000000'                                  0162
*         GO TO NOTEST;                   /* UNTESTABLE       @ZA12055*
         BC    15,NOTEST                                          0163
* UCBCHK05:
*         /* THE FOLLOWING CODE IS EXECUTED IF OLTEP HAS CONTROLY02008*
*         /* OF THE CURRENT DEVICE'S UCB.                       Y02008*
*         RELEASE (R4);
*         IF UCBERLOG = '1'B        /* DOES DEV HAVE A        @Z40MIJR*
*           THEN                    /* BUFFERED ERROR LOG     @Z40MIJR*
UCBCHK05 MVC   @TEMP3+1(3),21(@7)                                 0165
         L     @2,@TEMP3           
         TM    5(@2),B'00000100'                                  0165
*             GO TO UCBCHK5A;       /* YES, WE CANT VARY      @Z40MIJR*
         BC    01,UCBCHK5A                                        0166
*                                   /* IT OFFLINE             @Z40MIJR*
*         IF UCBALOC='1'B               /* IF DEV IS NOW AL-    Y02008*
*           THEN                        /* LOCATED, MUST NOT    Y02008*
         TM    3(@7),B'00001000'                                  0167
*             GO TO UCBCHK5A;           /* VARY OFFLINE. DEQ UCB Y02008
         BC    01,UCBCHK5A                                        0168
*         IF UCBONLI='1'B &             /* DEV ONLINE AND IS    Y02008*
*            UCBDADI='1'B               /* CHANGING STATUS TO   Y02008*
*           THEN                        /* OFFLINE, CANNOT TEST Y02008*
         TM    3(@7),B'10000000'                                  0169
         BC    12,@9EE                                            0169
         TM    3(@7),B'00000001'                                  0169
*             GO TO UCBCHK5A;           /* MUST DEQ UCB.        Y02008*
         BC    03,UCBCHK5A                                        0170
*         IF UCBONLI='1'B               /* DEV MEETS REMTS TO   Y02008*
*           THEN                        /* BE VARIED OFFLINE.   Y02008*
@9ED     EQU   *                                                  0171
@9EE     TM    3(@7),B'10000000'                                  0171
         BC    12,@9EC                                            0171
*             UCBONLI='0'B;             /* ZERO UCB ONLINE FLAG Y02008*
         NI    3(@7),B'01111111'                                  0172
*         UCBCHGS='0'B;                 /* TURN OFF DEVICE PEND-Y02008*
@9EC     NI    3(@7),B'10111111'                                  0173
*                                       /* ING OFFLINE BIT.     Y02008*
*         UCBVORSN='1'B;                /* TURN ON FLAG INDICAT Y02008*
         OI    12(@7),B'00000100'                                 0174
*                                       /* ING DEV VARIED OFF   Y02008*
*                                       /* LINE FOR OPERATOR    Y02008*
*                                       /* REASON.              Y02008*
*         OKTEST='1'B;                   /* DEV IS OK TO TEST   Y02008*
         OI    FLAGS,B'01100000'                                  0175
*         VARYOFF='1'B;                  /* DEV VARIED OFFLINE  Y02008*
*         GO TO UCBCHK06;                /* DEQ, ISSUE SMF REC  Y02008*
         BC    15,UCBCHK06                                        0177
*
* UCBCHK5A:
*
*         DONOTEST='1'B;                 /* DEV IS NOT TESTABLE Y02008*
UCBCHK5A OI    FLAGS,B'10000000'                                  0178
*
* UCBCHK06:
*
*         /* THE FOLLOWING CODE WILL DEQ THE UCB RESOURCE       Y02008*
*
*         GEN;                          /* ISSUE DEQ FOR UCB    Y02008*
UCBCHK06 EQU   *                                                  0179
         MVC   0(12,R5),DEQUCB                                 @ZA12059
         DEQ   ,MF=(E,(R5))                                    @ZA12059
         DS    0H
*
* UCBCHK07:
*         IF DONOTEST='1'B              /* IF DONOTEST IS ON    Y02008*
*           THEN                        /* THE DEVICE IS NOT    Y02008*
UCBCHK07 TM    FLAGS,B'10000000'                                  0180
*             GO TO NOTEST;             /* TESTABLE BY OLTEP    Y02008*
         BC    01,NOTEST                                          0181
*
*         EXTENT=R6;                    /* SAVE EXTENT VALUE   Y02008*/
         STH   @6,4(0,@9)                                         0182
*         RESTRICT(R4,R5);
*         GEN ( BAL R6,UCBCHK08);       /* SEARCH UCB/BITMASK  Y02008*/
          BAL R6,UCBCHK08
         DS    0H
*         R6=EXTENT;                    /* RESTORE EXTENT  REG Y02008*/
         LH    @6,4(0,@9)                                         0185
*
*         IF DONOTEST='1'B              /* IF DEV NOK TO TEST  Y02008*/
*          THEN
         TM    FLAGS,B'10000000'                                  0186
*           GO TO NOTEST;                /* PUT IN OUTPUT MSG   Y02008*
         BC    01,NOTEST                                          0187
*         RELEASE (R4,R5);
*
*         /* THE FOLLOWING CODE IS ISSUED FOR OLTEP VARY CODE   Y02008*
*
*         IF VARYOFF^='1'B               /* IF DEV NOT VARIED OFFLINE
*                                           DO NOT PUT OUT SMF  Y02008*
*          THEN
         TM    FLAGS,B'00100000'                                  0189
*           GO TO DECREXT;               /* LOOK AT NEXT UCB    Y02008*
         BC    12,DECREXT                                         0190
*
*           /* ISSUE SMF RECORD FOR DEVICES VARIED OFFLINE.     Y02008*
*
*         IF CVTSMCA^=0                  /* IF SMF REC SUPPORT  Y02008*
*          THEN                          /* EXISTS THEN TRY TO  Y02008*
         SR    @F,@F                                              0191
         C     @F,CVTSMCA                                         0191
         BC    08,@9EB                                            0191
*          DO;                           /* PRINT RECORD        Y02008*
*
*           IF SMCAOPT1='1'B             /* IS JOB ACCOUNTING   Y02008*
*            THEN                        /* SUPPORTED IN THIS   Y02008*
         L     @2,CVTSMCA                                         0193
         TM    0(@2),B'10000000'                                  0193
         BC    12,@9EA                                            0193
*             DO;                        /* SYSTEM? YES,        Y02008*
*
*             IF SMCAUSER='1'B ×         /* IS SMF RECORDING REQY02008*
*              SMCAMAN='1'B              /* OR DOES SYS1.MAN D/SY02008*
*              THEN                      /* EXIST? YES,         Y02008*
         TM    1(@2),B'10000000'                                  0195
         BC    01,@9E9                                            0195
         TM    1(@2),B'01000000'                                  0195
         BC    12,@9E8                                            0195
*               DO;
*
*                SMFRECRD=SMFRECRD&&SMFRECRD; /* CLEAR RECORD   Y02008*
@9E9     L     @2,CVTEXT2                                         0197
         L     @2,28(0,@2)         CVTOLTP                        0197
         XC    40(24,@2),40(@2)                                   0197
*                SMFDSCWD=RECSIZE;       /* INIT DESC WORD      Y02008*
         MVC   41(1,@2),RECSIZE                                   0198
*                SMFTYPE=TYPE11;         /* TYPE 11 SMF RECORD  Y02008*
         MVC   45(1,@2),TYPE11                                    0199
*                SMFVLNTH=VARLNGTH;      /* INIT VAR LNGTH REC  Y02008*
         MVC   59(1,@2),VARLNGTH                                  0200
*                                        /* FIELD FOR SMF REC   Y02008*
*                SMFCLTYP=UCBCLTYP;      /* DEV CLASS/TYPE DATA Y02008*
         MVC   60(2,@2),18(@7)                                    0201
*                SMFDEVAD=UNITADDR;      /* DEV ADDR INTO REC   Y02008*
         MVC   62(2,@2),4(@7)                                     0202
*                R1=(ADDR(SMFREC));     /* ADDRESS RECORD     @ZA06005*
         LA    @F,40(0,@2)                                        0203
         LR    @1,@F                                              0203
*
*                GEN (SVC 83 ) ;         /* ISSUE SMF REC SVC   Y02008*
         SVC 83
         DS    0H
*               END;
*             END;
@9E8     EQU   *                                                  0206
*          END;
@9EA     EQU   *                                                  0207
*
*         /* TURN ON INDICATOR FOR IFDOLTAJ TO ISSUE MSG IFD401IY02008*
*         /* FOR DEV JUST VARIED OFFLINE BY OLTEP               Y02008*
*
*         RELEASE(R5,R13);
*         RESTRICT(R4);
*         R4=ADVARYMSG;                   /* ADDR MSG IFD140I    Y02008
@9EB     L     @2,8(0,@9)          
         L     @4,24(0,@2)                                        0210
*         VARYDEV=UCBNAME(1:3);           /* PUT DEV ADDR IN MSG Y02008
         L     @5,24(0,@2)         A00047                         0211
         MVC   12(3,@5),13(@7)                                    0211
         MVI   15(@5),C' '                                        0211
         MVC   16(4,@5),15(@5)                                    0211
*         GEN( WTO MF=(E,(R4)));          /* ISSUE MSG IFD140I   Y02008
          WTO MF=(E,(R4))
         DS    0H
*         GO TO DECREXT;                  /* DEV OK, LOOK AT NXT Y02008
         BC    15,DECREXT                                         0213
*
*         /* DEVICE DOES NOT MEET REQUIREMENTS MOVE NAME TO MESSAGE
*   NOTEST:                              /* CANNOT TEST
*         RELEASE(R4,R5,R6,R13);
*         EXTENT=R6;                     /* SAVE EXTENT VALUE   Y02008*
NOTEST   STH   @6,4(0,@9)                                         0215
*         IF R3^=8 THEN                  /* ARE WE AT BEGINNING
         CH    @3,@D4                                             0216
         BC    08,@9E7                                            0216
*           DO;                          /* NO
*             MSG244I(R3)=',';           /* MOVE IN COMMA
         LR    @2,@3                                              0218
         L     @6,8(0,@9)          
         L     @6,0(0,@6)          A00047                         0218
         LA    @A,3(@2,@6)                                        0218
         MVI   0(@A),C','                                         0218
*           END;
*         MSG244I(R3+1:R3+3)=            /* MOVE IN UCB NAME
*           UCBNAME(1:3);
@9E7     LA    @E,13(0,@7)                                        0220
         LA    @2,3                                               0220
         AR    @2,@3                                              0220
         LA    @6,1                                               0220
         AR    @6,@3                                              0220
         SR    @2,@6                                              0220
         L     @4,8(0,@9)          
         L     @4,0(0,@4)          A00047                         0220
         LA    @A,3(@6,@4)                                        0220
         EX    @2,@MVC                                            0220
*         RESTRICT(R6);
*         R6=EXTENT;                     /* RESTORE EXTENT VAL  Y02008*
         LH    @6,4(0,@9)                                         0222
*         R3=R3+4;                       /* INCREMENT MESSAGE POINTER
         AH    @3,@D1                                             0223
*  DECREXT:
*         R6=R6-1;                       /* DECREMENT EXTENT
DECREXT  BCTR  @6,0                                               0224
*         /* CHECK EXTENT
*         IF R6=0 THEN                   /* MORE TO DO ?
         LTR   @6,@6                                              0225
*          GOTO CLEANUP;                 /* NO.
         BC    08,CLEANUP                                         0226
*         BASEADDR=BASEADDR+1;
         LA    @F,1                                               0227
         A     @F,0(0,@9)                                         0227
         ST    @F,0(0,@9)                                         0227
*         /* SEE IF MESSAGE IS FULL                              Y02008
*         IF R3<48 THEN                  /* ROOM IN MESSAGE ?    Y02008
         CH    @3,@D5                                             0228
*           GOTO UCBCHK;                 /* YES,GO GET NEXT UCB  Y02008
         BC    04,UCBCHK                                          0229
*  CLEANUP:
*         EXTENT=R6;                     /* UPDATE EXTENT
CLEANUP  STH   @6,4(0,@9)                                         0230
*         IF R3^=8                      /* IF  ERR DEVS FOUND   Y02008*
*          THEN                         /* IN UCB CHECKS THEN   Y02008*
         CH    @3,@D4                                             0231
         BC    08,@9E6                                            0231
*           DO;
*           R14=SAVER14;                /* RESTORE RETURN ADDRESS     *
         L     @E,SAVER14                                         0233
*           RETURN CODE(16);            /* SET ERROR RET CODE   Y02008*
         LA    @F,16                                              0234
         ST    @F,16(0,@D)                                        0234
         LR    @1,@C                                              0234
         L     @0,@SIZ001                                         0234
         FREEMAIN R,LV=(0),A=(1)                                  0234
         L     @F,16(0,@D)                                        0234
         BCR   15,@E                                              0234
*           END;
*          ELSE                         /* ELSE, EVERYTHING OK  Y02008*
*           DO;
*           R14=SAVER14;                /* RESTORE RETURN ADDRESS     *
@9E6     L     @E,SAVER14                                         0237
*           RETURN CODE(00);            /* SET ZERO RET CODE    Y02008*
         SR    @F,@F                                              0238
         ST    @F,16(0,@D)                                        0238
         LR    @1,@C                                              0238
         L     @0,@SIZ001                                         0238
         FREEMAIN R,LV=(0),A=(1)                                  0238
         L     @F,16(0,@D)                                        0238
         BCR   15,@E                                              0238
*           END;
*         /* WE ARE GATHERED HERE TO VARY OFF A DSID, BUT     @Y30LPAW*
*         /* FIRST MAKE SURE WE HAVE NOT ALREADY VARIED ONE   @Y30LPAW*
*         /* OFF BECAUSE WE ONLY ALLOW ONE VARIED OFF DSID    @Y30LPAW*
*         /* AT A TIME                                        @Y30LPAW*
* VARYDSID:                              /*                   @Y30LPAW*
*         R7=UCBCNT;           /* GET COUNT                   @Y30LPAW*
@9E5     EQU   *                                                  0240
VARYDSID L     @2,CVTEXT2                                         0240
         L     @2,28(0,@2)         CVTOLTP                        0240
         MVC   @TEMP4(4),28(@2)                                   0240
         L     @2,@TEMP4           OLTEPTAB                       0240
         L     @7,0(0,@2)                                         0240
*         R7=R7/8;             /* 1 BYTE PER 8 UCBS           @Y30LPAW*
         LR    @E,@7                                              0241
         SRA   @E,3                                               0241
         LR    @7,@E                                              0241
*         R7=R7+15;            /* ROUND TO                    @Y30LPAW*
         AH    @7,@D6                                             0242
*         R7=R7/8;             /* DOUBLE                      @Y30LPAW*
         LR    @E,@7                                              0243
         SRA   @E,3                                               0243
         LR    @7,@E                                              0243
*         R7=R7*8;             /* WORD                        @Y30LPAW*
         SLA   @7,3                                               0244
*         R7=R7+OLTEPUCB;      /* POINT TO                    @Y30LPAW*
         L     @4,CVTEXT2                                         0245
         L     @4,28(0,@4)         CVTOLTP                        0245
         MVC   @TEMP4(4),28(@4)                                   0245
         A     @7,@TEMP4                                          0245
*         R7=R7+4;             /* DSID                        @Y30LPAW*
         AH    @7,@D1                                             0246
*         IF DSIDEBC^=ZEROES THEN        /* ALREADY ONE?      @Y30LPAW*
         CLC   2(2,@7),ZEROES                                     0247
         BC    08,@9E4                                            0247
*            DO;                         /* YES CHECKIT       @Y30LPAW*
*               IF DSIDEBC=EBCDSID THEN  /* SAME ONE?         @Y30LPAW*
         CLC   2(2,@7),2(@9)                                      0249
         BC    07,@9E3                                            0249
*                  DO;                   /* YES- ITS OK       @Y30LPAW*
*                     R15=0;             /* SET RETCODE       @Y30LPAW*
         SR    @F,@F                                              0251
*                     GOTO RETURN0C;     /* AND GO BACK       @Y30LPAW*
         BC    15,RETURN0C                                        0252
*                  END;                  /*                   @Y30LPAW*
*               R15=4;                   /* NO-PACK IT        @Y30LPAW*
@9E3     LA    @F,4                                               0254
*               GOTO RETURN0C;           /* AND RETURN        @Y30LPAW*
         BC    15,RETURN0C                                        0255
*            END;                        /*                   @Y30LPAW*
*         R0=SP254;                      /* SPECIFY SBPOOL254 @Y30LPAW*
@9E4     L     @0,SP254                                           0257
*         GEN(GETMAIN R,LV=(0));         /* AND GET SPACE     @Y30LPAW*
         GETMAIN R,LV=(0)
         DS    0H
*         R6=R1;                         /* USE THE ADDRESS   @Y30LPAW*
         LR    @6,@1                                              0259
*         VARYLIST=VARYLIST&&VARYLIST;   /* CLEAR IT          @Y30LPAW*
         XC    0(23,@6),0(@6)                                     0260
*         VONLEN='18'X;                  /* SET LIST LENGTH   @Y30LPAW*
         MVI   0(@6),X'18'                                        0261
         MVI   1(@6),C' '                                         0261
         MVC   2(2,@6),1(@6)                                      0261
*         VONOPCD='0C'X;                 /* SET CODE FOR OFF  @Y30LPAW*
         MVI   4(@6),X'0C'                                        0262
*         VFLG1='80'X;                   /* FLG FOR OFF VIRT  @Y30LPAW*
         MVI   6(@6),X'80'                                        0263
*         VONSSID=HEXDSID;               /* PUT IN DSID       @Y30LPAW*
         MVC   8(2,@6),0(@9)                                      0264
*         GEN;
         ICBVARY MF=(E,(6)),TYPE=VOF    VARY IT OFF  /*      @Y30LPAW*/
         DS    0H
*                                        /* SET UP -VARY OFF  @Y30LPAW*
*        IF R15=0 ×
*           R15='78'X THEN          /* IF OK                  @X03LPMY*
         LTR   @F,@F                                              0266
         BC    08,@9E2                                            0266
         LA    @0,X'78'                                           0266
         CR    @0,@F                                              0266
         BC    07,@9E1                                            0266
*            DO;                         /* SAVE THE DSID     @Y30LPAW*
*               DSIDHEX=HEXDSID;         /*  IN THE LIST      @Y30LPAW*
@9E2     MVC   0(2,@7),0(@9)                                      0268
*               DSIDEBC=EBCDSID;         /* SET RETCODE       @Y30LPAW*
         MVC   2(2,@7),2(@9)                                      0269
*               R15=0;                   /* AND GO ON         @Y30LPAW*
         SR    @F,@F                                              0270
*               GOTO RETURN0C;           /*  BACK             @Y30LPAW*
         BC    15,RETURN0C                                        0271
*            END;                        /*                   @Y30LPAW*
*         R15=R0;                        /* NOT OK - USE      @Y30LPAW*
@9E1     LR    @F,@0                                              0273
*                                        /* ERROR CODE AND    @Y30LPAW*
* RETURN0C:                              /* GO BACK           @Y30LPAW*
*         R14=SAVER14;                   /* RESTORE R14       @Y30LPAW*
RETURN0C L     @E,SAVER14                                         0274
*         RETURN;                        /*                   @Y30LPAW*
         BC    15,@EL01                                           0275
*         /* THIS CODE WILL STORE AN SSID (BOTH HEX AND EBC)  @Y30LPAW*
*         /* IN THE SSIDLIST AND BUMP THE COUNT BY 1          @Y30LPAW*
* STORSSID:                              /*                   @Y30LPAW*
*         R7=UCBCNT;           /* GET COUNT                   @Y30LPAW*
STORSSID L     @2,CVTEXT2                                         0276
         L     @2,28(0,@2)         CVTOLTP                        0276
         MVC   @TEMP4(4),28(@2)                                   0276
         L     @2,@TEMP4           OLTEPTAB                       0276
         L     @7,0(0,@2)                                         0276
*         R7=R7/8;             /* 1 BYTE PER 8 UCBS           @Y30LPAW*
         LR    @E,@7                                              0277
         SRA   @E,3                                               0277
         LR    @7,@E                                              0277
*         R7=R7+15;            /* ROUND TO                    @Y30LPAW*
         AH    @7,@D6                                             0278
*         R7=R7/8;             /* DOUBLE                      @Y30LPAW*
         LR    @E,@7                                              0279
         SRA   @E,3                                               0279
         LR    @7,@E                                              0279
*         R7=R7*8;             /* WORD                        @Y30LPAW*
         SLA   @7,3                                               0280
*         R7=R7+OLTEPUCB;      /* POINT TO                    @Y30LPAW*
         L     @4,CVTEXT2                                         0281
         L     @4,28(0,@4)         CVTOLTP                        0281
         MVC   @TEMP4(4),28(@4)                                   0281
         A     @7,@TEMP4                                          0281
*         R7=R7+4;             /* DSID                        @Y30LPAW*
         AH    @7,@D1                                             0282
*         R3=ADDR(SSIDS);                /* HERES 1ST SSID    @Y30LPAW*
         LA    @3,6(0,@7)                                         0283
*         R3=R3+SSIDCNT*SIDFLDSZ;        /* HERES 1ST EMPTY   @Y30LPAW*
         SR    @F,@F                                              0284
         IC    @F,SIDFLDSZ                                        0284
         MVC   @TEMP2+2(2),4(@7)                                  0284
         M     @E,@TEMP2                                          0284
         AR    @3,@F                                              0284
*         SSIDHEX=HEXSSID;               /* MOVE IN THE SSID  @Y30LPAW*
         MVC   0(2,@3),0(@9)                                      0285
*         SSIDEBC=EBCSSID;               /* BOTH HEX AND EBC  @Y30LPAW*
         MVC   2(2,@3),2(@9)                                      0286
*         SSIDCNT=SSIDCNT+1;             /* BUMP BY ONE       @Y30LPAW*
         LA    @F,1                                               0287
         MVC   @TEMP2+2(2),4(@7)                                  0287
         A     @F,@TEMP2                                          0287
         ST    @F,@TEMP4                                          0287
         MVC   4(2,@7),@TEMP4+2                                   0287
*         R15=0;                         /* SET GOOD RET CODE @Y30LPAW*
         SR    @F,@F                                              0288
*         GOTO RETURN0C;                 /* AND GO BACK       @Y30LPAW*
         BC    15,RETURN0C                                        0289
*  GENERATE;                                                /*@ZA12052*
          DS     0F                                            @ZA12052
ENQUCB   ENQ   (MAJORNAM,MINORNAM,E,2,SYSTEM),RET=HAVE,MF=L    @ZA26394
DEQUCB    DEQ   (MAJORNAM,MINORNAM,2,SYSTEM),RET=HAVE,MF=L     @ZA12059
         DS    0H
*         END;
@EL01    LR    @1,@C                                              0291
         L     @0,@SIZ001                                         0291
         FREEMAIN R,LV=(0),A=(1)                                  0291
         BCR   15,@E                                              0291
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    H'4'
@D2      DC    H'2'
@D3      DC    H'1'
@D4      DC    H'8'
@D5      DC    H'48'
@D6      DC    H'15'
@MVC     MVC   0(1,@A),0(@E)
         DS    0F
@SIZ001  DC    AL1(&SPN)
         DC    AL3(@DATEND-@DATD)
         DS    0F
         DS    0D
@DATA    EQU   *
P        EQU   00000000            FULLWORD INTEGER
R0       EQU   00000000            FULLWORD INTEGER REGISTER
R1       EQU   00000001            FULLWORD INTEGER REGISTER
R2       EQU   00000002            FULLWORD INTEGER REGISTER
R3       EQU   00000003            FULLWORD POINTER REGISTER
R4       EQU   00000004            FULLWORD POINTER REGISTER
R5       EQU   00000005            FULLWORD POINTER REGISTER
R6       EQU   00000006            FULLWORD POINTER REGISTER
R7       EQU   00000007            FULLWORD POINTER REGISTER
R8       EQU   00000008            FULLWORD POINTER REGISTER
CVTREG   EQU   00000008            FULLWORD POINTER REGISTER
R9       EQU   00000009            FULLWORD POINTER REGISTER
R10      EQU   00000010            FULLWORD POINTER REGISTER
R12      EQU   00000012            FULLWORD INTEGER REGISTER
R13      EQU   00000013            FULLWORD INTEGER REGISTER
R14      EQU   00000014            FULLWORD INTEGER REGISTER
R15      EQU   00000015            FULLWORD POINTER REGISTER
PARMLIST EQU   00000000            12 BYTE(S) ON WORD
BASEADDR EQU   PARMLIST+00000000   FULLWORD POINTER
A00000   EQU   PARMLIST+00000000   2 BYTE(S)
CHANNEL  EQU   PARMLIST+00000002   1 BYTE(S)
UNITDEV  EQU   PARMLIST+00000003   1 BYTE(S)
EXTENT   EQU   PARMLIST+00000004   HALFWORD POINTER
CODE     EQU   PARMLIST+00000006   2 BYTE(S)
A00001   EQU   PARMLIST+00000006   1 BYTE(S)
CDE      EQU   PARMLIST+00000007   1 BYTE(S)
MSGMDPTR EQU   PARMLIST+00000008   FULLWORD POINTER
CVTADPTR EQU   *                   FULLWORD POINTER
         DC    AL4(16)
CVTADDR  EQU   00000000            FULLWORD POINTER
CVTOLTP  EQU   00000028            FULLWORD POINTER
OLTEPTAB EQU   00000000            24 BYTE(S)
DEIHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)
REIDEB   EQU   OLTEPTAB+00000004   4  BYTE  POINTER
A00002   EQU   OLTEPTAB+00000008   20 BYTE(S)
OLTEPUCB EQU   OLTEPTAB+00000028   4  BYTE  POINTER
A00003   EQU   OLTEPTAB+00000032   8 BYTE(S)
IOSGENTB EQU   OLTEPTAB+00000040   72*1 BYTE(S)
SSIDLIST EQU   00000000            72 BYTE(S)
DSID     EQU   SSIDLIST+00000000   4 BYTE(S)
DSIDHEX  EQU   SSIDLIST+00000000   2 BYTE(S)
DSIDEBC  EQU   SSIDLIST+00000002   2 BYTE(S)
SSIDCNT  EQU   SSIDLIST+00000004   2 BYTE(S)
SSIDS    EQU   SSIDLIST+00000006   64 BYTE(S)
SSIDFMT  EQU   00000000            4 BYTE(S)
SSIDHEX  EQU   SSIDFMT+00000000    2 BYTE(S)
SSIDEBC  EQU   SSIDFMT+00000002    2 BYTE(S)
DSIDPARM EQU   00000000            4 BYTE(S)
HEXDSID  EQU   DSIDPARM+00000000   2 BYTE(S)
EBCDSID  EQU   DSIDPARM+00000002   2 BYTE(S)
SSIDPARM EQU   00000000            4 BYTE(S)
HEXSSID  EQU   SSIDPARM+00000000   2 BYTE(S)
EBCSSID  EQU   SSIDPARM+00000002   2 BYTE(S)
SIDFLDSZ EQU   *                   1 BYTE(S)
         DC    X'04'
         ORG   @DATA+00000008
SP254    EQU   *                   FULLWORD INTEGER
         DC    XL4'FE000018'
CODE0C   EQU   *                   1 BYTE(S)
         DC    X'0C'
CODE10   EQU   *                   1 BYTE(S)
         DC    X'10'
VARYLIST EQU   00000000            23 BYTE(S) ON WORD
VONLEN   EQU   VARYLIST+00000000   4 BYTE(S)
A00004   EQU   VARYLIST+00000000   3 BYTE(S)
VONCNT   EQU   VARYLIST+00000003   1 BYTE(S)
VONOPCD  EQU   VARYLIST+00000004   1 BYTE(S)
A00005   EQU   VARYLIST+00000005   1 BYTE(S)
VONFLG   EQU   VARYLIST+00000006   2 BYTE(S)
VFLG1    EQU   VARYLIST+00000006   1 BYTE(S)
A00006   EQU   VARYLIST+00000007   1 BYTE(S)
VONSSID  EQU   VARYLIST+00000008   2 BYTE(S)
VONRUA   EQU   VARYLIST+00000010   2 BYTE(S)
A00007   EQU   VARYLIST+00000012   11 BYTE(S)
SMFRECRD EQU   00000040            24 BYTE(S)
A00008   EQU   SMFRECRD+00000000   1 BYTE(S)
SMFDSCWD EQU   SMFRECRD+00000001   1 BYTE(S)
A00009   EQU   SMFRECRD+00000002   3 BYTE(S)
SMFTYPE  EQU   SMFRECRD+00000005   1 BYTE(S)
A00010   EQU   SMFRECRD+00000006   13 BYTE(S)
SMFVLNTH EQU   SMFRECRD+00000019   1 BYTE(S)
SMFCLTYP EQU   SMFRECRD+00000020   2 BYTE(S)
SMFDEVAD EQU   SMFRECRD+00000022   2 BYTE(S)
SMFREC   EQU   00000040            FULLWORD POINTER
SMFCB    EQU   00000000            2 BYTE(S)
SMCAOPT  EQU   SMFCB+00000000      1 BYTE(S)
SMCAOPT1 EQU   SMFCB+00000000      1 BIT(S)
SMCAOPT2 EQU   SMFCB+00000000      1 BIT(S)
SMCAMISC EQU   SMFCB+00000001      1 BYTE(S)
SMCAUSER EQU   SMFCB+00000001      1 BIT(S)
SMCAMAN  EQU   SMFCB+00000001      1 BIT(S)
TYPE11   EQU   *                   1 BYTE(S)
         DC    X'0B'
RECSIZE  EQU   *                   1 BYTE(S)
         DC    X'18'
VARLNGTH EQU   *                   1 BYTE(S)
         DC    X'06'
ZEROES   EQU   *                   2 BYTE(S)
         DC    X'0000'
         ORG   @DATA+00000020
UNALMASK EQU   *                   FULLWORD INTEGER
         DC    XL4'00040000'
UCBBITBL EQU   00000000            79 BYTE(S) ON WORD
UCBCNT   EQU   UCBBITBL+00000000   4 BYTE(S)
UCBBITS  EQU   UCBBITBL+00000004   75*1 BYTE(S)
BITMASK  EQU   *                   8*1 BYTE(S)
         DC    X'80'
         DC    X'40'
         DC    X'20'
         DC    X'10'
         DC    X'08'
         DC    X'04'
         DC    X'02'
         DC    X'01'
UCBLKUP  EQU   00000000            2 BYTE(S)
A00011   EQU   UCBLKUP+00000000    1 BYTE(S)
UCBCHAR  EQU   UCBLKUP+00000001    1 BYTE(S)
UCB      EQU   00000000            40 BYTE(S) ON WORD
UCBOB    EQU   UCB+00000000        4 BYTE(S)
A00012   EQU   UCB+00000000        1 BYTE(S)
A00013   EQU   UCB+00000001        1 BYTE(S)
A00014   EQU   UCB+00000001        5 BIT(S)
UCBNALOC EQU   UCB+00000001        1 BIT(S)
A00015   EQU   UCB+00000001        2 BIT(S)
A00016   EQU   UCB+00000002        1 BYTE(S)
A00017   EQU   UCB+00000003        1 BYTE(S)
UCBONLI  EQU   UCB+00000003        1 BIT(S)
UCBCHGS  EQU   UCB+00000003        1 BIT(S)
A00018   EQU   UCB+00000003        2 BIT(S)
UCBALOC  EQU   UCB+00000003        1 BIT(S)
A00019   EQU   UCB+00000003        1 BIT(S)
UCBSYSR  EQU   UCB+00000003        1 BIT(S)
UCBDADI  EQU   UCB+00000003        1 BIT(S)
UNITADDR EQU   UCB+00000004        2 BYTE(S)
CHANADDR EQU   UCB+00000004        1 BYTE(S)
CNTUNDEV EQU   UCB+00000005        1 BYTE(S)
A00020   EQU   UCB+00000006        5 BYTE(S)
A00021   EQU   UCB+00000011        1 BYTE(S)
A00022   EQU   UCB+00000012        1 BYTE(S)
SYSIN    EQU   UCB+00000012        1 BIT(S)
SYSOUT   EQU   UCB+00000012        1 BIT(S)
A00023   EQU   UCB+00000012        3 BIT(S)
UCBVORSN EQU   UCB+00000012        1 BIT(S)
UCBNAME  EQU   UCB+00000013        3 BYTE(S)
A00024   EQU   UCB+00000016        2 BYTE(S)
UCBCLTYP EQU   UCB+00000018        2 BYTE(S)
UCBTBYT3 EQU   UCB+00000018        1 BYTE(S)
A00025   EQU   UCB+00000018        1 BIT(S)
UCB3COMM EQU   UCB+00000018        1 BIT(S)
A00026   EQU   UCB+00000018        1 BIT(S)
UCB3DISP EQU   UCB+00000018        1 BIT(S)
UCB3UREC EQU   UCB+00000018        1 BIT(S)
A00027   EQU   UCB+00000018        3 BIT(S)
A00028   EQU   UCB+00000019        1 BYTE(S)
A00029   EQU   UCB+00000020        1 BYTE(S)
UCBXTEND EQU   UCB+00000021        3  BYTE  POINTER
A00030   EQU   UCB+00000024        3 BYTE(S)
A00031   EQU   UCB+00000027        1 BYTE(S)
UCBOLTEX EQU   UCB+00000027        1 BIT(S)
A00032   EQU   UCB+00000027        7 BIT(S)
UCBEXT   EQU   00000000            4 BYTE(S)
A00033   EQU   UCBEXT+00000000     3 BYTE(S)
UCBATI   EQU   UCBEXT+00000003     1 BYTE(S)
UCBCMEXT EQU   00000000            16 BYTE(S) ON WORD
A00034   EQU   UCBCMEXT+00000000   1 BYTE(S)
A00035   EQU   UCBCMEXT+00000001   1 BYTE(S)
A00036   EQU   UCBCMEXT+00000002   1 BYTE(S)
A00037   EQU   UCBCMEXT+00000003   1 BYTE(S)
A00038   EQU   UCBCMEXT+00000003   8 BIT(S)
A00039   EQU   UCBCMEXT+00000004   1 BYTE(S)
UCBFLP1  EQU   UCBCMEXT+00000005   1 BYTE(S)
A00040   EQU   UCBCMEXT+00000005   5 BIT(S)
UCBERLOG EQU   UCBCMEXT+00000005   1 BIT(S)
A00041   EQU   UCBCMEXT+00000005   2 BIT(S)
A00042   EQU   UCBCMEXT+00000006   2 BYTE(S)
A00043   EQU   UCBCMEXT+00000008   2 BYTE(S)
A00044   EQU   UCBCMEXT+00000010   2 BYTE(S)
A00045   EQU   UCBCMEXT+00000012   2 BYTE(S)
A00046   EQU   UCBCMEXT+00000014   2 BYTE(S)
A00047   EQU   00000000            28 BYTE(S) ON WORD
IFD244I  EQU   A00047+00000000     FULLWORD POINTER
A00048   EQU   A00047+00000004     FULLWORD POINTER
HEADER   EQU   A00047+00000008     FULLWORD POINTER
A00049   EQU   A00047+00000012     12 BYTE(S)
ADVARYMS EQU   A00047+00000024     FULLWORD POINTER
A00050   EQU   00000000            52 BYTE(S) ON WORD
A00051   EQU   A00050+00000000     4 BYTE(S)
MSG244I  EQU   A00050+00000004     48 BYTE(S)
A00052   EQU   A00050+00000004     8 BYTE(S)
TEXT244I EQU   A00050+00000012     40 BYTE(S)
MSG140   EQU   00000000            44 BYTE(S) ON WORD
MSG140I  EQU   MSG140+00000000     40 BYTE(S)
A00053   EQU   MSG140+00000000     12 BYTE(S)
VARYDEV  EQU   MSG140+00000012     8 BYTE(S)
A00054   EQU   MSG140+00000020     24 BYTE(S)
MAJORNAM EQU   *                   8 BYTE(S)
         DC    C'SYSIEFSD'
MINORNAM EQU   *                   8 BYTE(S)
         DC    C'Q4'
         DC    00006C' '
FIVE     EQU   *                   8 BYTE(S)
         DC    X'F0F0F0F0F0F5F0C0'
PATCH09  EQU   *                   30*2 BYTE(S)
         DC    00030X'0700'
RETCODES EQU   00000000            4 BYTE(S) ON WORD
A00055   EQU   RETCODES+00000000   3 BYTE(S)
ENQRC    EQU   RETCODES+00000003   1 BYTE(S)
         ORG   @DATA
         DS    00000116C
@L       EQU   6
@DATD    DSECT
FLAGS    EQU   @DATD+00000000      8 BIT(S) ON BYTE
DONOTEST EQU   FLAGS+00000000      1 BIT(S)
OKTEST   EQU   FLAGS+00000000      1 BIT(S)
VARYOFF  EQU   FLAGS+00000000      1 BIT(S)
SAVER14  EQU   @DATD+00000004      FULLWORD INTEGER
ENQAREA  EQU   @DATD+00000008      12 BYTE(S)
         DS    00000020C
@TEMPS   DS    0F
@TEMP2   DC    F'0'
@TEMP3   DC    F'0'
@TEMP4   DC    F'0'
         CVT    SYS=AOS2,DSECT=YES
         IECDIOCM
         IECDIOCX
@DATD    DSECT
@DATEND  EQU   *
IGC0905I CSECT ,
@9FF     EQU   NOTEST
@9FE     EQU   NOTEST
@9FC     EQU   UCBCHK03
@9FB     EQU   UCBCHK03
@9F2     EQU   NOTEST
         END    ,(C'PL/S',1400,78116)
