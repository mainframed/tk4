IFD58    TITLE '*** IFDOLT58 - OLTEP NORMAL/ABNORMAL/PCI EXIT-NAPA ***'
IFDOLT58 START
*A-000000-999999                                                @Y02008
***********************************************************************
*                                                                     *
*MODULE NAME: IFDOLT58                                                *
*                                                                     *
*DESCRIPTIVE NAME: OLTEP NORMAL/ABNORMAL/PCI EXITS - NAPA             *
*                                                                     *
*COPYRIGHT: NONE                                                      *
*                                                                     *
*STATUS: OS-VS/2 RELEASE 2 VERSION 0
*                                                                     *
*FUNCTION: THIS MODULE RECIEVES CONTROL FROM THE POST STATUS ROUTINE  *
*   OF IOS. IT HAS THREE ENTRY POINTS AS FOLLOWS:                     *
*              1. NORMAL EXIT                                         *
*              2. ABNORMAL EXIT                                       *
*              3. PCI EXIT                                            *
*   1. THE NORMAL EXIT RECIEVES CONTROL WHENEVER CHANNEL END, UNIT    *
*    EXCEPTION WITH OR WITHOUT A CHANNEL END, OR WHEN CHANNEL END     *
*    WITH WRONG LENGTH RECORD OCCURS WITHOUT ANY OTHER ABNORMAL STATUS*
*    CONDITIONS (DEVICE END,PCI,AND ATTN MAY BE PRESENT). THE IOSEX   *
*    (PRESENT WHEN UNIT EXCEPTION OR WRONG LENGTH RECORD EXISTS) IS   *
*    TURNED OFF AND THE MAIN MODULE FLOW IS ENTERED (SEE 'MAIN FLOW'  *
*    BELOW).                                                          *
*   2. THE ABNARMAL EXIT IS ENTERED WHEN UNIT CHECK, CHANNEL PROGRAM  *
*    CHECK, PROTECTION CHECK, CHANNEL DATA CHECK, CHANNEL CONTROL     *
*    CHECK, INTERFACE CONTROL CHECK, CHAINING CHECK, EXTENT VIOLATION *
*    AND INTERCEPT CONDITION. THE IOSEX IN THE IOSB IS ALWAYS ON WHEN *
*    THIS EXIT IS ENTERED.                                            *
*      THIS ROUTINE FOR OLTEP FIRST CHECKS THE 'ENTRYLST' BIT @YM03321*
*    IN USEFLAGA. ITS BEING ON INDICATES THAT MORE THAN ONE   @YM03321*
*    ENTRY HAS BEEN MADE TO THE ABNORMAL EXIT. SINCE THE FIRST@YM03321*
*    ENTRY PERFORMS ALL THE NECESSARY FUNCTIONS, THE ABNORMAL @YM03321*
*    EXIT ONLY RETURNS TO IOS IF THE BIT IS FOUND ON.  THIS   @YM03321*
*    BIT IS SET ON FOR THE FIRST ENTRY.                       @YM03321*
*   3. THE PCI EXIT IS ENTERED FROM IOS FOR ALL NON-ENDING STATUS     *
*    PCI'S. IOS USES AN IOS-GENERATED SRB/IOSB TO SCHEDULE THE PCI    *
*    EXIT.INFORMATION NOT COPIED INTO THE IOS GENERATED SRB/IOSB      *
*    CAN BE ACCESSED IN THE ENDING STATUS SRB/IOSB POINTED TO BY      *
*    IOSPCHN. AN IOS GENERATED SRB/IOSB CAN BE IDENTIFIED BY A X'04'  *
*    IN IOSPROC IN THE IOSB.                                          *
*      ENTRY TO THE PCI EXIT CAUSES THE PCIIND IN OLTEP'S DEVTAB TO   *
*    BE SET TO 1 AND THE CSW POINTER TO POINT TO THE CSW IN THE PASSED*
*    IOSB. THE CSW COUNTER IS SET TO 1 AND THE PCIENTRY SWITCH IS SET *
*    TO 1. THE MAIN FLOW IS THEN ENTERED AT THE TEST TO CHECK IF THE  *
*    OLT'S TECB IS OLD OR NEW.                                        *
*   MAIN FLOW:                                                        *
*      POINTERS ARE SET UP FOR THE CSW'S IN THE OECB,THE OLT'S TECB,  *
*    AND THE IODEVTAB FOR THIS REQUEST. THE CSW (EVENT) COUNTS ARE    *
*    GOTTEN FROM THE OECB AND THE TECB. NEXT A CHECK IS MADE IF THE   *
*    CCW'S ARE VIRTUAL. IF SO THE CSW COMMAND ADDRESSES ARE TRANSLATED*
*    BY THE CCW TRANSLATOR TO THE ASSOCIATED VIRTUAL ADDRESS. NEXT    *
*    THE CSW'S ARE MOVED TO THEIR RESPECTIVE SLOTS IN THE TECB. IF    *
*    A UNIT CHECK IS NOTED,THE SENSE IS ALSO MOVED. THE ECB IS        *
*    INSPECTED AND SYSTEM POSTED IF IT BEING WAITED ON; ELSE IT IS    *
*    PSEUDO-POSTED SO WAITIO WON'T WAIT ON IT LATER. IF THE CCW'S WERE*
*    VIRTUAL THE CCW TRANSLATOR IS ENTERED TO FREE ASSOCIATED STORAGE *
*    AREAS. NEXT THE CONTROL BLOCKS OBTAINED FOR THE CCW TRANSLATOR   *
*    ARE FREED.                                                       *
*                                                                     *
*NOTES: SEE BELOW                                                     *
*                                                                     *
*  DEPENDENCIES: THIS MODULE HAS NO HARDWARE DEPENDENCIES.            *
*                                                                     *
*  RESTRICTIONS: NOT COMPATABLE FOR VS/1                              *
*                                                                     *
*  REGISTER CONVENTIONS:                                              *
*    ENTRY- ALL REGS ARE SAVED UPON ENTRY                             *
*      REG  1 = IOSB POINTER                                          *
*          13 = LOCAL LOCK SAVE AREA PTR                              *
*          14 = IOS RETURN POINT                                      *
*          15 = ENTRY POINT OF EXIT ROUTINE                           *
*                                                                     *
*    EXIT- N/A                                                        *
*                                                                     *
*    SEE REGISTER EQUATES FOR SYMBOLS OF REGISTERS USED IN THIS       *
*    MODULE.                                                          *
*                                                                     *
*  PATCH-LABEL: PATCH58                                               *
*                                                                     *
*MODULE TYPE: PROCEDURE                                               *
*                                                                     *
*  PROCESSOR: OS/VS ASSEMBLER                                         *
*                                                                     *
*  MODULE SIZE: APPROXIMATELY 2K                                      *
*                                                                     *
*  ATTRIBUTES: REENTRANT,PRIVILEGED,ENABLED,KEY 0,PAGEABLE,LOCAL      *
*                                                                     *
*ENTRY POINTS:                                                        *
*                                                                     *
*  NORMAL EXIT:                                                       *
*                                                                     *
*     PURPOSE: TO POST STATUS FROM NON-ERROR I/O EVENTS. UNIT EXCEP-  *
*       TION AND INCORRECT LENGTH INDICATION COULD BE ON. IOSEX TURNED*
*       OFF SO ABNORMAL EXIT DOES NOT GET CONTROL ON THESE CONDITIONS.*
*       ALSO POSTS EVENT COMPLETE FOR OLTEP WAITIO FUNCTIONS,         *
*                                                                     *
*     LINKAGE: BRANCH AND LINK FROM IOS POST STATUS.                  *
*                                                                     *
*  ABNORMAL EXIT:                                                     *
*                                                                     *
*     PURPOSE: TO POST STATUS FROM ERROR TYPE I/O EVENTS. ERP'S ARE   *
*       INHIBITED. ALSO POSTS EVENT COMPLETE FOR OLTEP WAITIO FUNCTION*
*                                                                     *
*     LINKAGE: BRANCH AND LINK FROM IOS POST STATUS.                  *
*                                                                     *
*  PCI EXIT:                                                          *
*                                                                     *
*     PURPOSE: TO POST THE STATUS FROM PCI INTERRUPTS AS THEY ARE     *
*       SCHEDULED BY IOS POST STATUS. THESE INTERRUPTS ARE NOT ACCUM- *
*       ULATED BY THE DIE. THIS EXIT ONLY GETS CONTROL FOR NON-ENDING *
*       STATUS PCI INTERRUPTS. DOES NOT POST EVENT COMPLETE FOR OLTEP.*
*                                                                     *
*      LINKAGE:                                                       *
*       BRANCH AND LINK FROM IOS POST STATUS.                         *
*                                                                     *
*INPUT: THE IOSB WHICH CONTAINS THE STATUS INFORMATION OF THE EVENT,  *
*       THE OLTEP USER CONTROL BLOCK, EVENT CONTROL BLOCK, AND DEVTAB *
*       ENTRY ASSOCIATED WITH THIS EVENT. THE OLT'S TECB FOR THIS REQ-*
*       UEST.                                                         *
*                                                                     *
*OUTPUT: THE ECB IS POSTED IF APPLICABLE AND THE STATUS IS POSTED INTO*
*        THE OLT'S TECB. THE TCCW LIST AND ASSOCIATED CONTROL BLOCKS  *
*        ARE FREED AS ARE THE OLT'S CCW'S AND ASSOCIATED DATA AREAS   *
*        IF THE EVENT IS COMPLETE AND OLTEP'S RUNNING VIRTUAL.        *
*                                                                     *
*EXIT-NORMAL: TO IOS VIA REG 14 + 0.                                  *
*                                                                     *
*EXIT-ABNORMAL: N/A                                                   *
*                                                                     *
*EXTERNAL REFERENCES:                                                 *
*                                                                     *
*  ROUTINES: CCW TRANSLATOR OF IOS                                    *
*            POST                                                     *
*            FREEMAIN                                                 *
*                                                                     *
*  DATA AREAS: OLTEP EVENT CONTROL BLOCK - OECB                       *
*              OLT'S TEST EVENT CONTROL BLOCK - TECB                  *
*              OLTEP DEVICE TABLE ENTRY - DEVTAB                      *
*                                                                     *
*  CONTROL-BLOCKS: OLTEP USER CONTROL BLOCK                           *
*                  IOSB                                               *
*                  TECB                                               *
*                  OECB                                               *
*                  ECB                                                *
*                                                                     *
*TABLES: NO INTERNAL TABLES.                                          *
*                                                                     *
*MACROS: FREEMAIN                                                     *
*        POST                                                         *
*                                                                     *
*CHANGE ACTIVITY: SEE BELOW.                                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                  REGISTER EQUATES                                   *
***********************************************************************
         SPACE 2
BASEREG  EQU   12                 CSECT BASE REGISTER
IOSBREG  EQU   1                  IOSB POINTER FROM IOS POST STATUS
LINKREG1 EQU   2                  INTERNAL ROUTINE LINKAGE REG 1
ENTRYREG EQU   15                 REG 15 HAS ENTRY POINT ADDRESS OF
*                                  SPECIFIC EXIT FROM IOS
REG14    EQU   14                 NAME FOR REG 14
REG12    EQU   12                 NAME FOR REG 12
SAVEREG  EQU   13                 NAME FOR REG 13-SAVE AREA POINTER
TECBREG  EQU   4                  REG TO REFERENCE IODEBTAB IN OLTEP
IODEVREG EQU   5                  REG TO REFERENCE DEVTAB IN OLTEP
DEVTABRG EQU   6                  REG TO REFERENCE TECB IN OLT
WORKREG1 EQU   11                 A GENERAL WORKING REGISTER
CSWPTREG EQU   10                 REG THAT POINTS TO CSW TO MOVE
CSWINREG EQU   9                  OECB CSW COUNTER REG
PCIOSBRG EQU   8                  REG USED TO HOLD ADDRESS OF PSEUDO
*                                  IOSB CREATED BY IOS FOR PCI
REG15    EQU   15                 AN EQUATE FOR REGISTER 15
REG1     EQU   1                  AN EQUATE FOR REGISTER 1
ECBPTR   EQU   11                 REG TO POINT TO ECB TO POST
REG10    EQU   10                 NAME FOR REGISTER 10
WORKREG2 EQU   9                  GENERAL WORKING REGISTER NO. 2
TECBEVNT EQU   3                  REG POINTS TO EVENT AREA IN OLT TECB
TECBSNS  EQU   3                  REG POINTS TO SENSE AREA IN OLT TECB
REG0     EQU   0                  NAME FOR REG 0
FMSAVREG EQU   3                  SAVE REG FOR CONTROL BLOCK FREE MAINS
ASCBPTR  EQU   7                  REG 7 POINTS TO ASCB FOR FREEMAIN
TCBPTR   EQU   4                  REG 4 POINTS TO TCB FOR FREEMAIN
UCBPTR   EQU   7                                               @ZA04290
         EJECT
***********************************************************************
*                  MISC EQUATES                                       *
***********************************************************************
         SPACE 2
ONE      EQU   1                  EQUATE FOR A NUMBER 1
CSWSTSA  EQU   4                  DISPLACEMENT INTO CSW FOR STATUS A
CSWSTSB  EQU   5                  DISPLACEMENT INTO CSW FOR STATUS B
ONLYCCON EQU   X'30'              VALUE TO AND SIO CC TO LEAVE ONLY
*                                  CONDITION CODE BITS ON
ZERO     EQU   X'00'              VALUE FOR HEX 0
FULL     EQU   X'FF'              VALUE FOR HEX FF (255)
EBCDZERO EQU   X'F0'              VALUE FOR HEX F0 (EBCDIC 0)
EVNTCODE EQU   X'FF'              VALUE FOR HEX FF - AN EVENT FLAG
WAIT     EQU   X'80'              WAIT BIT IN ECB BYTE 0
POSTBIT  EQU   X'40'              POSTED BIT IN ECB BYTE 0
ATTNBIT  EQU   X'80'              ATTENTION CSW BIT
CEBIT    EQU   X'08'              CHANNEL END CSW BIT
DEBIT    EQU   X'04'              DEVICE END CSW BIT
UCBIT    EQU   X'02'              UNIT CHECK CSW BIT
UEXBIT   EQU   X'01'              UNIT EXCEPTION CSW BIT
PCIBIT   EQU   X'80'              PROGRAM CNTRLD INTRUPT CSW BIT
INCLHBIT EQU   X'40'              INCORRECT LENGTH CSW BIT
PGMCKBIT EQU   X'20'              PROGRAM CHECK CSW BIT
PROTCBIT EQU   X'10'              PROTECT CHECK CSW BIT
CHDATBIT EQU   X'08'              DATA CHECK CSW BIT
CHCTRBIT EQU   X'04'              CONTROL CHECK CSW BIT
IFCTRBIT EQU   X'02'              INTERFACE CHECK CSW BIT
CHCHNBIT EQU   X'01'              CHAINING CHECK CSW BIT
ALL      EQU   X'FF'              SYMBOL FOR ALL BITS OF A BYTE
CVTPTR4C EQU   X'4C'              LOW STORAGE ADDRESS OF THE CVT PTR
HEX04    EQU   4                                               @ZA04290
CSWCMDAD EQU   1                  DISPLACEMENT INTO CSW FOR COMMAND ADR
CURNTTCB EQU   4                  TCB LIST DISPLACEMENT FOR CURRENT TCB
CURNASCB EQU   12                 DISPLACEMENT INTO TCB LIST FOR
*                                  CURRENT ASCB
         EJECT
***********************************************************************
*                   INITIALIZATION                                    *
***********************************************************************
         USING *,BASEREG          ESTABLISH CSECT ADDRESSABILITY
         B     IFDPC000-IFDOLT58(ENTRYREG)  ENTRY POINT FOR PCI EXIT
         DC    A(IFDNR000)        ADDRESS OF THE NORMAL EXIT ENTRY PT
         DC    A(IFDAB000)        ADDRESS OF THE ABNORMAL EXIT ENTRY PT
         DC    C'IFDOLT58&SYSDATE'          NAME OF MOD AND ASM DATE
         DS    0H
IFDPC000 EQU   *
         STM   REG14,REG12,12(SAVEREG) SAVE IOS REGS FOR THIS ENTRY
         LR    BASEREG,ENTRYREG   SET UP ADDRESSABILITY FOR PCI ENTRY
         B     IFDPC010           GO TO THE PCI EXIT ROUTINE
         USING DEVTABMP,DEVTABRG  SET UP ADDRESSABILITY TO DEVTAB
         USING IOSB,IOSBREG       SET UP ADDRESSABILITY TO THE IOSB
         USING TECB,TECBREG       SET UP ADDRESSABILITY TO THE OLT TECB
         USING IODEVTAB,IODEVREG  SET UP ADDRESSABILITY TO THE IODEVTAB
         SPACE 5
***********************************************************************
*   THE FOLLOWING CODE IS THE ENTRY POINTS FOR THE NORMAL AND ABNORMAL*
* EXITS. IT SET UP THE CSECT BASE REGISTER VALUE THEN BRANCHES TO THE *
* APPROPRIATE ROUTINE.                                                *
***********************************************************************
         SPACE
IFDNR000 EQU   *                  NORMAL EXIT ENTRY POINT
         STM   REG14,REG12,12(SAVEREG) SAVE IOS REGS FOR THIS ENTRY
         L     BASEREG,IFDENTRY-IFDNR000(ENTRYREG)    SET UP CSECT
*                                 ENTRY ADDRESS
         B     IFDNR010           GO TO THE NORMAL EXIT ROUTINE
         SPACE 3
IFDAB000 EQU   *                  ABNORMAL ENTRY POINT
         STM   REG14,REG12,12(SAVEREG) SAVE IOS REGS FOR THIS ENTRY
         L     BASEREG,IFDENTRY-IFDAB000(ENTRYREG)    SET UP CSECT
*                                 ENTRY ADDRESS
         B     IFDAB010           GO TO THE ABNORMAL EXIT ROUTINE
IFDENTRY DC    A(IFDOLT58)        VALUE FOR CSECT ADDRESSABILITY
         EJECT
IFDPC010 EQU   *                  START OF PCI ENTRY PROCESSING
         TM    IOSPROC,IOSAPCI    IS THIS AN IOS GEND PCI IOSB
         BNO   IFDCO170           NO-GO RETURN-NRM/ABN WILL HANDLE
         LR    PCIOSBRG,IOSBREG   YES-SAVE THIS IOSB ADDRESS
         L     IOSBREG,IOSPCHN    GET REAL IOSB ADDRESS
         SPACE 2
IFDPC020 EQU   *
         LM    TECBREG,IODEVREG,TECBPTR     GET TECB AND IODEVTAB PTRS
         L     DEVTABRG,IODEVPTR  GET OLTEP COMMON DEVTAB ENTRY PTR
         OI    DEVFLAG2,PCIIND    SET PCI SW ON IN DEVTAB
*
         LA    CSWPTREG,IOSCC-IOSB(PCIOSBRG) POINT TO STATUS IN PCI
*                                              IOSB
         OI    USEFLAGA,PCIENTRY  TURN PCI ENTRY SW ON IN IOSUSECB
         B     IFDCO010           GO INTO COMMON PROCESSING CODE
         SPACE 5
IFDNR010 EQU   *
         NI    IOSFLA,ALL-IOSEX   TURN OFF EXCEPTIONAL CONDITION FLAG
         B     IFDCO000           GO TO COMMON PROCESS CODE
         SPACE 5
IFDAB010 EQU   *
         TM    USEFLAGA,ENTRYLST  HAS 1ST ENTRY TAKEN PLACE    @YM03321
         BO    IFDCO170           YES-GO RESTORE REGS & RETURN @YM03321
         OI    USEFLAGA,ENTRYLST  SET FIRST ENTRY SWITCH ON    @YM03321
         SPACE 5
***********************************************************************
*                                                                     *
*   THIS IS THE BEGINNING OF THE COMMON PROCESSING ROUTINE            *
*                                                                     *
***********************************************************************
IFDCO000 EQU   *
         LM    TECBREG,IODEVREG,TECBPTR     GET TECB AND IODEVTAB PTRS
         L     DEVTABRG,IODEVPTR  GET OLTEP COMMON DEVTAB ENTRY PTR
         TM    DEVFLAG3,WAITPOST  IS WAITIO 'POLL' FUNCTION POSTING THE
*                                  TECB
         BO    IFDCO170           GO RESTORE IOS REGS AND RETURN TO IOS
*                                  WAITIO WILL LINK TO SVC-59 TO LINK
*                                  TO IOS CCW TRANSLATOR AND FREE CCWS
*                                  AND FIXED STORAGE.ALSO TO FREE
*                                  STORAGE USED FOR XLATOR CTRL BLKS.
         TM    IOSCC,IOSCC3       IS ENTRY FOR SIO CC=3
         BNO   IFDCO005           NO-GO SET UP NORMALLY
         LA    CSWPTREG,IOSCC     CC=3-SO POINT TO CSW IN IOSB
         LA    CSWINREG,ONE       SET CSW COUNTER REG = 1
         B     IFDCO010           GO PROCESS IT
IFDCO005 EQU   *
         LA    CSWPTREG,OCSW1     GET ADDRESS OF 1ST CSW IN OECB
         SR    CSWINREG,CSWINREG  ZERO CSW IN COUNTER REG
         ICM   CSWINREG,1,OINCNT  GET INTERRUPT COUNT          @ZA02756
         BZ    IFDCO180           RETRY IF ZERO                @ZA02795
         SPACE 2
IFDCO010 EQU   *
         TM    USEFLAGA,VIRTCCW   ARE THE CCW'S VIRTUAL
         BNO   IFDCO030           NO- SKIP RE-TRANSLATION VIRTUAL->REAL
         SR    REG0,REG0          ZERO REG0
         ICM   REG0,B'0111',CSWCMDAD(CSWPTREG)   GET CSW COMMAND ADDR
         LTR   REG0,REG0          IS CSW COMMAND ADDR = 0
         BZ    IFDCO030           YES- BYPASS CCW TRANSLATOR
         TM    CSWSTSB(CSWPTREG),CHCTRBIT+IFCTRBIT    ARE EITHER CHAN-
*                                  NEL OR INTERFACE CONTROL CHECKS ON
         BNZ   IFDCO030           YES-DON'T RETRANSLATE CSW COMMAND
*                                  ADDRESS-IT'S PROBABLY INVALID
         BCTR  REG0,0             SUBTRACT 1 FROM CSW COMMAND ADDRESS
*                                  TO INSURE IT'S WITHIN A PAGE BOUNDRY
         LR    WORKREG1,IOSBREG   SAVE POINTER TO OLTEP'S IOSB
         USING CVTMAP,REG15       SET UP ADDRESSABILITY TO CVT @YM03321
         L     REG15,CVTPTR4C     GET CVT ADDR FROM LOW STOR   @YM03321
*                                  X'4C'                       @YM03321
         L     REG15,CVTPTRV      GET ADDR OF SYSTEM REAL TO   @YM03321
*                                  VIRTUAL STORAGE TRANSLATOR  @YM03321
         LR    REG1,REG0          PUT REAL CCW ADDR FROM CSW   @YM03321
*                                  INTO REG1 FOR SYS XLATOR    @YM03321
         BALR  REG14,REG15        GO GET CORRESPONDING VIRTUAL @YM03321
*                                  ADDR FOR THE COPIED CHANNEL @YM03321
*                                   PROGRAM                    @YM03321
         LR    REG0,REG1          PUT THE RETURNED VIRTUAL CCW @YM03321
*                                  ADDR INTO REG0 FOR IOS CCW  @YM03321
*                                  TRANSLATOR                  @YM03321
         L     REG1,TCCWPTR-IOSB(WORKREG1)  GET THE TCCW ADDR  @YM03321
*                                  FOR THIS REQUEST FOR THE    @YM03321
*                                  IOS CCW TRANSLATOR          @YM03321
         DROP  IOSBREG            RELEASE IOSBREG (REG1)
         USING TCCW,REG1          SET UP ADDRESSABILITY TO TCCW
         MVI   TCCWOPTN,TCCWCSWX  SET TCCW OPTIONS FLAG TO RETRANSLATE
*                                  ADDRESS IN REG0
         DROP  REG1
         L     REG15,CVTPTR4C     GET CVT ADDRESS FROM LOW STORAGE X'4C
         L     REG15,CVTIXAVL     GET IOCOMMON AREA ADDRESS
         DROP  REG15              RELEASE REG15
         USING IOCOM,REG15        SET UP ADDRESSABILITY TO I/O COMMON
         L     REG15,IOCTCCW      GET ADDRESS OF CCW TRANSLATOR RTN
         DROP  REG15              RELEASE REG 15
         SPACE 2
         BALR  REG14,REG15        GO TO CCW TRANSLATOR
         LTR   REG15,REG15        IS RETURN CODE ZERO(CSWCMDAD VALID)
         BNZ   IFDCO020           NO-LEAVE CSW CMD ADDR 'REAL'
         LA    REG15,ONE          ADD ONE TO CSW COMMAND ADDRESS TO
         AR    REG0,REG15          RESTORE CORRECT VALUE (DECREMENTED
*                                  BEFORE FOR PAGE BOUNDARY ALIGNMENT)
         STCM  REG0,B'0111',CSWCMDAD(CSWPTREG)   PUT VIRTUAL COMMAND AD
*                                  INTO CSW FOR OLT
         USING IOSB,IOSBREG       REESTABLISH IOSB ADDRESSABILITY
IFDCO020 EQU   *
         LR    IOSBREG,WORKREG1   RESTORE OLTEP'S IOSB POINTER
IFDCO030 EQU   *
         NI    0(CSWPTREG),ONLYCCON    TURN OFF ALL BUT SIO CC BITS
IFDCO035 ICM   WORKREG1,B'0001',IOSCKEY  GET OLTEPS PROTECT KEY
         SPKA  0(WORKREG1)        SET MY PSW TO THAT KEY
         TM    USEFLAGA,OLDTECB   IS THIS AN OLD TECB
         BNO   IFDCO040           NO-GO MOVE STATUS INTO NEW TECB
         OC    OTECBCC,0(CSWPTREG)     MOVE SIO CC TO OLT TECB
         MVC   OTECBCOD+2(L'IOSCOD),IOSCOD  MOVE COMPLETION CODE TO OLD
*                                  TECB FROM IOSB
         MVC   OTECBCSW,CSWCMDAD(CSWPTREG)  MOVE CSW TO OLT TECB
         B     IFDCO090           GO CHECK FOR UNIT CHECK
         SPACE 2
IFDCO040 EQU   *                  NEW TECB HANDLING OF STATUS
         CLI   TECBFDCT,ZERO      ARE THERE ANY EVENT FIELDS IN TECB
         BE    IFDCO050           NO-GO UPDATE EVENT COUNTER
         CLC   TECBFDCT,TECBEVOC  IS FIELDS AVAILABLE =< NUMBER POSTED
*
         BNH   IFDCO050           YES-GO UPDATE EVENT COUNTER ONLY
         SR    WORKREG1,WORKREG1  ZERO WORKREG1
         IC    WORKREG1,TECBEVOC  GET NUMBER OF EVENTS POSTED COUNT
         SR    REG15,REG15        ZERO REG 15
         IC    REG15,TECBFDLN     GET EVENT FIELD LENGTH
         MR    REG14,WORKREG1     GET DISPLACEMENT TO NEXT AVAILABLE
*                                  EVENT FIELD
         LA    TECBEVNT,TECBDATA-TECB(REG15,TECBREG)  GET ADDRESS OF
*                            EVENT FIELD TO POST
         USING EVENTMAP,TECBEVNT  SET ADDRESSABILITY TO EVENT FIELD
         PACK  SIOCC(ONE),0(ONE,CSWPTREG)      MOVE SIO CONDITION CODE
*                                  TO OLT TECB AND PUT SIO CC INTO
*                                  LOW ORDER BYTE.
         OI    SIOCC,EBCDZERO     CONVERT SIO CONDITION CODE TO EBCDIC
         TM    DEVFLAG2,EXIOLVL3  IS EXIO CALL FOR A LEVEL 3 MACRO
         BNO   IFDCO060           NO-GO PROCESS FOR EXIO LEVEL 2
         CLI   SIOCC,EBCDZERO     IS CONDITION CODE 0
         BNE   IFDCO060           NO-GO POST NORMALLY
         MVC   SIODEVAD,DEVADPAD+1     PUT HEX DEVICE ADDRESS INTO TECB
         IC    WORKREG1,TECBEVOC  GET TECB EVENT COUNT
         LA    WORKREG1,ONE(WORKREG1)  ADD 1 TO EVENT COUNT
         STC   WORKREG1,TECBEVOC  PUT NEW EVENT COUNT INTO TECB
         IC    WORKREG1,DEVINTPT  GET DEVTAB EVENT COUNT POSTED VALUE
         LA    WORKREG1,ONE(WORKREG1)  ADD 1 TO THIS
         STC   WORKREG1,DEVINTPT  PUT NEW VALUE INTO DEVTAB
         NI    DEVFLAG2,ALL-EXIOLVL3   TURN OFF EXIO LEVEL 3 BIT
         B     IFDCO040           GO PROCESS NEXT EVENT
         SPACE 2
IFDCO050 EQU   *
         CLI   TECBEVOC,FULL      IS EVENT COUNTER FULL
         BL    IFDCO080           NO-GO UPDATE EVENT COUNTER
         B     IFDCO090           YES-GO CHECK FOR UNIT CHECK
         SPACE 2
IFDCO060 EQU   *                  PROCESS NEW TECB EVENT POST
         CLI   SIOCC,EBCDZERO     IS SIO CONDITION CODE ='F0'
         BNE   IFDCO070           NO-LEAVE IT ALONE
         MVI   SIOCC,EVNTCODE     YES-FLAG IT AS AN EVENT
IFDCO070 EQU   *
         MVC   SIODEVAD,DEVADPAD+1     HEX DEVICE ADDRESS TO EVENT FLD
         MVC   SIOCSWB,CSWCMDAD(CSWPTREG)   MOVE CSW TO TECB IN OLT
IFDCO080 EQU   *                  UPDATE EVENT COUNTERS
         IC    WORKREG1,TECBEVOC  GET TECB EVENT COUNT
         LA    WORKREG1,ONE(WORKREG1)  ADD ONE TO EVENT COUNT
         STC   WORKREG1,TECBEVOC  PUT IT BACK INTO TECB
         IC    WORKREG1,DEVINTPT  GET DEVTAB EVENT COUNT POSTED VALUE
         LA    WORKREG1,ONE(WORKREG1)  PUT NEW VALUE INTO DEVTAB
         STC   WORKREG1,DEVINTPT  PUT NEW VALUE INTO DEVTAB
         SPACE 2
IFDCO090 EQU   *                  ROUTINE TO PROCESS UNIT CHECK/SENSE
         SPACE
         TM    CSWSTSA(CSWPTREG),UCBIT IS UNIT CHECK PRESENT IN CSW
         BNO   IFDCO140           NO-GO SEE IF THIS IS A PCI CALL
         TM    USEFLAGA,OLDTECB   IS THIS AN OLD TECB
         BNO   IFDCO100           NO-GO PROCESS FOR A NEW TECB
         LA    TECBSNS,OTECBSNS   GET ADDRESS OF SENSE AREA IN OLT TECB
         DROP  TECBEVNT           RELEASE TECB EVENT MAP REG
         B     IFDCO110           GO MOVE SENSE
         SPACE 2
IFDCO100 EQU   *                  PROCESS SENSE FOR NEW TECB
         CLI   TECBSNCT,ZERO      ARE THERE ANY SENSE FIELDS IN TECB
         BNH   IFDCO130           GO UPDATE SENSE COUNT ONLY
         CLC   TECBSNOC,TECBSNCT  IS NUMBER POSTED < NUMBER AVAILABLE
         BNL   IFDCO130           NO-GO ONLY UPDATE SENSE COUNT POSTED
         SPACE
*   LOCATE SENSE AREA TO MOVE THE SENSE INTO FOR NEW TECB
         SR    WORKREG1,WORKREG1  ZERO WORKREG1
         SR    REG15,REG15        ZERO REG 15
         IC    WORKREG1,TECBFDCT  GET NUMBER OF EVENT FIELDS
         IC    REG15,TECBFDLN     GET LENGTH OF EVENT FIELD
         MR    REG14,WORKREG1     CALCULATE LENGTH OF EVENT AREA
         LA    TECBSNS,TECBDATA-TECB(REG15,TECBREG)   POINT TO FIRST
*                                  SENSE AREA
         IC    WORKREG1,TECBSNOC  GET NUMBER OF SENSE FIELDS POSTED
         SR    REG15,REG15        ZERO REG15
         ICM   REG15,B'0011',TECBSNLN  GET SENSE FIELD LENGTH
         MR    REG14,WORKREG1     GET INDEX TO NEXT SENSE FIELD TO POST
         AR    TECBSNS,REG15      ADD THIS TO TECB FIELD END
         USING SENSEMAP,TECBSNS   ESTABLISH ADDRESSABILITY TO SENSE
         MVC   SENSEDAD,DEVADPAD+1     HEX DEVICE ADDRESS TO TECB SENSE
         LA    TECBSNS,L'SENSEDAD(TECBSNS)  POINT TO START OF SENSE
         DROP  TECBSNS            RELEASE SENSE MAP ADDRESS REG
IFDCO110 EQU   *
         SR    WORKREG1,WORKREG1  ZERO WORKREG1
         IC    WORKREG1,OSNSCNT   GET SENSE DATA COUNT
         BCTR  WORKREG1,0         SUBTRACT 1 TO ADJUST FOR EXECUTE
         EX    WORKREG1,MVCSENSE  MOVE THE SENSE DATA TO THE TECB
         TM    USEFLAGA,OLDTECB   IS THE TECB OLD
         BNO   IFDCO130           NO-GO UPDATE SENSE COUNTER
         SPKA  0(REG0)            RESTORE MY PROTECT KEY TO ZERO
         TM    USEFLAGA,PCIENTRY  IS THIS MODULE ENTRY FOR A PCI EXIT
         BNO   IFDCO150           NO-GO TO ECB POST ROUTINE
IFDCO120 EQU   *
         NI    USEFLAGA,ALL-PCIENTRY   SET PCI ENTRY SWITCH OFF
         B     IFDCO170           GO RESTORE REGS AND RETURN
IFDCO130 EQU   *
         CLI   TECBSNOC,FULL      IS TECB SENSE COUNTER FULL
         BE    IFDCO140           YES-GO CONTINUE COMMON FLOW
         IC    WORKREG1,TECBSNOC  GET TECB SENSE COUNT POSTED VALUE
         LA    WORKREG1,1(WORKREG1)    ADD 1 TO IT
         STC   WORKREG1,TECBSNOC  PUT NEW SENSE COUNT VALUE INTO TECB
IFDCO140 EQU   *
         SPKA  0(REG0)            RESTORE MY PROTECT KEY TO ZERO
         TM    USEFLAGA,PCIENTRY  IS THIS A PCIENTRY TO THIS MODULE
         BO    IFDCO120           YES-GO END THIS ENTRY
         LA    CSWPTREG,L'OCSW1(CSWPTREG)   POINT TO NEXT CSW IN OECB
         BCT   CSWINREG,IFDCO155   BR IF MORE INTERUPTS        @ZA16992
         SPACE 3
IFDCO150 EQU   *                  THIS ROUTINE POSTS THE ECB
         TM    IOECB,WAIT         IS THE ECB BEING WAITED ON
         BO    IFDCO160           YES-GO SYSTEM POST THAT ECB
         MVI   IOECB,POSTBIT      SET THE POST BIT ON
         MVC   IOECB+3(ONE),IOSCOD   PUT THE COMP CODE IN ECB
         B     IFDCO170           GO RESTORE REGS AND RETURN
IFDCO155 OI    0(CSWPTREG),X'FF'  RESET SIO FLAG TO FF FOR ALL @ZA16992
*                                 INTERRUPTS AFTER FIRST       @ZA16992
         B     IFDCO035                                        @ZA16992
IFDCO160 EQU   *
         SR    REG10,REG10        ZERO REG 10
         IC    REG10,IOSCOD       GET IOS COMPLETION CODE FROM IOSB
         LA    ECBPTR,IOECB       GET ECB ADDRESS
         L     REG15,CVTPTR4C     GET CVT ADDRESS
         USING CVTMAP,REG15       SET ADDRESSABILITY TO CVT
         L     REG15,CVT0PT01     GET ADDRESS OF POST ROUTINE
         BALR  REG14,REG15        GO TO POST OLTEP'S ECB
IFDCO170 EQU   *
         USING UCBOB,UCBPTR        ESTABLISH ADDRESSIBILITY    @ZA04290
         L     UCBPTR,IOSUCB       LOAD ADDRESS OF UCB         @ZA04290
         C     IOSBREG,UCBIOSBA    IS THE UCB FOR A 3851?      @ZA04290
         BNE   IFDC0175            IF NOT, GO AROUND           @ZA04290
         NI    UCBFLA,ALL-UCBQISCE RESET THE QUIESCE BITS      @ZA04290
         NI    IOSOPT,ALL-IOSQISCE IN THE UCB AND IOSB         @ZA04290
         DROP  UCBPTR                                          @ZA04290
IFDC0175 EQU   *                                               @ZA04290
         LM    REG14,REG12,12(SAVEREG) RESTORE IOS REGISTERS
         BR    REG14              AND RETURN ON REG 14 + 0
IFDCO180 EQU   *                                               @ZA02795
         CLI   IOSCOD,IOSFINTC     IS IT RC = 7E               @ZA04292
         BNO   IFDCO150           IF NOT, GO POST THE ECB      @ZA02795
         NI    IOSFLA,ALL-IOSEX   RESET THE INTERCEPT FLAG     @ZA02795
         LM    REG14,REG12,12(SAVEREG) RESET IOS REGISTERS     @ZA02795
         B     8(REG14)           RETURN TO IOS RETRY ENTRY    @ZA02795
         EJECT
***********************************************************************
*                   CONSTANTS                                         *
***********************************************************************
         SPACE
         DS    0F
SUBPLCON DC    X'F50000A0'        160 BYTES IN SUBPL 245 FOR   @YM03321
*                                    EACH CONTROL BLOCK OF THE CCW
*                                     TRANSLATOR
***********************************************************************
*                   EXECUTE OBJECT INSTRUCTIONS                       *
***********************************************************************
MVCSENSE MVC   0(0,TECBSNS),OSNS1 MOVE SENSE FROM OECB TO TECB
         SPACE 5
***********************************************************************
*                   PATCH AREA                                        *
***********************************************************************
         SPACE
         IFDPATCH
         EJECT
***********************************************************************
*                  DSECTS FOR THIS MODULE                             *
***********************************************************************
         SPACE 5
         CVT   DSECT=YES
         SPACE 5
TCCW     IECDTCCW
         SPACE 5
         IECDIOCM
         SPACE 5
         IEFUCBOB                 DSECT FOR THE SYSTEM UCB
         SPACE 5
         IHASRB                   DSECT FOR THE SYSTEM SRB
         SPACE 5
         IECDIOSB                 DSECT FOR THE SYSTEM IOSB
         SPACE 5
*  DESCT FOR OLTEP'S IOSB USER CONTROL BLOCK AND EVENT CONTROL BLOCK
         SPACE 2
IOSUSECB EQU   *
USERCB   DS    0CL24              START OF IOSB USER CONTROL BLOCK
OECBPTR  DS    F                  POINTER TO OLTEP EVENT CONTROL BLOCK
TECBPTR  DS    F                  OLT'S TECB POINTER FOR THIS EVENT
IODVTBPT DS    F                  POINTER TO 3 WORDS IN OLTEP COMMON
*                                   AREA WHICH HAVE:
*                                       0   DEVTAB ENTRY POINTER
*                                       4   POINTER TO THIS IOSB
*                                       8   THE ECB FOR THIS EVENT
TCCWPTR  DS    F                  POINTER TO THE TCCW SYSTEM CONTROL
*                                    BLOCK FOR THE CCW TRANSLATOR
USEFLAGS DS    0F                 A WORD OF FLAGS
USEFLAGA DS    1C                 FIRST FLAG BYTE FOR THIS CB SET
INUSE    EQU   X'80'              THIS IOSB IS IN USE
ATTN     EQU   X'40'              ATTENTION=YES REQUEST (OFF IF DONE)
VIRTCCW  EQU   X'20'              THE CCW'S ARE IN VIRTUAL
OLDTECB  EQU   X'10'              OLD TECB TO BE POSTED
INTRNLCB EQU   X'08'              REQUEST IS INTERNAL (LINE CONNECT,DP)
PURGED   EQU   X'04'              THIS I/O EVENT IS PURGED
PCIENTRY EQU   X'02'              PCI EXIT OPERATING
ENTRYLST EQU   X'01'              BIT IN IOSUSE FLAGA TO SHOW  @YM03321
*                                  THAT THE ABNORMAL EXIT HAS  @YM03321
*                                  BEEN ENTERED FOR MORE THAN  @YM03321
*                                  THE FIRST TIME              @YM03321
USEFLAGB DS    1C                 UNUSED
USEFLAGC DS    1C                 UNUSED
USEFLAGD DS    1C                 UNUSED
USERSVD  DS    F                  RESERVED FOR FUTURE
         SPACE
OECB     DS    0CL64              START OF OLTEP'S EVENT CONTROL BLOCK
OSNSCNT  DS    CL1                OLT'S SENSE BYTES REQUESTED COUNT
OINCNT   DS    CL1                NUMBER OF INTERRUPTS IN OECB
UNUSED   DS    CL2                NOT USED
OCSW1    DS    0CL8               FIRST INTERRUPT POSTED IN OECB
OCSWCC1  DS    CL1                IOS SIO CONDITION CODE
OCSWCMD1 DS    CL3                CSW COMMAND ADDRESS
OCSWSTS1 DS    0CL2               CSW1 STATUS BYTES
OCSWSTA1 DS    CL1                CSW1 STATUS BYTE A
OCSWSTB1 DS    CL1                CSW1 STATUS BYTE B
OCSWBYT1 DS    CL2                CSW1 RESIDUAL BYTE COUNT
OCSW2    DS    0CL8               SECOND INTERRUPT POSTED IN OECB
OCSWCC2  DS    CL1                IOS SIO CONDITION CODE
OCSWCMD2 DS    CL3                CSW COMMAND ADDRESS
OCSWSTS2 DS    0CL2               CSW2 STATUS BYTES
OCSWSTA2 DS    CL1                CSW2 STATUS BYTESA
OCSWSTB2 DS    CL1                CSW2 STATUS BYTESB
OCSWBYT2 DS    CL2                CSW2 RESIDUAL BYTE COUNT
OCSW3    DS    0CL8               THIRD INTERRUPT POSTED IN OECB
OCSWCC3  DS    CL1                IOS SIO CONDITION CODE
OCSWCMD3 DS    CL3                CSW COMMAND ADDRESS
OCSWSTS3 DS    0CL2               CSW3 STATUS BYTES
OCSWSTA3 DS    CL1                CSW3 STATUS BYTESA
OCSWSTB3 DS    CL1                CSW3 STATUS BYTESB
OCSWBYT3 DS    CL2                CSW3 RESIDUAL BYTE COUNT
OSNS1    DS    CL36               SENSE SAVE AREA FOR UNIT CHECK ON
*                                   THIS REQUEST
         SPACE 2
         IFDEVTAB
         SPACE 5
IODEVTAB DSECT                    OLTEP COMMON AREA CONTROL BLOCK TO
*                                  ASSOCIATE A DEVTAB ENTRY AND A SRB1
*                                  IOSB/OECB COMBINATION
IODEVPTR DS    F                  POINTER TO DEVICE TABLE ENTRY
IOIOSBPT DS    F                  IOSB POINTER
IOECB    DS    F                  ECB ASSOCIATED WITH THIS I/O EVENT
         SPACE 5
TECB     DSECT
TECBFDCT DS    CL1                NUMBER OF EVENT FIELDS IN TECB
TECBFDLN DS    CL1                LENGTH OF EVENT FIELDS IN TECB
TECBSNLN DS    CL2                LENGTH OF SENSE FIELDS IN TECB
TECBFLAG DS    CL1                RESERVED FOR OLT(S)EP'S USE
TECBSNCT DS    CL1                LENGTH OF SENSE FIELDS IN TECB
TECBSNOC DS    CL1                NUMBER OF SENSE FIELDS POSTED
TECBEVOC DS    CL1                NUMBER OF EVENT FIELDS POSTED
TECBDATA DS    0CL1               START OF EVENT AND SENSE DATA
         ORG   TECBFDCT           NOW MAP OLD TECB - P3116 OLTS
OLDTECBD DS    0F                 START OF OLD TECB
OTECBECB DS    0F                 OLD TECB ECB FIELD
OTECBFLG DS    CL1                ECB FLAGS
OTECBCOD DS    CL3                ECB COMPLETION CODE
OTECBCC  DS    CL1                OLD TECB SIO CONDITION CODE
OTECBBYT EQU   X'80'              OLD TECB FLAG TO BYPASS TIMING
OTECBCSW DS    CL7                OLD TECB SIO CSW
OTECBSNS DS    CL35               OLD TECB SIO SENSE IF UNIT CHECK
         SPACE 5
EVENTMAP DSECT
         DS    0F                 MAP OF NEW TECB EVENT FIELD
SIOCC    DS    CL1                SIO CONDITION CODE OR FIELD IDENT
SIODEVAD DS    CL3                SIO DEVICE ADDRESS
SIOCSW   DS    0CL8               CSW FOR THIS EVENT
SIOCSWA  DS    CL1                1ST BYTE UNUSED
SIOCSWB  DS    CL7                7 BYTES OF STATUS
         SPACE 3
SENSEMAP DSECT                    MAP OF NEW TECB SENSE FIELD
SENSEDAD DS    CL3                DEVICE ADDRESS FOR SENSE ONFORMATION
SENSEIFO DS    CL35               SENSE INFORMATION - UP TO 35 BYTES
         END
