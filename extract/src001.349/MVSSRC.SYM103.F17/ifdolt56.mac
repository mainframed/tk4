         TITLE ' RETAIN/370 TERMINATION IFDOLT56'
         TITLE 'RETAIN/370 TERMINATION IFDOLT56'
         LCLA  &T,&SPN                                            0002
.@001    ANOP                                                     0002
IFDOLT56 CSECT ,                                                  0002
         BC    15,24(0,@F)
         DC    C'IFDOLT56 23 JAN 74'                             0002
         STM   @E,@C,12(@D)                                       0002
         BALR  @B,0                                               0002
@PSTART  DS    0H                                                 0002
         USING @PSTART+00000,@B                                   0002
         ST    @D,@SAV001+4                                       0002
         LA    @F,@SAV001                                         0002
         ST    @F,8(0,@D)                                         0002
         LR    @D,@F                                              0002
*         GEN(USING CHASCT,2);
         USING CHASCT,2
         DS    0H
*         GENERATE DATA;
*  /*******************************************************************
*  /*     CNVRT MACRO CALLING SEQUENCE                                *
*  /*******************************************************************
*         GENERATE DATA;
*         GENERATE DATA;
*         DCL CCWDIS(2) FIXED GENERATED;
*  /*******************************************************************
*  /* REGISTERS                                                       *
*  /*******************************************************************
*         DCL R0 REG(0) PTR;
*         DCL R1 REG(1) PTR;
*         DCL R2 REG(2) PTR;
*         DCL R3 REG(3);
*         DCL R4 REG(4);
*         DCL R5 REG(5);
*         DCL R6 REG(6);
*         DCL R7 REG(7);
*         DCL R8 REG(8);
*         DCL R9 REG(9);
*         DCL R10 REG(10);
*         DCL R11 REG(11);
*         DCL R12 REG(12);
*         DCL R13 REG(13);
*         DCL R14 REG(14);
*         DCL R15 REG(15);
*  /*******************************************************************
*  /*     REI IOB                                                     *
*  /*******************************************************************
*         DCL REIOBPTR PTR GENERATED;   /* POINTER TO REMOTE IOB      *
*         DCL 1 IOB CHAR(40) BASED(REIOBPTR),     /* IOB BREAK DOWN   *
*             2 IOB1 CHAR(32),          /* USED BY EXCP               *
*              3 FLAGS BIT(8),          /*                            *
*               5 DCH BIT(1),           /* DATA CHAINING              *
*               5 CCH BIT(1),           /* COMMAND CHAINING           *
*               5 * BIT(6),             /*                            *
*              3 * CHAR(1),
*              3 SENSE CHAR(2),         /* SENSE                      *
*              3 ECBC BIT(8),           /* ECB CODE                   *
*              3 ECBA PTR(24),          /* ECB ADDRESS                *
*              3 * CHAR(1),
*              3 CSW CHAR(7),           /* CSW                        *
*              3 * BIT(8),
*              3 CPA PTR(24),           /* CHANNEL PROGRAM ADDRESS    *
*              3 * BIT(8),              /*                            *
*              3 DCBA PTR(24),          /* DCB ADDRESS                *
*              3 * BIT(8),
*              3 * CHAR(8),
*             2 ERPWORK PTR(31);        /* PTR TO ERP WORKAREA        *
*  /*******************************************************************
*  /*     ERP'S WORKAREA                                              *
*  /*******************************************************************
*         DCL CCWWORK CHAR(48) BASED(ERPWORK); /* WORKAREA            *
*  /*******************************************************************
*  /* COMMON AREA REI SWITCHES                                        *
*  /*******************************************************************
*         DCL CESWTR CHAR(1) GENERATED; /* COMMON AREA SWITCHES       *
*        DCL 1 * BASED(ADDR(CESWTR)),    /*                           *
*              3 RETAINAC BIT(1),        /* REI ACTIVE SWITCH         *
*              3 REMERR BIT(1),          /* PERMANENT ERROR SWITCH    *
*              3 REMNOMSG BIT(1),       /* REMOTE NO MESSAGE SWITCH   *
*              3 * BIT(5);               /*                           *
*         DCL   CESWTR1 BIT(8) GENERATED; /*RETAIN SWITCHES           *
*         DCL 1 SWTR1 BIT(8) BASED(ADDR(CESWTR1)),
*              3 * BIT(5),
*              3 REMANS BIT(1),     /*    REMOTE WILL ANSWER          *
*              3 * BIT(2);
*         DCL CESWTR2 BIT(8) GENERATED; /* RETAIN SWITCHES            *
*         DCL CHASCT CHAR(1) GENERATED; /* COMMON AREA SWITCHES       *
*        DCL 1 * BASED(ADDR(CHASCT)),
*             3 * (9) FIXED,             /*                           *
*             3 * FIXED,                 /*                           *
*               5 * BIT(2),              /*                           *
*               5 RETSWT BIT(1),         /* ANOTHER REI ACTIVE SWITCH *
*               5 * BIT(29);             /*                           *
*  /*******************************************************************
*  /* BUFFERS AND ASSOCIATED ECBS                                     *
*  /*******************************************************************
*         DCL REIECB GENERATED;         /* REMOTE ECB                 *
*         DCL 1 RECB BASED(ADDR(REIECB)),
*               3 * CHAR(2),
*               3 * CHAR(1),
*                5 * BIT(7),
*                5 SELFPOST BIT(1),
*               3 * CHAR(1);
*  /*                                                                 *
*         DCL RINBUF PTR GENERATED;     /* INPUT BUFFER POINTER       *
*         DCL REIBUF CHAR(80) BASED(RINBUF);/* REI INPUT BUFFER       *
*  /*                                                                 *
*         DCL REIDCBPT PTR GENERATED;   /* POINTER TO REMOTE DCB      *
*         DCL 1 REIDCB CHAR(72) BASED(REIDCBPT),
*               3 * CHAR(44),           /* NA                         *
*               3 RDCB44 PTR(31),       /* POINTER TO DEB             *
*                5 RDCB44C CHAR(1);     /* FLAGS                      *
*  /*                                                                 *
*         DCL TALKECB FIXED GENERATED;  /* TALK ECB                   *
*  /*                                                                 *
*         DCL REIUCB PTR(31) GENERATED; /* UCB ADDRESS                *
*  /* OLTEP PRINT BUFFER AND PRINT BUFFER SAVE AREA                   *
*                                       /*                       M4502*
*         DCL PRTBUFR CHAR(120) GENERATED;
*                                       /*                       M4502*
*         DCL PRINTBUF CHAR(120) BASED(ADDR(PRTBUFR));
*                                       /*                       M4502*
*         DCL PRINTSAV CHAR(120);
*                                       /*                       M4502*
*  /*******************************************************************
*  /* SVC 59 CALLING SEQUENCE AND PWTO INFORMATION                    *
*  /*******************************************************************
*         DCL IFDMSG56 LABEL NONLOCAL EXTERNAL;   /* MESSAGE MODULE   *
*         DCL MSGPTR PTR INIT(ADDR(IFDMSG56));
*         DCL 1 * BASED(MSGPTR),
*              3 IFD169 PTR(31),        /* MESSAGE POINTERS           *
*               3 IFD121 PTR(31),
*               3 IFD167 PTR(31),
*              3 IFDXXX PTR(31),        /*                      S21051*
*              3 IFD137 PTR(31);        /*                      S21051*
*         DCL 1 * BASED(IFD121),        /* CANCELLED MESSAGE          *
*              3 * CHAR(12),
*              3 MID CHAR(2);           /* CANCELLED MESSAGE ID       *
*         DCL 1 WKWDID CHAR(4) BDY(WORD),
*              3 * CHAR(2),
*              3 DUMID CHAR(2);
*         DCL WKSVC PTR GENERATED;      /* SVC WORK AREA              *
*         DCL ROPT CHAR(8) GENERATED;   /* SVC CALLING SEQUENCE       *
*         DCL 1 * BASED(ADDR(ROPT)),    /* BREAK DOWN                 *
*              3 ROPT4 PTR,             /* POINTER TO ECB             *
*              3 ROPT8 PTR;
*         DCL MODID BASED(ADDR(WKSVC));
*         DCL 1 CSWSNSMS CHAR(35) BASED(IFD137),  /*            S21051*
*              3 * CHAR(4),             /* USED BY PWTO         S21051*
*              3 * CHAR(14),            /*                      S21051*
*              3 MSGCSW CHAR(14),       /* CSW                        *
*              3 * CHAR(5),             /*                      S21051*
*              3 MSGSNS CHAR(2);        /* SENSE                      *
*         DCL 1 INBUF CHAR(18),          /* MACRO OUTPUT              *
*              3 SNSIN CHAR(4),          /* SENSE IN EBCDIC           *
*              3 CSWIN CHAR(14);        /* CSW INPUT                  *
*         DCL 1 OUTBUFR CHAR(9),        /* CNVRT MACRO OUTPUT         *
*              3 SNSOUT CHAR(2),        /* SENSE OUTPUT               *
*              3 CSWOUT CHAR(7);        /* CSW OUTPUT                 *
*         DCL CNVRT CHAR(14) GENERATED; /*CALLING SEQUENCE            *
*         DCL TAB28 PTR(31) GENERATED;  /* POINTER TO CONVERT MACRO   *
*  /*******************************************************************
*  /* STIMER MACRO CALLING SEQUENCE                                   *
*  /*******************************************************************
*         DCL TIMEOUT PTR GENERATED;
*         DCL SAVE2(18) FIXED;          /* TIMEOUT SAVEAREA           *
*         DCL TIME2 CHAR(8) BDY(DWORD)  /* TWO MINUTES ON WAIT        *
*           INIT('F0F0F0F2F0F0F0C0'X);
*  /*******************************************************************
*  /* PURGE READ INITIAL CHANNEL PROGRAM BEFORE DISABLING LINE        *
*  /*******************************************************************
*         GEN(TTIMER CANCEL);
         TTIMER CANCEL
         DS    0H
*         GEN(MVC  PRINTSAV(120),PRINTBUF);  /* SAVE PRINT BUFFER     *
         MVC  PRINTSAV(120),PRINTBUF
         DS    0H
*                                       /*                       M4502*
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          *
         OI    A00007,B'00100000'                                 0064
*         RETSWT='0'B;                  /* TURN OFF REI SWT SA51639   *
         NI    A00011+36,B'11011111'                              0065
*         RETSWT='0'B;                  /* TURN OFF RETAIN SW  SA56139*
*         IF REMERR^='1'B THEN GOTO PURGE;  /* PERMANENT ERROR ?      *
         TM    A00007,B'01000000'                                 0067
         BC    12,PURGE                                           0068
*         IF SELFPOST^='1'B THEN GOTO AA1;
         TM    RECB+2,B'00000001'                                 0069
         BC    12,AA1                                             0070
*         R1=IFDXXX;
         L     @1,MSGPTR                                          0071
         L     @1,12(0,@1)                                        0071
*         GEN(PWTO REG=(1));
         PWTO REG=(1)
         DS    0H
*         GOTO PURGE;
         BC    15,PURGE                                           0073
*     AA1:SNSOUT=SENSE;                 /* GET SENSE BYTES            *
AA1      L     @1,REIOBPTR                                        0074
         MVC   OUTBUFR(2),2(@1)                                   0074
*         CSWOUT=CSW;                   /* GET CSW BYTES              *
         MVC   OUTBUFR+2(7),9(@1)                                 0075
*         R1=ADDR(CNVRT);               /* POINT TO CALLING SEQUENCE  *
         LA    @1,CNVRT                                           0076
*         R15=TAB28;                    /* POINT TO CONVERT MACRO     *
         L     @F,TAB28                                           0077
*         GEN(BALR R14,R15);            /* CONVERT SNS&CSW TO EBCDIC  *
         BALR R14,R15
         DS    0H
*         R1=IFD167;                    /* SET UP FOR PWTO            *
         L     @1,MSGPTR                                          0079
         L     @1,8(0,@1)                                         0079
*         GEN(PWTO REG=(1));            /*                      S21051*
         PWTO REG=(1)
         DS    0H
*         R1=IFD137;                    /*                      S21051*
         L     @1,MSGPTR                                          0081
         L     @1,16(0,@1)                                        0081
*         MSGSNS=SNSIN;                 /* PUT IN SENSE DATA          *
         L     @C,MSGPTR                                          0082
         L     @C,16(0,@C)         A00021                         0082
         MVC   37(2,@C),INBUF                                     0082
*         MSGCSW=CSWIN;                 /* PUT IN CSW DATA            *
         MVC   18(14,@C),INBUF+4                                  0083
*         GEN(PWTO REG=(1));            /* WRITE IT                   *
         PWTO REG=(1)
         DS    0H
*   PURGE:R1=REIUCB;                    /* GET UCB ADDRESS            *
PURGE    L     @1,REIUCB                                          0085
*         GEN;                          /* PURGE READ INITIAL CHAN PRG*
HIORDINT SVC   33                       * HIO ON READ INITIAL CHAN PRG
HIOWAIT  WAIT  ECB=RECB                * WAIT FOR HIO
         DS    0H
*  /*******************************************************************
*  /* IF NESSECARY FREE LOCAL COMMUNICATIONS ECB                      *
*  /*******************************************************************
*         WKSVC='F5F6'X;                /* MODULE ID                  *
         MVC   WKSVC(4),@X3                                       0087
*         R1='00'X;                     /* FLAGS               XA     *
         LA    @1,X'00'                                           0088
*         ROPT4=ADDR(TALKECB);          /* ADDRESS OF TALK ECB        *
         LA    @F,TALKECB                                         0089
         ST    @F,A00025                                          0089
*         R0=ADDR(ROPT);                /* ADDRESS OF CALLING SEQ     *
         LA    @0,ROPT                                            0090
*         GEN(SVC   59);                /* FREE ECB                   *
         SVC   59
         DS    0H
*         IF R1^=0                      /* SVC DID NOT FREE ECB X03008*
*          THEN                         /* THEREFORE DONT PRNT  X03008*
         LTR   @1,@1                                              0092
*           GO TO DISABL;               /* FREE MSG IFD121I     X03008*
         BC    07,DISABL                                          0093
*         WKWDID=R0;                    /* SAVE REG WITH MSG ID X03008*
         ST    @0,WKWDID                                          0094
*         MID=DUMID;                    /* ID INTO MESSAGE            *
         L     @1,MSGPTR                                          0095
         L     @1,4(0,@1)          A00021                         0095
         MVC   12(2,@1),WKWDID+2                                  0095
*         R1=IFD121;                    /* POINT TO MESSAGE           *
         L     @C,MSGPTR                                          0096
         L     @1,4(0,@C)                                         0096
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          *
         OI    A00007,B'00100000'                                 0097
*         GEN(PWTO  REG=(1));           /* ISSUE MESSAGE              *
         PWTO  REG=(1)
         DS    0H
*         REMNOMSG='0'B;                /* RESET FLAG                 *
         NI    A00007,B'11011111'                                 0099
*  /*******************************************************************
*  /* DISABLE 2955 AND SET REI INACTIVE SWITCHES BEFORE RETURNING     *
*  /*******************************************************************
*  DISABL:IOB1=IOB1&&IOB1;              /* ZERO THE IOB               *
DISABL   L     @1,REIOBPTR                                        0100
         XC    0(32,@1),0(@1)                                     0100
*         FLAGS='02'X;
         MVI   0(@1),X'02'                                        0101
*         RECB = 0;                     /* ZERO THE ECB               *
         MVC   RECB(4),@D1                                        0102
*         ECBA = ADDR(RECB);            /* ADDRESS OF ECB             *
         LA    @F,RECB                                            0103
         ST    @F,@TEMP4                                          0103
         MVC   5(3,@1),@TEMP4+1                                   0103
*         CPA = ADDR(CCWDIS);           /* CHANNEL PROGRAM ADDRESS    *
         LA    @F,CCWDIS                                          0104
         ST    @F,@TEMP4                                          0104
         MVC   17(3,@1),@TEMP4+1                                  0104
*         DCBA = REIDCBPT;                   /* DCB ADDRESS           *
         MVC   21(3,@1),REIDCBPT+1                                0105
*         R1=REIOBPTR;                  /* ADDRESS OF IOB FOR EXCP    *
         L     @1,REIOBPTR                                        0106
*         GEN;                          /*                            *
DISABLE  EXCP  (1)                      * DISABLE THE 2955
STRTCLCK STIMER REAL,TIMEOUT,DINTVL=TIME2
WAITDIS  WAIT  ECB=REIECB                    * WAIT FOR COMPLETION
STOPCLCK TTIMER CANCEL
         DS    0H
*         IF SELFPOST^='1'B THEN GOTO BB1;
         TM    RECB+2,B'00000001'                                 0108
         BC    12,BB1                                             0109
*         R1=IFDXXX;
         L     @1,MSGPTR                                          0110
         L     @1,12(0,@1)                                        0110
*         GEN(PWTO REG=(1));
         PWTO REG=(1)
         DS    0H
*     BB1:IOB1=IOB1&&IOB1;              /* INITIALIZE IOB             *
BB1      L     @1,REIOBPTR                                        0112
         XC    0(32,@1),0(@1)                                     0112
*         FLAGS='02'X;
         MVI   0(@1),X'02'                                        0113
*         RECB=0;                       /* INITIALIZE ECB             *
         MVC   RECB(4),@D1                                        0114
*         TALKECB=0;                    /* ZERO COMMUNICATIONS ECB    *
         SR    @F,@F                                              0115
         ST    @F,TALKECB                                         0115
*         R1=IFD169;                    /* POINT TO MESSAGE           *
         L     @C,MSGPTR                                          0116
         L     @1,0(0,@C)                                         0116
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          *
         OI    A00007,B'00100000'                                 0117
*         GEN(PWTO  REG=(1));           /* ISSUE MESSAGE              *
         PWTO  REG=(1)
         DS    0H
*         GEN( NI    CESWTR,X'43');     /* INITIALIZE                 *
          NI    CESWTR,X'43'
         DS    0H
*         CESWTR1='00'X;                /*          RETAIN            *
         MVI   CESWTR1,X'00'                                      0120
*         CESWTR2='00'X;                /*               SWITCHES     *
         MVI   CESWTR2,X'00'                                      0121
*         CCWWORK=CCWWORK&&CCWWORK;     /* ZERO ERP WORKAREA          *
         L     @1,REIOBPTR                                        0122
         MVC   @TEMP4(4),32(@1)                                   0122
         L     @1,@TEMP4           IOB                            0122
         XC    0(48,@1),0(@1)                                     0122
*         GEN(MVC  PRINTBUF(120),PRINTSAV);  /* RESTORE PRINT BUFFER  *
         MVC  PRINTBUF(120),PRINTSAV
         DS    0H
*                                       /*                       M4502*
*         RETURN;                            /* RETURN TO DEVICE DEC. *
         BC    15,@EL01                                           0124
*  /*******************************************************************
*  /* STIMER EXIT ROUTINE-2 MINUTE INTERRUPT                          *
*  /*******************************************************************
*         GENERATE;
TIMEOUT  STM   R14,R12,12(R13)         * SAVE CALLERS REGS
         BALR  R11,0                   * SET
         LA    R15,TIMEOUT-IFDOLT56    *     UP
         SR    R11,R15                 *        BASE REGISTER
         ST    R13,SAVE2+4             * SAVE @ OF CALLERS SAVEAREA
         LA    R15,SAVE2               * GET @ OF OWN SAVEAREA
         ST    R15,8(R13)              * SAVE IN CALLERS SAVEAREA
         LR    R13,R15                 * PUT IT IN SAVE REG (13)
POSTECB  POST  RECB,256                *POST 100 COMPLETION CODE
         DS    0H
*         RETURN;
*         END IFDOLT56;
@EL01    L     @D,4(0,@D)                                         0127
         LM    @E,@C,12(@D)                                       0127
         BCR   15,@E                                              0127
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    F'0'
         DS    0F
@X3      DC    X'0000F5F6'
         DS    0D
@DATA    EQU   *
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD
R0       EQU   00000000            FULLWORD POINTER REGISTER
R1       EQU   00000001            FULLWORD POINTER REGISTER
R2       EQU   00000002            FULLWORD POINTER REGISTER
R3       EQU   00000003            FULLWORD INTEGER REGISTER
R4       EQU   00000004            FULLWORD INTEGER REGISTER
R5       EQU   00000005            FULLWORD INTEGER REGISTER
R6       EQU   00000006            FULLWORD INTEGER REGISTER
R7       EQU   00000007            FULLWORD INTEGER REGISTER
R8       EQU   00000008            FULLWORD INTEGER REGISTER
R9       EQU   00000009            FULLWORD INTEGER REGISTER
R10      EQU   00000010            FULLWORD INTEGER REGISTER
R11      EQU   00000011            FULLWORD INTEGER REGISTER
R12      EQU   00000012            FULLWORD INTEGER REGISTER
R13      EQU   00000013            FULLWORD INTEGER REGISTER
R14      EQU   00000014            FULLWORD INTEGER REGISTER
R15      EQU   00000015            FULLWORD INTEGER REGISTER
IOB      EQU   00000000            40 BYTE(S)
IOB1     EQU   IOB+00000000        32 BYTE(S)
FLAGS    EQU   IOB+00000000        8 BIT(S)
DCH      EQU   IOB+00000000        1 BIT(S)
CCH      EQU   IOB+00000000        1 BIT(S)
A00000   EQU   IOB+00000000        6 BIT(S)
A00001   EQU   IOB+00000001        1 BYTE(S)
SENSE    EQU   IOB+00000002        2 BYTE(S)
ECBC     EQU   IOB+00000004        8 BIT(S)
ECBA     EQU   IOB+00000005        3  BYTE  POINTER
A00002   EQU   IOB+00000008        1 BYTE(S)
CSW      EQU   IOB+00000009        7 BYTE(S)
A00003   EQU   IOB+00000016        8 BIT(S)
CPA      EQU   IOB+00000017        3  BYTE  POINTER
A00004   EQU   IOB+00000020        8 BIT(S)
DCBA     EQU   IOB+00000021        3  BYTE  POINTER
A00005   EQU   IOB+00000024        8 BIT(S)
A00006   EQU   IOB+00000025        8 BYTE(S)
ERPWORK  EQU   IOB+00000032        4  BYTE  POINTER
CCWWORK  EQU   00000000            48 BYTE(S)
REIBUF   EQU   00000000            80 BYTE(S)
REIDCB   EQU   00000000            72 BYTE(S)
A00020   EQU   REIDCB+00000000     44 BYTE(S)
RDCB44   EQU   REIDCB+00000044     4  BYTE  POINTER
RDCB44C  EQU   REIDCB+00000044     1 BYTE(S)
PRINTSAV EQU   @DATA+00000072      120 BYTE(S)
         ORG   @DATA+00000192
MSGPTR   EQU   *                   FULLWORD POINTER
         DC    VL4(IFDMSG56)
A00021   EQU   00000000            20 BYTE(S) ON WORD
IFD169   EQU   A00021+00000000     FULLWORD POINTER
IFD121   EQU   A00021+00000004     FULLWORD POINTER
IFD167   EQU   A00021+00000008     FULLWORD POINTER
IFDXXX   EQU   A00021+00000012     FULLWORD POINTER
IFD137   EQU   A00021+00000016     FULLWORD POINTER
A00022   EQU   00000000            14 BYTE(S) ON WORD
A00023   EQU   A00022+00000000     12 BYTE(S)
MID      EQU   A00022+00000012     2 BYTE(S)
WKWDID   EQU   @DATA+00000196      4 BYTE(S) ON WORD
A00024   EQU   WKWDID+00000000     2 BYTE(S)
DUMID    EQU   WKWDID+00000002     2 BYTE(S)
CSWSNSMS EQU   00000000            35 BYTE(S)
A00026   EQU   CSWSNSMS+00000000   4 BYTE(S)
A00027   EQU   CSWSNSMS+00000004   14 BYTE(S)
MSGCSW   EQU   CSWSNSMS+00000018   14 BYTE(S)
A00028   EQU   CSWSNSMS+00000032   5 BYTE(S)
MSGSNS   EQU   CSWSNSMS+00000037   2 BYTE(S)
INBUF    EQU   @DATA+00000200      18 BYTE(S)
SNSIN    EQU   INBUF+00000000      4 BYTE(S)
CSWIN    EQU   INBUF+00000004      14 BYTE(S)
OUTBUFR  EQU   @DATA+00000218      9 BYTE(S)
SNSOUT   EQU   OUTBUFR+00000000    2 BYTE(S)
CSWOUT   EQU   OUTBUFR+00000002    7 BYTE(S)
SAVE2    EQU   @DATA+00000228      18*FULLWORD INTEGER
         ORG   @DATA+00000304
TIME2    EQU   *                   8 BYTE(S) ON DWORD
         DC    X'F0F0F0F2F0F0F0C0'
         ORG   @DATA
         DS    00000312C
@TEMPS   DS    0F
@TEMP4   DC    F'0'
CCWDIS   CCW   47,0,32,1                    * DISABLE
CNVRT    DC    B'00000000'
         DC    AL1(2)
         DC    CL2'41'
         DC    A(OUTBUFR)
         DC    A(INBUF)
         DC    AL2(9+32768)
RACTERM  IFDCOM
A00007   EQU   CESWTR+00000000     1 BYTE(S) ON WORD
RETAINAC EQU   A00007+00000000     1 BIT(S)
REMERR   EQU   A00007+00000000     1 BIT(S)
REMNOMSG EQU   A00007+00000000     1 BIT(S)
A00008   EQU   A00007+00000000     5 BIT(S)
SWTR1    EQU   CESWTR1+00000000    8 BIT(S) ON BYTE
A00009   EQU   SWTR1+00000000      5 BIT(S)
REMANS   EQU   SWTR1+00000000      1 BIT(S)
A00010   EQU   SWTR1+00000000      2 BIT(S)
A00011   EQU   CHASCT+00000000     40 BYTE(S) ON WORD
A00012   EQU   A00011+00000000     9*FULLWORD INTEGER
A00013   EQU   A00011+00000036     FULLWORD INTEGER
A00014   EQU   A00011+00000036     2 BIT(S)
RETSWT   EQU   A00011+00000036     1 BIT(S)
A00015   EQU   A00011+00000036     29 BIT(S)
RECB     EQU   REIECB+00000000     4 BYTE(S) ON WORD
A00016   EQU   RECB+00000000       2 BYTE(S)
A00017   EQU   RECB+00000002       1 BYTE(S)
A00018   EQU   RECB+00000002       7 BIT(S)
SELFPOST EQU   RECB+00000002       1 BIT(S)
A00019   EQU   RECB+00000003       1 BYTE(S)
PRINTBUF EQU   PRTBUFR+00000000    120 BYTE(S)
A00025   EQU   ROPT+00000000       8 BYTE(S) ON WORD
ROPT4    EQU   A00025+00000000     FULLWORD POINTER
ROPT8    EQU   A00025+00000004     FULLWORD POINTER
MODID    EQU   WKSVC+00000000      FULLWORD INTEGER
@DATEND  EQU   *
         END   IFDOLT56
