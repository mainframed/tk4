         TITLE 'IKJEHPRO-IBM TIME SHARING PROTECT COMMAND'
IKJEHPRO CSECT
*   VS2-3.0  SERVICE UPDATE
*0000156800-157600,161300-161800                               @ZM40068
*0000546400-548000,548800                                      @ZA02853
*0000153300-153520                                             @ZA02853
*0000004200                                                    @ZA02853
*0000004200,153500,161300                                      @ZA01485
*0000359500,359700,360200,441600,459100                        @ZA01485
*0000460800,462100-462300,784500                               @ZA01485
*0000360000,432000,439200,448000,628000                        @ZA01485
*
*A 39700                                                          Y2030
*C 004800,462400                                                  Y2030
*D 135200                                                         Y2030
*A 530100,626300-626340,954100-954200                             Y2075
*C 517100-517200,953600                                           Y2075
*D 026600-026800,135600,174600-174800,178000,180400,183600,187600 Y2075
*D 196200-196600,220400,516900-517000,517300-518200,752900-753200 Y2075
*D 792200-792500                                                  Y2075
*A 505300                                                        A46794
*    DATE LAST CHANGE MADE  04/20/75                           @ZA01485
***********************************************************************
*                                                                     *
* STATUS -- VS2 RELEASE 3 VERSION 0   SU                       @ZA01485
*                                                                     *
* FUNCTION -- THE PROTECT COMMAND IS USED TO AFFECT THE PASSWORD AND  *
*    PROTECTION ATTRIBUTES OF BOTH NEW AND OLD DATA SETS.  IT IS ALSO *
*    TO DISPLAY THE CONTENTS OF THE SECURITY COUNTER AND THE OPTIONAL *
*    SECURITY INFORMATION WHICH APPEARS WITH EACH ENTRY IN THE        *
*    PASSWORD DATA SET.  THIS COMMAND MAY BE USED BOTH TO ASSIGN AND  *
*    TO REMOVE SECURITY PROTECTION FROM A DATA SET.                   *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IKJEHPRO - MAIN ENTRY POINT OF PROGRAM, ATTACHED BY THE     *
*    TERMINAL MONITOR PROGRAM WHEN A PROTECT COMMAND IS ENTERED AT    *
*    A TERMINAL                                                       *
*                                                                     *
* INPUT -- REGISTER 1 POINTS TO THE STANDARD COMMAND PROCESSOR        *
*    PARAMETER LIST (CPPL) AS FOLLOWS-                                *
*    WORD 1 CONTAINS A POINTER TO THE COMMAND BUFFER                  *
*    WORD 2 CONTAINS A POINTER TO THE USER PROFILE TABLE              *
*    WORD 3 CONTAINS A POINTER TO THE PROTECTED STEP CONTROL BLOCK    *
*    WORD 4 CONTAINS A POINTER TO AN ENVIRONMENT CONTROL TABLE        *
*                                                                     *
* OUTPUT -- USUALLY NONE, EXCEPT APPROPRIATE ERROR MESSAGES TO        *
*    DESCRIBE ERROR CONDITIONS.  WHEN THE REQUEST IS TO LIST AN ENTRY *
*    OF THE PASSWORD DATA SET THE ACCESS COUNT, PROTECTION STATUS, AND*
*    USER INFORMATION WILL BE LISTED.                                 *
*        R15 = X'00'  NORMAL RETURN                            @ZA01485
*        R15 = X'0C'  ERROR RETURN                             @ZA01485
*
* EXTERNAL REFERENCES --                                              *
*         IKJPARS - ENTRY POINT TO PARSE ROUTINE                      *
*         IKJPUTL - ENTRY POINT TO PUTLINE ROUTINE                    *
*         IKJDFLT - ENTRY POINT TO DEFAULT SERVICE ROUTINE            *
*         IGC0009H - ENTRY POINT TO SVC 98                            *
*                                                                     *
* EXITS, NORMAL -- RETURN TO THE TERMINAL MONITOR PROGRAM             *
*                                                                     *
* EXITS, ERROR -- RETURN TO THE TERMINAL MONITOR PROGRAM              *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    COMMON - A DSECT TO MAP THE WORKAREA                             *
*                                                                     *
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             *
*                                                                     *
* NOTES --                                                            *
*    DESCRIBED IN TSO COMMAND PROCESSOR LOGIC, SY28-0652          Y2030
*                                                                     *
***********************************************************************
         EJECT
*  REGISTER EQUATES
R0       EQU   0                   GENERAL REGISTER 0
R1       EQU   1                   GENERAL REGISTER 1
R2       EQU   2                   GENERAL REGISTER 2
R3       EQU   3                   GENERAL REGISTER 3
R4       EQU   4                   GENERAL REGISTER 4
R5       EQU   5                   GENERAL REGISTER 5
R6       EQU   6                   GENERAL REGISTER 6
R7       EQU   7                   GENERAL REGISTER 7
R8       EQU   8                   GENERAL REGISTER 8
R9       EQU   9                   GENERAL REGISTER 9
R10      EQU   10                  GENERAL REGISTER 10
R11      EQU   11                  GENERAL REGISTER 11
R12      EQU   12                  GENERAL REGISTER 12
R13      EQU   13                  GENERAL REGISTER 13
R14      EQU   14                  GENERAL REGISTER 14
R15      EQU   15                  GENERAL REGISTER 15
*
*              REGISTER USEAGE
*
*  REGISTER 0  USED AS WORK REGISTER
*
*  REGISTER 1  USED AS PARAMETER REGISTER AND A WORK REGISTER
*
*  REGISTER 2  USED AS WORK REGISTER
*
*  REGISTER 3  USED IN 'EXECUTE MVC' AS POINTER TO 'TO AREA' AND AS
*              WORK REGISTER
*
*  REGISTER 4  USED IN 'EXECUTE MVC' AS POINTER TO 'FROM AREA' AND AS
*              WORK REGISTER
*
*  REGISTER 5  USED AS WORK REGISTER
*
*  REGISTER 6  USED AS WORK REGISTER
*
*  REGISTER 7  IS NOT USED
*
*  REGISTER 8  IS WORK REGISTER
*
*  REGISTER 9  IS BASE REGISTER FOR PARSE DSECT
*
*  REGISTER 10 USED AS WORK REGISTER
*
*  REGISTER 11 USED AS WORK REGISTER
*
*  REGISTER 12 IS BASE REGISTER FOR THIS PROGRAM
*
*  REGISTER 13 IS SAVEAREA AND DSECT BASE REGISTER
*
*  REGISTER 14 IS THE LINK REGISTER
*
*  REGISTER 15 IS THE BRANCH AND RETURN CODE REGISTER
*
         SPACE 2
*  ABSOLUTE EQUATES (OFFSETS AND SHORT LENGTHS)
ONE      EQU   1                   ONE
TWO      EQU   2                   TWO
F0       EQU   0                   ZERO
F1       EQU   1                   ONE
F2       EQU   2                   TWO
F4       EQU   4                   FOUR
F5       EQU   5                   FIVE
F6       EQU   6                   SIX
F7       EQU   7                   SEVEN
F8       EQU   8                   EIGHT
F12      EQU   12                  TWELVE
F16      EQU   16                  SIXTEEN
F20      EQU   20                  TWENTY
F43      EQU   43                  FORTY-THREE
L72      EQU   72                  LENGTH OF SAVEAREA
F77      EQU   77                  SEVENTY-SEVEN (USER DATA LENGTH)
*  RETURN CODE EQUATES
RC4      EQU   4                   RETURN CODE = 4
RC8      EQU   8                   RETURN CODE = 8
RC12     EQU   12                  RETURN CODE = 12
RC16     EQU   16                  RETURN CODE = 16
RC20     EQU   20                  RETURN CODE = 20
RC24     EQU   24                  RETURN CODE = 24
RC28     EQU   28                  RETURN CODE = 28
RC32     EQU   32                  RETURN CODE = 32
RC36     EQU   36                  RETURN CODE = 36
*  EQUATES FOR MESSAGE NUMBERS (FIRST LEVEL MESSAGES)
M01      EQU   1                   MESSAGE NUMBER 01
M02      EQU   2                   MESSAGE NUMBER 02
M03      EQU   3                   MESSAGE NUMBER 03
M04      EQU   4                   MESSAGE NUMBER 04
M05      EQU   5                   MESSAGE NUMBER 05
M06      EQU   6                   MESSAGE NUMBER 06
M07      EQU   7                   MESSAGE NUMBER 07
M08      EQU   8                   MESSAGE NUMBER 08
M09      EQU   9                   MESSAGE NUMBER 09
M10      EQU   10                  MESSAGE NUMBER 10
M11      EQU   11                  MESSAGE NUMBER 11
M12      EQU   12                  MESSAGE NUMBER 12
*  EQUATES FOR MESSAGE NUMBERS (SECOND LEVEL MESSAGES)
S01      EQU   1                   SECOND LEVEL MESSAGE NUMBER 01
S02      EQU   2                   SECOND LEVEL MESSAGE NUMBER 02
S03      EQU   3                   SECOND LEVEL MESSAGE NUMBER 03
S04      EQU   4                   SECOND LEVEL MESSAGE NUMBER 04
S05      EQU   5                   SECOND LEVEL MESSAGE NUMBER 05
S06      EQU   6                   SECOND LEVEL MESSAGE NUMBER 06
S07      EQU   7                   SECOND LEVEL MESSAGE NUMBER 07
S08      EQU   8                   SECOND LEVEL MESSAGE NUMBER 08
S09      EQU   9                   SECOND LEVEL MESSAGE NUMBER 09
S10      EQU   10                  SECOND LEVEL MESSAGE NUMBER 10
S11      EQU   11                  SECOND LEVEL MESSAGE NUMBER 11
S12      EQU   12                  SECOND LEVEL MESSAGE NUMBER 12
S13      EQU   13                  SECOND LEVEL MESSAGE NUMBER 13
S14      EQU   14                  SECOND LEVEL MESSAGE NUMBER 14
S15      EQU   15                  SECOND LEVEL MESSAGE NUMBER 15
*              OTHER EQUATES
SPNUM    EQU   1                   SUBPOOL NUMBER
ZERO     EQU   C'0'                CHARACTER ZERO
PROMASK  EQU   X'01'               MASK TO CHECK PROTECTION MODE BYTE
QUOTEMSK EQU   X'40'               MASK TO CHECK IF DSNAME QUOTED
MASK1    EQU   X'40'               MASK TO CHECK FOR INTERRUPT
SWON     EQU   X'FF'               MASK TURN SWITCH ON
SWOFF    EQU   X'00'               MASK TURN SWITCH OFF
PRMASK   EQU   X'10'               MASK TEST FOR PROTECTION
RDWOTPAS EQU   X'04'               MASK TEST FOR READ WITHOUT PASSWORD
SVCOPT01 EQU   X'01'               SVC 98 ENTRY OPTION - ADD
SVCOPT02 EQU   X'02'               SVC 98 ENTRY OPTION - REPLACE
SVCOPT03 EQU   X'03'               SVC 98 ENTRY OPTION - DELETE
SVCOPT04 EQU   X'04'               SVC 98 ENTRY OPTION - LIST
SVCPCDE0 EQU   X'00'               SVC 98 PROTECTION - 'DEFAULT'
SVCPCDE1 EQU   X'01'               SVC 98 PROTECTION - PWREAD PWWRITE
SVCPCDE2 EQU   X'02'               SVC 98 PROTECTION - PWREAD NOWRITE
SVCPCDE3 EQU   X'03'               SVC 98 PROTECTION - NOPWREAD PWWRITE
ENDTEST  EQU   X'FF'               END OF MESSAGE CHAIN INDICATOR
BLANK    EQU   C' '                CHARACTER BLANK
QUOTE    EQU   C''''               CHARACTER QUOTE
PERIOD   EQU   C'.'                PERIOD
ZONE     EQU   C'0'                CHARACTER CONSTANT FOR ZONE FIELD
*
         EJECT
         SAVE  (14,12)             SAVE REGISTERS OF CALLING PROGRAM
         LR    R12,R15             ENTRY POINT ADDRESS TO BASE REGISTER
         USING IKJEHPRO,R12        ESTABLISH ADDRESSABILITY FOR PROGRAM
         B     BRID                     BRANCH AROUND ID       @ZA02853
         DC    C'IKJEHPRO'              MODULE ID              @ZA02853
         DC    X'5110'                  DATE 04/20/75          @ZA01485
BRID     EQU   *                                               @ZA02853
         LR    R2,R1               SAVE REG 1 - GETMAIN USES IT
         GETMAIN R,LV=CORE,SP=SPNUM get core for workarea
*  THIS IS AN UNCONDITIONAL REQUEST FOR CORE.  IF SUFFICIENT CORE IS
*  NOT AVAILABLE THE RESULT IS ABNORMAL TERMINATION OF THIS PROGRAM.
*  THE FIRST 18 WORDS IS THE REGISTER SAVE AREA
         XC    F0(L72,R1),F0(R1)   INITIALIZE REGISTER SAVE AREA
         ST    R13,F4(R1)          SAVE ADDRESS OF CALLER'S REGISTERS
         ST    R1,F8(R13)          CHAIN SAVE AREAS
         LR    R13,R1              ADDRESS OF GETMAINED AREA   @ZM40068
         USING COMMON,R13          EST ADDRESSABILITY GETM.    @ZM40068
         MVI   RCX,X'00'           ZERO RC                     @ZA01485
*  WHEN THE TMP ATTACHES PROTECT REGISTER 1 POINTS TO A PARAMETER LIST
*  THE FORMAT OF THIS LIST IS-
*    1ST WORD POINTER TO THE COMMAND BUFFER
*    2ND WORD POINTER TO THE USER PROFILE TABLE (UPT)
*    3RD WORD POINTER TO THE PROTECTED STEP CONTROL BLOCK (PSCB)
*    4TH WORD POINTER TO THE ENVIRONMENT CONTROL TABLE (ECT)
         USING CPPL,R2             ESTABLISH ADDRESSABILITY CPPL
*  NOW INITIALIZE PARAMETERS FOR PARSE, DAIR, DEFAULT, AND PUTLINE
         LA    R5,PARSPARM         POINT TO SPACE FOR PARSE PARAMETERS
         USING PPL,R5              SET ADDRESSABILITY PARSE PARM LIST
         LA    R6,DFLTPARM         POINT TO SPACE FOR DEFAULT PARM LIST
         USING DFPL,R6             SET ADDRESSABILITY DEFAULT PARM LIST
         LA    R8,DFLTPBLK         POINT TO SPACE FOR DEFAULT PARMBLOCK
         USING DFPB,R8             SET ADDRESSABILITY DEFAULT PARMBLOCK
         LA    R9,IOPARM           POINT TO SPACE FOR I/O PARM LIST
         USING IOPL,R9             SET ADDRESSABILITY I/O PARM LIST
         L     R3,CPPLCBUF         COMMAND BUFFER ADDRESS-
         ST    R3,PPLCBUF          -TO PPL
         L     R3,CPPLUPT          UPT ADDRESS-
         ST    R3,PPLUPT           -TO PPL
         ST    R3,IOPLUPT          -TO I/O PARAMETER LIST
         ST    R3,DFPLUPT          -TO DEFAULT PARAMETER LIST
         ST    R3,UPTSAVX          SAVE UPT ADDRESS            @YL026YB
         L     R3,CPPLPSCB         PSCB ADDRESS-
         ST    R3,DFPBPSCB         -TO DEFAULT PARAMETER BLOCK
         L     R3,CPPLECT          ECT ADDRESS-
         ST    R3,PPLECT           -TO PPL
         ST    R3,IOPLECT          -TO I/O PARAMETER LIST
         ST    R3,DFPLECT          -TO DEFAULT PARAMETER LIST
         DROP  R2                  CPPL IS NO LONGER NEEDED
         LA    R3,PROCPECB         ADDRESS OF CP'S ECB-
         ST    R3,PPLECB           -TO PPL
         ST    R3,IOPLECB          -TO I/O PARAMETER LIST
         ST    R3,DFPLECB          -TO DEFAULT PARAMETER LIST
         ST    R8,DFPLDFPB         POINTER TO PARM BLOCK TO PARM LIST
         LA    R3,DSL              POINT TO DSL-DSN BUFFER-
         ST    R3,DFPBDSN          -TO DEFAULT PARAMETER LIST
         MVI   DFPBCODE,DFPB04     SET DEFAULT ENTRY CODE
         MVI   DFPBCNTL,DFPBUID    INDICATE USERID ADD TO OCCUR
         LA    R3,ANSPLACE         ADDRESS OF PARSE ANSWER PLACE
         ST    R3,PPLANS           -TO PPL
         L     R3,VPROPARM         ADDRESS OF PARSE MACROS
         ST    R3,PPLPCL           -TO PPL
*  NOW INITIALIZE WORKAREAS USED IN THIS PROGRAM
         MVC   PUT(PUTLEND-PUTL),PUTL INITIALIZE PUTLINE-
         MVC   PUTDATA(PUTDEND-PUTD),PUTD -PARMBLOCKS
         MVI   PRMPTCNT,F0         INITIALIZE PROMPT COUNT
         MVI   PROMPTSW,SWOFF      INITIALIZE PROMPT SWITCH OFF
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF
         XC    SVCPARMS(SVCNPRMS-SVCPARMS),SVCPARMS ZERO SVC PARMLIST
         SR    R2,R2               ZERO REGISTER
         ST    R2,DFPBQUAL         ZERO POINTER TO DEFAULT QUALIFIER
         ST    R2,PROCPECB         INITIALIZE CP'S ECB
         MVI   PWBLANK,BLANK       BLANK SCAN DELIMITER CHARACTER
         MVI   PWLIST,BLANK        BLANK-
         MVC   PWLIST+F1(ENDPWLST-PWLIST-F1),PWLIST -PASSWORD BUFFERS
         MVI   DSN,BLANK           BLANK-
         MVC   DSN+F1(F43),DSN     -DATA SET NAME BUFFER
         ST    R12,PPLUWA          PROGRAM ADDRESS FOR VALIDITY EXIT
* WHEN THE PARSE SERVICE ROUTINE IS ENTERED REGISTER 1 POINTS TO THE
* FOLLOWING PARAMETER LIST-
*    1ST WORD POINTER TO THE USER PROFILE TABLE
*    2ND WORD POINTER TO THE ENVIRONMENT CONTROL TABLE
*    3RD WORD POINTER TO THE COMMAND PROCESSOR'S EVENT CONTROL BLOCK
*    4TH WORD POINTER TO THE PARSE CONTROL LIST
*    5TH WORD POINTER TO THE PARSE ANSWER PLACE
*    6TH WORD POINTER TO THE COMMAND BUFFER
*    7TH WORD POINTER TO THE USER WORK AREA (VALIDITY EXIT ROUTINE)
*
*  NOW PARSE PROTECT COMMAND
         DROP  R5                  PPL NO LONGER NEEDED
         DROP  R6                  DFPL NO LONGER NEEDED
         DROP  R8                  DFPB NO LONGER NEEDED
         DROP  R9                  IOPL NO LONGER NEEDED
         LR    R1,R5               POINT TO PARSE PARAMETER LIST
         LINK  EP=IKJPARS          LINK TO PARSE
*  THE FORMAT OF THE LIST RETURNED FROM PARSE IS AS FOLLOWS-
*     1ST WORD POINTER TO DATA SET NAME (ZERO IF MISSING)
*     2ND WORD BYTE 0-1 LENGTH OF DATA SET NAME (EXCLUDING QUOTES)
*              BYTE 2   FLAGS (BIT 1 IS 1 IF DATA SET NAME QUOTED)
*              BYTE 3   RESERVED
*     3RD WORD POINTER TO MEMBER NAME (ZERO IF MISSING)
*     4TH WORD BYTE 0-1 LENGTH OF MEMBER NAME (EXCLUDING PARENTHESES)
*              BYTE 2   FLAGS
*              BYTE 3   RESERVD
*     5TH WORD POINTER TO PASSWORD (XERO IF MISSING)
*     6TH WORD BYTE 0-1 LENGTH OF PASSWORD
*              BYTE 2   FLAGS
*              BYTE 3   RESERVED
*     AN ADDITIONAL HALFWORD (NAMED PROTYPE)
*        A 1 INDICATES 'ADD' SPECIFIED OR DEFAULTED
*        A 2 INDICATES 'REPLACE' SPECIFIED
*        A 3 INDICATES 'DELETE' SPECIFIED
*        A 4 INDICATES 'LIST' SPECIFIED
*     AN ADDITIONAL HALFWORD (NAMED RDTYPE)
*        A 0 INDICATES NO READ KEYWORD SPECIFIED
*        A 1 INDICATES 'PWREAD' SPECIFIED
*        A 2 INDICATES 'NOPWREAD' SPECIFIED
*     AN ADDITIONAL HALFWORD (NAMED WRTYPE)
*        A 0 INDICATES NO WRITE KEYWORD SPECIFIED
*        A 1 INDICATES 'PWWRITE' SPECIFIED
*        A 2 INDICATES 'NOWRITE' SPECIFIED
*     AN ADDITIONAL HALFWORD (NAMED DATATYPE)
*        A 0 INDICATES NO DATA KEYWORD SPECIFIED
*        A 1 INDICATES 'DATA' SPECIFIED
*     PLUS AN ADDITIONAL TWO WORDS FOR EACH PASSWORD OR DATA FIELD
*     SPECIFIED.  THE FORMAT OF EACH OF THESE TWO WORD FIELDS IS-
*
*     1ST WORD POINTER TO THE CHARACTER STRING
*     2ND WORD BYTES 0-1 LENGTH OF THIS CHARACTER STRING
*              BYTES 2   FLAGS
*              BYTES 3   RESERVED
*
         LTR   R15,R15             TEST PARSE RETURN CODE
         BNZ   PARSEERR            GO ANALYZE PARSE ERROR
*  ESTABLISH ADDRESSABILITY FOR PARSE DSECT
         L     R9,ANSPLACE         PARSE PUT DSECT ADDRESS HERE
         USING IKJPARMD,R9         ESTABLISH ADDRESSABILITY PARSE PDL
*  NOW CHECK DATA SET NAME INFORMATION FROM PARSE
         LA    R6,PRODSN           POINT TO DSNAME PDE
         SR    R2,R2               ZERO REGISTER
         C     R2,F8(R6)           IS MEMBER NAME SPECIFIED
         BNE   MEMBRERR            ERROR, GO BUILD MESSAGE
         C     R2,F16(R6)          WAS CONTROL PASSWORD SPECIFIED
         BE    NOCNTLPW            NO, GO CHECK DSNAME
         LH    R5,F20(R6)          LENGTH OF CONTROL PASSWORD
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         LA    R3,CONTRLPW         POINT TO CONTROL PASSWORD
         ST    R3,SVCCONPW         SAVE THIS POINTER SVC PARAMETER LIST
         L     R4,F16(R6)          ADDRESS OF CONTROL PASSWORD (INPUT)
         EX    R5,MOVEINST         MOVE CONTROL PASSWORD TO BUFFER
*  NOW CHECK DATA SET NAME
NOCNTLPW LH    R5,F4(R6)           LENGTH OF DATA SET NAME
         LTR   R5,R5               IS LENGTH ZERO
         BZ    MEMBRERR            YES, ERROR
         STH   R5,DSL              LENGTH TO WORK AREA
         L     R4,F0(R6)           ADDRESS OF DSNAME (INPUT)
         LA    R3,DSN              POINT TO DSNAME BUFFER
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         EX    R5,MOVEINST         MOVE DSNAME TO WORK AREA
*  SAVE DATA SET NAME IN MESSAGE INSERTION BUFFER
SAVEDSN  LH    R5,DSL              LENGTH OF DATA SET NAME
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         LA    R3,DSNMESG          POINT TO DSNAME MESSAGE BUFFER
         LA    R4,DSN              ADDRESS OF DSNAME (WORKAREA)
         TM    F6(R6),QUOTEMSK     IS DATA SET NAME FULLY QUALIFIED
         BZ    SAVUNQUL            YES, SAVE UNQUALIFIED NAME
         MVI   F0(R3),QUOTE        MOVE QUOTE
         LA    R3,F1(R3)           POINT PAST QUOTE
         EX    R5,MOVEINST         MOVE DSNAME TO MESSAGE BUFFER
         LA    R3,F1(R5,R3)        POINT PAST DSNAME
         MVI   F0(R3),QUOTE        MOVE QUOTE
         LA    R5,F2(R5)           INCREASE LENGTH FOR QUOTES
         LA    R5,F5(R5)           1 FROM EXECUTE, 4 FOR HEADER
         STH   R5,DSNMESGL         DSNAME MESSAGE INSERTION LENGTH
*  NOW CHECK FOR FUNCTION REQUESTED
CHECKFCN LA    R5,DSN              POINT TO DSL-DSN BUFFER
         ST    R5,SVCDSL           ADDRESS OF BUFFER TO SVC PARM LIST
         LH    R5,DSL              DATA SET NAME LENGTH
         STC   R5,SVCDSL           TO SVC PARAMETER LIST
         LH    R5,PROTYPE          LOAD PROTECTION TYPE INDICATOR
         BCTR  R5,R0               DECREMENT TO ZERO ORIGIN BRANCH
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR AND-
         B     BRTABLE(R5)         -USE AS INDEX INTO BRANCH TABLE
BRTABLE  B     ADD                 ADD WAS REQUESTED
         B     REPLACE             REPLACE WAS REQUESTED
         B     DELETE              DELETE WAS REQUESTED
*  NOTE LIST MUST FOLLOW SEQUENTIALLY HERE.
*  BUILD SVC PARAMETER LIST FOR LIST REQUEST
LIST     LA    R5,LISTBUFF         POINT TO LIST BUFFER
         ST    R5,SVCOPT           ADDRESS TO SVC PARAMETER LIST
         MVI   SVCOPT,SVCOPT04     SVC ENTRY OPTION X'04' - LIST
         L     R4,LSTOLDPW         POINTER TO LIST PASSWORD
         LH    R5,LSTOLDPW+F4      PASSWORD LENGTH
MOVEPW   BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         LA    R3,CURENTPW         POINT TO CURRENT PASSWORD BUFFER
         ST    R3,SVCCURPW         ADDRESS TO SVC PARAMETER LIST
         EX    R5,MOVEINST         MOVE CURRENT PASSWORD TO BUFFER
         B     ISSUESVC            GO ISSUE SVC 98
*  BUILD SVC PARAMETER LIST FOR DELETE REQUEST
DELETE   MVI   SVCOPT,SVCOPT03     SVC ENTRY OPTION X'03' - DELETE
         L     R4,DELOLDPW         POINTER TO DELETE PASSWORD
         LH    R5,DELOLDPW+F4      PASSWORD LENGTH
         B     MOVEPW              GO MOVE OLD PASSWORD TO BUFFER
*  BUILD SVC PARAMETER LIST FOR REPLACE REQUEST
REPLACE  MVI   SVCOPT,SVCOPT02     SVC ENTRY OPTION X'02' - REPLACE
         BAL   R14,DATA            GO CHECK DATA
         BAL   R14,SECURITY        GO CHECK PROTECTION KEYWORDS
         L     R4,REPNEWPW         POINTER TO NEW PASSWORD
         LTR   R4,R4               WAS A NEW PASSWORD SPECIFIED
         BZ    USEOLDPW            NO, GO USE OLD PASSWORD
         LH    R5,REPNEWPW+F4      PASSWORD LENGTH (NEW)
         BAL   R14,MVENEWPW        GO MOVE NEW PASSWORD TO BUFFER
OLDPW    L     R4,REPOLDPW         POINTER TO OLD PSSSWORD
         LH    R5,REPOLDPW+F4      LENGTH OF OLD PASSWORD
         B     MOVEPW              GO MOVE OLD PASSWORD TO BUFFER
USEOLDPW L     R4,REPOLDPW         POINTER TO OLD PASSWORD
         LH    R5,REPOLDPW+F4      LENGTH OF OLD PASSWORD
         BAL   R14,MVENEWPW        GO MOVE 'NEW' PASSWORD TO BUFFER
         B     OLDPW               GO PROCESS OLD PASSWORD
MVENEWPW BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         LA    R3,NEWPW            POINT TO NEW PASSWORD BUFFER
         ST    R3,SVCPCODE         ADDRESS TO SVC PARAMETER LIST
         EX    R5,MOVEINST         MOVE NEW PASSWORD TO BUFFER
         SR    R5,R5               ZERO REGISTER
         IC    R5,PROCODE          GET PROTECTION CODE
         STC   R5,SVCPCODE         PROTECTION CODE TO SVC PARAMETER LST
         BR    R14                 RETURN
*  BUILD SVC PARAMETER LIST FOR ADD REQUEST
ADD      MVI   SVCOPT,SVCOPT01     SVC ENTRY OPTION X'01' - ADD
         BAL   R14,DATA            GO CHECK DATA
         BAL   R14,SECURITY        GO CHECK PROTECTION KEYWORDS
         L     R4,ADDNEWPW         POINTER TO NEW PASSWORD
         LH    R5,ADDNEWPW+F4      LENGTH OF NEW PASSWORD
         BAL   R14,MVENEWPW        GO MOVE NEW PASSWORD TO BUFFER
         B     ISSUESVC            GO ISSUE SVC 98
*  CHECK FOR DATA
DATA     L     R5,STRDATA          LOAD DATA STRING POINTER
         LTR   R5,R5               IS POINTER ZERO
         BZ    NODATA              YES, DATA NOT SPECIFIED
         ST    R5,SVCSTLTH         STRING POINTER TO SVC PARAMETER LIST
         LH    R5,STRDATA+F4       STRING LENGTH
         STC   R5,SVCSTLTH         STRING LENGTH TO SVC PARAMETER LIST
NODATA   BR    R14                 RETURN
*  CHECK PROTECTION KEYWORDS
SECURITY LH    R5,RDTYPE           LOAD READ TYPE INDICATOR
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR
         B     RDBRTAB(R5)         INDEX INTO BRANCH TABLE
RDBRTAB  B     RD0                 NO READ KEYWORD SPECIFIED
         B     RD1                 PWREAD SPECIFIED
         B     SET3                NOPWREAD SPECIFIED, CODE IS X'03'
RD0      LH    R5,WRTYPE           LOAD WRITE TYPE INDICATOR
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR
         B     WR1BRTAB(R5)        INDEX INTO BRANCH TABLE
WR1BRTAB B     SET0                NEITHER SPECIFIED, TAKE DEFAULT
         B     SET3                PWWRITE SPECIFIED
         B     SET2                NOWRITE SPECIFIED
RD1      LH    R5,WRTYPE           LOAD WRITE TYPE INDICATOR
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR
         B     WR2BRTAB(R5)        INDEX INTO BRANCH TABLE
WR2BRTAB B     SET1                NO WRITE KEYWORD SPECIFIED
         B     SET1                PWWRITE SPECIFIED
         B     SET2                NOWRITE SPECIFIED
SET0     MVI   PROCODE,SVCPCDE0    NO KEYWORDS, INDICATE DEFAULT
         BR    R14                 RETURN
SET1     MVI   PROCODE,SVCPCDE1    INDICATE PWREAD-PWWRITE
         BR    R14                 RETURN
SET2     MVI   PROCODE,SVCPCDE2    INDICATE PWREAD-NOWRITE
         BR    R14                 RETURN
SET3     MVI   PROCODE,SVCPCDE3    INDICATE NOPWREAD-NOWRITE
         BR    R14                 RETURN
QUALDSN  LA    R1,DFLTPARM         ADDRESS OF DEFAULT PARAMETERS
         LINK  EP=IKJDFLT          LINK TO DEFAULT SERVICE ROUTINE
         B     DFLTERR(R15)        ANALYZE DEFAULT RETURN CODE
DFLTERR  B     DEFLTOK             DEFAULT RETURN CODE =  0
         B     CLUPRCC             DEFAULT RETURN CODE =  4    @ZA01485
         B     DSNBIG              DEFAULT RETURN CODE =  8
         B     CLUPRCC             DEFAULT RETURN CODE = 12    @ZA01485
         B     NOTCAT              DEFAULT RETURN CODE = 16
         B     NOTCAT              DEFAULT RETURN CODE = 20
         B     CLUPRCC             DEFAULT RETURN CODE = 24    @ZA01485
         B     DEFERR              DEFAULT RETURN CODE = 28
         B     CLUPRCC             DEFAULT RETURN CODE = 32    @ZA01485
         B     NOTCAT              DEFAULT RETURN CODE = 36
*  SAVE QUALIFIED NAME IN MESSAGE INSERTION BUFFER
DEFLTOK  LH    R2,DSL              LENGTH OF FULLY QUALIFIED DSNAME
         LA    R3,DSNMESG          POINT TO MESSAGE INSERTION BUFFER
         LA    R4,DSN              POINT TO DATA SET NAME
         L     R5,UPTSAVX          ADDRESS OF UPT              @YL026YB
         USING UPT,R5              SET ADDRESSABILITY TO UPT   @YL026YB
         SR    R1,R1               CLEAR REGISTER
         IC    R1,UPTPREFL         LENGTH OF USERID            @YL026YB
         LTR   R1,R1               IS PREFIX LENGTH ZERO       @YL026YB
         BZ    NOPRFIX             NO PREFIXING                @YL026YB
         DROP  R5                  PSCB NO LONGER NEEDED
         LA    R1,F1(R1)           PLUS ONE FOR THE PERIOD
         SR    R2,R1               SUBTRACT LENGTH OF USERID
NOPRFIX  AR    R4,R1               POINT PAST USERID AND PERIOD
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION
         EX    R2,MOVEINST         MOVE DSNAME TO INSERTION BUFFER
         LA    R2,F5(R2)           1 FOR EXECUTE, 4 FOR HEADER
         STH   R2,DSNMESGL         SAVE LENGTH OF INSERTION DSNAME
         B     CHECKFCN            GO CHECK REQUESTED FUNCTION
SAVUNQUL EX    R5,MOVEINST         MOVE DSNAME TO MESSAGE BUFFER
         LA    R5,F5(R5)           1 FROM EXECUTE, 4 FOR HEADER
         STH   R5,DSNMESGL         SAVE INSERTION LENGTH
         B     QUALDSN             GO QUALIFY DATA SET NAME
*  VALIDITY CHECK ROUTINE  (CHECK LENGTH OF USER DATA)
VALDATA  SAVE  (14,12),,*          SAVE PARSE'S REGISTERS
         L     R12,F4(R1)          RESET BASE REGISTER (ADDRESSABILITY)
         L     R9,F0(R1)           ADDRESS OF PARSE DESCRIPTOR ELEMENT
         LH    R6,F4(R9)           LOAD LENGTH OF USER DATA FIELD
         CH    R6,DATALNTH         COMPARE LENGTH TO 77
         BH    DATABAD             MORE THAN 77 IS ERROR
         SR    R15,R15             SET ZERO RETURN CODE FOR PARSE
GOBACK   RETURN (14,12),T,RC=(15)  RESTORE PARSE'S REGISTERS AND RETURN
DATABAD  LA    R15,RC4             SET RETURN CODE = 4 FOR PARSE
         B     GOBACK              RETURN TO PARSE
*                                                                     *
*  THIS IS THE MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE MESSAGE CSECT
*  TO OBTAIN THE ADDRESS OF THE MESSAGE SEGMENT AND THE OFFSET AT WHICH
*  ANY INSERTIONS WILL BE MADE.
*  AT ENTRY R2 CONTAINS MESSAGE NUMBER AND R10 CONTAINS ADDRESS OF THE
*  INSERTION.  R14 IS THE RETURN REGISTER  (R10 = 0 IS NO INSERTION)
*
MSGBUILD SR    R3,R3               ZERO REGISTER
         ST    R3,OUTAREA1         SET POINTER INDICATING ONE MESSAGE
         MVI   OUTAREA1,ENDTEST    FLAG END OF MESSAGE CHAIN
         L     R1,VCONMSG          ADDRESS OF MESSAGE BRANCH TABLE
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY
         ST    R3,WORKWORD         SAVE THIS ENTRY
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE
         ST    R3,OUTPUT11         MESSAGE ADDRESS TO OUTPUT LIST
         LTR   R10,R10             IS THERE AN INSERTION
         BZ    NOINSRT1            NO, GO SET SEGMENT COUNT TO 1
         SR    R2,R2               ZERO REGISTER
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD
         ST    R10,OUTPUT12        INSERTION ADDRESS TO OUTPUT LIST
         LA    R2,TWO              2 SEGMENTS
SETCNT1  ST    R2,OUTCNT1          SET SEGMENT COUNT
         MVI   STACKSW,SWON        TURN STACK SWITCH ON
         BR    R14                 RETURN
NOINSRT1 LA    R2,ONE              ONE SEGMENT
         B     SETCNT1             GO SET SEGMENT COUNT
*
*  THIS IS THE SECOND LEVEL MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE
*  MESSAGE CSECT TO OBTAIN THE ADDRESS OF THE SECOND LEVEL MESSAGE AND
*  THE OFFSET AT WHICH ANY INSERTIONS WILL BE MADE.
*  AT ENTRY R2 CONTAINS SECOND LEVEL MESSAGE NUMBER AND R10 CONTAINS
*  ADDRESS OF THE INSERTION.  R14 IS THE RETURN REGISTER.  (R10 = 0 IS
*  NO INSERTION)
*
SMSGBLD  SR    R3,R3               ZERO REGISTER
         ST    R3,OUTAREA2         SET POINTER INDICATING LAST MESSAGE
         MVI   OUTAREA2,ENDTEST    FLAG END OF MESSAGE CHAIN
         LA    R3,OUTAREA2         POINT TO SECOND LEVEL MESSAGE CHAIN
         ST    R3,OUTAREA1         CHAIN SECOND LEVEL TO FIRST LEVEL
         L     R1,VCONSMSG         SECOND LEVEL MESSAGE BRANCH TABLE
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY
         ST    R3,WORKWORD         SAVE THIS ENTRY
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE
         ST    R3,OUTPUT21         MESSAGE ADDRESS TO OUTPUT LIST
         LTR   R10,R10             IS THERE AN INSERTION
         BZ    NOINSRT2            NO, GO SET SEGMENT COUNT TO 1
         SR    R2,R2               ZERO REGISTER
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD
         ST    R10,OUTPUT22        INSERTION ADDRESS TO OUTPUT LIST
         LA    R2,TWO              2 SEGMENTS
SETCNT2  ST    R2,OUTCNT2          SET SEGMENT COUNT
         BR    R14                 RETURN
NOINSRT2 LA    R2,ONE              ONE SEGMENT
         B     SETCNT2             GO SET SEGMENT COUNT
*  THIS ROUTINE CHECKS FOR ATTENTION INTERRUPT
TESTATTN TM    PROCPECB,MASK1      IS ECB POSTED (DID INTERRUPT OCCUR)
         BO    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485
         BR    R14                 RETURN
*  THIS ROUTINE PRINTS ERROR MESSAGES.
TPUT     BAL   R14,TESTATTN        GO CHECK FOR INTERRUPT
         LA    R1,IOPARM           POINT TO PUTLINE GENERAL PARAMETERS
         PUTLINE  PARM=PUT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),       X
               TERMPUT=(EDIT,WAIT)
         LA    R3,F4               R3 = 4
         CR    R3,R15              DID ATTENTION INTERRUPT OCCUR
         BE    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485
         CLI   PROMPTSW,SWON       IS PROMPTING REQUIRED
         BE    PWPROMPT            YES, GO PROMPT FOR CONTROL PASSWORD
         B     CLUPRCC             CLEANUP AND RETURN          @ZA01485
*  THIS ROUTINE PRINTS DATA
TPUTDATA BAL   R14,TESTATTN        GO CHECK FOR INTERRUPT
         LA    R1,IOPARM           POINT TO PUTLINE GENERAL PARAMETERS
         PUTLINE  PARM=PUTDATA,OUTPUT=(OUTBUFF,SINGLE,DATA),MF=(E,(1)),X
               TERMPUT=(EDIT,WAIT)
         LA    R3,F4               R3 = 4
         CR    R3,R15              DID ATTENTION INTERRUPT OCCUR
         BE    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485
         BR    R2                  RETURN
SVCOK    CLI   SVCOPT,SVCOPT04     WAS THIS A LIST REQUEST
         BE    LISTPROC            YES, GO PROCESS BUFFER
CLEANUP  EQU   *                   CLEAN UP AND RETURN
*  ZERO ALL PASSWORD FIELDS BEFORE FREEING CORE.
         XC    PWLIST(ENDPWLST-PWLIST),PWLIST ZERO PASSWORD LIST
         XC    LISTBUFF(ENDLSTBF-LISTBUFF),LISTBUFF ZERO LIST BUFFER
         XC    PWMSG(PWBLANK-PWMSG),PWMSG ZERO PASSWORD MESSAGE BUFFER
*  NOW CHECK IF AN ERROR HAS OCCURRED.  IF SO, THE STACK MUST BE
*  FLUSHED AND THE INPUT QUEUE CLEARED.
         CLI   STACKSW,SWON        IS STACK SWITCH ON
         BNE   STACKOK             NO ERROR, END NORMALLY
         LA    R1,IOPARM           POINT TO I/O PARAMETER LIST
         LA    R2,STACKPRM         POINT TO STACK PARM BLOCK
         ST    R2,IOPLIOPB-IOPL(R1) PARM BLOCK ADDRESS TO PARM LIST
         STACK DELETE=ALL,MF=(E,(1)) FLUSH STACK
         TCLEARQ INPUT             CLEAR ANYTHING TYPED AHEAD
STACKOK  EQU   *                   NORMAL RETURN FROM HERE
         L     R13,F4(R13)         SET REG 13 TO CALLER'S REGISTERS
         SR    R15,R15             CLEAR R15                   @ZA01485
         IC    R15,RCX             SET RETURN CODE             @ZA01485
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN
CLUPRCC  EQU   *                                               @ZA01485
         MVI   RCX,R12             SET BAD RC                  @ZA01485
         B     CLEANUP                                         @ZA01485
LISTPROC LH    R2,PROUSECT         LOAD ACCESS (USE) COUNT        Y2030
         SLL   R2,F16              SHIFT OUT POSSIBLE-
         SRL   R2,F16              -NEGATIVE SIGN
         CVD   R2,UNPACK           CONVERT TO PACKED DECIMAL FORMAT
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN
         LH    R2,DSNMESGL         LENGTH OF DSNAME + HEADER
         LR    R5,R2               -TO REG 5
         SH    R5,FIVE             LESS 4 FOR HEADER AND 1 FOR EXECUTE
         LA    R3,OUTBUFFR         POINT TO DATA BUFFER
         LA    R4,DSNMESG          POINT TO DSNAME
         EX    R5,MOVEINST         MOVE DSNAME TO DATA BUFFER
         LA    R3,F1(R5,R3)        POINT PAST DSNAME
         MVC   F0(L'BLANKS,R3),BLANKS MOVE IN BLANK CHARACTERS
         LA    R3,L'BLANKS(R3)     POINT PAST BLANKS
         LA    R2,L'BLANKS(R2)     BUMP LENGTH OF DATA BUFFER
*  SUPPRESS LEADING ZEROES IN USE COUNT
         LA    R4,COUNT            POINT TO COUNT BUFFER
         LA    R5,F7               R5 = 7
SUPZERO  CLI   F0(R4),ZERO         IS THIS A LEADING ZERO
         BNE   NONZERO             NO, GO MOVE USE COUNT
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT
         BCT   R5,SUPZERO          CHECK NEXT DIGIT
NONZERO  LA    R5,ENDCOUNT         POINT PAST COUNT FIELD
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN REG5
         AR    R2,R5               BUMP LENGTH OF DATA BUFFER
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         EX    R5,MOVEINST         MOVE IN USE COUNT
         LA    R3,F1(R5,R3)        POINT PAST USE COUNT
         MVC   F0(L'BLANKS,R3),BLANKS MOVE IN BLANK CHARACTERS
         LA    R3,L'BLANKS(R3)     POINT PAST BLANKS
         LA    R2,L'BLANKS(R2)     BUMP LENGTH OF DATA BUFFER
*  NOW DETERMINE PROTECTION TYPE
         MVC   LOCLIST(CLSTLNTH),CLISTS INITIALIZE LOCATE AND OBTAIN
         LA    R4,DSN              DSNAME ADDRESS-
         ST    R4,LOCDSN           -TO LOCATE LIST
         ST    R4,OBTNDSN          -TO OBTAIN LIST
         LA    R4,VNUM             VNUM ADDRESS-
         ST    R4,OBTNVNUM         -TO OBTAIN LIST
         LA    R4,WORKAREA         WORKAREA ADDRESS-
         ST    R4,LOCAREA          -TO LOCATE LIST
         ST    R4,OBTNAREA         -TO OBTAIN LIST
         LOCATE LOCLIST            ISSUE LOCATE
         LTR   R15,R15             TEST LOCATE RETURN CODE
         BNZ   UNPRO               PROTECTION NOT AVAILABLE
         MVC   VNUM(F6),VOLNUM     MOVE VOLUME SERIAL NUMBER
         OBTAIN OBTNLIST           ISSUE OBTAIN
         LTR   R15,R15             TEST OBTAIN RETURN CODE
         BNZ   UNPRO               PROTECTION NOT AVAILABLE
         USING DS1FMTID,R4         ADDRESSABILITY FORMAT 1 DSCB
         TM    DS1DSIND,PRMASK     IS DATA SET PROTECTED
         BNO   NOPRO               NOT PROTECTED
         TM    DS1DSIND,RDWOTPAS   IS IT READ WITHOUT PASSWORD
         BO    RDWOTPRO            YES, READ WITHOUT PASSWORD
         DROP  R4                  DSCB NO LONGER NEEDED
         TM    PROMODE,PROMASK     TEST PROTECTION MODE BYTE
         BO    RDWRTPRO            ON INDICATES READ/WRITE PROTECTION
         LA    R4,READONLY         POINT TO PROTECTION TYPE
         LA    R5,L'READONLY       LENGTH OF PROTECTION TYPE
MOVEPRO  AR    R2,R5               BUMP LENGTH OF DATA BUFFER
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION
         EX    R5,MOVEINST         MOVE PROTECTION TYPE TO DATA BUFFER
         STH   R2,OUTBUFF          LENGTH OF DATA BUFFER
         XC    OUTBUFFO(F2),OUTBUFFO ZERO INSERTION OFFSET
         BAL   R2,TPUTDATA         GO PRINT DATA
*  CHECK IF USER DATA FIELD IS BLANK
         LA    R2,F77              LENGTH OF USER DATA FIELD
         LA    R3,PUSRDATA         POINT TO USER DATA
CHCKDATA CLI   F0(R3),BLANK        IS THIS A BLANK
         BNE   DATAOK              VALID DATA, GO PRINT IT
         LA    R3,F1(R3)           POINT TO NEXT CHARACTER
         BCT   R2,CHCKDATA         IF MORE CHARACTERS GO CHECK THEM
*  USER DATA FIELD IS BLANK ISSUE MESSAGE
         LA    R2,M09              MESSAGE NUMBER 9
         SR    R10,R10             NO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF         A46794
         B     TPUT                GO PRINT MESSAGE
RDWRTPRO LA    R4,READWRIT         POINT TO PROTECTION TYPE
         LA    R5,L'READWRIT       LENGTH OF PROTECTION TYPE
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER
UNPRO    LA    R4,NOTAVAIL         POINT TO PROTECTION TYPE
         LA    R5,L'NOTAVAIL       LENGTH OF PROTECTION TYPE
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER
NOPRO    LA    R4,NOTPROT          POINT TO PROTECTION TYPE
         LA    R5,L'NOTPROT        LENGTH OF PROTECTION TYPE
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER
RDWOTPRO LA    R4,RDWOPASS         POINT TO PROTECTION TYPE
         LA    R5,L'RDWOPASS       LENGTH OF PROTECTION TYPE
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER
*  USER DATA FIELD IS NOT BLANK PRINT IT
DATAOK   LA    R2,F77              LENGTH OF USER DATA FIELD
         BCTR  R2,R0               DECREMENT FOR EXECUTE
         LA    R3,OUTBUFFR         POINT TO DATA BUFFER
         LA    R4,PUSRDATA         POINT TO USER DATA
         EX    R2,MOVEINST         MOVE USER DATA TO DATA BUFFER
         LA    R2,F5(R2)           1 FROM EXECUTE, 4 FOR HEADER
         STH   R2,OUTBUFF          LENGTH OF DATA BUFFER
         XC    OUTBUFFO(F2),OUTBUFFO ZERO INSERTION OFFSET
         BAL   R2,TPUTDATA         GO PRINT DATA
         B     CLEANUP             GO CLEANUP AND RETURN
*  ISSUE THE PROTECT SVC                                          Y2075
ISSUESVC EQU   *                                                  Y2075
SVC98    LA    R1,SVCPARMS         POINT TO SVC PARAMETER LIST
         PROTECT (1)               ISSUE PROTECT SVC
         B     SVCRCTAB(R15)       ANALYZE SVC RETURN CODE
SVCRCTAB B     SVCOK               SVC RETURN CODE =  0
         B     PWEXISTS            SVC RETURN CODE =  4
         B     PWNTFND             SVC RETURN CODE =  8
         B     PWCNTRL             SVC RETURN CODE = 12
         B     LOGICERR            SVC RETURN CODE = 16
         B     MPDSERR             SVC RETURN CODE = 20
         B     MPDSFULL            SVC RETURN CODE = 24
         B     LOGICERR            SVC RETURN CODE = 28
         B     LOCFAIL             SVC RETURN CODE = 32
         B     OBTNFAIL            SVC RETURN CODE = 36
         B     NOTFLAG             SVC RETURN CODE = 40
         B     NOMPDS              SVC RETURN CODE = 44
         B     NOTTAPE             SVC RETURN CODE = 48
         B     INUSE               SVC RETURN CODE = 52
         B     VSAM                SVC RETURN CODE = 56           Y2075
SCANPW   SR    R1,R1               CLEAR REGISTER
         LA    R3,PWMSG            ADDRESS OF PASSWORD TO BE SCANNED
BLANKTST CLI   F0(R3),BLANK        IS THIS CHARACTER A BLANK
         BE    F0(R14)             BLANK FOUND, RETURN, LENGTH IN R1
         LA    R3,F1(R3)           POINT TO NEXT CHARACTER
         LA    R1,F1(R1)           BUMP LENGTH COUNT
         B     BLANKTST            GO CHECK NEXT CHARACTER
BLDMSG01 LA    R2,M01              MESSAGE NUMBER 1
         B     MSGINSRT            GO GET INSERTION
BLDMSG03 LA    R2,M03              MESSAGE NUMBER 3
MSGINSRT LA    R10,DSNMESGL        POINT TO DSNAME INSERTION
MESGBLD  BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BR    R8                  RETURN FOR SECOND LEVEL MESSAGE
BLDMSG04 LA    R2,M04              MESSAGE NUMBER 4
         B     MSGINSRT            GO GET INSERTION AND BUILD MESSAGE
PWINSERT MVC   PWMSG(F8),CURENTPW  MOVE PASSWORD TO INSERTION BUFFER
*  THIS SECTION INSURES THAT PASSWORD IS NOT
*  PUT INTO MESSAGES. THE PWMSGL FIELD IS SET TO ZERO.
PWLENGTH SR    R1,R1               ZERO REG.                  @ZA02853
         STH   R1,PWMSGL           ZERO INSERTION LENGTH      @ZA02853
         BR    R2                  RETURN                     @ZA02853
PWCNTRL  CLI   CONTRLPW,BLANK      WAS CONTROL PASSWORD SPECIFIED
         BE    PWPROMPT            NO, GO PROMPT FOR CONTROL PASSWORD
*  CONTROL PASSWORD SPECIFIED WAS INCORRECT.  ISSUE ERROR MESSAGE, THEN
*  PROMPT FOR NEW CONTROL PASSWORD.
         MVC   PWMSG(F8),CONTRLPW  PASSWORD TO MESSAGE BUFFER
         BAL   R2,PWLENGTH         GO CALCULATE LENGTH OF PASSWORD
         MVI   PROMPTSW,SWON       TURN ON PROMPT SWITCH
         LA    R2,M10              MESSAGE NUMBER 10
         B     SETINSRT            GO BUILD AND ISSUE MESSAGE
*  THE CONTROL PASSWORD IS REQUIRED TO AUTHORIZE THE REQUESTED CHANGE *
*  TO THE PASSWORD DATA SET.  THIS ROUTINE USES PARSE SERVICE ROUTINE *
*  TO PROMPT FOR CONTROL PASSWORD.                                    *
PWPROMPT SR    R2,R2               CLEAR REGISTER
         MVI   PROMPTSW,SWOFF      TURN OFF PROMPT SWITCH
         IC    R2,PRMPTCNT         PROMPT COUNT
         LA    R2,F1(R2)           BUMP PROMPT COUNT
         STC   R2,PRMPTCNT         SAVE PROMPT COUNT
         CLI   PRMPTCNT,TWO        COMPARE PROMPT COUNT TO TWO
         BH    TWOPRMPT            MORE THAN TWO PROMPTS IS ERROR
*  NOW BUILD BUFFER (BLANK) TO PASS TO PARSE
         LA    R2,F6               R2 = 6
         STH   R2,PRMPTBFL         PROMPT BUFFER LENGTH
         SR    R2,R2               ZERO REGISTER
         STH   R2,PRMPTBFO         PROMPT BUFFER OFFSET
         MVC   PRMPTBUF,BLANKS     BLANK PROMPT BUFFER
*  NOW BUILD PARSE PARAMETER LIST.
         ST    R2,ANSPLACE         ZERO WORD, PARSE ANSWER PLACE
         LA    R1,PARSPARM         POINT TO PARSE PARAMETER AREA
         USING PPL,R1              ESTABLISH ADDRESSABILITY PPL
         LA    R2,PRMPTBFL         PROMPT BUFFER ADDRESS-
         ST    R2,PPLCBUF          -TO PARSE PARAMETER LIST
         L     R2,VPSWPARM         ADDRESS OF PARSE MACROS-
         ST    R2,PPLPCL           -TO PARSE PARAMETER LIST
         DROP  R1                  PPL NO LONGER NEEDED
         LINK  EP=IKJPARS          USE PARSE TO PROMPT FOR PASSWORD
*  THE FORMAT OF THE LIST RETURNED FROM PARSE IS AS FOLLOWS-
*     1ST WORD POINTER TO THE CHARACTER STRING
*     2ND WORD BYTE 0-1 LENGTH OF THIS CHARACTER STRING
*              BYTE 2   FLAGS
*              BYTE 3   RESERVED
         LTR   R15,R15             TEST RETURN CODE
         BNZ   PARSEERR            GO ANALYZE PARSE ERROR
         L     R9,ANSPLACE         PARSE PUT DSECT ADDRESS HERE
         USING IKJPWPRM,R9         ESTABLISH ADDRESSABILITY PARSE PDL
         L     R4,CNTRLPW          POINTER TO CONTROL PASSWORD
         LH    R2,CNTRLPW+F4       LENGTH OF CONTROL PASSWORD
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION
         LA    R3,CONTRLPW         CONTROL PASSWORD BUFFER
         MVI   F0(R3),BLANK        BLANK FIRST CHARACTER
         MVC   F1(F7,R3),F0(R3)    BLANK CONTROL PASSWORD BUFFER
         ST    R3,SVCCONPW         SAVE POINTER TO CONTROL PASSWORD
         EX    R2,MOVEINST         MOVE CONTROL PASSWORD TO BUFFER
         B     SVC98               GO ISSUE SVC 98
*  THE FOLLOWING ROUTINES INITIALIZE REGISTER 2 TO CONTAIN
*  MESSAGE NUMBER AND REGISTER 10 TO POINT TO MESSAGE INSERTION
PWEXISTS MVC   PWMSG(F8),NEWPW     MOVE PASSWORD TO INSERTION BUFFER
         BAL   R2,PWLENGTH         GO CALCULATE LENGTH OF PASSWORD
         LA    R2,M06              MESSAGE NUMBER 6
SETINSRT LA    R10,PWMSGL          POINT TO PASSWORD INSERTION
BLDMESG  BAL   R14,MSGBUILD        GO BUILD MESSAGE
         B     TPUT                GO WRITE MESSAGE
PWNTFND  BAL   R2,PWINSERT         GO BUILD PASSWORD INSERTION
         LA    R2,M07              MESSAGE NUMBER 7
         B     SETINSRT            GO PREPARE AND WRITE MESSAGE
MEMBRERR LA    R2,M08              MESSAGE NUMBER 8
NOINSERT SR    R10,R10             NO INSERTION
         B     BLDMESG             GO BUILD AND WRITE MESSAGE
NOMPDS   BAL   R8,BLDMSG01         GO BUILD MESSAGE
         LA    R2,S01              SECOND LEVEL MESSAGE NUMBER 1
BLDSMESG SR    R10,R10             NO INSERTION
SMESGBLD BAL   R14,SMSGBLD         GO BUILD SECOND LEVEL MESSAGE
         B     TPUT                GO WRITE MESSAGE
MPDSFULL BAL   R8,BLDMSG01         GO BUILD MESSAGE
         LA    R2,S02              SECOND LEVEL MESSAGE 2
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
MPDSERR  BAL   R8,BLDMSG01         GO BUILD MESSAGE
         LA    R2,S03              SECOND LEVEL MESSAGE 3
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
NOTTAPE  BAL   R8,BLDMSG04         GO BUILD MESSAGE
         LA    R2,S14              SECOND LEVEL MESSAGE 14
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
NOTFLAG  BAL   R8,BLDMSG04         GO BUILD MESSAGE
         LA    R2,S15              SECOND LEVEL MESSAGE 15
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
LOCFAIL  BAL   R8,BLDMSG04         GO BUILD MESSAGE
         LA    R2,S11              SECOND LEVEL MESSAGE 11
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
OBTNFAIL STC   R1,RC               SAVE OBTAIN RETURN CODE
         BAL   R8,BLDMSG04         GO BUILD MESSAGE
         CLI   RC,RC4              IS RETURN CODE = 4
         BE    VOLNTMTD            YES, VOLUME NOT MOUNTED
         LA    R2,S12              SECOND LEVEL MESSAGE 12
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
VOLNTMTD LA    R2,S13              SECOND LEVEL MESSAGE 13
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
INUSE    BAL   R8,BLDMSG04         GO BUILD MESSAGE
         LA    R2,S06              SECOND LEVEL MESSAGE 6
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE
VSAM     BAL   R8,BLDMSG04         GO BUILD MESSAGE               Y2075
         LA    R2,S09              SECOND LEVEL MESSAGE 9         Y2075
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE     Y2075
PARSEERR STC   R15,RC              SAVE PARSE RETURN CODE
         MVI   STACKSW,SWON        TURN STACK SWITCH ON
         CLI   RC,RC8              DID ATTENTION INTERRUPT OCCUR
         BNH   CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485
         CLI   RC,RC16             PARSE RETURN CODE = 16
         BE    NOSPACE             YES, NO CORE
         BAL   R8,MESG12           GO BUILD MESSAGE
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION
         LA    R2,S05              SECOND LEVEL MESSAGE NUMBER 5
         B     SMESGBLD            GO BUILD AND WRITE MESSAGE
NOSPACE  LA    R2,M02              MESSAGE NUMBER 2
         B     NOINSERT            GO BUILD AND WRITE MESSAGE
MESG12   LA    R2,M12              MESSAGE NUMBER 12
         SR    R10,R10             NO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BR    R8                  RETURN
NOTCAT   BAL   R8,BLDMSG03         GO BUILD MESSAGE
         B     TPUT                GO WRITE MESSAGE
LOGICERR BAL   R8,MESG12           GO BUILD MESSAGE
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION
         LA    R2,S10              SECOND LEVEL MESSAGE NUMBER 10
         B     SMESGBLD            GO BUILD AND WRITE MESSAGE
DEFERR   BAL   R8,MESG12           GO BUILD MESSAGE
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION
         LA    R2,S04              SECOND LEVEL MESSAGE 4
         B     SMESGBLD            GO BUILD AND WRITE MESSAGE
DSNBIG   L     R4,UPTSAVX          UPT ADDRESS                 @YL026YB
         LA    R3,DSNMESG          DSNAME INSERTION BUFFER
         SR    R2,R2               CLEAR REGISTER
         IC    R2,UPTPREFL-UPT(R4) LENGTH OF USERID            @YL026YB
         LTR   R2,R2               CHECK PREFIX LENGTH FOR ZERO
         BZ    NOPREFX             NO PREFIXING                @YL026YB
         LA    R4,UPTPREFX-UPT(R4) ADDRESS OF USERID           @YL026YB
         EX    R2,MOVEINST         USERID TO DSNAME BUFFER
*  THIS MOVED ONE EXTRA BYTE WHICH WILL NOW BE OVERLAID WITH A PERIOD
         AR    R3,R2               POINT PAST USERID
         MVI   F0(R3),PERIOD       MOVE IN PERIOD
         LA    R3,F1(R3)           POINT PAST PERIOD
NOPREFX  LA    R4,DSN              ADDRESS OF DATA SET NAME
         LH    R5,DSL              LENGTH OF DATA SET NAME
         AR    R2,R5               PLUS LENGTH OF USERID
         LA    R2,F5(R2)           ONE FOR PERIOD, FOUR FOR HEADER
         BCTR  R5,R0               DECREMENT FOR EXECUTE
         EX    R5,MOVEINST         MOVE DATA SET NAME TO USERID
         STH   R2,DSNMESGL         SAVE TOTAL LENGTH
         LA    R2,M11              MESSAGE NUMBER 11
         LA    R10,DSNMESGL        POINT TO INSERTION
         B     BLDMESG             GO BUILD AND WRITE MESSAGE
TWOPRMPT LA    R2,M05              MESSAGE NUMBER 5
         B     NOINSERT            GO BUILD AND WRITE MESSAGE
*  CONVERT RETURN CODE, SUPPRESS LEADING ZEROS AND MOVE TO INSERTION
*  BUFFER.  INPUT - R15 CONTAINS RETURN CODE TO BE CONVERTED
*           OUTPUT - R10 POINTS TO INSERTION BUFFER
*  R2 IS THE RETURN REGISTER
CONVRTRC CVD   R15,UNPACK          CONVERT TO PACKED DECIMAL FORMAT
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN
*  SUPPRESS LEADING ZEROS IN RETURN CODE
         LA    R4,COUNT            POINT TO COUNT BUFFER
         LA    R5,F7               R5 = 7
SUPPZERO CLI   F0(R4),ZERO         IS THIS LEADING ZERO
         BNE   NOTZERO             NO, GO MOVE RETURN CODE
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT
         BCT   R5,SUPPZERO         GO CHECK NEXT DIGIT
NOTZERO  LA    R5,ENDCOUNT         POINT PAST COUNT BUFFER
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN R5
         BCTR  R5,R0               DECREMENT FOR EXECUTE
         LA    R3,RCMESG           POINT TO RETURN CODE BUFFER
         EX    R5,MOVEINST         MOVE RETURN CODE TO INSERTION BUFFER
         LA    R5,F5(R5)           4 FOR HEADER AND 1 FOR EXECUTE
         STH   R5,RCMESGL          LENGTH OF RETURN CODE INSERTION
         LA    R10,RCMESGL         POINT TO INSERTION BUFFER
         BR    R2                  RETURN
         EJECT
*  CONSTANTS USED IN THIS PROGRAM
VCONMSG  DC    V(IKJEHMSG)         ENTRY MESSAGE CSECT 1ST LEVEL
VCONSMSG DC    V(IKJEHSMG)         ENTRY MESSAGE CSECT 2ND LEVEL
VPROPARM DC    V(IKJEHPCD)         PARSE PARAMETERS PROTECT COMMAND
VPSWPARM DC    V(IKJEHPWP)         PARSE PARAMETERS PASSWORD PROMPTING
PUTL     PUTLINE MF=L              LIST FORM OF PUTLINE MACRO
PUTLEND  EQU   *                   END OF PUTLINE MACRO
PUTD     PUTLINE MF=L              LIST FORM OF PUTLINE MACRO
PUTDEND  EQU   *                   END OF PUTLINE MACRO
*  KEEP LOCATE AND OBTAIN LISTS TOGETHER, MOVED BY ONE INSTRUCTION
CLISTS   CAMLST NAME,0,,0          LOCATE CAMLST
         CAMLST SEARCH,0,0,0       OBTAIN CAMLST
CLSTLNTH EQU   *-CLISTS            LENGTH OF CAMLSTS
DATALNTH DC    H'77'               MAXIMUM LENGTH OF USER DATA
FIVE     DC    H'5'                FIVE
MOVEINST MVC   F0(F0,R3),F0(R4)    MOVE INSTRUCTION
BLANKS   DC    C'  '               BLANKS FOR MESSAGE SPACING
READWRIT DC    C'READ/WRITE'       READ/WRITE PROTECTION
READONLY DC    C'READ ONLY'        READ ONLY PROTECTION
NOTPROT  DC    C'NOT PROTECTED'    NOT PROTECTED
RDWOPASS DC    C'READ W/O PASSWORD' READ WITHOUT PASSWORD PROTECTION
NOTAVAIL DC    C'PROTECTION NOT AVAILABLE' DSCB NOT AVAILABLE
         EJECT
*                                                                     *
*              PARSE MACROS FOR PROTECT COMMAND                       *
*                                                                     *
         DS    0F
IKJEHPCD IKJPARM
PRODSN   IKJPOSIT   DSNAME,PROMPT='DATA SET NAME',HELP=('NAME OF DATA SX
               ET TO BE PROTECTED')
PROTYPE  IKJKEYWD   DEFAULT='ADD'
         IKJNAME    'ADD',SUBFLD=ADDFIELD
         IKJNAME    'REPLACE',SUBFLD=REPFIELD
         IKJNAME    'DELETE',SUBFLD=DELFIELD
         IKJNAME    'LIST',SUBFLD=LSTFIELD
RDTYPE   IKJKEYWD
         IKJNAME    'PWREAD'
         IKJNAME    'NOPWREAD'
WRTYPE   IKJKEYWD
         IKJNAME    'PWWRITE'
         IKJNAME    'NOWRITE'
DATATYPE IKJKEYWD
         IKJNAME    'DATA',SUBFLD=STRFIELD
ADDFIELD IKJSUBF
ADDNEWPW IKJIDENT   'PASSWORD',MAXLNTH=8,OTHER=ALPHANUM,PROMPT='NEW PASX
               SWORD',HELP=('PASSWORD OF ENTRY TO BE ADDED'),FIRST=ALPHX
               ANUM                                              A42336
REPFIELD IKJSUBF
REPOLDPW IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X
               CURRENT PASSWORD',HELP=('PASSWORD OF ENTRY TO BE REPLACEX
               D'),FIRST=ALPHANUM                                A42336
REPNEWPW IKJIDENT   'NEW PASSWORD',MAXLNTH=8,OTHER=ALPHANUM,FIRST=ALPHAX
               NUM                                               A42336
DELFIELD IKJSUBF
DELOLDPW IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X
               CURRENT PASSWORD',HELP=('PASSWORD OF ENTRY TO BE DELETEDX
               '),FIRST=ALPHANUM                                 A42336
LSTFIELD IKJSUBF
LSTOLDPW IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X
               CURRENT PASSWORD',HELP=('PASSWORD OF ENTRY TO BE LISTED'X
               ),FIRST=ALPHANUM                                  A42336
STRFIELD IKJSUBF
STRDATA  IKJPOSIT  QSTRING,PROMPT='DATA',HELP=('UP TO 77 BYTES OF CHARAX
               CTER INFORMATION IN QUOTES'),VALIDCK=VALDATA
         IKJENDP
         EJECT
*
*        PARSE MACROS FOR PASSWORD PROMPTING
*
IKJEHPWP IKJPARM    DSECT=IKJPWPRM
CNTRLPW  IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X
               CONTROL PASSWORD',HELP=('PASSWORD OF CONTROL (FIRST) ENTX
               RY FOR THIS DATA SET'),FIRST=ALPHANUM             A42336
         IKJENDP
*                                                                     *
*              END OF PARSE MACROS                                    *
*                                                                     *
         EJECT
*  MAPPING MACROS
         IKJCPPL
         IKJPPL
LPPL     EQU   *-PPL               LENGTH OF PPL
         IKJDFPL
LDFPL    EQU   *-DFPL              LENGTH OF DFPL
         IKJDFPB
LDFPB    EQU   *-DFPB              LENGTH OF DFPB
         IKJPSCB                                               @YL026YB
         IKJUPT                                                @YL026YB
         IKJIOPL
LIOPL    EQU   *-IOPL              LENGTH OF IOPL
         IKJSTPB
LSTPB    EQU   *-STPB              LENGTH OF STPB
         IECSDSL1 1
         EJECT
*              GETMAIN COMMON AREA
*
COMMON   DSECT
SAVEAREA DS    18F                 REGISTER SAVE AREA
UNPACK   DS    D                   WORK AREA FOR CVD
COUNT    DS    D                   WORK AREA FOR UNPACK
         ORG   COUNT+F7            BACK TO LAST BYTE OF COUNT FIELD
SIGNBYTE DS    CL1                 LABEL THE SIGN BYTE
         ORG
ENDCOUNT EQU   *                   END OF COUNT FIELD
         DS    0D                  ALIGN DOUBLE WORD BOUNDARY
WORKAREA DS    350C                WORKAREA FOR LOCATE AND OBTAIN
         ORG   WORKAREA+F6         SUCCESSFUL LOCATE PUTS-
VOLNUM   DS    6C                  -VOLUME NUMBER HERE
         ORG
         DS    0F                  ALIGN SVC PARAMETER LIST
SVCPARMS EQU   *                   SVC 98 PARAMETER LIST
SVCOPT   DS    CL1                 SVC 98 ENTRY CODE
         DS    CL3                 SVC 98 UNUSED (RESERVED)
SVCDSL   DS    CL1                 SVC 98 DATA SET LENGTH
SVCDSN   DS    CL3                 SVC 98 POINTER TO DATA SET NAME
SVCCURPW DS    F                   SVC 98 POINTER TO CURRENT PASSWORD
SVCCONPW DS    F                   SVC 98 POINTER TO CONTROL PASSWORD
SVCVOLS  DS    CL1                 SVC 98 NUMBER OF VOLUMES
SVCVLIST DS    CL3                 SVC 98 POINTER TO VOLUME LIST
SVCPCODE DS    CL1                 SVC 98 PROTECTION CODE
SVCNEWPW DS    CL3                 SVC 98 POINTER TO NEW PASSWORD
SVCSTLTH DS    CL1                 SVC 98 STRING LENGTH
SVCSTRNG DS    CL3                 SVC 98 POINTER TO STRING
SVCNPRMS EQU   *                   SVC 98 END OF PARAMETER LIST
         DS    0F                  ALIGN PASSWORD LIST
PWLIST   EQU   *                   PASSWORD LIST
CURENTPW DS    2F                  CURRENT PASSWORD
CONTRLPW DS    2F                  CONTROL PASSWORD
NEWPW    DS    2F                  NEW PASSWORD
ENDPWLST EQU   *                   END OF PASSWORD LIST
LISTBUFF EQU   *                   LIST BUFFER
PROUSECT DS    CL2                 PROTECTION USE COUNT
PROMODE  DS    CL1                 PROTECTION MODE BYTE
PUSRDATA DS    CL77                USER DATA
ENDLSTBF EQU   *                   END OF LIST BUFFER
DSL      DS    CL2                 DATA SET LENGTH
DSN      DS    CL44                DATA SET NAME
PROCODE  DS    CL1                 PROTECTION CODE SAVED HERE
VNUM     DS    CL6                 VOLUME NUMBER
RCX      DS    CL1                 RC SAVE AREA                @ZA01485
PROCPECB DS    F                   PROTECT'S ECB
ANSPLACE DS    F                   PARSE RETURNS PDL ADDRESS HERE
         DS    0F                  ALIGN WORD BOUNDRY
IOPARM   DS    (LIOPL)X            I/O PARAMETER LIST
         DS    0F                  ALIGN WORD BOUNDRY
STACKPRM DS    (LSTPB)X            SPACE FOR STACK PARM BLOCK
         DS    0F                  ALIGN WORD BOUNDRY
DFLTPARM DS    (LDFPL)X            DEFAULT PARAMETER LIST
         DS    0F                  ALIGN WORD BOUNDRY
DFLTPBLK DS    (LDFPB)X            DEFAULT PARAMETER BLOCK
         DS    0F                  ALIGN WORD BOUNDRY
PARSPARM DS    (LPPL)X             PARSE PARAMETER LIST
         DS    0F                  ALIGN WORD BOUNDRY
WORKWORD DS    F                   WORK SPACE (TEMPORARY SAVE AREA)
UPTSAVX  DS    F                   SAVE UPT ADDRESS HERE       @YL026YB
PRMPTBFL DS    H                   PROMPT BUFFER LENGTH
PRMPTBFO DS    H                   PROMPT BUFFER OFFSET
PRMPTBUF DS    H                   PROMPT BUFFER
*  THE FOLLOWING IS RESERVED SPACE FOR OUTPUT CHAINS
OUTAREA1 DS    F                   MESSAGE CHAIN POINTER
OUTCNT1  DS    F                   MESSAGE SEGMENT COUNT
OUTPUT11 DS    F                   POINTER TO MESSAGE SEGMENT
OUTPUT12 DS    F                   POINTER TO MESSAGE INSERTION
OUTAREA2 DS    F                   MESSAGE CHAIN POINTER
OUTCNT2  DS    F                   MESSAGE SEGMENT COUNT
OUTPUT21 DS    F                   POINTER TO MESSAGE SEGMENT
OUTPUT22 DS    F                   POINTER TO MESSAGE INSERTION
*  BUFFER FOR PRINTING USER DATA
OUTBUFF  DS    H                   LENGTH OF DATA BUFFER + HEADER
OUTBUFFO DS    H                   OFFSET FOR DATA BUFFER
OUTBUFFR DS    CL84                DATA BUFFER
*  RETURN CODE FOR MESSAGES STORED HERE
RCMESGL  DS    H                   LENGTH OF RETURN CODE
RCMESGO  DS    H                   OFFSET FOR INSERTION
RCMESG   DS    CL4                 RETURN CODE
*  DATA SET NAME FOR MESSAGES STORED HERE
DSNMESGL DS    H                   LENGTH OF DSNAME
DSNMESGO DS    H                   OFFSET FOR INSERTION
DSNMESG  DS    CL54                DATA SET NAME
*  PASSWORD FOR MESSAGES STORED HERE
PWMSGL   DS    H                   LENGTH OF PASSWORD
PWMSGO   DS    H                   OFFSET FOR INSERTION
PWMSG    DS    CL8                 PASSWORD
PWBLANK  DS    CL1                 BLANK DELIMITER
RC       DS    CL1                 RETURN CODE SAVED HERE
PRMPTCNT DS    CL1                 PROMPT COUNTER
PROMPTSW DS    CL1                 SWITCH INDICATES PROMPTING REQUIRED
STACKSW  DS    CL1                 INDICATE FLUSH STACK AND CLEAR QUEUE
PUT      PUTLINE  MF=L             LIST FORM OF PUTLINE
PUTDATA  PUTLINE  MF=L             LIST FORM OF PUTLINE
*  KEEP LOCATE AND OBTAIN LISTS TOGETHER
LOCLIST  CAMLST NAME,DSN,,WORKAREA LOCATE CAMLST
LOCDSN   EQU   LOCLIST+F4          LABEL-
LOCAREA  EQU   LOCLIST+F12         -LOCATE CAMLST FIELDS
OBTNLIST CAMLST SEARCH,DSN,VNUM,WORKAREA OBTAIN CAMLST
OBTNDSN  EQU   OBTNLIST+F4         LABEL-
OBTNVNUM EQU   OBTNLIST+F8         -OBTAIN-
OBTNAREA EQU   OBTNLIST+F12        -CAMLST FIELDS
CORE     EQU   *-SAVEAREA          SIZE OF WORKAREA
         EJECT
IKJEHMSG CSECT
         ENTRY IKJEHSMG
***********************************************************************
*                                                                     *
*  THIS CONTROL SECTION CONTAINS THE MESSAGE TEXT (BOTH FIRST AND     *
*  SECOND LEVEL).  IT CONTAINS A BRANCH TABLE FOR FIRST LEVEL MESSAGES*
*  AND A BRANCH TABLE FOR SECOND LEVEL MESSAGES.  EACH BRANCH TABLE   *
*  ENTRY IS COMPOSED OF A ONE BYTE OFFSET FIELD FOR MESSAGE INSERTIONS*
*  AND A THREE BYTE ADDRESS OF THE MESSAGE.  THE MESSAGE BUILDER      *
*  ROUTINES COMBINE THE ADDRESS OF THE CONTROL SECTION AND THE ADDRESS*
*  OF THE MESSAGE TO GET THE TRUE ADDRESS OF THE MESSAGE.  THE OFFSET *
*  IS PLACED IN THE INSERTION SEGMENT.                                *
*  EACH MESSAGE IS COMPOSED OF A 4 BYTE HEADER (2 BYTE LENGTH OF      *
*  MESSAGE INCLUDING HEADER LENGTH AND A TWO BYTE OFFSET FIELD)       *
*  FOLLOWED BY THE MESSAGE TEXT.                                      *
*                                                                     *
***********************************************************************
         SPACE
*  EQUATES USED IN THIS CONTROL SECTION
HDR      EQU   4                   HEADER LENGTH (2 BYTES EACH, LENGTH
*                                  AND OFFSET FIELDS) EACH SEGMENT
OFST     EQU   0                   INSERTION OFFSET 1ST MESSAGE SEGMENT
*  OFFSETS FOR FIRST LEVEL MESSAGE INSERTIONS
OFST01   EQU   37                  INSERTION OFFSET MESSAGE 01
OFST02   EQU   0                   INSERTION OFFSET MESSAGE 02
OFST03   EQU   19                  INSERTION OFFSET MESSAGE 03
OFST04   EQU   56                  INSERTION OFFSET MESSAGE 04
OFST05   EQU   0                   INSERTION OFFSET MESSAGE 05
OFST06   EQU   19                  INSERTION OFFSET MESSAGE 06
OFST07   EQU   19                  INSERTION OFFSET MESSAGE 07
OFST08   EQU   0                   INSERTION OFFSET MESSAGE 08
OFST09   EQU   0                   INSERTION OFFSET MESSAGE 09
OFST10   EQU   37                  INSERTION OFFSET MESSAGE 10
OFST11   EQU   34                  INSERTION OFFSET MESSAGE 11
OFST12   EQU   0                   INSERTION OFFSET MESSAGE 12
*  OFFSETS FOR SECOND LEVEL MESSAGE INSERTIONS
*  NOTE-  THERE ARE CURRENTLY NO INSERTIONS IN MOST SECOND LEVEL
*  MESSAGES.  A COMMON OFFSET OF ZERO IS USED.
OFSTSMSG EQU   0                   INSERTION OFFSET 2ND LEVEL MESSAGES
OFSTSM04 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 04
OFSTSM05 EQU   27                  INSERTION OFFSET SECOND LEVEL MSG 05
OFSTSM10 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 10
         SPACE
AMSG01   DC    AL1(OFST01)         INSERTION OFFSET
         DC    AL3(LMSG01)         MESSAGE ADDRESS
AMSG02   DC    AL1(OFST02)         INSERTION OFFSET
         DC    AL3(LMSG02)         MESSAGE ADDRESS
AMSG03   DC    AL1(OFST03)         INSERTION OFFSET
         DC    AL3(LMSG03)         MESSAGE ADDRESS
AMSG04   DC    AL1(OFST04)         INSERTION OFFSET
         DC    AL3(LMSG04)         MESSAGE ADDRESS
AMSG05   DC    AL1(OFST05)         INSERTION OFFSET
         DC    AL3(LMSG05)         MESSAGE ADDRESS
AMSG06   DC    AL1(OFST06)         INSERTION OFFSET
         DC    AL3(LMSG06)         MESSAGE ADDRESS
AMSG07   DC    AL1(OFST07)         INSERTION OFFSET
         DC    AL3(LMSG07)         MESSAGE ADDRESS
AMSG08   DC    AL1(OFST08)         INSERTION OFFSET
         DC    AL3(LMSG08)         MESSAGE ADDRESS
AMSG09   DC    AL1(OFST09)         INSERTION OFFSET
         DC    AL3(LMSG09)         MESSAGE ADDRESS
AMSG10   DC    AL1(OFST10)         INSERTION OFFSET
         DC    AL3(LMSG10)         MESSAGE ADDRESS
AMSG11   DC    AL1(OFST11)         INSERTION OFFSET
         DC    AL3(LMSG11)         MESSAGE ADDRESS
AMSG12   DC    AL1(OFST12)         INSERTION OFFSET
         DC    AL3(LMSG12)         MESSAGE ADDRESS
* FIRST LEVEL MESSAGES
LMSG01   DC    AL2(L'MSG01+HDR)
         DC    AL2(OFST)
MSG01    DC    C'IKJ58101I UNABLE TO PROTECT DATA SET +'
LMSG02   DC    AL2(L'MSG02+HDR)
         DC    AL2(OFST)
MSG02    DC    C'IKJ58102I NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND'
LMSG03   DC    AL2(L'MSG03+HDR)
         DC    AL2(OFST)
MSG03    DC    C'IKJ58103I DATA SET  NOT IN CATALOG'
LMSG04   DC    AL2(L'MSG04+HDR)
         DC    AL2(OFST)
MSG04    DC    C'IKJ58104I UNABLE TO MODIFY PROTECTION FLAGS OF DATA SEX
               T +'
LMSG05   DC    AL2(L'MSG05+HDR)
         DC    AL2(OFST)
MSG05    DC    C'IKJ58105I INCORRECT PASSWORD ENTERED TWICE'
LMSG06   DC    AL2(L'MSG06+HDR)
         DC    AL2(OFST)
MSG06    DC    C'IKJ58106I PASSWORD  ALREADY EXISTS'
LMSG07   DC    AL2(L'MSG07+HDR)
         DC    AL2(OFST)
MSG07    DC    C'IKJ58107I PASSWORD  DOES NOT EXIST'
LMSG08   DC    AL2(L'MSG08+HDR)
         DC    AL2(OFST)
MSG08    DC    C'IKJ58108I PROTECTION IS FOR DATA SETS, NOT MEMBERS'
LMSG09   DC    AL2(L'MSG09+HDR)
         DC    AL2(OFST)
MSG09    DC    C'IKJ58109I USER DATA FIELD BLANK'
LMSG10   DC    AL2(L'MSG10+HDR)
         DC    AL2(OFST)
MSG10    DC    C'IKJ58110I INCORRECT CONTROL PASSWORD '
LMSG11   DC    AL2(L'MSG11+HDR)
         DC    AL2(OFST)
MSG11    DC    C'IKJ58111I INVALID DATA SET NAME, '''' EXCEEDS 44 CHARAX
               CTERS'
LMSG12   DC    AL2(L'MSG12+HDR)
         DC    AL2(OFST)
MSG12    DC    C'IKJ58112I COMMAND SYSTEM ERROR+'
IKJEHSMG DS    0F                  SECOND LEVEL MESSAGE BRANCH TABLE
ASMSG01  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG01)        MESSAGE ADDRESS
ASMSG02  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG02)        MESSAGE ADDRESS
ASMSG03  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG03)        MESSAGE ADDRESS
ASMSG04  DC    AL1(OFSTSM04)       INSERTION OFFSET
         DC    AL3(LSMSG04)        MESSAGE ADDRESS
ASMSG05  DC    AL1(OFSTSM05)       INSERTION OFFSET
         DC    AL3(LSMSG05)        MESSAGE ADDRESS
ASMSG06  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG06)        MESSAGE ADDRESS
ASMSG07  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG07)        MESSAGE ADDRESS
ASMSG08  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG08)        MESSAGE ADDRESS
ASMSG09  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG09)        MESSAGE ADDRESS
ASMSG10  DC    AL1(OFSTSM10)       INSERTION OFFSET
         DC    AL3(LSMSG10)        MESSAGE ADDRESS
ASMSG11  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG11)        MESSAGE ADDRESS
ASMSG12  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG12)        MESSAGE ADDRESS
ASMSG13  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG13)        MESSAGE ADDRESS
ASMSG14  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG14)        MESSAGE ADDRESS
ASMSG15  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG15)        MESSAGE ADDRESS
*  SECOND LEVEL MESSAGES
LSMSG01  DC    AL2(L'SMSG01+HDR)
         DC    AL2(OFST)
SMSG01   DC    C'IKJ58101I PASSWORD DATA SET NOT FOUND'
LSMSG02  DC    AL2(L'SMSG02+HDR)
         DC    AL2(OFST)
SMSG02   DC    C'IKJ58101I PASSWORD DATA SET FULL'
LSMSG03  DC    AL2(L'SMSG03+HDR)
         DC    AL2(OFST)
SMSG03   DC    C'IKJ58101I I/O ERROR IN PASSWORD DATA SET'
LSMSG04  DC    AL2(L'SMSG04+HDR)
         DC    AL2(OFST)
SMSG04   DC    C'IKJ58112I DEFAULT ERROR CODE '
LSMSG05  DC    AL2(L'SMSG05+HDR)
         DC    AL2(OFST)
SMSG05   DC    C'IKJ58112I PARSE ERROR CODE '
LSMSG06  DC    AL2(L'SMSG06+HDR)
         DC    AL2(OFST)
SMSG06   DC    C'IKJ58104I DATA SET IN USE'
LSMSG07  EQU   *                   UNUSED SECOND LEVEL MESSAGE
LSMSG08  EQU   *                   UNUSED SECOND LEVEL MESSAGE
LSMSG09  DC    AL2(L'SMSG09+HDR)                                  Y2075
         DC    AL2(OFST)                                          Y2075
SMSG09   DC    C'IKJ58104I DATA SPACE OWNED BY VSAM'              Y2075
LSMSG10  DC    AL2(L'SMSG10+HDR)
         DC    AL2(OFST)
SMSG10   DC    C'IKJ58112I SVC 98 RETURN CODE '
LSMSG11  DC    AL2(L'SMSG11+HDR)
         DC    AL2(OFST)
SMSG11   DC    C'IKJ58104I DATA SET NOT IN CATALOG'
LSMSG12  DC    AL2(L'SMSG12+HDR)
         DC    AL2(OFST)
SMSG12   DC    C'IKJ58104I DATA SET NOT ON VOLUME'
LSMSG13  DC    AL2(L'SMSG13+HDR)
         DC    AL2(OFST)
SMSG13   DC    C'IKJ58104I REQUIRED VOLUME NOT MOUNTED'
LSMSG14  DC    AL2(L'SMSG14+HDR)
         DC    AL2(OFST)
SMSG14   DC    C'IKJ58104I TAPE DATA SET CANNOT BE PROTECTED BY PROTECTX
               '
LSMSG15  DC    AL2(L'SMSG15+HDR)
         DC    AL2(OFST)
SMSG15   DC    C'IKJ58104I I/O ERROR WHILE UPDATING SECURITY FLAGS'
PATCH    DC    20X'00'             PATCH AREA
         END
