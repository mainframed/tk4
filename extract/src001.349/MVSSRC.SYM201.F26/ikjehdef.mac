         TITLE 'IKJEHDEF - TSO DEFAULT NAMING SERVICE ROUTINE'
IKJEHDEF CSECT
***********************************************************************
*                                                                     *
* STATUS -- CHANGE LEVEL 00                                           *
*                                                                     *
* FUNCTION -- THE DEFAULT NAMING SERVICE ROUTINE IS USED TO QUALIFY   *
*    DATA SET NAMES.                                                  *
*                                                                     *
* ENTRY POINTS --                                                     *
*          IKJDFLT - MAIN ENTRY POINT OF PROGRAM                      *
*                                                                     *
* INPUT -- REGISTER 1 POINTS TO THE DEFAULT SERVICE ROUTINE PARAMETER *
*    LIST AS FOLLOWS-                                                 *
*    WORD 1 POINTS TO THE USER PROFILE TABLE (UPT)                    *
*    WORD 2 POINTS TO THE ENVIORONMNT CONTROL TABLE (ECT)             *
*    WORD 3 POINTS TO THE CP'S EVENT CONTROL BLOCK (ECB)              *
*    WORD 4 POINTS TO THE DEFAULT PARAMETER BLOCK                     *
*                                                                     *
*    THE DEFAULT PARAMETER BLOCK IS AS FOLLOWS-                       *
*    WORD 1 BYTE 1   CONTAINS THE ENTRY CODE                          *
*    WORD 1 BYTE 2-4 POINTS TO THE DATA SET NAME AND LENGTH           *
*    WORD 2 BYTE 1   CONTAINS CONTROL INFORMATION                     *
*    WORD 2 BYTE 2-4 POINTS TO THE PROTECTED STEP CONTROL BLOCK (PSCB)*
*    WORD 3          POINTS TO A SPECIFIC DEFAULT QUALIFIER           *
*                                                                     *
* OUTPUT -- WHEN MORE THAN ONE QUALIFIER IS FOUND FOR A DATA SET NAME *
*    THESE QUALIFIERS ARE LISTED AT THE TERMINAL.  APPROPRIATE        *
*    PROMPTING AND DIAGNOSTIC MESSAGES MAY ALSO BE ISSUED.            *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IKJEHCIR - ENTRY POINT TO CATALOG INFORAMTION ORUTINE       *
*         IKJPUTL - ENTRY POINT TO PUTLINE SERVICE ROUTINE            *
*         IKJPTGT - ENTRY POINT TO PTUGET SERVICE ROUTINE             *
*         IKJSCAN - ENTRY POINT TO COMMAND SCAN SERVICE ROUTINE       *
*                                                                     *
* EXITS, NORMAL -- RETURN TO CALLER                                   *
*                                                                     *
* EXITS, ERROR -- RETURN TO CALLER                                    *
*                                                                     *
* TABLES/WORK AREAS --                                                *
*    WORKAREA - A DSECT TO MAP THE WORKAREA                           *
*                                                                     *
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             *
*                                                                     *
* NOTES -- N/A                                                        *
*                                                                     *
***********************************************************************
         SPACE 2
         ENTRY IKJDFLT
         EJECT
         SPACE
*  REGISTER EQUATES
R0       EQU   0                   GENERAL REGISTER 0
R1       EQU   1                   GENERAL REGISTER 1
R2       EQU   2                   GENERAL REGISTER 2
R3       EQU   3                   GENERAL REGISTER 3
R4       EQU   4                   GENERAL REGISTER 4
R5       EQU   5                   GENERAL REGISTER 5
R6       EQU   6                   GENERAL REGISTER 6
R7       EQU   7                   GENERAL REGISTER 7
R8       EQU   8                   GENERAL REGISTER 8
R9       EQU   9                   GENERAL REGISTER 9
R10      EQU   10                  GENERAL REGISTER 10
R11      EQU   11                  GENERAL REGISTER 11
R12      EQU   12                  GENERAL REGISTER 12
R13      EQU   13                  GENERAL REGISTER 13
R14      EQU   14                  GENERAL REGISTER 14
R15      EQU   15                  GENERAL REGISTER 15
*  OTHER EQUATES
SPN      EQU   1                   SUBPOOL NUMBER FOR GETMAIN
MASK1    EQU   X'40'               MASK TO TEST FOR ATTENTION
PERIOD   EQU   C'.'                PERIOD
BLANK    EQU   C' '                BLANK
HALFWORD EQU   X'01'               MASK TO TEST FOR HALFWORD BOUNDRY
CIROP1   EQU   X'01'               CIR OPTION TO REQUEST DATA SET NAMES
CIRVOL   EQU   X'04'               REQUEST VOLUMES FROM CIR
GDGNAME  EQU   X'02'               CIR - GENERATION DATA GROUP NAME
NAMETEST EQU   X'07'               CIR - DATA SET NAME
LISTEND  EQU   X'FF'               CIR - END OF LIST
TTRSIGN  EQU   X'80'               MASK TO INDICATE TTR POINTER
LOCMSK8  EQU   X'08'               MASK TO CHECK FOR LOCATE RC=8 (CIR)
LOCMSK16 EQU   X'10'               MASK TO CHECK FOR LOCATE RC=16 (CIR)
SWON     EQU   X'FF'               MASK TO TURN SWITCHES ON
SWOFF    EQU   X'00'               MASK TO TURN SWITCHES OFF
EQ       EQU   8                   EQUAL CONDITION CODE
ENDTEST  EQU   X'FF'               INDICATE END OF CHAIN
ZONE     EQU   C'0'                ZONE
FOXZERO  EQU   C'0'                CHARACTER ZERO
ONE      EQU   1                   ONE
TWO      EQU   2                   TWO
FOUR     EQU   4                   FOUR
*  ABSOLUTE EQUATES (OFFSETS AND SHORT LENGTHS)
F0       EQU   0                   ZERO
F1       EQU   1                   ONE
F2       EQU   2                   TWO
F4       EQU   4                   FOUR
F5       EQU   5                   FIVE
F7       EQU   7                   SEVEN
F8       EQU   8                   EIGHT
F12      EQU   12                  TWELVE
F43      EQU   43                  FORTY-THREE
*  RETURN CODE EQUATES
RC4      EQU   4                   RETURN CODE = 4
RC8      EQU   8                   RETURN CODE = 8
RC12     EQU   12                  RETURN CODE = 12
RC16     EQU   16                  RETURN CODE = 16
RC20     EQU   20                  RETURN CODE = 20
RC24     EQU   24                  RETURN CODE = 24
RC28     EQU   28                  RETURN CODE = 28
RC32     EQU   32                  RETURN CODE = 32
RC36     EQU   36                  RETURN CODE = 36
*  LENGTH EQUATES (FIXED LENGTH ITEMS)
L3       EQU   3                   LENGTH OF TTR
L6       EQU   6                   LENGTH OF VOLUME ID (VOLID)
L8       EQU   8                   LENGTH OF SIMPLE DSNAME (QUALIFIER)
L9       EQU   9                   LENGTH OF CIR NAME ENTRY
L10      EQU   10                  LENGTH OF MESSAGE ID
L13      EQU   13                  LENGTH OF (NAME + LL + OFFSET) + 1
L16      EQU   16                  LENGTH OF CIR GENERATION DATA ENTRY
L46      EQU   46                  LENGTH OF DSNAME AND DSLENGTH FIELD
L72      EQU   72                  LENGTH OF SAVEAREA
*
*  EQUATES FOR MESSAGE NUMBERS (FIRST LEVEL MESSAGES)
M01      EQU   1                   MESSAGE NUMBER 01
M02      EQU   2                   MESSAGE NUMBER 02
M03      EQU   3                   MESSAGE NUMBER 03
M04      EQU   4                   MESSAGE NUMBER 04
M05      EQU   5                   MESSAGE NUMBER 05
M06      EQU   6                   MESSAGE NUMBER 06
M07      EQU   7                   MESSAGE NUMBER 07
M08      EQU   8                   MESSAGE NUMBER 08
M09      EQU   9                   MESSAGE NUMBER 09
M10      EQU   10                  MESSAGE NUMBER 10
M11      EQU   11                  MESSAGE NUMBER 11
M12      EQU   12                  MESSAGE NUMBER 12
*  EQUATES FOR MESSAGE NUMBERS (SECOND LEVEL MESSAGES)
S01      EQU   1                   SECOND LEVEL MESSAGE NUMBER 01
S02      EQU   2                   SECOND LEVEL MESSAGE NUMBER 02
S03      EQU   3                   SECOND LEVEL MESSAGE NUMBER 03
S04      EQU   4                   SECOND LEVEL MESSAGE NUMBER 04
S05      EQU   5                   SECOND LEVEL MESSAGE NUMBER 05
S06      EQU   6                   SECOND LEVEL MESSAGE NUMBER 06
S07      EQU   7                   SECOND LEVEL MESSAGE NUMBER 07
S08      EQU   8                   SECOND LEVEL MESSAGE NUMBER 08
S09      EQU   9                   SECOND LEVEL MESSAGE NUMBER 09
*              REGISTER USAGE
*
*  REGISTER 0  USED AS WORK REGISTER
*
*  REGISTER 1  USED AS PARAMETER REGISTER AND AS WORK REGISTER
*
*  REGISTER 2  USED AS WORK REGISTER
*
*  REGISTER 3  USED AS WORK REGISTER
*
*  REGISTER 4  USED AS WORK REGISTER
*
*  REGISTER 5 USED AS WORK REGISTER
*
*  REGISTER 6 POINTS TO DEFAULT PARAMETER BLOCK
*
*  REGISTER 7 USED AS WORK REGISTER
*
*  REGISTER 8  USED AS WORK REGISTER
*
*  REGISTER 9  USED AS WORK REGISTER
*
*  REGISTER 10 USED AS WORK REGISTER
*
*  REGISTER 11 USED AS WORK REGISTER
*
*  REGISTER 12 IS BASE REGISTER FOR THIS PROGRAM
*
*  REGISTER 13 IS SAVE AREA REGISTER AND DSECT BASE REGISTER
*
*  REGISTER 14 IS THE LINK REGISTER
*
*  REGISTER 15 IS THE BRANCH AND RETURN CODE REGISTER
         EJECT
IKJDFLT  SAVE  (14,12),,*          SAVE CALLING PROGRAM'S REGISTERS
         LR    R12,R15             SET BASE REGISTER
         USING IKJEHDEF,R12        ESTABLISH ADDRESSABILITY
         LR    R2,R1               SAVE REG 1 WHICH IS USED BY GETMAIN
         GETMAIN R,LV=CORE,SP=SPN  GET CORE FOR CONSTANTS AND WORKAREA
         XC    F0(L72,R1),F0(R1)   INITIALIZE REG SAVE AREA
         ST    R13,F4(R1)          CHAIN SAVE AREAS -
         ST    R1,F8(R13)          - BACKWARDS AND FORWARDS
         LR    R13,R1              FIRST 18 WORDS IS REGISTER SAVE AREA
         USING WORKAREA,R13        ADDRESSABILITY FOR WORKAREA
         MVC   PUT(PUTLEND-PUTL),PUTL INITIALIZE PUTLINE PARM BLOCK
         MVC   PROMPT(PRMPTEND-PRMPT1),PRMPT1 AND PUTGET PARMBLOCK
         MVI   DSNAME,BLANK        BLANK DATA SET -
         MVC   DSNAME+F1(F43),DSNAME WORK BUFFER
         SR    R1,R1               CLEAR REGISTER
         ST    R1,FLAGWORD         ZERO COMMAND SCAN FLAG WORD
         ST    R1,CIRADDR          ZERO CIR ADDRESS FIELD
         MVI   SWITCH,SWOFF        SET SWITCH OFF
         MVI   ADDSW,SWOFF         SET SWITCH OFF
         MVI   OPTSW,SWOFF         SET SWITCH OFF              @YL026YB
*  INITIALIZE CIR PARAMETER LIST
         LH    R0,MINMAX           POINT TO GETMAIN PARAMETER  @YL026YB
         LR    R3,R0               SAVE LENGTH                 @YL026YB
         O     R0,SUBPL1           SET SUBPOOL NUMBER          @YL026YB
         GETMAIN R,LV=(0)          WORKAREA FOR CIR            @YL026YB
         LTR   R15,R15             TEST RETURN CODE            @YL026YB
         BZ    CIRPM               CONTINUE NORMALLY           @YL026YB
         MVI   OPTSW,SWON          NO CIR WOAREA               @YL026YB
         B     DEF1                CONTINUE,CIR WKAREA UNUSED  @YL026YB
CIRPM    STH   R3,F0(R1)           SAVE LENGTH OF WORKAREA     @YL026YB
         ST    R1,WKAR1PTR         SET POINTER TO WORKAREA     @YL026YB
         LA    R1,WKAREA2          ADDRESS OF SECOND WORKAREA -
         ST    R1,WKAR2PTR         TO CIR PARAMETER LIST
         LA    R1,CVOLID           ADDRESS OF USER CAT. NAME   @YL026YB
         ST    R1,CVOLIDPT         SET PTR TO USER CAT. NAME   @YL026YB
         LA    R1,PASSWKD          ADDRESS OF CATALOG PASSWORD @YL026YB
         ST    R1,PASSPTR          SET PTR TO CATALOG PASSWORD @YL026YB
*  INITIALIZE SCAN BUFFER LAST BYTE TO BLANK
DEF1     EQU   *                   START NORMAL PROCESSING     @YL026YB
         LA    R1,SCANBUFF         POINT TO SCAN BUFFER
         MVI   F8(R1),BLANK        MOVE IN A BLANK
*  REGISTER 2 POINTS TO DEFAULT PARAMETER LIST
         USING DFPL,R2             ESTABLISH ADDRESSABILITY FOR DFPL
         L     R3,DFPLUPT          UPT ADDRESS
         ST    R3,UPTSAV           SAVE UPT ADDRESS            @YL026YB
         L     R4,DFPLECT          ECT ADDRESS
         L     R5,DFPLECB          ECB ADDRESS
         L     R6,DFPLDFPB         DFPB ADDRESS
         DROP  R2                  DFPL IS NO LONGER NEEDED
         USING DFPB,R6             ESTABLISH ADDRESSABILITY FOR DFPB
*  REGISTER 3 POINTS TO THE UPT
*  REGISTER 4 POINTS TO THE ECT
*  REGISTER 5 POINTS TO THE CP'S ECB
*  REGISTER 6 POINTS TO DEFAULT PARAMETER LIST
         LA    R1,IOPARM           POINT TO SPACE FOR I/O PARM LIST
         USING IOPL,R1             SET ADDRESSABILITY IOPL
         LA    R2,CSPLPARM         POINT TO SPACE FOR CMD SCAN PARMLIST
         USING CSPL,R2             SET ADDRESSABILITY CSPL
*  INITIALIZE PARAMETERS FOR I/O AND COMMAND SCAN
         ST    R3,IOPLUPT          UPT ADDRESS TO IOPL-
         ST    R3,CSPLUPT          AND CSPL
         ST    R4,IOPLECT          ECT ADDRESS TO IOPL-
         ST    R4,CSPLECT          AND CSPL
         ST    R5,IOPLECB          ECB ADDRESS TO IOPL-
         ST    R5,CSPLECB          AND CSPL
         ST    R5,ECBADDR          SAVE ECB ADDRESS
         LA    R3,FLAGWORD         COMMAND SCAN FLAG WORD-
         ST    R3,CSPLFLG          TO CSPL
         LA    R3,CSOAAREA         COMMAND SCAN OUTPUT AREA-
         ST    R3,CSPLOA           TO CSPL
         DROP  R1                  IOPL NO LONGER NEEDED
         DROP  R2                  CSPL NO LONGER NEEDED
*  NOW LOAD DEFAULT PARAMETERS
         L     R3,DFPBDSN          POINT TO DSLENGTH AND DSNAME BUFFER
         L     R4,UPTSAV           POINT TO UPT                @YL026YB
         L     R5,DFPBQUAL         POINT TO DEFAULT QUALIFIER
*  NOW REGISTER 3 POINTS TO DATA SET LENGTH AND NAME BUFFER
*  NOW REGISTER 4 POINTS TO THE PSCB
*  NOW REGISTER 5 POINTS TO THE DEFAULT QUALIFIER
*  NOW VALIDITY CHECK PARAMETERS
         CLI   DFPBCODE,DFPB00     IS OPTION X'00'
         BE    OKOPTION            YES, OK
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB
         BE    OKOPTION            YES, OK                     @YL026YB
         B     CHKCORE             GO CHECK FOR CIR WKAREA     @YL026YB
NEXTCPR  CLI   DFPBCODE,DFPB04     IS OPTION X'04'             @YL026YB
         BE    OKOPTION            YES, OK
         CLI   DFPBCODE,DFPB08     IS OPTION X'08'
         BE    OKOPTION            YES, OK
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    OKOPTION            YES, OK
         CLI   DFPBCODE,DFPB84     IS OPTION X'84'             @YL026YB
         BE    OKOPTION            YES,OK                      @YL026YB
         CLI   DFPBCODE,DFPB88     IS OPTION X'88'             @YL026YB
         BE    OKOPTION            YES,OK                      @YL026YB
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    OKOPTION            YES,OK                      @YL026YB
         B     ERROR28             ERROR, INVALID ENTRY OPTION
CHKCORE  CLI   OPTSW,SWON          IS CORE AVAILABLE           @YL026YB
         BNE   NEXTCPR             CHECK NEXT OPTION           @YL026YB
         BAL   R11,MESG10          GO GET MESSAGE 10           @YL026YB
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERT.  @YL026YB
         LA    R2,S09              SECOND LEVEL MESSAGE 6      @YL026YB
         BAL   R14,SMSGBLD         GO BUILD MESSAGE            @YL026YB
         BAL   R9,TPUT             GO WRITE MESSAGE            @YL026YB
         B     ERROR4              GO SET RETURN CODE          @YL026YB
OKOPTION STC   R3,TESTBYTE         STORE LAST BYTE OF ADDRESS
         TM    TESTBYTE,HALFWORD   IS DSLENGTH ON HALFWORD BOUNDRY
         BO    ERROR28             NO, ERROR, BAD PARAMETER
         LH    R8,F0(R3)           LOAD DATA SET LENGTH
         LTR   R8,R8               IS LENGTH ZERO
         BNZ   SIZETEST            NO , CHECK DATA SET LENGTH
         LA    R8,FOUR             HEADER LENGTH
         STH   R8,DSNMESGL         SET INSERTION LENGTH (0)
*  DATA SET LENGTH IS ZERO, OPTION MUST BE X'00' ELSE ERROR
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB
         BE    SETSW               PROCESS X'80'               @YL026YB
         CLI   DFPBCODE,DFPB00     IS OPTION X'00'
         BNE   ERROR28             ERROR, INVALID DSLENGTH
SETSW    MVI   SWITCH,SWON         TURN SWITCH ON              @YL026YB
         B     CNTRLTST            GO CHECK OPTION
SIZETEST CH    R8,DSMAXSZE         IS LENGTH GREATER THAN 44
         BH    ERROR28             ERROR, INVALID DSLENGTH
         BCTR  R8,R0               DECREMENT FOR EXECUTE
         EX    R8,DSNINSRT         MOVE DSNAME TO INSERTION BUFFER
         LA    R8,F5(R8)           4 FOR HEADER AND 1 FOR EXECUTE
         STH   R8,DSNMESGL         LENGTH OF INSERTION
         TM    DFPBCNTL,DFPBRET    RETURN QUALIFIER
         BNO   TEST0C              NO, GO CHECK FOR USERID ADD
         L     R8,DFPBQUAL         POINT TO QUALIFIER BUFFER
         MVC   F0(L8,R8),UPERCASE  BLANK QUALIFIER RETURN BUFFER
TEST0C   CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    CNTRLTST            YES,CONTINUE X'0C' PROCESSING
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BNE   NOT0C               NO, NOT X'0C'
CNTRLTST TM    DFPBCNTL,DFPBMSG    WAS MESSAGE REQUESTED
         BO    REUSE               YES, GO ISSUE MESSAGE
NOT0C    TM    DFPBCNTL,DFPBUID    USERID ADD REQUESTED
         BZ    MOVENAME            NO, GO MOVE NAME
*  NOW PREFIX THE USERID TO THE GIVEN DATA SET NAME
ADDUSRID LA    R8,DSNAME           ADDRESS OF DATA SET NAME BUFFER
         SR    R9,R9               ZERO REGISTER
         USING UPT,R4              ESTABLISH ADDRESSABILITY FOR UPT
         LA    R2,UPTPREFX         ADDRESS OF PREFIX           @YL026YB
         IC    R9,UPTPREFL         LENGTH OF PREFIX            @YL026YB
         LTR   R9,R9               CHECK PREFIX LENGTH
         BZ    NOPREFIX            NO PREFIXING
         EX    R9,MOVEID           USERID TO DSNAME BUFFER
*  THIS ACTUALLY MOVES ONE EXTRA BYTE WHICH WILL BE OVERLAID WITH A
*  PERIOD.
*  UPT  POINTER IS NO LONGER NEEDED, REGISTER 4 IS AVAILABLE
         DROP  R4                  DROP PSCB ADDRESSABILITY
         AR    R8,R9               POINT PAST USERID
         MVI   F0(R8),PERIOD       INSERT PERIOD
         LA    R8,F1(R8)           POINT PAST PERIOD
         LA    R9,F1(R9)           PLUS ONE FOR THE PERIOD     @YL026YB
NOPREFIX AH    R9,F0(R3)           ADD DSLENGTH TO USERID LENGTH
         TM    SWITCH,SWON         TEST SWITCH
         BO    OPTTEST             GO SAVE DATA SET LENGTH
         CH    R9,DSMAXSZE         COMPARE TOTAL TO 44
         BH    LENTHERR            ERROR, LENGTH GT 44
         LA    R4,F2(R3)           POINT TO DSNAME
         LH    R1,F0(R3)           LENGTH OF DSNAME
         BCTR  R1,R0               DECREMENT FOR EXECUTE
         EX    R1,MOVEINST         MOVE DSNAME TO USERID
         STH   R9,DSL              SAVE TOTAL LENGTH
         B     TESTOPTN            CHECK OPTION
OPTTEST  STH   R9,DSL              SAVE DATA SET LENGTH
         B     ADDNAME             GO ADD DSNAME
MOVENAME TM    SWITCH,SWON         IS SWITCH ON
         BO    ERROR28             ERROR, DSLENGTH 0, NO USERID ADD
         MVC   DSL(L46),F0(R3)     MOVE NAME AND LENGTH TO WORK BUFFER
TESTOPTN CLI   DFPBCODE,DFPB00     IS OPTION X'00'
         BE    ADDNAME             PROCESS X'00' ENTRY
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB
         BE    ADDNAME             PROCESS X'80' ENTRY         @YL026YB
*  NOW LOAD CIR ROUTINE
         LA    R7,F1               REG 1 = 1
CALCIR   MVI   CIROPT,CIRVOL       SET CIR OPTION FOR VOLUMES
         LA    R1,DSNAME           ADDRESS OF DSNAME
         ST    R1,NAMETTR          SET POINTER TO DSNAME
         BAL   R14,MVMOPT          SET POINTERS TO USER        @YL026YB
*                                  CATALOG AND PASSWORD        @YL026YB
         BAL   R14,TESTATTN        CHECK FOR INTERRUPT
         LA    R1,CIRPARM          POINT TO CIR PARAMETER LIST
         L     R15,VCONCIR         CIR ADDRESS TO REG 15
         BALR  R14,R15             GO TO CIR ROUTINE
         LTR   R15,R15             TEST RETURN CODE
         BZ    GOODEND             OK, NAME FOUND
         CH    R7,UNO              IS THIS THE FIRST CALL TO CIR
         BNE   CIRERROR            NO,ERROR                    @YL026YB
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    CHECKADD            GO CHECK ADD QUALIFIER OPTION
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    CHECKADD            GO CHECK ADD QUALIFIER OPTION
         CLI   DFPBCODE,DFPB00     IS OPTION X'00'
         BE    ERROR36             YES, ERROR
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB
         BE    ERROR36             YES,ERROR                   @YL026YB
*
*  NO QUALIFIER SPECIFED USE CIR TO GET QUALIFIERS
*  BUILD CIR PARAMETER LIST
GOCIR    LA    R1,DSNAME           ADDRESS OF DATA SET NAME
         ST    R1,NAMETTR          SET POINTER TO DSNAME
         BAL   R14,MVMOPT          SET POINTERS TO USERS       @YL026YB
*                                  CATALOG AND PASSWORD        @YL026YB
         MVI   CIROPT,CIROP1       SET CIR OPTION, REQUEST DSNAMES
         LA    R2,QUALLIST         POINT TO AREA FOR QUALIFIER LIST
         SR    R11,R11             ZERO QUALIFIER COUNTER
         BAL   R14,TESTATTN        CHECK FOR INTERRUPT
         LA    R1,CIRPARM          POINT TO CIR PARAMETERS
         L     R15,VCONCIR         CIR ADDRESS TO REG 15
         BALR  R14,R15             GO TO CIR ROUTINE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   CIRERROR            GO CHECK NONZERO RETURN CODE
*  CIR OK -- GET QUALIFIERS
         L     R9,WKAR1PTR         POINT TO CIR RETURN LIST    @YL026YB
         LA    R9,F4(R9)           BUMP PTR TO 1ST ENTRY CODE  @YL026YB
TESTLIST CLI   F0(R9),NAMETEST     IS IT A DATA SET NAME
         BE    BLDLIST             YES, ADD IT TO LIST OF QUALIFIERS
         CLI   F0(R9),GDGNAME      IS IT A GENERATION DATA GROUP NAME
         BE    GENNAME             GO BUMP POINTER FOR GENERATION NAME
         CLI   F0(R9),LISTEND      IS IT THE END OF THIS LIST
         BE    NAMEFND             YES, SEE IF NAMES FOUND     @YL026YB
         B     CIRERROR            NONE OF THE ABOVE IS ERROR
GENNAME  LA    R9,L16(R9)          BUMP POINTER TO NEXT ENTRY
         B     TESTLIST            GO CHECK NEXT ENTRY
CHECKADD TM    DFPBCNTL,DFPBADD    ADD SPECIFIED QUALIFIER
         BNO   GOCIR               NO, GO GET QUALIFIERS
         CLI   ADDSW,SWON          HAS SPECIFIED QUALIFIER BEEN ADDED
         BE    GOODEND             YES, RETURN NAME
         MVI   ADDSW,SWON          NO, TURN ON ADD SWITCH
         LA    R7,F1(R7)           ADD 1 R7 FOR 2ND CALL TO CIR
         B     ADDNAME             GO ADD SPECIFIED QUALIFIER
MVMOPT   CLI   DFPBCODE,DFPB84     IS OPTION X'84'             @YL026YB
         BE    CATOPT              USER CAT. AND PASSWORD REQUIRED
         CLI   DFPBCODE,DFPB88     IS OPTION X'88'             @YL026YB
         BE    CATOPT              USER CAT. AND PSWD REQUIRED @YL026YB
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    CATOPT              USER CAT. AND PSWD REQUIRED @YL026YB
         XC    PASSPTR,PASSPTR     NO PASSWORD                 @YL026YB
         XC    CVOLIDPT,CVOLIDPT   NO USER CATALOG             @YL026YB
         BR    14                  RETURN                      @YL026YB
CATOPT   L     R2,DFPBCAT          POINT TO USER CAT. ADDR.    @YL026YB
         ST    R2,CVOLIDPT         STORE USER CAT. POINTER     @YL026YB
         L     R2,DFPBPSWD         POINT TO PASSWORD ADDR      @YL026YB
         ST    R2,PASSPTR          STORE PASSWORD POINTER      @YL026YB
         BR    14                  RETURN                      @YL026YB
*  BUILD QUALIFIED NAME
ONEQUAL  MVC   SCANBUFF(L8),QUALLIST MOVE QUALIFIER TO SCAN BUFFER
         BAL   R14,SCANNAME        GO TO SCAN ROUTINE
ADDQUAL  LA    R8,DSNAME           POINT TO DSNAME
         AH    R8,DSL              POINT PAST DSNAME
         MVI   F0(R8),PERIOD       INSERT PERIOD
         LA    R8,F1(R8)           POINT PAST PERIOD
         LA    R4,SCANBUFF         POINT TO THE QUALIFIER
         BCTR  R1,R0               DECREMENT FOR EXECUTE
         EX    R1,MOVEINST         QUALIFIER TO NAME
         TM    DFPBCNTL,DFPBRET    RETURN QUALIFIER
         BNO   SAVELNTH            NO, GO SAVE LENGTH
         L     R8,DFPBQUAL         POINT TO QUALIFIER BUFFER
         EX    R1,MOVEINST         MOVE QUALIFIER TO BUFFER
SAVELNTH AH    R1,DSL              ADD DSNAME LENGTH TO QUALIFIER
         LA    R1,F2(R1)           LENGTH PLUS 2 (PERIOD AND EXECUTE)
         STH   R1,DSL              SAVE TOTAL LENGTH
         B     GOODEND             SUCCESS
*  PUT QUALIFIER IN LIST
BLDLIST  MVC   F0(L8,R2),F1(R9)    MOVE DSNAME TO LIST
         LA    R11,F1(R11)         BUMP DSNAME COUNT
         LA    R2,L8(R2)           BUMP LIST POINTER
         CH    R11,MAXNAMES        IS LIST FULL
         BE    LISTFULL            SPACE PROBLEM
         LA    R9,L9(R9)           BUMP POINTER TO NEXT ENTRY
         B     TESTLIST            GO CHECK NEXT ENTRY
NAMEFND  SR    R5,R5               ZERO REG 5 FOR COMPARE      @YL026YB
         CLI   DFPBCODE,DFPB0C     IS CODE X'0C'               @YL026YB
         BE    ZEROCPR             YES,PROCESS X'0C'           @YL026YB
         CLI   DFPBCODE,DFPB8C     IS CODE X'8C'               @YL026YB
         BNE   NMEFOUND            NO, CHECK IF NAME FOUND
ZEROCPR  CR    R11,R5              IS QUALIFIER COUNT ZERO     @YL026YB
         BE    GETQUAL             YES, GO GET QUAL
         B     LISTFULL            NO, GO LIST QUALIFIERS
GETQUAL  LA    R2,M06              MESSAGE NUMBER 6
         LA    R10,DSNMESGL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
         LA    R2,M07              MESSAGE NUMBER 7
         LA    R10,DSNMESGL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         LA    R2,S05              SECOND LEVEL MESSAGE 5
         SR    R10,R10             NO INSERTION
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
         B     PRMPT               GO PROMT FOR QUALIFIER
QUALPRMT LA    R2,M05              MESSAGE NUMBER 5
         SR    R10,R10             NO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         LA    R2,S04              SECOND LEVEL MESSAGE 4
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
         B     PRMPT               GO PROMT FOR QUALIFIER
NMEFOUND CR    R11,R5              IS QUALIFIER COUNT ZERO
         BE    ERROR36             NO DSNAMES
         LA    R5,F1               R5 = 1
         CR    R11,R5              CHECK IF ONLY ONE QUALIFIER
         BE    ONEQUAL             IF SO, ADD IT
*  FINISHED WITH CIR
LISTFULL EQU   *                                               @VS07298
         SR    R0,R0               CLEAR REGISTER
         ST    R0,CIRADDR          INDICATE CIR HAS BEEN DELETED
         CLI   DFPBCODE,DFPB08     IS OPTION X'08'
         BE    ERROR32             IF YES, DO NOT PROMPT
         CLI   DFPBCODE,DFPB88     IS OPTION X'88'             @YL026YB
         BE    ERROR32             IF YES,DO NOT PROMPT        @YL026YB
         LA    R2,M01              MESSAGE NUMBER 1
         LA    R10,DSNMESGL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
*  NOW MOVE QUALIFIERS TO OUTBUFF.
         LA    R5,QUALLIST         INITIALIZE REG 5 TO FIRST QUALIFIER
         STH   R11,QUALCNT         SAVE QUALIFIER COUNT
SETUP    LA    R8,F4               FOUR QUALIFIERS PER LINE
         LA    R4,OUTBUFF          POINT TO BUFFER
         SR    R1,R1               ZERO REGISTER
LOOP     MVC   F0(L8,R4),F0(R5)    MOVE QUALIFIER TO BUFFER
         MVC   L8(F2,R4),BLANKS    MOVE BLANKS TO BUFFER
         LA    R1,L10(R1)          BUMP MESSAGE LENGTH
         LA    R4,L10(R4)          POINT PAST QUALIFIER AND BLANKS
         LA    R5,L8(R5)           POINT TO NEXT QUALIFIER
         BCT   R11,BUFCNTRL        ARE THERE MORE QUALIFIERS
         B     WRITE               WRITE LINE
BUFCNTRL BCT   R8,LOOP             IS BUFFER FULL (4 QUALIFIERS)
WRITE    LA    R1,F4(R1)           ADD HEADER LENGTH
         STH   R1,OUTBUFFL         MESSAGE LENGTH TO BUFFER
         LA    R2,M12              MESSAGE NUMBER 12
         LA    R10,OUTBUFFL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUT             GO PUT LINE TO TERMINAL
         LTR   R11,R11             ARE THERE MORE QUALIFIERS
         BNZ   SETUP               IF SO, GO FILL BUFFER AGAIN
*  NOW ALL QUALIFIERS HAVE BEEN LISTED, PROMPT USER FOR HIS CHOICE
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    QUALPRMT            GO PROMPT FOR QUALIFIER
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    QUALPRMT            GO PROMPT FOR QUALIFIER     @YL026YB
         LA    R2,M02              MESSAGE NUMBER 2
         SR    R10,R10             NO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         LA    R2,S01              SECOND LEVEL MESSAGE 1
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
PRMPT    BAL   R9,TPUTGET          PROMPT TERMINAL USER
*  NOW CHECK USERS RESPONSE
RESPONSE LA    R9,PROMPT           POINT TO PUTGET PARAMETER BLOCK
         L     R9,PGPBIBUF-PGPB(R9) LOAD POINTER TO INPUT BUFFER
         LA    R1,CSPLPARM         POINT TO CSPL
         ST    R9,CSPLCBUF-CSPL(R1) RESPONSE TO CSPL
         LINK  EP=IKJSCAN          LINK TO COMMAND SCAN ROUTINE
         LA    R11,CSOAAREA        POINT TO COMMAND SCAN OUTPUT AREA
         USING CSOA,R11            ADDRESSABILITY CSOA
         MVC   COMFIELD(L8),UPERCASE BLANK COMPARE BUFFER
         CLI   CSOAFLG,CSOAVWP     IS IT VALID WITH PARAMETERS
         BE    GOODREP             YES, GOOD RESPONSE
         CLI   CSOAFLG,CSOAVNP     IS IT VALID WITHOUT PARAMETERS
         BNE   BADREP              NO, BAD RESPONSE
GOODREP  L     R2,CSOACNM          POINT TO RESPONSE
         LH    R8,CSOALNM          LENGTH OF RESPONSE
         BCTR  R8,R0               DECREMENT FOR EXECUTE
         EX    R8,MOVERPLY         USER'S RESPONSE TO COMPARE BUFFER
         LA    R8,F5(R8)           4 FOR HEADER AND 1 FOR EXECUTE
         STH   R8,COMFLDL          LENGTH FOR MESSAGE INSERTION
         DROP  R11                 CSOA NO LONGER NEEDED
         BAL   R14,FREEBUFF        GO FREE BUFFER
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    OKNME               NAME IS OK
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    OKNME               NAME IS OK                  @YL026YB
         LH    R11,QUALCNT         NUMBER OF QUALIFIERS
*  INITIALIZE FOR COMPARISON OF RESPONSE TO LIST.
         LR    R0,R11              NUMBER OF QUALIFIERS IN REG 0
         SR    R11,R11             CLEAR REGISTER
         LA    R2,QUALLIST         POINT TO QUALLIST
COMPARE  CLC   COMFIELD(L8),F0(R2) COMPARE QUALIFIER TO LIST
         BE    OKNAME              RESPONSE IS FROM LIST
         LA    R11,F1(R11)         NUMBER OF QUALIFIERS COMPARED
         CR    R0,R11              ARE THERE MORE QUALIFIERS IN LIST
         BE    UNLISTED            RESPONSE NOT FROM LIST
         LA    R2,L8(R2)           POINT TO NEXT QUALIFIER IN LIST
         B     COMPARE             GO COMPARE NEXT CHARACTER
OKNAME   MVC   SCANBUFF(L8),F0(R2) USER RESPONSE TO SCANBUFFER
GOSCAN   BAL   R14,SCANNAME        GO TO SCAN ROUTINE
         B     ADDQUAL             NOW ADD QUALIFIER
BADREP   LH    R8,F0(R9)           LENGTH OF INPUT BUFFER
         LA    R1,FOUR             R1 = 4
         SR    R8,R1               LESS HEADER LENGTH
         LTR   R8,R8               TEST LENGTH
         BZ    BADREPLY            ZERO LENGTH IS BAD RESPONSE
         LA    R1,L8               R1 = 8
         CR    R8,R1               IS LENGTH GREATER THAN 8
         BNH   OKREPLTH            LESS THAN 8 IS OK
         LR    R8,R1               SET MAXIMUM LENGTH = 8
OKREPLTH BCTR  R8,R0               DECREMENT FOR EXECUTE
         LH    R1,F2(R9)           OFFSET TO RESPONSE
         LA    R2,F4(R1,R9)        POINT TO RESPONSE
         EX    R8,MOVERPLY         MOVE RESPONSE
         BAL   R14,FREEBUFF        GO FREE BUFFER
         LA    R8,F1(R8)           ONE FROM EXECUTE
BADREPLY LA    R8,F4(R8)           4 FOR HEADER
         STH   R8,COMFLDL          LENGTH FOR MESSAGE INSERTION
UNLISTED LA    R2,M03              MESSAGE NUMBER 3
         LA    R10,COMFLDL         POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
         BAL   R11,MESG4           GO GET MESSAGE 4
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    BADRESP             INVALID RESPONSE
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    BADRESP             INVALID RESPONSE            @YL026YB
         LA    R2,S02              SECOND LEVEL MESSAGE 2
         SR    R10,R10             NO INSERTION
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
         B     PRMPT               GO PROMPT USER
MESG4    LA    R2,M04              MESSAGE NUMBER 4
         SR    R10,R10             NO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BR    R11                 RETURN
MESG10   LA    R2,M10              MESSAGE NUMBER 10
         LA    R10,DSNMESGL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BR    R11                 RETURN
REUSE    LA    R2,M08              MESSAGE NUMBER 8
         LA    R10,DSNMESGL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
         LA    R2,M09              MESSAGE NUMBER 9
         SR    R10,R10             NO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUTGET          GO PROMPT
         B     OKMSG               OK TO USE DATA SET
OKNME    MVC   SCANBUFF(F8),COMFIELD MOVE NAME TO SCAN BUFFER
         B     GOSCAN              GO SCAN NAME
BADRESP  LA    R2,S03              SECOND LEVEL MESSAGE 3
         SR    R10,R10             NO INSERTION
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
         B     PRMPT               GO PROMPT USER
*  NOW FREE BUFFER FROM PUTGET
FREEBUFF LH    R11,F0(R9)          GET BUFFER LENGTH
         ST    R11,WORKWORD        SAVE BUFFER LENGTH
         MVI   WORKWORD,SPN        SUBPOOL NUMBER IN HIGH ORDER BYTE
         L     R0,WORKWORD         SUBPOOL NUMBER AND LENGTH
         LR    R1,R9               ADDRESS OF BUFFER
         FREEMAIN R,LV=(0),A=(1)   FREE BUFFER
         BR    R14                 RETURN
*  THIS SECTION DETERMINES THE LENGTH OF NAMES. THE NAME IS IN SCANBUFF
*  AND THE MAXLENGTH IS 8. THE NINTH BYTE IS BLANK. SCAN STARTS AT
*  FIRST CHARACTER AND ENDS WHEN A BLANK IS FOUND.  THE LENGTH IS
*  RETURNED IN REGISTER 1.
SCANNAME SR    R1,R1               CLEAR REGISTER
         LA    R8,SCANBUFF         ADDRESS OF SCAN BUFFER
BLANKTST CLI   F0(R8),BLANK        IS THIS CHARACTER A BLANK
         BCR   EQ,R14              BLANK ENDS SCAN, RETURN
         LA    R8,F1(R8)           POINT TO NEXT CHARACTER
         LA    R1,F1(R1)           BUMP LENGTH COUNT
         B     BLANKTST            GO CHECK NEXT CHARACTER
ENDOFSCN BR    R14                 RETURN
*  QUALIFIER SPECIFIED, ADD IT TO DSNAME
ADDNAME  MVC   SCANBUFF(L8),F0(R5) MOVE QUALIFIER TO SCAN BUFFER
         BAL   R14,SCANNAME        GO TO SCAN ROUTINE
         LTR   R1,R1               R1 CONTAINS QUALIFIER LENGTH
         BZ    ERROR28             IF ZERO LENGTH, ERROR
         LH    R9,DSL              LENGTH OF DSNAME
         AR    R9,R1               ADD LENGTH OF QUALIFIER
         LR    R4,R5               POINT R4 TO QUALIFIER
         LA    R8,DSNAME           POINT TO DSNAME
         AH    R8,DSL              ADD LENGTH, POINT PAST DSNAME
         TM    SWITCH,SWON         TEST SWITCH, WAS LENGTH ZERO
         BO    NOPERIOD            YES, DO NOT ADD PERIOD
         LA    R9,F1(R9)           ADD ONE FOR PERIOD
         MVI   F0(R8),PERIOD       MOVE IN A PERIOD
         LA    R8,F1(R8)           POINT PAST THE PERIOD
NOPERIOD CH    R9,DSMAXSZE         COMPARE TOTAL TO 44
         BH    LENTHERR            ERROR, LENGTH GT 44
         STH   R9,DSL              SAVE TOTAL LENGTH
         BCTR  R1,R0               DECREMENT LENGTH FOR EXECUTE
         EX    R1,MOVEINST         MOVE QUALIFIER TO NAME
         MVC   F0(L46,R3),DSL      MOVE QUALIFIED NAME TO USER'S AREA
         B     CALCIR              YES, CIR ALREADY LOADED     @YL026YB
*
*  THIS IS THE MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE MESSAGE CSECT
*  TO OBTAIN THE ADDRESS OF THE MESSAGE SEGMENT AND THE OFFSET AT WHICH
*  ANY INSERTIONS WILL BE MADE.
*  AT ENTRY R2 CONTAINS MESSAGE NUMBER AND R10 CONTAINS ADDRESS OF THE
*  INSERTION.  R14 IS THE RETURN REGISTER  (R10 = 0 IS NO INSERTION)
*
MSGBUILD SR    R3,R3               ZERO REGISTER
         ST    R3,OUTAREA1         SET POINTER INDICATING ONE MESSAGE
         MVI   OUTAREA1,ENDTEST    FLAG END OF MESSAGE CHAIN
         L     R1,VCONMSG          ADDRESS OF MESSAGE BRANCH TABLE
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY
         ST    R3,WORKWORD         SAVE THIS ENTRY
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE
         ST    R3,OUTPUT11         MESSAGE ADDRESS TO OUTPUT LIST
         LTR   R10,R10             IS THERE AN INSERTION
         BZ    NOINSRT1            NO, GO SET SEGMENT COUNT TO 1
         SR    R2,R2               ZERO REGISTER
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD
         ST    R10,OUTPUT12        INSERTION ADDRESS TO OUTPUT LIST
         LA    R2,TWO              2 SEGMENTS
SETCNT1  ST    R2,OUTCNT1          SET SEGMENT COUNT
         BR    R14                 RETURN
NOINSRT1 LA    R2,ONE              ONE SEGMENT
         B     SETCNT1             GO SET SEGMENT COUNT
*
*  THIS IS THE SECOND LEVEL MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE
*  MESSAGE CSECT TO OBTAIN THE ADDRESS OF THE SECOND LEVEL MESSAGE AND
*  THE OFFSET AT WHICH ANY INSERTIONS WILL BE MADE.
*  AT ENTRY R2 CONTAINS SECOND LEVEL MESSAGE NUMBER AND R10 CONTAINS
*  ADDRESS OF THE INSERTION.  R14 IS THE RETURN REGISTER.  (R10 = 0 IS
*  NO INSERTION
*
SMSGBLD  SR    R3,R3               ZERO REGISTER
         ST    R3,OUTAREA2         SET POINTER INDICATING LAST MESSAGE
         MVI   OUTAREA2,ENDTEST    FLAG END OF MESSAGE CHAIN
         LA    R3,OUTAREA2         POINT TO SECOND LEVEL MESSAGE CHAIN
         ST    R3,OUTAREA1         CHAIN SECOND LEVEL TO FIRST LEVEL
         L     R1,VCONSMSG         SECOND LEVEL MESSAGE BRANCH TABLE
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY
         ST    R3,WORKWORD         SAVE THIS ENTRY
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE
         ST    R3,OUTPUT21         MESSAGE ADDRESS TO OUTPUT LIST
         LTR   R10,R10             IS THERE AN INSERTION
         BZ    NOINSRT2            NO, GO SET SEGMENT COUNT TO 1
         SR    R2,R2               ZERO REGISTER
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD
         ST    R10,OUTPUT22        INSERTION ADDRESS TO OUTPUT LIST
         LA    R2,TWO              2 SEGMENTS
SETCNT2  ST    R2,OUTCNT2          SET SEGMENT COUNT
         BR    R14                 RETURN
NOINSRT2 LA    R2,ONE              ONE SEGMENT
         B     SETCNT2             GO SET SEGMENT COUNT
*  CONVERT RETURN CODE, SUPPRESS LEADING ZEROS AND MOVE TO INSERTION
*  BUFFER.  INPUT - R15 CONTAINS RETURN CODE TO BE CONVERTED
*           OUTPUT - R10 POINTS TO INSERTION BUFFER
*  R2 IS THE RETURN REGISTER
CONVRTRC CVD   R15,UNPACK          CONVERT TO PACKED DECIMAL FORMAT
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN
*  SUPPRESS LEADING ZEROS IN RETURN CODE
         LA    R4,COUNT            POINT TO COUNT BUFFER
         LA    R5,F7               R5 = 7
SUPPZERO CLI   F0(R4),FOXZERO      IS THIS LEADING ZERO
         BNE   NOTZERO             NO, GO MOVE RETURN CODE
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT
         BCT   R5,SUPPZERO         GO CHECK NEXT DIGIT
NOTZERO  LA    R5,ENDCOUNT         POINT PAST COUNT BUFFER
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN R5
         BCTR  R5,R0               DECREMENT FOR EXECUTE
         LA    R8,RCMESG           POINT TO RETURN CODE BUFFER
         EX    R5,MOVEINST         MOVE RETURN CODE TO INSERTION BUFFER
         LA    R5,F5(R5)           4 FOR HEADER AND 1 FOR EXECUTE
         STH   R5,RCMESGL          LENGTH OF RETURN CODE INSERTION
         LA    R10,RCMESGL         POINT TO INSERTION BUFFER
         BR    R2                  RETURN
*  THIS ROUTINE CHECKS FOR ATTENTION INTERRUPT
TESTATTN LA    R4,ECBADDR          POINT TO CP'S ECB
         TM    F0(R4),MASK1        IS ECB POSTED (DID ATTENTION OCCUR)
         BO    INTERUPT            YES, SET RC, CLEANUP AND RETURN
         BR    R14                 RETURN
*  THIS ROUTINE WRITES A LINE TO THE TERMINAL.
*  REG 9 IS THE RETURN REGISTER.
TPUT     LA    R1,IOPARM           POINT TO IO PARAMETERS
         PUTLINE PARM=PUT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),        X
               TERMPUT=(EDIT,WAIT) WRITE A LINE
         LTR   R15,R15             TEST RETURN CODE
         BZ    OKPUT               OK, RETURN
         LA    R4,RC4              R4 = 4
TESTRC   CR    R15,R4              DID AN INTERUPT OCCUR
         BE    INTERUPT            HANDLE INTERUPT
         BAL   R11,MESG10          GO GET MESSAGE 10
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION
         LA    R2,S06              SECOND LEVEL MESSAGE 6
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
         B     ERROR4              GO SET RETURN CODE
OKPUT    BR    R9                  RETURN
*  THIS  ROUTINE PROMPTS THE TERMINAL USER.
*  REG 9 IS THE RETURN REGISTER
TPUTGET  LA    R1,IOPARM           POINT TO IO PARAMETERS
         PUTGET PARM=PROMPT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),      X
               TERMPUT=(ASIS,WAIT),TERMGET=(EDIT,WAIT) PROMPT
         LTR   R15,R15             TEST RETURN CODE
         BZ    OKPUT               OK, RETURN
         LA    R4,RC4              UNABLE TO PROMPT RETURN CODE
         CR    R15,R4              UNABLE TO PROMPT
         BE    CANTPRMT            YES, CAN NOT PROMPT
         LA    R4,RC8              R4 = 8
         CR    R15,R4              DID ATTENTION OCCUR
         BE    INTERUPT            YES, PROCESS INTERRUPT
         BAL   R11,MESG10          GO GET MESSAGE 10
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION
         LA    R2,S07              SECOND LEVEL MESSAGE 7
         BAL   R14,SMSGBLD         GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
         B     ERROR4              GO SET RETURN CODE
GOODEND  L     R3,DFPBDSN          POINT TO DSNAME BUFFER
         MVC   F0(L46,R3),DSL      MOVE QUALIFIED NAME TO USER'S AREA
OKMSG    SR    R15,R15             SET RETURN CODE TO 0
         B     CLEANUP             GO RESTORE
LENTHERR LA    R15,RC8             SET RETURN CODE TO 8
         B     CLEANUP             GO RESTORE
CANTPRMT LA    R2,M11              MESSAGE NUMBER 11
         LA    R10,DSNMESGL        POINT TO INSERTION
         BAL   R14,MSGBUILD        GO BUILD MESSAGE
         BAL   R9,TPUT             GO WRITE MESSAGE
ERROR4   LA    R15,RC4             SET RETURN CODE TO 4
         B     CLEANUP             GO RESTORE
CIRERROR MVC   DFPBLORC(F1),CIRLOCRC SAVE LOCATE RETURN CODE
         CLI   CIRLOCRC,LOCMSK8    CHECK FOR LOCATE RC = 8
         BE    ERROR20             YES, SET RETURN CODE = 20
         CLI   CIRLOCRC,LOCMSK16    CHECK FOR LOCATE RC = 16
         BE    ERROR16             YES, SET RETURN CODE = 16
         SR    R15,R15             CLEAR REGISTER
         IC    R15,CIRLOCRC        LOAD LOCATE RETURN CODE
         BAL   R11,MESG10          GO GET MESSAGE 10
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION
         LA    R2,S08              SECOND LEVEL MESSAGE 8
         BAL   R9,TPUT             GO WRITE MESSAGE
ERROR12  LA    R15,RC12            SET RETURN CODE TO 12
         B     CLEANUP             GO RESTORE
ERROR16  LA    R15,RC16            SET RETURN CODE TO 16
         B     CLEANUP             GO RESTORE
ERROR20  LA    R15,RC20            SET RETURN CODE TO 20
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'
         BE    GOODEND             YES, NAME NOT FOUND IS OKAY
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB
         BE    GOODEND             YES,NAME NOT FOUND IS OKAY  @YL026YB
         B     CLEANUP             GO RESTORE
ERROR28  LA    R15,RC28            SET RETURN CODE TO 28
         B     CLEANUP             GO RESTORE
ERROR32  LA    R15,RC32            SET RETURN CODE = 32
         B     CLEANUP             GO RESTORE
ERROR36  LA    R15,RC36            SET RETURN CODE TO 36
         B     CLEANUP             GO RESTORE
INTERUPT LA    R15,RC24            SET RETURN CODE = 24
         B     WRAPUP              GO FREE CORE AND LOAD MODULES
*  CLEAN UP ROUTINE
CLEANUP  BAL   R14,TESTATTN        CHECK FOR INTERRUPT
WRAPUP   LR    R2,R15              SAVE RETURN CODE IN REGISTER 2
         LH    R0,MINMAX           POINT TO GETMAIN PARAMETER  @YL026YB
         O     R0,SUBPL1           SET SUBPOOL NUMBER          @YL026YB
         L     R1,WKAR1PTR         CIR WORKAREA                @YL026YB
         FREEMAIN R,LV=(0),A=(1)         FREE CORE             @YL026YB
         L     R3,F4(R13)          REGISTER 3 POINTS TO CALLER'S REGS
         LR    R1,R13              REGISTER 1 = CORE TO BE FREED
         FREEMAIN R,LV=CORE,A=(1),SP=SPN  FREE CORE
         LR    R15,R2              RC BACK TO REGISTER 15
         LR    R13,R3              REGISTER 13 POINTS TO CALLER'S REGS
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN
         EJECT
*  CONSTANTS
         DS    0H                  HALF WORD BOUNDRY           @YL026YB
MINMAX   DC    H'5000'             MAXIMUM AMOUNT FOR WORKAREA @YL026YB
BLANKS   DC    C'  '               TWO BLANKS FOR MESSAGE SPACING
MAXNAMES DC    H'25'               MAXIMUM QUALIFIERS SUPPORTED
DSMAXSZE DC    H'44'               MAXIMUM DATA SET LENGTH
UNO      DC    H'1'                NUMBER OF CALLS TO CIR
         DS    0F                  ALIGN ON FULLWORD BOUNDRY   @YL026YB
SUBPL1   DC    X'01000000'         SUBPOOL NUMBER              @YL026YB
MOVEINST MVC   F0(F0,R8),F0(R4)    MOVE INSTRUCTION FOR EXECUTE
MOVEID   MVC   F0(F0,R8),F0(R2)    USED TO MOVE USERID
MOVERPLY MVC   COMFIELD(F0),F0(R2) USED TO MOVE USER'S RESPONSE
DSNINSRT MVC   DSNMESG(F0),F2(R3)  MOVE DSNAME TO INSERTION BUFFER
UPERCASE DC    CL8' '              USED TO CONVERT RESPONSE
VCONMSG  DC    V(IKJEHMSG)         ENTRY MESSAGE CSECT 1ST LEVEL
VCONSMSG DC    V(IKJEHSMG)         ENTRY MESSAGE CSECT 2ND LEVEL
VCONCIR  DC    V(IKJEHCIR)         ENTRY MESSAGE FOR CIR       @YL026YB
PUTL     PUTLINE  MF=L             LIST FORM OF PUTLINE
PUTLEND  EQU   *                   END OF PUTGET EXPANSION
PRMPT1   PUTGET  MF=L              LIST FORM OF PUTGET
PRMPTEND EQU   *                   END OF PUTGET EXPANSION
         EJECT
*  MAPPING MACROS
         SPACE
         IKJDFPL
         IKJDFPB
         IKJPSCB
         IKJUPT                                                @YL026YB
         IKJCSPL
LCSPL    EQU   *-CSPL              LENGTH OF CSPL
         IKJCSOA
LCSOA    EQU   *-CSOA              LENGTH OF CSOA
         IKJIOPL
LIOPL    EQU   *-IOPL              LENGTH OF IOPL
         IKJPGPB
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F                 REGISTER SAVE AREA
UNPACK   DS    D                   WORKAREA FOR CVD
COUNT    DS    D                   WORKAREA FOR UNPACK
         ORG   COUNT+F7            BACK TO LAST BYTE OF COUNT FIELD
SIGNBYTE DS    CL1                 LABEL SIGN BYTE
         ORG
ENDCOUNT EQU   *                   END OF COUNT FIELD
CIRADDR  DS    F                   ADDRESS OF CIR
WORKWORD DS    F                   WORD BOUNDRY WORK WORD
FLAGWORD DS    F                   FLAG WORD FOR COMMAND SCAN
ECBADDR  DS    F                   SAVE ECB ADDRESS HERE
UPTSAV   DS    F                   SAVE UPT ADDRESS            @YL026YB
*  CIR PARAMETER LIST
CIRPARM  DS    0F                  CIR PRARMETER LIST          @YL026YB
CIROPT   DS    CL1                 CIR OPTION                  @YL026YB
         DS    CL2                 RESERVED                    @YL026YB
CIRLOCRC DS    CL1                 LOCATE RETURN CODE          @YL026YB
NAMETTR  DS    F                   POINTER TO DSNAME OR TTR
CVOLIDPT DS    F                   POINTER TO CVOLID
WKAR1PTR DS    F                   POINTER TO FIRST CIR WORKAREA
WKAR2PTR DS    F                   POINTER TO SECOND CIR WORKAREA
PASSPTR  DS    F                   POINTER TO PASSWORD         @YL026YB
*  END OF CIR PARAMETER LIST
WKAREA2  DS    18F                 SECOND CIR WORKAREA
QUALLIST DS    50F                 SPACE TO BUILD LIST OF QUALIFIERS
PUT      PUTLINE MF=L              LIST FORM OF PUTLINE
PROMPT   PUTGET MF=L               LIST FORM OF PUTGET
         DS    0F                  ALIGN WORD BOUNDRY
IOPARM   DS    (LIOPL)X            SPACE FOR I/O PARAMETER LIST
         DS    0F                  ALIGN WORD BOUNDRY
CSPLPARM DS    (LCSPL)X            SPACE FOR COMMAND SCAN PARM LIST
         DS    0F                  ALIGN WORD BOUNDRY
CSOAAREA DS    (LCSOA)X            SPACE FOR COMMAND SCAN OUTPUT AREA
*  THE FOLLOWING IS RESERVED SPACE FOR OUTPUT CHAINS
OUTAREA1 DS    F                   MESSAGE CHAIN POINTER
OUTCNT1  DS    F                   MESSAGE SEGMENT COUNT
OUTPUT11 DS    F                   POINTER TO MESSAGE SEGMENT
OUTPUT12 DS    F                   POINTER TO MESSAGE INSERTION
OUTAREA2 DS    F                   MESSAGE CHAIN POINTER
OUTCNT2  DS    F                   MESSAGE SEGMENT COUNT
OUTPUT21 DS    F                   POINTER TO MESSAGE SEGMENT
OUTPUT22 DS    F                   POINTER TO MESSAGE INSERTION
*  DATA SET NAME FOR MESSAGES STORED HERE
DSNMESGL DS    H                   DATA SET LENGTH
DSNMESGO DS    H                   OFFSET
DSNMESG  DS    CL52                DATA SET NAME
*  RETURN CODES FOR MESSAGES STORED HERE
RCMESGL  DS    H                   RETURN CODE LENGTH
RCMESGO  DS    H                   OFFSET
RCMESG   DS    CL4                 RETURN CODE
*  OUTPUT BUFFER FOR QUALIFIERS
OUTBUFFL DS    H                   LENGTH OF OUTBUFF
OUTBUFFO DS    H                   OFFSET
OUTBUFF  DS    CL40                OUTBUFF
*  COMPARE FIELD FOR USER'S RESPONSE
COMFLDL  DS    H                   LENGTH OF RESPONSE
COMFLDO  DS    H                   OFFSET OF RESPONSE
COMFIELD DS    CL8                 COMPARE BUFFER
CVOLID   DS    CL44                CONTROL VOLUME ID           @YL026YB
PASSWKD  DS    CL8                 PASSWORD BUFFER             @YL026YB
SCANBUFF DS    CL9                 SCAN BUFFER
SWITCH   DS    CL1                 SET ON WHEN DSLENGTH IS ZERO
TESTBYTE DS    CL1                 BYTE FOR TESTING
ADDSW    DS    CL1                 INDICATE SPECIFIED QUALIFIER ADDED
OPTSW    DS    CL1                 INDICATE NO CORE AVAILABLE  @YL026YB
         DS    0H                  ALIGN HALF WORD BOUNDRY
DSL      DS    CL2                 DATA SET LENGTH
DSNAME   DS    CL44                DATA SET NAME BUFFER
QUALCNT  DS    H                   NUMBER OF QUALIFIERS FOUND
CORE     EQU   *-WORKAREA          SIZE OF GETMAIN AREA
         EJECT
IKJEHMSG CSECT
         ENTRY IKJEHSMG
***********************************************************************
*                                                                     *
*  THIS CONTROL SECTION CONTAINS THE MESSAGE TEXT (BOTH FIRST AND     *
*  SECOND LEVEL).  IT CONTAINS A BRANCH TABLE FOR FIRST LEVEL MESSAGES*
*  AND A BRANCH TABLE FOR SECOND LEVEL MESSAGES.  EACH BRANCH TABLE   *
*  ENTRY IS COMPOSED OF A ONE BYTE OFFSET FIELD FOR MESSAGE INSERTIONS*
*  AND A THREE BYTE ADDRESS OF THE MESSAGE.  THE MESSAGE BUILDER      *
*  ROUTINES COMBINE THE ADDRESS OF THE CONTROL SECTION AND THE ADDRESS*
*  OF THE MESSAGE TO GET THE TRUE ADDRESS OF THE MESSAGE.  THE OFFSET *
*  IS PLACED IN THE INSERTION SEGMENT.                                *
*  EACH MESSAGE IS COMPOSED OF A 4 BYTE HEADER (2 BYTE LENGTH OF      *
*  MESSAGE INCLUDING HEADER LENGTH AND A 2 BYTE OFFSET FIELD)         *
*  FOLLOWED BY THE MESSAGE TEXT.                                      *
*                                                                     *
***********************************************************************
         SPACE
*  EQUATES USED IN THIS CONTROL SECTION
HDR      EQU   4                   HEADER LENGTH (2 BYTES EACH, LENGTH
*                                  AND OFFSET FIELDS) EACH SEGMENT
OFST     EQU   0                   INSERTION OFFSET 1ST MESSAGE SEGMENT
*  OFFSETS FOR FIRST LEVEL MESSAGE INSERTIONS
OFST01   EQU   34                  INSERTION OFFSET MESSAGE 01
OFST02   EQU   0                   INSERTION OFFSET MESSAGE 02
OFST03   EQU   28                  INSERTION OFFSET MESSAGE 03
OFST04   EQU   0                   INSERTION OFFSET MESSAGE 04
OFST05   EQU   0                   INSERTION OFFSET MESSAGE 05
OFST06   EQU   24                  INSERTION OFFSET MESSAGE 06
OFST07   EQU   30                  INSERTION OFFSET MESSAGE 07
OFST08   EQU   19                  INSERTION OFFSET MESSAGE 08
OFST09   EQU   0                   INSERTION OFFSET MESSAGE 09
OFST10   EQU   24                  INSERTION OFFSET MESSAGE 10
OFST11   EQU   24                  INSERTION OFFSET MESSAGE 11
OFST12   EQU   10                  INSERTION OFFSET MESSAGE 12
*  OFFSETS FOR SECOND LEVEL MESSAGE INSERTIONS
*  NOTE-  THERE ARE CURRENTLY NO INSERTIONS IN MOST SECOND LEVEL
*  MESSAGES.  A COMMON OFFSET OF ZERO IS USED.
OFSTSMSG EQU   0                   INSERTION OFFSET 2ND LEVEL MESSAGES
OFSTSM06 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 06
OFSTSM07 EQU   28                  INSERTION OFFSET SECOND LEVEL MSG 07
OFSTSM08 EQU   28                  INSERTION OFFSET SECOND LEVEL MSG 08
OFSTSM09 EQU   29                  INSERT. OFFST 2ND LVL MSG 9 @YL026YB
         SPACE
AMSG01   DC    AL1(OFST01)         INSERTION OFFSET
         DC    AL3(LMSG01)         MESSAGE ADDRESS
AMSG02   DC    AL1(OFST02)         INSERTION OFFSET
         DC    AL3(LMSG02)         MESSAGE ADDRESS
AMSG03   DC    AL1(OFST03)         INSERTION OFFSET
         DC    AL3(LMSG03)         MESSAGE ADDRESS
AMSG04   DC    AL1(OFST04)         INSERTION OFFSET
         DC    AL3(LMSG04)         MESSAGE ADDRESS
AMSG05   DC    AL1(OFST05)         INSERTION OFFSET
         DC    AL3(LMSG05)         MESSAGE ADDRESS
AMSG06   DC    AL1(OFST06)         INSERTION OFFSET
         DC    AL3(LMSG06)         MESSAGE ADDRESS
AMSG07   DC    AL1(OFST07)         INSERTION OFFSET
         DC    AL3(LMSG07)         MESSAGE ADDRESS
AMSG08   DC    AL1(OFST08)         INSERTION OFFSET
         DC    AL3(LMSG08)         MESSAGE ADDRESS
AMSG09   DC    AL1(OFST09)         INSERTION OFFSET
         DC    AL3(LMSG09)         MESSAGE ADDRESS
AMSG10   DC    AL1(OFST10)         INSERTION OFFSET
         DC    AL3(LMSG10)         MESSAGE ADDRESS
AMSG11   DC    AL1(OFST11)         INSERTION OFFSET
         DC    AL3(LMSG11)         MESSAGE ADDRESS
AMSG12   DC    AL1(OFST12)         INSERTION OFFSET
         DC    AL3(LMSG12)         MESSAGE ADDRESS
*  FIRST LEVEL MESSAGES
LMSG01   DC    AL2(L'MSG01+HDR)
         DC    AL2(OFST)
MSG01    DC    C'IKJ58600I QUALIFIERS FOR DATA SET  ARE'
LMSG02   DC    AL2(L'MSG02+HDR)
         DC    AL2(OFST)
MSG02    DC    C'IKJ58601A ENTER QUALIFIER-'
LMSG03   DC    AL2(L'MSG03+HDR)
         DC    AL2(OFST)
MSG03    DC    C'IKJ58602I INVALID QUALIFIER '
LMSG04   DC    AL2(L'MSG04+HDR)
         DC    AL2(OFST)
MSG04    DC    C'IKJ58603A REENTER-'
LMSG05   DC    AL2(L'MSG05+HDR)
         DC    AL2(OFST)
MSG05    DC    C'IKJ58604A ENTER OLD OR NEW QUALIFIER-'
LMSG06   DC    AL2(L'MSG06+HDR)
         DC    AL2(OFST)
MSG06    DC    C'IKJ58605I DATA SET NAME  NOT COMPLETE'
LMSG07   DC    AL2(L'MSG07+HDR)
         DC    AL2(OFST)
MSG07    DC    C'IKJ58606A ENTER QUALIFIER FOR -'
LMSG08   DC    AL2(L'MSG08+HDR)
         DC    AL2(OFST)
MSG08    DC    C'IKJ58607I DATA SET  IS ABOUT TO BE REUSED'
LMSG09   DC    AL2(L'MSG09+HDR)
         DC    AL2(OFST)
MSG09    DC    C'IKJ58608A ENTER CARRIER RETURN TO CONTINUE OR ATTENTIOX
               N TO RESPECIFY COMMAND-'
LMSG10   DC    AL2(L'MSG10+HDR)
         DC    AL2(OFST)
MSG10    DC    C'IKJ58609I DATA SET NAME  CANNOT BE RESOLVED, SYSTEM ERX
               ROR+'
LMSG11   DC    AL2(L'MSG11+HDR)
         DC    AL2(OFST)
MSG11    DC    C'IKJ58610I DATA SET NAME  NOT FULLY QUALIFIED'
LMSG12   DC    AL2(L'MSG12+HDR)
         DC    AL2(OFST)
MSG12    DC    C'IKJ58600I '
*  SECOND LEVEL MESSAGE BRANCH TABLE
IKJEHSMG DS    0F                  SECOND LEVEL MESSAGE BRANCH TABLE
ASMSG01  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG01)        MESSAGE ADDRESS
ASMSG02  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG02)        MESSAGE ADDRESS
ASMSG03  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG03)        MESSAGE ADDRESS
ASMSG04  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG04)        MESSAGE ADDRESS
ASMSG05  DC    AL1(OFSTSMSG)       INSERTION OFFSET
         DC    AL3(LSMSG05)        MESSAGE ADDRESS
ASMSG06  DC    AL1(OFSTSM06)       INSERTION OFFSET
         DC    AL3(LSMSG06)        MESSAGE ADDRESS
ASMSG07  DC    AL1(OFSTSM07)       INSERTION OFFSET
         DC    AL3(LSMSG07)        MESSAGE ADDRESS
ASMSG08  DC    AL1(OFSTSM08)       INSERTION OFFSET
         DC    AL3(LSMSG08)        MESSAGE ADDRESS
ASMSG09  DC    AL1(OFSTSM09)       INSERTION OFFSET            @YL026YB
         DC    AL3(LSMSG09)        MESSAGE ADDRESS             @YL026YB
*  SECOND LEVEL MESSAGES
LSMSG01  DC    AL2(L'SMSG01+HDR)
         DC    AL2(OFST)
SMSG01   DC    C'IKJ58601A DATA SET NAME WAS NOT FULLY QUALIFIED.  ENTEX
               R DESIRED QUALIFIER FROM ABOVE LIST-'
LSMSG02  DC    AL2(L'SMSG02+HDR)
         DC    AL2(OFST)
SMSG02   DC    C'IKJ58603A ONLY QUALIFIERS LISTED ARE VALID QUALIFIERS X
               FOR THIS DATA SET NAME.  REENTER DESIRED QUALIFIER FROM X
               ABOVE LIST-'
LSMSG03  DC    AL2(L'SMSG03+HDR)
         DC    AL2(OFST)
SMSG03   DC    C'IKJ58603A QUALIFIERS CONTAIN FROM 1 TO 8 ALPHANUMERIC X
               CHARACTERS.  REENTER-'
LSMSG04  DC    AL2(L'SMSG04+HDR)
         DC    AL2(OFST)
SMSG04   DC    C'IKJ58604A DATA SET NAME WAS NOT FULLY QUALIFIED.  ENTEX
               R NEW QUALIFIER OR ONE FROM ABOVE LIST-'
LSMSG05  DC    AL2(L'SMSG05+HDR)
         DC    AL2(OFST)
SMSG05   DC    C'IKJ58606A DATA SET NAME WAS NOT FULLY QUALIFIED.  ENTEX
               R NEW QUALIFIER-'
LSMSG06  DC    AL2(L'SMSG06+HDR)
         DC    AL2(OFST)
SMSG06   DC    C'IKJ58609I PUTLINE ERROR CODE '
LSMSG07  DC    AL2(L'SMSG07+HDR)
         DC    AL2(OFST)
SMSG07   DC    C'IKJ58609I PUTGET ERROR CODE '
LSMSG08  DC    AL2(L'SMSG08+HDR)
         DC    AL2(OFST)
SMSG08   DC    C'IKJ58609I LOCATE ERROR CODE '
LSMSG09  DC    AL2(L'SMSG09+HDR)                               @YL026YB
         DC    AL2(OFST)                                       @YL026YB
SMSG09   DC    C'IKJ58609I GETMAIN ERROR CODE '                @YL026YB
         END
