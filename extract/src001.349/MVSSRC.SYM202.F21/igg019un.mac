         TITLE 'IGG019UN, SENECA GET MODULE                            *
                        '
***********************************************************************
*   ESTABLISH ADDRESSIBILITY, DETERMINE IF RELEASE, SAVE USERS REGS   *
***********************************************************************
IGG019UN CSECT
         USING IGG019UN,ENTRYR
         USING IHADCB,RPARA1
         B     START-REL+8(,ENTRYR)     BRANCH TO GET
         DS    F                       PROVIDE ALIGNMENT
REL      EQU   *                       RELEASE SPECIFIED
         LR    DCBPTR,RPARA1
         MVC   76(4,DCBPTR),72(DCBPTR)  SET END OF BLOCK CONDITION
         OC    68(1,DCBPTR),RELEASE     SET RELEASE INDICATOR ON
START    EQU   *                       GET FUNCTION SPECIFIED
         STM   RETR,BASR,20(SAVR)       SAVE USERS REGS
         DROP  ENTRYR
         DROP  RPARA1
         USING IGG019UN,BASR
         LR    BASR,ENTRYR              SET UP BASE ADDR
         LR    DCBPTR,RPARA1
         LR    WORK,RPARA0
*A1:                                                               0027
*   IF RELSW^=RELEASE THEN          /* WAS RELEASE SPECIFIED         */
A1       CLC   RELSW+52(1,DCBPTR),RELEASE                          0027
         BE    @RF00027                                            0027
*     DO;                           /* NO, GET NEXT RECORD           */
*       IF RECTYP=UNITCK×RECTYP=UNITEX×RECTYP=UNITCKEX THEN/*      0029
*                                                            @YM00645*/
         L     @05,DCBHDR(,DCBPTR)                                 0029
         CLI   RECTYP(@05),X'02'                                   0029
         BE    @RT00029                                            0029
         L     @05,DCBHDR(,DCBPTR)                                 0029
         CLI   RECTYP(@05),X'01'                                   0029
         BE    @RT00029                                            0029
         L     @05,DCBHDR(,DCBPTR)                                 0029
         CLI   RECTYP(@05),X'03'                                   0029
         BNE   @RF00029                                            0029
@RT00029 DS    0H                                                  0030
*         DO;                       /*                       @YM00645*/
*           IOBPTR=DCBIOBA;         /* PTR TO IOB FOR EOB            */
         L     IOBPTR,DCBIOBA+52(,DCBPTR)                          0031
*           RFY                                                    0032
*            (BASR,                                                0032
*             SAVR,                                                0032
*             ENTRYR) RSTD;         /*                       @ZA04481*/
*           IF(RECTYP=UNITEX×RECTYP=UNITCKEX)&/* SCI PAUS,   @ZA04468*/
*               IMGPROC=ON THEN     /* IMAGE PROCESSING      @ZA04481*/
         L     @14,DCBHDR(,DCBPTR)                                 0033
         CLI   RECTYP(@14),X'01'                                   0033
         BE    @GL00003                                            0033
         L     @14,DCBHDR(,DCBPTR)                                 0033
         CLI   RECTYP(@14),X'03'                                   0033
         BNE   @RF00033                                            0033
@GL00003 TM    IMGPROC(DCBPTR),B'00000001'                         0033
         BNO   @RF00033                                            0033
*             DO;                   /*                       @ZA04481*/
*               SAVE17=BASR;        /* SAVE BASE REGISTER    @ZA04468*/
         ST    BASR,SAVE17(,SAVR)                                  0035
*               SAVE18=IOBPTR;      /* SAVE IOB POINTER      @ZA04468*/
         ST    IOBPTR,SAVE18(,SAVR)                                0036
*               GEN CODE;                                          0037
*                                                          /*@ZA04468
         LM    RETR,BASR,20(SAVR) RESTORE USER'S REGS          @ZA04468
         LR    RPARA0,RPARA1      ADDR OF DCB IN REG 0         @ZA04468
         L     ENTRYR,4(,RPARA1)  GET ADDR OF IMAGE ROUTINE    @ZA04468
         BALR  RETR,ENTRYR        LINK TO IMAGE ROUTINE        @ZA04468
         L     WORK,28(,SAVR)     RESTORE WORK AREA REGISTER   @ZA04468
         L     DCBPTR,32(,SAVR)   RESTORE DCB POINTER          @ZA04468
*               RFY                                                0038
*                 RPARA1 RSTD;      /*                       @ZA04481*/
*               IOBPTR=SAVE18;      /* RESTORE IOB ADDRESS   @ZA04468*/
         L     IOBPTR,SAVE18(,SAVR)                                0039
*               BASR=SAVE17;        /* RESTORE BASE REGISTER @ZA04468*/
         L     BASR,SAVE17(,SAVR)                                  0040
*               RPARA1=DCBBLKSI;    /* LOAD BLOCK SIZE       @ZA04468*/
         LH    RPARA1,DCBBLKSI+52(,DCBPTR)                         0041
*               GEN CODE;                                          0042
*                                                          /*@ZA04468
         LA    IOBSTPTR,8(,IOBPTR) POINT TO IOB STANDARD       @ZA04468
         L     RETR,16(,IOBSTPTR)  POINT TO START OF CCW CHAIN @ZA04468
         LA    RETR,136(,RETR)     POINT TO END OF CCW CHAIN   @ZA04468
*               ENTRYR=DCBBLKSI;    /* LOAD BLOCK SIZE       @ZA04468*/
         LH    ENTRYR,DCBBLKSI+52(,DCBPTR)                         0043
*               GEN(MVCL  14,0);    /* MOVE IMAGES TO BUFFER @ZA04468*/
         MVCL  14,0
*               RFY                                                0045
*                (BASR,                                            0045
*                 SAVR,                                            0045
*                 ENTRYR,                                          0045
*                 RPARA1) UNRSTD;   /*                       @ZA04481*/
*             END;                  /*                       @ZA04468*/
*           CALL EOBMOD;            /* GO TO EOB ROUTINE     @YM00645*/
@RF00033 L     @15,EOBMOD+72(,DCBPTR)                              0047
         BALR  @14,@15                                             0047
*         END;                      /*                       @YM00645*/
*NXTREC:                                                           0049
*       IF DCBRECAD=DCBEOBAD THEN   /* Q - END OF BLOCK              */
@RF00029 DS    0H                                                  0049
NXTREC   CLC   DCBRECAD+72(4,DCBPTR),DCBEOBAD+72(DCBPTR)           0049
         BNE   @RF00049                                            0049
*         DO;                       /* YES,EOB                       */
*SYNCH:                                                            0051
*           CALL SYNCMOD;           /* GO TO SYNCHRONIZING TRN       */
SYNCH    L     @15,SYNCMOD+52(,DCBPTR)                             0051
         BALR  @14,@15                                             0051
*           IF RECTYP^=UNITCK&RECTYP^=UNITEX&RECTYP^=UNITCKEX/* NOT
*                                      DM RECORD             @YM00623*/
*             THEN                                                 0052
         L     @05,DCBHDR(,DCBPTR)                                 0052
         CLI   RECTYP(@05),X'02'                                   0052
         BE    @RF00052                                            0052
         L     @05,DCBHDR(,DCBPTR)                                 0052
         CLI   RECTYP(@05),X'01'                                   0052
         BE    @RF00052                                            0052
         L     @05,DCBHDR(,DCBPTR)                                 0052
         CLI   RECTYP(@05),X'03'                                   0052
         BE    @RF00052                                            0052
*             DO;                   /*                       @YM00623*/
*               IF MRWRITE=OFF THEN /* MULTIPLE WRITE        @ZA04481*/
         TM    MRWRITE(DCBPTR),B'10000000'                         0054
         BNZ   @RF00054                                            0054
*                 DO;               /* NO                            */
*                   DCBRECAD=CCWADR;/* SET REC ADR TO NEW BUFFER     */
         SLR   @05,@05                                             0056
         IC    @05,DCBOFFSR+52(,DCBPTR)                            0056
         AL    @05,DCBIOBA+52(,DCBPTR)                             0056
         L     @05,CCWADR-1(,@05)                                  0056
         LA    @05,0(,@05)                                         0056
         ST    @05,DCBRECAD+72(,DCBPTR)                            0056
*                   DCBEOBAD=CCWADR+DCBBLKSI;/* NEW EOB ADDR         */
         SLR   @05,@05                                             0057
         IC    @05,DCBOFFSR+52(,DCBPTR)                            0057
         AL    @05,DCBIOBA+52(,DCBPTR)                             0057
         L     @05,CCWADR-1(,@05)                                  0057
         LA    @05,0(,@05)                                         0057
         AH    @05,DCBBLKSI+52(,DCBPTR)                            0057
         ST    @05,DCBEOBAD+72(,DCBPTR)                            0057
*                   RFY                                            0058
*                     RECLEN RSTD;  /*                       @ZA04481*/
*                   USHDR=GETHDR;   /* MOVE HEADER TO USER'S AREA    */
         L     @01,DCBHDR(,DCBPTR)                                 0059
         LH    @15,DCBLRECL+72(,DCBPTR)                            0059
         AL    @15,DCBRECAD+72(,DCBPTR)                            0059
         AL    @15,@CF00472                                        0059
         MVC   USHDR(12,@01),GETHDR(@15)                           0059
*                   RECLEN=DCBLRECL-TWELVE;/* LENGTH OF DATA RECORD
*                                      MOVE DATA TO USER'S AREA      */
         LH    RECLEN,DCBLRECL+72(,DCBPTR)                         0060
         SL    RECLEN,@CF00453                                     0060
*                   USDTA(1:RECLEN)=GETDTA(1:RECLEN);              0061
         LR    @15,RECLEN                                          0061
         BCTR  @15,0                                               0061
         L     @01,DCBRECAD+72(,DCBPTR)                            0061
         EX    @15,@SM00473                                        0061
*                   RFY                                            0062
*                     RECLEN UNRSTD;/*                       @ZA04481*/
*                   DCBRECAD=DCBRECAD+DCBLRECL;/* NEXT REC ADDR IS 0063
*                                      NEXT RECORD ZERO'S            */
         LH    @05,DCBLRECL+72(,DCBPTR)                            0063
         AL    @05,DCBRECAD+72(,DCBPTR)                            0063
         ST    @05,DCBRECAD+72(,DCBPTR)                            0063
*                   IF DCBRECAD=DCBEOBAD THEN/* END OF BLOCK @YM00645*/
         CLC   DCBRECAD+72(4,DCBPTR),DCBEOBAD+72(DCBPTR)           0064
         BE    @RT00064                                            0064
*                     GO TO A2;     /* YES                   @YM00645*/
*                   ELSE            /*                       @YM00645*/
*                     IF GETDTA(1:DCBLRECL)=ZERO(1:DCBLRECL) THEN  0066
         L     @05,DCBRECAD+72(,DCBPTR)                            0066
         LH    @15,DCBLRECL+72(,DCBPTR)                            0066
         BCTR  @15,0                                               0066
         EX    @15,@SC00475                                        0066
         BNE   @RF00066                                            0066
*                       DCBRECAD=DCBEOBAD;/* YES,SET END OF BLOCK    */
         L     @05,DCBEOBAD+72(,DCBPTR)                            0067
         ST    @05,DCBRECAD+72(,DCBPTR)                            0067
*                 END;                                             0068
*             END;                                                 0069
*         END;                                                     0070
*       ELSE                                                       0071
*         DO;                       /* NOT EOB                       */
         B     @RC00049                                            0071
@RF00049 DS    0H                                                  0072
*           RFY                                                    0072
*             RECLEN RSTD;          /*                       @ZA04481*/
*           USHDR=GETHDR;           /* MOVE HEADER TO USER'S AREA    */
         L     @01,DCBHDR(,DCBPTR)                                 0073
         LH    @15,DCBLRECL+72(,DCBPTR)                            0073
         AL    @15,DCBRECAD+72(,DCBPTR)                            0073
         AL    @15,@CF00472                                        0073
         MVC   USHDR(12,@01),GETHDR(@15)                           0073
*           RECLEN=DCBLRECL-TWELVE; /* LENGTH OF DATA RECORD MOVE  0074
*                                      DATA TO USER'S AREA           */
         LH    RECLEN,DCBLRECL+72(,DCBPTR)                         0074
         SL    RECLEN,@CF00453                                     0074
*           USDTA(1:RECLEN)=GETDTA(1:RECLEN);                      0075
         LR    @15,RECLEN                                          0075
         BCTR  @15,0                                               0075
         L     @01,DCBRECAD+72(,DCBPTR)                            0075
         EX    @15,@SM00473                                        0075
*           RFY                                                    0076
*             RECLEN UNRSTD;        /*                       @ZA04481*/
*           DCBRECAD=DCBRECAD+DCBLRECL;/* NEXT REC ADDR IS NEXT    0077
*                                      RECORD ZERO'S                 */
         LH    @05,DCBLRECL+72(,DCBPTR)                            0077
         AL    @05,DCBRECAD+72(,DCBPTR)                            0077
         ST    @05,DCBRECAD+72(,DCBPTR)                            0077
*           IF DCBRECAD=DCBEOBAD THEN/* END OF BLOCK         @YM00645*/
         CLC   DCBRECAD+72(4,DCBPTR),DCBEOBAD+72(DCBPTR)           0078
         BE    @RT00078                                            0078
*             GO TO A2;             /* YES                   @YM00645*/
*           ELSE                    /*                       @YM00645*/
*             IF GETDTA(1:DCBLRECL)=ZERO(1:DCBLRECL) THEN          0080
         L     @05,DCBRECAD+72(,DCBPTR)                            0080
         LH    @15,DCBLRECL+72(,DCBPTR)                            0080
         BCTR  @15,0                                               0080
         EX    @15,@SC00475                                        0080
         BNE   @RF00080                                            0080
*               DCBRECAD=DCBEOBAD;  /* YES,SET END OF BLOCK          */
         L     @05,DCBEOBAD+72(,DCBPTR)                            0081
         ST    @05,DCBRECAD+72(,DCBPTR)                            0081
*         END;                                                     0082
*     END;                                                         0083
*   ELSE                            /* YES, SET OFF RELEASE          */
*     RELSW=RLSOFF;                 /* SET RELEASE OFF       @ZA04481*/
         B     @RC00027                                            0084
@RF00027 MVI   RELSW+52(DCBPTR),B'00000000'                        0084
*A2:                                                               0085
*   IF DCBRECAD=DCBEOBAD THEN       /* END OF BLOCK                  */
@RC00027 DS    0H                                                  0085
A2       CLC   DCBRECAD+72(4,DCBPTR),DCBEOBAD+72(DCBPTR)           0085
         BNE   @RF00085                                            0085
*     DO;                           /* YES                           */
*       IOBPTR=DCBIOBA;             /* PTR TO IOB FOR EOB            */
         L     IOBPTR,DCBIOBA+52(,DCBPTR)                          0087
*       IF RECTYP=UNITCK×RECTYP=UNITEX×RECTYP=UNITCKEX THEN        0088
         L     @05,DCBHDR(,DCBPTR)                                 0088
         CLI   RECTYP(@05),X'02'                                   0088
         BE    @RT00088                                            0088
         L     @05,DCBHDR(,DCBPTR)                                 0088
         CLI   RECTYP(@05),X'01'                                   0088
         BE    @RT00088                                            0088
         L     @05,DCBHDR(,DCBPTR)                                 0088
         CLI   RECTYP(@05),X'03'                                   0088
         BE    @RT00088                                            0088
*         GOTO A3;                  /*                       @YM00623*/
*       DO;                         /* BUFFER END AND NOT DM REC     */
*         CALL EOBMOD;              /* GO TO END OF BLOCK RTN        */
         L     @15,EOBMOD+72(,DCBPTR)                              0091
         BALR  @14,@15                                             0091
*         IF MRWRITE=ON THEN        /* WAS MULTIPLE WRITE ON @ZA04481*/
         TM    MRWRITE(DCBPTR),B'10000000'                         0092
         BO    @RT00092                                            0092
*           GOTO SYNCH;             /* YES, GO TO SYNCH RTN          */
*       END;                                                       0094
*     END;                                                         0095
*A3:                                                               0096
*   GEN CODE;                                                      0096
@RF00085 DS    0H                                                  0096
A3       DS    0H                                                  0096
*                                   /* RETURN TO CALLER              */
         LM    RETR,BASR,20(SAVR)       RESOTRE REGS
         LR    RPARA1,RPARA0             DATA ADR RETURNED IN REG1
         BCR   15,RETR                  RETURN
*   END IGG019UN                                                   0097
*                                                                  0097
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (IGG019UN)                                       */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSUT5  (DCLAR   )                                       */
*/*%INCLUDE SYSUT5  (SETUP   )                                       */
*/*%INCLUDE SYSUT5  (MOVREC  )                                       */
*/*%INCLUDE SYSUT5  (MOVREC  )                                       */
*                                                                  0097
*       ;                                                          0097
@EL00001 DS    0H                                                  0097
@EF00001 DS    0H                                                  0097
@ER00001 LM    @14,@12,12(@13)                                     0097
         BR    @14                                                 0097
@DATA    DS    0H
@SM00473 MVC   USDTA(0,WORK),GETDTA(@01)
@SC00475 CLC   GETDTA(0,@05),ZERO
         DS    0F
         DS    0F
@CF00472 DC    F'-12'
@CF00453 DC    BL4'00001100'
         DS    0D
ZERO     DS    CL48
         ORG   ZERO
Z1       DC    48X'00'
         ORG   ZERO+48
RELEASE  DC    B'11110000'
MTAREA   DC    X'00'
         DC    XL49'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DCBPTR   EQU   @02
RPARA1   EQU   @01
IOBPTR   EQU   @03
WORK     EQU   @04
RECLEN   EQU   @05
BASR     EQU   @08
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
SAVR     EQU   @13
ENTRYR   EQU   @15
IOBSTPTR EQU   @07
RETR     EQU   @14
RPARA0   EQU   @00
IHADCB   EQU   0
IHADCS07 EQU   0
DCBWTOID EQU   IHADCS07
IHADCS09 EQU   0
DCBSSID  EQU   IHADCS09
IHADCS10 EQU   0
@NM00003 EQU   IHADCS10
DCBSSAD  EQU   IHADCS10+4
DCBIMG   EQU   DCBSSAD
DCBIMAGE EQU   IHADCS10+8
DCBMRFG  EQU   DCBIMAGE
DCBECBLT EQU   IHADCS10+12
DCBHDR   EQU   DCBECBLT
DCBMRIND EQU   DCBHDR
DCBMRFLG EQU   IHADCS10+16
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS27 EQU   0
DCBGET   EQU   IHADCS27
DCBPUT   EQU   DCBGET
DCBGETA  EQU   DCBPUT+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBBLKSI EQU   IHADCS36+10
DCBOFFSR EQU   IHADCS36+14
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBLRECL EQU   IHADCS38+10
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
IHADCS40 EQU   0
DCBEOBAD EQU   IHADCS40
DCBCCCW  EQU   IHADCS40+4
DCBRECAD EQU   DCBCCCW
DCBRECBT EQU   DCBRECAD
DCBRCREL EQU   DCBRECBT
@NM00028 EQU   IHADCS40+12
DCBEROPT EQU   @NM00028
DCBEOB   EQU   IHADCS40+20
CCW      EQU   0
CCWADR   EQU   CCW+1
IOBSENSE EQU   0
SAVAR    EQU   0
SAVE17   EQU   SAVAR+64
SAVE18   EQU   SAVAR+68
USHDR    EQU   0
RECTYP   EQU   USHDR+11
GETDTA   EQU   0
GETHDR   EQU   0
USDTA    EQU   0
MRFLG    EQU   DCBMRFLG
MRWRITE  EQU   MRFLG
IMGFLGS  EQU   MRFLG+3
IMGPROC  EQU   IMGFLGS
EOBMOD   EQU   DCBEOB
RELSW    EQU   DCBIOBA
SYNCMOD  EQU   DCBGERR
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00035 EQU   IMGFLGS
IMGEOF   EQU   IMGFLGS
@NM00034 EQU   MRFLG+1
@NM00033 EQU   MRFLG
@NM00038 EQU   USHDR
@NM00037 EQU   SAVAR
IOBSENS0 EQU   IOBSENSE+10
@NM00036 EQU   IOBSENSE
CCWL     EQU   CCW+6
@NM00032 EQU   CCW+4
CCWCODE  EQU   CCW
DCBPRECL EQU   IHADCS40+18
@NM00031 EQU   IHADCS40+16
@NM00030 EQU   @NM00028+1
@NM00029 EQU   DCBEROPT
DCBERABE EQU   DCBEROPT
DCBERSKP EQU   DCBEROPT
DCBERACC EQU   DCBEROPT
@NM00027 EQU   IHADCS40+10
@NM00026 EQU   IHADCS40+9
@NM00025 EQU   IHADCS40+8
DCBRECA  EQU   DCBRECAD+1
@NM00024 EQU   DCBRECBT
DCBRCFGT EQU   DCBRCREL
DCBRCTRU EQU   DCBRCREL
DCBLCCW  EQU   DCBEOBAD
DCBNOTE  EQU   DCBCNTRL
@NM00023 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00022 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00021 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00020 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00019 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00018 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00017 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
@NM00016 EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBPUTA  EQU   DCBGETA
@NM00015 EQU   DCBPUT
DCBREADA EQU   DCBWRITA
@NM00014 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00013 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBIFPCT EQU   DCBIFLGS
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00012 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBIBPCT EQU   DCBIFLG
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00011 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00010 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00009 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00008 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
DCBDSGMQ EQU   DCBDSRG1
DCBDSGCQ EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
@NM00007 EQU   IHADCS10+19
DCBAPPIN EQU   IHADCS10+18
@NM00006 EQU   IHADCS10+17
DCBMRUE  EQU   DCBMRFLG
DCBMRDWT EQU   DCBMRFLG
DCBMRPCC EQU   DCBMRFLG
DCBMRDR  EQU   DCBMRFLG
DCBMRDRU EQU   DCBMRFLG
DCBMRDBG EQU   DCBMRFLG
DCBMRSCC EQU   DCBMRFLG
DCBECBLA EQU   DCBHDR+1
DCBMRERS EQU   DCBMRIND
DCBMRERP EQU   DCBMRIND
DCBMRPLS EQU   DCBMRIND
DCBMRPLO EQU   DCBMRIND
DCBMRSCU EQU   DCBMRIND
DCBMRDCT EQU   DCBMRIND
DCBIMAGA EQU   DCBIMAGE+1
@NM00005 EQU   DCBMRFG
DCBMRBCT EQU   DCBMRFG
DCBSSADA EQU   DCBIMG+1
@NM00004 EQU   DCBIMG
DCBQSMEX EQU   @NM00003
DCBWTOIA EQU   DCBWTOID+1
@NM00002 EQU   DCBWTOID
@NM00001 EQU   IHADCB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00064 EQU   A2
@RT00078 EQU   A2
@RC00049 EQU   @RC00027
@RF00080 EQU   @RC00027
@RT00088 EQU   A3
@RT00092 EQU   SYNCH
@RF00052 EQU   @RC00049
@RF00054 EQU   @RC00049
@RF00066 EQU   @RC00049
@ENDDATA EQU   *
         END   IGG019UN,(C'PLS1547',0701,76141)
