SVTM     TITLE 'ISTINCF4-TERM(SELF) REQUEST PROCESSOR                  *
                        '
ISTINCF4 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTINCF4  75.129'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*R5NCSPL=R1PARMS;                      /* SET BASE FOR NCSPL.        */
         LR    R5NCSPL,R1PARMS                                     0612
*RFY ISTNCSPL BASED(R5NCSPL);                                      0613
*                                                                  0613
*/********************************************************************
* * UPDATE COMPONENT RECOVERY RECORD AUDIT TRAIL TO INDICATE THAT    *
* * SUBROUTINE ISTINCF4 HAS BEEN ENTERED.                            *
* ********************************************************************/
*                                                                  0614
*  DO;                                                             0614
*/***  CRRMAINT  PROCNM(ISTINCF4)COMP(VY)FUNC(SUB)RPHADD((NCSPLRPH))  *
**/                                                                0615
*                                                                  0615
*/* ATBUILD (ISTRPH,ISTCRA,ISTPFCRR,ISTVYCRR)  */                  0615
*  RFY ISTZSAVE;                                                   0615
*  RFY ISTPFCRR;                                                   0616
*  RFY ISTCFCRR;                                                   0617
*  RFY ISTZCRR ;                                                   0618
*  RFY ISTASCRR;                                                   0619
*  RFY ISTAPCRR;                                                   0620
*  RFY ISTCRA  ;                                                   0621
*  RFY ISTCNSTA;                                                   0622
*  RFY ISTVYCRR;                                                   0623
*/* END OF ATBUILD */                                              0624
*  /*** SET ENTERED BIT FOR THIS PROCEDURE ***/                    0624
*NCSPLRPH->RPHCRR->CRACRR->NINCF4 = '1'B;                          0624
         L     @15,NCSPLRPH(,R5NCSPL)                              0624
         L     @15,RPHCRR(,@15)                                    0624
         L     @15,CRACRR(,@15)                                    0624
         OI    NINCF4(@15),B'00100000'                             0624
*  /*** CLEAR AND SET CURRENT PROCEDURE BIT ***/                   0625
*NCSPLRPH->RPHCRR->CRACRR->VYCCRT = '0'B;                          0625
         XC    VYCCRT+1(11,@15),VYCCRT+1(@15)                      0625
         MVI   VYCCRT(@15),B'00000000'                             0625
*NCSPLRPH->RPHCRR->CRACRR->CINCF4 = '1'B;                          0626
         OI    CINCF4(@15),B'00100000'                             0626
*  END;                                                            0627
*                                                                  0627
*/********************************************************************
* * PERFORM STANDARD SSCP ROUTINE ENTRY LINKAGE. ESTABLISH CURRENT   *
* * ROUTINE'S SAVE AREA IN THE NCSPL WORK AREA BY DECREMENTING THE   *
* * ADDRESS OF THE CALLER'S SAVE AREA BY THE LENGTH OF THE SAVE AREA.*
* * DO FORWARD AND BACKWARD CHAINING OF SAVE AREAS.                  *
* ********************************************************************/
*                                                                  0628
*RFY R2WORK RSTD;                                                  0628
*R2WORK = SSCPSAVR;                    /* PRESERVE SAVE AREA PTR.    */
         LR    R2WORK,SSCPSAVR                                     0629
*SSCPSAVR = SSCPSAVR-LENGTH(SSCPSAVE); /* SAVE AREA BASE.            */
         SL    SSCPSAVR,@CF00488                                   0630
*R2WORK->SSCPFPTR=SSCPSAVR;            /* SET CALLER'S FORWARD PTR.  */
         ST    SSCPSAVR,SSCPFPTR(,R2WORK)                          0631
*SSCPSAVR->SSCPBPTR=R2WORK;            /* SET BACK POINTER.          */
         ST    R2WORK,SSCPBPTR(,SSCPSAVR)                          0632
*RFY R2WORK UNRSTD;                                                0633
*SSCPSAVR->SSCPFPTR=0;                 /* ZERO FORWARD POINTER.      */
*                                                                  0634
         SLR   @15,@15                                             0634
         ST    @15,SSCPFPTR(,SSCPSAVR)                             0634
*/********************************************************************
* *       SET UP ADDRESSABILTY TO THE DYNAMIC AREA IN THE NCSPL.     *
* ********************************************************************/
*                                                                  0635
*DATABASE=((SSCPNXAV+7)/8)*8;          /* ESTABLISH DYNAMIC WORK AREA*/
         L     @15,NCSPLWKA(,R5NCSPL)                              0635
         LA    @06,7                                               0635
         AL    @06,SSCPNXAV(,@15)                                  0635
         SRDA  @06,32                                              0635
         D     @06,@CF00039                                        0635
         SLA   @07,3                                               0635
         LR    DATABASE,@07                                        0635
*                                      /* ON A DOUBLE WORD BOUNDARY. */
*GENERATE NOSETS REFS(DATABASE)(USING @DATD,DATABASE);             0636
         USING @DATD,DATABASE
*NXAVSAVE=SSCPNXAV;                    /* SAVE THE POINTER TO THE    */
         L     @15,NCSPLWKA(,R5NCSPL)                              0637
         L     @04,SSCPNXAV(,@15)                                  0637
         ST    @04,NXAVSAVE                                        0637
*                                      /* NXT AVAILBLE AREA IN NCSPL.*/
*SSCPNXAV=DATABASE+@SIZDATD;           /* POINT TO THE NEXT AVAILABLE*/
         LR    @04,DATABASE                                        0638
         AL    @04,@SIZDATD                                        0638
         ST    @04,SSCPNXAV(,@15)                                  0638
*                                      /* WORK AREA.                 */
*R3RUPTR=ADDR(NCSRUITS);               /* SET BASE FOR TERM(SELF) RU.*/
         L     R3RUPTR,NCSPLFSB(,R5NCSPL)                          0639
         LA    R3RUPTR,NCSRUITS(,R3RUPTR)                          0639
*RFY R2WORK RSTD;                                                  0640
*R2WORK=ATCVTMID+1;                    /* OBTAIN THE CID AND STORE   */
         L     @15,NCSPLCVT(,R5NCSPL)                              0641
         LA    R2WORK,1                                            0641
         LH    @15,ATCVTMID(,@15)                                  0641
         N     @15,@CF04865                                        0641
         ALR   R2WORK,@15                                          0641
*SLL (R2WORK,16);                      /* IT IN THE SAVE AREA FOR THE*/
         SLL   R2WORK,16                                           0642
*CF4CID=R2WORK × NCSPLDAF;             /* CID.                       */
         LH    CF4CID,NCSPLDAF(,R5NCSPL)                           0643
         N     CF4CID,@CF04865                                     0643
         OR    CF4CID,R2WORK                                       0643
*RFY R2WORK UNRSTD;                                                0644
*IF NAMLNGTH=0                         /* IF RESOURCE 2 FLD LNGTH=0  */
* THEN DO;                             /* THEN PERFORM CIDCTL(FIND). */
*                                                                  0645
         CLI   NAMLNGTH(R3RUPTR),0                                 0645
         BNE   @RF00645                                            0645
*/********************************************************************
* *                      CIDCTL(FIND)                                *
* ********************************************************************/
*                                                                  0647
*   RFY R2WORK RSTD;                                               0647
*   R1PARMS=NCSPLRPH;                  /* GET THE RPH FROM THE NCSPL.*/
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0648
*   R2WORK=CF4CID;                     /* REG 2 CONTAINS THE CID.    */
*                                                                  0649
         LR    R2WORK,CF4CID                                       0649
*    DO; /* CIDCTL(FIND)  */                                       0650
*                                                                  0650
*    RFY (EMCR2,EMCR3) RSTD;                                       0651
*      GEN SETS(RPHWORK)                                           0652
*        (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);      0652
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*      EMCR3 = '00'X; /*CLEAR EXTRA BITS*/                         0653
         SLR   EMCR3,EMCR3                                         0653
*      EMCR3 = '01'X; /*INDICATE SHARED LOCK*/                     0654
         LA    EMCR3,1                                             0654
*      CALL ATCLCPTR->ATCCDFND->ISTSDCCF; /*PROCESS REQUEST*/      0655
*                                                                  0655
         L     @04,ATCLCPTR                                        0655
         L     @15,ATCCDFND(,@04)                                  0655
         BALR  @14,@15                                             0655
*    RFY (EMCR2,EMCR3) UNRSTD;                                     0656
*    END; /*CIDCTL*/                                               0657
*   RFY R2WORK UNRSTD;                                             0658
*   RFY R15RETRN RSTD;                                             0659
*   IF R15RETRN=0                      /* IF FOUND, CALL INCF4TM1 TO */
*     THEN                             /* CONTINUE TERMINATE         */
         LTR   R15RETRN,R15RETRN                                   0660
         BNZ   @RF00660                                            0660
*       CALL INCF4TM1;                 /* PROCESSING.                */
         BAL   @14,INCF4TM1                                        0661
*     ELSE DO;                         /* IF NOT FOUND CALL ISTINCS1 */
         B     @RC00660                                            0662
@RF00660 DS    0H                                                  0663
*       CALL CS1;                      /* TO ISSUE MESSAGE #6.       */
         BAL   @14,CS1                                             0663
*       CALL CRR;                      /* UPDATE THE COMPONENT       */
         BAL   @14,CRR                                             0664
*          END;                        /* RECOVERY RECRD AUDIT TRAIL.*/
*      END;                                                        0666
*ELSE DO;                              /* IF RESOURCE 2 FIELD LENGTH */
         B     @RC00645                                            0667
@RF00645 DS    0H                                                  0668
*                                      /* NOT EQUAL TO 0 THEN        */
*  IF FMCCMDR='1'B                     /* IF THE LU SENT AN INITIATE */
*    & NCSPLRPT->RCPINTA^=0            /* & INTERPRET TABLE EXISTS   */
*                                      /*                    @D32CKLB*/
*    THEN DO;                          /*        THEN BUILD THE RPL. */
*                                                                  0668
         L     @04,NCSUFMCB(,R5NCSPL)                              0668
         TM    FMCCMDR(@04),B'10000000'                            0668
         BNO   @RF00668                                            0668
         L     @04,NCSPLRPT(,R5NCSPL)                              0668
         L     @04,RCPINTA(,@04)                                   0668
         LTR   @04,@04                                             0668
         BZ    @RF00668                                            0668
*/********************************************************************
* *           BUILD THE RPL.                                         *
* ********************************************************************/
*                                                                  0670
*      RPLWORK=RPLWORK && RPLWORK;     /* CLEAR THE RPL WORK AREA.   */
         XC    RPLWORK(112),RPLWORK                                0670
*      RFY ISTRPL BASED(ADDR(RPLWORK));                            0671
*      RFY IFGRPL BASED(ADDR(RPLWORK)); /* IN THE RPL INITIALIZE THE:*/
*      RPLID='00'X;                    /*  -RPL IDENTIFIER           */
         LA    @04,RPLWORK                                         0673
         MVI   RPLID(@04),X'00'                                    0673
*      RPLLEN2=LENGTH(ISTRPL);         /*  -LENGTH OF THE RPL CB     */
         MVI   RPLLEN2(@04),X'70'                                  0674
*      RPLARG=NCSPLCID;                /*  -CID                      */
         L     @02,NCSPLCID(,R5NCSPL)                              0675
         ST    @02,RPLARG(,@04)                                    0675
*      RPLAREA=ADDR(APPLNAME);         /*  -@ OF RESOURCE 2 FIELD TO */
         LA    @02,APPLNAME(,R3RUPTR)                              0676
         ST    @02,RPLAREA(,@04)                                   0676
*                                      /*     BE INTERPRETTED.       */
*      RPLREQ='1B'X;                   /*  -REQUEST BYTE FOR INTRPRT */
         MVI   RPLREQ(@04),X'1B'                                   0677
*      RPLNIB='0'B;                    /*  -RPLNIB BIT TO INDICATE   */
         NI    RPLNIB(@04),B'11111011'                             0678
*                                      /*     THAT THE CID IS TO BE  */
*                                      /*     USED FOR INTERPRET.    */
*      RPLAAREA=ADDR(WORKRPLX);        /*  -@ OF AREA FOR THE        */
         LA    @02,WORKRPLX                                        0679
         ST    @02,RPLAAREA(,@04)                                  0679
*                                      /*     INTERPRETTED NAME.     */
*      RPLECB=NCSPLRPH;                /*  -PTR TO SESSION MGRS RPH  */
         L     @02,NCSPLRPH(,R5NCSPL)                              0680
         ST    @02,RPLECB(,@04)                                    0680
*      RPLTPOST='1'B;                  /*  -RPLTPOST BIT TO INDICATE */
         OI    RPLTPOST(@04),B'00001000'                           0681
*                                      /*     THAT ISTOCCUR SHOULD   */
*                                      /*     TPPOST CF4 AFTER INTER-*/
*                                      /*     PRET COMPLETES.        */
*      RPLAARLN=LENGTH(WORKRPLX);      /*  -LENGTH OF RPLAAREA       */
         MVC   RPLAARLN(4,@04),@CF00039                            0682
*      RPLRLEN=NAMLNGTH;               /*  -LENGTH OF RESOURCE 2 FLD */
         SLR   @00,@00                                             0683
         IC    @00,NAMLNGTH(,R3RUPTR)                              0683
         ST    @00,RPLRLEN(,@04)                                   0683
*      RPHPTR=NCSPLRPH;                /*  -RPH POINTER              */
*                                                                  0684
         LR    RPHPTR,@02                                          0684
*/********************************************************************
* * TPQUE THE RPL FOR INTERPRET IN THE WORK AREA PROVIDING THE RPH   *
* ********************************************************************/
*                                                                  0685
*/*  TPQUE (ADDR(RPLWORK),FMCDEBA->ACDSSPAB) ENA NORM */           0685
*                                                                  0685
* DO;                                                              0685
* RFY (GPR00P,GPR01P,GPR04P,GPR05P,GPR15P) RSTD;                   0686
* GEN REFS(GPR01P) SETS(RPHWORK)                                   0687
*        (STM GPR02P,GPR08P,RPHWORK(GPR01P));                      0687
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
* GPR00P=0;                                                        0688
         SLR   GPR00P,GPR00P                                       0688
* GPR15P=ADDR(FMCDEBA->ACDSSPAB); /*HOLD PAB PTR*/                 0689
         L     @02,NCSUFMCB(,R5NCSPL)                              0689
         L     GPR15P,FMCDEBA(,@02)                                0689
         LA    GPR15P,ACDSSPAB(,GPR15P)                            0689
* GPR04P=ADDR(RPLWORK); /*WORK ELE PTR*/                           0690
         LA    GPR04P,RPLWORK                                      0690
* GPR05P=GPR15P; /*PASS PAB PTR*/                                  0691
         LR    GPR05P,GPR15P                                       0691
* CALL ATCLCPTR->ATCAP37->ISTAPC37;                                0692
         L     @02,ATCLCPTR                                        0692
         L     @15,ATCAP37(,@02)                                   0692
         BALR  @14,@15                                             0692
* GEN(NOPR  0)NOSETS NOREFS;                                       0693
         NOPR  0
* RFY (GPR00P,GPR01P,GPR04P,GPR05P,GPR15P) UNRSTD;                 0694
* END; /**** END OF TPQUE GENERATION ****/                         0695
*                                                                  0695
*/********************************************************************
* * TPWAIT ON THE RPH FOR THE INTERPRET TO COMPLETE.                 *
* ********************************************************************/
*                                                                  0696
*/*  TPWAIT   */                                                   0696
* DO; /* BEGIN TPWAIT GENERATION*/                                 0696
* RFY (GPR01P,GPR14P,GPR15P) RSTD;                                 0697
* RFY (GPR00P) RSTD;                                               0698
* GEN (STM   GPR00P,GPR15P,RPHWORK(GPR01P))                        0699
* REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);                        0699
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
* RFY (GPR00P) UNRSTD;                                             0700
* GPR15P=ADDR(LHAA0029);                                           0701
         LA    GPR15P,LHAA0029                                     0701
* GPR14P=0;                                                        0702
         SLR   GPR14P,GPR14P                                       0702
* GPR15P=GPR15P & '00FFFFFF'X;                                     0703
         N     GPR15P,@CF03945                                     0703
* GPR15P=GPR15P × RPHWT1;                                          0704
         O     GPR15P,@CF01461                                     0704
* CS (GPR14P,GPR15P,GPR01P->RPHRESMA);                             0705
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0705
* BC (7,LHAB0029);                                                 0706
*                                                                  0706
         BC    7,LHAB0029                                          0706
*/* TPEXIT  NONE */                                                0707
* DO;                                                              0707
*   RESPECIFY GPR15P RSTD;                                         0708
*                                                                  0708
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)  */                         0709
*/* END OF ATBUILD */                                              0709
*                                                                  0709
* DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                    0709
*   GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                    0710
         L     GPR15P,ATCLCPTR                                     0710
* END; /*LISATCVT*/                                                0711
*   RESPECIFY GPR00F RSTD;                                         0712
*   GPR00F=0;     /*SET PARAMETER REGISTER TO 0*/                  0713
         SLR   GPR00F,GPR00F                                       0713
*   GPR15P=GPR15P->ATCAP31;                                        0714
         L     GPR15P,ATCAP31(,GPR15P)                             0714
*   DCL FMZL0034 BASED(GPR15P) LABEL VALUERANGE(*);                0715
*   CALL FMZL0034;                                                 0716
         BALR  @14,@15                                             0716
*   RESPECIFY (GPR00F,GPR15P) UNRSTD;                              0717
* END; /***** END OF TPEXIT  *****/                                0718
*LHAB0029:;                                                        0719
LHAB0029 DS    0H                                                  0720
* GPR01P->RPHRESMA = 0;                                            0720
         SLR   @04,@04                                             0720
         ST    @04,RPHRESMA(,GPR01P)                               0720
* RFY (GPR00P) RSTD;                                               0721
*LHAA0029:;                                                        0722
LHAA0029 DS    0H                                                  0723
* GEN (LM    GPR00P,GPR15P,RPHWORK(GPR01P))                        0723
* REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);                        0723
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
* RFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;                        0724
* END; /*****END OF TPWAIT *****/                                  0725
*                                                                  0725
*      RFY NAMEPTR RSTD;                                           0726
*      IF RPLRTNCD='00'X               /* IF INTERPRET WAS SUCCESSFUL*/
*        THEN DO;                      /* THEN CALL INCF4TRM TO PER- */
         LA    @07,RPLWORK                                         0727
         CLI   RPLRTNCD(@07),0                                     0727
         BNE   @RF00727                                            0727
*          NAMEPTR=ADDR(WORKRPLX);     /* FORM TERMINATE PROCESSING  */
         LA    NAMEPTR,WORKRPLX                                    0729
*                                      /* USING THE INTERPRETTED     */
*             END;                     /* APPLICATION NAME.          */
*        ELSE DO;                                                  0731
         B     @RC00727                                            0731
@RF00727 DS    0H                                                  0732
*              NAMEPTR=ADDR(APPLNAME); /* INCF4TRM TO PERFORM TERMIN-*/
         LA    NAMEPTR,APPLNAME(,R3RUPTR)                          0732
*                                      /* ATE PROCESSING USING THE   */
*                                      /* RU APPLICATION NAME.       */
*             END;                                                 0733
*         END;                                                     0734
*    ELSE DO;                          /* IF THE LU DID NOT SEND AN  */
         B     @RC00668                                            0735
@RF00668 DS    0H                                                  0736
*      NAMEPTR=ADDR(APPLNAME);         /* INITIATE(SELF) THEN CALL   */
         LA    NAMEPTR,APPLNAME(,R3RUPTR)                          0736
*                                      /* INCF4TRM TO PERFORM TERMIN-*/
*         END;                         /* ATE PROCESSING USING THE   */
*     CALL INCF4TRM;                                       /*@D32CKLB*/
@RC00668 BAL   @14,INCF4TRM                                        0738
*     END;                             /* RU APPLICATION NAME.       */
*RFY NAMEPTR UNRSTD;                                               0740
@RC00645 DS    0H                                                  0741
*SSCPNXAV=NXAVSAVE;                    /* RESTORE THE PTR TO THE NXT */
         L     @10,NCSPLWKA(,R5NCSPL)                              0741
         L     @04,NXAVSAVE                                        0741
         ST    @04,SSCPNXAV(,@10)                                  0741
*                                      /* AVAILABLE AREA IN NCSPL.   */
*SSCPSAVR=SSCPSAVR->SSCPBPTR;          /* RESTORE REGISTER 13.       */
         L     SSCPSAVR,SSCPBPTR(,SSCPSAVR)                        0742
*INCF4TRM: PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                 0743
         B     @PB00002                                            0743
INCF4TRM DS    0H                                                  0744
*RFY NAMEPTR RSTD;                                                 0744
*TRMSAVE=REG14;                        /* SAVE REGISTER 14.          */
*                                                                  0745
         ST    REG14,TRMSAVE                                       0745
*RFY R15RETRN RSTD;                                        /*@D32CKLB*/
*IF NAMEPTR=ADDR(APPLNAME)             /* IF USING RESOURCE2 FROM RU */
* &(NAMLNGTH>8×NAMLNGTH=0)             /* & NAME LENGTH BAD  @D32CKLB*/
* THEN R15RETRN=4;                     /* THEN CAUSE ERROR   @D32CKLB*/
         LA    @07,APPLNAME(,R3RUPTR)                              0747
         CR    NAMEPTR,@07                                         0747
         BNE   @RF00747                                            0747
         CLI   NAMLNGTH(R3RUPTR),8                                 0747
         BH    @RT00747                                            0747
         CLI   NAMLNGTH(R3RUPTR),0                                 0747
         BNE   @RF00747                                            0747
@RT00747 DS    0H                                                  0748
         LA    R15RETRN,4                                          0748
*ELSE DO;                              /* ELSE CONTINUE      @D32CKLB*/
         B     @RC00747                                            0749
@RF00747 DS    0H                                                  0750
*IF NAMEPTR=ADDR(APPLNAME)             /* IF USING RESOURCE2 @D32CKLB*/
* THEN WORKRPLX=APPLNAME(1:NAMLNGTH);  /* SET UP NAME FOR SRT FIND   */
         LA    @07,APPLNAME(,R3RUPTR)                              0750
         CR    NAMEPTR,@07                                         0750
         BNE   @RF00750                                            0750
         MVI   WORKRPLX+1,C' '                                     0751
         MVC   WORKRPLX+2(6),WORKRPLX+1                            0751
         SLR   @07,@07                                             0751
         IC    @07,NAMLNGTH(,R3RUPTR)                              0751
         BCTR  @07,0                                               0751
         EX    @07,@SM04868                                        0751
*ELSE;                                                     /*@D32CKLB*/
@RF00750 DS    0H                                                  0753
*/********************************************************************
* *                  TPLOCK - V/O/C LOCK SHARED.                     *
* ********************************************************************/
*                                                                  0753
*R1PARMS=NCSPLRPH;                     /* REG 1=@ OF THE RPH.        */
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0753
*/*** START -TPLOCK (VOCLOCK)- ***/                                0754
* DO;                                                              0754
* RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;            0755
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*        GPR15P = ATCAP35;              /*ADDRESS OF LOCK ROUTINE*/
         L     @07,NCSPLCVT(,R5NCSPL)                              0757
         L     GPR15P,ATCAP35(,@07)                                0757
*        GPR02P = ADDR(ATCVOCLK);       /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ATCVOCLK(,@07)                               0758
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0759
         L     GPR04P,RPHCRR(,GPR01P)                              0759
*        GPR00P = CRALMS02;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,2                                            0760
*        GPR03P = ADDR(GPR04P->CRAL2PTR);                          0761
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0761
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*        DCL FMZL0044 BASED(GPR15P) LABEL VALUERANGE(*);           0762
*        CALL FMZL0044;                                            0763
         BALR  @14,@15                                             0763
*        GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0764
*                                                                  0764
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
* RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;          0765
*        END;                                                      0766
*/*** END -TPLOCK (VOCLOCK)- ***/                                  0767
*                                                                  0767
*/********************************************************************
* *   PERFORM SRTDELFD TO FIND THE RDTE USING THE APPLICATION NAME.  *
* ********************************************************************/
*                                                                  0767
*RFY (R2WORK,REG0) RSTD;                                           0767
*REG0=ADDR(WORKRPLX) × '80000000'X;    /* FIND THE RDTE.     @D32CKLB*/
         LA    REG0,WORKRPLX                                       0768
         O     REG0,@CF01437                                       0768
*R1PARMS=R1PARMS & '7FFFFFFF'X;        /* FIND RDT NOT DVT.          */
         N     R1PARMS,@CF01435                                    0769
*R2WORK=0;                             /* NOT BHID.                  */
         SLR   R2WORK,R2WORK                                       0770
*CALL SRTDELFD;                                                    0771
         L     @07,NCSPLCVT(,R5NCSPL)                              0771
         L     @15,ATCSRTDF(,@07)                                  0771
         BALR  @14,@15                                             0771
*R0SAVE=REG0;                          /* SAVE THE RDTE POINTER.     */
         ST    REG0,R0SAVE                                         0772
*END;                                  /*                    @D32CKLB*/
*IF R15RETRN=0 &                       /* IF THE RDTE WAS FOUND AND  */
*   REG0->RPRENTRY=RPRENTAP            /* IT WAS AN APPLICATION RDTE */
*    THEN DO;                          /* THEN DO CIDCTL (FIND) TO   */
@RC00747 LTR   R15RETRN,R15RETRN                                   0774
         BNZ   @RF00774                                            0774
         LR    @07,REG0                                            0774
         CLI   RPRENTRY(@07),X'55'                                 0774
         BNE   @RF00774                                            0774
*                                      /* FIND THE APPL-LU FMCB.     */
*                                                                  0776
*/********************************************************************
* *                      CIDCTL(FIND)                                *
* ********************************************************************/
*                                                                  0776
*   RFY R2WORK RSTD;                                               0776
*   R1PARMS=NCSPLRPH;                  /* GET THE RPH FROM THE NCSPL.*/
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0777
*   R2WORK=CF4CID;                     /* REG 2 CONTAINS THE CID.    */
*                                                                  0778
         LR    R2WORK,CF4CID                                       0778
*    DO; /* CIDCTL(FIND)  */                                       0779
*                                                                  0779
*    RFY (EMCR2,EMCR3) RSTD;                                       0780
*      GEN SETS(RPHWORK)                                           0781
*        (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);      0781
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*      EMCR3 = '00'X; /*CLEAR EXTRA BITS*/                         0782
         SLR   EMCR3,EMCR3                                         0782
*      EMCR3 = '01'X; /*INDICATE SHARED LOCK*/                     0783
         LA    EMCR3,1                                             0783
*      CALL ATCLCPTR->ATCCDFND->ISTSDCCF; /*PROCESS REQUEST*/      0784
*                                                                  0784
         L     @07,ATCLCPTR                                        0784
         L     @15,ATCCDFND(,@07)                                  0784
         BALR  @14,@15                                             0784
*    RFY (EMCR2,EMCR3) UNRSTD;                                     0785
*    END; /*CIDCTL*/                                               0786
*   RFY R15RETRN RSTD;                                             0787
*   IF R15RETRN=0                      /* IF FOUND THEN              */
*     THEN                                                         0788
         LTR   R15RETRN,R15RETRN                                   0788
         BNZ   @RF00788                                            0788
*       IF R0SAVE->RAPACDEB=           /* IF THE LU IS CHAINED TO    */
*          R2WORK->FMCDEBA             /* THE CORRECT APPL THEN CALL */
*         THEN                         /* INCF4TM1 TO CONTINUE TERM- */
         L     @07,R0SAVE                                          0789
         CLC   RAPACDEB(4,@07),FMCDEBA(R2WORK)                     0789
         BNE   @RF00789                                            0789
*           CALL INCF4TM1;             /* INATE PROCESSING.          */
         BAL   @14,INCF4TM1                                        0790
*         ELSE DO;                     /* IF THE LU IS NOT CHAINED TO*/
         B     @RC00789                                            0791
@RF00789 DS    0H                                                  0792
*                                      /* THE CORRECT APPL, PERFORM  */
*                                      /* CIDCTL(FINISH).            */
*                                                                  0792
*/********************************************************************
* *                      CIDCTL(FINISH)                              *
* ********************************************************************/
*                                                                  0792
*   RFY R2WORK RSTD;                                               0792
*   R1PARMS=NCSPLRPH;                  /* GET THE RPH FROM THE NCSPL.*/
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0793
*   R2WORK=CF4CID;                     /* REG 2 CONTAINS THE CID.    */
*                                                                  0794
         LR    R2WORK,CF4CID                                       0794
*    DO; /* CIDCTL(FINISH)  */                                     0795
*                                                                  0795
*    RFY (EMCR2,EMCR3) RSTD;                                       0796
*      GEN SETS(RPHWORK)                                           0797
*        (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);      0797
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*      EMCR3 = '00'X; /*CLEAR EXTRA BITS*/                         0798
         SLR   EMCR3,EMCR3                                         0798
*      CALL ATCLCPTR->ATCCDFIN->ISTSDCCR; /*PROCESS REQUEST*/      0799
*                                                                  0799
         L     @10,ATCLCPTR                                        0799
         L     @15,ATCCDFIN(,@10)                                  0799
         BALR  @14,@15                                             0799
*    RFY (EMCR2,EMCR3) UNRSTD;                                     0800
*    END; /*CIDCTL*/                                               0801
*   RFY R2WORK UNRSTD;                                             0802
*                                                                  0802
*           CALL TPUNLCK;              /* PERFORM TPUNLOCK(VOCLOCK). */
         BAL   @14,TPUNLCK                                         0803
*           CALL CS1;                  /* CALL ISTINCS1 TO ISSUE MSG */
         BAL   @14,CS1                                             0804
*           CALL CRR;                  /* #6. UPDATE THE COMPONENT   */
         BAL   @14,CRR                                             0805
*                                      /* RECOVERY RECRD AUDIT TRAIL.*/
*          END;                                                    0806
*     ELSE DO;                         /* IF THE FMCB WAS NOT FOUND  */
         B     @RC00788                                            0807
@RF00788 DS    0H                                                  0808
*       CALL TPUNLCK;                  /* PERFORM TPUNLOCK(VOCLOCK). */
         BAL   @14,TPUNLCK                                         0808
*       CALL CS1;                      /* CALL ISTINCS1 TO ISSUE MSG */
         BAL   @14,CS1                                             0809
*       CALL CRR;                      /* #6. UPDATE THE COMPONENT   */
         BAL   @14,CRR                                             0810
*          END;                        /* RECOVERY RECRD AUDIT TRAIL.*/
*         END;                                                     0812
*     ELSE DO;                         /* IF THE RDTE WAS NOT FOUND  */
         B     @RC00774                                            0813
@RF00774 DS    0H                                                  0814
*       IF NAMEPTR=ADDR(APPLNAME)      /* BUT VALID RESOURCE2@D32CKLB*/
*         &(NAMLNGTH>8×NAMLNGTH=0)     /* NAME USED          @D32CKLB*/
*         THEN;                        /* BYPASS UNLOCK      @D32CKLB*/
         LA    @10,APPLNAME(,R3RUPTR)                              0814
         CR    NAMEPTR,@10                                         0814
         BNE   @RF00814                                            0814
         CLI   NAMLNGTH(R3RUPTR),8                                 0814
         BH    @RT00814                                            0814
         CLI   NAMLNGTH(R3RUPTR),0                                 0814
         BE    @RT00814                                            0814
*                                      /* OR IT WASN'T AN APPL RDTE, */
*         ELSE CALL TPUNLCK;           /* PERFORM TPUNLOCK(VOCLOCK). */
*                                                                  0816
@RF00814 BAL   @14,TPUNLCK                                         0816
*/********************************************************************
* * CALL ISTINCS1, THE STATUS FEEDBACK ROUTER, AFTER SETTING UP THE  *
* * APPROPRIATE PARAMETERS FOR MSG #4.                               *
* ********************************************************************/
*                                                                  0817
*              R1PARMS=R5NCSPL;        /* REG 1=@ OF THE NCSPL.      */
@RT00814 LR    R1PARMS,R5NCSPL                                     0817
*              MGLNS1=SRURRE;          /* SENSE=REQUEST REJECT,      */
         L     @10,NCSMGLPT(,R5NCSPL)                              0818
         MVI   MGLNS1(@10),X'08'                                   0818
*              MGLNS2=SRULUU;          /* LU UNKNOWN.                */
         MVI   MGLNS2(@10),X'06'                                   0819
*              MGLMSGAD=ADDR(MSG4ID);  /* GET @ OF USS MSG ID FIELD. */
         LA    @07,MSG4ID                                          0820
         ST    @07,MGLMSGAD(,@10)                                  0820
*              MGLVDATA=ADDR(VARTEXT1); /* SET PTR TO VARIABLE TEXT. */
         LA    @07,VARTEXT1                                        0821
         ST    @07,MGLVDATA(,@10)                                  0821
*              CALL ISTINCS1;          /* INVOKE ISTINCS1 TO SEND    */
         L     @15,@CV03961                                        0822
         BALR  @14,@15                                             0822
*                                      /* RESPONSE.                  */
*              CALL CRR;               /* UPDATE THE COMPONENT RECOV-*/
         BAL   @14,CRR                                             0823
*                                      /* ERY RECORD AUDIT TRAIL.    */
*          END;                                                    0824
*REG14=TRMSAVE;                        /* RESTORE REGISTER 14.       */
@RC00774 L     REG14,TRMSAVE                                       0825
*END INCF4TRM;                                                     0826
@EL00002 DS    0H                                                  0826
@EF00002 DS    0H                                                  0826
@ER00002 BR    @14                                                 0826
*INCF4TM1:PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                  0827
INCF4TM1 DS    0H                                                  0828
*TM1SAVE=REG14;                        /* SAVE REGISTER 14.          */
*                                                                  0828
*                                                                  0828
         ST    REG14,TM1SAVE                                       0828
*/********************************************************************
* *                      CIDCTL(FINISH)                              *
* ********************************************************************/
*                                                                  0829
*   RFY R2WORK RSTD;                                               0829
*   R1PARMS=NCSPLRPH;                  /* GET THE RPH FROM THE NCSPL.*/
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0830
*   R2WORK=CF4CID;                     /* REG 2 CONTAINS THE CID.    */
*                                                                  0831
         LR    R2WORK,CF4CID                                       0831
*    DO; /* CIDCTL(FINISH)  */                                     0832
*                                                                  0832
*    RFY (EMCR2,EMCR3) RSTD;                                       0833
*      GEN SETS(RPHWORK)                                           0834
*        (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);      0834
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*      EMCR3 = '00'X; /*CLEAR EXTRA BITS*/                         0835
         SLR   EMCR3,EMCR3                                         0835
*      CALL ATCLCPTR->ATCCDFIN->ISTSDCCR; /*PROCESS REQUEST*/      0836
*                                                                  0836
         L     @07,ATCLCPTR                                        0836
         L     @15,ATCCDFIN(,@07)                                  0836
         BALR  @14,@15                                             0836
*    RFY (EMCR2,EMCR3) UNRSTD;                                     0837
*    END; /*CIDCTL*/                                               0838
*   RFY R2WORK UNRSTD;                                             0839
*                                                                  0839
*CALL TPUNLCK;                         /* PERFORM TPUNLOCK(VOCLOCK). */
*                                                                  0840
         BAL   @14,TPUNLCK                                         0840
*/********************************************************************
* * CALL ISTINCS1, THE STATUS FEEDBACK ROUTER, AFTER SETTING UP THE  *
* * APPROPRIATE PARAMETERS FOR MSG #0.                               *
* ********************************************************************/
*                                                                  0841
*              R1PARMS=R5NCSPL;        /* REG 1=@ OF THE NCSPL.      */
         LR    R1PARMS,R5NCSPL                                     0841
*              MGLSENSE=MGLSENSE &&    /* SENSE=0.                   */
*                       MGLSENSE;                                  0842
         L     @07,NCSMGLPT(,R5NCSPL)                              0842
         XC    MGLSENSE(2,@07),MGLSENSE(@07)                       0842
*              MGLMSGAD=ADDR(MSG0ID);  /* GET @ OF USS MSG ID FIELD. */
         LA    @04,MSG0ID                                          0843
         ST    @04,MGLMSGAD(,@07)                                  0843
*              MGLVDATA=ADDR(VARTEXT2);/* SET PTR TO VARIABLE TEXT.  */
         LA    @04,VARTEXT2                                        0844
         ST    @04,MGLVDATA(,@07)                                  0844
*              CALL ISTINCS1;          /* INVOKE ISTINCS1 TO SEND    */
         L     @15,@CV03961                                        0845
         BALR  @14,@15                                             0845
*                                      /* RESPONSE.                  */
*              CALL CRR;               /* UPDATE THE COMPONENT RECOV-*/
         BAL   @14,CRR                                             0846
*                                      /* ERY AUDIT TRAIL.           */
*                                                                  0847
*/********************************************************************
* *                      CIDCTL(FIND)                                *
* ********************************************************************/
*                                                                  0847
*   RFY R2WORK RSTD;                                               0847
*   R1PARMS=NCSPLRPH;                  /* GET THE RPH FROM THE NCSPL.*/
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0848
*   R2WORK=CF4CID;                     /* REG 2 CONTAINS THE CID.    */
*                                                                  0849
         LR    R2WORK,CF4CID                                       0849
*    DO; /* CIDCTL(FIND)  */                                       0850
*                                                                  0850
*    RFY (EMCR2,EMCR3) RSTD;                                       0851
*      GEN SETS(RPHWORK)                                           0852
*        (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);      0852
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*      EMCR3 = '00'X; /*CLEAR EXTRA BITS*/                         0853
         SLR   EMCR3,EMCR3                                         0853
*      EMCR3 = '01'X; /*INDICATE SHARED LOCK*/                     0854
         LA    EMCR3,1                                             0854
*      CALL ATCLCPTR->ATCCDFND->ISTSDCCF; /*PROCESS REQUEST*/      0855
*                                                                  0855
         L     @10,ATCLCPTR                                        0855
         L     @15,ATCCDFND(,@10)                                  0855
         BALR  @14,@15                                             0855
*    RFY (EMCR2,EMCR3) UNRSTD;                                     0856
*    END; /*CIDCTL*/                                               0857
*   RFY REG0 RSTD;                                                 0858
*   RFY R15RETRN RSTD;                                             0859
*   IF R15RETRN=0                      /* IF FOUND THEN IF IT IS A   */
*     THEN DO;                         /* CONDITIONAL TERMINATE THEN */
         LTR   R15RETRN,R15RETRN                                   0860
         BNZ   @RF00860                                            0860
*       IF TCOND='1'B                  /* SET UP FOR         @D32CKLB*/
*         THEN DO;                     /* ISTINCIO TO DO A NOTIFY.   */
         TM    TCOND(R3RUPTR),B'00100000'                          0862
         BNO   @RF00862                                            0862
*           NCSPLCMD=NCSCNOTF;         /* NCSPL COMMAND=NOTIFY.      */
         MVC   NCSPLCMD(2,R5NCSPL),@CB00661                        0864
*           NCSPRMRC=UECNDTRM;         /* PURGE MINOR RETURN CODE =  */
         MVI   NCSPRMRC(R5NCSPL),X'20'                             0865
*                                      /* 'CONDITIONAL TERMINATE'  0866
*                                                            @DM13723*/
*              END;                                                0866
*         ELSE DO;                     /* IF IT IS NOT A CONDITIONAL */
         B     @RC00862                                            0867
@RF00862 DS    0H                                                  0868
*                                      /* TERMINATE THEN SET UP THE  */
*                                      /* PARAMETERS FOR ISTINCIO TO */
*                                      /* DO A CLEAR/UNBIND/NOTIFY.  */
*           NCSPLCMD=NCSNCPPG;         /* NCSPL COMMAND=CLEAR/UNBIND */
         MVC   NCSPLCMD(2,R5NCSPL),@CB00838                        0868
*                                      /* /NOTIFY.                   */
*           NCSPRMRC=UECTERM;          /* PURGE MINOR RETURN CODE =  */
         MVI   NCSPRMRC(R5NCSPL),X'14'                             0869
*                                      /* 'TERMINATE'        @DM13723*/
*              END;                                                0870
*                                                                  0870
*/********************************************************************
* * CALL ISTINCIO AFTER SETTING UP THE REMAINING PARAMETERS.         *
* ********************************************************************/
*                                                                  0871
*NCSOUFMC='1'B;                        /* INDICATE ONLY USER FMCB    */
@RC00862 OI    NCSOUFMC(R5NCSPL),B'00010000'                       0871
*                                      /* CLEARED.                   */
*NCSPLSAF=R2WORK->FMCSAF;              /* SAF=SAF FROM APPL RDTE.    */
         MVC   NCSPLSAF(2,R5NCSPL),FMCSAF(R2WORK)                  0872
*NCSPLDAF=REG0->NCBDAF;                /* DAF=DAF FROM NCB.          */
         LR    @10,REG0                                            0873
         MVC   NCSPLDAF(2,R5NCSPL),NCBDAF(@10)                     0873
*R1PARMS=R5NCSPL;                      /* REG 1= @ OF THE NCSPL.     */
         LR    R1PARMS,R5NCSPL                                     0874
*R2WORK=R2WORK->FMCDNCBA;              /* REG 2= @ OF APPL/LU NCB.   */
         L     R2WORK,FMCDNCBA(,R2WORK)                            0875
*CALL ISTINCIO;                        /* CALL ISTINCIO TO DO CLEAR/ */
         L     @15,@CV03965                                        0876
         BALR  @14,@15                                             0876
*RFY (R2WORK,REG0) UNRSTD;             /* UNBIND/NOTIFY. UPDATE      */
*CALL CRR;                             /* THE RECOVERY RECORD AUDIT  */
         BAL   @14,CRR                                             0878
*          END;                        /* TRAIL.                     */
*IF TLAST='1'B                         /* IF TERM SELF LAST  @D32CKLB*/
*  THEN FMCTSLHA='1'B;                 /* THEN SET FLAG IN LU-SSCP   */
@RF00860 TM    TLAST(R3RUPTR),B'00010000'                          0880
         BNO   @RF00880                                            0880
         L     @10,NCSUFMCB(,R5NCSPL)                              0881
         OI    FMCTSLHA(@10),B'00001000'                           0881
*  ELSE;                               /* FMCB               @D32CKLB*/
@RF00880 DS    0H                                                  0883
*REG14=TM1SAVE;                        /* RESTORE REGISTER 14.       */
         L     REG14,TM1SAVE                                       0883
*END INCF4TM1;                                                     0884
@EL00003 DS    0H                                                  0884
@EF00003 DS    0H                                                  0884
@ER00003 BR    @14                                                 0884
*CS1:PROC OPTIONS (NOSAVE);                                        0885
CS1      DS    0H                                                  0886
*CS1SAVE=REG14;                        /* SAVE THE VALUE OF REG 14.  */
*                                                                  0886
         LR    CS1SAVE,REG14                                       0886
*/********************************************************************
* * CALL ISTINCS1, THE STATUS FEEDBACK ROUTER, AFTER SETTING UP THE  *
* * PARAMETERS TO ISSUE MSG #6.                                      *
* ********************************************************************/
*                                                                  0887
*       R1PARMS=R5NCSPL;               /* REG 1=@ OF THE NCSPL.      */
         LR    R1PARMS,R5NCSPL                                     0887
*       MGLNS1=SRURRE;                 /* SENSE=REQUEST REJECT,      */
         L     @10,NCSMGLPT(,R5NCSPL)                              0888
         MVI   MGLNS1(@10),X'08'                                   0888
*       MGLNS2=SRUMI;                  /* MODE INCONSISTENCY.        */
         MVI   MGLNS2(@10),X'09'                                   0889
*       MGLMSGAD=ADDR(MSG6ID);         /* GET @ OF USS MSG ID FIELD. */
         LA    @07,MSG6ID                                          0890
         ST    @07,MGLMSGAD(,@10)                                  0890
*       MGLVDATA=0;                    /* INDICATE NO VARIABLE DATA. */
         SLR   @07,@07                                             0891
         ST    @07,MGLVDATA(,@10)                                  0891
*       CALL ISTINCS1;                 /* INVOKE ISTINCS1 TO SEND    */
         L     @15,@CV03961                                        0892
         BALR  @14,@15                                             0892
*                                      /* RESPONSE.                  */
*REG14=CS1SAVE;                        /* RESTORE REGISTER 14.       */
         LR    REG14,CS1SAVE                                       0893
*END CS1;                                                          0894
@EL00004 DS    0H                                                  0894
@EF00004 DS    0H                                                  0894
@ER00004 BR    @14                                                 0894
*CRR:PROC OPTIONS (NOSAVE);                                        0895
*                                                                  0895
CRR      DS    0H                                                  0896
*/********************************************************************
* * UPDATE COMPONENT RECOVERY RECORD AUDIT TRAIL TO INDICATE THE     *
* * RETURN FROM SUBROUTINE ISTINCS1.                                 *
* ********************************************************************/
*                                                                  0896
*  DO;                                                             0896
*/***  CRRMAINT  PROCNM(ISTINCF4)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
**/                                                                0897
*  /*** CLEAR AND SET CURRENT PROCEDURE BIT ***/                   0897
*NCSPLRPH->RPHCRR->CRACRR->VYCCRT = '0'B;                          0897
         L     @07,NCSPLRPH(,R5NCSPL)                              0897
         L     @07,RPHCRR(,@07)                                    0897
         L     @07,CRACRR(,@07)                                    0897
         XC    VYCCRT+1(11,@07),VYCCRT+1(@07)                      0897
         MVI   VYCCRT(@07),B'00000000'                             0897
*NCSPLRPH->RPHCRR->CRACRR->CINCF4 = '1'B;                          0898
         OI    CINCF4(@07),B'00100000'                             0898
*  END;                                                            0899
*                                                                  0899
*END CRR;                                                          0900
@EL00005 DS    0H                                                  0900
@EF00005 DS    0H                                                  0900
@ER00005 BR    @14                                                 0900
*TPUNLCK:PROC OPTIONS(NOSAVE);                                     0901
*                                                                  0901
TPUNLCK  DS    0H                                                  0902
*/********************************************************************
* *                  TPUNLOCK - V/O/C LOCK                           *
* ********************************************************************/
*                                                                  0902
*R1PARMS=NCSPLRPH;                     /* REG 1=@ OF THE RPH.        */
         L     R1PARMS,NCSPLRPH(,R5NCSPL)                          0902
*/*** START -TPUNLOCK (VOCLOCK)- ***/                              0903
* DO;                                                              0903
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)  */                             0904
*/* END OF ATBUILD */                                              0904
*                                                                  0904
* RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;            0904
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ATCVOCLK);       /*SET PARAM - LOCKWORD PTR*/
         L     GPR02P,NCSPLCVT(,R5NCSPL)                           0906
         LA    GPR02P,ATCVOCLK(,GPR02P)                            0906
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0907
         L     GPR04P,RPHCRR(,GPR01P)                              0907
*        GPR00P = CRALMS02;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,2                                            0908
*        GPR03P = ADDR(GPR04P->CRAL2PTR);                          0909
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0909
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*                                                                  0910
* DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                    0910
*   GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                    0911
         L     GPR15P,ATCLCPTR                                     0911
* END; /*LISATCVT*/                                                0912
*        GPR15P=GPR15P->ATCAP33;                                   0913
         L     GPR15P,ATCAP33(,GPR15P)                             0913
*        DCL FMZL0066 BASED(GPR15P) LABEL VALUERANGE(*);           0914
*        CALL FMZL0066;                                            0915
         BALR  @14,@15                                             0915
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0916
*                                                                  0916
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
* RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;          0917
*        END;                                                      0918
*/*** END -TPUNLOCK (VOCLOCK)- ***/                                0919
*                                                                  0919
*END TPUNLCK;                                                      0919
*                                                                  0919
@EL00006 DS    0H                                                  0919
@EF00006 DS    0H                                                  0919
@ER00006 BR    @14                                                 0919
@PB00006 DS    0H                                                  0920
*/* TPEPILOG   */                                                  0920
* GEN (PRINT OFF);                                                 0920
*                                                                  0920
         PRINT OFF
*/* VS1, VS2 TPIOS SAVEAREA FORMAT */                              0921
*DCL  1  ISTZSAVE BDY(WORD) BASED,                                 0921
*        2   ZSAZSVBC PTR(31),         /* SAVEAREA BACK CHAIN        */
*            3   ZSAZSVMS CHAR(1),     /* MODULE TRACE CODE          */
*                4 ZSAZACTV BIT(1),    /* ACTIVE SAVE AREA FLAG      */
*        2   ZSAZSVFC PTR(31),         /* SAVEAREA FORWARD CHAIN     */
*        2   ZSAZSVRR PTR(31),         /* RETURN REGISTER            */
*        2   ZSAZSVVR (6) PTR(31),    /* VARIABLE REGS (7-12) SVEAREA*/
*        2   ZSAZTRAC CHAR(4);        /* EBCDIC NAME OF OWNER        */
*/*                                                                0922
*THE FOLLOWING EQUATES SHOULD READ ''FIXED(8) CONSTANT(LENGTH(X))'',
*WHERE X IS THE NAME OF THE VARIABLE CONTROL BLOCK OR FIELD OF WHICH
*LENGTH IS THE VALUE BEING EQUATED, SHOULD THE PLS COMPILER BE     0922
*BE ABLE TO TAKE IT.                                               0922
*                                                                    */
*DCL ZSAZSVVA FIXED(8) CONSTANT(8);  /* DISPLACEMENT TO VARIABLE REGS*/
*DCL ZSAZSVSZ FIXED(8) CONSTANT(40); /* LENGTH OF ISTZSAVE           */
*/* PREFIX FOR CRR                                                   */
*/*                                                                  */
*/* RELEASE 1 - JUNE 28, 1973                                        */
*/*                                                                  */
*DCL 1 ISTPFCRR BASED BDY(WORD),        /* PREFIX FOR CRR            */
*     2  PFCCRR   CHAR(4),              /* CRR HEADER                */
*        3  PFCCRRID CHAR(1),           /* CRR ID FIELD              */
*           4  CRRID CHAR(1),           /* BASIC CTL LAYER DEFINITION*/
*        3  PFCRSV10 CHAR(1),           /* RESERVED FOR ALIGNMENT    */
*        3  PFCCRRLN CHAR(2),           /* CRR LENGTH                */
*           4  CRRLEN CHAR(2),          /* BASIC CTL LAYER DEF       */
*     2  PFCHDR CHAR(8) BDY(WORD),      /* SAVE AREA FOR OLD CRR FRR */
*        3  PFCCRRO  PTR(31),           /* PTR TO OLD CRR            */
*           4  CRRCHAIN PTR(31),        /* BASIC CTL LAYER DEFINITION
*                                          FOR OLD CRR PTR           */
*        3  PFCFRRO  PTR(31),           /* PTR TO OLD FRR            */
*           4  CRRFRR   PTR(31),        /* BASIC CTL LAYER         0924
*                                          DEFINITION OF OLD FRR PTR */
*     2  PFCFTA BIT(8),                 /* ID OF LAST FUNCTION TRACED*/
*     2  PFCRSV01 CHAR(3);              /* ALIGNMENT                 */
*DCL PFIDPIE BIT(8) CONSTANT('80'X);    /* DOS/VS TPIOS              */
*DCL PFIDORE BIT(8) CONSTANT('81'X);    /* DOS/VS BMS                */
*DCL PFIDAPE BIT(8) CONSTANT('82'X);    /* DOS/VS PSS                */
*DCL PFCIDPSV BIT(8) CONSTANT('38'X); /* COMPONENT ID              0928
*                                          PSS - VS1 AND 2           */
*DCL PFCIDTPV BIT(8) CONSTANT('3C'X); /* COMPONENT ID              0929
*                                          TPIOS VS1 AND 2           */
*DCL PFCIDSME BIT(8) CONSTANT('3D'X); /* COMPONENT ID              0930
*                                          STORAGE MANAGEMENT DOS    */
*DCL PFCIDOC BIT(8) CONSTANT('31'X);    /* COMPONENT ID OPEN/CLOSE   */
*DCL PFCIDPS BIT(8) CONSTANT('32'X);    /* PORT SOLICITOR            */
*DCL PFCIDCS BIT(8) CONSTANT('34'X);    /* CLUSTER SOLICITOR         */
*DCL PFCIDIT BIT(8) CONSTANT('35'X);    /* INIT/TERM                 */
*DCL PFCIDVY BIT(8) CONSTANT('36'X);    /* VARY                      */
*DCL PFCIDNS  BIT(8) CONSTANT('37'X);   /* NET. STAT.SRV.            */
*DCL PFCIDTPE BIT(8) CONSTANT('38'X);   /* COMPONENT ID            0937
*                                          TPIOS - DOS               */
*DCL PFCIDCL BIT(8) CONSTANT('39'X);    /* COMPONENT ID            0938
*                                          CONTROL LAYER             */
*DCL PFCIDPSE BIT(8) CONSTANT('3A'X);   /* COMPONENT ID            0939
*                                          PSS - DOS                 */
*DCL PFCIDSMV BIT(8) CONSTANT('3F'X);   /* COMPONENT ID            0940
*                                          STORAGE MANAGEMENT        */
*DCL PFCIDTIO BIT(8) CONSTANT('40'X);   /* COMPONENT ID TIIO       0941
*                                          PROCESSING (VS2)          */
*DCL PFCIDRS  BIT(8) CONSTANT('41'X);   /* ID FOR REMOTE SOLICITOR   */
*/* CRR FOR COMMAND FACILITIES                                      */
*DCL  1  ISTCFCRR BDY(WORD) BASED, /* CRR FOR COMMAND FACILITIES    */
*        2 CFCAUDIT,               /* AUDIT TRAIL FOR CMD FACILITIES*/
*          3 CFCNTRD  CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES ENTERED            */
*            4 NCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 ENTERED   */
*            4 NCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 ENTERED   */
*            4 NCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 ENTERED   */
*            4 NCFCRP   BIT(1),    /* IND MODULE ISTCFCRP ENTERED   */
*            4 NCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 ENTERED   */
*            4 NCFRSVD  BIT(3),    /* RESERVED                      */
*          3 CFCCRT   CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES RUNNING            */
*            4 CCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 RUNNING   */
*            4 CCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 RUNNING   */
*            4 CCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 RUNNING   */
*            4 CCFCRP   BIT(1),    /* IND MODULE ISTCFCRP RUNNING   */
*            4 CCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 RUNNING   */
*            4 CCFRSVD1 BIT(3);    /* RESERVED                      */
*/* COMPONENT RECOVERY RECORD FOR TPIOS */                         0944
*/*  DELTA                                             006 02/10/75  */
*DCL                                                               0944
*1  ISTZCRR BDY(WORD) BASED,     /* CONTROL WORD                     */
*   2  ZCRCRR CHAR(4),           /* CONTROL WORD                     */
*      3  ZCRID CHAR(1),         /* CONTROL BLOCK ID                 */
*      3  ZCRLEN CHAR(2),        /* LENGTH OF ZCR                    */
*      3  ZCRFLAG CHAR(1),       /* FLAGS                            */
*   2  ZCRCHAIN PTR(31),         /* POINTER TO PREVIOUS ZCR          */
*   2  ZCRFRRA PTR(31),          /* PTR TO FRR                       */
*   2  ZCRFLGS1 CHAR(1),         /* FLGS USED BY REQUEST COMPLETION  */
*      3  ZCREXSW BIT(1),        /* EXIT SWITCH                      */
*      3  ZCRQUESW BIT(1),       /* QUEUE SWITCH                     */
*      3  ZCRDEQSW BIT(1),       /* DEQUEUE SWITCH                   */
*      3  ZCRWAIT BIT(1),        /* WAIT Q ANALYSIS COMPLETE         */
*      3  ZCRNRMEX BIT(1),       /* NORMAL EXIT TO BE TAKEN          */
*      3  ZCRENDLP BIT(1),       /* END OF LOOP SWITCH               */
*      3  ZCRUNSOL BIT(1),       /* UNSOLICITED DATA                 */
*      3  ZCRFEXIT BIT(1),       /* FORCE EXIT SWITCH                */
*   2  ZCRFLGS2 CHAR(1),         /* FLAGS USED WITHIN TPIOS          */
*      3  ZCRLOCAL BIT(1),       /* LOCAL SUPPORT                    */
*      3  ZCRSHEDI BIT(1),       /* IMMEDIATE SCHEDULE               */
*      3  ZCRFMSED BIT(1),       /* FMCB SEARCH ENDED                */
*      3  ZCROB    BIT(1),       /* OUTBOUND PROC IN PROGRESS        */
*      3  ZCRIF0E1 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E2 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E3 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*   2  ZCRSWFLD CHAR(1),         /* SWITCHES FOR TPIOS OUTBOUND      */
*      3  ZCRENDSH BIT(1),       /* EXIT FROM REMOTE DEV SCHEDULER   */
*         4  ZCRSLCP BIT(1),     /* SCHEDULE LCPB                    */
*      3  ZCREXTYP BIT(1),       /* TPEXIT TYPE                      */
*      3  ZCRENDPR BIT(1),       /* EXIT FROM INNER PROCESS          */
*      3  ZCRNDLCP BIT(1),       /* EXIT FROM LCPB PROCESSING        */
*         4  ZCROB1 BIT(1),      /* REMOTE DEV SCHED 1ST TIME SWITCH */
*      3  ZCRENDX BIT(1),        /* EXIT FROM LCCW/BTU XLATION       */
*      3  ZCRENDXL BIT(1),       /* EXIT FROM LCCW PROC              */
*      3  ZCRENDAN BIT(1),       /* EXIT FROM LCPB ANALYSIS          */
*      3  ZCRRESET BIT(1),                                         0944
*         4  ZCRCNLXL BIT(1),    /* CANCEL FURTHER XLATE             */
*   2  ZCRFLGS3 CHAR(1),         /* FLAGS FOR OUTBOUND PROCESSING    */
*      3  ZCRTIC BIT(1),         /* SELECT NOT TO BE SENT            */
*      3  ZCRTPCON BIT(1),       /* TPIOS CONTACT SENT               */
*      3  ZCRTPDIS BIT(1),       /* TPIOS DISCONNECT TO BE SENT      */
*      3  ZCRDISC  BIT(1),       /* DISCONNECT IN PROCESS            */
*      3  ZCREDRIV BIT(1),       /* DO DERIVE                        */
*      3  ZCRNOFRE BIT(1),       /* NO FREEING OF SIO QUEUE          */
*      3  ZCRWRPTR BIT(1),       /* WRITE TO PRINTER REQUEST         */
*      3  ZCRINLCP BIT(1),       /* ERROR OCCURED DURING OUTBND PROC */
*   2  ZCRGENSW CHAR(1),         /* GENERAL SWITCHES                 */
*      3  ZCRTSW1  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRTSW2  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRRT06  BIT(1),       /* CRITICAL TEXT OPTION             */
*      3  ZCRLCSYN BIT(1),       /* LCCW SYNC SPECIFIED              */
*      3  ZCREXRES BIT(1),       /* EXCEPTION RESPONSE SPECIFIED     */
*      3  ZCRCLRBD BIT(1),       /* FLAG INDICATING BIND WAS CLEARED */
*      3  ZCRBRIS  BIT(1),       /* BRACKET REJECTED DUE TO IN BRAC. */
*      3  ZCRF1RES BIT(1),       /* FID1 RESPONSE TO BE GENERATED    */
*   2  ZCRPFLGS CHAR(1),         /* UTILITIES PROC OPTION FLAGS      */
*      3  ZCRQAHED BIT(1),      /* QXFR RTN TO USE INSERT OPT'N ON TPQ*
*      3  *        BIT(7),      /* RESERVED                          */
*   2  ZCRIBPR CHAR(1),          /* INBOUND PROCESSING FLAGS         */
*         3  ZCRNOBUF BIT(1),    /* FSB WITH NO BUFFER               */
*         3  ZCRERR   BIT(1),    /* ERROR INDICATOR                  */
*         3  ZCRRELK  BIT(1),    /* RESET ERROR LOCK FUNCTION REQ.   */
*         3  ZCRLCPFR BIT(1),    /* FLAG IND. DEALLOCATE ATOP LCPB   */
*         3  ZCRLCPFD BIT(1),    /* FLAG IND. LCPB FOUND ON WAITQ    */
*         3  ZCR3270  BIT(1),    /* 3270 DEVICE                      */
*         3  ZCR3270R BIT(1),    /* 3270 DEVICE IN RECORD MODE       */
*         3  *        BIT(1),    /* RESERVED                         */
*   2  ZCRSCPSW CHAR(1),         /* SESSION CONTROL FLAGS            */
*         3  ZCRTPEX BIT(1),     /* TP EXIT                          */
*         3  ZCRTPINV BIT(1),    /* INVOKE TPIOS                     */
*         3  ZCRRJLCP BIT(1),    /* LCPB REJECTED                    */
*         3  ZCRLREQ BIT(1),     /* REQUEST                          */
*         3  ZCRPRCMP BIT(1),    /* PROCESSING COMPLETE              */
*         3  ZCRFSBWE BIT(1),    /* FSB IS WORK ELEMENT              */
*         3  ZCRSKIPT BIT(1),    /* SKIP TRACE FLAG                  */
*         3  *       BIT(1),     /* RESERVED                         */
*   2  ZCRCRLCP PTR(31),         /* CURRENT LCPB PTR                 */
*   2  ZCRPARMS BDY(WORD),       /* PARAMETERS PASSED TO UTILITIES */
*      3  ZCRFBPTR PTR(31),      /* PTR TO FROM BUFFER               */
*         4  ZCRCBPTR PTR(31),   /* PTR TO CURRENT BUFFER            */
*      3  ZCRTBPTR PTR(31),      /* PTR TO TO-OR-TRANSLATE BUFFER    */
*      3  ZCRMLNG FIXED(15),     /* LENGTH TO MOVE                   */
*      3  ZCRDFRDA FIXED(15),    /* OFFSET FROM DATA ADDR IN FROM BUF*/
*         4  ZCRDTODA FIXED(15), /* OFFSET FROM DATA ADDR XLATE BUF  */
*      3  ZCRPCOD1 CHAR(1),      /* CODE BYTE FOR ALLOC/DISALLOC     */
*         4  ZCRPPG BIT(1),      /* GET PAGEABLE BUFF                */
*         4  ZCRPLNG BIT(1),     /* LENGTH OF BUFFER SPECIFIED       */
*         4  ZCRPFSB BIT(1),     /* GET FSB                          */
*         4  ZCRPLSBF BIT(1),    /* GET LSCB AND BUFFER              */
*            5 ZCRPLSBQ BIT(1),  /* PURGE LSCB QUEUE                 */
*         4  ZCRPLSCB BIT(1),    /* GET OR RELEASE LSCB              */
*         4  ZCRPBUF BIT(1),     /* GET OR RELEASE BUFFER            */
*         4  ZCRPCFTX BIT(1),    /* CONFIDENTIAL TEXT                */
*         4  ZCRPRES BIT(1),     /* RESERVED                         */
*      3  ZCRPCOD2 CHAR(1),      /* CODE BYTE FOR MOVE               */
*         4  ZCRPPG2 BIT(1),     /* GET PAGEABLE BUFFER              */
*         4  ZCRPFHDR BIT(1),    /* FROM BUFFER FDB TO BE USED       */
*         4  ZCRPMFGF BIT(1),    /* MOVE STARTS WIHT 1ST BUFF IN BLOCK*
*         4  ZCRPRES2 BIT(5),    /* RESERVED                         */
*      3  ZCRPCHAR CHAR(1),      /* TRANSLATE & TEST SEARCH CHARACTER*/
*      3  ZCRPSW   CHAR(1),      /* SWITCH FIELD                     */
*   2  ZCRCCWA PTR(31),          /* PTR TO CURRENT CCW (CCW 1 OR 2)  */
*   2  ZCRBFPTR PTR(31),         /* SAVE 1ST BUFF PTR IN TO-BUFF CHN
*                                   OR LAST BUFFER IN CHANNEL PGM    */
*   2  ZCRZLB PTR(31),           /* PTR TO CURR BUFF IN CHANNEL PGM  */
*   2  ZCRPVZB PTR(31),          /* PTR TO PREVIOUS BUFF IN CHAN PGM */
*   2  ZCRSVRTN BDY(WORD),       /* REG 14 SAVE AREAS                */
*      3  ZCRSVF1 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF2 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF3 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF4 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF5 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF6 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF7 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF8 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF9 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF10 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF11 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF12 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF13 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF14 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF15 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF16 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF17 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF18 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF19 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF20 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF21 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF22 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF23 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF24 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF25 PTR(31),      /* SAVE REQUIRED REGISTER           */
*   2  ZCRWKARA BDY(WORD),       /* TEMPORARY REG SAVE AREA          */
*      3  ZCRSVWK1 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK2 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK3 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK4 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK5 PTR(31),      /* SAVE REQUIRED REG                */
*   2  ZCRFSBSV PTR(31),         /* FSB CHAIN PTR SAVEAREA           */
*   2  ZCRFBPRC BIT(1),          /* FSB PROCESS SW                   */
*   2  ZCRMOREL BIT(1),          /* MORE ELEMENTS SW                 */
*   2  ZCRSCANQ BIT(1),          /* SCAN QUEUE SW                    */
*   2  ZCRNXTEL BIT(1),          /* NEXT ELEMENT SW                  */
*   2  ZCRXSCHD BIT(1),          /* EXIT SCHEDULE SW                 */
*   2  ZCRLSTFB BIT(1),          /* INBOUND PROC LAST FSB FOR ELEM SW*/
*   2  ZCRTOPQ  BIT(1),          /* QUEUE ELEMENT TO TOP SW          */
*   2  ZCRAWQSW BIT(1),          /* CHECK AWAITQ FOR MORE WORK =1    */
*                                /* CHECK WAITQ =0                   */
*   2  ZCRRCDSV CHAR(1),         /* RETURN CODE SAVEAREA             */
*   2  ZCRPRMTC CHAR(1),         /* PREEMPT COMPLETION PARAMETER BYTE*/
*   2  ZCROPCDE CHAR(1),         /* OP CODE TO BE TRANSFORMED         *
*   2  ZCRR2SV PTR(31),          /* ISTZBFDI REG 2 SAVE EREA         */
*   2  ZCRR13SV PTR(31),         /* ISTSBFDI REG 13 SAVE EREA        */
*   2  ZCRCIDSV BDY(WORD),       /* ISTZBFDI CID SAVE AREA           */
*      3  ZCRSAFSV CHAR(2),      /* ISTZBFDI SAF SAVE AREA           */
*      3  ZCRDAFSV CHAR(2),      /* ISTZBFDI DAF SAVE AREA           */
*   2  ZCRSAVEZ (6) BDY(WORD) CHAR(LENGTH(ISTZSAVE)),              0944
*                                /* SAVE/TRACE AREAS FOR TPIOS MODS  */
*   2  ZCRREMIC PTR(31),        /* POINTER TO REMOTE RN ICNCB        */
*   2  ZCRAUDIT CHAR(36),        /* TPIOS AUDIT TRAIL AREA           */
*      3  ZCRTID CHAR(1),        /* THREAD I.D.                      */
*      3  ZCRTNAME CHAR(4),      /* LAST 4 CHARS OF THREAD NAME      */
*      3  ZCRENTER BIT(248),     /* BIT ARRAY FOR MODULES ENTERED    */
*         4  ZCREAC1A BIT(1),    /* ISTZAC1A ENTERED                 */
*         4  ZCREAC0A BIT(1),    /* ISTZAC0A ENTERED                 */
*         4  ZCREAC0B BIT(1),    /* ISTZAC0B ENTERED                 */
*         4  ZCREAC1B BIT(1),    /* ISTZAC1B ENTERED                 */
*         4  ZCREBCAA BIT(1),    /* ISTZBCAA ENTERED                 */
*         4  ZCREBCAB BIT(1),    /* ISTZBCAB ENTERED                 */
*         4  ZCREBCAE BIT(1),    /* ISTZBCAE ENTERED                 */
*         4  ZCREBCAG BIT(1),    /* ISTZBCAG ENTERED                 */
*         4  ZCREBCAI BIT(1),    /* ISTZBCAI ENTERED                 */
*         4  ZCREBCAM BIT(1),    /* ISTZBCAM ENTERED                 */
*         4  ZCREBCBA BIT(1),    /* ISTZBCBA ENTERED                 */
*         4  ZCREBCBB BIT(1),    /* ISTZBCBB ENTERED                 */
*         4  ZCREBCBI BIT(1),    /* ISTZBCBI ENTERED                 */
*         4  ZCREBCCB BIT(1),    /* ISTZBCCB ENTERED                 */
*         4  ZCREBCDI BIT(1),    /* ISTZBCDI ENTERED                 */
*         4  ZCREBCEB BIT(1),    /* ISTZBCEB ENTERED                 */
*         4  ZCREBCFA BIT(1),    /* ISTZBCFA ENTERED                 */
*         4  ZCREBCFB BIT(1),    /* ISTZBCFB ENTERED                 */
*         4  ZCREBCGA BIT(1),    /* ISTZBCGA ENTERED                 */
*         4  ZCREBCGB BIT(1),    /* ISTZBCGB ENTERED                 */
*         4  ZCREBCHA BIT(1),    /* ISTZBCHA ENTERED                 */
*         4  ZCREBCHB BIT(1),    /* ISTZBCHB ENTERED                 */
*         4  ZCREBCIA BIT(1),    /* ISTZBCIA ENTERED                 */
*         4  ZCREBCIB BIT(1),    /* ISTZBCIB ENTERED                 */
*         4  ZCREBCID BIT(1),    /* ISTZBCID ENTERED                 */
*         4  ZCREBCJA BIT(1),    /* ISTZBCJA ENTERED                 */
*         4  ZCREBCJB BIT(1),    /* ISTZBCJB ENTERED                 */
*         4  ZCREBCKA BIT(1),    /* ISTZBCKA ENTERED                 */
*         4  ZCREBCKB BIT(1),    /* ISTZBCKB ENTERED                 */
*         4  ZCREBCLA BIT(1),    /* ISTZBCLA ENTERED                 */
*         4  ZCREBCLB BIT(1),    /* ISTZBCLB ENTERED                 */
*         4  ZCREBCMB BIT(1),    /* ISTZBCMB ENTERED                 */
*         4  ZCREBCND BIT(1),    /* ISTZBCND ENTERED                 */
*         4  ZCREBCNE BIT(1),    /* ISTZBCNE ENTERED                 */
*         4  ZCREBCOB BIT(1),    /* ISTZBCOB ENTERED                 */
*         4  ZCREBCPB BIT(1),    /* ISTZBCPB ENTERED                 */
*         4  ZCREBCQB BIT(1),    /* ISTZBCQB ENTERED                 */
*         4  ZCREBCRA BIT(1),    /* ISTZBCRA ENTERED                 */
*         4  ZCREBCRB BIT(1),    /* ISTZBCRB ENTERED                 */
*         4  ZCREBCSC BIT(1),    /* ISTZBCSC ENTERED                 */
*         4  ZCREBCXA BIT(1),    /* ISTZBCXA ENTERED                 */
*         4  ZCREBCX0 BIT(1),    /* ISTZBCX0 ENTERED                 */
*         4  ZCREBCY0 BIT(1),    /* ISTZBCY0 ENTERED                 */
*         4  ZCREBCZ0 BIT(1),    /* ISTZBCZ0 ENTERED                 */
*         4  ZCREBC0A BIT(1),    /* ISTZBC0A ENTERED                 */
*         4  ZCREBC0B BIT(1),    /* ISTZBC0B ENTERED                 */
*         4  ZCRECC0A BIT(1),    /* ISTZCC0A ENTERED                 */
*         4  ZCRECC0B BIT(1),    /* ISTZCC0B ENTERED                 */
*         4  ZCRECC1A BIT(1),    /* ISTZCC1A ENTERED                 */
*         4  ZCRECC1B BIT(1),    /* ISTZCC1B ENTERED                 */
*         4  ZCRECC2B BIT(1),    /* ISTZCC2B ENTERED                 */
*         4  ZCREDCA0 BIT(1),    /* ISTZDCA0 ENTERED                 */
*         4  ZCREDCB0 BIT(1),    /* ISTZDCB0 ENTERED                 */
*         4  ZCREDCC0 BIT(1),    /* ISTZDCC0 ENTERED                 */
*         4  ZCREDCD0 BIT(1),    /* ISTZDCD0 ENTERED                 */
*         4  ZCREDCE0 BIT(1),    /* ISTZDCE0 ENTERED                 */
*         4  ZCREDCF0 BIT(1),    /* ISTZDCF0 ENTERED                 */
*         4  ZCREDCH0 BIT(1),    /* ISTZDCH0 ENTERED                 */
*         4  ZCREDCI0 BIT(1),    /* ISTZDCI0 ENTERED                 */
*         4  ZCREDCJ0 BIT(1),    /* ISTZDCJ0 ENTERED                 */
*         4  ZCREDCKA BIT(1),    /* ISTZDCKA ENTERED                 */
*         4  ZCREDCKB BIT(1),    /* ISTZDCKB ENTERED                 */
*         4  ZCREDCL0 BIT(1),    /* ISTZDCL0 ENTERED                 */
*         4  ZCREDCMB BIT(1),    /* ISTZDCMB ENTERED                 */
*         4  ZCREECBA BIT(1),    /* ISTZECBA ENTERED                 */
*         4  ZCREECBB BIT(1),    /* ISTZECBB ENTERED                 */
*         4  ZCREECCA BIT(1),    /* ISTZECCA ENTERED                 */
*         4  ZCREECCB BIT(1),    /* ISTZECCB ENTERED                 */
*         4  ZCREECDA BIT(1),    /* ISTZECDA ENTERED                 */
*         4  ZCREECEA BIT(1),    /* ISTZECEA ENTERED                 */
*         4  ZCREECTA BIT(1),    /* ISTZECTA ENTERED                 */
*         4  ZCREFCEA BIT(1),    /* ISTZFCEA ENTERED                 */
*         4  ZCREFCEB BIT(1),    /* ISTZFCEB ENTERED                 */
*         4  ZCREGCAB BIT(1),    /* ISTZGCAB ENTERED                 */
*         4  ZCREGCBB BIT(1),    /* ISTZGCBB ENTERED                 */
*         4  *        BIT(1),    /* NOT USED                         */
*         4  ZCREGCDB BIT(1),    /* ISTZGCDB ENTERED                 */
*         4  ZCREGCEB BIT(1),    /* ISTZGCEB ENTERED                 */
*         4  ZCREGCLA BIT(1),    /* ISTZGCLA ENTERED                 */
*         4  ZCREGC0A BIT(1),    /* ISTZGC0A ENTERED                 */
*         4  ZCREGC0B BIT(1),    /* ISTZGC0B ENTERED                 */
*         4  ZCREHCAN BIT(1),    /* ISTZHCAN ENTERED                 */
*         4  ZCREICAA BIT(1),    /* ISTZICAA ENTERED                 */
*         4  ZCREICAB BIT(1),    /* ISTZICAB ENTERED                 */
*         4  ZCREICBB BIT(1),    /* ISTZICBB ENTERED                 */
*         4  ZCREICBI BIT(1),    /* ISTZICBI ENTERED                 */
*         4  ZCREICCB BIT(1),    /* ISTZICCB ENTERED                 */
*         4  ZCREICCI BIT(1),    /* ISTZICCI ENTERED                 */
*         4  ZCREICDB BIT(1),    /* ISTZICDB ENTERED                 */
*         4  ZCREICEB BIT(1),    /* ISTZICEB ENTERED                 */
*         4  ZCREICGB BIT(1),    /* ISTZICGB ENTERED                 */
*         4  ZCREICHB BIT(1),    /* ISTZICHB ENTERED                 */
*         4  ZCREICIB BIT(1),    /* ISTZICIB ENTERED                 */
*         4  ZCREICID BIT(1),    /* ISTZICID ENTERED                 */
*         4  ZCREICJB BIT(1),    /* ISTZICJB ENTERED                 */
*         4  ZCREICKB BIT(1),    /* ISTZICKB ENTERED                 */
*         4  ZCREICKE BIT(1),    /* ISTZICKE ENTERED                 */
*         4  ZCREICKG BIT(1),    /* ISTZICKG ENTERED                 */
*         4  ZCREICLB BIT(1),    /* ISTZICLB ENTERED                 */
*         4  ZCREICMB BIT(1),    /* ISTZICMB ENTERED                 */
*         4  ZCREICNA BIT(1),    /* ISTZICNA ENTERED                 */
*         4  ZCREICNB BIT(1),    /* ISTZICNB ENTERED                 */
*         4  ZCREICOA BIT(1),    /* ISTZICOA ENTERED                 */
*         4  ZCREICOB BIT(1),    /* ISTZICOB ENTERED                 */
*         4  ZCREICQA BIT(1),    /* ISTZICQA ENTERED                 */
*         4  ZCREICQB BIT(1),    /* ISTZICQB ENTERED                 */
*         4  ZCREICRB BIT(1),    /* ISTZICRB ENTERED                 */
*         4  ZCREICSB BIT(1),    /* ISTZICSB ENTERED                 */
*         4  ZCREICSC BIT(1),    /* ISTZICSC ENTERED                 */
*         4  ZCREICTB BIT(1),    /* ISTZICTB ENTERED                 */
*         4  ZCREICUB BIT(1),    /* ISTZICUB ENTERED                 */
*         4  ZCREICVB BIT(1),    /* ISTZICVB ENTERED                 */
*         4  ZCREICWB BIT(1),    /* ISTZICWB ENTERED                 */
*         4  ZCREICX0 BIT(1),    /* ISTZICX0 ENTERED                 */
*         4  ZCREIC0B BIT(1),    /* ISTZIC0B ENTERED                 */
*         4  ZCREIC1B BIT(1),    /* ISTZIC1B ENTERED                 */
*         4  ZCREJCAB BIT(1),    /* ISTZJCAB ENTERED                 */
*         4  ZCREJCBB BIT(1),    /* ISTZJCBB ENTERED                 */
*         4  ZCREJCCB BIT(1),    /* ISTZJCCB ENTERED                 */
*         4  ZCREJCDB BIT(1),    /* ISTZJCDB ENTERED                 */
*         4  ZCREJC0B BIT(1),    /* ISTZJC0B ENTERED                 */
*         4  ZCREKCBB BIT(1),    /* ISTZKCBB ENTERED                 */
*         4  ZCREKCBN BIT(1),    /* ISTZKCBN ENTERED                 */
*         4  ZCREKCCN BIT(1),    /* ISTZKCCN ENTERED                 */
*         4  ZCREDCWR BIT(1),    /* ISTZDCWR ENTERED                 */
*         4  ZCREDCWB BIT(1),    /* ISTZDCWB ENTERED                 */
*         4  ZCREDCXR BIT(1),    /* ISTZDCXR ENTERED                 */
*         4  ZCREBCBR BIT(1),    /* ISTZBCBR ENTERED                 */
*         4  ZCREBCDR BIT(1),    /* ISTZBCDR ENTERED                 */
*         4  ZCREBCAR BIT(1),    /* ISTZBCAR ENTERED                 */
*         4  ZCRECCBI BIT(1),    /* ISTZCCBI ENTERED                 */
*         4  ZCRECCAI BIT(1),    /* ISTZCCAI ENTERED                 */
*         4  ZCRECCCI BIT(1),    /* ISTZCCCI ENTERED                 */
*         4  ZCREAC1R BIT(1),    /* ISTZAC1R ENTERED                 */
*         4  ZCREBCSB BIT(1),    /* ISTZBCSB ENTERED                 */
*         4  ZCREDCPR BIT(1),    /* ISTZDCPR ENTERED                 */
*         4  ZCREDCQR BIT(1),    /* ISTZDCQR ENTERED                 */
*         4  ZCREBCAL BIT(1),    /* ISTZBCAL ENTERED                 */
*         4  ZCREBC0L BIT(1),    /* ISTZBC0L ENTERED                 */
*         4  ZCREBCNB BIT(1),    /* ISTZBCNB ENTERED                 */
*         4  ZCREICOE BIT(1),    /* ISTZICOE ENTERED                 */
*         4  ZCREDCNB BIT(1),    /* ISTZDCNB ENTERED                 */
*         4  ZCREKCCB BIT(1),    /* ISTZKCCB ENTERED                 */
*         4  ZCRECFY0 BIT(1),    /* ISTZCFY0 ENTERED                 */
*         4  ZCREDCK0 BIT(1),    /* ISTZDFK0 ENTERED                 */
*         4  ZCREICSG BIT(1),    /* ISTZICSG ENTERED                 */
*         4  ZCREBCIF BIT(1),    /* ISTZBCIF ENTERED                 */
*         4  ZCREDCMF BIT(1),    /* ISTZDCMF ENTERED                 */
*         4  ZCRELCAB BIT(1),    /* ISTZLCAB ENTERED                 */
*         4  ZCREAC2B BIT(1),    /* ISTZAC2B ENTERED                 */
*         4  ZCREIC2B BIT(1),    /* ISTZIC2B ENTERED                 */
*         4  ZCRRSV97 BIT(97),   /* RESERVED                         */
*   2  ZCRCMNRC CHAR(1),                /* PURGE MWOR RETURN CODE    */
*   2  ZCRWORDA CHAR(3),                /* RESERVED FOR LATER USE    */
*   2  ZCRLCPB  CHAR(LENGTH(ISTLCPB)),  /* 3270 S/R LCPB             */
*      3 ZCRRHRU,                       /* SAVEAREA FOR RH AND RU    */
*        4 ZCRRH    CHAR(3),            /* RH                        */
*        4 ZCRRU    CHAR(*);            /* RU                        */
*DCL ZCTYPE BIT(8) CONSTANT('00'X);   /* ZCR TYPE                   */
*DCL ZCLNG FIXED(15) CONSTANT(172);   /* ZCRR LENGTH                */
*DCL ZCRSAVNO BIT(8) CONSTANT('06'X); /* NUMBER OF SAVEAREAS IN ZCRR */
*DCL ZCRLSVNO BIT(8) CONSTANT('04'X); /* NUMBER OF SAVE AREAS IN   0948
*                                         LOCAL SUPPORT              */
*/* *** EQUATES FOR ZCRRCDSV *** */                                0949
*                                                                  0949
*DCL ZCRMRFSB BIT(8) CONSTANT('0C'X);  /* REQUEST COMPLETION MOVE FSB
*                                         TO PROCESS                 */
*DCL ZCRSRCHQ BIT(8) CONSTANT('10'X);  /* REQUEST COMPLETION SEARCH
*                                         REQUEST QUEUE              */
*DCL ZCREXIT  BIT(8) CONSTANT('14'X);  /* REQUEST COMPLETION EXIT    */
*DCL ZCRSFSB  BIT(8) CONSTANT('18'X);  /* REQUEST COMPLETION SINGLE
*                                         FSB                        */
*DCL ZCRDLFSB BIT(8) CONSTANT('1C'X);  /* REQUEST COMPLETION DUAL FSB *
*DCL ZCRNOSCH BIT (8) CONSTANT('20'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NONE                 */
*DCL ZCRNRSCH BIT (8) CONSTANT('24'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NORM                 */
*DCL ZCRLGERR FIXED(8) CONSTANT(8);    /* LOGICAL ERROR              */
*DCL ZCPLSCB BIT(8) CONSTANT('08'X);   /* GET A RELEASE LSCB         */
*DCL ZCPBUF  BIT(8) CONSTANT('04'X);   /* GET A RELEASE BUFFER       */
*DCL ZCRTAC0A FIXED(8) CONSTANT(01);   /* LOCAL DEVICE SCHEDULER(OUT)*/
*DCL ZCRTAC0B FIXED(8) CONSTANT(02);   /* REMOTE DEVICE SCHEDLER(OUT)*/
*DCL ZCRTCC1A FIXED(8) CONSTANT(03);   /* LOCAL DIALOG SCHEDLER(IN)  */
*DCL ZCRTCC1B FIXED(8) CONSTANT(04);   /* REMOTE DIALOG SCHEDLER(IN) */
*DCL ZCRTDCE0 FIXED(8) CONSTANT(05);   /* NCP SLOWDOWN RECOVERY      */
*DCL ZCRTDCKA FIXED(8) CONSTANT(06);   /* LOCAL GENERAL FUNCTIONS    */
*DCL ZCRTDCKB FIXED(8) CONSTANT(07);   /* REMOTE GENERAL FUNCTIONS   */
*DCL ZCRTFCEB FIXED(8) CONSTANT(08);   /* REMOTE READ BUFFER ALLOC.  */
*DCL ZCRTGCLA FIXED(8) CONSTANT(09);   /* LCAL CTL & TEST FEEDBACK(IN)*
*DCL ZCRTGC0A FIXED(8) CONSTANT(10);   /* LOCAL REQ. COMPLETION(IN)  */
*DCL ZCRTGC0B FIXED(8) CONSTANT(11);   /* REMOTE REQ. COMPLETION(IN) */
*DCL ZCRTICWB FIXED(8) CONSTANT(12);   /* RESET CLEANUP (PHASE 5)    */
*DCL ZCRTIC0B FIXED(8) CONSTANT(13);   /* REMOTE REQ COMPLTION CTL(IN)*
*DCL ZCRTAC1B FIXED(8) CONSTANT(14);   /* ISTZAC1B THREAD ID         */
*DCL ZCRTIC1B FIXED(8) CONSTANT(15);   /* ISTZIC1B THREAD ID         */
*DCL ZCRTCCBI FIXED(8) CONSTANT(16);   /* ISTZCCBI THREAD ID         */
*DCL ZCRTAC1R FIXED(8) CONSTANT(17);   /* ISTZAC1R THREAD ID         */
*DCL ZCRTAC1A FIXED(8) CONSTANT(18);   /* ISTZAC1A THREAD ID         */
*DCL ZCRTLCAB FIXED(8) CONSTANT(19);   /* ISTZLCAB THREAD ID         */
*/* COMPONENT RECOVERY                                               */
*/*                                                                  */
*DCL 1 ISTASCRR BDY(WORD) BASED,        /* CRR FOR SMS               */
*     2  ASCPFCRR CHAR(LENGTH(ISTPFCRR)),                          0978
*     2  ASCFLAGS CHAR(7),              /* FLAGS                     */
*        3  ASCFLG1 CHAR(2),            /* MODULE TRACE FLAGS        */
*           4  ASCFBA BIT(1),           /* ALLOCATION IN PATH        */
*           4  ASCFBD BIT(1),           /* DE-ALLOCATION IN PATH     */
*           4  ASCFSR BIT(1),           /* FSR IN PATH               */
*           4  ASCPASTR BIT(13),        /* RESERVED PATH FLAGS       */
*        3  ASCFLG2 CHAR(2),            /* MODULE IN CONTROL FLAGS   */
*           4  ASCFBAIC BIT(1),         /* ALLOCATION IN CONTROL     */
*           4  ASCFBDIC BIT(1),         /* DE-ALLOCATION IN CONTROL  */
*           4  ASCFSRIC BIT(1),         /* FSR IN CONTROL            */
*           4  ASCICR BIT(13),          /* RESERVED IN CONTROL FLAGS */
*        3  ASCFLG3 CHAR(3),            /* AUDIT FLAGS               */
*           4  ASCFSRGT BIT(1),         /* FSR DOING GET PROCESSING  */
*           4  ASCFBDAL BIT(1),         /* FBD DOING ALLOCATION      */
*           4  ASCKEYF BIT(1),          /* KEY HAS BEEN ALTERED      */
*           4  ASCLLKF BIT(1),          /* LOCAL LOCK HELD           */
*           4  ASCFBDUD BIT(1),         /* FBD USING USER DATA       */
*           4  ASCAUDIT BIT(19),        /* RESERVED AUDIT BITS       */
*     2  ASCKEY CHAR(1),                /* ORIGINAL KEY              */
*     2  ASCETRYA PTR(31),              /* RETRY ADRS FOR CONTINUE 0978
*                                          OPTION                    */
*     2  ASCUSRGS CHAR(16),             /* SAVE AREA FOR USER REGS 0978
*                                          14 - 1                    */
*        3  ASCUSR14 CHAR(4),           /* REGISTER 14               */
*        3  ASCUSR15 CHAR(4),           /* REGISTER 15               */
*        3  ASCUSR00 CHAR(4),           /* REGISTER 0                */
*        3  ASCUSR01 CHAR(4),           /* REGISTER 1                */
*     2  ASCPSREG CHAR(16);             /* SAVE AREA FOR PSS       0978
*                                          REGS 1 - 4                */
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL 1 ISTAPCRR BDY(WORD) BASED,                                   0979
*     2 APCHDRSV CHAR(LENGTH(ISTPFCRR)),  /* HEADER                  */
*     2  APCATFLG CHAR(2),              /* AUDIT TRACE FLAGS         */
*        3  APC51E BIT(1),              /* ISTAPC51 WAS ENTERED      */
*        3  APC52E BIT(1),              /* ISTAPC52  '     '         */
*        3  APC53E BIT(1),              /* ISTAPC53                  */
*        3  APC54E BIT(1),                                         0979
*        3  APC56E BIT(1),                                         0979
*        3  APC57E BIT(1),                                         0979
*        3  APC58E BIT(1),                                         0979
*        3  APC31E BIT(1),                                         0979
*        3 * BIT(8),                    /* RESERVED                  */
*     2  APCRFLG CHAR(2),               /* AUDIT TRACE FLAGS         */
*        3  APC51R BIT(1),              /* ISTAPCR1 IS RUNNING       */
*        3  APC52R BIT(1),              /* ISTAPC52 IS RUNNING       */
*        3  APC53R BIT(1),                                         0979
*        3  APC54R BIT(1),                                         0979
*        3  APC56R BIT(1),                                         0979
*        3  APC57R BIT(1),                                         0979
*        3  APC58R BIT(1),                                         0979
*        3  APC31R BIT(1),                                         0979
*        3  *      BIT(8),              /* RESERVED                  */
*     2  APCPSTA PTR(31),               /* PST@                      */
*     2  APCTCBA PTR(31),               /* TCB@                      */
*     2  APCRTRN PTR(31),               /*@ TO BR14 TO RTN TO SYSTEM */
*     2  APCPABSV PTR(31),              /*SAVED PAB@ TO REDISPATCH   */
*     2  APCQWFO PTR(31),               /* Q@ IN PST WORK AREA ON    */
*     2  APCFRRPM PTR(31),              /* WORKAREA@ RTN'D FROM SETFR*/
*     2  APCSAVE CHAR(72),                                         0979
*        3  APCESTAL CHAR(72),          /* ESTAE PARAMETER LIST AREA */
*     2  APCCOMF CHAR(4) BDY(HWORD),    /* FLAGS USED BY ALL PSS RTN */
*        3  APCCOMF1 CHAR(2),                                      0979
*           4  APCSSTSK BIT(1),         /* IRB TYPE WORK             */
*           4  APCUETSK BIT(1),         /* USER EXIT RUNNING UNDER IRB*
*           4  APCSMCR BIT(1),          /* SMA CRA BEING USED        */
*           4  APCIRB1 BIT(1),          /* IRB1 BEING USED           */
*           4  APCIRB2 BIT(1),          /* IRB2 BEING USED           */
*           4  APCRELR BIT(1),          /*CALL ISTAPC58 TO RLEASE CRA*/
*           4  APCEXIT BIT(1),          /* TELLS ISTAPC58 TO EXIT SYS*/
*           4  APCZLBER BIT(1),         /* ERR WHILE RUNNING ZLFAB PAB*
*           4  * BIT(8),                /* RESERVED                  */
*        3  APCRETCD FIXED(15),         /* RTN CODE FOR R15 FOR SYS  */
*     2  APCSAV1 PTR(31),               /* 1ST SAVE WORD             */
*     2  APCSAV2 PTR(31),               /* 2ND SAVE WORD             */
*     2  APCSWTWD CHAR(4),              /* SWITCH AREA FOR PSS RTN   */
*     2  APC31FLG CHAR(1),              /* ISTAPC31 FLAGS            */
*        3  APCTPXIT BIT(1),            /* TPEXIT IN PROGRESS        */
*        3  APCRESCH BIT(1),            /*PAB TPEXIT OCCURED  RESCHED*/
*        3  APCSORT BIT(1),       /* PAB SORTED TO PROPER PST/MPST   */
*        3  *       BIT(5),       /* RESERVED                        */
*     2  APC52FLG CHAR(1),        /* ISTAPC52 FLAGS                  */
*        3  APCCKRQ BIT(1),       /* CHECK RDY Q FOR WORK            */
*        3  APCSMSR BIT(1),       /* RETURNING SMS RPH               */
*        3  APCQENQ BIT(1),       /* ENQUEUEING PAB'S ON PST Q'S     */
*        3  APCRDQ BIT(1),        /* DEQUEING PAB'S FROM PST RDY Q   */
*        3  APCNWF BIT(1),        /* NO WORK FOUND                   */
*        3  APCWKF   BIT(1),      /* WORK FOUND                      */
*        3    *      BIT(2),      /* RESERVED                        */
*     2  APC53FLG CHAR(1),        /* ISTAPC53 FLAGS                  */
*        3  APCPR153 BIT(1),      /* USED PREALLOCATED CRA           */
*     2  APC54FLG CHAR(1),        /* ISTAPC54 FLAGS                  */
*        3  APCRLST BIT(1),       /* SMS BEING CALLED TO RELEASE UECB*/
*        3  * BIT(7),             /* RESERVED                        */
*     2  APC57FLG CHAR(1),        /* ISTAPC57 FLAGS                  */
*        3  APCRECRA BIT(1),      /* RELEASE CRA BEING DONE          */
*        3  APCNREL BIT(1),       /* DID NOT RELEASE CRA             */
*        3  *   BIT(6),           /* RESERVED                        */
*     2  * CHAR(15);              /* RESERVED                        */
*/*               COMPONENT RECOVERY AREA                            */
*/*  REVISIONS                                         005 04/09/75  */
*DCL 1  ISTCRA BASED BDY(DWORD),        /* COMPONENT RECOVERY AREA   */
*     2  CRABASIC BDY(WORD),            /* CRA WITHOUT PROCESS CRR   */
*      3 CRAHDR CHAR(8) BDY(WORD),      /* CRA HEADER                */
*        4  CRACRR PTR(31),             /* PTR TO ACTIVE CRR         */
*        4  CRAFRR PTR(31),             /* PTR TO ACTIVE FRR         */
*      3 CRALKACT BIT(32),              /* LOCK LEVEL AND          0980
*                                          OWNERSHIP FLAGS           */
*        4  CRALEV32 BIT(1),            /* 1 = LEVEL 32 LOCK HELD    */
*        4  CRALEV31 BIT(1),            /* 1 = LEVEL 31 LOCK HELD    */
*        4  CRALEV30 BIT(1),            /* 1 = LEVEL 30 LOCK HELD    */
*        4  CRALEV29 BIT(1),            /* 1 = LEVEL 29 LOCK HELD    */
*        4  CRALEV28 BIT(1),            /* 1 = LEVEL 28 LOCK HELD    */
*        4  CRALEV27 BIT(1),            /* 1 = LEVEL 27 LOCK HELD    */
*        4  CRALEV26 BIT(1),            /* 1 = LEVEL 26 LOCK HELD    */
*        4  CRALEV25 BIT(1),            /* 1 = LEVEL 25 LOCK HELD    */
*        4  CRALEV24 BIT(1),            /* 1 = LEVEL 24 LOCK HELD    */
*        4  CRALEV23 BIT(1),            /* 1 = LEVEL 23 LOCK HELD    */
*        4  CRALEV22 BIT(1),            /* 1 = LEVEL 22 LOCK HELD    */
*        4  CRALEV21 BIT(1),            /* 1 = LEVEL 21 LOCK HELD    */
*        4  CRALEV20 BIT(1),            /* 1 = LEVEL 20 LOCK HELD    */
*        4  CRALEV19 BIT(1),            /* 1 = LEVEL 19 LOCK HELD    */
*        4  CRALEV18 BIT(1),            /* 1 = LEVEL 18 LOCK HELD    */
*        4  CRALEV17 BIT(1),            /* 1 = LEVEL 17 LOCK HELD    */
*        4  CRALEV16 BIT(1),            /* 1 = LEVEL 16 LOCK HELD    */
*        4  CRALEV15 BIT(1),            /* 1 = LEVEL 15 LOCK HELD    */
*        4  CRALEV14 BIT(1),            /* 1 = LEVEL 14 LOCK HELD    */
*        4  CRALEV13 BIT(1),            /* 1 = LEVEL 13 LOCK HELD    */
*        4  CRALEV12 BIT(1),            /* 1 = LEVEL 12 LOCK HELD    */
*        4  CRALEV11 BIT(1),            /* 1 = LEVEL 11 LOCK HELD    */
*        4  CRALEV10 BIT(1),            /* 1 = LEVEL 10 LOCK HELD    */
*        4  CRALEV09 BIT(1),            /* 1 = LEVEL 9 LOCK HELD     */
*        4  CRALEV08 BIT(1),            /* 1 = LEVEL 8 LOCK HELD     */
*        4  CRALEV07 BIT(1),            /* 1 = LEVEL 7 LOCK HELD     */
*        4  CRALEV06 BIT(1),            /* 1 = LEVEL 6 LOCK HELD     */
*        4  CRALEV05 BIT(1),            /* 1 = LEVEL 5 LOCK HELD     */
*        4  CRALEV04 BIT(1),            /* 1 = LEVEL 4 LOCK HELD     */
*        4  CRALEV03 BIT(1),            /* 1 = LEVEL 3 LOCK HELD     */
*        4  CRALEV02 BIT(1),            /* 1 = LEVEL 2 LOCK HELD     */
*        4  CRALEV01 BIT(1),            /* 1 = LEVEL 1 LOCK HELD     */
*      3 CRAL1PTR PTR(31),              /* PTR TO LEVEL 1 LOCK       */
*      3 CRAL2PTR PTR(31),              /* PTR TO LEVEL 2 LOCK       */
*      3 CRAL3PTR PTR(31),              /* PTR TO LEVEL 3 LOCK       */
*      3 CRAL4PTR PTR(31),              /* PTR TO LEVEL 4 LOCK       */
*      3 CRAL5PTR PTR(31),              /* PTR TO LEVEL 5 LOCK       */
*      3 CRAL6PTR PTR(31),              /* PTR TO LEVEL 6 LOCK       */
*      3 CRAL7PTR PTR(31),              /* PTR TO LEVEL 7 LOCK       */
*      3 CRAL8PTR PTR(31),              /* PTR TO LEVEL 8 LOCK       */
*      3 CRAL9PTR PTR(31),              /* PTR TO LEVEL 9 LOCK       */
*      3 CRALAPTR PTR(31),              /* RESERVED                  */
*/*                                                                  */
*/*   VS1/VS2 EXTENSION                                              */
*/*                                                                  */
*     2  CRARPH CHAR(LENGTH(ISTRPH)),   /* RPH ASSOCIATED WITH     0980
*                                          THIS CRH                  */
*     2  CRAPSS CHAR(LENGTH(ISTAPCRR)), /* PSS CRR                   */
*     2  CRAPROCR CHAR(LENGTH(ISTZCRR)) BDY(DWORD), /* PROCESS CRR   */
*     2  CRASVC CHAR(72) BDY(WORD),     /* SERVICE RTN CRA           */
*        3  CRAASCRR CHAR(LENGTH(ISTASCRR)), /* CRR FOR SMS          */
*        3  CRAHSIZ  PTR(31),           /* HEADER SIZE QUED SMS REQ  */
*        3  CRAMASK  PTR(31),           /* PREFIX MASK QUED SMS REQ  */
*        3  CRABUFA  FIXED(31),         /* BUFF QUE FOR FBQ ALLOCATION*
*           4 CRABFTBA BIT(1),          /* NO BUFFERS ALLOCATED YET   *
*     2  CRARSV01 PTR(31),              /* RESERVED                  */
*     2  CRARSV02 PTR(31),              /* RESERVED                  */
*     2  CRACHAIN PTR(31);              /* CHAIN FIELD USED TO QUEUE
*                                          CRA TO PREALLOCATE QUEUE
*                                          WHEN NOT IN USE           */
*DCL CRALMS32 BIT(32) CONSTANT('80000000'X); /* 32ND LEVEL LOCK MASK */
*DCL CRALMS31 BIT(32) CONSTANT('40000000'X); /* 31ST LEVEL LOCK MASK */
*DCL CRALMS30 BIT(32) CONSTANT('20000000'X); /* 30TH LEVEL LOCK MASK */
*DCL CRALMS29 BIT(32) CONSTANT('10000000'X); /* 29TH LEVEL LOCK MASK */
*DCL CRALMS28 BIT(32) CONSTANT('08000000'X); /* 28TH LEVEL LOCK MASK */
*DCL CRALMS27 BIT(32) CONSTANT('04000000'X); /* 27TH LEVEL LOCK MASK */
*DCL CRALMS26 BIT(32) CONSTANT('02000000'X); /* 26TH LEVEL LOCK MASK */
*DCL CRALMS25 BIT(32) CONSTANT('01000000'X); /* 25TH LEVEL LOCK MASK */
*DCL CRALMS24 BIT(32) CONSTANT('00800000'X); /* 24TH LEVEL LOCK MASK */
*DCL CRALMS23 BIT(32) CONSTANT('00400000'X); /* 23RD LEVEL LOCK MASK */
*DCL CRALMS22 BIT(32) CONSTANT('00200000'X); /* 22ND LEVEL LOCK MASK */
*DCL CRALMS21 BIT(32) CONSTANT('00100000'X); /* 21ST LEVEL LOCK MASK */
*DCL CRALMS20 BIT(32) CONSTANT('00080000'X); /* 20TH LEVEL LOCK MASK */
*DCL CRALMS19 BIT(32) CONSTANT('00040000'X); /* 19TH LEVEL LOCK MASK */
*DCL CRALMS18 BIT(32) CONSTANT('00020000'X); /* 18TH LEVEL LOCK MASK */
*DCL CRALMS17 BIT(32) CONSTANT('00010000'X); /* 17TH LEVEL LOCK MASK */
*DCL CRALMS16 BIT(32) CONSTANT('00008000'X); /* 16TH LEVEL LOCK MASK */
*DCL CRALMS15 BIT(32) CONSTANT('00004000'X); /* 15TH LEVEL LOCK MASK */
*DCL CRALMS14 BIT(32) CONSTANT('00002000'X); /* 14TH LEVEL LOCK MASK */
*DCL CRALMS13 BIT(32) CONSTANT('00001000'X); /* 13TH LEVEL LOCK MASK */
*DCL CRALMS12 BIT(32) CONSTANT('00000800'X); /* 12TH LEVEL LOCK MASK */
*DCL CRALMS11 BIT(32) CONSTANT('00000400'X); /* 11TH LEVEL LOCK MASK */
*DCL CRALMS10 BIT(32) CONSTANT('00000200'X); /* 10TH LEVEL LOCK MASK */
*DCL CRALMS09 BIT(32) CONSTANT('00000100'X); /* 9TH LEVEL LOCK MASK  */
*DCL CRALMS08 BIT(32) CONSTANT('00000080'X); /* 8TH LEVEL LOCK MASK  */
*DCL CRALMS07 BIT(32) CONSTANT('00000040'X); /* 7TH LEVEL LOCK MASK  */
*DCL CRALMS06 BIT(32) CONSTANT('00000020'X); /* 6TH LEVEL LOCK MASK  */
*DCL CRALMS05 BIT(32) CONSTANT('00000010'X); /* 5TH LEVEL LOCK MASK  */
*DCL CRALMS04 BIT(32) CONSTANT('00000008'X); /* 4TH LEVEL LOCK MASK  */
*DCL CRALMS03 BIT(32) CONSTANT('00000004'X); /* 3RD LEVEL LOCK MASK  */
*DCL CRALMS02 BIT(32) CONSTANT('00000002'X); /* 2ND LEVEL LOCK MASK  */
*DCL CRALMS01 BIT(32) CONSTANT('00000001'X); /* 1ST LEVEL LOCK MASK  */
*DCL CRACRA   CHAR(4) CONSTANT('CRA ');      /* CHARACTER C.B. ID    */
* /*  CONNECTION SERVICES COMPONENT RECOVERY RECORD                  */
* /* COMPLETED DCR SOLUTIONS                                         */
* /* 1H0540 APRIL 28, 1973 MB                                        */
*/* ZTR4417 JUNE 20, 73 DNM */                                     1014
* DCL 1 ISTCNSTA BDY(WORD) BASED,       /* CONNECTION SERVICES     1014
*                                          COMPONENT RECOVERY RECORD */
*     2  CNSTPFX CHAR(LENGTH(ISTPFCRR)), /* STANDARD PREFIX        1014
*                                          FOR CRR                   */
*     2  CNSTFLDA CHAR(3),              /* TRACE FIELD A - HISTORY   */
*        3  CNSMRINA BIT(1),            /* MASTER ENTERED            */
*        3  CNSAUTHA BIT(1),            /* ABOUT TO CALL AUTHORI-  1014
*                                          SATION EXIT       ZTR4417 */
*        3  CNSAQINA BIT(1),            /* ACQUIRE ENTERED           */
*        3  CNSXREQA BIT(1),            /* ACQUIRE SATISFIED         */
*        3  CNSQREQA BIT(1),            /* ACQUIRE QUEUED            */
*        3  CNSRLINA BIT(1),            /* RELEASE ENTERED           */
*        3  CNSDORLA BIT(1),            /* DOREL REALLOCATION      1014
*                                          ENTERED                   */
*        3  CNSTRRLA BIT(1),            /* RELEASE OF ACTIVE       1014
*                                          CONNECTION                */
*        3  CNSRQRLA BIT(1),            /* RELEASE QUEUED REQUEST    */
*        3  CNSPSINA BIT(1),            /* PASS ENTERED              */
*        3  CNSACINA BIT(1),            /* ACCEPT ENTERED            */
*        3  CNSLGINA BIT(1),            /* LOGON ENTERED             */
*        3  CNSGBINA BIT(1),            /* PREEMPT ENTERED           */
*        3  CNSCLINA BIT(1),            /* CANCEL ENTERED            */
*        3  CNSCLAQA BIT(1),            /* CANCEL ACQUIRES           */
*        3  CNSTCONA BIT(1),            /* TCONNECT                  */
*        3  CNSACONA BIT(1),            /* ACONNECT                  */
*        3  CNSQUEUA BIT(1),            /* QUEUE                     */
*        3  CNSSEARA BIT(1),            /* SEARCH Q                  */
*        3  CNSGETSA BIT(1),            /* CONNECTION SERVICES     1014
*                                          GETSTORE                  */
*        3  CNSFREEA BIT(1),            /* CONNECTION SERVICES     1014
*                                          FREESTORE                 */
*        3  CNSACCTA BIT(1),            /* ABOUT TO CALL           1014
*                                          ACCOUNTING EXIT           */
*        3  CNSLOG0A BIT(1),            /* LOGON 0                   */
*        3  CNSRSV01 BIT(1),            /* RESERVED                  */
*     2  CNSTFLDB CHAR(3),              /* TRACE FIELD B -         1014
*                                          CURRENT ACTIVITY          */
*        3  CNSMRINB BIT(1),                                       1014
*        3  CNSAUTHB BIT(1),                                       1014
*        3  CNSAQINB BIT(1),                                       1014
*        3  CNSXREQB BIT(1),                                       1014
*        3  CNSQREQB BIT(1),                                       1014
*        3  CNSRLINB BIT(1),                                       1014
*        3  CNSDORLB BIT(1),                                       1014
*        3  CNSTRRLB BIT(1),                                       1014
*        3  CNSRQRLB BIT(1),                                       1014
*        3  CNSPSINB BIT(1),                                       1014
*        3  CNSACINB BIT(1),                                       1014
*        3  CNSLGINB BIT(1),                                       1014
*        3  CNSGBINB BIT(1),                                       1014
*        3  CNSCLINB BIT(1),                                       1014
*        3  CNSCLAQB BIT(1),                                       1014
*        3  CNSTCONB BIT(1),                                       1014
*        3  CNSACONB BIT(1),                                       1014
*        3  CNSQUEUB BIT(1),                                       1014
*        3  CNSSEARB BIT(1),                                       1014
*        3  CNSGETSB BIT(1),                                       1014
*        3  CNSFREEB BIT(1),                                       1014
*        3  CNSACCTB BIT(1),                                       1014
*        3  CNSLOG0B BIT(1),                                       1014
*        3  CNSRSV05 BIT(1);                                       1014
*/*    CRR FOR VARY                                                  */
*/*  REVISIONS                                         009 03/24/75  */
*/*                                                                  */
* DCL 1 ISTVYCRR BDY(WORD) BASED,       /* CRR FOR SSCP              */
*     2  VYCCNS   CHAR(LENGTH(ISTCNSTA)), /* RESERVE SPACE FOR     1015
*                                          CONN. SVCS. AUDIT         */
*     2  VYCAUDIT,                      /* AUDIT TRAIL FOR SSCP      */
*        3  VYCNTRD CHAR(12),           /* LIST OF MODULES IN SSCP   */
*                                       /* 1 = ENTERED               */
*           4  NINCCL BIT(1),           /* MODULE = ISTINCCL         */
*           4  NINCIO BIT(1),           /* MODULE = ISTINCIO         */
*           4  NINCDL BIT(1),           /* MODULE = ISTINCDL         */
*           4  NINCMY BIT(1),           /* MODULE = ISTINCMY         */
*           4  NINCMD BIT(1),           /* MODULE = ISTINCMD         */
*           4  NINCVI BIT(1),           /* MODULE = ISTINCVI         */
*           4  NINCVA BIT(1),           /* MODULE = ISTINCVA         */
*           4  NINCLF BIT(1),           /* MODULE = ISTINCLF         */
*           4  NINCR1 BIT(1),           /* MODULE = ISTINCR1         */
*           4  NINCSM BIT(1),           /* MODULE = ISTINCSM         */
*           4  NINCFS BIT(1),           /* MODULE = ISTINCFS         */
*           4  NINCVX BIT(1),           /* MODULE = ISTINCVX         */
*           4  NINCVP BIT(1),           /* MODULE = ISTINCVP         */
*           4  NINCVS BIT(1),           /* MODULE = ISTINCVS         */
*           4  NINCVN BIT(1),           /* MODULE = ISTINCVO         */
*           4  NINCMS BIT(1),           /* MODULE = ISTINCMS         */
*           4  NINCR2 BIT(1),           /* MODULE = ISTINCR2         */
*           4  NINCIP BIT(1),           /* MODULE = ISTINCIP         */
*           4  NINCD1 BIT(1),           /* MODULE = ISTINCD1         */
*           4  NINCD2 BIT(1),           /* MODULE = ISTINCD2         */
*           4  NINCD3 BIT(1),           /* MODULE = ISTINCD3         */
*           4  NINCD4 BIT(1),           /* MODULE = ISTINCD4         */
*           4  NINCD5 BIT(1),           /* MODULE = ISTINCD5         */
*           4  NINCD6 BIT(1),           /* MODULE = ISTINCD6         */
*           4  NINCD7 BIT(1),           /* MODULE = ISTINCD7         */
*           4  NINCD8 BIT(1),           /* MODULE = ISTINCD8         */
*           4  NINCD9 BIT(1),           /* MODULE = ISTINCD9         */
*           4  NINCE0 BIT(1),           /* MODULE = ISTINCE0         */
*           4  NINCE2 BIT(1),           /* MODULE = ISTINCE2         */
*           4  NINCE3 BIT(1),           /* MODULE = ISTINCE3         */
*           4  NINCE4 BIT(1),           /* MODULE = ISTINCE4         */
*           4  NINCFM BIT(1),           /* MODULE = ISTINCFM         */
*           4  NINCF1 BIT(1),           /* MODULE = ISTINCF1         */
*           4  NINCF3 BIT(1),           /* MODULE = ISTINCF3         */
*           4  NINCF4 BIT(1),           /* MODULE = ISTINCF4         */
*           4  NINCL0 BIT(1),           /* MODULE = ISTINCL0         */
*           4  NINCL1 BIT(1),           /* MODULE = ISTINCL1         */
*           4  NINCL2 BIT(1),           /* MODULE = ISTINCL2         */
*           4  NINCL3 BIT(1),           /* MODULE = ISTINCL3         */
*           4  NINCL4 BIT(1),           /* MODULE = ISTINCL4         */
*           4  NINCL5 BIT(1),           /* MODULE = ISTINCL5         */
*           4  NINCL6 BIT(1),           /* MODULE = ISTINCL6         */
*           4  NINCL7 BIT(1),           /* MODULE = ISTINCL7         */
*           4  NINCL8 BIT(1),           /* MODULE = ISTINCL8         */
*           4  NINCS1 BIT(1),           /* MODULE = ISTINCS1         */
*           4  NINCUM BIT(1),           /* MODULE = ISTINCUM         */
*           4  NINCU0 BIT(1),           /* MODULE = ISTINCU0          *
*           4  NINCU1 BIT(1),           /* MODULE = ISTINCU1         */
*           4  NINCU2 BIT(1),           /* MODULE = ISTINCU2         */
*           4  NINCU3 BIT(1),           /* MODULE = ISTINCU3         */
*           4  NINCU4 BIT(1),           /* MODULE = ISTINCU4         */
*           4  NINCU5 BIT(1),           /* MODULE = ISTINCU5         */
*           4  NINCU6 BIT(1),           /* MODULE = ISTINCU6         */
*           4  NINCU7 BIT(1),           /* MODULE = ISTINCU7         */
*           4  NINCU8 BIT(1),           /* MODULE = ISTINCU8         */
*           4  NINCV2 BIT(1),           /* MODULE = ISTINCV2         */
*           4  NINCV3 BIT(1),           /* MODULE = ISTINCV3         */
*           4  NINCV4 BIT(1),           /* MODULE = ISTINCV4         */
*           4  NINCV5 BIT(1),           /* MODULE = ISTINCV5         */
*           4  NINCV6 BIT(1),           /* MODULE = ISTINCV6         */
*           4  NINCV7 BIT(1),           /* MODULE = ISTINCV7         */
*           4  NINCV8 BIT(1),           /* MODULE = ISTINCV8         */
*           4  NINCV9 BIT(1),           /* MODULE = ISTINCV9         */
*           4  NINCW0 BIT(1),           /* MODULE = ISTINCW0         */
*           4  NINCW2 BIT(1),           /* MODULE = ISTINCW2         */
*           4  NINCW4 BIT(1),           /* MODULE = ISTINCW4         */
*           4  NINCW5 BIT(1),           /* MODULE = ISTINCW5         */
*           4  NINCW6 BIT(1),           /* MODULE = ISTINCW6         */
*           4  NINCW7 BIT(1),           /* MODULE = ISTINCW7         */
*           4  NINCW8 BIT(1),           /* MODULE = ISTINCW8         */
*           4  NINCW9 BIT(1),           /* MODULE = ISTINCW9         */
*           4  NINCX0 BIT(1),           /* MODULE = ISTINCX0         */
*           4  NINCX1 BIT(1),           /* MODULE = ISTINCX1         */
*           4  NINCX2 BIT(1),           /* MODULE = ISTINCX2         */
*           4  NINCX3 BIT(1),           /* MODULE = ISTINCX3         */
*           4  NINCX6 BIT(1),           /* MODULE = ISTINCX6         */
*           4  NINCX7 BIT(1),           /* MODULE = ISTINCX7         */
*           4  NINCX8 BIT(1),           /* MODULE = ISTINCX8         */
*           4  NINCX9 BIT(1),           /* MODULE = ISTINCX9         */
*           4  NINCUA BIT(1),           /* MODULE = ISTINCUA         */
*           4  NINCUB BIT(1),           /* MODULE = ISTINCUB         */
*           4  NINCUQ BIT(1),           /* MODULE = ISTINCUQ         */
*           4  NINCE1 BIT(1),           /* MODULE = ISTINCE1         */
*           4  NINCE5 BIT(1),           /* MODULE = ISTINCE5         */
*           4  NINCE6 BIT(1),           /* MODULE = ISTINCE6         */
*           4  NINCE7 BIT(1),           /* MODULE = ISTINCE7         */
*           4  NINCE8 BIT(1),           /* MODULE = ISTINCE8         */
*           4  NINCR3 BIT(1),           /* MODULE = ISTINCR3         */
*           4  NINCR5 BIT(1),           /* MODULE = ISTINCR5         */
*           4  NINCVO BIT(1),           /* MODULE = ISTINCVO         */
*           4  NINCE9 BIT(1),           /* MODULE = ISTINCE9         */
*           4  NINCFE BIT(1),           /* MODULE = ISTINCFE         */
*           4  VYCRSV01 BIT(4),         /* RESERVED                  */
*        3  VYCCRT CHAR(12),            /* LIST OF SSCP MODULES      */
*                                       /* 2 =  RUNNING              */
*           4  CINCCL BIT(1),           /* MODULE = ISTINCCL         */
*           4  CINCIO BIT(1),           /* MODULE = ISTINCIO         */
*           4  CINCDL BIT(1),           /* MODULE = ISTINCDL         */
*           4  CINCMY BIT(1),           /* MODULE = ISTINCMY         */
*           4  CINCMD BIT(1),           /* MODULE = ISTINCMD         */
*           4  CINCVI BIT(1),           /* MODULE = ISTINCVI         */
*           4  CINCVA BIT(1),           /* MODULE = ISTINCVA         */
*           4  CINCLF BIT(1),           /* MODULE = ISTINCLF         */
*           4  CINCR1 BIT(1),           /* MODULE = ISTINCR1         */
*           4  CINCSM BIT(1),           /* MODULE = ISTINCSM         */
*           4  CINCFS BIT(1),           /* MODULE = ISTINCFS         */
*           4  CINCVX BIT(1),           /* MODULE = ISTINCVX         */
*           4  CINCVP BIT(1),           /* MODULE = ISTINCVP         */
*           4  CINCVS BIT(1),           /* MODULE = ISTINCVS         */
*           4  CINCVN BIT(1),           /* MODULE = ISTINCVO         */
*           4  CINCMS BIT(1),           /* MODULE = ISTINCMS         */
*           4  CINCR2 BIT(1),           /* MODULE = ISTINCR2         */
*           4  CINCIP BIT(1),           /* MODULE = ISTINCIP         */
*           4  CINCD1 BIT(1),           /* MODULE = ISTINCD1         */
*           4  CINCD2 BIT(1),           /* MODULE = ISTINCD2         */
*           4  CINCD3 BIT(1),           /* MODULE = ISTINCD3         */
*           4  CINCD4 BIT(1),           /* MODULE = ISTINCD4         */
*           4  CINCD5 BIT(1),           /* MODULE = ISTINCD5         */
*           4  CINCD6 BIT(1),           /* MODULE = ISTINCD6         */
*           4  CINCD7 BIT(1),           /* MODULE = ISTINCD7         */
*           4  CINCD8 BIT(1),           /* MODULE = ISTINCD8         */
*           4  CINCD9 BIT(1),           /* MODULE = ISTINCD9         */
*           4  CINCE0 BIT(1),           /* MODULE = ISTINCE0         */
*           4  CINCE2 BIT(1),           /* MODULE = ISTINCE2         */
*           4  CINCE3 BIT(1),           /* MODULE = ISTINCE3         */
*           4  CINCE4 BIT(1),           /* MODULE = ISTINCE4         */
*           4  CINCFM BIT(1),           /* MODULE = ISTINCFM         */
*           4  CINCF1 BIT(1),           /* MODULE = ISTINCF1         */
*           4  CINCF3 BIT(1),           /* MODULE = ISTINCF3         */
*           4  CINCF4 BIT(1),           /* MODULE = ISTINCF4         */
*           4  CINCL0 BIT(1),           /* MODULE = ISTINCL0         */
*           4  CINCL1 BIT(1),           /* MODULE = ISTINCL1         */
*           4  CINCL2 BIT(1),           /* MODULE = ISTINCL2         */
*           4  CINCL3 BIT(1),           /* MODULE = ISTINCL3         */
*           4  CINCL4 BIT(1),           /* MODULE = ISTINCL4         */
*           4  CINCL5 BIT(1),           /* MODULE = ISTINCL5         */
*           4  CINCL6 BIT(1),           /* MODULE = ISTINCL6         */
*           4  CINCL7 BIT(1),           /* MODULE = ISTINCL7         */
*           4  CINCL8 BIT(1),           /* MODULE = ISTINCL8         */
*           4  CINCS1 BIT(1),           /* MODULE = ISTINCS1         */
*           4  CINCUM BIT(1),           /* MODULE = ISTINCUM         */
*           4  CINCU0 BIT(1),           /* MODULE = ISTINCU0          *
*           4  CINCU1 BIT(1),           /* MODULE = ISTINCU1         */
*           4  CINCU2 BIT(1),           /* MODULE = ISTINCU2         */
*           4  CINCU3 BIT(1),           /* MODULE = ISTINCU3         */
*           4  CINCU4 BIT(1),           /* MODULE = ISTINCU4         */
*           4  CINCU5 BIT(1),           /* MODULE = ISTINCU5         */
*           4  CINCU6 BIT(1),           /* MODULE = ISTINCU6         */
*           4  CINCU7 BIT(1),           /* MODULE = ISTINCU7         */
*           4  CINCU8 BIT(1),           /* MODULE = ISTINCU8         */
*           4  CINCV2 BIT(1),           /* MODULE = ISTINCV2         */
*           4  CINCV3 BIT(1),           /* MODULE = ISTINCV3         */
*           4  CINCV4 BIT(1),           /* MODULE = ISTINCV4         */
*           4  CINCV5 BIT(1),           /* MODULE = ISTINCV5         */
*           4  CINCV6 BIT(1),           /* MODULE = ISTINCV6         */
*           4  CINCV7 BIT(1),           /* MODULE = ISTINCV7         */
*           4  CINCV8 BIT(1),           /* MODULE = ISTINCV8         */
*           4  CINCV9 BIT(1),           /* MODULE = ISTINCV9         */
*           4  CINCW0 BIT(1),           /* MODULE = ISTINCW0         */
*           4  CINCW2 BIT(1),           /* MODULE = ISTINCW2         */
*           4  CINCW4 BIT(1),           /* MODULE = ISTINCW4         */
*           4  CINCW5 BIT(1),           /* MODULE = ISTINCW5         */
*           4  CINCW6 BIT(1),           /* MODULE = ISTINCW6         */
*           4  CINCW7 BIT(1),           /* MODULE = ISTINCW7         */
*           4  CINCW8 BIT(1),           /* MODULE = ISTINCW8         */
*           4  CINCW9 BIT(1),           /* MODULE = ISTINCW9         */
*           4  CINCX0 BIT(1),           /* MODULE = ISTINCX0         */
*           4  CINCX1 BIT(1),           /* MODULE = ISTINCX1         */
*           4  CINCX2 BIT(1),           /* MODULE = ISTINCX2         */
*           4  CINCX3 BIT(1),           /* MODULE = ISTINCX3         */
*           4  CINCX6 BIT(1),           /* MODULE = ISTINCX6         */
*           4  CINCX7 BIT(1),           /* MODULE = ISTINCX7         */
*           4  CINCX8 BIT(1),           /* MODULE = ISTINCX8         */
*           4  CINCX9 BIT(1),           /* MODULE = ISTINCX9         */
*           4  CINCUA BIT(1),           /* MODULE = ISTINCUA         */
*           4  CINCUB BIT(1),           /* MODULE = ISTINCUB         */
*           4  CINCUQ BIT(1),           /* MODULE = ISTINCUQ         */
*           4  CINCE1 BIT(1),           /* MODULE = ISTINCE1         */
*           4  CINCE5 BIT(1),           /* MODULE = ISTINCE5         */
*           4  CINCE6 BIT(1),           /* MODULE = ISTINCE6         */
*           4  CINCE7 BIT(1),           /* MODULE = ISTINCE7         */
*           4  CINCE8 BIT(1),           /* MODULE = ISTINCE8         */
*           4  CINCR3 BIT(1),           /* MODULE = ISTINCR3         */
*           4  CINCR5 BIT(1),           /* MODULE = ISTINCR5         */
*           4  CINCVO BIT(1),           /* MODULE = ISTINCVO         */
*           4  CINCE9 BIT(1),           /* MODULE = ISTINCE9         */
*           4  CINCFE BIT(1),           /* MODULE = ISTINCFE         */
*           4  VYCRSV03 BIT(4),         /* RESERVED                  */
*     2  VYCRRSAV CHAR(72),             /* SAVE AREA USED BY ISTINCIP*/
*                                       /* TO CALL ISTINCW3          */
*     2  VYCRRCW3 CHAR(8),              /* PARAM LIST USED BY        */
*                                       /* ISTINCIP TO CALL ISTINCW3 */
*     2  VYCRSV04 CHAR(2),              /* RESERVED                  */
*     2  VYCRSV02 PTR(31);              /* RESERVED                  */
*DCL TIDINCDL BIT(8) CONSTANT('00'X);   /* THREAD ID FOR ISTINCDL    */
*DCL TIDINCMY BIT(8) CONSTANT('01'X);   /* THREAD ID FOR ISTINCMY    */
*DCL TIDINCCL BIT(8) CONSTANT('02'X);   /* THREAD ID FOR ISTINCCL    */
*DCL TIDINCFE BIT(8) CONSTANT('04'X);   /* THREAD ID FOR ISTINCFE    */
*                                                                  1020
* DECLARE                                                          1020
*   EMCR0 PTR REG(0),                                              1020
*   EMCR1 PTR REG(1),                                              1020
*   EMCR2 PTR REG(2),                                              1020
*   EMCR3 PTR REG(3),                                              1020
*   EMCR4 PTR REG(4),                                              1020
*   EMCR5 PTR REG(5),                                              1020
*   EMCR6 PTR REG(6),                                              1020
*   EMCR7 PTR REG(7),                                              1020
*   EMCR8 PTR REG(8),                                              1020
*   EMCR9 PTR REG(9),                                              1020
*   EMCR10 PTR REG(10),                                            1020
*   EMCR11 PTR REG(11),                                            1020
*   EMCR12 PTR REG(12),                                            1020
*   EMCR13 PTR REG(13),                                            1020
*   EMCR14 PTR REG(14),                                            1020
*   EMCR15 PTR REG(15);                                            1020
*                                                                  1020
* DECLARE                                                          1021
*   ISTSDCCA ENTRY BASED(ATCCDADD) VALRG(*), /*CIDCTL ADD ROUTINE*/
*   ISTSDCCD ENTRY BASED(ATCCDDEL) VALRG(*), /*CIDCTL DELETE ROUTINE*/
*   ISTSDCCF ENTRY BASED(ATCCDFND) VALRG(*), /*CIDCTL FIND ROUTINE*/
*   ISTSDCCN ENTRY BASED(ATCCDFDN) VALRG(*), /*CIDCTL FIND NCB ROUTINE*
*   ISTSDCCR ENTRY BASED(ATCCDFIN) VALRG(*); /*CIDCTL FINISH ROUTINE*/
*   DCL CMZCIDM FIXED(15) DEFINED(ATCCIDM); /*CIDMASK ALIAS*/      1022
* DCL ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*); /*RESET ROUTINE*/    1023
* DCL ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*); /*TPQUE ROUTINE*/    1024
* GEN (PRINT ON);                                                  1025
         PRINT ON
*/* END OF TPEPILOG */                                             1026
*END ISTINCF4                                                      1026
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        *
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                        *
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                        *
*;                                                                 1026
@EL00001 DS    0H                                                  1026
@EF00001 DS    0H                                                  1026
@ER00001 LM    @14,@12,12(@13)                                     1026
         BR    @14                                                 1026
@DATA    DS    0H
@SM04868 MVC   WORKRPLX(0),APPLNAME(R3RUPTR)
@DATD    DSECT
         DS    0F
ISTINCF4 CSECT
         DS    0F
@CF00039 DC    F'8'
@CF00488 DC    F'72'
@CF01435 DC    XL4'7FFFFFFF'
@CF01437 DC    XL4'80000000'
@CF01461 DC    XL4'08000000'
@CF03945 DC    XL4'00FFFFFF'
@CF04865 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
FSBPTR   DS    A
FMCBPTR  DS    A
LCPBPTR  DS    A
R0SAVE   DS    A
TRMSAVE  DS    A
TM1SAVE  DS    A
NXAVSAVE DS    A
WORKRPLX DS    CL8
         DS    CL4
RPLWORK  DS    CL112
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTINCF4 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03961 DC    V(ISTINCS1)
@CV03965 DC    V(ISTINCIO)
         DS    0D
@CB00661 DC    X'FFF8'
@CB00838 DC    X'FFFF'
VARTEXT1 DS    CL7
         ORG   VARTEXT1
@NM00074 DC    AL1(6)
@NM00075 DC    CL6'APPLID'
         ORG   VARTEXT1+7
VARTEXT2 DS    CL7
         ORG   VARTEXT2
@NM00076 DC    AL1(6)
@NM00077 DC    CL6'LOGOFF'
         ORG   VARTEXT2+7
MSG0ID   DS    CL4
         ORG   MSG0ID
@NM00078 DC    AL1(3)
@NM00079 DC    CL3'000'
         ORG   MSG0ID+4
MSG4ID   DS    CL4
         ORG   MSG4ID
@NM00080 DC    AL1(3)
@NM00081 DC    CL3'004'
         ORG   MSG4ID+4
MSG6ID   DS    CL4
         ORG   MSG6ID
@NM00082 DC    AL1(3)
@NM00083 DC    CL3'006'
         ORG   MSG6ID+4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CF4CID   EQU   @10
CS1SAVE  EQU   @02
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03P   EQU   @03
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
RPHPTR   EQU   @01
REG0     EQU   @00
R1PARMS  EQU   @01
R2WORK   EQU   @02
R3RUPTR  EQU   @03
DATABASE EQU   @11
R5NCSPL  EQU   @05
NAMEPTR  EQU   @06
SSCPSAVR EQU   @13
REG14    EQU   @14
R15RETRN EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR13   EQU   @13
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR04F   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
ATCLCPTR EQU   1032
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLID    EQU   RPLIDWD
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLLEN2  EQU   RPLLEN
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLNIB   EQU   RPLEXTD1
RPLVTEXT EQU   IFGRPL+76
RPLAAREA EQU   RPLVTEXT
RPLAARLN EQU   RPLVTEXT+4
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
ISTRPL   EQU   0
ISTPOHD  EQU   0
POHSTAT  EQU   ISTPOHD+1
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTNCSPL EQU   0
@NM00027 EQU   ISTNCSPL
NCSPFX   EQU   @NM00027
NCSPLVBF EQU   ISTNCSPL+18
NCSPLVFL EQU   ISTNCSPL+20
NCSPLVF1 EQU   ISTNCSPL+21
NCSPRMRC EQU   ISTNCSPL+22
NCSPLRPT EQU   ISTNCSPL+52
NCSPLCMD EQU   ISTNCSPL+60
NCSCMDA  EQU   NCSPLCMD
NCSCRFLG EQU   ISTNCSPL+67
NCSPLRAD EQU   ISTNCSPL+144
NCSIOCID EQU   ISTNCSPL+148
NCSPLCID EQU   NCSIOCID
NCSPLSAF EQU   NCSPLCID
NCSPLDAF EQU   NCSPLCID+2
NCSPLWKA EQU   ISTNCSPL+152
NCSPLCVT EQU   ISTNCSPL+156
NCSPLRPH EQU   ISTNCSPL+160
NCSPLFSB EQU   ISTNCSPL+168
NCSPLFL1 EQU   ISTNCSPL+176
NCSPLFL2 EQU   ISTNCSPL+177
NCSOUFMC EQU   NCSPLFL2
NCSPLFL3 EQU   ISTNCSPL+178
NCSPLFL4 EQU   ISTNCSPL+179
NCSPLFL5 EQU   ISTNCSPL+181
NCSPLAPP EQU   ISTNCSPL+216
NCSSENSE EQU   ISTNCSPL+244
NCSMGLPT EQU   ISTNCSPL+252
NCSUFMCB EQU   ISTNCSPL+256
NCSCRMSK EQU   ISTNCSPL+268
NCSCHKPT EQU   NCSCRMSK
NCSCRMOD EQU   NCSCRMSK+2
NCSPLSID EQU   ISTNCSPL+271
NCSPLSTA EQU   NCSPLSID
NCSPLPHD EQU   NCSPLSID+1
NCSAPP   EQU   0
NCSAPBUE EQU   NCSAPP+88
NCSUSSRU EQU   0
NCSRUITS EQU   NCSUSSRU+2
ISTFDB   EQU   0
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTUECB  EQU   0
UECPLIST EQU   ISTUECB+32
UECACB   EQU   UECPLIST
UECNDID  EQU   UECPLIST+4
UECTPNCD EQU   UECNDID
UECREQTR EQU   UECPLIST+8
UECDLEN  EQU   UECPLIST+12
UECRSNCD EQU   UECDLEN
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTNCB   EQU   0
NCBDAF   EQU   ISTNCB+2
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RH2      EQU   RHFLAGS+1
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
ISTRU    EQU   0
RUDATA   EQU   ISTRU
ISTRUB   EQU   0
NSRUNA5  EQU   0
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00044 EQU   LOKCHNG+2
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSRTDF EQU   ATCCOM+208
ATCVTMID EQU   ATCCOM+240
ATCCIDM  EQU   ATCCOM+266
ATCCDADD EQU   ISTATCVT+276
ATCCDDEL EQU   ISTATCVT+280
ATCCDFND EQU   ISTATCVT+284
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCAP35  EQU   ISTATCVT+448
ATCCDFIN EQU   ISTATCVT+460
ATCCDFDN EQU   ISTATCVT+464
ATCVOCLK EQU   ISTATCVT+468
ATCVLCNT EQU   ISTATCVT+772
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSAF   EQU   ISTFMCB+2
FMCDNCBA EQU   ISTFMCB+16
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMDR  EQU   FMCCMDFL
FMCDEBA  EQU   ISTFMCB+32
FMCCMPS1 EQU   ISTFMCB+36
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCTSLHA EQU   FMCRRESP
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDSSPAB EQU   ACDVTAM+48
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ISTRPRE  EQU   0
RPRCOMID EQU   ISTRPRE+8
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
RCPINTA  EQU   RCPLGNIN+16
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPACDEB EQU   ISTRAP+76
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTMGL   EQU   0
MGLUSSFL EQU   ISTMGL+3
MGLRUPTR EQU   ISTMGL+4
MGLSENSE EQU   MGLRUPTR+2
MGLNS1   EQU   MGLSENSE
MGLNS2   EQU   MGLSENSE+1
MGLMSGAD EQU   ISTMGL+8
MGLVDATA EQU   ISTMGL+12
MGLUSSMG EQU   0
MGLUSSTX EQU   0
MGLRUFLD EQU   0
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
SSCPSAVE EQU   0
SSCPBPTR EQU   SSCPSAVE+4
SSCPFPTR EQU   SSCPSAVE+8
TERMRU   EQU   0
TYPE     EQU   TERMRU+3
TCOND    EQU   TYPE
TLAST    EQU   TYPE
NAMLNGTH EQU   TERMRU+5
APPLNAME EQU   TERMRU+6
SSCPNXAV EQU   0
SRTDELFD EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRAL2PTR EQU   CRABASIC+16
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSTFLDB EQU   ISTCNSTA+19
ISTVYCRR EQU   0
VYCAUDIT EQU   ISTVYCRR+22
VYCNTRD  EQU   VYCAUDIT
NINCF4   EQU   VYCNTRD+4
VYCCRT   EQU   VYCAUDIT+12
CINCF4   EQU   VYCCRT+4
ISTSDCCF EQU   0
ISTAPC37 EQU   0
FMZL0034 EQU   0
FMZL0044 EQU   0
ISTSDCCR EQU   0
FMZL0066 EQU   0
ISTAPC34 EQU   0
ISTSDCCA EQU   0
ISTSDCCD EQU   0
ISTSDCCN EQU   0
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00035 EQU   FSBRQTAG
ISTSENRU EQU   RUDATA
SRUSENSE EQU   ISTSENRU
SRUSENS1 EQU   SRUSENSE
SRUSENS2 EQU   SRUSENSE+2
ISTSRU   EQU   ISTRUB
SRUDATA  EQU   ISTSRU+1
SRUTYPE  EQU   SRUDATA
SRULDID  EQU   SRUDATA+1
SRUSPSN  EQU   SRULDID
ISTNSRU  EQU   ISTRUB
NSRUNETS EQU   ISTNSRU
NSRUDATA EQU   ISTNSRU+3
NSRUHOOK EQU   NSRUDATA
NSSSVRU  EQU   NSRUDATA
NSSSVNOD EQU   NSSSVRU+3
NSSSVT3  EQU   NSSSVNOD
NSSSVT3C EQU   NSSSVT3+2
NSSSVT3G EQU   NSSSVT3+5
NSSSVT4  EQU   NSSSVNOD
NSSSVT5  EQU   NSSSVNOD
NSRUDAT1 EQU   NSRUDATA
NSRUDAT2 EQU   NSRUDAT1+2
ISTTRRU  EQU   NSRUDAT2
ISTCTDRU EQU   NSRUDAT2
ISTINORU EQU   NSRUDAT2
SRUDAT1  EQU   SRUDATA
SRUDAT1L EQU   SRUDAT1+1
SRUDAT2  EQU   SRUDATA
ISTMRU   EQU   ISTRUB
SRUDATA3 EQU   SRUDATA
SRUDATA4 EQU   SRUDATA
NSRUDAT3 EQU   NSRUDAT2
NSRUDAT4 EQU   NSRUDAT2
NSRUDAT5 EQU   NSRUDAT2
NSRUDAT6 EQU   NSRUDAT2
NSRUDAT7 EQU   NSRUDAT2
NSRUDIL  EQU   NSRUDAT2
NSRUDILB EQU   NSRUDIL+1
NSRUNA   EQU   NSRUDAT2
NSRUNA2  EQU   NSRUNA+1
NSRUCLSP EQU   NSRUDAT2
NSRUOH1  EQU   NSRUDAT2
NSRUDAT8 EQU   NSRUDATA
ISTUNBRU EQU   SRUTYPE
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
CMZCIDM  EQU   ATCCIDM
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
UNBTYPE  EQU   ISTUNBRU
NSRUDA8T EQU   NSRUDAT8
NSRUOHID EQU   NSRUOH1
NSRULSV  EQU   NSRUCLSP
NSRUNA4  EQU   NSRUNA+2
NSRUNA3  EQU   NSRUNA2
NSRUNA1  EQU   NSRUNA
NSRUDILF EQU   NSRUDIL+4
NSRUDILE EQU   NSRUDIL+3
NSRUDILD EQU   NSRUDIL+2
NSRUDILC EQU   NSRUDILB
@NM00042 EQU   NSRUDILB
NSRUDILA EQU   NSRUDIL
NSRUDA7T EQU   NSRUDAT7
NSRUDA6L EQU   NSRUDAT6+4
NSRUDA6S EQU   NSRUDAT6
NSRUDA5E EQU   NSRUDAT5
NSRUDA4T EQU   NSRUDAT4
NSRUDA3S EQU   NSRUDAT3
SRUDAT4D EQU   SRUDATA4
SRUDAT3I EQU   SRUDATA3
MRUDATA  EQU   ISTMRU+9
MRURESP  EQU   ISTMRU+7
MRUMODIF EQU   ISTMRU+6
MRUCMND  EQU   ISTMRU+5
MRUDAF   EQU   ISTMRU+3
MRUREQ   EQU   ISTMRU+2
MRUPREF  EQU   ISTMRU
SRUDAT2N EQU   SRUDAT2+1
SRUDAT2T EQU   SRUDAT2
SRUDAT1I EQU   SRUDAT1+2
SRUTSPRO EQU   SRUDAT1L
SRUFMPRO EQU   SRUDAT1L
SRUDAT1T EQU   SRUDAT1
INORUET  EQU   ISTINORU
CTDRUSTA EQU   ISTCTDRU
TRRDATA  EQU   ISTTRRU+4
TRRSTAT  EQU   ISTTRRU+3
TRRPEP   EQU   ISTTRRU+2
TRRTIME  EQU   ISTTRRU+1
TRRTYPE  EQU   ISTTRRU
NSRUDAF  EQU   NSRUDAT1
NSSSVT5A EQU   NSSSVT5
NSSSVT4D EQU   NSSSVT4+3
NSSSVT4C EQU   NSSSVT4+2
NSSSVT4B EQU   NSSSVT4+1
NSSSVT4A EQU   NSSSVT4
NSSSVT3K EQU   NSSSVT3+8
NSSSVT3J EQU   NSSSVT3+7
NSSSVT3I EQU   NSSSVT3+6
@NM00041 EQU   NSSSVT3G
NSSSVT3H EQU   NSSSVT3G
NSSSVT3F EQU   NSSSVT3+4
NSSSVT3E EQU   NSSSVT3+3
@NM00040 EQU   NSSSVT3C
NSSSVT3D EQU   NSSSVT3C
NSSSVT3B EQU   NSSSVT3+1
NSSSVT3A EQU   NSSSVT3
NSSSVT   EQU   NSSSVRU+2
NSSSVDAF EQU   NSSSVRU
NSRUHKTY EQU   NSRUHOOK
NSRURCD  EQU   NSRUNETS+2
NSRUSUB  EQU   NSRUNETS+1
NSRUID   EQU   NSRUNETS
SRURSV01 EQU   SRULDID+4
SRUPSSN  EQU   SRULDID+2
SRUDFCLV EQU   SRUSPSN
@NM00039 EQU   SRUTYPE
SRUPSAC  EQU   SRUTYPE
SRUSPAC  EQU   SRUTYPE
SRUQSREQ EQU   ISTSRU
SENRU    EQU   ISTSENRU+4
SRUSNS4  EQU   SRUSENS2+1
SRUSNS3  EQU   SRUSENS2
SRUSNST  EQU   SRUSENS1+1
SRUSNS1  EQU   SRUSENS1
FSBRT0B  EQU   @NM00035+1
FSBRT0A  EQU   @NM00035+1
FSBRT09  EQU   @NM00035+1
FSBRT08  EQU   @NM00035+1
FSBRT07  EQU   @NM00035
FSBRT06  EQU   @NM00035
FSBRT05  EQU   @NM00035
FSBRT04  EQU   @NM00035
FSBRT03  EQU   @NM00035
FSBRT02  EQU   @NM00035
FSBRT01  EQU   @NM00035
FSBRT00  EQU   @NM00035
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
VYCRSV02 EQU   ISTVYCRR+128
VYCRSV04 EQU   ISTVYCRR+126
VYCRRCW3 EQU   ISTVYCRR+118
VYCRRSAV EQU   ISTVYCRR+46
VYCRSV03 EQU   VYCCRT+11
CINCFE   EQU   VYCCRT+11
CINCE9   EQU   VYCCRT+11
CINCVO   EQU   VYCCRT+11
CINCR5   EQU   VYCCRT+11
CINCR3   EQU   VYCCRT+10
CINCE8   EQU   VYCCRT+10
CINCE7   EQU   VYCCRT+10
CINCE6   EQU   VYCCRT+10
CINCE5   EQU   VYCCRT+10
CINCE1   EQU   VYCCRT+10
CINCUQ   EQU   VYCCRT+10
CINCUB   EQU   VYCCRT+10
CINCUA   EQU   VYCCRT+9
CINCX9   EQU   VYCCRT+9
CINCX8   EQU   VYCCRT+9
CINCX7   EQU   VYCCRT+9
CINCX6   EQU   VYCCRT+9
CINCX3   EQU   VYCCRT+9
CINCX2   EQU   VYCCRT+9
CINCX1   EQU   VYCCRT+9
CINCX0   EQU   VYCCRT+8
CINCW9   EQU   VYCCRT+8
CINCW8   EQU   VYCCRT+8
CINCW7   EQU   VYCCRT+8
CINCW6   EQU   VYCCRT+8
CINCW5   EQU   VYCCRT+8
CINCW4   EQU   VYCCRT+8
CINCW2   EQU   VYCCRT+8
CINCW0   EQU   VYCCRT+7
CINCV9   EQU   VYCCRT+7
CINCV8   EQU   VYCCRT+7
CINCV7   EQU   VYCCRT+7
CINCV6   EQU   VYCCRT+7
CINCV5   EQU   VYCCRT+7
CINCV4   EQU   VYCCRT+7
CINCV3   EQU   VYCCRT+7
CINCV2   EQU   VYCCRT+6
CINCU8   EQU   VYCCRT+6
CINCU7   EQU   VYCCRT+6
CINCU6   EQU   VYCCRT+6
CINCU5   EQU   VYCCRT+6
CINCU4   EQU   VYCCRT+6
CINCU3   EQU   VYCCRT+6
CINCU2   EQU   VYCCRT+6
CINCU1   EQU   VYCCRT+5
CINCU0   EQU   VYCCRT+5
CINCUM   EQU   VYCCRT+5
CINCS1   EQU   VYCCRT+5
CINCL8   EQU   VYCCRT+5
CINCL7   EQU   VYCCRT+5
CINCL6   EQU   VYCCRT+5
CINCL5   EQU   VYCCRT+5
CINCL4   EQU   VYCCRT+4
CINCL3   EQU   VYCCRT+4
CINCL2   EQU   VYCCRT+4
CINCL1   EQU   VYCCRT+4
CINCL0   EQU   VYCCRT+4
CINCF3   EQU   VYCCRT+4
CINCF1   EQU   VYCCRT+4
CINCFM   EQU   VYCCRT+3
CINCE4   EQU   VYCCRT+3
CINCE3   EQU   VYCCRT+3
CINCE2   EQU   VYCCRT+3
CINCE0   EQU   VYCCRT+3
CINCD9   EQU   VYCCRT+3
CINCD8   EQU   VYCCRT+3
CINCD7   EQU   VYCCRT+3
CINCD6   EQU   VYCCRT+2
CINCD5   EQU   VYCCRT+2
CINCD4   EQU   VYCCRT+2
CINCD3   EQU   VYCCRT+2
CINCD2   EQU   VYCCRT+2
CINCD1   EQU   VYCCRT+2
CINCIP   EQU   VYCCRT+2
CINCR2   EQU   VYCCRT+2
CINCMS   EQU   VYCCRT+1
CINCVN   EQU   VYCCRT+1
CINCVS   EQU   VYCCRT+1
CINCVP   EQU   VYCCRT+1
CINCVX   EQU   VYCCRT+1
CINCFS   EQU   VYCCRT+1
CINCSM   EQU   VYCCRT+1
CINCR1   EQU   VYCCRT+1
CINCLF   EQU   VYCCRT
CINCVA   EQU   VYCCRT
CINCVI   EQU   VYCCRT
CINCMD   EQU   VYCCRT
CINCMY   EQU   VYCCRT
CINCDL   EQU   VYCCRT
CINCIO   EQU   VYCCRT
CINCCL   EQU   VYCCRT
VYCRSV01 EQU   VYCNTRD+11
NINCFE   EQU   VYCNTRD+11
NINCE9   EQU   VYCNTRD+11
NINCVO   EQU   VYCNTRD+11
NINCR5   EQU   VYCNTRD+11
NINCR3   EQU   VYCNTRD+10
NINCE8   EQU   VYCNTRD+10
NINCE7   EQU   VYCNTRD+10
NINCE6   EQU   VYCNTRD+10
NINCE5   EQU   VYCNTRD+10
NINCE1   EQU   VYCNTRD+10
NINCUQ   EQU   VYCNTRD+10
NINCUB   EQU   VYCNTRD+10
NINCUA   EQU   VYCNTRD+9
NINCX9   EQU   VYCNTRD+9
NINCX8   EQU   VYCNTRD+9
NINCX7   EQU   VYCNTRD+9
NINCX6   EQU   VYCNTRD+9
NINCX3   EQU   VYCNTRD+9
NINCX2   EQU   VYCNTRD+9
NINCX1   EQU   VYCNTRD+9
NINCX0   EQU   VYCNTRD+8
NINCW9   EQU   VYCNTRD+8
NINCW8   EQU   VYCNTRD+8
NINCW7   EQU   VYCNTRD+8
NINCW6   EQU   VYCNTRD+8
NINCW5   EQU   VYCNTRD+8
NINCW4   EQU   VYCNTRD+8
NINCW2   EQU   VYCNTRD+8
NINCW0   EQU   VYCNTRD+7
NINCV9   EQU   VYCNTRD+7
NINCV8   EQU   VYCNTRD+7
NINCV7   EQU   VYCNTRD+7
NINCV6   EQU   VYCNTRD+7
NINCV5   EQU   VYCNTRD+7
NINCV4   EQU   VYCNTRD+7
NINCV3   EQU   VYCNTRD+7
NINCV2   EQU   VYCNTRD+6
NINCU8   EQU   VYCNTRD+6
NINCU7   EQU   VYCNTRD+6
NINCU6   EQU   VYCNTRD+6
NINCU5   EQU   VYCNTRD+6
NINCU4   EQU   VYCNTRD+6
NINCU3   EQU   VYCNTRD+6
NINCU2   EQU   VYCNTRD+6
NINCU1   EQU   VYCNTRD+5
NINCU0   EQU   VYCNTRD+5
NINCUM   EQU   VYCNTRD+5
NINCS1   EQU   VYCNTRD+5
NINCL8   EQU   VYCNTRD+5
NINCL7   EQU   VYCNTRD+5
NINCL6   EQU   VYCNTRD+5
NINCL5   EQU   VYCNTRD+5
NINCL4   EQU   VYCNTRD+4
NINCL3   EQU   VYCNTRD+4
NINCL2   EQU   VYCNTRD+4
NINCL1   EQU   VYCNTRD+4
NINCL0   EQU   VYCNTRD+4
NINCF3   EQU   VYCNTRD+4
NINCF1   EQU   VYCNTRD+4
NINCFM   EQU   VYCNTRD+3
NINCE4   EQU   VYCNTRD+3
NINCE3   EQU   VYCNTRD+3
NINCE2   EQU   VYCNTRD+3
NINCE0   EQU   VYCNTRD+3
NINCD9   EQU   VYCNTRD+3
NINCD8   EQU   VYCNTRD+3
NINCD7   EQU   VYCNTRD+3
NINCD6   EQU   VYCNTRD+2
NINCD5   EQU   VYCNTRD+2
NINCD4   EQU   VYCNTRD+2
NINCD3   EQU   VYCNTRD+2
NINCD2   EQU   VYCNTRD+2
NINCD1   EQU   VYCNTRD+2
NINCIP   EQU   VYCNTRD+2
NINCR2   EQU   VYCNTRD+2
NINCMS   EQU   VYCNTRD+1
NINCVN   EQU   VYCNTRD+1
NINCVS   EQU   VYCNTRD+1
NINCVP   EQU   VYCNTRD+1
NINCVX   EQU   VYCNTRD+1
NINCFS   EQU   VYCNTRD+1
NINCSM   EQU   VYCNTRD+1
NINCR1   EQU   VYCNTRD+1
NINCLF   EQU   VYCNTRD
NINCVA   EQU   VYCNTRD
NINCVI   EQU   VYCNTRD
NINCMD   EQU   VYCNTRD
NINCMY   EQU   VYCNTRD
NINCDL   EQU   VYCNTRD
NINCIO   EQU   VYCNTRD
NINCCL   EQU   VYCNTRD
VYCCNS   EQU   ISTVYCRR
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSRQRLB EQU   CNSTFLDB+1
CNSTRRLB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSRLINB EQU   CNSTFLDB
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSRQRLA EQU   CNSTFLDA+1
CNSTRRLA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSRLINA EQU   CNSTFLDA
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00095 EQU   ISTAPCRR+137
@NM00094 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00093 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00092 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00091 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00090 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00089 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00088 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00087 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00086 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00085 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00084 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
@NM00073 EQU   TERMRU+4
@NM00072 EQU   TYPE
@NM00071 EQU   TERMRU
@NM00070 EQU   SSCPSAVE+12
@NM00069 EQU   SSCPSAVE
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00068 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
MGLRU    EQU   MGLRUFLD+1
MGLRUL   EQU   MGLRUFLD
MGLVDTXT EQU   MGLUSSTX+1
MGLTXTL  EQU   MGLUSSTX
MGLMSGID EQU   MGLUSSMG+1
MGLMSGL  EQU   MGLUSSMG
MGLORGRU EQU   ISTMGL+16
MGLSEQNO EQU   MGLRUPTR
@NM00067 EQU   MGLUSSFL
MGLCMPAT EQU   MGLUSSFL
MGLREQ   EQU   MGLUSSFL
MGLRH    EQU   ISTMGL
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00066 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00065 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00064 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRSV22 EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPRSV09 EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00063 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00062 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00061 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
@NM00060 EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
RPRNAME  EQU   ISTRPRE
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
ACDRSV09 EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDTSKID EQU   ACDVTPRX+8
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00059 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00058 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00057 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCRSV04 EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00056 EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
@NM00055 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
@NM00054 EQU   ISTFMCB+30
@NM00053 EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PRORSV11 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
ATCAOS   EQU   ISTATCVT+1552
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMBP EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00052 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00051 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ISTATCVT+788
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00050 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00049 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00048 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00047 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00046 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00044
LOKPRY   EQU   @NM00044
@NM00045 EQU   @NM00044
@NM00043 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
NSRUNA6  EQU   NSRUNA5
RUBDATA  EQU   ISTRUB
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHEB     EQU   RH3
RHBB     EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHEXCEPT EQU   RH2
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHCHAIN  EQU   RH1
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
RHQS     EQU   RH1
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00038 EQU   NCBFLAG1
@NM00037 EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
UECRVPT4 EQU   ISTUECB+80
UECRVPT3 EQU   ISTUECB+76
UECLGDTA EQU   ISTUECB+72
UECDVTPT EQU   ISTUECB+68
UECREQNM EQU   ISTUECB+60
UECSYMNM EQU   ISTUECB+52
UECVRPL  EQU   UECPLIST+16
UECRSNBT EQU   UECRSNCD+3
@NM00036 EQU   UECRSNCD
UECUSFLD EQU   UECREQTR
UECDAF   EQU   UECTPNCD+2
UECSAF   EQU   UECTPNCD
UECRPLAD EQU   UECACB
UECPAB   EQU   ISTUECB+16
UECEXLST EQU   ISTUECB+12
UECTSKID EQU   ISTUECB+8
UECFORW  EQU   ISTUECB+4
UECTYPE  EQU   ISTUECB+3
UECRSV01 EQU   ISTUECB+2
UECLEN   EQU   ISTUECB+1
UECID    EQU   ISTUECB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
FSBFDB   EQU   ISTFSB+32
FSBRSV01 EQU   FSBFSB+30
FSBTHCNT EQU   FSBFSB+28
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00034 EQU   FSBSS2
@NM00033 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00032 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBDAF   EQU   FSBCID+2
FSBSAF   EQU   FSBCID
FSBGATE  EQU   FSBFSBA
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
FDBOFSET EQU   ISTFDB+10
FDBDATCT EQU   ISTFDB+8
FDBDATAA EQU   ISTFDB+4
FDBFDBA  EQU   ISTFDB
NCSRULEN EQU   NCSUSSRU
NCSAPPAB EQU   NCSAPP+608
NCSAPDAT EQU   NCSAPBUE+8
NCSAPRU  EQU   NCSAPBUE+3
NCSRSV04 EQU   NCSAPBUE
NCSAPEND EQU   NCSAPP+84
NCSAPTXT EQU   NCSAPP+76
NCSAPECB EQU   NCSAPP+72
NCSAPSA  EQU   NCSAPP
NCSPLPDB EQU   NCSPLSID+5
NCSPLNID EQU   NCSPLPHD
NCSRSVD4 EQU   NCSPLSTA
NCSPLPO  EQU   NCSPLSTA
NCSRSVD2 EQU   NCSCRMOD
NCSPTMOD EQU   NCSCRMOD
NCSAIMOD EQU   NCSCRMOD
NCSRSVD1 EQU   NCSCHKPT+1
NCSPTUSE EQU   NCSCHKPT+1
NCSRNME  EQU   NCSCHKPT+1
NCSCUA   EQU   NCSCHKPT+1
NCSANSMD EQU   NCSCHKPT+1
NCSLGMOD EQU   NCSCHKPT
NCSLGAPL EQU   NCSCHKPT
NCSDTRLM EQU   NCSCHKPT
NCSESLM  EQU   NCSCHKPT
NCSNRPL  EQU   NCSCHKPT
NCSPOLD  EQU   NCSCHKPT
NCSPACTV EQU   NCSCHKPT
NCSACTV  EQU   NCSCHKPT
NCSCRDTE EQU   ISTNCSPL+264
NCSPLRTY EQU   ISTNCSPL+263
NCSPLRH  EQU   ISTNCSPL+260
NCSCPWPT EQU   ISTNCSPL+248
NCSSENS2 EQU   NCSSENSE+2
NCSSNS2  EQU   NCSSENSE+1
NCSSNS1  EQU   NCSSENSE
NCSPLNSN EQU   ISTNCSPL+240
NCSPLMID EQU   ISTNCSPL+232
NCSPLPID EQU   ISTNCSPL+231
NCSPLGID EQU   ISTNCSPL+230
NCSPLSQN EQU   ISTNCSPL+228
NCSRNAME EQU   ISTNCSPL+220
NCSPLRUI EQU   ISTNCSPL+212
NCSPLRUO EQU   ISTNCSPL+208
NCSPLRRP EQU   ISTNCSPL+204
NCSPLWEL EQU   ISTNCSPL+200
NCSPLSPL EQU   ISTNCSPL+196
NCSPLP3  EQU   ISTNCSPL+192
NCSPLP2  EQU   ISTNCSPL+188
NCSPLP1  EQU   ISTNCSPL+184
NCSPLOLN EQU   ISTNCSPL+182
@NM00031 EQU   NCSPLFL5
NCSSDLK  EQU   NCSPLFL5
NCSSCPPS EQU   NCSPLFL5
NCSDLRSN EQU   ISTNCSPL+180
NCSPL2AP EQU   NCSPLFL4
NCSDSPN  EQU   NCSPLFL4
NCSDSPI  EQU   NCSPLFL4
NCSDSPA  EQU   NCSPLFL4
NCSDSPE  EQU   NCSPLFL4
NCSPLVID EQU   NCSPLFL4
NCSPLRSO EQU   NCSPLFL4
NCSDLNID EQU   NCSPLFL4
NCSEND   EQU   NCSPLFL3
NCSFINAL EQU   NCSPLFL3
NCSANS   EQU   NCSPLFL3
NCSPID   EQU   NCSPLFL3
NCSGID   EQU   NCSPLFL3
NCSPLANS EQU   NCSPLFL3
NCSEPP   EQU   NCSPLFL3
NCSPLMOM EQU   NCSPLFL3
NCSPLVIT EQU   NCSPLFL2
NCSPLVIS EQU   NCSPLFL2
NCSREMPO EQU   NCSPLFL2
NCSPLDS  EQU   NCSPLFL2
NCSPLRIO EQU   NCSPLFL2
NCSPLRSF EQU   NCSPLFL2
NCSPLVDP EQU   NCSPLFL2
NCSPLPOS EQU   NCSPLFL1
NCSPL2CN EQU   NCSPLFL1
NCSPLAPU EQU   NCSPLFL1
NCSPLNON EQU   NCSPLFL1
NCSPLREQ EQU   NCSPLFL1
NCSPLEBN EQU   NCSPLFL1
NCSPLSOM EQU   NCSPLFL1
NCSPL2IN EQU   NCSPLFL1
NCSPLRCR EQU   ISTNCSPL+172
NCSPLECB EQU   ISTNCSPL+164
NCSPLRCD EQU   NCSPLRAD+1
NCSLSCMD EQU   NCSPLRAD
NCSPLWRF EQU   ISTNCSPL+72
NCSPLWRE EQU   ISTNCSPL+68
NCSSTCMD EQU   NCSCRFLG
NCSUSRNF EQU   NCSCRFLG
NCSOPRQU EQU   NCSCRFLG
NCSCRDSE EQU   NCSCRFLG
NCSFMERP EQU   NCSCRFLG
NCSFMCLD EQU   NCSCRFLG
NCSPLCLD EQU   NCSCRFLG
NCSPLWRM EQU   NCSCRFLG
NCSPLUAD EQU   ISTNCSPL+64
NCSMSGSP EQU   ISTNCSPL+63
NCSNCPEP EQU   ISTNCSPL+62
NCSCMDB  EQU   NCSPLCMD+1
@NM00030 EQU   NCSCMDA
NCSPLUFM EQU   NCSCMDA
NCSPLFLO EQU   NCSCMDA
NCSPLSYN EQU   NCSCMDA
NCSPLCTL EQU   NCSCMDA
NCSPLSYS EQU   NCSCMDA
NCSPLLPT EQU   ISTNCSPL+56
NCSCRPID EQU   ISTNCSPL+51
NCSCRCMD EQU   ISTNCSPL+50
NCSDLID  EQU   ISTNCSPL+44
NCSPLLID EQU   ISTNCSPL+36
NCSPLRID EQU   ISTNCSPL+28
NCSRRNPT EQU   ISTNCSPL+24
NCSIORC  EQU   ISTNCSPL+23
NCSOVFMC EQU   NCSPLVF1
NCSRSV02 EQU   NCSPLVFL
NCSDACLK EQU   NCSPLVFL
NCSABCON EQU   NCSPLVFL
NCSDCONT EQU   NCSPLVFL
NCSVSTAT EQU   NCSPLVFL
NCSVDEL  EQU   NCSPLVFL
NCSVNCSA EQU   NCSPLVFL
NCSVBF16 EQU   NCSPLVBF+1
NCSVBF15 EQU   NCSPLVBF+1
NCSVBF14 EQU   NCSPLVBF+1
NCSVBF13 EQU   NCSPLVBF+1
NCSVBF12 EQU   NCSPLVBF+1
NCSVBF11 EQU   NCSPLVBF+1
NCSVBF10 EQU   NCSPLVBF+1
NCSVBF09 EQU   NCSPLVBF+1
NCSVBF08 EQU   NCSPLVBF
NCSVBF07 EQU   NCSPLVBF
NCSVBF06 EQU   NCSPLVBF
NCSVBF05 EQU   NCSPLVBF
NCSVBF04 EQU   NCSPLVBF
NCSVBF03 EQU   NCSPLVBF
NCSVBF02 EQU   NCSPLVBF
NCSVBF01 EQU   NCSPLVBF
NCSPLVCD EQU   ISTNCSPL+17
@NM00029 EQU   ISTNCSPL+16
NCSCRWKA EQU   NCSPFX+12
@NM00028 EQU   NCSPFX
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
POHID    EQU   ISTPOHD+2
POHGEN   EQU   POHSTAT
POHRREQ  EQU   POHSTAT
POHRSVD2 EQU   POHSTAT
POHCNTRL EQU   POHSTAT
POHLBL   EQU   POHSTAT
POHDATA  EQU   POHSTAT
POHEND   EQU   POHSTAT
POHRSVD1 EQU   ISTPOHD
RPLSEQNO EQU   RPLOF60+6
@NM00026 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00025 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00024 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00023 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00022 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00021 EQU   RPLRESP
@NM00020 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00019 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00018 EQU   RPLVTFL1
@NM00017 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00016 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00015 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00014 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00013 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00012 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
@NM00009 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00008 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00007 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
@NM00006 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00005 EQU   RPLRBAR+3
@NM00004 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00003 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00002 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLSTYP  EQU   RPLIDWD+1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00660 EQU   @RC00645
@RC00727 EQU   @RC00668
@RC00788 EQU   @RC00774
@PB00005 EQU   @PB00006
@RC00789 EQU   @RC00788
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   ISTINCF4,(C'PLS0050',0603,75129)
